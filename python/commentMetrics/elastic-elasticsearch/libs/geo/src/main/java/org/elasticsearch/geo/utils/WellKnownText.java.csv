# id;timestamp;commentText;codeText;commentWords;codeWords
WellKnownText -> private static String nextWord(StreamTokenizer stream) throws ParseException, IOException;1547567566;next word in the stream;private static String nextWord(StreamTokenizer stream) throws ParseException, IOException {_        switch (stream.nextToken()) {_            case StreamTokenizer.TT_WORD:_                final String word = stream.sval__                return word.equalsIgnoreCase(EMPTY) ? EMPTY : word__            case '(':_                return LPAREN__            case ')':_                return RPAREN__            case ',':_                return COMMA__        }_        throw new ParseException("expected word but found: " + tokenString(stream), stream.lineno())__    };next,word,in,the,stream;private,static,string,next,word,stream,tokenizer,stream,throws,parse,exception,ioexception,switch,stream,next,token,case,stream,tokenizer,final,string,word,stream,sval,return,word,equals,ignore,case,empty,empty,word,case,return,lparen,case,return,rparen,case,return,comma,throw,new,parse,exception,expected,word,but,found,token,string,stream,stream,lineno
WellKnownText -> private static String nextWord(StreamTokenizer stream) throws ParseException, IOException;1548434247;next word in the stream;private static String nextWord(StreamTokenizer stream) throws ParseException, IOException {_        switch (stream.nextToken()) {_            case StreamTokenizer.TT_WORD:_                final String word = stream.sval__                return word.equalsIgnoreCase(EMPTY) ? EMPTY : word__            case '(':_                return LPAREN__            case ')':_                return RPAREN__            case ',':_                return COMMA__        }_        throw new ParseException("expected word but found: " + tokenString(stream), stream.lineno())__    };next,word,in,the,stream;private,static,string,next,word,stream,tokenizer,stream,throws,parse,exception,ioexception,switch,stream,next,token,case,stream,tokenizer,final,string,word,stream,sval,return,word,equals,ignore,case,empty,empty,word,case,return,lparen,case,return,rparen,case,return,comma,throw,new,parse,exception,expected,word,but,found,token,string,stream,stream,lineno
WellKnownText -> private static String nextWord(StreamTokenizer stream) throws ParseException, IOException;1548858030;next word in the stream;private static String nextWord(StreamTokenizer stream) throws ParseException, IOException {_        switch (stream.nextToken()) {_            case StreamTokenizer.TT_WORD:_                final String word = stream.sval__                return word.equalsIgnoreCase(EMPTY) ? EMPTY : word__            case '(':_                return LPAREN__            case ')':_                return RPAREN__            case ',':_                return COMMA__        }_        throw new ParseException("expected word but found: " + tokenString(stream), stream.lineno())__    };next,word,in,the,stream;private,static,string,next,word,stream,tokenizer,stream,throws,parse,exception,ioexception,switch,stream,next,token,case,stream,tokenizer,final,string,word,stream,sval,return,word,equals,ignore,case,empty,empty,word,case,return,lparen,case,return,rparen,case,return,comma,throw,new,parse,exception,expected,word,but,found,token,string,stream,stream,lineno
WellKnownText -> private static Geometry parseGeometry(StreamTokenizer stream) throws IOException, ParseException;1547567566;parse geometry from the stream tokenizer;private static Geometry parseGeometry(StreamTokenizer stream) throws IOException, ParseException {_        final String type = nextWord(stream).toLowerCase(Locale.ROOT)__        switch (type) {_            case "point":_                return parsePoint(stream)__            case "multipoint":_                return parseMultiPoint(stream)__            case "linestring":_                return parseLine(stream)__            case "multilinestring":_                return parseMultiLine(stream)__            case "polygon":_                return parsePolygon(stream)__            case "multipolygon":_                return parseMultiPolygon(stream)__            case "bbox":_                return parseBBox(stream)__            case "geometrycollection":_                return parseGeometryCollection(stream)__            case "circle": _                return parseCircle(stream)__        }_        throw new IllegalArgumentException("Unknown geometry type: " + type)__    };parse,geometry,from,the,stream,tokenizer;private,static,geometry,parse,geometry,stream,tokenizer,stream,throws,ioexception,parse,exception,final,string,type,next,word,stream,to,lower,case,locale,root,switch,type,case,point,return,parse,point,stream,case,multipoint,return,parse,multi,point,stream,case,linestring,return,parse,line,stream,case,multilinestring,return,parse,multi,line,stream,case,polygon,return,parse,polygon,stream,case,multipolygon,return,parse,multi,polygon,stream,case,bbox,return,parse,bbox,stream,case,geometrycollection,return,parse,geometry,collection,stream,case,circle,return,parse,circle,stream,throw,new,illegal,argument,exception,unknown,geometry,type,type
WellKnownText -> private static Geometry parseGeometry(StreamTokenizer stream) throws IOException, ParseException;1548434247;parse geometry from the stream tokenizer;private static Geometry parseGeometry(StreamTokenizer stream) throws IOException, ParseException {_        final String type = nextWord(stream).toLowerCase(Locale.ROOT)__        switch (type) {_            case "point":_                return parsePoint(stream)__            case "multipoint":_                return parseMultiPoint(stream)__            case "linestring":_                return parseLine(stream)__            case "multilinestring":_                return parseMultiLine(stream)__            case "polygon":_                return parsePolygon(stream)__            case "multipolygon":_                return parseMultiPolygon(stream)__            case "bbox":_                return parseBBox(stream)__            case "geometrycollection":_                return parseGeometryCollection(stream)__            case "circle": _                return parseCircle(stream)__        }_        throw new IllegalArgumentException("Unknown geometry type: " + type)__    };parse,geometry,from,the,stream,tokenizer;private,static,geometry,parse,geometry,stream,tokenizer,stream,throws,ioexception,parse,exception,final,string,type,next,word,stream,to,lower,case,locale,root,switch,type,case,point,return,parse,point,stream,case,multipoint,return,parse,multi,point,stream,case,linestring,return,parse,line,stream,case,multilinestring,return,parse,multi,line,stream,case,polygon,return,parse,polygon,stream,case,multipolygon,return,parse,multi,polygon,stream,case,bbox,return,parse,bbox,stream,case,geometrycollection,return,parse,geometry,collection,stream,case,circle,return,parse,circle,stream,throw,new,illegal,argument,exception,unknown,geometry,type,type
WellKnownText -> private static Geometry parseGeometry(StreamTokenizer stream) throws IOException, ParseException;1548858030;parse geometry from the stream tokenizer;private static Geometry parseGeometry(StreamTokenizer stream) throws IOException, ParseException {_        final String type = nextWord(stream).toLowerCase(Locale.ROOT)__        switch (type) {_            case "point":_                return parsePoint(stream)__            case "multipoint":_                return parseMultiPoint(stream)__            case "linestring":_                return parseLine(stream)__            case "multilinestring":_                return parseMultiLine(stream)__            case "polygon":_                return parsePolygon(stream)__            case "multipolygon":_                return parseMultiPolygon(stream)__            case "bbox":_                return parseBBox(stream)__            case "geometrycollection":_                return parseGeometryCollection(stream)__            case "circle": _                return parseCircle(stream)__        }_        throw new IllegalArgumentException("Unknown geometry type: " + type)__    };parse,geometry,from,the,stream,tokenizer;private,static,geometry,parse,geometry,stream,tokenizer,stream,throws,ioexception,parse,exception,final,string,type,next,word,stream,to,lower,case,locale,root,switch,type,case,point,return,parse,point,stream,case,multipoint,return,parse,multi,point,stream,case,linestring,return,parse,line,stream,case,multilinestring,return,parse,multi,line,stream,case,polygon,return,parse,polygon,stream,case,multipolygon,return,parse,multi,polygon,stream,case,bbox,return,parse,bbox,stream,case,geometrycollection,return,parse,geometry,collection,stream,case,circle,return,parse,circle,stream,throw,new,illegal,argument,exception,unknown,geometry,type,type
