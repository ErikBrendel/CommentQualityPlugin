commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public int length() {     return lats.length. }
false;public;1;3;;public double getLat(int i) {     return lats[i]. }
false;public;1;3;;public double getLon(int i) {     return lons[i]. }
false;public;0;3;;public double[] getLats() {     return lats.clone(). }
false;public;0;3;;public double[] getLons() {     return lons.clone(). }
false;public;0;4;;@Override public ShapeType type() {     return ShapeType.LINESTRING. }
false;public;1;4;;@Override public <T> T visit(GeometryVisitor<T> visitor) {     return visitor.visit(this). }
false;public;0;4;;@Override public boolean isEmpty() {     return lats.length == 0. }
false;public;1;8;;@Override public boolean equals(Object o) {     if (this == o)         return true.     if (o == null || getClass() != o.getClass())         return false.     Line line = (Line) o.     return Arrays.equals(lats, line.lats) && Arrays.equals(lons, line.lons). }
false;public;0;6;;@Override public int hashCode() {     int result = Arrays.hashCode(lats).     result = 31 * result + Arrays.hashCode(lons).     return result. }
false;public;0;5;;@Override public String toString() {     return "lats=" + Arrays.toString(lats) + ", lons=" + Arrays.toString(lons). }
