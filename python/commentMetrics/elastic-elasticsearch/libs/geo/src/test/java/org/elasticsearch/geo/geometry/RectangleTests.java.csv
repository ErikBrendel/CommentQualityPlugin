commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected Rectangle createTestInstance() {     return randomRectangle(). }
false;public;0;7;;public void testBasicSerialization() throws IOException, ParseException {     assertEquals("bbox (10.0, 20.0, 40.0, 30.0)", WellKnownText.toWKT(new Rectangle(30, 40, 10, 20))).     assertEquals(new Rectangle(30, 40, 10, 20), WellKnownText.fromWKT("bbox (10.0, 20.0, 40.0, 30.0)")).     assertEquals("bbox EMPTY", WellKnownText.toWKT(Rectangle.EMPTY)).     assertEquals(Rectangle.EMPTY, WellKnownText.fromWKT("bbox EMPTY)")). }
false;public;0;10;;public void testInitValidation() {     IllegalArgumentException ex = expectThrows(IllegalArgumentException.class, () -> new Rectangle(100, 1, 2, 3)).     assertEquals("invalid latitude 100.0. must be between -90.0 and 90.0", ex.getMessage()).     ex = expectThrows(IllegalArgumentException.class, () -> new Rectangle(1, 2, 200, 3)).     assertEquals("invalid longitude 200.0. must be between -180.0 and 180.0", ex.getMessage()).     ex = expectThrows(IllegalArgumentException.class, () -> new Rectangle(2, 1, 2, 3)).     assertEquals("max lat cannot be less than min lat", ex.getMessage()). }
