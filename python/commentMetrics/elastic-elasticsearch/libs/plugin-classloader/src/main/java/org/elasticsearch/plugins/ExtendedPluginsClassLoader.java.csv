commented;modifiers;parameterAmount;loc;comment;code
false;protected;1;11;;@Override protected Class<?> findClass(String name) throws ClassNotFoundException {     for (ClassLoader loader : extendedLoaders) {         try {             return loader.loadClass(name).         } catch (ClassNotFoundException e) {         // continue         }     }     throw new ClassNotFoundException(name). }
true;public,static;2;4;/**  * Return a new classloader across the parent and extended loaders.  */ ;/**  * Return a new classloader across the parent and extended loaders.  */ public static ExtendedPluginsClassLoader create(ClassLoader parent, List<ClassLoader> extendedLoaders) {     return AccessController.doPrivileged((PrivilegedAction<ExtendedPluginsClassLoader>) () -> new ExtendedPluginsClassLoader(parent, extendedLoaders)). }
