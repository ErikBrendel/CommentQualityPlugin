commented;modifiers;parameterAmount;loc;comment;code
true;;0;1;/**  * Used for plugging in a generic writer for a class, for example, an example implementation:  *  * <pre>  * {@code  *     Map<Class<?>, XContentBuilder.Writer> addlWriters = new HashMap<>().  *     addlWriters.put(BytesRef.class, (builder, value) -> b.value(((BytesRef) value).utf8String())).  *     return addlWriters.  * }  * </pre>  *  * @return a map of class name to writer  */ ;/**  * Used for plugging in a generic writer for a class, for example, an example implementation:  *  * <pre>  * {@code  *     Map<Class<?>, XContentBuilder.Writer> addlWriters = new HashMap<>().  *     addlWriters.put(BytesRef.class, (builder, value) -> b.value(((BytesRef) value).utf8String())).  *     return addlWriters.  * }  * </pre>  *  * @return a map of class name to writer  */ Map<Class<?>, XContentBuilder.Writer> getXContentWriters().
true;;0;1;/**  * Used for plugging in a human readable version of a class's encoding. It is assumed that  * the human readable equivalent is <b>always</b> behind the {@code toString()} method, so  * this transformer returns the raw value to be used.  *  * An example implementation:  *  * <pre>  * {@code  *     Map<Class<?>, XContentBuilder.HumanReadableTransformer> transformers = new HashMap<>().  *     transformers.put(ByteSizeValue.class, (value) -> ((ByteSizeValue) value).bytes()).  * }  * </pre>  * @return a map of class name to transformer used to retrieve raw value  */ ;/**  * Used for plugging in a human readable version of a class's encoding. It is assumed that  * the human readable equivalent is <b>always</b> behind the {@code toString()} method, so  * this transformer returns the raw value to be used.  *  * An example implementation:  *  * <pre>  * {@code  *     Map<Class<?>, XContentBuilder.HumanReadableTransformer> transformers = new HashMap<>().  *     transformers.put(ByteSizeValue.class, (value) -> ((ByteSizeValue) value).bytes()).  * }  * </pre>  * @return a map of class name to transformer used to retrieve raw value  */ Map<Class<?>, XContentBuilder.HumanReadableTransformer> getXContentHumanReadableTransformers().
true;;0;1;/**  * Used for plugging a transformer for a date or time type object into a String (or other  * encodable object).  *  * For example:  *  * <pre>  * {@code  *     final DateTimeFormatter datePrinter = ISODateTimeFormat.dateTime().withZone(DateTimeZone.UTC).  *     Map<Class<?>, Function<Object, Object>> transformers = new HashMap<>().  *     transformers.put(Date.class, d -> datePrinter.print(((Date) d).getTime())).  * }  * </pre>  */ ;/**  * Used for plugging a transformer for a date or time type object into a String (or other  * encodable object).  *  * For example:  *  * <pre>  * {@code  *     final DateTimeFormatter datePrinter = ISODateTimeFormat.dateTime().withZone(DateTimeZone.UTC).  *     Map<Class<?>, Function<Object, Object>> transformers = new HashMap<>().  *     transformers.put(Date.class, d -> datePrinter.print(((Date) d).getTime())).  * }  * </pre>  */ Map<Class<?>, Function<Object, Object>> getDateTransformers().
