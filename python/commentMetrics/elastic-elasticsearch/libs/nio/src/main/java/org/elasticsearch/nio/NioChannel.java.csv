# id;timestamp;commentText;codeText;commentWords;codeWords
NioChannel -> public void close();1528706846;Schedules channel for close. This process is asynchronous.;public void close() {_        getContext().closeChannel()__    };schedules,channel,for,close,this,process,is,asynchronous;public,void,close,get,context,close,channel
NioChannel -> public void close();1528762805;Schedules channel for close. This process is asynchronous.;public void close() {_        getContext().closeChannel()__    };schedules,channel,for,close,this,process,is,asynchronous;public,void,close,get,context,close,channel
NioChannel -> public void close();1529600205;Schedules channel for close. This process is asynchronous.;public void close() {_        getContext().closeChannel()__    };schedules,channel,for,close,this,process,is,asynchronous;public,void,close,get,context,close,channel
NioChannel -> public void addCloseListener(BiConsumer<Void, Exception> listener);1528706846;Adds a close listener to the channel. Multiple close listeners can be added. There is no guarantee_about the order in which close listeners will be executed. If the channel is already closed, the_listener is executed immediately.__@param listener to be called at close;public void addCloseListener(BiConsumer<Void, Exception> listener) {_        getContext().addCloseListener(listener)__    };adds,a,close,listener,to,the,channel,multiple,close,listeners,can,be,added,there,is,no,guarantee,about,the,order,in,which,close,listeners,will,be,executed,if,the,channel,is,already,closed,the,listener,is,executed,immediately,param,listener,to,be,called,at,close;public,void,add,close,listener,bi,consumer,void,exception,listener,get,context,add,close,listener,listener
NioChannel -> public void addCloseListener(BiConsumer<Void, Exception> listener);1528762805;Adds a close listener to the channel. Multiple close listeners can be added. There is no guarantee_about the order in which close listeners will be executed. If the channel is already closed, the_listener is executed immediately.__@param listener to be called at close;public void addCloseListener(BiConsumer<Void, Exception> listener) {_        getContext().addCloseListener(listener)__    };adds,a,close,listener,to,the,channel,multiple,close,listeners,can,be,added,there,is,no,guarantee,about,the,order,in,which,close,listeners,will,be,executed,if,the,channel,is,already,closed,the,listener,is,executed,immediately,param,listener,to,be,called,at,close;public,void,add,close,listener,bi,consumer,void,exception,listener,get,context,add,close,listener,listener
NioChannel -> public void addCloseListener(BiConsumer<Void, Exception> listener);1529600205;Adds a close listener to the channel. Multiple close listeners can be added. There is no guarantee_about the order in which close listeners will be executed. If the channel is already closed, the_listener is executed immediately.__@param listener to be called at close;public void addCloseListener(BiConsumer<Void, Exception> listener) {_        getContext().addCloseListener(listener)__    };adds,a,close,listener,to,the,channel,multiple,close,listeners,can,be,added,there,is,no,guarantee,about,the,order,in,which,close,listeners,will,be,executed,if,the,channel,is,already,closed,the,listener,is,executed,immediately,param,listener,to,be,called,at,close;public,void,add,close,listener,bi,consumer,void,exception,listener,get,context,add,close,listener,listener
