commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public Collection<Path> getDependentFiles() {     return Collections.singleton(path). }
false;public;0;11;;@Override public X509ExtendedTrustManager createTrustManager() {     try {         final KeyStore store = KeyStoreUtil.readKeyStore(path, type, password).         checkTrustStore(store).         return KeyStoreUtil.createTrustManager(store, algorithm).     } catch (GeneralSecurityException e) {         throw new SslConfigException("cannot create trust manager for path=[" + (path == null ? null : path.toAbsolutePath()) + "] type=[" + type + "] password=[" + (password.length == 0 ? "<empty>" : "<non-empty>") + "]", e).     } }
true;private;1;16;/**  * Verifies that the keystore contains at least 1 trusted certificate entry.  */ ;/**  * Verifies that the keystore contains at least 1 trusted certificate entry.  */ private void checkTrustStore(KeyStore store) throws GeneralSecurityException {     Enumeration<String> aliases = store.aliases().     while (aliases.hasMoreElements()) {         String alias = aliases.nextElement().         if (store.isCertificateEntry(alias)) {             return.         }     }     final String message.     if (path != null) {         message = "the truststore [" + path + "] does not contain any trusted certificate entries".     } else {         message = "the configured PKCS#11 token does not contain any trusted certificate entries".     }     throw new SslConfigException(message). }
