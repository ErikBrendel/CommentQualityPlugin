commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;public void testGetSystemTrustStoreWithNoSystemProperties() throws Exception {     final DefaultJdkTrustConfig trustConfig = new DefaultJdkTrustConfig((key, defaultValue) -> defaultValue).     assertThat(trustConfig.getDependentFiles(), emptyIterable()).     final X509ExtendedTrustManager trustManager = trustConfig.createTrustManager().     assertStandardIssuers(trustManager). }
false;public;0;6;;public void testGetNonPKCS11TrustStoreWithPasswordSet() throws Exception {     final DefaultJdkTrustConfig trustConfig = new DefaultJdkTrustConfig(EMPTY_SYSTEM_PROPERTIES, "fakepassword".toCharArray()).     assertThat(trustConfig.getDependentFiles(), emptyIterable()).     final X509ExtendedTrustManager trustManager = trustConfig.createTrustManager().     assertStandardIssuers(trustManager). }
false;private;1;10;;private void assertStandardIssuers(X509ExtendedTrustManager trustManager) {     assertThat(trustManager.getAcceptedIssuers(), not(emptyArray())).     // This is a sample of the CAs that we expect on every JRE.     // We can safely change this list if the JRE's issuer list changes, but we want to assert something useful.     assertHasTrustedIssuer(trustManager, "VeriSign").     assertHasTrustedIssuer(trustManager, "GeoTrust").     assertHasTrustedIssuer(trustManager, "DigiCert").     assertHasTrustedIssuer(trustManager, "thawte").     assertHasTrustedIssuer(trustManager, "COMODO"). }
false;private;2;13;;private void assertHasTrustedIssuer(X509ExtendedTrustManager trustManager, String name) {     final String lowerName = name.toLowerCase(Locale.ROOT).     final Optional<X509Certificate> ca = Stream.of(trustManager.getAcceptedIssuers()).filter(cert -> cert.getSubjectDN().getName().toLowerCase(Locale.ROOT).contains(lowerName)).findAny().     if (ca.isPresent() == false) {         logger.info("Failed to find issuer [{}] in trust manager, but did find ...", lowerName).         for (X509Certificate cert : trustManager.getAcceptedIssuers()) {             logger.info(" - {}", cert.getSubjectDN().getName().replaceFirst("^\\w+=([^,]+),.*", "$1")).         }         Assert.fail("Cannot find trusted issuer with name [" + name + "].").     } }
