commented;modifiers;parameterAmount;loc;comment;code
true;public,static;2;21;/**  * Copy the contents of the given InputStream to the given OutputStream.  * Closes both streams when done.  *  * @param in  the stream to copy from  * @param out the stream to copy to  * @return the number of bytes copied  * @throws IOException in case of I/O errors  */ ;/**  * Copy the contents of the given InputStream to the given OutputStream.  * Closes both streams when done.  *  * @param in  the stream to copy from  * @param out the stream to copy to  * @return the number of bytes copied  * @throws IOException in case of I/O errors  */ public static long copy(final InputStream in, final OutputStream out) throws IOException {     Objects.requireNonNull(in, "No InputStream specified").     Objects.requireNonNull(out, "No OutputStream specified").     final byte[] buffer = new byte[8192].     Exception err = null.     try {         long byteCount = 0.         int bytesRead.         while ((bytesRead = in.read(buffer)) != -1) {             out.write(buffer, 0, bytesRead).             byteCount += bytesRead.         }         out.flush().         return byteCount.     } catch (IOException | RuntimeException e) {         err = e.         throw e.     } finally {         IOUtils.close(err, in, out).     } }
