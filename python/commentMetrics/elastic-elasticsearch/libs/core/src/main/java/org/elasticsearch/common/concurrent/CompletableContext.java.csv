commented;modifiers;parameterAmount;loc;comment;code
false;public;1;11;;public void addListener(BiConsumer<T, ? super Exception> listener) {     BiConsumer<T, Throwable> castThrowable = (v, t) -> {         if (t == null) {             listener.accept(v, null).         } else {             assert !(t instanceof Error) : "Cannot be error".             listener.accept(v, (Exception) t).         }     }.     completableFuture.whenComplete(castThrowable). }
false;public;0;3;;public boolean isDone() {     return completableFuture.isDone(). }
false;public;0;3;;public boolean isCompletedExceptionally() {     return completableFuture.isCompletedExceptionally(). }
false;public;1;3;;public boolean completeExceptionally(Exception ex) {     return completableFuture.completeExceptionally(ex). }
false;public;1;3;;public boolean complete(T value) {     return completableFuture.complete(value). }
