commented;modifiers;parameterAmount;loc;comment;code
false;public;1;20;;@GET @Path("/{id}") @Produces(MediaType.APPLICATION_JSON) public Response getEmployeeById(@PathParam("id") final Long id) {     Objects.requireNonNull(id).     final GetResponse response = client.prepareGet("megacorp", "employee", Long.toString(id)).get().     if (response.isExists()) {         final Map<String, Object> source = response.getSource().         final Employee employee = new Employee().         employee.setFirstName((String) source.get("first_name")).         employee.setLastName((String) source.get("last_name")).         employee.setAge((Integer) source.get("age")).         employee.setAbout((String) source.get("about")).         @SuppressWarnings("unchecked")         final List<String> interests = (List<String>) source.get("interests").         employee.setInterests(interests).         return Response.ok(employee).build().     } else {         return Response.status(Response.Status.NOT_FOUND).build().     } }
false;public;2;32;;@PUT @Path("/{id}") @Produces(MediaType.APPLICATION_JSON) public Response putEmployeeById(@PathParam("id") final Long id, final Employee employee) throws URISyntaxException, IOException {     Objects.requireNonNull(id).     Objects.requireNonNull(employee).     try (XContentBuilder builder = jsonBuilder()) {         builder.startObject().         {             builder.field("first_name", employee.getFirstName()).             builder.field("last_name", employee.getLastName()).             builder.field("age", employee.getAge()).             builder.field("about", employee.getAbout()).             if (employee.getInterests() != null) {                 builder.startArray("interests").                 {                     for (final String interest : employee.getInterests()) {                         builder.value(interest).                     }                 }                 builder.endArray().             }         }         builder.endObject().         final IndexResponse response = client.prepareIndex("megacorp", "employee", Long.toString(id)).setSource(builder).get().         if (response.status().getStatus() == 201) {             return Response.created(new URI("/employees/" + id)).build().         } else {             return Response.ok().build().         }     } }
