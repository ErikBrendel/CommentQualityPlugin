commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;@Override @Before public void setUp() throws Exception {     super.setUp(). }
false;public;0;6;;@Override @After public void tearDown() throws Exception {     setEsEnforceBootstrapChecks(esEnforceBootstrapChecks).     super.tearDown(). }
false;public;0;15;;public void testEnforceBootstrapChecks() throws NodeValidationException {     setEsEnforceBootstrapChecks("true").     final List<BootstrapCheck> checks = Collections.singletonList(context -> BootstrapCheck.BootstrapCheckResult.failure("error")).     final Logger logger = mock(Logger.class).     final NodeValidationException e = expectThrows(NodeValidationException.class, () -> BootstrapChecks.check(emptyContext, false, checks, logger)).     final Matcher<String> allOf = allOf(containsString("bootstrap checks failed"), containsString("error")).     assertThat(e, hasToString(allOf)).     verify(logger).info("explicitly enforcing bootstrap checks").     verifyNoMoreInteractions(logger). }
false;public;0;7;;public void testNonEnforcedBootstrapChecks() throws NodeValidationException {     setEsEnforceBootstrapChecks(null).     final Logger logger = mock(Logger.class).     // nothing should happen     BootstrapChecks.check(emptyContext, false, emptyList(), logger).     verifyNoMoreInteractions(logger). }
false;public;0;11;;public void testInvalidValue() {     final String value = randomAlphaOfLength(8).     setEsEnforceBootstrapChecks(value).     final boolean enforceLimits = randomBoolean().     final IllegalArgumentException e = expectThrows(IllegalArgumentException.class, () -> BootstrapChecks.check(emptyContext, enforceLimits, emptyList())).     final Matcher<String> matcher = containsString("[es.enforce.bootstrap.checks] must be [true] but was [" + value + "]").     assertThat(e, hasToString(matcher)). }
false;public;1;8;;@SuppressForbidden(reason = "set or clear system property es.enforce.bootstrap.checks") public void setEsEnforceBootstrapChecks(final String value) {     if (value == null) {         System.clearProperty(ES_ENFORCE_BOOTSTRAP_CHECKS).     } else {         System.setProperty(ES_ENFORCE_BOOTSTRAP_CHECKS, value).     } }
