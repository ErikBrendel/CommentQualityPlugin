commented;modifiers;parameterAmount;loc;comment;code
false;public;0;28;;public void testOsPrettyName() throws IOException {     final OsInfo osInfo = OsProbe.getInstance().osInfo(randomLongBetween(1, 100), randomIntBetween(1, 8)).     if (Constants.LINUX) {         final List<String> lines.         if (Files.exists(PathUtils.get("/etc/os-release"))) {             lines = Files.readAllLines(PathUtils.get("/etc/os-release")).         } else if (Files.exists(PathUtils.get("/usr/lib/os-release"))) {             lines = Files.readAllLines(PathUtils.get("/usr/lib/os-release")).         } else {             lines = Collections.singletonList("PRETTY_NAME=\"" + Files.readAllLines(PathUtils.get("/etc/system-release")).get(0) + "\"").         }         for (final String line : lines) {             if (line != null && line.startsWith("PRETTY_NAME=")) {                 final Matcher matcher = Pattern.compile("PRETTY_NAME=(\"?|'?)?([^\"']+)\\1").matcher(line.trim()).                 final boolean matches = matcher.matches().                 assert matches : line.                 assert matcher.groupCount() == 2 : line.                 final String prettyName = matcher.group(2).                 assertThat(osInfo.getPrettyName(), equalTo(prettyName)).                 return.             }         }         assertThat(osInfo.getPrettyName(), equalTo("Linux")).     } else {         assertThat(osInfo.getPrettyName(), equalTo(Constants.OS_NAME)).     } }
