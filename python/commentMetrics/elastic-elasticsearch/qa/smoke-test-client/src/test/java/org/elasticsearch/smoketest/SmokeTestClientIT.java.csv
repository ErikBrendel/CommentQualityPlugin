commented;modifiers;parameterAmount;loc;comment;code
true;public;0;14;/**  * Check that we are connected to a cluster named "elasticsearch".  */ ;/**  * Check that we are connected to a cluster named "elasticsearch".  */ public void testSimpleClient() {     final Client client = getClient().     // START SNIPPET: java-doc-admin-cluster-health     final ClusterHealthResponse health = client.admin().cluster().prepareHealth().setWaitForYellowStatus().get().     final String clusterName = health.getClusterName().     final int numberOfNodes = health.getNumberOfNodes().     // END SNIPPET: java-doc-admin-cluster-health     assertThat("cluster [" + clusterName + "] should have at least 1 node", numberOfNodes, greaterThan(0)). }
true;public;0;19;/**  * Create an index and index some docs  */ ;/**  * Create an index and index some docs  */ public void testPutDocument() {     final Client client = getClient().     // START SNIPPET: java-doc-index-doc-simple     // Index, Type, Id     client.prepareIndex(index, "doc", "1").setSource("foo", // Simple document: { "foo" : "bar" }     "bar").get().     // END SNIPPET: java-doc-index-doc-simple     // START SNIPPET: java-doc-admin-indices-refresh     // Prepare a refresh action on a given index, execute and wait for the result     client.admin().indices().prepareRefresh(index).get().     // END SNIPPET: java-doc-admin-indices-refresh     // START SNIPPET: java-doc-search-simple     final SearchResponse searchResponse = client.prepareSearch(index).get().     assertThat(searchResponse.getHits().getTotalHits().value, is(1L)). // END SNIPPET: java-doc-search-simple }
