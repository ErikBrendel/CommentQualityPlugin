commented;modifiers;parameterAmount;loc;comment;code
false;public,static;0;43;;public static void cleanEverything() {     final Shell sh = new Shell().     // kill elasticsearch processes     Platforms.onLinux(() -> {         sh.runIgnoreExitCode("pkill -u elasticsearch").         sh.runIgnoreExitCode("ps aux | grep -i 'org.elasticsearch.bootstrap.Elasticsearch' | awk {'print $2'} | xargs kill -9").     }).     Platforms.onWindows(() -> {         // the view of processes returned by Get-Process doesn't expose command line arguments, so we use WMI here         sh.runIgnoreExitCode("Get-WmiObject Win32_Process | " + "Where-Object { $_.CommandLine -Match 'org.elasticsearch.bootstrap.Elasticsearch' } | " + "ForEach-Object { $_.Terminate() }").     }).     Platforms.onLinux(Cleanup::purgePackagesLinux).     // remove elasticsearch users     Platforms.onLinux(() -> {         sh.runIgnoreExitCode("userdel elasticsearch").         sh.runIgnoreExitCode("groupdel elasticsearch").     }).     // when we run es as a role user on windows, add the equivalent here     // delete files that may still exist     lsGlob(getTempDir(), "elasticsearch*").forEach(FileUtils::rm).     final List<String> filesToDelete = Platforms.WINDOWS ? ELASTICSEARCH_FILES_WINDOWS : ELASTICSEARCH_FILES_LINUX.     filesToDelete.stream().map(Paths::get).filter(Files::exists).forEach(FileUtils::rm).     // todo add this for windows when adding tests for service intallation     if (Platforms.LINUX && isSystemd()) {         sh.run("systemctl unmask systemd-sysctl.service").     } }
false;private,static;0;14;;private static void purgePackagesLinux() {     final Shell sh = new Shell().     if (isRPM()) {         // Doing rpm erase on both packages in one command will remove neither since both cannot be installed         // this may leave behind config files in /etc/elasticsearch, but a later step in this cleanup will get them         sh.runIgnoreExitCode("rpm --quiet -e elasticsearch").         sh.runIgnoreExitCode("rpm --quiet -e elasticsearch-oss").     }     if (isDPKG()) {         sh.runIgnoreExitCode("dpkg --purge elasticsearch elasticsearch-oss").     } }
