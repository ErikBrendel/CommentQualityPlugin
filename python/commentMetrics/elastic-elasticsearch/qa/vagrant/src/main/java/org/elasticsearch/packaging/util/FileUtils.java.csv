# id;timestamp;commentText;codeText;commentWords;codeWords
FileUtils -> public static String getFileOwner(Path path);1527152864;Gets the owner of a file in a way that should be supported by all filesystems that have a concept of file owner;public static String getFileOwner(Path path) {_        try {_            FileOwnerAttributeView view = Files.getFileAttributeView(path, FileOwnerAttributeView.class)__            return view.getOwner().getName()__        } catch (IOException e) {_            throw new RuntimeException(e)__        }_    };gets,the,owner,of,a,file,in,a,way,that,should,be,supported,by,all,filesystems,that,have,a,concept,of,file,owner;public,static,string,get,file,owner,path,path,try,file,owner,attribute,view,view,files,get,file,attribute,view,path,file,owner,attribute,view,class,return,view,get,owner,get,name,catch,ioexception,e,throw,new,runtime,exception,e
FileUtils -> public static String getFileOwner(Path path);1531301204;Gets the owner of a file in a way that should be supported by all filesystems that have a concept of file owner;public static String getFileOwner(Path path) {_        try {_            FileOwnerAttributeView view = Files.getFileAttributeView(path, FileOwnerAttributeView.class)__            return view.getOwner().getName()__        } catch (IOException e) {_            throw new RuntimeException(e)__        }_    };gets,the,owner,of,a,file,in,a,way,that,should,be,supported,by,all,filesystems,that,have,a,concept,of,file,owner;public,static,string,get,file,owner,path,path,try,file,owner,attribute,view,view,files,get,file,attribute,view,path,file,owner,attribute,view,class,return,view,get,owner,get,name,catch,ioexception,e,throw,new,runtime,exception,e
FileUtils -> public static String getFileOwner(Path path);1532028790;Gets the owner of a file in a way that should be supported by all filesystems that have a concept of file owner;public static String getFileOwner(Path path) {_        try {_            FileOwnerAttributeView view = Files.getFileAttributeView(path, FileOwnerAttributeView.class)__            return view.getOwner().getName()__        } catch (IOException e) {_            throw new RuntimeException(e)__        }_    };gets,the,owner,of,a,file,in,a,way,that,should,be,supported,by,all,filesystems,that,have,a,concept,of,file,owner;public,static,string,get,file,owner,path,path,try,file,owner,attribute,view,view,files,get,file,attribute,view,path,file,owner,attribute,view,class,return,view,get,owner,get,name,catch,ioexception,e,throw,new,runtime,exception,e
FileUtils -> public static PosixFileAttributes getPosixFileAttributes(Path path);1527152864;Gets attributes that are supported by posix filesystems;public static PosixFileAttributes getPosixFileAttributes(Path path) {_        try {_            return Files.readAttributes(path, PosixFileAttributes.class)__        } catch (IOException e) {_            throw new RuntimeException(e)__        }_    };gets,attributes,that,are,supported,by,posix,filesystems;public,static,posix,file,attributes,get,posix,file,attributes,path,path,try,return,files,read,attributes,path,posix,file,attributes,class,catch,ioexception,e,throw,new,runtime,exception,e
FileUtils -> public static PosixFileAttributes getPosixFileAttributes(Path path);1531301204;Gets attributes that are supported by posix filesystems;public static PosixFileAttributes getPosixFileAttributes(Path path) {_        try {_            return Files.readAttributes(path, PosixFileAttributes.class)__        } catch (IOException e) {_            throw new RuntimeException(e)__        }_    };gets,attributes,that,are,supported,by,posix,filesystems;public,static,posix,file,attributes,get,posix,file,attributes,path,path,try,return,files,read,attributes,path,posix,file,attributes,class,catch,ioexception,e,throw,new,runtime,exception,e
FileUtils -> public static PosixFileAttributes getPosixFileAttributes(Path path);1532028790;Gets attributes that are supported by posix filesystems;public static PosixFileAttributes getPosixFileAttributes(Path path) {_        try {_            return Files.readAttributes(path, PosixFileAttributes.class)__        } catch (IOException e) {_            throw new RuntimeException(e)__        }_    };gets,attributes,that,are,supported,by,posix,filesystems;public,static,posix,file,attributes,get,posix,file,attributes,path,path,try,return,files,read,attributes,path,posix,file,attributes,class,catch,ioexception,e,throw,new,runtime,exception,e
FileUtils -> public static BasicFileAttributes getBasicFileAttributes(Path path);1527152864;Gets attributes that are supported by all filesystems;public static BasicFileAttributes getBasicFileAttributes(Path path) {_        try {_            return Files.readAttributes(path, BasicFileAttributes.class)__        } catch (IOException e) {_            throw new RuntimeException(e)__        }_    };gets,attributes,that,are,supported,by,all,filesystems;public,static,basic,file,attributes,get,basic,file,attributes,path,path,try,return,files,read,attributes,path,basic,file,attributes,class,catch,ioexception,e,throw,new,runtime,exception,e
FileUtils -> public static BasicFileAttributes getBasicFileAttributes(Path path);1531301204;Gets attributes that are supported by all filesystems;public static BasicFileAttributes getBasicFileAttributes(Path path) {_        try {_            return Files.readAttributes(path, BasicFileAttributes.class)__        } catch (IOException e) {_            throw new RuntimeException(e)__        }_    };gets,attributes,that,are,supported,by,all,filesystems;public,static,basic,file,attributes,get,basic,file,attributes,path,path,try,return,files,read,attributes,path,basic,file,attributes,class,catch,ioexception,e,throw,new,runtime,exception,e
FileUtils -> public static BasicFileAttributes getBasicFileAttributes(Path path);1532028790;Gets attributes that are supported by all filesystems;public static BasicFileAttributes getBasicFileAttributes(Path path) {_        try {_            return Files.readAttributes(path, BasicFileAttributes.class)__        } catch (IOException e) {_            throw new RuntimeException(e)__        }_    };gets,attributes,that,are,supported,by,all,filesystems;public,static,basic,file,attributes,get,basic,file,attributes,path,path,try,return,files,read,attributes,path,basic,file,attributes,class,catch,ioexception,e,throw,new,runtime,exception,e
