commented;modifiers;parameterAmount;loc;comment;code
false;protected,abstract;0;1;;protected abstract Distribution distribution().
false;public,static;0;5;;@BeforeClass public static void cleanup() {     installation = null.     cleanEverything(). }
false;public;0;5;;@Before public void onlyCompatibleDistributions() {     assumeTrue("only dpkg platforms", isDPKG()).     assumeTrue("only compatible distributions", distribution().packaging.compatible). }
false;public;0;6;;public void test10Install() {     assertRemoved(distribution()).     installation = install(distribution()).     assertInstalled(distribution()).     verifyPackageInstallation(installation, distribution()). }
false;public;0;44;;public void test20Remove() {     assumeThat(installation, is(notNullValue())).     remove(distribution()).     // some config files were not removed     assertPathsExist(installation.config, installation.config("elasticsearch.yml"), installation.config("jvm.options"), installation.config("log4j2.properties")).     if (distribution().isDefault()) {         assertPathsExist(installation.config, installation.config("role_mapping.yml"), installation.config("roles.yml"), installation.config("users"), installation.config("users_roles")).     }     // keystore was removed     assertPathsDontExist(installation.config("elasticsearch.keystore"), installation.config(".elasticsearch.keystore.initial_md5sum")).     // doc files were removed     assertPathsDontExist(Paths.get("/usr/share/doc/" + distribution().flavor.name), Paths.get("/usr/share/doc/" + distribution().flavor.name + "/copyright")).     // sysvinit service file was not removed     assertTrue(Files.exists(SYSVINIT_SCRIPT)).     // defaults file was not removed     assertTrue(Files.exists(installation.envFile)). }
false;public;0;16;;public void test30Purge() {     assumeThat(installation, is(notNullValue())).     final Shell sh = new Shell().     sh.run("dpkg --purge " + distribution().flavor.name).     assertRemoved(distribution()).     assertPathsDontExist(installation.config, installation.envFile, SYSVINIT_SCRIPT).     assertThat(packageStatus(distribution()).exitCode, is(1)). }
