commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected Distribution distribution() {     return Distribution.OSS_RPM. }
false;public;0;17;;public void test11RpmDependencies() {     assumeTrue(Platforms.isRPM()).     final Shell sh = new Shell().     final Shell.Result defaultDeps = sh.run("rpm -qpR " + getDistributionFile(DEFAULT_RPM)).     final Shell.Result ossDeps = sh.run("rpm -qpR " + getDistributionFile(OSS_RPM)).     TestCase.assertTrue(Pattern.compile("(?m)^/bin/bash\\s*$").matcher(defaultDeps.stdout).find()).     TestCase.assertTrue(Pattern.compile("(?m)^/bin/bash\\s*$").matcher(ossDeps.stdout).find()).     final Shell.Result defaultConflicts = sh.run("rpm -qp --conflicts " + getDistributionFile(DEFAULT_RPM)).     final Shell.Result ossConflicts = sh.run("rpm -qp --conflicts " + getDistributionFile(OSS_RPM)).     TestCase.assertTrue(Pattern.compile("(?m)^elasticsearch-oss\\s*$").matcher(defaultConflicts.stdout).find()).     TestCase.assertTrue(Pattern.compile("(?m)^elasticsearch\\s*$").matcher(ossConflicts.stdout).find()). }
