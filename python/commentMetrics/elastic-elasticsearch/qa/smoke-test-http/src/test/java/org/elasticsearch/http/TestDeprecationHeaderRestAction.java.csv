commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String getName() {     return "test_deprecation_header_action". }
false;public;2;28;;// List<String> casts @SuppressWarnings("unchecked") @Override public RestChannelConsumer prepareRequest(RestRequest request, NodeClient client) throws IOException {     final List<String> settings.     try (XContentParser parser = request.contentParser()) {         final Map<String, Object> source = parser.map().         if (source.containsKey("deprecated_settings")) {             deprecationLogger.deprecated(DEPRECATED_USAGE).             settings = (List<String>) source.get("deprecated_settings").         } else {             settings = (List<String>) source.get("settings").         }     }     return channel -> {         final XContentBuilder builder = channel.newBuilder().         builder.startObject().startArray("settings").         for (String setting : settings) {             builder.startObject().field(setting, SETTINGS_MAP.get(setting).getRaw(this.settings)).endObject().         }         builder.endArray().endObject().         channel.sendResponse(new BytesRestResponse(RestStatus.OK, builder)).     }. }
