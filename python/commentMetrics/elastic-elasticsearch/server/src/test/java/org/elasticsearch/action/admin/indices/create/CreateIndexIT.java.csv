# id;timestamp;commentText;codeText;commentWords;codeWords
CreateIndexIT -> public void testDefaultWaitForActiveShardsUsesIndexSetting() throws Exception;1524684173;This test ensures that index creation adheres to the {@link IndexMetaData#SETTING_WAIT_FOR_ACTIVE_SHARDS}.;public void testDefaultWaitForActiveShardsUsesIndexSetting() throws Exception {_        final int numReplicas = internalCluster().numDataNodes()__        Settings settings = Settings.builder()_                                .put(SETTING_WAIT_FOR_ACTIVE_SHARDS.getKey(), Integer.toString(numReplicas))_                                .put(IndexMetaData.INDEX_NUMBER_OF_SHARDS_SETTING.getKey(), 1)_                                .put(IndexMetaData.INDEX_NUMBER_OF_REPLICAS_SETTING.getKey(), numReplicas)_                                .build()__        assertAcked(client().admin().indices().prepareCreate("test-idx-1").setSettings(settings).get())___        _        settings = Settings.builder()_                       .put(settings)_                       .put(SETTING_WAIT_FOR_ACTIVE_SHARDS.getKey(), "all")_                       .build()__        assertFalse(client().admin().indices().prepareCreate("test-idx-2").setSettings(settings).setTimeout("100ms").get()_                .isShardsAcknowledged())___        _        settings = Settings.builder()_                       .put(settings)_                       .put(SETTING_WAIT_FOR_ACTIVE_SHARDS.getKey(), Integer.toString(numReplicas + 1))_                       .build()__        assertFalse(client().admin().indices().prepareCreate("test-idx-3").setSettings(settings).setTimeout("100ms").get()_                .isShardsAcknowledged())__    };this,test,ensures,that,index,creation,adheres,to,the,link,index,meta,data;public,void,test,default,wait,for,active,shards,uses,index,setting,throws,exception,final,int,num,replicas,internal,cluster,num,data,nodes,settings,settings,settings,builder,put,get,key,integer,to,string,num,replicas,put,index,meta,data,get,key,1,put,index,meta,data,get,key,num,replicas,build,assert,acked,client,admin,indices,prepare,create,test,idx,1,set,settings,settings,get,settings,settings,builder,put,settings,put,get,key,all,build,assert,false,client,admin,indices,prepare,create,test,idx,2,set,settings,settings,set,timeout,100ms,get,is,shards,acknowledged,settings,settings,builder,put,settings,put,get,key,integer,to,string,num,replicas,1,build,assert,false,client,admin,indices,prepare,create,test,idx,3,set,settings,settings,set,timeout,100ms,get,is,shards,acknowledged
CreateIndexIT -> public void testDefaultWaitForActiveShardsUsesIndexSetting() throws Exception;1534362961;This test ensures that index creation adheres to the {@link IndexMetaData#SETTING_WAIT_FOR_ACTIVE_SHARDS}.;public void testDefaultWaitForActiveShardsUsesIndexSetting() throws Exception {_        final int numReplicas = internalCluster().numDataNodes()__        Settings settings = Settings.builder()_                                .put(SETTING_WAIT_FOR_ACTIVE_SHARDS.getKey(), Integer.toString(numReplicas))_                                .put(IndexMetaData.INDEX_NUMBER_OF_SHARDS_SETTING.getKey(), 1)_                                .put(IndexMetaData.INDEX_NUMBER_OF_REPLICAS_SETTING.getKey(), numReplicas)_                                .build()__        assertAcked(client().admin().indices().prepareCreate("test-idx-1").setSettings(settings).get())___        _        settings = Settings.builder()_                       .put(settings)_                       .put(SETTING_WAIT_FOR_ACTIVE_SHARDS.getKey(), "all")_                       .build()__        assertFalse(client().admin().indices().prepareCreate("test-idx-2").setSettings(settings).setTimeout("100ms").get()_                .isShardsAcknowledged())___        _        settings = Settings.builder()_                       .put(settings)_                       .put(SETTING_WAIT_FOR_ACTIVE_SHARDS.getKey(), Integer.toString(numReplicas + 1))_                       .build()__        assertFalse(client().admin().indices().prepareCreate("test-idx-3").setSettings(settings).setTimeout("100ms").get()_                .isShardsAcknowledged())__    };this,test,ensures,that,index,creation,adheres,to,the,link,index,meta,data;public,void,test,default,wait,for,active,shards,uses,index,setting,throws,exception,final,int,num,replicas,internal,cluster,num,data,nodes,settings,settings,settings,builder,put,get,key,integer,to,string,num,replicas,put,index,meta,data,get,key,1,put,index,meta,data,get,key,num,replicas,build,assert,acked,client,admin,indices,prepare,create,test,idx,1,set,settings,settings,get,settings,settings,builder,put,settings,put,get,key,all,build,assert,false,client,admin,indices,prepare,create,test,idx,2,set,settings,settings,set,timeout,100ms,get,is,shards,acknowledged,settings,settings,builder,put,settings,put,get,key,integer,to,string,num,replicas,1,build,assert,false,client,admin,indices,prepare,create,test,idx,3,set,settings,settings,set,timeout,100ms,get,is,shards,acknowledged
CreateIndexIT -> public void testDefaultWaitForActiveShardsUsesIndexSetting() throws Exception;1544035746;This test ensures that index creation adheres to the {@link IndexMetaData#SETTING_WAIT_FOR_ACTIVE_SHARDS}.;public void testDefaultWaitForActiveShardsUsesIndexSetting() throws Exception {_        final int numReplicas = internalCluster().numDataNodes()__        Settings settings = Settings.builder()_                                .put(SETTING_WAIT_FOR_ACTIVE_SHARDS.getKey(), Integer.toString(numReplicas))_                                .put(IndexMetaData.INDEX_NUMBER_OF_SHARDS_SETTING.getKey(), 1)_                                .put(IndexMetaData.INDEX_NUMBER_OF_REPLICAS_SETTING.getKey(), numReplicas)_                                .build()__        assertAcked(client().admin().indices().prepareCreate("test-idx-1").setSettings(settings).get())___        _        settings = Settings.builder()_                       .put(settings)_                       .put(SETTING_WAIT_FOR_ACTIVE_SHARDS.getKey(), "all")_                       .build()__        assertFalse(client().admin().indices().prepareCreate("test-idx-2").setSettings(settings).setTimeout("100ms").get()_                .isShardsAcknowledged())___        _        settings = Settings.builder()_                       .put(settings)_                       .put(SETTING_WAIT_FOR_ACTIVE_SHARDS.getKey(), Integer.toString(numReplicas + 1))_                       .build()__        assertFalse(client().admin().indices().prepareCreate("test-idx-3").setSettings(settings).setTimeout("100ms").get()_                .isShardsAcknowledged())__    };this,test,ensures,that,index,creation,adheres,to,the,link,index,meta,data;public,void,test,default,wait,for,active,shards,uses,index,setting,throws,exception,final,int,num,replicas,internal,cluster,num,data,nodes,settings,settings,settings,builder,put,get,key,integer,to,string,num,replicas,put,index,meta,data,get,key,1,put,index,meta,data,get,key,num,replicas,build,assert,acked,client,admin,indices,prepare,create,test,idx,1,set,settings,settings,get,settings,settings,builder,put,settings,put,get,key,all,build,assert,false,client,admin,indices,prepare,create,test,idx,2,set,settings,settings,set,timeout,100ms,get,is,shards,acknowledged,settings,settings,builder,put,settings,put,get,key,integer,to,string,num,replicas,1,build,assert,false,client,admin,indices,prepare,create,test,idx,3,set,settings,settings,set,timeout,100ms,get,is,shards,acknowledged
CreateIndexIT -> public void testDefaultWaitForActiveShardsUsesIndexSetting() throws Exception;1544081506;This test ensures that index creation adheres to the {@link IndexMetaData#SETTING_WAIT_FOR_ACTIVE_SHARDS}.;public void testDefaultWaitForActiveShardsUsesIndexSetting() throws Exception {_        final int numReplicas = internalCluster().numDataNodes()__        Settings settings = Settings.builder()_                                .put(SETTING_WAIT_FOR_ACTIVE_SHARDS.getKey(), Integer.toString(numReplicas))_                                .put(IndexMetaData.INDEX_NUMBER_OF_SHARDS_SETTING.getKey(), 1)_                                .put(IndexMetaData.INDEX_NUMBER_OF_REPLICAS_SETTING.getKey(), numReplicas)_                                .build()__        assertAcked(client().admin().indices().prepareCreate("test-idx-1").setSettings(settings).get())___        _        settings = Settings.builder()_                       .put(settings)_                       .put(SETTING_WAIT_FOR_ACTIVE_SHARDS.getKey(), "all")_                       .build()__        assertFalse(client().admin().indices().prepareCreate("test-idx-2").setSettings(settings).setTimeout("100ms").get()_                .isShardsAcknowledged())___        _        settings = Settings.builder()_                       .put(settings)_                       .put(SETTING_WAIT_FOR_ACTIVE_SHARDS.getKey(), Integer.toString(numReplicas + 1))_                       .build()__        assertFalse(client().admin().indices().prepareCreate("test-idx-3").setSettings(settings).setTimeout("100ms").get()_                .isShardsAcknowledged())__    };this,test,ensures,that,index,creation,adheres,to,the,link,index,meta,data;public,void,test,default,wait,for,active,shards,uses,index,setting,throws,exception,final,int,num,replicas,internal,cluster,num,data,nodes,settings,settings,settings,builder,put,get,key,integer,to,string,num,replicas,put,index,meta,data,get,key,1,put,index,meta,data,get,key,num,replicas,build,assert,acked,client,admin,indices,prepare,create,test,idx,1,set,settings,settings,get,settings,settings,builder,put,settings,put,get,key,all,build,assert,false,client,admin,indices,prepare,create,test,idx,2,set,settings,settings,set,timeout,100ms,get,is,shards,acknowledged,settings,settings,builder,put,settings,put,get,key,integer,to,string,num,replicas,1,build,assert,false,client,admin,indices,prepare,create,test,idx,3,set,settings,settings,set,timeout,100ms,get,is,shards,acknowledged
CreateIndexIT -> public void testDefaultWaitForActiveShardsUsesIndexSetting() throws Exception;1546545188;This test ensures that index creation adheres to the {@link IndexMetaData#SETTING_WAIT_FOR_ACTIVE_SHARDS}.;public void testDefaultWaitForActiveShardsUsesIndexSetting() throws Exception {_        final int numReplicas = internalCluster().numDataNodes()__        Settings settings = Settings.builder()_                                .put(SETTING_WAIT_FOR_ACTIVE_SHARDS.getKey(), Integer.toString(numReplicas))_                                .put(IndexMetaData.INDEX_NUMBER_OF_SHARDS_SETTING.getKey(), 1)_                                .put(IndexMetaData.INDEX_NUMBER_OF_REPLICAS_SETTING.getKey(), numReplicas)_                                .build()__        assertAcked(client().admin().indices().prepareCreate("test-idx-1").setSettings(settings).get())___        _        settings = Settings.builder()_                       .put(settings)_                       .put(SETTING_WAIT_FOR_ACTIVE_SHARDS.getKey(), "all")_                       .build()__        assertFalse(client().admin().indices().prepareCreate("test-idx-2").setSettings(settings).setTimeout("100ms").get()_                .isShardsAcknowledged())___        _        settings = Settings.builder()_                       .put(settings)_                       .put(SETTING_WAIT_FOR_ACTIVE_SHARDS.getKey(), Integer.toString(numReplicas + 1))_                       .build()__        assertFalse(client().admin().indices().prepareCreate("test-idx-3").setSettings(settings).setTimeout("100ms").get()_                .isShardsAcknowledged())__    };this,test,ensures,that,index,creation,adheres,to,the,link,index,meta,data;public,void,test,default,wait,for,active,shards,uses,index,setting,throws,exception,final,int,num,replicas,internal,cluster,num,data,nodes,settings,settings,settings,builder,put,get,key,integer,to,string,num,replicas,put,index,meta,data,get,key,1,put,index,meta,data,get,key,num,replicas,build,assert,acked,client,admin,indices,prepare,create,test,idx,1,set,settings,settings,get,settings,settings,builder,put,settings,put,get,key,all,build,assert,false,client,admin,indices,prepare,create,test,idx,2,set,settings,settings,set,timeout,100ms,get,is,shards,acknowledged,settings,settings,builder,put,settings,put,get,key,integer,to,string,num,replicas,1,build,assert,false,client,admin,indices,prepare,create,test,idx,3,set,settings,settings,set,timeout,100ms,get,is,shards,acknowledged
CreateIndexIT -> public void testDefaultWaitForActiveShardsUsesIndexSetting() throws Exception;1546566088;This test ensures that index creation adheres to the {@link IndexMetaData#SETTING_WAIT_FOR_ACTIVE_SHARDS}.;public void testDefaultWaitForActiveShardsUsesIndexSetting() throws Exception {_        final int numReplicas = internalCluster().numDataNodes()__        Settings settings = Settings.builder()_                                .put(SETTING_WAIT_FOR_ACTIVE_SHARDS.getKey(), Integer.toString(numReplicas))_                                .put(IndexMetaData.INDEX_NUMBER_OF_SHARDS_SETTING.getKey(), 1)_                                .put(IndexMetaData.INDEX_NUMBER_OF_REPLICAS_SETTING.getKey(), numReplicas)_                                .build()__        assertAcked(client().admin().indices().prepareCreate("test-idx-1").setSettings(settings).get())___        _        settings = Settings.builder()_                       .put(settings)_                       .put(SETTING_WAIT_FOR_ACTIVE_SHARDS.getKey(), "all")_                       .build()__        assertFalse(client().admin().indices().prepareCreate("test-idx-2").setSettings(settings).setTimeout("100ms").get()_                .isShardsAcknowledged())___        _        settings = Settings.builder()_                       .put(settings)_                       .put(SETTING_WAIT_FOR_ACTIVE_SHARDS.getKey(), Integer.toString(numReplicas + 1))_                       .build()__        assertFalse(client().admin().indices().prepareCreate("test-idx-3").setSettings(settings).setTimeout("100ms").get()_                .isShardsAcknowledged())__    };this,test,ensures,that,index,creation,adheres,to,the,link,index,meta,data;public,void,test,default,wait,for,active,shards,uses,index,setting,throws,exception,final,int,num,replicas,internal,cluster,num,data,nodes,settings,settings,settings,builder,put,get,key,integer,to,string,num,replicas,put,index,meta,data,get,key,1,put,index,meta,data,get,key,num,replicas,build,assert,acked,client,admin,indices,prepare,create,test,idx,1,set,settings,settings,get,settings,settings,builder,put,settings,put,get,key,all,build,assert,false,client,admin,indices,prepare,create,test,idx,2,set,settings,settings,set,timeout,100ms,get,is,shards,acknowledged,settings,settings,builder,put,settings,put,get,key,integer,to,string,num,replicas,1,build,assert,false,client,admin,indices,prepare,create,test,idx,3,set,settings,settings,set,timeout,100ms,get,is,shards,acknowledged
CreateIndexIT -> public void testDefaultWaitForActiveShardsUsesIndexSetting() throws Exception;1546912600;This test ensures that index creation adheres to the {@link IndexMetaData#SETTING_WAIT_FOR_ACTIVE_SHARDS}.;public void testDefaultWaitForActiveShardsUsesIndexSetting() throws Exception {_        final int numReplicas = internalCluster().numDataNodes()__        Settings settings = Settings.builder()_                                .put(SETTING_WAIT_FOR_ACTIVE_SHARDS.getKey(), Integer.toString(numReplicas))_                                .put(IndexMetaData.INDEX_NUMBER_OF_SHARDS_SETTING.getKey(), 1)_                                .put(IndexMetaData.INDEX_NUMBER_OF_REPLICAS_SETTING.getKey(), numReplicas)_                                .build()__        assertAcked(client().admin().indices().prepareCreate("test-idx-1").setSettings(settings).get())___        _        settings = Settings.builder()_                       .put(settings)_                       .put(SETTING_WAIT_FOR_ACTIVE_SHARDS.getKey(), "all")_                       .build()__        assertFalse(client().admin().indices().prepareCreate("test-idx-2").setSettings(settings).setTimeout("100ms").get()_                .isShardsAcknowledged())___        _        settings = Settings.builder()_                       .put(settings)_                       .put(SETTING_WAIT_FOR_ACTIVE_SHARDS.getKey(), Integer.toString(numReplicas + 1))_                       .build()__        assertFalse(client().admin().indices().prepareCreate("test-idx-3").setSettings(settings).setTimeout("100ms").get()_                .isShardsAcknowledged())__    };this,test,ensures,that,index,creation,adheres,to,the,link,index,meta,data;public,void,test,default,wait,for,active,shards,uses,index,setting,throws,exception,final,int,num,replicas,internal,cluster,num,data,nodes,settings,settings,settings,builder,put,get,key,integer,to,string,num,replicas,put,index,meta,data,get,key,1,put,index,meta,data,get,key,num,replicas,build,assert,acked,client,admin,indices,prepare,create,test,idx,1,set,settings,settings,get,settings,settings,builder,put,settings,put,get,key,all,build,assert,false,client,admin,indices,prepare,create,test,idx,2,set,settings,settings,set,timeout,100ms,get,is,shards,acknowledged,settings,settings,builder,put,settings,put,get,key,integer,to,string,num,replicas,1,build,assert,false,client,admin,indices,prepare,create,test,idx,3,set,settings,settings,set,timeout,100ms,get,is,shards,acknowledged
