commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected TaskOperationFailure createTestInstance() {     return new TaskOperationFailure(randomAlphaOfLength(5), randomNonNegativeLong(), new IllegalStateException("message")). }
false;protected;1;4;;@Override protected TaskOperationFailure doParseInstance(XContentParser parser) throws IOException {     return TaskOperationFailure.fromXContent(parser). }
false;protected;2;12;;@Override protected void assertEqualInstances(TaskOperationFailure expectedInstance, TaskOperationFailure newInstance) {     assertNotSame(expectedInstance, newInstance).     assertThat(newInstance.getNodeId(), equalTo(expectedInstance.getNodeId())).     assertThat(newInstance.getTaskId(), equalTo(expectedInstance.getTaskId())).     assertThat(newInstance.getStatus(), equalTo(expectedInstance.getStatus())).     // XContent loses the original exception and wraps it as a message in Elasticsearch exception     assertThat(newInstance.getCause().getMessage(), equalTo("Elasticsearch exception [type=illegal_state_exception, reason=message]")).     // getReason returns Exception class and the message     assertThat(newInstance.getReason(), equalTo("ElasticsearchException[Elasticsearch exception [type=illegal_state_exception, reason=message]]")). }
false;protected;0;4;;@Override protected boolean supportsUnknownFields() {     return false. }
false;protected;0;4;;@Override protected boolean assertToXContentEquivalence() {     return false. }
