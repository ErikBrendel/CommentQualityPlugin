commented;modifiers;parameterAmount;loc;comment;code
false;protected;2;4;;@Override protected void parseCreateField(ParseContext context, List<IndexableField> fields) throws IOException { // handled in post parse }
false;public;0;4;;@Override public Iterator<Mapper> iterator() {     return Collections.emptyIterator(). }
false;public;2;4;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     return builder.startObject(CONTENT_TYPE).endObject(). }
false;protected;0;4;;@Override protected String contentType() {     return CONTENT_TYPE. }
false;public;1;3;;@Override public void preParse(ParseContext context) throws IOException { }
false;public;1;4;;@Override public void postParse(ParseContext context) throws IOException {     context.doc().add(new StringField(FIELD_NAME, FIELD_VALUE, Store.YES)). }
false;public;1;4;;@Override public ExternalMetadataMapper build(BuilderContext context) {     return new ExternalMetadataMapper(context.indexSettings()). }
false;public;3;5;;@Override public MetadataFieldMapper.Builder<?, ?> parse(String name, Map<String, Object> node, ParserContext parserContext) throws MapperParsingException {     return new Builder(). }
false;public;2;5;;@Override public MetadataFieldMapper getDefault(MappedFieldType fieldType, ParserContext context) {     final Settings indexSettings = context.mapperService().getIndexSettings().getSettings().     return new ExternalMetadataMapper(indexSettings). }
