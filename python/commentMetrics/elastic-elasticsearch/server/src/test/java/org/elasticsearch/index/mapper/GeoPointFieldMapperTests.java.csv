# id;timestamp;commentText;codeText;commentWords;codeWords
GeoPointFieldMapperTests -> public void testIgnoreZValue() throws IOException;1524684173;Test that accept_z_value parameter correctly parses;public void testIgnoreZValue() throws IOException {_        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject("type1")_            .startObject("properties").startObject("location")_            .field("type", "geo_point")_            .field(IGNORE_Z_VALUE.getPreferredName(), "true")_            .endObject().endObject()_            .endObject().endObject())___        DocumentMapper defaultMapper = createIndex("test").mapperService().documentMapperParser()_            .parse("type1", new CompressedXContent(mapping))__        FieldMapper fieldMapper = defaultMapper.mappers().getMapper("location")__        assertThat(fieldMapper, instanceOf(GeoPointFieldMapper.class))___        boolean ignoreZValue = ((GeoPointFieldMapper)fieldMapper).ignoreZValue().value()__        assertThat(ignoreZValue, equalTo(true))___        _        mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject("type1")_            .startObject("properties").startObject("location")_            .field("type", "geo_point")_            .field(IGNORE_Z_VALUE.getPreferredName(), "false")_            .endObject().endObject()_            .endObject().endObject())___        defaultMapper = createIndex("test2").mapperService().documentMapperParser().parse("type1", new CompressedXContent(mapping))__        fieldMapper = defaultMapper.mappers().getMapper("location")__        assertThat(fieldMapper, instanceOf(GeoPointFieldMapper.class))___        ignoreZValue = ((GeoPointFieldMapper)fieldMapper).ignoreZValue().value()__        assertThat(ignoreZValue, equalTo(false))__    };test,that,parameter,correctly,parses;public,void,test,ignore,zvalue,throws,ioexception,string,mapping,strings,to,string,xcontent,factory,json,builder,start,object,start,object,type1,start,object,properties,start,object,location,field,type,field,get,preferred,name,true,end,object,end,object,end,object,end,object,document,mapper,default,mapper,create,index,test,mapper,service,document,mapper,parser,parse,type1,new,compressed,xcontent,mapping,field,mapper,field,mapper,default,mapper,mappers,get,mapper,location,assert,that,field,mapper,instance,of,geo,point,field,mapper,class,boolean,ignore,zvalue,geo,point,field,mapper,field,mapper,ignore,zvalue,value,assert,that,ignore,zvalue,equal,to,true,mapping,strings,to,string,xcontent,factory,json,builder,start,object,start,object,type1,start,object,properties,start,object,location,field,type,field,get,preferred,name,false,end,object,end,object,end,object,end,object,default,mapper,create,index,test2,mapper,service,document,mapper,parser,parse,type1,new,compressed,xcontent,mapping,field,mapper,default,mapper,mappers,get,mapper,location,assert,that,field,mapper,instance,of,geo,point,field,mapper,class,ignore,zvalue,geo,point,field,mapper,field,mapper,ignore,zvalue,value,assert,that,ignore,zvalue,equal,to,false
GeoPointFieldMapperTests -> public void testIgnoreZValue() throws IOException;1525798022;Test that accept_z_value parameter correctly parses;public void testIgnoreZValue() throws IOException {_        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject("type1")_            .startObject("properties").startObject("location")_            .field("type", "geo_point")_            .field(IGNORE_Z_VALUE.getPreferredName(), "true")_            .endObject().endObject()_            .endObject().endObject())___        DocumentMapper defaultMapper = createIndex("test").mapperService().documentMapperParser()_            .parse("type1", new CompressedXContent(mapping))__        FieldMapper fieldMapper = defaultMapper.mappers().getMapper("location")__        assertThat(fieldMapper, instanceOf(GeoPointFieldMapper.class))___        boolean ignoreZValue = ((GeoPointFieldMapper)fieldMapper).ignoreZValue().value()__        assertThat(ignoreZValue, equalTo(true))___        _        mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject("type1")_            .startObject("properties").startObject("location")_            .field("type", "geo_point")_            .field(IGNORE_Z_VALUE.getPreferredName(), "false")_            .endObject().endObject()_            .endObject().endObject())___        defaultMapper = createIndex("test2").mapperService().documentMapperParser().parse("type1", new CompressedXContent(mapping))__        fieldMapper = defaultMapper.mappers().getMapper("location")__        assertThat(fieldMapper, instanceOf(GeoPointFieldMapper.class))___        ignoreZValue = ((GeoPointFieldMapper)fieldMapper).ignoreZValue().value()__        assertThat(ignoreZValue, equalTo(false))__    };test,that,parameter,correctly,parses;public,void,test,ignore,zvalue,throws,ioexception,string,mapping,strings,to,string,xcontent,factory,json,builder,start,object,start,object,type1,start,object,properties,start,object,location,field,type,field,get,preferred,name,true,end,object,end,object,end,object,end,object,document,mapper,default,mapper,create,index,test,mapper,service,document,mapper,parser,parse,type1,new,compressed,xcontent,mapping,field,mapper,field,mapper,default,mapper,mappers,get,mapper,location,assert,that,field,mapper,instance,of,geo,point,field,mapper,class,boolean,ignore,zvalue,geo,point,field,mapper,field,mapper,ignore,zvalue,value,assert,that,ignore,zvalue,equal,to,true,mapping,strings,to,string,xcontent,factory,json,builder,start,object,start,object,type1,start,object,properties,start,object,location,field,type,field,get,preferred,name,false,end,object,end,object,end,object,end,object,default,mapper,create,index,test2,mapper,service,document,mapper,parser,parse,type1,new,compressed,xcontent,mapping,field,mapper,default,mapper,mappers,get,mapper,location,assert,that,field,mapper,instance,of,geo,point,field,mapper,class,ignore,zvalue,geo,point,field,mapper,field,mapper,ignore,zvalue,value,assert,that,ignore,zvalue,equal,to,false
GeoPointFieldMapperTests -> public void testIgnoreZValue() throws IOException;1531937412;Test that accept_z_value parameter correctly parses;public void testIgnoreZValue() throws IOException {_        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject("type1")_            .startObject("properties").startObject("location")_            .field("type", "geo_point")_            .field(IGNORE_Z_VALUE.getPreferredName(), "true")_            .endObject().endObject()_            .endObject().endObject())___        DocumentMapper defaultMapper = createIndex("test").mapperService().documentMapperParser()_            .parse("type1", new CompressedXContent(mapping))__        Mapper fieldMapper = defaultMapper.mappers().getMapper("location")__        assertThat(fieldMapper, instanceOf(GeoPointFieldMapper.class))___        boolean ignoreZValue = ((GeoPointFieldMapper)fieldMapper).ignoreZValue().value()__        assertThat(ignoreZValue, equalTo(true))___        _        mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject("type1")_            .startObject("properties").startObject("location")_            .field("type", "geo_point")_            .field(IGNORE_Z_VALUE.getPreferredName(), "false")_            .endObject().endObject()_            .endObject().endObject())___        defaultMapper = createIndex("test2").mapperService().documentMapperParser().parse("type1", new CompressedXContent(mapping))__        fieldMapper = defaultMapper.mappers().getMapper("location")__        assertThat(fieldMapper, instanceOf(GeoPointFieldMapper.class))___        ignoreZValue = ((GeoPointFieldMapper)fieldMapper).ignoreZValue().value()__        assertThat(ignoreZValue, equalTo(false))__    };test,that,parameter,correctly,parses;public,void,test,ignore,zvalue,throws,ioexception,string,mapping,strings,to,string,xcontent,factory,json,builder,start,object,start,object,type1,start,object,properties,start,object,location,field,type,field,get,preferred,name,true,end,object,end,object,end,object,end,object,document,mapper,default,mapper,create,index,test,mapper,service,document,mapper,parser,parse,type1,new,compressed,xcontent,mapping,mapper,field,mapper,default,mapper,mappers,get,mapper,location,assert,that,field,mapper,instance,of,geo,point,field,mapper,class,boolean,ignore,zvalue,geo,point,field,mapper,field,mapper,ignore,zvalue,value,assert,that,ignore,zvalue,equal,to,true,mapping,strings,to,string,xcontent,factory,json,builder,start,object,start,object,type1,start,object,properties,start,object,location,field,type,field,get,preferred,name,false,end,object,end,object,end,object,end,object,default,mapper,create,index,test2,mapper,service,document,mapper,parser,parse,type1,new,compressed,xcontent,mapping,field,mapper,default,mapper,mappers,get,mapper,location,assert,that,field,mapper,instance,of,geo,point,field,mapper,class,ignore,zvalue,geo,point,field,mapper,field,mapper,ignore,zvalue,value,assert,that,ignore,zvalue,equal,to,false
GeoPointFieldMapperTests -> public void testIgnoreZValue() throws IOException;1541008027;Test that accept_z_value parameter correctly parses;public void testIgnoreZValue() throws IOException {_        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject("type1")_            .startObject("properties").startObject("location")_            .field("type", "geo_point")_            .field(IGNORE_Z_VALUE.getPreferredName(), "true")_            .endObject().endObject()_            .endObject().endObject())___        DocumentMapper defaultMapper = createIndex("test").mapperService().documentMapperParser()_            .parse("type1", new CompressedXContent(mapping))__        Mapper fieldMapper = defaultMapper.mappers().getMapper("location")__        assertThat(fieldMapper, instanceOf(GeoPointFieldMapper.class))___        boolean ignoreZValue = ((GeoPointFieldMapper)fieldMapper).ignoreZValue().value()__        assertThat(ignoreZValue, equalTo(true))___        _        mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject("type1")_            .startObject("properties").startObject("location")_            .field("type", "geo_point")_            .field(IGNORE_Z_VALUE.getPreferredName(), "false")_            .endObject().endObject()_            .endObject().endObject())___        defaultMapper = createIndex("test2").mapperService().documentMapperParser().parse("type1", new CompressedXContent(mapping))__        fieldMapper = defaultMapper.mappers().getMapper("location")__        assertThat(fieldMapper, instanceOf(GeoPointFieldMapper.class))___        ignoreZValue = ((GeoPointFieldMapper)fieldMapper).ignoreZValue().value()__        assertThat(ignoreZValue, equalTo(false))__    };test,that,parameter,correctly,parses;public,void,test,ignore,zvalue,throws,ioexception,string,mapping,strings,to,string,xcontent,factory,json,builder,start,object,start,object,type1,start,object,properties,start,object,location,field,type,field,get,preferred,name,true,end,object,end,object,end,object,end,object,document,mapper,default,mapper,create,index,test,mapper,service,document,mapper,parser,parse,type1,new,compressed,xcontent,mapping,mapper,field,mapper,default,mapper,mappers,get,mapper,location,assert,that,field,mapper,instance,of,geo,point,field,mapper,class,boolean,ignore,zvalue,geo,point,field,mapper,field,mapper,ignore,zvalue,value,assert,that,ignore,zvalue,equal,to,true,mapping,strings,to,string,xcontent,factory,json,builder,start,object,start,object,type1,start,object,properties,start,object,location,field,type,field,get,preferred,name,false,end,object,end,object,end,object,end,object,default,mapper,create,index,test2,mapper,service,document,mapper,parser,parse,type1,new,compressed,xcontent,mapping,field,mapper,default,mapper,mappers,get,mapper,location,assert,that,field,mapper,instance,of,geo,point,field,mapper,class,ignore,zvalue,geo,point,field,mapper,field,mapper,ignore,zvalue,value,assert,that,ignore,zvalue,equal,to,false
GeoPointFieldMapperTests -> public void testIgnoreZValue() throws IOException;1543261482;Test that accept_z_value parameter correctly parses;public void testIgnoreZValue() throws IOException {_        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject("type1")_            .startObject("properties").startObject("location")_            .field("type", "geo_point")_            .field(IGNORE_Z_VALUE.getPreferredName(), "true")_            .endObject().endObject()_            .endObject().endObject())___        DocumentMapper defaultMapper = createIndex("test").mapperService().documentMapperParser()_            .parse("type1", new CompressedXContent(mapping))__        Mapper fieldMapper = defaultMapper.mappers().getMapper("location")__        assertThat(fieldMapper, instanceOf(GeoPointFieldMapper.class))___        boolean ignoreZValue = ((GeoPointFieldMapper)fieldMapper).ignoreZValue().value()__        assertThat(ignoreZValue, equalTo(true))___        _        mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject("type1")_            .startObject("properties").startObject("location")_            .field("type", "geo_point")_            .field(IGNORE_Z_VALUE.getPreferredName(), "false")_            .endObject().endObject()_            .endObject().endObject())___        defaultMapper = createIndex("test2").mapperService().documentMapperParser().parse("type1", new CompressedXContent(mapping))__        fieldMapper = defaultMapper.mappers().getMapper("location")__        assertThat(fieldMapper, instanceOf(GeoPointFieldMapper.class))___        ignoreZValue = ((GeoPointFieldMapper)fieldMapper).ignoreZValue().value()__        assertThat(ignoreZValue, equalTo(false))__    };test,that,parameter,correctly,parses;public,void,test,ignore,zvalue,throws,ioexception,string,mapping,strings,to,string,xcontent,factory,json,builder,start,object,start,object,type1,start,object,properties,start,object,location,field,type,field,get,preferred,name,true,end,object,end,object,end,object,end,object,document,mapper,default,mapper,create,index,test,mapper,service,document,mapper,parser,parse,type1,new,compressed,xcontent,mapping,mapper,field,mapper,default,mapper,mappers,get,mapper,location,assert,that,field,mapper,instance,of,geo,point,field,mapper,class,boolean,ignore,zvalue,geo,point,field,mapper,field,mapper,ignore,zvalue,value,assert,that,ignore,zvalue,equal,to,true,mapping,strings,to,string,xcontent,factory,json,builder,start,object,start,object,type1,start,object,properties,start,object,location,field,type,field,get,preferred,name,false,end,object,end,object,end,object,end,object,default,mapper,create,index,test2,mapper,service,document,mapper,parser,parse,type1,new,compressed,xcontent,mapping,field,mapper,default,mapper,mappers,get,mapper,location,assert,that,field,mapper,instance,of,geo,point,field,mapper,class,ignore,zvalue,geo,point,field,mapper,field,mapper,ignore,zvalue,value,assert,that,ignore,zvalue,equal,to,false
GeoPointFieldMapperTests -> public void testIgnoreZValue() throws IOException;1544035746;Test that accept_z_value parameter correctly parses;public void testIgnoreZValue() throws IOException {_        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject("type1")_            .startObject("properties").startObject("location")_            .field("type", "geo_point")_            .field(IGNORE_Z_VALUE.getPreferredName(), "true")_            .endObject().endObject()_            .endObject().endObject())___        DocumentMapper defaultMapper = createIndex("test").mapperService().documentMapperParser()_            .parse("type1", new CompressedXContent(mapping))__        Mapper fieldMapper = defaultMapper.mappers().getMapper("location")__        assertThat(fieldMapper, instanceOf(GeoPointFieldMapper.class))___        boolean ignoreZValue = ((GeoPointFieldMapper)fieldMapper).ignoreZValue().value()__        assertThat(ignoreZValue, equalTo(true))___        _        mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject("type1")_            .startObject("properties").startObject("location")_            .field("type", "geo_point")_            .field(IGNORE_Z_VALUE.getPreferredName(), "false")_            .endObject().endObject()_            .endObject().endObject())___        defaultMapper = createIndex("test2").mapperService().documentMapperParser().parse("type1", new CompressedXContent(mapping))__        fieldMapper = defaultMapper.mappers().getMapper("location")__        assertThat(fieldMapper, instanceOf(GeoPointFieldMapper.class))___        ignoreZValue = ((GeoPointFieldMapper)fieldMapper).ignoreZValue().value()__        assertThat(ignoreZValue, equalTo(false))__    };test,that,parameter,correctly,parses;public,void,test,ignore,zvalue,throws,ioexception,string,mapping,strings,to,string,xcontent,factory,json,builder,start,object,start,object,type1,start,object,properties,start,object,location,field,type,field,get,preferred,name,true,end,object,end,object,end,object,end,object,document,mapper,default,mapper,create,index,test,mapper,service,document,mapper,parser,parse,type1,new,compressed,xcontent,mapping,mapper,field,mapper,default,mapper,mappers,get,mapper,location,assert,that,field,mapper,instance,of,geo,point,field,mapper,class,boolean,ignore,zvalue,geo,point,field,mapper,field,mapper,ignore,zvalue,value,assert,that,ignore,zvalue,equal,to,true,mapping,strings,to,string,xcontent,factory,json,builder,start,object,start,object,type1,start,object,properties,start,object,location,field,type,field,get,preferred,name,false,end,object,end,object,end,object,end,object,default,mapper,create,index,test2,mapper,service,document,mapper,parser,parse,type1,new,compressed,xcontent,mapping,field,mapper,default,mapper,mappers,get,mapper,location,assert,that,field,mapper,instance,of,geo,point,field,mapper,class,ignore,zvalue,geo,point,field,mapper,field,mapper,ignore,zvalue,value,assert,that,ignore,zvalue,equal,to,false
GeoPointFieldMapperTests -> public void testIgnoreZValue() throws IOException;1544707965;Test that accept_z_value parameter correctly parses;public void testIgnoreZValue() throws IOException {_        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject("type1")_            .startObject("properties").startObject("location")_            .field("type", "geo_point")_            .field(IGNORE_Z_VALUE.getPreferredName(), "true")_            .endObject().endObject()_            .endObject().endObject())___        DocumentMapper defaultMapper = createIndex("test").mapperService().documentMapperParser()_            .parse("type1", new CompressedXContent(mapping))__        Mapper fieldMapper = defaultMapper.mappers().getMapper("location")__        assertThat(fieldMapper, instanceOf(GeoPointFieldMapper.class))___        boolean ignoreZValue = ((GeoPointFieldMapper)fieldMapper).ignoreZValue().value()__        assertThat(ignoreZValue, equalTo(true))___        _        mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject("type1")_            .startObject("properties").startObject("location")_            .field("type", "geo_point")_            .field(IGNORE_Z_VALUE.getPreferredName(), "false")_            .endObject().endObject()_            .endObject().endObject())___        defaultMapper = createIndex("test2").mapperService().documentMapperParser().parse("type1", new CompressedXContent(mapping))__        fieldMapper = defaultMapper.mappers().getMapper("location")__        assertThat(fieldMapper, instanceOf(GeoPointFieldMapper.class))___        ignoreZValue = ((GeoPointFieldMapper)fieldMapper).ignoreZValue().value()__        assertThat(ignoreZValue, equalTo(false))__    };test,that,parameter,correctly,parses;public,void,test,ignore,zvalue,throws,ioexception,string,mapping,strings,to,string,xcontent,factory,json,builder,start,object,start,object,type1,start,object,properties,start,object,location,field,type,field,get,preferred,name,true,end,object,end,object,end,object,end,object,document,mapper,default,mapper,create,index,test,mapper,service,document,mapper,parser,parse,type1,new,compressed,xcontent,mapping,mapper,field,mapper,default,mapper,mappers,get,mapper,location,assert,that,field,mapper,instance,of,geo,point,field,mapper,class,boolean,ignore,zvalue,geo,point,field,mapper,field,mapper,ignore,zvalue,value,assert,that,ignore,zvalue,equal,to,true,mapping,strings,to,string,xcontent,factory,json,builder,start,object,start,object,type1,start,object,properties,start,object,location,field,type,field,get,preferred,name,false,end,object,end,object,end,object,end,object,default,mapper,create,index,test2,mapper,service,document,mapper,parser,parse,type1,new,compressed,xcontent,mapping,field,mapper,default,mapper,mappers,get,mapper,location,assert,that,field,mapper,instance,of,geo,point,field,mapper,class,ignore,zvalue,geo,point,field,mapper,field,mapper,ignore,zvalue,value,assert,that,ignore,zvalue,equal,to,false
GeoPointFieldMapperTests -> public void testIgnoreZValue() throws IOException;1545678410;Test that accept_z_value parameter correctly parses;public void testIgnoreZValue() throws IOException {_        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject("type1")_            .startObject("properties").startObject("location")_            .field("type", "geo_point")_            .field(IGNORE_Z_VALUE.getPreferredName(), "true")_            .endObject().endObject()_            .endObject().endObject())___        DocumentMapper defaultMapper = createIndex("test").mapperService().documentMapperParser()_            .parse("type1", new CompressedXContent(mapping))__        Mapper fieldMapper = defaultMapper.mappers().getMapper("location")__        assertThat(fieldMapper, instanceOf(GeoPointFieldMapper.class))___        boolean ignoreZValue = ((GeoPointFieldMapper)fieldMapper).ignoreZValue().value()__        assertThat(ignoreZValue, equalTo(true))___        _        mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject("type1")_            .startObject("properties").startObject("location")_            .field("type", "geo_point")_            .field(IGNORE_Z_VALUE.getPreferredName(), "false")_            .endObject().endObject()_            .endObject().endObject())___        defaultMapper = createIndex("test2").mapperService().documentMapperParser().parse("type1", new CompressedXContent(mapping))__        fieldMapper = defaultMapper.mappers().getMapper("location")__        assertThat(fieldMapper, instanceOf(GeoPointFieldMapper.class))___        ignoreZValue = ((GeoPointFieldMapper)fieldMapper).ignoreZValue().value()__        assertThat(ignoreZValue, equalTo(false))__    };test,that,parameter,correctly,parses;public,void,test,ignore,zvalue,throws,ioexception,string,mapping,strings,to,string,xcontent,factory,json,builder,start,object,start,object,type1,start,object,properties,start,object,location,field,type,field,get,preferred,name,true,end,object,end,object,end,object,end,object,document,mapper,default,mapper,create,index,test,mapper,service,document,mapper,parser,parse,type1,new,compressed,xcontent,mapping,mapper,field,mapper,default,mapper,mappers,get,mapper,location,assert,that,field,mapper,instance,of,geo,point,field,mapper,class,boolean,ignore,zvalue,geo,point,field,mapper,field,mapper,ignore,zvalue,value,assert,that,ignore,zvalue,equal,to,true,mapping,strings,to,string,xcontent,factory,json,builder,start,object,start,object,type1,start,object,properties,start,object,location,field,type,field,get,preferred,name,false,end,object,end,object,end,object,end,object,default,mapper,create,index,test2,mapper,service,document,mapper,parser,parse,type1,new,compressed,xcontent,mapping,field,mapper,default,mapper,mappers,get,mapper,location,assert,that,field,mapper,instance,of,geo,point,field,mapper,class,ignore,zvalue,geo,point,field,mapper,field,mapper,ignore,zvalue,value,assert,that,ignore,zvalue,equal,to,false
