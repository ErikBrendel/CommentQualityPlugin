# id;timestamp;commentText;codeText;commentWords;codeWords
TopHitsAggregatorTests -> public void testInsideTerms() throws Exception;1536314350;Tests {@code top_hits} inside of {@code terms}. While not strictly a unit test this is a fairly common way to run {@code top_hits}_and serves as a good example of running {@code top_hits} inside of another aggregation.;public void testInsideTerms() throws Exception {_        Aggregation result__        if (randomBoolean()) {_            result = testCase(new MatchAllDocsQuery(),_                    terms("term").field("string")_                        .subAggregation(topHits("top").sort("string", SortOrder.DESC)))__        } else {_            Query query = new QueryParser("string", new KeywordAnalyzer()).parse("d^1000 c^100 b^10 a^1")__            result = testCase(query,_                    terms("term").field("string")_                        .subAggregation(topHits("top")))__        }_        Terms terms = (Terms) result___        _        TopHits hits = (TopHits) terms.getBucketByKey("a").getAggregations().get("top")__        SearchHits searchHits = (hits).getHits()__        assertEquals(2L, searchHits.getTotalHits())__        assertEquals("2", searchHits.getAt(0).getId())__        assertEquals("1", searchHits.getAt(1).getId())___        _        searchHits = ((TopHits) terms.getBucketByKey("b").getAggregations().get("top")).getHits()__        assertEquals(2L, searchHits.getTotalHits())__        assertEquals("3", searchHits.getAt(0).getId())__        assertEquals("1", searchHits.getAt(1).getId())___        _        searchHits = ((TopHits) terms.getBucketByKey("c").getAggregations().get("top")).getHits()__        assertEquals(1L, searchHits.getTotalHits())__        assertEquals("2", searchHits.getAt(0).getId())___        _        searchHits = ((TopHits) terms.getBucketByKey("d").getAggregations().get("top")).getHits()__        assertEquals(1L, searchHits.getTotalHits())__        assertEquals("3", searchHits.getAt(0).getId())__    };tests,code,inside,of,code,terms,while,not,strictly,a,unit,test,this,is,a,fairly,common,way,to,run,code,and,serves,as,a,good,example,of,running,code,inside,of,another,aggregation;public,void,test,inside,terms,throws,exception,aggregation,result,if,random,boolean,result,test,case,new,match,all,docs,query,terms,term,field,string,sub,aggregation,top,hits,top,sort,string,sort,order,desc,else,query,query,new,query,parser,string,new,keyword,analyzer,parse,d,1000,c,100,b,10,a,1,result,test,case,query,terms,term,field,string,sub,aggregation,top,hits,top,terms,terms,terms,result,top,hits,hits,top,hits,terms,get,bucket,by,key,a,get,aggregations,get,top,search,hits,search,hits,hits,get,hits,assert,equals,2l,search,hits,get,total,hits,assert,equals,2,search,hits,get,at,0,get,id,assert,equals,1,search,hits,get,at,1,get,id,search,hits,top,hits,terms,get,bucket,by,key,b,get,aggregations,get,top,get,hits,assert,equals,2l,search,hits,get,total,hits,assert,equals,3,search,hits,get,at,0,get,id,assert,equals,1,search,hits,get,at,1,get,id,search,hits,top,hits,terms,get,bucket,by,key,c,get,aggregations,get,top,get,hits,assert,equals,1l,search,hits,get,total,hits,assert,equals,2,search,hits,get,at,0,get,id,search,hits,top,hits,terms,get,bucket,by,key,d,get,aggregations,get,top,get,hits,assert,equals,1l,search,hits,get,total,hits,assert,equals,3,search,hits,get,at,0,get,id
TopHitsAggregatorTests -> public void testInsideTerms() throws Exception;1544035746;Tests {@code top_hits} inside of {@code terms}. While not strictly a unit test this is a fairly common way to run {@code top_hits}_and serves as a good example of running {@code top_hits} inside of another aggregation.;public void testInsideTerms() throws Exception {_        Aggregation result__        if (randomBoolean()) {_            result = testCase(new MatchAllDocsQuery(),_                    terms("term").field("string")_                        .subAggregation(topHits("top").sort("string", SortOrder.DESC)))__        } else {_            Query query = new QueryParser("string", new KeywordAnalyzer()).parse("d^1000 c^100 b^10 a^1")__            result = testCase(query,_                    terms("term").field("string")_                        .subAggregation(topHits("top")))__        }_        Terms terms = (Terms) result___        _        TopHits hits = (TopHits) terms.getBucketByKey("a").getAggregations().get("top")__        SearchHits searchHits = (hits).getHits()__        assertEquals(2L, searchHits.getTotalHits().value)__        assertEquals("2", searchHits.getAt(0).getId())__        assertEquals("1", searchHits.getAt(1).getId())___        _        searchHits = ((TopHits) terms.getBucketByKey("b").getAggregations().get("top")).getHits()__        assertEquals(2L, searchHits.getTotalHits().value)__        assertEquals("3", searchHits.getAt(0).getId())__        assertEquals("1", searchHits.getAt(1).getId())___        _        searchHits = ((TopHits) terms.getBucketByKey("c").getAggregations().get("top")).getHits()__        assertEquals(1L, searchHits.getTotalHits().value)__        assertEquals("2", searchHits.getAt(0).getId())___        _        searchHits = ((TopHits) terms.getBucketByKey("d").getAggregations().get("top")).getHits()__        assertEquals(1L, searchHits.getTotalHits().value)__        assertEquals("3", searchHits.getAt(0).getId())__    };tests,code,inside,of,code,terms,while,not,strictly,a,unit,test,this,is,a,fairly,common,way,to,run,code,and,serves,as,a,good,example,of,running,code,inside,of,another,aggregation;public,void,test,inside,terms,throws,exception,aggregation,result,if,random,boolean,result,test,case,new,match,all,docs,query,terms,term,field,string,sub,aggregation,top,hits,top,sort,string,sort,order,desc,else,query,query,new,query,parser,string,new,keyword,analyzer,parse,d,1000,c,100,b,10,a,1,result,test,case,query,terms,term,field,string,sub,aggregation,top,hits,top,terms,terms,terms,result,top,hits,hits,top,hits,terms,get,bucket,by,key,a,get,aggregations,get,top,search,hits,search,hits,hits,get,hits,assert,equals,2l,search,hits,get,total,hits,value,assert,equals,2,search,hits,get,at,0,get,id,assert,equals,1,search,hits,get,at,1,get,id,search,hits,top,hits,terms,get,bucket,by,key,b,get,aggregations,get,top,get,hits,assert,equals,2l,search,hits,get,total,hits,value,assert,equals,3,search,hits,get,at,0,get,id,assert,equals,1,search,hits,get,at,1,get,id,search,hits,top,hits,terms,get,bucket,by,key,c,get,aggregations,get,top,get,hits,assert,equals,1l,search,hits,get,total,hits,value,assert,equals,2,search,hits,get,at,0,get,id,search,hits,top,hits,terms,get,bucket,by,key,d,get,aggregations,get,top,get,hits,assert,equals,1l,search,hits,get,total,hits,value,assert,equals,3,search,hits,get,at,0,get,id
TopHitsAggregatorTests -> public void testInsideTerms() throws Exception;1548178735;Tests {@code top_hits} inside of {@code terms}. While not strictly a unit test this is a fairly common way to run {@code top_hits}_and serves as a good example of running {@code top_hits} inside of another aggregation.;public void testInsideTerms() throws Exception {_        Aggregation result__        if (randomBoolean()) {_            result = testCase(new MatchAllDocsQuery(),_                    terms("term").field("string")_                        .subAggregation(topHits("top").sort("string", SortOrder.DESC)))__        } else {_            Query query = new QueryParser("string", new KeywordAnalyzer()).parse("d^1000 c^100 b^10 a^1")__            result = testCase(query,_                    terms("term").field("string")_                        .subAggregation(topHits("top")))__        }_        Terms terms = (Terms) result___        _        TopHits hits = (TopHits) terms.getBucketByKey("a").getAggregations().get("top")__        SearchHits searchHits = (hits).getHits()__        assertEquals(2L, searchHits.getTotalHits().value)__        assertEquals("2", searchHits.getAt(0).getId())__        assertEquals("1", searchHits.getAt(1).getId())__        assertTrue(AggregationInspectionHelper.hasValue(((InternalTopHits) terms.getBucketByKey("a").getAggregations().get("top"))))___        _        searchHits = ((TopHits) terms.getBucketByKey("b").getAggregations().get("top")).getHits()__        assertEquals(2L, searchHits.getTotalHits().value)__        assertEquals("3", searchHits.getAt(0).getId())__        assertEquals("1", searchHits.getAt(1).getId())__        assertTrue(AggregationInspectionHelper.hasValue(((InternalTopHits) terms.getBucketByKey("b").getAggregations().get("top"))))___        _        searchHits = ((TopHits) terms.getBucketByKey("c").getAggregations().get("top")).getHits()__        assertEquals(1L, searchHits.getTotalHits().value)__        assertEquals("2", searchHits.getAt(0).getId())__        assertTrue(AggregationInspectionHelper.hasValue(((InternalTopHits) terms.getBucketByKey("c").getAggregations().get("top"))))___        _        searchHits = ((TopHits) terms.getBucketByKey("d").getAggregations().get("top")).getHits()__        assertEquals(1L, searchHits.getTotalHits().value)__        assertEquals("3", searchHits.getAt(0).getId())__        assertTrue(AggregationInspectionHelper.hasValue(((InternalTopHits) terms.getBucketByKey("d").getAggregations().get("top"))))__    };tests,code,inside,of,code,terms,while,not,strictly,a,unit,test,this,is,a,fairly,common,way,to,run,code,and,serves,as,a,good,example,of,running,code,inside,of,another,aggregation;public,void,test,inside,terms,throws,exception,aggregation,result,if,random,boolean,result,test,case,new,match,all,docs,query,terms,term,field,string,sub,aggregation,top,hits,top,sort,string,sort,order,desc,else,query,query,new,query,parser,string,new,keyword,analyzer,parse,d,1000,c,100,b,10,a,1,result,test,case,query,terms,term,field,string,sub,aggregation,top,hits,top,terms,terms,terms,result,top,hits,hits,top,hits,terms,get,bucket,by,key,a,get,aggregations,get,top,search,hits,search,hits,hits,get,hits,assert,equals,2l,search,hits,get,total,hits,value,assert,equals,2,search,hits,get,at,0,get,id,assert,equals,1,search,hits,get,at,1,get,id,assert,true,aggregation,inspection,helper,has,value,internal,top,hits,terms,get,bucket,by,key,a,get,aggregations,get,top,search,hits,top,hits,terms,get,bucket,by,key,b,get,aggregations,get,top,get,hits,assert,equals,2l,search,hits,get,total,hits,value,assert,equals,3,search,hits,get,at,0,get,id,assert,equals,1,search,hits,get,at,1,get,id,assert,true,aggregation,inspection,helper,has,value,internal,top,hits,terms,get,bucket,by,key,b,get,aggregations,get,top,search,hits,top,hits,terms,get,bucket,by,key,c,get,aggregations,get,top,get,hits,assert,equals,1l,search,hits,get,total,hits,value,assert,equals,2,search,hits,get,at,0,get,id,assert,true,aggregation,inspection,helper,has,value,internal,top,hits,terms,get,bucket,by,key,c,get,aggregations,get,top,search,hits,top,hits,terms,get,bucket,by,key,d,get,aggregations,get,top,get,hits,assert,equals,1l,search,hits,get,total,hits,value,assert,equals,3,search,hits,get,at,0,get,id,assert,true,aggregation,inspection,helper,has,value,internal,top,hits,terms,get,bucket,by,key,d,get,aggregations,get,top
