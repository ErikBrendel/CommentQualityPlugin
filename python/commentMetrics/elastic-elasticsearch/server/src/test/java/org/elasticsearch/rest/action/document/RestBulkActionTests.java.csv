commented;modifiers;parameterAmount;loc;comment;code
false;public;1;6;;@Override public boolean matches(final Object item) {     BulkRequest request = (BulkRequest) item.     UpdateRequest update = (UpdateRequest) request.requests().get(1).     return "timestamps".equals(update.upsertRequest().getPipeline()). }
false;public;0;29;;public void testBulkPipelineUpsert() throws Exception {     final NodeClient mockClient = mock(NodeClient.class).     final Map<String, String> params = new HashMap<>().     params.put("pipeline", "timestamps").     new RestBulkAction(settings(Version.CURRENT).build(), mock(RestController.class)).handleRequest(new FakeRestRequest.Builder(xContentRegistry()).withPath("my_index/_bulk").withParams(params).withContent(new BytesArray("{\"index\":{\"_id\":\"1\"}}\n" + "{\"field1\":\"val1\"}\n" + "{\"update\":{\"_id\":\"2\"}}\n" + "{\"script\":{\"source\":\"ctx._source.counter++.\"},\"upsert\":{\"field1\":\"upserted_val\"}}\n"), XContentType.JSON).withMethod(RestRequest.Method.POST).build(), mock(RestChannel.class), mockClient).     Mockito.verify(mockClient).bulk(argThat(new CustomMatcher<BulkRequest>("Pipeline in upsert request") {          @Override         public boolean matches(final Object item) {             BulkRequest request = (BulkRequest) item.             UpdateRequest update = (UpdateRequest) request.requests().get(1).             return "timestamps".equals(update.upsertRequest().getPipeline()).         }     }), any()). }
