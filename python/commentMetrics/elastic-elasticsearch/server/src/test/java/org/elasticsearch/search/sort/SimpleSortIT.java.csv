# id;timestamp;commentText;codeText;commentWords;codeWords
SimpleSortIT -> CustomScriptPlugin -> static <T extends Comparable<T>> T getMinValueScript(Map<String, Object> vars, T initialValue, String fieldName,                                                              Function<Object, T> converter);1532353780;Return the minimal value from a set of values.;static <T extends Comparable<T>> T getMinValueScript(Map<String, Object> vars, T initialValue, String fieldName,_                                                             Function<Object, T> converter) {_            T retval = initialValue__            Map<?, ?> doc = (Map) vars.get("doc")__            ScriptDocValues<?> values = (ScriptDocValues<?>) doc.get(fieldName)__            for (Object v : values.getValues()) {_                T value = converter.apply(v)__                retval = (value.compareTo(retval) < 0) ? value : retval__            }_            return retval__        };return,the,minimal,value,from,a,set,of,values;static,t,extends,comparable,t,t,get,min,value,script,map,string,object,vars,t,initial,value,string,field,name,function,object,t,converter,t,retval,initial,value,map,doc,map,vars,get,doc,script,doc,values,values,script,doc,values,doc,get,field,name,for,object,v,values,get,values,t,value,converter,apply,v,retval,value,compare,to,retval,0,value,retval,return,retval
SimpleSortIT -> CustomScriptPlugin -> static <T extends Comparable<T>> T getMinValueScript(Map<String, Object> vars, T initialValue, String fieldName,                                                              Function<Object, T> converter);1543347013;Return the minimal value from a set of values.;static <T extends Comparable<T>> T getMinValueScript(Map<String, Object> vars, T initialValue, String fieldName,_                                                             Function<Object, T> converter) {_            T retval = initialValue__            Map<?, ?> doc = (Map) vars.get("doc")__            ScriptDocValues<?> values = (ScriptDocValues<?>) doc.get(fieldName)__            for (Object v : values.getValues()) {_                T value = converter.apply(v)__                retval = (value.compareTo(retval) < 0) ? value : retval__            }_            return retval__        };return,the,minimal,value,from,a,set,of,values;static,t,extends,comparable,t,t,get,min,value,script,map,string,object,vars,t,initial,value,string,field,name,function,object,t,converter,t,retval,initial,value,map,doc,map,vars,get,doc,script,doc,values,values,script,doc,values,doc,get,field,name,for,object,v,values,get,values,t,value,converter,apply,v,retval,value,compare,to,retval,0,value,retval,return,retval
SimpleSortIT -> CustomScriptPlugin -> static <T extends Comparable<T>> T getMinValueScript(Map<String, Object> vars, T initialValue, String fieldName,                                                              Function<Object, T> converter);1544035746;Return the minimal value from a set of values.;static <T extends Comparable<T>> T getMinValueScript(Map<String, Object> vars, T initialValue, String fieldName,_                                                             Function<Object, T> converter) {_            T retval = initialValue__            Map<?, ?> doc = (Map) vars.get("doc")__            ScriptDocValues<?> values = (ScriptDocValues<?>) doc.get(fieldName)__            for (Object v : values.getValues()) {_                T value = converter.apply(v)__                retval = (value.compareTo(retval) < 0) ? value : retval__            }_            return retval__        };return,the,minimal,value,from,a,set,of,values;static,t,extends,comparable,t,t,get,min,value,script,map,string,object,vars,t,initial,value,string,field,name,function,object,t,converter,t,retval,initial,value,map,doc,map,vars,get,doc,script,doc,values,values,script,doc,values,doc,get,field,name,for,object,v,values,get,values,t,value,converter,apply,v,retval,value,compare,to,retval,0,value,retval,return,retval
SimpleSortIT -> CustomScriptPlugin -> static <T extends Comparable<T>> T getMinValueScript(Map<String, Object> vars, T initialValue, String fieldName,                                                              Function<Object, T> converter);1544110272;Return the minimal value from a set of values.;static <T extends Comparable<T>> T getMinValueScript(Map<String, Object> vars, T initialValue, String fieldName,_                                                             Function<Object, T> converter) {_            T retval = initialValue__            Map<?, ?> doc = (Map) vars.get("doc")__            ScriptDocValues<?> values = (ScriptDocValues<?>) doc.get(fieldName)__            for (Object v : values.getValues()) {_                T value = converter.apply(v)__                retval = (value.compareTo(retval) < 0) ? value : retval__            }_            return retval__        };return,the,minimal,value,from,a,set,of,values;static,t,extends,comparable,t,t,get,min,value,script,map,string,object,vars,t,initial,value,string,field,name,function,object,t,converter,t,retval,initial,value,map,doc,map,vars,get,doc,script,doc,values,values,script,doc,values,doc,get,field,name,for,object,v,values,get,values,t,value,converter,apply,v,retval,value,compare,to,retval,0,value,retval,return,retval
SimpleSortIT -> CustomScriptPlugin -> static <T extends Comparable<T>> T getMinValueScript(Map<String, Object> vars, T initialValue, String fieldName,                                                              Function<Object, T> converter);1544792207;Return the minimal value from a set of values.;static <T extends Comparable<T>> T getMinValueScript(Map<String, Object> vars, T initialValue, String fieldName,_                                                             Function<Object, T> converter) {_            T retval = initialValue__            Map<?, ?> doc = (Map) vars.get("doc")__            ScriptDocValues<?> values = (ScriptDocValues<?>) doc.get(fieldName)__            for (Object v : values) {_                T value = converter.apply(v)__                retval = (value.compareTo(retval) < 0) ? value : retval__            }_            return retval__        };return,the,minimal,value,from,a,set,of,values;static,t,extends,comparable,t,t,get,min,value,script,map,string,object,vars,t,initial,value,string,field,name,function,object,t,converter,t,retval,initial,value,map,doc,map,vars,get,doc,script,doc,values,values,script,doc,values,doc,get,field,name,for,object,v,values,t,value,converter,apply,v,retval,value,compare,to,retval,0,value,retval,return,retval
