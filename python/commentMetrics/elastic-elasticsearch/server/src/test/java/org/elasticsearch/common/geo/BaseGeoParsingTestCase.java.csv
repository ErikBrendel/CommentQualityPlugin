commented;modifiers;parameterAmount;loc;comment;code
false;public,abstract;0;1;;public abstract void testParsePoint() throws IOException.
false;public,abstract;0;1;;public abstract void testParseMultiPoint() throws IOException.
false;public,abstract;0;1;;public abstract void testParseLineString() throws IOException.
false;public,abstract;0;1;;public abstract void testParseMultiLineString() throws IOException.
false;public,abstract;0;1;;public abstract void testParsePolygon() throws IOException.
false;public,abstract;0;1;;public abstract void testParseMultiPolygon() throws IOException.
false;public,abstract;0;1;;public abstract void testParseEnvelope() throws IOException.
false;public,abstract;0;1;;public abstract void testParseGeometryCollection() throws IOException.
false;protected;2;6;;protected void assertValidException(XContentBuilder builder, Class<?> expectedException) throws IOException {     try (XContentParser parser = createParser(builder)) {         parser.nextToken().         ElasticsearchGeoAssertions.assertValidException(parser, expectedException).     } }
false;protected;3;10;;protected void assertGeometryEquals(Object expected, XContentBuilder geoJson, boolean useJTS) throws IOException {     try (XContentParser parser = createParser(geoJson)) {         parser.nextToken().         if (useJTS) {             ElasticsearchGeoAssertions.assertEquals(expected, ShapeParser.parse(parser).buildS4J()).         } else {             ElasticsearchGeoAssertions.assertEquals(expected, ShapeParser.parse(parser).buildGeometry()).         }     } }
false;protected;1;3;;protected ShapeCollection<Shape> shapeCollection(Shape... shapes) {     return new ShapeCollection<>(Arrays.asList(shapes), SPATIAL_CONTEXT). }
false;protected;1;7;;protected ShapeCollection<Shape> shapeCollection(Geometry... geoms) {     List<Shape> shapes = new ArrayList<>(geoms.length).     for (Geometry geom : geoms) {         shapes.add(jtsGeom(geom)).     }     return new ShapeCollection<>(shapes, SPATIAL_CONTEXT). }
false;protected;1;3;;protected JtsGeometry jtsGeom(Geometry geom) {     return new JtsGeometry(geom, SPATIAL_CONTEXT, false, false). }
