commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Before public void setUpAction() {     new RestGetFieldMappingAction(Settings.EMPTY, controller()). }
false;public;0;24;;public void testIncludeTypeName() {     Map<String, String> params = new HashMap<>().     String path.     if (randomBoolean()) {         params.put(INCLUDE_TYPE_NAME_PARAMETER, "true").         path = "some_index/some_type/_mapping/field/some_field".     } else {         params.put(INCLUDE_TYPE_NAME_PARAMETER, "false").         path = "some_index/_mapping/field/some_field".     }     RestRequest deprecatedRequest = new FakeRestRequest.Builder(xContentRegistry()).withMethod(RestRequest.Method.GET).withPath(path).withParams(params).build().     dispatchRequest(deprecatedRequest).     assertWarnings(RestGetFieldMappingAction.TYPES_DEPRECATION_MESSAGE).     RestRequest validRequest = new FakeRestRequest.Builder(xContentRegistry()).withMethod(RestRequest.Method.GET).withPath("some_index/_mapping/field/some_field").build().     dispatchRequest(validRequest). }
false;public;0;18;;public void testTypeInPath() {     // Test that specifying a type while setting include_type_name to false     // results in an illegal argument exception.     Map<String, String> params = new HashMap<>().     params.put(INCLUDE_TYPE_NAME_PARAMETER, "false").     RestRequest request = new FakeRestRequest.Builder(xContentRegistry()).withMethod(RestRequest.Method.GET).withPath("some_index/some_type/_mapping/field/some_field").withParams(params).build().     FakeRestChannel channel = new FakeRestChannel(request, false, 1).     ThreadContext threadContext = new ThreadContext(Settings.EMPTY).     controller().dispatchRequest(request, channel, threadContext).     assertEquals(1, channel.errors().get()).     assertEquals(RestStatus.BAD_REQUEST, channel.capturedResponse().status()). }
