# id;timestamp;commentText;codeText;commentWords;codeWords
GeoDistanceRangeTests -> public void testParsingNull() throws IOException;1524684173;We never render "null" values to xContent, but we should test that we can parse them (and they return correct defaults);public void testParsingNull() throws IOException {_        final String rangeAggregation = "{\n" +_                "\"field\" : \"location\",\n" +_                "\"origin\" : \"52.3760, 4.894\",\n" +_                "\"unit\" : \"m\",\n" +_                "\"ranges\" : [\n" +_                "    { \"from\" : null, \"to\" : null }\n" +_                "]\n" +_            "}"__        XContentParser parser = createParser(JsonXContent.jsonXContent, rangeAggregation)__        GeoDistanceAggregationBuilder aggregationBuilder = (GeoDistanceAggregationBuilder) GeoDistanceAggregationBuilder_                .parse("aggregationName", parser)__        assertEquals(1, aggregationBuilder.range().size())__        assertEquals(0.0, aggregationBuilder.range().get(0).getFrom(), 0.0)__        assertEquals(Double.POSITIVE_INFINITY, aggregationBuilder.range().get(0).getTo(), 0.0)__    };we,never,render,null,values,to,x,content,but,we,should,test,that,we,can,parse,them,and,they,return,correct,defaults;public,void,test,parsing,null,throws,ioexception,final,string,range,aggregation,n,field,location,n,origin,52,3760,4,894,n,unit,m,n,ranges,n,from,null,to,null,n,n,xcontent,parser,parser,create,parser,json,xcontent,json,xcontent,range,aggregation,geo,distance,aggregation,builder,aggregation,builder,geo,distance,aggregation,builder,geo,distance,aggregation,builder,parse,aggregation,name,parser,assert,equals,1,aggregation,builder,range,size,assert,equals,0,0,aggregation,builder,range,get,0,get,from,0,0,assert,equals,double,aggregation,builder,range,get,0,get,to,0,0
GeoDistanceRangeTests -> public void testParsingNull() throws IOException;1538170812;We never render "null" values to xContent, but we should test that we can parse them (and they return correct defaults);public void testParsingNull() throws IOException {_        final String rangeAggregation = "{\n" +_                "\"field\" : \"location\",\n" +_                "\"origin\" : \"52.3760, 4.894\",\n" +_                "\"unit\" : \"m\",\n" +_                "\"ranges\" : [\n" +_                "    { \"from\" : null, \"to\" : null }\n" +_                "]\n" +_            "}"__        XContentParser parser = createParser(JsonXContent.jsonXContent, rangeAggregation)__        GeoDistanceAggregationBuilder aggregationBuilder = (GeoDistanceAggregationBuilder) GeoDistanceAggregationBuilder_                .parse("aggregationName", parser)__        assertEquals(1, aggregationBuilder.range().size())__        assertEquals(0.0, aggregationBuilder.range().get(0).getFrom(), 0.0)__        assertEquals(Double.POSITIVE_INFINITY, aggregationBuilder.range().get(0).getTo(), 0.0)__    };we,never,render,null,values,to,x,content,but,we,should,test,that,we,can,parse,them,and,they,return,correct,defaults;public,void,test,parsing,null,throws,ioexception,final,string,range,aggregation,n,field,location,n,origin,52,3760,4,894,n,unit,m,n,ranges,n,from,null,to,null,n,n,xcontent,parser,parser,create,parser,json,xcontent,json,xcontent,range,aggregation,geo,distance,aggregation,builder,aggregation,builder,geo,distance,aggregation,builder,geo,distance,aggregation,builder,parse,aggregation,name,parser,assert,equals,1,aggregation,builder,range,size,assert,equals,0,0,aggregation,builder,range,get,0,get,from,0,0,assert,equals,double,aggregation,builder,range,get,0,get,to,0,0
GeoDistanceRangeTests -> public void testParsingNull() throws IOException;1550831438;We never render "null" values to xContent, but we should test that we can parse them (and they return correct defaults);public void testParsingNull() throws IOException {_        final String rangeAggregation = "{\n" +_                "\"field\" : \"location\",\n" +_                "\"origin\" : \"52.3760, 4.894\",\n" +_                "\"unit\" : \"m\",\n" +_                "\"ranges\" : [\n" +_                "    { \"from\" : null, \"to\" : null }\n" +_                "]\n" +_            "}"__        XContentParser parser = createParser(JsonXContent.jsonXContent, rangeAggregation)__        GeoDistanceAggregationBuilder aggregationBuilder = (GeoDistanceAggregationBuilder) GeoDistanceAggregationBuilder_                .parse("aggregationName", parser)__        assertEquals(1, aggregationBuilder.range().size())__        assertEquals(0.0, aggregationBuilder.range().get(0).getFrom(), 0.0)__        assertEquals(Double.POSITIVE_INFINITY, aggregationBuilder.range().get(0).getTo(), 0.0)__    };we,never,render,null,values,to,x,content,but,we,should,test,that,we,can,parse,them,and,they,return,correct,defaults;public,void,test,parsing,null,throws,ioexception,final,string,range,aggregation,n,field,location,n,origin,52,3760,4,894,n,unit,m,n,ranges,n,from,null,to,null,n,n,xcontent,parser,parser,create,parser,json,xcontent,json,xcontent,range,aggregation,geo,distance,aggregation,builder,aggregation,builder,geo,distance,aggregation,builder,geo,distance,aggregation,builder,parse,aggregation,name,parser,assert,equals,1,aggregation,builder,range,size,assert,equals,0,0,aggregation,builder,range,get,0,get,from,0,0,assert,equals,double,aggregation,builder,range,get,0,get,to,0,0
