commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected MappedFieldType createDefaultFieldType() {     return new IndexFieldMapper.IndexFieldType(). }
false;public;0;8;;public void testPrefixQuery() {     MappedFieldType ft = createDefaultFieldType().     ft.setName("field").     ft.setIndexOptions(IndexOptions.DOCS).     assertEquals(new MatchAllDocsQuery(), ft.prefixQuery("ind", null, createContext())).     assertEquals(new MatchNoDocsQuery(), ft.prefixQuery("other_ind", null, createContext())). }
false;public;0;8;;public void testRegexpQuery() {     MappedFieldType ft = createDefaultFieldType().     ft.setName("field").     ft.setIndexOptions(IndexOptions.DOCS).     assertEquals(new MatchAllDocsQuery(), ft.regexpQuery("ind.x", 0, 10, null, createContext())).     assertEquals(new MatchNoDocsQuery(), ft.regexpQuery("ind?x", 0, 10, null, createContext())). }
false;public;0;8;;public void testWildcardQuery() {     MappedFieldType ft = createDefaultFieldType().     ft.setName("field").     ft.setIndexOptions(IndexOptions.DOCS).     assertEquals(new MatchAllDocsQuery(), ft.wildcardQuery("ind*x", null, createContext())).     assertEquals(new MatchNoDocsQuery(), ft.wildcardQuery("other_ind*x", null, createContext())). }
false;private;0;9;;private QueryShardContext createContext() {     QueryShardContext context = mock(QueryShardContext.class).     Index index = new Index("index", "123").     when(context.getFullyQualifiedIndex()).thenReturn(index).     when(context.index()).thenReturn(index).     return context. }
