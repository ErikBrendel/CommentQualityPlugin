commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;29;;@Override protected BucketScriptPipelineAggregationBuilder createTestAggregatorFactory() {     String name = randomAlphaOfLengthBetween(3, 20).     Map<String, String> bucketsPaths = new HashMap<>().     int numBucketPaths = randomIntBetween(1, 10).     for (int i = 0. i < numBucketPaths. i++) {         bucketsPaths.put(randomAlphaOfLengthBetween(1, 20), randomAlphaOfLengthBetween(1, 40)).     }     Script script.     if (randomBoolean()) {         script = mockScript("script").     } else {         Map<String, Object> params = new HashMap<>().         if (randomBoolean()) {             params.put("foo", "bar").         }         ScriptType type = randomFrom(ScriptType.values()).         script = new Script(type, type == ScriptType.STORED ? null : randomFrom("my_lang", Script.DEFAULT_SCRIPT_LANG), "script", params).     }     BucketScriptPipelineAggregationBuilder factory = new BucketScriptPipelineAggregationBuilder(name, bucketsPaths, script).     if (randomBoolean()) {         factory.format(randomAlphaOfLengthBetween(1, 10)).     }     if (randomBoolean()) {         factory.gapPolicy(randomFrom(GapPolicy.values())).     }     return factory. }
