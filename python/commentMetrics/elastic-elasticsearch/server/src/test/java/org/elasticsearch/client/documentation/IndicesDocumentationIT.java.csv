# id;timestamp;commentText;codeText;commentWords;codeWords
IndicesDocumentationIT -> public void testPutMappingDocumentation() throws Exception;1524684173;This test method is used to generate the Put Mapping Java Indices API documentation_at "docs/java-api/admin/indices/put-mapping.asciidoc" so the documentation gets tested_so that it compiles and runs without throwing errors at runtime.;public void testPutMappingDocumentation() throws Exception {_        Client client = client()___        _        client.admin().indices().prepareCreate("twitter")   _                .addMapping("\"tweet\": {\n" +              _                        "  \"properties\": {\n" +_                        "    \"message\": {\n" +_                        "      \"type\": \"text\"\n" +_                        "    }\n" +_                        "  }\n" +_                        "}")_                .get()__        __        _        client.admin().indices().prepareDelete("twitter").get()__        client.admin().indices().prepareCreate("twitter").get()___        _        client.admin().indices().preparePutMapping("twitter")   _        .setType("user")                                        _        .setSource("{\n" +                                      _                "  \"properties\": {\n" +_                "    \"name\": {\n" +_                "      \"type\": \"text\"\n" +_                "    }\n" +_                "  }\n" +_                "}", XContentType.JSON)_        .get()___        _        client.admin().indices().preparePutMapping("twitter")_        .setType("user")_        .setSource("{\n" +_                "    \"user\":{\n" +                            _                "        \"properties\": {\n" +_                "            \"name\": {\n" +_                "                \"type\": \"text\"\n" +_                "            }\n" +_                "        }\n" +_                "    }\n" +_                "}", XContentType.JSON)_        .get()__        __        _        client.admin().indices().preparePutMapping("twitter")   _        .setType("user")                                        _        .setSource("{\n" +                                      _                "  \"properties\": {\n" +_                "    \"user_name\": {\n" +_                "      \"type\": \"text\"\n" +_                "    }\n" +_                "  }\n" +_                "}", XContentType.JSON)_        .get()__        _    };this,test,method,is,used,to,generate,the,put,mapping,java,indices,api,documentation,at,docs,java,api,admin,indices,put,mapping,asciidoc,so,the,documentation,gets,tested,so,that,it,compiles,and,runs,without,throwing,errors,at,runtime;public,void,test,put,mapping,documentation,throws,exception,client,client,client,client,admin,indices,prepare,create,twitter,add,mapping,tweet,n,properties,n,message,n,type,text,n,n,n,get,client,admin,indices,prepare,delete,twitter,get,client,admin,indices,prepare,create,twitter,get,client,admin,indices,prepare,put,mapping,twitter,set,type,user,set,source,n,properties,n,name,n,type,text,n,n,n,xcontent,type,json,get,client,admin,indices,prepare,put,mapping,twitter,set,type,user,set,source,n,user,n,properties,n,name,n,type,text,n,n,n,n,xcontent,type,json,get,client,admin,indices,prepare,put,mapping,twitter,set,type,user,set,source,n,properties,n,n,type,text,n,n,n,xcontent,type,json,get
IndicesDocumentationIT -> public void testPutMappingDocumentation() throws Exception;1531910483;This test method is used to generate the Put Mapping Java Indices API documentation_at "docs/java-api/admin/indices/put-mapping.asciidoc" so the documentation gets tested_so that it compiles and runs without throwing errors at runtime.;public void testPutMappingDocumentation() throws Exception {_        Client client = client()___        _        client.admin().indices().prepareCreate("twitter")    _                .addMapping("tweet", "message", "type=text") _                .get()__        _        GetMappingsResponse getMappingsResponse = client.admin().indices().prepareGetMappings("twitter").get()__        assertEquals(1, getMappingsResponse.getMappings().size())__        ImmutableOpenMap<String, MappingMetaData> indexMapping = getMappingsResponse.getMappings().get("twitter")__        assertThat(indexMapping.get("tweet"), instanceOf(MappingMetaData.class))___        _        client.admin().indices().prepareDelete("twitter").get()__        client.admin().indices().prepareCreate("twitter").get()___        _        client.admin().indices().preparePutMapping("twitter")   _        .setType("user")                                        _        .setSource("{\n" +                                      _                "  \"properties\": {\n" +_                "    \"name\": {\n" +_                "      \"type\": \"text\"\n" +_                "    }\n" +_                "  }\n" +_                "}", XContentType.JSON)_        .get()___        _        client.admin().indices().preparePutMapping("twitter")_        .setType("user")_        .setSource("{\n" +_                "    \"user\":{\n" +                            _                "        \"properties\": {\n" +_                "            \"name\": {\n" +_                "                \"type\": \"text\"\n" +_                "            }\n" +_                "        }\n" +_                "    }\n" +_                "}", XContentType.JSON)_        .get()__        _        getMappingsResponse = client.admin().indices().prepareGetMappings("twitter").get()__        assertEquals(1, getMappingsResponse.getMappings().size())__        indexMapping = getMappingsResponse.getMappings().get("twitter")__        assertEquals(singletonMap("properties", singletonMap("name", singletonMap("type", "text"))),_                indexMapping.get("user").getSourceAsMap())___        _        client.admin().indices().preparePutMapping("twitter")   _        .setType("user")                                        _        .setSource("{\n" +                                      _                "  \"properties\": {\n" +_                "    \"user_name\": {\n" +_                "      \"type\": \"text\"\n" +_                "    }\n" +_                "  }\n" +_                "}", XContentType.JSON)_        .get()__        _        getMappingsResponse = client.admin().indices().prepareGetMappings("twitter").get()__        assertEquals(1, getMappingsResponse.getMappings().size())__        indexMapping = getMappingsResponse.getMappings().get("twitter")__        Map<String, Map<?,?>> expected = new HashMap<>()__        expected.put("name", singletonMap("type", "text"))__        expected.put("user_name", singletonMap("type", "text"))__        assertEquals(expected, indexMapping.get("user").getSourceAsMap().get("properties"))__    };this,test,method,is,used,to,generate,the,put,mapping,java,indices,api,documentation,at,docs,java,api,admin,indices,put,mapping,asciidoc,so,the,documentation,gets,tested,so,that,it,compiles,and,runs,without,throwing,errors,at,runtime;public,void,test,put,mapping,documentation,throws,exception,client,client,client,client,admin,indices,prepare,create,twitter,add,mapping,tweet,message,type,text,get,get,mappings,response,get,mappings,response,client,admin,indices,prepare,get,mappings,twitter,get,assert,equals,1,get,mappings,response,get,mappings,size,immutable,open,map,string,mapping,meta,data,index,mapping,get,mappings,response,get,mappings,get,twitter,assert,that,index,mapping,get,tweet,instance,of,mapping,meta,data,class,client,admin,indices,prepare,delete,twitter,get,client,admin,indices,prepare,create,twitter,get,client,admin,indices,prepare,put,mapping,twitter,set,type,user,set,source,n,properties,n,name,n,type,text,n,n,n,xcontent,type,json,get,client,admin,indices,prepare,put,mapping,twitter,set,type,user,set,source,n,user,n,properties,n,name,n,type,text,n,n,n,n,xcontent,type,json,get,get,mappings,response,client,admin,indices,prepare,get,mappings,twitter,get,assert,equals,1,get,mappings,response,get,mappings,size,index,mapping,get,mappings,response,get,mappings,get,twitter,assert,equals,singleton,map,properties,singleton,map,name,singleton,map,type,text,index,mapping,get,user,get,source,as,map,client,admin,indices,prepare,put,mapping,twitter,set,type,user,set,source,n,properties,n,n,type,text,n,n,n,xcontent,type,json,get,get,mappings,response,client,admin,indices,prepare,get,mappings,twitter,get,assert,equals,1,get,mappings,response,get,mappings,size,index,mapping,get,mappings,response,get,mappings,get,twitter,map,string,map,expected,new,hash,map,expected,put,name,singleton,map,type,text,expected,put,singleton,map,type,text,assert,equals,expected,index,mapping,get,user,get,source,as,map,get,properties
IndicesDocumentationIT -> public void testPutMappingDocumentation() throws Exception;1540238977;This test method is used to generate the Put Mapping Java Indices API documentation_at "docs/java-api/admin/indices/put-mapping.asciidoc" so the documentation gets tested_so that it compiles and runs without throwing errors at runtime.;public void testPutMappingDocumentation() throws Exception {_        Client client = client()___        _        client.admin().indices().prepareCreate("twitter")    _                .addMapping("_doc", "message", "type=text") _                .get()__        _        GetMappingsResponse getMappingsResponse = client.admin().indices().prepareGetMappings("twitter").get()__        assertEquals(1, getMappingsResponse.getMappings().size())__        ImmutableOpenMap<String, MappingMetaData> indexMapping = getMappingsResponse.getMappings().get("twitter")__        assertThat(indexMapping.get("_doc"), instanceOf(MappingMetaData.class))___        _        client.admin().indices().prepareDelete("twitter").get()__        client.admin().indices().prepareCreate("twitter").get()___        _        client.admin().indices().preparePutMapping("twitter")   _        .setType("_doc")_        .setSource("{\n" +_                "  \"properties\": {\n" +_                "    \"name\": {\n" +                           _                "      \"type\": \"text\"\n" +_                "    }\n" +_                "  }\n" +_                "}", XContentType.JSON)_        .get()___        _        client.admin().indices().preparePutMapping("twitter")_        .setType("_doc")_        .setSource("{\n" +_                "    \"_doc\":{\n" +                            _                "        \"properties\": {\n" +_                "            \"name\": {\n" +_                "                \"type\": \"text\"\n" +_                "            }\n" +_                "        }\n" +_                "    }\n" +_                "}", XContentType.JSON)_        .get()__        _        getMappingsResponse = client.admin().indices().prepareGetMappings("twitter").get()__        assertEquals(1, getMappingsResponse.getMappings().size())__        indexMapping = getMappingsResponse.getMappings().get("twitter")__        assertEquals(singletonMap("properties", singletonMap("name", singletonMap("type", "text"))),_                indexMapping.get("_doc").getSourceAsMap())__    };this,test,method,is,used,to,generate,the,put,mapping,java,indices,api,documentation,at,docs,java,api,admin,indices,put,mapping,asciidoc,so,the,documentation,gets,tested,so,that,it,compiles,and,runs,without,throwing,errors,at,runtime;public,void,test,put,mapping,documentation,throws,exception,client,client,client,client,admin,indices,prepare,create,twitter,add,mapping,message,type,text,get,get,mappings,response,get,mappings,response,client,admin,indices,prepare,get,mappings,twitter,get,assert,equals,1,get,mappings,response,get,mappings,size,immutable,open,map,string,mapping,meta,data,index,mapping,get,mappings,response,get,mappings,get,twitter,assert,that,index,mapping,get,instance,of,mapping,meta,data,class,client,admin,indices,prepare,delete,twitter,get,client,admin,indices,prepare,create,twitter,get,client,admin,indices,prepare,put,mapping,twitter,set,type,set,source,n,properties,n,name,n,type,text,n,n,n,xcontent,type,json,get,client,admin,indices,prepare,put,mapping,twitter,set,type,set,source,n,n,properties,n,name,n,type,text,n,n,n,n,xcontent,type,json,get,get,mappings,response,client,admin,indices,prepare,get,mappings,twitter,get,assert,equals,1,get,mappings,response,get,mappings,size,index,mapping,get,mappings,response,get,mappings,get,twitter,assert,equals,singleton,map,properties,singleton,map,name,singleton,map,type,text,index,mapping,get,get,source,as,map
