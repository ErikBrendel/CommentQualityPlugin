commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected Collection<Class<? extends Plugin>> getPlugins() {     return pluginList(InternalSettingsPlugin.class). }
false;public;0;19;;public void testDynamicMappingDefault() throws IOException {     MapperService mapperService = createIndex("my-index").mapperService().     DocumentMapper documentMapper = mapperService.documentMapperWithAutoCreate("my-type").getDocumentMapper().     ParsedDocument parsedDoc = documentMapper.parse(new SourceToParse("my-index", "my-type", "1", BytesReference.bytes(XContentFactory.jsonBuilder().startObject().field("foo", 3).endObject()), XContentType.JSON)).     String expectedMapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject("my-type").startObject("properties").startObject("foo").field("type", "long").endObject().endObject().endObject().endObject()).     assertEquals(expectedMapping, parsedDoc.dynamicMappingsUpdate().toString()). }
false;public;0;8;;public void testDynamicMappingSettingRemoval() {     Settings settings = Settings.builder().put(MapperService.INDEX_MAPPER_DYNAMIC_SETTING.getKey(), false).build().     Exception e = expectThrows(IllegalArgumentException.class, () -> createIndex("test-index", settings)).     assertEquals(e.getMessage(), "Setting index.mapper.dynamic was removed after version 6.0.0").     assertSettingDeprecationsAndWarnings(new Setting[] { MapperService.INDEX_MAPPER_DYNAMIC_SETTING }). }
