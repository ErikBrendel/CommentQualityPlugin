commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;21;;@Override protected FieldCapabilitiesRequest createTestInstance() {     FieldCapabilitiesRequest request = new FieldCapabilitiesRequest().     int size = randomIntBetween(1, 20).     String[] randomFields = new String[size].     for (int i = 0. i < size. i++) {         randomFields[i] = randomAlphaOfLengthBetween(5, 10).     }     size = randomIntBetween(0, 20).     String[] randomIndices = new String[size].     for (int i = 0. i < size. i++) {         randomIndices[i] = randomAlphaOfLengthBetween(5, 10).     }     request.fields(randomFields).     request.indices(randomIndices).     if (randomBoolean()) {         request.indicesOptions(randomBoolean() ? IndicesOptions.strictExpand() : IndicesOptions.lenientExpandOpen()).     }     return request. }
false;protected;0;4;;@Override protected FieldCapabilitiesRequest createBlankInstance() {     return new FieldCapabilitiesRequest(). }
false;protected;1;23;;@Override protected FieldCapabilitiesRequest mutateInstance(FieldCapabilitiesRequest instance) throws IOException {     List<Consumer<FieldCapabilitiesRequest>> mutators = new ArrayList<>().     mutators.add(request -> {         String[] fields = ArrayUtils.concat(request.fields(), new String[] { randomAlphaOfLength(10) }).         request.fields(fields).     }).     mutators.add(request -> {         String[] indices = ArrayUtils.concat(instance.indices(), generateRandomStringArray(5, 10, false, false)).         request.indices(indices).     }).     mutators.add(request -> {         IndicesOptions indicesOptions = randomValueOtherThan(request.indicesOptions(), () -> IndicesOptions.fromOptions(randomBoolean(), randomBoolean(), randomBoolean(), randomBoolean())).         request.indicesOptions(indicesOptions).     }).     mutators.add(request -> request.setMergeResults(!request.isMergeResults())).     FieldCapabilitiesRequest mutatedInstance = copyInstance(instance).     Consumer<FieldCapabilitiesRequest> mutator = randomFrom(mutators).     mutator.accept(mutatedInstance).     return mutatedInstance. }
false;public;0;6;;public void testValidation() {     FieldCapabilitiesRequest request = new FieldCapabilitiesRequest().indices("index2").     ActionRequestValidationException exception = request.validate().     assertNotNull(exception). }
