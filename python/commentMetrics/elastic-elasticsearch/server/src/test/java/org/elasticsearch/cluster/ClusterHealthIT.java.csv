commented;modifiers;parameterAmount;loc;comment;code
false;public;0;12;;public void testSimpleLocalHealth() {     createIndex("test").     // master should thing it's green now.     ensureGreen().     for (String node : internalCluster().getNodeNames()) {         // a very high time out, which should never fire due to the local flag         ClusterHealthResponse health = client(node).admin().cluster().prepareHealth().setLocal(true).setWaitForEvents(Priority.LANGUID).setTimeout("30s").get("10s").         assertThat(health.getStatus(), equalTo(ClusterHealthStatus.GREEN)).         assertThat(health.isTimedOut(), equalTo(false)).     } }
false;public;0;32;;public void testHealth() {     logger.info("--> running cluster health on an index that does not exists").     ClusterHealthResponse healthResponse = client().admin().cluster().prepareHealth("test1").setWaitForYellowStatus().setTimeout("1s").execute().actionGet().     assertThat(healthResponse.isTimedOut(), equalTo(true)).     assertThat(healthResponse.getStatus(), equalTo(ClusterHealthStatus.RED)).     assertThat(healthResponse.getIndices().isEmpty(), equalTo(true)).     logger.info("--> running cluster wide health").     healthResponse = client().admin().cluster().prepareHealth().setWaitForGreenStatus().setTimeout("10s").execute().actionGet().     assertThat(healthResponse.isTimedOut(), equalTo(false)).     assertThat(healthResponse.getStatus(), equalTo(ClusterHealthStatus.GREEN)).     assertThat(healthResponse.getIndices().isEmpty(), equalTo(true)).     logger.info("--> Creating index test1 with zero replicas").     createIndex("test1").     logger.info("--> running cluster health on an index that does exists").     healthResponse = client().admin().cluster().prepareHealth("test1").setWaitForGreenStatus().setTimeout("10s").execute().actionGet().     assertThat(healthResponse.isTimedOut(), equalTo(false)).     assertThat(healthResponse.getStatus(), equalTo(ClusterHealthStatus.GREEN)).     assertThat(healthResponse.getIndices().get("test1").getStatus(), equalTo(ClusterHealthStatus.GREEN)).     logger.info("--> running cluster health on an index that does exists and an index that doesn't exists").     healthResponse = client().admin().cluster().prepareHealth("test1", "test2").setWaitForYellowStatus().setTimeout("1s").execute().actionGet().     assertThat(healthResponse.isTimedOut(), equalTo(true)).     assertThat(healthResponse.getStatus(), equalTo(ClusterHealthStatus.RED)).     assertThat(healthResponse.getIndices().get("test1").getStatus(), equalTo(ClusterHealthStatus.GREEN)).     assertThat(healthResponse.getIndices().size(), equalTo(1)). }
false;public;0;152;;public void testHealthWithClosedIndices() {     createIndex("index-1").     {         ClusterHealthResponse response = client().admin().cluster().prepareHealth().setWaitForGreenStatus().get().         assertThat(response.getStatus(), equalTo(ClusterHealthStatus.GREEN)).         assertThat(response.isTimedOut(), equalTo(false)).         assertThat(response.getIndices().get("index-1").getStatus(), equalTo(ClusterHealthStatus.GREEN)).     }     createIndex("index-2").     assertAcked(client().admin().indices().prepareClose("index-2")).     {         ClusterHealthResponse response = client().admin().cluster().prepareHealth().setWaitForGreenStatus().get().         assertThat(response.getStatus(), equalTo(ClusterHealthStatus.GREEN)).         assertThat(response.isTimedOut(), equalTo(false)).         assertThat(response.getIndices().size(), equalTo(2)).         assertThat(response.getIndices().get("index-1").getStatus(), equalTo(ClusterHealthStatus.GREEN)).         assertThat(response.getIndices().get("index-2").getStatus(), equalTo(ClusterHealthStatus.GREEN)).     }     {         ClusterHealthResponse response = client().admin().cluster().prepareHealth("index-1").get().         assertThat(response.getStatus(), equalTo(ClusterHealthStatus.GREEN)).         assertThat(response.isTimedOut(), equalTo(false)).         assertThat(response.getIndices().size(), equalTo(1)).         assertThat(response.getIndices().get("index-1").getStatus(), equalTo(ClusterHealthStatus.GREEN)).     }     {         ClusterHealthResponse response = client().admin().cluster().prepareHealth("index-2").get().         assertThat(response.getStatus(), equalTo(ClusterHealthStatus.GREEN)).         assertThat(response.isTimedOut(), equalTo(false)).         assertThat(response.getIndices().size(), equalTo(1)).         assertThat(response.getIndices().get("index-2").getStatus(), equalTo(ClusterHealthStatus.GREEN)).     }     {         ClusterHealthResponse response = client().admin().cluster().prepareHealth("index-*").get().         assertThat(response.getStatus(), equalTo(ClusterHealthStatus.GREEN)).         assertThat(response.isTimedOut(), equalTo(false)).         assertThat(response.getIndices().size(), equalTo(2)).         assertThat(response.getIndices().get("index-1").getStatus(), equalTo(ClusterHealthStatus.GREEN)).         assertThat(response.getIndices().get("index-2").getStatus(), equalTo(ClusterHealthStatus.GREEN)).     }     {         ClusterHealthResponse response = client().admin().cluster().prepareHealth("index-*").setIndicesOptions(IndicesOptions.lenientExpandOpen()).get().         assertThat(response.getStatus(), equalTo(ClusterHealthStatus.GREEN)).         assertThat(response.isTimedOut(), equalTo(false)).         assertThat(response.getIndices().size(), equalTo(1)).         assertThat(response.getIndices().get("index-1").getStatus(), equalTo(ClusterHealthStatus.GREEN)).         assertThat(response.getIndices().get("index-2"), nullValue()).     }     {         ClusterHealthResponse response = client().admin().cluster().prepareHealth("index-*").setIndicesOptions(IndicesOptions.fromOptions(true, true, false, true)).get().         assertThat(response.getStatus(), equalTo(ClusterHealthStatus.GREEN)).         assertThat(response.isTimedOut(), equalTo(false)).         assertThat(response.getIndices().size(), equalTo(1)).         assertThat(response.getIndices().get("index-1"), nullValue()).         assertThat(response.getIndices().get("index-2").getStatus(), equalTo(ClusterHealthStatus.GREEN)).     }     createIndex("index-3", Settings.builder().put(IndexMetaData.SETTING_NUMBER_OF_REPLICAS, 50).build()).     assertAcked(client().admin().indices().prepareClose("index-3")).     {         ClusterHealthResponse response = client().admin().cluster().prepareHealth().setWaitForNoRelocatingShards(true).setWaitForNoInitializingShards(true).setWaitForYellowStatus().get().         assertThat(response.getStatus(), equalTo(ClusterHealthStatus.YELLOW)).         assertThat(response.isTimedOut(), equalTo(false)).         assertThat(response.getIndices().size(), equalTo(3)).         assertThat(response.getIndices().get("index-1").getStatus(), equalTo(ClusterHealthStatus.GREEN)).         assertThat(response.getIndices().get("index-2").getStatus(), equalTo(ClusterHealthStatus.GREEN)).         assertThat(response.getIndices().get("index-3").getStatus(), equalTo(ClusterHealthStatus.YELLOW)).     }     {         ClusterHealthResponse response = client().admin().cluster().prepareHealth("index-1").get().         assertThat(response.getStatus(), equalTo(ClusterHealthStatus.GREEN)).         assertThat(response.isTimedOut(), equalTo(false)).         assertThat(response.getIndices().size(), equalTo(1)).         assertThat(response.getIndices().get("index-1").getStatus(), equalTo(ClusterHealthStatus.GREEN)).     }     {         ClusterHealthResponse response = client().admin().cluster().prepareHealth("index-2").get().         assertThat(response.getStatus(), equalTo(ClusterHealthStatus.GREEN)).         assertThat(response.isTimedOut(), equalTo(false)).         assertThat(response.getIndices().size(), equalTo(1)).         assertThat(response.getIndices().get("index-2").getStatus(), equalTo(ClusterHealthStatus.GREEN)).     }     {         ClusterHealthResponse response = client().admin().cluster().prepareHealth("index-3").get().         assertThat(response.getStatus(), equalTo(ClusterHealthStatus.YELLOW)).         assertThat(response.isTimedOut(), equalTo(false)).         assertThat(response.getIndices().size(), equalTo(1)).         assertThat(response.getIndices().get("index-3").getStatus(), equalTo(ClusterHealthStatus.YELLOW)).     }     {         ClusterHealthResponse response = client().admin().cluster().prepareHealth("index-*").get().         assertThat(response.getStatus(), equalTo(ClusterHealthStatus.YELLOW)).         assertThat(response.isTimedOut(), equalTo(false)).         assertThat(response.getIndices().size(), equalTo(3)).         assertThat(response.getIndices().get("index-1").getStatus(), equalTo(ClusterHealthStatus.GREEN)).         assertThat(response.getIndices().get("index-2").getStatus(), equalTo(ClusterHealthStatus.GREEN)).         assertThat(response.getIndices().get("index-3").getStatus(), equalTo(ClusterHealthStatus.YELLOW)).     }     {         ClusterHealthResponse response = client().admin().cluster().prepareHealth("index-*").setIndicesOptions(IndicesOptions.lenientExpandOpen()).get().         assertThat(response.getStatus(), equalTo(ClusterHealthStatus.GREEN)).         assertThat(response.isTimedOut(), equalTo(false)).         assertThat(response.getIndices().size(), equalTo(1)).         assertThat(response.getIndices().get("index-1").getStatus(), equalTo(ClusterHealthStatus.GREEN)).         assertThat(response.getIndices().get("index-2"), nullValue()).         assertThat(response.getIndices().get("index-3"), nullValue()).     }     {         ClusterHealthResponse response = client().admin().cluster().prepareHealth("index-*").setIndicesOptions(IndicesOptions.fromOptions(true, true, false, true)).get().         assertThat(response.getStatus(), equalTo(ClusterHealthStatus.YELLOW)).         assertThat(response.isTimedOut(), equalTo(false)).         assertThat(response.getIndices().size(), equalTo(2)).         assertThat(response.getIndices().get("index-1"), nullValue()).         assertThat(response.getIndices().get("index-2").getStatus(), equalTo(ClusterHealthStatus.GREEN)).         assertThat(response.getIndices().get("index-3").getStatus(), equalTo(ClusterHealthStatus.YELLOW)).     }     assertAcked(client().admin().indices().prepareUpdateSettings("index-3").setSettings(Settings.builder().put(IndexMetaData.SETTING_NUMBER_OF_REPLICAS, numberOfReplicas()).build())).     {         ClusterHealthResponse response = client().admin().cluster().prepareHealth().setWaitForGreenStatus().get().         assertThat(response.getStatus(), equalTo(ClusterHealthStatus.GREEN)).         assertThat(response.isTimedOut(), equalTo(false)).         assertThat(response.getIndices().size(), equalTo(3)).         assertThat(response.getIndices().get("index-1").getStatus(), equalTo(ClusterHealthStatus.GREEN)).         assertThat(response.getIndices().get("index-2").getStatus(), equalTo(ClusterHealthStatus.GREEN)).         assertThat(response.getIndices().get("index-3").getStatus(), equalTo(ClusterHealthStatus.GREEN)).     } }
false;public;0;7;;@Override public void run() {     while (finished.get() == false) {         ClusterHealthResponse health = client().admin().cluster().prepareHealth().get().         assertThat(health.getStatus(), not(equalTo(ClusterHealthStatus.RED))).     } }
false;public;0;18;;public void testHealthOnIndexCreation() throws Exception {     final AtomicBoolean finished = new AtomicBoolean(false).     Thread clusterHealthThread = new Thread() {          @Override         public void run() {             while (finished.get() == false) {                 ClusterHealthResponse health = client().admin().cluster().prepareHealth().get().                 assertThat(health.getStatus(), not(equalTo(ClusterHealthStatus.RED))).             }         }     }.     clusterHealthThread.start().     for (int i = 0. i < 10. i++) {         createIndex("test" + i).     }     finished.set(true).     clusterHealthThread.join(). }
