# id;timestamp;commentText;codeText;commentWords;codeWords
DateTimeUnitTests -> public void testEnumIds();1524684173;test that we don't accidentally change enum ids;public void testEnumIds() {_        assertEquals(1, WEEK_OF_WEEKYEAR.id())__        assertEquals(WEEK_OF_WEEKYEAR, DateTimeUnit.resolve((byte) 1))___        assertEquals(2, YEAR_OF_CENTURY.id())__        assertEquals(YEAR_OF_CENTURY, DateTimeUnit.resolve((byte) 2))___        assertEquals(3, QUARTER.id())__        assertEquals(QUARTER, DateTimeUnit.resolve((byte) 3))___        assertEquals(4, MONTH_OF_YEAR.id())__        assertEquals(MONTH_OF_YEAR, DateTimeUnit.resolve((byte) 4))___        assertEquals(5, DAY_OF_MONTH.id())__        assertEquals(DAY_OF_MONTH, DateTimeUnit.resolve((byte) 5))___        assertEquals(6, HOUR_OF_DAY.id())__        assertEquals(HOUR_OF_DAY, DateTimeUnit.resolve((byte) 6))___        assertEquals(7, MINUTES_OF_HOUR.id())__        assertEquals(MINUTES_OF_HOUR, DateTimeUnit.resolve((byte) 7))___        assertEquals(8, SECOND_OF_MINUTE.id())__        assertEquals(SECOND_OF_MINUTE, DateTimeUnit.resolve((byte) 8))__    };test,that,we,don,t,accidentally,change,enum,ids;public,void,test,enum,ids,assert,equals,1,id,assert,equals,date,time,unit,resolve,byte,1,assert,equals,2,id,assert,equals,date,time,unit,resolve,byte,2,assert,equals,3,quarter,id,assert,equals,quarter,date,time,unit,resolve,byte,3,assert,equals,4,id,assert,equals,date,time,unit,resolve,byte,4,assert,equals,5,id,assert,equals,date,time,unit,resolve,byte,5,assert,equals,6,id,assert,equals,date,time,unit,resolve,byte,6,assert,equals,7,id,assert,equals,date,time,unit,resolve,byte,7,assert,equals,8,id,assert,equals,date,time,unit,resolve,byte,8
DateTimeUnitTests -> public void testEnumIds();1534248446;test that we don't accidentally change enum ids;public void testEnumIds() {_        assertEquals(1, WEEK_OF_WEEKYEAR.id())__        assertEquals(WEEK_OF_WEEKYEAR, DateTimeUnit.resolve((byte) 1))___        assertEquals(2, YEAR_OF_CENTURY.id())__        assertEquals(YEAR_OF_CENTURY, DateTimeUnit.resolve((byte) 2))___        assertEquals(3, QUARTER.id())__        assertEquals(QUARTER, DateTimeUnit.resolve((byte) 3))___        assertEquals(4, MONTH_OF_YEAR.id())__        assertEquals(MONTH_OF_YEAR, DateTimeUnit.resolve((byte) 4))___        assertEquals(5, DAY_OF_MONTH.id())__        assertEquals(DAY_OF_MONTH, DateTimeUnit.resolve((byte) 5))___        assertEquals(6, HOUR_OF_DAY.id())__        assertEquals(HOUR_OF_DAY, DateTimeUnit.resolve((byte) 6))___        assertEquals(7, MINUTES_OF_HOUR.id())__        assertEquals(MINUTES_OF_HOUR, DateTimeUnit.resolve((byte) 7))___        assertEquals(8, SECOND_OF_MINUTE.id())__        assertEquals(SECOND_OF_MINUTE, DateTimeUnit.resolve((byte) 8))__    };test,that,we,don,t,accidentally,change,enum,ids;public,void,test,enum,ids,assert,equals,1,id,assert,equals,date,time,unit,resolve,byte,1,assert,equals,2,id,assert,equals,date,time,unit,resolve,byte,2,assert,equals,3,quarter,id,assert,equals,quarter,date,time,unit,resolve,byte,3,assert,equals,4,id,assert,equals,date,time,unit,resolve,byte,4,assert,equals,5,id,assert,equals,date,time,unit,resolve,byte,5,assert,equals,6,id,assert,equals,date,time,unit,resolve,byte,6,assert,equals,7,id,assert,equals,date,time,unit,resolve,byte,7,assert,equals,8,id,assert,equals,date,time,unit,resolve,byte,8
DateTimeUnitTests -> public void testEnumIds();1534539448;test that we don't accidentally change enum ids;public void testEnumIds() {_        assertEquals(1, WEEK_OF_WEEKYEAR.id())__        assertEquals(WEEK_OF_WEEKYEAR, DateTimeUnit.resolve((byte) 1))___        assertEquals(2, YEAR_OF_CENTURY.id())__        assertEquals(YEAR_OF_CENTURY, DateTimeUnit.resolve((byte) 2))___        assertEquals(3, QUARTER.id())__        assertEquals(QUARTER, DateTimeUnit.resolve((byte) 3))___        assertEquals(4, MONTH_OF_YEAR.id())__        assertEquals(MONTH_OF_YEAR, DateTimeUnit.resolve((byte) 4))___        assertEquals(5, DAY_OF_MONTH.id())__        assertEquals(DAY_OF_MONTH, DateTimeUnit.resolve((byte) 5))___        assertEquals(6, HOUR_OF_DAY.id())__        assertEquals(HOUR_OF_DAY, DateTimeUnit.resolve((byte) 6))___        assertEquals(7, MINUTES_OF_HOUR.id())__        assertEquals(MINUTES_OF_HOUR, DateTimeUnit.resolve((byte) 7))___        assertEquals(8, SECOND_OF_MINUTE.id())__        assertEquals(SECOND_OF_MINUTE, DateTimeUnit.resolve((byte) 8))__    };test,that,we,don,t,accidentally,change,enum,ids;public,void,test,enum,ids,assert,equals,1,id,assert,equals,date,time,unit,resolve,byte,1,assert,equals,2,id,assert,equals,date,time,unit,resolve,byte,2,assert,equals,3,quarter,id,assert,equals,quarter,date,time,unit,resolve,byte,3,assert,equals,4,id,assert,equals,date,time,unit,resolve,byte,4,assert,equals,5,id,assert,equals,date,time,unit,resolve,byte,5,assert,equals,6,id,assert,equals,date,time,unit,resolve,byte,6,assert,equals,7,id,assert,equals,date,time,unit,resolve,byte,7,assert,equals,8,id,assert,equals,date,time,unit,resolve,byte,8
DateTimeUnitTests -> public void testEnumIds();1537202470;test that we don't accidentally change enum ids;public void testEnumIds() {_        assertEquals(1, WEEK_OF_WEEKYEAR.id())__        assertEquals(WEEK_OF_WEEKYEAR, DateTimeUnit.resolve((byte) 1))___        assertEquals(2, YEAR_OF_CENTURY.id())__        assertEquals(YEAR_OF_CENTURY, DateTimeUnit.resolve((byte) 2))___        assertEquals(3, QUARTER.id())__        assertEquals(QUARTER, DateTimeUnit.resolve((byte) 3))___        assertEquals(4, MONTH_OF_YEAR.id())__        assertEquals(MONTH_OF_YEAR, DateTimeUnit.resolve((byte) 4))___        assertEquals(5, DAY_OF_MONTH.id())__        assertEquals(DAY_OF_MONTH, DateTimeUnit.resolve((byte) 5))___        assertEquals(6, HOUR_OF_DAY.id())__        assertEquals(HOUR_OF_DAY, DateTimeUnit.resolve((byte) 6))___        assertEquals(7, MINUTES_OF_HOUR.id())__        assertEquals(MINUTES_OF_HOUR, DateTimeUnit.resolve((byte) 7))___        assertEquals(8, SECOND_OF_MINUTE.id())__        assertEquals(SECOND_OF_MINUTE, DateTimeUnit.resolve((byte) 8))__    };test,that,we,don,t,accidentally,change,enum,ids;public,void,test,enum,ids,assert,equals,1,id,assert,equals,date,time,unit,resolve,byte,1,assert,equals,2,id,assert,equals,date,time,unit,resolve,byte,2,assert,equals,3,quarter,id,assert,equals,quarter,date,time,unit,resolve,byte,3,assert,equals,4,id,assert,equals,date,time,unit,resolve,byte,4,assert,equals,5,id,assert,equals,date,time,unit,resolve,byte,5,assert,equals,6,id,assert,equals,date,time,unit,resolve,byte,6,assert,equals,7,id,assert,equals,date,time,unit,resolve,byte,7,assert,equals,8,id,assert,equals,date,time,unit,resolve,byte,8
DateTimeUnitTests -> public void testEnumIds();1542013361;test that we don't accidentally change enum ids;public void testEnumIds() {_        assertEquals(1, WEEK_OF_WEEKYEAR.id())__        assertEquals(WEEK_OF_WEEKYEAR, DateTimeUnit.resolve((byte) 1))___        assertEquals(2, YEAR_OF_CENTURY.id())__        assertEquals(YEAR_OF_CENTURY, DateTimeUnit.resolve((byte) 2))___        assertEquals(3, QUARTER.id())__        assertEquals(QUARTER, DateTimeUnit.resolve((byte) 3))___        assertEquals(4, MONTH_OF_YEAR.id())__        assertEquals(MONTH_OF_YEAR, DateTimeUnit.resolve((byte) 4))___        assertEquals(5, DAY_OF_MONTH.id())__        assertEquals(DAY_OF_MONTH, DateTimeUnit.resolve((byte) 5))___        assertEquals(6, HOUR_OF_DAY.id())__        assertEquals(HOUR_OF_DAY, DateTimeUnit.resolve((byte) 6))___        assertEquals(7, MINUTES_OF_HOUR.id())__        assertEquals(MINUTES_OF_HOUR, DateTimeUnit.resolve((byte) 7))___        assertEquals(8, SECOND_OF_MINUTE.id())__        assertEquals(SECOND_OF_MINUTE, DateTimeUnit.resolve((byte) 8))__    };test,that,we,don,t,accidentally,change,enum,ids;public,void,test,enum,ids,assert,equals,1,id,assert,equals,date,time,unit,resolve,byte,1,assert,equals,2,id,assert,equals,date,time,unit,resolve,byte,2,assert,equals,3,quarter,id,assert,equals,quarter,date,time,unit,resolve,byte,3,assert,equals,4,id,assert,equals,date,time,unit,resolve,byte,4,assert,equals,5,id,assert,equals,date,time,unit,resolve,byte,5,assert,equals,6,id,assert,equals,date,time,unit,resolve,byte,6,assert,equals,7,id,assert,equals,date,time,unit,resolve,byte,7,assert,equals,8,id,assert,equals,date,time,unit,resolve,byte,8
