# id;timestamp;commentText;codeText;commentWords;codeWords
MovFnUnitTests -> public void testValidate() throws IOException;1544475769;The validation should verify the parent aggregation is allowed.;public void testValidate() throws IOException {_        final Set<PipelineAggregationBuilder> aggBuilders = new HashSet<>()__        Script script = new Script(Script.DEFAULT_SCRIPT_TYPE, "painless", "test", Collections.emptyMap())__        aggBuilders.add(new MovFnPipelineAggregationBuilder("mov_fn", "avg", script, 3))___        final MovFnPipelineAggregationBuilder builder = new MovFnPipelineAggregationBuilder("name", "invalid_agg>metric", script, 1)__        builder.validate(PipelineAggregationHelperTests.getRandomSequentiallyOrderedParentAgg(), Collections.emptySet(), aggBuilders)__    };the,validation,should,verify,the,parent,aggregation,is,allowed;public,void,test,validate,throws,ioexception,final,set,pipeline,aggregation,builder,agg,builders,new,hash,set,script,script,new,script,script,painless,test,collections,empty,map,agg,builders,add,new,mov,fn,pipeline,aggregation,builder,avg,script,3,final,mov,fn,pipeline,aggregation,builder,builder,new,mov,fn,pipeline,aggregation,builder,name,metric,script,1,builder,validate,pipeline,aggregation,helper,tests,get,random,sequentially,ordered,parent,agg,collections,empty,set,agg,builders
MovFnUnitTests -> public void testValidate() throws IOException;1548236405;The validation should verify the parent aggregation is allowed.;public void testValidate() throws IOException {_        final Set<PipelineAggregationBuilder> aggBuilders = new HashSet<>()__        Script script = new Script(Script.DEFAULT_SCRIPT_TYPE, "painless", "test", Collections.emptyMap())__        aggBuilders.add(new MovFnPipelineAggregationBuilder("mov_fn", "avg", script, 3))___        final MovFnPipelineAggregationBuilder builder = new MovFnPipelineAggregationBuilder("name", "invalid_agg>metric", script, 1)__        builder.validate(PipelineAggregationHelperTests.getRandomSequentiallyOrderedParentAgg(), Collections.emptySet(), aggBuilders)__    };the,validation,should,verify,the,parent,aggregation,is,allowed;public,void,test,validate,throws,ioexception,final,set,pipeline,aggregation,builder,agg,builders,new,hash,set,script,script,new,script,script,painless,test,collections,empty,map,agg,builders,add,new,mov,fn,pipeline,aggregation,builder,avg,script,3,final,mov,fn,pipeline,aggregation,builder,builder,new,mov,fn,pipeline,aggregation,builder,name,metric,script,1,builder,validate,pipeline,aggregation,helper,tests,get,random,sequentially,ordered,parent,agg,collections,empty,set,agg,builders
MovFnUnitTests -> public void testValidate() throws IOException;1548921340;The validation should verify the parent aggregation is allowed.;public void testValidate() throws IOException {_        final Set<PipelineAggregationBuilder> aggBuilders = new HashSet<>()__        Script script = new Script(Script.DEFAULT_SCRIPT_TYPE, "painless", "test", Collections.emptyMap())__        aggBuilders.add(new MovFnPipelineAggregationBuilder("mov_fn", "avg", script, 3))___        final MovFnPipelineAggregationBuilder builder = new MovFnPipelineAggregationBuilder("name", "invalid_agg>metric", script, 1)__        builder.validate(PipelineAggregationHelperTests.getRandomSequentiallyOrderedParentAgg(), Collections.emptySet(), aggBuilders)__    };the,validation,should,verify,the,parent,aggregation,is,allowed;public,void,test,validate,throws,ioexception,final,set,pipeline,aggregation,builder,agg,builders,new,hash,set,script,script,new,script,script,painless,test,collections,empty,map,agg,builders,add,new,mov,fn,pipeline,aggregation,builder,avg,script,3,final,mov,fn,pipeline,aggregation,builder,builder,new,mov,fn,pipeline,aggregation,builder,name,metric,script,1,builder,validate,pipeline,aggregation,helper,tests,get,random,sequentially,ordered,parent,agg,collections,empty,set,agg,builders
MovFnUnitTests -> public void testValidateException() throws IOException;1544475769;The validation should throw an IllegalArgumentException, since parent_aggregation is not a type of HistogramAggregatorFactory,_DateHistogramAggregatorFactory or AutoDateHistogramAggregatorFactory.;public void testValidateException() throws IOException {_        final Set<PipelineAggregationBuilder> aggBuilders = new HashSet<>()__        Script script = new Script(Script.DEFAULT_SCRIPT_TYPE, "painless", "test", Collections.emptyMap())__        aggBuilders.add(new MovFnPipelineAggregationBuilder("mov_fn", "avg", script, 3))__        TestAggregatorFactory parentFactory = TestAggregatorFactory.createInstance()___        final MovFnPipelineAggregationBuilder builder = new MovFnPipelineAggregationBuilder("name", "invalid_agg>metric", script, 1)__        IllegalStateException ex = expectThrows(IllegalStateException.class,_                () -> builder.validate(parentFactory, Collections.emptySet(), aggBuilders))__        assertEquals("moving_fn aggregation [name] must have a histogram, date_histogram or auto_date_histogram as parent",_                ex.getMessage())__    };the,validation,should,throw,an,illegal,argument,exception,since,parent,aggregation,is,not,a,type,of,histogram,aggregator,factory,date,histogram,aggregator,factory,or,auto,date,histogram,aggregator,factory;public,void,test,validate,exception,throws,ioexception,final,set,pipeline,aggregation,builder,agg,builders,new,hash,set,script,script,new,script,script,painless,test,collections,empty,map,agg,builders,add,new,mov,fn,pipeline,aggregation,builder,avg,script,3,test,aggregator,factory,parent,factory,test,aggregator,factory,create,instance,final,mov,fn,pipeline,aggregation,builder,builder,new,mov,fn,pipeline,aggregation,builder,name,metric,script,1,illegal,state,exception,ex,expect,throws,illegal,state,exception,class,builder,validate,parent,factory,collections,empty,set,agg,builders,assert,equals,aggregation,name,must,have,a,histogram,or,as,parent,ex,get,message
MovFnUnitTests -> public void testValidateException() throws IOException;1548236405;The validation should throw an IllegalArgumentException, since parent_aggregation is not a type of HistogramAggregatorFactory,_DateHistogramAggregatorFactory or AutoDateHistogramAggregatorFactory.;public void testValidateException() throws IOException {_        final Set<PipelineAggregationBuilder> aggBuilders = new HashSet<>()__        Script script = new Script(Script.DEFAULT_SCRIPT_TYPE, "painless", "test", Collections.emptyMap())__        aggBuilders.add(new MovFnPipelineAggregationBuilder("mov_fn", "avg", script, 3))__        TestAggregatorFactory parentFactory = TestAggregatorFactory.createInstance()___        final MovFnPipelineAggregationBuilder builder = new MovFnPipelineAggregationBuilder("name", "invalid_agg>metric", script, 1)__        IllegalStateException ex = expectThrows(IllegalStateException.class,_                () -> builder.validate(parentFactory, Collections.emptySet(), aggBuilders))__        assertEquals("moving_fn aggregation [name] must have a histogram, date_histogram or auto_date_histogram as parent",_                ex.getMessage())__    };the,validation,should,throw,an,illegal,argument,exception,since,parent,aggregation,is,not,a,type,of,histogram,aggregator,factory,date,histogram,aggregator,factory,or,auto,date,histogram,aggregator,factory;public,void,test,validate,exception,throws,ioexception,final,set,pipeline,aggregation,builder,agg,builders,new,hash,set,script,script,new,script,script,painless,test,collections,empty,map,agg,builders,add,new,mov,fn,pipeline,aggregation,builder,avg,script,3,test,aggregator,factory,parent,factory,test,aggregator,factory,create,instance,final,mov,fn,pipeline,aggregation,builder,builder,new,mov,fn,pipeline,aggregation,builder,name,metric,script,1,illegal,state,exception,ex,expect,throws,illegal,state,exception,class,builder,validate,parent,factory,collections,empty,set,agg,builders,assert,equals,aggregation,name,must,have,a,histogram,or,as,parent,ex,get,message
MovFnUnitTests -> public void testValidateException() throws IOException;1548921340;The validation should throw an IllegalArgumentException, since parent_aggregation is not a type of HistogramAggregatorFactory,_DateHistogramAggregatorFactory or AutoDateHistogramAggregatorFactory.;public void testValidateException() throws IOException {_        final Set<PipelineAggregationBuilder> aggBuilders = new HashSet<>()__        Script script = new Script(Script.DEFAULT_SCRIPT_TYPE, "painless", "test", Collections.emptyMap())__        aggBuilders.add(new MovFnPipelineAggregationBuilder("mov_fn", "avg", script, 3))__        TestAggregatorFactory parentFactory = TestAggregatorFactory.createInstance()___        final MovFnPipelineAggregationBuilder builder = new MovFnPipelineAggregationBuilder("name", "invalid_agg>metric", script, 1)__        IllegalStateException ex = expectThrows(IllegalStateException.class,_                () -> builder.validate(parentFactory, Collections.emptySet(), aggBuilders))__        assertEquals("moving_fn aggregation [name] must have a histogram, date_histogram or auto_date_histogram as parent",_                ex.getMessage())__    };the,validation,should,throw,an,illegal,argument,exception,since,parent,aggregation,is,not,a,type,of,histogram,aggregator,factory,date,histogram,aggregator,factory,or,auto,date,histogram,aggregator,factory;public,void,test,validate,exception,throws,ioexception,final,set,pipeline,aggregation,builder,agg,builders,new,hash,set,script,script,new,script,script,painless,test,collections,empty,map,agg,builders,add,new,mov,fn,pipeline,aggregation,builder,avg,script,3,test,aggregator,factory,parent,factory,test,aggregator,factory,create,instance,final,mov,fn,pipeline,aggregation,builder,builder,new,mov,fn,pipeline,aggregation,builder,name,metric,script,1,illegal,state,exception,ex,expect,throws,illegal,state,exception,class,builder,validate,parent,factory,collections,empty,set,agg,builders,assert,equals,aggregation,name,must,have,a,histogram,or,as,parent,ex,get,message
