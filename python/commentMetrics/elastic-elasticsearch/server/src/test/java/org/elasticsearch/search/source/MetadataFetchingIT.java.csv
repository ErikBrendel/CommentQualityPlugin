commented;modifiers;parameterAmount;loc;comment;code
false;public;0;24;;public void testSimple() {     assertAcked(prepareCreate("test")).     ensureGreen().     client().prepareIndex("test", "_doc", "1").setSource("field", "value").get().     refresh().     SearchResponse response = client().prepareSearch("test").storedFields("_none_").setFetchSource(false).get().     assertThat(response.getHits().getAt(0).getId(), nullValue()).     assertThat(response.getHits().getAt(0).getType(), equalTo("_doc")).     assertThat(response.getHits().getAt(0).getSourceAsString(), nullValue()).     response = client().prepareSearch("test").storedFields("_none_").get().     assertThat(response.getHits().getAt(0).getId(), nullValue()).     assertThat(response.getHits().getAt(0).getType(), equalTo("_doc")).     assertThat(response.getHits().getAt(0).getSourceAsString(), nullValue()). }
false;public;0;29;;public void testInnerHits() {     assertAcked(prepareCreate("test").addMapping("_doc", "nested", "type=nested")).     ensureGreen().     client().prepareIndex("test", "_doc", "1").setSource("field", "value", "nested", Collections.singletonMap("title", "foo")).get().     refresh().     SearchResponse response = client().prepareSearch("test").storedFields("_none_").setFetchSource(false).setQuery(new NestedQueryBuilder("nested", new TermQueryBuilder("nested.title", "foo"), ScoreMode.Total).innerHit(new InnerHitBuilder().setStoredFieldNames(Collections.singletonList("_none_")).setFetchSourceContext(new FetchSourceContext(false)))).get().     assertThat(response.getHits().getTotalHits().value, equalTo(1L)).     assertThat(response.getHits().getAt(0).getId(), nullValue()).     assertThat(response.getHits().getAt(0).getType(), equalTo("_doc")).     assertThat(response.getHits().getAt(0).getSourceAsString(), nullValue()).     assertThat(response.getHits().getAt(0).getInnerHits().size(), equalTo(1)).     SearchHits hits = response.getHits().getAt(0).getInnerHits().get("nested").     assertThat(hits.getTotalHits().value, equalTo(1L)).     assertThat(hits.getAt(0).getId(), nullValue()).     assertThat(hits.getAt(0).getType(), equalTo("_doc")).     assertThat(hits.getAt(0).getSourceAsString(), nullValue()). }
false;public;0;25;;public void testWithRouting() {     assertAcked(prepareCreate("test")).     ensureGreen().     client().prepareIndex("test", "_doc", "1").setSource("field", "value").setRouting("toto").get().     refresh().     SearchResponse response = client().prepareSearch("test").storedFields("_none_").setFetchSource(false).get().     assertThat(response.getHits().getAt(0).getId(), nullValue()).     assertThat(response.getHits().getAt(0).getType(), equalTo("_doc")).     assertThat(response.getHits().getAt(0).field("_routing"), nullValue()).     assertThat(response.getHits().getAt(0).getSourceAsString(), nullValue()).     response = client().prepareSearch("test").storedFields("_none_").get().     assertThat(response.getHits().getAt(0).getId(), nullValue()).     assertThat(response.getHits().getAt(0).getType(), equalTo("_doc")).     assertThat(response.getHits().getAt(0).getSourceAsString(), nullValue()). }
false;public;0;38;;public void testInvalid() {     assertAcked(prepareCreate("test")).     ensureGreen().     index("test", "type1", "1", "field", "value").     refresh().     {         SearchPhaseExecutionException exc = expectThrows(SearchPhaseExecutionException.class, () -> client().prepareSearch("test").setFetchSource(true).storedFields("_none_").get()).         Throwable rootCause = ExceptionsHelper.unwrap(exc, SearchContextException.class).         assertNotNull(rootCause).         assertThat(rootCause.getClass(), equalTo(SearchContextException.class)).         assertThat(rootCause.getMessage(), equalTo("`stored_fields` cannot be disabled if _source is requested")).     }     {         SearchPhaseExecutionException exc = expectThrows(SearchPhaseExecutionException.class, () -> client().prepareSearch("test").storedFields("_none_").setVersion(true).get()).         Throwable rootCause = ExceptionsHelper.unwrap(exc, SearchContextException.class).         assertNotNull(rootCause).         assertThat(rootCause.getClass(), equalTo(SearchContextException.class)).         assertThat(rootCause.getMessage(), equalTo("`stored_fields` cannot be disabled if version is requested")).     }     {         IllegalArgumentException exc = expectThrows(IllegalArgumentException.class, () -> client().prepareSearch("test").storedFields("_none_", "field1").setVersion(true).get()).         assertThat(exc.getMessage(), equalTo("cannot combine _none_ with other fields")).     }     {         IllegalArgumentException exc = expectThrows(IllegalArgumentException.class, () -> client().prepareSearch("test").storedFields("_none_").storedFields("field1").setVersion(true).get()).         assertThat(exc.getMessage(), equalTo("cannot combine _none_ with other fields")).     } }
