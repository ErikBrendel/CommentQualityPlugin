commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public Settings indexSettings() {     return Settings.builder().put(super.indexSettings()).put(recoverySettings()).build(). }
false;protected;0;3;;protected Settings recoverySettings() {     return Settings.Builder.EMPTY_SETTINGS. }
false;protected;0;4;;@Override protected int maximumNumberOfReplicas() {     return 1. }
false;public;0;55;;public void testSimpleRecovery() throws Exception {     assertAcked(prepareCreate("test", 1).execute().actionGet()).     NumShards numShards = getNumShards("test").     client().index(indexRequest("test").type("type1").id("1").source(source("1", "test"), XContentType.JSON)).actionGet().     FlushResponse flushResponse = client().admin().indices().flush(flushRequest("test")).actionGet().     assertThat(flushResponse.getTotalShards(), equalTo(numShards.totalNumShards)).     assertThat(flushResponse.getSuccessfulShards(), equalTo(numShards.numPrimaries)).     assertThat(flushResponse.getFailedShards(), equalTo(0)).     client().index(indexRequest("test").type("type1").id("2").source(source("2", "test"), XContentType.JSON)).actionGet().     RefreshResponse refreshResponse = client().admin().indices().refresh(refreshRequest("test")).actionGet().     assertThat(refreshResponse.getTotalShards(), equalTo(numShards.totalNumShards)).     assertThat(refreshResponse.getSuccessfulShards(), equalTo(numShards.numPrimaries)).     assertThat(refreshResponse.getFailedShards(), equalTo(0)).     allowNodes("test", 2).     logger.info("Running Cluster Health").     ensureGreen().     GetResponse getResult.     for (int i = 0. i < 5. i++) {         getResult = client().get(getRequest("test").type("type1").id("1")).actionGet().         assertThat(getResult.getSourceAsString(), equalTo(source("1", "test"))).         getResult = client().get(getRequest("test").type("type1").id("1")).actionGet().         assertThat(getResult.getSourceAsString(), equalTo(source("1", "test"))).         getResult = client().get(getRequest("test").type("type1").id("2")).actionGet().         assertThat(getResult.getSourceAsString(), equalTo(source("2", "test"))).         getResult = client().get(getRequest("test").type("type1").id("2")).actionGet().         assertThat(getResult.getSourceAsString(), equalTo(source("2", "test"))).     }     // now start another one so we move some primaries     allowNodes("test", 3).     Thread.sleep(200).     logger.info("Running Cluster Health").     ensureGreen().     for (int i = 0. i < 5. i++) {         getResult = client().get(getRequest("test").type("type1").id("1")).actionGet().         assertThat(getResult.getSourceAsString(), equalTo(source("1", "test"))).         getResult = client().get(getRequest("test").type("type1").id("1")).actionGet().         assertThat(getResult.getSourceAsString(), equalTo(source("1", "test"))).         getResult = client().get(getRequest("test").type("type1").id("1")).actionGet().         assertThat(getResult.getSourceAsString(), equalTo(source("1", "test"))).         getResult = client().get(getRequest("test").type("type1").id("2")).actionGet().         assertThat(getResult.getSourceAsString(), equalTo(source("2", "test"))).         getResult = client().get(getRequest("test").type("type1").id("2")).actionGet().         assertThat(getResult.getSourceAsString(), equalTo(source("2", "test"))).         getResult = client().get(getRequest("test").type("type1").id("2")).actionGet().         assertThat(getResult.getSourceAsString(), equalTo(source("2", "test"))).     } }
false;private;2;3;;private String source(String id, String nameValue) {     return "{ \"type1\" : { \"id\" : \"" + id + "\", \"name\" : \"" + nameValue + "\" } }". }
