commented;modifiers;parameterAmount;loc;comment;code
false;public;0;15;;public void testNonNestedQuery() {     for (Version version : VersionUtils.allVersions()) {         // This is a custom query that extends AutomatonQuery and want to make sure the equals method works         assertEquals(Queries.newNonNestedFilter(version), Queries.newNonNestedFilter(version)).         assertEquals(Queries.newNonNestedFilter(version).hashCode(), Queries.newNonNestedFilter(version).hashCode()).         if (version.onOrAfter(Version.V_6_1_0)) {             assertEquals(Queries.newNonNestedFilter(version), new DocValuesFieldExistsQuery(SeqNoFieldMapper.PRIMARY_TERM_NAME)).         } else {             assertEquals(Queries.newNonNestedFilter(version), new BooleanQuery.Builder().add(new MatchAllDocsQuery(), BooleanClause.Occur.FILTER).add(Queries.newNestedFilter(), BooleanClause.Occur.MUST_NOT).build()).         }     } }
false;public;0;11;;public void testIsNegativeQuery() {     assertFalse(Queries.isNegativeQuery(new MatchAllDocsQuery())).     assertFalse(Queries.isNegativeQuery(new BooleanQuery.Builder().build())).     assertFalse(Queries.isNegativeQuery(new BooleanQuery.Builder().add(new TermQuery(new Term("foo", "bar")), Occur.MUST).build())).     assertTrue(Queries.isNegativeQuery(new BooleanQuery.Builder().add(new TermQuery(new Term("foo", "bar")), Occur.MUST_NOT).build())).     assertFalse(Queries.isNegativeQuery(new BooleanQuery.Builder().add(new MatchAllDocsQuery(), Occur.MUST).add(new MatchAllDocsQuery(), Occur.MUST_NOT).build())). }
false;public;0;9;;public void testFixNegativeQuery() {     assertEquals(new BooleanQuery.Builder().add(new MatchAllDocsQuery(), Occur.FILTER).add(new TermQuery(new Term("foo", "bar")), Occur.MUST_NOT).build(), Queries.fixNegativeQueryIfNeeded(new BooleanQuery.Builder().add(new TermQuery(new Term("foo", "bar")), Occur.MUST_NOT).build())). }
