commented;modifiers;parameterAmount;loc;comment;code
false;protected;1;4;;@Override protected ClusterUpdateSettingsResponse doParseInstance(XContentParser parser) {     return ClusterUpdateSettingsResponse.fromXContent(parser). }
false;protected;1;17;;@Override protected ClusterUpdateSettingsResponse mutateInstance(ClusterUpdateSettingsResponse response) {     int i = randomIntBetween(0, 2).     switch(i) {         case 0:             return new ClusterUpdateSettingsResponse(response.isAcknowledged() == false, response.transientSettings, response.persistentSettings).         case 1:             return new ClusterUpdateSettingsResponse(response.isAcknowledged(), mutateSettings(response.transientSettings), response.persistentSettings).         case 2:             return new ClusterUpdateSettingsResponse(response.isAcknowledged(), response.transientSettings, mutateSettings(response.persistentSettings)).         default:             throw new UnsupportedOperationException().     } }
false;private,static;1;16;;private static Settings mutateSettings(Settings settings) {     if (settings.isEmpty()) {         return randomClusterSettings(1, 3).     }     Set<String> allKeys = settings.keySet().     List<String> keysToBeModified = randomSubsetOf(randomIntBetween(1, allKeys.size()), allKeys).     Builder builder = Settings.builder().     for (String key : allKeys) {         String value = settings.get(key).         if (keysToBeModified.contains(key)) {             value += randomAlphaOfLengthBetween(2, 5).         }         builder.put(key, value).     }     return builder.build(). }
false;protected;0;4;;@Override protected Predicate<String> getRandomFieldsExcludeFilter() {     return p -> p.startsWith("transient") || p.startsWith("persistent"). }
false;public,static;2;9;;public static Settings randomClusterSettings(int min, int max) {     int num = randomIntBetween(min, max).     Builder builder = Settings.builder().     for (int i = 0. i < num. i++) {         Setting<?> setting = randomFrom(ClusterSettings.BUILT_IN_CLUSTER_SETTINGS).         builder.put(setting.getKey(), randomAlphaOfLengthBetween(2, 10)).     }     return builder.build(). }
false;protected;0;4;;@Override protected ClusterUpdateSettingsResponse createTestInstance() {     return new ClusterUpdateSettingsResponse(randomBoolean(), randomClusterSettings(0, 2), randomClusterSettings(0, 2)). }
false;protected;0;4;;@Override protected ClusterUpdateSettingsResponse createBlankInstance() {     return new ClusterUpdateSettingsResponse(). }
false;public;0;4;;public void testOldSerialisation() throws IOException {     ClusterUpdateSettingsResponse original = createTestInstance().     assertSerialization(original, VersionUtils.randomVersionBetween(random(), Version.V_6_0_0, Version.V_6_4_0)). }
