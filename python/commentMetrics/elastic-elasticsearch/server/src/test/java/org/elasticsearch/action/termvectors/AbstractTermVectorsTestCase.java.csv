# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractTermVectorsTestCase -> protected TestDoc[] generateTestDocs(String index, TestFieldSetting[] fieldSettings);1524684173;Generate test documentsThe returned documents are already indexed.;protected TestDoc[] generateTestDocs(String index, TestFieldSetting[] fieldSettings) {_        String[] fieldContentOptions = new String[]{"Generating a random permutation of a sequence (such as when shuffling cards).",_                "Selecting a random sample of a population (important in statistical sampling).",_                "Allocating experimental units via random assignment to a treatment or control condition.",_                "Generating random numbers: see Random number generation.",_                "Transforming a data stream (such as when using a scrambler in telecommunications)."}___        String[] contentArray = new String[fieldSettings.length]__        Map<String, Object> docSource = new HashMap<>()__        int totalShards = getNumShards(index).numPrimaries__        TestDoc[] testDocs = new TestDoc[totalShards]__        _        for (int i = 0_ i < totalShards_ i++) {_            docSource.clear()__            for (int j = 0_ j < contentArray.length_ j++) {_                contentArray[j] = fieldContentOptions[randomInt(fieldContentOptions.length - 1)]__                docSource.put(fieldSettings[j].name, contentArray[j])__            }_            final String id = routingKeyForShard(index, i)__            TestDoc doc = new TestDoc(id, fieldSettings, contentArray.clone())__            index(doc.index, doc.type, doc.id, docSource)__            testDocs[i] = doc__        }__        refresh()__        return testDocs___    };generate,test,documents,the,returned,documents,are,already,indexed;protected,test,doc,generate,test,docs,string,index,test,field,setting,field,settings,string,field,content,options,new,string,generating,a,random,permutation,of,a,sequence,such,as,when,shuffling,cards,selecting,a,random,sample,of,a,population,important,in,statistical,sampling,allocating,experimental,units,via,random,assignment,to,a,treatment,or,control,condition,generating,random,numbers,see,random,number,generation,transforming,a,data,stream,such,as,when,using,a,scrambler,in,telecommunications,string,content,array,new,string,field,settings,length,map,string,object,doc,source,new,hash,map,int,total,shards,get,num,shards,index,num,primaries,test,doc,test,docs,new,test,doc,total,shards,for,int,i,0,i,total,shards,i,doc,source,clear,for,int,j,0,j,content,array,length,j,content,array,j,field,content,options,random,int,field,content,options,length,1,doc,source,put,field,settings,j,name,content,array,j,final,string,id,routing,key,for,shard,index,i,test,doc,doc,new,test,doc,id,field,settings,content,array,clone,index,doc,index,doc,type,doc,id,doc,source,test,docs,i,doc,refresh,return,test,docs
AbstractTermVectorsTestCase -> protected TestDoc[] generateTestDocs(String index, TestFieldSetting[] fieldSettings);1531179852;Generate test documentsThe returned documents are already indexed.;protected TestDoc[] generateTestDocs(String index, TestFieldSetting[] fieldSettings) {_        String[] fieldContentOptions = new String[]{"Generating a random permutation of a sequence (such as when shuffling cards).",_                "Selecting a random sample of a population (important in statistical sampling).",_                "Allocating experimental units via random assignment to a treatment or control condition.",_                "Generating random numbers: see Random number generation.",_                "Transforming a data stream (such as when using a scrambler in telecommunications)."}___        String[] contentArray = new String[fieldSettings.length]__        Map<String, Object> docSource = new HashMap<>()__        int totalShards = getNumShards(index).numPrimaries__        TestDoc[] testDocs = new TestDoc[totalShards]__        _        for (int i = 0_ i < totalShards_ i++) {_            docSource.clear()__            for (int j = 0_ j < contentArray.length_ j++) {_                contentArray[j] = fieldContentOptions[randomInt(fieldContentOptions.length - 1)]__                docSource.put(fieldSettings[j].name, contentArray[j])__            }_            final String id = routingKeyForShard(index, i)__            TestDoc doc = new TestDoc(id, fieldSettings, contentArray.clone())__            index(doc.index, doc.type, doc.id, docSource)__            testDocs[i] = doc__        }__        refresh()__        return testDocs___    };generate,test,documents,the,returned,documents,are,already,indexed;protected,test,doc,generate,test,docs,string,index,test,field,setting,field,settings,string,field,content,options,new,string,generating,a,random,permutation,of,a,sequence,such,as,when,shuffling,cards,selecting,a,random,sample,of,a,population,important,in,statistical,sampling,allocating,experimental,units,via,random,assignment,to,a,treatment,or,control,condition,generating,random,numbers,see,random,number,generation,transforming,a,data,stream,such,as,when,using,a,scrambler,in,telecommunications,string,content,array,new,string,field,settings,length,map,string,object,doc,source,new,hash,map,int,total,shards,get,num,shards,index,num,primaries,test,doc,test,docs,new,test,doc,total,shards,for,int,i,0,i,total,shards,i,doc,source,clear,for,int,j,0,j,content,array,length,j,content,array,j,field,content,options,random,int,field,content,options,length,1,doc,source,put,field,settings,j,name,content,array,j,final,string,id,routing,key,for,shard,index,i,test,doc,doc,new,test,doc,id,field,settings,content,array,clone,index,doc,index,doc,type,doc,id,doc,source,test,docs,i,doc,refresh,return,test,docs
AbstractTermVectorsTestCase -> protected TestDoc[] generateTestDocs(String index, TestFieldSetting[] fieldSettings);1538067637;Generate test documentsThe returned documents are already indexed.;protected TestDoc[] generateTestDocs(String index, TestFieldSetting[] fieldSettings) {_        String[] fieldContentOptions = new String[]{"Generating a random permutation of a sequence (such as when shuffling cards).",_                "Selecting a random sample of a population (important in statistical sampling).",_                "Allocating experimental units via random assignment to a treatment or control condition.",_                "Generating random numbers: see Random number generation.",_                "Transforming a data stream (such as when using a scrambler in telecommunications)."}___        String[] contentArray = new String[fieldSettings.length]__        Map<String, Object> docSource = new HashMap<>()__        int totalShards = getNumShards(index).numPrimaries__        TestDoc[] testDocs = new TestDoc[totalShards]__        _        for (int i = 0_ i < totalShards_ i++) {_            docSource.clear()__            for (int j = 0_ j < contentArray.length_ j++) {_                contentArray[j] = fieldContentOptions[randomInt(fieldContentOptions.length - 1)]__                docSource.put(fieldSettings[j].name, contentArray[j])__            }_            final String id = routingKeyForShard(index, i)__            TestDoc doc = new TestDoc(id, fieldSettings, contentArray.clone())__            index(doc.index, doc.type, doc.id, docSource)__            testDocs[i] = doc__        }__        refresh()__        return testDocs___    };generate,test,documents,the,returned,documents,are,already,indexed;protected,test,doc,generate,test,docs,string,index,test,field,setting,field,settings,string,field,content,options,new,string,generating,a,random,permutation,of,a,sequence,such,as,when,shuffling,cards,selecting,a,random,sample,of,a,population,important,in,statistical,sampling,allocating,experimental,units,via,random,assignment,to,a,treatment,or,control,condition,generating,random,numbers,see,random,number,generation,transforming,a,data,stream,such,as,when,using,a,scrambler,in,telecommunications,string,content,array,new,string,field,settings,length,map,string,object,doc,source,new,hash,map,int,total,shards,get,num,shards,index,num,primaries,test,doc,test,docs,new,test,doc,total,shards,for,int,i,0,i,total,shards,i,doc,source,clear,for,int,j,0,j,content,array,length,j,content,array,j,field,content,options,random,int,field,content,options,length,1,doc,source,put,field,settings,j,name,content,array,j,final,string,id,routing,key,for,shard,index,i,test,doc,doc,new,test,doc,id,field,settings,content,array,clone,index,doc,index,doc,type,doc,id,doc,source,test,docs,i,doc,refresh,return,test,docs
AbstractTermVectorsTestCase -> protected TestDoc[] generateTestDocs(String index, TestFieldSetting[] fieldSettings);1542402699;Generate test documentsThe returned documents are already indexed.;protected TestDoc[] generateTestDocs(String index, TestFieldSetting[] fieldSettings) {_        String[] fieldContentOptions = new String[]{"Generating a random permutation of a sequence (such as when shuffling cards).",_                "Selecting a random sample of a population (important in statistical sampling).",_                "Allocating experimental units via random assignment to a treatment or control condition.",_                "Generating random numbers: see Random number generation.",_                "Transforming a data stream (such as when using a scrambler in telecommunications)."}___        String[] contentArray = new String[fieldSettings.length]__        Map<String, Object> docSource = new HashMap<>()__        int totalShards = getNumShards(index).numPrimaries__        TestDoc[] testDocs = new TestDoc[totalShards]__        _        for (int i = 0_ i < totalShards_ i++) {_            docSource.clear()__            for (int j = 0_ j < contentArray.length_ j++) {_                contentArray[j] = fieldContentOptions[randomInt(fieldContentOptions.length - 1)]__                docSource.put(fieldSettings[j].name, contentArray[j])__            }_            final String id = routingKeyForShard(index, i)__            TestDoc doc = new TestDoc(id, fieldSettings, contentArray.clone())__            index(doc.index, doc.type, doc.id, docSource)__            testDocs[i] = doc__        }__        refresh()__        return testDocs___    };generate,test,documents,the,returned,documents,are,already,indexed;protected,test,doc,generate,test,docs,string,index,test,field,setting,field,settings,string,field,content,options,new,string,generating,a,random,permutation,of,a,sequence,such,as,when,shuffling,cards,selecting,a,random,sample,of,a,population,important,in,statistical,sampling,allocating,experimental,units,via,random,assignment,to,a,treatment,or,control,condition,generating,random,numbers,see,random,number,generation,transforming,a,data,stream,such,as,when,using,a,scrambler,in,telecommunications,string,content,array,new,string,field,settings,length,map,string,object,doc,source,new,hash,map,int,total,shards,get,num,shards,index,num,primaries,test,doc,test,docs,new,test,doc,total,shards,for,int,i,0,i,total,shards,i,doc,source,clear,for,int,j,0,j,content,array,length,j,content,array,j,field,content,options,random,int,field,content,options,length,1,doc,source,put,field,settings,j,name,content,array,j,final,string,id,routing,key,for,shard,index,i,test,doc,doc,new,test,doc,id,field,settings,content,array,clone,index,doc,index,doc,type,doc,id,doc,source,test,docs,i,doc,refresh,return,test,docs
