commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;71;;@Override protected Map<String, Function<Map<String, Object>, Object>> pluginScripts() {     Map<String, Function<Map<String, Object>, Object>> scripts = new HashMap<>().     scripts.put("20 - _value", vars -> 20.0d - (double) vars.get("_value")).     scripts.put("_value - 1", vars -> (double) vars.get("_value") - 1).     scripts.put("_value + 1", vars -> (double) vars.get("_value") + 1).     scripts.put("_value * -1", vars -> (double) vars.get("_value") * -1).     scripts.put("_value - dec", vars -> {         double value = (double) vars.get("_value").         int dec = (int) vars.get("dec").         return value - dec.     }).     scripts.put("_value + inc", vars -> {         double value = (double) vars.get("_value").         int inc = (int) vars.get("inc").         return value + inc.     }).     scripts.put("doc['value'].value", vars -> {         Map<?, ?> doc = (Map<?, ?>) vars.get("doc").         return doc.get("value").     }).     scripts.put("doc['value'].value - dec", vars -> {         int dec = (int) vars.get("dec").         Map<?, ?> doc = (Map<?, ?>) vars.get("doc").         ScriptDocValues.Longs value = (ScriptDocValues.Longs) doc.get("value").         return value.getValue() - dec.     }).     scripts.put("doc['value'].value + inc", vars -> {         int inc = (int) vars.get("inc").         Map<?, ?> doc = (Map<?, ?>) vars.get("doc").         ScriptDocValues.Longs value = (ScriptDocValues.Longs) doc.get("value").         return value.getValue() + inc.     }).     scripts.put("doc['values']", vars -> {         Map<?, ?> doc = (Map<?, ?>) vars.get("doc").         return doc.get("values").     }).     scripts.put(DECREMENT_ALL_VALUES.getIdOrCode(), vars -> {         int dec = (int) vars.get("dec").         Map<?, ?> doc = (Map<?, ?>) vars.get("doc").         ScriptDocValues.Longs values = (ScriptDocValues.Longs) doc.get("values").         double[] res = new double[values.size()].         for (int i = 0. i < res.length. i++) {             res[i] = values.get(i) - dec.         }         return res.     }).     scripts.put("[ doc['value'].value, doc['value'].value - dec ]", vars -> {         Long a = ((ScriptDocValues.Longs) scripts.get("doc['value'].value").apply(vars)).getValue().         Long b = (Long) scripts.get("doc['value'].value - dec").apply(vars).         return new Long[] { a, b }.     }).     scripts.put("[ doc['value'].value, doc['value'].value + inc ]", vars -> {         Long a = ((ScriptDocValues.Longs) scripts.get("doc['value'].value").apply(vars)).getValue().         Long b = (Long) scripts.get("doc['value'].value + inc").apply(vars).         return new Long[] { a, b }.     }).     return scripts. }
