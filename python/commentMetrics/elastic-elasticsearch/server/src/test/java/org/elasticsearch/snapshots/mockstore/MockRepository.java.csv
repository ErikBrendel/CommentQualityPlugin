# id;timestamp;commentText;codeText;commentWords;codeWords
MockRepository -> MockBlobStore -> MockBlobContainer -> private void blockExecutionAndFail(final String blobName) throws IOException;1524684173;Blocks an I/O operation on the blob fails and throws an exception when unblocked;private void blockExecutionAndFail(final String blobName) throws IOException {_                logger.info("blocking I/O operation for file [{}] at path [{}]", blobName, path())__                blockExecution()__                throw new IOException("exception after block")__            };blocks,an,i,o,operation,on,the,blob,fails,and,throws,an,exception,when,unblocked;private,void,block,execution,and,fail,final,string,blob,name,throws,ioexception,logger,info,blocking,i,o,operation,for,file,at,path,blob,name,path,block,execution,throw,new,ioexception,exception,after,block
MockRepository -> MockBlobStore -> MockBlobContainer -> private void blockExecutionAndFail(final String blobName) throws IOException;1528211342;Blocks an I/O operation on the blob fails and throws an exception when unblocked;private void blockExecutionAndFail(final String blobName) throws IOException {_                logger.info("blocking I/O operation for file [{}] at path [{}]", blobName, path())__                blockExecution()__                throw new IOException("exception after block")__            };blocks,an,i,o,operation,on,the,blob,fails,and,throws,an,exception,when,unblocked;private,void,block,execution,and,fail,final,string,blob,name,throws,ioexception,logger,info,blocking,i,o,operation,for,file,at,path,blob,name,path,block,execution,throw,new,ioexception,exception,after,block
MockRepository -> MockBlobStore -> MockBlobContainer -> private void blockExecutionAndFail(final String blobName) throws IOException;1528706846;Blocks an I/O operation on the blob fails and throws an exception when unblocked;private void blockExecutionAndFail(final String blobName) throws IOException {_                logger.info("blocking I/O operation for file [{}] at path [{}]", blobName, path())__                blockExecution()__                throw new IOException("exception after block")__            };blocks,an,i,o,operation,on,the,blob,fails,and,throws,an,exception,when,unblocked;private,void,block,execution,and,fail,final,string,blob,name,throws,ioexception,logger,info,blocking,i,o,operation,for,file,at,path,blob,name,path,block,execution,throw,new,ioexception,exception,after,block
MockRepository -> MockBlobStore -> MockBlobContainer -> private void blockExecutionAndFail(final String blobName) throws IOException;1531179852;Blocks an I/O operation on the blob fails and throws an exception when unblocked;private void blockExecutionAndFail(final String blobName) throws IOException {_                logger.info("blocking I/O operation for file [{}] at path [{}]", blobName, path())__                blockExecution()__                throw new IOException("exception after block")__            };blocks,an,i,o,operation,on,the,blob,fails,and,throws,an,exception,when,unblocked;private,void,block,execution,and,fail,final,string,blob,name,throws,ioexception,logger,info,blocking,i,o,operation,for,file,at,path,blob,name,path,block,execution,throw,new,ioexception,exception,after,block
MockRepository -> MockBlobStore -> MockBlobContainer -> private void blockExecutionAndFail(final String blobName) throws IOException;1531729807;Blocks an I/O operation on the blob fails and throws an exception when unblocked;private void blockExecutionAndFail(final String blobName) throws IOException {_                logger.info("blocking I/O operation for file [{}] at path [{}]", blobName, path())__                blockExecution()__                throw new IOException("exception after block")__            };blocks,an,i,o,operation,on,the,blob,fails,and,throws,an,exception,when,unblocked;private,void,block,execution,and,fail,final,string,blob,name,throws,ioexception,logger,info,blocking,i,o,operation,for,file,at,path,blob,name,path,block,execution,throw,new,ioexception,exception,after,block
MockRepository -> MockBlobStore -> MockBlobContainer -> private void blockExecutionAndFail(final String blobName) throws IOException;1542646292;Blocks an I/O operation on the blob fails and throws an exception when unblocked;private void blockExecutionAndFail(final String blobName) throws IOException {_                logger.info("blocking I/O operation for file [{}] at path [{}]", blobName, path())__                blockExecution()__                throw new IOException("exception after block")__            };blocks,an,i,o,operation,on,the,blob,fails,and,throws,an,exception,when,unblocked;private,void,block,execution,and,fail,final,string,blob,name,throws,ioexception,logger,info,blocking,i,o,operation,for,file,at,path,blob,name,path,block,execution,throw,new,ioexception,exception,after,block
MockRepository -> MockBlobStore -> MockBlobContainer -> private void blockExecutionAndFail(final String blobName) throws IOException;1545215361;Blocks an I/O operation on the blob fails and throws an exception when unblocked;private void blockExecutionAndFail(final String blobName) throws IOException {_                logger.info("blocking I/O operation for file [{}] at path [{}]", blobName, path())__                blockExecution()__                throw new IOException("exception after block")__            };blocks,an,i,o,operation,on,the,blob,fails,and,throws,an,exception,when,unblocked;private,void,block,execution,and,fail,final,string,blob,name,throws,ioexception,logger,info,blocking,i,o,operation,for,file,at,path,blob,name,path,block,execution,throw,new,ioexception,exception,after,block
MockRepository -> MockBlobStore -> MockBlobContainer -> private void blockExecutionAndFail(final String blobName) throws IOException;1546871063;Blocks an I/O operation on the blob fails and throws an exception when unblocked;private void blockExecutionAndFail(final String blobName) throws IOException {_                logger.info("blocking I/O operation for file [{}] at path [{}]", blobName, path())__                blockExecution()__                throw new IOException("exception after block")__            };blocks,an,i,o,operation,on,the,blob,fails,and,throws,an,exception,when,unblocked;private,void,block,execution,and,fail,final,string,blob,name,throws,ioexception,logger,info,blocking,i,o,operation,for,file,at,path,blob,name,path,block,execution,throw,new,ioexception,exception,after,block
