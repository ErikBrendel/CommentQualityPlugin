commented;modifiers;parameterAmount;loc;comment;code
false;public;0;38;;public void testLoadGlobal_neverCacheIfFieldIsMissing() throws Exception {     Directory dir = newDirectory().     IndexWriterConfig iwc = new IndexWriterConfig(null).     iwc.setMergePolicy(NoMergePolicy.INSTANCE).     IndexWriter iw = new IndexWriter(dir, iwc).     long numDocs = scaledRandomIntBetween(32, 128).     for (int i = 1. i <= numDocs. i++) {         Document doc = new Document().         doc.add(new SortedSetDocValuesField("field1", new BytesRef(String.valueOf(i)))).         doc.add(new StringField("field2", String.valueOf(i), Field.Store.NO)).         iw.addDocument(doc).         if (i % 24 == 0) {             iw.commit().         }     }     iw.close().     DirectoryReader ir = ElasticsearchDirectoryReader.wrap(DirectoryReader.open(dir), new ShardId("_index", "_na_", 0)).     DummyAccountingFieldDataCache fieldDataCache = new DummyAccountingFieldDataCache().     // Testing SortedSetDVOrdinalsIndexFieldData:     SortedSetDVOrdinalsIndexFieldData sortedSetDVOrdinalsIndexFieldData = createSortedDV("field1", fieldDataCache).     sortedSetDVOrdinalsIndexFieldData.loadGlobal(ir).     assertThat(fieldDataCache.cachedGlobally, equalTo(1)).     sortedSetDVOrdinalsIndexFieldData.loadGlobal(new FieldMaskingReader("field1", ir)).     assertThat(fieldDataCache.cachedGlobally, equalTo(1)).     // Testing PagedBytesIndexFieldData     PagedBytesIndexFieldData pagedBytesIndexFieldData = createPagedBytes("field2", fieldDataCache).     pagedBytesIndexFieldData.loadGlobal(ir).     assertThat(fieldDataCache.cachedGlobally, equalTo(2)).     pagedBytesIndexFieldData.loadGlobal(new FieldMaskingReader("field2", ir)).     assertThat(fieldDataCache.cachedGlobally, equalTo(2)).     ir.close().     dir.close(). }
false;private;2;4;;private SortedSetDVOrdinalsIndexFieldData createSortedDV(String fieldName, IndexFieldDataCache indexFieldDataCache) {     return new SortedSetDVOrdinalsIndexFieldData(createIndexSettings(), indexFieldDataCache, fieldName, new NoneCircuitBreakerService(), AbstractAtomicOrdinalsFieldData.DEFAULT_SCRIPT_FUNCTION). }
false;private;2;6;;private PagedBytesIndexFieldData createPagedBytes(String fieldName, IndexFieldDataCache indexFieldDataCache) {     return new PagedBytesIndexFieldData(createIndexSettings(), fieldName, indexFieldDataCache, new NoneCircuitBreakerService(), TextFieldMapper.Defaults.FIELDDATA_MIN_FREQUENCY, TextFieldMapper.Defaults.FIELDDATA_MAX_FREQUENCY, TextFieldMapper.Defaults.FIELDDATA_MIN_SEGMENT_SIZE). }
false;private;0;10;;private IndexSettings createIndexSettings() {     Settings settings = Settings.EMPTY.     IndexMetaData indexMetaData = IndexMetaData.builder("_name").settings(Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT)).numberOfShards(1).numberOfReplicas(0).creationDate(System.currentTimeMillis()).build().     return new IndexSettings(indexMetaData, settings). }
false;public;2;5;;@Override public <FD extends AtomicFieldData, IFD extends IndexFieldData<FD>> FD load(LeafReaderContext context, IFD indexFieldData) throws Exception {     return indexFieldData.loadDirect(context). }
false;public;2;6;;@Override public <FD extends AtomicFieldData, IFD extends IndexFieldData.Global<FD>> IFD load(DirectoryReader indexReader, IFD indexFieldData) throws Exception {     cachedGlobally++.     return (IFD) indexFieldData.localGlobalDirect(indexReader). }
false;public;0;3;;@Override public void clear() { }
false;public;1;3;;@Override public void clear(String fieldName) { }
