commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected boolean forbidPrivateIndexSettings() {     return false. }
false;public;0;28;;public void testIndexMetaDataUpdateDoesNotLoseDefaultMapper() throws IOException {     final IndexService indexService = createIndex("test", Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED, Version.V_6_3_0).build()).     try (XContentBuilder builder = JsonXContent.contentBuilder()) {         builder.startObject().         {             builder.startObject(MapperService.DEFAULT_MAPPING).             {                 builder.field("date_detection", false).             }             builder.endObject().         }         builder.endObject().         final PutMappingRequest putMappingRequest = new PutMappingRequest().         putMappingRequest.indices("test").         putMappingRequest.type(MapperService.DEFAULT_MAPPING).         putMappingRequest.source(builder).         client().admin().indices().preparePutMapping("test").setType(MapperService.DEFAULT_MAPPING).setSource(builder).get().     }     assertNotNull(indexService.mapperService().documentMapper(MapperService.DEFAULT_MAPPING)).     final Settings zeroReplicasSettings = Settings.builder().put(IndexMetaData.SETTING_NUMBER_OF_REPLICAS, 0).build().     client().admin().indices().prepareUpdateSettings("test").setSettings(zeroReplicasSettings).get().     /*          * This assertion is a guard against a previous bug that would lose the default mapper when applying a metadata update that did not          * update the default mapping.          */     assertNotNull(indexService.mapperService().documentMapper(MapperService.DEFAULT_MAPPING)). }
false;public;0;19;;public void testDefaultMappingIsDeprecatedOn6() throws IOException {     final Settings settings = Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED, Version.V_6_3_0).build().     final String mapping.     try (XContentBuilder defaultMapping = XContentFactory.jsonBuilder()) {         defaultMapping.startObject().         {             defaultMapping.startObject("_default_").             {             }             defaultMapping.endObject().         }         defaultMapping.endObject().         mapping = Strings.toString(defaultMapping).     }     final MapperService mapperService = createIndex("test", settings).mapperService().     mapperService.merge("_default_", new CompressedXContent(mapping), MapperService.MergeReason.MAPPING_UPDATE).     assertWarnings("[_default_] mapping is deprecated since it is not useful anymore now that indexes cannot have more than one type"). }
