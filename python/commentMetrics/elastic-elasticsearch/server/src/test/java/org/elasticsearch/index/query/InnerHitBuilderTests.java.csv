# id;timestamp;commentText;codeText;commentWords;codeWords
InnerHitBuilderTests -> public void testSerializationOrder() throws Exception;1524684173;Test that if we serialize and deserialize an object, further_serialization leads to identical bytes representation.__This is necessary to ensure because we use the serialized BytesReference_of this builder as part of the cacheKey in_{@link ShardSearchLocalRequest} (via_{@link SearchSourceBuilder#collapse(org.elasticsearch.search.collapse.CollapseBuilder)});public void testSerializationOrder() throws Exception {_        for (int runs = 0_ runs < NUMBER_OF_TESTBUILDERS_ runs++) {_            InnerHitBuilder original = randomInnerHits()__            InnerHitBuilder deserialized = serializedCopy(original)__            assertEquals(deserialized, original)__            assertEquals(deserialized.hashCode(), original.hashCode())__            assertNotSame(deserialized, original)__            BytesStreamOutput out1 = new BytesStreamOutput()__            BytesStreamOutput out2 = new BytesStreamOutput()__            original.writeTo(out1)__            deserialized.writeTo(out2)__            assertEquals(out1.bytes(), out2.bytes())__        }_    };test,that,if,we,serialize,and,deserialize,an,object,further,serialization,leads,to,identical,bytes,representation,this,is,necessary,to,ensure,because,we,use,the,serialized,bytes,reference,of,this,builder,as,part,of,the,cache,key,in,link,shard,search,local,request,via,link,search,source,builder,collapse,org,elasticsearch,search,collapse,collapse,builder;public,void,test,serialization,order,throws,exception,for,int,runs,0,runs,runs,inner,hit,builder,original,random,inner,hits,inner,hit,builder,deserialized,serialized,copy,original,assert,equals,deserialized,original,assert,equals,deserialized,hash,code,original,hash,code,assert,not,same,deserialized,original,bytes,stream,output,out1,new,bytes,stream,output,bytes,stream,output,out2,new,bytes,stream,output,original,write,to,out1,deserialized,write,to,out2,assert,equals,out1,bytes,out2,bytes
InnerHitBuilderTests -> public void testSerializationOrder() throws Exception;1527096592;Test that if we serialize and deserialize an object, further_serialization leads to identical bytes representation.__This is necessary to ensure because we use the serialized BytesReference_of this builder as part of the cacheKey in_{@link ShardSearchLocalRequest} (via_{@link SearchSourceBuilder#collapse(org.elasticsearch.search.collapse.CollapseBuilder)});public void testSerializationOrder() throws Exception {_        for (int runs = 0_ runs < NUMBER_OF_TESTBUILDERS_ runs++) {_            InnerHitBuilder original = randomInnerHits()__            InnerHitBuilder deserialized = serializedCopy(original)__            assertEquals(deserialized, original)__            assertEquals(deserialized.hashCode(), original.hashCode())__            assertNotSame(deserialized, original)__            BytesStreamOutput out1 = new BytesStreamOutput()__            BytesStreamOutput out2 = new BytesStreamOutput()__            original.writeTo(out1)__            deserialized.writeTo(out2)__            assertEquals(out1.bytes(), out2.bytes())__        }_    };test,that,if,we,serialize,and,deserialize,an,object,further,serialization,leads,to,identical,bytes,representation,this,is,necessary,to,ensure,because,we,use,the,serialized,bytes,reference,of,this,builder,as,part,of,the,cache,key,in,link,shard,search,local,request,via,link,search,source,builder,collapse,org,elasticsearch,search,collapse,collapse,builder;public,void,test,serialization,order,throws,exception,for,int,runs,0,runs,runs,inner,hit,builder,original,random,inner,hits,inner,hit,builder,deserialized,serialized,copy,original,assert,equals,deserialized,original,assert,equals,deserialized,hash,code,original,hash,code,assert,not,same,deserialized,original,bytes,stream,output,out1,new,bytes,stream,output,bytes,stream,output,out2,new,bytes,stream,output,original,write,to,out1,deserialized,write,to,out2,assert,equals,out1,bytes,out2,bytes
InnerHitBuilderTests -> public void testSerializationOrder() throws Exception;1529916084;Test that if we serialize and deserialize an object, further_serialization leads to identical bytes representation.__This is necessary to ensure because we use the serialized BytesReference_of this builder as part of the cacheKey in_{@link ShardSearchLocalRequest} (via_{@link SearchSourceBuilder#collapse(org.elasticsearch.search.collapse.CollapseBuilder)});public void testSerializationOrder() throws Exception {_        for (int runs = 0_ runs < NUMBER_OF_TESTBUILDERS_ runs++) {_            InnerHitBuilder original = randomInnerHits()__            InnerHitBuilder deserialized = serializedCopy(original)__            assertEquals(deserialized, original)__            assertEquals(deserialized.hashCode(), original.hashCode())__            assertNotSame(deserialized, original)__            BytesStreamOutput out1 = new BytesStreamOutput()__            BytesStreamOutput out2 = new BytesStreamOutput()__            original.writeTo(out1)__            deserialized.writeTo(out2)__            assertEquals(out1.bytes(), out2.bytes())__        }_    };test,that,if,we,serialize,and,deserialize,an,object,further,serialization,leads,to,identical,bytes,representation,this,is,necessary,to,ensure,because,we,use,the,serialized,bytes,reference,of,this,builder,as,part,of,the,cache,key,in,link,shard,search,local,request,via,link,search,source,builder,collapse,org,elasticsearch,search,collapse,collapse,builder;public,void,test,serialization,order,throws,exception,for,int,runs,0,runs,runs,inner,hit,builder,original,random,inner,hits,inner,hit,builder,deserialized,serialized,copy,original,assert,equals,deserialized,original,assert,equals,deserialized,hash,code,original,hash,code,assert,not,same,deserialized,original,bytes,stream,output,out1,new,bytes,stream,output,bytes,stream,output,out2,new,bytes,stream,output,original,write,to,out1,deserialized,write,to,out2,assert,equals,out1,bytes,out2,bytes
InnerHitBuilderTests -> public void testSerializationOrder() throws Exception;1544173032;Test that if we serialize and deserialize an object, further_serialization leads to identical bytes representation.__This is necessary to ensure because we use the serialized BytesReference_of this builder as part of the cacheKey in_{@link ShardSearchLocalRequest} (via_{@link SearchSourceBuilder#collapse(org.elasticsearch.search.collapse.CollapseBuilder)});public void testSerializationOrder() throws Exception {_        for (int runs = 0_ runs < NUMBER_OF_TESTBUILDERS_ runs++) {_            InnerHitBuilder original = randomInnerHits()__            InnerHitBuilder deserialized = serializedCopy(original)__            assertEquals(deserialized, original)__            assertEquals(deserialized.hashCode(), original.hashCode())__            assertNotSame(deserialized, original)__            BytesStreamOutput out1 = new BytesStreamOutput()__            BytesStreamOutput out2 = new BytesStreamOutput()__            original.writeTo(out1)__            deserialized.writeTo(out2)__            assertEquals(out1.bytes(), out2.bytes())__        }_    };test,that,if,we,serialize,and,deserialize,an,object,further,serialization,leads,to,identical,bytes,representation,this,is,necessary,to,ensure,because,we,use,the,serialized,bytes,reference,of,this,builder,as,part,of,the,cache,key,in,link,shard,search,local,request,via,link,search,source,builder,collapse,org,elasticsearch,search,collapse,collapse,builder;public,void,test,serialization,order,throws,exception,for,int,runs,0,runs,runs,inner,hit,builder,original,random,inner,hits,inner,hit,builder,deserialized,serialized,copy,original,assert,equals,deserialized,original,assert,equals,deserialized,hash,code,original,hash,code,assert,not,same,deserialized,original,bytes,stream,output,out1,new,bytes,stream,output,bytes,stream,output,out2,new,bytes,stream,output,original,write,to,out1,deserialized,write,to,out2,assert,equals,out1,bytes,out2,bytes
InnerHitBuilderTests -> public void testSerializationOrder() throws Exception;1548230518;Test that if we serialize and deserialize an object, further_serialization leads to identical bytes representation.__This is necessary to ensure because we use the serialized BytesReference_of this builder as part of the cacheKey in_{@link ShardSearchLocalRequest} (via_{@link SearchSourceBuilder#collapse(org.elasticsearch.search.collapse.CollapseBuilder)});public void testSerializationOrder() throws Exception {_        for (int runs = 0_ runs < NUMBER_OF_TESTBUILDERS_ runs++) {_            InnerHitBuilder original = randomInnerHits()__            InnerHitBuilder deserialized = serializedCopy(original)__            assertEquals(deserialized, original)__            assertEquals(deserialized.hashCode(), original.hashCode())__            assertNotSame(deserialized, original)__            BytesStreamOutput out1 = new BytesStreamOutput()__            BytesStreamOutput out2 = new BytesStreamOutput()__            original.writeTo(out1)__            deserialized.writeTo(out2)__            assertEquals(out1.bytes(), out2.bytes())__        }_    };test,that,if,we,serialize,and,deserialize,an,object,further,serialization,leads,to,identical,bytes,representation,this,is,necessary,to,ensure,because,we,use,the,serialized,bytes,reference,of,this,builder,as,part,of,the,cache,key,in,link,shard,search,local,request,via,link,search,source,builder,collapse,org,elasticsearch,search,collapse,collapse,builder;public,void,test,serialization,order,throws,exception,for,int,runs,0,runs,runs,inner,hit,builder,original,random,inner,hits,inner,hit,builder,deserialized,serialized,copy,original,assert,equals,deserialized,original,assert,equals,deserialized,hash,code,original,hash,code,assert,not,same,deserialized,original,bytes,stream,output,out1,new,bytes,stream,output,bytes,stream,output,out2,new,bytes,stream,output,original,write,to,out1,deserialized,write,to,out2,assert,equals,out1,bytes,out2,bytes
InnerHitBuilderTests -> public void testSerializationOrder() throws Exception;1548840711;Test that if we serialize and deserialize an object, further_serialization leads to identical bytes representation.__This is necessary to ensure because we use the serialized BytesReference_of this builder as part of the cacheKey in_{@link ShardSearchLocalRequest} (via_{@link SearchSourceBuilder#collapse(org.elasticsearch.search.collapse.CollapseBuilder)});public void testSerializationOrder() throws Exception {_        for (int runs = 0_ runs < NUMBER_OF_TESTBUILDERS_ runs++) {_            InnerHitBuilder original = randomInnerHits()__            InnerHitBuilder deserialized = serializedCopy(original)__            assertEquals(deserialized, original)__            assertEquals(deserialized.hashCode(), original.hashCode())__            assertNotSame(deserialized, original)__            BytesStreamOutput out1 = new BytesStreamOutput()__            BytesStreamOutput out2 = new BytesStreamOutput()__            original.writeTo(out1)__            deserialized.writeTo(out2)__            assertEquals(out1.bytes(), out2.bytes())__        }_    };test,that,if,we,serialize,and,deserialize,an,object,further,serialization,leads,to,identical,bytes,representation,this,is,necessary,to,ensure,because,we,use,the,serialized,bytes,reference,of,this,builder,as,part,of,the,cache,key,in,link,shard,search,local,request,via,link,search,source,builder,collapse,org,elasticsearch,search,collapse,collapse,builder;public,void,test,serialization,order,throws,exception,for,int,runs,0,runs,runs,inner,hit,builder,original,random,inner,hits,inner,hit,builder,deserialized,serialized,copy,original,assert,equals,deserialized,original,assert,equals,deserialized,hash,code,original,hash,code,assert,not,same,deserialized,original,bytes,stream,output,out1,new,bytes,stream,output,bytes,stream,output,out2,new,bytes,stream,output,original,write,to,out1,deserialized,write,to,out2,assert,equals,out1,bytes,out2,bytes
