commented;modifiers;parameterAmount;loc;comment;code
false;public;1;5;;@Override public void onResponse(Void aVoid) {     assertEquals("bar", threadContext.getHeader("foo")).     assertNull(threadContext.getHeader("not empty")). }
false;public;1;4;;@Override public void onFailure(Exception e) {     throw new RuntimeException("onFailure shouldn't be called", e). }
false;public;0;37;;public void testOriginalContextIsPreservedAfterOnResponse() throws IOException {     try (ThreadContext threadContext = new ThreadContext(Settings.EMPTY)) {         final boolean nonEmptyContext = randomBoolean().         if (nonEmptyContext) {             threadContext.putHeader("not empty", "value").         }         final ContextPreservingActionListener<Void> actionListener.         try (ThreadContext.StoredContext ignore = threadContext.stashContext()) {             threadContext.putHeader("foo", "bar").             final ActionListener<Void> delegate = new ActionListener<Void>() {                  @Override                 public void onResponse(Void aVoid) {                     assertEquals("bar", threadContext.getHeader("foo")).                     assertNull(threadContext.getHeader("not empty")).                 }                  @Override                 public void onFailure(Exception e) {                     throw new RuntimeException("onFailure shouldn't be called", e).                 }             }.             if (randomBoolean()) {                 actionListener = new ContextPreservingActionListener<>(threadContext.newRestorableContext(true), delegate).             } else {                 actionListener = ContextPreservingActionListener.wrapPreservingContext(delegate, threadContext).             }         }         assertNull(threadContext.getHeader("foo")).         assertEquals(nonEmptyContext ? "value" : null, threadContext.getHeader("not empty")).         actionListener.onResponse(null).         assertNull(threadContext.getHeader("foo")).         assertEquals(nonEmptyContext ? "value" : null, threadContext.getHeader("not empty")).     } }
false;public;1;4;;@Override public void onResponse(Void aVoid) {     throw new RuntimeException("onResponse shouldn't be called"). }
false;public;1;5;;@Override public void onFailure(Exception e) {     assertEquals("bar", threadContext.getHeader("foo")).     assertNull(threadContext.getHeader("not empty")). }
false;public;0;39;;public void testOriginalContextIsPreservedAfterOnFailure() throws Exception {     try (ThreadContext threadContext = new ThreadContext(Settings.EMPTY)) {         final boolean nonEmptyContext = randomBoolean().         if (nonEmptyContext) {             threadContext.putHeader("not empty", "value").         }         final ContextPreservingActionListener<Void> actionListener.         try (ThreadContext.StoredContext ignore = threadContext.stashContext()) {             threadContext.putHeader("foo", "bar").             final ActionListener<Void> delegate = new ActionListener<Void>() {                  @Override                 public void onResponse(Void aVoid) {                     throw new RuntimeException("onResponse shouldn't be called").                 }                  @Override                 public void onFailure(Exception e) {                     assertEquals("bar", threadContext.getHeader("foo")).                     assertNull(threadContext.getHeader("not empty")).                 }             }.             if (randomBoolean()) {                 actionListener = new ContextPreservingActionListener<>(threadContext.newRestorableContext(true), delegate).             } else {                 actionListener = ContextPreservingActionListener.wrapPreservingContext(delegate, threadContext).             }         }         assertNull(threadContext.getHeader("foo")).         assertEquals(nonEmptyContext ? "value" : null, threadContext.getHeader("not empty")).         actionListener.onFailure(null).         assertNull(threadContext.getHeader("foo")).         assertEquals(nonEmptyContext ? "value" : null, threadContext.getHeader("not empty")).     } }
false;public;1;6;;@Override public void onResponse(Void aVoid) {     assertEquals("bar", threadContext.getHeader("foo")).     assertNull(threadContext.getHeader("not empty")).     throw new RuntimeException("onResponse called"). }
false;public;1;6;;@Override public void onFailure(Exception e) {     assertEquals("bar", threadContext.getHeader("foo")).     assertNull(threadContext.getHeader("not empty")).     throw new RuntimeException("onFailure called"). }
false;public;0;48;;public void testOriginalContextIsWhenListenerThrows() throws Exception {     try (ThreadContext threadContext = new ThreadContext(Settings.EMPTY)) {         final boolean nonEmptyContext = randomBoolean().         if (nonEmptyContext) {             threadContext.putHeader("not empty", "value").         }         final ContextPreservingActionListener<Void> actionListener.         try (ThreadContext.StoredContext ignore = threadContext.stashContext()) {             threadContext.putHeader("foo", "bar").             final ActionListener<Void> delegate = new ActionListener<Void>() {                  @Override                 public void onResponse(Void aVoid) {                     assertEquals("bar", threadContext.getHeader("foo")).                     assertNull(threadContext.getHeader("not empty")).                     throw new RuntimeException("onResponse called").                 }                  @Override                 public void onFailure(Exception e) {                     assertEquals("bar", threadContext.getHeader("foo")).                     assertNull(threadContext.getHeader("not empty")).                     throw new RuntimeException("onFailure called").                 }             }.             if (randomBoolean()) {                 actionListener = new ContextPreservingActionListener<>(threadContext.newRestorableContext(true), delegate).             } else {                 actionListener = ContextPreservingActionListener.wrapPreservingContext(delegate, threadContext).             }         }         assertNull(threadContext.getHeader("foo")).         assertEquals(nonEmptyContext ? "value" : null, threadContext.getHeader("not empty")).         RuntimeException e = expectThrows(RuntimeException.class, () -> actionListener.onResponse(null)).         assertEquals("onResponse called", e.getMessage()).         assertNull(threadContext.getHeader("foo")).         assertEquals(nonEmptyContext ? "value" : null, threadContext.getHeader("not empty")).         e = expectThrows(RuntimeException.class, () -> actionListener.onFailure(null)).         assertEquals("onFailure called", e.getMessage()).         assertNull(threadContext.getHeader("foo")).         assertEquals(nonEmptyContext ? "value" : null, threadContext.getHeader("not empty")).     } }
