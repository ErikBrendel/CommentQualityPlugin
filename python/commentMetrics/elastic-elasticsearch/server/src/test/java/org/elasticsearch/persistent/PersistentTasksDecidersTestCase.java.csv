# id;timestamp;commentText;codeText;commentWords;codeWords
PersistentTasksDecidersTestCase -> protected static void assertPersistentTasks(final long nbTasks,                                               final ClusterState clusterState,                                               final Predicate<PersistentTasksCustomMetaData.PersistentTask> predicate);1524684173;Asserts that the cluster state contains nbTasks tasks that verify the given predicate *;protected static void assertPersistentTasks(final long nbTasks,_                                              final ClusterState clusterState,_                                              final Predicate<PersistentTasksCustomMetaData.PersistentTask> predicate) {_        PersistentTasksCustomMetaData tasks = clusterState.metaData().custom(PersistentTasksCustomMetaData.TYPE)__        assertNotNull("Persistent tasks must be not null", tasks)__        assertEquals(nbTasks, tasks.tasks().stream().filter(predicate).count())__    };asserts,that,the,cluster,state,contains,nb,tasks,tasks,that,verify,the,given,predicate;protected,static,void,assert,persistent,tasks,final,long,nb,tasks,final,cluster,state,cluster,state,final,predicate,persistent,tasks,custom,meta,data,persistent,task,predicate,persistent,tasks,custom,meta,data,tasks,cluster,state,meta,data,custom,persistent,tasks,custom,meta,data,type,assert,not,null,persistent,tasks,must,be,not,null,tasks,assert,equals,nb,tasks,tasks,tasks,stream,filter,predicate,count
PersistentTasksDecidersTestCase -> protected static void assertPersistentTasks(final long nbTasks,                                               final ClusterState clusterState,                                               final Predicate<PersistentTasksCustomMetaData.PersistentTask> predicate);1529076503;Asserts that the cluster state contains nbTasks tasks that verify the given predicate *;protected static void assertPersistentTasks(final long nbTasks,_                                              final ClusterState clusterState,_                                              final Predicate<PersistentTasksCustomMetaData.PersistentTask> predicate) {_        PersistentTasksCustomMetaData tasks = clusterState.metaData().custom(PersistentTasksCustomMetaData.TYPE)__        assertNotNull("Persistent tasks must be not null", tasks)__        assertEquals(nbTasks, tasks.tasks().stream().filter(predicate).count())__    };asserts,that,the,cluster,state,contains,nb,tasks,tasks,that,verify,the,given,predicate;protected,static,void,assert,persistent,tasks,final,long,nb,tasks,final,cluster,state,cluster,state,final,predicate,persistent,tasks,custom,meta,data,persistent,task,predicate,persistent,tasks,custom,meta,data,tasks,cluster,state,meta,data,custom,persistent,tasks,custom,meta,data,type,assert,not,null,persistent,tasks,must,be,not,null,tasks,assert,equals,nb,tasks,tasks,tasks,stream,filter,predicate,count
PersistentTasksDecidersTestCase -> protected static void assertPersistentTasks(final long nbTasks,                                               final ClusterState clusterState,                                               final Predicate<PersistentTasksCustomMetaData.PersistentTask> predicate);1541092382;Asserts that the cluster state contains nbTasks tasks that verify the given predicate *;protected static void assertPersistentTasks(final long nbTasks,_                                              final ClusterState clusterState,_                                              final Predicate<PersistentTasksCustomMetaData.PersistentTask> predicate) {_        PersistentTasksCustomMetaData tasks = clusterState.metaData().custom(PersistentTasksCustomMetaData.TYPE)__        assertNotNull("Persistent tasks must be not null", tasks)__        assertEquals(nbTasks, tasks.tasks().stream().filter(predicate).count())__    };asserts,that,the,cluster,state,contains,nb,tasks,tasks,that,verify,the,given,predicate;protected,static,void,assert,persistent,tasks,final,long,nb,tasks,final,cluster,state,cluster,state,final,predicate,persistent,tasks,custom,meta,data,persistent,task,predicate,persistent,tasks,custom,meta,data,tasks,cluster,state,meta,data,custom,persistent,tasks,custom,meta,data,type,assert,not,null,persistent,tasks,must,be,not,null,tasks,assert,equals,nb,tasks,tasks,tasks,stream,filter,predicate,count
PersistentTasksDecidersTestCase -> protected static void assertPersistentTasks(final long nbTasks,                                               final ClusterState clusterState,                                               final Predicate<PersistentTasksCustomMetaData.PersistentTask> predicate);1544692527;Asserts that the cluster state contains nbTasks tasks that verify the given predicate *;protected static void assertPersistentTasks(final long nbTasks,_                                              final ClusterState clusterState,_                                              final Predicate<PersistentTasksCustomMetaData.PersistentTask> predicate) {_        PersistentTasksCustomMetaData tasks = clusterState.metaData().custom(PersistentTasksCustomMetaData.TYPE)__        assertNotNull("Persistent tasks must be not null", tasks)__        assertEquals(nbTasks, tasks.tasks().stream().filter(predicate).count())__    };asserts,that,the,cluster,state,contains,nb,tasks,tasks,that,verify,the,given,predicate;protected,static,void,assert,persistent,tasks,final,long,nb,tasks,final,cluster,state,cluster,state,final,predicate,persistent,tasks,custom,meta,data,persistent,task,predicate,persistent,tasks,custom,meta,data,tasks,cluster,state,meta,data,custom,persistent,tasks,custom,meta,data,type,assert,not,null,persistent,tasks,must,be,not,null,tasks,assert,equals,nb,tasks,tasks,tasks,stream,filter,predicate,count
PersistentTasksDecidersTestCase -> protected static void assertNbAssignedTasks(final long nbTasks, final ClusterState clusterState);1524684173;Asserts that the given cluster state contains nbTasks tasks that are assigned *;protected static void assertNbAssignedTasks(final long nbTasks, final ClusterState clusterState) {_        assertPersistentTasks(nbTasks, clusterState, PersistentTasksCustomMetaData.PersistentTask::isAssigned)__    };asserts,that,the,given,cluster,state,contains,nb,tasks,tasks,that,are,assigned;protected,static,void,assert,nb,assigned,tasks,final,long,nb,tasks,final,cluster,state,cluster,state,assert,persistent,tasks,nb,tasks,cluster,state,persistent,tasks,custom,meta,data,persistent,task,is,assigned
PersistentTasksDecidersTestCase -> protected static void assertNbAssignedTasks(final long nbTasks, final ClusterState clusterState);1529076503;Asserts that the given cluster state contains nbTasks tasks that are assigned *;protected static void assertNbAssignedTasks(final long nbTasks, final ClusterState clusterState) {_        assertPersistentTasks(nbTasks, clusterState, PersistentTasksCustomMetaData.PersistentTask::isAssigned)__    };asserts,that,the,given,cluster,state,contains,nb,tasks,tasks,that,are,assigned;protected,static,void,assert,nb,assigned,tasks,final,long,nb,tasks,final,cluster,state,cluster,state,assert,persistent,tasks,nb,tasks,cluster,state,persistent,tasks,custom,meta,data,persistent,task,is,assigned
PersistentTasksDecidersTestCase -> protected static void assertNbAssignedTasks(final long nbTasks, final ClusterState clusterState);1541092382;Asserts that the given cluster state contains nbTasks tasks that are assigned *;protected static void assertNbAssignedTasks(final long nbTasks, final ClusterState clusterState) {_        assertPersistentTasks(nbTasks, clusterState, PersistentTasksCustomMetaData.PersistentTask::isAssigned)__    };asserts,that,the,given,cluster,state,contains,nb,tasks,tasks,that,are,assigned;protected,static,void,assert,nb,assigned,tasks,final,long,nb,tasks,final,cluster,state,cluster,state,assert,persistent,tasks,nb,tasks,cluster,state,persistent,tasks,custom,meta,data,persistent,task,is,assigned
PersistentTasksDecidersTestCase -> protected static void assertNbAssignedTasks(final long nbTasks, final ClusterState clusterState);1544692527;Asserts that the given cluster state contains nbTasks tasks that are assigned *;protected static void assertNbAssignedTasks(final long nbTasks, final ClusterState clusterState) {_        assertPersistentTasks(nbTasks, clusterState, PersistentTasksCustomMetaData.PersistentTask::isAssigned)__    };asserts,that,the,given,cluster,state,contains,nb,tasks,tasks,that,are,assigned;protected,static,void,assert,nb,assigned,tasks,final,long,nb,tasks,final,cluster,state,cluster,state,assert,persistent,tasks,nb,tasks,cluster,state,persistent,tasks,custom,meta,data,persistent,task,is,assigned
PersistentTasksDecidersTestCase -> protected static void assertNbUnassignedTasks(final long nbTasks, final ClusterState clusterState);1524684173;Asserts that the given cluster state contains nbTasks tasks that are NOT assigned *;protected static void assertNbUnassignedTasks(final long nbTasks, final ClusterState clusterState) {_        assertPersistentTasks(nbTasks, clusterState, task -> task.isAssigned() == false)__    };asserts,that,the,given,cluster,state,contains,nb,tasks,tasks,that,are,not,assigned;protected,static,void,assert,nb,unassigned,tasks,final,long,nb,tasks,final,cluster,state,cluster,state,assert,persistent,tasks,nb,tasks,cluster,state,task,task,is,assigned,false
PersistentTasksDecidersTestCase -> protected static void assertNbUnassignedTasks(final long nbTasks, final ClusterState clusterState);1529076503;Asserts that the given cluster state contains nbTasks tasks that are NOT assigned *;protected static void assertNbUnassignedTasks(final long nbTasks, final ClusterState clusterState) {_        assertPersistentTasks(nbTasks, clusterState, task -> task.isAssigned() == false)__    };asserts,that,the,given,cluster,state,contains,nb,tasks,tasks,that,are,not,assigned;protected,static,void,assert,nb,unassigned,tasks,final,long,nb,tasks,final,cluster,state,cluster,state,assert,persistent,tasks,nb,tasks,cluster,state,task,task,is,assigned,false
PersistentTasksDecidersTestCase -> protected static void assertNbUnassignedTasks(final long nbTasks, final ClusterState clusterState);1541092382;Asserts that the given cluster state contains nbTasks tasks that are NOT assigned *;protected static void assertNbUnassignedTasks(final long nbTasks, final ClusterState clusterState) {_        assertPersistentTasks(nbTasks, clusterState, task -> task.isAssigned() == false)__    };asserts,that,the,given,cluster,state,contains,nb,tasks,tasks,that,are,not,assigned;protected,static,void,assert,nb,unassigned,tasks,final,long,nb,tasks,final,cluster,state,cluster,state,assert,persistent,tasks,nb,tasks,cluster,state,task,task,is,assigned,false
PersistentTasksDecidersTestCase -> protected static void assertNbUnassignedTasks(final long nbTasks, final ClusterState clusterState);1544692527;Asserts that the given cluster state contains nbTasks tasks that are NOT assigned *;protected static void assertNbUnassignedTasks(final long nbTasks, final ClusterState clusterState) {_        assertPersistentTasks(nbTasks, clusterState, task -> task.isAssigned() == false)__    };asserts,that,the,given,cluster,state,contains,nb,tasks,tasks,that,are,not,assigned;protected,static,void,assert,nb,unassigned,tasks,final,long,nb,tasks,final,cluster,state,cluster,state,assert,persistent,tasks,nb,tasks,cluster,state,task,task,is,assigned,false
