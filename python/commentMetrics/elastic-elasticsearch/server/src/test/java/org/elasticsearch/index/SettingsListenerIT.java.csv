commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected Collection<Class<? extends Plugin>> nodePlugins() {     return Arrays.asList(SettingsListenerPlugin.class). }
false;public;0;4;;@Override public List<Setting<?>> getSettings() {     return Arrays.asList(SettingsTestingService.VALUE). }
false;public;1;7;;@Override public void onIndexModule(IndexModule module) {     if (module.getIndex().getName().equals("test")) {         // only for the test index         module.addSettingsUpdateConsumer(SettingsTestingService.VALUE, service::setValue).         service.setValue(SettingsTestingService.VALUE.get(module.getSettings())).     } }
false;public;0;4;;@Override public Collection<Module> createGuiceModules() {     return Collections.<Module>singletonList(new SettingsListenerModule(service)). }
false;protected;0;4;;@Override protected void configure() {     bind(SettingsTestingService.class).toInstance(service). }
false;public;1;3;;public void setValue(int value) {     this.value = value. }
false;public;0;38;;public void testListener() {     assertAcked(client().admin().indices().prepareCreate("test").setSettings(Settings.builder().put("index.test.new.setting", 21).build()).get()).     for (SettingsTestingService instance : internalCluster().getDataNodeInstances(SettingsTestingService.class)) {         assertEquals(21, instance.value).     }     client().admin().indices().prepareUpdateSettings("test").setSettings(Settings.builder().put("index.test.new.setting", 42)).get().     for (SettingsTestingService instance : internalCluster().getDataNodeInstances(SettingsTestingService.class)) {         assertEquals(42, instance.value).     }     assertAcked(client().admin().indices().prepareCreate("other").setSettings(Settings.builder().put("index.test.new.setting", 21).build()).get()).     for (SettingsTestingService instance : internalCluster().getDataNodeInstances(SettingsTestingService.class)) {         assertEquals(42, instance.value).     }     client().admin().indices().prepareUpdateSettings("other").setSettings(Settings.builder().put("index.test.new.setting", 84)).get().     for (SettingsTestingService instance : internalCluster().getDataNodeInstances(SettingsTestingService.class)) {         assertEquals(42, instance.value).     }     try {         client().admin().indices().prepareUpdateSettings("other").setSettings(Settings.builder().put("index.test.new.setting", -5)).get().         fail().     } catch (IllegalArgumentException ex) {         assertEquals("Failed to parse value [-5] for setting [index.test.new.setting] must be >= -1", ex.getMessage()).     } }
