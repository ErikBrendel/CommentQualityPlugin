commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected CircleBuilder createTestShapeBuilder() {     return createRandomShape(). }
false;protected;1;4;;@Override protected CircleBuilder createMutation(CircleBuilder original) throws IOException {     return mutate(original). }
false;static;1;27;;static CircleBuilder mutate(CircleBuilder original) throws IOException {     CircleBuilder mutation = copyShape(original).     double radius = original.radius().     DistanceUnit unit = original.unit().     if (randomBoolean()) {         if (original.center().x > 0.0 || original.center().y > 0.0) {             mutation.center(new Coordinate(original.center().x / 2, original.center().y / 2)).         } else {             // original center was 0.0, 0.0             mutation.center(randomDouble() + 0.1, randomDouble() + 0.1).         }     } else if (randomBoolean()) {         if (radius > 0) {             radius = radius / 2.         } else {             radius = randomDouble() + 0.1.         }     } else {         DistanceUnit newRandom = unit.         while (newRandom == unit) {             newRandom = randomFrom(DistanceUnit.values()).         }         unit = newRandom.     }     return mutation.radius(radius, unit). }
false;static;0;12;;static CircleBuilder createRandomShape() {     CircleBuilder circle = new CircleBuilder().     if (frequently()) {         double centerX = randomDoubleBetween(-180, 180, false).         double centerY = randomDoubleBetween(-90, 90, false).         circle.center(centerX, centerY).     }     if (randomBoolean()) {         circle.radius(randomDoubleBetween(0.1, 10.0, false), randomFrom(DistanceUnit.values())).     }     return circle. }
