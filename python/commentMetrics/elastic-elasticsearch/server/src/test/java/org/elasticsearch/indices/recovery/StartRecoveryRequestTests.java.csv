commented;modifiers;parameterAmount;loc;comment;code
false;public;0;40;;public void testSerialization() throws Exception {     final Version targetNodeVersion = randomVersion(random()).     Store.MetadataSnapshot metadataSnapshot = randomBoolean() ? Store.MetadataSnapshot.EMPTY : new Store.MetadataSnapshot(Collections.emptyMap(), Collections.singletonMap(Engine.HISTORY_UUID_KEY, UUIDs.randomBase64UUID()), randomIntBetween(0, 100)).     final StartRecoveryRequest outRequest = new StartRecoveryRequest(new ShardId("test", "_na_", 0), UUIDs.randomBase64UUID(), new DiscoveryNode("a", buildNewFakeTransportAddress(), emptyMap(), emptySet(), targetNodeVersion), new DiscoveryNode("b", buildNewFakeTransportAddress(), emptyMap(), emptySet(), targetNodeVersion), metadataSnapshot, randomBoolean(), randomNonNegativeLong(), randomBoolean() || metadataSnapshot.getHistoryUUID() == null ? SequenceNumbers.UNASSIGNED_SEQ_NO : randomNonNegativeLong()).     final ByteArrayOutputStream outBuffer = new ByteArrayOutputStream().     final OutputStreamStreamOutput out = new OutputStreamStreamOutput(outBuffer).     out.setVersion(targetNodeVersion).     outRequest.writeTo(out).     final ByteArrayInputStream inBuffer = new ByteArrayInputStream(outBuffer.toByteArray()).     InputStreamStreamInput in = new InputStreamStreamInput(inBuffer).     in.setVersion(targetNodeVersion).     final StartRecoveryRequest inRequest = new StartRecoveryRequest().     inRequest.readFrom(in).     assertThat(outRequest.shardId(), equalTo(inRequest.shardId())).     assertThat(outRequest.targetAllocationId(), equalTo(inRequest.targetAllocationId())).     assertThat(outRequest.sourceNode(), equalTo(inRequest.sourceNode())).     assertThat(outRequest.targetNode(), equalTo(inRequest.targetNode())).     assertThat(outRequest.metadataSnapshot().asMap(), equalTo(inRequest.metadataSnapshot().asMap())).     assertThat(outRequest.isPrimaryRelocation(), equalTo(inRequest.isPrimaryRelocation())).     assertThat(outRequest.recoveryId(), equalTo(inRequest.recoveryId())).     if (targetNodeVersion.onOrAfter(Version.V_6_0_0_alpha1)) {         assertThat(outRequest.startingSeqNo(), equalTo(inRequest.startingSeqNo())).     } else {         assertThat(SequenceNumbers.UNASSIGNED_SEQ_NO, equalTo(inRequest.startingSeqNo())).     } }
