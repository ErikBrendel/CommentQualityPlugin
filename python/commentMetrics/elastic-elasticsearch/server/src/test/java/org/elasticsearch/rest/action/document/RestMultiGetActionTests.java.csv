commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Before public void setUpAction() {     new RestMultiGetAction(Settings.EMPTY, controller()). }
false;public;0;14;;public void testTypeInPath() {     RestRequest deprecatedRequest = new FakeRestRequest.Builder(xContentRegistry()).withMethod(Method.GET).withPath("some_index/some_type/_mget").build().     dispatchRequest(deprecatedRequest).     assertWarnings(RestMultiGetAction.TYPES_DEPRECATION_MESSAGE).     RestRequest validRequest = new FakeRestRequest.Builder(xContentRegistry()).withMethod(Method.GET).withPath("some_index/_mget").build().     dispatchRequest(validRequest). }
false;public;0;22;;public void testTypeInBody() throws Exception {     XContentBuilder content = XContentFactory.jsonBuilder().startObject().startArray("docs").startObject().field("_index", "some_index").field("_type", "_doc").field("_id", "2").endObject().startObject().field("_index", "test").field("_id", "2").endObject().endArray().endObject().     RestRequest request = new FakeRestRequest.Builder(xContentRegistry()).withPath("_mget").withContent(BytesReference.bytes(content), XContentType.JSON).build().     dispatchRequest(request).     assertWarnings(RestMultiGetAction.TYPES_DEPRECATION_MESSAGE). }
