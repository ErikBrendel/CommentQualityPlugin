commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected Collection<Class<? extends Plugin>> getPlugins() {     return pluginList(InternalSettingsPlugin.class). }
false;public;0;3;;public void testDocValuesSingleType() throws Exception {     testDocValues(this::createIndex). }
false;public,static;1;23;;public static void testDocValues(Function<String, IndexService> createIndex) throws IOException {     MapperService mapperService = createIndex.apply("test").mapperService().     DocumentMapper mapper = mapperService.merge("type", new CompressedXContent("{\"type\":{}}"), MergeReason.MAPPING_UPDATE).     ParsedDocument document = mapper.parse(new SourceToParse("index", "type", "id", new BytesArray("{}"), XContentType.JSON)).     Directory dir = newDirectory().     IndexWriter w = new IndexWriter(dir, newIndexWriterConfig()).     w.addDocument(document.rootDoc()).     DirectoryReader r = DirectoryReader.open(w).     w.close().     MappedFieldType ft = mapperService.fullName(TypeFieldMapper.NAME).     IndexOrdinalsFieldData fd = (IndexOrdinalsFieldData) ft.fielddataBuilder("test").build(mapperService.getIndexSettings(), ft, new IndexFieldDataCache.None(), new NoneCircuitBreakerService(), mapperService).     AtomicOrdinalsFieldData afd = fd.load(r.leaves().get(0)).     SortedSetDocValues values = afd.getOrdinalsValues().     assertTrue(values.advanceExact(0)).     assertEquals(0, values.nextOrd()).     assertEquals(SortedSetDocValues.NO_MORE_ORDS, values.nextOrd()).     assertEquals(new BytesRef("type"), values.lookupOrd(0)).     r.close().     dir.close(). }
false;public;0;7;;public void testDefaults() throws IOException {     Settings indexSettings = Settings.EMPTY.     MapperService mapperService = createIndex("test", indexSettings).mapperService().     DocumentMapper mapper = mapperService.merge("type", new CompressedXContent("{\"type\":{}}"), MergeReason.MAPPING_UPDATE).     ParsedDocument document = mapper.parse(new SourceToParse("index", "type", "id", new BytesArray("{}"), XContentType.JSON)).     assertEquals(Collections.<IndexableField>emptyList(), Arrays.asList(document.rootDoc().getFields(TypeFieldMapper.NAME))). }
