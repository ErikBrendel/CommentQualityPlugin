commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected int maximumNumberOfReplicas() {     return 1. }
false;public;0;24;;public void testBroadcastOperations() throws IOException {     assertAcked(prepareCreate("test", 1)).     NumShards numShards = getNumShards("test").     logger.info("Running Cluster Health").     client().index(indexRequest("test").type("type1").id("1").source(source("1", "test"))).actionGet().     flush().     client().index(indexRequest("test").type("type1").id("2").source(source("2", "test"))).actionGet().     refresh().     logger.info("Count").     // check count     for (int i = 0. i < 5. i++) {         // test successful         SearchResponse countResponse = client().prepareSearch("test").setSize(0).setQuery(termQuery("_type", "type1")).get().         assertThat(countResponse.getHits().getTotalHits().value, equalTo(2L)).         assertThat(countResponse.getTotalShards(), equalTo(numShards.numPrimaries)).         assertThat(countResponse.getSuccessfulShards(), equalTo(numShards.numPrimaries)).         assertThat(countResponse.getFailedShards(), equalTo(0)).     } }
false;private;2;3;;private XContentBuilder source(String id, String nameValue) throws IOException {     return XContentFactory.jsonBuilder().startObject().field("id", id).field("name", nameValue).endObject(). }
