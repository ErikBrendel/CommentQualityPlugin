commented;modifiers;parameterAmount;loc;comment;code
false;private,static;3;5;;private static DfsSearchResult newSearchResult(int shardIndex, long requestId, SearchShardTarget target) {     DfsSearchResult result = new DfsSearchResult(requestId, target).     result.setShardIndex(shardIndex).     return result. }
false;public;4;23;;@Override public void sendExecuteQuery(Transport.Connection connection, QuerySearchRequest request, SearchTask task, SearchActionListener<QuerySearchResult> listener) {     if (request.id() == 1) {         QuerySearchResult queryResult = new QuerySearchResult(123, new SearchShardTarget("node1", new ShardId("test", "na", 0), null, OriginalIndices.NONE)).         queryResult.topDocs(new TopDocsAndMaxScore(new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO), new ScoreDoc[] { new ScoreDoc(42, 1.0F) }), 2.0F), new DocValueFormat[0]).         // the size of the result set         queryResult.size(2).         listener.onResponse(queryResult).     } else if (request.id() == 2) {         QuerySearchResult queryResult = new QuerySearchResult(123, new SearchShardTarget("node2", new ShardId("test", "na", 0), null, OriginalIndices.NONE)).         queryResult.topDocs(new TopDocsAndMaxScore(new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO), new ScoreDoc[] { new ScoreDoc(84, 2.0F) }), 2.0F), new DocValueFormat[0]).         // the size of the result set         queryResult.size(2).         listener.onResponse(queryResult).     } else {         fail("no such request ID: " + request.id()).     } }
false;public;0;4;;@Override public void run() throws IOException {     responseRef.set(response.results). }
false;public;0;59;;public void testDfsWith2Shards() throws IOException {     AtomicArray<DfsSearchResult> results = new AtomicArray<>(2).     AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>().     results.set(0, newSearchResult(0, 1, new SearchShardTarget("node1", new ShardId("test", "na", 0), null, OriginalIndices.NONE))).     results.set(1, newSearchResult(1, 2, new SearchShardTarget("node2", new ShardId("test", "na", 0), null, OriginalIndices.NONE))).     results.get(0).termsStatistics(new Term[0], new TermStatistics[0]).     results.get(1).termsStatistics(new Term[0], new TermStatistics[0]).     SearchPhaseController controller = new SearchPhaseController((b) -> new InternalAggregation.ReduceContext(BigArrays.NON_RECYCLING_INSTANCE, null, b)).     SearchTransportService searchTransportService = new SearchTransportService(null, null) {          @Override         public void sendExecuteQuery(Transport.Connection connection, QuerySearchRequest request, SearchTask task, SearchActionListener<QuerySearchResult> listener) {             if (request.id() == 1) {                 QuerySearchResult queryResult = new QuerySearchResult(123, new SearchShardTarget("node1", new ShardId("test", "na", 0), null, OriginalIndices.NONE)).                 queryResult.topDocs(new TopDocsAndMaxScore(new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO), new ScoreDoc[] { new ScoreDoc(42, 1.0F) }), 2.0F), new DocValueFormat[0]).                 // the size of the result set                 queryResult.size(2).                 listener.onResponse(queryResult).             } else if (request.id() == 2) {                 QuerySearchResult queryResult = new QuerySearchResult(123, new SearchShardTarget("node2", new ShardId("test", "na", 0), null, OriginalIndices.NONE)).                 queryResult.topDocs(new TopDocsAndMaxScore(new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO), new ScoreDoc[] { new ScoreDoc(84, 2.0F) }), 2.0F), new DocValueFormat[0]).                 // the size of the result set                 queryResult.size(2).                 listener.onResponse(queryResult).             } else {                 fail("no such request ID: " + request.id()).             }         }     }.     MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2).     mockSearchPhaseContext.searchTransport = searchTransportService.     DfsQueryPhase phase = new DfsQueryPhase(results, controller, (response) -> new SearchPhase("test") {          @Override         public void run() throws IOException {             responseRef.set(response.results).         }     }, mockSearchPhaseContext).     assertEquals("dfs_query", phase.getName()).     phase.run().     mockSearchPhaseContext.assertNoFailure().     assertNotNull(responseRef.get()).     assertNotNull(responseRef.get().get(0)).     assertNull(responseRef.get().get(0).fetchResult()).     assertEquals(1, responseRef.get().get(0).queryResult().topDocs().topDocs.totalHits.value).     assertEquals(42, responseRef.get().get(0).queryResult().topDocs().topDocs.scoreDocs[0].doc).     assertNotNull(responseRef.get().get(1)).     assertNull(responseRef.get().get(1).fetchResult()).     assertEquals(1, responseRef.get().get(1).queryResult().topDocs().topDocs.totalHits.value).     assertEquals(84, responseRef.get().get(1).queryResult().topDocs().topDocs.scoreDocs[0].doc).     assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty()).     assertEquals(2, mockSearchPhaseContext.numSuccess.get()). }
false;public;4;17;;@Override public void sendExecuteQuery(Transport.Connection connection, QuerySearchRequest request, SearchTask task, SearchActionListener<QuerySearchResult> listener) {     if (request.id() == 1) {         QuerySearchResult queryResult = new QuerySearchResult(123, new SearchShardTarget("node1", new ShardId("test", "na", 0), null, OriginalIndices.NONE)).         queryResult.topDocs(new TopDocsAndMaxScore(new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO), new ScoreDoc[] { new ScoreDoc(42, 1.0F) }), 2.0F), new DocValueFormat[0]).         // the size of the result set         queryResult.size(2).         listener.onResponse(queryResult).     } else if (request.id() == 2) {         listener.onFailure(new MockDirectoryWrapper.FakeIOException()).     } else {         fail("no such request ID: " + request.id()).     } }
false;public;0;4;;@Override public void run() throws IOException {     responseRef.set(response.results). }
false;public;0;55;;public void testDfsWith1ShardFailed() throws IOException {     AtomicArray<DfsSearchResult> results = new AtomicArray<>(2).     AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>().     results.set(0, newSearchResult(0, 1, new SearchShardTarget("node1", new ShardId("test", "na", 0), null, OriginalIndices.NONE))).     results.set(1, newSearchResult(1, 2, new SearchShardTarget("node2", new ShardId("test", "na", 0), null, OriginalIndices.NONE))).     results.get(0).termsStatistics(new Term[0], new TermStatistics[0]).     results.get(1).termsStatistics(new Term[0], new TermStatistics[0]).     SearchPhaseController controller = new SearchPhaseController((b) -> new InternalAggregation.ReduceContext(BigArrays.NON_RECYCLING_INSTANCE, null, b)).     SearchTransportService searchTransportService = new SearchTransportService(null, null) {          @Override         public void sendExecuteQuery(Transport.Connection connection, QuerySearchRequest request, SearchTask task, SearchActionListener<QuerySearchResult> listener) {             if (request.id() == 1) {                 QuerySearchResult queryResult = new QuerySearchResult(123, new SearchShardTarget("node1", new ShardId("test", "na", 0), null, OriginalIndices.NONE)).                 queryResult.topDocs(new TopDocsAndMaxScore(new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO), new ScoreDoc[] { new ScoreDoc(42, 1.0F) }), 2.0F), new DocValueFormat[0]).                 // the size of the result set                 queryResult.size(2).                 listener.onResponse(queryResult).             } else if (request.id() == 2) {                 listener.onFailure(new MockDirectoryWrapper.FakeIOException()).             } else {                 fail("no such request ID: " + request.id()).             }         }     }.     MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2).     mockSearchPhaseContext.searchTransport = searchTransportService.     DfsQueryPhase phase = new DfsQueryPhase(results, controller, (response) -> new SearchPhase("test") {          @Override         public void run() throws IOException {             responseRef.set(response.results).         }     }, mockSearchPhaseContext).     assertEquals("dfs_query", phase.getName()).     phase.run().     mockSearchPhaseContext.assertNoFailure().     assertNotNull(responseRef.get()).     assertNotNull(responseRef.get().get(0)).     assertNull(responseRef.get().get(0).fetchResult()).     assertEquals(1, responseRef.get().get(0).queryResult().topDocs().topDocs.totalHits.value).     assertEquals(42, responseRef.get().get(0).queryResult().topDocs().topDocs.scoreDocs[0].doc).     assertNull(responseRef.get().get(1)).     assertEquals(1, mockSearchPhaseContext.numSuccess.get()).     assertEquals(1, mockSearchPhaseContext.failures.size()).     assertTrue(mockSearchPhaseContext.failures.get(0).getCause() instanceof MockDirectoryWrapper.FakeIOException).     assertEquals(1, mockSearchPhaseContext.releasedSearchContexts.size()).     assertTrue(mockSearchPhaseContext.releasedSearchContexts.contains(2L)).     assertNull(responseRef.get().get(1)). }
false;public;4;17;;@Override public void sendExecuteQuery(Transport.Connection connection, QuerySearchRequest request, SearchTask task, SearchActionListener<QuerySearchResult> listener) {     if (request.id() == 1) {         QuerySearchResult queryResult = new QuerySearchResult(123, new SearchShardTarget("node1", new ShardId("test", "na", 0), null, OriginalIndices.NONE)).         queryResult.topDocs(new TopDocsAndMaxScore(new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO), new ScoreDoc[] { new ScoreDoc(42, 1.0F) }), 2.0F), new DocValueFormat[0]).         // the size of the result set         queryResult.size(2).         listener.onResponse(queryResult).     } else if (request.id() == 2) {         throw new UncheckedIOException(new MockDirectoryWrapper.FakeIOException()).     } else {         fail("no such request ID: " + request.id()).     } }
false;public;0;4;;@Override public void run() throws IOException {     responseRef.set(response.results). }
false;public;0;42;;public void testFailPhaseOnException() throws IOException {     AtomicArray<DfsSearchResult> results = new AtomicArray<>(2).     AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>().     results.set(0, newSearchResult(0, 1, new SearchShardTarget("node1", new ShardId("test", "na", 0), null, OriginalIndices.NONE))).     results.set(1, newSearchResult(1, 2, new SearchShardTarget("node2", new ShardId("test", "na", 0), null, OriginalIndices.NONE))).     results.get(0).termsStatistics(new Term[0], new TermStatistics[0]).     results.get(1).termsStatistics(new Term[0], new TermStatistics[0]).     SearchPhaseController controller = new SearchPhaseController((b) -> new InternalAggregation.ReduceContext(BigArrays.NON_RECYCLING_INSTANCE, null, b)).     SearchTransportService searchTransportService = new SearchTransportService(null, null) {          @Override         public void sendExecuteQuery(Transport.Connection connection, QuerySearchRequest request, SearchTask task, SearchActionListener<QuerySearchResult> listener) {             if (request.id() == 1) {                 QuerySearchResult queryResult = new QuerySearchResult(123, new SearchShardTarget("node1", new ShardId("test", "na", 0), null, OriginalIndices.NONE)).                 queryResult.topDocs(new TopDocsAndMaxScore(new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO), new ScoreDoc[] { new ScoreDoc(42, 1.0F) }), 2.0F), new DocValueFormat[0]).                 // the size of the result set                 queryResult.size(2).                 listener.onResponse(queryResult).             } else if (request.id() == 2) {                 throw new UncheckedIOException(new MockDirectoryWrapper.FakeIOException()).             } else {                 fail("no such request ID: " + request.id()).             }         }     }.     MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2).     mockSearchPhaseContext.searchTransport = searchTransportService.     DfsQueryPhase phase = new DfsQueryPhase(results, controller, (response) -> new SearchPhase("test") {          @Override         public void run() throws IOException {             responseRef.set(response.results).         }     }, mockSearchPhaseContext).     assertEquals("dfs_query", phase.getName()).     expectThrows(UncheckedIOException.class, phase::run).     // phase execution will clean up on the contexts     assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty()). }
