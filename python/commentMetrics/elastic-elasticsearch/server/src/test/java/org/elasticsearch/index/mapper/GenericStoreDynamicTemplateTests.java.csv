commented;modifiers;parameterAmount;loc;comment;code
false;public;0;31;;public void testSimple() throws Exception {     String mapping = copyToStringFromClasspath("/org/elasticsearch/index/mapper/dynamictemplate/genericstore/test-mapping.json").     IndexService index = createIndex("test").     client().admin().indices().preparePutMapping("test").setType("person").setSource(mapping, XContentType.JSON).get().     MapperService mapperService = index.mapperService().     byte[] json = copyToBytesFromClasspath("/org/elasticsearch/index/mapper/dynamictemplate/genericstore/test-data.json").     ParsedDocument parsedDoc = mapperService.documentMapper().parse(new SourceToParse("test", "person", "1", new BytesArray(json), XContentType.JSON)).     client().admin().indices().preparePutMapping("test").setType("person").setSource(parsedDoc.dynamicMappingsUpdate().toString(), XContentType.JSON).get().     Document doc = parsedDoc.rootDoc().     IndexableField f = doc.getField("name").     assertThat(f.name(), equalTo("name")).     assertThat(f.stringValue(), equalTo("some name")).     assertThat(f.fieldType().stored(), equalTo(true)).     MappedFieldType fieldType = mapperService.fullName("name").     assertThat(fieldType.stored(), equalTo(true)).     boolean stored = false.     for (IndexableField field : doc.getFields("age")) {         stored |= field.fieldType().stored().     }     assertTrue(stored).     fieldType = mapperService.fullName("age").     assertThat(fieldType.stored(), equalTo(true)). }
