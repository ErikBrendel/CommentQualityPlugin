commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@After public void closeMockFileSystems() throws IOException {     IOUtils.close(fileSystems). }
false;public;0;4;;@Before public void setupEnv() throws IOException {     env = KeyStoreCommandTestCase.setupEnv(true, fileSystems). }
false;public;0;16;;public void testLoadSecureSettings() throws Exception {     final Path configPath = env.configFile().     final SecureString seed.     try (KeyStoreWrapper keyStoreWrapper = KeyStoreWrapper.create()) {         seed = KeyStoreWrapper.SEED_SETTING.get(Settings.builder().setSecureSettings(keyStoreWrapper).build()).         assertNotNull(seed).         assertTrue(seed.length() > 0).         keyStoreWrapper.save(configPath, new char[0]).     }     assertTrue(Files.exists(configPath.resolve("elasticsearch.keystore"))).     try (SecureSettings secureSettings = Bootstrap.loadSecureSettings(env)) {         SecureString seedAfterLoad = KeyStoreWrapper.SEED_SETTING.get(Settings.builder().setSecureSettings(secureSettings).build()).         assertEquals(seedAfterLoad.toString(), seed.toString()).         assertTrue(Files.exists(configPath.resolve("elasticsearch.keystore"))).     } }
