commented;modifiers;parameterAmount;loc;comment;code
false;public;0;27;;@Before public void setUp() throws Exception {     super.setUp().     MappedFieldType fieldType = mock(MappedFieldType.class).     when(fieldType.name()).thenReturn("field").     when(fieldType.valueForDisplay(anyObject())).then(returnsFirstArg()).     MapperService mapperService = mock(MapperService.class).     when(mapperService.fullName("_type")).thenReturn(fieldType).     when(mapperService.fullName("field")).thenReturn(fieldType).     when(mapperService.fullName("alias")).thenReturn(fieldType).     docValues = mock(ScriptDocValues.class).     AtomicFieldData atomicFieldData = mock(AtomicFieldData.class).     doReturn(docValues).when(atomicFieldData).getScriptValues().     IndexFieldData<?> fieldData = mock(IndexFieldData.class).     when(fieldData.getFieldName()).thenReturn("field").     doReturn(atomicFieldData).when(fieldData).load(anyObject()).     docLookup = new LeafDocLookup(mapperService, ignored -> fieldData, new String[] { "type" }, null). }
false;public;0;4;;public void testBasicLookup() {     ScriptDocValues<?> fetchedDocValues = docLookup.get("field").     assertEquals(docValues, fetchedDocValues). }
false;public;0;4;;public void testLookupWithFieldAlias() {     ScriptDocValues<?> fetchedDocValues = docLookup.get("alias").     assertEquals(docValues, fetchedDocValues). }
false;public;0;5;;public void testTypesDeprecation() {     ScriptDocValues<?> fetchedDocValues = docLookup.get("_type").     assertEquals(docValues, fetchedDocValues).     assertWarnings(TYPES_DEPRECATION_MESSAGE). }
