commented;modifiers;parameterAmount;loc;comment;code
false;public;0;12;;public void testSerialization() throws Exception {     final CloseIndexResponse response = randomResponse().     try (BytesStreamOutput out = new BytesStreamOutput()) {         response.writeTo(out).         final CloseIndexResponse deserializedResponse = new CloseIndexResponse().         try (StreamInput in = out.bytes().streamInput()) {             deserializedResponse.readFrom(in).         }         assertCloseIndexResponse(deserializedResponse, response).     } }
false;public;0;28;;public void testBwcSerialization() throws Exception {     {         final CloseIndexResponse response = randomResponse().         try (BytesStreamOutput out = new BytesStreamOutput()) {             out.setVersion(randomVersionBetween(random(), Version.V_6_0_0, VersionUtils.getPreviousVersion(Version.V_7_1_0))).             response.writeTo(out).             final AcknowledgedResponse deserializedResponse = new AcknowledgedResponse().             try (StreamInput in = out.bytes().streamInput()) {                 deserializedResponse.readFrom(in).             }             assertThat(deserializedResponse.isAcknowledged(), equalTo(response.isAcknowledged())).         }     }     {         final AcknowledgedResponse response = new AcknowledgedResponse(randomBoolean()).         try (BytesStreamOutput out = new BytesStreamOutput()) {             response.writeTo(out).             final CloseIndexResponse deserializedResponse = new CloseIndexResponse().             try (StreamInput in = out.bytes().streamInput()) {                 in.setVersion(randomVersionBetween(random(), Version.V_6_0_0, VersionUtils.getPreviousVersion(Version.V_7_1_0))).                 deserializedResponse.readFrom(in).             }             assertThat(deserializedResponse.isAcknowledged(), equalTo(response.isAcknowledged())).         }     } }
false;private;0;5;;private CloseIndexResponse randomResponse() {     final boolean acknowledged = randomBoolean().     final boolean shardsAcknowledged = acknowledged ? randomBoolean() : false.     return new CloseIndexResponse(acknowledged, shardsAcknowledged). }
false;private,static;2;4;;private static void assertCloseIndexResponse(final CloseIndexResponse actual, final CloseIndexResponse expected) {     assertThat(actual.isAcknowledged(), equalTo(expected.isAcknowledged())).     assertThat(actual.isShardsAcknowledged(), equalTo(expected.isShardsAcknowledged())). }
