commented;modifiers;parameterAmount;loc;comment;code
false;public;0;18;;public void testIndexNameFiltering() {     assertIndexNameFiltering(new String[] { "foo", "bar", "baz" }, new String[] {}, new String[] { "foo", "bar", "baz" }).     assertIndexNameFiltering(new String[] { "foo", "bar", "baz" }, new String[] { "*" }, new String[] { "foo", "bar", "baz" }).     assertIndexNameFiltering(new String[] { "foo", "bar", "baz" }, new String[] { "_all" }, new String[] { "foo", "bar", "baz" }).     assertIndexNameFiltering(new String[] { "foo", "bar", "baz" }, new String[] { "foo", "bar", "baz" }, new String[] { "foo", "bar", "baz" }).     assertIndexNameFiltering(new String[] { "foo", "bar", "baz" }, new String[] { "foo" }, new String[] { "foo" }).     assertIndexNameFiltering(new String[] { "foo", "bar", "baz" }, new String[] { "baz", "not_available" }, new String[] { "baz" }).     assertIndexNameFiltering(new String[] { "foo", "bar", "baz" }, new String[] { "ba*", "-bar", "-baz" }, new String[] {}).     assertIndexNameFiltering(new String[] { "foo", "bar", "baz" }, new String[] { "-bar" }, new String[] { "foo", "baz" }).     assertIndexNameFiltering(new String[] { "foo", "bar", "baz" }, new String[] { "-ba*" }, new String[] { "foo" }).     assertIndexNameFiltering(new String[] { "foo", "bar", "baz" }, new String[] { "+ba*" }, new String[] { "bar", "baz" }).     assertIndexNameFiltering(new String[] { "foo", "bar", "baz" }, new String[] { "+bar", "+foo" }, new String[] { "bar", "foo" }).     assertIndexNameFiltering(new String[] { "foo", "bar", "baz" }, new String[] { "zzz", "bar" }, IndicesOptions.lenientExpandOpen(), new String[] { "bar" }).     assertIndexNameFiltering(new String[] { "foo", "bar", "baz" }, new String[] { "" }, IndicesOptions.lenientExpandOpen(), new String[] {}).     assertIndexNameFiltering(new String[] { "foo", "bar", "baz" }, new String[] { "foo", "", "ba*" }, IndicesOptions.lenientExpandOpen(), new String[] { "foo", "bar", "baz" }). }
false;private;3;3;;private void assertIndexNameFiltering(String[] indices, String[] filter, String[] expected) {     assertIndexNameFiltering(indices, filter, IndicesOptions.lenientExpandOpen(), expected). }
false;private;4;5;;private void assertIndexNameFiltering(String[] indices, String[] filter, IndicesOptions indicesOptions, String[] expected) {     List<String> indicesList = Arrays.asList(indices).     List<String> actual = SnapshotUtils.filterIndices(indicesList, filter, indicesOptions).     assertThat(actual, containsInAnyOrder(expected)). }
