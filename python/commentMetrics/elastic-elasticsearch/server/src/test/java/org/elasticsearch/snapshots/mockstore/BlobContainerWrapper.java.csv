commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public BlobPath path() {     return delegate.path(). }
false;public;1;4;;@Override public boolean blobExists(String blobName) {     return delegate.blobExists(blobName). }
false;public;1;4;;@Override public InputStream readBlob(String name) throws IOException {     return delegate.readBlob(name). }
false;public;4;4;;@Override public void writeBlob(String blobName, InputStream inputStream, long blobSize, boolean failIfAlreadyExists) throws IOException {     delegate.writeBlob(blobName, inputStream, blobSize, failIfAlreadyExists). }
false;public;4;5;;@Override public void writeBlobAtomic(final String blobName, final InputStream inputStream, final long blobSize, boolean failIfAlreadyExists) throws IOException {     delegate.writeBlobAtomic(blobName, inputStream, blobSize, failIfAlreadyExists). }
false;public;1;4;;@Override public void deleteBlob(String blobName) throws IOException {     delegate.deleteBlob(blobName). }
false;public;1;4;;@Override public void deleteBlobIgnoringIfNotExists(final String blobName) throws IOException {     delegate.deleteBlobIgnoringIfNotExists(blobName). }
false;public;0;4;;@Override public Map<String, BlobMetaData> listBlobs() throws IOException {     return delegate.listBlobs(). }
false;public;1;4;;@Override public Map<String, BlobMetaData> listBlobsByPrefix(String blobNamePrefix) throws IOException {     return delegate.listBlobsByPrefix(blobNamePrefix). }
