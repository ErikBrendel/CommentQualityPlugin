# id;timestamp;commentText;codeText;commentWords;codeWords
GeoDistanceIT -> public void testGeoDistanceFilter() throws IOException;1524684173;Issue 3073;public void testGeoDistanceFilter() throws IOException {_        Version version = VersionUtils.randomVersionBetween(random(), Version.V_5_0_0,_                Version.CURRENT)__        Settings settings = Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED, version).build()__        double lat = 40.720611__        double lon = -73.998776___        XContentBuilder mapping = JsonXContent.contentBuilder().startObject().startObject("location").startObject("properties")_                .startObject("pin").field("type", "geo_point")__        mapping.endObject().endObject().endObject().endObject()___        XContentBuilder source = JsonXContent.contentBuilder().startObject().field("pin", GeoHashUtils.stringEncode(lon, lat)).endObject()___        assertAcked(prepareCreate("locations").setSettings(settings).addMapping("location", mapping))__        client().prepareIndex("locations", "location", "1").setCreate(true).setSource(source).execute().actionGet()__        refresh()__        client().prepareGet("locations", "location", "1").execute().actionGet()___        SearchResponse result = client().prepareSearch("locations").setQuery(QueryBuilders.matchAllQuery())_                .setPostFilter(QueryBuilders.geoDistanceQuery("pin").geoDistance(GeoDistance.ARC).point(lat, lon).distance("1m")).execute()_                .actionGet()___        assertHitCount(result, 1)__    };issue,3073;public,void,test,geo,distance,filter,throws,ioexception,version,version,version,utils,random,version,between,random,version,version,current,settings,settings,settings,builder,put,index,meta,data,version,build,double,lat,40,720611,double,lon,73,998776,xcontent,builder,mapping,json,xcontent,content,builder,start,object,start,object,location,start,object,properties,start,object,pin,field,type,mapping,end,object,end,object,end,object,end,object,xcontent,builder,source,json,xcontent,content,builder,start,object,field,pin,geo,hash,utils,string,encode,lon,lat,end,object,assert,acked,prepare,create,locations,set,settings,settings,add,mapping,location,mapping,client,prepare,index,locations,location,1,set,create,true,set,source,source,execute,action,get,refresh,client,prepare,get,locations,location,1,execute,action,get,search,response,result,client,prepare,search,locations,set,query,query,builders,match,all,query,set,post,filter,query,builders,geo,distance,query,pin,geo,distance,geo,distance,arc,point,lat,lon,distance,1m,execute,action,get,assert,hit,count,result,1
GeoDistanceIT -> public void testGeoDistanceFilter() throws IOException;1528706846;Issue 3073;public void testGeoDistanceFilter() throws IOException {_        Version version = VersionUtils.randomVersionBetween(random(), Version.V_5_0_0,_                Version.CURRENT)__        Settings settings = Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED, version).build()__        double lat = 40.720611__        double lon = -73.998776___        XContentBuilder mapping = JsonXContent.contentBuilder().startObject().startObject("location").startObject("properties")_                .startObject("pin").field("type", "geo_point")__        mapping.endObject().endObject().endObject().endObject()___        XContentBuilder source = JsonXContent.contentBuilder().startObject().field("pin", GeoHashUtils.stringEncode(lon, lat)).endObject()___        assertAcked(prepareCreate("locations").setSettings(settings).addMapping("location", mapping))__        client().prepareIndex("locations", "location", "1").setCreate(true).setSource(source).execute().actionGet()__        refresh()__        client().prepareGet("locations", "location", "1").execute().actionGet()___        SearchResponse result = client().prepareSearch("locations").setQuery(QueryBuilders.matchAllQuery())_                .setPostFilter(QueryBuilders.geoDistanceQuery("pin").geoDistance(GeoDistance.ARC).point(lat, lon).distance("1m")).execute()_                .actionGet()___        assertHitCount(result, 1)__    };issue,3073;public,void,test,geo,distance,filter,throws,ioexception,version,version,version,utils,random,version,between,random,version,version,current,settings,settings,settings,builder,put,index,meta,data,version,build,double,lat,40,720611,double,lon,73,998776,xcontent,builder,mapping,json,xcontent,content,builder,start,object,start,object,location,start,object,properties,start,object,pin,field,type,mapping,end,object,end,object,end,object,end,object,xcontent,builder,source,json,xcontent,content,builder,start,object,field,pin,geo,hash,utils,string,encode,lon,lat,end,object,assert,acked,prepare,create,locations,set,settings,settings,add,mapping,location,mapping,client,prepare,index,locations,location,1,set,create,true,set,source,source,execute,action,get,refresh,client,prepare,get,locations,location,1,execute,action,get,search,response,result,client,prepare,search,locations,set,query,query,builders,match,all,query,set,post,filter,query,builders,geo,distance,query,pin,geo,distance,geo,distance,arc,point,lat,lon,distance,1m,execute,action,get,assert,hit,count,result,1
GeoDistanceIT -> public void testGeoDistanceFilter() throws IOException;1535139672;Issue 3073;public void testGeoDistanceFilter() throws IOException {_        Version version = VersionUtils.randomVersionBetween(random(), Version.V_6_0_0,_                Version.CURRENT)__        Settings settings = Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED, version).build()__        double lat = 40.720611__        double lon = -73.998776___        XContentBuilder mapping = JsonXContent.contentBuilder().startObject().startObject("location").startObject("properties")_                .startObject("pin").field("type", "geo_point")__        mapping.endObject().endObject().endObject().endObject()___        XContentBuilder source = JsonXContent.contentBuilder().startObject().field("pin", GeoHashUtils.stringEncode(lon, lat)).endObject()___        assertAcked(prepareCreate("locations").setSettings(settings).addMapping("location", mapping))__        client().prepareIndex("locations", "location", "1").setCreate(true).setSource(source).execute().actionGet()__        refresh()__        client().prepareGet("locations", "location", "1").execute().actionGet()___        SearchResponse result = client().prepareSearch("locations").setQuery(QueryBuilders.matchAllQuery())_                .setPostFilter(QueryBuilders.geoDistanceQuery("pin").geoDistance(GeoDistance.ARC).point(lat, lon).distance("1m")).execute()_                .actionGet()___        assertHitCount(result, 1)__    };issue,3073;public,void,test,geo,distance,filter,throws,ioexception,version,version,version,utils,random,version,between,random,version,version,current,settings,settings,settings,builder,put,index,meta,data,version,build,double,lat,40,720611,double,lon,73,998776,xcontent,builder,mapping,json,xcontent,content,builder,start,object,start,object,location,start,object,properties,start,object,pin,field,type,mapping,end,object,end,object,end,object,end,object,xcontent,builder,source,json,xcontent,content,builder,start,object,field,pin,geo,hash,utils,string,encode,lon,lat,end,object,assert,acked,prepare,create,locations,set,settings,settings,add,mapping,location,mapping,client,prepare,index,locations,location,1,set,create,true,set,source,source,execute,action,get,refresh,client,prepare,get,locations,location,1,execute,action,get,search,response,result,client,prepare,search,locations,set,query,query,builders,match,all,query,set,post,filter,query,builders,geo,distance,query,pin,geo,distance,geo,distance,arc,point,lat,lon,distance,1m,execute,action,get,assert,hit,count,result,1
GeoDistanceIT -> public void testGeoDistanceFilter() throws IOException;1536137328;Issue 3073;public void testGeoDistanceFilter() throws IOException {_        Version version = VersionUtils.randomVersionBetween(random(), Version.V_6_0_0,_                Version.CURRENT)__        Settings settings = Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED, version).build()__        double lat = 40.720611__        double lon = -73.998776___        XContentBuilder mapping = JsonXContent.contentBuilder().startObject().startObject("location").startObject("properties")_                .startObject("pin").field("type", "geo_point")__        mapping.endObject().endObject().endObject().endObject()___        XContentBuilder source = JsonXContent.contentBuilder().startObject().field("pin", GeoHashUtils.stringEncode(lon, lat)).endObject()___        assertAcked(prepareCreate("locations").setSettings(settings).addMapping("location", mapping))__        client().prepareIndex("locations", "location", "1").setCreate(true).setSource(source).execute().actionGet()__        refresh()__        client().prepareGet("locations", "location", "1").execute().actionGet()___        SearchResponse result = client().prepareSearch("locations").setQuery(QueryBuilders.matchAllQuery())_                .setPostFilter(QueryBuilders.geoDistanceQuery("pin").geoDistance(GeoDistance.ARC).point(lat, lon).distance("1m")).execute()_                .actionGet()___        assertHitCount(result, 1)__    };issue,3073;public,void,test,geo,distance,filter,throws,ioexception,version,version,version,utils,random,version,between,random,version,version,current,settings,settings,settings,builder,put,index,meta,data,version,build,double,lat,40,720611,double,lon,73,998776,xcontent,builder,mapping,json,xcontent,content,builder,start,object,start,object,location,start,object,properties,start,object,pin,field,type,mapping,end,object,end,object,end,object,end,object,xcontent,builder,source,json,xcontent,content,builder,start,object,field,pin,geo,hash,utils,string,encode,lon,lat,end,object,assert,acked,prepare,create,locations,set,settings,settings,add,mapping,location,mapping,client,prepare,index,locations,location,1,set,create,true,set,source,source,execute,action,get,refresh,client,prepare,get,locations,location,1,execute,action,get,search,response,result,client,prepare,search,locations,set,query,query,builders,match,all,query,set,post,filter,query,builders,geo,distance,query,pin,geo,distance,geo,distance,arc,point,lat,lon,distance,1m,execute,action,get,assert,hit,count,result,1
GeoDistanceIT -> public void testGeoDistanceFilter() throws IOException;1544110272;Issue 3073;public void testGeoDistanceFilter() throws IOException {_        Version version = VersionUtils.randomVersionBetween(random(), Version.V_6_0_0,_                Version.CURRENT)__        Settings settings = Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED, version).build()__        double lat = 40.720611__        double lon = -73.998776___        XContentBuilder mapping = JsonXContent.contentBuilder().startObject().startObject("location").startObject("properties")_                .startObject("pin").field("type", "geo_point")__        mapping.endObject().endObject().endObject().endObject()___        XContentBuilder source = JsonXContent.contentBuilder().startObject().field("pin", GeoHashUtils.stringEncode(lon, lat)).endObject()___        assertAcked(prepareCreate("locations").setSettings(settings).addMapping("location", mapping))__        client().prepareIndex("locations", "location", "1").setCreate(true).setSource(source).get()__        refresh()__        client().prepareGet("locations", "location", "1").get()___        SearchResponse result = client().prepareSearch("locations").setQuery(QueryBuilders.matchAllQuery())_                .setPostFilter(QueryBuilders.geoDistanceQuery("pin").geoDistance(GeoDistance.ARC).point(lat, lon).distance("1m")).get()___        assertHitCount(result, 1)__    };issue,3073;public,void,test,geo,distance,filter,throws,ioexception,version,version,version,utils,random,version,between,random,version,version,current,settings,settings,settings,builder,put,index,meta,data,version,build,double,lat,40,720611,double,lon,73,998776,xcontent,builder,mapping,json,xcontent,content,builder,start,object,start,object,location,start,object,properties,start,object,pin,field,type,mapping,end,object,end,object,end,object,end,object,xcontent,builder,source,json,xcontent,content,builder,start,object,field,pin,geo,hash,utils,string,encode,lon,lat,end,object,assert,acked,prepare,create,locations,set,settings,settings,add,mapping,location,mapping,client,prepare,index,locations,location,1,set,create,true,set,source,source,get,refresh,client,prepare,get,locations,location,1,get,search,response,result,client,prepare,search,locations,set,query,query,builders,match,all,query,set,post,filter,query,builders,geo,distance,query,pin,geo,distance,geo,distance,arc,point,lat,lon,distance,1m,get,assert,hit,count,result,1
