# id;timestamp;commentText;codeText;commentWords;codeWords
ShrinkIndexIT -> public void testCreateShrinkIndexFails() throws Exception;1524684173;Tests that we can manually recover from a failed allocation due to shards being moved away etc.;public void testCreateShrinkIndexFails() throws Exception {_        internalCluster().ensureAtLeastNumDataNodes(2)__        prepareCreate("source").setSettings(Settings.builder().put(indexSettings())_            .put("number_of_shards", randomIntBetween(2, 7))_            .put("number_of_replicas", 0)).get()__        for (int i = 0_ i < 20_ i++) {_            client().prepareIndex("source", "type")_                .setSource("{\"foo\" : \"bar\", \"i\" : " + i + "}", XContentType.JSON).get()__        }_        ImmutableOpenMap<String, DiscoveryNode> dataNodes = client().admin().cluster().prepareState().get().getState().nodes()_            .getDataNodes()__        assertTrue("at least 2 nodes but was: " + dataNodes.size(), dataNodes.size() >= 2)__        DiscoveryNode[] discoveryNodes = dataNodes.values().toArray(DiscoveryNode.class)__        String spareNode = discoveryNodes[0].getName()__        String mergeNode = discoveryNodes[1].getName()__        _        _        _        ensureGreen()__        _        client().admin().indices().prepareUpdateSettings("source")_            .setSettings(Settings.builder().put("index.routing.allocation.require._name", mergeNode)_                .put("index.blocks.write", true)).get()__        ensureGreen()___        _        client().admin().indices().prepareResizeIndex("source", "target")_            .setWaitForActiveShards(ActiveShardCount.NONE)_            .setSettings(Settings.builder()_                .put("index.routing.allocation.exclude._name", mergeNode) _                .put("index.number_of_replicas", 0)_                .put("index.allocation.max_retries", 1).build()).get()__        client().admin().cluster().prepareHealth("target").setWaitForEvents(Priority.LANGUID).get()___        _        client().admin().indices().prepareUpdateSettings("source")_            .setSettings(Settings.builder().put("index.routing.allocation.require._name", spareNode)_                .put("index.blocks.write", true)).get()__        ensureGreen("source")___        client().admin().indices().prepareUpdateSettings("target") _            .setSettings(Settings.builder().putNull("index.routing.allocation.exclude._name")).get()__        _        assertBusy(() -> {_            ClusterStateResponse clusterStateResponse = client().admin().cluster().prepareState().get()__            RoutingTable routingTables = clusterStateResponse.getState().routingTable()__            assertTrue(routingTables.index("target").shard(0).getShards().get(0).unassigned())__            assertEquals(UnassignedInfo.Reason.ALLOCATION_FAILED,_                routingTables.index("target").shard(0).getShards().get(0).unassignedInfo().getReason())__            assertEquals(1,_                routingTables.index("target").shard(0).getShards().get(0).unassignedInfo().getNumFailedAllocations())__        })__        client().admin().indices().prepareUpdateSettings("source") _            .setSettings(Settings.builder()_                .put("index.routing.allocation.require._name", mergeNode)).get()__        ensureGreen("source")___        final InternalClusterInfoService infoService = (InternalClusterInfoService) internalCluster().getInstance(ClusterInfoService.class,_            internalCluster().getMasterName())__        infoService.refresh()__        _        ClusterRerouteResponse clusterRerouteResponse = client().admin().cluster().prepareReroute().setRetryFailed(true).get()__        long expectedShardSize = clusterRerouteResponse.getState().routingTable().index("target")_            .shard(0).getShards().get(0).getExpectedShardSize()__        _        assertTrue("expected shard size must be set but wasn't: " + expectedShardSize, expectedShardSize > 0)__        ensureGreen()__        assertHitCount(client().prepareSearch("target").setSize(100).setQuery(new TermsQueryBuilder("foo", "bar")).get(), 20)__    };tests,that,we,can,manually,recover,from,a,failed,allocation,due,to,shards,being,moved,away,etc;public,void,test,create,shrink,index,fails,throws,exception,internal,cluster,ensure,at,least,num,data,nodes,2,prepare,create,source,set,settings,settings,builder,put,index,settings,put,random,int,between,2,7,put,0,get,for,int,i,0,i,20,i,client,prepare,index,source,type,set,source,foo,bar,i,i,xcontent,type,json,get,immutable,open,map,string,discovery,node,data,nodes,client,admin,cluster,prepare,state,get,get,state,nodes,get,data,nodes,assert,true,at,least,2,nodes,but,was,data,nodes,size,data,nodes,size,2,discovery,node,discovery,nodes,data,nodes,values,to,array,discovery,node,class,string,spare,node,discovery,nodes,0,get,name,string,merge,node,discovery,nodes,1,get,name,ensure,green,client,admin,indices,prepare,update,settings,source,set,settings,settings,builder,put,index,routing,allocation,require,merge,node,put,index,blocks,write,true,get,ensure,green,client,admin,indices,prepare,resize,index,source,target,set,wait,for,active,shards,active,shard,count,none,set,settings,settings,builder,put,index,routing,allocation,exclude,merge,node,put,index,0,put,index,allocation,1,build,get,client,admin,cluster,prepare,health,target,set,wait,for,events,priority,languid,get,client,admin,indices,prepare,update,settings,source,set,settings,settings,builder,put,index,routing,allocation,require,spare,node,put,index,blocks,write,true,get,ensure,green,source,client,admin,indices,prepare,update,settings,target,set,settings,settings,builder,put,null,index,routing,allocation,exclude,get,assert,busy,cluster,state,response,cluster,state,response,client,admin,cluster,prepare,state,get,routing,table,routing,tables,cluster,state,response,get,state,routing,table,assert,true,routing,tables,index,target,shard,0,get,shards,get,0,unassigned,assert,equals,unassigned,info,reason,routing,tables,index,target,shard,0,get,shards,get,0,unassigned,info,get,reason,assert,equals,1,routing,tables,index,target,shard,0,get,shards,get,0,unassigned,info,get,num,failed,allocations,client,admin,indices,prepare,update,settings,source,set,settings,settings,builder,put,index,routing,allocation,require,merge,node,get,ensure,green,source,final,internal,cluster,info,service,info,service,internal,cluster,info,service,internal,cluster,get,instance,cluster,info,service,class,internal,cluster,get,master,name,info,service,refresh,cluster,reroute,response,cluster,reroute,response,client,admin,cluster,prepare,reroute,set,retry,failed,true,get,long,expected,shard,size,cluster,reroute,response,get,state,routing,table,index,target,shard,0,get,shards,get,0,get,expected,shard,size,assert,true,expected,shard,size,must,be,set,but,wasn,t,expected,shard,size,expected,shard,size,0,ensure,green,assert,hit,count,client,prepare,search,target,set,size,100,set,query,new,terms,query,builder,foo,bar,get,20
ShrinkIndexIT -> public void testCreateShrinkIndexFails() throws Exception;1525798020;Tests that we can manually recover from a failed allocation due to shards being moved away etc.;public void testCreateShrinkIndexFails() throws Exception {_        internalCluster().ensureAtLeastNumDataNodes(2)__        prepareCreate("source").setSettings(Settings.builder().put(indexSettings())_            .put("number_of_shards", randomIntBetween(2, 7))_            .put("number_of_replicas", 0)).get()__        for (int i = 0_ i < 20_ i++) {_            client().prepareIndex("source", "type")_                .setSource("{\"foo\" : \"bar\", \"i\" : " + i + "}", XContentType.JSON).get()__        }_        ImmutableOpenMap<String, DiscoveryNode> dataNodes = client().admin().cluster().prepareState().get().getState().nodes()_            .getDataNodes()__        assertTrue("at least 2 nodes but was: " + dataNodes.size(), dataNodes.size() >= 2)__        DiscoveryNode[] discoveryNodes = dataNodes.values().toArray(DiscoveryNode.class)__        String spareNode = discoveryNodes[0].getName()__        String mergeNode = discoveryNodes[1].getName()__        _        _        _        ensureGreen()__        _        client().admin().indices().prepareUpdateSettings("source")_            .setSettings(Settings.builder().put("index.routing.allocation.require._name", mergeNode)_                .put("index.blocks.write", true)).get()__        ensureGreen()___        _        client().admin().indices().prepareResizeIndex("source", "target")_            .setWaitForActiveShards(ActiveShardCount.NONE)_            .setSettings(Settings.builder()_                .put("index.routing.allocation.exclude._name", mergeNode) _                .put("index.number_of_replicas", 0)_                .put("index.allocation.max_retries", 1).build()).get()__        client().admin().cluster().prepareHealth("target").setWaitForEvents(Priority.LANGUID).get()___        _        client().admin().indices().prepareUpdateSettings("source")_            .setSettings(Settings.builder().put("index.routing.allocation.require._name", spareNode)_                .put("index.blocks.write", true)).get()__        ensureGreen("source")___        client().admin().indices().prepareUpdateSettings("target") _            .setSettings(Settings.builder().putNull("index.routing.allocation.exclude._name")).get()__        _        assertBusy(() -> {_            ClusterStateResponse clusterStateResponse = client().admin().cluster().prepareState().get()__            RoutingTable routingTables = clusterStateResponse.getState().routingTable()__            assertTrue(routingTables.index("target").shard(0).getShards().get(0).unassigned())__            assertEquals(UnassignedInfo.Reason.ALLOCATION_FAILED,_                routingTables.index("target").shard(0).getShards().get(0).unassignedInfo().getReason())__            assertEquals(1,_                routingTables.index("target").shard(0).getShards().get(0).unassignedInfo().getNumFailedAllocations())__        })__        client().admin().indices().prepareUpdateSettings("source") _            .setSettings(Settings.builder()_                .put("index.routing.allocation.require._name", mergeNode)).get()__        ensureGreen("source")___        final InternalClusterInfoService infoService = (InternalClusterInfoService) internalCluster().getInstance(ClusterInfoService.class,_            internalCluster().getMasterName())__        infoService.refresh()__        _        ClusterRerouteResponse clusterRerouteResponse = client().admin().cluster().prepareReroute().setRetryFailed(true).get()__        long expectedShardSize = clusterRerouteResponse.getState().routingTable().index("target")_            .shard(0).getShards().get(0).getExpectedShardSize()__        _        assertTrue("expected shard size must be set but wasn't: " + expectedShardSize, expectedShardSize > 0)__        ensureGreen()__        assertHitCount(client().prepareSearch("target").setSize(100).setQuery(new TermsQueryBuilder("foo", "bar")).get(), 20)__    };tests,that,we,can,manually,recover,from,a,failed,allocation,due,to,shards,being,moved,away,etc;public,void,test,create,shrink,index,fails,throws,exception,internal,cluster,ensure,at,least,num,data,nodes,2,prepare,create,source,set,settings,settings,builder,put,index,settings,put,random,int,between,2,7,put,0,get,for,int,i,0,i,20,i,client,prepare,index,source,type,set,source,foo,bar,i,i,xcontent,type,json,get,immutable,open,map,string,discovery,node,data,nodes,client,admin,cluster,prepare,state,get,get,state,nodes,get,data,nodes,assert,true,at,least,2,nodes,but,was,data,nodes,size,data,nodes,size,2,discovery,node,discovery,nodes,data,nodes,values,to,array,discovery,node,class,string,spare,node,discovery,nodes,0,get,name,string,merge,node,discovery,nodes,1,get,name,ensure,green,client,admin,indices,prepare,update,settings,source,set,settings,settings,builder,put,index,routing,allocation,require,merge,node,put,index,blocks,write,true,get,ensure,green,client,admin,indices,prepare,resize,index,source,target,set,wait,for,active,shards,active,shard,count,none,set,settings,settings,builder,put,index,routing,allocation,exclude,merge,node,put,index,0,put,index,allocation,1,build,get,client,admin,cluster,prepare,health,target,set,wait,for,events,priority,languid,get,client,admin,indices,prepare,update,settings,source,set,settings,settings,builder,put,index,routing,allocation,require,spare,node,put,index,blocks,write,true,get,ensure,green,source,client,admin,indices,prepare,update,settings,target,set,settings,settings,builder,put,null,index,routing,allocation,exclude,get,assert,busy,cluster,state,response,cluster,state,response,client,admin,cluster,prepare,state,get,routing,table,routing,tables,cluster,state,response,get,state,routing,table,assert,true,routing,tables,index,target,shard,0,get,shards,get,0,unassigned,assert,equals,unassigned,info,reason,routing,tables,index,target,shard,0,get,shards,get,0,unassigned,info,get,reason,assert,equals,1,routing,tables,index,target,shard,0,get,shards,get,0,unassigned,info,get,num,failed,allocations,client,admin,indices,prepare,update,settings,source,set,settings,settings,builder,put,index,routing,allocation,require,merge,node,get,ensure,green,source,final,internal,cluster,info,service,info,service,internal,cluster,info,service,internal,cluster,get,instance,cluster,info,service,class,internal,cluster,get,master,name,info,service,refresh,cluster,reroute,response,cluster,reroute,response,client,admin,cluster,prepare,reroute,set,retry,failed,true,get,long,expected,shard,size,cluster,reroute,response,get,state,routing,table,index,target,shard,0,get,shards,get,0,get,expected,shard,size,assert,true,expected,shard,size,must,be,set,but,wasn,t,expected,shard,size,expected,shard,size,0,ensure,green,assert,hit,count,client,prepare,search,target,set,size,100,set,query,new,terms,query,builder,foo,bar,get,20
ShrinkIndexIT -> public void testCreateShrinkIndexFails() throws Exception;1526289033;Tests that we can manually recover from a failed allocation due to shards being moved away etc.;public void testCreateShrinkIndexFails() throws Exception {_        internalCluster().ensureAtLeastNumDataNodes(2)__        prepareCreate("source").setSettings(Settings.builder().put(indexSettings())_            .put("number_of_shards", randomIntBetween(2, 7))_            .put("number_of_replicas", 0)).get()__        for (int i = 0_ i < 20_ i++) {_            client().prepareIndex("source", "type")_                .setSource("{\"foo\" : \"bar\", \"i\" : " + i + "}", XContentType.JSON).get()__        }_        ImmutableOpenMap<String, DiscoveryNode> dataNodes = client().admin().cluster().prepareState().get().getState().nodes()_            .getDataNodes()__        assertTrue("at least 2 nodes but was: " + dataNodes.size(), dataNodes.size() >= 2)__        DiscoveryNode[] discoveryNodes = dataNodes.values().toArray(DiscoveryNode.class)__        String spareNode = discoveryNodes[0].getName()__        String mergeNode = discoveryNodes[1].getName()__        _        _        _        ensureGreen()__        _        client().admin().indices().prepareUpdateSettings("source")_            .setSettings(Settings.builder().put("index.routing.allocation.require._name", mergeNode)_                .put("index.blocks.write", true)).get()__        ensureGreen()___        _        client().admin().indices().prepareResizeIndex("source", "target")_            .setWaitForActiveShards(ActiveShardCount.NONE)_            .setSettings(Settings.builder()_                .put("index.routing.allocation.exclude._name", mergeNode) _                .put("index.number_of_replicas", 0)_                .put("index.allocation.max_retries", 1).build()).get()__        client().admin().cluster().prepareHealth("target").setWaitForEvents(Priority.LANGUID).get()___        _        client().admin().indices().prepareUpdateSettings("source")_            .setSettings(Settings.builder().put("index.routing.allocation.require._name", spareNode)_                .put("index.blocks.write", true)).get()__        ensureGreen("source")___        client().admin().indices().prepareUpdateSettings("target") _            .setSettings(Settings.builder().putNull("index.routing.allocation.exclude._name")).get()__        _        assertBusy(() -> {_            ClusterStateResponse clusterStateResponse = client().admin().cluster().prepareState().get()__            RoutingTable routingTables = clusterStateResponse.getState().routingTable()__            assertTrue(routingTables.index("target").shard(0).getShards().get(0).unassigned())__            assertEquals(UnassignedInfo.Reason.ALLOCATION_FAILED,_                routingTables.index("target").shard(0).getShards().get(0).unassignedInfo().getReason())__            assertEquals(1,_                routingTables.index("target").shard(0).getShards().get(0).unassignedInfo().getNumFailedAllocations())__        })__        client().admin().indices().prepareUpdateSettings("source") _            .setSettings(Settings.builder()_                .put("index.routing.allocation.require._name", mergeNode)).get()__        ensureGreen("source")___        final InternalClusterInfoService infoService = (InternalClusterInfoService) internalCluster().getInstance(ClusterInfoService.class,_            internalCluster().getMasterName())__        infoService.refresh()__        _        ClusterRerouteResponse clusterRerouteResponse = client().admin().cluster().prepareReroute().setRetryFailed(true).get()__        long expectedShardSize = clusterRerouteResponse.getState().routingTable().index("target")_            .shard(0).getShards().get(0).getExpectedShardSize()__        _        assertTrue("expected shard size must be set but wasn't: " + expectedShardSize, expectedShardSize > 0)__        ensureGreen()__        assertHitCount(client().prepareSearch("target").setSize(100).setQuery(new TermsQueryBuilder("foo", "bar")).get(), 20)__    };tests,that,we,can,manually,recover,from,a,failed,allocation,due,to,shards,being,moved,away,etc;public,void,test,create,shrink,index,fails,throws,exception,internal,cluster,ensure,at,least,num,data,nodes,2,prepare,create,source,set,settings,settings,builder,put,index,settings,put,random,int,between,2,7,put,0,get,for,int,i,0,i,20,i,client,prepare,index,source,type,set,source,foo,bar,i,i,xcontent,type,json,get,immutable,open,map,string,discovery,node,data,nodes,client,admin,cluster,prepare,state,get,get,state,nodes,get,data,nodes,assert,true,at,least,2,nodes,but,was,data,nodes,size,data,nodes,size,2,discovery,node,discovery,nodes,data,nodes,values,to,array,discovery,node,class,string,spare,node,discovery,nodes,0,get,name,string,merge,node,discovery,nodes,1,get,name,ensure,green,client,admin,indices,prepare,update,settings,source,set,settings,settings,builder,put,index,routing,allocation,require,merge,node,put,index,blocks,write,true,get,ensure,green,client,admin,indices,prepare,resize,index,source,target,set,wait,for,active,shards,active,shard,count,none,set,settings,settings,builder,put,index,routing,allocation,exclude,merge,node,put,index,0,put,index,allocation,1,build,get,client,admin,cluster,prepare,health,target,set,wait,for,events,priority,languid,get,client,admin,indices,prepare,update,settings,source,set,settings,settings,builder,put,index,routing,allocation,require,spare,node,put,index,blocks,write,true,get,ensure,green,source,client,admin,indices,prepare,update,settings,target,set,settings,settings,builder,put,null,index,routing,allocation,exclude,get,assert,busy,cluster,state,response,cluster,state,response,client,admin,cluster,prepare,state,get,routing,table,routing,tables,cluster,state,response,get,state,routing,table,assert,true,routing,tables,index,target,shard,0,get,shards,get,0,unassigned,assert,equals,unassigned,info,reason,routing,tables,index,target,shard,0,get,shards,get,0,unassigned,info,get,reason,assert,equals,1,routing,tables,index,target,shard,0,get,shards,get,0,unassigned,info,get,num,failed,allocations,client,admin,indices,prepare,update,settings,source,set,settings,settings,builder,put,index,routing,allocation,require,merge,node,get,ensure,green,source,final,internal,cluster,info,service,info,service,internal,cluster,info,service,internal,cluster,get,instance,cluster,info,service,class,internal,cluster,get,master,name,info,service,refresh,cluster,reroute,response,cluster,reroute,response,client,admin,cluster,prepare,reroute,set,retry,failed,true,get,long,expected,shard,size,cluster,reroute,response,get,state,routing,table,index,target,shard,0,get,shards,get,0,get,expected,shard,size,assert,true,expected,shard,size,must,be,set,but,wasn,t,expected,shard,size,expected,shard,size,0,ensure,green,assert,hit,count,client,prepare,search,target,set,size,100,set,query,new,terms,query,builder,foo,bar,get,20
ShrinkIndexIT -> public void testCreateShrinkIndexFails() throws Exception;1526449283;Tests that we can manually recover from a failed allocation due to shards being moved away etc.;public void testCreateShrinkIndexFails() throws Exception {_        internalCluster().ensureAtLeastNumDataNodes(2)__        prepareCreate("source").setSettings(Settings.builder().put(indexSettings())_            .put("number_of_shards", randomIntBetween(2, 7))_            .put("number_of_replicas", 0)).get()__        for (int i = 0_ i < 20_ i++) {_            client().prepareIndex("source", "type")_                .setSource("{\"foo\" : \"bar\", \"i\" : " + i + "}", XContentType.JSON).get()__        }_        ImmutableOpenMap<String, DiscoveryNode> dataNodes = client().admin().cluster().prepareState().get().getState().nodes()_            .getDataNodes()__        assertTrue("at least 2 nodes but was: " + dataNodes.size(), dataNodes.size() >= 2)__        DiscoveryNode[] discoveryNodes = dataNodes.values().toArray(DiscoveryNode.class)__        String spareNode = discoveryNodes[0].getName()__        String mergeNode = discoveryNodes[1].getName()__        _        _        _        ensureGreen()__        _        client().admin().indices().prepareUpdateSettings("source")_            .setSettings(Settings.builder().put("index.routing.allocation.require._name", mergeNode)_                .put("index.blocks.write", true)).get()__        ensureGreen()___        _        client().admin().indices().prepareResizeIndex("source", "target")_            .setWaitForActiveShards(ActiveShardCount.NONE)_            .setSettings(Settings.builder()_                .put("index.routing.allocation.exclude._name", mergeNode) _                .put("index.number_of_replicas", 0)_                .put("index.allocation.max_retries", 1).build()).get()__        client().admin().cluster().prepareHealth("target").setWaitForEvents(Priority.LANGUID).get()___        _        client().admin().indices().prepareUpdateSettings("source")_            .setSettings(Settings.builder().put("index.routing.allocation.require._name", spareNode)_                .put("index.blocks.write", true)).get()__        ensureGreen("source")___        client().admin().indices().prepareUpdateSettings("target") _            .setSettings(Settings.builder().putNull("index.routing.allocation.exclude._name")).get()__        _        assertBusy(() -> {_            ClusterStateResponse clusterStateResponse = client().admin().cluster().prepareState().get()__            RoutingTable routingTables = clusterStateResponse.getState().routingTable()__            assertTrue(routingTables.index("target").shard(0).getShards().get(0).unassigned())__            assertEquals(UnassignedInfo.Reason.ALLOCATION_FAILED,_                routingTables.index("target").shard(0).getShards().get(0).unassignedInfo().getReason())__            assertEquals(1,_                routingTables.index("target").shard(0).getShards().get(0).unassignedInfo().getNumFailedAllocations())__        })__        client().admin().indices().prepareUpdateSettings("source") _            .setSettings(Settings.builder()_                .put("index.routing.allocation.require._name", mergeNode)).get()__        ensureGreen("source")___        final InternalClusterInfoService infoService = (InternalClusterInfoService) internalCluster().getInstance(ClusterInfoService.class,_            internalCluster().getMasterName())__        infoService.refresh()__        _        ClusterRerouteResponse clusterRerouteResponse = client().admin().cluster().prepareReroute().setRetryFailed(true).get()__        long expectedShardSize = clusterRerouteResponse.getState().routingTable().index("target")_            .shard(0).getShards().get(0).getExpectedShardSize()__        _        assertTrue("expected shard size must be set but wasn't: " + expectedShardSize, expectedShardSize > 0)__        ensureGreen()__        assertHitCount(client().prepareSearch("target").setSize(100).setQuery(new TermsQueryBuilder("foo", "bar")).get(), 20)__    };tests,that,we,can,manually,recover,from,a,failed,allocation,due,to,shards,being,moved,away,etc;public,void,test,create,shrink,index,fails,throws,exception,internal,cluster,ensure,at,least,num,data,nodes,2,prepare,create,source,set,settings,settings,builder,put,index,settings,put,random,int,between,2,7,put,0,get,for,int,i,0,i,20,i,client,prepare,index,source,type,set,source,foo,bar,i,i,xcontent,type,json,get,immutable,open,map,string,discovery,node,data,nodes,client,admin,cluster,prepare,state,get,get,state,nodes,get,data,nodes,assert,true,at,least,2,nodes,but,was,data,nodes,size,data,nodes,size,2,discovery,node,discovery,nodes,data,nodes,values,to,array,discovery,node,class,string,spare,node,discovery,nodes,0,get,name,string,merge,node,discovery,nodes,1,get,name,ensure,green,client,admin,indices,prepare,update,settings,source,set,settings,settings,builder,put,index,routing,allocation,require,merge,node,put,index,blocks,write,true,get,ensure,green,client,admin,indices,prepare,resize,index,source,target,set,wait,for,active,shards,active,shard,count,none,set,settings,settings,builder,put,index,routing,allocation,exclude,merge,node,put,index,0,put,index,allocation,1,build,get,client,admin,cluster,prepare,health,target,set,wait,for,events,priority,languid,get,client,admin,indices,prepare,update,settings,source,set,settings,settings,builder,put,index,routing,allocation,require,spare,node,put,index,blocks,write,true,get,ensure,green,source,client,admin,indices,prepare,update,settings,target,set,settings,settings,builder,put,null,index,routing,allocation,exclude,get,assert,busy,cluster,state,response,cluster,state,response,client,admin,cluster,prepare,state,get,routing,table,routing,tables,cluster,state,response,get,state,routing,table,assert,true,routing,tables,index,target,shard,0,get,shards,get,0,unassigned,assert,equals,unassigned,info,reason,routing,tables,index,target,shard,0,get,shards,get,0,unassigned,info,get,reason,assert,equals,1,routing,tables,index,target,shard,0,get,shards,get,0,unassigned,info,get,num,failed,allocations,client,admin,indices,prepare,update,settings,source,set,settings,settings,builder,put,index,routing,allocation,require,merge,node,get,ensure,green,source,final,internal,cluster,info,service,info,service,internal,cluster,info,service,internal,cluster,get,instance,cluster,info,service,class,internal,cluster,get,master,name,info,service,refresh,cluster,reroute,response,cluster,reroute,response,client,admin,cluster,prepare,reroute,set,retry,failed,true,get,long,expected,shard,size,cluster,reroute,response,get,state,routing,table,index,target,shard,0,get,shards,get,0,get,expected,shard,size,assert,true,expected,shard,size,must,be,set,but,wasn,t,expected,shard,size,expected,shard,size,0,ensure,green,assert,hit,count,client,prepare,search,target,set,size,100,set,query,new,terms,query,builder,foo,bar,get,20
ShrinkIndexIT -> public void testCreateShrinkIndexFails() throws Exception;1526510804;Tests that we can manually recover from a failed allocation due to shards being moved away etc.;public void testCreateShrinkIndexFails() throws Exception {_        internalCluster().ensureAtLeastNumDataNodes(2)__        prepareCreate("source").setSettings(Settings.builder().put(indexSettings())_            .put("number_of_shards", randomIntBetween(2, 7))_            .put("number_of_replicas", 0)).get()__        for (int i = 0_ i < 20_ i++) {_            client().prepareIndex("source", "type")_                .setSource("{\"foo\" : \"bar\", \"i\" : " + i + "}", XContentType.JSON).get()__        }_        ImmutableOpenMap<String, DiscoveryNode> dataNodes = client().admin().cluster().prepareState().get().getState().nodes()_            .getDataNodes()__        assertTrue("at least 2 nodes but was: " + dataNodes.size(), dataNodes.size() >= 2)__        DiscoveryNode[] discoveryNodes = dataNodes.values().toArray(DiscoveryNode.class)__        String spareNode = discoveryNodes[0].getName()__        String mergeNode = discoveryNodes[1].getName()__        _        _        _        ensureGreen()__        _        client().admin().indices().prepareUpdateSettings("source")_            .setSettings(Settings.builder().put("index.routing.allocation.require._name", mergeNode)_                .put("index.blocks.write", true)).get()__        ensureGreen()___        _        client().admin().indices().prepareResizeIndex("source", "target")_            .setWaitForActiveShards(ActiveShardCount.NONE)_            .setSettings(Settings.builder()_                .put("index.routing.allocation.exclude._name", mergeNode) _                .put("index.number_of_replicas", 0)_                .put("index.allocation.max_retries", 1).build()).get()__        client().admin().cluster().prepareHealth("target").setWaitForEvents(Priority.LANGUID).get()___        _        client().admin().indices().prepareUpdateSettings("source")_            .setSettings(Settings.builder().put("index.routing.allocation.require._name", spareNode)_                .put("index.blocks.write", true)).get()__        ensureGreen("source")___        client().admin().indices().prepareUpdateSettings("target") _            .setSettings(Settings.builder().putNull("index.routing.allocation.exclude._name")).get()__        _        assertBusy(() -> {_            ClusterStateResponse clusterStateResponse = client().admin().cluster().prepareState().get()__            RoutingTable routingTables = clusterStateResponse.getState().routingTable()__            assertTrue(routingTables.index("target").shard(0).getShards().get(0).unassigned())__            assertEquals(UnassignedInfo.Reason.ALLOCATION_FAILED,_                routingTables.index("target").shard(0).getShards().get(0).unassignedInfo().getReason())__            assertEquals(1,_                routingTables.index("target").shard(0).getShards().get(0).unassignedInfo().getNumFailedAllocations())__        })__        client().admin().indices().prepareUpdateSettings("source") _            .setSettings(Settings.builder()_                .put("index.routing.allocation.require._name", mergeNode)).get()__        ensureGreen("source")___        final InternalClusterInfoService infoService = (InternalClusterInfoService) internalCluster().getInstance(ClusterInfoService.class,_            internalCluster().getMasterName())__        infoService.refresh()__        _        ClusterRerouteResponse clusterRerouteResponse = client().admin().cluster().prepareReroute().setRetryFailed(true).get()__        long expectedShardSize = clusterRerouteResponse.getState().routingTable().index("target")_            .shard(0).getShards().get(0).getExpectedShardSize()__        _        assertTrue("expected shard size must be set but wasn't: " + expectedShardSize, expectedShardSize > 0)__        ensureGreen()__        assertHitCount(client().prepareSearch("target").setSize(100).setQuery(new TermsQueryBuilder("foo", "bar")).get(), 20)__    };tests,that,we,can,manually,recover,from,a,failed,allocation,due,to,shards,being,moved,away,etc;public,void,test,create,shrink,index,fails,throws,exception,internal,cluster,ensure,at,least,num,data,nodes,2,prepare,create,source,set,settings,settings,builder,put,index,settings,put,random,int,between,2,7,put,0,get,for,int,i,0,i,20,i,client,prepare,index,source,type,set,source,foo,bar,i,i,xcontent,type,json,get,immutable,open,map,string,discovery,node,data,nodes,client,admin,cluster,prepare,state,get,get,state,nodes,get,data,nodes,assert,true,at,least,2,nodes,but,was,data,nodes,size,data,nodes,size,2,discovery,node,discovery,nodes,data,nodes,values,to,array,discovery,node,class,string,spare,node,discovery,nodes,0,get,name,string,merge,node,discovery,nodes,1,get,name,ensure,green,client,admin,indices,prepare,update,settings,source,set,settings,settings,builder,put,index,routing,allocation,require,merge,node,put,index,blocks,write,true,get,ensure,green,client,admin,indices,prepare,resize,index,source,target,set,wait,for,active,shards,active,shard,count,none,set,settings,settings,builder,put,index,routing,allocation,exclude,merge,node,put,index,0,put,index,allocation,1,build,get,client,admin,cluster,prepare,health,target,set,wait,for,events,priority,languid,get,client,admin,indices,prepare,update,settings,source,set,settings,settings,builder,put,index,routing,allocation,require,spare,node,put,index,blocks,write,true,get,ensure,green,source,client,admin,indices,prepare,update,settings,target,set,settings,settings,builder,put,null,index,routing,allocation,exclude,get,assert,busy,cluster,state,response,cluster,state,response,client,admin,cluster,prepare,state,get,routing,table,routing,tables,cluster,state,response,get,state,routing,table,assert,true,routing,tables,index,target,shard,0,get,shards,get,0,unassigned,assert,equals,unassigned,info,reason,routing,tables,index,target,shard,0,get,shards,get,0,unassigned,info,get,reason,assert,equals,1,routing,tables,index,target,shard,0,get,shards,get,0,unassigned,info,get,num,failed,allocations,client,admin,indices,prepare,update,settings,source,set,settings,settings,builder,put,index,routing,allocation,require,merge,node,get,ensure,green,source,final,internal,cluster,info,service,info,service,internal,cluster,info,service,internal,cluster,get,instance,cluster,info,service,class,internal,cluster,get,master,name,info,service,refresh,cluster,reroute,response,cluster,reroute,response,client,admin,cluster,prepare,reroute,set,retry,failed,true,get,long,expected,shard,size,cluster,reroute,response,get,state,routing,table,index,target,shard,0,get,shards,get,0,get,expected,shard,size,assert,true,expected,shard,size,must,be,set,but,wasn,t,expected,shard,size,expected,shard,size,0,ensure,green,assert,hit,count,client,prepare,search,target,set,size,100,set,query,new,terms,query,builder,foo,bar,get,20
ShrinkIndexIT -> public void testCreateShrinkIndexFails() throws Exception;1526900724;Tests that we can manually recover from a failed allocation due to shards being moved away etc.;public void testCreateShrinkIndexFails() throws Exception {_        internalCluster().ensureAtLeastNumDataNodes(2)__        prepareCreate("source").setSettings(Settings.builder().put(indexSettings())_            .put("number_of_shards", randomIntBetween(2, 7))_            .put("number_of_replicas", 0)).get()__        for (int i = 0_ i < 20_ i++) {_            client().prepareIndex("source", "type")_                .setSource("{\"foo\" : \"bar\", \"i\" : " + i + "}", XContentType.JSON).get()__        }_        ImmutableOpenMap<String, DiscoveryNode> dataNodes = client().admin().cluster().prepareState().get().getState().nodes()_            .getDataNodes()__        assertTrue("at least 2 nodes but was: " + dataNodes.size(), dataNodes.size() >= 2)__        DiscoveryNode[] discoveryNodes = dataNodes.values().toArray(DiscoveryNode.class)__        String spareNode = discoveryNodes[0].getName()__        String mergeNode = discoveryNodes[1].getName()__        _        _        _        ensureGreen()__        _        client().admin().indices().prepareUpdateSettings("source")_            .setSettings(Settings.builder().put("index.routing.allocation.require._name", mergeNode)_                .put("index.blocks.write", true)).get()__        ensureGreen()___        _        client().admin().indices().prepareResizeIndex("source", "target")_            .setWaitForActiveShards(ActiveShardCount.NONE)_            .setSettings(Settings.builder()_                .put("index.routing.allocation.exclude._name", mergeNode) _                .put("index.number_of_replicas", 0)_                .put("index.allocation.max_retries", 1).build()).get()__        client().admin().cluster().prepareHealth("target").setWaitForEvents(Priority.LANGUID).get()___        _        client().admin().indices().prepareUpdateSettings("source")_            .setSettings(Settings.builder().put("index.routing.allocation.require._name", spareNode)_                .put("index.blocks.write", true)).get()__        ensureGreen("source")___        client().admin().indices().prepareUpdateSettings("target") _            .setSettings(Settings.builder().putNull("index.routing.allocation.exclude._name")).get()__        _        assertBusy(() -> {_            ClusterStateResponse clusterStateResponse = client().admin().cluster().prepareState().get()__            RoutingTable routingTables = clusterStateResponse.getState().routingTable()__            assertTrue(routingTables.index("target").shard(0).getShards().get(0).unassigned())__            assertEquals(UnassignedInfo.Reason.ALLOCATION_FAILED,_                routingTables.index("target").shard(0).getShards().get(0).unassignedInfo().getReason())__            assertEquals(1,_                routingTables.index("target").shard(0).getShards().get(0).unassignedInfo().getNumFailedAllocations())__        })__        client().admin().indices().prepareUpdateSettings("source") _            .setSettings(Settings.builder()_                .put("index.routing.allocation.require._name", mergeNode)).get()__        ensureGreen("source")___        final InternalClusterInfoService infoService = (InternalClusterInfoService) internalCluster().getInstance(ClusterInfoService.class,_            internalCluster().getMasterName())__        infoService.refresh()__        _        ClusterRerouteResponse clusterRerouteResponse = client().admin().cluster().prepareReroute().setRetryFailed(true).get()__        long expectedShardSize = clusterRerouteResponse.getState().routingTable().index("target")_            .shard(0).getShards().get(0).getExpectedShardSize()__        _        assertTrue("expected shard size must be set but wasn't: " + expectedShardSize, expectedShardSize > 0)__        ensureGreen()__        assertHitCount(client().prepareSearch("target").setSize(100).setQuery(new TermsQueryBuilder("foo", "bar")).get(), 20)__    };tests,that,we,can,manually,recover,from,a,failed,allocation,due,to,shards,being,moved,away,etc;public,void,test,create,shrink,index,fails,throws,exception,internal,cluster,ensure,at,least,num,data,nodes,2,prepare,create,source,set,settings,settings,builder,put,index,settings,put,random,int,between,2,7,put,0,get,for,int,i,0,i,20,i,client,prepare,index,source,type,set,source,foo,bar,i,i,xcontent,type,json,get,immutable,open,map,string,discovery,node,data,nodes,client,admin,cluster,prepare,state,get,get,state,nodes,get,data,nodes,assert,true,at,least,2,nodes,but,was,data,nodes,size,data,nodes,size,2,discovery,node,discovery,nodes,data,nodes,values,to,array,discovery,node,class,string,spare,node,discovery,nodes,0,get,name,string,merge,node,discovery,nodes,1,get,name,ensure,green,client,admin,indices,prepare,update,settings,source,set,settings,settings,builder,put,index,routing,allocation,require,merge,node,put,index,blocks,write,true,get,ensure,green,client,admin,indices,prepare,resize,index,source,target,set,wait,for,active,shards,active,shard,count,none,set,settings,settings,builder,put,index,routing,allocation,exclude,merge,node,put,index,0,put,index,allocation,1,build,get,client,admin,cluster,prepare,health,target,set,wait,for,events,priority,languid,get,client,admin,indices,prepare,update,settings,source,set,settings,settings,builder,put,index,routing,allocation,require,spare,node,put,index,blocks,write,true,get,ensure,green,source,client,admin,indices,prepare,update,settings,target,set,settings,settings,builder,put,null,index,routing,allocation,exclude,get,assert,busy,cluster,state,response,cluster,state,response,client,admin,cluster,prepare,state,get,routing,table,routing,tables,cluster,state,response,get,state,routing,table,assert,true,routing,tables,index,target,shard,0,get,shards,get,0,unassigned,assert,equals,unassigned,info,reason,routing,tables,index,target,shard,0,get,shards,get,0,unassigned,info,get,reason,assert,equals,1,routing,tables,index,target,shard,0,get,shards,get,0,unassigned,info,get,num,failed,allocations,client,admin,indices,prepare,update,settings,source,set,settings,settings,builder,put,index,routing,allocation,require,merge,node,get,ensure,green,source,final,internal,cluster,info,service,info,service,internal,cluster,info,service,internal,cluster,get,instance,cluster,info,service,class,internal,cluster,get,master,name,info,service,refresh,cluster,reroute,response,cluster,reroute,response,client,admin,cluster,prepare,reroute,set,retry,failed,true,get,long,expected,shard,size,cluster,reroute,response,get,state,routing,table,index,target,shard,0,get,shards,get,0,get,expected,shard,size,assert,true,expected,shard,size,must,be,set,but,wasn,t,expected,shard,size,expected,shard,size,0,ensure,green,assert,hit,count,client,prepare,search,target,set,size,100,set,query,new,terms,query,builder,foo,bar,get,20
ShrinkIndexIT -> public void testCreateShrinkIndexFails() throws Exception;1536137328;Tests that we can manually recover from a failed allocation due to shards being moved away etc.;public void testCreateShrinkIndexFails() throws Exception {_        internalCluster().ensureAtLeastNumDataNodes(2)__        prepareCreate("source").setSettings(Settings.builder().put(indexSettings())_            .put("number_of_shards", randomIntBetween(2, 7))_            .put("number_of_replicas", 0)).get()__        for (int i = 0_ i < 20_ i++) {_            client().prepareIndex("source", "type")_                .setSource("{\"foo\" : \"bar\", \"i\" : " + i + "}", XContentType.JSON).get()__        }_        ImmutableOpenMap<String, DiscoveryNode> dataNodes = client().admin().cluster().prepareState().get().getState().nodes()_            .getDataNodes()__        assertTrue("at least 2 nodes but was: " + dataNodes.size(), dataNodes.size() >= 2)__        DiscoveryNode[] discoveryNodes = dataNodes.values().toArray(DiscoveryNode.class)__        String spareNode = discoveryNodes[0].getName()__        String mergeNode = discoveryNodes[1].getName()__        _        _        _        ensureGreen()__        _        client().admin().indices().prepareUpdateSettings("source")_            .setSettings(Settings.builder().put("index.routing.allocation.require._name", mergeNode)_                .put("index.blocks.write", true)).get()__        ensureGreen()___        _        client().admin().indices().prepareResizeIndex("source", "target")_            .setWaitForActiveShards(ActiveShardCount.NONE)_            .setSettings(Settings.builder()_                .put("index.routing.allocation.exclude._name", mergeNode) _                .put("index.number_of_replicas", 0)_                .put("index.allocation.max_retries", 1).build()).get()__        client().admin().cluster().prepareHealth("target").setWaitForEvents(Priority.LANGUID).get()___        _        client().admin().indices().prepareUpdateSettings("source")_            .setSettings(Settings.builder().put("index.routing.allocation.require._name", spareNode)_                .put("index.blocks.write", true)).get()__        ensureGreen("source")___        client().admin().indices().prepareUpdateSettings("target") _            .setSettings(Settings.builder().putNull("index.routing.allocation.exclude._name")).get()__        _        assertBusy(() -> {_            ClusterStateResponse clusterStateResponse = client().admin().cluster().prepareState().get()__            RoutingTable routingTables = clusterStateResponse.getState().routingTable()__            assertTrue(routingTables.index("target").shard(0).getShards().get(0).unassigned())__            assertEquals(UnassignedInfo.Reason.ALLOCATION_FAILED,_                routingTables.index("target").shard(0).getShards().get(0).unassignedInfo().getReason())__            assertEquals(1,_                routingTables.index("target").shard(0).getShards().get(0).unassignedInfo().getNumFailedAllocations())__        })__        client().admin().indices().prepareUpdateSettings("source") _            .setSettings(Settings.builder()_                .put("index.routing.allocation.require._name", mergeNode)).get()__        ensureGreen("source")___        final InternalClusterInfoService infoService = (InternalClusterInfoService) internalCluster().getInstance(ClusterInfoService.class,_            internalCluster().getMasterName())__        infoService.refresh()__        _        ClusterRerouteResponse clusterRerouteResponse = client().admin().cluster().prepareReroute().setRetryFailed(true).get()__        long expectedShardSize = clusterRerouteResponse.getState().routingTable().index("target")_            .shard(0).getShards().get(0).getExpectedShardSize()__        _        assertTrue("expected shard size must be set but wasn't: " + expectedShardSize, expectedShardSize > 0)__        ensureGreen()__        assertHitCount(client().prepareSearch("target").setSize(100).setQuery(new TermsQueryBuilder("foo", "bar")).get(), 20)__    };tests,that,we,can,manually,recover,from,a,failed,allocation,due,to,shards,being,moved,away,etc;public,void,test,create,shrink,index,fails,throws,exception,internal,cluster,ensure,at,least,num,data,nodes,2,prepare,create,source,set,settings,settings,builder,put,index,settings,put,random,int,between,2,7,put,0,get,for,int,i,0,i,20,i,client,prepare,index,source,type,set,source,foo,bar,i,i,xcontent,type,json,get,immutable,open,map,string,discovery,node,data,nodes,client,admin,cluster,prepare,state,get,get,state,nodes,get,data,nodes,assert,true,at,least,2,nodes,but,was,data,nodes,size,data,nodes,size,2,discovery,node,discovery,nodes,data,nodes,values,to,array,discovery,node,class,string,spare,node,discovery,nodes,0,get,name,string,merge,node,discovery,nodes,1,get,name,ensure,green,client,admin,indices,prepare,update,settings,source,set,settings,settings,builder,put,index,routing,allocation,require,merge,node,put,index,blocks,write,true,get,ensure,green,client,admin,indices,prepare,resize,index,source,target,set,wait,for,active,shards,active,shard,count,none,set,settings,settings,builder,put,index,routing,allocation,exclude,merge,node,put,index,0,put,index,allocation,1,build,get,client,admin,cluster,prepare,health,target,set,wait,for,events,priority,languid,get,client,admin,indices,prepare,update,settings,source,set,settings,settings,builder,put,index,routing,allocation,require,spare,node,put,index,blocks,write,true,get,ensure,green,source,client,admin,indices,prepare,update,settings,target,set,settings,settings,builder,put,null,index,routing,allocation,exclude,get,assert,busy,cluster,state,response,cluster,state,response,client,admin,cluster,prepare,state,get,routing,table,routing,tables,cluster,state,response,get,state,routing,table,assert,true,routing,tables,index,target,shard,0,get,shards,get,0,unassigned,assert,equals,unassigned,info,reason,routing,tables,index,target,shard,0,get,shards,get,0,unassigned,info,get,reason,assert,equals,1,routing,tables,index,target,shard,0,get,shards,get,0,unassigned,info,get,num,failed,allocations,client,admin,indices,prepare,update,settings,source,set,settings,settings,builder,put,index,routing,allocation,require,merge,node,get,ensure,green,source,final,internal,cluster,info,service,info,service,internal,cluster,info,service,internal,cluster,get,instance,cluster,info,service,class,internal,cluster,get,master,name,info,service,refresh,cluster,reroute,response,cluster,reroute,response,client,admin,cluster,prepare,reroute,set,retry,failed,true,get,long,expected,shard,size,cluster,reroute,response,get,state,routing,table,index,target,shard,0,get,shards,get,0,get,expected,shard,size,assert,true,expected,shard,size,must,be,set,but,wasn,t,expected,shard,size,expected,shard,size,0,ensure,green,assert,hit,count,client,prepare,search,target,set,size,100,set,query,new,terms,query,builder,foo,bar,get,20
ShrinkIndexIT -> public void testCreateShrinkIndexFails() throws Exception;1537806831;Tests that we can manually recover from a failed allocation due to shards being moved away etc.;public void testCreateShrinkIndexFails() throws Exception {_        internalCluster().ensureAtLeastNumDataNodes(2)__        prepareCreate("source").setSettings(Settings.builder().put(indexSettings())_            .put("number_of_shards", randomIntBetween(2, 7))_            .put("number_of_replicas", 0)).get()__        for (int i = 0_ i < 20_ i++) {_            client().prepareIndex("source", "type")_                .setSource("{\"foo\" : \"bar\", \"i\" : " + i + "}", XContentType.JSON).get()__        }_        ImmutableOpenMap<String, DiscoveryNode> dataNodes = client().admin().cluster().prepareState().get().getState().nodes()_            .getDataNodes()__        assertTrue("at least 2 nodes but was: " + dataNodes.size(), dataNodes.size() >= 2)__        DiscoveryNode[] discoveryNodes = dataNodes.values().toArray(DiscoveryNode.class)__        String spareNode = discoveryNodes[0].getName()__        String mergeNode = discoveryNodes[1].getName()__        _        _        _        ensureGreen()__        _        client().admin().indices().prepareUpdateSettings("source")_            .setSettings(Settings.builder().put("index.routing.allocation.require._name", mergeNode)_                .put("index.blocks.write", true)).get()__        ensureGreen()___        _        client().admin().indices().prepareResizeIndex("source", "target")_            .setWaitForActiveShards(ActiveShardCount.NONE)_            .setSettings(Settings.builder()_                .put("index.routing.allocation.exclude._name", mergeNode) _                .put("index.number_of_replicas", 0)_                .put("index.allocation.max_retries", 1).build()).get()__        client().admin().cluster().prepareHealth("target").setWaitForEvents(Priority.LANGUID).get()___        _        client().admin().indices().prepareUpdateSettings("source")_            .setSettings(Settings.builder().put("index.routing.allocation.require._name", spareNode)_                .put("index.blocks.write", true)).get()__        ensureGreen("source")___        client().admin().indices().prepareUpdateSettings("target") _            .setSettings(Settings.builder().putNull("index.routing.allocation.exclude._name")).get()__        _        assertBusy(() -> {_            ClusterStateResponse clusterStateResponse = client().admin().cluster().prepareState().get()__            RoutingTable routingTables = clusterStateResponse.getState().routingTable()__            assertTrue(routingTables.index("target").shard(0).getShards().get(0).unassigned())__            assertEquals(UnassignedInfo.Reason.ALLOCATION_FAILED,_                routingTables.index("target").shard(0).getShards().get(0).unassignedInfo().getReason())__            assertEquals(1,_                routingTables.index("target").shard(0).getShards().get(0).unassignedInfo().getNumFailedAllocations())__        })__        client().admin().indices().prepareUpdateSettings("source") _            .setSettings(Settings.builder()_                .put("index.routing.allocation.require._name", mergeNode)).get()__        ensureGreen("source")___        final InternalClusterInfoService infoService = (InternalClusterInfoService) internalCluster().getInstance(ClusterInfoService.class,_            internalCluster().getMasterName())__        infoService.refresh()__        _        ClusterRerouteResponse clusterRerouteResponse = client().admin().cluster().prepareReroute().setRetryFailed(true).get()__        long expectedShardSize = clusterRerouteResponse.getState().routingTable().index("target")_            .shard(0).getShards().get(0).getExpectedShardSize()__        _        assertTrue("expected shard size must be set but wasn't: " + expectedShardSize, expectedShardSize > 0)__        ensureGreen()__        assertHitCount(client().prepareSearch("target").setSize(100).setQuery(new TermsQueryBuilder("foo", "bar")).get(), 20)__    };tests,that,we,can,manually,recover,from,a,failed,allocation,due,to,shards,being,moved,away,etc;public,void,test,create,shrink,index,fails,throws,exception,internal,cluster,ensure,at,least,num,data,nodes,2,prepare,create,source,set,settings,settings,builder,put,index,settings,put,random,int,between,2,7,put,0,get,for,int,i,0,i,20,i,client,prepare,index,source,type,set,source,foo,bar,i,i,xcontent,type,json,get,immutable,open,map,string,discovery,node,data,nodes,client,admin,cluster,prepare,state,get,get,state,nodes,get,data,nodes,assert,true,at,least,2,nodes,but,was,data,nodes,size,data,nodes,size,2,discovery,node,discovery,nodes,data,nodes,values,to,array,discovery,node,class,string,spare,node,discovery,nodes,0,get,name,string,merge,node,discovery,nodes,1,get,name,ensure,green,client,admin,indices,prepare,update,settings,source,set,settings,settings,builder,put,index,routing,allocation,require,merge,node,put,index,blocks,write,true,get,ensure,green,client,admin,indices,prepare,resize,index,source,target,set,wait,for,active,shards,active,shard,count,none,set,settings,settings,builder,put,index,routing,allocation,exclude,merge,node,put,index,0,put,index,allocation,1,build,get,client,admin,cluster,prepare,health,target,set,wait,for,events,priority,languid,get,client,admin,indices,prepare,update,settings,source,set,settings,settings,builder,put,index,routing,allocation,require,spare,node,put,index,blocks,write,true,get,ensure,green,source,client,admin,indices,prepare,update,settings,target,set,settings,settings,builder,put,null,index,routing,allocation,exclude,get,assert,busy,cluster,state,response,cluster,state,response,client,admin,cluster,prepare,state,get,routing,table,routing,tables,cluster,state,response,get,state,routing,table,assert,true,routing,tables,index,target,shard,0,get,shards,get,0,unassigned,assert,equals,unassigned,info,reason,routing,tables,index,target,shard,0,get,shards,get,0,unassigned,info,get,reason,assert,equals,1,routing,tables,index,target,shard,0,get,shards,get,0,unassigned,info,get,num,failed,allocations,client,admin,indices,prepare,update,settings,source,set,settings,settings,builder,put,index,routing,allocation,require,merge,node,get,ensure,green,source,final,internal,cluster,info,service,info,service,internal,cluster,info,service,internal,cluster,get,instance,cluster,info,service,class,internal,cluster,get,master,name,info,service,refresh,cluster,reroute,response,cluster,reroute,response,client,admin,cluster,prepare,reroute,set,retry,failed,true,get,long,expected,shard,size,cluster,reroute,response,get,state,routing,table,index,target,shard,0,get,shards,get,0,get,expected,shard,size,assert,true,expected,shard,size,must,be,set,but,wasn,t,expected,shard,size,expected,shard,size,0,ensure,green,assert,hit,count,client,prepare,search,target,set,size,100,set,query,new,terms,query,builder,foo,bar,get,20
ShrinkIndexIT -> public void testCreateShrinkIndexFails() throws Exception;1538067637;Tests that we can manually recover from a failed allocation due to shards being moved away etc.;public void testCreateShrinkIndexFails() throws Exception {_        internalCluster().ensureAtLeastNumDataNodes(2)__        prepareCreate("source").setSettings(Settings.builder().put(indexSettings())_            .put("number_of_shards", randomIntBetween(2, 7))_            .put("number_of_replicas", 0)).get()__        for (int i = 0_ i < 20_ i++) {_            client().prepareIndex("source", "type")_                .setSource("{\"foo\" : \"bar\", \"i\" : " + i + "}", XContentType.JSON).get()__        }_        ImmutableOpenMap<String, DiscoveryNode> dataNodes = client().admin().cluster().prepareState().get().getState().nodes()_            .getDataNodes()__        assertTrue("at least 2 nodes but was: " + dataNodes.size(), dataNodes.size() >= 2)__        DiscoveryNode[] discoveryNodes = dataNodes.values().toArray(DiscoveryNode.class)__        String spareNode = discoveryNodes[0].getName()__        String mergeNode = discoveryNodes[1].getName()__        _        _        _        ensureGreen()__        _        client().admin().indices().prepareUpdateSettings("source")_            .setSettings(Settings.builder().put("index.routing.allocation.require._name", mergeNode)_                .put("index.blocks.write", true)).get()__        ensureGreen()___        _        client().admin().indices().prepareResizeIndex("source", "target")_            .setWaitForActiveShards(ActiveShardCount.NONE)_            .setSettings(Settings.builder()_                .put("index.routing.allocation.exclude._name", mergeNode) _                .put("index.number_of_replicas", 0)_                .put("index.allocation.max_retries", 1).build()).get()__        client().admin().cluster().prepareHealth("target").setWaitForEvents(Priority.LANGUID).get()___        _        client().admin().indices().prepareUpdateSettings("source")_            .setSettings(Settings.builder().put("index.routing.allocation.require._name", spareNode)_                .put("index.blocks.write", true)).get()__        ensureGreen("source")___        client().admin().indices().prepareUpdateSettings("target") _            .setSettings(Settings.builder().putNull("index.routing.allocation.exclude._name")).get()__        _        assertBusy(() -> {_            ClusterStateResponse clusterStateResponse = client().admin().cluster().prepareState().get()__            RoutingTable routingTables = clusterStateResponse.getState().routingTable()__            assertTrue(routingTables.index("target").shard(0).getShards().get(0).unassigned())__            assertEquals(UnassignedInfo.Reason.ALLOCATION_FAILED,_                routingTables.index("target").shard(0).getShards().get(0).unassignedInfo().getReason())__            assertEquals(1,_                routingTables.index("target").shard(0).getShards().get(0).unassignedInfo().getNumFailedAllocations())__        })__        client().admin().indices().prepareUpdateSettings("source") _            .setSettings(Settings.builder()_                .put("index.routing.allocation.require._name", mergeNode)).get()__        ensureGreen("source")___        final InternalClusterInfoService infoService = (InternalClusterInfoService) internalCluster().getInstance(ClusterInfoService.class,_            internalCluster().getMasterName())__        infoService.refresh()__        _        ClusterRerouteResponse clusterRerouteResponse = client().admin().cluster().prepareReroute().setRetryFailed(true).get()__        long expectedShardSize = clusterRerouteResponse.getState().routingTable().index("target")_            .shard(0).getShards().get(0).getExpectedShardSize()__        _        assertTrue("expected shard size must be set but wasn't: " + expectedShardSize, expectedShardSize > 0)__        ensureGreen()__        assertHitCount(client().prepareSearch("target").setSize(100).setQuery(new TermsQueryBuilder("foo", "bar")).get(), 20)__    };tests,that,we,can,manually,recover,from,a,failed,allocation,due,to,shards,being,moved,away,etc;public,void,test,create,shrink,index,fails,throws,exception,internal,cluster,ensure,at,least,num,data,nodes,2,prepare,create,source,set,settings,settings,builder,put,index,settings,put,random,int,between,2,7,put,0,get,for,int,i,0,i,20,i,client,prepare,index,source,type,set,source,foo,bar,i,i,xcontent,type,json,get,immutable,open,map,string,discovery,node,data,nodes,client,admin,cluster,prepare,state,get,get,state,nodes,get,data,nodes,assert,true,at,least,2,nodes,but,was,data,nodes,size,data,nodes,size,2,discovery,node,discovery,nodes,data,nodes,values,to,array,discovery,node,class,string,spare,node,discovery,nodes,0,get,name,string,merge,node,discovery,nodes,1,get,name,ensure,green,client,admin,indices,prepare,update,settings,source,set,settings,settings,builder,put,index,routing,allocation,require,merge,node,put,index,blocks,write,true,get,ensure,green,client,admin,indices,prepare,resize,index,source,target,set,wait,for,active,shards,active,shard,count,none,set,settings,settings,builder,put,index,routing,allocation,exclude,merge,node,put,index,0,put,index,allocation,1,build,get,client,admin,cluster,prepare,health,target,set,wait,for,events,priority,languid,get,client,admin,indices,prepare,update,settings,source,set,settings,settings,builder,put,index,routing,allocation,require,spare,node,put,index,blocks,write,true,get,ensure,green,source,client,admin,indices,prepare,update,settings,target,set,settings,settings,builder,put,null,index,routing,allocation,exclude,get,assert,busy,cluster,state,response,cluster,state,response,client,admin,cluster,prepare,state,get,routing,table,routing,tables,cluster,state,response,get,state,routing,table,assert,true,routing,tables,index,target,shard,0,get,shards,get,0,unassigned,assert,equals,unassigned,info,reason,routing,tables,index,target,shard,0,get,shards,get,0,unassigned,info,get,reason,assert,equals,1,routing,tables,index,target,shard,0,get,shards,get,0,unassigned,info,get,num,failed,allocations,client,admin,indices,prepare,update,settings,source,set,settings,settings,builder,put,index,routing,allocation,require,merge,node,get,ensure,green,source,final,internal,cluster,info,service,info,service,internal,cluster,info,service,internal,cluster,get,instance,cluster,info,service,class,internal,cluster,get,master,name,info,service,refresh,cluster,reroute,response,cluster,reroute,response,client,admin,cluster,prepare,reroute,set,retry,failed,true,get,long,expected,shard,size,cluster,reroute,response,get,state,routing,table,index,target,shard,0,get,shards,get,0,get,expected,shard,size,assert,true,expected,shard,size,must,be,set,but,wasn,t,expected,shard,size,expected,shard,size,0,ensure,green,assert,hit,count,client,prepare,search,target,set,size,100,set,query,new,terms,query,builder,foo,bar,get,20
ShrinkIndexIT -> public void testCreateShrinkIndexFails() throws Exception;1544081506;Tests that we can manually recover from a failed allocation due to shards being moved away etc.;public void testCreateShrinkIndexFails() throws Exception {_        internalCluster().ensureAtLeastNumDataNodes(2)__        prepareCreate("source").setSettings(Settings.builder().put(indexSettings())_            .put("number_of_shards", randomIntBetween(2, 7))_            .put("number_of_replicas", 0)).get()__        for (int i = 0_ i < 20_ i++) {_            client().prepareIndex("source", "type")_                .setSource("{\"foo\" : \"bar\", \"i\" : " + i + "}", XContentType.JSON).get()__        }_        ImmutableOpenMap<String, DiscoveryNode> dataNodes = client().admin().cluster().prepareState().get().getState().nodes()_            .getDataNodes()__        assertTrue("at least 2 nodes but was: " + dataNodes.size(), dataNodes.size() >= 2)__        DiscoveryNode[] discoveryNodes = dataNodes.values().toArray(DiscoveryNode.class)__        String spareNode = discoveryNodes[0].getName()__        String mergeNode = discoveryNodes[1].getName()__        _        _        _        ensureGreen()__        _        client().admin().indices().prepareUpdateSettings("source")_            .setSettings(Settings.builder().put("index.routing.allocation.require._name", mergeNode)_                .put("index.blocks.write", true)).get()__        ensureGreen()___        _        client().admin().indices().prepareResizeIndex("source", "target")_            .setWaitForActiveShards(ActiveShardCount.NONE)_            .setSettings(Settings.builder()_                .put("index.routing.allocation.exclude._name", mergeNode) _                .put("index.number_of_replicas", 0)_                .put("index.allocation.max_retries", 1).build()).get()__        client().admin().cluster().prepareHealth("target").setWaitForEvents(Priority.LANGUID).get()___        _        client().admin().indices().prepareUpdateSettings("source")_            .setSettings(Settings.builder().put("index.routing.allocation.require._name", spareNode)_                .put("index.blocks.write", true)).get()__        ensureGreen("source")___        client().admin().indices().prepareUpdateSettings("target") _            .setSettings(Settings.builder().putNull("index.routing.allocation.exclude._name")).get()__        _        assertBusy(() -> {_            ClusterStateResponse clusterStateResponse = client().admin().cluster().prepareState().get()__            RoutingTable routingTables = clusterStateResponse.getState().routingTable()__            assertTrue(routingTables.index("target").shard(0).getShards().get(0).unassigned())__            assertEquals(UnassignedInfo.Reason.ALLOCATION_FAILED,_                routingTables.index("target").shard(0).getShards().get(0).unassignedInfo().getReason())__            assertEquals(1,_                routingTables.index("target").shard(0).getShards().get(0).unassignedInfo().getNumFailedAllocations())__        })__        client().admin().indices().prepareUpdateSettings("source") _            .setSettings(Settings.builder()_                .put("index.routing.allocation.require._name", mergeNode)).get()__        ensureGreen("source")___        final InternalClusterInfoService infoService = (InternalClusterInfoService) internalCluster().getInstance(ClusterInfoService.class,_            internalCluster().getMasterName())__        infoService.refresh()__        _        ClusterRerouteResponse clusterRerouteResponse = client().admin().cluster().prepareReroute().setRetryFailed(true).get()__        long expectedShardSize = clusterRerouteResponse.getState().routingTable().index("target")_            .shard(0).getShards().get(0).getExpectedShardSize()__        _        assertTrue("expected shard size must be set but wasn't: " + expectedShardSize, expectedShardSize > 0)__        ensureGreen()__        assertHitCount(client().prepareSearch("target").setSize(100).setQuery(new TermsQueryBuilder("foo", "bar")).get(), 20)__    };tests,that,we,can,manually,recover,from,a,failed,allocation,due,to,shards,being,moved,away,etc;public,void,test,create,shrink,index,fails,throws,exception,internal,cluster,ensure,at,least,num,data,nodes,2,prepare,create,source,set,settings,settings,builder,put,index,settings,put,random,int,between,2,7,put,0,get,for,int,i,0,i,20,i,client,prepare,index,source,type,set,source,foo,bar,i,i,xcontent,type,json,get,immutable,open,map,string,discovery,node,data,nodes,client,admin,cluster,prepare,state,get,get,state,nodes,get,data,nodes,assert,true,at,least,2,nodes,but,was,data,nodes,size,data,nodes,size,2,discovery,node,discovery,nodes,data,nodes,values,to,array,discovery,node,class,string,spare,node,discovery,nodes,0,get,name,string,merge,node,discovery,nodes,1,get,name,ensure,green,client,admin,indices,prepare,update,settings,source,set,settings,settings,builder,put,index,routing,allocation,require,merge,node,put,index,blocks,write,true,get,ensure,green,client,admin,indices,prepare,resize,index,source,target,set,wait,for,active,shards,active,shard,count,none,set,settings,settings,builder,put,index,routing,allocation,exclude,merge,node,put,index,0,put,index,allocation,1,build,get,client,admin,cluster,prepare,health,target,set,wait,for,events,priority,languid,get,client,admin,indices,prepare,update,settings,source,set,settings,settings,builder,put,index,routing,allocation,require,spare,node,put,index,blocks,write,true,get,ensure,green,source,client,admin,indices,prepare,update,settings,target,set,settings,settings,builder,put,null,index,routing,allocation,exclude,get,assert,busy,cluster,state,response,cluster,state,response,client,admin,cluster,prepare,state,get,routing,table,routing,tables,cluster,state,response,get,state,routing,table,assert,true,routing,tables,index,target,shard,0,get,shards,get,0,unassigned,assert,equals,unassigned,info,reason,routing,tables,index,target,shard,0,get,shards,get,0,unassigned,info,get,reason,assert,equals,1,routing,tables,index,target,shard,0,get,shards,get,0,unassigned,info,get,num,failed,allocations,client,admin,indices,prepare,update,settings,source,set,settings,settings,builder,put,index,routing,allocation,require,merge,node,get,ensure,green,source,final,internal,cluster,info,service,info,service,internal,cluster,info,service,internal,cluster,get,instance,cluster,info,service,class,internal,cluster,get,master,name,info,service,refresh,cluster,reroute,response,cluster,reroute,response,client,admin,cluster,prepare,reroute,set,retry,failed,true,get,long,expected,shard,size,cluster,reroute,response,get,state,routing,table,index,target,shard,0,get,shards,get,0,get,expected,shard,size,assert,true,expected,shard,size,must,be,set,but,wasn,t,expected,shard,size,expected,shard,size,0,ensure,green,assert,hit,count,client,prepare,search,target,set,size,100,set,query,new,terms,query,builder,foo,bar,get,20
