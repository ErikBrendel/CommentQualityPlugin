commented;modifiers;parameterAmount;loc;comment;code
false;public,static;0;14;;public static SearchProfileShardResults createTestItem() {     int size = rarely() ? 0 : randomIntBetween(1, 2).     Map<String, ProfileShardResult> searchProfileResults = new HashMap<>(size).     for (int i = 0. i < size. i++) {         List<QueryProfileShardResult> queryProfileResults = new ArrayList<>().         int queryItems = rarely() ? 0 : randomIntBetween(1, 2).         for (int q = 0. q < queryItems. q++) {             queryProfileResults.add(QueryProfileShardResultTests.createTestItem()).         }         AggregationProfileShardResult aggProfileShardResult = AggregationProfileShardResultTests.createTestItem(1).         searchProfileResults.put(randomAlphaOfLengthBetween(5, 10), new ProfileShardResult(queryProfileResults, aggProfileShardResult)).     }     return new SearchProfileShardResults(searchProfileResults). }
false;public;0;3;;public void testFromXContent() throws IOException {     doFromXContentTestWithRandomFields(false). }
true;public;0;3;/**  * This test adds random fields and objects to the xContent rendered out to ensure we can parse it  * back to be forward compatible with additions to the xContent  */ ;/**  * This test adds random fields and objects to the xContent rendered out to ensure we can parse it  * back to be forward compatible with additions to the xContent  */ public void testFromXContentWithRandomFields() throws IOException {     doFromXContentTestWithRandomFields(true). }
false;private;1;27;;private void doFromXContentTestWithRandomFields(boolean addRandomFields) throws IOException {     SearchProfileShardResults shardResult = createTestItem().     XContentType xContentType = randomFrom(XContentType.values()).     boolean humanReadable = randomBoolean().     BytesReference originalBytes = toShuffledXContent(shardResult, xContentType, ToXContent.EMPTY_PARAMS, humanReadable).     BytesReference mutated.     if (addRandomFields) {         // The ProfileResults "breakdown" section just consists of key/value pairs, we shouldn't add anything random there         // also we don't want to insert into the root object here, its just the PROFILE_FIELD itself         Predicate<String> excludeFilter = (s) -> (s.isEmpty() || s.endsWith(ProfileResult.BREAKDOWN.getPreferredName())).         mutated = insertRandomFields(xContentType, originalBytes, excludeFilter, random()).     } else {         mutated = originalBytes.     }     SearchProfileShardResults parsed.     try (XContentParser parser = createParser(xContentType.xContent(), mutated)) {         ensureExpectedToken(XContentParser.Token.START_OBJECT, parser.nextToken(), parser::getTokenLocation).         ensureFieldName(parser, parser.nextToken(), SearchProfileShardResults.PROFILE_FIELD).         ensureExpectedToken(XContentParser.Token.START_OBJECT, parser.nextToken(), parser::getTokenLocation).         parsed = SearchProfileShardResults.fromXContent(parser).         assertEquals(XContentParser.Token.END_OBJECT, parser.currentToken()).         assertEquals(XContentParser.Token.END_OBJECT, parser.nextToken()).         assertNull(parser.nextToken()).     }     assertToXContentEquivalent(originalBytes, toXContent(parsed, xContentType, humanReadable), xContentType). }
