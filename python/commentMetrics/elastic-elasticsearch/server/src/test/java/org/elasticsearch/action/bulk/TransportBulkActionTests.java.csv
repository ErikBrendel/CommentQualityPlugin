commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected boolean needToCheck() {     return true. }
false;;3;5;;@Override void createIndex(String index, TimeValue timeout, ActionListener<CreateIndexResponse> listener) {     indexCreated = true.     listener.onResponse(null). }
false;public;0;13;;@Before public void setUp() throws Exception {     super.setUp().     threadPool = new TestThreadPool("TransportBulkActionTookTests").     clusterService = createClusterService(threadPool).     CapturingTransport capturingTransport = new CapturingTransport().     transportService = capturingTransport.createTransportService(clusterService.getSettings(), threadPool, TransportService.NOOP_TRANSPORT_INTERCEPTOR, boundAddress -> clusterService.localNode(), null, Collections.emptySet()).     transportService.start().     transportService.acceptIncomingRequests().     bulkAction = new TestTransportBulkAction(). }
false;public;0;7;;@After public void tearDown() throws Exception {     ThreadPool.terminate(threadPool, 30, TimeUnit.SECONDS).     threadPool = null.     clusterService.close().     super.tearDown(). }
false;public;0;14;;public void testDeleteNonExistingDocDoesNotCreateIndex() throws Exception {     BulkRequest bulkRequest = new BulkRequest().add(new DeleteRequest("index", "type", "id")).     bulkAction.execute(null, bulkRequest, ActionListener.wrap(response -> {         assertFalse(bulkAction.indexCreated).         BulkItemResponse[] bulkResponses = ((BulkResponse) response).getItems().         assertEquals(bulkResponses.length, 1).         assertTrue(bulkResponses[0].isFailed()).         assertTrue(bulkResponses[0].getFailure().getCause() instanceof IndexNotFoundException).         assertEquals("index", bulkResponses[0].getFailure().getIndex()).     }, exception -> {         throw new AssertionError(exception).     })). }
false;public;0;10;;public void testDeleteNonExistingDocExternalVersionCreatesIndex() throws Exception {     BulkRequest bulkRequest = new BulkRequest().add(new DeleteRequest("index", "type", "id").versionType(VersionType.EXTERNAL).version(0)).     bulkAction.execute(null, bulkRequest, ActionListener.wrap(response -> {         assertTrue(bulkAction.indexCreated).     }, exception -> {         throw new AssertionError(exception).     })). }
false;public;0;10;;public void testDeleteNonExistingDocExternalGteVersionCreatesIndex() throws Exception {     BulkRequest bulkRequest = new BulkRequest().add(new DeleteRequest("index2", "type", "id").versionType(VersionType.EXTERNAL_GTE).version(0)).     bulkAction.execute(null, bulkRequest, ActionListener.wrap(response -> {         assertTrue(bulkAction.indexCreated).     }, exception -> {         throw new AssertionError(exception).     })). }
false;public;0;18;;public void testGetIndexWriteRequest() throws Exception {     IndexRequest indexRequest = new IndexRequest("index", "type", "id1").source(Collections.emptyMap()).     UpdateRequest upsertRequest = new UpdateRequest("index", "type", "id1").upsert(indexRequest).script(mockScript("1")).     UpdateRequest docAsUpsertRequest = new UpdateRequest("index", "type", "id2").doc(indexRequest).docAsUpsert(true).     UpdateRequest scriptedUpsert = new UpdateRequest("index", "type", "id2").upsert(indexRequest).script(mockScript("1")).scriptedUpsert(true).     assertEquals(TransportBulkAction.getIndexWriteRequest(indexRequest), indexRequest).     assertEquals(TransportBulkAction.getIndexWriteRequest(upsertRequest), indexRequest).     assertEquals(TransportBulkAction.getIndexWriteRequest(docAsUpsertRequest), indexRequest).     assertEquals(TransportBulkAction.getIndexWriteRequest(scriptedUpsert), indexRequest).     DeleteRequest deleteRequest = new DeleteRequest("index", "id").     assertNull(TransportBulkAction.getIndexWriteRequest(deleteRequest)).     UpdateRequest badUpsertRequest = new UpdateRequest("index", "type", "id1").     assertNull(TransportBulkAction.getIndexWriteRequest(badUpsertRequest)). }
