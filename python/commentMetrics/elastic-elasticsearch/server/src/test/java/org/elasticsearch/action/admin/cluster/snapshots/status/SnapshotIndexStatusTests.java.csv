commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;10;;@Override protected SnapshotIndexStatus createTestInstance() {     String index = randomAlphaOfLength(10).     List<SnapshotIndexShardStatus> shardStatuses = new ArrayList<>().     SnapshotIndexShardStatusTests builder = new SnapshotIndexShardStatusTests().     for (int idx = 0. idx < randomIntBetween(0, 10). idx++) {         shardStatuses.add(builder.createForIndex(index)).     }     return new SnapshotIndexStatus(index, shardStatuses). }
false;protected;0;5;;@Override protected Predicate<String> getRandomFieldsExcludeFilter() {     // Do not place random fields in the root object or the shards field since their fields correspond to names.     return (s) -> s.isEmpty() || s.endsWith("shards"). }
false;protected;1;8;;@Override protected SnapshotIndexStatus doParseInstance(XContentParser parser) throws IOException {     XContentParserUtils.ensureExpectedToken(XContentParser.Token.START_OBJECT, parser.nextToken(), parser::getTokenLocation).     XContentParserUtils.ensureExpectedToken(XContentParser.Token.FIELD_NAME, parser.nextToken(), parser::getTokenLocation).     SnapshotIndexStatus status = SnapshotIndexStatus.fromXContent(parser).     XContentParserUtils.ensureExpectedToken(XContentParser.Token.END_OBJECT, parser.nextToken(), parser::getTokenLocation).     return status. }
false;protected;0;4;;@Override protected boolean supportsUnknownFields() {     return true. }
