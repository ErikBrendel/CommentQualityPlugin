commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;public void testUseG1GC() {     // G1GC is enabled     if (Constants.JVM_NAME.contains("HotSpot") || Constants.JVM_NAME.contains("OpenJDK")) {         assertEquals(Boolean.toString(isG1GCEnabled()), JvmInfo.jvmInfo().useG1GC()).     } else {         assertEquals("unknown", JvmInfo.jvmInfo().useG1GC()).     } }
false;private;0;14;;private boolean isG1GCEnabled() {     final String argline = System.getProperty("tests.jvm.argline").     final boolean g1GCEnabled = flagIsEnabled(argline, "UseG1GC").     // for JDK 9 the default collector when no collector is specified is G1 GC     final boolean versionIsAtLeastJava9 = JavaVersion.current().compareTo(JavaVersion.parse("9")) >= 0.     final boolean noOtherCollectorSpecified = argline == null || (!flagIsEnabled(argline, "UseParNewGC") && !flagIsEnabled(argline, "UseParallelGC") && !flagIsEnabled(argline, "UseParallelOldGC") && !flagIsEnabled(argline, "UseSerialGC") && !flagIsEnabled(argline, "UseConcMarkSweepGC")).     return g1GCEnabled || (versionIsAtLeastJava9 && noOtherCollectorSpecified). }
false;private;2;6;;private boolean flagIsEnabled(String argline, String flag) {     final boolean containsPositiveFlag = argline != null && argline.contains("-XX:+" + flag).     if (!containsPositiveFlag)         return false.     final int index = argline.lastIndexOf(flag).     return argline.charAt(index - 1) == '+'. }
