commented;modifiers;parameterAmount;loc;comment;code
false;public,static;0;23;;public static Option createTestItem() {     Text text = new Text(randomAlphaOfLengthBetween(5, 15)).     int docId = randomInt().     int numberOfContexts = randomIntBetween(0, 3).     Map<String, Set<String>> contexts = new HashMap<>().     for (int i = 0. i < numberOfContexts. i++) {         int numberOfValues = randomIntBetween(0, 3).         Set<String> values = new HashSet<>().         for (int v = 0. v < numberOfValues. v++) {             values.add(randomAlphaOfLengthBetween(5, 15)).         }         contexts.put(randomAlphaOfLengthBetween(5, 15), values).     }     SearchHit hit = null.     float score = randomFloat().     if (randomBoolean()) {         hit = SearchHitTests.createTestItem(false, true).         score = hit.getScore().     }     Option option = new CompletionSuggestion.Entry.Option(docId, text, score, contexts).     option.setHit(hit).     return option. }
false;public;0;3;;public void testFromXContent() throws IOException {     doTestFromXContent(false). }
false;public;0;3;;public void testFromXContentWithRandomFields() throws IOException {     doTestFromXContent(true). }
false;private;1;28;;private void doTestFromXContent(boolean addRandomFields) throws IOException {     Option option = createTestItem().     XContentType xContentType = randomFrom(XContentType.values()).     boolean humanReadable = randomBoolean().     BytesReference originalBytes = toShuffledXContent(option, xContentType, ToXContent.EMPTY_PARAMS, humanReadable).     BytesReference mutated.     if (addRandomFields) {         // "contexts" is an object consisting of key/array pairs, we shouldn't add anything random there         // also there can be inner search hits fields inside this option, we need to exclude another couple of paths         // where we cannot add random stuff         Predicate<String> excludeFilter = (path) -> (path.endsWith(CompletionSuggestion.Entry.Option.CONTEXTS.getPreferredName()) || path.endsWith("highlight") || path.endsWith("fields") || path.contains("_source") || path.contains("inner_hits")).         mutated = insertRandomFields(xContentType, originalBytes, excludeFilter, random()).     } else {         mutated = originalBytes.     }     Option parsed.     try (XContentParser parser = createParser(xContentType.xContent(), mutated)) {         parsed = Option.fromXContent(parser).         assertNull(parser.nextToken()).     }     assertEquals(option.getText(), parsed.getText()).     assertEquals(option.getHighlighted(), parsed.getHighlighted()).     assertEquals(option.getScore(), parsed.getScore(), Float.MIN_VALUE).     assertEquals(option.collateMatch(), parsed.collateMatch()).     assertEquals(option.getContexts(), parsed.getContexts()).     assertToXContentEquivalent(originalBytes, toXContent(parsed, xContentType, humanReadable), xContentType). }
false;public;0;7;;public void testToXContent() throws IOException {     Map<String, Set<String>> contexts = Collections.singletonMap("key", Collections.singleton("value")).     CompletionSuggestion.Entry.Option option = new CompletionSuggestion.Entry.Option(1, new Text("someText"), 1.3f, contexts).     BytesReference xContent = toXContent(option, XContentType.JSON, randomBoolean()).     assertEquals("{\"text\":\"someText\",\"score\":1.3,\"contexts\":{\"key\":[\"value\"]}}", xContent.utf8ToString()). }
