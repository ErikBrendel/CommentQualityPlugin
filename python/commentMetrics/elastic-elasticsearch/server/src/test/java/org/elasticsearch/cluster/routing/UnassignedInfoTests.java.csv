# id;timestamp;commentText;codeText;commentWords;codeWords
UnassignedInfoTests -> public void testStateTransitionMetaHandling();1524684173;The unassigned meta is kept when a shard goes to INITIALIZING, but cleared when it moves to STARTED.;public void testStateTransitionMetaHandling() {_        ShardRouting shard = TestShardRouting.newShardRouting("test", 1, null, null, true, ShardRoutingState.UNASSIGNED, new UnassignedInfo(UnassignedInfo.Reason.INDEX_CREATED, null))__        assertThat(shard.unassignedInfo(), notNullValue())__        shard = shard.initialize("test_node", null, -1)__        assertThat(shard.state(), equalTo(ShardRoutingState.INITIALIZING))__        assertThat(shard.unassignedInfo(), notNullValue())__        shard = shard.moveToStarted()__        assertThat(shard.state(), equalTo(ShardRoutingState.STARTED))__        assertThat(shard.unassignedInfo(), nullValue())__    };the,unassigned,meta,is,kept,when,a,shard,goes,to,initializing,but,cleared,when,it,moves,to,started;public,void,test,state,transition,meta,handling,shard,routing,shard,test,shard,routing,new,shard,routing,test,1,null,null,true,shard,routing,state,unassigned,new,unassigned,info,unassigned,info,reason,null,assert,that,shard,unassigned,info,not,null,value,shard,shard,initialize,null,1,assert,that,shard,state,equal,to,shard,routing,state,initializing,assert,that,shard,unassigned,info,not,null,value,shard,shard,move,to,started,assert,that,shard,state,equal,to,shard,routing,state,started,assert,that,shard,unassigned,info,null,value
UnassignedInfoTests -> public void testStateTransitionMetaHandling();1540847035;The unassigned meta is kept when a shard goes to INITIALIZING, but cleared when it moves to STARTED.;public void testStateTransitionMetaHandling() {_        ShardRouting shard = TestShardRouting.newShardRouting("test", 1, null, null,_            true, ShardRoutingState.UNASSIGNED, new UnassignedInfo(UnassignedInfo.Reason.INDEX_CREATED, null))__        assertThat(shard.unassignedInfo(), notNullValue())__        shard = shard.initialize("test_node", null, -1)__        assertThat(shard.state(), equalTo(ShardRoutingState.INITIALIZING))__        assertThat(shard.unassignedInfo(), notNullValue())__        shard = shard.moveToStarted()__        assertThat(shard.state(), equalTo(ShardRoutingState.STARTED))__        assertThat(shard.unassignedInfo(), nullValue())__    };the,unassigned,meta,is,kept,when,a,shard,goes,to,initializing,but,cleared,when,it,moves,to,started;public,void,test,state,transition,meta,handling,shard,routing,shard,test,shard,routing,new,shard,routing,test,1,null,null,true,shard,routing,state,unassigned,new,unassigned,info,unassigned,info,reason,null,assert,that,shard,unassigned,info,not,null,value,shard,shard,initialize,null,1,assert,that,shard,state,equal,to,shard,routing,state,initializing,assert,that,shard,unassigned,info,not,null,value,shard,shard,move,to,started,assert,that,shard,state,equal,to,shard,routing,state,started,assert,that,shard,unassigned,info,null,value
UnassignedInfoTests -> public void testStateTransitionMetaHandling();1540912197;The unassigned meta is kept when a shard goes to INITIALIZING, but cleared when it moves to STARTED.;public void testStateTransitionMetaHandling() {_        ShardRouting shard = TestShardRouting.newShardRouting("test", 1, null, null,_            true, ShardRoutingState.UNASSIGNED, new UnassignedInfo(UnassignedInfo.Reason.INDEX_CREATED, null))__        assertThat(shard.unassignedInfo(), notNullValue())__        shard = shard.initialize("test_node", null, -1)__        assertThat(shard.state(), equalTo(ShardRoutingState.INITIALIZING))__        assertThat(shard.unassignedInfo(), notNullValue())__        shard = shard.moveToStarted()__        assertThat(shard.state(), equalTo(ShardRoutingState.STARTED))__        assertThat(shard.unassignedInfo(), nullValue())__    };the,unassigned,meta,is,kept,when,a,shard,goes,to,initializing,but,cleared,when,it,moves,to,started;public,void,test,state,transition,meta,handling,shard,routing,shard,test,shard,routing,new,shard,routing,test,1,null,null,true,shard,routing,state,unassigned,new,unassigned,info,unassigned,info,reason,null,assert,that,shard,unassigned,info,not,null,value,shard,shard,initialize,null,1,assert,that,shard,state,equal,to,shard,routing,state,initializing,assert,that,shard,unassigned,info,not,null,value,shard,shard,move,to,started,assert,that,shard,state,equal,to,shard,routing,state,started,assert,that,shard,unassigned,info,null,value
UnassignedInfoTests -> public void testStateTransitionMetaHandling();1544783963;The unassigned meta is kept when a shard goes to INITIALIZING, but cleared when it moves to STARTED.;public void testStateTransitionMetaHandling() {_        ShardRouting shard = TestShardRouting.newShardRouting("test", 1, null, null,_            true, ShardRoutingState.UNASSIGNED, new UnassignedInfo(UnassignedInfo.Reason.INDEX_CREATED, null))__        assertThat(shard.unassignedInfo(), notNullValue())__        shard = shard.initialize("test_node", null, -1)__        assertThat(shard.state(), equalTo(ShardRoutingState.INITIALIZING))__        assertThat(shard.unassignedInfo(), notNullValue())__        shard = shard.moveToStarted()__        assertThat(shard.state(), equalTo(ShardRoutingState.STARTED))__        assertThat(shard.unassignedInfo(), nullValue())__    };the,unassigned,meta,is,kept,when,a,shard,goes,to,initializing,but,cleared,when,it,moves,to,started;public,void,test,state,transition,meta,handling,shard,routing,shard,test,shard,routing,new,shard,routing,test,1,null,null,true,shard,routing,state,unassigned,new,unassigned,info,unassigned,info,reason,null,assert,that,shard,unassigned,info,not,null,value,shard,shard,initialize,null,1,assert,that,shard,state,equal,to,shard,routing,state,initializing,assert,that,shard,unassigned,info,not,null,value,shard,shard,move,to,started,assert,that,shard,state,equal,to,shard,routing,state,started,assert,that,shard,unassigned,info,null,value
UnassignedInfoTests -> public void testStateTransitionMetaHandling();1548259585;The unassigned meta is kept when a shard goes to INITIALIZING, but cleared when it moves to STARTED.;public void testStateTransitionMetaHandling() {_        ShardRouting shard = TestShardRouting.newShardRouting("test", 1, null, null,_            true, ShardRoutingState.UNASSIGNED, new UnassignedInfo(UnassignedInfo.Reason.INDEX_CREATED, null))__        assertThat(shard.unassignedInfo(), notNullValue())__        shard = shard.initialize("test_node", null, -1)__        assertThat(shard.state(), equalTo(ShardRoutingState.INITIALIZING))__        assertThat(shard.unassignedInfo(), notNullValue())__        shard = shard.moveToStarted()__        assertThat(shard.state(), equalTo(ShardRoutingState.STARTED))__        assertThat(shard.unassignedInfo(), nullValue())__    };the,unassigned,meta,is,kept,when,a,shard,goes,to,initializing,but,cleared,when,it,moves,to,started;public,void,test,state,transition,meta,handling,shard,routing,shard,test,shard,routing,new,shard,routing,test,1,null,null,true,shard,routing,state,unassigned,new,unassigned,info,unassigned,info,reason,null,assert,that,shard,unassigned,info,not,null,value,shard,shard,initialize,null,1,assert,that,shard,state,equal,to,shard,routing,state,initializing,assert,that,shard,unassigned,info,not,null,value,shard,shard,move,to,started,assert,that,shard,state,equal,to,shard,routing,state,started,assert,that,shard,unassigned,info,null,value
UnassignedInfoTests -> public void testNodeLeave();1524684173;Tests that during reroute when a node is detected as leaving the cluster, the right unassigned meta is set;public void testNodeLeave() {_        AllocationService allocation = createAllocationService()__        MetaData metaData = MetaData.builder()_                .put(IndexMetaData.builder("test").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1))_                .build()__        ClusterState clusterState = ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY))_                .metaData(metaData)_                .routingTable(RoutingTable.builder().addAsNew(metaData.index("test")).build()).build()__        clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder().add(newNode("node1")).add(newNode("node2"))).build()__        clusterState = allocation.reroute(clusterState, "reroute")__        _        clusterState = allocation.applyStartedShards(clusterState, clusterState.getRoutingNodes().shardsWithState(INITIALIZING))__        _        clusterState = allocation.applyStartedShards(clusterState, clusterState.getRoutingNodes().shardsWithState(INITIALIZING))__        assertThat(clusterState.getRoutingNodes().unassigned().size() > 0, equalTo(false))__        _        clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder(clusterState.nodes()).remove("node2")).build()__        clusterState = allocation.deassociateDeadNodes(clusterState, true, "reroute")__        _        assertThat(clusterState.getRoutingNodes().unassigned().size() > 0, equalTo(true))__        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).size(), equalTo(1))__        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo(), notNullValue())__        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getReason(), equalTo(UnassignedInfo.Reason.NODE_LEFT))__        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getUnassignedTimeInMillis(), greaterThan(0L))__    };tests,that,during,reroute,when,a,node,is,detected,as,leaving,the,cluster,the,right,unassigned,meta,is,set;public,void,test,node,leave,allocation,service,allocation,create,allocation,service,meta,data,meta,data,meta,data,builder,put,index,meta,data,builder,test,settings,settings,version,current,number,of,shards,1,number,of,replicas,1,build,cluster,state,cluster,state,cluster,state,builder,cluster,name,get,default,settings,empty,meta,data,meta,data,routing,table,routing,table,builder,add,as,new,meta,data,index,test,build,build,cluster,state,cluster,state,builder,cluster,state,nodes,discovery,nodes,builder,add,new,node,node1,add,new,node,node2,build,cluster,state,allocation,reroute,cluster,state,reroute,cluster,state,allocation,apply,started,shards,cluster,state,cluster,state,get,routing,nodes,shards,with,state,initializing,cluster,state,allocation,apply,started,shards,cluster,state,cluster,state,get,routing,nodes,shards,with,state,initializing,assert,that,cluster,state,get,routing,nodes,unassigned,size,0,equal,to,false,cluster,state,cluster,state,builder,cluster,state,nodes,discovery,nodes,builder,cluster,state,nodes,remove,node2,build,cluster,state,allocation,deassociate,dead,nodes,cluster,state,true,reroute,assert,that,cluster,state,get,routing,nodes,unassigned,size,0,equal,to,true,assert,that,cluster,state,get,routing,nodes,shards,with,state,unassigned,size,equal,to,1,assert,that,cluster,state,get,routing,nodes,shards,with,state,unassigned,get,0,unassigned,info,not,null,value,assert,that,cluster,state,get,routing,nodes,shards,with,state,unassigned,get,0,unassigned,info,get,reason,equal,to,unassigned,info,reason,assert,that,cluster,state,get,routing,nodes,shards,with,state,unassigned,get,0,unassigned,info,get,unassigned,time,in,millis,greater,than,0l
UnassignedInfoTests -> public void testNodeLeave();1540847035;Tests that during reroute when a node is detected as leaving the cluster, the right unassigned meta is set;public void testNodeLeave() {_        AllocationService allocation = createAllocationService()__        MetaData metaData = MetaData.builder()_                .put(IndexMetaData.builder("test").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1))_                .build()__        ClusterState clusterState = ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY))_                .metaData(metaData)_                .routingTable(RoutingTable.builder().addAsNew(metaData.index("test")).build()).build()__        clusterState = ClusterState.builder(clusterState)_            .nodes(DiscoveryNodes.builder().add(newNode("node1")).add(newNode("node2"))).build()__        clusterState = allocation.reroute(clusterState, "reroute")__        _        clusterState = allocation.applyStartedShards(clusterState, clusterState.getRoutingNodes().shardsWithState(INITIALIZING))__        _        clusterState = allocation.applyStartedShards(clusterState, clusterState.getRoutingNodes().shardsWithState(INITIALIZING))__        assertThat(clusterState.getRoutingNodes().unassigned().size() > 0, equalTo(false))__        _        clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder(clusterState.nodes()).remove("node2")).build()__        clusterState = allocation.deassociateDeadNodes(clusterState, true, "reroute")__        _        assertThat(clusterState.getRoutingNodes().unassigned().size() > 0, equalTo(true))__        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).size(), equalTo(1))__        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo(), notNullValue())__        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getReason(),_            equalTo(UnassignedInfo.Reason.NODE_LEFT))__        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getUnassignedTimeInMillis(),_            greaterThan(0L))__    };tests,that,during,reroute,when,a,node,is,detected,as,leaving,the,cluster,the,right,unassigned,meta,is,set;public,void,test,node,leave,allocation,service,allocation,create,allocation,service,meta,data,meta,data,meta,data,builder,put,index,meta,data,builder,test,settings,settings,version,current,number,of,shards,1,number,of,replicas,1,build,cluster,state,cluster,state,cluster,state,builder,cluster,name,get,default,settings,empty,meta,data,meta,data,routing,table,routing,table,builder,add,as,new,meta,data,index,test,build,build,cluster,state,cluster,state,builder,cluster,state,nodes,discovery,nodes,builder,add,new,node,node1,add,new,node,node2,build,cluster,state,allocation,reroute,cluster,state,reroute,cluster,state,allocation,apply,started,shards,cluster,state,cluster,state,get,routing,nodes,shards,with,state,initializing,cluster,state,allocation,apply,started,shards,cluster,state,cluster,state,get,routing,nodes,shards,with,state,initializing,assert,that,cluster,state,get,routing,nodes,unassigned,size,0,equal,to,false,cluster,state,cluster,state,builder,cluster,state,nodes,discovery,nodes,builder,cluster,state,nodes,remove,node2,build,cluster,state,allocation,deassociate,dead,nodes,cluster,state,true,reroute,assert,that,cluster,state,get,routing,nodes,unassigned,size,0,equal,to,true,assert,that,cluster,state,get,routing,nodes,shards,with,state,unassigned,size,equal,to,1,assert,that,cluster,state,get,routing,nodes,shards,with,state,unassigned,get,0,unassigned,info,not,null,value,assert,that,cluster,state,get,routing,nodes,shards,with,state,unassigned,get,0,unassigned,info,get,reason,equal,to,unassigned,info,reason,assert,that,cluster,state,get,routing,nodes,shards,with,state,unassigned,get,0,unassigned,info,get,unassigned,time,in,millis,greater,than,0l
UnassignedInfoTests -> public void testNodeLeave();1540912197;Tests that during reroute when a node is detected as leaving the cluster, the right unassigned meta is set;public void testNodeLeave() {_        AllocationService allocation = createAllocationService()__        MetaData metaData = MetaData.builder()_                .put(IndexMetaData.builder("test").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1))_                .build()__        ClusterState clusterState = ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY))_                .metaData(metaData)_                .routingTable(RoutingTable.builder().addAsNew(metaData.index("test")).build()).build()__        clusterState = ClusterState.builder(clusterState)_            .nodes(DiscoveryNodes.builder().add(newNode("node1")).add(newNode("node2"))).build()__        clusterState = allocation.reroute(clusterState, "reroute")__        _        clusterState = allocation.applyStartedShards(clusterState, clusterState.getRoutingNodes().shardsWithState(INITIALIZING))__        _        clusterState = allocation.applyStartedShards(clusterState, clusterState.getRoutingNodes().shardsWithState(INITIALIZING))__        assertThat(clusterState.getRoutingNodes().unassigned().size() > 0, equalTo(false))__        _        clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder(clusterState.nodes()).remove("node2")).build()__        clusterState = allocation.deassociateDeadNodes(clusterState, true, "reroute")__        _        assertThat(clusterState.getRoutingNodes().unassigned().size() > 0, equalTo(true))__        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).size(), equalTo(1))__        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo(), notNullValue())__        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getReason(),_            equalTo(UnassignedInfo.Reason.NODE_LEFT))__        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getUnassignedTimeInMillis(),_            greaterThan(0L))__    };tests,that,during,reroute,when,a,node,is,detected,as,leaving,the,cluster,the,right,unassigned,meta,is,set;public,void,test,node,leave,allocation,service,allocation,create,allocation,service,meta,data,meta,data,meta,data,builder,put,index,meta,data,builder,test,settings,settings,version,current,number,of,shards,1,number,of,replicas,1,build,cluster,state,cluster,state,cluster,state,builder,cluster,name,get,default,settings,empty,meta,data,meta,data,routing,table,routing,table,builder,add,as,new,meta,data,index,test,build,build,cluster,state,cluster,state,builder,cluster,state,nodes,discovery,nodes,builder,add,new,node,node1,add,new,node,node2,build,cluster,state,allocation,reroute,cluster,state,reroute,cluster,state,allocation,apply,started,shards,cluster,state,cluster,state,get,routing,nodes,shards,with,state,initializing,cluster,state,allocation,apply,started,shards,cluster,state,cluster,state,get,routing,nodes,shards,with,state,initializing,assert,that,cluster,state,get,routing,nodes,unassigned,size,0,equal,to,false,cluster,state,cluster,state,builder,cluster,state,nodes,discovery,nodes,builder,cluster,state,nodes,remove,node2,build,cluster,state,allocation,deassociate,dead,nodes,cluster,state,true,reroute,assert,that,cluster,state,get,routing,nodes,unassigned,size,0,equal,to,true,assert,that,cluster,state,get,routing,nodes,shards,with,state,unassigned,size,equal,to,1,assert,that,cluster,state,get,routing,nodes,shards,with,state,unassigned,get,0,unassigned,info,not,null,value,assert,that,cluster,state,get,routing,nodes,shards,with,state,unassigned,get,0,unassigned,info,get,reason,equal,to,unassigned,info,reason,assert,that,cluster,state,get,routing,nodes,shards,with,state,unassigned,get,0,unassigned,info,get,unassigned,time,in,millis,greater,than,0l
UnassignedInfoTests -> public void testNodeLeave();1544783963;Tests that during reroute when a node is detected as leaving the cluster, the right unassigned meta is set;public void testNodeLeave() {_        AllocationService allocation = createAllocationService()__        MetaData metaData = MetaData.builder()_                .put(IndexMetaData.builder("test").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1))_                .build()__        ClusterState clusterState = ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY))_                .metaData(metaData)_                .routingTable(RoutingTable.builder().addAsNew(metaData.index("test")).build()).build()__        clusterState = ClusterState.builder(clusterState)_            .nodes(DiscoveryNodes.builder().add(newNode("node1")).add(newNode("node2"))).build()__        clusterState = allocation.reroute(clusterState, "reroute")__        _        clusterState = allocation.applyStartedShards(clusterState, clusterState.getRoutingNodes().shardsWithState(INITIALIZING))__        _        clusterState = allocation.applyStartedShards(clusterState, clusterState.getRoutingNodes().shardsWithState(INITIALIZING))__        assertThat(clusterState.getRoutingNodes().unassigned().size() > 0, equalTo(false))__        _        clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder(clusterState.nodes()).remove("node2")).build()__        clusterState = allocation.deassociateDeadNodes(clusterState, true, "reroute")__        _        assertThat(clusterState.getRoutingNodes().unassigned().size() > 0, equalTo(true))__        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).size(), equalTo(1))__        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo(), notNullValue())__        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getReason(),_            equalTo(UnassignedInfo.Reason.NODE_LEFT))__        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getUnassignedTimeInMillis(),_            greaterThan(0L))__    };tests,that,during,reroute,when,a,node,is,detected,as,leaving,the,cluster,the,right,unassigned,meta,is,set;public,void,test,node,leave,allocation,service,allocation,create,allocation,service,meta,data,meta,data,meta,data,builder,put,index,meta,data,builder,test,settings,settings,version,current,number,of,shards,1,number,of,replicas,1,build,cluster,state,cluster,state,cluster,state,builder,cluster,name,get,default,settings,empty,meta,data,meta,data,routing,table,routing,table,builder,add,as,new,meta,data,index,test,build,build,cluster,state,cluster,state,builder,cluster,state,nodes,discovery,nodes,builder,add,new,node,node1,add,new,node,node2,build,cluster,state,allocation,reroute,cluster,state,reroute,cluster,state,allocation,apply,started,shards,cluster,state,cluster,state,get,routing,nodes,shards,with,state,initializing,cluster,state,allocation,apply,started,shards,cluster,state,cluster,state,get,routing,nodes,shards,with,state,initializing,assert,that,cluster,state,get,routing,nodes,unassigned,size,0,equal,to,false,cluster,state,cluster,state,builder,cluster,state,nodes,discovery,nodes,builder,cluster,state,nodes,remove,node2,build,cluster,state,allocation,deassociate,dead,nodes,cluster,state,true,reroute,assert,that,cluster,state,get,routing,nodes,unassigned,size,0,equal,to,true,assert,that,cluster,state,get,routing,nodes,shards,with,state,unassigned,size,equal,to,1,assert,that,cluster,state,get,routing,nodes,shards,with,state,unassigned,get,0,unassigned,info,not,null,value,assert,that,cluster,state,get,routing,nodes,shards,with,state,unassigned,get,0,unassigned,info,get,reason,equal,to,unassigned,info,reason,assert,that,cluster,state,get,routing,nodes,shards,with,state,unassigned,get,0,unassigned,info,get,unassigned,time,in,millis,greater,than,0l
UnassignedInfoTests -> public void testNodeLeave();1548259585;Tests that during reroute when a node is detected as leaving the cluster, the right unassigned meta is set;public void testNodeLeave() {_        AllocationService allocation = createAllocationService()__        MetaData metaData = MetaData.builder()_                .put(IndexMetaData.builder("test").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1))_                .build()__        ClusterState clusterState = ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY))_                .metaData(metaData)_                .routingTable(RoutingTable.builder().addAsNew(metaData.index("test")).build()).build()__        clusterState = ClusterState.builder(clusterState)_            .nodes(DiscoveryNodes.builder().add(newNode("node1")).add(newNode("node2"))).build()__        clusterState = allocation.reroute(clusterState, "reroute")__        _        clusterState = allocation.applyStartedShards(clusterState, clusterState.getRoutingNodes().shardsWithState(INITIALIZING))__        _        clusterState = allocation.applyStartedShards(clusterState, clusterState.getRoutingNodes().shardsWithState(INITIALIZING))__        assertThat(clusterState.getRoutingNodes().unassigned().size() > 0, equalTo(false))__        _        clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder(clusterState.nodes()).remove("node2")).build()__        clusterState = allocation.disassociateDeadNodes(clusterState, true, "reroute")__        _        assertThat(clusterState.getRoutingNodes().unassigned().size() > 0, equalTo(true))__        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).size(), equalTo(1))__        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo(), notNullValue())__        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getReason(),_            equalTo(UnassignedInfo.Reason.NODE_LEFT))__        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getUnassignedTimeInMillis(),_            greaterThan(0L))__    };tests,that,during,reroute,when,a,node,is,detected,as,leaving,the,cluster,the,right,unassigned,meta,is,set;public,void,test,node,leave,allocation,service,allocation,create,allocation,service,meta,data,meta,data,meta,data,builder,put,index,meta,data,builder,test,settings,settings,version,current,number,of,shards,1,number,of,replicas,1,build,cluster,state,cluster,state,cluster,state,builder,cluster,name,get,default,settings,empty,meta,data,meta,data,routing,table,routing,table,builder,add,as,new,meta,data,index,test,build,build,cluster,state,cluster,state,builder,cluster,state,nodes,discovery,nodes,builder,add,new,node,node1,add,new,node,node2,build,cluster,state,allocation,reroute,cluster,state,reroute,cluster,state,allocation,apply,started,shards,cluster,state,cluster,state,get,routing,nodes,shards,with,state,initializing,cluster,state,allocation,apply,started,shards,cluster,state,cluster,state,get,routing,nodes,shards,with,state,initializing,assert,that,cluster,state,get,routing,nodes,unassigned,size,0,equal,to,false,cluster,state,cluster,state,builder,cluster,state,nodes,discovery,nodes,builder,cluster,state,nodes,remove,node2,build,cluster,state,allocation,disassociate,dead,nodes,cluster,state,true,reroute,assert,that,cluster,state,get,routing,nodes,unassigned,size,0,equal,to,true,assert,that,cluster,state,get,routing,nodes,shards,with,state,unassigned,size,equal,to,1,assert,that,cluster,state,get,routing,nodes,shards,with,state,unassigned,get,0,unassigned,info,not,null,value,assert,that,cluster,state,get,routing,nodes,shards,with,state,unassigned,get,0,unassigned,info,get,reason,equal,to,unassigned,info,reason,assert,that,cluster,state,get,routing,nodes,shards,with,state,unassigned,get,0,unassigned,info,get,unassigned,time,in,millis,greater,than,0l
UnassignedInfoTests -> public void testRemainingDelayCalculation() throws Exception;1524684173;Verifies that delayed allocation calculation are correct.;public void testRemainingDelayCalculation() throws Exception {_        final long baseTime = System.nanoTime()__        UnassignedInfo unassignedInfo = new UnassignedInfo(UnassignedInfo.Reason.NODE_LEFT, "test", null, 0, baseTime,_                                                           System.currentTimeMillis(), randomBoolean(), AllocationStatus.NO_ATTEMPT)__        final long totalDelayNanos = TimeValue.timeValueMillis(10).nanos()__        final Settings indexSettings = Settings.builder().put(UnassignedInfo.INDEX_DELAYED_NODE_LEFT_TIMEOUT_SETTING.getKey(), TimeValue.timeValueNanos(totalDelayNanos)).build()__        long delay = unassignedInfo.getRemainingDelay(baseTime, indexSettings)__        assertThat(delay, equalTo(totalDelayNanos))__        long delta1 = randomIntBetween(1, (int) (totalDelayNanos - 1))__        delay = unassignedInfo.getRemainingDelay(baseTime + delta1, indexSettings)__        assertThat(delay, equalTo(totalDelayNanos - delta1))__        delay = unassignedInfo.getRemainingDelay(baseTime + totalDelayNanos, indexSettings)__        assertThat(delay, equalTo(0L))__        delay = unassignedInfo.getRemainingDelay(baseTime + totalDelayNanos + randomIntBetween(1, 20), indexSettings)__        assertThat(delay, equalTo(0L))__    };verifies,that,delayed,allocation,calculation,are,correct;public,void,test,remaining,delay,calculation,throws,exception,final,long,base,time,system,nano,time,unassigned,info,unassigned,info,new,unassigned,info,unassigned,info,reason,test,null,0,base,time,system,current,time,millis,random,boolean,allocation,status,final,long,total,delay,nanos,time,value,time,value,millis,10,nanos,final,settings,index,settings,settings,builder,put,unassigned,info,get,key,time,value,time,value,nanos,total,delay,nanos,build,long,delay,unassigned,info,get,remaining,delay,base,time,index,settings,assert,that,delay,equal,to,total,delay,nanos,long,delta1,random,int,between,1,int,total,delay,nanos,1,delay,unassigned,info,get,remaining,delay,base,time,delta1,index,settings,assert,that,delay,equal,to,total,delay,nanos,delta1,delay,unassigned,info,get,remaining,delay,base,time,total,delay,nanos,index,settings,assert,that,delay,equal,to,0l,delay,unassigned,info,get,remaining,delay,base,time,total,delay,nanos,random,int,between,1,20,index,settings,assert,that,delay,equal,to,0l
UnassignedInfoTests -> public void testRemainingDelayCalculation() throws Exception;1540847035;Verifies that delayed allocation calculation are correct.;public void testRemainingDelayCalculation() throws Exception {_        final long baseTime = System.nanoTime()__        UnassignedInfo unassignedInfo = new UnassignedInfo(UnassignedInfo.Reason.NODE_LEFT, "test", null, 0, baseTime,_                                                           System.currentTimeMillis(), randomBoolean(), AllocationStatus.NO_ATTEMPT)__        final long totalDelayNanos = TimeValue.timeValueMillis(10).nanos()__        final Settings indexSettings = Settings.builder()_            .put(UnassignedInfo.INDEX_DELAYED_NODE_LEFT_TIMEOUT_SETTING.getKey(), TimeValue.timeValueNanos(totalDelayNanos)).build()__        long delay = unassignedInfo.getRemainingDelay(baseTime, indexSettings)__        assertThat(delay, equalTo(totalDelayNanos))__        long delta1 = randomIntBetween(1, (int) (totalDelayNanos - 1))__        delay = unassignedInfo.getRemainingDelay(baseTime + delta1, indexSettings)__        assertThat(delay, equalTo(totalDelayNanos - delta1))__        delay = unassignedInfo.getRemainingDelay(baseTime + totalDelayNanos, indexSettings)__        assertThat(delay, equalTo(0L))__        delay = unassignedInfo.getRemainingDelay(baseTime + totalDelayNanos + randomIntBetween(1, 20), indexSettings)__        assertThat(delay, equalTo(0L))__    };verifies,that,delayed,allocation,calculation,are,correct;public,void,test,remaining,delay,calculation,throws,exception,final,long,base,time,system,nano,time,unassigned,info,unassigned,info,new,unassigned,info,unassigned,info,reason,test,null,0,base,time,system,current,time,millis,random,boolean,allocation,status,final,long,total,delay,nanos,time,value,time,value,millis,10,nanos,final,settings,index,settings,settings,builder,put,unassigned,info,get,key,time,value,time,value,nanos,total,delay,nanos,build,long,delay,unassigned,info,get,remaining,delay,base,time,index,settings,assert,that,delay,equal,to,total,delay,nanos,long,delta1,random,int,between,1,int,total,delay,nanos,1,delay,unassigned,info,get,remaining,delay,base,time,delta1,index,settings,assert,that,delay,equal,to,total,delay,nanos,delta1,delay,unassigned,info,get,remaining,delay,base,time,total,delay,nanos,index,settings,assert,that,delay,equal,to,0l,delay,unassigned,info,get,remaining,delay,base,time,total,delay,nanos,random,int,between,1,20,index,settings,assert,that,delay,equal,to,0l
UnassignedInfoTests -> public void testRemainingDelayCalculation() throws Exception;1540912197;Verifies that delayed allocation calculation are correct.;public void testRemainingDelayCalculation() throws Exception {_        final long baseTime = System.nanoTime()__        UnassignedInfo unassignedInfo = new UnassignedInfo(UnassignedInfo.Reason.NODE_LEFT, "test", null, 0, baseTime,_                                                           System.currentTimeMillis(), randomBoolean(), AllocationStatus.NO_ATTEMPT)__        final long totalDelayNanos = TimeValue.timeValueMillis(10).nanos()__        final Settings indexSettings = Settings.builder()_            .put(UnassignedInfo.INDEX_DELAYED_NODE_LEFT_TIMEOUT_SETTING.getKey(), TimeValue.timeValueNanos(totalDelayNanos)).build()__        long delay = unassignedInfo.getRemainingDelay(baseTime, indexSettings)__        assertThat(delay, equalTo(totalDelayNanos))__        long delta1 = randomIntBetween(1, (int) (totalDelayNanos - 1))__        delay = unassignedInfo.getRemainingDelay(baseTime + delta1, indexSettings)__        assertThat(delay, equalTo(totalDelayNanos - delta1))__        delay = unassignedInfo.getRemainingDelay(baseTime + totalDelayNanos, indexSettings)__        assertThat(delay, equalTo(0L))__        delay = unassignedInfo.getRemainingDelay(baseTime + totalDelayNanos + randomIntBetween(1, 20), indexSettings)__        assertThat(delay, equalTo(0L))__    };verifies,that,delayed,allocation,calculation,are,correct;public,void,test,remaining,delay,calculation,throws,exception,final,long,base,time,system,nano,time,unassigned,info,unassigned,info,new,unassigned,info,unassigned,info,reason,test,null,0,base,time,system,current,time,millis,random,boolean,allocation,status,final,long,total,delay,nanos,time,value,time,value,millis,10,nanos,final,settings,index,settings,settings,builder,put,unassigned,info,get,key,time,value,time,value,nanos,total,delay,nanos,build,long,delay,unassigned,info,get,remaining,delay,base,time,index,settings,assert,that,delay,equal,to,total,delay,nanos,long,delta1,random,int,between,1,int,total,delay,nanos,1,delay,unassigned,info,get,remaining,delay,base,time,delta1,index,settings,assert,that,delay,equal,to,total,delay,nanos,delta1,delay,unassigned,info,get,remaining,delay,base,time,total,delay,nanos,index,settings,assert,that,delay,equal,to,0l,delay,unassigned,info,get,remaining,delay,base,time,total,delay,nanos,random,int,between,1,20,index,settings,assert,that,delay,equal,to,0l
UnassignedInfoTests -> public void testRemainingDelayCalculation() throws Exception;1544783963;Verifies that delayed allocation calculation are correct.;public void testRemainingDelayCalculation() throws Exception {_        final long baseTime = System.nanoTime()__        UnassignedInfo unassignedInfo = new UnassignedInfo(UnassignedInfo.Reason.NODE_LEFT, "test", null, 0, baseTime,_                                                           System.currentTimeMillis(), randomBoolean(), AllocationStatus.NO_ATTEMPT)__        final long totalDelayNanos = TimeValue.timeValueMillis(10).nanos()__        final Settings indexSettings = Settings.builder()_            .put(UnassignedInfo.INDEX_DELAYED_NODE_LEFT_TIMEOUT_SETTING.getKey(), TimeValue.timeValueNanos(totalDelayNanos)).build()__        long delay = unassignedInfo.getRemainingDelay(baseTime, indexSettings)__        assertThat(delay, equalTo(totalDelayNanos))__        long delta1 = randomIntBetween(1, (int) (totalDelayNanos - 1))__        delay = unassignedInfo.getRemainingDelay(baseTime + delta1, indexSettings)__        assertThat(delay, equalTo(totalDelayNanos - delta1))__        delay = unassignedInfo.getRemainingDelay(baseTime + totalDelayNanos, indexSettings)__        assertThat(delay, equalTo(0L))__        delay = unassignedInfo.getRemainingDelay(baseTime + totalDelayNanos + randomIntBetween(1, 20), indexSettings)__        assertThat(delay, equalTo(0L))__    };verifies,that,delayed,allocation,calculation,are,correct;public,void,test,remaining,delay,calculation,throws,exception,final,long,base,time,system,nano,time,unassigned,info,unassigned,info,new,unassigned,info,unassigned,info,reason,test,null,0,base,time,system,current,time,millis,random,boolean,allocation,status,final,long,total,delay,nanos,time,value,time,value,millis,10,nanos,final,settings,index,settings,settings,builder,put,unassigned,info,get,key,time,value,time,value,nanos,total,delay,nanos,build,long,delay,unassigned,info,get,remaining,delay,base,time,index,settings,assert,that,delay,equal,to,total,delay,nanos,long,delta1,random,int,between,1,int,total,delay,nanos,1,delay,unassigned,info,get,remaining,delay,base,time,delta1,index,settings,assert,that,delay,equal,to,total,delay,nanos,delta1,delay,unassigned,info,get,remaining,delay,base,time,total,delay,nanos,index,settings,assert,that,delay,equal,to,0l,delay,unassigned,info,get,remaining,delay,base,time,total,delay,nanos,random,int,between,1,20,index,settings,assert,that,delay,equal,to,0l
UnassignedInfoTests -> public void testRemainingDelayCalculation() throws Exception;1548259585;Verifies that delayed allocation calculation are correct.;public void testRemainingDelayCalculation() throws Exception {_        final long baseTime = System.nanoTime()__        UnassignedInfo unassignedInfo = new UnassignedInfo(UnassignedInfo.Reason.NODE_LEFT, "test", null, 0, baseTime,_                                                           System.currentTimeMillis(), randomBoolean(), AllocationStatus.NO_ATTEMPT)__        final long totalDelayNanos = TimeValue.timeValueMillis(10).nanos()__        final Settings indexSettings = Settings.builder()_            .put(UnassignedInfo.INDEX_DELAYED_NODE_LEFT_TIMEOUT_SETTING.getKey(), TimeValue.timeValueNanos(totalDelayNanos)).build()__        long delay = unassignedInfo.getRemainingDelay(baseTime, indexSettings)__        assertThat(delay, equalTo(totalDelayNanos))__        long delta1 = randomIntBetween(1, (int) (totalDelayNanos - 1))__        delay = unassignedInfo.getRemainingDelay(baseTime + delta1, indexSettings)__        assertThat(delay, equalTo(totalDelayNanos - delta1))__        delay = unassignedInfo.getRemainingDelay(baseTime + totalDelayNanos, indexSettings)__        assertThat(delay, equalTo(0L))__        delay = unassignedInfo.getRemainingDelay(baseTime + totalDelayNanos + randomIntBetween(1, 20), indexSettings)__        assertThat(delay, equalTo(0L))__    };verifies,that,delayed,allocation,calculation,are,correct;public,void,test,remaining,delay,calculation,throws,exception,final,long,base,time,system,nano,time,unassigned,info,unassigned,info,new,unassigned,info,unassigned,info,reason,test,null,0,base,time,system,current,time,millis,random,boolean,allocation,status,final,long,total,delay,nanos,time,value,time,value,millis,10,nanos,final,settings,index,settings,settings,builder,put,unassigned,info,get,key,time,value,time,value,nanos,total,delay,nanos,build,long,delay,unassigned,info,get,remaining,delay,base,time,index,settings,assert,that,delay,equal,to,total,delay,nanos,long,delta1,random,int,between,1,int,total,delay,nanos,1,delay,unassigned,info,get,remaining,delay,base,time,delta1,index,settings,assert,that,delay,equal,to,total,delay,nanos,delta1,delay,unassigned,info,get,remaining,delay,base,time,total,delay,nanos,index,settings,assert,that,delay,equal,to,0l,delay,unassigned,info,get,remaining,delay,base,time,total,delay,nanos,random,int,between,1,20,index,settings,assert,that,delay,equal,to,0l
UnassignedInfoTests -> public void testFailedShard();1524684173;Verifies that when a shard fails, reason is properly set and details are preserved.;public void testFailedShard() {_        AllocationService allocation = createAllocationService()__        MetaData metaData = MetaData.builder()_                .put(IndexMetaData.builder("test").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1))_                .build()__        ClusterState clusterState = ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY))_                .metaData(metaData)_                .routingTable(RoutingTable.builder().addAsNew(metaData.index("test")).build()).build()__        clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder().add(newNode("node1")).add(newNode("node2"))).build()__        clusterState = allocation.reroute(clusterState, "reroute")__        _        clusterState = allocation.applyStartedShards(clusterState, clusterState.getRoutingNodes().shardsWithState(INITIALIZING))__        _        clusterState = allocation.applyStartedShards(clusterState, clusterState.getRoutingNodes().shardsWithState(INITIALIZING))__        assertThat(clusterState.getRoutingNodes().unassigned().size() > 0, equalTo(false))__        _        ShardRouting shardToFail = clusterState.getRoutingNodes().shardsWithState(STARTED).get(0)__        clusterState = allocation.applyFailedShards(clusterState, Collections.singletonList(new FailedShard(shardToFail, "test fail", null, randomBoolean())))__        _        assertThat(clusterState.getRoutingNodes().unassigned().size() > 0, equalTo(true))__        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).size(), equalTo(1))__        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo(), notNullValue())__        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getReason(), equalTo(UnassignedInfo.Reason.ALLOCATION_FAILED))__        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getMessage(), equalTo("failed shard on node [" + shardToFail.currentNodeId() + "]: test fail"))__        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getDetails(), equalTo("failed shard on node [" + shardToFail.currentNodeId() + "]: test fail"))__        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getUnassignedTimeInMillis(), greaterThan(0L))__    };verifies,that,when,a,shard,fails,reason,is,properly,set,and,details,are,preserved;public,void,test,failed,shard,allocation,service,allocation,create,allocation,service,meta,data,meta,data,meta,data,builder,put,index,meta,data,builder,test,settings,settings,version,current,number,of,shards,1,number,of,replicas,1,build,cluster,state,cluster,state,cluster,state,builder,cluster,name,get,default,settings,empty,meta,data,meta,data,routing,table,routing,table,builder,add,as,new,meta,data,index,test,build,build,cluster,state,cluster,state,builder,cluster,state,nodes,discovery,nodes,builder,add,new,node,node1,add,new,node,node2,build,cluster,state,allocation,reroute,cluster,state,reroute,cluster,state,allocation,apply,started,shards,cluster,state,cluster,state,get,routing,nodes,shards,with,state,initializing,cluster,state,allocation,apply,started,shards,cluster,state,cluster,state,get,routing,nodes,shards,with,state,initializing,assert,that,cluster,state,get,routing,nodes,unassigned,size,0,equal,to,false,shard,routing,shard,to,fail,cluster,state,get,routing,nodes,shards,with,state,started,get,0,cluster,state,allocation,apply,failed,shards,cluster,state,collections,singleton,list,new,failed,shard,shard,to,fail,test,fail,null,random,boolean,assert,that,cluster,state,get,routing,nodes,unassigned,size,0,equal,to,true,assert,that,cluster,state,get,routing,nodes,shards,with,state,unassigned,size,equal,to,1,assert,that,cluster,state,get,routing,nodes,shards,with,state,unassigned,get,0,unassigned,info,not,null,value,assert,that,cluster,state,get,routing,nodes,shards,with,state,unassigned,get,0,unassigned,info,get,reason,equal,to,unassigned,info,reason,assert,that,cluster,state,get,routing,nodes,shards,with,state,unassigned,get,0,unassigned,info,get,message,equal,to,failed,shard,on,node,shard,to,fail,current,node,id,test,fail,assert,that,cluster,state,get,routing,nodes,shards,with,state,unassigned,get,0,unassigned,info,get,details,equal,to,failed,shard,on,node,shard,to,fail,current,node,id,test,fail,assert,that,cluster,state,get,routing,nodes,shards,with,state,unassigned,get,0,unassigned,info,get,unassigned,time,in,millis,greater,than,0l
UnassignedInfoTests -> public void testFailedShard();1540847035;Verifies that when a shard fails, reason is properly set and details are preserved.;public void testFailedShard() {_        AllocationService allocation = createAllocationService()__        MetaData metaData = MetaData.builder()_                .put(IndexMetaData.builder("test").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1))_                .build()__        ClusterState clusterState = ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY))_                .metaData(metaData)_                .routingTable(RoutingTable.builder().addAsNew(metaData.index("test")).build()).build()__        clusterState = ClusterState.builder(clusterState)_            .nodes(DiscoveryNodes.builder().add(newNode("node1")).add(newNode("node2"))).build()__        clusterState = allocation.reroute(clusterState, "reroute")__        _        clusterState = allocation.applyStartedShards(clusterState, clusterState.getRoutingNodes().shardsWithState(INITIALIZING))__        _        clusterState = allocation.applyStartedShards(clusterState, clusterState.getRoutingNodes().shardsWithState(INITIALIZING))__        assertThat(clusterState.getRoutingNodes().unassigned().size() > 0, equalTo(false))__        _        ShardRouting shardToFail = clusterState.getRoutingNodes().shardsWithState(STARTED).get(0)__        clusterState = allocation.applyFailedShards(clusterState,_            Collections.singletonList(new FailedShard(shardToFail, "test fail", null, randomBoolean())))__        _        assertThat(clusterState.getRoutingNodes().unassigned().size() > 0, equalTo(true))__        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).size(), equalTo(1))__        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo(), notNullValue())__        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getReason(),_            equalTo(UnassignedInfo.Reason.ALLOCATION_FAILED))__        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getMessage(),_            equalTo("failed shard on node [" + shardToFail.currentNodeId() + "]: test fail"))__        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getDetails(),_            equalTo("failed shard on node [" + shardToFail.currentNodeId() + "]: test fail"))__        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getUnassignedTimeInMillis(),_            greaterThan(0L))__    };verifies,that,when,a,shard,fails,reason,is,properly,set,and,details,are,preserved;public,void,test,failed,shard,allocation,service,allocation,create,allocation,service,meta,data,meta,data,meta,data,builder,put,index,meta,data,builder,test,settings,settings,version,current,number,of,shards,1,number,of,replicas,1,build,cluster,state,cluster,state,cluster,state,builder,cluster,name,get,default,settings,empty,meta,data,meta,data,routing,table,routing,table,builder,add,as,new,meta,data,index,test,build,build,cluster,state,cluster,state,builder,cluster,state,nodes,discovery,nodes,builder,add,new,node,node1,add,new,node,node2,build,cluster,state,allocation,reroute,cluster,state,reroute,cluster,state,allocation,apply,started,shards,cluster,state,cluster,state,get,routing,nodes,shards,with,state,initializing,cluster,state,allocation,apply,started,shards,cluster,state,cluster,state,get,routing,nodes,shards,with,state,initializing,assert,that,cluster,state,get,routing,nodes,unassigned,size,0,equal,to,false,shard,routing,shard,to,fail,cluster,state,get,routing,nodes,shards,with,state,started,get,0,cluster,state,allocation,apply,failed,shards,cluster,state,collections,singleton,list,new,failed,shard,shard,to,fail,test,fail,null,random,boolean,assert,that,cluster,state,get,routing,nodes,unassigned,size,0,equal,to,true,assert,that,cluster,state,get,routing,nodes,shards,with,state,unassigned,size,equal,to,1,assert,that,cluster,state,get,routing,nodes,shards,with,state,unassigned,get,0,unassigned,info,not,null,value,assert,that,cluster,state,get,routing,nodes,shards,with,state,unassigned,get,0,unassigned,info,get,reason,equal,to,unassigned,info,reason,assert,that,cluster,state,get,routing,nodes,shards,with,state,unassigned,get,0,unassigned,info,get,message,equal,to,failed,shard,on,node,shard,to,fail,current,node,id,test,fail,assert,that,cluster,state,get,routing,nodes,shards,with,state,unassigned,get,0,unassigned,info,get,details,equal,to,failed,shard,on,node,shard,to,fail,current,node,id,test,fail,assert,that,cluster,state,get,routing,nodes,shards,with,state,unassigned,get,0,unassigned,info,get,unassigned,time,in,millis,greater,than,0l
UnassignedInfoTests -> public void testFailedShard();1540912197;Verifies that when a shard fails, reason is properly set and details are preserved.;public void testFailedShard() {_        AllocationService allocation = createAllocationService()__        MetaData metaData = MetaData.builder()_                .put(IndexMetaData.builder("test").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1))_                .build()__        ClusterState clusterState = ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY))_                .metaData(metaData)_                .routingTable(RoutingTable.builder().addAsNew(metaData.index("test")).build()).build()__        clusterState = ClusterState.builder(clusterState)_            .nodes(DiscoveryNodes.builder().add(newNode("node1")).add(newNode("node2"))).build()__        clusterState = allocation.reroute(clusterState, "reroute")__        _        clusterState = allocation.applyStartedShards(clusterState, clusterState.getRoutingNodes().shardsWithState(INITIALIZING))__        _        clusterState = allocation.applyStartedShards(clusterState, clusterState.getRoutingNodes().shardsWithState(INITIALIZING))__        assertThat(clusterState.getRoutingNodes().unassigned().size() > 0, equalTo(false))__        _        ShardRouting shardToFail = clusterState.getRoutingNodes().shardsWithState(STARTED).get(0)__        clusterState = allocation.applyFailedShards(clusterState,_            Collections.singletonList(new FailedShard(shardToFail, "test fail", null, randomBoolean())))__        _        assertThat(clusterState.getRoutingNodes().unassigned().size() > 0, equalTo(true))__        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).size(), equalTo(1))__        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo(), notNullValue())__        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getReason(),_            equalTo(UnassignedInfo.Reason.ALLOCATION_FAILED))__        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getMessage(),_            equalTo("failed shard on node [" + shardToFail.currentNodeId() + "]: test fail"))__        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getDetails(),_            equalTo("failed shard on node [" + shardToFail.currentNodeId() + "]: test fail"))__        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getUnassignedTimeInMillis(),_            greaterThan(0L))__    };verifies,that,when,a,shard,fails,reason,is,properly,set,and,details,are,preserved;public,void,test,failed,shard,allocation,service,allocation,create,allocation,service,meta,data,meta,data,meta,data,builder,put,index,meta,data,builder,test,settings,settings,version,current,number,of,shards,1,number,of,replicas,1,build,cluster,state,cluster,state,cluster,state,builder,cluster,name,get,default,settings,empty,meta,data,meta,data,routing,table,routing,table,builder,add,as,new,meta,data,index,test,build,build,cluster,state,cluster,state,builder,cluster,state,nodes,discovery,nodes,builder,add,new,node,node1,add,new,node,node2,build,cluster,state,allocation,reroute,cluster,state,reroute,cluster,state,allocation,apply,started,shards,cluster,state,cluster,state,get,routing,nodes,shards,with,state,initializing,cluster,state,allocation,apply,started,shards,cluster,state,cluster,state,get,routing,nodes,shards,with,state,initializing,assert,that,cluster,state,get,routing,nodes,unassigned,size,0,equal,to,false,shard,routing,shard,to,fail,cluster,state,get,routing,nodes,shards,with,state,started,get,0,cluster,state,allocation,apply,failed,shards,cluster,state,collections,singleton,list,new,failed,shard,shard,to,fail,test,fail,null,random,boolean,assert,that,cluster,state,get,routing,nodes,unassigned,size,0,equal,to,true,assert,that,cluster,state,get,routing,nodes,shards,with,state,unassigned,size,equal,to,1,assert,that,cluster,state,get,routing,nodes,shards,with,state,unassigned,get,0,unassigned,info,not,null,value,assert,that,cluster,state,get,routing,nodes,shards,with,state,unassigned,get,0,unassigned,info,get,reason,equal,to,unassigned,info,reason,assert,that,cluster,state,get,routing,nodes,shards,with,state,unassigned,get,0,unassigned,info,get,message,equal,to,failed,shard,on,node,shard,to,fail,current,node,id,test,fail,assert,that,cluster,state,get,routing,nodes,shards,with,state,unassigned,get,0,unassigned,info,get,details,equal,to,failed,shard,on,node,shard,to,fail,current,node,id,test,fail,assert,that,cluster,state,get,routing,nodes,shards,with,state,unassigned,get,0,unassigned,info,get,unassigned,time,in,millis,greater,than,0l
UnassignedInfoTests -> public void testFailedShard();1544783963;Verifies that when a shard fails, reason is properly set and details are preserved.;public void testFailedShard() {_        AllocationService allocation = createAllocationService()__        MetaData metaData = MetaData.builder()_                .put(IndexMetaData.builder("test").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1))_                .build()__        ClusterState clusterState = ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY))_                .metaData(metaData)_                .routingTable(RoutingTable.builder().addAsNew(metaData.index("test")).build()).build()__        clusterState = ClusterState.builder(clusterState)_            .nodes(DiscoveryNodes.builder().add(newNode("node1")).add(newNode("node2"))).build()__        clusterState = allocation.reroute(clusterState, "reroute")__        _        clusterState = allocation.applyStartedShards(clusterState, clusterState.getRoutingNodes().shardsWithState(INITIALIZING))__        _        clusterState = allocation.applyStartedShards(clusterState, clusterState.getRoutingNodes().shardsWithState(INITIALIZING))__        assertThat(clusterState.getRoutingNodes().unassigned().size() > 0, equalTo(false))__        _        ShardRouting shardToFail = clusterState.getRoutingNodes().shardsWithState(STARTED).get(0)__        clusterState = allocation.applyFailedShards(clusterState,_            Collections.singletonList(new FailedShard(shardToFail, "test fail", null, randomBoolean())))__        _        assertThat(clusterState.getRoutingNodes().unassigned().size() > 0, equalTo(true))__        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).size(), equalTo(1))__        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo(), notNullValue())__        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getReason(),_            equalTo(UnassignedInfo.Reason.ALLOCATION_FAILED))__        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getMessage(),_            equalTo("failed shard on node [" + shardToFail.currentNodeId() + "]: test fail"))__        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getDetails(),_            equalTo("failed shard on node [" + shardToFail.currentNodeId() + "]: test fail"))__        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getUnassignedTimeInMillis(),_            greaterThan(0L))__    };verifies,that,when,a,shard,fails,reason,is,properly,set,and,details,are,preserved;public,void,test,failed,shard,allocation,service,allocation,create,allocation,service,meta,data,meta,data,meta,data,builder,put,index,meta,data,builder,test,settings,settings,version,current,number,of,shards,1,number,of,replicas,1,build,cluster,state,cluster,state,cluster,state,builder,cluster,name,get,default,settings,empty,meta,data,meta,data,routing,table,routing,table,builder,add,as,new,meta,data,index,test,build,build,cluster,state,cluster,state,builder,cluster,state,nodes,discovery,nodes,builder,add,new,node,node1,add,new,node,node2,build,cluster,state,allocation,reroute,cluster,state,reroute,cluster,state,allocation,apply,started,shards,cluster,state,cluster,state,get,routing,nodes,shards,with,state,initializing,cluster,state,allocation,apply,started,shards,cluster,state,cluster,state,get,routing,nodes,shards,with,state,initializing,assert,that,cluster,state,get,routing,nodes,unassigned,size,0,equal,to,false,shard,routing,shard,to,fail,cluster,state,get,routing,nodes,shards,with,state,started,get,0,cluster,state,allocation,apply,failed,shards,cluster,state,collections,singleton,list,new,failed,shard,shard,to,fail,test,fail,null,random,boolean,assert,that,cluster,state,get,routing,nodes,unassigned,size,0,equal,to,true,assert,that,cluster,state,get,routing,nodes,shards,with,state,unassigned,size,equal,to,1,assert,that,cluster,state,get,routing,nodes,shards,with,state,unassigned,get,0,unassigned,info,not,null,value,assert,that,cluster,state,get,routing,nodes,shards,with,state,unassigned,get,0,unassigned,info,get,reason,equal,to,unassigned,info,reason,assert,that,cluster,state,get,routing,nodes,shards,with,state,unassigned,get,0,unassigned,info,get,message,equal,to,failed,shard,on,node,shard,to,fail,current,node,id,test,fail,assert,that,cluster,state,get,routing,nodes,shards,with,state,unassigned,get,0,unassigned,info,get,details,equal,to,failed,shard,on,node,shard,to,fail,current,node,id,test,fail,assert,that,cluster,state,get,routing,nodes,shards,with,state,unassigned,get,0,unassigned,info,get,unassigned,time,in,millis,greater,than,0l
UnassignedInfoTests -> public void testFailedShard();1548259585;Verifies that when a shard fails, reason is properly set and details are preserved.;public void testFailedShard() {_        AllocationService allocation = createAllocationService()__        MetaData metaData = MetaData.builder()_                .put(IndexMetaData.builder("test").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1))_                .build()__        ClusterState clusterState = ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY))_                .metaData(metaData)_                .routingTable(RoutingTable.builder().addAsNew(metaData.index("test")).build()).build()__        clusterState = ClusterState.builder(clusterState)_            .nodes(DiscoveryNodes.builder().add(newNode("node1")).add(newNode("node2"))).build()__        clusterState = allocation.reroute(clusterState, "reroute")__        _        clusterState = allocation.applyStartedShards(clusterState, clusterState.getRoutingNodes().shardsWithState(INITIALIZING))__        _        clusterState = allocation.applyStartedShards(clusterState, clusterState.getRoutingNodes().shardsWithState(INITIALIZING))__        assertThat(clusterState.getRoutingNodes().unassigned().size() > 0, equalTo(false))__        _        ShardRouting shardToFail = clusterState.getRoutingNodes().shardsWithState(STARTED).get(0)__        clusterState = allocation.applyFailedShards(clusterState,_            Collections.singletonList(new FailedShard(shardToFail, "test fail", null, randomBoolean())))__        _        assertThat(clusterState.getRoutingNodes().unassigned().size() > 0, equalTo(true))__        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).size(), equalTo(1))__        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo(), notNullValue())__        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getReason(),_            equalTo(UnassignedInfo.Reason.ALLOCATION_FAILED))__        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getMessage(),_            equalTo("failed shard on node [" + shardToFail.currentNodeId() + "]: test fail"))__        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getDetails(),_            equalTo("failed shard on node [" + shardToFail.currentNodeId() + "]: test fail"))__        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getUnassignedTimeInMillis(),_            greaterThan(0L))__    };verifies,that,when,a,shard,fails,reason,is,properly,set,and,details,are,preserved;public,void,test,failed,shard,allocation,service,allocation,create,allocation,service,meta,data,meta,data,meta,data,builder,put,index,meta,data,builder,test,settings,settings,version,current,number,of,shards,1,number,of,replicas,1,build,cluster,state,cluster,state,cluster,state,builder,cluster,name,get,default,settings,empty,meta,data,meta,data,routing,table,routing,table,builder,add,as,new,meta,data,index,test,build,build,cluster,state,cluster,state,builder,cluster,state,nodes,discovery,nodes,builder,add,new,node,node1,add,new,node,node2,build,cluster,state,allocation,reroute,cluster,state,reroute,cluster,state,allocation,apply,started,shards,cluster,state,cluster,state,get,routing,nodes,shards,with,state,initializing,cluster,state,allocation,apply,started,shards,cluster,state,cluster,state,get,routing,nodes,shards,with,state,initializing,assert,that,cluster,state,get,routing,nodes,unassigned,size,0,equal,to,false,shard,routing,shard,to,fail,cluster,state,get,routing,nodes,shards,with,state,started,get,0,cluster,state,allocation,apply,failed,shards,cluster,state,collections,singleton,list,new,failed,shard,shard,to,fail,test,fail,null,random,boolean,assert,that,cluster,state,get,routing,nodes,unassigned,size,0,equal,to,true,assert,that,cluster,state,get,routing,nodes,shards,with,state,unassigned,size,equal,to,1,assert,that,cluster,state,get,routing,nodes,shards,with,state,unassigned,get,0,unassigned,info,not,null,value,assert,that,cluster,state,get,routing,nodes,shards,with,state,unassigned,get,0,unassigned,info,get,reason,equal,to,unassigned,info,reason,assert,that,cluster,state,get,routing,nodes,shards,with,state,unassigned,get,0,unassigned,info,get,message,equal,to,failed,shard,on,node,shard,to,fail,current,node,id,test,fail,assert,that,cluster,state,get,routing,nodes,shards,with,state,unassigned,get,0,unassigned,info,get,details,equal,to,failed,shard,on,node,shard,to,fail,current,node,id,test,fail,assert,that,cluster,state,get,routing,nodes,shards,with,state,unassigned,get,0,unassigned,info,get,unassigned,time,in,millis,greater,than,0l
