# id;timestamp;commentText;codeText;commentWords;codeWords
BasePipelineAggregationTestCase -> @Override     public void setUp() throws Exception;1524684173;Setup for the whole base test class.;@Override_    public void setUp() throws Exception {_        super.setUp()__        Settings settings = Settings.builder()_            .put("node.name", AbstractQueryTestCase.class.toString())_            .put(Environment.PATH_HOME_SETTING.getKey(), createTempDir())_            .build()__        IndicesModule indicesModule = new IndicesModule(Collections.emptyList())__        SearchModule searchModule = new SearchModule(settings, false, emptyList())__        List<NamedWriteableRegistry.Entry> entries = new ArrayList<>()__        entries.addAll(indicesModule.getNamedWriteables())__        entries.addAll(searchModule.getNamedWriteables())__        namedWriteableRegistry = new NamedWriteableRegistry(entries)__        xContentRegistry = new NamedXContentRegistry(searchModule.getNamedXContents())__        _        currentTypes = new String[randomIntBetween(0, 5)]__        for (int i = 0_ i < currentTypes.length_ i++) {_            String type = randomAlphaOfLengthBetween(1, 10)__            currentTypes[i] = type__        }_    };setup,for,the,whole,base,test,class;override,public,void,set,up,throws,exception,super,set,up,settings,settings,settings,builder,put,node,name,abstract,query,test,case,class,to,string,put,environment,get,key,create,temp,dir,build,indices,module,indices,module,new,indices,module,collections,empty,list,search,module,search,module,new,search,module,settings,false,empty,list,list,named,writeable,registry,entry,entries,new,array,list,entries,add,all,indices,module,get,named,writeables,entries,add,all,search,module,get,named,writeables,named,writeable,registry,new,named,writeable,registry,entries,x,content,registry,new,named,xcontent,registry,search,module,get,named,xcontents,current,types,new,string,random,int,between,0,5,for,int,i,0,i,current,types,length,i,string,type,random,alpha,of,length,between,1,10,current,types,i,type
BasePipelineAggregationTestCase -> @Override     public void setUp() throws Exception;1529916084;Setup for the whole base test class.;@Override_    public void setUp() throws Exception {_        super.setUp()__        Settings settings = Settings.builder()_            .put("node.name", AbstractQueryTestCase.class.toString())_            .put(Environment.PATH_HOME_SETTING.getKey(), createTempDir())_            .build()__        IndicesModule indicesModule = new IndicesModule(Collections.emptyList())__        SearchModule searchModule = new SearchModule(settings, false, emptyList())__        List<NamedWriteableRegistry.Entry> entries = new ArrayList<>()__        entries.addAll(indicesModule.getNamedWriteables())__        entries.addAll(searchModule.getNamedWriteables())__        namedWriteableRegistry = new NamedWriteableRegistry(entries)__        xContentRegistry = new NamedXContentRegistry(searchModule.getNamedXContents())__        _        currentTypes = new String[randomIntBetween(0, 5)]__        for (int i = 0_ i < currentTypes.length_ i++) {_            String type = randomAlphaOfLengthBetween(1, 10)__            currentTypes[i] = type__        }_    };setup,for,the,whole,base,test,class;override,public,void,set,up,throws,exception,super,set,up,settings,settings,settings,builder,put,node,name,abstract,query,test,case,class,to,string,put,environment,get,key,create,temp,dir,build,indices,module,indices,module,new,indices,module,collections,empty,list,search,module,search,module,new,search,module,settings,false,empty,list,list,named,writeable,registry,entry,entries,new,array,list,entries,add,all,indices,module,get,named,writeables,entries,add,all,search,module,get,named,writeables,named,writeable,registry,new,named,writeable,registry,entries,x,content,registry,new,named,xcontent,registry,search,module,get,named,xcontents,current,types,new,string,random,int,between,0,5,for,int,i,0,i,current,types,length,i,string,type,random,alpha,of,length,between,1,10,current,types,i,type
BasePipelineAggregationTestCase -> @Override     public void setUp() throws Exception;1538170812;Setup for the whole base test class.;@Override_    public void setUp() throws Exception {_        super.setUp()__        Settings settings = Settings.builder()_            .put("node.name", AbstractQueryTestCase.class.toString())_            .put(Environment.PATH_HOME_SETTING.getKey(), createTempDir())_            .build()__        IndicesModule indicesModule = new IndicesModule(Collections.emptyList())__        SearchModule searchModule = new SearchModule(settings, false, emptyList())__        List<NamedWriteableRegistry.Entry> entries = new ArrayList<>()__        entries.addAll(indicesModule.getNamedWriteables())__        entries.addAll(searchModule.getNamedWriteables())__        namedWriteableRegistry = new NamedWriteableRegistry(entries)__        xContentRegistry = new NamedXContentRegistry(searchModule.getNamedXContents())__        _        currentTypes = new String[randomIntBetween(0, 5)]__        for (int i = 0_ i < currentTypes.length_ i++) {_            String type = randomAlphaOfLengthBetween(1, 10)__            currentTypes[i] = type__        }_    };setup,for,the,whole,base,test,class;override,public,void,set,up,throws,exception,super,set,up,settings,settings,settings,builder,put,node,name,abstract,query,test,case,class,to,string,put,environment,get,key,create,temp,dir,build,indices,module,indices,module,new,indices,module,collections,empty,list,search,module,search,module,new,search,module,settings,false,empty,list,list,named,writeable,registry,entry,entries,new,array,list,entries,add,all,indices,module,get,named,writeables,entries,add,all,search,module,get,named,writeables,named,writeable,registry,new,named,writeable,registry,entries,x,content,registry,new,named,xcontent,registry,search,module,get,named,xcontents,current,types,new,string,random,int,between,0,5,for,int,i,0,i,current,types,length,i,string,type,random,alpha,of,length,between,1,10,current,types,i,type
BasePipelineAggregationTestCase -> public void testFromXContent() throws IOException;1524684173;Generic test that creates new AggregatorFactory from the test_AggregatorFactory and checks both for equality and asserts equality on_the two queries.;public void testFromXContent() throws IOException {_        AF testAgg = createTestAggregatorFactory()__        AggregatorFactories.Builder factoriesBuilder = AggregatorFactories.builder().skipResolveOrder().addPipelineAggregator(testAgg)__        logger.info("Content string: {}", factoriesBuilder)__        XContentBuilder builder = XContentFactory.contentBuilder(randomFrom(XContentType.values()))__        if (randomBoolean()) {_            builder.prettyPrint()__        }_        factoriesBuilder.toXContent(builder, ToXContent.EMPTY_PARAMS)__        XContentBuilder shuffled = shuffleXContent(builder)__        XContentParser parser = createParser(shuffled)__        String contentString = factoriesBuilder.toString()__        logger.info("Content string: {}", contentString)__        PipelineAggregationBuilder newAgg = parse(parser)__        assertNotSame(newAgg, testAgg)__        assertEquals(testAgg, newAgg)__        assertEquals(testAgg.hashCode(), newAgg.hashCode())__    };generic,test,that,creates,new,aggregator,factory,from,the,test,aggregator,factory,and,checks,both,for,equality,and,asserts,equality,on,the,two,queries;public,void,test,from,xcontent,throws,ioexception,af,test,agg,create,test,aggregator,factory,aggregator,factories,builder,factories,builder,aggregator,factories,builder,skip,resolve,order,add,pipeline,aggregator,test,agg,logger,info,content,string,factories,builder,xcontent,builder,builder,xcontent,factory,content,builder,random,from,xcontent,type,values,if,random,boolean,builder,pretty,print,factories,builder,to,xcontent,builder,to,xcontent,xcontent,builder,shuffled,shuffle,xcontent,builder,xcontent,parser,parser,create,parser,shuffled,string,content,string,factories,builder,to,string,logger,info,content,string,content,string,pipeline,aggregation,builder,new,agg,parse,parser,assert,not,same,new,agg,test,agg,assert,equals,test,agg,new,agg,assert,equals,test,agg,hash,code,new,agg,hash,code
BasePipelineAggregationTestCase -> public void testFromXContent() throws IOException;1529916084;Generic test that creates new AggregatorFactory from the test_AggregatorFactory and checks both for equality and asserts equality on_the two queries.;public void testFromXContent() throws IOException {_        AF testAgg = createTestAggregatorFactory()__        AggregatorFactories.Builder factoriesBuilder = AggregatorFactories.builder().skipResolveOrder().addPipelineAggregator(testAgg)__        logger.info("Content string: {}", factoriesBuilder)__        XContentBuilder builder = XContentFactory.contentBuilder(randomFrom(XContentType.values()))__        if (randomBoolean()) {_            builder.prettyPrint()__        }_        factoriesBuilder.toXContent(builder, ToXContent.EMPTY_PARAMS)__        XContentBuilder shuffled = shuffleXContent(builder)__        try (XContentParser parser = createParser(shuffled)) {_            String contentString = factoriesBuilder.toString()__            logger.info("Content string: {}", contentString)__            PipelineAggregationBuilder newAgg = parse(parser)__            assertNotSame(newAgg, testAgg)__            assertEquals(testAgg, newAgg)__            assertEquals(testAgg.hashCode(), newAgg.hashCode())__        }_    };generic,test,that,creates,new,aggregator,factory,from,the,test,aggregator,factory,and,checks,both,for,equality,and,asserts,equality,on,the,two,queries;public,void,test,from,xcontent,throws,ioexception,af,test,agg,create,test,aggregator,factory,aggregator,factories,builder,factories,builder,aggregator,factories,builder,skip,resolve,order,add,pipeline,aggregator,test,agg,logger,info,content,string,factories,builder,xcontent,builder,builder,xcontent,factory,content,builder,random,from,xcontent,type,values,if,random,boolean,builder,pretty,print,factories,builder,to,xcontent,builder,to,xcontent,xcontent,builder,shuffled,shuffle,xcontent,builder,try,xcontent,parser,parser,create,parser,shuffled,string,content,string,factories,builder,to,string,logger,info,content,string,content,string,pipeline,aggregation,builder,new,agg,parse,parser,assert,not,same,new,agg,test,agg,assert,equals,test,agg,new,agg,assert,equals,test,agg,hash,code,new,agg,hash,code
BasePipelineAggregationTestCase -> public void testFromXContent() throws IOException;1538170812;Generic test that creates new AggregatorFactory from the test_AggregatorFactory and checks both for equality and asserts equality on_the two queries.;public void testFromXContent() throws IOException {_        AF testAgg = createTestAggregatorFactory()__        AggregatorFactories.Builder factoriesBuilder = AggregatorFactories.builder().skipResolveOrder().addPipelineAggregator(testAgg)__        logger.info("Content string: {}", factoriesBuilder)__        XContentBuilder builder = XContentFactory.contentBuilder(randomFrom(XContentType.values()))__        if (randomBoolean()) {_            builder.prettyPrint()__        }_        factoriesBuilder.toXContent(builder, ToXContent.EMPTY_PARAMS)__        XContentBuilder shuffled = shuffleXContent(builder)__        try (XContentParser parser = createParser(shuffled)) {_            String contentString = factoriesBuilder.toString()__            logger.info("Content string: {}", contentString)__            PipelineAggregationBuilder newAgg = parse(parser)__            assertNotSame(newAgg, testAgg)__            assertEquals(testAgg, newAgg)__            assertEquals(testAgg.hashCode(), newAgg.hashCode())__        }_    };generic,test,that,creates,new,aggregator,factory,from,the,test,aggregator,factory,and,checks,both,for,equality,and,asserts,equality,on,the,two,queries;public,void,test,from,xcontent,throws,ioexception,af,test,agg,create,test,aggregator,factory,aggregator,factories,builder,factories,builder,aggregator,factories,builder,skip,resolve,order,add,pipeline,aggregator,test,agg,logger,info,content,string,factories,builder,xcontent,builder,builder,xcontent,factory,content,builder,random,from,xcontent,type,values,if,random,boolean,builder,pretty,print,factories,builder,to,xcontent,builder,to,xcontent,xcontent,builder,shuffled,shuffle,xcontent,builder,try,xcontent,parser,parser,create,parser,shuffled,string,content,string,factories,builder,to,string,logger,info,content,string,content,string,pipeline,aggregation,builder,new,agg,parse,parser,assert,not,same,new,agg,test,agg,assert,equals,test,agg,new,agg,assert,equals,test,agg,hash,code,new,agg,hash,code
BasePipelineAggregationTestCase -> public void testSerialization() throws IOException;1524684173;Test serialization and deserialization of the test AggregatorFactory.;public void testSerialization() throws IOException {_        AF testAgg = createTestAggregatorFactory()__        try (BytesStreamOutput output = new BytesStreamOutput()) {_            output.writeNamedWriteable(testAgg)__            try (StreamInput in = new NamedWriteableAwareStreamInput(output.bytes().streamInput(), namedWriteableRegistry)) {_                PipelineAggregationBuilder deserializedQuery = in.readNamedWriteable(PipelineAggregationBuilder.class)__                assertEquals(deserializedQuery, testAgg)__                assertEquals(deserializedQuery.hashCode(), testAgg.hashCode())__                assertNotSame(deserializedQuery, testAgg)__            }_        }_    };test,serialization,and,deserialization,of,the,test,aggregator,factory;public,void,test,serialization,throws,ioexception,af,test,agg,create,test,aggregator,factory,try,bytes,stream,output,output,new,bytes,stream,output,output,write,named,writeable,test,agg,try,stream,input,in,new,named,writeable,aware,stream,input,output,bytes,stream,input,named,writeable,registry,pipeline,aggregation,builder,deserialized,query,in,read,named,writeable,pipeline,aggregation,builder,class,assert,equals,deserialized,query,test,agg,assert,equals,deserialized,query,hash,code,test,agg,hash,code,assert,not,same,deserialized,query,test,agg
BasePipelineAggregationTestCase -> public void testSerialization() throws IOException;1529916084;Test serialization and deserialization of the test AggregatorFactory.;public void testSerialization() throws IOException {_        AF testAgg = createTestAggregatorFactory()__        try (BytesStreamOutput output = new BytesStreamOutput()) {_            output.writeNamedWriteable(testAgg)__            try (StreamInput in = new NamedWriteableAwareStreamInput(output.bytes().streamInput(), namedWriteableRegistry)) {_                PipelineAggregationBuilder deserializedQuery = in.readNamedWriteable(PipelineAggregationBuilder.class)__                assertEquals(deserializedQuery, testAgg)__                assertEquals(deserializedQuery.hashCode(), testAgg.hashCode())__                assertNotSame(deserializedQuery, testAgg)__            }_        }_    };test,serialization,and,deserialization,of,the,test,aggregator,factory;public,void,test,serialization,throws,ioexception,af,test,agg,create,test,aggregator,factory,try,bytes,stream,output,output,new,bytes,stream,output,output,write,named,writeable,test,agg,try,stream,input,in,new,named,writeable,aware,stream,input,output,bytes,stream,input,named,writeable,registry,pipeline,aggregation,builder,deserialized,query,in,read,named,writeable,pipeline,aggregation,builder,class,assert,equals,deserialized,query,test,agg,assert,equals,deserialized,query,hash,code,test,agg,hash,code,assert,not,same,deserialized,query,test,agg
BasePipelineAggregationTestCase -> public void testSerialization() throws IOException;1538170812;Test serialization and deserialization of the test AggregatorFactory.;public void testSerialization() throws IOException {_        AF testAgg = createTestAggregatorFactory()__        try (BytesStreamOutput output = new BytesStreamOutput()) {_            output.writeNamedWriteable(testAgg)__            try (StreamInput in = new NamedWriteableAwareStreamInput(output.bytes().streamInput(), namedWriteableRegistry)) {_                PipelineAggregationBuilder deserializedQuery = in.readNamedWriteable(PipelineAggregationBuilder.class)__                assertEquals(deserializedQuery, testAgg)__                assertEquals(deserializedQuery.hashCode(), testAgg.hashCode())__                assertNotSame(deserializedQuery, testAgg)__            }_        }_    };test,serialization,and,deserialization,of,the,test,aggregator,factory;public,void,test,serialization,throws,ioexception,af,test,agg,create,test,aggregator,factory,try,bytes,stream,output,output,new,bytes,stream,output,output,write,named,writeable,test,agg,try,stream,input,in,new,named,writeable,aware,stream,input,output,bytes,stream,input,named,writeable,registry,pipeline,aggregation,builder,deserialized,query,in,read,named,writeable,pipeline,aggregation,builder,class,assert,equals,deserialized,query,test,agg,assert,equals,deserialized,query,hash,code,test,agg,hash,code,assert,not,same,deserialized,query,test,agg
