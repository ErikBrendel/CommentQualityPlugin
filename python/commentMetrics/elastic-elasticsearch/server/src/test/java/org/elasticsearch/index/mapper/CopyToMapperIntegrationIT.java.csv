commented;modifiers;parameterAmount;loc;comment;code
false;public;0;31;;public void testDynamicTemplateCopyTo() throws Exception {     assertAcked(client().admin().indices().prepareCreate("test-idx").addMapping("_doc", createDynamicTemplateMapping())).     int recordCount = between(1, 200).     for (int i = 0. i < recordCount * 2. i++) {         client().prepareIndex("test-idx", "_doc", Integer.toString(i)).setSource("test_field", "test " + i, "even", i % 2 == 0).get().     }     client().admin().indices().prepareRefresh("test-idx").execute().actionGet().     SubAggCollectionMode aggCollectionMode = randomFrom(SubAggCollectionMode.values()).     SearchResponse response = client().prepareSearch("test-idx").setQuery(QueryBuilders.termQuery("even", true)).addAggregation(AggregationBuilders.terms("test").field("test_field").size(recordCount * 2).collectMode(aggCollectionMode)).addAggregation(AggregationBuilders.terms("test_raw").field("test_field_raw").size(recordCount * 2).collectMode(aggCollectionMode)).execute().actionGet().     assertThat(response.getHits().getTotalHits().value, equalTo((long) recordCount)).     assertThat(((Terms) response.getAggregations().get("test")).getBuckets().size(), equalTo(recordCount + 1)).     assertThat(((Terms) response.getAggregations().get("test_raw")).getBuckets().size(), equalTo(recordCount)). }
false;public;0;19;;public void testDynamicObjectCopyTo() throws Exception {     String mapping = Strings.toString(jsonBuilder().startObject().startObject("_doc").startObject("properties").startObject("foo").field("type", "text").field("copy_to", "root.top.child").endObject().endObject().endObject().endObject()).     assertAcked(client().admin().indices().prepareCreate("test-idx").addMapping("_doc", mapping, XContentType.JSON)).     client().prepareIndex("test-idx", "_doc", "1").setSource("foo", "bar").get().     client().admin().indices().prepareRefresh("test-idx").execute().actionGet().     SearchResponse response = client().prepareSearch("test-idx").setQuery(QueryBuilders.termQuery("root.top.child", "bar")).get().     assertThat(response.getHits().getTotalHits().value, equalTo(1L)). }
false;private;0;20;;private XContentBuilder createDynamicTemplateMapping() throws IOException {     return XContentFactory.jsonBuilder().startObject().startObject("_doc").startArray("dynamic_templates").startObject().startObject("template_raw").field("match", "*_raw").field("match_mapping_type", "string").startObject("mapping").field("type", "keyword").endObject().endObject().endObject().startObject().startObject("template_all").field("match", "*").field("match_mapping_type", "string").startObject("mapping").field("type", "text").field("fielddata", true).field("copy_to", "{name}_raw").endObject().endObject().endObject().endArray().endObject().endObject(). }
