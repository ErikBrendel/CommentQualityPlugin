# id;timestamp;commentText;codeText;commentWords;codeWords
MaxBucketIT -> public void testFieldIsntWrittenOutTwice() throws Exception;1538067637;https://github.com/elastic/elasticsearch/issues/33514__This bug manifests as the max_bucket agg ("peak") being added to the response twice, because_the pipeline agg is run twice.  This makes invalid JSON and breaks conversion to maps._The bug was caused by an UnmappedTerms being the chosen as the first reduction target.  UnmappedTerms_delegated reduction to the first non-unmapped agg, which would reduce and run pipeline aggs.  But then_execution returns to the UnmappedTerms and _it_ runs pipelines as well, doubling up on the values.__Applies to any pipeline agg, not just max.;public void testFieldIsntWrittenOutTwice() throws Exception {_        _        _        createIndex("foo_1")___        XContentBuilder builder = jsonBuilder().startObject().startObject("properties")_            .startObject("@timestamp").field("type", "date").endObject()_            .startObject("license").startObject("properties")_            .startObject("count").field("type", "long").endObject()_            .startObject("partnumber").field("type", "text").startObject("fields").startObject("keyword")_            .field("type", "keyword").field("ignore_above", 256)_            .endObject().endObject().endObject()_            .endObject().endObject().endObject().endObject()__        assertAcked(client().admin().indices().prepareCreate("foo_2")_            .addMapping("doc", builder).get())___        XContentBuilder docBuilder = jsonBuilder().startObject()_            .startObject("license").field("partnumber", "foobar").field("count", 2).endObject()_            .field("@timestamp", "2018-07-08T08:07:00.599Z")_            .endObject()___        client().prepareIndex("foo_2", "doc").setSource(docBuilder).setRefreshPolicy(WriteRequest.RefreshPolicy.IMMEDIATE).get()___        client().admin().indices().prepareRefresh()___        TermsAggregationBuilder groupByLicenseAgg = AggregationBuilders.terms("group_by_license_partnumber")_            .field("license.partnumber.keyword")__        MaxBucketPipelineAggregationBuilder peakPipelineAggBuilder =_            PipelineAggregatorBuilders.maxBucket("peak", "licenses_per_day>total_licenses")__        SumAggregationBuilder sumAggBuilder = AggregationBuilders.sum("total_licenses").field("license.count")__        DateHistogramAggregationBuilder licensePerDayBuilder =_            AggregationBuilders.dateHistogram("licenses_per_day").field("@timestamp").dateHistogramInterval(DateHistogramInterval.DAY)__        licensePerDayBuilder.subAggregation(sumAggBuilder)__        groupByLicenseAgg.subAggregation(licensePerDayBuilder)__        groupByLicenseAgg.subAggregation(peakPipelineAggBuilder)___        SearchResponse response = client().prepareSearch("foo_*").setSize(0).addAggregation(groupByLicenseAgg).get()__        BytesReference bytes = XContentHelper.toXContent(response, XContentType.JSON, false)__        XContentHelper.convertToMap(bytes, false, XContentType.JSON)__    };https,github,com,elastic,elasticsearch,issues,33514,this,bug,manifests,as,the,agg,peak,being,added,to,the,response,twice,because,the,pipeline,agg,is,run,twice,this,makes,invalid,json,and,breaks,conversion,to,maps,the,bug,was,caused,by,an,unmapped,terms,being,the,chosen,as,the,first,reduction,target,unmapped,terms,delegated,reduction,to,the,first,non,unmapped,agg,which,would,reduce,and,run,pipeline,aggs,but,then,execution,returns,to,the,unmapped,terms,and,runs,pipelines,as,well,doubling,up,on,the,values,applies,to,any,pipeline,agg,not,just,max;public,void,test,field,isnt,written,out,twice,throws,exception,create,index,xcontent,builder,builder,json,builder,start,object,start,object,properties,start,object,timestamp,field,type,date,end,object,start,object,license,start,object,properties,start,object,count,field,type,long,end,object,start,object,partnumber,field,type,text,start,object,fields,start,object,keyword,field,type,keyword,field,256,end,object,end,object,end,object,end,object,end,object,end,object,end,object,assert,acked,client,admin,indices,prepare,create,add,mapping,doc,builder,get,xcontent,builder,doc,builder,json,builder,start,object,start,object,license,field,partnumber,foobar,field,count,2,end,object,field,timestamp,2018,07,08t08,07,00,599z,end,object,client,prepare,index,doc,set,source,doc,builder,set,refresh,policy,write,request,refresh,policy,immediate,get,client,admin,indices,prepare,refresh,terms,aggregation,builder,group,by,license,agg,aggregation,builders,terms,field,license,partnumber,keyword,max,bucket,pipeline,aggregation,builder,peak,pipeline,agg,builder,pipeline,aggregator,builders,max,bucket,peak,sum,aggregation,builder,sum,agg,builder,aggregation,builders,sum,field,license,count,date,histogram,aggregation,builder,license,per,day,builder,aggregation,builders,date,histogram,field,timestamp,date,histogram,interval,date,histogram,interval,day,license,per,day,builder,sub,aggregation,sum,agg,builder,group,by,license,agg,sub,aggregation,license,per,day,builder,group,by,license,agg,sub,aggregation,peak,pipeline,agg,builder,search,response,response,client,prepare,search,set,size,0,add,aggregation,group,by,license,agg,get,bytes,reference,bytes,xcontent,helper,to,xcontent,response,xcontent,type,json,false,xcontent,helper,convert,to,map,bytes,false,xcontent,type,json
MaxBucketIT -> public void testFieldIsntWrittenOutTwice() throws Exception;1540486836;https://github.com/elastic/elasticsearch/issues/33514__This bug manifests as the max_bucket agg ("peak") being added to the response twice, because_the pipeline agg is run twice.  This makes invalid JSON and breaks conversion to maps._The bug was caused by an UnmappedTerms being the chosen as the first reduction target.  UnmappedTerms_delegated reduction to the first non-unmapped agg, which would reduce and run pipeline aggs.  But then_execution returns to the UnmappedTerms and _it_ runs pipelines as well, doubling up on the values.__Applies to any pipeline agg, not just max.;public void testFieldIsntWrittenOutTwice() throws Exception {_        _        _        createIndex("foo_1")___        XContentBuilder builder = jsonBuilder().startObject().startObject("properties")_            .startObject("@timestamp").field("type", "date").endObject()_            .startObject("license").startObject("properties")_            .startObject("count").field("type", "long").endObject()_            .startObject("partnumber").field("type", "text").startObject("fields").startObject("keyword")_            .field("type", "keyword").field("ignore_above", 256)_            .endObject().endObject().endObject()_            .endObject().endObject().endObject().endObject()__        assertAcked(client().admin().indices().prepareCreate("foo_2")_            .addMapping("doc", builder).get())___        XContentBuilder docBuilder = jsonBuilder().startObject()_            .startObject("license").field("partnumber", "foobar").field("count", 2).endObject()_            .field("@timestamp", "2018-07-08T08:07:00.599Z")_            .endObject()___        client().prepareIndex("foo_2", "doc").setSource(docBuilder).setRefreshPolicy(WriteRequest.RefreshPolicy.IMMEDIATE).get()___        client().admin().indices().prepareRefresh()___        TermsAggregationBuilder groupByLicenseAgg = AggregationBuilders.terms("group_by_license_partnumber")_            .field("license.partnumber.keyword")__        MaxBucketPipelineAggregationBuilder peakPipelineAggBuilder =_            PipelineAggregatorBuilders.maxBucket("peak", "licenses_per_day>total_licenses")__        SumAggregationBuilder sumAggBuilder = AggregationBuilders.sum("total_licenses").field("license.count")__        DateHistogramAggregationBuilder licensePerDayBuilder =_            AggregationBuilders.dateHistogram("licenses_per_day").field("@timestamp").dateHistogramInterval(DateHistogramInterval.DAY)__        licensePerDayBuilder.subAggregation(sumAggBuilder)__        groupByLicenseAgg.subAggregation(licensePerDayBuilder)__        groupByLicenseAgg.subAggregation(peakPipelineAggBuilder)___        SearchResponse response = client().prepareSearch("foo_*").setSize(0).addAggregation(groupByLicenseAgg).get()__        BytesReference bytes = XContentHelper.toXContent(response, XContentType.JSON, false)__        XContentHelper.convertToMap(bytes, false, XContentType.JSON)__    };https,github,com,elastic,elasticsearch,issues,33514,this,bug,manifests,as,the,agg,peak,being,added,to,the,response,twice,because,the,pipeline,agg,is,run,twice,this,makes,invalid,json,and,breaks,conversion,to,maps,the,bug,was,caused,by,an,unmapped,terms,being,the,chosen,as,the,first,reduction,target,unmapped,terms,delegated,reduction,to,the,first,non,unmapped,agg,which,would,reduce,and,run,pipeline,aggs,but,then,execution,returns,to,the,unmapped,terms,and,runs,pipelines,as,well,doubling,up,on,the,values,applies,to,any,pipeline,agg,not,just,max;public,void,test,field,isnt,written,out,twice,throws,exception,create,index,xcontent,builder,builder,json,builder,start,object,start,object,properties,start,object,timestamp,field,type,date,end,object,start,object,license,start,object,properties,start,object,count,field,type,long,end,object,start,object,partnumber,field,type,text,start,object,fields,start,object,keyword,field,type,keyword,field,256,end,object,end,object,end,object,end,object,end,object,end,object,end,object,assert,acked,client,admin,indices,prepare,create,add,mapping,doc,builder,get,xcontent,builder,doc,builder,json,builder,start,object,start,object,license,field,partnumber,foobar,field,count,2,end,object,field,timestamp,2018,07,08t08,07,00,599z,end,object,client,prepare,index,doc,set,source,doc,builder,set,refresh,policy,write,request,refresh,policy,immediate,get,client,admin,indices,prepare,refresh,terms,aggregation,builder,group,by,license,agg,aggregation,builders,terms,field,license,partnumber,keyword,max,bucket,pipeline,aggregation,builder,peak,pipeline,agg,builder,pipeline,aggregator,builders,max,bucket,peak,sum,aggregation,builder,sum,agg,builder,aggregation,builders,sum,field,license,count,date,histogram,aggregation,builder,license,per,day,builder,aggregation,builders,date,histogram,field,timestamp,date,histogram,interval,date,histogram,interval,day,license,per,day,builder,sub,aggregation,sum,agg,builder,group,by,license,agg,sub,aggregation,license,per,day,builder,group,by,license,agg,sub,aggregation,peak,pipeline,agg,builder,search,response,response,client,prepare,search,set,size,0,add,aggregation,group,by,license,agg,get,bytes,reference,bytes,xcontent,helper,to,xcontent,response,xcontent,type,json,false,xcontent,helper,convert,to,map,bytes,false,xcontent,type,json
MaxBucketIT -> public void testFieldIsntWrittenOutTwice() throws Exception;1544110272;https://github.com/elastic/elasticsearch/issues/33514__This bug manifests as the max_bucket agg ("peak") being added to the response twice, because_the pipeline agg is run twice.  This makes invalid JSON and breaks conversion to maps._The bug was caused by an UnmappedTerms being the chosen as the first reduction target.  UnmappedTerms_delegated reduction to the first non-unmapped agg, which would reduce and run pipeline aggs.  But then_execution returns to the UnmappedTerms and _it_ runs pipelines as well, doubling up on the values.__Applies to any pipeline agg, not just max.;public void testFieldIsntWrittenOutTwice() throws Exception {_        _        _        createIndex("foo_1")___        XContentBuilder builder = jsonBuilder().startObject().startObject("properties")_            .startObject("@timestamp").field("type", "date").endObject()_            .startObject("license").startObject("properties")_            .startObject("count").field("type", "long").endObject()_            .startObject("partnumber").field("type", "text").startObject("fields").startObject("keyword")_            .field("type", "keyword").field("ignore_above", 256)_            .endObject().endObject().endObject()_            .endObject().endObject().endObject().endObject()__        assertAcked(client().admin().indices().prepareCreate("foo_2")_            .addMapping("doc", builder).get())___        XContentBuilder docBuilder = jsonBuilder().startObject()_            .startObject("license").field("partnumber", "foobar").field("count", 2).endObject()_            .field("@timestamp", "2018-07-08T08:07:00.599Z")_            .endObject()___        client().prepareIndex("foo_2", "doc").setSource(docBuilder).setRefreshPolicy(WriteRequest.RefreshPolicy.IMMEDIATE).get()___        client().admin().indices().prepareRefresh()___        TermsAggregationBuilder groupByLicenseAgg = AggregationBuilders.terms("group_by_license_partnumber")_            .field("license.partnumber.keyword")__        MaxBucketPipelineAggregationBuilder peakPipelineAggBuilder =_            PipelineAggregatorBuilders.maxBucket("peak", "licenses_per_day>total_licenses")__        SumAggregationBuilder sumAggBuilder = AggregationBuilders.sum("total_licenses").field("license.count")__        DateHistogramAggregationBuilder licensePerDayBuilder =_            AggregationBuilders.dateHistogram("licenses_per_day").field("@timestamp").dateHistogramInterval(DateHistogramInterval.DAY)__        licensePerDayBuilder.subAggregation(sumAggBuilder)__        groupByLicenseAgg.subAggregation(licensePerDayBuilder)__        groupByLicenseAgg.subAggregation(peakPipelineAggBuilder)___        SearchResponse response = client().prepareSearch("foo_*").setSize(0).addAggregation(groupByLicenseAgg).get()__        BytesReference bytes = XContentHelper.toXContent(response, XContentType.JSON, false)__        XContentHelper.convertToMap(bytes, false, XContentType.JSON)__    };https,github,com,elastic,elasticsearch,issues,33514,this,bug,manifests,as,the,agg,peak,being,added,to,the,response,twice,because,the,pipeline,agg,is,run,twice,this,makes,invalid,json,and,breaks,conversion,to,maps,the,bug,was,caused,by,an,unmapped,terms,being,the,chosen,as,the,first,reduction,target,unmapped,terms,delegated,reduction,to,the,first,non,unmapped,agg,which,would,reduce,and,run,pipeline,aggs,but,then,execution,returns,to,the,unmapped,terms,and,runs,pipelines,as,well,doubling,up,on,the,values,applies,to,any,pipeline,agg,not,just,max;public,void,test,field,isnt,written,out,twice,throws,exception,create,index,xcontent,builder,builder,json,builder,start,object,start,object,properties,start,object,timestamp,field,type,date,end,object,start,object,license,start,object,properties,start,object,count,field,type,long,end,object,start,object,partnumber,field,type,text,start,object,fields,start,object,keyword,field,type,keyword,field,256,end,object,end,object,end,object,end,object,end,object,end,object,end,object,assert,acked,client,admin,indices,prepare,create,add,mapping,doc,builder,get,xcontent,builder,doc,builder,json,builder,start,object,start,object,license,field,partnumber,foobar,field,count,2,end,object,field,timestamp,2018,07,08t08,07,00,599z,end,object,client,prepare,index,doc,set,source,doc,builder,set,refresh,policy,write,request,refresh,policy,immediate,get,client,admin,indices,prepare,refresh,terms,aggregation,builder,group,by,license,agg,aggregation,builders,terms,field,license,partnumber,keyword,max,bucket,pipeline,aggregation,builder,peak,pipeline,agg,builder,pipeline,aggregator,builders,max,bucket,peak,sum,aggregation,builder,sum,agg,builder,aggregation,builders,sum,field,license,count,date,histogram,aggregation,builder,license,per,day,builder,aggregation,builders,date,histogram,field,timestamp,date,histogram,interval,date,histogram,interval,day,license,per,day,builder,sub,aggregation,sum,agg,builder,group,by,license,agg,sub,aggregation,license,per,day,builder,group,by,license,agg,sub,aggregation,peak,pipeline,agg,builder,search,response,response,client,prepare,search,set,size,0,add,aggregation,group,by,license,agg,get,bytes,reference,bytes,xcontent,helper,to,xcontent,response,xcontent,type,json,false,xcontent,helper,convert,to,map,bytes,false,xcontent,type,json
