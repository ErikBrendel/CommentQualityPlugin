commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;public void testSnapshotEquals() {     final SnapshotId snapshotId = new SnapshotId("snap", UUIDs.randomBase64UUID()).     final Snapshot original = new Snapshot("repo", snapshotId).     final Snapshot expected = new Snapshot(original.getRepository(), original.getSnapshotId()).     assertThat(expected, equalTo(original)).     assertThat(expected.getRepository(), equalTo(original.getRepository())).     assertThat(expected.getSnapshotId(), equalTo(original.getSnapshotId())).     assertThat(expected.getSnapshotId().getName(), equalTo(original.getSnapshotId().getName())).     assertThat(expected.getSnapshotId().getUUID(), equalTo(original.getSnapshotId().getUUID())). }
false;public;0;7;;public void testSerialization() throws IOException {     final SnapshotId snapshotId = new SnapshotId(randomAlphaOfLength(randomIntBetween(2, 8)), UUIDs.randomBase64UUID()).     final Snapshot original = new Snapshot(randomAlphaOfLength(randomIntBetween(2, 8)), snapshotId).     final BytesStreamOutput out = new BytesStreamOutput().     original.writeTo(out).     assertThat(new Snapshot(out.bytes().streamInput()), equalTo(original)). }
false;public;0;6;;public void testCreateSnapshotRequestDescrptions() {     CreateSnapshotRequest createSnapshotRequest = new CreateSnapshotRequest().     createSnapshotRequest.snapshot("snapshot_name").     createSnapshotRequest.repository("repo_name").     assertEquals("snapshot [repo_name:snapshot_name]", createSnapshotRequest.getDescription()). }
false;public;0;6;;public void testRestoreSnapshotRequestDescrptions() {     RestoreSnapshotRequest restoreSnapshotRequest = new RestoreSnapshotRequest().     restoreSnapshotRequest.snapshot("snapshot_name").     restoreSnapshotRequest.repository("repo_name").     assertEquals("snapshot [repo_name:snapshot_name]", restoreSnapshotRequest.getDescription()). }
