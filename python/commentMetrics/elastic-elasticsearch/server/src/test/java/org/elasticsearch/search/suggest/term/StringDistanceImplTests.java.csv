commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Override public void testValidOrdinals() {     assertThat(StringDistanceImpl.INTERNAL.ordinal(), equalTo(0)).     assertThat(StringDistanceImpl.DAMERAU_LEVENSHTEIN.ordinal(), equalTo(1)).     assertThat(StringDistanceImpl.LEVENSHTEIN.ordinal(), equalTo(2)).     assertThat(StringDistanceImpl.JARO_WINKLER.ordinal(), equalTo(3)).     assertThat(StringDistanceImpl.NGRAM.ordinal(), equalTo(4)). }
false;public;0;14;;@Override public void testFromString() {     assertThat(StringDistanceImpl.resolve("internal"), equalTo(StringDistanceImpl.INTERNAL)).     assertThat(StringDistanceImpl.resolve("damerau_levenshtein"), equalTo(StringDistanceImpl.DAMERAU_LEVENSHTEIN)).     assertThat(StringDistanceImpl.resolve("levenshtein"), equalTo(StringDistanceImpl.LEVENSHTEIN)).     assertThat(StringDistanceImpl.resolve("jaro_winkler"), equalTo(StringDistanceImpl.JARO_WINKLER)).     assertThat(StringDistanceImpl.resolve("ngram"), equalTo(StringDistanceImpl.NGRAM)).     final String doesntExist = "doesnt_exist".     expectThrows(IllegalArgumentException.class, () -> StringDistanceImpl.resolve(doesntExist)).     NullPointerException e = expectThrows(NullPointerException.class, () -> StringDistanceImpl.resolve(null)).     assertThat(e.getMessage(), equalTo("Input string is null")). }
false;public;0;8;;@Override public void testWriteTo() throws IOException {     assertWriteToStream(StringDistanceImpl.INTERNAL, 0).     assertWriteToStream(StringDistanceImpl.DAMERAU_LEVENSHTEIN, 1).     assertWriteToStream(StringDistanceImpl.LEVENSHTEIN, 2).     assertWriteToStream(StringDistanceImpl.JARO_WINKLER, 3).     assertWriteToStream(StringDistanceImpl.NGRAM, 4). }
false;public;0;8;;@Override public void testReadFrom() throws IOException {     assertReadFromStream(0, StringDistanceImpl.INTERNAL).     assertReadFromStream(1, StringDistanceImpl.DAMERAU_LEVENSHTEIN).     assertReadFromStream(2, StringDistanceImpl.LEVENSHTEIN).     assertReadFromStream(3, StringDistanceImpl.JARO_WINKLER).     assertReadFromStream(4, StringDistanceImpl.NGRAM). }
