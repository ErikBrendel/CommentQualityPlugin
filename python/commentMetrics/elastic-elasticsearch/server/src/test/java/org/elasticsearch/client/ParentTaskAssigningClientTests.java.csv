commented;modifiers;parameterAmount;loc;comment;code
false;protected;3;6;;@Override protected <Request extends ActionRequest, Response extends ActionResponse> void doExecute(Action<Response> action, Request request, ActionListener<Response> listener) {     assertEquals(parentTaskId[0], request.getParentTask()).     super.doExecute(action, request, listener). }
false;public;0;25;;public void testSetsParentId() {     TaskId[] parentTaskId = new TaskId[] { new TaskId(randomAlphaOfLength(3), randomLong()) }.     // This mock will do nothing but verify that parentTaskId is set on all requests sent to it.     NoOpClient mock = new NoOpClient(getTestName()) {          @Override         protected <Request extends ActionRequest, Response extends ActionResponse> void doExecute(Action<Response> action, Request request, ActionListener<Response> listener) {             assertEquals(parentTaskId[0], request.getParentTask()).             super.doExecute(action, request, listener).         }     }.     try (ParentTaskAssigningClient client = new ParentTaskAssigningClient(mock, parentTaskId[0])) {         // All of these should have the parentTaskId set         client.bulk(new BulkRequest()).         client.search(new SearchRequest()).         client.clearScroll(new ClearScrollRequest()).         // Now lets verify that unwrapped calls don't have the parentTaskId set         parentTaskId[0] = TaskId.EMPTY_TASK_ID.         client.unwrap().bulk(new BulkRequest()).         client.unwrap().search(new SearchRequest()).         client.unwrap().clearScroll(new ClearScrollRequest()).     } }
