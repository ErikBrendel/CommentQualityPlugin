commented;modifiers;parameterAmount;loc;comment;code
true;public;0;19;/**  * Test that empty transport/http types are not printed out as part  * of the cluster stats xcontent output.  */ ;/**  * Test that empty transport/http types are not printed out as part  * of the cluster stats xcontent output.  */ public void testNetworkTypesToXContent() throws Exception {     ClusterStatsNodes.NetworkTypes stats = new ClusterStatsNodes.NetworkTypes(emptyList()).     assertEquals("{\"transport_types\":{},\"http_types\":{}}", toXContent(stats, XContentType.JSON, randomBoolean()).utf8ToString()).     List<NodeInfo> nodeInfos = singletonList(createNodeInfo("node_0", null, null)).     stats = new ClusterStatsNodes.NetworkTypes(nodeInfos).     assertEquals("{\"transport_types\":{},\"http_types\":{}}", toXContent(stats, XContentType.JSON, randomBoolean()).utf8ToString()).     nodeInfos = Arrays.asList(createNodeInfo("node_1", "", ""), createNodeInfo("node_2", "custom", "custom"), createNodeInfo("node_3", null, "custom")).     stats = new ClusterStatsNodes.NetworkTypes(nodeInfos).     assertEquals("{" + "\"transport_types\":{\"custom\":1}," + "\"http_types\":{\"custom\":2}" + "}", toXContent(stats, XContentType.JSON, randomBoolean()).utf8ToString()). }
false;private,static;3;14;;private static NodeInfo createNodeInfo(String nodeId, String transportType, String httpType) {     Settings.Builder settings = Settings.builder().     if (transportType != null) {         settings.put(randomFrom(NetworkModule.TRANSPORT_TYPE_KEY, NetworkModule.TRANSPORT_TYPE_DEFAULT_KEY), transportType).     }     if (httpType != null) {         settings.put(randomFrom(NetworkModule.HTTP_TYPE_KEY, NetworkModule.HTTP_TYPE_DEFAULT_KEY), httpType).     }     return new NodeInfo(null, null, new DiscoveryNode(nodeId, buildNewFakeTransportAddress(), null), settings.build(), null, null, null, null, null, null, null, null, null). }
