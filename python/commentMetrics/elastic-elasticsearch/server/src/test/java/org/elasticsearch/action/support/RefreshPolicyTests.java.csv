commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;public void testSerialization() throws IOException {     final WriteRequest.RefreshPolicy refreshPolicy = randomFrom(WriteRequest.RefreshPolicy.values()).     try (BytesStreamOutput out = new BytesStreamOutput()) {         refreshPolicy.writeTo(out).         try (StreamInput in = out.bytes().streamInput()) {             WriteRequest.RefreshPolicy deserializedRefreshPolicy = WriteRequest.RefreshPolicy.readFrom(in).             assertEquals(refreshPolicy, deserializedRefreshPolicy).         }     } }
false;public;0;4;;public void testParse() throws IOException {     final String refreshPolicyValue = randomFrom(WriteRequest.RefreshPolicy.values()).getValue().     assertEquals(refreshPolicyValue, WriteRequest.RefreshPolicy.parse(refreshPolicyValue).getValue()). }
false;public;0;3;;public void testParseEmpty() throws IOException {     assertEquals(WriteRequest.RefreshPolicy.IMMEDIATE, WriteRequest.RefreshPolicy.parse("")). }
false;public;0;4;;public void testParseUnknown() throws IOException {     IllegalArgumentException e = expectThrows(IllegalArgumentException.class, () -> WriteRequest.RefreshPolicy.parse("unknown")).     assertEquals("Unknown value for refresh: [unknown].", e.getMessage()). }
