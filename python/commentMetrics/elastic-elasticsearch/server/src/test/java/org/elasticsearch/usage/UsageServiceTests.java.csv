commented;modifiers;parameterAmount;loc;comment;code
false;public;0;48;;public void testRestUsage() throws Exception {     DiscoveryNode discoveryNode = new DiscoveryNode("foo", new TransportAddress(InetAddress.getByName("localhost"), 12345), Version.CURRENT).     Settings settings = Settings.EMPTY.     RestRequest restRequest = new FakeRestRequest().     BaseRestHandler handlerA = new MockRestHandler("a", settings).     BaseRestHandler handlerB = new MockRestHandler("b", settings).     BaseRestHandler handlerC = new MockRestHandler("c", settings).     BaseRestHandler handlerD = new MockRestHandler("d", settings).     BaseRestHandler handlerE = new MockRestHandler("e", settings).     BaseRestHandler handlerF = new MockRestHandler("f", settings).     UsageService usageService = new UsageService().     usageService.addRestHandler(handlerA).     usageService.addRestHandler(handlerB).     usageService.addRestHandler(handlerC).     usageService.addRestHandler(handlerD).     usageService.addRestHandler(handlerE).     usageService.addRestHandler(handlerF).     handlerA.handleRequest(restRequest, null, null).     handlerB.handleRequest(restRequest, null, null).     handlerA.handleRequest(restRequest, null, null).     handlerA.handleRequest(restRequest, null, null).     handlerB.handleRequest(restRequest, null, null).     handlerC.handleRequest(restRequest, null, null).     handlerC.handleRequest(restRequest, null, null).     handlerD.handleRequest(restRequest, null, null).     handlerA.handleRequest(restRequest, null, null).     handlerB.handleRequest(restRequest, null, null).     handlerE.handleRequest(restRequest, null, null).     handlerF.handleRequest(restRequest, null, null).     handlerC.handleRequest(restRequest, null, null).     handlerD.handleRequest(restRequest, null, null).     NodeUsage usage = usageService.getUsageStats(discoveryNode, true).     assertThat(usage.getNode(), sameInstance(discoveryNode)).     Map<String, Long> restUsage = usage.getRestUsage().     assertThat(restUsage, notNullValue()).     assertThat(restUsage.size(), equalTo(6)).     assertThat(restUsage.get("a"), equalTo(4L)).     assertThat(restUsage.get("b"), equalTo(3L)).     assertThat(restUsage.get("c"), equalTo(3L)).     assertThat(restUsage.get("d"), equalTo(2L)).     assertThat(restUsage.get("e"), equalTo(1L)).     assertThat(restUsage.get("f"), equalTo(1L)).     usage = usageService.getUsageStats(discoveryNode, false).     assertThat(usage.getNode(), sameInstance(discoveryNode)).     assertThat(usage.getRestUsage(), nullValue()). }
false;public;0;4;;@Override public String getName() {     return name. }
false;protected;2;5;;@Override protected RestChannelConsumer prepareRequest(RestRequest request, NodeClient client) throws IOException {     return channel -> {     }. }
