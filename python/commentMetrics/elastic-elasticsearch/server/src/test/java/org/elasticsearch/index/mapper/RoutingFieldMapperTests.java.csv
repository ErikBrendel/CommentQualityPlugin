commented;modifiers;parameterAmount;loc;comment;code
false;public;0;16;;public void testRoutingMapper() throws Exception {     String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject("type").endObject().endObject()).     DocumentMapper docMapper = createIndex("test").mapperService().documentMapperParser().parse("type", new CompressedXContent(mapping)).     ParsedDocument doc = docMapper.parse(new SourceToParse("test", "type", "1", BytesReference.bytes(XContentFactory.jsonBuilder().startObject().field("field", "value").endObject()), XContentType.JSON, "routing_value")).     assertThat(doc.rootDoc().get("_routing"), equalTo("routing_value")).     assertThat(doc.rootDoc().get("field"), equalTo("value")). }
false;public;0;14;;public void testIncludeInObjectNotAllowed() throws Exception {     String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject("type").endObject().endObject()).     DocumentMapper docMapper = createIndex("test").mapperService().documentMapperParser().parse("type", new CompressedXContent(mapping)).     try {         docMapper.parse(new SourceToParse("test", "type", "1", BytesReference.bytes(XContentFactory.jsonBuilder().startObject().field("_routing", "foo").endObject()), XContentType.JSON)).         fail("Expected failure to parse metadata field").     } catch (MapperParsingException e) {         assertThat(e.getMessage(), e.getMessage(), containsString("Field [_routing] is a metadata field and cannot be added inside a document")).     } }
