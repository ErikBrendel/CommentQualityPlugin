# id;timestamp;commentText;codeText;commentWords;codeWords
GeoShapeIntegrationIT -> public void testIgnoreMalformed() throws Exception;1524684173;Test that ignore_malformed on GeoShapeFieldMapper does not fail the entire document;public void testIgnoreMalformed() throws Exception {_        _        assertAcked(client().admin().indices().prepareCreate("test")_            .addMapping("geometry", "shape", "type=geo_shape,ignore_malformed=true").get())__        ensureGreen()___        _        String polygonGeoJson = Strings.toString(XContentFactory.jsonBuilder().startObject().field("type", "Polygon")_            .startArray("coordinates")_            .startArray()_            .startArray().value(176.0).value(15.0).endArray()_            .startArray().value(-177.0).value(10.0).endArray()_            .startArray().value(-177.0).value(-10.0).endArray()_            .startArray().value(176.0).value(-15.0).endArray()_            .startArray().value(-177.0).value(15.0).endArray()_            .startArray().value(172.0).value(0.0).endArray()_            .startArray().value(176.0).value(15.0).endArray()_            .endArray()_            .endArray()_            .endObject())___        indexRandom(true, client().prepareIndex("test", "geometry", "0").setSource("shape",_            polygonGeoJson))__        SearchResponse searchResponse = client().prepareSearch("test").setQuery(matchAllQuery()).get()__        assertThat(searchResponse.getHits().getTotalHits(), equalTo(1L))__    };test,that,on,geo,shape,field,mapper,does,not,fail,the,entire,document;public,void,test,ignore,malformed,throws,exception,assert,acked,client,admin,indices,prepare,create,test,add,mapping,geometry,shape,type,true,get,ensure,green,string,polygon,geo,json,strings,to,string,xcontent,factory,json,builder,start,object,field,type,polygon,start,array,coordinates,start,array,start,array,value,176,0,value,15,0,end,array,start,array,value,177,0,value,10,0,end,array,start,array,value,177,0,value,10,0,end,array,start,array,value,176,0,value,15,0,end,array,start,array,value,177,0,value,15,0,end,array,start,array,value,172,0,value,0,0,end,array,start,array,value,176,0,value,15,0,end,array,end,array,end,array,end,object,index,random,true,client,prepare,index,test,geometry,0,set,source,shape,polygon,geo,json,search,response,search,response,client,prepare,search,test,set,query,match,all,query,get,assert,that,search,response,get,hits,get,total,hits,equal,to,1l
GeoShapeIntegrationIT -> public void testIgnoreMalformed() throws Exception;1527152864;Test that ignore_malformed on GeoShapeFieldMapper does not fail the entire document;public void testIgnoreMalformed() throws Exception {_        _        assertAcked(client().admin().indices().prepareCreate("test")_            .addMapping("geometry", "shape", "type=geo_shape,ignore_malformed=true").get())__        ensureGreen()___        _        String polygonGeoJson = Strings.toString(XContentFactory.jsonBuilder().startObject().field("type", "Polygon")_            .startArray("coordinates")_            .startArray()_            .startArray().value(176.0).value(15.0).endArray()_            .startArray().value(-177.0).value(10.0).endArray()_            .startArray().value(-177.0).value(-10.0).endArray()_            .startArray().value(176.0).value(-15.0).endArray()_            .startArray().value(-177.0).value(15.0).endArray()_            .startArray().value(172.0).value(0.0).endArray()_            .startArray().value(176.0).value(15.0).endArray()_            .endArray()_            .endArray()_            .endObject())___        indexRandom(true, client().prepareIndex("test", "geometry", "0").setSource("shape",_            polygonGeoJson))__        SearchResponse searchResponse = client().prepareSearch("test").setQuery(matchAllQuery()).get()__        assertThat(searchResponse.getHits().getTotalHits(), equalTo(1L))__    };test,that,on,geo,shape,field,mapper,does,not,fail,the,entire,document;public,void,test,ignore,malformed,throws,exception,assert,acked,client,admin,indices,prepare,create,test,add,mapping,geometry,shape,type,true,get,ensure,green,string,polygon,geo,json,strings,to,string,xcontent,factory,json,builder,start,object,field,type,polygon,start,array,coordinates,start,array,start,array,value,176,0,value,15,0,end,array,start,array,value,177,0,value,10,0,end,array,start,array,value,177,0,value,10,0,end,array,start,array,value,176,0,value,15,0,end,array,start,array,value,177,0,value,15,0,end,array,start,array,value,172,0,value,0,0,end,array,start,array,value,176,0,value,15,0,end,array,end,array,end,array,end,object,index,random,true,client,prepare,index,test,geometry,0,set,source,shape,polygon,geo,json,search,response,search,response,client,prepare,search,test,set,query,match,all,query,get,assert,that,search,response,get,hits,get,total,hits,equal,to,1l
GeoShapeIntegrationIT -> public void testIgnoreMalformed() throws Exception;1544035746;Test that ignore_malformed on GeoShapeFieldMapper does not fail the entire document;public void testIgnoreMalformed() throws Exception {_        _        assertAcked(client().admin().indices().prepareCreate("test")_            .addMapping("geometry", "shape", "type=geo_shape,ignore_malformed=true").get())__        ensureGreen()___        _        String polygonGeoJson = Strings.toString(XContentFactory.jsonBuilder().startObject().field("type", "Polygon")_            .startArray("coordinates")_            .startArray()_            .startArray().value(176.0).value(15.0).endArray()_            .startArray().value(-177.0).value(10.0).endArray()_            .startArray().value(-177.0).value(-10.0).endArray()_            .startArray().value(176.0).value(-15.0).endArray()_            .startArray().value(-177.0).value(15.0).endArray()_            .startArray().value(172.0).value(0.0).endArray()_            .startArray().value(176.0).value(15.0).endArray()_            .endArray()_            .endArray()_            .endObject())___        indexRandom(true, client().prepareIndex("test", "geometry", "0").setSource("shape",_            polygonGeoJson))__        SearchResponse searchResponse = client().prepareSearch("test").setQuery(matchAllQuery()).get()__        assertThat(searchResponse.getHits().getTotalHits().value, equalTo(1L))__    };test,that,on,geo,shape,field,mapper,does,not,fail,the,entire,document;public,void,test,ignore,malformed,throws,exception,assert,acked,client,admin,indices,prepare,create,test,add,mapping,geometry,shape,type,true,get,ensure,green,string,polygon,geo,json,strings,to,string,xcontent,factory,json,builder,start,object,field,type,polygon,start,array,coordinates,start,array,start,array,value,176,0,value,15,0,end,array,start,array,value,177,0,value,10,0,end,array,start,array,value,177,0,value,10,0,end,array,start,array,value,176,0,value,15,0,end,array,start,array,value,177,0,value,15,0,end,array,start,array,value,172,0,value,0,0,end,array,start,array,value,176,0,value,15,0,end,array,end,array,end,array,end,object,index,random,true,client,prepare,index,test,geometry,0,set,source,shape,polygon,geo,json,search,response,search,response,client,prepare,search,test,set,query,match,all,query,get,assert,that,search,response,get,hits,get,total,hits,value,equal,to,1l
GeoShapeIntegrationIT -> public void testIgnoreMalformed() throws Exception;1545079094;Test that ignore_malformed on GeoShapeFieldMapper does not fail the entire document;public void testIgnoreMalformed() throws Exception {_        _        assertAcked(client().admin().indices().prepareCreate("test")_            .addMapping("geometry", "shape", "type=geo_shape,ignore_malformed=true").get())__        ensureGreen()___        _        String polygonGeoJson = Strings.toString(XContentFactory.jsonBuilder().startObject().field("type", "Polygon")_            .startArray("coordinates")_            .startArray()_            .startArray().value(176.0).value(15.0).endArray()_            .startArray().value(-177.0).value(10.0).endArray()_            .startArray().value(-177.0).value(-10.0).endArray()_            .startArray().value(176.0).value(-15.0).endArray()_            .startArray().value(-177.0).value(15.0).endArray()_            .startArray().value(172.0).value(0.0).endArray()_            .startArray().value(176.0).value(15.0).endArray()_            .endArray()_            .endArray()_            .endObject())___        indexRandom(true, client().prepareIndex("test", "geometry", "0").setSource("shape",_            polygonGeoJson))__        SearchResponse searchResponse = client().prepareSearch("test").setQuery(matchAllQuery()).get()__        assertThat(searchResponse.getHits().getTotalHits().value, equalTo(1L))__    };test,that,on,geo,shape,field,mapper,does,not,fail,the,entire,document;public,void,test,ignore,malformed,throws,exception,assert,acked,client,admin,indices,prepare,create,test,add,mapping,geometry,shape,type,true,get,ensure,green,string,polygon,geo,json,strings,to,string,xcontent,factory,json,builder,start,object,field,type,polygon,start,array,coordinates,start,array,start,array,value,176,0,value,15,0,end,array,start,array,value,177,0,value,10,0,end,array,start,array,value,177,0,value,10,0,end,array,start,array,value,176,0,value,15,0,end,array,start,array,value,177,0,value,15,0,end,array,start,array,value,172,0,value,0,0,end,array,start,array,value,176,0,value,15,0,end,array,end,array,end,array,end,object,index,random,true,client,prepare,index,test,geometry,0,set,source,shape,polygon,geo,json,search,response,search,response,client,prepare,search,test,set,query,match,all,query,get,assert,that,search,response,get,hits,get,total,hits,value,equal,to,1l
GeoShapeIntegrationIT -> public void testIgnoreMalformed() throws Exception;1545098986;Test that ignore_malformed on GeoShapeFieldMapper does not fail the entire document;public void testIgnoreMalformed() throws Exception {_        _        assertAcked(client().admin().indices().prepareCreate("test")_            .addMapping("geometry", "shape", "type=geo_shape,ignore_malformed=true").get())__        ensureGreen()___        _        String polygonGeoJson = Strings.toString(XContentFactory.jsonBuilder().startObject().field("type", "Polygon")_            .startArray("coordinates")_            .startArray()_            .startArray().value(176.0).value(15.0).endArray()_            .startArray().value(-177.0).value(10.0).endArray()_            .startArray().value(-177.0).value(-10.0).endArray()_            .startArray().value(176.0).value(-15.0).endArray()_            .startArray().value(-177.0).value(15.0).endArray()_            .startArray().value(172.0).value(0.0).endArray()_            .startArray().value(176.0).value(15.0).endArray()_            .endArray()_            .endArray()_            .endObject())___        indexRandom(true, client().prepareIndex("test", "geometry", "0").setSource("shape",_            polygonGeoJson))__        SearchResponse searchResponse = client().prepareSearch("test").setQuery(matchAllQuery()).get()__        assertThat(searchResponse.getHits().getTotalHits().value, equalTo(1L))__    };test,that,on,geo,shape,field,mapper,does,not,fail,the,entire,document;public,void,test,ignore,malformed,throws,exception,assert,acked,client,admin,indices,prepare,create,test,add,mapping,geometry,shape,type,true,get,ensure,green,string,polygon,geo,json,strings,to,string,xcontent,factory,json,builder,start,object,field,type,polygon,start,array,coordinates,start,array,start,array,value,176,0,value,15,0,end,array,start,array,value,177,0,value,10,0,end,array,start,array,value,177,0,value,10,0,end,array,start,array,value,176,0,value,15,0,end,array,start,array,value,177,0,value,15,0,end,array,start,array,value,172,0,value,0,0,end,array,start,array,value,176,0,value,15,0,end,array,end,array,end,array,end,object,index,random,true,client,prepare,index,test,geometry,0,set,source,shape,polygon,geo,json,search,response,search,response,client,prepare,search,test,set,query,match,all,query,get,assert,that,search,response,get,hits,get,total,hits,value,equal,to,1l
GeoShapeIntegrationIT -> public void testIgnoreMalformed() throws Exception;1545148496;Test that ignore_malformed on GeoShapeFieldMapper does not fail the entire document;public void testIgnoreMalformed() throws Exception {_        _        assertAcked(client().admin().indices().prepareCreate("test")_            .addMapping("geometry", "shape", "type=geo_shape,ignore_malformed=true").get())__        ensureGreen()___        _        String polygonGeoJson = Strings.toString(XContentFactory.jsonBuilder().startObject().field("type", "Polygon")_            .startArray("coordinates")_            .startArray()_            .startArray().value(176.0).value(15.0).endArray()_            .startArray().value(-177.0).value(10.0).endArray()_            .startArray().value(-177.0).value(-10.0).endArray()_            .startArray().value(176.0).value(-15.0).endArray()_            .startArray().value(-177.0).value(15.0).endArray()_            .startArray().value(172.0).value(0.0).endArray()_            .startArray().value(176.0).value(15.0).endArray()_            .endArray()_            .endArray()_            .endObject())___        indexRandom(true, client().prepareIndex("test", "geometry", "0").setSource("shape",_            polygonGeoJson))__        SearchResponse searchResponse = client().prepareSearch("test").setQuery(matchAllQuery()).get()__        assertThat(searchResponse.getHits().getTotalHits().value, equalTo(1L))__    };test,that,on,geo,shape,field,mapper,does,not,fail,the,entire,document;public,void,test,ignore,malformed,throws,exception,assert,acked,client,admin,indices,prepare,create,test,add,mapping,geometry,shape,type,true,get,ensure,green,string,polygon,geo,json,strings,to,string,xcontent,factory,json,builder,start,object,field,type,polygon,start,array,coordinates,start,array,start,array,value,176,0,value,15,0,end,array,start,array,value,177,0,value,10,0,end,array,start,array,value,177,0,value,10,0,end,array,start,array,value,176,0,value,15,0,end,array,start,array,value,177,0,value,15,0,end,array,start,array,value,172,0,value,0,0,end,array,start,array,value,176,0,value,15,0,end,array,end,array,end,array,end,object,index,random,true,client,prepare,index,test,geometry,0,set,source,shape,polygon,geo,json,search,response,search,response,client,prepare,search,test,set,query,match,all,query,get,assert,that,search,response,get,hits,get,total,hits,value,equal,to,1l
GeoShapeIntegrationIT -> public void testIgnoreMalformed() throws Exception;1547195838;Test that ignore_malformed on GeoShapeFieldMapper does not fail the entire document;public void testIgnoreMalformed() throws Exception {_        _        assertAcked(client().admin().indices().prepareCreate("test")_            .addMapping("geometry", "shape", "type=geo_shape,ignore_malformed=true").get())__        ensureGreen()___        _        String polygonGeoJson = Strings.toString(XContentFactory.jsonBuilder().startObject().field("type", "Polygon")_            .startArray("coordinates")_            .startArray()_            .startArray().value(176.0).value(15.0).endArray()_            .startArray().value(-177.0).value(10.0).endArray()_            .startArray().value(-177.0).value(-10.0).endArray()_            .startArray().value(176.0).value(-15.0).endArray()_            .startArray().value(-177.0).value(15.0).endArray()_            .startArray().value(172.0).value(0.0).endArray()_            .startArray().value(176.0).value(15.0).endArray()_            .endArray()_            .endArray()_            .endObject())___        indexRandom(true, client().prepareIndex("test", "geometry", "0").setSource("shape",_            polygonGeoJson))__        SearchResponse searchResponse = client().prepareSearch("test").setQuery(matchAllQuery()).get()__        assertThat(searchResponse.getHits().getTotalHits().value, equalTo(1L))__    };test,that,on,geo,shape,field,mapper,does,not,fail,the,entire,document;public,void,test,ignore,malformed,throws,exception,assert,acked,client,admin,indices,prepare,create,test,add,mapping,geometry,shape,type,true,get,ensure,green,string,polygon,geo,json,strings,to,string,xcontent,factory,json,builder,start,object,field,type,polygon,start,array,coordinates,start,array,start,array,value,176,0,value,15,0,end,array,start,array,value,177,0,value,10,0,end,array,start,array,value,177,0,value,10,0,end,array,start,array,value,176,0,value,15,0,end,array,start,array,value,177,0,value,15,0,end,array,start,array,value,172,0,value,0,0,end,array,start,array,value,176,0,value,15,0,end,array,end,array,end,array,end,object,index,random,true,client,prepare,index,test,geometry,0,set,source,shape,polygon,geo,json,search,response,search,response,client,prepare,search,test,set,query,match,all,query,get,assert,that,search,response,get,hits,get,total,hits,value,equal,to,1l
GeoShapeIntegrationIT -> public void testOrientationPersistence() throws Exception;1524684173;Test that orientation parameter correctly persists across cluster restart;public void testOrientationPersistence() throws Exception {_        String idxName = "orientation"__        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject("shape")_                .startObject("properties").startObject("location")_                .field("type", "geo_shape")_                .field("orientation", "left")_                .endObject().endObject()_                .endObject().endObject())___        _        assertAcked(prepareCreate(idxName).addMapping("shape", mapping, XContentType.JSON))___        mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject("shape")_                .startObject("properties").startObject("location")_                .field("type", "geo_shape")_                .field("orientation", "right")_                .endObject().endObject()_                .endObject().endObject())___        assertAcked(prepareCreate(idxName+"2").addMapping("shape", mapping, XContentType.JSON))__        ensureGreen(idxName, idxName+"2")___        internalCluster().fullRestart()__        ensureGreen(idxName, idxName+"2")___        _        IndicesService indicesService = internalCluster().getInstance(IndicesService.class, findNodeName(idxName))__        IndexService indexService = indicesService.indexService(resolveIndex(idxName))__        MappedFieldType fieldType = indexService.mapperService().fullName("location")__        assertThat(fieldType, instanceOf(GeoShapeFieldMapper.GeoShapeFieldType.class))___        GeoShapeFieldMapper.GeoShapeFieldType gsfm = (GeoShapeFieldMapper.GeoShapeFieldType)fieldType__        ShapeBuilder.Orientation orientation = gsfm.orientation()__        assertThat(orientation, equalTo(ShapeBuilder.Orientation.CLOCKWISE))__        assertThat(orientation, equalTo(ShapeBuilder.Orientation.LEFT))__        assertThat(orientation, equalTo(ShapeBuilder.Orientation.CW))___        _        indicesService = internalCluster().getInstance(IndicesService.class, findNodeName(idxName+"2"))__        indexService = indicesService.indexService(resolveIndex((idxName+"2")))__        fieldType = indexService.mapperService().fullName("location")__        assertThat(fieldType, instanceOf(GeoShapeFieldMapper.GeoShapeFieldType.class))___        gsfm = (GeoShapeFieldMapper.GeoShapeFieldType)fieldType__        orientation = gsfm.orientation()__        assertThat(orientation, equalTo(ShapeBuilder.Orientation.COUNTER_CLOCKWISE))__        assertThat(orientation, equalTo(ShapeBuilder.Orientation.RIGHT))__        assertThat(orientation, equalTo(ShapeBuilder.Orientation.CCW))__    };test,that,orientation,parameter,correctly,persists,across,cluster,restart;public,void,test,orientation,persistence,throws,exception,string,idx,name,orientation,string,mapping,strings,to,string,xcontent,factory,json,builder,start,object,start,object,shape,start,object,properties,start,object,location,field,type,field,orientation,left,end,object,end,object,end,object,end,object,assert,acked,prepare,create,idx,name,add,mapping,shape,mapping,xcontent,type,json,mapping,strings,to,string,xcontent,factory,json,builder,start,object,start,object,shape,start,object,properties,start,object,location,field,type,field,orientation,right,end,object,end,object,end,object,end,object,assert,acked,prepare,create,idx,name,2,add,mapping,shape,mapping,xcontent,type,json,ensure,green,idx,name,idx,name,2,internal,cluster,full,restart,ensure,green,idx,name,idx,name,2,indices,service,indices,service,internal,cluster,get,instance,indices,service,class,find,node,name,idx,name,index,service,index,service,indices,service,index,service,resolve,index,idx,name,mapped,field,type,field,type,index,service,mapper,service,full,name,location,assert,that,field,type,instance,of,geo,shape,field,mapper,geo,shape,field,type,class,geo,shape,field,mapper,geo,shape,field,type,gsfm,geo,shape,field,mapper,geo,shape,field,type,field,type,shape,builder,orientation,orientation,gsfm,orientation,assert,that,orientation,equal,to,shape,builder,orientation,clockwise,assert,that,orientation,equal,to,shape,builder,orientation,left,assert,that,orientation,equal,to,shape,builder,orientation,cw,indices,service,internal,cluster,get,instance,indices,service,class,find,node,name,idx,name,2,index,service,indices,service,index,service,resolve,index,idx,name,2,field,type,index,service,mapper,service,full,name,location,assert,that,field,type,instance,of,geo,shape,field,mapper,geo,shape,field,type,class,gsfm,geo,shape,field,mapper,geo,shape,field,type,field,type,orientation,gsfm,orientation,assert,that,orientation,equal,to,shape,builder,orientation,assert,that,orientation,equal,to,shape,builder,orientation,right,assert,that,orientation,equal,to,shape,builder,orientation,ccw
GeoShapeIntegrationIT -> public void testOrientationPersistence() throws Exception;1527152864;Test that orientation parameter correctly persists across cluster restart;public void testOrientationPersistence() throws Exception {_        String idxName = "orientation"__        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject("shape")_                .startObject("properties").startObject("location")_                .field("type", "geo_shape")_                .field("orientation", "left")_                .endObject().endObject()_                .endObject().endObject())___        _        assertAcked(prepareCreate(idxName).addMapping("shape", mapping, XContentType.JSON))___        mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject("shape")_                .startObject("properties").startObject("location")_                .field("type", "geo_shape")_                .field("orientation", "right")_                .endObject().endObject()_                .endObject().endObject())___        assertAcked(prepareCreate(idxName+"2").addMapping("shape", mapping, XContentType.JSON))__        ensureGreen(idxName, idxName+"2")___        internalCluster().fullRestart()__        ensureGreen(idxName, idxName+"2")___        _        IndicesService indicesService = internalCluster().getInstance(IndicesService.class, findNodeName(idxName))__        IndexService indexService = indicesService.indexService(resolveIndex(idxName))__        MappedFieldType fieldType = indexService.mapperService().fullName("location")__        assertThat(fieldType, instanceOf(GeoShapeFieldMapper.GeoShapeFieldType.class))___        GeoShapeFieldMapper.GeoShapeFieldType gsfm = (GeoShapeFieldMapper.GeoShapeFieldType)fieldType__        ShapeBuilder.Orientation orientation = gsfm.orientation()__        assertThat(orientation, equalTo(ShapeBuilder.Orientation.CLOCKWISE))__        assertThat(orientation, equalTo(ShapeBuilder.Orientation.LEFT))__        assertThat(orientation, equalTo(ShapeBuilder.Orientation.CW))___        _        indicesService = internalCluster().getInstance(IndicesService.class, findNodeName(idxName+"2"))__        indexService = indicesService.indexService(resolveIndex((idxName+"2")))__        fieldType = indexService.mapperService().fullName("location")__        assertThat(fieldType, instanceOf(GeoShapeFieldMapper.GeoShapeFieldType.class))___        gsfm = (GeoShapeFieldMapper.GeoShapeFieldType)fieldType__        orientation = gsfm.orientation()__        assertThat(orientation, equalTo(ShapeBuilder.Orientation.COUNTER_CLOCKWISE))__        assertThat(orientation, equalTo(ShapeBuilder.Orientation.RIGHT))__        assertThat(orientation, equalTo(ShapeBuilder.Orientation.CCW))__    };test,that,orientation,parameter,correctly,persists,across,cluster,restart;public,void,test,orientation,persistence,throws,exception,string,idx,name,orientation,string,mapping,strings,to,string,xcontent,factory,json,builder,start,object,start,object,shape,start,object,properties,start,object,location,field,type,field,orientation,left,end,object,end,object,end,object,end,object,assert,acked,prepare,create,idx,name,add,mapping,shape,mapping,xcontent,type,json,mapping,strings,to,string,xcontent,factory,json,builder,start,object,start,object,shape,start,object,properties,start,object,location,field,type,field,orientation,right,end,object,end,object,end,object,end,object,assert,acked,prepare,create,idx,name,2,add,mapping,shape,mapping,xcontent,type,json,ensure,green,idx,name,idx,name,2,internal,cluster,full,restart,ensure,green,idx,name,idx,name,2,indices,service,indices,service,internal,cluster,get,instance,indices,service,class,find,node,name,idx,name,index,service,index,service,indices,service,index,service,resolve,index,idx,name,mapped,field,type,field,type,index,service,mapper,service,full,name,location,assert,that,field,type,instance,of,geo,shape,field,mapper,geo,shape,field,type,class,geo,shape,field,mapper,geo,shape,field,type,gsfm,geo,shape,field,mapper,geo,shape,field,type,field,type,shape,builder,orientation,orientation,gsfm,orientation,assert,that,orientation,equal,to,shape,builder,orientation,clockwise,assert,that,orientation,equal,to,shape,builder,orientation,left,assert,that,orientation,equal,to,shape,builder,orientation,cw,indices,service,internal,cluster,get,instance,indices,service,class,find,node,name,idx,name,2,index,service,indices,service,index,service,resolve,index,idx,name,2,field,type,index,service,mapper,service,full,name,location,assert,that,field,type,instance,of,geo,shape,field,mapper,geo,shape,field,type,class,gsfm,geo,shape,field,mapper,geo,shape,field,type,field,type,orientation,gsfm,orientation,assert,that,orientation,equal,to,shape,builder,orientation,assert,that,orientation,equal,to,shape,builder,orientation,right,assert,that,orientation,equal,to,shape,builder,orientation,ccw
GeoShapeIntegrationIT -> public void testOrientationPersistence() throws Exception;1544035746;Test that orientation parameter correctly persists across cluster restart;public void testOrientationPersistence() throws Exception {_        String idxName = "orientation"__        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject("shape")_                .startObject("properties").startObject("location")_                .field("type", "geo_shape")_                .field("orientation", "left")_                .endObject().endObject()_                .endObject().endObject())___        _        assertAcked(prepareCreate(idxName).addMapping("shape", mapping, XContentType.JSON))___        mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject("shape")_                .startObject("properties").startObject("location")_                .field("type", "geo_shape")_                .field("orientation", "right")_                .endObject().endObject()_                .endObject().endObject())___        assertAcked(prepareCreate(idxName+"2").addMapping("shape", mapping, XContentType.JSON))__        ensureGreen(idxName, idxName+"2")___        internalCluster().fullRestart()__        ensureGreen(idxName, idxName+"2")___        _        IndicesService indicesService = internalCluster().getInstance(IndicesService.class, findNodeName(idxName))__        IndexService indexService = indicesService.indexService(resolveIndex(idxName))__        MappedFieldType fieldType = indexService.mapperService().fullName("location")__        assertThat(fieldType, instanceOf(GeoShapeFieldMapper.GeoShapeFieldType.class))___        GeoShapeFieldMapper.GeoShapeFieldType gsfm = (GeoShapeFieldMapper.GeoShapeFieldType)fieldType__        ShapeBuilder.Orientation orientation = gsfm.orientation()__        assertThat(orientation, equalTo(ShapeBuilder.Orientation.CLOCKWISE))__        assertThat(orientation, equalTo(ShapeBuilder.Orientation.LEFT))__        assertThat(orientation, equalTo(ShapeBuilder.Orientation.CW))___        _        indicesService = internalCluster().getInstance(IndicesService.class, findNodeName(idxName+"2"))__        indexService = indicesService.indexService(resolveIndex((idxName+"2")))__        fieldType = indexService.mapperService().fullName("location")__        assertThat(fieldType, instanceOf(GeoShapeFieldMapper.GeoShapeFieldType.class))___        gsfm = (GeoShapeFieldMapper.GeoShapeFieldType)fieldType__        orientation = gsfm.orientation()__        assertThat(orientation, equalTo(ShapeBuilder.Orientation.COUNTER_CLOCKWISE))__        assertThat(orientation, equalTo(ShapeBuilder.Orientation.RIGHT))__        assertThat(orientation, equalTo(ShapeBuilder.Orientation.CCW))__    };test,that,orientation,parameter,correctly,persists,across,cluster,restart;public,void,test,orientation,persistence,throws,exception,string,idx,name,orientation,string,mapping,strings,to,string,xcontent,factory,json,builder,start,object,start,object,shape,start,object,properties,start,object,location,field,type,field,orientation,left,end,object,end,object,end,object,end,object,assert,acked,prepare,create,idx,name,add,mapping,shape,mapping,xcontent,type,json,mapping,strings,to,string,xcontent,factory,json,builder,start,object,start,object,shape,start,object,properties,start,object,location,field,type,field,orientation,right,end,object,end,object,end,object,end,object,assert,acked,prepare,create,idx,name,2,add,mapping,shape,mapping,xcontent,type,json,ensure,green,idx,name,idx,name,2,internal,cluster,full,restart,ensure,green,idx,name,idx,name,2,indices,service,indices,service,internal,cluster,get,instance,indices,service,class,find,node,name,idx,name,index,service,index,service,indices,service,index,service,resolve,index,idx,name,mapped,field,type,field,type,index,service,mapper,service,full,name,location,assert,that,field,type,instance,of,geo,shape,field,mapper,geo,shape,field,type,class,geo,shape,field,mapper,geo,shape,field,type,gsfm,geo,shape,field,mapper,geo,shape,field,type,field,type,shape,builder,orientation,orientation,gsfm,orientation,assert,that,orientation,equal,to,shape,builder,orientation,clockwise,assert,that,orientation,equal,to,shape,builder,orientation,left,assert,that,orientation,equal,to,shape,builder,orientation,cw,indices,service,internal,cluster,get,instance,indices,service,class,find,node,name,idx,name,2,index,service,indices,service,index,service,resolve,index,idx,name,2,field,type,index,service,mapper,service,full,name,location,assert,that,field,type,instance,of,geo,shape,field,mapper,geo,shape,field,type,class,gsfm,geo,shape,field,mapper,geo,shape,field,type,field,type,orientation,gsfm,orientation,assert,that,orientation,equal,to,shape,builder,orientation,assert,that,orientation,equal,to,shape,builder,orientation,right,assert,that,orientation,equal,to,shape,builder,orientation,ccw
GeoShapeIntegrationIT -> public void testOrientationPersistence() throws Exception;1545079094;Test that orientation parameter correctly persists across cluster restart;public void testOrientationPersistence() throws Exception {_        String idxName = "orientation"__        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject("shape")_            .startObject("properties").startObject("location")_            .field("type", "geo_shape")_            .field("orientation", "left")_            .endObject().endObject()_            .endObject().endObject())___        _        assertAcked(prepareCreate(idxName).addMapping("shape", mapping, XContentType.JSON))___        mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject("shape")_            .startObject("properties").startObject("location")_            .field("type", "geo_shape")_            .field("orientation", "right")_            .endObject().endObject()_            .endObject().endObject())___        assertAcked(prepareCreate(idxName+"2").addMapping("shape", mapping, XContentType.JSON))__        ensureGreen(idxName, idxName+"2")___        internalCluster().fullRestart()__        ensureGreen(idxName, idxName+"2")___        _        IndicesService indicesService = internalCluster().getInstance(IndicesService.class, findNodeName(idxName))__        IndexService indexService = indicesService.indexService(resolveIndex(idxName))__        MappedFieldType fieldType = indexService.mapperService().fullName("location")__        assertThat(fieldType, instanceOf(GeoShapeFieldMapper.GeoShapeFieldType.class))___        GeoShapeFieldMapper.GeoShapeFieldType gsfm = (GeoShapeFieldMapper.GeoShapeFieldType)fieldType__        ShapeBuilder.Orientation orientation = gsfm.orientation()__        assertThat(orientation, equalTo(ShapeBuilder.Orientation.CLOCKWISE))__        assertThat(orientation, equalTo(ShapeBuilder.Orientation.LEFT))__        assertThat(orientation, equalTo(ShapeBuilder.Orientation.CW))___        _        indicesService = internalCluster().getInstance(IndicesService.class, findNodeName(idxName+"2"))__        indexService = indicesService.indexService(resolveIndex((idxName+"2")))__        fieldType = indexService.mapperService().fullName("location")__        assertThat(fieldType, instanceOf(GeoShapeFieldMapper.GeoShapeFieldType.class))___        gsfm = (GeoShapeFieldMapper.GeoShapeFieldType)fieldType__        orientation = gsfm.orientation()__        assertThat(orientation, equalTo(ShapeBuilder.Orientation.COUNTER_CLOCKWISE))__        assertThat(orientation, equalTo(ShapeBuilder.Orientation.RIGHT))__        assertThat(orientation, equalTo(ShapeBuilder.Orientation.CCW))__    };test,that,orientation,parameter,correctly,persists,across,cluster,restart;public,void,test,orientation,persistence,throws,exception,string,idx,name,orientation,string,mapping,strings,to,string,xcontent,factory,json,builder,start,object,start,object,shape,start,object,properties,start,object,location,field,type,field,orientation,left,end,object,end,object,end,object,end,object,assert,acked,prepare,create,idx,name,add,mapping,shape,mapping,xcontent,type,json,mapping,strings,to,string,xcontent,factory,json,builder,start,object,start,object,shape,start,object,properties,start,object,location,field,type,field,orientation,right,end,object,end,object,end,object,end,object,assert,acked,prepare,create,idx,name,2,add,mapping,shape,mapping,xcontent,type,json,ensure,green,idx,name,idx,name,2,internal,cluster,full,restart,ensure,green,idx,name,idx,name,2,indices,service,indices,service,internal,cluster,get,instance,indices,service,class,find,node,name,idx,name,index,service,index,service,indices,service,index,service,resolve,index,idx,name,mapped,field,type,field,type,index,service,mapper,service,full,name,location,assert,that,field,type,instance,of,geo,shape,field,mapper,geo,shape,field,type,class,geo,shape,field,mapper,geo,shape,field,type,gsfm,geo,shape,field,mapper,geo,shape,field,type,field,type,shape,builder,orientation,orientation,gsfm,orientation,assert,that,orientation,equal,to,shape,builder,orientation,clockwise,assert,that,orientation,equal,to,shape,builder,orientation,left,assert,that,orientation,equal,to,shape,builder,orientation,cw,indices,service,internal,cluster,get,instance,indices,service,class,find,node,name,idx,name,2,index,service,indices,service,index,service,resolve,index,idx,name,2,field,type,index,service,mapper,service,full,name,location,assert,that,field,type,instance,of,geo,shape,field,mapper,geo,shape,field,type,class,gsfm,geo,shape,field,mapper,geo,shape,field,type,field,type,orientation,gsfm,orientation,assert,that,orientation,equal,to,shape,builder,orientation,assert,that,orientation,equal,to,shape,builder,orientation,right,assert,that,orientation,equal,to,shape,builder,orientation,ccw
GeoShapeIntegrationIT -> public void testOrientationPersistence() throws Exception;1545098986;Test that orientation parameter correctly persists across cluster restart;public void testOrientationPersistence() throws Exception {_        String idxName = "orientation"__        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject("shape")_                .startObject("properties").startObject("location")_                .field("type", "geo_shape")_                .field("orientation", "left")_                .endObject().endObject()_                .endObject().endObject())___        _        assertAcked(prepareCreate(idxName).addMapping("shape", mapping, XContentType.JSON))___        mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject("shape")_                .startObject("properties").startObject("location")_                .field("type", "geo_shape")_                .field("orientation", "right")_                .endObject().endObject()_                .endObject().endObject())___        assertAcked(prepareCreate(idxName+"2").addMapping("shape", mapping, XContentType.JSON))__        ensureGreen(idxName, idxName+"2")___        internalCluster().fullRestart()__        ensureGreen(idxName, idxName+"2")___        _        IndicesService indicesService = internalCluster().getInstance(IndicesService.class, findNodeName(idxName))__        IndexService indexService = indicesService.indexService(resolveIndex(idxName))__        MappedFieldType fieldType = indexService.mapperService().fullName("location")__        assertThat(fieldType, instanceOf(GeoShapeFieldMapper.GeoShapeFieldType.class))___        GeoShapeFieldMapper.GeoShapeFieldType gsfm = (GeoShapeFieldMapper.GeoShapeFieldType)fieldType__        ShapeBuilder.Orientation orientation = gsfm.orientation()__        assertThat(orientation, equalTo(ShapeBuilder.Orientation.CLOCKWISE))__        assertThat(orientation, equalTo(ShapeBuilder.Orientation.LEFT))__        assertThat(orientation, equalTo(ShapeBuilder.Orientation.CW))___        _        indicesService = internalCluster().getInstance(IndicesService.class, findNodeName(idxName+"2"))__        indexService = indicesService.indexService(resolveIndex((idxName+"2")))__        fieldType = indexService.mapperService().fullName("location")__        assertThat(fieldType, instanceOf(GeoShapeFieldMapper.GeoShapeFieldType.class))___        gsfm = (GeoShapeFieldMapper.GeoShapeFieldType)fieldType__        orientation = gsfm.orientation()__        assertThat(orientation, equalTo(ShapeBuilder.Orientation.COUNTER_CLOCKWISE))__        assertThat(orientation, equalTo(ShapeBuilder.Orientation.RIGHT))__        assertThat(orientation, equalTo(ShapeBuilder.Orientation.CCW))__    };test,that,orientation,parameter,correctly,persists,across,cluster,restart;public,void,test,orientation,persistence,throws,exception,string,idx,name,orientation,string,mapping,strings,to,string,xcontent,factory,json,builder,start,object,start,object,shape,start,object,properties,start,object,location,field,type,field,orientation,left,end,object,end,object,end,object,end,object,assert,acked,prepare,create,idx,name,add,mapping,shape,mapping,xcontent,type,json,mapping,strings,to,string,xcontent,factory,json,builder,start,object,start,object,shape,start,object,properties,start,object,location,field,type,field,orientation,right,end,object,end,object,end,object,end,object,assert,acked,prepare,create,idx,name,2,add,mapping,shape,mapping,xcontent,type,json,ensure,green,idx,name,idx,name,2,internal,cluster,full,restart,ensure,green,idx,name,idx,name,2,indices,service,indices,service,internal,cluster,get,instance,indices,service,class,find,node,name,idx,name,index,service,index,service,indices,service,index,service,resolve,index,idx,name,mapped,field,type,field,type,index,service,mapper,service,full,name,location,assert,that,field,type,instance,of,geo,shape,field,mapper,geo,shape,field,type,class,geo,shape,field,mapper,geo,shape,field,type,gsfm,geo,shape,field,mapper,geo,shape,field,type,field,type,shape,builder,orientation,orientation,gsfm,orientation,assert,that,orientation,equal,to,shape,builder,orientation,clockwise,assert,that,orientation,equal,to,shape,builder,orientation,left,assert,that,orientation,equal,to,shape,builder,orientation,cw,indices,service,internal,cluster,get,instance,indices,service,class,find,node,name,idx,name,2,index,service,indices,service,index,service,resolve,index,idx,name,2,field,type,index,service,mapper,service,full,name,location,assert,that,field,type,instance,of,geo,shape,field,mapper,geo,shape,field,type,class,gsfm,geo,shape,field,mapper,geo,shape,field,type,field,type,orientation,gsfm,orientation,assert,that,orientation,equal,to,shape,builder,orientation,assert,that,orientation,equal,to,shape,builder,orientation,right,assert,that,orientation,equal,to,shape,builder,orientation,ccw
GeoShapeIntegrationIT -> public void testOrientationPersistence() throws Exception;1545148496;Test that orientation parameter correctly persists across cluster restart;public void testOrientationPersistence() throws Exception {_        String idxName = "orientation"__        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject("shape")_            .startObject("properties").startObject("location")_            .field("type", "geo_shape")_            .field("orientation", "left")_            .endObject().endObject()_            .endObject().endObject())___        _        assertAcked(prepareCreate(idxName).addMapping("shape", mapping, XContentType.JSON))___        mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject("shape")_            .startObject("properties").startObject("location")_            .field("type", "geo_shape")_            .field("orientation", "right")_            .endObject().endObject()_            .endObject().endObject())___        assertAcked(prepareCreate(idxName+"2").addMapping("shape", mapping, XContentType.JSON))__        ensureGreen(idxName, idxName+"2")___        internalCluster().fullRestart()__        ensureGreen(idxName, idxName+"2")___        _        IndicesService indicesService = internalCluster().getInstance(IndicesService.class, findNodeName(idxName))__        IndexService indexService = indicesService.indexService(resolveIndex(idxName))__        MappedFieldType fieldType = indexService.mapperService().fullName("location")__        assertThat(fieldType, instanceOf(GeoShapeFieldMapper.GeoShapeFieldType.class))___        GeoShapeFieldMapper.GeoShapeFieldType gsfm = (GeoShapeFieldMapper.GeoShapeFieldType)fieldType__        ShapeBuilder.Orientation orientation = gsfm.orientation()__        assertThat(orientation, equalTo(ShapeBuilder.Orientation.CLOCKWISE))__        assertThat(orientation, equalTo(ShapeBuilder.Orientation.LEFT))__        assertThat(orientation, equalTo(ShapeBuilder.Orientation.CW))___        _        indicesService = internalCluster().getInstance(IndicesService.class, findNodeName(idxName+"2"))__        indexService = indicesService.indexService(resolveIndex((idxName+"2")))__        fieldType = indexService.mapperService().fullName("location")__        assertThat(fieldType, instanceOf(GeoShapeFieldMapper.GeoShapeFieldType.class))___        gsfm = (GeoShapeFieldMapper.GeoShapeFieldType)fieldType__        orientation = gsfm.orientation()__        assertThat(orientation, equalTo(ShapeBuilder.Orientation.COUNTER_CLOCKWISE))__        assertThat(orientation, equalTo(ShapeBuilder.Orientation.RIGHT))__        assertThat(orientation, equalTo(ShapeBuilder.Orientation.CCW))__    };test,that,orientation,parameter,correctly,persists,across,cluster,restart;public,void,test,orientation,persistence,throws,exception,string,idx,name,orientation,string,mapping,strings,to,string,xcontent,factory,json,builder,start,object,start,object,shape,start,object,properties,start,object,location,field,type,field,orientation,left,end,object,end,object,end,object,end,object,assert,acked,prepare,create,idx,name,add,mapping,shape,mapping,xcontent,type,json,mapping,strings,to,string,xcontent,factory,json,builder,start,object,start,object,shape,start,object,properties,start,object,location,field,type,field,orientation,right,end,object,end,object,end,object,end,object,assert,acked,prepare,create,idx,name,2,add,mapping,shape,mapping,xcontent,type,json,ensure,green,idx,name,idx,name,2,internal,cluster,full,restart,ensure,green,idx,name,idx,name,2,indices,service,indices,service,internal,cluster,get,instance,indices,service,class,find,node,name,idx,name,index,service,index,service,indices,service,index,service,resolve,index,idx,name,mapped,field,type,field,type,index,service,mapper,service,full,name,location,assert,that,field,type,instance,of,geo,shape,field,mapper,geo,shape,field,type,class,geo,shape,field,mapper,geo,shape,field,type,gsfm,geo,shape,field,mapper,geo,shape,field,type,field,type,shape,builder,orientation,orientation,gsfm,orientation,assert,that,orientation,equal,to,shape,builder,orientation,clockwise,assert,that,orientation,equal,to,shape,builder,orientation,left,assert,that,orientation,equal,to,shape,builder,orientation,cw,indices,service,internal,cluster,get,instance,indices,service,class,find,node,name,idx,name,2,index,service,indices,service,index,service,resolve,index,idx,name,2,field,type,index,service,mapper,service,full,name,location,assert,that,field,type,instance,of,geo,shape,field,mapper,geo,shape,field,type,class,gsfm,geo,shape,field,mapper,geo,shape,field,type,field,type,orientation,gsfm,orientation,assert,that,orientation,equal,to,shape,builder,orientation,assert,that,orientation,equal,to,shape,builder,orientation,right,assert,that,orientation,equal,to,shape,builder,orientation,ccw
GeoShapeIntegrationIT -> public void testOrientationPersistence() throws Exception;1547195838;Test that orientation parameter correctly persists across cluster restart;public void testOrientationPersistence() throws Exception {_        String idxName = "orientation"__        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject("shape")_            .startObject("properties").startObject("location")_            .field("type", "geo_shape")_            .field("orientation", "left")_            .endObject().endObject()_            .endObject().endObject())___        _        assertAcked(prepareCreate(idxName).addMapping("shape", mapping, XContentType.JSON))___        mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject("shape")_            .startObject("properties").startObject("location")_            .field("type", "geo_shape")_            .field("orientation", "right")_            .endObject().endObject()_            .endObject().endObject())___        assertAcked(prepareCreate(idxName+"2").addMapping("shape", mapping, XContentType.JSON))__        ensureGreen(idxName, idxName+"2")___        internalCluster().fullRestart()__        ensureGreen(idxName, idxName+"2")___        _        IndicesService indicesService = internalCluster().getInstance(IndicesService.class, findNodeName(idxName))__        IndexService indexService = indicesService.indexService(resolveIndex(idxName))__        MappedFieldType fieldType = indexService.mapperService().fullName("location")__        assertThat(fieldType, instanceOf(GeoShapeFieldMapper.GeoShapeFieldType.class))___        GeoShapeFieldMapper.GeoShapeFieldType gsfm = (GeoShapeFieldMapper.GeoShapeFieldType)fieldType__        ShapeBuilder.Orientation orientation = gsfm.orientation()__        assertThat(orientation, equalTo(ShapeBuilder.Orientation.CLOCKWISE))__        assertThat(orientation, equalTo(ShapeBuilder.Orientation.LEFT))__        assertThat(orientation, equalTo(ShapeBuilder.Orientation.CW))___        _        indicesService = internalCluster().getInstance(IndicesService.class, findNodeName(idxName+"2"))__        indexService = indicesService.indexService(resolveIndex((idxName+"2")))__        fieldType = indexService.mapperService().fullName("location")__        assertThat(fieldType, instanceOf(GeoShapeFieldMapper.GeoShapeFieldType.class))___        gsfm = (GeoShapeFieldMapper.GeoShapeFieldType)fieldType__        orientation = gsfm.orientation()__        assertThat(orientation, equalTo(ShapeBuilder.Orientation.COUNTER_CLOCKWISE))__        assertThat(orientation, equalTo(ShapeBuilder.Orientation.RIGHT))__        assertThat(orientation, equalTo(ShapeBuilder.Orientation.CCW))__    };test,that,orientation,parameter,correctly,persists,across,cluster,restart;public,void,test,orientation,persistence,throws,exception,string,idx,name,orientation,string,mapping,strings,to,string,xcontent,factory,json,builder,start,object,start,object,shape,start,object,properties,start,object,location,field,type,field,orientation,left,end,object,end,object,end,object,end,object,assert,acked,prepare,create,idx,name,add,mapping,shape,mapping,xcontent,type,json,mapping,strings,to,string,xcontent,factory,json,builder,start,object,start,object,shape,start,object,properties,start,object,location,field,type,field,orientation,right,end,object,end,object,end,object,end,object,assert,acked,prepare,create,idx,name,2,add,mapping,shape,mapping,xcontent,type,json,ensure,green,idx,name,idx,name,2,internal,cluster,full,restart,ensure,green,idx,name,idx,name,2,indices,service,indices,service,internal,cluster,get,instance,indices,service,class,find,node,name,idx,name,index,service,index,service,indices,service,index,service,resolve,index,idx,name,mapped,field,type,field,type,index,service,mapper,service,full,name,location,assert,that,field,type,instance,of,geo,shape,field,mapper,geo,shape,field,type,class,geo,shape,field,mapper,geo,shape,field,type,gsfm,geo,shape,field,mapper,geo,shape,field,type,field,type,shape,builder,orientation,orientation,gsfm,orientation,assert,that,orientation,equal,to,shape,builder,orientation,clockwise,assert,that,orientation,equal,to,shape,builder,orientation,left,assert,that,orientation,equal,to,shape,builder,orientation,cw,indices,service,internal,cluster,get,instance,indices,service,class,find,node,name,idx,name,2,index,service,indices,service,index,service,resolve,index,idx,name,2,field,type,index,service,mapper,service,full,name,location,assert,that,field,type,instance,of,geo,shape,field,mapper,geo,shape,field,type,class,gsfm,geo,shape,field,mapper,geo,shape,field,type,field,type,orientation,gsfm,orientation,assert,that,orientation,equal,to,shape,builder,orientation,assert,that,orientation,equal,to,shape,builder,orientation,right,assert,that,orientation,equal,to,shape,builder,orientation,ccw
GeoShapeIntegrationIT -> public void testIndexShapeRouting() throws Exception;1527152864;Test that the indexed shape routing can be provided if it is required;public void testIndexShapeRouting() throws Exception {_        String mapping = "{\n" +_            "    \"_routing\": {\n" +_            "      \"required\": true\n" +_            "    },\n" +_            "    \"properties\": {\n" +_            "      \"shape\": {\n" +_            "        \"type\": \"geo_shape\"\n" +_            "      }\n" +_            "    }\n" +_            "  }"____        _        assertAcked(client().admin().indices().prepareCreate("test").addMapping("doc", mapping, XContentType.JSON).get())__        ensureGreen()___        String source = "{\n" +_            "    \"shape\" : {\n" +_            "        \"type\" : \"circle\",\n" +_            "        \"coordinates\" : [-45.0, 45.0],\n" +_            "        \"radius\" : \"100m\"\n" +_            "    }\n" +_            "}"___        indexRandom(true, client().prepareIndex("test", "doc", "0").setSource(source, XContentType.JSON).setRouting("ABC"))___        SearchResponse searchResponse = client().prepareSearch("test").setQuery(_            geoShapeQuery("shape", "0", "doc").indexedShapeIndex("test").indexedShapeRouting("ABC")_        ).get()___        assertThat(searchResponse.getHits().getTotalHits(), equalTo(1L))__    };test,that,the,indexed,shape,routing,can,be,provided,if,it,is,required;public,void,test,index,shape,routing,throws,exception,string,mapping,n,n,required,true,n,n,properties,n,shape,n,type,n,n,n,assert,acked,client,admin,indices,prepare,create,test,add,mapping,doc,mapping,xcontent,type,json,get,ensure,green,string,source,n,shape,n,type,circle,n,coordinates,45,0,45,0,n,radius,100m,n,n,index,random,true,client,prepare,index,test,doc,0,set,source,source,xcontent,type,json,set,routing,abc,search,response,search,response,client,prepare,search,test,set,query,geo,shape,query,shape,0,doc,indexed,shape,index,test,indexed,shape,routing,abc,get,assert,that,search,response,get,hits,get,total,hits,equal,to,1l
GeoShapeIntegrationIT -> public void testIndexShapeRouting() throws Exception;1544035746;Test that the indexed shape routing can be provided if it is required;public void testIndexShapeRouting() throws Exception {_        String mapping = "{\n" +_            "    \"_routing\": {\n" +_            "      \"required\": true\n" +_            "    },\n" +_            "    \"properties\": {\n" +_            "      \"shape\": {\n" +_            "        \"type\": \"geo_shape\"\n" +_            "      }\n" +_            "    }\n" +_            "  }"____        _        assertAcked(client().admin().indices().prepareCreate("test").addMapping("doc", mapping, XContentType.JSON).get())__        ensureGreen()___        String source = "{\n" +_            "    \"shape\" : {\n" +_            "        \"type\" : \"circle\",\n" +_            "        \"coordinates\" : [-45.0, 45.0],\n" +_            "        \"radius\" : \"100m\"\n" +_            "    }\n" +_            "}"___        indexRandom(true, client().prepareIndex("test", "doc", "0").setSource(source, XContentType.JSON).setRouting("ABC"))___        SearchResponse searchResponse = client().prepareSearch("test").setQuery(_            geoShapeQuery("shape", "0", "doc").indexedShapeIndex("test").indexedShapeRouting("ABC")_        ).get()___        assertThat(searchResponse.getHits().getTotalHits().value, equalTo(1L))__    };test,that,the,indexed,shape,routing,can,be,provided,if,it,is,required;public,void,test,index,shape,routing,throws,exception,string,mapping,n,n,required,true,n,n,properties,n,shape,n,type,n,n,n,assert,acked,client,admin,indices,prepare,create,test,add,mapping,doc,mapping,xcontent,type,json,get,ensure,green,string,source,n,shape,n,type,circle,n,coordinates,45,0,45,0,n,radius,100m,n,n,index,random,true,client,prepare,index,test,doc,0,set,source,source,xcontent,type,json,set,routing,abc,search,response,search,response,client,prepare,search,test,set,query,geo,shape,query,shape,0,doc,indexed,shape,index,test,indexed,shape,routing,abc,get,assert,that,search,response,get,hits,get,total,hits,value,equal,to,1l
GeoShapeIntegrationIT -> public void testIndexShapeRouting() throws Exception;1545079094;Test that the indexed shape routing can be provided if it is required;public void testIndexShapeRouting() throws Exception {_        String mapping = "{\n" +_            "    \"_routing\": {\n" +_            "      \"required\": true\n" +_            "    },\n" +_            "    \"properties\": {\n" +_            "      \"shape\": {\n" +_            "        \"type\": \"geo_shape\"\n" +_            "      }\n" +_            "    }\n" +_            "  }"____        _        assertAcked(client().admin().indices().prepareCreate("test").addMapping("doc", mapping, XContentType.JSON).get())__        ensureGreen()___        String source = "{\n" +_            "    \"shape\" : {\n" +_            "        \"type\" : \"bbox\",\n" +_            "        \"coordinates\" : [[-45.0, 45.0], [45.0, -45.0]]\n" +_            "    }\n" +_            "}"___        indexRandom(true, client().prepareIndex("test", "doc", "0").setSource(source, XContentType.JSON).setRouting("ABC"))___        SearchResponse searchResponse = client().prepareSearch("test").setQuery(_            geoShapeQuery("shape", "0", "doc").indexedShapeIndex("test").indexedShapeRouting("ABC")_        ).get()___        assertThat(searchResponse.getHits().getTotalHits().value, equalTo(1L))__    };test,that,the,indexed,shape,routing,can,be,provided,if,it,is,required;public,void,test,index,shape,routing,throws,exception,string,mapping,n,n,required,true,n,n,properties,n,shape,n,type,n,n,n,assert,acked,client,admin,indices,prepare,create,test,add,mapping,doc,mapping,xcontent,type,json,get,ensure,green,string,source,n,shape,n,type,bbox,n,coordinates,45,0,45,0,45,0,45,0,n,n,index,random,true,client,prepare,index,test,doc,0,set,source,source,xcontent,type,json,set,routing,abc,search,response,search,response,client,prepare,search,test,set,query,geo,shape,query,shape,0,doc,indexed,shape,index,test,indexed,shape,routing,abc,get,assert,that,search,response,get,hits,get,total,hits,value,equal,to,1l
GeoShapeIntegrationIT -> public void testIndexShapeRouting() throws Exception;1545098986;Test that the indexed shape routing can be provided if it is required;public void testIndexShapeRouting() throws Exception {_        String mapping = "{\n" +_            "    \"_routing\": {\n" +_            "      \"required\": true\n" +_            "    },\n" +_            "    \"properties\": {\n" +_            "      \"shape\": {\n" +_            "        \"type\": \"geo_shape\"\n" +_            "      }\n" +_            "    }\n" +_            "  }"____        _        assertAcked(client().admin().indices().prepareCreate("test").addMapping("doc", mapping, XContentType.JSON).get())__        ensureGreen()___        String source = "{\n" +_            "    \"shape\" : {\n" +_            "        \"type\" : \"circle\",\n" +_            "        \"coordinates\" : [-45.0, 45.0],\n" +_            "        \"radius\" : \"100m\"\n" +_            "    }\n" +_            "}"___        indexRandom(true, client().prepareIndex("test", "doc", "0").setSource(source, XContentType.JSON).setRouting("ABC"))___        SearchResponse searchResponse = client().prepareSearch("test").setQuery(_            geoShapeQuery("shape", "0", "doc").indexedShapeIndex("test").indexedShapeRouting("ABC")_        ).get()___        assertThat(searchResponse.getHits().getTotalHits().value, equalTo(1L))__    };test,that,the,indexed,shape,routing,can,be,provided,if,it,is,required;public,void,test,index,shape,routing,throws,exception,string,mapping,n,n,required,true,n,n,properties,n,shape,n,type,n,n,n,assert,acked,client,admin,indices,prepare,create,test,add,mapping,doc,mapping,xcontent,type,json,get,ensure,green,string,source,n,shape,n,type,circle,n,coordinates,45,0,45,0,n,radius,100m,n,n,index,random,true,client,prepare,index,test,doc,0,set,source,source,xcontent,type,json,set,routing,abc,search,response,search,response,client,prepare,search,test,set,query,geo,shape,query,shape,0,doc,indexed,shape,index,test,indexed,shape,routing,abc,get,assert,that,search,response,get,hits,get,total,hits,value,equal,to,1l
GeoShapeIntegrationIT -> public void testIndexShapeRouting() throws Exception;1545148496;Test that the indexed shape routing can be provided if it is required;public void testIndexShapeRouting() throws Exception {_        String mapping = "{\n" +_            "    \"_routing\": {\n" +_            "      \"required\": true\n" +_            "    },\n" +_            "    \"properties\": {\n" +_            "      \"shape\": {\n" +_            "        \"type\": \"geo_shape\"\n" +_            "      }\n" +_            "    }\n" +_            "  }"____        _        assertAcked(client().admin().indices().prepareCreate("test").addMapping("doc", mapping, XContentType.JSON).get())__        ensureGreen()___        String source = "{\n" +_            "    \"shape\" : {\n" +_            "        \"type\" : \"bbox\",\n" +_            "        \"coordinates\" : [[-45.0, 45.0], [45.0, -45.0]]\n" +_            "    }\n" +_            "}"___        indexRandom(true, client().prepareIndex("test", "doc", "0").setSource(source, XContentType.JSON).setRouting("ABC"))___        SearchResponse searchResponse = client().prepareSearch("test").setQuery(_            geoShapeQuery("shape", "0", "doc").indexedShapeIndex("test").indexedShapeRouting("ABC")_        ).get()___        assertThat(searchResponse.getHits().getTotalHits().value, equalTo(1L))__    };test,that,the,indexed,shape,routing,can,be,provided,if,it,is,required;public,void,test,index,shape,routing,throws,exception,string,mapping,n,n,required,true,n,n,properties,n,shape,n,type,n,n,n,assert,acked,client,admin,indices,prepare,create,test,add,mapping,doc,mapping,xcontent,type,json,get,ensure,green,string,source,n,shape,n,type,bbox,n,coordinates,45,0,45,0,45,0,45,0,n,n,index,random,true,client,prepare,index,test,doc,0,set,source,source,xcontent,type,json,set,routing,abc,search,response,search,response,client,prepare,search,test,set,query,geo,shape,query,shape,0,doc,indexed,shape,index,test,indexed,shape,routing,abc,get,assert,that,search,response,get,hits,get,total,hits,value,equal,to,1l
GeoShapeIntegrationIT -> public void testIndexShapeRouting() throws Exception;1547195838;Test that the indexed shape routing can be provided if it is required;public void testIndexShapeRouting() throws Exception {_        String mapping = "{\n" +_            "    \"_routing\": {\n" +_            "      \"required\": true\n" +_            "    },\n" +_            "    \"properties\": {\n" +_            "      \"shape\": {\n" +_            "        \"type\": \"geo_shape\"\n" +_            "      }\n" +_            "    }\n" +_            "  }"____        _        assertAcked(client().admin().indices().prepareCreate("test").addMapping("doc", mapping, XContentType.JSON).get())__        ensureGreen()___        String source = "{\n" +_            "    \"shape\" : {\n" +_            "        \"type\" : \"bbox\",\n" +_            "        \"coordinates\" : [[-45.0, 45.0], [45.0, -45.0]]\n" +_            "    }\n" +_            "}"___        indexRandom(true, client().prepareIndex("test", "doc", "0").setSource(source, XContentType.JSON).setRouting("ABC"))___        SearchResponse searchResponse = client().prepareSearch("test").setQuery(_            geoShapeQuery("shape", "0", "doc").indexedShapeIndex("test").indexedShapeRouting("ABC")_        ).get()___        assertThat(searchResponse.getHits().getTotalHits().value, equalTo(1L))__    };test,that,the,indexed,shape,routing,can,be,provided,if,it,is,required;public,void,test,index,shape,routing,throws,exception,string,mapping,n,n,required,true,n,n,properties,n,shape,n,type,n,n,n,assert,acked,client,admin,indices,prepare,create,test,add,mapping,doc,mapping,xcontent,type,json,get,ensure,green,string,source,n,shape,n,type,bbox,n,coordinates,45,0,45,0,45,0,45,0,n,n,index,random,true,client,prepare,index,test,doc,0,set,source,source,xcontent,type,json,set,routing,abc,search,response,search,response,client,prepare,search,test,set,query,geo,shape,query,shape,0,doc,indexed,shape,index,test,indexed,shape,routing,abc,get,assert,that,search,response,get,hits,get,total,hits,value,equal,to,1l
