commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Before public void createLocalNode() {     localNode = new DiscoveryNode("abc", buildNewFakeTransportAddress(), emptyMap(), emptySet(), Version.CURRENT). }
false;public;0;4;;public void testShardCanBeDeletedNoShardRouting() throws Exception {     IndexShardRoutingTable.Builder routingTable = new IndexShardRoutingTable.Builder(new ShardId("test", "_na_", 1)).     assertFalse(IndicesStore.shardCanBeDeleted(localNode.getId(), routingTable.build())). }
false;public;0;28;;public void testShardCanBeDeletedNoShardStarted() throws Exception {     int numShards = randomIntBetween(1, 7).     int numReplicas = randomInt(2).     IndexShardRoutingTable.Builder routingTable = new IndexShardRoutingTable.Builder(new ShardId("test", "_na_", 1)).     for (int i = 0. i < numShards. i++) {         int unStartedShard = randomInt(numReplicas).         for (int j = 0. j <= numReplicas. j++) {             ShardRoutingState state.             if (j == unStartedShard) {                 state = randomFrom(NOT_STARTED_STATES).             } else {                 state = randomFrom(ShardRoutingState.values()).             }             UnassignedInfo unassignedInfo = null.             if (state == ShardRoutingState.UNASSIGNED) {                 unassignedInfo = new UnassignedInfo(UnassignedInfo.Reason.INDEX_CREATED, null).             }             String currentNodeId = state == ShardRoutingState.UNASSIGNED ? null : randomAlphaOfLength(10).             String relocatingNodeId = state == ShardRoutingState.RELOCATING ? randomAlphaOfLength(10) : null.             routingTable.addShard(TestShardRouting.newShardRouting("test", i, currentNodeId, relocatingNodeId, j == 0, state, unassignedInfo)).         }     }     assertFalse(IndicesStore.shardCanBeDeleted(localNode.getId(), routingTable.build())). }
false;public;0;21;;public void testShardCanBeDeletedShardExistsLocally() throws Exception {     int numShards = randomIntBetween(1, 7).     int numReplicas = randomInt(2).     IndexShardRoutingTable.Builder routingTable = new IndexShardRoutingTable.Builder(new ShardId("test", "_na_", 1)).     int localShardId = randomInt(numShards - 1).     for (int i = 0. i < numShards. i++) {         int localNodeIndex = randomInt(numReplicas).         boolean primaryOnLocalNode = i == localShardId && localNodeIndex == numReplicas.         routingTable.addShard(TestShardRouting.newShardRouting("test", i, primaryOnLocalNode ? localNode.getId() : randomAlphaOfLength(10), true, ShardRoutingState.STARTED)).         for (int j = 0. j < numReplicas. j++) {             boolean replicaOnLocalNode = i == localShardId && localNodeIndex == j.             routingTable.addShard(TestShardRouting.newShardRouting("test", i, replicaOnLocalNode ? localNode.getId() : randomAlphaOfLength(10), false, ShardRoutingState.STARTED)).         }     }     // Shard exists locally, can't delete shard     assertFalse(IndicesStore.shardCanBeDeleted(localNode.getId(), routingTable.build())). }
