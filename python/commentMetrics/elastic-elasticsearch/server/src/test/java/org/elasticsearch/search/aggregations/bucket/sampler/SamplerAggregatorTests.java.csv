# id;timestamp;commentText;codeText;commentWords;codeWords
SamplerAggregatorTests -> public void testSampler() throws IOException;1524684173;Uses the sampler aggregation to find the minimum value of a field out of the top 3 scoring documents in a search.;public void testSampler() throws IOException {_        TextFieldType textFieldType = new TextFieldType()__        textFieldType.setIndexAnalyzer(new NamedAnalyzer("foo", AnalyzerScope.GLOBAL, new StandardAnalyzer()))__        MappedFieldType numericFieldType = new NumberFieldMapper.NumberFieldType(NumberFieldMapper.NumberType.LONG)__        numericFieldType.setName("int")___        IndexWriterConfig indexWriterConfig = newIndexWriterConfig()__        indexWriterConfig.setMaxBufferedDocs(100)__        indexWriterConfig.setRAMBufferSizeMB(100)_ _        try (Directory dir = newDirectory()__                IndexWriter w = new IndexWriter(dir, indexWriterConfig)) {_            for (long value : new long[] {7, 3, -10, -6, 5, 50}) {_                Document doc = new Document()__                StringBuilder text = new StringBuilder()__                for (int i = 0_ i < value_ i++) {_                    text.append("good ")__                }_                doc.add(new Field("text", text.toString(), textFieldType))__                doc.add(new SortedNumericDocValuesField("int", value))__                w.addDocument(doc)__            }__            SamplerAggregationBuilder aggBuilder = new SamplerAggregationBuilder("sampler")_                    .shardSize(3)_                    .subAggregation(new MinAggregationBuilder("min")_                            .field("int"))__            try (IndexReader reader = DirectoryReader.open(w)) {_                assertEquals("test expects a single segment", 1, reader.leaves().size())__                IndexSearcher searcher = new IndexSearcher(reader)__                Sampler sampler = searchAndReduce(searcher, new TermQuery(new Term("text", "good")), aggBuilder, textFieldType,_                        numericFieldType)__                Min min = sampler.getAggregations().get("min")__                assertEquals(5.0, min.getValue(), 0)__            }_        }_    };uses,the,sampler,aggregation,to,find,the,minimum,value,of,a,field,out,of,the,top,3,scoring,documents,in,a,search;public,void,test,sampler,throws,ioexception,text,field,type,text,field,type,new,text,field,type,text,field,type,set,index,analyzer,new,named,analyzer,foo,analyzer,scope,global,new,standard,analyzer,mapped,field,type,numeric,field,type,new,number,field,mapper,number,field,type,number,field,mapper,number,type,long,numeric,field,type,set,name,int,index,writer,config,index,writer,config,new,index,writer,config,index,writer,config,set,max,buffered,docs,100,index,writer,config,set,rambuffer,size,mb,100,try,directory,dir,new,directory,index,writer,w,new,index,writer,dir,index,writer,config,for,long,value,new,long,7,3,10,6,5,50,document,doc,new,document,string,builder,text,new,string,builder,for,int,i,0,i,value,i,text,append,good,doc,add,new,field,text,text,to,string,text,field,type,doc,add,new,sorted,numeric,doc,values,field,int,value,w,add,document,doc,sampler,aggregation,builder,agg,builder,new,sampler,aggregation,builder,sampler,shard,size,3,sub,aggregation,new,min,aggregation,builder,min,field,int,try,index,reader,reader,directory,reader,open,w,assert,equals,test,expects,a,single,segment,1,reader,leaves,size,index,searcher,searcher,new,index,searcher,reader,sampler,sampler,search,and,reduce,searcher,new,term,query,new,term,text,good,agg,builder,text,field,type,numeric,field,type,min,min,sampler,get,aggregations,get,min,assert,equals,5,0,min,get,value,0
SamplerAggregatorTests -> public void testSampler() throws IOException;1528762805;Uses the sampler aggregation to find the minimum value of a field out of the top 3 scoring documents in a search.;public void testSampler() throws IOException {_        TextFieldType textFieldType = new TextFieldType()__        textFieldType.setIndexAnalyzer(new NamedAnalyzer("foo", AnalyzerScope.GLOBAL, new StandardAnalyzer()))__        MappedFieldType numericFieldType = new NumberFieldMapper.NumberFieldType(NumberFieldMapper.NumberType.LONG)__        numericFieldType.setName("int")___        IndexWriterConfig indexWriterConfig = newIndexWriterConfig()__        indexWriterConfig.setMaxBufferedDocs(100)__        indexWriterConfig.setRAMBufferSizeMB(100)_ _        try (Directory dir = newDirectory()__                IndexWriter w = new IndexWriter(dir, indexWriterConfig)) {_            for (long value : new long[] {7, 3, -10, -6, 5, 50}) {_                Document doc = new Document()__                StringBuilder text = new StringBuilder()__                for (int i = 0_ i < value_ i++) {_                    text.append("good ")__                }_                doc.add(new Field("text", text.toString(), textFieldType))__                doc.add(new SortedNumericDocValuesField("int", value))__                w.addDocument(doc)__            }__            SamplerAggregationBuilder aggBuilder = new SamplerAggregationBuilder("sampler")_                    .shardSize(3)_                    .subAggregation(new MinAggregationBuilder("min")_                            .field("int"))__            try (IndexReader reader = DirectoryReader.open(w)) {_                assertEquals("test expects a single segment", 1, reader.leaves().size())__                IndexSearcher searcher = new IndexSearcher(reader)__                Sampler sampler = searchAndReduce(searcher, new TermQuery(new Term("text", "good")), aggBuilder, textFieldType,_                        numericFieldType)__                Min min = sampler.getAggregations().get("min")__                assertEquals(5.0, min.getValue(), 0)__            }_        }_    };uses,the,sampler,aggregation,to,find,the,minimum,value,of,a,field,out,of,the,top,3,scoring,documents,in,a,search;public,void,test,sampler,throws,ioexception,text,field,type,text,field,type,new,text,field,type,text,field,type,set,index,analyzer,new,named,analyzer,foo,analyzer,scope,global,new,standard,analyzer,mapped,field,type,numeric,field,type,new,number,field,mapper,number,field,type,number,field,mapper,number,type,long,numeric,field,type,set,name,int,index,writer,config,index,writer,config,new,index,writer,config,index,writer,config,set,max,buffered,docs,100,index,writer,config,set,rambuffer,size,mb,100,try,directory,dir,new,directory,index,writer,w,new,index,writer,dir,index,writer,config,for,long,value,new,long,7,3,10,6,5,50,document,doc,new,document,string,builder,text,new,string,builder,for,int,i,0,i,value,i,text,append,good,doc,add,new,field,text,text,to,string,text,field,type,doc,add,new,sorted,numeric,doc,values,field,int,value,w,add,document,doc,sampler,aggregation,builder,agg,builder,new,sampler,aggregation,builder,sampler,shard,size,3,sub,aggregation,new,min,aggregation,builder,min,field,int,try,index,reader,reader,directory,reader,open,w,assert,equals,test,expects,a,single,segment,1,reader,leaves,size,index,searcher,searcher,new,index,searcher,reader,sampler,sampler,search,and,reduce,searcher,new,term,query,new,term,text,good,agg,builder,text,field,type,numeric,field,type,min,min,sampler,get,aggregations,get,min,assert,equals,5,0,min,get,value,0
SamplerAggregatorTests -> public void testSampler() throws IOException;1536314350;Uses the sampler aggregation to find the minimum value of a field out of the top 3 scoring documents in a search.;public void testSampler() throws IOException {_        TextFieldType textFieldType = new TextFieldType()__        textFieldType.setIndexAnalyzer(new NamedAnalyzer("foo", AnalyzerScope.GLOBAL, new StandardAnalyzer()))__        MappedFieldType numericFieldType = new NumberFieldMapper.NumberFieldType(NumberFieldMapper.NumberType.LONG)__        numericFieldType.setName("int")___        IndexWriterConfig indexWriterConfig = newIndexWriterConfig()__        indexWriterConfig.setMaxBufferedDocs(100)__        indexWriterConfig.setRAMBufferSizeMB(100)_ _        try (Directory dir = newDirectory()__                IndexWriter w = new IndexWriter(dir, indexWriterConfig)) {_            for (long value : new long[] {7, 3, -10, -6, 5, 50}) {_                Document doc = new Document()__                StringBuilder text = new StringBuilder()__                for (int i = 0_ i < value_ i++) {_                    text.append("good ")__                }_                doc.add(new Field("text", text.toString(), textFieldType))__                doc.add(new SortedNumericDocValuesField("int", value))__                w.addDocument(doc)__            }__            SamplerAggregationBuilder aggBuilder = new SamplerAggregationBuilder("sampler")_                    .shardSize(3)_                    .subAggregation(new MinAggregationBuilder("min")_                            .field("int"))__            try (IndexReader reader = DirectoryReader.open(w)) {_                assertEquals("test expects a single segment", 1, reader.leaves().size())__                IndexSearcher searcher = new IndexSearcher(reader)__                Sampler sampler = searchAndReduce(searcher, new TermQuery(new Term("text", "good")), aggBuilder, textFieldType,_                        numericFieldType)__                Min min = sampler.getAggregations().get("min")__                assertEquals(5.0, min.getValue(), 0)__            }_        }_    };uses,the,sampler,aggregation,to,find,the,minimum,value,of,a,field,out,of,the,top,3,scoring,documents,in,a,search;public,void,test,sampler,throws,ioexception,text,field,type,text,field,type,new,text,field,type,text,field,type,set,index,analyzer,new,named,analyzer,foo,analyzer,scope,global,new,standard,analyzer,mapped,field,type,numeric,field,type,new,number,field,mapper,number,field,type,number,field,mapper,number,type,long,numeric,field,type,set,name,int,index,writer,config,index,writer,config,new,index,writer,config,index,writer,config,set,max,buffered,docs,100,index,writer,config,set,rambuffer,size,mb,100,try,directory,dir,new,directory,index,writer,w,new,index,writer,dir,index,writer,config,for,long,value,new,long,7,3,10,6,5,50,document,doc,new,document,string,builder,text,new,string,builder,for,int,i,0,i,value,i,text,append,good,doc,add,new,field,text,text,to,string,text,field,type,doc,add,new,sorted,numeric,doc,values,field,int,value,w,add,document,doc,sampler,aggregation,builder,agg,builder,new,sampler,aggregation,builder,sampler,shard,size,3,sub,aggregation,new,min,aggregation,builder,min,field,int,try,index,reader,reader,directory,reader,open,w,assert,equals,test,expects,a,single,segment,1,reader,leaves,size,index,searcher,searcher,new,index,searcher,reader,sampler,sampler,search,and,reduce,searcher,new,term,query,new,term,text,good,agg,builder,text,field,type,numeric,field,type,min,min,sampler,get,aggregations,get,min,assert,equals,5,0,min,get,value,0
SamplerAggregatorTests -> public void testSampler() throws IOException;1548178735;Uses the sampler aggregation to find the minimum value of a field out of the top 3 scoring documents in a search.;public void testSampler() throws IOException {_        TextFieldType textFieldType = new TextFieldType()__        textFieldType.setIndexAnalyzer(new NamedAnalyzer("foo", AnalyzerScope.GLOBAL, new StandardAnalyzer()))__        MappedFieldType numericFieldType = new NumberFieldMapper.NumberFieldType(NumberFieldMapper.NumberType.LONG)__        numericFieldType.setName("int")___        IndexWriterConfig indexWriterConfig = newIndexWriterConfig()__        indexWriterConfig.setMaxBufferedDocs(100)__        indexWriterConfig.setRAMBufferSizeMB(100)_ _        try (Directory dir = newDirectory()__                IndexWriter w = new IndexWriter(dir, indexWriterConfig)) {_            for (long value : new long[] {7, 3, -10, -6, 5, 50}) {_                Document doc = new Document()__                StringBuilder text = new StringBuilder()__                for (int i = 0_ i < value_ i++) {_                    text.append("good ")__                }_                doc.add(new Field("text", text.toString(), textFieldType))__                doc.add(new SortedNumericDocValuesField("int", value))__                w.addDocument(doc)__            }__            SamplerAggregationBuilder aggBuilder = new SamplerAggregationBuilder("sampler")_                    .shardSize(3)_                    .subAggregation(new MinAggregationBuilder("min")_                            .field("int"))__            try (IndexReader reader = DirectoryReader.open(w)) {_                assertEquals("test expects a single segment", 1, reader.leaves().size())__                IndexSearcher searcher = new IndexSearcher(reader)__                InternalSampler sampler = searchAndReduce(searcher, new TermQuery(new Term("text", "good")), aggBuilder, textFieldType,_                        numericFieldType)__                Min min = sampler.getAggregations().get("min")__                assertEquals(5.0, min.getValue(), 0)__                assertTrue(AggregationInspectionHelper.hasValue(sampler))__            }_        }_    };uses,the,sampler,aggregation,to,find,the,minimum,value,of,a,field,out,of,the,top,3,scoring,documents,in,a,search;public,void,test,sampler,throws,ioexception,text,field,type,text,field,type,new,text,field,type,text,field,type,set,index,analyzer,new,named,analyzer,foo,analyzer,scope,global,new,standard,analyzer,mapped,field,type,numeric,field,type,new,number,field,mapper,number,field,type,number,field,mapper,number,type,long,numeric,field,type,set,name,int,index,writer,config,index,writer,config,new,index,writer,config,index,writer,config,set,max,buffered,docs,100,index,writer,config,set,rambuffer,size,mb,100,try,directory,dir,new,directory,index,writer,w,new,index,writer,dir,index,writer,config,for,long,value,new,long,7,3,10,6,5,50,document,doc,new,document,string,builder,text,new,string,builder,for,int,i,0,i,value,i,text,append,good,doc,add,new,field,text,text,to,string,text,field,type,doc,add,new,sorted,numeric,doc,values,field,int,value,w,add,document,doc,sampler,aggregation,builder,agg,builder,new,sampler,aggregation,builder,sampler,shard,size,3,sub,aggregation,new,min,aggregation,builder,min,field,int,try,index,reader,reader,directory,reader,open,w,assert,equals,test,expects,a,single,segment,1,reader,leaves,size,index,searcher,searcher,new,index,searcher,reader,internal,sampler,sampler,search,and,reduce,searcher,new,term,query,new,term,text,good,agg,builder,text,field,type,numeric,field,type,min,min,sampler,get,aggregations,get,min,assert,equals,5,0,min,get,value,0,assert,true,aggregation,inspection,helper,has,value,sampler
