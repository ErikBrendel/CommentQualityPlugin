commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;public void testEnsureExists() throws IOException {     Path p = createTempDir().     // directory exists     Path exists = p.resolve("exists").     Files.createDirectory(exists).     Security.ensureDirectoryExists(exists).     Files.createTempFile(exists, null, null). }
false;public;0;8;;public void testEnsureNotExists() throws IOException {     Path p = createTempDir().     // directory does not exist: create it     Path notExists = p.resolve("notexists").     Security.ensureDirectoryExists(notExists).     Files.createTempFile(notExists, null, null). }
false;public;0;11;;public void testEnsureRegularFile() throws IOException {     Path p = createTempDir().     // regular file     Path regularFile = p.resolve("regular").     Files.createFile(regularFile).     try {         Security.ensureDirectoryExists(regularFile).         fail("didn't get expected exception").     } catch (IOException expected) {     } }
true;public;0;7;/**  * can't execute processes  */ ;/**  * can't execute processes  */ public void testProcessExecution() throws Exception {     assumeTrue("test requires security manager", System.getSecurityManager() != null).     try {         Runtime.getRuntime().exec("ls").         fail("didn't get expected exception").     } catch (SecurityException expected) {     } }
