# id;timestamp;commentText;codeText;commentWords;codeWords
FieldSortIT -> public void testNestedSort() throws IOException, InterruptedException, ExecutionException;1524684173;Test case for issue 6150: https://github.com/elastic/elasticsearch/issues/6150;public void testNestedSort() throws IOException, InterruptedException, ExecutionException {_        assertAcked(prepareCreate("test")_                .addMapping("type",_                        XContentFactory.jsonBuilder()_                                .startObject()_                                    .startObject("type")_                                        .startObject("properties")_                                            .startObject("nested")_                                                .field("type", "nested")_                                                .startObject("properties")_                                                    .startObject("foo")_                                                        .field("type", "text")_                                                        .field("fielddata", true)_                                                        .startObject("fields")_                                                            .startObject("sub")_                                                                .field("type", "keyword")_                                                            .endObject()_                                                        .endObject()_                                                    .endObject()_                                                .endObject()_                                            .endObject()_                                        .endObject()_                                    .endObject()_                                .endObject()))__        ensureGreen()___        client().prepareIndex("test", "type", "1").setSource(jsonBuilder().startObject()_                .startObject("nested")_                    .field("foo", "bar bar")_                .endObject()_                .endObject()).execute().actionGet()__        refresh()___        _        SearchResponse searchResponse = client().prepareSearch()_                .setQuery(matchAllQuery())_                .addSort(SortBuilders.fieldSort("nested.foo").setNestedPath("nested").order(SortOrder.DESC))_                .execute().actionGet()__        assertNoFailures(searchResponse)__        SearchHit[] hits = searchResponse.getHits().getHits()__        for (int i = 0_ i < hits.length_ ++i) {_            assertThat(hits[i].getSortValues().length, is(1))__            assertThat(hits[i].getSortValues()[0], is("bar"))__        }___        _        searchResponse = client().prepareSearch()_                .setQuery(matchAllQuery())_                .addSort(SortBuilders.fieldSort("nested.foo.sub").setNestedPath("nested").order(SortOrder.DESC))_                .execute().actionGet()__        assertNoFailures(searchResponse)__        hits = searchResponse.getHits().getHits()__        for (int i = 0_ i < hits.length_ ++i) {_            assertThat(hits[i].getSortValues().length, is(1))__            assertThat(hits[i].getSortValues()[0], is("bar bar"))__        }_    };test,case,for,issue,6150,https,github,com,elastic,elasticsearch,issues,6150;public,void,test,nested,sort,throws,ioexception,interrupted,exception,execution,exception,assert,acked,prepare,create,test,add,mapping,type,xcontent,factory,json,builder,start,object,start,object,type,start,object,properties,start,object,nested,field,type,nested,start,object,properties,start,object,foo,field,type,text,field,fielddata,true,start,object,fields,start,object,sub,field,type,keyword,end,object,end,object,end,object,end,object,end,object,end,object,end,object,end,object,ensure,green,client,prepare,index,test,type,1,set,source,json,builder,start,object,start,object,nested,field,foo,bar,bar,end,object,end,object,execute,action,get,refresh,search,response,search,response,client,prepare,search,set,query,match,all,query,add,sort,sort,builders,field,sort,nested,foo,set,nested,path,nested,order,sort,order,desc,execute,action,get,assert,no,failures,search,response,search,hit,hits,search,response,get,hits,get,hits,for,int,i,0,i,hits,length,i,assert,that,hits,i,get,sort,values,length,is,1,assert,that,hits,i,get,sort,values,0,is,bar,search,response,client,prepare,search,set,query,match,all,query,add,sort,sort,builders,field,sort,nested,foo,sub,set,nested,path,nested,order,sort,order,desc,execute,action,get,assert,no,failures,search,response,hits,search,response,get,hits,get,hits,for,int,i,0,i,hits,length,i,assert,that,hits,i,get,sort,values,length,is,1,assert,that,hits,i,get,sort,values,0,is,bar,bar
FieldSortIT -> public void testNestedSort() throws IOException, InterruptedException, ExecutionException;1528762805;Test case for issue 6150: https://github.com/elastic/elasticsearch/issues/6150;public void testNestedSort() throws IOException, InterruptedException, ExecutionException {_        assertAcked(prepareCreate("test")_                .addMapping("type",_                        XContentFactory.jsonBuilder()_                                .startObject()_                                    .startObject("type")_                                        .startObject("properties")_                                            .startObject("nested")_                                                .field("type", "nested")_                                                .startObject("properties")_                                                    .startObject("foo")_                                                        .field("type", "text")_                                                        .field("fielddata", true)_                                                        .startObject("fields")_                                                            .startObject("sub")_                                                                .field("type", "keyword")_                                                            .endObject()_                                                        .endObject()_                                                    .endObject()_                                                .endObject()_                                            .endObject()_                                        .endObject()_                                    .endObject()_                                .endObject()))__        ensureGreen()___        client().prepareIndex("test", "type", "1").setSource(jsonBuilder().startObject()_                .startObject("nested")_                    .field("foo", "bar bar")_                .endObject()_                .endObject()).execute().actionGet()__        refresh()___        _        SearchResponse searchResponse = client().prepareSearch()_                .setQuery(matchAllQuery())_                .addSort(SortBuilders.fieldSort("nested.foo").setNestedPath("nested").order(SortOrder.DESC))_                .execute().actionGet()__        assertNoFailures(searchResponse)__        SearchHit[] hits = searchResponse.getHits().getHits()__        for (int i = 0_ i < hits.length_ ++i) {_            assertThat(hits[i].getSortValues().length, is(1))__            assertThat(hits[i].getSortValues()[0], is("bar"))__        }___        _        searchResponse = client().prepareSearch()_                .setQuery(matchAllQuery())_                .addSort(SortBuilders.fieldSort("nested.foo.sub").setNestedPath("nested").order(SortOrder.DESC))_                .execute().actionGet()__        assertNoFailures(searchResponse)__        hits = searchResponse.getHits().getHits()__        for (int i = 0_ i < hits.length_ ++i) {_            assertThat(hits[i].getSortValues().length, is(1))__            assertThat(hits[i].getSortValues()[0], is("bar bar"))__        }_    };test,case,for,issue,6150,https,github,com,elastic,elasticsearch,issues,6150;public,void,test,nested,sort,throws,ioexception,interrupted,exception,execution,exception,assert,acked,prepare,create,test,add,mapping,type,xcontent,factory,json,builder,start,object,start,object,type,start,object,properties,start,object,nested,field,type,nested,start,object,properties,start,object,foo,field,type,text,field,fielddata,true,start,object,fields,start,object,sub,field,type,keyword,end,object,end,object,end,object,end,object,end,object,end,object,end,object,end,object,ensure,green,client,prepare,index,test,type,1,set,source,json,builder,start,object,start,object,nested,field,foo,bar,bar,end,object,end,object,execute,action,get,refresh,search,response,search,response,client,prepare,search,set,query,match,all,query,add,sort,sort,builders,field,sort,nested,foo,set,nested,path,nested,order,sort,order,desc,execute,action,get,assert,no,failures,search,response,search,hit,hits,search,response,get,hits,get,hits,for,int,i,0,i,hits,length,i,assert,that,hits,i,get,sort,values,length,is,1,assert,that,hits,i,get,sort,values,0,is,bar,search,response,client,prepare,search,set,query,match,all,query,add,sort,sort,builders,field,sort,nested,foo,sub,set,nested,path,nested,order,sort,order,desc,execute,action,get,assert,no,failures,search,response,hits,search,response,get,hits,get,hits,for,int,i,0,i,hits,length,i,assert,that,hits,i,get,sort,values,length,is,1,assert,that,hits,i,get,sort,values,0,is,bar,bar
FieldSortIT -> public void testNestedSort() throws IOException, InterruptedException, ExecutionException;1531937412;Test case for issue 6150: https://github.com/elastic/elasticsearch/issues/6150;public void testNestedSort() throws IOException, InterruptedException, ExecutionException {_        assertAcked(prepareCreate("test")_                .addMapping("type",_                        XContentFactory.jsonBuilder()_                                .startObject()_                                    .startObject("type")_                                        .startObject("properties")_                                            .startObject("nested")_                                                .field("type", "nested")_                                                .startObject("properties")_                                                    .startObject("foo")_                                                        .field("type", "text")_                                                        .field("fielddata", true)_                                                        .startObject("fields")_                                                            .startObject("sub")_                                                                .field("type", "keyword")_                                                            .endObject()_                                                        .endObject()_                                                    .endObject()_                                                .endObject()_                                            .endObject()_                                        .endObject()_                                    .endObject()_                                .endObject()))__        ensureGreen()___        client().prepareIndex("test", "type", "1").setSource(jsonBuilder().startObject()_                .startObject("nested")_                    .field("foo", "bar bar")_                .endObject()_                .endObject()).execute().actionGet()__        refresh()___        _        SearchResponse searchResponse = client().prepareSearch()_                .setQuery(matchAllQuery())_                .addSort(SortBuilders.fieldSort("nested.foo").setNestedPath("nested").order(SortOrder.DESC))_                .execute().actionGet()__        assertNoFailures(searchResponse)__        SearchHit[] hits = searchResponse.getHits().getHits()__        for (int i = 0_ i < hits.length_ ++i) {_            assertThat(hits[i].getSortValues().length, is(1))__            assertThat(hits[i].getSortValues()[0], is("bar"))__        }___        _        searchResponse = client().prepareSearch()_                .setQuery(matchAllQuery())_                .addSort(SortBuilders.fieldSort("nested.foo.sub").setNestedPath("nested").order(SortOrder.DESC))_                .execute().actionGet()__        assertNoFailures(searchResponse)__        hits = searchResponse.getHits().getHits()__        for (int i = 0_ i < hits.length_ ++i) {_            assertThat(hits[i].getSortValues().length, is(1))__            assertThat(hits[i].getSortValues()[0], is("bar bar"))__        }_    };test,case,for,issue,6150,https,github,com,elastic,elasticsearch,issues,6150;public,void,test,nested,sort,throws,ioexception,interrupted,exception,execution,exception,assert,acked,prepare,create,test,add,mapping,type,xcontent,factory,json,builder,start,object,start,object,type,start,object,properties,start,object,nested,field,type,nested,start,object,properties,start,object,foo,field,type,text,field,fielddata,true,start,object,fields,start,object,sub,field,type,keyword,end,object,end,object,end,object,end,object,end,object,end,object,end,object,end,object,ensure,green,client,prepare,index,test,type,1,set,source,json,builder,start,object,start,object,nested,field,foo,bar,bar,end,object,end,object,execute,action,get,refresh,search,response,search,response,client,prepare,search,set,query,match,all,query,add,sort,sort,builders,field,sort,nested,foo,set,nested,path,nested,order,sort,order,desc,execute,action,get,assert,no,failures,search,response,search,hit,hits,search,response,get,hits,get,hits,for,int,i,0,i,hits,length,i,assert,that,hits,i,get,sort,values,length,is,1,assert,that,hits,i,get,sort,values,0,is,bar,search,response,client,prepare,search,set,query,match,all,query,add,sort,sort,builders,field,sort,nested,foo,sub,set,nested,path,nested,order,sort,order,desc,execute,action,get,assert,no,failures,search,response,hits,search,response,get,hits,get,hits,for,int,i,0,i,hits,length,i,assert,that,hits,i,get,sort,values,length,is,1,assert,that,hits,i,get,sort,values,0,is,bar,bar
FieldSortIT -> public void testNestedSort() throws IOException, InterruptedException, ExecutionException;1532353780;Test case for issue 6150: https://github.com/elastic/elasticsearch/issues/6150;public void testNestedSort() throws IOException, InterruptedException, ExecutionException {_        assertAcked(prepareCreate("test")_                .addMapping("type",_                        XContentFactory.jsonBuilder()_                                .startObject()_                                    .startObject("type")_                                        .startObject("properties")_                                            .startObject("nested")_                                                .field("type", "nested")_                                                .startObject("properties")_                                                    .startObject("foo")_                                                        .field("type", "text")_                                                        .field("fielddata", true)_                                                        .startObject("fields")_                                                            .startObject("sub")_                                                                .field("type", "keyword")_                                                            .endObject()_                                                        .endObject()_                                                    .endObject()_                                                .endObject()_                                            .endObject()_                                        .endObject()_                                    .endObject()_                                .endObject()))__        ensureGreen()___        client().prepareIndex("test", "type", "1").setSource(jsonBuilder().startObject()_                .startObject("nested")_                    .field("foo", "bar bar")_                .endObject()_                .endObject()).execute().actionGet()__        refresh()___        _        SearchResponse searchResponse = client().prepareSearch()_                .setQuery(matchAllQuery())_                .addSort(SortBuilders.fieldSort("nested.foo").setNestedPath("nested").order(SortOrder.DESC))_                .execute().actionGet()__        assertNoFailures(searchResponse)__        SearchHit[] hits = searchResponse.getHits().getHits()__        for (int i = 0_ i < hits.length_ ++i) {_            assertThat(hits[i].getSortValues().length, is(1))__            assertThat(hits[i].getSortValues()[0], is("bar"))__        }___        _        searchResponse = client().prepareSearch()_                .setQuery(matchAllQuery())_                .addSort(SortBuilders.fieldSort("nested.foo.sub").setNestedPath("nested").order(SortOrder.DESC))_                .execute().actionGet()__        assertNoFailures(searchResponse)__        hits = searchResponse.getHits().getHits()__        for (int i = 0_ i < hits.length_ ++i) {_            assertThat(hits[i].getSortValues().length, is(1))__            assertThat(hits[i].getSortValues()[0], is("bar bar"))__        }_    };test,case,for,issue,6150,https,github,com,elastic,elasticsearch,issues,6150;public,void,test,nested,sort,throws,ioexception,interrupted,exception,execution,exception,assert,acked,prepare,create,test,add,mapping,type,xcontent,factory,json,builder,start,object,start,object,type,start,object,properties,start,object,nested,field,type,nested,start,object,properties,start,object,foo,field,type,text,field,fielddata,true,start,object,fields,start,object,sub,field,type,keyword,end,object,end,object,end,object,end,object,end,object,end,object,end,object,end,object,ensure,green,client,prepare,index,test,type,1,set,source,json,builder,start,object,start,object,nested,field,foo,bar,bar,end,object,end,object,execute,action,get,refresh,search,response,search,response,client,prepare,search,set,query,match,all,query,add,sort,sort,builders,field,sort,nested,foo,set,nested,path,nested,order,sort,order,desc,execute,action,get,assert,no,failures,search,response,search,hit,hits,search,response,get,hits,get,hits,for,int,i,0,i,hits,length,i,assert,that,hits,i,get,sort,values,length,is,1,assert,that,hits,i,get,sort,values,0,is,bar,search,response,client,prepare,search,set,query,match,all,query,add,sort,sort,builders,field,sort,nested,foo,sub,set,nested,path,nested,order,sort,order,desc,execute,action,get,assert,no,failures,search,response,hits,search,response,get,hits,get,hits,for,int,i,0,i,hits,length,i,assert,that,hits,i,get,sort,values,length,is,1,assert,that,hits,i,get,sort,values,0,is,bar,bar
FieldSortIT -> public void testNestedSort() throws IOException, InterruptedException, ExecutionException;1539615817;Test case for issue 6150: https://github.com/elastic/elasticsearch/issues/6150;public void testNestedSort() throws IOException, InterruptedException, ExecutionException {_        assertAcked(prepareCreate("test")_                .addMapping("type",_                        XContentFactory.jsonBuilder()_                                .startObject()_                                    .startObject("type")_                                        .startObject("properties")_                                            .startObject("nested")_                                                .field("type", "nested")_                                                .startObject("properties")_                                                    .startObject("foo")_                                                        .field("type", "text")_                                                        .field("fielddata", true)_                                                        .startObject("fields")_                                                            .startObject("sub")_                                                                .field("type", "keyword")_                                                            .endObject()_                                                        .endObject()_                                                    .endObject()_                                                .endObject()_                                            .endObject()_                                        .endObject()_                                    .endObject()_                                .endObject()))__        ensureGreen()___        client().prepareIndex("test", "type", "1").setSource(jsonBuilder().startObject()_                .startArray("nested")_                .startObject().field("foo", "bar bar").endObject()_                .startObject().field("foo", "abc abc").endObject()_                .endArray()_                .endObject()).execute().actionGet()__        client().prepareIndex("test", "type", "2").setSource(jsonBuilder().startObject()_                .startArray("nested")_                .startObject().field("foo", "abc abc").endObject()_                .startObject().field("foo", "cba bca").endObject()_                .endArray()_                .endObject()).execute().actionGet()__        refresh()___        _        SearchResponse searchResponse = client().prepareSearch()_                .setQuery(matchAllQuery())_                .addSort(SortBuilders.fieldSort("nested.foo").setNestedPath("nested").order(SortOrder.DESC))_                .execute().actionGet()__        assertNoFailures(searchResponse)__        SearchHit[] hits = searchResponse.getHits().getHits()__        assertThat(hits.length, is(2))__        assertThat(hits[0].getSortValues().length, is(1))__        assertThat(hits[1].getSortValues().length, is(1))__        assertThat(hits[0].getSortValues()[0], is("cba"))__        assertThat(hits[1].getSortValues()[0], is("bar"))___        _        searchResponse = client().prepareSearch()_            .setQuery(matchAllQuery())_            .addSort(SortBuilders_                .fieldSort("nested.foo")_                .setNestedSort(new NestedSortBuilder("nested").setMaxChildren(1))_                .order(SortOrder.DESC))_            .execute().actionGet()__        assertNoFailures(searchResponse)__        hits = searchResponse.getHits().getHits()__        assertThat(hits.length, is(2))__        assertThat(hits[0].getSortValues().length, is(1))__        assertThat(hits[1].getSortValues().length, is(1))__        assertThat(hits[0].getSortValues()[0], is("bar"))__        assertThat(hits[1].getSortValues()[0], is("abc"))___        _        searchResponse = client().prepareSearch()_                .setQuery(matchAllQuery())_                .addSort(SortBuilders.fieldSort("nested.foo.sub").setNestedPath("nested").order(SortOrder.DESC))_                .execute().actionGet()__        assertNoFailures(searchResponse)__        hits = searchResponse.getHits().getHits()__        assertThat(hits.length, is(2))__        assertThat(hits[0].getSortValues().length, is(1))__        assertThat(hits[1].getSortValues().length, is(1))__        assertThat(hits[0].getSortValues()[0], is("cba bca"))__        assertThat(hits[1].getSortValues()[0], is("bar bar"))__    };test,case,for,issue,6150,https,github,com,elastic,elasticsearch,issues,6150;public,void,test,nested,sort,throws,ioexception,interrupted,exception,execution,exception,assert,acked,prepare,create,test,add,mapping,type,xcontent,factory,json,builder,start,object,start,object,type,start,object,properties,start,object,nested,field,type,nested,start,object,properties,start,object,foo,field,type,text,field,fielddata,true,start,object,fields,start,object,sub,field,type,keyword,end,object,end,object,end,object,end,object,end,object,end,object,end,object,end,object,ensure,green,client,prepare,index,test,type,1,set,source,json,builder,start,object,start,array,nested,start,object,field,foo,bar,bar,end,object,start,object,field,foo,abc,abc,end,object,end,array,end,object,execute,action,get,client,prepare,index,test,type,2,set,source,json,builder,start,object,start,array,nested,start,object,field,foo,abc,abc,end,object,start,object,field,foo,cba,bca,end,object,end,array,end,object,execute,action,get,refresh,search,response,search,response,client,prepare,search,set,query,match,all,query,add,sort,sort,builders,field,sort,nested,foo,set,nested,path,nested,order,sort,order,desc,execute,action,get,assert,no,failures,search,response,search,hit,hits,search,response,get,hits,get,hits,assert,that,hits,length,is,2,assert,that,hits,0,get,sort,values,length,is,1,assert,that,hits,1,get,sort,values,length,is,1,assert,that,hits,0,get,sort,values,0,is,cba,assert,that,hits,1,get,sort,values,0,is,bar,search,response,client,prepare,search,set,query,match,all,query,add,sort,sort,builders,field,sort,nested,foo,set,nested,sort,new,nested,sort,builder,nested,set,max,children,1,order,sort,order,desc,execute,action,get,assert,no,failures,search,response,hits,search,response,get,hits,get,hits,assert,that,hits,length,is,2,assert,that,hits,0,get,sort,values,length,is,1,assert,that,hits,1,get,sort,values,length,is,1,assert,that,hits,0,get,sort,values,0,is,bar,assert,that,hits,1,get,sort,values,0,is,abc,search,response,client,prepare,search,set,query,match,all,query,add,sort,sort,builders,field,sort,nested,foo,sub,set,nested,path,nested,order,sort,order,desc,execute,action,get,assert,no,failures,search,response,hits,search,response,get,hits,get,hits,assert,that,hits,length,is,2,assert,that,hits,0,get,sort,values,length,is,1,assert,that,hits,1,get,sort,values,length,is,1,assert,that,hits,0,get,sort,values,0,is,cba,bca,assert,that,hits,1,get,sort,values,0,is,bar,bar
FieldSortIT -> public void testNestedSort() throws IOException, InterruptedException, ExecutionException;1544035746;Test case for issue 6150: https://github.com/elastic/elasticsearch/issues/6150;public void testNestedSort() throws IOException, InterruptedException, ExecutionException {_        assertAcked(prepareCreate("test")_                .addMapping("type",_                        XContentFactory.jsonBuilder()_                                .startObject()_                                    .startObject("type")_                                        .startObject("properties")_                                            .startObject("nested")_                                                .field("type", "nested")_                                                .startObject("properties")_                                                    .startObject("foo")_                                                        .field("type", "text")_                                                        .field("fielddata", true)_                                                        .startObject("fields")_                                                            .startObject("sub")_                                                                .field("type", "keyword")_                                                            .endObject()_                                                        .endObject()_                                                    .endObject()_                                                .endObject()_                                            .endObject()_                                        .endObject()_                                    .endObject()_                                .endObject()))__        ensureGreen()___        client().prepareIndex("test", "type", "1").setSource(jsonBuilder().startObject()_                .startArray("nested")_                .startObject().field("foo", "bar bar").endObject()_                .startObject().field("foo", "abc abc").endObject()_                .endArray()_                .endObject()).execute().actionGet()__        client().prepareIndex("test", "type", "2").setSource(jsonBuilder().startObject()_                .startArray("nested")_                .startObject().field("foo", "abc abc").endObject()_                .startObject().field("foo", "cba bca").endObject()_                .endArray()_                .endObject()).execute().actionGet()__        refresh()___        _        SearchResponse searchResponse = client().prepareSearch()_                .setQuery(matchAllQuery())_                .addSort(SortBuilders.fieldSort("nested.foo").setNestedPath("nested").order(SortOrder.DESC))_                .execute().actionGet()__        assertNoFailures(searchResponse)__        SearchHit[] hits = searchResponse.getHits().getHits()__        assertThat(hits.length, is(2))__        assertThat(hits[0].getSortValues().length, is(1))__        assertThat(hits[1].getSortValues().length, is(1))__        assertThat(hits[0].getSortValues()[0], is("cba"))__        assertThat(hits[1].getSortValues()[0], is("bar"))___        _        searchResponse = client().prepareSearch()_            .setQuery(matchAllQuery())_            .addSort(SortBuilders_                .fieldSort("nested.foo")_                .setNestedSort(new NestedSortBuilder("nested").setMaxChildren(1))_                .order(SortOrder.DESC))_            .execute().actionGet()__        assertNoFailures(searchResponse)__        hits = searchResponse.getHits().getHits()__        assertThat(hits.length, is(2))__        assertThat(hits[0].getSortValues().length, is(1))__        assertThat(hits[1].getSortValues().length, is(1))__        assertThat(hits[0].getSortValues()[0], is("bar"))__        assertThat(hits[1].getSortValues()[0], is("abc"))___        _        searchResponse = client().prepareSearch()_                .setQuery(matchAllQuery())_                .addSort(SortBuilders.fieldSort("nested.foo.sub").setNestedPath("nested").order(SortOrder.DESC))_                .execute().actionGet()__        assertNoFailures(searchResponse)__        hits = searchResponse.getHits().getHits()__        assertThat(hits.length, is(2))__        assertThat(hits[0].getSortValues().length, is(1))__        assertThat(hits[1].getSortValues().length, is(1))__        assertThat(hits[0].getSortValues()[0], is("cba bca"))__        assertThat(hits[1].getSortValues()[0], is("bar bar"))__    };test,case,for,issue,6150,https,github,com,elastic,elasticsearch,issues,6150;public,void,test,nested,sort,throws,ioexception,interrupted,exception,execution,exception,assert,acked,prepare,create,test,add,mapping,type,xcontent,factory,json,builder,start,object,start,object,type,start,object,properties,start,object,nested,field,type,nested,start,object,properties,start,object,foo,field,type,text,field,fielddata,true,start,object,fields,start,object,sub,field,type,keyword,end,object,end,object,end,object,end,object,end,object,end,object,end,object,end,object,ensure,green,client,prepare,index,test,type,1,set,source,json,builder,start,object,start,array,nested,start,object,field,foo,bar,bar,end,object,start,object,field,foo,abc,abc,end,object,end,array,end,object,execute,action,get,client,prepare,index,test,type,2,set,source,json,builder,start,object,start,array,nested,start,object,field,foo,abc,abc,end,object,start,object,field,foo,cba,bca,end,object,end,array,end,object,execute,action,get,refresh,search,response,search,response,client,prepare,search,set,query,match,all,query,add,sort,sort,builders,field,sort,nested,foo,set,nested,path,nested,order,sort,order,desc,execute,action,get,assert,no,failures,search,response,search,hit,hits,search,response,get,hits,get,hits,assert,that,hits,length,is,2,assert,that,hits,0,get,sort,values,length,is,1,assert,that,hits,1,get,sort,values,length,is,1,assert,that,hits,0,get,sort,values,0,is,cba,assert,that,hits,1,get,sort,values,0,is,bar,search,response,client,prepare,search,set,query,match,all,query,add,sort,sort,builders,field,sort,nested,foo,set,nested,sort,new,nested,sort,builder,nested,set,max,children,1,order,sort,order,desc,execute,action,get,assert,no,failures,search,response,hits,search,response,get,hits,get,hits,assert,that,hits,length,is,2,assert,that,hits,0,get,sort,values,length,is,1,assert,that,hits,1,get,sort,values,length,is,1,assert,that,hits,0,get,sort,values,0,is,bar,assert,that,hits,1,get,sort,values,0,is,abc,search,response,client,prepare,search,set,query,match,all,query,add,sort,sort,builders,field,sort,nested,foo,sub,set,nested,path,nested,order,sort,order,desc,execute,action,get,assert,no,failures,search,response,hits,search,response,get,hits,get,hits,assert,that,hits,length,is,2,assert,that,hits,0,get,sort,values,length,is,1,assert,that,hits,1,get,sort,values,length,is,1,assert,that,hits,0,get,sort,values,0,is,cba,bca,assert,that,hits,1,get,sort,values,0,is,bar,bar
FieldSortIT -> public void testNestedSort() throws IOException, InterruptedException, ExecutionException;1544110272;Test case for issue 6150: https://github.com/elastic/elasticsearch/issues/6150;public void testNestedSort() throws IOException, InterruptedException, ExecutionException {_        assertAcked(prepareCreate("test")_                .addMapping("type",_                        XContentFactory.jsonBuilder()_                                .startObject()_                                    .startObject("type")_                                        .startObject("properties")_                                            .startObject("nested")_                                                .field("type", "nested")_                                                .startObject("properties")_                                                    .startObject("foo")_                                                        .field("type", "text")_                                                        .field("fielddata", true)_                                                        .startObject("fields")_                                                            .startObject("sub")_                                                                .field("type", "keyword")_                                                            .endObject()_                                                        .endObject()_                                                    .endObject()_                                                .endObject()_                                            .endObject()_                                        .endObject()_                                    .endObject()_                                .endObject()))__        ensureGreen()___        client().prepareIndex("test", "type", "1").setSource(jsonBuilder().startObject()_                .startArray("nested")_                .startObject().field("foo", "bar bar").endObject()_                .startObject().field("foo", "abc abc").endObject()_                .endArray()_                .endObject()).get()__        client().prepareIndex("test", "type", "2").setSource(jsonBuilder().startObject()_                .startArray("nested")_                .startObject().field("foo", "abc abc").endObject()_                .startObject().field("foo", "cba bca").endObject()_                .endArray()_                .endObject()).get()__        refresh()___        _        SearchResponse searchResponse = client().prepareSearch()_                .setQuery(matchAllQuery())_                .addSort(SortBuilders.fieldSort("nested.foo").setNestedPath("nested").order(SortOrder.DESC))_                .get()__        assertNoFailures(searchResponse)__        SearchHit[] hits = searchResponse.getHits().getHits()__        assertThat(hits.length, is(2))__        assertThat(hits[0].getSortValues().length, is(1))__        assertThat(hits[1].getSortValues().length, is(1))__        assertThat(hits[0].getSortValues()[0], is("cba"))__        assertThat(hits[1].getSortValues()[0], is("bar"))___        _        searchResponse = client().prepareSearch()_            .setQuery(matchAllQuery())_            .addSort(SortBuilders_                .fieldSort("nested.foo")_                .setNestedSort(new NestedSortBuilder("nested").setMaxChildren(1))_                .order(SortOrder.DESC))_            .get()__        assertNoFailures(searchResponse)__        hits = searchResponse.getHits().getHits()__        assertThat(hits.length, is(2))__        assertThat(hits[0].getSortValues().length, is(1))__        assertThat(hits[1].getSortValues().length, is(1))__        assertThat(hits[0].getSortValues()[0], is("bar"))__        assertThat(hits[1].getSortValues()[0], is("abc"))___        _        searchResponse = client().prepareSearch()_                .setQuery(matchAllQuery())_                .addSort(SortBuilders.fieldSort("nested.foo.sub").setNestedPath("nested").order(SortOrder.DESC))_                .get()__        assertNoFailures(searchResponse)__        hits = searchResponse.getHits().getHits()__        assertThat(hits.length, is(2))__        assertThat(hits[0].getSortValues().length, is(1))__        assertThat(hits[1].getSortValues().length, is(1))__        assertThat(hits[0].getSortValues()[0], is("cba bca"))__        assertThat(hits[1].getSortValues()[0], is("bar bar"))__    };test,case,for,issue,6150,https,github,com,elastic,elasticsearch,issues,6150;public,void,test,nested,sort,throws,ioexception,interrupted,exception,execution,exception,assert,acked,prepare,create,test,add,mapping,type,xcontent,factory,json,builder,start,object,start,object,type,start,object,properties,start,object,nested,field,type,nested,start,object,properties,start,object,foo,field,type,text,field,fielddata,true,start,object,fields,start,object,sub,field,type,keyword,end,object,end,object,end,object,end,object,end,object,end,object,end,object,end,object,ensure,green,client,prepare,index,test,type,1,set,source,json,builder,start,object,start,array,nested,start,object,field,foo,bar,bar,end,object,start,object,field,foo,abc,abc,end,object,end,array,end,object,get,client,prepare,index,test,type,2,set,source,json,builder,start,object,start,array,nested,start,object,field,foo,abc,abc,end,object,start,object,field,foo,cba,bca,end,object,end,array,end,object,get,refresh,search,response,search,response,client,prepare,search,set,query,match,all,query,add,sort,sort,builders,field,sort,nested,foo,set,nested,path,nested,order,sort,order,desc,get,assert,no,failures,search,response,search,hit,hits,search,response,get,hits,get,hits,assert,that,hits,length,is,2,assert,that,hits,0,get,sort,values,length,is,1,assert,that,hits,1,get,sort,values,length,is,1,assert,that,hits,0,get,sort,values,0,is,cba,assert,that,hits,1,get,sort,values,0,is,bar,search,response,client,prepare,search,set,query,match,all,query,add,sort,sort,builders,field,sort,nested,foo,set,nested,sort,new,nested,sort,builder,nested,set,max,children,1,order,sort,order,desc,get,assert,no,failures,search,response,hits,search,response,get,hits,get,hits,assert,that,hits,length,is,2,assert,that,hits,0,get,sort,values,length,is,1,assert,that,hits,1,get,sort,values,length,is,1,assert,that,hits,0,get,sort,values,0,is,bar,assert,that,hits,1,get,sort,values,0,is,abc,search,response,client,prepare,search,set,query,match,all,query,add,sort,sort,builders,field,sort,nested,foo,sub,set,nested,path,nested,order,sort,order,desc,get,assert,no,failures,search,response,hits,search,response,get,hits,get,hits,assert,that,hits,length,is,2,assert,that,hits,0,get,sort,values,length,is,1,assert,that,hits,1,get,sort,values,length,is,1,assert,that,hits,0,get,sort,values,0,is,cba,bca,assert,that,hits,1,get,sort,values,0,is,bar,bar
FieldSortIT -> public void testNestedSort() throws IOException, InterruptedException, ExecutionException;1544792207;Test case for issue 6150: https://github.com/elastic/elasticsearch/issues/6150;public void testNestedSort() throws IOException, InterruptedException, ExecutionException {_        assertAcked(prepareCreate("test")_                .addMapping("type",_                        XContentFactory.jsonBuilder()_                                .startObject()_                                    .startObject("type")_                                        .startObject("properties")_                                            .startObject("nested")_                                                .field("type", "nested")_                                                .startObject("properties")_                                                    .startObject("foo")_                                                        .field("type", "text")_                                                        .field("fielddata", true)_                                                        .startObject("fields")_                                                            .startObject("sub")_                                                                .field("type", "keyword")_                                                            .endObject()_                                                        .endObject()_                                                    .endObject()_                                                .endObject()_                                            .endObject()_                                        .endObject()_                                    .endObject()_                                .endObject()))__        ensureGreen()___        client().prepareIndex("test", "type", "1").setSource(jsonBuilder().startObject()_                .startArray("nested")_                .startObject().field("foo", "bar bar").endObject()_                .startObject().field("foo", "abc abc").endObject()_                .endArray()_                .endObject()).get()__        client().prepareIndex("test", "type", "2").setSource(jsonBuilder().startObject()_                .startArray("nested")_                .startObject().field("foo", "abc abc").endObject()_                .startObject().field("foo", "cba bca").endObject()_                .endArray()_                .endObject()).get()__        refresh()___        _        SearchResponse searchResponse = client().prepareSearch()_                .setQuery(matchAllQuery())_                .addSort(SortBuilders.fieldSort("nested.foo").setNestedPath("nested").order(SortOrder.DESC))_                .get()__        assertNoFailures(searchResponse)__        SearchHit[] hits = searchResponse.getHits().getHits()__        assertThat(hits.length, is(2))__        assertThat(hits[0].getSortValues().length, is(1))__        assertThat(hits[1].getSortValues().length, is(1))__        assertThat(hits[0].getSortValues()[0], is("cba"))__        assertThat(hits[1].getSortValues()[0], is("bar"))___        _        searchResponse = client().prepareSearch()_            .setQuery(matchAllQuery())_            .addSort(SortBuilders_                .fieldSort("nested.foo")_                .setNestedSort(new NestedSortBuilder("nested").setMaxChildren(1))_                .order(SortOrder.DESC))_            .get()__        assertNoFailures(searchResponse)__        hits = searchResponse.getHits().getHits()__        assertThat(hits.length, is(2))__        assertThat(hits[0].getSortValues().length, is(1))__        assertThat(hits[1].getSortValues().length, is(1))__        assertThat(hits[0].getSortValues()[0], is("bar"))__        assertThat(hits[1].getSortValues()[0], is("abc"))___        _        searchResponse = client().prepareSearch()_                .setQuery(matchAllQuery())_                .addSort(SortBuilders.fieldSort("nested.foo.sub").setNestedPath("nested").order(SortOrder.DESC))_                .get()__        assertNoFailures(searchResponse)__        hits = searchResponse.getHits().getHits()__        assertThat(hits.length, is(2))__        assertThat(hits[0].getSortValues().length, is(1))__        assertThat(hits[1].getSortValues().length, is(1))__        assertThat(hits[0].getSortValues()[0], is("cba bca"))__        assertThat(hits[1].getSortValues()[0], is("bar bar"))__    };test,case,for,issue,6150,https,github,com,elastic,elasticsearch,issues,6150;public,void,test,nested,sort,throws,ioexception,interrupted,exception,execution,exception,assert,acked,prepare,create,test,add,mapping,type,xcontent,factory,json,builder,start,object,start,object,type,start,object,properties,start,object,nested,field,type,nested,start,object,properties,start,object,foo,field,type,text,field,fielddata,true,start,object,fields,start,object,sub,field,type,keyword,end,object,end,object,end,object,end,object,end,object,end,object,end,object,end,object,ensure,green,client,prepare,index,test,type,1,set,source,json,builder,start,object,start,array,nested,start,object,field,foo,bar,bar,end,object,start,object,field,foo,abc,abc,end,object,end,array,end,object,get,client,prepare,index,test,type,2,set,source,json,builder,start,object,start,array,nested,start,object,field,foo,abc,abc,end,object,start,object,field,foo,cba,bca,end,object,end,array,end,object,get,refresh,search,response,search,response,client,prepare,search,set,query,match,all,query,add,sort,sort,builders,field,sort,nested,foo,set,nested,path,nested,order,sort,order,desc,get,assert,no,failures,search,response,search,hit,hits,search,response,get,hits,get,hits,assert,that,hits,length,is,2,assert,that,hits,0,get,sort,values,length,is,1,assert,that,hits,1,get,sort,values,length,is,1,assert,that,hits,0,get,sort,values,0,is,cba,assert,that,hits,1,get,sort,values,0,is,bar,search,response,client,prepare,search,set,query,match,all,query,add,sort,sort,builders,field,sort,nested,foo,set,nested,sort,new,nested,sort,builder,nested,set,max,children,1,order,sort,order,desc,get,assert,no,failures,search,response,hits,search,response,get,hits,get,hits,assert,that,hits,length,is,2,assert,that,hits,0,get,sort,values,length,is,1,assert,that,hits,1,get,sort,values,length,is,1,assert,that,hits,0,get,sort,values,0,is,bar,assert,that,hits,1,get,sort,values,0,is,abc,search,response,client,prepare,search,set,query,match,all,query,add,sort,sort,builders,field,sort,nested,foo,sub,set,nested,path,nested,order,sort,order,desc,get,assert,no,failures,search,response,hits,search,response,get,hits,get,hits,assert,that,hits,length,is,2,assert,that,hits,0,get,sort,values,length,is,1,assert,that,hits,1,get,sort,values,length,is,1,assert,that,hits,0,get,sort,values,0,is,cba,bca,assert,that,hits,1,get,sort,values,0,is,bar,bar
