commented;modifiers;parameterAmount;loc;comment;code
false;public;0;15;;public void testValidateErrorMessage() throws Exception {     PutIndexTemplateRequest request = new PutIndexTemplateRequest().     ActionRequestValidationException withoutNameAndPattern = request.validate().     assertThat(withoutNameAndPattern.getMessage(), containsString("name is missing")).     assertThat(withoutNameAndPattern.getMessage(), containsString("index patterns are missing")).     request.name("foo").     ActionRequestValidationException withoutIndexPatterns = request.validate().     assertThat(withoutIndexPatterns.validationErrors(), hasSize(1)).     assertThat(withoutIndexPatterns.getMessage(), containsString("index patterns are missing")).     request.patterns(Collections.singletonList("test-*")).     ActionRequestValidationException noError = request.validate().     assertThat(noError, is(nullValue())). }
false;protected;0;39;;@Override protected PutIndexTemplateRequest createTestInstance() {     PutIndexTemplateRequest request = new PutIndexTemplateRequest().     request.name("test").     if (randomBoolean()) {         request.version(randomInt()).     }     if (randomBoolean()) {         request.order(randomInt()).     }     request.patterns(Arrays.asList(generateRandomStringArray(20, 100, false, false))).     int numAlias = between(0, 5).     for (int i = 0. i < numAlias. i++) {         // some ASCII or Latin-1 control characters, especially newline, can lead to         // problems with yaml parsers, that's why we filter them here (see #30911)         Alias alias = new Alias(randomRealisticUnicodeOfLengthBetween(1, 10).replaceAll("\\p{Cc}", "")).         if (randomBoolean()) {             alias.indexRouting(randomRealisticUnicodeOfLengthBetween(1, 10)).         }         if (randomBoolean()) {             alias.searchRouting(randomRealisticUnicodeOfLengthBetween(1, 10)).         }         request.alias(alias).     }     if (randomBoolean()) {         try {             request.mapping("doc", XContentFactory.jsonBuilder().startObject().startObject("doc").startObject("properties").startObject("field-" + randomInt()).field("type", randomFrom("keyword", "text")).endObject().endObject().endObject().endObject()).         } catch (IOException ex) {             throw new UncheckedIOException(ex).         }     }     if (randomBoolean()) {         request.settings(Settings.builder().put("setting1", randomLong()).put("setting2", randomTimeValue()).build()).     }     return request. }
false;protected;1;4;;@Override protected PutIndexTemplateRequest doParseInstance(XContentParser parser) throws IOException {     return new PutIndexTemplateRequest().source(parser.map()). }
false;protected;2;10;;@Override protected void assertEqualInstances(PutIndexTemplateRequest expected, PutIndexTemplateRequest actual) {     assertNotSame(expected, actual).     assertThat(actual.version(), equalTo(expected.version())).     assertThat(actual.order(), equalTo(expected.order())).     assertThat(actual.patterns(), equalTo(expected.patterns())).     assertThat(actual.aliases(), equalTo(expected.aliases())).     assertThat(actual.mappings(), equalTo(expected.mappings())).     assertThat(actual.settings(), equalTo(expected.settings())). }
false;protected;0;4;;@Override protected boolean supportsUnknownFields() {     return false. }
