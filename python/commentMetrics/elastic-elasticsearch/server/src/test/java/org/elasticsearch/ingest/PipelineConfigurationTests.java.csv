commented;modifiers;parameterAmount;loc;comment;code
false;public;0;12;;public void testSerialization() throws IOException {     PipelineConfiguration configuration = new PipelineConfiguration("1", new BytesArray("{}".getBytes(StandardCharsets.UTF_8)), XContentType.JSON).     assertEquals(XContentType.JSON, configuration.getXContentType()).     BytesStreamOutput out = new BytesStreamOutput().     configuration.writeTo(out).     StreamInput in = StreamInput.wrap(out.bytes().toBytesRef().bytes).     PipelineConfiguration serialized = PipelineConfiguration.readFrom(in).     assertEquals(XContentType.JSON, serialized.getXContentType()).     assertEquals("{}", serialized.getConfig().utf8ToString()). }
false;public;0;17;;public void testParser() throws IOException {     ContextParser<Void, PipelineConfiguration> parser = PipelineConfiguration.getParser().     XContentType xContentType = randomFrom(XContentType.values()).     final BytesReference bytes.     try (XContentBuilder builder = XContentBuilder.builder(xContentType.xContent())) {         new PipelineConfiguration("1", new BytesArray("{}".getBytes(StandardCharsets.UTF_8)), XContentType.JSON).toXContent(builder, ToXContent.EMPTY_PARAMS).         bytes = BytesReference.bytes(builder).     }     XContentParser xContentParser = xContentType.xContent().createParser(NamedXContentRegistry.EMPTY, DeprecationHandler.THROW_UNSUPPORTED_OPERATION, bytes.streamInput()).     PipelineConfiguration parsed = parser.parse(xContentParser, null).     assertEquals(xContentType, parsed.getXContentType()).     assertEquals("{}", XContentHelper.convertToJson(parsed.getConfig(), false, parsed.getXContentType())).     assertEquals("1", parsed.getId()). }
false;protected;0;10;;@Override protected PipelineConfiguration createTestInstance() {     BytesArray config.     if (randomBoolean()) {         config = new BytesArray("{}".getBytes(StandardCharsets.UTF_8)).     } else {         config = new BytesArray("{\"foo\": \"bar\"}".getBytes(StandardCharsets.UTF_8)).     }     return new PipelineConfiguration(randomAlphaOfLength(4), config, XContentType.JSON). }
false;protected;1;4;;@Override protected PipelineConfiguration doParseInstance(XContentParser parser) throws IOException {     return PipelineConfiguration.getParser().parse(parser, null). }
false;protected;0;4;;@Override protected boolean supportsUnknownFields() {     return true. }
false;protected;0;4;;@Override protected Predicate<String> getRandomFieldsExcludeFilter() {     return field -> field.equals("config"). }
