# id;timestamp;commentText;codeText;commentWords;codeWords
BulkIntegrationIT -> public void testBulkWithWriteIndexAndRouting();1532028790;This tests that the {@link TransportBulkAction} evaluates alias routing values correctly when dealing with_an alias pointing to multiple indices, while a write index exits.;public void testBulkWithWriteIndexAndRouting() {_        Map<String, Integer> twoShardsSettings = Collections.singletonMap(IndexMetaData.SETTING_NUMBER_OF_SHARDS, 2)__        client().admin().indices().prepareCreate("index1")_            .addAlias(new Alias("alias1").indexRouting("0")).setSettings(twoShardsSettings).get()__        client().admin().indices().prepareCreate("index2")_            .addAlias(new Alias("alias1").indexRouting("0").writeIndex(randomFrom(false, null)))_            .setSettings(twoShardsSettings).get()__        client().admin().indices().prepareCreate("index3")_            .addAlias(new Alias("alias1").indexRouting("1").writeIndex(true)).setSettings(twoShardsSettings).get()___        IndexRequest indexRequestWithAlias = new IndexRequest("alias1", "type", "id")__        if (randomBoolean()) {_            indexRequestWithAlias.routing("1")__        }_        indexRequestWithAlias.source(Collections.singletonMap("foo", "baz"))__        BulkResponse bulkResponse = client().prepareBulk().add(indexRequestWithAlias).get()__        assertThat(bulkResponse.getItems()[0].getResponse().getIndex(), equalTo("index3"))__        assertThat(bulkResponse.getItems()[0].getResponse().getShardId().getId(), equalTo(0))__        assertThat(bulkResponse.getItems()[0].getResponse().getVersion(), equalTo(1L))__        assertThat(bulkResponse.getItems()[0].getResponse().status(), equalTo(RestStatus.CREATED))__        assertThat(client().prepareGet("index3", "type", "id").setRouting("1").get().getSource().get("foo"), equalTo("baz"))___        bulkResponse = client().prepareBulk().add(client().prepareUpdate("alias1", "type", "id").setDoc("foo", "updated")).get()__        assertFalse(bulkResponse.hasFailures())__        assertThat(client().prepareGet("index3", "type", "id").setRouting("1").get().getSource().get("foo"), equalTo("updated"))__        bulkResponse = client().prepareBulk().add(client().prepareDelete("alias1", "type", "id")).get()__        assertFalse(bulkResponse.hasFailures())__        assertFalse(client().prepareGet("index3", "type", "id").setRouting("1").get().isExists())__    };this,tests,that,the,link,transport,bulk,action,evaluates,alias,routing,values,correctly,when,dealing,with,an,alias,pointing,to,multiple,indices,while,a,write,index,exits;public,void,test,bulk,with,write,index,and,routing,map,string,integer,two,shards,settings,collections,singleton,map,index,meta,data,2,client,admin,indices,prepare,create,index1,add,alias,new,alias,alias1,index,routing,0,set,settings,two,shards,settings,get,client,admin,indices,prepare,create,index2,add,alias,new,alias,alias1,index,routing,0,write,index,random,from,false,null,set,settings,two,shards,settings,get,client,admin,indices,prepare,create,index3,add,alias,new,alias,alias1,index,routing,1,write,index,true,set,settings,two,shards,settings,get,index,request,index,request,with,alias,new,index,request,alias1,type,id,if,random,boolean,index,request,with,alias,routing,1,index,request,with,alias,source,collections,singleton,map,foo,baz,bulk,response,bulk,response,client,prepare,bulk,add,index,request,with,alias,get,assert,that,bulk,response,get,items,0,get,response,get,index,equal,to,index3,assert,that,bulk,response,get,items,0,get,response,get,shard,id,get,id,equal,to,0,assert,that,bulk,response,get,items,0,get,response,get,version,equal,to,1l,assert,that,bulk,response,get,items,0,get,response,status,equal,to,rest,status,created,assert,that,client,prepare,get,index3,type,id,set,routing,1,get,get,source,get,foo,equal,to,baz,bulk,response,client,prepare,bulk,add,client,prepare,update,alias1,type,id,set,doc,foo,updated,get,assert,false,bulk,response,has,failures,assert,that,client,prepare,get,index3,type,id,set,routing,1,get,get,source,get,foo,equal,to,updated,bulk,response,client,prepare,bulk,add,client,prepare,delete,alias1,type,id,get,assert,false,bulk,response,has,failures,assert,false,client,prepare,get,index3,type,id,set,routing,1,get,is,exists
BulkIntegrationIT -> public void testBulkWithWriteIndexAndRouting();1540912197;This tests that the {@link TransportBulkAction} evaluates alias routing values correctly when dealing with_an alias pointing to multiple indices, while a write index exits.;public void testBulkWithWriteIndexAndRouting() {_        Map<String, Integer> twoShardsSettings = Collections.singletonMap(IndexMetaData.SETTING_NUMBER_OF_SHARDS, 2)__        client().admin().indices().prepareCreate("index1")_            .addAlias(new Alias("alias1").indexRouting("0")).setSettings(twoShardsSettings).get()__        client().admin().indices().prepareCreate("index2")_            .addAlias(new Alias("alias1").indexRouting("0").writeIndex(randomFrom(false, null)))_            .setSettings(twoShardsSettings).get()__        client().admin().indices().prepareCreate("index3")_            .addAlias(new Alias("alias1").indexRouting("1").writeIndex(true)).setSettings(twoShardsSettings).get()___        IndexRequest indexRequestWithAlias = new IndexRequest("alias1", "type", "id")__        if (randomBoolean()) {_            indexRequestWithAlias.routing("1")__        }_        indexRequestWithAlias.source(Collections.singletonMap("foo", "baz"))__        BulkResponse bulkResponse = client().prepareBulk().add(indexRequestWithAlias).get()__        assertThat(bulkResponse.getItems()[0].getResponse().getIndex(), equalTo("index3"))__        assertThat(bulkResponse.getItems()[0].getResponse().getShardId().getId(), equalTo(0))__        assertThat(bulkResponse.getItems()[0].getResponse().getVersion(), equalTo(1L))__        assertThat(bulkResponse.getItems()[0].getResponse().status(), equalTo(RestStatus.CREATED))__        assertThat(client().prepareGet("index3", "type", "id").setRouting("1").get().getSource().get("foo"), equalTo("baz"))___        bulkResponse = client().prepareBulk().add(client().prepareUpdate("alias1", "type", "id").setDoc("foo", "updated")).get()__        assertFalse(bulkResponse.hasFailures())__        assertThat(client().prepareGet("index3", "type", "id").setRouting("1").get().getSource().get("foo"), equalTo("updated"))__        bulkResponse = client().prepareBulk().add(client().prepareDelete("alias1", "type", "id")).get()__        assertFalse(bulkResponse.hasFailures())__        assertFalse(client().prepareGet("index3", "type", "id").setRouting("1").get().isExists())__    };this,tests,that,the,link,transport,bulk,action,evaluates,alias,routing,values,correctly,when,dealing,with,an,alias,pointing,to,multiple,indices,while,a,write,index,exits;public,void,test,bulk,with,write,index,and,routing,map,string,integer,two,shards,settings,collections,singleton,map,index,meta,data,2,client,admin,indices,prepare,create,index1,add,alias,new,alias,alias1,index,routing,0,set,settings,two,shards,settings,get,client,admin,indices,prepare,create,index2,add,alias,new,alias,alias1,index,routing,0,write,index,random,from,false,null,set,settings,two,shards,settings,get,client,admin,indices,prepare,create,index3,add,alias,new,alias,alias1,index,routing,1,write,index,true,set,settings,two,shards,settings,get,index,request,index,request,with,alias,new,index,request,alias1,type,id,if,random,boolean,index,request,with,alias,routing,1,index,request,with,alias,source,collections,singleton,map,foo,baz,bulk,response,bulk,response,client,prepare,bulk,add,index,request,with,alias,get,assert,that,bulk,response,get,items,0,get,response,get,index,equal,to,index3,assert,that,bulk,response,get,items,0,get,response,get,shard,id,get,id,equal,to,0,assert,that,bulk,response,get,items,0,get,response,get,version,equal,to,1l,assert,that,bulk,response,get,items,0,get,response,status,equal,to,rest,status,created,assert,that,client,prepare,get,index3,type,id,set,routing,1,get,get,source,get,foo,equal,to,baz,bulk,response,client,prepare,bulk,add,client,prepare,update,alias1,type,id,set,doc,foo,updated,get,assert,false,bulk,response,has,failures,assert,that,client,prepare,get,index3,type,id,set,routing,1,get,get,source,get,foo,equal,to,updated,bulk,response,client,prepare,bulk,add,client,prepare,delete,alias1,type,id,get,assert,false,bulk,response,has,failures,assert,false,client,prepare,get,index3,type,id,set,routing,1,get,is,exists
BulkIntegrationIT -> public void testBulkWithWriteIndexAndRouting();1542180341;This tests that the {@link TransportBulkAction} evaluates alias routing values correctly when dealing with_an alias pointing to multiple indices, while a write index exits.;public void testBulkWithWriteIndexAndRouting() {_        Map<String, Integer> twoShardsSettings = Collections.singletonMap(IndexMetaData.SETTING_NUMBER_OF_SHARDS, 2)__        client().admin().indices().prepareCreate("index1")_            .addAlias(new Alias("alias1").indexRouting("0")).setSettings(twoShardsSettings).get()__        client().admin().indices().prepareCreate("index2")_            .addAlias(new Alias("alias1").indexRouting("0").writeIndex(randomFrom(false, null)))_            .setSettings(twoShardsSettings).get()__        client().admin().indices().prepareCreate("index3")_            .addAlias(new Alias("alias1").indexRouting("1").writeIndex(true)).setSettings(twoShardsSettings).get()___        IndexRequest indexRequestWithAlias = new IndexRequest("alias1", "type", "id")__        if (randomBoolean()) {_            indexRequestWithAlias.routing("1")__        }_        indexRequestWithAlias.source(Collections.singletonMap("foo", "baz"))__        BulkResponse bulkResponse = client().prepareBulk().add(indexRequestWithAlias).get()__        assertThat(bulkResponse.getItems()[0].getResponse().getIndex(), equalTo("index3"))__        assertThat(bulkResponse.getItems()[0].getResponse().getShardId().getId(), equalTo(0))__        assertThat(bulkResponse.getItems()[0].getResponse().getVersion(), equalTo(1L))__        assertThat(bulkResponse.getItems()[0].getResponse().status(), equalTo(RestStatus.CREATED))__        assertThat(client().prepareGet("index3", "type", "id").setRouting("1").get().getSource().get("foo"), equalTo("baz"))___        bulkResponse = client().prepareBulk().add(client().prepareUpdate("alias1", "type", "id").setDoc("foo", "updated")).get()__        assertFalse(bulkResponse.buildFailureMessage(), bulkResponse.hasFailures())__        assertThat(client().prepareGet("index3", "type", "id").setRouting("1").get().getSource().get("foo"), equalTo("updated"))__        bulkResponse = client().prepareBulk().add(client().prepareDelete("alias1", "type", "id")).get()__        assertFalse(bulkResponse.buildFailureMessage(), bulkResponse.hasFailures())__        assertFalse(client().prepareGet("index3", "type", "id").setRouting("1").get().isExists())__    };this,tests,that,the,link,transport,bulk,action,evaluates,alias,routing,values,correctly,when,dealing,with,an,alias,pointing,to,multiple,indices,while,a,write,index,exits;public,void,test,bulk,with,write,index,and,routing,map,string,integer,two,shards,settings,collections,singleton,map,index,meta,data,2,client,admin,indices,prepare,create,index1,add,alias,new,alias,alias1,index,routing,0,set,settings,two,shards,settings,get,client,admin,indices,prepare,create,index2,add,alias,new,alias,alias1,index,routing,0,write,index,random,from,false,null,set,settings,two,shards,settings,get,client,admin,indices,prepare,create,index3,add,alias,new,alias,alias1,index,routing,1,write,index,true,set,settings,two,shards,settings,get,index,request,index,request,with,alias,new,index,request,alias1,type,id,if,random,boolean,index,request,with,alias,routing,1,index,request,with,alias,source,collections,singleton,map,foo,baz,bulk,response,bulk,response,client,prepare,bulk,add,index,request,with,alias,get,assert,that,bulk,response,get,items,0,get,response,get,index,equal,to,index3,assert,that,bulk,response,get,items,0,get,response,get,shard,id,get,id,equal,to,0,assert,that,bulk,response,get,items,0,get,response,get,version,equal,to,1l,assert,that,bulk,response,get,items,0,get,response,status,equal,to,rest,status,created,assert,that,client,prepare,get,index3,type,id,set,routing,1,get,get,source,get,foo,equal,to,baz,bulk,response,client,prepare,bulk,add,client,prepare,update,alias1,type,id,set,doc,foo,updated,get,assert,false,bulk,response,build,failure,message,bulk,response,has,failures,assert,that,client,prepare,get,index3,type,id,set,routing,1,get,get,source,get,foo,equal,to,updated,bulk,response,client,prepare,bulk,add,client,prepare,delete,alias1,type,id,get,assert,false,bulk,response,build,failure,message,bulk,response,has,failures,assert,false,client,prepare,get,index3,type,id,set,routing,1,get,is,exists
BulkIntegrationIT -> public void testBulkWithWriteIndexAndRouting();1547156119;This tests that the {@link TransportBulkAction} evaluates alias routing values correctly when dealing with_an alias pointing to multiple indices, while a write index exits.;public void testBulkWithWriteIndexAndRouting() {_        Map<String, Integer> twoShardsSettings = Collections.singletonMap(IndexMetaData.SETTING_NUMBER_OF_SHARDS, 2)__        client().admin().indices().prepareCreate("index1")_            .addAlias(new Alias("alias1").indexRouting("0")).setSettings(twoShardsSettings).get()__        client().admin().indices().prepareCreate("index2")_            .addAlias(new Alias("alias1").indexRouting("0").writeIndex(randomFrom(false, null)))_            .setSettings(twoShardsSettings).get()__        client().admin().indices().prepareCreate("index3")_            .addAlias(new Alias("alias1").indexRouting("1").writeIndex(true)).setSettings(twoShardsSettings).get()___        IndexRequest indexRequestWithAlias = new IndexRequest("alias1", "type", "id")__        if (randomBoolean()) {_            indexRequestWithAlias.routing("1")__        }_        indexRequestWithAlias.source(Collections.singletonMap("foo", "baz"))__        BulkResponse bulkResponse = client().prepareBulk().add(indexRequestWithAlias).get()__        assertThat(bulkResponse.getItems()[0].getResponse().getIndex(), equalTo("index3"))__        assertThat(bulkResponse.getItems()[0].getResponse().getShardId().getId(), equalTo(0))__        assertThat(bulkResponse.getItems()[0].getResponse().getVersion(), equalTo(1L))__        assertThat(bulkResponse.getItems()[0].getResponse().status(), equalTo(RestStatus.CREATED))__        assertThat(client().prepareGet("index3", "type", "id").setRouting("1").get().getSource().get("foo"), equalTo("baz"))___        bulkResponse = client().prepareBulk().add(client().prepareUpdate("alias1", "type", "id").setDoc("foo", "updated")).get()__        assertFalse(bulkResponse.buildFailureMessage(), bulkResponse.hasFailures())__        assertThat(client().prepareGet("index3", "type", "id").setRouting("1").get().getSource().get("foo"), equalTo("updated"))__        bulkResponse = client().prepareBulk().add(client().prepareDelete("alias1", "type", "id")).get()__        assertFalse(bulkResponse.buildFailureMessage(), bulkResponse.hasFailures())__        assertFalse(client().prepareGet("index3", "type", "id").setRouting("1").get().isExists())__    };this,tests,that,the,link,transport,bulk,action,evaluates,alias,routing,values,correctly,when,dealing,with,an,alias,pointing,to,multiple,indices,while,a,write,index,exits;public,void,test,bulk,with,write,index,and,routing,map,string,integer,two,shards,settings,collections,singleton,map,index,meta,data,2,client,admin,indices,prepare,create,index1,add,alias,new,alias,alias1,index,routing,0,set,settings,two,shards,settings,get,client,admin,indices,prepare,create,index2,add,alias,new,alias,alias1,index,routing,0,write,index,random,from,false,null,set,settings,two,shards,settings,get,client,admin,indices,prepare,create,index3,add,alias,new,alias,alias1,index,routing,1,write,index,true,set,settings,two,shards,settings,get,index,request,index,request,with,alias,new,index,request,alias1,type,id,if,random,boolean,index,request,with,alias,routing,1,index,request,with,alias,source,collections,singleton,map,foo,baz,bulk,response,bulk,response,client,prepare,bulk,add,index,request,with,alias,get,assert,that,bulk,response,get,items,0,get,response,get,index,equal,to,index3,assert,that,bulk,response,get,items,0,get,response,get,shard,id,get,id,equal,to,0,assert,that,bulk,response,get,items,0,get,response,get,version,equal,to,1l,assert,that,bulk,response,get,items,0,get,response,status,equal,to,rest,status,created,assert,that,client,prepare,get,index3,type,id,set,routing,1,get,get,source,get,foo,equal,to,baz,bulk,response,client,prepare,bulk,add,client,prepare,update,alias1,type,id,set,doc,foo,updated,get,assert,false,bulk,response,build,failure,message,bulk,response,has,failures,assert,that,client,prepare,get,index3,type,id,set,routing,1,get,get,source,get,foo,equal,to,updated,bulk,response,client,prepare,bulk,add,client,prepare,delete,alias1,type,id,get,assert,false,bulk,response,build,failure,message,bulk,response,has,failures,assert,false,client,prepare,get,index3,type,id,set,routing,1,get,is,exists
