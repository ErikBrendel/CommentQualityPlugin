commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected Collection<Class<? extends Plugin>> nodePlugins() {     return Collections.singleton(InternalSettingsPlugin.class). }
false;public;0;33;;public void testSimple() throws Exception {     Client client = client().     CreateIndexResponse response1 = client.admin().indices().prepareCreate("test1").addMapping("type1", jsonBuilder().startObject().startObject("type1").endObject().endObject()).execute().actionGet().     CreateIndexResponse response2 = client.admin().indices().prepareCreate("test2").addMapping("type2", jsonBuilder().startObject().startObject("type2").endObject().endObject()).execute().actionGet().     client.admin().indices().prepareAliases().addAlias("test1", "alias1").execute().actionGet().     assertAcked(response1).     assertAcked(response2).     TypesExistsResponse response = client.admin().indices().prepareTypesExists("test1").setTypes("type1").execute().actionGet().     assertThat(response.isExists(), equalTo(true)).     response = client.admin().indices().prepareTypesExists("test1").setTypes("type2").execute().actionGet().     assertThat(response.isExists(), equalTo(false)).     try {         client.admin().indices().prepareTypesExists("notExist").setTypes("type1").execute().actionGet().         fail("Exception should have been thrown").     } catch (IndexNotFoundException e) {     }     try {         client.admin().indices().prepareTypesExists("notExist").setTypes("type0").execute().actionGet().         fail("Exception should have been thrown").     } catch (IndexNotFoundException e) {     }     response = client.admin().indices().prepareTypesExists("alias1").setTypes("type1").execute().actionGet().     assertThat(response.isExists(), equalTo(true)).     response = client.admin().indices().prepareTypesExists("*").setTypes("type1").execute().actionGet().     assertThat(response.isExists(), equalTo(false)).     response = client.admin().indices().prepareTypesExists("test1", "test2").setTypes("type1").execute().actionGet().     assertThat(response.isExists(), equalTo(false)).     response = client.admin().indices().prepareTypesExists("test1", "test2").setTypes("type2").execute().actionGet().     assertThat(response.isExists(), equalTo(false)). }
false;public;0;23;;public void testTypesExistsWithBlocks() throws IOException {     assertAcked(prepareCreate("ro").addMapping("type1", jsonBuilder().startObject().startObject("type1").endObject().endObject())).     ensureGreen("ro").     // Request is not blocked     for (String block : Arrays.asList(SETTING_BLOCKS_READ, SETTING_BLOCKS_WRITE, SETTING_READ_ONLY)) {         try {             enableIndexBlock("ro", block).             assertThat(client().admin().indices().prepareTypesExists("ro").setTypes("type1").execute().actionGet().isExists(), equalTo(true)).         } finally {             disableIndexBlock("ro", block).         }     }     // Request is blocked     try {         enableIndexBlock("ro", IndexMetaData.SETTING_BLOCKS_METADATA).         assertBlocked(client().admin().indices().prepareTypesExists("ro").setTypes("type1")).     } finally {         disableIndexBlock("ro", IndexMetaData.SETTING_BLOCKS_METADATA).     } }
