commented;modifiers;parameterAmount;loc;comment;code
false;public;0;18;;public void testVerbosity() throws Exception {     MockTerminal terminal = new MockTerminal().     terminal.setVerbosity(Terminal.Verbosity.SILENT).     assertPrinted(terminal, Terminal.Verbosity.SILENT, "text").     assertNotPrinted(terminal, Terminal.Verbosity.NORMAL, "text").     assertNotPrinted(terminal, Terminal.Verbosity.VERBOSE, "text").     terminal = new MockTerminal().     assertPrinted(terminal, Terminal.Verbosity.SILENT, "text").     assertPrinted(terminal, Terminal.Verbosity.NORMAL, "text").     assertNotPrinted(terminal, Terminal.Verbosity.VERBOSE, "text").     terminal = new MockTerminal().     terminal.setVerbosity(Terminal.Verbosity.VERBOSE).     assertPrinted(terminal, Terminal.Verbosity.SILENT, "text").     assertPrinted(terminal, Terminal.Verbosity.NORMAL, "text").     assertPrinted(terminal, Terminal.Verbosity.VERBOSE, "text"). }
false;public;0;4;;public void testEscaping() throws Exception {     MockTerminal terminal = new MockTerminal().     assertPrinted(terminal, Terminal.Verbosity.NORMAL, "This message contains percent like %20n"). }
false;public;0;9;;public void testPromptYesNoDefault() throws Exception {     MockTerminal terminal = new MockTerminal().     terminal.addTextInput("").     assertTrue(terminal.promptYesNo("Answer?", true)).     terminal.addTextInput("").     assertFalse(terminal.promptYesNo("Answer?", false)).     terminal.addTextInput(null).     assertFalse(terminal.promptYesNo("Answer?", false)). }
false;public;0;6;;public void testPromptYesNoReprompt() throws Exception {     MockTerminal terminal = new MockTerminal().     terminal.addTextInput("blah").     terminal.addTextInput("y").     assertTrue(terminal.promptYesNo("Answer? [Y/n]\nDid not understand answer 'blah'\nAnswer? [Y/n]", true)). }
false;public;0;11;;public void testPromptYesNoCase() throws Exception {     MockTerminal terminal = new MockTerminal().     terminal.addTextInput("Y").     assertTrue(terminal.promptYesNo("Answer?", false)).     terminal.addTextInput("y").     assertTrue(terminal.promptYesNo("Answer?", false)).     terminal.addTextInput("N").     assertFalse(terminal.promptYesNo("Answer?", true)).     terminal.addTextInput("n").     assertFalse(terminal.promptYesNo("Answer?", true)). }
false;private;3;6;;private void assertPrinted(MockTerminal logTerminal, Terminal.Verbosity verbosity, String text) throws Exception {     logTerminal.println(verbosity, text).     String output = logTerminal.getOutput().     assertTrue(output, output.contains(text)).     logTerminal.reset(). }
false;private;3;5;;private void assertNotPrinted(MockTerminal logTerminal, Terminal.Verbosity verbosity, String text) throws Exception {     logTerminal.println(verbosity, text).     String output = logTerminal.getOutput().     assertTrue(output, output.isEmpty()). }
