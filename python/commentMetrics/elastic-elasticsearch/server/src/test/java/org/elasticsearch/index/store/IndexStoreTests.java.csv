commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;public void testStoreDirectory() throws IOException {     Index index = new Index("foo", "fooUUID").     final Path tempDir = createTempDir().resolve(index.getUUID()).resolve("0").     // default     doTestStoreDirectory(index, tempDir, null, IndexModule.Type.FS).     // explicit directory impls     for (IndexModule.Type type : IndexModule.Type.values()) {         doTestStoreDirectory(index, tempDir, type.name().toLowerCase(Locale.ROOT), type).     } }
false;private;4;37;;private void doTestStoreDirectory(Index index, Path tempDir, String typeSettingValue, IndexModule.Type type) throws IOException {     Settings.Builder settingsBuilder = Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT).     if (typeSettingValue != null) {         settingsBuilder.put(IndexModule.INDEX_STORE_TYPE_SETTING.getKey(), typeSettingValue).     }     Settings settings = settingsBuilder.build().     IndexSettings indexSettings = IndexSettingsModule.newIndexSettings("foo", settings).     FsDirectoryService service = new FsDirectoryService(indexSettings, new ShardPath(false, tempDir, tempDir, new ShardId(index, 0))).     try (Directory directory = service.newFSDirectory(tempDir, NoLockFactory.INSTANCE)) {         switch(type) {             case HYBRIDFS:                 assertHybridDirectory(directory).                 break.             case NIOFS:                 assertTrue(type + " " + directory.toString(), directory instanceof NIOFSDirectory).                 break.             case MMAPFS:                 assertTrue(type + " " + directory.toString(), directory instanceof MMapDirectory).                 break.             case SIMPLEFS:                 assertTrue(type + " " + directory.toString(), directory instanceof SimpleFSDirectory).                 break.             case FS:                 if (Constants.JRE_IS_64BIT && MMapDirectory.UNMAP_SUPPORTED) {                     assertHybridDirectory(directory).                 } else if (Constants.WINDOWS) {                     assertTrue(directory.toString(), directory instanceof SimpleFSDirectory).                 } else {                     assertTrue(directory.toString(), directory instanceof NIOFSDirectory).                 }                 break.             default:                 fail().         }     } }
false;private;1;5;;private void assertHybridDirectory(Directory directory) {     assertTrue(directory.toString(), directory instanceof FsDirectoryService.HybridDirectory).     Directory randomAccessDirectory = ((FsDirectoryService.HybridDirectory) directory).getRandomAccessDirectory().     assertTrue("randomAccessDirectory:  " + randomAccessDirectory.toString(), randomAccessDirectory instanceof MMapDirectory). }
