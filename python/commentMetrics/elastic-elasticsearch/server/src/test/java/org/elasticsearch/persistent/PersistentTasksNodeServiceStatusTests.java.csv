commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected Status createTestInstance() {     return new Status(randomFrom(AllocatedPersistentTask.State.values())). }
false;protected;0;4;;@Override protected Writeable.Reader<Status> instanceReader() {     return Status::new. }
false;public;0;3;;public void testToString() {     assertThat(createTestInstance().toString(), containsString("state")). }
