# id;timestamp;commentText;codeText;commentWords;codeWords
RestHttpResponseHeadersTests -> private List<String> getMethodNameStringArray(List<RestRequest.Method> methodArray);1524684173;Convert an RestRequest.Method array to a String array, so it can be_compared with the expected 'Allow' header String array.;private List<String> getMethodNameStringArray(List<RestRequest.Method> methodArray) {_        return methodArray.stream().map(method -> method.toString()).collect(Collectors.toList())__    };convert,an,rest,request,method,array,to,a,string,array,so,it,can,be,compared,with,the,expected,allow,header,string,array;private,list,string,get,method,name,string,array,list,rest,request,method,method,array,return,method,array,stream,map,method,method,to,string,collect,collectors,to,list
RestHttpResponseHeadersTests -> private List<String> getMethodNameStringArray(List<RestRequest.Method> methodArray);1538067637;Convert an RestRequest.Method array to a String array, so it can be_compared with the expected 'Allow' header String array.;private List<String> getMethodNameStringArray(List<RestRequest.Method> methodArray) {_        return methodArray.stream().map(method -> method.toString()).collect(Collectors.toList())__    };convert,an,rest,request,method,array,to,a,string,array,so,it,can,be,compared,with,the,expected,allow,header,string,array;private,list,string,get,method,name,string,array,list,rest,request,method,method,array,return,method,array,stream,map,method,method,to,string,collect,collectors,to,list
RestHttpResponseHeadersTests -> private List<String> getMethodNameStringArray(List<RestRequest.Method> methodArray);1541092382;Convert an RestRequest.Method array to a String array, so it can be_compared with the expected 'Allow' header String array.;private List<String> getMethodNameStringArray(List<RestRequest.Method> methodArray) {_        return methodArray.stream().map(method -> method.toString()).collect(Collectors.toList())__    };convert,an,rest,request,method,array,to,a,string,array,so,it,can,be,compared,with,the,expected,allow,header,string,array;private,list,string,get,method,name,string,array,list,rest,request,method,method,array,return,method,array,stream,map,method,method,to,string,collect,collectors,to,list
RestHttpResponseHeadersTests -> public void testUnsupportedMethodResponseHttpHeader() throws Exception;1524684173;For requests to a valid REST endpoint using an unsupported HTTP method,_verify that a 405 HTTP response code is returned, and that the response_'Allow' header includes a list of valid HTTP methods for the endpoint_(see_<a href="https://tools.ietf.org/html/rfc2616#section-10.4.6">HTTP/1.1 -_10.4.6 - 405 Method Not Allowed</a>).;public void testUnsupportedMethodResponseHttpHeader() throws Exception {__        _        List<RestRequest.Method> validHttpMethodArray = new ArrayList<RestRequest.Method>(Arrays.asList(RestRequest.Method.values()))__        validHttpMethodArray.remove(RestRequest.Method.OPTIONS)__        Collections.shuffle(validHttpMethodArray, random())___        _        validHttpMethodArray = validHttpMethodArray.subList(0, randomIntBetween(1, validHttpMethodArray.size() - 1))__        assert(validHttpMethodArray.size() > 0)__        assert(validHttpMethodArray.size() < RestRequest.Method.values().length)___        _        List<RestRequest.Method> invalidHttpMethodArray = new ArrayList<RestRequest.Method>(Arrays.asList(RestRequest.Method.values()))__        invalidHttpMethodArray.removeAll(validHttpMethodArray)__        _        invalidHttpMethodArray.remove(RestRequest.Method.OPTIONS)__        assert(invalidHttpMethodArray.size() > 0)___        _        CircuitBreakerService circuitBreakerService = new HierarchyCircuitBreakerService(Settings.EMPTY,_                new ClusterSettings(Settings.EMPTY, ClusterSettings.BUILT_IN_CLUSTER_SETTINGS))___        final Settings settings = Settings.EMPTY__        UsageService usageService = new UsageService(settings)__        RestController restController = new RestController(settings, Collections.emptySet(),_                null, null, circuitBreakerService, usageService)___        _        RestHandler restHandler = new RestHandler() {__            @Override_            public void handleRequest(RestRequest request, RestChannel channel, NodeClient client) throws Exception {_                channel.sendResponse(new TestResponse())__            }__        }___        _        for (RestRequest.Method method : validHttpMethodArray) {_            restController.registerHandler(method, "/", restHandler)__        }__        _        FakeRestRequest.Builder fakeRestRequestBuilder = new FakeRestRequest.Builder(xContentRegistry())__        fakeRestRequestBuilder.withMethod(invalidHttpMethodArray.get(0))__        RestRequest restRequest = fakeRestRequestBuilder.build()___        _        FakeRestChannel restChannel = new FakeRestChannel(restRequest, false, 1)__        NodeClient client = mock(NodeClient.class)__        restController.dispatchRequest(restRequest, restChannel, new ThreadContext(Settings.EMPTY))__        assertThat(restChannel.capturedResponse().status().getStatus(), is(405))___        _        assertThat(restChannel.capturedResponse().getHeaders().get("Allow"), notNullValue())__        String responseAllowHeader = restChannel.capturedResponse().getHeaders().get("Allow").get(0)__        List<String> responseAllowHeaderArray = Arrays.asList(responseAllowHeader.split(","))__        assertThat(responseAllowHeaderArray.size(), is(validHttpMethodArray.size()))__        assertThat(responseAllowHeaderArray, containsInAnyOrder(getMethodNameStringArray(validHttpMethodArray).toArray()))__    };for,requests,to,a,valid,rest,endpoint,using,an,unsupported,http,method,verify,that,a,405,http,response,code,is,returned,and,that,the,response,allow,header,includes,a,list,of,valid,http,methods,for,the,endpoint,see,a,href,https,tools,ietf,org,html,rfc2616,section,10,4,6,http,1,1,10,4,6,405,method,not,allowed,a;public,void,test,unsupported,method,response,http,header,throws,exception,list,rest,request,method,valid,http,method,array,new,array,list,rest,request,method,arrays,as,list,rest,request,method,values,valid,http,method,array,remove,rest,request,method,options,collections,shuffle,valid,http,method,array,random,valid,http,method,array,valid,http,method,array,sub,list,0,random,int,between,1,valid,http,method,array,size,1,assert,valid,http,method,array,size,0,assert,valid,http,method,array,size,rest,request,method,values,length,list,rest,request,method,invalid,http,method,array,new,array,list,rest,request,method,arrays,as,list,rest,request,method,values,invalid,http,method,array,remove,all,valid,http,method,array,invalid,http,method,array,remove,rest,request,method,options,assert,invalid,http,method,array,size,0,circuit,breaker,service,circuit,breaker,service,new,hierarchy,circuit,breaker,service,settings,empty,new,cluster,settings,settings,empty,cluster,settings,final,settings,settings,settings,empty,usage,service,usage,service,new,usage,service,settings,rest,controller,rest,controller,new,rest,controller,settings,collections,empty,set,null,null,circuit,breaker,service,usage,service,rest,handler,rest,handler,new,rest,handler,override,public,void,handle,request,rest,request,request,rest,channel,channel,node,client,client,throws,exception,channel,send,response,new,test,response,for,rest,request,method,method,valid,http,method,array,rest,controller,register,handler,method,rest,handler,fake,rest,request,builder,fake,rest,request,builder,new,fake,rest,request,builder,x,content,registry,fake,rest,request,builder,with,method,invalid,http,method,array,get,0,rest,request,rest,request,fake,rest,request,builder,build,fake,rest,channel,rest,channel,new,fake,rest,channel,rest,request,false,1,node,client,client,mock,node,client,class,rest,controller,dispatch,request,rest,request,rest,channel,new,thread,context,settings,empty,assert,that,rest,channel,captured,response,status,get,status,is,405,assert,that,rest,channel,captured,response,get,headers,get,allow,not,null,value,string,response,allow,header,rest,channel,captured,response,get,headers,get,allow,get,0,list,string,response,allow,header,array,arrays,as,list,response,allow,header,split,assert,that,response,allow,header,array,size,is,valid,http,method,array,size,assert,that,response,allow,header,array,contains,in,any,order,get,method,name,string,array,valid,http,method,array,to,array
RestHttpResponseHeadersTests -> public void testUnsupportedMethodResponseHttpHeader() throws Exception;1538067637;For requests to a valid REST endpoint using an unsupported HTTP method,_verify that a 405 HTTP response code is returned, and that the response_'Allow' header includes a list of valid HTTP methods for the endpoint_(see_<a href="https://tools.ietf.org/html/rfc2616#section-10.4.6">HTTP/1.1 -_10.4.6 - 405 Method Not Allowed</a>).;public void testUnsupportedMethodResponseHttpHeader() throws Exception {__        _        List<RestRequest.Method> validHttpMethodArray = new ArrayList<RestRequest.Method>(Arrays.asList(RestRequest.Method.values()))__        validHttpMethodArray.remove(RestRequest.Method.OPTIONS)__        Collections.shuffle(validHttpMethodArray, random())___        _        validHttpMethodArray = validHttpMethodArray.subList(0, randomIntBetween(1, validHttpMethodArray.size() - 1))__        assert(validHttpMethodArray.size() > 0)__        assert(validHttpMethodArray.size() < RestRequest.Method.values().length)___        _        List<RestRequest.Method> invalidHttpMethodArray = new ArrayList<RestRequest.Method>(Arrays.asList(RestRequest.Method.values()))__        invalidHttpMethodArray.removeAll(validHttpMethodArray)__        _        invalidHttpMethodArray.remove(RestRequest.Method.OPTIONS)__        assert(invalidHttpMethodArray.size() > 0)___        _        CircuitBreakerService circuitBreakerService = new HierarchyCircuitBreakerService(Settings.EMPTY,_                new ClusterSettings(Settings.EMPTY, ClusterSettings.BUILT_IN_CLUSTER_SETTINGS))___        final Settings settings = Settings.EMPTY__        UsageService usageService = new UsageService(settings)__        RestController restController = new RestController(settings, Collections.emptySet(),_                null, null, circuitBreakerService, usageService)___        _        RestHandler restHandler = new RestHandler() {__            @Override_            public void handleRequest(RestRequest request, RestChannel channel, NodeClient client) throws Exception {_                channel.sendResponse(new TestResponse())__            }__        }___        _        for (RestRequest.Method method : validHttpMethodArray) {_            restController.registerHandler(method, "/", restHandler)__        }__        _        FakeRestRequest.Builder fakeRestRequestBuilder = new FakeRestRequest.Builder(xContentRegistry())__        fakeRestRequestBuilder.withMethod(invalidHttpMethodArray.get(0))__        RestRequest restRequest = fakeRestRequestBuilder.build()___        _        FakeRestChannel restChannel = new FakeRestChannel(restRequest, false, 1)__        restController.dispatchRequest(restRequest, restChannel, new ThreadContext(Settings.EMPTY))__        assertThat(restChannel.capturedResponse().status().getStatus(), is(405))___        _        assertThat(restChannel.capturedResponse().getHeaders().get("Allow"), notNullValue())__        String responseAllowHeader = restChannel.capturedResponse().getHeaders().get("Allow").get(0)__        List<String> responseAllowHeaderArray = Arrays.asList(responseAllowHeader.split(","))__        assertThat(responseAllowHeaderArray.size(), is(validHttpMethodArray.size()))__        assertThat(responseAllowHeaderArray, containsInAnyOrder(getMethodNameStringArray(validHttpMethodArray).toArray()))__    };for,requests,to,a,valid,rest,endpoint,using,an,unsupported,http,method,verify,that,a,405,http,response,code,is,returned,and,that,the,response,allow,header,includes,a,list,of,valid,http,methods,for,the,endpoint,see,a,href,https,tools,ietf,org,html,rfc2616,section,10,4,6,http,1,1,10,4,6,405,method,not,allowed,a;public,void,test,unsupported,method,response,http,header,throws,exception,list,rest,request,method,valid,http,method,array,new,array,list,rest,request,method,arrays,as,list,rest,request,method,values,valid,http,method,array,remove,rest,request,method,options,collections,shuffle,valid,http,method,array,random,valid,http,method,array,valid,http,method,array,sub,list,0,random,int,between,1,valid,http,method,array,size,1,assert,valid,http,method,array,size,0,assert,valid,http,method,array,size,rest,request,method,values,length,list,rest,request,method,invalid,http,method,array,new,array,list,rest,request,method,arrays,as,list,rest,request,method,values,invalid,http,method,array,remove,all,valid,http,method,array,invalid,http,method,array,remove,rest,request,method,options,assert,invalid,http,method,array,size,0,circuit,breaker,service,circuit,breaker,service,new,hierarchy,circuit,breaker,service,settings,empty,new,cluster,settings,settings,empty,cluster,settings,final,settings,settings,settings,empty,usage,service,usage,service,new,usage,service,settings,rest,controller,rest,controller,new,rest,controller,settings,collections,empty,set,null,null,circuit,breaker,service,usage,service,rest,handler,rest,handler,new,rest,handler,override,public,void,handle,request,rest,request,request,rest,channel,channel,node,client,client,throws,exception,channel,send,response,new,test,response,for,rest,request,method,method,valid,http,method,array,rest,controller,register,handler,method,rest,handler,fake,rest,request,builder,fake,rest,request,builder,new,fake,rest,request,builder,x,content,registry,fake,rest,request,builder,with,method,invalid,http,method,array,get,0,rest,request,rest,request,fake,rest,request,builder,build,fake,rest,channel,rest,channel,new,fake,rest,channel,rest,request,false,1,rest,controller,dispatch,request,rest,request,rest,channel,new,thread,context,settings,empty,assert,that,rest,channel,captured,response,status,get,status,is,405,assert,that,rest,channel,captured,response,get,headers,get,allow,not,null,value,string,response,allow,header,rest,channel,captured,response,get,headers,get,allow,get,0,list,string,response,allow,header,array,arrays,as,list,response,allow,header,split,assert,that,response,allow,header,array,size,is,valid,http,method,array,size,assert,that,response,allow,header,array,contains,in,any,order,get,method,name,string,array,valid,http,method,array,to,array
RestHttpResponseHeadersTests -> public void testUnsupportedMethodResponseHttpHeader() throws Exception;1541092382;For requests to a valid REST endpoint using an unsupported HTTP method,_verify that a 405 HTTP response code is returned, and that the response_'Allow' header includes a list of valid HTTP methods for the endpoint_(see_<a href="https://tools.ietf.org/html/rfc2616#section-10.4.6">HTTP/1.1 -_10.4.6 - 405 Method Not Allowed</a>).;public void testUnsupportedMethodResponseHttpHeader() throws Exception {__        _        List<RestRequest.Method> validHttpMethodArray = new ArrayList<RestRequest.Method>(Arrays.asList(RestRequest.Method.values()))__        validHttpMethodArray.remove(RestRequest.Method.OPTIONS)__        Collections.shuffle(validHttpMethodArray, random())___        _        validHttpMethodArray = validHttpMethodArray.subList(0, randomIntBetween(1, validHttpMethodArray.size() - 1))__        assert(validHttpMethodArray.size() > 0)__        assert(validHttpMethodArray.size() < RestRequest.Method.values().length)___        _        List<RestRequest.Method> invalidHttpMethodArray = new ArrayList<RestRequest.Method>(Arrays.asList(RestRequest.Method.values()))__        invalidHttpMethodArray.removeAll(validHttpMethodArray)__        _        invalidHttpMethodArray.remove(RestRequest.Method.OPTIONS)__        assert(invalidHttpMethodArray.size() > 0)___        _        CircuitBreakerService circuitBreakerService = new HierarchyCircuitBreakerService(Settings.EMPTY,_                new ClusterSettings(Settings.EMPTY, ClusterSettings.BUILT_IN_CLUSTER_SETTINGS))___        final Settings settings = Settings.EMPTY__        UsageService usageService = new UsageService()__        RestController restController = new RestController(Collections.emptySet(),_                null, null, circuitBreakerService, usageService)___        _        RestHandler restHandler = new RestHandler() {__            @Override_            public void handleRequest(RestRequest request, RestChannel channel, NodeClient client) throws Exception {_                channel.sendResponse(new TestResponse())__            }__        }___        _        for (RestRequest.Method method : validHttpMethodArray) {_            restController.registerHandler(method, "/", restHandler)__        }__        _        FakeRestRequest.Builder fakeRestRequestBuilder = new FakeRestRequest.Builder(xContentRegistry())__        fakeRestRequestBuilder.withMethod(invalidHttpMethodArray.get(0))__        RestRequest restRequest = fakeRestRequestBuilder.build()___        _        FakeRestChannel restChannel = new FakeRestChannel(restRequest, false, 1)__        restController.dispatchRequest(restRequest, restChannel, new ThreadContext(Settings.EMPTY))__        assertThat(restChannel.capturedResponse().status().getStatus(), is(405))___        _        assertThat(restChannel.capturedResponse().getHeaders().get("Allow"), notNullValue())__        String responseAllowHeader = restChannel.capturedResponse().getHeaders().get("Allow").get(0)__        List<String> responseAllowHeaderArray = Arrays.asList(responseAllowHeader.split(","))__        assertThat(responseAllowHeaderArray.size(), is(validHttpMethodArray.size()))__        assertThat(responseAllowHeaderArray, containsInAnyOrder(getMethodNameStringArray(validHttpMethodArray).toArray()))__    };for,requests,to,a,valid,rest,endpoint,using,an,unsupported,http,method,verify,that,a,405,http,response,code,is,returned,and,that,the,response,allow,header,includes,a,list,of,valid,http,methods,for,the,endpoint,see,a,href,https,tools,ietf,org,html,rfc2616,section,10,4,6,http,1,1,10,4,6,405,method,not,allowed,a;public,void,test,unsupported,method,response,http,header,throws,exception,list,rest,request,method,valid,http,method,array,new,array,list,rest,request,method,arrays,as,list,rest,request,method,values,valid,http,method,array,remove,rest,request,method,options,collections,shuffle,valid,http,method,array,random,valid,http,method,array,valid,http,method,array,sub,list,0,random,int,between,1,valid,http,method,array,size,1,assert,valid,http,method,array,size,0,assert,valid,http,method,array,size,rest,request,method,values,length,list,rest,request,method,invalid,http,method,array,new,array,list,rest,request,method,arrays,as,list,rest,request,method,values,invalid,http,method,array,remove,all,valid,http,method,array,invalid,http,method,array,remove,rest,request,method,options,assert,invalid,http,method,array,size,0,circuit,breaker,service,circuit,breaker,service,new,hierarchy,circuit,breaker,service,settings,empty,new,cluster,settings,settings,empty,cluster,settings,final,settings,settings,settings,empty,usage,service,usage,service,new,usage,service,rest,controller,rest,controller,new,rest,controller,collections,empty,set,null,null,circuit,breaker,service,usage,service,rest,handler,rest,handler,new,rest,handler,override,public,void,handle,request,rest,request,request,rest,channel,channel,node,client,client,throws,exception,channel,send,response,new,test,response,for,rest,request,method,method,valid,http,method,array,rest,controller,register,handler,method,rest,handler,fake,rest,request,builder,fake,rest,request,builder,new,fake,rest,request,builder,x,content,registry,fake,rest,request,builder,with,method,invalid,http,method,array,get,0,rest,request,rest,request,fake,rest,request,builder,build,fake,rest,channel,rest,channel,new,fake,rest,channel,rest,request,false,1,rest,controller,dispatch,request,rest,request,rest,channel,new,thread,context,settings,empty,assert,that,rest,channel,captured,response,status,get,status,is,405,assert,that,rest,channel,captured,response,get,headers,get,allow,not,null,value,string,response,allow,header,rest,channel,captured,response,get,headers,get,allow,get,0,list,string,response,allow,header,array,arrays,as,list,response,allow,header,split,assert,that,response,allow,header,array,size,is,valid,http,method,array,size,assert,that,response,allow,header,array,contains,in,any,order,get,method,name,string,array,valid,http,method,array,to,array
