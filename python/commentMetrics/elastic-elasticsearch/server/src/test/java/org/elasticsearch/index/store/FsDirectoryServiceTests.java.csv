commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;public void testPreload() throws IOException {     doTestPreload().     doTestPreload("nvd", "dvd", "tim").     doTestPreload("*"). }
false;private;1;27;;private void doTestPreload(String... preload) throws IOException {     Settings build = Settings.builder().put(IndexModule.INDEX_STORE_TYPE_SETTING.getKey(), "mmapfs").putList(IndexModule.INDEX_STORE_PRE_LOAD_SETTING.getKey(), preload).build().     IndexSettings settings = IndexSettingsModule.newIndexSettings("foo", build).     Path tempDir = createTempDir().resolve(settings.getUUID()).resolve("0").     Files.createDirectories(tempDir).     ShardPath path = new ShardPath(false, tempDir, tempDir, new ShardId(settings.getIndex(), 0)).     FsDirectoryService fsDirectoryService = new FsDirectoryService(settings, path).     Directory directory = fsDirectoryService.newDirectory().     assertFalse(directory instanceof SleepingLockWrapper).     if (preload.length == 0) {         assertTrue(directory.toString(), directory instanceof MMapDirectory).         assertFalse(((MMapDirectory) directory).getPreload()).     } else if (Arrays.asList(preload).contains("*")) {         assertTrue(directory.toString(), directory instanceof MMapDirectory).         assertTrue(((MMapDirectory) directory).getPreload()).     } else {         assertTrue(directory.toString(), directory instanceof FileSwitchDirectory).         FileSwitchDirectory fsd = (FileSwitchDirectory) directory.         assertTrue(fsd.getPrimaryDir() instanceof MMapDirectory).         assertTrue(((MMapDirectory) fsd.getPrimaryDir()).getPreload()).         assertTrue(fsd.getSecondaryDir() instanceof MMapDirectory).         assertFalse(((MMapDirectory) fsd.getSecondaryDir()).getPreload()).     } }
