commented;modifiers;parameterAmount;loc;comment;code
false;public;0;24;;public void testFailIfFieldMappingNotFound() {     QueryShardContext context = createQueryShardContext(IndexMetaData.INDEX_UUID_NA_VALUE, null).     context.setAllowUnmappedFields(false).     MappedFieldType fieldType = new TextFieldMapper.TextFieldType().     MappedFieldType result = context.failIfFieldMappingNotFound("name", fieldType).     assertThat(result, sameInstance(fieldType)).     QueryShardException e = expectThrows(QueryShardException.class, () -> context.failIfFieldMappingNotFound("name", null)).     assertEquals("No field mapping can be found for the field with name [name]", e.getMessage()).     context.setAllowUnmappedFields(true).     result = context.failIfFieldMappingNotFound("name", fieldType).     assertThat(result, sameInstance(fieldType)).     result = context.failIfFieldMappingNotFound("name", null).     assertThat(result, nullValue()).     context.setAllowUnmappedFields(false).     context.setMapUnmappedFieldAsString(true).     result = context.failIfFieldMappingNotFound("name", fieldType).     assertThat(result, sameInstance(fieldType)).     result = context.failIfFieldMappingNotFound("name", null).     assertThat(result, notNullValue()).     assertThat(result, instanceOf(TextFieldMapper.TextFieldType.class)).     assertThat(result.name(), equalTo("name")). }
false;public;0;28;;public void testClusterAlias() throws IOException {     final String clusterAlias = randomBoolean() ? null : "remote_cluster".     QueryShardContext context = createQueryShardContext(IndexMetaData.INDEX_UUID_NA_VALUE, clusterAlias).     Mapper.BuilderContext ctx = new Mapper.BuilderContext(context.getIndexSettings().getSettings(), new ContentPath()).     IndexFieldMapper mapper = new IndexFieldMapper.Builder(null).build(ctx).     IndexFieldData<?> forField = context.getForField(mapper.fieldType()).     String expected = clusterAlias == null ? context.getIndexSettings().getIndexMetaData().getIndex().getName() : clusterAlias + ":" + context.getIndexSettings().getIndex().getName().     assertEquals(expected, ((AbstractAtomicOrdinalsFieldData) forField.load(null)).getOrdinalsValues().lookupOrd(0).utf8ToString()).     Query query = mapper.fieldType().termQuery("index", context).     if (clusterAlias == null) {         assertEquals(Queries.newMatchAllQuery(), query).     } else {         assertThat(query, Matchers.instanceOf(MatchNoDocsQuery.class)).     }     query = mapper.fieldType().termQuery("remote_cluster:index", context).     if (clusterAlias != null) {         assertEquals(Queries.newMatchAllQuery(), query).     } else {         assertThat(query, Matchers.instanceOf(MatchNoDocsQuery.class)).     }     query = mapper.fieldType().termQuery("something:else", context).     assertThat(query, Matchers.instanceOf(MatchNoDocsQuery.class)). }
false;public;0;7;;public void testGetFullyQualifiedIndex() {     String clusterAlias = randomAlphaOfLengthBetween(5, 10).     String indexUuid = randomAlphaOfLengthBetween(3, 10).     QueryShardContext shardContext = createQueryShardContext(indexUuid, clusterAlias).     assertThat(shardContext.getFullyQualifiedIndex().getName(), equalTo(clusterAlias + ":index")).     assertThat(shardContext.getFullyQualifiedIndex().getUUID(), equalTo(indexUuid)). }
false;public,static;2;20;;public static QueryShardContext createQueryShardContext(String indexUuid, String clusterAlias) {     IndexMetaData.Builder indexMetadataBuilder = new IndexMetaData.Builder("index").     indexMetadataBuilder.settings(Settings.builder().put("index.version.created", Version.CURRENT).put("index.number_of_shards", 1).put("index.number_of_replicas", 1).put(IndexMetaData.SETTING_INDEX_UUID, indexUuid)).     IndexMetaData indexMetaData = indexMetadataBuilder.build().     IndexSettings indexSettings = new IndexSettings(indexMetaData, Settings.EMPTY).     MapperService mapperService = mock(MapperService.class).     when(mapperService.getIndexSettings()).thenReturn(indexSettings).     when(mapperService.index()).thenReturn(indexMetaData.getIndex()).     final long nowInMillis = randomNonNegativeLong().     return new QueryShardContext(0, indexSettings, null, (mappedFieldType, idxName) -> mappedFieldType.fielddataBuilder(idxName).build(indexSettings, mappedFieldType, null, null, null), mapperService, null, null, NamedXContentRegistry.EMPTY, new NamedWriteableRegistry(Collections.emptyList()), null, null, () -> nowInMillis, clusterAlias). }
