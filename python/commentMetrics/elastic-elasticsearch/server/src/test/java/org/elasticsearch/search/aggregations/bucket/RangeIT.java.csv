# id;timestamp;commentText;codeText;commentWords;codeWords
RangeIT -> public void testDontCacheScripts() throws Exception;1524684173;Make sure that a request using a script does not get cached and a request_not using a script does get cached.;public void testDontCacheScripts() throws Exception {_        assertAcked(prepareCreate("cache_test_idx").addMapping("type", "i", "type=integer")_                .setSettings(Settings.builder().put("requests.cache.enable", true).put("number_of_shards", 1).put("number_of_replicas", 1))_                .get())__        indexRandom(true,_                client().prepareIndex("cache_test_idx", "type", "1").setSource(jsonBuilder().startObject().field("i", 1).endObject()),_                client().prepareIndex("cache_test_idx", "type", "2").setSource(jsonBuilder().startObject().field("i", 2).endObject()))___        _        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getHitCount(), equalTo(0L))__        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getMissCount(), equalTo(0L))___        _        Map<String, Object> params = new HashMap<>()__        params.put("fieldname", "date")__        SearchResponse r = client().prepareSearch("cache_test_idx").setSize(0).addAggregation(_                range("foo").field("i").script(_                    new Script(ScriptType.INLINE, CustomScriptPlugin.NAME, "_value + 1", Collections.emptyMap())).addRange(0, 10))_                .get()__        assertSearchResponse(r)___        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getHitCount(), equalTo(0L))__        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getMissCount(), equalTo(0L))___        _        _        r = client().prepareSearch("cache_test_idx").setSize(0).addAggregation(range("foo").field("i").addRange(0, 10)).get()__        assertSearchResponse(r)___        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getHitCount(), equalTo(0L))__        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getMissCount(), equalTo(1L))__    };make,sure,that,a,request,using,a,script,does,not,get,cached,and,a,request,not,using,a,script,does,get,cached;public,void,test,dont,cache,scripts,throws,exception,assert,acked,prepare,create,add,mapping,type,i,type,integer,set,settings,settings,builder,put,requests,cache,enable,true,put,1,put,1,get,index,random,true,client,prepare,index,type,1,set,source,json,builder,start,object,field,i,1,end,object,client,prepare,index,type,2,set,source,json,builder,start,object,field,i,2,end,object,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,hit,count,equal,to,0l,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,miss,count,equal,to,0l,map,string,object,params,new,hash,map,params,put,fieldname,date,search,response,r,client,prepare,search,set,size,0,add,aggregation,range,foo,field,i,script,new,script,script,type,inline,custom,script,plugin,name,1,collections,empty,map,add,range,0,10,get,assert,search,response,r,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,hit,count,equal,to,0l,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,miss,count,equal,to,0l,r,client,prepare,search,set,size,0,add,aggregation,range,foo,field,i,add,range,0,10,get,assert,search,response,r,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,hit,count,equal,to,0l,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,miss,count,equal,to,1l
RangeIT -> public void testDontCacheScripts() throws Exception;1531937412;Make sure that a request using a script does not get cached and a request_not using a script does get cached.;public void testDontCacheScripts() throws Exception {_        assertAcked(prepareCreate("cache_test_idx").addMapping("type", "i", "type=integer")_                .setSettings(Settings.builder().put("requests.cache.enable", true).put("number_of_shards", 1).put("number_of_replicas", 1))_                .get())__        indexRandom(true,_                client().prepareIndex("cache_test_idx", "type", "1").setSource(jsonBuilder().startObject().field("i", 1).endObject()),_                client().prepareIndex("cache_test_idx", "type", "2").setSource(jsonBuilder().startObject().field("i", 2).endObject()))___        _        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getHitCount(), equalTo(0L))__        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getMissCount(), equalTo(0L))___        _        Map<String, Object> params = new HashMap<>()__        params.put("fieldname", "date")__        SearchResponse r = client().prepareSearch("cache_test_idx").setSize(0).addAggregation(_                range("foo").field("i").script(_                    new Script(ScriptType.INLINE, CustomScriptPlugin.NAME, "_value + 1", Collections.emptyMap())).addRange(0, 10))_                .get()__        assertSearchResponse(r)___        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getHitCount(), equalTo(0L))__        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getMissCount(), equalTo(0L))___        _        _        r = client().prepareSearch("cache_test_idx").setSize(0).addAggregation(range("foo").field("i").addRange(0, 10)).get()__        assertSearchResponse(r)___        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getHitCount(), equalTo(0L))__        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getMissCount(), equalTo(1L))__    };make,sure,that,a,request,using,a,script,does,not,get,cached,and,a,request,not,using,a,script,does,get,cached;public,void,test,dont,cache,scripts,throws,exception,assert,acked,prepare,create,add,mapping,type,i,type,integer,set,settings,settings,builder,put,requests,cache,enable,true,put,1,put,1,get,index,random,true,client,prepare,index,type,1,set,source,json,builder,start,object,field,i,1,end,object,client,prepare,index,type,2,set,source,json,builder,start,object,field,i,2,end,object,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,hit,count,equal,to,0l,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,miss,count,equal,to,0l,map,string,object,params,new,hash,map,params,put,fieldname,date,search,response,r,client,prepare,search,set,size,0,add,aggregation,range,foo,field,i,script,new,script,script,type,inline,custom,script,plugin,name,1,collections,empty,map,add,range,0,10,get,assert,search,response,r,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,hit,count,equal,to,0l,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,miss,count,equal,to,0l,r,client,prepare,search,set,size,0,add,aggregation,range,foo,field,i,add,range,0,10,get,assert,search,response,r,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,hit,count,equal,to,0l,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,miss,count,equal,to,1l
RangeIT -> public void testDontCacheScripts() throws Exception;1532353780;Make sure that a request using a script does not get cached and a request_not using a script does get cached.;public void testDontCacheScripts() throws Exception {_        assertAcked(prepareCreate("cache_test_idx").addMapping("type", "i", "type=integer")_                .setSettings(Settings.builder().put("requests.cache.enable", true).put("number_of_shards", 1).put("number_of_replicas", 1))_                .get())__        indexRandom(true,_                client().prepareIndex("cache_test_idx", "type", "1").setSource(jsonBuilder().startObject().field("i", 1).endObject()),_                client().prepareIndex("cache_test_idx", "type", "2").setSource(jsonBuilder().startObject().field("i", 2).endObject()))___        _        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getHitCount(), equalTo(0L))__        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getMissCount(), equalTo(0L))___        _        Map<String, Object> params = new HashMap<>()__        params.put("fieldname", "date")__        SearchResponse r = client().prepareSearch("cache_test_idx").setSize(0).addAggregation(_                range("foo").field("i").script(_                    new Script(ScriptType.INLINE, CustomScriptPlugin.NAME, "_value + 1", Collections.emptyMap())).addRange(0, 10))_                .get()__        assertSearchResponse(r)___        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getHitCount(), equalTo(0L))__        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getMissCount(), equalTo(0L))___        _        _        r = client().prepareSearch("cache_test_idx").setSize(0).addAggregation(range("foo").field("i").addRange(0, 10)).get()__        assertSearchResponse(r)___        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getHitCount(), equalTo(0L))__        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getMissCount(), equalTo(1L))__    };make,sure,that,a,request,using,a,script,does,not,get,cached,and,a,request,not,using,a,script,does,get,cached;public,void,test,dont,cache,scripts,throws,exception,assert,acked,prepare,create,add,mapping,type,i,type,integer,set,settings,settings,builder,put,requests,cache,enable,true,put,1,put,1,get,index,random,true,client,prepare,index,type,1,set,source,json,builder,start,object,field,i,1,end,object,client,prepare,index,type,2,set,source,json,builder,start,object,field,i,2,end,object,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,hit,count,equal,to,0l,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,miss,count,equal,to,0l,map,string,object,params,new,hash,map,params,put,fieldname,date,search,response,r,client,prepare,search,set,size,0,add,aggregation,range,foo,field,i,script,new,script,script,type,inline,custom,script,plugin,name,1,collections,empty,map,add,range,0,10,get,assert,search,response,r,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,hit,count,equal,to,0l,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,miss,count,equal,to,0l,r,client,prepare,search,set,size,0,add,aggregation,range,foo,field,i,add,range,0,10,get,assert,search,response,r,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,hit,count,equal,to,0l,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,miss,count,equal,to,1l
RangeIT -> public void testDontCacheScripts() throws Exception;1536314350;Make sure that a request using a script does not get cached and a request_not using a script does get cached.;public void testDontCacheScripts() throws Exception {_        assertAcked(prepareCreate("cache_test_idx").addMapping("type", "i", "type=integer")_                .setSettings(Settings.builder().put("requests.cache.enable", true).put("number_of_shards", 1).put("number_of_replicas", 1))_                .get())__        indexRandom(true,_                client().prepareIndex("cache_test_idx", "type", "1").setSource(jsonBuilder().startObject().field("i", 1).endObject()),_                client().prepareIndex("cache_test_idx", "type", "2").setSource(jsonBuilder().startObject().field("i", 2).endObject()))___        _        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getHitCount(), equalTo(0L))__        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getMissCount(), equalTo(0L))___        _        Map<String, Object> params = new HashMap<>()__        params.put("fieldname", "date")__        SearchResponse r = client().prepareSearch("cache_test_idx").setSize(0).addAggregation(_                range("foo").field("i").script(_                    new Script(ScriptType.INLINE, CustomScriptPlugin.NAME, "_value + 1", Collections.emptyMap())).addRange(0, 10))_                .get()__        assertSearchResponse(r)___        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getHitCount(), equalTo(0L))__        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getMissCount(), equalTo(0L))___        _        _        r = client().prepareSearch("cache_test_idx").setSize(0).addAggregation(range("foo").field("i").addRange(0, 10)).get()__        assertSearchResponse(r)___        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getHitCount(), equalTo(0L))__        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getMissCount(), equalTo(1L))__    };make,sure,that,a,request,using,a,script,does,not,get,cached,and,a,request,not,using,a,script,does,get,cached;public,void,test,dont,cache,scripts,throws,exception,assert,acked,prepare,create,add,mapping,type,i,type,integer,set,settings,settings,builder,put,requests,cache,enable,true,put,1,put,1,get,index,random,true,client,prepare,index,type,1,set,source,json,builder,start,object,field,i,1,end,object,client,prepare,index,type,2,set,source,json,builder,start,object,field,i,2,end,object,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,hit,count,equal,to,0l,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,miss,count,equal,to,0l,map,string,object,params,new,hash,map,params,put,fieldname,date,search,response,r,client,prepare,search,set,size,0,add,aggregation,range,foo,field,i,script,new,script,script,type,inline,custom,script,plugin,name,1,collections,empty,map,add,range,0,10,get,assert,search,response,r,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,hit,count,equal,to,0l,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,miss,count,equal,to,0l,r,client,prepare,search,set,size,0,add,aggregation,range,foo,field,i,add,range,0,10,get,assert,search,response,r,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,hit,count,equal,to,0l,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,miss,count,equal,to,1l
RangeIT -> public void testDontCacheScripts() throws Exception;1543347013;Make sure that a request using a script does not get cached and a request_not using a script does get cached.;public void testDontCacheScripts() throws Exception {_        assertAcked(prepareCreate("cache_test_idx").addMapping("type", "i", "type=integer")_                .setSettings(Settings.builder().put("requests.cache.enable", true).put("number_of_shards", 1).put("number_of_replicas", 1))_                .get())__        indexRandom(true,_                client().prepareIndex("cache_test_idx", "type", "1").setSource(jsonBuilder().startObject().field("i", 1).endObject()),_                client().prepareIndex("cache_test_idx", "type", "2").setSource(jsonBuilder().startObject().field("i", 2).endObject()))___        _        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getHitCount(), equalTo(0L))__        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getMissCount(), equalTo(0L))___        _        Map<String, Object> params = new HashMap<>()__        params.put("fieldname", "date")__        SearchResponse r = client().prepareSearch("cache_test_idx").setSize(0).addAggregation(_                range("foo").field("i").script(_                    new Script(ScriptType.INLINE, CustomScriptPlugin.NAME, "_value + 1", Collections.emptyMap())).addRange(0, 10))_                .get()__        assertSearchResponse(r)___        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getHitCount(), equalTo(0L))__        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getMissCount(), equalTo(0L))___        _        _        r = client().prepareSearch("cache_test_idx").setSize(0).addAggregation(range("foo").field("i").addRange(0, 10)).get()__        assertSearchResponse(r)___        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getHitCount(), equalTo(0L))__        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getMissCount(), equalTo(1L))__    };make,sure,that,a,request,using,a,script,does,not,get,cached,and,a,request,not,using,a,script,does,get,cached;public,void,test,dont,cache,scripts,throws,exception,assert,acked,prepare,create,add,mapping,type,i,type,integer,set,settings,settings,builder,put,requests,cache,enable,true,put,1,put,1,get,index,random,true,client,prepare,index,type,1,set,source,json,builder,start,object,field,i,1,end,object,client,prepare,index,type,2,set,source,json,builder,start,object,field,i,2,end,object,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,hit,count,equal,to,0l,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,miss,count,equal,to,0l,map,string,object,params,new,hash,map,params,put,fieldname,date,search,response,r,client,prepare,search,set,size,0,add,aggregation,range,foo,field,i,script,new,script,script,type,inline,custom,script,plugin,name,1,collections,empty,map,add,range,0,10,get,assert,search,response,r,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,hit,count,equal,to,0l,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,miss,count,equal,to,0l,r,client,prepare,search,set,size,0,add,aggregation,range,foo,field,i,add,range,0,10,get,assert,search,response,r,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,hit,count,equal,to,0l,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,miss,count,equal,to,1l
RangeIT -> public void testDontCacheScripts() throws Exception;1544035746;Make sure that a request using a script does not get cached and a request_not using a script does get cached.;public void testDontCacheScripts() throws Exception {_        assertAcked(prepareCreate("cache_test_idx").addMapping("type", "i", "type=integer")_                .setSettings(Settings.builder().put("requests.cache.enable", true).put("number_of_shards", 1).put("number_of_replicas", 1))_                .get())__        indexRandom(true,_                client().prepareIndex("cache_test_idx", "type", "1").setSource(jsonBuilder().startObject().field("i", 1).endObject()),_                client().prepareIndex("cache_test_idx", "type", "2").setSource(jsonBuilder().startObject().field("i", 2).endObject()))___        _        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getHitCount(), equalTo(0L))__        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getMissCount(), equalTo(0L))___        _        Map<String, Object> params = new HashMap<>()__        params.put("fieldname", "date")__        SearchResponse r = client().prepareSearch("cache_test_idx").setSize(0).addAggregation(_                range("foo").field("i").script(_                    new Script(ScriptType.INLINE, CustomScriptPlugin.NAME, "_value + 1", Collections.emptyMap())).addRange(0, 10))_                .get()__        assertSearchResponse(r)___        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getHitCount(), equalTo(0L))__        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getMissCount(), equalTo(0L))___        _        _        r = client().prepareSearch("cache_test_idx").setSize(0).addAggregation(range("foo").field("i").addRange(0, 10)).get()__        assertSearchResponse(r)___        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getHitCount(), equalTo(0L))__        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getMissCount(), equalTo(1L))__    };make,sure,that,a,request,using,a,script,does,not,get,cached,and,a,request,not,using,a,script,does,get,cached;public,void,test,dont,cache,scripts,throws,exception,assert,acked,prepare,create,add,mapping,type,i,type,integer,set,settings,settings,builder,put,requests,cache,enable,true,put,1,put,1,get,index,random,true,client,prepare,index,type,1,set,source,json,builder,start,object,field,i,1,end,object,client,prepare,index,type,2,set,source,json,builder,start,object,field,i,2,end,object,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,hit,count,equal,to,0l,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,miss,count,equal,to,0l,map,string,object,params,new,hash,map,params,put,fieldname,date,search,response,r,client,prepare,search,set,size,0,add,aggregation,range,foo,field,i,script,new,script,script,type,inline,custom,script,plugin,name,1,collections,empty,map,add,range,0,10,get,assert,search,response,r,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,hit,count,equal,to,0l,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,miss,count,equal,to,0l,r,client,prepare,search,set,size,0,add,aggregation,range,foo,field,i,add,range,0,10,get,assert,search,response,r,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,hit,count,equal,to,0l,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,miss,count,equal,to,1l
RangeIT -> public void testDontCacheScripts() throws Exception;1544110272;Make sure that a request using a script does not get cached and a request_not using a script does get cached.;public void testDontCacheScripts() throws Exception {_        assertAcked(prepareCreate("cache_test_idx").addMapping("type", "i", "type=integer")_                .setSettings(Settings.builder().put("requests.cache.enable", true).put("number_of_shards", 1).put("number_of_replicas", 1))_                .get())__        indexRandom(true,_                client().prepareIndex("cache_test_idx", "type", "1").setSource(jsonBuilder().startObject().field("i", 1).endObject()),_                client().prepareIndex("cache_test_idx", "type", "2").setSource(jsonBuilder().startObject().field("i", 2).endObject()))___        _        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getHitCount(), equalTo(0L))__        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getMissCount(), equalTo(0L))___        _        Map<String, Object> params = new HashMap<>()__        params.put("fieldname", "date")__        SearchResponse r = client().prepareSearch("cache_test_idx").setSize(0).addAggregation(_                range("foo").field("i").script(_                    new Script(ScriptType.INLINE, CustomScriptPlugin.NAME, "_value + 1", Collections.emptyMap())).addRange(0, 10))_                .get()__        assertSearchResponse(r)___        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getHitCount(), equalTo(0L))__        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getMissCount(), equalTo(0L))___        _        _        r = client().prepareSearch("cache_test_idx").setSize(0).addAggregation(range("foo").field("i").addRange(0, 10)).get()__        assertSearchResponse(r)___        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getHitCount(), equalTo(0L))__        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getMissCount(), equalTo(1L))__    };make,sure,that,a,request,using,a,script,does,not,get,cached,and,a,request,not,using,a,script,does,get,cached;public,void,test,dont,cache,scripts,throws,exception,assert,acked,prepare,create,add,mapping,type,i,type,integer,set,settings,settings,builder,put,requests,cache,enable,true,put,1,put,1,get,index,random,true,client,prepare,index,type,1,set,source,json,builder,start,object,field,i,1,end,object,client,prepare,index,type,2,set,source,json,builder,start,object,field,i,2,end,object,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,hit,count,equal,to,0l,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,miss,count,equal,to,0l,map,string,object,params,new,hash,map,params,put,fieldname,date,search,response,r,client,prepare,search,set,size,0,add,aggregation,range,foo,field,i,script,new,script,script,type,inline,custom,script,plugin,name,1,collections,empty,map,add,range,0,10,get,assert,search,response,r,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,hit,count,equal,to,0l,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,miss,count,equal,to,0l,r,client,prepare,search,set,size,0,add,aggregation,range,foo,field,i,add,range,0,10,get,assert,search,response,r,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,hit,count,equal,to,0l,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,miss,count,equal,to,1l
RangeIT -> public void testDontCacheScripts() throws Exception;1544792207;Make sure that a request using a script does not get cached and a request_not using a script does get cached.;public void testDontCacheScripts() throws Exception {_        assertAcked(prepareCreate("cache_test_idx").addMapping("type", "i", "type=integer")_                .setSettings(Settings.builder().put("requests.cache.enable", true).put("number_of_shards", 1).put("number_of_replicas", 1))_                .get())__        indexRandom(true,_                client().prepareIndex("cache_test_idx", "type", "1").setSource(jsonBuilder().startObject().field("i", 1).endObject()),_                client().prepareIndex("cache_test_idx", "type", "2").setSource(jsonBuilder().startObject().field("i", 2).endObject()))___        _        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getHitCount(), equalTo(0L))__        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getMissCount(), equalTo(0L))___        _        Map<String, Object> params = new HashMap<>()__        params.put("fieldname", "date")__        SearchResponse r = client().prepareSearch("cache_test_idx").setSize(0).addAggregation(_                range("foo").field("i").script(_                    new Script(ScriptType.INLINE, CustomScriptPlugin.NAME, "_value + 1", Collections.emptyMap())).addRange(0, 10))_                .get()__        assertSearchResponse(r)___        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getHitCount(), equalTo(0L))__        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getMissCount(), equalTo(0L))___        _        _        r = client().prepareSearch("cache_test_idx").setSize(0).addAggregation(range("foo").field("i").addRange(0, 10)).get()__        assertSearchResponse(r)___        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getHitCount(), equalTo(0L))__        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getMissCount(), equalTo(1L))__    };make,sure,that,a,request,using,a,script,does,not,get,cached,and,a,request,not,using,a,script,does,get,cached;public,void,test,dont,cache,scripts,throws,exception,assert,acked,prepare,create,add,mapping,type,i,type,integer,set,settings,settings,builder,put,requests,cache,enable,true,put,1,put,1,get,index,random,true,client,prepare,index,type,1,set,source,json,builder,start,object,field,i,1,end,object,client,prepare,index,type,2,set,source,json,builder,start,object,field,i,2,end,object,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,hit,count,equal,to,0l,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,miss,count,equal,to,0l,map,string,object,params,new,hash,map,params,put,fieldname,date,search,response,r,client,prepare,search,set,size,0,add,aggregation,range,foo,field,i,script,new,script,script,type,inline,custom,script,plugin,name,1,collections,empty,map,add,range,0,10,get,assert,search,response,r,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,hit,count,equal,to,0l,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,miss,count,equal,to,0l,r,client,prepare,search,set,size,0,add,aggregation,range,foo,field,i,add,range,0,10,get,assert,search,response,r,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,hit,count,equal,to,0l,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,miss,count,equal,to,1l
