commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;public void testValidOrdinals() {     assertThat(SubAggCollectionMode.DEPTH_FIRST.ordinal(), equalTo(0)).     assertThat(SubAggCollectionMode.BREADTH_FIRST.ordinal(), equalTo(1)). }
false;public;0;15;;public void testwriteTo() throws Exception {     try (BytesStreamOutput out = new BytesStreamOutput()) {         SubAggCollectionMode.DEPTH_FIRST.writeTo(out).         try (StreamInput in = out.bytes().streamInput()) {             assertThat(in.readVInt(), equalTo(0)).         }     }     try (BytesStreamOutput out = new BytesStreamOutput()) {         SubAggCollectionMode.BREADTH_FIRST.writeTo(out).         try (StreamInput in = out.bytes().streamInput()) {             assertThat(in.readVInt(), equalTo(1)).         }     } }
false;public;0;14;;public void testReadFrom() throws Exception {     try (BytesStreamOutput out = new BytesStreamOutput()) {         out.writeVInt(0).         try (StreamInput in = out.bytes().streamInput()) {             assertThat(SubAggCollectionMode.readFromStream(in), equalTo(SubAggCollectionMode.DEPTH_FIRST)).         }     }     try (BytesStreamOutput out = new BytesStreamOutput()) {         out.writeVInt(1).         try (StreamInput in = out.bytes().streamInput()) {             assertThat(SubAggCollectionMode.readFromStream(in), equalTo(SubAggCollectionMode.BREADTH_FIRST)).         }     } }
false;public;0;12;;public void testInvalidReadFrom() throws Exception {     try (BytesStreamOutput out = new BytesStreamOutput()) {         out.writeVInt(randomIntBetween(2, Integer.MAX_VALUE)).         try (StreamInput in = out.bytes().streamInput()) {             SubAggCollectionMode.readFromStream(in).             fail("Expected IOException").         } catch (IOException e) {             assertThat(e.getMessage(), containsString("Unknown SubAggCollectionMode ordinal [")).         }     } }
