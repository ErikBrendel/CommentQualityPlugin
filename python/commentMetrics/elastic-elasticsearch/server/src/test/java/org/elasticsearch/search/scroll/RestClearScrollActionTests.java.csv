commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;public void testParseClearScrollRequestWithInvalidJsonThrowsException() throws Exception {     RestClearScrollAction action = new RestClearScrollAction(Settings.EMPTY, mock(RestController.class)).     RestRequest request = new FakeRestRequest.Builder(xContentRegistry()).withContent(new BytesArray("{invalid_json}"), XContentType.JSON).build().     Exception e = expectThrows(IllegalArgumentException.class, () -> action.prepareRequest(request, null)).     assertThat(e.getMessage(), equalTo("Failed to parse request body")). }
false;public;0;18;;public void testBodyParamsOverrideQueryStringParams() throws Exception {     NodeClient nodeClient = mock(NodeClient.class).     doNothing().when(nodeClient).searchScroll(any(), any()).     RestClearScrollAction action = new RestClearScrollAction(Settings.EMPTY, mock(RestController.class)).     RestRequest request = new FakeRestRequest.Builder(xContentRegistry()).withParams(Collections.singletonMap("scroll_id", "QUERY_STRING")).withContent(new BytesArray("{\"scroll_id\": [\"BODY\"]}"), XContentType.JSON).build().     FakeRestChannel channel = new FakeRestChannel(request, false, 0).     action.handleRequest(request, channel, nodeClient).     ArgumentCaptor<ClearScrollRequest> argument = ArgumentCaptor.forClass(ClearScrollRequest.class).     verify(nodeClient).clearScroll(argument.capture(), anyObject()).     ClearScrollRequest clearScrollRequest = argument.getValue().     List<String> scrollIds = clearScrollRequest.getScrollIds().     assertEquals(1, scrollIds.size()).     assertEquals("BODY", scrollIds.get(0)). }
