# id;timestamp;commentText;codeText;commentWords;codeWords
PublishClusterStateActionTests -> public void testSimultaneousClusterStatePublishing() throws Exception;1524684173;Test not waiting on publishing works correctly (i.e., publishing times out);public void testSimultaneousClusterStatePublishing() throws Exception {_        int numberOfNodes = randomIntBetween(2, 10)__        int numberOfIterations = scaledRandomIntBetween(5, 50)__        Settings settings = Settings.builder().put(DiscoverySettings.PUBLISH_DIFF_ENABLE_SETTING.getKey(), randomBoolean()).build()__        MockNode master = createMockNode("node0", settings, new ClusterStateListener() {_            @Override_            public void clusterChanged(ClusterChangedEvent event) {_                assertProperMetaDataForVersion(event.state().metaData(), event.state().version())__            }_        }).setAsMaster()__        DiscoveryNodes.Builder discoveryNodesBuilder = DiscoveryNodes.builder(master.nodes())__        for (int i = 1_ i < numberOfNodes_ i++) {_            final String name = "node" + i__            final MockNode node = createMockNode(name, settings, new ClusterStateListener() {_                @Override_                public void clusterChanged(ClusterChangedEvent event) {_                    assertProperMetaDataForVersion(event.state().metaData(), event.state().version())__                }_            })__            discoveryNodesBuilder.add(node.discoveryNode)__        }__        AssertingAckListener[] listeners = new AssertingAckListener[numberOfIterations]__        DiscoveryNodes discoveryNodes = discoveryNodesBuilder.build()__        MetaData metaData = MetaData.EMPTY_META_DATA__        ClusterState clusterState = ClusterState.builder(CLUSTER_NAME).metaData(metaData).build()__        ClusterState previousState__        for (int i = 0_ i < numberOfIterations_ i++) {_            previousState = clusterState__            metaData = buildMetaDataForVersion(metaData, i + 1)__            clusterState = ClusterState.builder(clusterState).incrementVersion().metaData(metaData).nodes(discoveryNodes).build()__            listeners[i] = publishState(master.action, clusterState, previousState)__        }__        for (int i = 0_ i < numberOfIterations_ i++) {_            listeners[i].await(1, TimeUnit.SECONDS)__        }__        _        master.clusterState = clusterState___        for (MockNode node : nodes.values()) {_            assertSameState(node.clusterState, clusterState)__            assertThat(node.clusterState.nodes().getLocalNode(), equalTo(node.discoveryNode))__        }_    };test,not,waiting,on,publishing,works,correctly,i,e,publishing,times,out;public,void,test,simultaneous,cluster,state,publishing,throws,exception,int,number,of,nodes,random,int,between,2,10,int,number,of,iterations,scaled,random,int,between,5,50,settings,settings,settings,builder,put,discovery,settings,get,key,random,boolean,build,mock,node,master,create,mock,node,node0,settings,new,cluster,state,listener,override,public,void,cluster,changed,cluster,changed,event,event,assert,proper,meta,data,for,version,event,state,meta,data,event,state,version,set,as,master,discovery,nodes,builder,discovery,nodes,builder,discovery,nodes,builder,master,nodes,for,int,i,1,i,number,of,nodes,i,final,string,name,node,i,final,mock,node,node,create,mock,node,name,settings,new,cluster,state,listener,override,public,void,cluster,changed,cluster,changed,event,event,assert,proper,meta,data,for,version,event,state,meta,data,event,state,version,discovery,nodes,builder,add,node,discovery,node,asserting,ack,listener,listeners,new,asserting,ack,listener,number,of,iterations,discovery,nodes,discovery,nodes,discovery,nodes,builder,build,meta,data,meta,data,meta,data,cluster,state,cluster,state,cluster,state,builder,meta,data,meta,data,build,cluster,state,previous,state,for,int,i,0,i,number,of,iterations,i,previous,state,cluster,state,meta,data,build,meta,data,for,version,meta,data,i,1,cluster,state,cluster,state,builder,cluster,state,increment,version,meta,data,meta,data,nodes,discovery,nodes,build,listeners,i,publish,state,master,action,cluster,state,previous,state,for,int,i,0,i,number,of,iterations,i,listeners,i,await,1,time,unit,seconds,master,cluster,state,cluster,state,for,mock,node,node,nodes,values,assert,same,state,node,cluster,state,cluster,state,assert,that,node,cluster,state,nodes,get,local,node,equal,to,node,discovery,node
PublishClusterStateActionTests -> public void testSimultaneousClusterStatePublishing() throws Exception;1526029249;Test not waiting on publishing works correctly (i.e., publishing times out);public void testSimultaneousClusterStatePublishing() throws Exception {_        int numberOfNodes = randomIntBetween(2, 10)__        int numberOfIterations = scaledRandomIntBetween(5, 50)__        Settings settings = Settings.builder().put(DiscoverySettings.PUBLISH_DIFF_ENABLE_SETTING.getKey(), randomBoolean()).build()__        MockNode master = createMockNode("node0", settings, new ClusterStateListener() {_            @Override_            public void clusterChanged(ClusterChangedEvent event) {_                assertProperMetaDataForVersion(event.state().metaData(), event.state().version())__            }_        }).setAsMaster()__        DiscoveryNodes.Builder discoveryNodesBuilder = DiscoveryNodes.builder(master.nodes())__        for (int i = 1_ i < numberOfNodes_ i++) {_            final String name = "node" + i__            final MockNode node = createMockNode(name, settings, new ClusterStateListener() {_                @Override_                public void clusterChanged(ClusterChangedEvent event) {_                    assertProperMetaDataForVersion(event.state().metaData(), event.state().version())__                }_            })__            discoveryNodesBuilder.add(node.discoveryNode)__        }__        AssertingAckListener[] listeners = new AssertingAckListener[numberOfIterations]__        DiscoveryNodes discoveryNodes = discoveryNodesBuilder.build()__        MetaData metaData = MetaData.EMPTY_META_DATA__        ClusterState clusterState = ClusterState.builder(CLUSTER_NAME).metaData(metaData).build()__        ClusterState previousState__        for (int i = 0_ i < numberOfIterations_ i++) {_            previousState = clusterState__            metaData = buildMetaDataForVersion(metaData, i + 1)__            clusterState = ClusterState.builder(clusterState).incrementVersion().metaData(metaData).nodes(discoveryNodes).build()__            listeners[i] = publishState(master.action, clusterState, previousState)__        }__        for (int i = 0_ i < numberOfIterations_ i++) {_            listeners[i].await(1, TimeUnit.SECONDS)__        }__        _        master.clusterState = clusterState___        for (MockNode node : nodes.values()) {_            assertSameState(node.clusterState, clusterState)__            assertThat(node.clusterState.nodes().getLocalNode(), equalTo(node.discoveryNode))__        }_    };test,not,waiting,on,publishing,works,correctly,i,e,publishing,times,out;public,void,test,simultaneous,cluster,state,publishing,throws,exception,int,number,of,nodes,random,int,between,2,10,int,number,of,iterations,scaled,random,int,between,5,50,settings,settings,settings,builder,put,discovery,settings,get,key,random,boolean,build,mock,node,master,create,mock,node,node0,settings,new,cluster,state,listener,override,public,void,cluster,changed,cluster,changed,event,event,assert,proper,meta,data,for,version,event,state,meta,data,event,state,version,set,as,master,discovery,nodes,builder,discovery,nodes,builder,discovery,nodes,builder,master,nodes,for,int,i,1,i,number,of,nodes,i,final,string,name,node,i,final,mock,node,node,create,mock,node,name,settings,new,cluster,state,listener,override,public,void,cluster,changed,cluster,changed,event,event,assert,proper,meta,data,for,version,event,state,meta,data,event,state,version,discovery,nodes,builder,add,node,discovery,node,asserting,ack,listener,listeners,new,asserting,ack,listener,number,of,iterations,discovery,nodes,discovery,nodes,discovery,nodes,builder,build,meta,data,meta,data,meta,data,cluster,state,cluster,state,cluster,state,builder,meta,data,meta,data,build,cluster,state,previous,state,for,int,i,0,i,number,of,iterations,i,previous,state,cluster,state,meta,data,build,meta,data,for,version,meta,data,i,1,cluster,state,cluster,state,builder,cluster,state,increment,version,meta,data,meta,data,nodes,discovery,nodes,build,listeners,i,publish,state,master,action,cluster,state,previous,state,for,int,i,0,i,number,of,iterations,i,listeners,i,await,1,time,unit,seconds,master,cluster,state,cluster,state,for,mock,node,node,nodes,values,assert,same,state,node,cluster,state,cluster,state,assert,that,node,cluster,state,nodes,get,local,node,equal,to,node,discovery,node
PublishClusterStateActionTests -> public void testSimultaneousClusterStatePublishing() throws Exception;1529015561;Test not waiting on publishing works correctly (i.e., publishing times out);public void testSimultaneousClusterStatePublishing() throws Exception {_        int numberOfNodes = randomIntBetween(2, 10)__        int numberOfIterations = scaledRandomIntBetween(5, 50)__        Settings settings = Settings.builder().put(DiscoverySettings.PUBLISH_DIFF_ENABLE_SETTING.getKey(), randomBoolean()).build()__        MockNode master = createMockNode("node0", settings, new ClusterStateListener() {_            @Override_            public void clusterChanged(ClusterChangedEvent event) {_                assertProperMetaDataForVersion(event.state().metaData(), event.state().version())__            }_        }).setAsMaster()__        DiscoveryNodes.Builder discoveryNodesBuilder = DiscoveryNodes.builder(master.nodes())__        for (int i = 1_ i < numberOfNodes_ i++) {_            final String name = "node" + i__            final MockNode node = createMockNode(name, settings, new ClusterStateListener() {_                @Override_                public void clusterChanged(ClusterChangedEvent event) {_                    assertProperMetaDataForVersion(event.state().metaData(), event.state().version())__                }_            })__            discoveryNodesBuilder.add(node.discoveryNode)__        }__        AssertingAckListener[] listeners = new AssertingAckListener[numberOfIterations]__        DiscoveryNodes discoveryNodes = discoveryNodesBuilder.build()__        MetaData metaData = MetaData.EMPTY_META_DATA__        ClusterState clusterState = ClusterState.builder(CLUSTER_NAME).metaData(metaData).build()__        ClusterState previousState__        for (int i = 0_ i < numberOfIterations_ i++) {_            previousState = clusterState__            metaData = buildMetaDataForVersion(metaData, i + 1)__            clusterState = ClusterState.builder(clusterState).incrementVersion().metaData(metaData).nodes(discoveryNodes).build()__            listeners[i] = publishState(master.action, clusterState, previousState)__        }__        for (int i = 0_ i < numberOfIterations_ i++) {_            listeners[i].await(1, TimeUnit.SECONDS)__        }__        _        master.clusterState = clusterState___        for (MockNode node : nodes.values()) {_            assertSameState(node.clusterState, clusterState)__            assertThat(node.clusterState.nodes().getLocalNode(), equalTo(node.discoveryNode))__        }_    };test,not,waiting,on,publishing,works,correctly,i,e,publishing,times,out;public,void,test,simultaneous,cluster,state,publishing,throws,exception,int,number,of,nodes,random,int,between,2,10,int,number,of,iterations,scaled,random,int,between,5,50,settings,settings,settings,builder,put,discovery,settings,get,key,random,boolean,build,mock,node,master,create,mock,node,node0,settings,new,cluster,state,listener,override,public,void,cluster,changed,cluster,changed,event,event,assert,proper,meta,data,for,version,event,state,meta,data,event,state,version,set,as,master,discovery,nodes,builder,discovery,nodes,builder,discovery,nodes,builder,master,nodes,for,int,i,1,i,number,of,nodes,i,final,string,name,node,i,final,mock,node,node,create,mock,node,name,settings,new,cluster,state,listener,override,public,void,cluster,changed,cluster,changed,event,event,assert,proper,meta,data,for,version,event,state,meta,data,event,state,version,discovery,nodes,builder,add,node,discovery,node,asserting,ack,listener,listeners,new,asserting,ack,listener,number,of,iterations,discovery,nodes,discovery,nodes,discovery,nodes,builder,build,meta,data,meta,data,meta,data,cluster,state,cluster,state,cluster,state,builder,meta,data,meta,data,build,cluster,state,previous,state,for,int,i,0,i,number,of,iterations,i,previous,state,cluster,state,meta,data,build,meta,data,for,version,meta,data,i,1,cluster,state,cluster,state,builder,cluster,state,increment,version,meta,data,meta,data,nodes,discovery,nodes,build,listeners,i,publish,state,master,action,cluster,state,previous,state,for,int,i,0,i,number,of,iterations,i,listeners,i,await,1,time,unit,seconds,master,cluster,state,cluster,state,for,mock,node,node,nodes,values,assert,same,state,node,cluster,state,cluster,state,assert,that,node,cluster,state,nodes,get,local,node,equal,to,node,discovery,node
PublishClusterStateActionTests -> public void testSimultaneousClusterStatePublishing() throws Exception;1541092382;Test not waiting on publishing works correctly (i.e., publishing times out);public void testSimultaneousClusterStatePublishing() throws Exception {_        int numberOfNodes = randomIntBetween(2, 10)__        int numberOfIterations = scaledRandomIntBetween(5, 50)__        Settings settings = Settings.builder().put(DiscoverySettings.PUBLISH_DIFF_ENABLE_SETTING.getKey(), randomBoolean()).build()__        MockNode master = createMockNode("node0", settings, new ClusterStateListener() {_            @Override_            public void clusterChanged(ClusterChangedEvent event) {_                assertProperMetaDataForVersion(event.state().metaData(), event.state().version())__            }_        }).setAsMaster()__        DiscoveryNodes.Builder discoveryNodesBuilder = DiscoveryNodes.builder(master.nodes())__        for (int i = 1_ i < numberOfNodes_ i++) {_            final String name = "node" + i__            final MockNode node = createMockNode(name, settings, new ClusterStateListener() {_                @Override_                public void clusterChanged(ClusterChangedEvent event) {_                    assertProperMetaDataForVersion(event.state().metaData(), event.state().version())__                }_            })__            discoveryNodesBuilder.add(node.discoveryNode)__        }__        AssertingAckListener[] listeners = new AssertingAckListener[numberOfIterations]__        DiscoveryNodes discoveryNodes = discoveryNodesBuilder.build()__        MetaData metaData = MetaData.EMPTY_META_DATA__        ClusterState clusterState = ClusterState.builder(CLUSTER_NAME).metaData(metaData).build()__        ClusterState previousState__        for (int i = 0_ i < numberOfIterations_ i++) {_            previousState = clusterState__            metaData = buildMetaDataForVersion(metaData, i + 1)__            clusterState = ClusterState.builder(clusterState).incrementVersion().metaData(metaData).nodes(discoveryNodes).build()__            listeners[i] = publishState(master.action, clusterState, previousState)__        }__        for (int i = 0_ i < numberOfIterations_ i++) {_            listeners[i].await(1, TimeUnit.SECONDS)__        }__        _        master.clusterState = clusterState___        for (MockNode node : nodes.values()) {_            assertSameState(node.clusterState, clusterState)__            assertThat(node.clusterState.nodes().getLocalNode(), equalTo(node.discoveryNode))__        }_    };test,not,waiting,on,publishing,works,correctly,i,e,publishing,times,out;public,void,test,simultaneous,cluster,state,publishing,throws,exception,int,number,of,nodes,random,int,between,2,10,int,number,of,iterations,scaled,random,int,between,5,50,settings,settings,settings,builder,put,discovery,settings,get,key,random,boolean,build,mock,node,master,create,mock,node,node0,settings,new,cluster,state,listener,override,public,void,cluster,changed,cluster,changed,event,event,assert,proper,meta,data,for,version,event,state,meta,data,event,state,version,set,as,master,discovery,nodes,builder,discovery,nodes,builder,discovery,nodes,builder,master,nodes,for,int,i,1,i,number,of,nodes,i,final,string,name,node,i,final,mock,node,node,create,mock,node,name,settings,new,cluster,state,listener,override,public,void,cluster,changed,cluster,changed,event,event,assert,proper,meta,data,for,version,event,state,meta,data,event,state,version,discovery,nodes,builder,add,node,discovery,node,asserting,ack,listener,listeners,new,asserting,ack,listener,number,of,iterations,discovery,nodes,discovery,nodes,discovery,nodes,builder,build,meta,data,meta,data,meta,data,cluster,state,cluster,state,cluster,state,builder,meta,data,meta,data,build,cluster,state,previous,state,for,int,i,0,i,number,of,iterations,i,previous,state,cluster,state,meta,data,build,meta,data,for,version,meta,data,i,1,cluster,state,cluster,state,builder,cluster,state,increment,version,meta,data,meta,data,nodes,discovery,nodes,build,listeners,i,publish,state,master,action,cluster,state,previous,state,for,int,i,0,i,number,of,iterations,i,listeners,i,await,1,time,unit,seconds,master,cluster,state,cluster,state,for,mock,node,node,nodes,values,assert,same,state,node,cluster,state,cluster,state,assert,that,node,cluster,state,nodes,get,local,node,equal,to,node,discovery,node
PublishClusterStateActionTests -> public void testSimultaneousClusterStatePublishing() throws Exception;1541698679;Test not waiting on publishing works correctly (i.e., publishing times out);public void testSimultaneousClusterStatePublishing() throws Exception {_        int numberOfNodes = randomIntBetween(2, 10)__        int numberOfIterations = scaledRandomIntBetween(5, 50)__        Settings settings = Settings.builder().put(DiscoverySettings.PUBLISH_DIFF_ENABLE_SETTING.getKey(), randomBoolean()).build()__        MockNode master = createMockNode("node0", settings, new ClusterStateListener() {_            @Override_            public void clusterChanged(ClusterChangedEvent event) {_                assertProperMetaDataForVersion(event.state().metaData(), event.state().version())__            }_        }).setAsMaster()__        DiscoveryNodes.Builder discoveryNodesBuilder = DiscoveryNodes.builder(master.nodes())__        for (int i = 1_ i < numberOfNodes_ i++) {_            final String name = "node" + i__            final MockNode node = createMockNode(name, settings, new ClusterStateListener() {_                @Override_                public void clusterChanged(ClusterChangedEvent event) {_                    assertProperMetaDataForVersion(event.state().metaData(), event.state().version())__                }_            })__            discoveryNodesBuilder.add(node.discoveryNode)__        }__        AssertingAckListener[] listeners = new AssertingAckListener[numberOfIterations]__        DiscoveryNodes discoveryNodes = discoveryNodesBuilder.build()__        MetaData metaData = MetaData.EMPTY_META_DATA__        ClusterState clusterState = ClusterState.builder(CLUSTER_NAME).metaData(metaData).build()__        ClusterState previousState__        for (int i = 0_ i < numberOfIterations_ i++) {_            previousState = clusterState__            metaData = buildMetaDataForVersion(metaData, i + 1)__            clusterState = ClusterState.builder(clusterState).incrementVersion().metaData(metaData).nodes(discoveryNodes).build()__            listeners[i] = publishState(master.action, clusterState, previousState)__        }__        for (int i = 0_ i < numberOfIterations_ i++) {_            listeners[i].await(1, TimeUnit.SECONDS)__        }__        _        master.clusterState = clusterState___        for (MockNode node : nodes.values()) {_            assertSameState(node.clusterState, clusterState)__            assertThat(node.clusterState.nodes().getLocalNode(), equalTo(node.discoveryNode))__        }_    };test,not,waiting,on,publishing,works,correctly,i,e,publishing,times,out;public,void,test,simultaneous,cluster,state,publishing,throws,exception,int,number,of,nodes,random,int,between,2,10,int,number,of,iterations,scaled,random,int,between,5,50,settings,settings,settings,builder,put,discovery,settings,get,key,random,boolean,build,mock,node,master,create,mock,node,node0,settings,new,cluster,state,listener,override,public,void,cluster,changed,cluster,changed,event,event,assert,proper,meta,data,for,version,event,state,meta,data,event,state,version,set,as,master,discovery,nodes,builder,discovery,nodes,builder,discovery,nodes,builder,master,nodes,for,int,i,1,i,number,of,nodes,i,final,string,name,node,i,final,mock,node,node,create,mock,node,name,settings,new,cluster,state,listener,override,public,void,cluster,changed,cluster,changed,event,event,assert,proper,meta,data,for,version,event,state,meta,data,event,state,version,discovery,nodes,builder,add,node,discovery,node,asserting,ack,listener,listeners,new,asserting,ack,listener,number,of,iterations,discovery,nodes,discovery,nodes,discovery,nodes,builder,build,meta,data,meta,data,meta,data,cluster,state,cluster,state,cluster,state,builder,meta,data,meta,data,build,cluster,state,previous,state,for,int,i,0,i,number,of,iterations,i,previous,state,cluster,state,meta,data,build,meta,data,for,version,meta,data,i,1,cluster,state,cluster,state,builder,cluster,state,increment,version,meta,data,meta,data,nodes,discovery,nodes,build,listeners,i,publish,state,master,action,cluster,state,previous,state,for,int,i,0,i,number,of,iterations,i,listeners,i,await,1,time,unit,seconds,master,cluster,state,cluster,state,for,mock,node,node,nodes,values,assert,same,state,node,cluster,state,cluster,state,assert,that,node,cluster,state,nodes,get,local,node,equal,to,node,discovery,node
PublishClusterStateActionTests -> public void testSimultaneousClusterStatePublishing() throws Exception;1544081506;Test not waiting on publishing works correctly (i.e., publishing times out);public void testSimultaneousClusterStatePublishing() throws Exception {_        int numberOfNodes = randomIntBetween(2, 10)__        int numberOfIterations = scaledRandomIntBetween(5, 50)__        Settings settings = Settings.builder().put(DiscoverySettings.PUBLISH_DIFF_ENABLE_SETTING.getKey(), randomBoolean()).build()__        MockNode master = createMockNode("node0", settings, new ClusterStateListener() {_            @Override_            public void clusterChanged(ClusterChangedEvent event) {_                assertProperMetaDataForVersion(event.state().metaData(), event.state().version())__            }_        }).setAsMaster()__        DiscoveryNodes.Builder discoveryNodesBuilder = DiscoveryNodes.builder(master.nodes())__        for (int i = 1_ i < numberOfNodes_ i++) {_            final String name = "node" + i__            final MockNode node = createMockNode(name, settings, new ClusterStateListener() {_                @Override_                public void clusterChanged(ClusterChangedEvent event) {_                    assertProperMetaDataForVersion(event.state().metaData(), event.state().version())__                }_            })__            discoveryNodesBuilder.add(node.discoveryNode)__        }__        AssertingAckListener[] listeners = new AssertingAckListener[numberOfIterations]__        DiscoveryNodes discoveryNodes = discoveryNodesBuilder.build()__        MetaData metaData = MetaData.EMPTY_META_DATA__        ClusterState clusterState = ClusterState.builder(CLUSTER_NAME).metaData(metaData).build()__        ClusterState previousState__        for (int i = 0_ i < numberOfIterations_ i++) {_            previousState = clusterState__            metaData = buildMetaDataForVersion(metaData, i + 1)__            clusterState = ClusterState.builder(clusterState).incrementVersion().metaData(metaData).nodes(discoveryNodes).build()__            listeners[i] = publishState(master.action, clusterState, previousState)__        }__        for (int i = 0_ i < numberOfIterations_ i++) {_            listeners[i].await(1, TimeUnit.SECONDS)__        }__        _        master.clusterState = clusterState___        for (MockNode node : nodes.values()) {_            assertSameState(node.clusterState, clusterState)__            assertThat(node.clusterState.nodes().getLocalNode(), equalTo(node.discoveryNode))__        }_    };test,not,waiting,on,publishing,works,correctly,i,e,publishing,times,out;public,void,test,simultaneous,cluster,state,publishing,throws,exception,int,number,of,nodes,random,int,between,2,10,int,number,of,iterations,scaled,random,int,between,5,50,settings,settings,settings,builder,put,discovery,settings,get,key,random,boolean,build,mock,node,master,create,mock,node,node0,settings,new,cluster,state,listener,override,public,void,cluster,changed,cluster,changed,event,event,assert,proper,meta,data,for,version,event,state,meta,data,event,state,version,set,as,master,discovery,nodes,builder,discovery,nodes,builder,discovery,nodes,builder,master,nodes,for,int,i,1,i,number,of,nodes,i,final,string,name,node,i,final,mock,node,node,create,mock,node,name,settings,new,cluster,state,listener,override,public,void,cluster,changed,cluster,changed,event,event,assert,proper,meta,data,for,version,event,state,meta,data,event,state,version,discovery,nodes,builder,add,node,discovery,node,asserting,ack,listener,listeners,new,asserting,ack,listener,number,of,iterations,discovery,nodes,discovery,nodes,discovery,nodes,builder,build,meta,data,meta,data,meta,data,cluster,state,cluster,state,cluster,state,builder,meta,data,meta,data,build,cluster,state,previous,state,for,int,i,0,i,number,of,iterations,i,previous,state,cluster,state,meta,data,build,meta,data,for,version,meta,data,i,1,cluster,state,cluster,state,builder,cluster,state,increment,version,meta,data,meta,data,nodes,discovery,nodes,build,listeners,i,publish,state,master,action,cluster,state,previous,state,for,int,i,0,i,number,of,iterations,i,listeners,i,await,1,time,unit,seconds,master,cluster,state,cluster,state,for,mock,node,node,nodes,values,assert,same,state,node,cluster,state,cluster,state,assert,that,node,cluster,state,nodes,get,local,node,equal,to,node,discovery,node
PublishClusterStateActionTests -> public void testSimultaneousClusterStatePublishing() throws Exception;1544823664;Test not waiting on publishing works correctly (i.e., publishing times out);public void testSimultaneousClusterStatePublishing() throws Exception {_        int numberOfNodes = randomIntBetween(2, 10)__        int numberOfIterations = scaledRandomIntBetween(5, 50)__        Settings settings = Settings.builder().put(DiscoverySettings.PUBLISH_DIFF_ENABLE_SETTING.getKey(), randomBoolean()).build()__        MockNode master = createMockNode("node0", settings, new ClusterStateListener() {_            @Override_            public void clusterChanged(ClusterChangedEvent event) {_                assertProperMetaDataForVersion(event.state().metaData(), event.state().version())__            }_        }).setAsMaster()__        DiscoveryNodes.Builder discoveryNodesBuilder = DiscoveryNodes.builder(master.nodes())__        for (int i = 1_ i < numberOfNodes_ i++) {_            final String name = "node" + i__            final MockNode node = createMockNode(name, settings, new ClusterStateListener() {_                @Override_                public void clusterChanged(ClusterChangedEvent event) {_                    assertProperMetaDataForVersion(event.state().metaData(), event.state().version())__                }_            })__            discoveryNodesBuilder.add(node.discoveryNode)__        }__        AssertingAckListener[] listeners = new AssertingAckListener[numberOfIterations]__        DiscoveryNodes discoveryNodes = discoveryNodesBuilder.build()__        MetaData metaData = MetaData.EMPTY_META_DATA__        ClusterState clusterState = ClusterState.builder(CLUSTER_NAME).metaData(metaData).build()__        ClusterState previousState__        for (int i = 0_ i < numberOfIterations_ i++) {_            previousState = clusterState__            metaData = buildMetaDataForVersion(metaData, i + 1)__            clusterState = ClusterState.builder(clusterState).incrementVersion().metaData(metaData).nodes(discoveryNodes).build()__            listeners[i] = publishState(master.action, clusterState, previousState)__        }__        for (int i = 0_ i < numberOfIterations_ i++) {_            listeners[i].await(1, TimeUnit.SECONDS)__        }__        _        master.clusterState = clusterState___        for (MockNode node : nodes.values()) {_            assertSameState(node.clusterState, clusterState)__            assertThat(node.clusterState.nodes().getLocalNode(), equalTo(node.discoveryNode))__        }_    };test,not,waiting,on,publishing,works,correctly,i,e,publishing,times,out;public,void,test,simultaneous,cluster,state,publishing,throws,exception,int,number,of,nodes,random,int,between,2,10,int,number,of,iterations,scaled,random,int,between,5,50,settings,settings,settings,builder,put,discovery,settings,get,key,random,boolean,build,mock,node,master,create,mock,node,node0,settings,new,cluster,state,listener,override,public,void,cluster,changed,cluster,changed,event,event,assert,proper,meta,data,for,version,event,state,meta,data,event,state,version,set,as,master,discovery,nodes,builder,discovery,nodes,builder,discovery,nodes,builder,master,nodes,for,int,i,1,i,number,of,nodes,i,final,string,name,node,i,final,mock,node,node,create,mock,node,name,settings,new,cluster,state,listener,override,public,void,cluster,changed,cluster,changed,event,event,assert,proper,meta,data,for,version,event,state,meta,data,event,state,version,discovery,nodes,builder,add,node,discovery,node,asserting,ack,listener,listeners,new,asserting,ack,listener,number,of,iterations,discovery,nodes,discovery,nodes,discovery,nodes,builder,build,meta,data,meta,data,meta,data,cluster,state,cluster,state,cluster,state,builder,meta,data,meta,data,build,cluster,state,previous,state,for,int,i,0,i,number,of,iterations,i,previous,state,cluster,state,meta,data,build,meta,data,for,version,meta,data,i,1,cluster,state,cluster,state,builder,cluster,state,increment,version,meta,data,meta,data,nodes,discovery,nodes,build,listeners,i,publish,state,master,action,cluster,state,previous,state,for,int,i,0,i,number,of,iterations,i,listeners,i,await,1,time,unit,seconds,master,cluster,state,cluster,state,for,mock,node,node,nodes,values,assert,same,state,node,cluster,state,cluster,state,assert,that,node,cluster,state,nodes,get,local,node,equal,to,node,discovery,node
PublishClusterStateActionTests -> public void testSimultaneousClusterStatePublishing() throws Exception;1549270328;Test not waiting on publishing works correctly (i.e., publishing times out);public void testSimultaneousClusterStatePublishing() throws Exception {_        int numberOfNodes = randomIntBetween(2, 10)__        int numberOfIterations = scaledRandomIntBetween(5, 50)__        Settings settings = Settings.builder().put(DiscoverySettings.PUBLISH_DIFF_ENABLE_SETTING.getKey(), randomBoolean()).build()__        MockNode master = createMockNode("node0", settings, new ClusterStateListener() {_            @Override_            public void clusterChanged(ClusterChangedEvent event) {_                assertProperMetaDataForVersion(event.state().metaData(), event.state().version())__            }_        }).setAsMaster()__        DiscoveryNodes.Builder discoveryNodesBuilder = DiscoveryNodes.builder(master.nodes())__        for (int i = 1_ i < numberOfNodes_ i++) {_            final String name = "node" + i__            final MockNode node = createMockNode(name, settings, new ClusterStateListener() {_                @Override_                public void clusterChanged(ClusterChangedEvent event) {_                    assertProperMetaDataForVersion(event.state().metaData(), event.state().version())__                }_            })__            discoveryNodesBuilder.add(node.discoveryNode)__        }__        AssertingAckListener[] listeners = new AssertingAckListener[numberOfIterations]__        DiscoveryNodes discoveryNodes = discoveryNodesBuilder.build()__        MetaData metaData = MetaData.EMPTY_META_DATA__        ClusterState clusterState = ClusterState.builder(CLUSTER_NAME).metaData(metaData).build()__        ClusterState previousState__        for (int i = 0_ i < numberOfIterations_ i++) {_            previousState = clusterState__            metaData = buildMetaDataForVersion(metaData, i + 1)__            clusterState = ClusterState.builder(clusterState).incrementVersion().metaData(metaData).nodes(discoveryNodes).build()__            listeners[i] = publishState(master.action, clusterState, previousState)__        }__        for (int i = 0_ i < numberOfIterations_ i++) {_            listeners[i].await(1, TimeUnit.SECONDS)__        }__        _        master.clusterState = clusterState___        for (MockNode node : nodes.values()) {_            assertSameState(node.clusterState, clusterState)__            assertThat(node.clusterState.nodes().getLocalNode(), equalTo(node.discoveryNode))__        }__        assertWarnings(_            "[discovery.zen.publish_diff.enable] setting was deprecated in Elasticsearch and will be removed in a future release! " +_                "See the breaking changes documentation for the next major version.")__    };test,not,waiting,on,publishing,works,correctly,i,e,publishing,times,out;public,void,test,simultaneous,cluster,state,publishing,throws,exception,int,number,of,nodes,random,int,between,2,10,int,number,of,iterations,scaled,random,int,between,5,50,settings,settings,settings,builder,put,discovery,settings,get,key,random,boolean,build,mock,node,master,create,mock,node,node0,settings,new,cluster,state,listener,override,public,void,cluster,changed,cluster,changed,event,event,assert,proper,meta,data,for,version,event,state,meta,data,event,state,version,set,as,master,discovery,nodes,builder,discovery,nodes,builder,discovery,nodes,builder,master,nodes,for,int,i,1,i,number,of,nodes,i,final,string,name,node,i,final,mock,node,node,create,mock,node,name,settings,new,cluster,state,listener,override,public,void,cluster,changed,cluster,changed,event,event,assert,proper,meta,data,for,version,event,state,meta,data,event,state,version,discovery,nodes,builder,add,node,discovery,node,asserting,ack,listener,listeners,new,asserting,ack,listener,number,of,iterations,discovery,nodes,discovery,nodes,discovery,nodes,builder,build,meta,data,meta,data,meta,data,cluster,state,cluster,state,cluster,state,builder,meta,data,meta,data,build,cluster,state,previous,state,for,int,i,0,i,number,of,iterations,i,previous,state,cluster,state,meta,data,build,meta,data,for,version,meta,data,i,1,cluster,state,cluster,state,builder,cluster,state,increment,version,meta,data,meta,data,nodes,discovery,nodes,build,listeners,i,publish,state,master,action,cluster,state,previous,state,for,int,i,0,i,number,of,iterations,i,listeners,i,await,1,time,unit,seconds,master,cluster,state,cluster,state,for,mock,node,node,nodes,values,assert,same,state,node,cluster,state,cluster,state,assert,that,node,cluster,state,nodes,get,local,node,equal,to,node,discovery,node,assert,warnings,discovery,zen,enable,setting,was,deprecated,in,elasticsearch,and,will,be,removed,in,a,future,release,see,the,breaking,changes,documentation,for,the,next,major,version
PublishClusterStateActionTests -> public void testTimeoutOrCommit() throws Exception;1524684173;Tests that cluster is committed or times out. It should never be the case that we fail_an update due to a commit timeout, but it ends up being committed anyway;public void testTimeoutOrCommit() throws Exception {_        Settings settings = Settings.builder()_            _            .put(DiscoverySettings.COMMIT_TIMEOUT_SETTING.getKey(), "1ms").build()___        MockNode master = createMockNode("master", settings, null)__        MockNode node = createMockNode("node", settings, null)__        ClusterState state = ClusterState.builder(master.clusterState)_                .nodes(DiscoveryNodes.builder(master.clusterState.nodes())_                    .add(node.discoveryNode).masterNodeId(master.discoveryNode.getId())).build()___        for (int i = 0_ i < 10_ i++) {_            state = ClusterState.builder(state).incrementVersion().build()__            logger.debug("--> publishing version [{}], UUID [{}]", state.version(), state.stateUUID())__            boolean success__            try {_                publishState(master.action, state, master.clusterState, 2).await(1, TimeUnit.HOURS)__                success = true__            } catch (Discovery.FailedToCommitClusterStateException OK) {_                success = false__            }_            logger.debug("--> publishing [{}], verifying...", success ? "succeeded" : "failed")___            if (success) {_                assertSameState(node.clusterState, state)__            } else {_                assertThat(node.clusterState.stateUUID(), not(equalTo(state.stateUUID())))__            }_        }_    };tests,that,cluster,is,committed,or,times,out,it,should,never,be,the,case,that,we,fail,an,update,due,to,a,commit,timeout,but,it,ends,up,being,committed,anyway;public,void,test,timeout,or,commit,throws,exception,settings,settings,settings,builder,put,discovery,settings,get,key,1ms,build,mock,node,master,create,mock,node,master,settings,null,mock,node,node,create,mock,node,node,settings,null,cluster,state,state,cluster,state,builder,master,cluster,state,nodes,discovery,nodes,builder,master,cluster,state,nodes,add,node,discovery,node,master,node,id,master,discovery,node,get,id,build,for,int,i,0,i,10,i,state,cluster,state,builder,state,increment,version,build,logger,debug,publishing,version,uuid,state,version,state,state,uuid,boolean,success,try,publish,state,master,action,state,master,cluster,state,2,await,1,time,unit,hours,success,true,catch,discovery,failed,to,commit,cluster,state,exception,ok,success,false,logger,debug,publishing,verifying,success,succeeded,failed,if,success,assert,same,state,node,cluster,state,state,else,assert,that,node,cluster,state,state,uuid,not,equal,to,state,state,uuid
PublishClusterStateActionTests -> public void testTimeoutOrCommit() throws Exception;1526029249;Tests that cluster is committed or times out. It should never be the case that we fail_an update due to a commit timeout, but it ends up being committed anyway;public void testTimeoutOrCommit() throws Exception {_        Settings settings = Settings.builder()_            _            .put(DiscoverySettings.COMMIT_TIMEOUT_SETTING.getKey(), "1ms").build()___        MockNode master = createMockNode("master", settings, null)__        MockNode node = createMockNode("node", settings, null)__        ClusterState state = ClusterState.builder(master.clusterState)_                .nodes(DiscoveryNodes.builder(master.clusterState.nodes())_                    .add(node.discoveryNode).masterNodeId(master.discoveryNode.getId())).build()___        for (int i = 0_ i < 10_ i++) {_            state = ClusterState.builder(state).incrementVersion().build()__            logger.debug("--> publishing version [{}], UUID [{}]", state.version(), state.stateUUID())__            boolean success__            try {_                publishState(master.action, state, master.clusterState, 2).await(1, TimeUnit.HOURS)__                success = true__            } catch (Discovery.FailedToCommitClusterStateException OK) {_                success = false__            }_            logger.debug("--> publishing [{}], verifying...", success ? "succeeded" : "failed")___            if (success) {_                assertSameState(node.clusterState, state)__            } else {_                assertThat(node.clusterState.stateUUID(), not(equalTo(state.stateUUID())))__            }_        }_    };tests,that,cluster,is,committed,or,times,out,it,should,never,be,the,case,that,we,fail,an,update,due,to,a,commit,timeout,but,it,ends,up,being,committed,anyway;public,void,test,timeout,or,commit,throws,exception,settings,settings,settings,builder,put,discovery,settings,get,key,1ms,build,mock,node,master,create,mock,node,master,settings,null,mock,node,node,create,mock,node,node,settings,null,cluster,state,state,cluster,state,builder,master,cluster,state,nodes,discovery,nodes,builder,master,cluster,state,nodes,add,node,discovery,node,master,node,id,master,discovery,node,get,id,build,for,int,i,0,i,10,i,state,cluster,state,builder,state,increment,version,build,logger,debug,publishing,version,uuid,state,version,state,state,uuid,boolean,success,try,publish,state,master,action,state,master,cluster,state,2,await,1,time,unit,hours,success,true,catch,discovery,failed,to,commit,cluster,state,exception,ok,success,false,logger,debug,publishing,verifying,success,succeeded,failed,if,success,assert,same,state,node,cluster,state,state,else,assert,that,node,cluster,state,state,uuid,not,equal,to,state,state,uuid
PublishClusterStateActionTests -> public void testTimeoutOrCommit() throws Exception;1529015561;Tests that cluster is committed or times out. It should never be the case that we fail_an update due to a commit timeout, but it ends up being committed anyway;public void testTimeoutOrCommit() throws Exception {_        Settings settings = Settings.builder()_            _            .put(DiscoverySettings.COMMIT_TIMEOUT_SETTING.getKey(), "1ms").build()___        MockNode master = createMockNode("master", settings, null)__        MockNode node = createMockNode("node", settings, null)__        ClusterState state = ClusterState.builder(master.clusterState)_                .nodes(DiscoveryNodes.builder(master.clusterState.nodes())_                    .add(node.discoveryNode).masterNodeId(master.discoveryNode.getId())).build()___        for (int i = 0_ i < 10_ i++) {_            state = ClusterState.builder(state).incrementVersion().build()__            logger.debug("--> publishing version [{}], UUID [{}]", state.version(), state.stateUUID())__            boolean success__            try {_                publishState(master.action, state, master.clusterState, 2).await(1, TimeUnit.HOURS)__                success = true__            } catch (Discovery.FailedToCommitClusterStateException OK) {_                success = false__            }_            logger.debug("--> publishing [{}], verifying...", success ? "succeeded" : "failed")___            if (success) {_                assertSameState(node.clusterState, state)__            } else {_                assertThat(node.clusterState.stateUUID(), not(equalTo(state.stateUUID())))__            }_        }_    };tests,that,cluster,is,committed,or,times,out,it,should,never,be,the,case,that,we,fail,an,update,due,to,a,commit,timeout,but,it,ends,up,being,committed,anyway;public,void,test,timeout,or,commit,throws,exception,settings,settings,settings,builder,put,discovery,settings,get,key,1ms,build,mock,node,master,create,mock,node,master,settings,null,mock,node,node,create,mock,node,node,settings,null,cluster,state,state,cluster,state,builder,master,cluster,state,nodes,discovery,nodes,builder,master,cluster,state,nodes,add,node,discovery,node,master,node,id,master,discovery,node,get,id,build,for,int,i,0,i,10,i,state,cluster,state,builder,state,increment,version,build,logger,debug,publishing,version,uuid,state,version,state,state,uuid,boolean,success,try,publish,state,master,action,state,master,cluster,state,2,await,1,time,unit,hours,success,true,catch,discovery,failed,to,commit,cluster,state,exception,ok,success,false,logger,debug,publishing,verifying,success,succeeded,failed,if,success,assert,same,state,node,cluster,state,state,else,assert,that,node,cluster,state,state,uuid,not,equal,to,state,state,uuid
PublishClusterStateActionTests -> public void testTimeoutOrCommit() throws Exception;1541092382;Tests that cluster is committed or times out. It should never be the case that we fail_an update due to a commit timeout, but it ends up being committed anyway;public void testTimeoutOrCommit() throws Exception {_        Settings settings = Settings.builder()_            _            .put(DiscoverySettings.COMMIT_TIMEOUT_SETTING.getKey(), "1ms").build()___        MockNode master = createMockNode("master", settings, null)__        MockNode node = createMockNode("node", settings, null)__        ClusterState state = ClusterState.builder(master.clusterState)_                .nodes(DiscoveryNodes.builder(master.clusterState.nodes())_                    .add(node.discoveryNode).masterNodeId(master.discoveryNode.getId())).build()___        for (int i = 0_ i < 10_ i++) {_            state = ClusterState.builder(state).incrementVersion().build()__            logger.debug("--> publishing version [{}], UUID [{}]", state.version(), state.stateUUID())__            boolean success__            try {_                publishState(master.action, state, master.clusterState, 2).await(1, TimeUnit.HOURS)__                success = true__            } catch (Discovery.FailedToCommitClusterStateException OK) {_                success = false__            }_            logger.debug("--> publishing [{}], verifying...", success ? "succeeded" : "failed")___            if (success) {_                assertSameState(node.clusterState, state)__            } else {_                assertThat(node.clusterState.stateUUID(), not(equalTo(state.stateUUID())))__            }_        }_    };tests,that,cluster,is,committed,or,times,out,it,should,never,be,the,case,that,we,fail,an,update,due,to,a,commit,timeout,but,it,ends,up,being,committed,anyway;public,void,test,timeout,or,commit,throws,exception,settings,settings,settings,builder,put,discovery,settings,get,key,1ms,build,mock,node,master,create,mock,node,master,settings,null,mock,node,node,create,mock,node,node,settings,null,cluster,state,state,cluster,state,builder,master,cluster,state,nodes,discovery,nodes,builder,master,cluster,state,nodes,add,node,discovery,node,master,node,id,master,discovery,node,get,id,build,for,int,i,0,i,10,i,state,cluster,state,builder,state,increment,version,build,logger,debug,publishing,version,uuid,state,version,state,state,uuid,boolean,success,try,publish,state,master,action,state,master,cluster,state,2,await,1,time,unit,hours,success,true,catch,discovery,failed,to,commit,cluster,state,exception,ok,success,false,logger,debug,publishing,verifying,success,succeeded,failed,if,success,assert,same,state,node,cluster,state,state,else,assert,that,node,cluster,state,state,uuid,not,equal,to,state,state,uuid
PublishClusterStateActionTests -> public void testTimeoutOrCommit() throws Exception;1541698679;Tests that cluster is committed or times out. It should never be the case that we fail_an update due to a commit timeout, but it ends up being committed anyway;public void testTimeoutOrCommit() throws Exception {_        Settings settings = Settings.builder()_            _            .put(DiscoverySettings.COMMIT_TIMEOUT_SETTING.getKey(), "1ms").build()___        MockNode master = createMockNode("master", settings, null)__        MockNode node = createMockNode("node", settings, null)__        ClusterState state = ClusterState.builder(master.clusterState)_                .nodes(DiscoveryNodes.builder(master.clusterState.nodes())_                    .add(node.discoveryNode).masterNodeId(master.discoveryNode.getId())).build()___        for (int i = 0_ i < 10_ i++) {_            state = ClusterState.builder(state).incrementVersion().build()__            logger.debug("--> publishing version [{}], UUID [{}]", state.version(), state.stateUUID())__            boolean success__            try {_                publishState(master.action, state, master.clusterState, 2).await(1, TimeUnit.HOURS)__                success = true__            } catch (Discovery.FailedToCommitClusterStateException OK) {_                success = false__            }_            logger.debug("--> publishing [{}], verifying...", success ? "succeeded" : "failed")___            if (success) {_                assertSameState(node.clusterState, state)__            } else {_                assertThat(node.clusterState.stateUUID(), not(equalTo(state.stateUUID())))__            }_        }_    };tests,that,cluster,is,committed,or,times,out,it,should,never,be,the,case,that,we,fail,an,update,due,to,a,commit,timeout,but,it,ends,up,being,committed,anyway;public,void,test,timeout,or,commit,throws,exception,settings,settings,settings,builder,put,discovery,settings,get,key,1ms,build,mock,node,master,create,mock,node,master,settings,null,mock,node,node,create,mock,node,node,settings,null,cluster,state,state,cluster,state,builder,master,cluster,state,nodes,discovery,nodes,builder,master,cluster,state,nodes,add,node,discovery,node,master,node,id,master,discovery,node,get,id,build,for,int,i,0,i,10,i,state,cluster,state,builder,state,increment,version,build,logger,debug,publishing,version,uuid,state,version,state,state,uuid,boolean,success,try,publish,state,master,action,state,master,cluster,state,2,await,1,time,unit,hours,success,true,catch,discovery,failed,to,commit,cluster,state,exception,ok,success,false,logger,debug,publishing,verifying,success,succeeded,failed,if,success,assert,same,state,node,cluster,state,state,else,assert,that,node,cluster,state,state,uuid,not,equal,to,state,state,uuid
PublishClusterStateActionTests -> public void testTimeoutOrCommit() throws Exception;1544081506;Tests that cluster is committed or times out. It should never be the case that we fail_an update due to a commit timeout, but it ends up being committed anyway;public void testTimeoutOrCommit() throws Exception {_        Settings settings = Settings.builder()_            _            .put(DiscoverySettings.COMMIT_TIMEOUT_SETTING.getKey(), "1ms").build()___        MockNode master = createMockNode("master", settings, null)__        MockNode node = createMockNode("node", settings, null)__        ClusterState state = ClusterState.builder(master.clusterState)_                .nodes(DiscoveryNodes.builder(master.clusterState.nodes())_                    .add(node.discoveryNode).masterNodeId(master.discoveryNode.getId())).build()___        for (int i = 0_ i < 10_ i++) {_            state = ClusterState.builder(state).incrementVersion().build()__            logger.debug("--> publishing version [{}], UUID [{}]", state.version(), state.stateUUID())__            boolean success__            try {_                publishState(master.action, state, master.clusterState, 2).await(1, TimeUnit.HOURS)__                success = true__            } catch (FailedToCommitClusterStateException OK) {_                success = false__            }_            logger.debug("--> publishing [{}], verifying...", success ? "succeeded" : "failed")___            if (success) {_                assertSameState(node.clusterState, state)__            } else {_                assertThat(node.clusterState.stateUUID(), not(equalTo(state.stateUUID())))__            }_        }_    };tests,that,cluster,is,committed,or,times,out,it,should,never,be,the,case,that,we,fail,an,update,due,to,a,commit,timeout,but,it,ends,up,being,committed,anyway;public,void,test,timeout,or,commit,throws,exception,settings,settings,settings,builder,put,discovery,settings,get,key,1ms,build,mock,node,master,create,mock,node,master,settings,null,mock,node,node,create,mock,node,node,settings,null,cluster,state,state,cluster,state,builder,master,cluster,state,nodes,discovery,nodes,builder,master,cluster,state,nodes,add,node,discovery,node,master,node,id,master,discovery,node,get,id,build,for,int,i,0,i,10,i,state,cluster,state,builder,state,increment,version,build,logger,debug,publishing,version,uuid,state,version,state,state,uuid,boolean,success,try,publish,state,master,action,state,master,cluster,state,2,await,1,time,unit,hours,success,true,catch,failed,to,commit,cluster,state,exception,ok,success,false,logger,debug,publishing,verifying,success,succeeded,failed,if,success,assert,same,state,node,cluster,state,state,else,assert,that,node,cluster,state,state,uuid,not,equal,to,state,state,uuid
PublishClusterStateActionTests -> public void testTimeoutOrCommit() throws Exception;1544823664;Tests that cluster is committed or times out. It should never be the case that we fail_an update due to a commit timeout, but it ends up being committed anyway;public void testTimeoutOrCommit() throws Exception {_        Settings settings = Settings.builder()_            _            .put(DiscoverySettings.COMMIT_TIMEOUT_SETTING.getKey(), "1ms").build()___        MockNode master = createMockNode("master", settings, null)__        MockNode node = createMockNode("node", settings, null)__        ClusterState state = ClusterState.builder(master.clusterState)_                .nodes(DiscoveryNodes.builder(master.clusterState.nodes())_                    .add(node.discoveryNode).masterNodeId(master.discoveryNode.getId())).build()___        for (int i = 0_ i < 10_ i++) {_            state = ClusterState.builder(state).incrementVersion().build()__            logger.debug("--> publishing version [{}], UUID [{}]", state.version(), state.stateUUID())__            boolean success__            try {_                publishState(master.action, state, master.clusterState, 2).await(1, TimeUnit.HOURS)__                success = true__            } catch (FailedToCommitClusterStateException OK) {_                success = false__            }_            logger.debug("--> publishing [{}], verifying...", success ? "succeeded" : "failed")___            if (success) {_                assertSameState(node.clusterState, state)__            } else {_                assertThat(node.clusterState.stateUUID(), not(equalTo(state.stateUUID())))__            }_        }_    };tests,that,cluster,is,committed,or,times,out,it,should,never,be,the,case,that,we,fail,an,update,due,to,a,commit,timeout,but,it,ends,up,being,committed,anyway;public,void,test,timeout,or,commit,throws,exception,settings,settings,settings,builder,put,discovery,settings,get,key,1ms,build,mock,node,master,create,mock,node,master,settings,null,mock,node,node,create,mock,node,node,settings,null,cluster,state,state,cluster,state,builder,master,cluster,state,nodes,discovery,nodes,builder,master,cluster,state,nodes,add,node,discovery,node,master,node,id,master,discovery,node,get,id,build,for,int,i,0,i,10,i,state,cluster,state,builder,state,increment,version,build,logger,debug,publishing,version,uuid,state,version,state,state,uuid,boolean,success,try,publish,state,master,action,state,master,cluster,state,2,await,1,time,unit,hours,success,true,catch,failed,to,commit,cluster,state,exception,ok,success,false,logger,debug,publishing,verifying,success,succeeded,failed,if,success,assert,same,state,node,cluster,state,state,else,assert,that,node,cluster,state,state,uuid,not,equal,to,state,state,uuid
PublishClusterStateActionTests -> public void testTimeoutOrCommit() throws Exception;1549270328;Tests that cluster is committed or times out. It should never be the case that we fail_an update due to a commit timeout, but it ends up being committed anyway;public void testTimeoutOrCommit() throws Exception {_        Settings settings = Settings.builder()_            _            .put(DiscoverySettings.COMMIT_TIMEOUT_SETTING.getKey(), "1ms").build()___        MockNode master = createMockNode("master", settings, null)__        MockNode node = createMockNode("node", settings, null)__        ClusterState state = ClusterState.builder(master.clusterState)_                .nodes(DiscoveryNodes.builder(master.clusterState.nodes())_                    .add(node.discoveryNode).masterNodeId(master.discoveryNode.getId())).build()___        for (int i = 0_ i < 10_ i++) {_            state = ClusterState.builder(state).incrementVersion().build()__            logger.debug("--> publishing version [{}], UUID [{}]", state.version(), state.stateUUID())__            boolean success__            try {_                publishState(master.action, state, master.clusterState, 2).await(1, TimeUnit.HOURS)__                success = true__            } catch (FailedToCommitClusterStateException OK) {_                success = false__            }_            logger.debug("--> publishing [{}], verifying...", success ? "succeeded" : "failed")___            if (success) {_                assertSameState(node.clusterState, state)__            } else {_                assertThat(node.clusterState.stateUUID(), not(equalTo(state.stateUUID())))__            }_        }__        assertWarnings(_            "[discovery.zen.commit_timeout] setting was deprecated in Elasticsearch and will be removed in a future release! " +_                "See the breaking changes documentation for the next major version.")__    };tests,that,cluster,is,committed,or,times,out,it,should,never,be,the,case,that,we,fail,an,update,due,to,a,commit,timeout,but,it,ends,up,being,committed,anyway;public,void,test,timeout,or,commit,throws,exception,settings,settings,settings,builder,put,discovery,settings,get,key,1ms,build,mock,node,master,create,mock,node,master,settings,null,mock,node,node,create,mock,node,node,settings,null,cluster,state,state,cluster,state,builder,master,cluster,state,nodes,discovery,nodes,builder,master,cluster,state,nodes,add,node,discovery,node,master,node,id,master,discovery,node,get,id,build,for,int,i,0,i,10,i,state,cluster,state,builder,state,increment,version,build,logger,debug,publishing,version,uuid,state,version,state,state,uuid,boolean,success,try,publish,state,master,action,state,master,cluster,state,2,await,1,time,unit,hours,success,true,catch,failed,to,commit,cluster,state,exception,ok,success,false,logger,debug,publishing,verifying,success,succeeded,failed,if,success,assert,same,state,node,cluster,state,state,else,assert,that,node,cluster,state,state,uuid,not,equal,to,state,state,uuid,assert,warnings,discovery,zen,setting,was,deprecated,in,elasticsearch,and,will,be,removed,in,a,future,release,see,the,breaking,changes,documentation,for,the,next,major,version
