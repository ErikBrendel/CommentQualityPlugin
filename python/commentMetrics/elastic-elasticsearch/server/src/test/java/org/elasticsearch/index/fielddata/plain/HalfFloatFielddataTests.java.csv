commented;modifiers;parameterAmount;loc;comment;code
false;public;0;19;;public void testSingleValued() throws IOException {     Directory dir = newDirectory().     // we need the default codec to check for singletons     IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(null).setCodec(TestUtil.getDefaultCodec())).     Document doc = new Document().     for (IndexableField f : NumberFieldMapper.NumberType.HALF_FLOAT.createFields("half_float", 3f, false, true, false)) {         doc.add(f).     }     w.addDocument(doc).     final DirectoryReader dirReader = DirectoryReader.open(w).     LeafReader reader = getOnlyLeafReader(dirReader).     SortedNumericDoubleValues values = new SortedNumericDVIndexFieldData.SortedNumericHalfFloatFieldData(reader, "half_float").getDoubleValues().     assertNotNull(FieldData.unwrapSingleton(values)).     assertTrue(values.advanceExact(0)).     assertEquals(1, values.docValueCount()).     assertEquals(3f, values.nextValue(), 0f).     IOUtils.close(dirReader, w, dir). }
false;public;0;22;;public void testMultiValued() throws IOException {     Directory dir = newDirectory().     IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(null)).     Document doc = new Document().     for (IndexableField f : NumberFieldMapper.NumberType.HALF_FLOAT.createFields("half_float", 3f, false, true, false)) {         doc.add(f).     }     for (IndexableField f : NumberFieldMapper.NumberType.HALF_FLOAT.createFields("half_float", 2f, false, true, false)) {         doc.add(f).     }     w.addDocument(doc).     final DirectoryReader dirReader = DirectoryReader.open(w).     LeafReader reader = getOnlyLeafReader(dirReader).     SortedNumericDoubleValues values = new SortedNumericDVIndexFieldData.SortedNumericHalfFloatFieldData(reader, "half_float").getDoubleValues().     assertNull(FieldData.unwrapSingleton(values)).     assertTrue(values.advanceExact(0)).     assertEquals(2, values.docValueCount()).     assertEquals(2f, values.nextValue(), 0f).     assertEquals(3f, values.nextValue(), 0f).     IOUtils.close(dirReader, w, dir). }
