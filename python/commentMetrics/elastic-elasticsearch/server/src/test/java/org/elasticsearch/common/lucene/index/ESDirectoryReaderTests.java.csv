commented;modifiers;parameterAmount;loc;comment;code
true;public;0;32;/**  * Test that core cache key (needed for NRT) is working  */ ;/**  * Test that core cache key (needed for NRT) is working  */ public void testCoreCacheKey() throws Exception {     Directory dir = newDirectory().     IndexWriterConfig iwc = new IndexWriterConfig(null).     iwc.setMaxBufferedDocs(100).     iwc.setMergePolicy(NoMergePolicy.INSTANCE).     IndexWriter iw = new IndexWriter(dir, iwc).     // add two docs, id:0 and id:1     Document doc = new Document().     Field idField = new StringField("id", "", Field.Store.NO).     doc.add(idField).     idField.setStringValue("0").     iw.addDocument(doc).     idField.setStringValue("1").     iw.addDocument(doc).     // open reader     ShardId shardId = new ShardId("fake", "_na_", 1).     DirectoryReader ir = ElasticsearchDirectoryReader.wrap(DirectoryReader.open(iw), shardId).     assertEquals(2, ir.numDocs()).     assertEquals(1, ir.leaves().size()).     // delete id:0 and reopen     iw.deleteDocuments(new Term("id", "0")).     DirectoryReader ir2 = DirectoryReader.openIfChanged(ir).     // we should have the same cache key as before     assertEquals(1, ir2.numDocs()).     assertEquals(1, ir2.leaves().size()).     assertSame(ir.leaves().get(0).reader().getCoreCacheHelper().getKey(), ir2.leaves().get(0).reader().getCoreCacheHelper().getKey()).     IOUtils.close(ir, ir2, iw, dir). }
