commented;modifiers;parameterAmount;loc;comment;code
false;public,static;0;9;;@BeforeClass public static void initClient() {     // this client will not be hit by any request, but it needs to be a non null proper client     // that is why we create it but we don't add any transport address to it     Settings settings = Settings.builder().put(Environment.PATH_HOME_SETTING.getKey(), createTempDir().toString()).build().     client = new MockTransportClient(settings). }
false;public,static;0;5;;@AfterClass public static void closeClient() {     client.close().     client = null. }
false;public;0;4;;public void testEmptySourceToString() {     SearchRequestBuilder searchRequestBuilder = client.prepareSearch().     assertThat(searchRequestBuilder.toString(), equalTo(new SearchSourceBuilder().toString())). }
false;public;0;5;;public void testQueryBuilderQueryToString() {     SearchRequestBuilder searchRequestBuilder = client.prepareSearch().     searchRequestBuilder.setQuery(QueryBuilders.matchAllQuery()).     assertThat(searchRequestBuilder.toString(), equalTo(new SearchSourceBuilder().query(QueryBuilders.matchAllQuery()).toString())). }
false;public;0;6;;public void testSearchSourceBuilderToString() {     SearchRequestBuilder searchRequestBuilder = client.prepareSearch().     searchRequestBuilder.setSource(new SearchSourceBuilder().query(QueryBuilders.termQuery("field", "value"))).     assertThat(searchRequestBuilder.toString(), equalTo(new SearchSourceBuilder().query(QueryBuilders.termQuery("field", "value")).toString())). }
false;public;0;9;;public void testThatToStringDoesntWipeRequestSource() {     SearchRequestBuilder searchRequestBuilder = client.prepareSearch().setSource(new SearchSourceBuilder().query(QueryBuilders.termQuery("field", "value"))).     String preToString = searchRequestBuilder.request().toString().     assertThat(searchRequestBuilder.toString(), equalTo(new SearchSourceBuilder().query(QueryBuilders.termQuery("field", "value")).toString())).     String postToString = searchRequestBuilder.request().toString().     assertThat(preToString, equalTo(postToString)). }
