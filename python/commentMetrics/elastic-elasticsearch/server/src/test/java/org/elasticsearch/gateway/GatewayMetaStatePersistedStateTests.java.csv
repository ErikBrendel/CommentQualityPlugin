commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Override public void setUp() throws Exception {     nodeEnvironment = newNodeEnvironment().     localNode = new DiscoveryNode("node1", buildNewFakeTransportAddress(), Collections.emptyMap(), Sets.newHashSet(DiscoveryNode.Role.MASTER), Version.CURRENT).     clusterName = new ClusterName(randomAlphaOfLength(10)).     settings = Settings.builder().put(ClusterName.CLUSTER_NAME_SETTING.getKey(), clusterName.value()).build().     super.setUp(). }
false;public;0;5;;@Override public void tearDown() throws Exception {     nodeEnvironment.close().     super.tearDown(). }
false;private;0;5;;private MockGatewayMetaState newGateway() throws IOException {     MockGatewayMetaState gateway = new MockGatewayMetaState(settings, nodeEnvironment, xContentRegistry(), localNode).     gateway.applyClusterStateUpdaters().     return gateway. }
false;private;1;6;;private MockGatewayMetaState maybeNew(MockGatewayMetaState gateway) throws IOException {     if (randomBoolean()) {         return newGateway().     }     return gateway. }
false;public;0;11;;public void testInitialState() throws IOException {     MockGatewayMetaState gateway = newGateway().     ClusterState state = gateway.getLastAcceptedState().     assertThat(state.getClusterName(), equalTo(clusterName)).     assertTrue(MetaData.isGlobalStateEquals(state.metaData(), MetaData.EMPTY_META_DATA)).     assertThat(state.getVersion(), equalTo(Manifest.empty().getClusterStateVersion())).     assertThat(state.getNodes().getLocalNode(), equalTo(localNode)).     long currentTerm = gateway.getCurrentTerm().     assertThat(currentTerm, equalTo(Manifest.empty().getCurrentTerm())). }
false;public;0;10;;public void testSetCurrentTerm() throws IOException {     MockGatewayMetaState gateway = newGateway().     for (int i = 0. i < randomIntBetween(1, 5). i++) {         final long currentTerm = randomNonNegativeLong().         gateway.setCurrentTerm(currentTerm).         gateway = maybeNew(gateway).         assertThat(gateway.getCurrentTerm(), equalTo(currentTerm)).     } }
false;private;2;7;;private ClusterState createClusterState(long version, MetaData metaData) {     return ClusterState.builder(clusterName).nodes(DiscoveryNodes.builder().add(localNode).localNodeId(localNode.getId()).build()).version(version).metaData(metaData).build(). }
false;private;1;15;;private CoordinationMetaData createCoordinationMetaData(long term) {     CoordinationMetaData.Builder builder = CoordinationMetaData.builder().     builder.term(term).     builder.lastAcceptedConfiguration(new CoordinationMetaData.VotingConfiguration(Sets.newHashSet(generateRandomStringArray(10, 10, false)))).     builder.lastCommittedConfiguration(new CoordinationMetaData.VotingConfiguration(Sets.newHashSet(generateRandomStringArray(10, 10, false)))).     for (int i = 0. i < randomIntBetween(0, 5). i++) {         builder.addVotingConfigExclusion(new VotingConfigExclusion(randomAlphaOfLength(10), randomAlphaOfLength(10))).     }     return builder.build(). }
false;private;3;10;;private IndexMetaData createIndexMetaData(String indexName, int numberOfShards, long version) {     return IndexMetaData.builder(indexName).settings(Settings.builder().put(IndexMetaData.SETTING_INDEX_UUID, indexName).put(IndexMetaData.SETTING_NUMBER_OF_SHARDS, numberOfShards).put(IndexMetaData.SETTING_NUMBER_OF_REPLICAS, 0).put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT).build()).version(version).build(). }
false;private;2;7;;private void assertClusterStateEqual(ClusterState expected, ClusterState actual) {     assertThat(actual.version(), equalTo(expected.version())).     assertTrue(MetaData.isGlobalStateEquals(actual.metaData(), expected.metaData())).     for (IndexMetaData indexMetaData : expected.metaData()) {         assertThat(actual.metaData().index(indexMetaData.getIndex()), equalTo(indexMetaData)).     } }
false;public;0;22;;public void testSetLastAcceptedState() throws IOException {     MockGatewayMetaState gateway = newGateway().     final long term = randomNonNegativeLong().     for (int i = 0. i < randomIntBetween(1, 5). i++) {         final long version = randomNonNegativeLong().         final String indexName = randomAlphaOfLength(10).         final IndexMetaData indexMetaData = createIndexMetaData(indexName, randomIntBetween(1, 5), randomNonNegativeLong()).         final MetaData metaData = MetaData.builder().persistentSettings(Settings.builder().put(randomAlphaOfLength(10), randomAlphaOfLength(10)).build()).coordinationMetaData(createCoordinationMetaData(term)).put(indexMetaData, false).build().         ClusterState state = createClusterState(version, metaData).         gateway.setLastAcceptedState(state).         gateway = maybeNew(gateway).         ClusterState lastAcceptedState = gateway.getLastAcceptedState().         assertClusterStateEqual(state, lastAcceptedState).     } }
false;public;0;23;;public void testSetLastAcceptedStateTermChanged() throws IOException {     MockGatewayMetaState gateway = newGateway().     final String indexName = randomAlphaOfLength(10).     final int numberOfShards = randomIntBetween(1, 5).     final long version = randomNonNegativeLong().     final long term = randomNonNegativeLong().     final IndexMetaData indexMetaData = createIndexMetaData(indexName, numberOfShards, version).     final ClusterState state = createClusterState(randomNonNegativeLong(), MetaData.builder().coordinationMetaData(createCoordinationMetaData(term)).put(indexMetaData, false).build()).     gateway.setLastAcceptedState(state).     gateway = maybeNew(gateway).     final long newTerm = randomValueOtherThan(term, () -> randomNonNegativeLong()).     final int newNumberOfShards = randomValueOtherThan(numberOfShards, () -> randomIntBetween(1, 5)).     final IndexMetaData newIndexMetaData = createIndexMetaData(indexName, newNumberOfShards, version).     final ClusterState newClusterState = createClusterState(randomNonNegativeLong(), MetaData.builder().coordinationMetaData(createCoordinationMetaData(newTerm)).put(newIndexMetaData, false).build()).     gateway.setLastAcceptedState(newClusterState).     gateway = maybeNew(gateway).     assertThat(gateway.getLastAcceptedState().metaData().index(indexName), equalTo(newIndexMetaData)). }
false;public;0;14;;public void testCurrentTermAndTermAreDifferent() throws IOException {     MockGatewayMetaState gateway = newGateway().     long currentTerm = randomNonNegativeLong().     long term = randomValueOtherThan(currentTerm, () -> randomNonNegativeLong()).     gateway.setCurrentTerm(currentTerm).     gateway.setLastAcceptedState(createClusterState(randomNonNegativeLong(), MetaData.builder().coordinationMetaData(CoordinationMetaData.builder().term(term).build()).build())).     gateway = maybeNew(gateway).     assertThat(gateway.getCurrentTerm(), equalTo(currentTerm)).     assertThat(gateway.getLastAcceptedState().coordinationMetaData().term(), equalTo(term)). }
false;public;0;32;;public void testMarkAcceptedConfigAsCommitted() throws IOException {     MockGatewayMetaState gateway = newGateway().     // generate random coordinationMetaData with different lastAcceptedConfiguration and lastCommittedConfiguration     CoordinationMetaData coordinationMetaData.     do {         coordinationMetaData = createCoordinationMetaData(randomNonNegativeLong()).     } while (coordinationMetaData.getLastAcceptedConfiguration().equals(coordinationMetaData.getLastCommittedConfiguration())).     ClusterState state = createClusterState(randomNonNegativeLong(), MetaData.builder().coordinationMetaData(coordinationMetaData).clusterUUID(randomAlphaOfLength(10)).build()).     gateway.setLastAcceptedState(state).     gateway = maybeNew(gateway).     assertThat(gateway.getLastAcceptedState().getLastAcceptedConfiguration(), not(equalTo(gateway.getLastAcceptedState().getLastCommittedConfiguration()))).     gateway.markLastAcceptedStateAsCommitted().     CoordinationMetaData expectedCoordinationMetaData = CoordinationMetaData.builder(coordinationMetaData).lastCommittedConfiguration(coordinationMetaData.getLastAcceptedConfiguration()).build().     ClusterState expectedClusterState = ClusterState.builder(state).metaData(MetaData.builder().coordinationMetaData(expectedCoordinationMetaData).clusterUUID(state.metaData().clusterUUID()).clusterUUIDCommitted(true).build()).build().     gateway = maybeNew(gateway).     assertClusterStateEqual(expectedClusterState, gateway.getLastAcceptedState()).     gateway.markLastAcceptedStateAsCommitted().     gateway = maybeNew(gateway).     assertClusterStateEqual(expectedClusterState, gateway.getLastAcceptedState()). }
