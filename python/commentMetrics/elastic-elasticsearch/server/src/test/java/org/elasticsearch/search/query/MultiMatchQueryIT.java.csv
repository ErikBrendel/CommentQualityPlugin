# id;timestamp;commentText;codeText;commentWords;codeWords
MultiMatchQueryIT -> public void testFuzzyFieldLevelBoosting() throws InterruptedException, ExecutionException;1524684173;Test for edge case where field level boosting is applied to field that doesn't exist on documents on_one shard. There was an issue reported in https://github.com/elastic/elasticsearch/issues/18710 where a_`multi_match` query using the fuzziness parameter with a boost on one of two fields returns the_same document score if both documents are placed on different shard. This test recreates that scenario_and checks that the returned scores are different.;public void testFuzzyFieldLevelBoosting() throws InterruptedException, ExecutionException {_        String idx = "test18710"__        CreateIndexRequestBuilder builder = prepareCreate(idx).setSettings(Settings.builder()_                .put(indexSettings())_                .put(SETTING_NUMBER_OF_SHARDS, 3)_                .put(SETTING_NUMBER_OF_REPLICAS, 0)_                )__        assertAcked(builder.addMapping("type", "title", "type=text", "body", "type=text"))__        ensureGreen()__        List<IndexRequestBuilder> builders = new ArrayList<>()__        builders.add(client().prepareIndex(idx, "type", "1").setSource(_                "title", "foo",_                "body", "bar"))__        builders.add(client().prepareIndex(idx, "type", "2").setSource(_                "title", "bar",_                "body", "foo"))__        indexRandom(true, false, builders)___        SearchResponse searchResponse = client().prepareSearch(idx)_                .setExplain(true)_                .setQuery(multiMatchQuery("foo").field("title", 100).field("body")_                        .fuzziness(0)_                        ).get()__        SearchHit[] hits = searchResponse.getHits().getHits()__        assertNotEquals("both documents should be on different shards", hits[0].getShard().getShardId(), hits[1].getShard().getShardId())__        assertEquals("1", hits[0].getId())__        assertEquals("2", hits[1].getId())__        assertThat(hits[0].getScore(), greaterThan(hits[1].getScore()))__    };test,for,edge,case,where,field,level,boosting,is,applied,to,field,that,doesn,t,exist,on,documents,on,one,shard,there,was,an,issue,reported,in,https,github,com,elastic,elasticsearch,issues,18710,where,a,query,using,the,fuzziness,parameter,with,a,boost,on,one,of,two,fields,returns,the,same,document,score,if,both,documents,are,placed,on,different,shard,this,test,recreates,that,scenario,and,checks,that,the,returned,scores,are,different;public,void,test,fuzzy,field,level,boosting,throws,interrupted,exception,execution,exception,string,idx,test18710,create,index,request,builder,builder,prepare,create,idx,set,settings,settings,builder,put,index,settings,put,3,put,0,assert,acked,builder,add,mapping,type,title,type,text,body,type,text,ensure,green,list,index,request,builder,builders,new,array,list,builders,add,client,prepare,index,idx,type,1,set,source,title,foo,body,bar,builders,add,client,prepare,index,idx,type,2,set,source,title,bar,body,foo,index,random,true,false,builders,search,response,search,response,client,prepare,search,idx,set,explain,true,set,query,multi,match,query,foo,field,title,100,field,body,fuzziness,0,get,search,hit,hits,search,response,get,hits,get,hits,assert,not,equals,both,documents,should,be,on,different,shards,hits,0,get,shard,get,shard,id,hits,1,get,shard,get,shard,id,assert,equals,1,hits,0,get,id,assert,equals,2,hits,1,get,id,assert,that,hits,0,get,score,greater,than,hits,1,get,score
MultiMatchQueryIT -> public void testFuzzyFieldLevelBoosting() throws InterruptedException, ExecutionException;1526289033;Test for edge case where field level boosting is applied to field that doesn't exist on documents on_one shard. There was an issue reported in https://github.com/elastic/elasticsearch/issues/18710 where a_`multi_match` query using the fuzziness parameter with a boost on one of two fields returns the_same document score if both documents are placed on different shard. This test recreates that scenario_and checks that the returned scores are different.;public void testFuzzyFieldLevelBoosting() throws InterruptedException, ExecutionException {_        String idx = "test18710"__        CreateIndexRequestBuilder builder = prepareCreate(idx).setSettings(Settings.builder()_                .put(indexSettings())_                .put(SETTING_NUMBER_OF_SHARDS, 3)_                .put(SETTING_NUMBER_OF_REPLICAS, 0)_                )__        assertAcked(builder.addMapping("type", "title", "type=text", "body", "type=text"))__        ensureGreen()__        List<IndexRequestBuilder> builders = new ArrayList<>()__        builders.add(client().prepareIndex(idx, "type", "1").setSource(_                "title", "foo",_                "body", "bar"))__        builders.add(client().prepareIndex(idx, "type", "2").setSource(_                "title", "bar",_                "body", "foo"))__        indexRandom(true, false, builders)___        SearchResponse searchResponse = client().prepareSearch(idx)_                .setExplain(true)_                .setQuery(multiMatchQuery("foo").field("title", 100).field("body")_                        .fuzziness(0)_                        ).get()__        SearchHit[] hits = searchResponse.getHits().getHits()__        assertNotEquals("both documents should be on different shards", hits[0].getShard().getShardId(), hits[1].getShard().getShardId())__        assertEquals("1", hits[0].getId())__        assertEquals("2", hits[1].getId())__        assertThat(hits[0].getScore(), greaterThan(hits[1].getScore()))__    };test,for,edge,case,where,field,level,boosting,is,applied,to,field,that,doesn,t,exist,on,documents,on,one,shard,there,was,an,issue,reported,in,https,github,com,elastic,elasticsearch,issues,18710,where,a,query,using,the,fuzziness,parameter,with,a,boost,on,one,of,two,fields,returns,the,same,document,score,if,both,documents,are,placed,on,different,shard,this,test,recreates,that,scenario,and,checks,that,the,returned,scores,are,different;public,void,test,fuzzy,field,level,boosting,throws,interrupted,exception,execution,exception,string,idx,test18710,create,index,request,builder,builder,prepare,create,idx,set,settings,settings,builder,put,index,settings,put,3,put,0,assert,acked,builder,add,mapping,type,title,type,text,body,type,text,ensure,green,list,index,request,builder,builders,new,array,list,builders,add,client,prepare,index,idx,type,1,set,source,title,foo,body,bar,builders,add,client,prepare,index,idx,type,2,set,source,title,bar,body,foo,index,random,true,false,builders,search,response,search,response,client,prepare,search,idx,set,explain,true,set,query,multi,match,query,foo,field,title,100,field,body,fuzziness,0,get,search,hit,hits,search,response,get,hits,get,hits,assert,not,equals,both,documents,should,be,on,different,shards,hits,0,get,shard,get,shard,id,hits,1,get,shard,get,shard,id,assert,equals,1,hits,0,get,id,assert,equals,2,hits,1,get,id,assert,that,hits,0,get,score,greater,than,hits,1,get,score
MultiMatchQueryIT -> public void testFuzzyFieldLevelBoosting() throws InterruptedException, ExecutionException;1527622193;Test for edge case where field level boosting is applied to field that doesn't exist on documents on_one shard. There was an issue reported in https://github.com/elastic/elasticsearch/issues/18710 where a_`multi_match` query using the fuzziness parameter with a boost on one of two fields returns the_same document score if both documents are placed on different shard. This test recreates that scenario_and checks that the returned scores are different.;public void testFuzzyFieldLevelBoosting() throws InterruptedException, ExecutionException {_        String idx = "test18710"__        CreateIndexRequestBuilder builder = prepareCreate(idx).setSettings(Settings.builder()_                .put(indexSettings())_                .put(SETTING_NUMBER_OF_SHARDS, 3)_                .put(SETTING_NUMBER_OF_REPLICAS, 0)_                )__        assertAcked(builder.addMapping("type", "title", "type=text", "body", "type=text"))__        ensureGreen()__        List<IndexRequestBuilder> builders = new ArrayList<>()__        builders.add(client().prepareIndex(idx, "type", "1").setSource(_                "title", "foo",_                "body", "bar"))__        builders.add(client().prepareIndex(idx, "type", "2").setSource(_                "title", "bar",_                "body", "foo"))__        indexRandom(true, false, builders)___        SearchResponse searchResponse = client().prepareSearch(idx)_                .setExplain(true)_                .setQuery(multiMatchQuery("foo").field("title", 100).field("body")_                        .fuzziness(0)_                        ).get()__        SearchHit[] hits = searchResponse.getHits().getHits()__        assertNotEquals("both documents should be on different shards", hits[0].getShard().getShardId(), hits[1].getShard().getShardId())__        assertEquals("1", hits[0].getId())__        assertEquals("2", hits[1].getId())__        assertThat(hits[0].getScore(), greaterThan(hits[1].getScore()))__    };test,for,edge,case,where,field,level,boosting,is,applied,to,field,that,doesn,t,exist,on,documents,on,one,shard,there,was,an,issue,reported,in,https,github,com,elastic,elasticsearch,issues,18710,where,a,query,using,the,fuzziness,parameter,with,a,boost,on,one,of,two,fields,returns,the,same,document,score,if,both,documents,are,placed,on,different,shard,this,test,recreates,that,scenario,and,checks,that,the,returned,scores,are,different;public,void,test,fuzzy,field,level,boosting,throws,interrupted,exception,execution,exception,string,idx,test18710,create,index,request,builder,builder,prepare,create,idx,set,settings,settings,builder,put,index,settings,put,3,put,0,assert,acked,builder,add,mapping,type,title,type,text,body,type,text,ensure,green,list,index,request,builder,builders,new,array,list,builders,add,client,prepare,index,idx,type,1,set,source,title,foo,body,bar,builders,add,client,prepare,index,idx,type,2,set,source,title,bar,body,foo,index,random,true,false,builders,search,response,search,response,client,prepare,search,idx,set,explain,true,set,query,multi,match,query,foo,field,title,100,field,body,fuzziness,0,get,search,hit,hits,search,response,get,hits,get,hits,assert,not,equals,both,documents,should,be,on,different,shards,hits,0,get,shard,get,shard,id,hits,1,get,shard,get,shard,id,assert,equals,1,hits,0,get,id,assert,equals,2,hits,1,get,id,assert,that,hits,0,get,score,greater,than,hits,1,get,score
MultiMatchQueryIT -> public void testFuzzyFieldLevelBoosting() throws InterruptedException, ExecutionException;1544035746;Test for edge case where field level boosting is applied to field that doesn't exist on documents on_one shard. There was an issue reported in https://github.com/elastic/elasticsearch/issues/18710 where a_`multi_match` query using the fuzziness parameter with a boost on one of two fields returns the_same document score if both documents are placed on different shard. This test recreates that scenario_and checks that the returned scores are different.;public void testFuzzyFieldLevelBoosting() throws InterruptedException, ExecutionException {_        String idx = "test18710"__        CreateIndexRequestBuilder builder = prepareCreate(idx).setSettings(Settings.builder()_                .put(indexSettings())_                .put(SETTING_NUMBER_OF_SHARDS, 3)_                .put(SETTING_NUMBER_OF_REPLICAS, 0)_                )__        assertAcked(builder.addMapping("type", "title", "type=text", "body", "type=text"))__        ensureGreen()__        List<IndexRequestBuilder> builders = new ArrayList<>()__        builders.add(client().prepareIndex(idx, "type", "1").setSource(_                "title", "foo",_                "body", "bar"))__        builders.add(client().prepareIndex(idx, "type", "2").setSource(_                "title", "bar",_                "body", "foo"))__        indexRandom(true, false, builders)___        SearchResponse searchResponse = client().prepareSearch(idx)_                .setExplain(true)_                .setQuery(multiMatchQuery("foo").field("title", 100).field("body")_                        .fuzziness(0)_                        ).get()__        SearchHit[] hits = searchResponse.getHits().getHits()__        assertNotEquals("both documents should be on different shards", hits[0].getShard().getShardId(), hits[1].getShard().getShardId())__        assertEquals("1", hits[0].getId())__        assertEquals("2", hits[1].getId())__        assertThat(hits[0].getScore(), greaterThan(hits[1].getScore()))__    };test,for,edge,case,where,field,level,boosting,is,applied,to,field,that,doesn,t,exist,on,documents,on,one,shard,there,was,an,issue,reported,in,https,github,com,elastic,elasticsearch,issues,18710,where,a,query,using,the,fuzziness,parameter,with,a,boost,on,one,of,two,fields,returns,the,same,document,score,if,both,documents,are,placed,on,different,shard,this,test,recreates,that,scenario,and,checks,that,the,returned,scores,are,different;public,void,test,fuzzy,field,level,boosting,throws,interrupted,exception,execution,exception,string,idx,test18710,create,index,request,builder,builder,prepare,create,idx,set,settings,settings,builder,put,index,settings,put,3,put,0,assert,acked,builder,add,mapping,type,title,type,text,body,type,text,ensure,green,list,index,request,builder,builders,new,array,list,builders,add,client,prepare,index,idx,type,1,set,source,title,foo,body,bar,builders,add,client,prepare,index,idx,type,2,set,source,title,bar,body,foo,index,random,true,false,builders,search,response,search,response,client,prepare,search,idx,set,explain,true,set,query,multi,match,query,foo,field,title,100,field,body,fuzziness,0,get,search,hit,hits,search,response,get,hits,get,hits,assert,not,equals,both,documents,should,be,on,different,shards,hits,0,get,shard,get,shard,id,hits,1,get,shard,get,shard,id,assert,equals,1,hits,0,get,id,assert,equals,2,hits,1,get,id,assert,that,hits,0,get,score,greater,than,hits,1,get,score
MultiMatchQueryIT -> public void testFuzzyFieldLevelBoosting() throws InterruptedException, ExecutionException;1544110272;Test for edge case where field level boosting is applied to field that doesn't exist on documents on_one shard. There was an issue reported in https://github.com/elastic/elasticsearch/issues/18710 where a_`multi_match` query using the fuzziness parameter with a boost on one of two fields returns the_same document score if both documents are placed on different shard. This test recreates that scenario_and checks that the returned scores are different.;public void testFuzzyFieldLevelBoosting() throws InterruptedException, ExecutionException {_        String idx = "test18710"__        CreateIndexRequestBuilder builder = prepareCreate(idx).setSettings(Settings.builder()_                .put(indexSettings())_                .put(SETTING_NUMBER_OF_SHARDS, 3)_                .put(SETTING_NUMBER_OF_REPLICAS, 0)_                )__        assertAcked(builder.addMapping("type", "title", "type=text", "body", "type=text"))__        ensureGreen()__        List<IndexRequestBuilder> builders = new ArrayList<>()__        builders.add(client().prepareIndex(idx, "type", "1").setSource(_                "title", "foo",_                "body", "bar"))__        builders.add(client().prepareIndex(idx, "type", "2").setSource(_                "title", "bar",_                "body", "foo"))__        indexRandom(true, false, builders)___        SearchResponse searchResponse = client().prepareSearch(idx)_                .setExplain(true)_                .setQuery(multiMatchQuery("foo").field("title", 100).field("body")_                        .fuzziness(0)_                        ).get()__        SearchHit[] hits = searchResponse.getHits().getHits()__        assertNotEquals("both documents should be on different shards", hits[0].getShard().getShardId(), hits[1].getShard().getShardId())__        assertEquals("1", hits[0].getId())__        assertEquals("2", hits[1].getId())__        assertThat(hits[0].getScore(), greaterThan(hits[1].getScore()))__    };test,for,edge,case,where,field,level,boosting,is,applied,to,field,that,doesn,t,exist,on,documents,on,one,shard,there,was,an,issue,reported,in,https,github,com,elastic,elasticsearch,issues,18710,where,a,query,using,the,fuzziness,parameter,with,a,boost,on,one,of,two,fields,returns,the,same,document,score,if,both,documents,are,placed,on,different,shard,this,test,recreates,that,scenario,and,checks,that,the,returned,scores,are,different;public,void,test,fuzzy,field,level,boosting,throws,interrupted,exception,execution,exception,string,idx,test18710,create,index,request,builder,builder,prepare,create,idx,set,settings,settings,builder,put,index,settings,put,3,put,0,assert,acked,builder,add,mapping,type,title,type,text,body,type,text,ensure,green,list,index,request,builder,builders,new,array,list,builders,add,client,prepare,index,idx,type,1,set,source,title,foo,body,bar,builders,add,client,prepare,index,idx,type,2,set,source,title,bar,body,foo,index,random,true,false,builders,search,response,search,response,client,prepare,search,idx,set,explain,true,set,query,multi,match,query,foo,field,title,100,field,body,fuzziness,0,get,search,hit,hits,search,response,get,hits,get,hits,assert,not,equals,both,documents,should,be,on,different,shards,hits,0,get,shard,get,shard,id,hits,1,get,shard,get,shard,id,assert,equals,1,hits,0,get,id,assert,equals,2,hits,1,get,id,assert,that,hits,0,get,score,greater,than,hits,1,get,score
MultiMatchQueryIT -> public void testFuzzyFieldLevelBoosting() throws InterruptedException, ExecutionException;1544728396;Test for edge case where field level boosting is applied to field that doesn't exist on documents on_one shard. There was an issue reported in https://github.com/elastic/elasticsearch/issues/18710 where a_`multi_match` query using the fuzziness parameter with a boost on one of two fields returns the_same document score if both documents are placed on different shard. This test recreates that scenario_and checks that the returned scores are different.;public void testFuzzyFieldLevelBoosting() throws InterruptedException, ExecutionException {_        String idx = "test18710"__        CreateIndexRequestBuilder builder = prepareCreate(idx).setSettings(Settings.builder()_                .put(indexSettings())_                .put(SETTING_NUMBER_OF_SHARDS, 3)_                .put(SETTING_NUMBER_OF_REPLICAS, 0)_                )__        assertAcked(builder.addMapping("type", "title", "type=text", "body", "type=text"))__        ensureGreen()__        List<IndexRequestBuilder> builders = new ArrayList<>()__        builders.add(client().prepareIndex(idx, "type", "1").setSource(_                "title", "foo",_                "body", "bar"))__        builders.add(client().prepareIndex(idx, "type", "2").setSource(_                "title", "bar",_                "body", "foo"))__        indexRandom(true, false, builders)___        SearchResponse searchResponse = client().prepareSearch(idx)_                .setExplain(true)_                .setQuery(multiMatchQuery("foo").field("title", 100).field("body")_                        .fuzziness(0)_                        ).get()__        SearchHit[] hits = searchResponse.getHits().getHits()__        assertNotEquals("both documents should be on different shards", hits[0].getShard().getShardId(), hits[1].getShard().getShardId())__        assertEquals("1", hits[0].getId())__        assertEquals("2", hits[1].getId())__        assertThat(hits[0].getScore(), greaterThan(hits[1].getScore()))__    };test,for,edge,case,where,field,level,boosting,is,applied,to,field,that,doesn,t,exist,on,documents,on,one,shard,there,was,an,issue,reported,in,https,github,com,elastic,elasticsearch,issues,18710,where,a,query,using,the,fuzziness,parameter,with,a,boost,on,one,of,two,fields,returns,the,same,document,score,if,both,documents,are,placed,on,different,shard,this,test,recreates,that,scenario,and,checks,that,the,returned,scores,are,different;public,void,test,fuzzy,field,level,boosting,throws,interrupted,exception,execution,exception,string,idx,test18710,create,index,request,builder,builder,prepare,create,idx,set,settings,settings,builder,put,index,settings,put,3,put,0,assert,acked,builder,add,mapping,type,title,type,text,body,type,text,ensure,green,list,index,request,builder,builders,new,array,list,builders,add,client,prepare,index,idx,type,1,set,source,title,foo,body,bar,builders,add,client,prepare,index,idx,type,2,set,source,title,bar,body,foo,index,random,true,false,builders,search,response,search,response,client,prepare,search,idx,set,explain,true,set,query,multi,match,query,foo,field,title,100,field,body,fuzziness,0,get,search,hit,hits,search,response,get,hits,get,hits,assert,not,equals,both,documents,should,be,on,different,shards,hits,0,get,shard,get,shard,id,hits,1,get,shard,get,shard,id,assert,equals,1,hits,0,get,id,assert,equals,2,hits,1,get,id,assert,that,hits,0,get,score,greater,than,hits,1,get,score
