# id;timestamp;commentText;codeText;commentWords;codeWords
MatchQueryBuilderTests -> private static CannedBinaryTokenStream.BinaryToken[] createGiantGraphMultiTerms();1538067637;Creates a graph token stream with {@link BooleanQuery#getMaxClauseCount()}_expansions at the last position.;private static CannedBinaryTokenStream.BinaryToken[] createGiantGraphMultiTerms() {_        List<CannedBinaryTokenStream.BinaryToken> tokens = new ArrayList<>()__        BytesRef term1 = new BytesRef("foo")__        BytesRef term2 = new BytesRef("bar")__        tokens.add(new CannedBinaryTokenStream.BinaryToken(term2, 1, 1))__        tokens.add(new CannedBinaryTokenStream.BinaryToken(term1, 0, 2))__        tokens.add(new CannedBinaryTokenStream.BinaryToken(term2, 1, 1))__        tokens.add(new CannedBinaryTokenStream.BinaryToken(term2, 1, 1))__        for (int i = 0_ i < BooleanQuery.getMaxClauseCount()_ i++) {_            tokens.add(new CannedBinaryTokenStream.BinaryToken(term1, 0, 1))__        }_        return tokens.toArray(new CannedBinaryTokenStream.BinaryToken[0])__    };creates,a,graph,token,stream,with,link,boolean,query,get,max,clause,count,expansions,at,the,last,position;private,static,canned,binary,token,stream,binary,token,create,giant,graph,multi,terms,list,canned,binary,token,stream,binary,token,tokens,new,array,list,bytes,ref,term1,new,bytes,ref,foo,bytes,ref,term2,new,bytes,ref,bar,tokens,add,new,canned,binary,token,stream,binary,token,term2,1,1,tokens,add,new,canned,binary,token,stream,binary,token,term1,0,2,tokens,add,new,canned,binary,token,stream,binary,token,term2,1,1,tokens,add,new,canned,binary,token,stream,binary,token,term2,1,1,for,int,i,0,i,boolean,query,get,max,clause,count,i,tokens,add,new,canned,binary,token,stream,binary,token,term1,0,1,return,tokens,to,array,new,canned,binary,token,stream,binary,token,0
MatchQueryBuilderTests -> private static CannedBinaryTokenStream.BinaryToken[] createGiantGraphMultiTerms();1541501723;Creates a graph token stream with {@link BooleanQuery#getMaxClauseCount()}_expansions at the last position.;private static CannedBinaryTokenStream.BinaryToken[] createGiantGraphMultiTerms() {_        List<CannedBinaryTokenStream.BinaryToken> tokens = new ArrayList<>()__        BytesRef term1 = new BytesRef("foo")__        BytesRef term2 = new BytesRef("bar")__        tokens.add(new CannedBinaryTokenStream.BinaryToken(term2, 1, 1))__        tokens.add(new CannedBinaryTokenStream.BinaryToken(term1, 0, 2))__        tokens.add(new CannedBinaryTokenStream.BinaryToken(term2, 1, 1))__        tokens.add(new CannedBinaryTokenStream.BinaryToken(term2, 1, 1))__        for (int i = 0_ i < BooleanQuery.getMaxClauseCount()_ i++) {_            tokens.add(new CannedBinaryTokenStream.BinaryToken(term1, 0, 1))__        }_        return tokens.toArray(new CannedBinaryTokenStream.BinaryToken[0])__    };creates,a,graph,token,stream,with,link,boolean,query,get,max,clause,count,expansions,at,the,last,position;private,static,canned,binary,token,stream,binary,token,create,giant,graph,multi,terms,list,canned,binary,token,stream,binary,token,tokens,new,array,list,bytes,ref,term1,new,bytes,ref,foo,bytes,ref,term2,new,bytes,ref,bar,tokens,add,new,canned,binary,token,stream,binary,token,term2,1,1,tokens,add,new,canned,binary,token,stream,binary,token,term1,0,2,tokens,add,new,canned,binary,token,stream,binary,token,term2,1,1,tokens,add,new,canned,binary,token,stream,binary,token,term2,1,1,for,int,i,0,i,boolean,query,get,max,clause,count,i,tokens,add,new,canned,binary,token,stream,binary,token,term1,0,1,return,tokens,to,array,new,canned,binary,token,stream,binary,token,0
MatchQueryBuilderTests -> private static CannedBinaryTokenStream.BinaryToken[] createGiantGraphMultiTerms();1545079094;Creates a graph token stream with {@link BooleanQuery#getMaxClauseCount()}_expansions at the last position.;private static CannedBinaryTokenStream.BinaryToken[] createGiantGraphMultiTerms() {_        List<CannedBinaryTokenStream.BinaryToken> tokens = new ArrayList<>()__        BytesRef term1 = new BytesRef("foo")__        BytesRef term2 = new BytesRef("bar")__        tokens.add(new CannedBinaryTokenStream.BinaryToken(term2, 1, 1))__        tokens.add(new CannedBinaryTokenStream.BinaryToken(term1, 0, 2))__        tokens.add(new CannedBinaryTokenStream.BinaryToken(term2, 1, 1))__        tokens.add(new CannedBinaryTokenStream.BinaryToken(term2, 1, 1))__        for (int i = 0_ i < BooleanQuery.getMaxClauseCount()_ i++) {_            tokens.add(new CannedBinaryTokenStream.BinaryToken(term1, 0, 1))__        }_        return tokens.toArray(new CannedBinaryTokenStream.BinaryToken[0])__    };creates,a,graph,token,stream,with,link,boolean,query,get,max,clause,count,expansions,at,the,last,position;private,static,canned,binary,token,stream,binary,token,create,giant,graph,multi,terms,list,canned,binary,token,stream,binary,token,tokens,new,array,list,bytes,ref,term1,new,bytes,ref,foo,bytes,ref,term2,new,bytes,ref,bar,tokens,add,new,canned,binary,token,stream,binary,token,term2,1,1,tokens,add,new,canned,binary,token,stream,binary,token,term1,0,2,tokens,add,new,canned,binary,token,stream,binary,token,term2,1,1,tokens,add,new,canned,binary,token,stream,binary,token,term2,1,1,for,int,i,0,i,boolean,query,get,max,clause,count,i,tokens,add,new,canned,binary,token,stream,binary,token,term1,0,1,return,tokens,to,array,new,canned,binary,token,stream,binary,token,0
MatchQueryBuilderTests -> private static CannedBinaryTokenStream.BinaryToken[] createGiantGraphMultiTerms();1545098986;Creates a graph token stream with {@link BooleanQuery#getMaxClauseCount()}_expansions at the last position.;private static CannedBinaryTokenStream.BinaryToken[] createGiantGraphMultiTerms() {_        List<CannedBinaryTokenStream.BinaryToken> tokens = new ArrayList<>()__        BytesRef term1 = new BytesRef("foo")__        BytesRef term2 = new BytesRef("bar")__        tokens.add(new CannedBinaryTokenStream.BinaryToken(term2, 1, 1))__        tokens.add(new CannedBinaryTokenStream.BinaryToken(term1, 0, 2))__        tokens.add(new CannedBinaryTokenStream.BinaryToken(term2, 1, 1))__        tokens.add(new CannedBinaryTokenStream.BinaryToken(term2, 1, 1))__        for (int i = 0_ i < BooleanQuery.getMaxClauseCount()_ i++) {_            tokens.add(new CannedBinaryTokenStream.BinaryToken(term1, 0, 1))__        }_        return tokens.toArray(new CannedBinaryTokenStream.BinaryToken[0])__    };creates,a,graph,token,stream,with,link,boolean,query,get,max,clause,count,expansions,at,the,last,position;private,static,canned,binary,token,stream,binary,token,create,giant,graph,multi,terms,list,canned,binary,token,stream,binary,token,tokens,new,array,list,bytes,ref,term1,new,bytes,ref,foo,bytes,ref,term2,new,bytes,ref,bar,tokens,add,new,canned,binary,token,stream,binary,token,term2,1,1,tokens,add,new,canned,binary,token,stream,binary,token,term1,0,2,tokens,add,new,canned,binary,token,stream,binary,token,term2,1,1,tokens,add,new,canned,binary,token,stream,binary,token,term2,1,1,for,int,i,0,i,boolean,query,get,max,clause,count,i,tokens,add,new,canned,binary,token,stream,binary,token,term1,0,1,return,tokens,to,array,new,canned,binary,token,stream,binary,token,0
MatchQueryBuilderTests -> private static CannedBinaryTokenStream.BinaryToken[] createGiantGraphMultiTerms();1545148496;Creates a graph token stream with {@link BooleanQuery#getMaxClauseCount()}_expansions at the last position.;private static CannedBinaryTokenStream.BinaryToken[] createGiantGraphMultiTerms() {_        List<CannedBinaryTokenStream.BinaryToken> tokens = new ArrayList<>()__        BytesRef term1 = new BytesRef("foo")__        BytesRef term2 = new BytesRef("bar")__        tokens.add(new CannedBinaryTokenStream.BinaryToken(term2, 1, 1))__        tokens.add(new CannedBinaryTokenStream.BinaryToken(term1, 0, 2))__        tokens.add(new CannedBinaryTokenStream.BinaryToken(term2, 1, 1))__        tokens.add(new CannedBinaryTokenStream.BinaryToken(term2, 1, 1))__        for (int i = 0_ i < BooleanQuery.getMaxClauseCount()_ i++) {_            tokens.add(new CannedBinaryTokenStream.BinaryToken(term1, 0, 1))__        }_        return tokens.toArray(new CannedBinaryTokenStream.BinaryToken[0])__    };creates,a,graph,token,stream,with,link,boolean,query,get,max,clause,count,expansions,at,the,last,position;private,static,canned,binary,token,stream,binary,token,create,giant,graph,multi,terms,list,canned,binary,token,stream,binary,token,tokens,new,array,list,bytes,ref,term1,new,bytes,ref,foo,bytes,ref,term2,new,bytes,ref,bar,tokens,add,new,canned,binary,token,stream,binary,token,term2,1,1,tokens,add,new,canned,binary,token,stream,binary,token,term1,0,2,tokens,add,new,canned,binary,token,stream,binary,token,term2,1,1,tokens,add,new,canned,binary,token,stream,binary,token,term2,1,1,for,int,i,0,i,boolean,query,get,max,clause,count,i,tokens,add,new,canned,binary,token,stream,binary,token,term1,0,1,return,tokens,to,array,new,canned,binary,token,stream,binary,token,0
MatchQueryBuilderTests -> private static CannedBinaryTokenStream.BinaryToken[] createGiantGraphMultiTerms();1547734228;Creates a graph token stream with {@link BooleanQuery#getMaxClauseCount()}_expansions at the last position.;private static CannedBinaryTokenStream.BinaryToken[] createGiantGraphMultiTerms() {_        List<CannedBinaryTokenStream.BinaryToken> tokens = new ArrayList<>()__        BytesRef term1 = new BytesRef("foo")__        BytesRef term2 = new BytesRef("bar")__        tokens.add(new CannedBinaryTokenStream.BinaryToken(term2, 1, 1))__        tokens.add(new CannedBinaryTokenStream.BinaryToken(term1, 0, 2))__        tokens.add(new CannedBinaryTokenStream.BinaryToken(term2, 1, 1))__        tokens.add(new CannedBinaryTokenStream.BinaryToken(term2, 1, 1))__        for (int i = 0_ i < BooleanQuery.getMaxClauseCount()_ i++) {_            tokens.add(new CannedBinaryTokenStream.BinaryToken(term1, 0, 1))__        }_        return tokens.toArray(new CannedBinaryTokenStream.BinaryToken[0])__    };creates,a,graph,token,stream,with,link,boolean,query,get,max,clause,count,expansions,at,the,last,position;private,static,canned,binary,token,stream,binary,token,create,giant,graph,multi,terms,list,canned,binary,token,stream,binary,token,tokens,new,array,list,bytes,ref,term1,new,bytes,ref,foo,bytes,ref,term2,new,bytes,ref,bar,tokens,add,new,canned,binary,token,stream,binary,token,term2,1,1,tokens,add,new,canned,binary,token,stream,binary,token,term1,0,2,tokens,add,new,canned,binary,token,stream,binary,token,term2,1,1,tokens,add,new,canned,binary,token,stream,binary,token,term2,1,1,for,int,i,0,i,boolean,query,get,max,clause,count,i,tokens,add,new,canned,binary,token,stream,binary,token,term1,0,1,return,tokens,to,array,new,canned,binary,token,stream,binary,token,0
MatchQueryBuilderTests -> private static CannedBinaryTokenStream.BinaryToken[] createGiantGraph(int numPos);1538067637;Creates a graph token stream with 2 side paths at each position.;private static CannedBinaryTokenStream.BinaryToken[] createGiantGraph(int numPos) {_        List<CannedBinaryTokenStream.BinaryToken> tokens = new ArrayList<>()__        BytesRef term1 = new BytesRef("foo")__        BytesRef term2 = new BytesRef("bar")__        for (int i = 0_ i < numPos_) {_            if (i % 2 == 0) {_                tokens.add(new CannedBinaryTokenStream.BinaryToken(term2, 1, 1))__                tokens.add(new CannedBinaryTokenStream.BinaryToken(term1, 0, 2))__                i += 2__            } else {_                tokens.add(new CannedBinaryTokenStream.BinaryToken(term2, 1, 1))__                i++__            }_        }_        return tokens.toArray(new CannedBinaryTokenStream.BinaryToken[0])__    };creates,a,graph,token,stream,with,2,side,paths,at,each,position;private,static,canned,binary,token,stream,binary,token,create,giant,graph,int,num,pos,list,canned,binary,token,stream,binary,token,tokens,new,array,list,bytes,ref,term1,new,bytes,ref,foo,bytes,ref,term2,new,bytes,ref,bar,for,int,i,0,i,num,pos,if,i,2,0,tokens,add,new,canned,binary,token,stream,binary,token,term2,1,1,tokens,add,new,canned,binary,token,stream,binary,token,term1,0,2,i,2,else,tokens,add,new,canned,binary,token,stream,binary,token,term2,1,1,i,return,tokens,to,array,new,canned,binary,token,stream,binary,token,0
MatchQueryBuilderTests -> private static CannedBinaryTokenStream.BinaryToken[] createGiantGraph(int numPos);1541501723;Creates a graph token stream with 2 side paths at each position.;private static CannedBinaryTokenStream.BinaryToken[] createGiantGraph(int numPos) {_        List<CannedBinaryTokenStream.BinaryToken> tokens = new ArrayList<>()__        BytesRef term1 = new BytesRef("foo")__        BytesRef term2 = new BytesRef("bar")__        for (int i = 0_ i < numPos_) {_            if (i % 2 == 0) {_                tokens.add(new CannedBinaryTokenStream.BinaryToken(term2, 1, 1))__                tokens.add(new CannedBinaryTokenStream.BinaryToken(term1, 0, 2))__                i += 2__            } else {_                tokens.add(new CannedBinaryTokenStream.BinaryToken(term2, 1, 1))__                i++__            }_        }_        return tokens.toArray(new CannedBinaryTokenStream.BinaryToken[0])__    };creates,a,graph,token,stream,with,2,side,paths,at,each,position;private,static,canned,binary,token,stream,binary,token,create,giant,graph,int,num,pos,list,canned,binary,token,stream,binary,token,tokens,new,array,list,bytes,ref,term1,new,bytes,ref,foo,bytes,ref,term2,new,bytes,ref,bar,for,int,i,0,i,num,pos,if,i,2,0,tokens,add,new,canned,binary,token,stream,binary,token,term2,1,1,tokens,add,new,canned,binary,token,stream,binary,token,term1,0,2,i,2,else,tokens,add,new,canned,binary,token,stream,binary,token,term2,1,1,i,return,tokens,to,array,new,canned,binary,token,stream,binary,token,0
MatchQueryBuilderTests -> private static CannedBinaryTokenStream.BinaryToken[] createGiantGraph(int numPos);1545079094;Creates a graph token stream with 2 side paths at each position.;private static CannedBinaryTokenStream.BinaryToken[] createGiantGraph(int numPos) {_        List<CannedBinaryTokenStream.BinaryToken> tokens = new ArrayList<>()__        BytesRef term1 = new BytesRef("foo")__        BytesRef term2 = new BytesRef("bar")__        for (int i = 0_ i < numPos_) {_            if (i % 2 == 0) {_                tokens.add(new CannedBinaryTokenStream.BinaryToken(term2, 1, 1))__                tokens.add(new CannedBinaryTokenStream.BinaryToken(term1, 0, 2))__                i += 2__            } else {_                tokens.add(new CannedBinaryTokenStream.BinaryToken(term2, 1, 1))__                i++__            }_        }_        return tokens.toArray(new CannedBinaryTokenStream.BinaryToken[0])__    };creates,a,graph,token,stream,with,2,side,paths,at,each,position;private,static,canned,binary,token,stream,binary,token,create,giant,graph,int,num,pos,list,canned,binary,token,stream,binary,token,tokens,new,array,list,bytes,ref,term1,new,bytes,ref,foo,bytes,ref,term2,new,bytes,ref,bar,for,int,i,0,i,num,pos,if,i,2,0,tokens,add,new,canned,binary,token,stream,binary,token,term2,1,1,tokens,add,new,canned,binary,token,stream,binary,token,term1,0,2,i,2,else,tokens,add,new,canned,binary,token,stream,binary,token,term2,1,1,i,return,tokens,to,array,new,canned,binary,token,stream,binary,token,0
MatchQueryBuilderTests -> private static CannedBinaryTokenStream.BinaryToken[] createGiantGraph(int numPos);1545098986;Creates a graph token stream with 2 side paths at each position.;private static CannedBinaryTokenStream.BinaryToken[] createGiantGraph(int numPos) {_        List<CannedBinaryTokenStream.BinaryToken> tokens = new ArrayList<>()__        BytesRef term1 = new BytesRef("foo")__        BytesRef term2 = new BytesRef("bar")__        for (int i = 0_ i < numPos_) {_            if (i % 2 == 0) {_                tokens.add(new CannedBinaryTokenStream.BinaryToken(term2, 1, 1))__                tokens.add(new CannedBinaryTokenStream.BinaryToken(term1, 0, 2))__                i += 2__            } else {_                tokens.add(new CannedBinaryTokenStream.BinaryToken(term2, 1, 1))__                i++__            }_        }_        return tokens.toArray(new CannedBinaryTokenStream.BinaryToken[0])__    };creates,a,graph,token,stream,with,2,side,paths,at,each,position;private,static,canned,binary,token,stream,binary,token,create,giant,graph,int,num,pos,list,canned,binary,token,stream,binary,token,tokens,new,array,list,bytes,ref,term1,new,bytes,ref,foo,bytes,ref,term2,new,bytes,ref,bar,for,int,i,0,i,num,pos,if,i,2,0,tokens,add,new,canned,binary,token,stream,binary,token,term2,1,1,tokens,add,new,canned,binary,token,stream,binary,token,term1,0,2,i,2,else,tokens,add,new,canned,binary,token,stream,binary,token,term2,1,1,i,return,tokens,to,array,new,canned,binary,token,stream,binary,token,0
MatchQueryBuilderTests -> private static CannedBinaryTokenStream.BinaryToken[] createGiantGraph(int numPos);1545148496;Creates a graph token stream with 2 side paths at each position.;private static CannedBinaryTokenStream.BinaryToken[] createGiantGraph(int numPos) {_        List<CannedBinaryTokenStream.BinaryToken> tokens = new ArrayList<>()__        BytesRef term1 = new BytesRef("foo")__        BytesRef term2 = new BytesRef("bar")__        for (int i = 0_ i < numPos_) {_            if (i % 2 == 0) {_                tokens.add(new CannedBinaryTokenStream.BinaryToken(term2, 1, 1))__                tokens.add(new CannedBinaryTokenStream.BinaryToken(term1, 0, 2))__                i += 2__            } else {_                tokens.add(new CannedBinaryTokenStream.BinaryToken(term2, 1, 1))__                i++__            }_        }_        return tokens.toArray(new CannedBinaryTokenStream.BinaryToken[0])__    };creates,a,graph,token,stream,with,2,side,paths,at,each,position;private,static,canned,binary,token,stream,binary,token,create,giant,graph,int,num,pos,list,canned,binary,token,stream,binary,token,tokens,new,array,list,bytes,ref,term1,new,bytes,ref,foo,bytes,ref,term2,new,bytes,ref,bar,for,int,i,0,i,num,pos,if,i,2,0,tokens,add,new,canned,binary,token,stream,binary,token,term2,1,1,tokens,add,new,canned,binary,token,stream,binary,token,term1,0,2,i,2,else,tokens,add,new,canned,binary,token,stream,binary,token,term2,1,1,i,return,tokens,to,array,new,canned,binary,token,stream,binary,token,0
MatchQueryBuilderTests -> private static CannedBinaryTokenStream.BinaryToken[] createGiantGraph(int numPos);1547734228;Creates a graph token stream with 2 side paths at each position.;private static CannedBinaryTokenStream.BinaryToken[] createGiantGraph(int numPos) {_        List<CannedBinaryTokenStream.BinaryToken> tokens = new ArrayList<>()__        BytesRef term1 = new BytesRef("foo")__        BytesRef term2 = new BytesRef("bar")__        for (int i = 0_ i < numPos_) {_            if (i % 2 == 0) {_                tokens.add(new CannedBinaryTokenStream.BinaryToken(term2, 1, 1))__                tokens.add(new CannedBinaryTokenStream.BinaryToken(term1, 0, 2))__                i += 2__            } else {_                tokens.add(new CannedBinaryTokenStream.BinaryToken(term2, 1, 1))__                i++__            }_        }_        return tokens.toArray(new CannedBinaryTokenStream.BinaryToken[0])__    };creates,a,graph,token,stream,with,2,side,paths,at,each,position;private,static,canned,binary,token,stream,binary,token,create,giant,graph,int,num,pos,list,canned,binary,token,stream,binary,token,tokens,new,array,list,bytes,ref,term1,new,bytes,ref,foo,bytes,ref,term2,new,bytes,ref,bar,for,int,i,0,i,num,pos,if,i,2,0,tokens,add,new,canned,binary,token,stream,binary,token,term2,1,1,tokens,add,new,canned,binary,token,stream,binary,token,term1,0,2,i,2,else,tokens,add,new,canned,binary,token,stream,binary,token,term2,1,1,i,return,tokens,to,array,new,canned,binary,token,stream,binary,token,0
