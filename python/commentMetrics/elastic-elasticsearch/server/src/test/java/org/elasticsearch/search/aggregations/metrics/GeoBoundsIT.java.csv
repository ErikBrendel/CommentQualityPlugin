# id;timestamp;commentText;codeText;commentWords;codeWords
GeoBoundsIT -> public void testSingleValuedFieldAsSubAggToHighCardTermsAgg();1524684173;This test forces the {@link GeoBoundsAggregator} to resize the {@link BigArray}s it uses to ensure they are resized correctly;public void testSingleValuedFieldAsSubAggToHighCardTermsAgg() {_        SearchResponse response = client().prepareSearch(HIGH_CARD_IDX_NAME)_                .addAggregation(terms("terms").field(NUMBER_FIELD_NAME).subAggregation(geoBounds(aggName).field(SINGLE_VALUED_FIELD_NAME)_                        .wrapLongitude(false)))_                .execute().actionGet()___        assertSearchResponse(response)___        Terms terms = response.getAggregations().get("terms")__        assertThat(terms, notNullValue())__        assertThat(terms.getName(), equalTo("terms"))__        List<? extends Bucket> buckets = terms.getBuckets()__        assertThat(buckets.size(), equalTo(10))__        for (int i = 0_ i < 10_ i++) {_            Bucket bucket = buckets.get(i)__            assertThat(bucket, notNullValue())__            assertThat("InternalBucket " + bucket.getKey() + " has wrong number of documents", bucket.getDocCount(), equalTo(1L))__            GeoBounds geoBounds = bucket.getAggregations().get(aggName)__            assertThat(geoBounds, notNullValue())__            assertThat(geoBounds.getName(), equalTo(aggName))__            assertThat(geoBounds.topLeft().getLat(), allOf(greaterThanOrEqualTo(-90.0), lessThanOrEqualTo(90.0)))__            assertThat(geoBounds.topLeft().getLon(), allOf(greaterThanOrEqualTo(-180.0), lessThanOrEqualTo(180.0)))__            assertThat(geoBounds.bottomRight().getLat(), allOf(greaterThanOrEqualTo(-90.0), lessThanOrEqualTo(90.0)))__            assertThat(geoBounds.bottomRight().getLon(), allOf(greaterThanOrEqualTo(-180.0), lessThanOrEqualTo(180.0)))__        }_    };this,test,forces,the,link,geo,bounds,aggregator,to,resize,the,link,big,array,s,it,uses,to,ensure,they,are,resized,correctly;public,void,test,single,valued,field,as,sub,agg,to,high,card,terms,agg,search,response,response,client,prepare,search,add,aggregation,terms,terms,field,sub,aggregation,geo,bounds,agg,name,field,wrap,longitude,false,execute,action,get,assert,search,response,response,terms,terms,response,get,aggregations,get,terms,assert,that,terms,not,null,value,assert,that,terms,get,name,equal,to,terms,list,extends,bucket,buckets,terms,get,buckets,assert,that,buckets,size,equal,to,10,for,int,i,0,i,10,i,bucket,bucket,buckets,get,i,assert,that,bucket,not,null,value,assert,that,internal,bucket,bucket,get,key,has,wrong,number,of,documents,bucket,get,doc,count,equal,to,1l,geo,bounds,geo,bounds,bucket,get,aggregations,get,agg,name,assert,that,geo,bounds,not,null,value,assert,that,geo,bounds,get,name,equal,to,agg,name,assert,that,geo,bounds,top,left,get,lat,all,of,greater,than,or,equal,to,90,0,less,than,or,equal,to,90,0,assert,that,geo,bounds,top,left,get,lon,all,of,greater,than,or,equal,to,180,0,less,than,or,equal,to,180,0,assert,that,geo,bounds,bottom,right,get,lat,all,of,greater,than,or,equal,to,90,0,less,than,or,equal,to,90,0,assert,that,geo,bounds,bottom,right,get,lon,all,of,greater,than,or,equal,to,180,0,less,than,or,equal,to,180,0
GeoBoundsIT -> public void testSingleValuedFieldAsSubAggToHighCardTermsAgg();1536314350;This test forces the {@link GeoBoundsAggregator} to resize the {@link BigArray}s it uses to ensure they are resized correctly;public void testSingleValuedFieldAsSubAggToHighCardTermsAgg() {_        SearchResponse response = client().prepareSearch(HIGH_CARD_IDX_NAME)_                .addAggregation(terms("terms").field(NUMBER_FIELD_NAME).subAggregation(geoBounds(aggName).field(SINGLE_VALUED_FIELD_NAME)_                        .wrapLongitude(false)))_                .execute().actionGet()___        assertSearchResponse(response)___        Terms terms = response.getAggregations().get("terms")__        assertThat(terms, notNullValue())__        assertThat(terms.getName(), equalTo("terms"))__        List<? extends Bucket> buckets = terms.getBuckets()__        assertThat(buckets.size(), equalTo(10))__        for (int i = 0_ i < 10_ i++) {_            Bucket bucket = buckets.get(i)__            assertThat(bucket, notNullValue())__            assertThat("InternalBucket " + bucket.getKey() + " has wrong number of documents", bucket.getDocCount(), equalTo(1L))__            GeoBounds geoBounds = bucket.getAggregations().get(aggName)__            assertThat(geoBounds, notNullValue())__            assertThat(geoBounds.getName(), equalTo(aggName))__            assertThat(geoBounds.topLeft().getLat(), allOf(greaterThanOrEqualTo(-90.0), lessThanOrEqualTo(90.0)))__            assertThat(geoBounds.topLeft().getLon(), allOf(greaterThanOrEqualTo(-180.0), lessThanOrEqualTo(180.0)))__            assertThat(geoBounds.bottomRight().getLat(), allOf(greaterThanOrEqualTo(-90.0), lessThanOrEqualTo(90.0)))__            assertThat(geoBounds.bottomRight().getLon(), allOf(greaterThanOrEqualTo(-180.0), lessThanOrEqualTo(180.0)))__        }_    };this,test,forces,the,link,geo,bounds,aggregator,to,resize,the,link,big,array,s,it,uses,to,ensure,they,are,resized,correctly;public,void,test,single,valued,field,as,sub,agg,to,high,card,terms,agg,search,response,response,client,prepare,search,add,aggregation,terms,terms,field,sub,aggregation,geo,bounds,agg,name,field,wrap,longitude,false,execute,action,get,assert,search,response,response,terms,terms,response,get,aggregations,get,terms,assert,that,terms,not,null,value,assert,that,terms,get,name,equal,to,terms,list,extends,bucket,buckets,terms,get,buckets,assert,that,buckets,size,equal,to,10,for,int,i,0,i,10,i,bucket,bucket,buckets,get,i,assert,that,bucket,not,null,value,assert,that,internal,bucket,bucket,get,key,has,wrong,number,of,documents,bucket,get,doc,count,equal,to,1l,geo,bounds,geo,bounds,bucket,get,aggregations,get,agg,name,assert,that,geo,bounds,not,null,value,assert,that,geo,bounds,get,name,equal,to,agg,name,assert,that,geo,bounds,top,left,get,lat,all,of,greater,than,or,equal,to,90,0,less,than,or,equal,to,90,0,assert,that,geo,bounds,top,left,get,lon,all,of,greater,than,or,equal,to,180,0,less,than,or,equal,to,180,0,assert,that,geo,bounds,bottom,right,get,lat,all,of,greater,than,or,equal,to,90,0,less,than,or,equal,to,90,0,assert,that,geo,bounds,bottom,right,get,lon,all,of,greater,than,or,equal,to,180,0,less,than,or,equal,to,180,0
GeoBoundsIT -> public void testSingleValuedFieldAsSubAggToHighCardTermsAgg();1544035746;This test forces the {@link GeoBoundsAggregator} to resize the {@link BigArray}s it uses to ensure they are resized correctly;public void testSingleValuedFieldAsSubAggToHighCardTermsAgg() {_        SearchResponse response = client().prepareSearch(HIGH_CARD_IDX_NAME)_                .addAggregation(terms("terms").field(NUMBER_FIELD_NAME).subAggregation(geoBounds(aggName).field(SINGLE_VALUED_FIELD_NAME)_                        .wrapLongitude(false)))_                .execute().actionGet()___        assertSearchResponse(response)___        Terms terms = response.getAggregations().get("terms")__        assertThat(terms, notNullValue())__        assertThat(terms.getName(), equalTo("terms"))__        List<? extends Bucket> buckets = terms.getBuckets()__        assertThat(buckets.size(), equalTo(10))__        for (int i = 0_ i < 10_ i++) {_            Bucket bucket = buckets.get(i)__            assertThat(bucket, notNullValue())__            assertThat("InternalBucket " + bucket.getKey() + " has wrong number of documents", bucket.getDocCount(), equalTo(1L))__            GeoBounds geoBounds = bucket.getAggregations().get(aggName)__            assertThat(geoBounds, notNullValue())__            assertThat(geoBounds.getName(), equalTo(aggName))__            assertThat(geoBounds.topLeft().getLat(), allOf(greaterThanOrEqualTo(-90.0), lessThanOrEqualTo(90.0)))__            assertThat(geoBounds.topLeft().getLon(), allOf(greaterThanOrEqualTo(-180.0), lessThanOrEqualTo(180.0)))__            assertThat(geoBounds.bottomRight().getLat(), allOf(greaterThanOrEqualTo(-90.0), lessThanOrEqualTo(90.0)))__            assertThat(geoBounds.bottomRight().getLon(), allOf(greaterThanOrEqualTo(-180.0), lessThanOrEqualTo(180.0)))__        }_    };this,test,forces,the,link,geo,bounds,aggregator,to,resize,the,link,big,array,s,it,uses,to,ensure,they,are,resized,correctly;public,void,test,single,valued,field,as,sub,agg,to,high,card,terms,agg,search,response,response,client,prepare,search,add,aggregation,terms,terms,field,sub,aggregation,geo,bounds,agg,name,field,wrap,longitude,false,execute,action,get,assert,search,response,response,terms,terms,response,get,aggregations,get,terms,assert,that,terms,not,null,value,assert,that,terms,get,name,equal,to,terms,list,extends,bucket,buckets,terms,get,buckets,assert,that,buckets,size,equal,to,10,for,int,i,0,i,10,i,bucket,bucket,buckets,get,i,assert,that,bucket,not,null,value,assert,that,internal,bucket,bucket,get,key,has,wrong,number,of,documents,bucket,get,doc,count,equal,to,1l,geo,bounds,geo,bounds,bucket,get,aggregations,get,agg,name,assert,that,geo,bounds,not,null,value,assert,that,geo,bounds,get,name,equal,to,agg,name,assert,that,geo,bounds,top,left,get,lat,all,of,greater,than,or,equal,to,90,0,less,than,or,equal,to,90,0,assert,that,geo,bounds,top,left,get,lon,all,of,greater,than,or,equal,to,180,0,less,than,or,equal,to,180,0,assert,that,geo,bounds,bottom,right,get,lat,all,of,greater,than,or,equal,to,90,0,less,than,or,equal,to,90,0,assert,that,geo,bounds,bottom,right,get,lon,all,of,greater,than,or,equal,to,180,0,less,than,or,equal,to,180,0
GeoBoundsIT -> public void testSingleValuedFieldAsSubAggToHighCardTermsAgg();1544110272;This test forces the {@link GeoBoundsAggregator} to resize the {@link BigArray}s it uses to ensure they are resized correctly;public void testSingleValuedFieldAsSubAggToHighCardTermsAgg() {_        SearchResponse response = client().prepareSearch(HIGH_CARD_IDX_NAME)_                .addAggregation(terms("terms").field(NUMBER_FIELD_NAME).subAggregation(geoBounds(aggName).field(SINGLE_VALUED_FIELD_NAME)_                        .wrapLongitude(false)))_                .get()___        assertSearchResponse(response)___        Terms terms = response.getAggregations().get("terms")__        assertThat(terms, notNullValue())__        assertThat(terms.getName(), equalTo("terms"))__        List<? extends Bucket> buckets = terms.getBuckets()__        assertThat(buckets.size(), equalTo(10))__        for (int i = 0_ i < 10_ i++) {_            Bucket bucket = buckets.get(i)__            assertThat(bucket, notNullValue())__            assertThat("InternalBucket " + bucket.getKey() + " has wrong number of documents", bucket.getDocCount(), equalTo(1L))__            GeoBounds geoBounds = bucket.getAggregations().get(aggName)__            assertThat(geoBounds, notNullValue())__            assertThat(geoBounds.getName(), equalTo(aggName))__            assertThat(geoBounds.topLeft().getLat(), allOf(greaterThanOrEqualTo(-90.0), lessThanOrEqualTo(90.0)))__            assertThat(geoBounds.topLeft().getLon(), allOf(greaterThanOrEqualTo(-180.0), lessThanOrEqualTo(180.0)))__            assertThat(geoBounds.bottomRight().getLat(), allOf(greaterThanOrEqualTo(-90.0), lessThanOrEqualTo(90.0)))__            assertThat(geoBounds.bottomRight().getLon(), allOf(greaterThanOrEqualTo(-180.0), lessThanOrEqualTo(180.0)))__        }_    };this,test,forces,the,link,geo,bounds,aggregator,to,resize,the,link,big,array,s,it,uses,to,ensure,they,are,resized,correctly;public,void,test,single,valued,field,as,sub,agg,to,high,card,terms,agg,search,response,response,client,prepare,search,add,aggregation,terms,terms,field,sub,aggregation,geo,bounds,agg,name,field,wrap,longitude,false,get,assert,search,response,response,terms,terms,response,get,aggregations,get,terms,assert,that,terms,not,null,value,assert,that,terms,get,name,equal,to,terms,list,extends,bucket,buckets,terms,get,buckets,assert,that,buckets,size,equal,to,10,for,int,i,0,i,10,i,bucket,bucket,buckets,get,i,assert,that,bucket,not,null,value,assert,that,internal,bucket,bucket,get,key,has,wrong,number,of,documents,bucket,get,doc,count,equal,to,1l,geo,bounds,geo,bounds,bucket,get,aggregations,get,agg,name,assert,that,geo,bounds,not,null,value,assert,that,geo,bounds,get,name,equal,to,agg,name,assert,that,geo,bounds,top,left,get,lat,all,of,greater,than,or,equal,to,90,0,less,than,or,equal,to,90,0,assert,that,geo,bounds,top,left,get,lon,all,of,greater,than,or,equal,to,180,0,less,than,or,equal,to,180,0,assert,that,geo,bounds,bottom,right,get,lat,all,of,greater,than,or,equal,to,90,0,less,than,or,equal,to,90,0,assert,that,geo,bounds,bottom,right,get,lon,all,of,greater,than,or,equal,to,180,0,less,than,or,equal,to,180,0
