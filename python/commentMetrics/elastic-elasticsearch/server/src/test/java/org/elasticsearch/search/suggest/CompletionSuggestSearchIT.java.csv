# id;timestamp;commentText;codeText;commentWords;codeWords
CompletionSuggestSearchIT -> public void testTextAndGlobalText() throws Exception;1524684173;test that suggestion works if prefix is either provided via {@link CompletionSuggestionBuilder#text(String)} or_{@link SuggestBuilder#setGlobalText(String)};public void testTextAndGlobalText() throws Exception {_        final CompletionMappingBuilder mapping = new CompletionMappingBuilder()__        createIndexAndMapping(mapping)__        int numDocs = 10__        List<IndexRequestBuilder> indexRequestBuilders = new ArrayList<>()__        for (int i = 1_ i <= numDocs_ i++) {_            indexRequestBuilders.add(client().prepareIndex(INDEX, TYPE, "" + i).setSource(jsonBuilder().startObject().startObject(FIELD)_                    .field("input", "suggestion" + i).field("weight", i).endObject().endObject()))__        }_        indexRandom(true, indexRequestBuilders)__        CompletionSuggestionBuilder noText = SuggestBuilders.completionSuggestion(FIELD)__        SearchResponse searchResponse = client().prepareSearch(INDEX)_                .suggest(new SuggestBuilder().addSuggestion("foo", noText).setGlobalText("sugg")).execute().actionGet()__        assertSuggestions(searchResponse, "foo", "suggestion10", "suggestion9", "suggestion8", "suggestion7", "suggestion6")___        CompletionSuggestionBuilder withText = SuggestBuilders.completionSuggestion(FIELD).text("sugg")__        searchResponse = client().prepareSearch(INDEX)_                .suggest(new SuggestBuilder().addSuggestion("foo", withText)).execute().actionGet()__        assertSuggestions(searchResponse, "foo", "suggestion10", "suggestion9", "suggestion8", "suggestion7", "suggestion6")___        _        searchResponse = client().prepareSearch(INDEX)_                .suggest(new SuggestBuilder().addSuggestion("foo", withText).setGlobalText("bogus")).execute().actionGet()__        assertSuggestions(searchResponse, "foo", "suggestion10", "suggestion9", "suggestion8", "suggestion7", "suggestion6")__    };test,that,suggestion,works,if,prefix,is,either,provided,via,link,completion,suggestion,builder,text,string,or,link,suggest,builder,set,global,text,string;public,void,test,text,and,global,text,throws,exception,final,completion,mapping,builder,mapping,new,completion,mapping,builder,create,index,and,mapping,mapping,int,num,docs,10,list,index,request,builder,index,request,builders,new,array,list,for,int,i,1,i,num,docs,i,index,request,builders,add,client,prepare,index,index,type,i,set,source,json,builder,start,object,start,object,field,field,input,suggestion,i,field,weight,i,end,object,end,object,index,random,true,index,request,builders,completion,suggestion,builder,no,text,suggest,builders,completion,suggestion,field,search,response,search,response,client,prepare,search,index,suggest,new,suggest,builder,add,suggestion,foo,no,text,set,global,text,sugg,execute,action,get,assert,suggestions,search,response,foo,suggestion10,suggestion9,suggestion8,suggestion7,suggestion6,completion,suggestion,builder,with,text,suggest,builders,completion,suggestion,field,text,sugg,search,response,client,prepare,search,index,suggest,new,suggest,builder,add,suggestion,foo,with,text,execute,action,get,assert,suggestions,search,response,foo,suggestion10,suggestion9,suggestion8,suggestion7,suggestion6,search,response,client,prepare,search,index,suggest,new,suggest,builder,add,suggestion,foo,with,text,set,global,text,bogus,execute,action,get,assert,suggestions,search,response,foo,suggestion10,suggestion9,suggestion8,suggestion7,suggestion6
CompletionSuggestSearchIT -> public void testTextAndGlobalText() throws Exception;1531179852;test that suggestion works if prefix is either provided via {@link CompletionSuggestionBuilder#text(String)} or_{@link SuggestBuilder#setGlobalText(String)};public void testTextAndGlobalText() throws Exception {_        final CompletionMappingBuilder mapping = new CompletionMappingBuilder()__        createIndexAndMapping(mapping)__        int numDocs = 10__        List<IndexRequestBuilder> indexRequestBuilders = new ArrayList<>()__        for (int i = 1_ i <= numDocs_ i++) {_            indexRequestBuilders.add(client().prepareIndex(INDEX, TYPE, "" + i).setSource(jsonBuilder().startObject().startObject(FIELD)_                    .field("input", "suggestion" + i).field("weight", i).endObject().endObject()))__        }_        indexRandom(true, indexRequestBuilders)__        CompletionSuggestionBuilder noText = SuggestBuilders.completionSuggestion(FIELD)__        SearchResponse searchResponse = client().prepareSearch(INDEX)_                .suggest(new SuggestBuilder().addSuggestion("foo", noText).setGlobalText("sugg")).execute().actionGet()__        assertSuggestions(searchResponse, "foo", "suggestion10", "suggestion9", "suggestion8", "suggestion7", "suggestion6")___        CompletionSuggestionBuilder withText = SuggestBuilders.completionSuggestion(FIELD).text("sugg")__        searchResponse = client().prepareSearch(INDEX)_                .suggest(new SuggestBuilder().addSuggestion("foo", withText)).execute().actionGet()__        assertSuggestions(searchResponse, "foo", "suggestion10", "suggestion9", "suggestion8", "suggestion7", "suggestion6")___        _        searchResponse = client().prepareSearch(INDEX)_                .suggest(new SuggestBuilder().addSuggestion("foo", withText).setGlobalText("bogus")).execute().actionGet()__        assertSuggestions(searchResponse, "foo", "suggestion10", "suggestion9", "suggestion8", "suggestion7", "suggestion6")__    };test,that,suggestion,works,if,prefix,is,either,provided,via,link,completion,suggestion,builder,text,string,or,link,suggest,builder,set,global,text,string;public,void,test,text,and,global,text,throws,exception,final,completion,mapping,builder,mapping,new,completion,mapping,builder,create,index,and,mapping,mapping,int,num,docs,10,list,index,request,builder,index,request,builders,new,array,list,for,int,i,1,i,num,docs,i,index,request,builders,add,client,prepare,index,index,type,i,set,source,json,builder,start,object,start,object,field,field,input,suggestion,i,field,weight,i,end,object,end,object,index,random,true,index,request,builders,completion,suggestion,builder,no,text,suggest,builders,completion,suggestion,field,search,response,search,response,client,prepare,search,index,suggest,new,suggest,builder,add,suggestion,foo,no,text,set,global,text,sugg,execute,action,get,assert,suggestions,search,response,foo,suggestion10,suggestion9,suggestion8,suggestion7,suggestion6,completion,suggestion,builder,with,text,suggest,builders,completion,suggestion,field,text,sugg,search,response,client,prepare,search,index,suggest,new,suggest,builder,add,suggestion,foo,with,text,execute,action,get,assert,suggestions,search,response,foo,suggestion10,suggestion9,suggestion8,suggestion7,suggestion6,search,response,client,prepare,search,index,suggest,new,suggest,builder,add,suggestion,foo,with,text,set,global,text,bogus,execute,action,get,assert,suggestions,search,response,foo,suggestion10,suggestion9,suggestion8,suggestion7,suggestion6
CompletionSuggestSearchIT -> public void testTextAndGlobalText() throws Exception;1531937412;test that suggestion works if prefix is either provided via {@link CompletionSuggestionBuilder#text(String)} or_{@link SuggestBuilder#setGlobalText(String)};public void testTextAndGlobalText() throws Exception {_        final CompletionMappingBuilder mapping = new CompletionMappingBuilder()__        createIndexAndMapping(mapping)__        int numDocs = 10__        List<IndexRequestBuilder> indexRequestBuilders = new ArrayList<>()__        for (int i = 1_ i <= numDocs_ i++) {_            indexRequestBuilders.add(client().prepareIndex(INDEX, TYPE, "" + i).setSource(jsonBuilder().startObject().startObject(FIELD)_                    .field("input", "suggestion" + i).field("weight", i).endObject().endObject()))__        }_        indexRandom(true, indexRequestBuilders)__        CompletionSuggestionBuilder noText = SuggestBuilders.completionSuggestion(FIELD)__        SearchResponse searchResponse = client().prepareSearch(INDEX)_                .suggest(new SuggestBuilder().addSuggestion("foo", noText).setGlobalText("sugg")).execute().actionGet()__        assertSuggestions(searchResponse, "foo", "suggestion10", "suggestion9", "suggestion8", "suggestion7", "suggestion6")___        CompletionSuggestionBuilder withText = SuggestBuilders.completionSuggestion(FIELD).text("sugg")__        searchResponse = client().prepareSearch(INDEX)_                .suggest(new SuggestBuilder().addSuggestion("foo", withText)).execute().actionGet()__        assertSuggestions(searchResponse, "foo", "suggestion10", "suggestion9", "suggestion8", "suggestion7", "suggestion6")___        _        searchResponse = client().prepareSearch(INDEX)_                .suggest(new SuggestBuilder().addSuggestion("foo", withText).setGlobalText("bogus")).execute().actionGet()__        assertSuggestions(searchResponse, "foo", "suggestion10", "suggestion9", "suggestion8", "suggestion7", "suggestion6")__    };test,that,suggestion,works,if,prefix,is,either,provided,via,link,completion,suggestion,builder,text,string,or,link,suggest,builder,set,global,text,string;public,void,test,text,and,global,text,throws,exception,final,completion,mapping,builder,mapping,new,completion,mapping,builder,create,index,and,mapping,mapping,int,num,docs,10,list,index,request,builder,index,request,builders,new,array,list,for,int,i,1,i,num,docs,i,index,request,builders,add,client,prepare,index,index,type,i,set,source,json,builder,start,object,start,object,field,field,input,suggestion,i,field,weight,i,end,object,end,object,index,random,true,index,request,builders,completion,suggestion,builder,no,text,suggest,builders,completion,suggestion,field,search,response,search,response,client,prepare,search,index,suggest,new,suggest,builder,add,suggestion,foo,no,text,set,global,text,sugg,execute,action,get,assert,suggestions,search,response,foo,suggestion10,suggestion9,suggestion8,suggestion7,suggestion6,completion,suggestion,builder,with,text,suggest,builders,completion,suggestion,field,text,sugg,search,response,client,prepare,search,index,suggest,new,suggest,builder,add,suggestion,foo,with,text,execute,action,get,assert,suggestions,search,response,foo,suggestion10,suggestion9,suggestion8,suggestion7,suggestion6,search,response,client,prepare,search,index,suggest,new,suggest,builder,add,suggestion,foo,with,text,set,global,text,bogus,execute,action,get,assert,suggestions,search,response,foo,suggestion10,suggestion9,suggestion8,suggestion7,suggestion6
CompletionSuggestSearchIT -> public void testTextAndGlobalText() throws Exception;1534362961;test that suggestion works if prefix is either provided via {@link CompletionSuggestionBuilder#text(String)} or_{@link SuggestBuilder#setGlobalText(String)};public void testTextAndGlobalText() throws Exception {_        final CompletionMappingBuilder mapping = new CompletionMappingBuilder()__        createIndexAndMapping(mapping)__        int numDocs = 10__        List<IndexRequestBuilder> indexRequestBuilders = new ArrayList<>()__        for (int i = 1_ i <= numDocs_ i++) {_            indexRequestBuilders.add(client().prepareIndex(INDEX, TYPE, "" + i).setSource(jsonBuilder().startObject().startObject(FIELD)_                    .field("input", "suggestion" + i).field("weight", i).endObject().endObject()))__        }_        indexRandom(true, indexRequestBuilders)__        CompletionSuggestionBuilder noText = SuggestBuilders.completionSuggestion(FIELD)__        SearchResponse searchResponse = client().prepareSearch(INDEX)_                .suggest(new SuggestBuilder().addSuggestion("foo", noText).setGlobalText("sugg")).execute().actionGet()__        assertSuggestions(searchResponse, "foo", "suggestion10", "suggestion9", "suggestion8", "suggestion7", "suggestion6")___        CompletionSuggestionBuilder withText = SuggestBuilders.completionSuggestion(FIELD).text("sugg")__        searchResponse = client().prepareSearch(INDEX)_                .suggest(new SuggestBuilder().addSuggestion("foo", withText)).execute().actionGet()__        assertSuggestions(searchResponse, "foo", "suggestion10", "suggestion9", "suggestion8", "suggestion7", "suggestion6")___        _        searchResponse = client().prepareSearch(INDEX)_                .suggest(new SuggestBuilder().addSuggestion("foo", withText).setGlobalText("bogus")).execute().actionGet()__        assertSuggestions(searchResponse, "foo", "suggestion10", "suggestion9", "suggestion8", "suggestion7", "suggestion6")__    };test,that,suggestion,works,if,prefix,is,either,provided,via,link,completion,suggestion,builder,text,string,or,link,suggest,builder,set,global,text,string;public,void,test,text,and,global,text,throws,exception,final,completion,mapping,builder,mapping,new,completion,mapping,builder,create,index,and,mapping,mapping,int,num,docs,10,list,index,request,builder,index,request,builders,new,array,list,for,int,i,1,i,num,docs,i,index,request,builders,add,client,prepare,index,index,type,i,set,source,json,builder,start,object,start,object,field,field,input,suggestion,i,field,weight,i,end,object,end,object,index,random,true,index,request,builders,completion,suggestion,builder,no,text,suggest,builders,completion,suggestion,field,search,response,search,response,client,prepare,search,index,suggest,new,suggest,builder,add,suggestion,foo,no,text,set,global,text,sugg,execute,action,get,assert,suggestions,search,response,foo,suggestion10,suggestion9,suggestion8,suggestion7,suggestion6,completion,suggestion,builder,with,text,suggest,builders,completion,suggestion,field,text,sugg,search,response,client,prepare,search,index,suggest,new,suggest,builder,add,suggestion,foo,with,text,execute,action,get,assert,suggestions,search,response,foo,suggestion10,suggestion9,suggestion8,suggestion7,suggestion6,search,response,client,prepare,search,index,suggest,new,suggest,builder,add,suggestion,foo,with,text,set,global,text,bogus,execute,action,get,assert,suggestions,search,response,foo,suggestion10,suggestion9,suggestion8,suggestion7,suggestion6
CompletionSuggestSearchIT -> public void testTextAndGlobalText() throws Exception;1536137328;test that suggestion works if prefix is either provided via {@link CompletionSuggestionBuilder#text(String)} or_{@link SuggestBuilder#setGlobalText(String)};public void testTextAndGlobalText() throws Exception {_        final CompletionMappingBuilder mapping = new CompletionMappingBuilder()__        createIndexAndMapping(mapping)__        int numDocs = 10__        List<IndexRequestBuilder> indexRequestBuilders = new ArrayList<>()__        for (int i = 1_ i <= numDocs_ i++) {_            indexRequestBuilders.add(client().prepareIndex(INDEX, TYPE, "" + i).setSource(jsonBuilder().startObject().startObject(FIELD)_                    .field("input", "suggestion" + i).field("weight", i).endObject().endObject()))__        }_        indexRandom(true, indexRequestBuilders)__        CompletionSuggestionBuilder noText = SuggestBuilders.completionSuggestion(FIELD)__        SearchResponse searchResponse = client().prepareSearch(INDEX)_                .suggest(new SuggestBuilder().addSuggestion("foo", noText).setGlobalText("sugg")).execute().actionGet()__        assertSuggestions(searchResponse, "foo", "suggestion10", "suggestion9", "suggestion8", "suggestion7", "suggestion6")___        CompletionSuggestionBuilder withText = SuggestBuilders.completionSuggestion(FIELD).text("sugg")__        searchResponse = client().prepareSearch(INDEX)_                .suggest(new SuggestBuilder().addSuggestion("foo", withText)).execute().actionGet()__        assertSuggestions(searchResponse, "foo", "suggestion10", "suggestion9", "suggestion8", "suggestion7", "suggestion6")___        _        searchResponse = client().prepareSearch(INDEX)_                .suggest(new SuggestBuilder().addSuggestion("foo", withText).setGlobalText("bogus")).execute().actionGet()__        assertSuggestions(searchResponse, "foo", "suggestion10", "suggestion9", "suggestion8", "suggestion7", "suggestion6")__    };test,that,suggestion,works,if,prefix,is,either,provided,via,link,completion,suggestion,builder,text,string,or,link,suggest,builder,set,global,text,string;public,void,test,text,and,global,text,throws,exception,final,completion,mapping,builder,mapping,new,completion,mapping,builder,create,index,and,mapping,mapping,int,num,docs,10,list,index,request,builder,index,request,builders,new,array,list,for,int,i,1,i,num,docs,i,index,request,builders,add,client,prepare,index,index,type,i,set,source,json,builder,start,object,start,object,field,field,input,suggestion,i,field,weight,i,end,object,end,object,index,random,true,index,request,builders,completion,suggestion,builder,no,text,suggest,builders,completion,suggestion,field,search,response,search,response,client,prepare,search,index,suggest,new,suggest,builder,add,suggestion,foo,no,text,set,global,text,sugg,execute,action,get,assert,suggestions,search,response,foo,suggestion10,suggestion9,suggestion8,suggestion7,suggestion6,completion,suggestion,builder,with,text,suggest,builders,completion,suggestion,field,text,sugg,search,response,client,prepare,search,index,suggest,new,suggest,builder,add,suggestion,foo,with,text,execute,action,get,assert,suggestions,search,response,foo,suggestion10,suggestion9,suggestion8,suggestion7,suggestion6,search,response,client,prepare,search,index,suggest,new,suggest,builder,add,suggestion,foo,with,text,set,global,text,bogus,execute,action,get,assert,suggestions,search,response,foo,suggestion10,suggestion9,suggestion8,suggestion7,suggestion6
CompletionSuggestSearchIT -> public void testTextAndGlobalText() throws Exception;1536314350;test that suggestion works if prefix is either provided via {@link CompletionSuggestionBuilder#text(String)} or_{@link SuggestBuilder#setGlobalText(String)};public void testTextAndGlobalText() throws Exception {_        final CompletionMappingBuilder mapping = new CompletionMappingBuilder()__        createIndexAndMapping(mapping)__        int numDocs = 10__        List<IndexRequestBuilder> indexRequestBuilders = new ArrayList<>()__        for (int i = 1_ i <= numDocs_ i++) {_            indexRequestBuilders.add(client().prepareIndex(INDEX, TYPE, "" + i).setSource(jsonBuilder().startObject().startObject(FIELD)_                    .field("input", "suggestion" + i).field("weight", i).endObject().endObject()))__        }_        indexRandom(true, indexRequestBuilders)__        CompletionSuggestionBuilder noText = SuggestBuilders.completionSuggestion(FIELD)__        SearchResponse searchResponse = client().prepareSearch(INDEX)_                .suggest(new SuggestBuilder().addSuggestion("foo", noText).setGlobalText("sugg")).execute().actionGet()__        assertSuggestions(searchResponse, "foo", "suggestion10", "suggestion9", "suggestion8", "suggestion7", "suggestion6")___        CompletionSuggestionBuilder withText = SuggestBuilders.completionSuggestion(FIELD).text("sugg")__        searchResponse = client().prepareSearch(INDEX)_                .suggest(new SuggestBuilder().addSuggestion("foo", withText)).execute().actionGet()__        assertSuggestions(searchResponse, "foo", "suggestion10", "suggestion9", "suggestion8", "suggestion7", "suggestion6")___        _        searchResponse = client().prepareSearch(INDEX)_                .suggest(new SuggestBuilder().addSuggestion("foo", withText).setGlobalText("bogus")).execute().actionGet()__        assertSuggestions(searchResponse, "foo", "suggestion10", "suggestion9", "suggestion8", "suggestion7", "suggestion6")__    };test,that,suggestion,works,if,prefix,is,either,provided,via,link,completion,suggestion,builder,text,string,or,link,suggest,builder,set,global,text,string;public,void,test,text,and,global,text,throws,exception,final,completion,mapping,builder,mapping,new,completion,mapping,builder,create,index,and,mapping,mapping,int,num,docs,10,list,index,request,builder,index,request,builders,new,array,list,for,int,i,1,i,num,docs,i,index,request,builders,add,client,prepare,index,index,type,i,set,source,json,builder,start,object,start,object,field,field,input,suggestion,i,field,weight,i,end,object,end,object,index,random,true,index,request,builders,completion,suggestion,builder,no,text,suggest,builders,completion,suggestion,field,search,response,search,response,client,prepare,search,index,suggest,new,suggest,builder,add,suggestion,foo,no,text,set,global,text,sugg,execute,action,get,assert,suggestions,search,response,foo,suggestion10,suggestion9,suggestion8,suggestion7,suggestion6,completion,suggestion,builder,with,text,suggest,builders,completion,suggestion,field,text,sugg,search,response,client,prepare,search,index,suggest,new,suggest,builder,add,suggestion,foo,with,text,execute,action,get,assert,suggestions,search,response,foo,suggestion10,suggestion9,suggestion8,suggestion7,suggestion6,search,response,client,prepare,search,index,suggest,new,suggest,builder,add,suggestion,foo,with,text,set,global,text,bogus,execute,action,get,assert,suggestions,search,response,foo,suggestion10,suggestion9,suggestion8,suggestion7,suggestion6
CompletionSuggestSearchIT -> public void testTextAndGlobalText() throws Exception;1538170812;test that suggestion works if prefix is either provided via {@link CompletionSuggestionBuilder#text(String)} or_{@link SuggestBuilder#setGlobalText(String)};public void testTextAndGlobalText() throws Exception {_        final CompletionMappingBuilder mapping = new CompletionMappingBuilder()__        createIndexAndMapping(mapping)__        int numDocs = 10__        List<IndexRequestBuilder> indexRequestBuilders = new ArrayList<>()__        for (int i = 1_ i <= numDocs_ i++) {_            indexRequestBuilders.add(client().prepareIndex(INDEX, TYPE, "" + i).setSource(jsonBuilder().startObject().startObject(FIELD)_                    .field("input", "suggestion" + i).field("weight", i).endObject().endObject()))__        }_        indexRandom(true, indexRequestBuilders)__        CompletionSuggestionBuilder noText = SuggestBuilders.completionSuggestion(FIELD)__        SearchResponse searchResponse = client().prepareSearch(INDEX)_                .suggest(new SuggestBuilder().addSuggestion("foo", noText).setGlobalText("sugg")).execute().actionGet()__        assertSuggestions(searchResponse, "foo", "suggestion10", "suggestion9", "suggestion8", "suggestion7", "suggestion6")___        CompletionSuggestionBuilder withText = SuggestBuilders.completionSuggestion(FIELD).text("sugg")__        searchResponse = client().prepareSearch(INDEX)_                .suggest(new SuggestBuilder().addSuggestion("foo", withText)).execute().actionGet()__        assertSuggestions(searchResponse, "foo", "suggestion10", "suggestion9", "suggestion8", "suggestion7", "suggestion6")___        _        searchResponse = client().prepareSearch(INDEX)_                .suggest(new SuggestBuilder().addSuggestion("foo", withText).setGlobalText("bogus")).execute().actionGet()__        assertSuggestions(searchResponse, "foo", "suggestion10", "suggestion9", "suggestion8", "suggestion7", "suggestion6")__    };test,that,suggestion,works,if,prefix,is,either,provided,via,link,completion,suggestion,builder,text,string,or,link,suggest,builder,set,global,text,string;public,void,test,text,and,global,text,throws,exception,final,completion,mapping,builder,mapping,new,completion,mapping,builder,create,index,and,mapping,mapping,int,num,docs,10,list,index,request,builder,index,request,builders,new,array,list,for,int,i,1,i,num,docs,i,index,request,builders,add,client,prepare,index,index,type,i,set,source,json,builder,start,object,start,object,field,field,input,suggestion,i,field,weight,i,end,object,end,object,index,random,true,index,request,builders,completion,suggestion,builder,no,text,suggest,builders,completion,suggestion,field,search,response,search,response,client,prepare,search,index,suggest,new,suggest,builder,add,suggestion,foo,no,text,set,global,text,sugg,execute,action,get,assert,suggestions,search,response,foo,suggestion10,suggestion9,suggestion8,suggestion7,suggestion6,completion,suggestion,builder,with,text,suggest,builders,completion,suggestion,field,text,sugg,search,response,client,prepare,search,index,suggest,new,suggest,builder,add,suggestion,foo,with,text,execute,action,get,assert,suggestions,search,response,foo,suggestion10,suggestion9,suggestion8,suggestion7,suggestion6,search,response,client,prepare,search,index,suggest,new,suggest,builder,add,suggestion,foo,with,text,set,global,text,bogus,execute,action,get,assert,suggestions,search,response,foo,suggestion10,suggestion9,suggestion8,suggestion7,suggestion6
CompletionSuggestSearchIT -> public void testTextAndGlobalText() throws Exception;1540238977;test that suggestion works if prefix is either provided via {@link CompletionSuggestionBuilder#text(String)} or_{@link SuggestBuilder#setGlobalText(String)};public void testTextAndGlobalText() throws Exception {_        final CompletionMappingBuilder mapping = new CompletionMappingBuilder()__        createIndexAndMapping(mapping)__        int numDocs = 10__        List<IndexRequestBuilder> indexRequestBuilders = new ArrayList<>()__        for (int i = 1_ i <= numDocs_ i++) {_            indexRequestBuilders.add(client().prepareIndex(INDEX, TYPE, "" + i).setSource(jsonBuilder().startObject().startObject(FIELD)_                    .field("input", "suggestion" + i).field("weight", i).endObject().endObject()))__        }_        indexRandom(true, indexRequestBuilders)__        CompletionSuggestionBuilder noText = SuggestBuilders.completionSuggestion(FIELD)__        SearchResponse searchResponse = client().prepareSearch(INDEX)_                .suggest(new SuggestBuilder().addSuggestion("foo", noText).setGlobalText("sugg")).execute().actionGet()__        assertSuggestions(searchResponse, "foo", "suggestion10", "suggestion9", "suggestion8", "suggestion7", "suggestion6")___        CompletionSuggestionBuilder withText = SuggestBuilders.completionSuggestion(FIELD).text("sugg")__        searchResponse = client().prepareSearch(INDEX)_                .suggest(new SuggestBuilder().addSuggestion("foo", withText)).execute().actionGet()__        assertSuggestions(searchResponse, "foo", "suggestion10", "suggestion9", "suggestion8", "suggestion7", "suggestion6")___        _        searchResponse = client().prepareSearch(INDEX)_                .suggest(new SuggestBuilder().addSuggestion("foo", withText).setGlobalText("bogus")).execute().actionGet()__        assertSuggestions(searchResponse, "foo", "suggestion10", "suggestion9", "suggestion8", "suggestion7", "suggestion6")__    };test,that,suggestion,works,if,prefix,is,either,provided,via,link,completion,suggestion,builder,text,string,or,link,suggest,builder,set,global,text,string;public,void,test,text,and,global,text,throws,exception,final,completion,mapping,builder,mapping,new,completion,mapping,builder,create,index,and,mapping,mapping,int,num,docs,10,list,index,request,builder,index,request,builders,new,array,list,for,int,i,1,i,num,docs,i,index,request,builders,add,client,prepare,index,index,type,i,set,source,json,builder,start,object,start,object,field,field,input,suggestion,i,field,weight,i,end,object,end,object,index,random,true,index,request,builders,completion,suggestion,builder,no,text,suggest,builders,completion,suggestion,field,search,response,search,response,client,prepare,search,index,suggest,new,suggest,builder,add,suggestion,foo,no,text,set,global,text,sugg,execute,action,get,assert,suggestions,search,response,foo,suggestion10,suggestion9,suggestion8,suggestion7,suggestion6,completion,suggestion,builder,with,text,suggest,builders,completion,suggestion,field,text,sugg,search,response,client,prepare,search,index,suggest,new,suggest,builder,add,suggestion,foo,with,text,execute,action,get,assert,suggestions,search,response,foo,suggestion10,suggestion9,suggestion8,suggestion7,suggestion6,search,response,client,prepare,search,index,suggest,new,suggest,builder,add,suggestion,foo,with,text,set,global,text,bogus,execute,action,get,assert,suggestions,search,response,foo,suggestion10,suggestion9,suggestion8,suggestion7,suggestion6
CompletionSuggestSearchIT -> public void testTextAndGlobalText() throws Exception;1544035746;test that suggestion works if prefix is either provided via {@link CompletionSuggestionBuilder#text(String)} or_{@link SuggestBuilder#setGlobalText(String)};public void testTextAndGlobalText() throws Exception {_        final CompletionMappingBuilder mapping = new CompletionMappingBuilder()__        createIndexAndMapping(mapping)__        int numDocs = 10__        List<IndexRequestBuilder> indexRequestBuilders = new ArrayList<>()__        for (int i = 1_ i <= numDocs_ i++) {_            indexRequestBuilders.add(client().prepareIndex(INDEX, TYPE, "" + i).setSource(jsonBuilder().startObject().startObject(FIELD)_                    .field("input", "suggestion" + i).field("weight", i).endObject().endObject()))__        }_        indexRandom(true, indexRequestBuilders)__        CompletionSuggestionBuilder noText = SuggestBuilders.completionSuggestion(FIELD)__        SearchResponse searchResponse = client().prepareSearch(INDEX)_                .suggest(new SuggestBuilder().addSuggestion("foo", noText).setGlobalText("sugg")).execute().actionGet()__        assertSuggestions(searchResponse, "foo", "suggestion10", "suggestion9", "suggestion8", "suggestion7", "suggestion6")___        CompletionSuggestionBuilder withText = SuggestBuilders.completionSuggestion(FIELD).text("sugg")__        searchResponse = client().prepareSearch(INDEX)_                .suggest(new SuggestBuilder().addSuggestion("foo", withText)).execute().actionGet()__        assertSuggestions(searchResponse, "foo", "suggestion10", "suggestion9", "suggestion8", "suggestion7", "suggestion6")___        _        searchResponse = client().prepareSearch(INDEX)_                .suggest(new SuggestBuilder().addSuggestion("foo", withText).setGlobalText("bogus")).execute().actionGet()__        assertSuggestions(searchResponse, "foo", "suggestion10", "suggestion9", "suggestion8", "suggestion7", "suggestion6")__    };test,that,suggestion,works,if,prefix,is,either,provided,via,link,completion,suggestion,builder,text,string,or,link,suggest,builder,set,global,text,string;public,void,test,text,and,global,text,throws,exception,final,completion,mapping,builder,mapping,new,completion,mapping,builder,create,index,and,mapping,mapping,int,num,docs,10,list,index,request,builder,index,request,builders,new,array,list,for,int,i,1,i,num,docs,i,index,request,builders,add,client,prepare,index,index,type,i,set,source,json,builder,start,object,start,object,field,field,input,suggestion,i,field,weight,i,end,object,end,object,index,random,true,index,request,builders,completion,suggestion,builder,no,text,suggest,builders,completion,suggestion,field,search,response,search,response,client,prepare,search,index,suggest,new,suggest,builder,add,suggestion,foo,no,text,set,global,text,sugg,execute,action,get,assert,suggestions,search,response,foo,suggestion10,suggestion9,suggestion8,suggestion7,suggestion6,completion,suggestion,builder,with,text,suggest,builders,completion,suggestion,field,text,sugg,search,response,client,prepare,search,index,suggest,new,suggest,builder,add,suggestion,foo,with,text,execute,action,get,assert,suggestions,search,response,foo,suggestion10,suggestion9,suggestion8,suggestion7,suggestion6,search,response,client,prepare,search,index,suggest,new,suggest,builder,add,suggestion,foo,with,text,set,global,text,bogus,execute,action,get,assert,suggestions,search,response,foo,suggestion10,suggestion9,suggestion8,suggestion7,suggestion6
CompletionSuggestSearchIT -> public void testTextAndGlobalText() throws Exception;1544110272;test that suggestion works if prefix is either provided via {@link CompletionSuggestionBuilder#text(String)} or_{@link SuggestBuilder#setGlobalText(String)};public void testTextAndGlobalText() throws Exception {_        final CompletionMappingBuilder mapping = new CompletionMappingBuilder()__        createIndexAndMapping(mapping)__        int numDocs = 10__        List<IndexRequestBuilder> indexRequestBuilders = new ArrayList<>()__        for (int i = 1_ i <= numDocs_ i++) {_            indexRequestBuilders.add(client().prepareIndex(INDEX, TYPE, "" + i).setSource(jsonBuilder().startObject().startObject(FIELD)_                    .field("input", "suggestion" + i).field("weight", i).endObject().endObject()))__        }_        indexRandom(true, indexRequestBuilders)__        CompletionSuggestionBuilder noText = SuggestBuilders.completionSuggestion(FIELD)__        SearchResponse searchResponse = client().prepareSearch(INDEX)_                .suggest(new SuggestBuilder().addSuggestion("foo", noText).setGlobalText("sugg")).get()__        assertSuggestions(searchResponse, "foo", "suggestion10", "suggestion9", "suggestion8", "suggestion7", "suggestion6")___        CompletionSuggestionBuilder withText = SuggestBuilders.completionSuggestion(FIELD).text("sugg")__        searchResponse = client().prepareSearch(INDEX)_                .suggest(new SuggestBuilder().addSuggestion("foo", withText)).get()__        assertSuggestions(searchResponse, "foo", "suggestion10", "suggestion9", "suggestion8", "suggestion7", "suggestion6")___        _        searchResponse = client().prepareSearch(INDEX)_                .suggest(new SuggestBuilder().addSuggestion("foo", withText).setGlobalText("bogus")).get()__        assertSuggestions(searchResponse, "foo", "suggestion10", "suggestion9", "suggestion8", "suggestion7", "suggestion6")__    };test,that,suggestion,works,if,prefix,is,either,provided,via,link,completion,suggestion,builder,text,string,or,link,suggest,builder,set,global,text,string;public,void,test,text,and,global,text,throws,exception,final,completion,mapping,builder,mapping,new,completion,mapping,builder,create,index,and,mapping,mapping,int,num,docs,10,list,index,request,builder,index,request,builders,new,array,list,for,int,i,1,i,num,docs,i,index,request,builders,add,client,prepare,index,index,type,i,set,source,json,builder,start,object,start,object,field,field,input,suggestion,i,field,weight,i,end,object,end,object,index,random,true,index,request,builders,completion,suggestion,builder,no,text,suggest,builders,completion,suggestion,field,search,response,search,response,client,prepare,search,index,suggest,new,suggest,builder,add,suggestion,foo,no,text,set,global,text,sugg,get,assert,suggestions,search,response,foo,suggestion10,suggestion9,suggestion8,suggestion7,suggestion6,completion,suggestion,builder,with,text,suggest,builders,completion,suggestion,field,text,sugg,search,response,client,prepare,search,index,suggest,new,suggest,builder,add,suggestion,foo,with,text,get,assert,suggestions,search,response,foo,suggestion10,suggestion9,suggestion8,suggestion7,suggestion6,search,response,client,prepare,search,index,suggest,new,suggest,builder,add,suggestion,foo,with,text,set,global,text,bogus,get,assert,suggestions,search,response,foo,suggestion10,suggestion9,suggestion8,suggestion7,suggestion6
CompletionSuggestSearchIT -> public void testTextAndGlobalText() throws Exception;1547576851;test that suggestion works if prefix is either provided via {@link CompletionSuggestionBuilder#text(String)} or_{@link SuggestBuilder#setGlobalText(String)};public void testTextAndGlobalText() throws Exception {_        final CompletionMappingBuilder mapping = new CompletionMappingBuilder()__        createIndexAndMapping(mapping)__        int numDocs = 10__        List<IndexRequestBuilder> indexRequestBuilders = new ArrayList<>()__        for (int i = 1_ i <= numDocs_ i++) {_            indexRequestBuilders.add(client().prepareIndex(INDEX, TYPE, "" + i).setSource(jsonBuilder().startObject().startObject(FIELD)_                    .field("input", "suggestion" + i).field("weight", i).endObject().endObject()))__        }_        indexRandom(true, indexRequestBuilders)__        CompletionSuggestionBuilder noText = SuggestBuilders.completionSuggestion(FIELD)__        SearchResponse searchResponse = client().prepareSearch(INDEX)_                .suggest(new SuggestBuilder().addSuggestion("foo", noText).setGlobalText("sugg")).get()__        assertSuggestions(searchResponse, "foo", "suggestion10", "suggestion9", "suggestion8", "suggestion7", "suggestion6")___        CompletionSuggestionBuilder withText = SuggestBuilders.completionSuggestion(FIELD).text("sugg")__        searchResponse = client().prepareSearch(INDEX)_                .suggest(new SuggestBuilder().addSuggestion("foo", withText)).get()__        assertSuggestions(searchResponse, "foo", "suggestion10", "suggestion9", "suggestion8", "suggestion7", "suggestion6")___        _        searchResponse = client().prepareSearch(INDEX)_                .suggest(new SuggestBuilder().addSuggestion("foo", withText).setGlobalText("bogus")).get()__        assertSuggestions(searchResponse, "foo", "suggestion10", "suggestion9", "suggestion8", "suggestion7", "suggestion6")__    };test,that,suggestion,works,if,prefix,is,either,provided,via,link,completion,suggestion,builder,text,string,or,link,suggest,builder,set,global,text,string;public,void,test,text,and,global,text,throws,exception,final,completion,mapping,builder,mapping,new,completion,mapping,builder,create,index,and,mapping,mapping,int,num,docs,10,list,index,request,builder,index,request,builders,new,array,list,for,int,i,1,i,num,docs,i,index,request,builders,add,client,prepare,index,index,type,i,set,source,json,builder,start,object,start,object,field,field,input,suggestion,i,field,weight,i,end,object,end,object,index,random,true,index,request,builders,completion,suggestion,builder,no,text,suggest,builders,completion,suggestion,field,search,response,search,response,client,prepare,search,index,suggest,new,suggest,builder,add,suggestion,foo,no,text,set,global,text,sugg,get,assert,suggestions,search,response,foo,suggestion10,suggestion9,suggestion8,suggestion7,suggestion6,completion,suggestion,builder,with,text,suggest,builders,completion,suggestion,field,text,sugg,search,response,client,prepare,search,index,suggest,new,suggest,builder,add,suggestion,foo,with,text,get,assert,suggestions,search,response,foo,suggestion10,suggestion9,suggestion8,suggestion7,suggestion6,search,response,client,prepare,search,index,suggest,new,suggest,builder,add,suggestion,foo,with,text,set,global,text,bogus,get,assert,suggestions,search,response,foo,suggestion10,suggestion9,suggestion8,suggestion7,suggestion6
