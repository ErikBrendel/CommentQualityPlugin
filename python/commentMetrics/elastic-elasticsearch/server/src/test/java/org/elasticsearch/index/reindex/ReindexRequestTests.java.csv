commented;modifiers;parameterAmount;loc;comment;code
false;public;0;11;;public void testReindexFromRemoteDoesNotSupportSearchQuery() {     ReindexRequest reindex = newRequest().     reindex.setRemoteInfo(new RemoteInfo(randomAlphaOfLength(5), randomAlphaOfLength(5), between(1, Integer.MAX_VALUE), null, new BytesArray("real_query"), null, null, emptyMap(), RemoteInfo.DEFAULT_SOCKET_TIMEOUT, RemoteInfo.DEFAULT_CONNECT_TIMEOUT)).     // Unsupported place to put query     reindex.getSearchRequest().source().query(matchAllQuery()).     ActionRequestValidationException e = reindex.validate().     assertEquals("Validation Failed: 1: reindex from remote sources should use RemoteInfo's query instead of source's query.", e.getMessage()). }
false;public;0;12;;public void testReindexFromRemoteDoesNotSupportSlices() {     ReindexRequest reindex = newRequest().     reindex.setRemoteInfo(new RemoteInfo(randomAlphaOfLength(5), randomAlphaOfLength(5), between(1, Integer.MAX_VALUE), null, new BytesArray("real_query"), null, null, emptyMap(), RemoteInfo.DEFAULT_SOCKET_TIMEOUT, RemoteInfo.DEFAULT_CONNECT_TIMEOUT)).     reindex.setSlices(between(2, Integer.MAX_VALUE)).     ActionRequestValidationException e = reindex.validate().     assertEquals("Validation Failed: 1: reindex from remote sources doesn't support slices > 1 but was [" + reindex.getSlices() + "].", e.getMessage()). }
false;public;0;7;;public void testNoSliceBuilderSetWithSlicedRequest() {     ReindexRequest reindex = newRequest().     reindex.getSearchRequest().source().slice(new SliceBuilder(0, 4)).     reindex.setSlices(between(2, Integer.MAX_VALUE)).     ActionRequestValidationException e = reindex.validate().     assertEquals("Validation Failed: 1: can't specify both manual and automatic slicing at the same time.", e.getMessage()). }
false;protected;1;12;;@Override protected void extraRandomizationForSlice(ReindexRequest original) {     if (randomBoolean()) {         original.setScript(mockScript(randomAlphaOfLength(5))).     }     if (randomBoolean()) {         original.setRemoteInfo(new RemoteInfo(randomAlphaOfLength(5), randomAlphaOfLength(5), between(1, 10000), null, new BytesArray(randomAlphaOfLength(5)), null, null, emptyMap(), parseTimeValue(randomPositiveTimeValue(), "socket_timeout"), parseTimeValue(randomPositiveTimeValue(), "connect_timeout"))).     } }
false;protected;2;6;;@Override protected void extraForSliceAssertions(ReindexRequest original, ReindexRequest forSliced) {     assertEquals(original.getScript(), forSliced.getScript()).     assertEquals(original.getDestination(), forSliced.getDestination()).     assertEquals(original.getRemoteInfo(), forSliced.getRemoteInfo()). }
false;protected;0;7;;@Override protected ReindexRequest newRequest() {     ReindexRequest reindex = new ReindexRequest().     reindex.setSourceIndices("source").     reindex.setDestIndex("dest").     return reindex. }
