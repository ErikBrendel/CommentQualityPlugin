commented;modifiers;parameterAmount;loc;comment;code
false;public;0;25;;public void testEqualsAndHashCode() {     final QueryBuilder filter = QueryBuilders.termQuery("field", "value").     final String[] aliases = new String[] { "alias_0", "alias_1" }.     final AliasFilter aliasFilter = new AliasFilter(filter, aliases).     final EqualsHashCodeTestUtils.CopyFunction<AliasFilter> aliasFilterCopyFunction = x -> {         assertThat(x.getQueryBuilder(), instanceOf(TermQueryBuilder.class)).         final BytesStreamOutput out = new BytesStreamOutput().         x.getQueryBuilder().writeTo(out).         final QueryBuilder otherFilter = new TermQueryBuilder(out.bytes().streamInput()).         final String[] otherAliases = Arrays.copyOf(x.getAliases(), x.getAliases().length).         return new AliasFilter(otherFilter, otherAliases).     }.     final EqualsHashCodeTestUtils.MutateFunction<AliasFilter> aliasFilterMutationFunction = x -> {         assertThat(x.getQueryBuilder(), instanceOf(TermQueryBuilder.class)).         final BytesStreamOutput out = new BytesStreamOutput().         x.getQueryBuilder().writeTo(out).         final QueryBuilder otherFilter = new TermQueryBuilder(out.bytes().streamInput()).         assertThat(x.getAliases().length, greaterThan(0)).         final String[] otherAliases = Arrays.copyOf(x.getAliases(), x.getAliases().length - 1).         return new AliasFilter(otherFilter, otherAliases).     }.     EqualsHashCodeTestUtils.checkEqualsAndHashCode(aliasFilter, aliasFilterCopyFunction, aliasFilterMutationFunction). }
