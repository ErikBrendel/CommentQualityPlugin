commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;public void testAllocationValues() {     final String all = randomFrom("all", "All", "ALL").     assertEquals(EnableAssignmentDecider.Allocation.ALL, EnableAssignmentDecider.Allocation.fromString(all)).     final String none = randomFrom("none", "None", "NONE").     assertEquals(EnableAssignmentDecider.Allocation.NONE, EnableAssignmentDecider.Allocation.fromString(none)). }
false;public;0;17;;public void testEnableAssignment() {     final int nbTasks = randomIntBetween(1, 10).     final int nbNodes = randomIntBetween(1, 5).     final EnableAssignmentDecider.Allocation allocation = randomFrom(EnableAssignmentDecider.Allocation.values()).     Settings settings = Settings.builder().put(EnableAssignmentDecider.CLUSTER_TASKS_ALLOCATION_ENABLE_SETTING.getKey(), allocation.toString()).build().     updateSettings(settings).     ClusterState clusterState = reassign(createClusterStateWithTasks(nbNodes, nbTasks)).     if (allocation == EnableAssignmentDecider.Allocation.ALL) {         assertNbAssignedTasks(nbTasks, clusterState).     } else {         assertNbUnassignedTasks(nbTasks, clusterState).     } }
