# id;timestamp;commentText;codeText;commentWords;codeWords
ReverseNestedAggregatorTests -> @Override     protected Map<String, MappedFieldType> getFieldAliases(MappedFieldType... fieldTypes);1531937412;For each provided field type, we also register an alias with name <field>-alias.;@Override_    protected Map<String, MappedFieldType> getFieldAliases(MappedFieldType... fieldTypes) {_        return Arrays.stream(fieldTypes).collect(Collectors.toMap(_            ft -> ft.name() + "-alias",_            Function.identity()))__    };for,each,provided,field,type,we,also,register,an,alias,with,name,field,alias;override,protected,map,string,mapped,field,type,get,field,aliases,mapped,field,type,field,types,return,arrays,stream,field,types,collect,collectors,to,map,ft,ft,name,alias,function,identity
ReverseNestedAggregatorTests -> @Override     protected Map<String, MappedFieldType> getFieldAliases(MappedFieldType... fieldTypes);1532028790;For each provided field type, we also register an alias with name {@code <field>-alias}.;@Override_    protected Map<String, MappedFieldType> getFieldAliases(MappedFieldType... fieldTypes) {_        return Arrays.stream(fieldTypes).collect(Collectors.toMap(_            ft -> ft.name() + "-alias",_            Function.identity()))__    };for,each,provided,field,type,we,also,register,an,alias,with,name,code,field,alias;override,protected,map,string,mapped,field,type,get,field,aliases,mapped,field,type,field,types,return,arrays,stream,field,types,collect,collectors,to,map,ft,ft,name,alias,function,identity
ReverseNestedAggregatorTests -> @Override     protected Map<String, MappedFieldType> getFieldAliases(MappedFieldType... fieldTypes);1532434432;For each provided field type, we also register an alias with name {@code <field>-alias}.;@Override_    protected Map<String, MappedFieldType> getFieldAliases(MappedFieldType... fieldTypes) {_        return Arrays.stream(fieldTypes).collect(Collectors.toMap(_            ft -> ft.name() + "-alias",_            Function.identity()))__    };for,each,provided,field,type,we,also,register,an,alias,with,name,code,field,alias;override,protected,map,string,mapped,field,type,get,field,aliases,mapped,field,type,field,types,return,arrays,stream,field,types,collect,collectors,to,map,ft,ft,name,alias,function,identity
ReverseNestedAggregatorTests -> @Override     protected Map<String, MappedFieldType> getFieldAliases(MappedFieldType... fieldTypes);1536314350;For each provided field type, we also register an alias with name {@code <field>-alias}.;@Override_    protected Map<String, MappedFieldType> getFieldAliases(MappedFieldType... fieldTypes) {_        return Arrays.stream(fieldTypes).collect(Collectors.toMap(_            ft -> ft.name() + "-alias",_            Function.identity()))__    };for,each,provided,field,type,we,also,register,an,alias,with,name,code,field,alias;override,protected,map,string,mapped,field,type,get,field,aliases,mapped,field,type,field,types,return,arrays,stream,field,types,collect,collectors,to,map,ft,ft,name,alias,function,identity
