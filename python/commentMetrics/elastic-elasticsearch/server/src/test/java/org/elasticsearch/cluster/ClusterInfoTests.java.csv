commented;modifiers;parameterAmount;loc;comment;code
false;public;0;13;;public void testSerialization() throws Exception {     ClusterInfo clusterInfo = new ClusterInfo(randomDiskUsage(), randomDiskUsage(), randomShardSizes(), randomRoutingToDataPath()).     BytesStreamOutput output = new BytesStreamOutput().     clusterInfo.writeTo(output).     ClusterInfo result = new ClusterInfo(output.bytes().streamInput()).     assertEquals(clusterInfo.getNodeLeastAvailableDiskUsages(), result.getNodeLeastAvailableDiskUsages()).     assertEquals(clusterInfo.getNodeMostAvailableDiskUsages(), result.getNodeMostAvailableDiskUsages()).     assertEquals(clusterInfo.shardSizes, result.shardSizes).     assertEquals(clusterInfo.routingToDataPath, result.routingToDataPath). }
false;private,static;0;13;;private static ImmutableOpenMap<String, DiskUsage> randomDiskUsage() {     int numEntries = randomIntBetween(0, 128).     ImmutableOpenMap.Builder<String, DiskUsage> builder = ImmutableOpenMap.builder(numEntries).     for (int i = 0. i < numEntries. i++) {         String key = randomAlphaOfLength(32).         DiskUsage diskUsage = new DiskUsage(randomAlphaOfLength(4), randomAlphaOfLength(4), randomAlphaOfLength(4), randomIntBetween(0, Integer.MAX_VALUE), randomIntBetween(0, Integer.MAX_VALUE)).         builder.put(key, diskUsage).     }     return builder.build(). }
false;private,static;0;10;;private static ImmutableOpenMap<String, Long> randomShardSizes() {     int numEntries = randomIntBetween(0, 128).     ImmutableOpenMap.Builder<String, Long> builder = ImmutableOpenMap.builder(numEntries).     for (int i = 0. i < numEntries. i++) {         String key = randomAlphaOfLength(32).         long shardSize = randomIntBetween(0, Integer.MAX_VALUE).         builder.put(key, shardSize).     }     return builder.build(). }
false;private,static;0;10;;private static ImmutableOpenMap<ShardRouting, String> randomRoutingToDataPath() {     int numEntries = randomIntBetween(0, 128).     ImmutableOpenMap.Builder<ShardRouting, String> builder = ImmutableOpenMap.builder(numEntries).     for (int i = 0. i < numEntries. i++) {         ShardId shardId = new ShardId(randomAlphaOfLength(32), randomAlphaOfLength(32), randomIntBetween(0, Integer.MAX_VALUE)).         ShardRouting shardRouting = TestShardRouting.newShardRouting(shardId, null, randomBoolean(), ShardRoutingState.UNASSIGNED).         builder.put(shardRouting, randomAlphaOfLength(32)).     }     return builder.build(). }
