commented;modifiers;parameterAmount;loc;comment;code
false;public;1;9;;@Override public boolean matchesSafely(Engine.Searcher searcher) {     try {         this.count = (int) searcher.searcher().count(query).         return count == totalHits.     } catch (IOException e) {         return false.     } }
false;protected;2;4;;@Override protected void describeMismatchSafely(Engine.Searcher item, Description mismatchDescription) {     mismatchDescription.appendText("was ").appendValue(count). }
false;public;1;4;;@Override public void describeTo(Description description) {     description.appendText("total hits of size ").appendValue(totalHits).appendText(" with query ").appendValue(query). }
false;public,static;2;3;;public static Matcher<Engine.Searcher> engineSearcherTotalHits(Query query, int totalHits) {     return new EngineSearcherTotalHitsMatcher(query, totalHits). }
false;public,static;1;3;;public static Matcher<Engine.Searcher> engineSearcherTotalHits(int totalHits) {     return new EngineSearcherTotalHitsMatcher(Queries.newMatchAllQuery(), totalHits). }
