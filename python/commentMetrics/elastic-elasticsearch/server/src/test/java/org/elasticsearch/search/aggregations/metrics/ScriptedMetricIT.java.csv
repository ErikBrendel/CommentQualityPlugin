# id;timestamp;commentText;codeText;commentWords;codeWords
ScriptedMetricIT -> public void testDontCacheScripts() throws Exception;1524684173;Make sure that a request using a script does not get cached and a request_not using a script does get cached.;public void testDontCacheScripts() throws Exception {_        Script mapScript = new Script(ScriptType.INLINE, CustomScriptPlugin.NAME, "_agg['count'] = 1", Collections.emptyMap())__        assertAcked(prepareCreate("cache_test_idx").addMapping("type", "d", "type=long")_                .setSettings(Settings.builder().put("requests.cache.enable", true).put("number_of_shards", 1).put("number_of_replicas", 1))_                .get())__        indexRandom(true, client().prepareIndex("cache_test_idx", "type", "1").setSource("s", 1),_                client().prepareIndex("cache_test_idx", "type", "2").setSource("s", 2))___        _        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getHitCount(), equalTo(0L))__        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getMissCount(), equalTo(0L))___        _        SearchResponse r = client().prepareSearch("cache_test_idx").setSize(0)_                .addAggregation(scriptedMetric("foo").mapScript(mapScript)).get()__        assertSearchResponse(r)___        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getHitCount(), equalTo(0L))__        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getMissCount(), equalTo(0L))__    };make,sure,that,a,request,using,a,script,does,not,get,cached,and,a,request,not,using,a,script,does,get,cached;public,void,test,dont,cache,scripts,throws,exception,script,map,script,new,script,script,type,inline,custom,script,plugin,name,count,1,collections,empty,map,assert,acked,prepare,create,add,mapping,type,d,type,long,set,settings,settings,builder,put,requests,cache,enable,true,put,1,put,1,get,index,random,true,client,prepare,index,type,1,set,source,s,1,client,prepare,index,type,2,set,source,s,2,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,hit,count,equal,to,0l,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,miss,count,equal,to,0l,search,response,r,client,prepare,search,set,size,0,add,aggregation,scripted,metric,foo,map,script,map,script,get,assert,search,response,r,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,hit,count,equal,to,0l,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,miss,count,equal,to,0l
ScriptedMetricIT -> public void testDontCacheScripts() throws Exception;1528762805;Make sure that a request using a script does not get cached and a request_not using a script does get cached.;public void testDontCacheScripts() throws Exception {_        Script mapScript = new Script(ScriptType.INLINE, CustomScriptPlugin.NAME, "_agg['count'] = 1", Collections.emptyMap())__        assertAcked(prepareCreate("cache_test_idx").addMapping("type", "d", "type=long")_                .setSettings(Settings.builder().put("requests.cache.enable", true).put("number_of_shards", 1).put("number_of_replicas", 1))_                .get())__        indexRandom(true, client().prepareIndex("cache_test_idx", "type", "1").setSource("s", 1),_                client().prepareIndex("cache_test_idx", "type", "2").setSource("s", 2))___        _        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getHitCount(), equalTo(0L))__        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getMissCount(), equalTo(0L))___        _        SearchResponse r = client().prepareSearch("cache_test_idx").setSize(0)_                .addAggregation(scriptedMetric("foo").mapScript(mapScript)).get()__        assertSearchResponse(r)___        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getHitCount(), equalTo(0L))__        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getMissCount(), equalTo(0L))__    };make,sure,that,a,request,using,a,script,does,not,get,cached,and,a,request,not,using,a,script,does,get,cached;public,void,test,dont,cache,scripts,throws,exception,script,map,script,new,script,script,type,inline,custom,script,plugin,name,count,1,collections,empty,map,assert,acked,prepare,create,add,mapping,type,d,type,long,set,settings,settings,builder,put,requests,cache,enable,true,put,1,put,1,get,index,random,true,client,prepare,index,type,1,set,source,s,1,client,prepare,index,type,2,set,source,s,2,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,hit,count,equal,to,0l,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,miss,count,equal,to,0l,search,response,r,client,prepare,search,set,size,0,add,aggregation,scripted,metric,foo,map,script,map,script,get,assert,search,response,r,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,hit,count,equal,to,0l,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,miss,count,equal,to,0l
ScriptedMetricIT -> public void testDontCacheScripts() throws Exception;1531179852;Make sure that a request using a script does not get cached and a request_not using a script does get cached.;public void testDontCacheScripts() throws Exception {_        Script mapScript = new Script(ScriptType.INLINE, CustomScriptPlugin.NAME, "_agg['count'] = 1", Collections.emptyMap())__        assertAcked(prepareCreate("cache_test_idx").addMapping("type", "d", "type=long")_                .setSettings(Settings.builder().put("requests.cache.enable", true).put("number_of_shards", 1).put("number_of_replicas", 1))_                .get())__        indexRandom(true, client().prepareIndex("cache_test_idx", "type", "1").setSource("s", 1),_                client().prepareIndex("cache_test_idx", "type", "2").setSource("s", 2))___        _        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getHitCount(), equalTo(0L))__        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getMissCount(), equalTo(0L))___        _        SearchResponse r = client().prepareSearch("cache_test_idx").setSize(0)_                .addAggregation(scriptedMetric("foo").mapScript(mapScript)).get()__        assertSearchResponse(r)___        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getHitCount(), equalTo(0L))__        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getMissCount(), equalTo(0L))__    };make,sure,that,a,request,using,a,script,does,not,get,cached,and,a,request,not,using,a,script,does,get,cached;public,void,test,dont,cache,scripts,throws,exception,script,map,script,new,script,script,type,inline,custom,script,plugin,name,count,1,collections,empty,map,assert,acked,prepare,create,add,mapping,type,d,type,long,set,settings,settings,builder,put,requests,cache,enable,true,put,1,put,1,get,index,random,true,client,prepare,index,type,1,set,source,s,1,client,prepare,index,type,2,set,source,s,2,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,hit,count,equal,to,0l,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,miss,count,equal,to,0l,search,response,r,client,prepare,search,set,size,0,add,aggregation,scripted,metric,foo,map,script,map,script,get,assert,search,response,r,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,hit,count,equal,to,0l,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,miss,count,equal,to,0l
ScriptedMetricIT -> public void testDontCacheScripts() throws Exception;1534539448;Make sure that a request using a script does not get cached and a request_not using a script does get cached.;public void testDontCacheScripts() throws Exception {_        Script mapScript = new Script(ScriptType.INLINE, CustomScriptPlugin.NAME, "state['count'] = 1", Collections.emptyMap())__        assertAcked(prepareCreate("cache_test_idx").addMapping("type", "d", "type=long")_                .setSettings(Settings.builder().put("requests.cache.enable", true).put("number_of_shards", 1).put("number_of_replicas", 1))_                .get())__        indexRandom(true, client().prepareIndex("cache_test_idx", "type", "1").setSource("s", 1),_                client().prepareIndex("cache_test_idx", "type", "2").setSource("s", 2))___        _        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getHitCount(), equalTo(0L))__        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getMissCount(), equalTo(0L))___        _        SearchResponse r = client().prepareSearch("cache_test_idx").setSize(0)_                .addAggregation(scriptedMetric("foo").mapScript(mapScript)).get()__        assertSearchResponse(r)___        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getHitCount(), equalTo(0L))__        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getMissCount(), equalTo(0L))__    };make,sure,that,a,request,using,a,script,does,not,get,cached,and,a,request,not,using,a,script,does,get,cached;public,void,test,dont,cache,scripts,throws,exception,script,map,script,new,script,script,type,inline,custom,script,plugin,name,state,count,1,collections,empty,map,assert,acked,prepare,create,add,mapping,type,d,type,long,set,settings,settings,builder,put,requests,cache,enable,true,put,1,put,1,get,index,random,true,client,prepare,index,type,1,set,source,s,1,client,prepare,index,type,2,set,source,s,2,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,hit,count,equal,to,0l,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,miss,count,equal,to,0l,search,response,r,client,prepare,search,set,size,0,add,aggregation,scripted,metric,foo,map,script,map,script,get,assert,search,response,r,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,hit,count,equal,to,0l,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,miss,count,equal,to,0l
ScriptedMetricIT -> public void testDontCacheScripts() throws Exception;1534755962;Make sure that a request using a script does not get cached and a request_not using a script does get cached.;public void testDontCacheScripts() throws Exception {_        Script mapScript = new Script(ScriptType.INLINE, CustomScriptPlugin.NAME, "state['count'] = 1", Collections.emptyMap())__        assertAcked(prepareCreate("cache_test_idx").addMapping("type", "d", "type=long")_                .setSettings(Settings.builder().put("requests.cache.enable", true).put("number_of_shards", 1).put("number_of_replicas", 1))_                .get())__        indexRandom(true, client().prepareIndex("cache_test_idx", "type", "1").setSource("s", 1),_                client().prepareIndex("cache_test_idx", "type", "2").setSource("s", 2))___        _        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getHitCount(), equalTo(0L))__        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getMissCount(), equalTo(0L))___        _        SearchResponse r = client().prepareSearch("cache_test_idx").setSize(0)_                .addAggregation(scriptedMetric("foo").mapScript(mapScript)).get()__        assertSearchResponse(r)___        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getHitCount(), equalTo(0L))__        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getMissCount(), equalTo(0L))__    };make,sure,that,a,request,using,a,script,does,not,get,cached,and,a,request,not,using,a,script,does,get,cached;public,void,test,dont,cache,scripts,throws,exception,script,map,script,new,script,script,type,inline,custom,script,plugin,name,state,count,1,collections,empty,map,assert,acked,prepare,create,add,mapping,type,d,type,long,set,settings,settings,builder,put,requests,cache,enable,true,put,1,put,1,get,index,random,true,client,prepare,index,type,1,set,source,s,1,client,prepare,index,type,2,set,source,s,2,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,hit,count,equal,to,0l,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,miss,count,equal,to,0l,search,response,r,client,prepare,search,set,size,0,add,aggregation,scripted,metric,foo,map,script,map,script,get,assert,search,response,r,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,hit,count,equal,to,0l,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,miss,count,equal,to,0l
ScriptedMetricIT -> public void testDontCacheScripts() throws Exception;1536314350;Make sure that a request using a script does not get cached and a request_not using a script does get cached.;public void testDontCacheScripts() throws Exception {_        Script mapScript = new Script(ScriptType.INLINE, CustomScriptPlugin.NAME, "state['count'] = 1", Collections.emptyMap())__        assertAcked(prepareCreate("cache_test_idx").addMapping("type", "d", "type=long")_                .setSettings(Settings.builder().put("requests.cache.enable", true).put("number_of_shards", 1).put("number_of_replicas", 1))_                .get())__        indexRandom(true, client().prepareIndex("cache_test_idx", "type", "1").setSource("s", 1),_                client().prepareIndex("cache_test_idx", "type", "2").setSource("s", 2))___        _        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getHitCount(), equalTo(0L))__        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getMissCount(), equalTo(0L))___        _        SearchResponse r = client().prepareSearch("cache_test_idx").setSize(0)_                .addAggregation(scriptedMetric("foo").mapScript(mapScript)).get()__        assertSearchResponse(r)___        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getHitCount(), equalTo(0L))__        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getMissCount(), equalTo(0L))__    };make,sure,that,a,request,using,a,script,does,not,get,cached,and,a,request,not,using,a,script,does,get,cached;public,void,test,dont,cache,scripts,throws,exception,script,map,script,new,script,script,type,inline,custom,script,plugin,name,state,count,1,collections,empty,map,assert,acked,prepare,create,add,mapping,type,d,type,long,set,settings,settings,builder,put,requests,cache,enable,true,put,1,put,1,get,index,random,true,client,prepare,index,type,1,set,source,s,1,client,prepare,index,type,2,set,source,s,2,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,hit,count,equal,to,0l,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,miss,count,equal,to,0l,search,response,r,client,prepare,search,set,size,0,add,aggregation,scripted,metric,foo,map,script,map,script,get,assert,search,response,r,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,hit,count,equal,to,0l,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,miss,count,equal,to,0l
ScriptedMetricIT -> public void testDontCacheScripts() throws Exception;1538579488;Make sure that a request using a script does not get cached and a request_not using a script does get cached.;public void testDontCacheScripts() throws Exception {_        Script mapScript = new Script(ScriptType.INLINE, CustomScriptPlugin.NAME, "state['count'] = 1", Collections.emptyMap())__        Script combineScript =_            new Script(ScriptType.INLINE, CustomScriptPlugin.NAME, "no-op aggregation", Collections.emptyMap())__        Script reduceScript = new Script(ScriptType.INLINE, CustomScriptPlugin.NAME,_            "no-op list aggregation", Collections.emptyMap())___        assertAcked(prepareCreate("cache_test_idx").addMapping("type", "d", "type=long")_                .setSettings(Settings.builder().put("requests.cache.enable", true).put("number_of_shards", 1).put("number_of_replicas", 1))_                .get())__        indexRandom(true, client().prepareIndex("cache_test_idx", "type", "1").setSource("s", 1),_                client().prepareIndex("cache_test_idx", "type", "2").setSource("s", 2))___        _        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getHitCount(), equalTo(0L))__        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getMissCount(), equalTo(0L))___        _        SearchResponse r = client().prepareSearch("cache_test_idx").setSize(0)_                .addAggregation(scriptedMetric("foo").mapScript(mapScript).combineScript(combineScript).reduceScript(reduceScript)).get()__        assertSearchResponse(r)___        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getHitCount(), equalTo(0L))__        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getMissCount(), equalTo(0L))__    };make,sure,that,a,request,using,a,script,does,not,get,cached,and,a,request,not,using,a,script,does,get,cached;public,void,test,dont,cache,scripts,throws,exception,script,map,script,new,script,script,type,inline,custom,script,plugin,name,state,count,1,collections,empty,map,script,combine,script,new,script,script,type,inline,custom,script,plugin,name,no,op,aggregation,collections,empty,map,script,reduce,script,new,script,script,type,inline,custom,script,plugin,name,no,op,list,aggregation,collections,empty,map,assert,acked,prepare,create,add,mapping,type,d,type,long,set,settings,settings,builder,put,requests,cache,enable,true,put,1,put,1,get,index,random,true,client,prepare,index,type,1,set,source,s,1,client,prepare,index,type,2,set,source,s,2,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,hit,count,equal,to,0l,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,miss,count,equal,to,0l,search,response,r,client,prepare,search,set,size,0,add,aggregation,scripted,metric,foo,map,script,map,script,combine,script,combine,script,reduce,script,reduce,script,get,assert,search,response,r,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,hit,count,equal,to,0l,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,miss,count,equal,to,0l
ScriptedMetricIT -> public void testDontCacheScripts() throws Exception;1544035746;Make sure that a request using a script does not get cached and a request_not using a script does get cached.;public void testDontCacheScripts() throws Exception {_        Script mapScript = new Script(ScriptType.INLINE, CustomScriptPlugin.NAME, "state['count'] = 1", Collections.emptyMap())__        Script combineScript =_            new Script(ScriptType.INLINE, CustomScriptPlugin.NAME, "no-op aggregation", Collections.emptyMap())__        Script reduceScript = new Script(ScriptType.INLINE, CustomScriptPlugin.NAME,_            "no-op list aggregation", Collections.emptyMap())___        assertAcked(prepareCreate("cache_test_idx").addMapping("type", "d", "type=long")_                .setSettings(Settings.builder().put("requests.cache.enable", true).put("number_of_shards", 1).put("number_of_replicas", 1))_                .get())__        indexRandom(true, client().prepareIndex("cache_test_idx", "type", "1").setSource("s", 1),_                client().prepareIndex("cache_test_idx", "type", "2").setSource("s", 2))___        _        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getHitCount(), equalTo(0L))__        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getMissCount(), equalTo(0L))___        _        SearchResponse r = client().prepareSearch("cache_test_idx").setSize(0)_                .addAggregation(scriptedMetric("foo").mapScript(mapScript).combineScript(combineScript).reduceScript(reduceScript)).get()__        assertSearchResponse(r)___        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getHitCount(), equalTo(0L))__        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getMissCount(), equalTo(0L))__    };make,sure,that,a,request,using,a,script,does,not,get,cached,and,a,request,not,using,a,script,does,get,cached;public,void,test,dont,cache,scripts,throws,exception,script,map,script,new,script,script,type,inline,custom,script,plugin,name,state,count,1,collections,empty,map,script,combine,script,new,script,script,type,inline,custom,script,plugin,name,no,op,aggregation,collections,empty,map,script,reduce,script,new,script,script,type,inline,custom,script,plugin,name,no,op,list,aggregation,collections,empty,map,assert,acked,prepare,create,add,mapping,type,d,type,long,set,settings,settings,builder,put,requests,cache,enable,true,put,1,put,1,get,index,random,true,client,prepare,index,type,1,set,source,s,1,client,prepare,index,type,2,set,source,s,2,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,hit,count,equal,to,0l,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,miss,count,equal,to,0l,search,response,r,client,prepare,search,set,size,0,add,aggregation,scripted,metric,foo,map,script,map,script,combine,script,combine,script,reduce,script,reduce,script,get,assert,search,response,r,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,hit,count,equal,to,0l,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,miss,count,equal,to,0l
ScriptedMetricIT -> public void testDontCacheScripts() throws Exception;1544110272;Make sure that a request using a script does not get cached and a request_not using a script does get cached.;public void testDontCacheScripts() throws Exception {_        Script mapScript = new Script(ScriptType.INLINE, CustomScriptPlugin.NAME, "state['count'] = 1", Collections.emptyMap())__        Script combineScript =_            new Script(ScriptType.INLINE, CustomScriptPlugin.NAME, "no-op aggregation", Collections.emptyMap())__        Script reduceScript = new Script(ScriptType.INLINE, CustomScriptPlugin.NAME,_            "no-op list aggregation", Collections.emptyMap())___        assertAcked(prepareCreate("cache_test_idx").addMapping("type", "d", "type=long")_                .setSettings(Settings.builder().put("requests.cache.enable", true).put("number_of_shards", 1).put("number_of_replicas", 1))_                .get())__        indexRandom(true, client().prepareIndex("cache_test_idx", "type", "1").setSource("s", 1),_                client().prepareIndex("cache_test_idx", "type", "2").setSource("s", 2))___        _        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getHitCount(), equalTo(0L))__        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getMissCount(), equalTo(0L))___        _        SearchResponse r = client().prepareSearch("cache_test_idx").setSize(0)_                .addAggregation(scriptedMetric("foo").mapScript(mapScript).combineScript(combineScript).reduceScript(reduceScript)).get()__        assertSearchResponse(r)___        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getHitCount(), equalTo(0L))__        assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache()_                .getMissCount(), equalTo(0L))__    };make,sure,that,a,request,using,a,script,does,not,get,cached,and,a,request,not,using,a,script,does,get,cached;public,void,test,dont,cache,scripts,throws,exception,script,map,script,new,script,script,type,inline,custom,script,plugin,name,state,count,1,collections,empty,map,script,combine,script,new,script,script,type,inline,custom,script,plugin,name,no,op,aggregation,collections,empty,map,script,reduce,script,new,script,script,type,inline,custom,script,plugin,name,no,op,list,aggregation,collections,empty,map,assert,acked,prepare,create,add,mapping,type,d,type,long,set,settings,settings,builder,put,requests,cache,enable,true,put,1,put,1,get,index,random,true,client,prepare,index,type,1,set,source,s,1,client,prepare,index,type,2,set,source,s,2,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,hit,count,equal,to,0l,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,miss,count,equal,to,0l,search,response,r,client,prepare,search,set,size,0,add,aggregation,scripted,metric,foo,map,script,map,script,combine,script,combine,script,reduce,script,reduce,script,get,assert,search,response,r,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,hit,count,equal,to,0l,assert,that,client,admin,indices,prepare,stats,set,request,cache,true,get,get,total,get,request,cache,get,miss,count,equal,to,0l
