commented;modifiers;parameterAmount;loc;comment;code
false;public;0;16;;@Override public void setupSuiteScopeCluster() throws Exception {     createIndex("idx").     createIndex("idx_unmapped").     for (int i = 0. i < 10. i++) {         client().prepareIndex("idx", "type", "" + i).setSource(jsonBuilder().startObject().field("value", i + 1).startArray("values").value(i + 2).value(i + 3).endArray().endObject()).get().     }     client().admin().indices().prepareFlush().get().     client().admin().indices().prepareRefresh().get().     ensureSearchable(). }
false;protected;0;4;;@Override protected Collection<Class<? extends Plugin>> nodePlugins() {     return Collections.singletonList(MetricAggScriptPlugin.class). }
false;public;0;13;;public void testUnmapped() throws Exception {     SearchResponse searchResponse = client().prepareSearch("idx_unmapped").setQuery(matchAllQuery()).addAggregation(count("count").field("value")).get().     assertThat(searchResponse.getHits().getTotalHits().value, equalTo(0L)).     ValueCount valueCount = searchResponse.getAggregations().get("count").     assertThat(valueCount, notNullValue()).     assertThat(valueCount.getName(), equalTo("count")).     assertThat(valueCount.getValue(), equalTo(0L)). }
false;public;0;13;;public void testSingleValuedField() throws Exception {     SearchResponse searchResponse = client().prepareSearch("idx").setQuery(matchAllQuery()).addAggregation(count("count").field("value")).get().     assertHitCount(searchResponse, 10).     ValueCount valueCount = searchResponse.getAggregations().get("count").     assertThat(valueCount, notNullValue()).     assertThat(valueCount.getName(), equalTo("count")).     assertThat(valueCount.getValue(), equalTo(10L)). }
false;public;0;21;;public void testSingleValuedFieldGetProperty() throws Exception {     SearchResponse searchResponse = client().prepareSearch("idx").setQuery(matchAllQuery()).addAggregation(global("global").subAggregation(count("count").field("value"))).get().     assertHitCount(searchResponse, 10).     Global global = searchResponse.getAggregations().get("global").     assertThat(global, notNullValue()).     assertThat(global.getName(), equalTo("global")).     assertThat(global.getDocCount(), equalTo(10L)).     assertThat(global.getAggregations(), notNullValue()).     assertThat(global.getAggregations().asMap().size(), equalTo(1)).     ValueCount valueCount = global.getAggregations().get("count").     assertThat(valueCount, notNullValue()).     assertThat(valueCount.getName(), equalTo("count")).     assertThat(valueCount.getValue(), equalTo(10L)).     assertThat((ValueCount) ((InternalAggregation) global).getProperty("count"), equalTo(valueCount)).     assertThat((double) ((InternalAggregation) global).getProperty("count.value"), equalTo(10d)).     assertThat((double) ((InternalAggregation) valueCount).getProperty("value"), equalTo(10d)). }
false;public;0;13;;public void testSingleValuedFieldPartiallyUnmapped() throws Exception {     SearchResponse searchResponse = client().prepareSearch("idx", "idx_unmapped").setQuery(matchAllQuery()).addAggregation(count("count").field("value")).get().     assertHitCount(searchResponse, 10).     ValueCount valueCount = searchResponse.getAggregations().get("count").     assertThat(valueCount, notNullValue()).     assertThat(valueCount.getName(), equalTo("count")).     assertThat(valueCount.getValue(), equalTo(10L)). }
false;public;0;13;;public void testMultiValuedField() throws Exception {     SearchResponse searchResponse = client().prepareSearch("idx").setQuery(matchAllQuery()).addAggregation(count("count").field("values")).get().     assertHitCount(searchResponse, 10).     ValueCount valueCount = searchResponse.getAggregations().get("count").     assertThat(valueCount, notNullValue()).     assertThat(valueCount.getName(), equalTo("count")).     assertThat(valueCount.getValue(), equalTo(20L)). }
false;public;0;13;;public void testSingleValuedScript() throws Exception {     SearchResponse searchResponse = client().prepareSearch("idx").setQuery(matchAllQuery()).addAggregation(count("count").script(new Script(ScriptType.INLINE, METRIC_SCRIPT_ENGINE, VALUE_FIELD_SCRIPT, Collections.emptyMap()))).get().     assertHitCount(searchResponse, 10).     ValueCount valueCount = searchResponse.getAggregations().get("count").     assertThat(valueCount, notNullValue()).     assertThat(valueCount.getName(), equalTo("count")).     assertThat(valueCount.getValue(), equalTo(10L)). }
false;public;0;13;;public void testMultiValuedScript() throws Exception {     SearchResponse searchResponse = client().prepareSearch("idx").setQuery(matchAllQuery()).addAggregation(count("count").script(new Script(ScriptType.INLINE, METRIC_SCRIPT_ENGINE, SUM_VALUES_FIELD_SCRIPT, Collections.emptyMap()))).get().     assertHitCount(searchResponse, 10).     ValueCount valueCount = searchResponse.getAggregations().get("count").     assertThat(valueCount, notNullValue()).     assertThat(valueCount.getName(), equalTo("count")).     assertThat(valueCount.getValue(), equalTo(20L)). }
false;public;0;13;;public void testSingleValuedScriptWithParams() throws Exception {     Map<String, Object> params = Collections.singletonMap("field", "value").     SearchResponse searchResponse = client().prepareSearch("idx").setQuery(matchAllQuery()).addAggregation(count("count").script(new Script(ScriptType.INLINE, METRIC_SCRIPT_ENGINE, SUM_FIELD_PARAMS_SCRIPT, params))).get().     assertHitCount(searchResponse, 10).     ValueCount valueCount = searchResponse.getAggregations().get("count").     assertThat(valueCount, notNullValue()).     assertThat(valueCount.getName(), equalTo("count")).     assertThat(valueCount.getValue(), equalTo(10L)). }
false;public;0;13;;public void testMultiValuedScriptWithParams() throws Exception {     Map<String, Object> params = Collections.singletonMap("field", "values").     SearchResponse searchResponse = client().prepareSearch("idx").setQuery(matchAllQuery()).addAggregation(count("count").script(new Script(ScriptType.INLINE, METRIC_SCRIPT_ENGINE, SUM_FIELD_PARAMS_SCRIPT, params))).get().     assertHitCount(searchResponse, 10).     ValueCount valueCount = searchResponse.getAggregations().get("count").     assertThat(valueCount, notNullValue()).     assertThat(valueCount.getName(), equalTo("count")).     assertThat(valueCount.getValue(), equalTo(20L)). }
true;public;0;35;/**  * Make sure that a request using a script does not get cached and a request  * not using a script does get cached.  */ ;/**  * Make sure that a request using a script does not get cached and a request  * not using a script does get cached.  */ public void testDontCacheScripts() throws Exception {     assertAcked(prepareCreate("cache_test_idx").addMapping("type", "d", "type=long").setSettings(Settings.builder().put("requests.cache.enable", true).put("number_of_shards", 1).put("number_of_replicas", 1)).get()).     indexRandom(true, client().prepareIndex("cache_test_idx", "type", "1").setSource("s", 1), client().prepareIndex("cache_test_idx", "type", "2").setSource("s", 2)).     // Make sure we are starting with a clear cache     assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache().getHitCount(), equalTo(0L)).     assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache().getMissCount(), equalTo(0L)).     // Test that a request using a script does not get cached     SearchResponse r = client().prepareSearch("cache_test_idx").setSize(0).addAggregation(count("foo").field("d").script(new Script(ScriptType.INLINE, METRIC_SCRIPT_ENGINE, VALUE_FIELD_SCRIPT, Collections.emptyMap()))).get().     assertSearchResponse(r).     assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache().getHitCount(), equalTo(0L)).     assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache().getMissCount(), equalTo(0L)).     // To make sure that the cache is working test that a request not using     // a script is cached     r = client().prepareSearch("cache_test_idx").setSize(0).addAggregation(count("foo").field("d")).get().     assertSearchResponse(r).     assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache().getHitCount(), equalTo(0L)).     assertThat(client().admin().indices().prepareStats("cache_test_idx").setRequestCache(true).get().getTotal().getRequestCache().getMissCount(), equalTo(1L)). }
false;public;0;28;;public void testOrderByEmptyAggregation() throws Exception {     SearchResponse searchResponse = client().prepareSearch("idx").setQuery(matchAllQuery()).addAggregation(terms("terms").field("value").order(BucketOrder.compound(BucketOrder.aggregation("filter>count", true))).subAggregation(filter("filter", termQuery("value", 100)).subAggregation(count("count").field("value")))).get().     assertHitCount(searchResponse, 10).     Terms terms = searchResponse.getAggregations().get("terms").     assertThat(terms, notNullValue()).     List<? extends Terms.Bucket> buckets = terms.getBuckets().     assertThat(buckets, notNullValue()).     assertThat(buckets.size(), equalTo(10)).     for (int i = 0. i < 10. i++) {         Terms.Bucket bucket = buckets.get(i).         assertThat(bucket, notNullValue()).         assertThat(bucket.getKeyAsNumber(), equalTo((long) i + 1)).         assertThat(bucket.getDocCount(), equalTo(1L)).         Filter filter = bucket.getAggregations().get("filter").         assertThat(filter, notNullValue()).         assertThat(filter.getDocCount(), equalTo(0L)).         ValueCount count = filter.getAggregations().get("count").         assertThat(count, notNullValue()).         assertThat(count.value(), equalTo(0.0)).     } }
