commented;modifiers;parameterAmount;loc;comment;code
false;public;0;29;;@Before public void setUp() throws Exception {     super.setUp().     MappedFieldType fieldType = mock(MappedFieldType.class).     when(fieldType.name()).thenReturn("field").     // Add 10 when valueForDisplay is called so it is easy to be sure it *was* called     when(fieldType.valueForDisplay(anyObject())).then(invocation -> (Double) invocation.getArguments()[0] + 10).     MapperService mapperService = mock(MapperService.class).     when(mapperService.fullName("field")).thenReturn(fieldType).     when(mapperService.fullName("alias")).thenReturn(fieldType).     FieldInfo mockFieldInfo = new FieldInfo("field", 1, false, false, true, IndexOptions.NONE, DocValuesType.NONE, -1, Collections.emptyMap(), 0, 0, 0, false).     LeafReader leafReader = mock(LeafReader.class).     doAnswer(invocation -> {         Object[] args = invocation.getArguments().         StoredFieldVisitor visitor = (StoredFieldVisitor) args[1].         visitor.doubleField(mockFieldInfo, 2.718).         return null.     }).when(leafReader).document(anyInt(), any(StoredFieldVisitor.class)).     fieldsLookup = new LeafFieldsLookup(mapperService, new String[] { "type" }, leafReader). }
false;public;0;9;;public void testBasicLookup() {     FieldLookup fieldLookup = (FieldLookup) fieldsLookup.get("field").     assertEquals("field", fieldLookup.fieldType().name()).     List<Object> values = fieldLookup.getValues().     assertNotNull(values).     assertEquals(1, values.size()).     assertEquals(12.718, values.get(0)). }
false;public;0;9;;public void testLookupWithFieldAlias() {     FieldLookup fieldLookup = (FieldLookup) fieldsLookup.get("alias").     assertEquals("field", fieldLookup.fieldType().name()).     List<Object> values = fieldLookup.getValues().     assertNotNull(values).     assertEquals(1, values.size()).     assertEquals(12.718, values.get(0)). }
