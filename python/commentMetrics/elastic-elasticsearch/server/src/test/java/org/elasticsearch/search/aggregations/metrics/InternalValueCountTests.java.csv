commented;modifiers;parameterAmount;loc;comment;code
false;protected;3;5;;@Override protected InternalValueCount createTestInstance(String name, List<PipelineAggregator> pipelineAggregators, Map<String, Object> metaData) {     return new InternalValueCount(name, randomIntBetween(0, 100), pipelineAggregators, metaData). }
false;protected;2;4;;@Override protected void assertReduced(InternalValueCount reduced, List<InternalValueCount> inputs) {     assertEquals(inputs.stream().mapToLong(InternalValueCount::getValue).sum(), reduced.getValue(), 0). }
false;protected;0;4;;@Override protected Writeable.Reader<InternalValueCount> instanceReader() {     return InternalValueCount::new. }
false;protected;2;5;;@Override protected void assertFromXContent(InternalValueCount valueCount, ParsedAggregation parsedAggregation) {     assertEquals(valueCount.getValue(), ((ParsedValueCount) parsedAggregation).getValue(), 0).     assertEquals(valueCount.getValueAsString(), ((ParsedValueCount) parsedAggregation).getValueAsString()). }
false;protected;1;30;;@Override protected InternalValueCount mutateInstance(InternalValueCount instance) {     String name = instance.getName().     long value = instance.getValue().     List<PipelineAggregator> pipelineAggregators = instance.pipelineAggregators().     Map<String, Object> metaData = instance.getMetaData().     switch(between(0, 2)) {         case 0:             name += randomAlphaOfLength(5).             break.         case 1:             if (Double.isFinite(value)) {                 value += between(1, 100).             } else {                 value = between(1, 100).             }             break.         case 2:             if (metaData == null) {                 metaData = new HashMap<>(1).             } else {                 metaData = new HashMap<>(instance.getMetaData()).             }             metaData.put(randomAlphaOfLength(15), randomInt()).             break.         default:             throw new AssertionError("Illegal randomisation branch").     }     return new InternalValueCount(name, value, pipelineAggregators, metaData). }
