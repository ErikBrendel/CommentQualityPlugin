# id;timestamp;commentText;codeText;commentWords;codeWords
MetaDataStateFormatTests -> Format -> Format(String prefix);1544081506;Constructs a MetaDataStateFormat object for storing/retrieving DummyState._By default no I/O failures are injected._I/O failure behaviour can be controlled by {@link #noFailures()}, {@link #failOnMethods(String...)} and_{@link #failRandomly()} method calls.;Format(String prefix) {_            super(prefix)__            this.failureMode = FailureMode.NO_FAILURES__        };constructs,a,meta,data,state,format,object,for,storing,retrieving,dummy,state,by,default,no,i,o,failures,are,injected,i,o,failure,behaviour,can,be,controlled,by,link,no,failures,link,fail,on,methods,string,and,link,fail,randomly,method,calls;format,string,prefix,super,prefix,this,failure,mode,failure,mode
MetaDataStateFormatTests -> Format -> Format(String prefix);1548224486;Constructs a MetaDataStateFormat object for storing/retrieving DummyState._By default no I/O failures are injected._I/O failure behaviour can be controlled by {@link #noFailures()}, {@link #failOnMethods(String...)} and_{@link #failRandomly()} method calls.;Format(String prefix) {_            super(prefix)__            this.failureMode = FailureMode.NO_FAILURES__        };constructs,a,meta,data,state,format,object,for,storing,retrieving,dummy,state,by,default,no,i,o,failures,are,injected,i,o,failure,behaviour,can,be,controlled,by,link,no,failures,link,fail,on,methods,string,and,link,fail,randomly,method,calls;format,string,prefix,super,prefix,this,failure,mode,failure,mode
MetaDataStateFormatTests -> public void testReadClusterState() throws IOException;1544081506;Ensure we can read a pre-generated cluster state.;public void testReadClusterState() throws IOException {_        final MetaDataStateFormat<MetaData> format = new MetaDataStateFormat<MetaData>("global-") {__            @Override_            public void toXContent(XContentBuilder builder, MetaData state) {_                fail("this test doesn't write")__            }__            @Override_            public MetaData fromXContent(XContentParser parser) throws IOException {_                return MetaData.Builder.fromXContent(parser)__            }_        }__        Path tmp = createTempDir()__        final InputStream resource = this.getClass().getResourceAsStream("global-3.st")__        assertThat(resource, notNullValue())__        Path dst = tmp.resolve("global-3.st")__        Files.copy(resource, dst)__        MetaData read = format.read(xContentRegistry(), dst)__        assertThat(read, notNullValue())__        assertThat(read.clusterUUID(), equalTo("y9XcwLJGTROoOEfixlRwfQ"))__        _    };ensure,we,can,read,a,pre,generated,cluster,state;public,void,test,read,cluster,state,throws,ioexception,final,meta,data,state,format,meta,data,format,new,meta,data,state,format,meta,data,global,override,public,void,to,xcontent,xcontent,builder,builder,meta,data,state,fail,this,test,doesn,t,write,override,public,meta,data,from,xcontent,xcontent,parser,parser,throws,ioexception,return,meta,data,builder,from,xcontent,parser,path,tmp,create,temp,dir,final,input,stream,resource,this,get,class,get,resource,as,stream,global,3,st,assert,that,resource,not,null,value,path,dst,tmp,resolve,global,3,st,files,copy,resource,dst,meta,data,read,format,read,x,content,registry,dst,assert,that,read,not,null,value,assert,that,read,cluster,uuid,equal,to,y9xcw,ljgtroo,oefixl,rwf,q
MetaDataStateFormatTests -> public void testReadClusterState() throws IOException;1548224486;Ensure we can read a pre-generated cluster state.;public void testReadClusterState() throws IOException {_        final MetaDataStateFormat<MetaData> format = new MetaDataStateFormat<MetaData>("global-") {__            @Override_            public void toXContent(XContentBuilder builder, MetaData state) {_                fail("this test doesn't write")__            }__            @Override_            public MetaData fromXContent(XContentParser parser) throws IOException {_                return MetaData.Builder.fromXContent(parser)__            }_        }__        Path tmp = createTempDir()__        final InputStream resource = this.getClass().getResourceAsStream("global-3.st")__        assertThat(resource, notNullValue())__        Path dst = tmp.resolve("global-3.st")__        Files.copy(resource, dst)__        MetaData read = format.read(xContentRegistry(), dst)__        assertThat(read, notNullValue())__        assertThat(read.clusterUUID(), equalTo("y9XcwLJGTROoOEfixlRwfQ"))__        _    };ensure,we,can,read,a,pre,generated,cluster,state;public,void,test,read,cluster,state,throws,ioexception,final,meta,data,state,format,meta,data,format,new,meta,data,state,format,meta,data,global,override,public,void,to,xcontent,xcontent,builder,builder,meta,data,state,fail,this,test,doesn,t,write,override,public,meta,data,from,xcontent,xcontent,parser,parser,throws,ioexception,return,meta,data,builder,from,xcontent,parser,path,tmp,create,temp,dir,final,input,stream,resource,this,get,class,get,resource,as,stream,global,3,st,assert,that,resource,not,null,value,path,dst,tmp,resolve,global,3,st,files,copy,resource,dst,meta,data,read,format,read,x,content,registry,dst,assert,that,read,not,null,value,assert,that,read,cluster,uuid,equal,to,y9xcw,ljgtroo,oefixl,rwf,q
MetaDataStateFormatTests -> public void testReadClusterState() throws URISyntaxException, IOException;1524684173;Ensure we can read a pre-generated cluster state.;public void testReadClusterState() throws URISyntaxException, IOException {_        final MetaDataStateFormat<MetaData> format = new MetaDataStateFormat<MetaData>("global-") {__            @Override_            public void toXContent(XContentBuilder builder, MetaData state) throws IOException {_                fail("this test doesn't write")__            }__            @Override_            public MetaData fromXContent(XContentParser parser) throws IOException {_                return MetaData.Builder.fromXContent(parser)__            }_        }__        Path tmp = createTempDir()__        final InputStream resource = this.getClass().getResourceAsStream("global-3.st")__        assertThat(resource, notNullValue())__        Path dst = tmp.resolve("global-3.st")__        Files.copy(resource, dst)__        MetaData read = format.read(xContentRegistry(), dst)__        assertThat(read, notNullValue())__        assertThat(read.clusterUUID(), equalTo("3O1tDF1IRB6fSJ-GrTMUtg"))__        _    };ensure,we,can,read,a,pre,generated,cluster,state;public,void,test,read,cluster,state,throws,urisyntax,exception,ioexception,final,meta,data,state,format,meta,data,format,new,meta,data,state,format,meta,data,global,override,public,void,to,xcontent,xcontent,builder,builder,meta,data,state,throws,ioexception,fail,this,test,doesn,t,write,override,public,meta,data,from,xcontent,xcontent,parser,parser,throws,ioexception,return,meta,data,builder,from,xcontent,parser,path,tmp,create,temp,dir,final,input,stream,resource,this,get,class,get,resource,as,stream,global,3,st,assert,that,resource,not,null,value,path,dst,tmp,resolve,global,3,st,files,copy,resource,dst,meta,data,read,format,read,x,content,registry,dst,assert,that,read,not,null,value,assert,that,read,cluster,uuid,equal,to,3o1t,df1irb6f,sj,gr,tmutg
MetaDataStateFormatTests -> public void testReadClusterState() throws URISyntaxException, IOException;1528762805;Ensure we can read a pre-generated cluster state.;public void testReadClusterState() throws URISyntaxException, IOException {_        final MetaDataStateFormat<MetaData> format = new MetaDataStateFormat<MetaData>("global-") {__            @Override_            public void toXContent(XContentBuilder builder, MetaData state) throws IOException {_                fail("this test doesn't write")__            }__            @Override_            public MetaData fromXContent(XContentParser parser) throws IOException {_                return MetaData.Builder.fromXContent(parser)__            }_        }__        Path tmp = createTempDir()__        final InputStream resource = this.getClass().getResourceAsStream("global-3.st")__        assertThat(resource, notNullValue())__        Path dst = tmp.resolve("global-3.st")__        Files.copy(resource, dst)__        MetaData read = format.read(xContentRegistry(), dst)__        assertThat(read, notNullValue())__        assertThat(read.clusterUUID(), equalTo("3O1tDF1IRB6fSJ-GrTMUtg"))__        _    };ensure,we,can,read,a,pre,generated,cluster,state;public,void,test,read,cluster,state,throws,urisyntax,exception,ioexception,final,meta,data,state,format,meta,data,format,new,meta,data,state,format,meta,data,global,override,public,void,to,xcontent,xcontent,builder,builder,meta,data,state,throws,ioexception,fail,this,test,doesn,t,write,override,public,meta,data,from,xcontent,xcontent,parser,parser,throws,ioexception,return,meta,data,builder,from,xcontent,parser,path,tmp,create,temp,dir,final,input,stream,resource,this,get,class,get,resource,as,stream,global,3,st,assert,that,resource,not,null,value,path,dst,tmp,resolve,global,3,st,files,copy,resource,dst,meta,data,read,format,read,x,content,registry,dst,assert,that,read,not,null,value,assert,that,read,cluster,uuid,equal,to,3o1t,df1irb6f,sj,gr,tmutg
MetaDataStateFormatTests -> public void testReadClusterState() throws URISyntaxException, IOException;1531179852;Ensure we can read a pre-generated cluster state.;public void testReadClusterState() throws URISyntaxException, IOException {_        final MetaDataStateFormat<MetaData> format = new MetaDataStateFormat<MetaData>("global-") {__            @Override_            public void toXContent(XContentBuilder builder, MetaData state) throws IOException {_                fail("this test doesn't write")__            }__            @Override_            public MetaData fromXContent(XContentParser parser) throws IOException {_                return MetaData.Builder.fromXContent(parser)__            }_        }__        Path tmp = createTempDir()__        final InputStream resource = this.getClass().getResourceAsStream("global-3.st")__        assertThat(resource, notNullValue())__        Path dst = tmp.resolve("global-3.st")__        Files.copy(resource, dst)__        MetaData read = format.read(xContentRegistry(), dst)__        assertThat(read, notNullValue())__        assertThat(read.clusterUUID(), equalTo("y9XcwLJGTROoOEfixlRwfQ"))__        _    };ensure,we,can,read,a,pre,generated,cluster,state;public,void,test,read,cluster,state,throws,urisyntax,exception,ioexception,final,meta,data,state,format,meta,data,format,new,meta,data,state,format,meta,data,global,override,public,void,to,xcontent,xcontent,builder,builder,meta,data,state,throws,ioexception,fail,this,test,doesn,t,write,override,public,meta,data,from,xcontent,xcontent,parser,parser,throws,ioexception,return,meta,data,builder,from,xcontent,parser,path,tmp,create,temp,dir,final,input,stream,resource,this,get,class,get,resource,as,stream,global,3,st,assert,that,resource,not,null,value,path,dst,tmp,resolve,global,3,st,files,copy,resource,dst,meta,data,read,format,read,x,content,registry,dst,assert,that,read,not,null,value,assert,that,read,cluster,uuid,equal,to,y9xcw,ljgtroo,oefixl,rwf,q
MetaDataStateFormatTests -> public void testReadClusterState() throws URISyntaxException, IOException;1535405719;Ensure we can read a pre-generated cluster state.;public void testReadClusterState() throws URISyntaxException, IOException {_        final MetaDataStateFormat<MetaData> format = new MetaDataStateFormat<MetaData>("global-") {__            @Override_            public void toXContent(XContentBuilder builder, MetaData state) throws IOException {_                fail("this test doesn't write")__            }__            @Override_            public MetaData fromXContent(XContentParser parser) throws IOException {_                return MetaData.Builder.fromXContent(parser)__            }_        }__        Path tmp = createTempDir()__        final InputStream resource = this.getClass().getResourceAsStream("global-3.st")__        assertThat(resource, notNullValue())__        Path dst = tmp.resolve("global-3.st")__        Files.copy(resource, dst)__        MetaData read = format.read(xContentRegistry(), dst)__        assertThat(read, notNullValue())__        assertThat(read.clusterUUID(), equalTo("y9XcwLJGTROoOEfixlRwfQ"))__        _    };ensure,we,can,read,a,pre,generated,cluster,state;public,void,test,read,cluster,state,throws,urisyntax,exception,ioexception,final,meta,data,state,format,meta,data,format,new,meta,data,state,format,meta,data,global,override,public,void,to,xcontent,xcontent,builder,builder,meta,data,state,throws,ioexception,fail,this,test,doesn,t,write,override,public,meta,data,from,xcontent,xcontent,parser,parser,throws,ioexception,return,meta,data,builder,from,xcontent,parser,path,tmp,create,temp,dir,final,input,stream,resource,this,get,class,get,resource,as,stream,global,3,st,assert,that,resource,not,null,value,path,dst,tmp,resolve,global,3,st,files,copy,resource,dst,meta,data,read,format,read,x,content,registry,dst,assert,that,read,not,null,value,assert,that,read,cluster,uuid,equal,to,y9xcw,ljgtroo,oefixl,rwf,q
MetaDataStateFormatTests -> public void testReadClusterState() throws URISyntaxException, IOException;1538067637;Ensure we can read a pre-generated cluster state.;public void testReadClusterState() throws URISyntaxException, IOException {_        final MetaDataStateFormat<MetaData> format = new MetaDataStateFormat<MetaData>("global-") {__            @Override_            public void toXContent(XContentBuilder builder, MetaData state) throws IOException {_                fail("this test doesn't write")__            }__            @Override_            public MetaData fromXContent(XContentParser parser) throws IOException {_                return MetaData.Builder.fromXContent(parser)__            }_        }__        Path tmp = createTempDir()__        final InputStream resource = this.getClass().getResourceAsStream("global-3.st")__        assertThat(resource, notNullValue())__        Path dst = tmp.resolve("global-3.st")__        Files.copy(resource, dst)__        MetaData read = format.read(xContentRegistry(), dst)__        assertThat(read, notNullValue())__        assertThat(read.clusterUUID(), equalTo("y9XcwLJGTROoOEfixlRwfQ"))__        _    };ensure,we,can,read,a,pre,generated,cluster,state;public,void,test,read,cluster,state,throws,urisyntax,exception,ioexception,final,meta,data,state,format,meta,data,format,new,meta,data,state,format,meta,data,global,override,public,void,to,xcontent,xcontent,builder,builder,meta,data,state,throws,ioexception,fail,this,test,doesn,t,write,override,public,meta,data,from,xcontent,xcontent,parser,parser,throws,ioexception,return,meta,data,builder,from,xcontent,parser,path,tmp,create,temp,dir,final,input,stream,resource,this,get,class,get,resource,as,stream,global,3,st,assert,that,resource,not,null,value,path,dst,tmp,resolve,global,3,st,files,copy,resource,dst,meta,data,read,format,read,x,content,registry,dst,assert,that,read,not,null,value,assert,that,read,cluster,uuid,equal,to,y9xcw,ljgtroo,oefixl,rwf,q
MetaDataStateFormatTests -> public void testReadClusterState() throws URISyntaxException, IOException;1539723533;Ensure we can read a pre-generated cluster state.;public void testReadClusterState() throws URISyntaxException, IOException {_        final MetaDataStateFormat<MetaData> format = new MetaDataStateFormat<MetaData>("global-") {__            @Override_            public void toXContent(XContentBuilder builder, MetaData state) throws IOException {_                fail("this test doesn't write")__            }__            @Override_            public MetaData fromXContent(XContentParser parser) throws IOException {_                return MetaData.Builder.fromXContent(parser)__            }_        }__        Path tmp = createTempDir()__        final InputStream resource = this.getClass().getResourceAsStream("global-3.st")__        assertThat(resource, notNullValue())__        Path dst = tmp.resolve("global-3.st")__        Files.copy(resource, dst)__        MetaData read = format.read(xContentRegistry(), dst)__        assertThat(read, notNullValue())__        assertThat(read.clusterUUID(), equalTo("y9XcwLJGTROoOEfixlRwfQ"))__        _    };ensure,we,can,read,a,pre,generated,cluster,state;public,void,test,read,cluster,state,throws,urisyntax,exception,ioexception,final,meta,data,state,format,meta,data,format,new,meta,data,state,format,meta,data,global,override,public,void,to,xcontent,xcontent,builder,builder,meta,data,state,throws,ioexception,fail,this,test,doesn,t,write,override,public,meta,data,from,xcontent,xcontent,parser,parser,throws,ioexception,return,meta,data,builder,from,xcontent,parser,path,tmp,create,temp,dir,final,input,stream,resource,this,get,class,get,resource,as,stream,global,3,st,assert,that,resource,not,null,value,path,dst,tmp,resolve,global,3,st,files,copy,resource,dst,meta,data,read,format,read,x,content,registry,dst,assert,that,read,not,null,value,assert,that,read,cluster,uuid,equal,to,y9xcw,ljgtroo,oefixl,rwf,q
MetaDataStateFormatTests -> public void testReadClusterState() throws URISyntaxException, IOException;1540847035;Ensure we can read a pre-generated cluster state.;public void testReadClusterState() throws URISyntaxException, IOException {_        final MetaDataStateFormat<MetaData> format = new MetaDataStateFormat<MetaData>("global-") {__            @Override_            public void toXContent(XContentBuilder builder, MetaData state) throws IOException {_                fail("this test doesn't write")__            }__            @Override_            public MetaData fromXContent(XContentParser parser) throws IOException {_                return MetaData.Builder.fromXContent(parser)__            }_        }__        Path tmp = createTempDir()__        final InputStream resource = this.getClass().getResourceAsStream("global-3.st")__        assertThat(resource, notNullValue())__        Path dst = tmp.resolve("global-3.st")__        Files.copy(resource, dst)__        MetaData read = format.read(xContentRegistry(), dst)__        assertThat(read, notNullValue())__        assertThat(read.clusterUUID(), equalTo("y9XcwLJGTROoOEfixlRwfQ"))__        _    };ensure,we,can,read,a,pre,generated,cluster,state;public,void,test,read,cluster,state,throws,urisyntax,exception,ioexception,final,meta,data,state,format,meta,data,format,new,meta,data,state,format,meta,data,global,override,public,void,to,xcontent,xcontent,builder,builder,meta,data,state,throws,ioexception,fail,this,test,doesn,t,write,override,public,meta,data,from,xcontent,xcontent,parser,parser,throws,ioexception,return,meta,data,builder,from,xcontent,parser,path,tmp,create,temp,dir,final,input,stream,resource,this,get,class,get,resource,as,stream,global,3,st,assert,that,resource,not,null,value,path,dst,tmp,resolve,global,3,st,files,copy,resource,dst,meta,data,read,format,read,x,content,registry,dst,assert,that,read,not,null,value,assert,that,read,cluster,uuid,equal,to,y9xcw,ljgtroo,oefixl,rwf,q
