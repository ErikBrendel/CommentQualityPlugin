commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Before public void setUpAction() {     new RestGetAction(Settings.EMPTY, controller()). }
false;public;0;10;;public void testTypeInPathWithGet() {     FakeRestRequest.Builder deprecatedRequest = new FakeRestRequest.Builder(xContentRegistry()).withPath("/some_index/some_type/some_id").     dispatchRequest(deprecatedRequest.withMethod(Method.GET).build()).     assertWarnings(RestGetAction.TYPES_DEPRECATION_MESSAGE).     FakeRestRequest.Builder validRequest = new FakeRestRequest.Builder(xContentRegistry()).withPath("/some_index/_doc/some_id").     dispatchRequest(validRequest.withMethod(Method.GET).build()). }
false;public;0;10;;public void testTypeInPathWithHead() {     FakeRestRequest.Builder deprecatedRequest = new FakeRestRequest.Builder(xContentRegistry()).withPath("/some_index/some_type/some_id").     dispatchRequest(deprecatedRequest.withMethod(Method.HEAD).build()).     assertWarnings(RestGetAction.TYPES_DEPRECATION_MESSAGE).     FakeRestRequest.Builder validRequest = new FakeRestRequest.Builder(xContentRegistry()).withPath("/some_index/_doc/some_id").     dispatchRequest(validRequest.withMethod(Method.HEAD).build()). }
