commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;7;;@Override protected CreateIndexResponse createTestInstance() {     boolean acknowledged = randomBoolean().     boolean shardsAcknowledged = acknowledged && randomBoolean().     String index = randomAlphaOfLength(5).     return new CreateIndexResponse(acknowledged, shardsAcknowledged, index). }
false;protected;0;4;;@Override protected CreateIndexResponse createBlankInstance() {     return new CreateIndexResponse(). }
false;protected;1;17;;@Override protected CreateIndexResponse mutateInstance(CreateIndexResponse response) {     if (randomBoolean()) {         if (randomBoolean()) {             boolean acknowledged = response.isAcknowledged() == false.             boolean shardsAcknowledged = acknowledged && response.isShardsAcknowledged().             return new CreateIndexResponse(acknowledged, shardsAcknowledged, response.index()).         } else {             boolean shardsAcknowledged = response.isShardsAcknowledged() == false.             boolean acknowledged = shardsAcknowledged || response.isAcknowledged().             return new CreateIndexResponse(acknowledged, shardsAcknowledged, response.index()).         }     } else {         return new CreateIndexResponse(response.isAcknowledged(), response.isShardsAcknowledged(), response.index() + randomAlphaOfLengthBetween(2, 5)).     } }
false;protected;1;4;;@Override protected CreateIndexResponse doParseInstance(XContentParser parser) {     return CreateIndexResponse.fromXContent(parser). }
false;public;0;5;;public void testToXContent() {     CreateIndexResponse response = new CreateIndexResponse(true, false, "index_name").     String output = Strings.toString(response).     assertEquals("{\"acknowledged\":true,\"shards_acknowledged\":false,\"index\":\"index_name\"}", output). }
false;public;0;11;;public void testToAndFromXContentIndexNull() throws IOException {     CreateIndexResponse response = new CreateIndexResponse(true, false, null).     String output = Strings.toString(response).     assertEquals("{\"acknowledged\":true,\"shards_acknowledged\":false,\"index\":null}", output).     try (XContentParser parser = createParser(JsonXContent.jsonXContent, output)) {         CreateIndexResponse parsedResponse = CreateIndexResponse.fromXContent(parser).         assertNull(parsedResponse.index()).         assertTrue(parsedResponse.isAcknowledged()).         assertFalse(parsedResponse.isShardsAcknowledged()).     } }
