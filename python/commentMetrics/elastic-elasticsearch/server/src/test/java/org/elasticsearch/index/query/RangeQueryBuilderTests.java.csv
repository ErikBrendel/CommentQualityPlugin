# id;timestamp;commentText;codeText;commentWords;codeWords
RangeQueryBuilderTests -> public void testToQueryUnmappedWithTimezone() throws QueryShardException;1524684173;Specifying a timezone together with an unmapped field should throw an exception.;public void testToQueryUnmappedWithTimezone() throws QueryShardException {_        RangeQueryBuilder query = new RangeQueryBuilder("bogus_field")__        query.from(1).to(10).timeZone("UTC")__        QueryShardException e = expectThrows(QueryShardException.class, () -> query.toQuery(createShardContext()))__        assertThat(e.getMessage(), containsString("[range] time_zone can not be applied"))__    };specifying,a,timezone,together,with,an,unmapped,field,should,throw,an,exception;public,void,test,to,query,unmapped,with,timezone,throws,query,shard,exception,range,query,builder,query,new,range,query,builder,query,from,1,to,10,time,zone,utc,query,shard,exception,e,expect,throws,query,shard,exception,class,query,to,query,create,shard,context,assert,that,e,get,message,contains,string,range,can,not,be,applied
RangeQueryBuilderTests -> public void testToQueryUnmappedWithTimezone() throws QueryShardException;1531937412;Specifying a timezone together with an unmapped field should throw an exception.;public void testToQueryUnmappedWithTimezone() throws QueryShardException {_        RangeQueryBuilder query = new RangeQueryBuilder("bogus_field")__        query.from(1).to(10).timeZone("UTC")__        QueryShardException e = expectThrows(QueryShardException.class, () -> query.toQuery(createShardContext()))__        assertThat(e.getMessage(), containsString("[range] time_zone can not be applied"))__    };specifying,a,timezone,together,with,an,unmapped,field,should,throw,an,exception;public,void,test,to,query,unmapped,with,timezone,throws,query,shard,exception,range,query,builder,query,new,range,query,builder,query,from,1,to,10,time,zone,utc,query,shard,exception,e,expect,throws,query,shard,exception,class,query,to,query,create,shard,context,assert,that,e,get,message,contains,string,range,can,not,be,applied
RangeQueryBuilderTests -> public void testToQueryUnmappedWithTimezone() throws QueryShardException;1532685069;Specifying a timezone together with an unmapped field should throw an exception.;public void testToQueryUnmappedWithTimezone() throws QueryShardException {_        RangeQueryBuilder query = new RangeQueryBuilder("bogus_field")__        query.from(1).to(10).timeZone("UTC")__        QueryShardException e = expectThrows(QueryShardException.class, () -> query.toQuery(createShardContext()))__        assertThat(e.getMessage(), containsString("[range] time_zone can not be applied"))__    };specifying,a,timezone,together,with,an,unmapped,field,should,throw,an,exception;public,void,test,to,query,unmapped,with,timezone,throws,query,shard,exception,range,query,builder,query,new,range,query,builder,query,from,1,to,10,time,zone,utc,query,shard,exception,e,expect,throws,query,shard,exception,class,query,to,query,create,shard,context,assert,that,e,get,message,contains,string,range,can,not,be,applied
RangeQueryBuilderTests -> public void testToQueryUnmappedWithTimezone() throws QueryShardException;1541008027;Specifying a timezone together with an unmapped field should throw an exception.;public void testToQueryUnmappedWithTimezone() throws QueryShardException {_        RangeQueryBuilder query = new RangeQueryBuilder("bogus_field")__        query.from(1).to(10).timeZone("UTC")__        QueryShardException e = expectThrows(QueryShardException.class, () -> query.toQuery(createShardContext()))__        assertThat(e.getMessage(), containsString("[range] time_zone can not be applied"))__    };specifying,a,timezone,together,with,an,unmapped,field,should,throw,an,exception;public,void,test,to,query,unmapped,with,timezone,throws,query,shard,exception,range,query,builder,query,new,range,query,builder,query,from,1,to,10,time,zone,utc,query,shard,exception,e,expect,throws,query,shard,exception,class,query,to,query,create,shard,context,assert,that,e,get,message,contains,string,range,can,not,be,applied
RangeQueryBuilderTests -> public void testToQueryUnmappedWithTimezone() throws QueryShardException;1541619687;Specifying a timezone together with an unmapped field should throw an exception.;public void testToQueryUnmappedWithTimezone() throws QueryShardException {_        RangeQueryBuilder query = new RangeQueryBuilder("bogus_field")__        query.from(1).to(10).timeZone("UTC")__        QueryShardException e = expectThrows(QueryShardException.class, () -> query.toQuery(createShardContext()))__        assertThat(e.getMessage(), containsString("[range] time_zone can not be applied"))__    };specifying,a,timezone,together,with,an,unmapped,field,should,throw,an,exception;public,void,test,to,query,unmapped,with,timezone,throws,query,shard,exception,range,query,builder,query,new,range,query,builder,query,from,1,to,10,time,zone,utc,query,shard,exception,e,expect,throws,query,shard,exception,class,query,to,query,create,shard,context,assert,that,e,get,message,contains,string,range,can,not,be,applied
RangeQueryBuilderTests -> public void testToQueryUnmappedWithTimezone() throws QueryShardException;1545253165;Specifying a timezone together with an unmapped field should throw an exception.;public void testToQueryUnmappedWithTimezone() throws QueryShardException {_        RangeQueryBuilder query = new RangeQueryBuilder("bogus_field")__        query.from(1).to(10).timeZone("UTC")__        QueryShardException e = expectThrows(QueryShardException.class, () -> query.toQuery(createShardContext()))__        assertThat(e.getMessage(), containsString("[range] time_zone can not be applied"))__    };specifying,a,timezone,together,with,an,unmapped,field,should,throw,an,exception;public,void,test,to,query,unmapped,with,timezone,throws,query,shard,exception,range,query,builder,query,new,range,query,builder,query,from,1,to,10,time,zone,utc,query,shard,exception,e,expect,throws,query,shard,exception,class,query,to,query,create,shard,context,assert,that,e,get,message,contains,string,range,can,not,be,applied
RangeQueryBuilderTests -> public void testToQueryUnmappedWithTimezone() throws QueryShardException;1548236405;Specifying a timezone together with an unmapped field should throw an exception.;public void testToQueryUnmappedWithTimezone() throws QueryShardException {_        RangeQueryBuilder query = new RangeQueryBuilder("bogus_field")__        query.from(1).to(10).timeZone("UTC")__        QueryShardException e = expectThrows(QueryShardException.class, () -> query.toQuery(createShardContext()))__        assertThat(e.getMessage(), containsString("[range] time_zone can not be applied"))__    };specifying,a,timezone,together,with,an,unmapped,field,should,throw,an,exception;public,void,test,to,query,unmapped,with,timezone,throws,query,shard,exception,range,query,builder,query,new,range,query,builder,query,from,1,to,10,time,zone,utc,query,shard,exception,e,expect,throws,query,shard,exception,class,query,to,query,create,shard,context,assert,that,e,get,message,contains,string,range,can,not,be,applied
RangeQueryBuilderTests -> public void testToQueryUnmappedWithTimezone() throws QueryShardException;1549276276;Specifying a timezone together with an unmapped field should throw an exception.;public void testToQueryUnmappedWithTimezone() throws QueryShardException {_        RangeQueryBuilder query = new RangeQueryBuilder("bogus_field")__        query.from(1).to(10).timeZone("UTC")__        QueryShardException e = expectThrows(QueryShardException.class, () -> query.toQuery(createShardContext()))__        assertThat(e.getMessage(), containsString("[range] time_zone can not be applied"))__    };specifying,a,timezone,together,with,an,unmapped,field,should,throw,an,exception;public,void,test,to,query,unmapped,with,timezone,throws,query,shard,exception,range,query,builder,query,new,range,query,builder,query,from,1,to,10,time,zone,utc,query,shard,exception,e,expect,throws,query,shard,exception,class,query,to,query,create,shard,context,assert,that,e,get,message,contains,string,range,can,not,be,applied
