commented;modifiers;parameterAmount;loc;comment;code
false;public;0;25;;public void testVectorHighlighter() throws Exception {     Directory dir = new RAMDirectory().     IndexWriter indexWriter = new IndexWriter(dir, new IndexWriterConfig(Lucene.STANDARD_ANALYZER)).     Document document = new Document().     document.add(new TextField("_id", "1", Field.Store.YES)).     FieldType vectorsType = new FieldType(TextField.TYPE_STORED).     vectorsType.setStoreTermVectors(true).     vectorsType.setStoreTermVectorPositions(true).     vectorsType.setStoreTermVectorOffsets(true).     document.add(new Field("content", "the big bad dog", vectorsType)).     indexWriter.addDocument(document).     IndexReader reader = DirectoryReader.open(indexWriter).     IndexSearcher searcher = new IndexSearcher(reader).     TopDocs topDocs = searcher.search(new TermQuery(new Term("_id", "1")), 1).     assertThat(topDocs.totalHits.value, equalTo(1L)).     FastVectorHighlighter highlighter = new FastVectorHighlighter().     String fragment = highlighter.getBestFragment(highlighter.getFieldQuery(new TermQuery(new Term("content", "bad"))), reader, topDocs.scoreDocs[0].doc, "content", 30).     assertThat(fragment, notNullValue()).     assertThat(fragment, equalTo("the big <b>bad</b> dog")). }
false;public;0;40;;public void testVectorHighlighterPrefixQuery() throws Exception {     Directory dir = new RAMDirectory().     IndexWriter indexWriter = new IndexWriter(dir, new IndexWriterConfig(Lucene.STANDARD_ANALYZER)).     Document document = new Document().     document.add(new TextField("_id", "1", Field.Store.YES)).     FieldType vectorsType = new FieldType(TextField.TYPE_STORED).     vectorsType.setStoreTermVectors(true).     vectorsType.setStoreTermVectorPositions(true).     vectorsType.setStoreTermVectorOffsets(true).     document.add(new Field("content", "the big bad dog", vectorsType)).     indexWriter.addDocument(document).     IndexReader reader = DirectoryReader.open(indexWriter).     IndexSearcher searcher = new IndexSearcher(reader).     TopDocs topDocs = searcher.search(new TermQuery(new Term("_id", "1")), 1).     assertThat(topDocs.totalHits.value, equalTo(1L)).     FastVectorHighlighter highlighter = new FastVectorHighlighter().     PrefixQuery prefixQuery = new PrefixQuery(new Term("content", "ba")).     assertThat(prefixQuery.getRewriteMethod().getClass().getName(), equalTo(PrefixQuery.CONSTANT_SCORE_REWRITE.getClass().getName())).     String fragment = highlighter.getBestFragment(highlighter.getFieldQuery(prefixQuery), reader, topDocs.scoreDocs[0].doc, "content", 30).     assertThat(fragment, nullValue()).     prefixQuery.setRewriteMethod(PrefixQuery.SCORING_BOOLEAN_REWRITE).     Query rewriteQuery = prefixQuery.rewrite(reader).     fragment = highlighter.getBestFragment(highlighter.getFieldQuery(rewriteQuery), reader, topDocs.scoreDocs[0].doc, "content", 30).     assertThat(fragment, notNullValue()).     // now check with the custom field query     prefixQuery = new PrefixQuery(new Term("content", "ba")).     assertThat(prefixQuery.getRewriteMethod().getClass().getName(), equalTo(PrefixQuery.CONSTANT_SCORE_REWRITE.getClass().getName())).     fragment = highlighter.getBestFragment(new CustomFieldQuery(prefixQuery, reader, highlighter), reader, topDocs.scoreDocs[0].doc, "content", 30).     assertThat(fragment, notNullValue()). }
false;public;0;24;;public void testVectorHighlighterNoStore() throws Exception {     Directory dir = new RAMDirectory().     IndexWriter indexWriter = new IndexWriter(dir, new IndexWriterConfig(Lucene.STANDARD_ANALYZER)).     Document document = new Document().     document.add(new TextField("_id", "1", Field.Store.YES)).     FieldType vectorsType = new FieldType(TextField.TYPE_NOT_STORED).     vectorsType.setStoreTermVectors(true).     vectorsType.setStoreTermVectorPositions(true).     vectorsType.setStoreTermVectorOffsets(true).     document.add(new Field("content", "the big bad dog", vectorsType)).     indexWriter.addDocument(document).     IndexReader reader = DirectoryReader.open(indexWriter).     IndexSearcher searcher = new IndexSearcher(reader).     TopDocs topDocs = searcher.search(new TermQuery(new Term("_id", "1")), 1).     assertThat(topDocs.totalHits.value, equalTo(1L)).     FastVectorHighlighter highlighter = new FastVectorHighlighter().     String fragment = highlighter.getBestFragment(highlighter.getFieldQuery(new TermQuery(new Term("content", "bad"))), reader, topDocs.scoreDocs[0].doc, "content", 30).     assertThat(fragment, nullValue()). }
false;public;0;20;;public void testVectorHighlighterNoTermVector() throws Exception {     Directory dir = new RAMDirectory().     IndexWriter indexWriter = new IndexWriter(dir, new IndexWriterConfig(Lucene.STANDARD_ANALYZER)).     Document document = new Document().     document.add(new TextField("_id", "1", Field.Store.YES)).     document.add(new TextField("content", "the big bad dog", Field.Store.YES)).     indexWriter.addDocument(document).     IndexReader reader = DirectoryReader.open(indexWriter).     IndexSearcher searcher = new IndexSearcher(reader).     TopDocs topDocs = searcher.search(new TermQuery(new Term("_id", "1")), 1).     assertThat(topDocs.totalHits.value, equalTo(1L)).     FastVectorHighlighter highlighter = new FastVectorHighlighter().     String fragment = highlighter.getBestFragment(highlighter.getFieldQuery(new TermQuery(new Term("content", "bad"))), reader, topDocs.scoreDocs[0].doc, "content", 30).     assertThat(fragment, nullValue()). }
