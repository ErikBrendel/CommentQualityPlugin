commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected int numberOfShards() {     return 2. }
false;protected;0;4;;@Override protected int numberOfReplicas() {     return 0. }
false;public;0;58;;public void testScanScrollWithShardExceptions() throws Exception {     internalCluster().startNode().     internalCluster().startNode().     assertAcked(prepareCreate("test").setSettings(Settings.builder().put(indexSettings()).put(ShardsLimitAllocationDecider.INDEX_TOTAL_SHARDS_PER_NODE_SETTING.getKey(), 1))).     List<IndexRequestBuilder> writes = new ArrayList<>().     for (int i = 0. i < 100. i++) {         writes.add(client().prepareIndex("test", "type1").setSource(jsonBuilder().startObject().field("field", i).endObject())).     }     indexRandom(false, writes).     refresh().     SearchResponse searchResponse = client().prepareSearch().setQuery(matchAllQuery()).setSize(10).setScroll(TimeValue.timeValueMinutes(1)).get().     assertAllSuccessful(searchResponse).     long numHits = 0.     do {         numHits += searchResponse.getHits().getHits().length.         searchResponse = client().prepareSearchScroll(searchResponse.getScrollId()).setScroll(TimeValue.timeValueMinutes(1)).get().         assertAllSuccessful(searchResponse).     } while (searchResponse.getHits().getHits().length > 0).     assertThat(numHits, equalTo(100L)).     clearScroll("_all").     internalCluster().stopRandomNonMasterNode().     searchResponse = client().prepareSearch().setQuery(matchAllQuery()).setSize(10).setScroll(TimeValue.timeValueMinutes(1)).get().     assertThat(searchResponse.getSuccessfulShards(), lessThan(searchResponse.getTotalShards())).     numHits = 0.     int numberOfSuccessfulShards = searchResponse.getSuccessfulShards().     do {         numHits += searchResponse.getHits().getHits().length.         searchResponse = client().prepareSearchScroll(searchResponse.getScrollId()).setScroll(TimeValue.timeValueMinutes(1)).get().         assertThat(searchResponse.getSuccessfulShards(), equalTo(numberOfSuccessfulShards)).     } while (searchResponse.getHits().getHits().length > 0).     assertThat(numHits, greaterThan(0L)).     clearScroll(searchResponse.getScrollId()). }
