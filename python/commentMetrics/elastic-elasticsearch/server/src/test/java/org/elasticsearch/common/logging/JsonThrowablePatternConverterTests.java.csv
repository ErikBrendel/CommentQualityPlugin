commented;modifiers;parameterAmount;loc;comment;code
false;public;0;11;;public void testNoStacktrace() throws IOException {     LogEvent event = Log4jLogEvent.newBuilder().build().     String result = format(event).     JsonLogLine jsonLogLine = JsonLogsStream.from(new BufferedReader(new StringReader(result))).findFirst().orElseThrow(() -> new AssertionError("no logs parsed")).     assertThat(jsonLogLine.stacktrace(), Matchers.nullValue()). }
false;public;0;32;;public void testStacktraceWithJson() throws IOException {     String json = "{" + LINE_SEPARATOR + "  \"terms\" : {" + LINE_SEPARATOR + "    \"user\" : [" + LINE_SEPARATOR + "      \"u1\"," + LINE_SEPARATOR + "      \"u2\"," + LINE_SEPARATOR + "      \"u3\"" + LINE_SEPARATOR + "    ]," + LINE_SEPARATOR + "    \"boost\" : 1.0" + LINE_SEPARATOR + "  }" + LINE_SEPARATOR + "}".     Exception thrown = new Exception(json).     LogEvent event = Log4jLogEvent.newBuilder().setMessage(new SimpleMessage("message")).setThrown(thrown).build().     String result = format(event).     // confirms exception is correctly parsed     JsonLogLine jsonLogLine = JsonLogsStream.from(new BufferedReader(new StringReader(result))).findFirst().orElseThrow(() -> new AssertionError("no logs parsed")).     int jsonLength = json.split(LINE_SEPARATOR).length.     int stacktraceLength = thrown.getStackTrace().length.     assertThat("stacktrace should formatted in multiple lines. JsonLogLine= " + jsonLogLine + " result= " + result, jsonLogLine.stacktrace().size(), equalTo(jsonLength + stacktraceLength)). }
false;private;1;10;;private String format(LogEvent event) {     StringBuilder builder = new StringBuilder().     converter.format(event, builder).     String jsonStacktraceElement = builder.toString().     return "{\"type\": \"console\", \"timestamp\": \"2019-01-03T16:30:53,058+0100\", \"level\": \"DEBUG\", " + "\"component\": \"o.e.a.s.TransportSearchAction\", \"cluster.name\": \"clustername\", \"node.name\": \"node-0\", " + "\"cluster.uuid\": \"OG5MkvOrR9azuClJhWvy6Q\", \"node.id\": \"VTShUqmcQG6SzeKY5nn7qA\",  \"message\": \"msg msg\" " + jsonStacktraceElement + "}". }
