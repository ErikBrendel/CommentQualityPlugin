# id;timestamp;commentText;codeText;commentWords;codeWords
SearchSourceBuilderTests -> public void testParseRescore() throws IOException;1524684173;test that we can parse the `rescore` element either as single object or as array;public void testParseRescore() throws IOException {_        {_            String restContent = "{\n" +_                "    \"query\" : {\n" +_                "        \"match\": { \"content\": { \"query\": \"foo bar\" }}\n" +_                "     },\n" +_                "    \"rescore\": {" +_                "        \"window_size\": 50,\n" +_                "        \"query\": {\n" +_                "            \"rescore_query\" : {\n" +_                "                \"match\": { \"content\": { \"query\": \"baz\" } }\n" +_                "            }\n" +_                "        }\n" +_                "    }\n" +_                "}\n"__            try (XContentParser parser = createParser(JsonXContent.jsonXContent, restContent)) {_                SearchSourceBuilder searchSourceBuilder = SearchSourceBuilder.fromXContent(parser)__                searchSourceBuilder = rewrite(searchSourceBuilder)__                assertEquals(1, searchSourceBuilder.rescores().size())__                assertEquals(new QueryRescorerBuilder(QueryBuilders.matchQuery("content", "baz")).windowSize(50),_                        searchSourceBuilder.rescores().get(0))__            }_        }__        {_            String restContent = "{\n" +_                "    \"query\" : {\n" +_                "        \"match\": { \"content\": { \"query\": \"foo bar\" }}\n" +_                "     },\n" +_                "    \"rescore\": [ {" +_                "        \"window_size\": 50,\n" +_                "        \"query\": {\n" +_                "            \"rescore_query\" : {\n" +_                "                \"match\": { \"content\": { \"query\": \"baz\" } }\n" +_                "            }\n" +_                "        }\n" +_                "    } ]\n" +_                "}\n"__            try (XContentParser parser = createParser(JsonXContent.jsonXContent, restContent)) {_                SearchSourceBuilder searchSourceBuilder = SearchSourceBuilder.fromXContent(parser)__                searchSourceBuilder = rewrite(searchSourceBuilder)__                assertEquals(1, searchSourceBuilder.rescores().size())__                assertEquals(new QueryRescorerBuilder(QueryBuilders.matchQuery("content", "baz")).windowSize(50),_                        searchSourceBuilder.rescores().get(0))__            }_        }_    };test,that,we,can,parse,the,rescore,element,either,as,single,object,or,as,array;public,void,test,parse,rescore,throws,ioexception,string,rest,content,n,query,n,match,content,query,foo,bar,n,n,rescore,50,n,query,n,n,match,content,query,baz,n,n,n,n,n,try,xcontent,parser,parser,create,parser,json,xcontent,json,xcontent,rest,content,search,source,builder,search,source,builder,search,source,builder,from,xcontent,parser,search,source,builder,rewrite,search,source,builder,assert,equals,1,search,source,builder,rescores,size,assert,equals,new,query,rescorer,builder,query,builders,match,query,content,baz,window,size,50,search,source,builder,rescores,get,0,string,rest,content,n,query,n,match,content,query,foo,bar,n,n,rescore,50,n,query,n,n,match,content,query,baz,n,n,n,n,n,try,xcontent,parser,parser,create,parser,json,xcontent,json,xcontent,rest,content,search,source,builder,search,source,builder,search,source,builder,from,xcontent,parser,search,source,builder,rewrite,search,source,builder,assert,equals,1,search,source,builder,rescores,size,assert,equals,new,query,rescorer,builder,query,builders,match,query,content,baz,window,size,50,search,source,builder,rescores,get,0
SearchSourceBuilderTests -> public void testParseRescore() throws IOException;1528762805;test that we can parse the `rescore` element either as single object or as array;public void testParseRescore() throws IOException {_        {_            String restContent = "{\n" +_                "    \"query\" : {\n" +_                "        \"match\": { \"content\": { \"query\": \"foo bar\" }}\n" +_                "     },\n" +_                "    \"rescore\": {" +_                "        \"window_size\": 50,\n" +_                "        \"query\": {\n" +_                "            \"rescore_query\" : {\n" +_                "                \"match\": { \"content\": { \"query\": \"baz\" } }\n" +_                "            }\n" +_                "        }\n" +_                "    }\n" +_                "}\n"__            try (XContentParser parser = createParser(JsonXContent.jsonXContent, restContent)) {_                SearchSourceBuilder searchSourceBuilder = SearchSourceBuilder.fromXContent(parser)__                searchSourceBuilder = rewrite(searchSourceBuilder)__                assertEquals(1, searchSourceBuilder.rescores().size())__                assertEquals(new QueryRescorerBuilder(QueryBuilders.matchQuery("content", "baz")).windowSize(50),_                        searchSourceBuilder.rescores().get(0))__            }_        }__        {_            String restContent = "{\n" +_                "    \"query\" : {\n" +_                "        \"match\": { \"content\": { \"query\": \"foo bar\" }}\n" +_                "     },\n" +_                "    \"rescore\": [ {" +_                "        \"window_size\": 50,\n" +_                "        \"query\": {\n" +_                "            \"rescore_query\" : {\n" +_                "                \"match\": { \"content\": { \"query\": \"baz\" } }\n" +_                "            }\n" +_                "        }\n" +_                "    } ]\n" +_                "}\n"__            try (XContentParser parser = createParser(JsonXContent.jsonXContent, restContent)) {_                SearchSourceBuilder searchSourceBuilder = SearchSourceBuilder.fromXContent(parser)__                searchSourceBuilder = rewrite(searchSourceBuilder)__                assertEquals(1, searchSourceBuilder.rescores().size())__                assertEquals(new QueryRescorerBuilder(QueryBuilders.matchQuery("content", "baz")).windowSize(50),_                        searchSourceBuilder.rescores().get(0))__            }_        }_    };test,that,we,can,parse,the,rescore,element,either,as,single,object,or,as,array;public,void,test,parse,rescore,throws,ioexception,string,rest,content,n,query,n,match,content,query,foo,bar,n,n,rescore,50,n,query,n,n,match,content,query,baz,n,n,n,n,n,try,xcontent,parser,parser,create,parser,json,xcontent,json,xcontent,rest,content,search,source,builder,search,source,builder,search,source,builder,from,xcontent,parser,search,source,builder,rewrite,search,source,builder,assert,equals,1,search,source,builder,rescores,size,assert,equals,new,query,rescorer,builder,query,builders,match,query,content,baz,window,size,50,search,source,builder,rescores,get,0,string,rest,content,n,query,n,match,content,query,foo,bar,n,n,rescore,50,n,query,n,n,match,content,query,baz,n,n,n,n,n,try,xcontent,parser,parser,create,parser,json,xcontent,json,xcontent,rest,content,search,source,builder,search,source,builder,search,source,builder,from,xcontent,parser,search,source,builder,rewrite,search,source,builder,assert,equals,1,search,source,builder,rescores,size,assert,equals,new,query,rescorer,builder,query,builders,match,query,content,baz,window,size,50,search,source,builder,rescores,get,0
SearchSourceBuilderTests -> public void testParseRescore() throws IOException;1529916084;test that we can parse the `rescore` element either as single object or as array;public void testParseRescore() throws IOException {_        {_            String restContent = "{\n" +_                "    \"query\" : {\n" +_                "        \"match\": { \"content\": { \"query\": \"foo bar\" }}\n" +_                "     },\n" +_                "    \"rescore\": {" +_                "        \"window_size\": 50,\n" +_                "        \"query\": {\n" +_                "            \"rescore_query\" : {\n" +_                "                \"match\": { \"content\": { \"query\": \"baz\" } }\n" +_                "            }\n" +_                "        }\n" +_                "    }\n" +_                "}\n"__            try (XContentParser parser = createParser(JsonXContent.jsonXContent, restContent)) {_                SearchSourceBuilder searchSourceBuilder = SearchSourceBuilder.fromXContent(parser)__                searchSourceBuilder = rewrite(searchSourceBuilder)__                assertEquals(1, searchSourceBuilder.rescores().size())__                assertEquals(new QueryRescorerBuilder(QueryBuilders.matchQuery("content", "baz")).windowSize(50),_                        searchSourceBuilder.rescores().get(0))__            }_        }__        {_            String restContent = "{\n" +_                "    \"query\" : {\n" +_                "        \"match\": { \"content\": { \"query\": \"foo bar\" }}\n" +_                "     },\n" +_                "    \"rescore\": [ {" +_                "        \"window_size\": 50,\n" +_                "        \"query\": {\n" +_                "            \"rescore_query\" : {\n" +_                "                \"match\": { \"content\": { \"query\": \"baz\" } }\n" +_                "            }\n" +_                "        }\n" +_                "    } ]\n" +_                "}\n"__            try (XContentParser parser = createParser(JsonXContent.jsonXContent, restContent)) {_                SearchSourceBuilder searchSourceBuilder = SearchSourceBuilder.fromXContent(parser)__                searchSourceBuilder = rewrite(searchSourceBuilder)__                assertEquals(1, searchSourceBuilder.rescores().size())__                assertEquals(new QueryRescorerBuilder(QueryBuilders.matchQuery("content", "baz")).windowSize(50),_                        searchSourceBuilder.rescores().get(0))__            }_        }_    };test,that,we,can,parse,the,rescore,element,either,as,single,object,or,as,array;public,void,test,parse,rescore,throws,ioexception,string,rest,content,n,query,n,match,content,query,foo,bar,n,n,rescore,50,n,query,n,n,match,content,query,baz,n,n,n,n,n,try,xcontent,parser,parser,create,parser,json,xcontent,json,xcontent,rest,content,search,source,builder,search,source,builder,search,source,builder,from,xcontent,parser,search,source,builder,rewrite,search,source,builder,assert,equals,1,search,source,builder,rescores,size,assert,equals,new,query,rescorer,builder,query,builders,match,query,content,baz,window,size,50,search,source,builder,rescores,get,0,string,rest,content,n,query,n,match,content,query,foo,bar,n,n,rescore,50,n,query,n,n,match,content,query,baz,n,n,n,n,n,try,xcontent,parser,parser,create,parser,json,xcontent,json,xcontent,rest,content,search,source,builder,search,source,builder,search,source,builder,from,xcontent,parser,search,source,builder,rewrite,search,source,builder,assert,equals,1,search,source,builder,rescores,size,assert,equals,new,query,rescorer,builder,query,builders,match,query,content,baz,window,size,50,search,source,builder,rescores,get,0
