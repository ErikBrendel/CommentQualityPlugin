commented;modifiers;parameterAmount;loc;comment;code
false;protected;1;12;;@Override protected Settings nodeSettings(int nodeOrdinal) {     return Settings.builder().put(NodeEnvironment.MAX_LOCAL_STORAGE_NODES_SETTING.getKey(), 2).put(HierarchyCircuitBreakerService.FIELDDATA_CIRCUIT_BREAKER_TYPE_SETTING.getKey(), "noop").put(HierarchyCircuitBreakerService.FIELDDATA_CIRCUIT_BREAKER_LIMIT_SETTING.getKey(), "10b").put(HierarchyCircuitBreakerService.REQUEST_CIRCUIT_BREAKER_TYPE_SETTING.getKey(), "noop").put(HierarchyCircuitBreakerService.REQUEST_CIRCUIT_BREAKER_LIMIT_SETTING.getKey(), "10b").build(). }
false;public;0;16;;public void testNoopRequestBreaker() throws Exception {     assertAcked(prepareCreate("cb-test", 1, Settings.builder().put(SETTING_NUMBER_OF_REPLICAS, between(0, 1)))).     Client client = client().     // index some different terms so we have some field data for loading     int docCount = scaledRandomIntBetween(300, 1000).     List<IndexRequestBuilder> reqs = new ArrayList<>().     for (long id = 0. id < docCount. id++) {         reqs.add(client.prepareIndex("cb-test", "type", Long.toString(id)).setSource("test", id)).     }     indexRandom(true, reqs).     // A cardinality aggregation uses BigArrays and thus the REQUEST breaker     client.prepareSearch("cb-test").setQuery(matchAllQuery()).addAggregation(cardinality("card").field("test")).get(). // no exception because the breaker is a noop }
false;public;0;16;;public void testNoopFielddataBreaker() throws Exception {     assertAcked(prepareCreate("cb-test", 1, Settings.builder().put(SETTING_NUMBER_OF_REPLICAS, between(0, 1)))).     Client client = client().     // index some different terms so we have some field data for loading     int docCount = scaledRandomIntBetween(300, 1000).     List<IndexRequestBuilder> reqs = new ArrayList<>().     for (long id = 0. id < docCount. id++) {         reqs.add(client.prepareIndex("cb-test", "type", Long.toString(id)).setSource("test", id)).     }     indexRandom(true, reqs).     // Sorting using fielddata and thus the FIELDDATA breaker     client.prepareSearch("cb-test").setQuery(matchAllQuery()).addSort("test", SortOrder.DESC).get(). // no exception because the breaker is a noop }
