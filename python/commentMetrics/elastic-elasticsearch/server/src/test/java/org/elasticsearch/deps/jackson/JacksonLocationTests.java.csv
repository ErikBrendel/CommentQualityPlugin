commented;modifiers;parameterAmount;loc;comment;code
false;public;0;41;;public void testLocationExtraction() throws IOException {     // {     // "index" : "test",     // "source" : {     // value : "something"     // }     // }     BytesStreamOutput os = new BytesStreamOutput().     JsonGenerator gen = new JsonFactory().createGenerator(os).     gen.writeStartObject().     gen.writeStringField("index", "test").     gen.writeFieldName("source").     gen.writeStartObject().     gen.writeStringField("value", "something").     gen.writeEndObject().     gen.writeEndObject().     gen.close().     JsonParser parser = new JsonFactory().createParser(os.bytes().streamInput()).     assertThat(parser.nextToken(), equalTo(JsonToken.START_OBJECT)).     // "index"     assertThat(parser.nextToken(), equalTo(JsonToken.FIELD_NAME)).     assertThat(parser.nextToken(), equalTo(JsonToken.VALUE_STRING)).     // "source"     assertThat(parser.nextToken(), equalTo(JsonToken.FIELD_NAME)). // JsonLocation location1 = parser.getCurrentLocation(). // parser.skipChildren(). // JsonLocation location2 = parser.getCurrentLocation(). //  // byte[] sourceData = new byte[(int) (location2.getByteOffset() - location1.getByteOffset())]. // System.arraycopy(data, (int) location1.getByteOffset(), sourceData, 0, sourceData.length). //  // JsonParser sourceParser = new JsonFactory().createJsonParser(new FastByteArrayInputStream(sourceData)). // assertThat(sourceParser.nextToken(), equalTo(JsonToken.START_OBJECT)). // assertThat(sourceParser.nextToken(), equalTo(JsonToken.FIELD_NAME)). // "value" // assertThat(sourceParser.nextToken(), equalTo(JsonToken.VALUE_STRING)). // assertThat(sourceParser.nextToken(), equalTo(JsonToken.END_OBJECT)). }
