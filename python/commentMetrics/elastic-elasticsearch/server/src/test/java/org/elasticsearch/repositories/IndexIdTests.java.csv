commented;modifiers;parameterAmount;loc;comment;code
false;public;0;22;;public void testEqualsAndHashCode() {     // assert equals and hashcode     String name = randomAlphaOfLength(8).     String id = UUIDs.randomBase64UUID().     IndexId indexId1 = new IndexId(name, id).     IndexId indexId2 = new IndexId(name, id).     assertEquals(indexId1, indexId2).     assertEquals(indexId1.hashCode(), indexId2.hashCode()).     // assert equals when using index name for id     id = name.     indexId1 = new IndexId(name, id).     indexId2 = new IndexId(name, id).     assertEquals(indexId1, indexId2).     assertEquals(indexId1.hashCode(), indexId2.hashCode()).     // assert not equals when name or id differ     indexId2 = new IndexId(randomAlphaOfLength(8), id).     assertNotEquals(indexId1, indexId2).     assertNotEquals(indexId1.hashCode(), indexId2.hashCode()).     indexId2 = new IndexId(name, UUIDs.randomBase64UUID()).     assertNotEquals(indexId1, indexId2).     assertNotEquals(indexId1.hashCode(), indexId2.hashCode()). }
false;public;0;6;;public void testSerialization() throws IOException {     IndexId indexId = new IndexId(randomAlphaOfLength(8), UUIDs.randomBase64UUID()).     BytesStreamOutput out = new BytesStreamOutput().     indexId.writeTo(out).     assertEquals(indexId, new IndexId(out.bytes().streamInput())). }
false;public;0;21;;public void testXContent() throws IOException {     IndexId indexId = new IndexId(randomAlphaOfLength(8), UUIDs.randomBase64UUID()).     XContentBuilder builder = JsonXContent.contentBuilder().     indexId.toXContent(builder, ToXContent.EMPTY_PARAMS).     XContentParser parser = createParser(JsonXContent.jsonXContent, BytesReference.bytes(builder)).     assertEquals(XContentParser.Token.START_OBJECT, parser.nextToken()).     String name = null.     String id = null.     while (parser.nextToken() != XContentParser.Token.END_OBJECT) {         final String currentFieldName = parser.currentName().         parser.nextToken().         if (currentFieldName.equals(IndexId.NAME)) {             name = parser.text().         } else if (currentFieldName.equals(IndexId.ID)) {             id = parser.text().         }     }     assertNotNull(name).     assertNotNull(id).     assertEquals(indexId, new IndexId(name, id)). }
