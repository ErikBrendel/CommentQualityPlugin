commented;modifiers;parameterAmount;loc;comment;code
false;public;0;57;;@SuppressWarnings("unchecked") public void testMultiFields() throws Exception {     assertAcked(client().admin().indices().prepareCreate("my-index").addMapping("my-type", createTypeSource())).     GetMappingsResponse getMappingsResponse = client().admin().indices().prepareGetMappings("my-index").get().     MappingMetaData mappingMetaData = getMappingsResponse.mappings().get("my-index").get("my-type").     assertThat(mappingMetaData, not(nullValue())).     Map<String, Object> mappingSource = mappingMetaData.sourceAsMap().     Map<String, Object> titleFields = ((Map<String, Object>) XContentMapValues.extractValue("properties.title.fields", mappingSource)).     assertThat(titleFields.size(), equalTo(1)).     assertThat(titleFields.get("not_analyzed"), notNullValue()).     assertThat(((Map<String, Object>) titleFields.get("not_analyzed")).get("type").toString(), equalTo("keyword")).     client().prepareIndex("my-index", "my-type", "1").setSource("title", "Multi fields").setRefreshPolicy(IMMEDIATE).get().     SearchResponse searchResponse = client().prepareSearch("my-index").setQuery(matchQuery("title", "multi")).get().     assertThat(searchResponse.getHits().getTotalHits().value, equalTo(1L)).     searchResponse = client().prepareSearch("my-index").setQuery(matchQuery("title.not_analyzed", "Multi fields")).get().     assertThat(searchResponse.getHits().getTotalHits().value, equalTo(1L)).     assertAcked(client().admin().indices().preparePutMapping("my-index").setType("my-type").setSource(createPutMappingSource())).     getMappingsResponse = client().admin().indices().prepareGetMappings("my-index").get().     mappingMetaData = getMappingsResponse.mappings().get("my-index").get("my-type").     assertThat(mappingMetaData, not(nullValue())).     mappingSource = mappingMetaData.sourceAsMap().     assertThat(((Map<String, Object>) XContentMapValues.extractValue("properties.title", mappingSource)).size(), equalTo(2)).     titleFields = ((Map<String, Object>) XContentMapValues.extractValue("properties.title.fields", mappingSource)).     assertThat(titleFields.size(), equalTo(2)).     assertThat(titleFields.get("not_analyzed"), notNullValue()).     assertThat(((Map<String, Object>) titleFields.get("not_analyzed")).get("type").toString(), equalTo("keyword")).     assertThat(titleFields.get("uncased"), notNullValue()).     assertThat(((Map<String, Object>) titleFields.get("uncased")).get("analyzer").toString(), equalTo("whitespace")).     client().prepareIndex("my-index", "my-type", "1").setSource("title", "Multi fields").setRefreshPolicy(IMMEDIATE).get().     searchResponse = client().prepareSearch("my-index").setQuery(matchQuery("title.uncased", "Multi")).get().     assertThat(searchResponse.getHits().getTotalHits().value, equalTo(1L)). }
false;public;0;30;;@SuppressWarnings("unchecked") public void testGeoPointMultiField() throws Exception {     assertAcked(client().admin().indices().prepareCreate("my-index").addMapping("my-type", createMappingSource("geo_point"))).     GetMappingsResponse getMappingsResponse = client().admin().indices().prepareGetMappings("my-index").get().     MappingMetaData mappingMetaData = getMappingsResponse.mappings().get("my-index").get("my-type").     assertThat(mappingMetaData, not(nullValue())).     Map<String, Object> mappingSource = mappingMetaData.sourceAsMap().     Map<String, Object> aField = ((Map<String, Object>) XContentMapValues.extractValue("properties.a", mappingSource)).     logger.info("Keys: {}", aField.keySet()).     assertThat(aField.size(), equalTo(2)).     assertThat(aField.get("type").toString(), equalTo("geo_point")).     assertThat(aField.get("fields"), notNullValue()).     Map<String, Object> bField = ((Map<String, Object>) XContentMapValues.extractValue("properties.a.fields.b", mappingSource)).     assertThat(bField.size(), equalTo(1)).     assertThat(bField.get("type").toString(), equalTo("keyword")).     GeoPoint point = new GeoPoint(51, 19).     client().prepareIndex("my-index", "my-type", "1").setSource("a", point.toString()).setRefreshPolicy(IMMEDIATE).get().     SearchResponse countResponse = client().prepareSearch("my-index").setSize(0).setQuery(constantScoreQuery(geoDistanceQuery("a").point(51, 19).distance(50, DistanceUnit.KILOMETERS))).get().     assertThat(countResponse.getHits().getTotalHits().value, equalTo(1L)).     countResponse = client().prepareSearch("my-index").setSize(0).setQuery(matchQuery("a.b", point.geohash())).get().     assertThat(countResponse.getHits().getTotalHits().value, equalTo(1L)). }
false;public;0;24;;@SuppressWarnings("unchecked") public void testCompletionMultiField() throws Exception {     assertAcked(client().admin().indices().prepareCreate("my-index").addMapping("my-type", createMappingSource("completion"))).     GetMappingsResponse getMappingsResponse = client().admin().indices().prepareGetMappings("my-index").get().     MappingMetaData mappingMetaData = getMappingsResponse.mappings().get("my-index").get("my-type").     assertThat(mappingMetaData, not(nullValue())).     Map<String, Object> mappingSource = mappingMetaData.sourceAsMap().     Map<String, Object> aField = ((Map<String, Object>) XContentMapValues.extractValue("properties.a", mappingSource)).     assertThat(aField.size(), equalTo(6)).     assertThat(aField.get("type").toString(), equalTo("completion")).     assertThat(aField.get("fields"), notNullValue()).     Map<String, Object> bField = ((Map<String, Object>) XContentMapValues.extractValue("properties.a.fields.b", mappingSource)).     assertThat(bField.size(), equalTo(1)).     assertThat(bField.get("type").toString(), equalTo("keyword")).     client().prepareIndex("my-index", "my-type", "1").setSource("a", "complete me").setRefreshPolicy(IMMEDIATE).get().     SearchResponse countResponse = client().prepareSearch("my-index").setSize(0).setQuery(matchQuery("a.b", "complete me")).get().     assertThat(countResponse.getHits().getTotalHits().value, equalTo(1L)). }
false;public;0;24;;@SuppressWarnings("unchecked") public void testIpMultiField() throws Exception {     assertAcked(client().admin().indices().prepareCreate("my-index").addMapping("my-type", createMappingSource("ip"))).     GetMappingsResponse getMappingsResponse = client().admin().indices().prepareGetMappings("my-index").get().     MappingMetaData mappingMetaData = getMappingsResponse.mappings().get("my-index").get("my-type").     assertThat(mappingMetaData, not(nullValue())).     Map<String, Object> mappingSource = mappingMetaData.sourceAsMap().     Map<String, Object> aField = ((Map<String, Object>) XContentMapValues.extractValue("properties.a", mappingSource)).     assertThat(aField.size(), equalTo(2)).     assertThat(aField.get("type").toString(), equalTo("ip")).     assertThat(aField.get("fields"), notNullValue()).     Map<String, Object> bField = ((Map<String, Object>) XContentMapValues.extractValue("properties.a.fields.b", mappingSource)).     assertThat(bField.size(), equalTo(1)).     assertThat(bField.get("type").toString(), equalTo("keyword")).     client().prepareIndex("my-index", "my-type", "1").setSource("a", "127.0.0.1").setRefreshPolicy(IMMEDIATE).get().     SearchResponse countResponse = client().prepareSearch("my-index").setSize(0).setQuery(matchQuery("a.b", "127.0.0.1")).get().     assertThat(countResponse.getHits().getTotalHits().value, equalTo(1L)). }
false;private;1;14;;private XContentBuilder createMappingSource(String fieldType) throws IOException {     return XContentFactory.jsonBuilder().startObject().startObject("my-type").startObject("properties").startObject("a").field("type", fieldType).startObject("fields").startObject("b").field("type", "keyword").endObject().endObject().endObject().endObject().endObject().endObject(). }
false;private;0;14;;private XContentBuilder createTypeSource() throws IOException {     return XContentFactory.jsonBuilder().startObject().startObject("my-type").startObject("properties").startObject("title").field("type", "text").startObject("fields").startObject("not_analyzed").field("type", "keyword").endObject().endObject().endObject().endObject().endObject().endObject(). }
false;private;0;15;;private XContentBuilder createPutMappingSource() throws IOException {     return XContentFactory.jsonBuilder().startObject().startObject("my-type").startObject("properties").startObject("title").field("type", "text").startObject("fields").startObject("uncased").field("type", "text").field("analyzer", "whitespace").endObject().endObject().endObject().endObject().endObject().endObject(). }
