# id;timestamp;commentText;codeText;commentWords;codeWords
PutMappingRequestTests -> private static PutMappingRequest createTestItem() throws IOException;1524684173;Returns a random {@link PutMappingRequest}.;private static PutMappingRequest createTestItem() throws IOException {_        String index = randomAlphaOfLength(5)___        PutMappingRequest request = new PutMappingRequest(index)___        String type = randomAlphaOfLength(5)__        request.type(type)__        request.source(randomMapping())___        return request__    };returns,a,random,link,put,mapping,request;private,static,put,mapping,request,create,test,item,throws,ioexception,string,index,random,alpha,of,length,5,put,mapping,request,request,new,put,mapping,request,index,string,type,random,alpha,of,length,5,request,type,type,request,source,random,mapping,return,request
PutMappingRequestTests -> private static PutMappingRequest createTestItem() throws IOException;1529916084;Returns a random {@link PutMappingRequest}.;private static PutMappingRequest createTestItem() throws IOException {_        String index = randomAlphaOfLength(5)___        PutMappingRequest request = new PutMappingRequest(index)___        String type = randomAlphaOfLength(5)__        request.type(type)__        request.source(randomMapping())___        return request__    };returns,a,random,link,put,mapping,request;private,static,put,mapping,request,create,test,item,throws,ioexception,string,index,random,alpha,of,length,5,put,mapping,request,request,new,put,mapping,request,index,string,type,random,alpha,of,length,5,request,type,type,request,source,random,mapping,return,request
PutMappingRequestTests -> private static PutMappingRequest createTestItem() throws IOException;1531910483;Returns a random {@link PutMappingRequest}.;private static PutMappingRequest createTestItem() throws IOException {_        String index = randomAlphaOfLength(5)___        PutMappingRequest request = new PutMappingRequest(index)___        String type = randomAlphaOfLength(5)__        request.type(type)__        request.source(randomMapping())___        return request__    };returns,a,random,link,put,mapping,request;private,static,put,mapping,request,create,test,item,throws,ioexception,string,index,random,alpha,of,length,5,put,mapping,request,request,new,put,mapping,request,index,string,type,random,alpha,of,length,5,request,type,type,request,source,random,mapping,return,request
PutMappingRequestTests -> private static PutMappingRequest createTestItem() throws IOException;1535139672;Returns a random {@link PutMappingRequest}.;private static PutMappingRequest createTestItem() throws IOException {_        String index = randomAlphaOfLength(5)___        PutMappingRequest request = new PutMappingRequest(index)___        String type = randomAlphaOfLength(5)__        request.type(type)__        request.source(randomMapping())___        return request__    };returns,a,random,link,put,mapping,request;private,static,put,mapping,request,create,test,item,throws,ioexception,string,index,random,alpha,of,length,5,put,mapping,request,request,new,put,mapping,request,index,string,type,random,alpha,of,length,5,request,type,type,request,source,random,mapping,return,request
PutMappingRequestTests -> private static PutMappingRequest createTestItem() throws IOException;1547843311;Returns a random {@link PutMappingRequest}.;private static PutMappingRequest createTestItem() throws IOException {_        String index = randomAlphaOfLength(5)___        PutMappingRequest request = new PutMappingRequest(index)___        String type = randomAlphaOfLength(5)__        request.type(type)__        request.source(randomMapping())___        return request__    };returns,a,random,link,put,mapping,request;private,static,put,mapping,request,create,test,item,throws,ioexception,string,index,random,alpha,of,length,5,put,mapping,request,request,new,put,mapping,request,index,string,type,random,alpha,of,length,5,request,type,type,request,source,random,mapping,return,request
PutMappingRequestTests -> private static PutMappingRequest createTestItem() throws IOException;1548262265;Returns a random {@link PutMappingRequest}.;private static PutMappingRequest createTestItem() throws IOException {_        String index = randomAlphaOfLength(5)___        PutMappingRequest request = new PutMappingRequest(index)___        String type = randomAlphaOfLength(5)__        request.type(type)__        request.source(RandomCreateIndexGenerator.randomMapping())___        return request__    };returns,a,random,link,put,mapping,request;private,static,put,mapping,request,create,test,item,throws,ioexception,string,index,random,alpha,of,length,5,put,mapping,request,request,new,put,mapping,request,index,string,type,random,alpha,of,length,5,request,type,type,request,source,random,create,index,generator,random,mapping,return,request
PutMappingRequestTests -> private static PutMappingRequest createTestItem() throws IOException;1548364667;Returns a random {@link PutMappingRequest}.;private static PutMappingRequest createTestItem() throws IOException {_        String index = randomAlphaOfLength(5)___        PutMappingRequest request = new PutMappingRequest(index)___        String type = randomAlphaOfLength(5)__        request.type(type)__        request.source(RandomCreateIndexGenerator.randomMapping(type))___        return request__    };returns,a,random,link,put,mapping,request;private,static,put,mapping,request,create,test,item,throws,ioexception,string,index,random,alpha,of,length,5,put,mapping,request,request,new,put,mapping,request,index,string,type,random,alpha,of,length,5,request,type,type,request,source,random,create,index,generator,random,mapping,type,return,request
PutMappingRequestTests -> public void testBuildFromSimplifiedDef();1531910483;Test that {@link PutMappingRequest#buildFromSimplifiedDef(String, Object...)}_rejects inputs where the {@code Object...} varargs of field name and properties are not_paired correctly;public void testBuildFromSimplifiedDef() {_        IllegalArgumentException e = expectThrows(IllegalArgumentException.class,_                () -> PutMappingRequest.buildFromSimplifiedDef("type", "only_field"))__        assertEquals("mapping source must be pairs of fieldnames and properties definition.", e.getMessage())__    };test,that,link,put,mapping,request,build,from,simplified,def,string,object,rejects,inputs,where,the,code,object,varargs,of,field,name,and,properties,are,not,paired,correctly;public,void,test,build,from,simplified,def,illegal,argument,exception,e,expect,throws,illegal,argument,exception,class,put,mapping,request,build,from,simplified,def,type,assert,equals,mapping,source,must,be,pairs,of,fieldnames,and,properties,definition,e,get,message
PutMappingRequestTests -> public void testBuildFromSimplifiedDef();1535139672;Test that {@link PutMappingRequest#buildFromSimplifiedDef(String, Object...)}_rejects inputs where the {@code Object...} varargs of field name and properties are not_paired correctly;public void testBuildFromSimplifiedDef() {_        IllegalArgumentException e = expectThrows(IllegalArgumentException.class,_                () -> PutMappingRequest.buildFromSimplifiedDef("type", "only_field"))__        assertEquals("mapping source must be pairs of fieldnames and properties definition.", e.getMessage())__    };test,that,link,put,mapping,request,build,from,simplified,def,string,object,rejects,inputs,where,the,code,object,varargs,of,field,name,and,properties,are,not,paired,correctly;public,void,test,build,from,simplified,def,illegal,argument,exception,e,expect,throws,illegal,argument,exception,class,put,mapping,request,build,from,simplified,def,type,assert,equals,mapping,source,must,be,pairs,of,fieldnames,and,properties,definition,e,get,message
PutMappingRequestTests -> public void testBuildFromSimplifiedDef();1547843311;Test that {@link PutMappingRequest#buildFromSimplifiedDef(String, Object...)}_rejects inputs where the {@code Object...} varargs of field name and properties are not_paired correctly;public void testBuildFromSimplifiedDef() {_        IllegalArgumentException e = expectThrows(IllegalArgumentException.class,_                () -> PutMappingRequest.buildFromSimplifiedDef("type", "only_field"))__        assertEquals("mapping source must be pairs of fieldnames and properties definition.", e.getMessage())__    };test,that,link,put,mapping,request,build,from,simplified,def,string,object,rejects,inputs,where,the,code,object,varargs,of,field,name,and,properties,are,not,paired,correctly;public,void,test,build,from,simplified,def,illegal,argument,exception,e,expect,throws,illegal,argument,exception,class,put,mapping,request,build,from,simplified,def,type,assert,equals,mapping,source,must,be,pairs,of,fieldnames,and,properties,definition,e,get,message
PutMappingRequestTests -> public void testBuildFromSimplifiedDef();1548262265;Test that {@link PutMappingRequest#buildFromSimplifiedDef(String, Object...)}_rejects inputs where the {@code Object...} varargs of field name and properties are not_paired correctly;public void testBuildFromSimplifiedDef() {_        IllegalArgumentException e = expectThrows(IllegalArgumentException.class,_                () -> PutMappingRequest.buildFromSimplifiedDef("type", "only_field"))__        assertEquals("mapping source must be pairs of fieldnames and properties definition.", e.getMessage())__    };test,that,link,put,mapping,request,build,from,simplified,def,string,object,rejects,inputs,where,the,code,object,varargs,of,field,name,and,properties,are,not,paired,correctly;public,void,test,build,from,simplified,def,illegal,argument,exception,e,expect,throws,illegal,argument,exception,class,put,mapping,request,build,from,simplified,def,type,assert,equals,mapping,source,must,be,pairs,of,fieldnames,and,properties,definition,e,get,message
PutMappingRequestTests -> public void testBuildFromSimplifiedDef();1548364667;Test that {@link PutMappingRequest#buildFromSimplifiedDef(String, Object...)}_rejects inputs where the {@code Object...} varargs of field name and properties are not_paired correctly;public void testBuildFromSimplifiedDef() {_        IllegalArgumentException e = expectThrows(IllegalArgumentException.class,_                () -> PutMappingRequest.buildFromSimplifiedDef("type", "only_field"))__        assertEquals("mapping source must be pairs of fieldnames and properties definition.", e.getMessage())__    };test,that,link,put,mapping,request,build,from,simplified,def,string,object,rejects,inputs,where,the,code,object,varargs,of,field,name,and,properties,are,not,paired,correctly;public,void,test,build,from,simplified,def,illegal,argument,exception,e,expect,throws,illegal,argument,exception,class,put,mapping,request,build,from,simplified,def,type,assert,equals,mapping,source,must,be,pairs,of,fieldnames,and,properties,definition,e,get,message
