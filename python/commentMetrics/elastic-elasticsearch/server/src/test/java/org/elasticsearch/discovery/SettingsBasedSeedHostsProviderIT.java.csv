commented;modifiers;parameterAmount;loc;comment;code
false;protected;1;16;;@Override protected Settings nodeSettings(int nodeOrdinal) {     Settings.Builder builder = Settings.builder().put(super.nodeSettings(nodeOrdinal)).     // super.nodeSettings enables file-based discovery, but here we disable it again so we can test the static list:     if (randomBoolean()) {         builder.putList(DISCOVERY_SEED_PROVIDERS_SETTING.getKey()).     } else {         builder.remove(DISCOVERY_SEED_PROVIDERS_SETTING.getKey()).     }     // super.nodeSettings sets this to an empty list, which disables any search for other nodes, but here we want this to happen:     builder.remove(DISCOVERY_SEED_HOSTS_SETTING.getKey()).     return builder.build(). }
false;public;0;13;;public void testClusterFormsWithSingleSeedHostInSettings() {     final String seedNodeName = internalCluster().startNode().     final NodesInfoResponse nodesInfoResponse = client(seedNodeName).admin().cluster().nodesInfo(new NodesInfoRequest("_local")).actionGet().     final String seedNodeAddress = nodesInfoResponse.getNodes().get(0).getTransport().getAddress().publishAddress().toString().     logger.info("--> using seed node address {}", seedNodeAddress).     int extraNodes = randomIntBetween(1, 5).     internalCluster().startNodes(extraNodes, Settings.builder().putList(DISCOVERY_SEED_HOSTS_SETTING.getKey(), seedNodeAddress).build()).     ensureStableCluster(extraNodes + 1). }
