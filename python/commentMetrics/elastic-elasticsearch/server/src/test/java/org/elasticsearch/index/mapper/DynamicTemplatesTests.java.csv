commented;modifiers;parameterAmount;loc;comment;code
false;public;0;24;;public void testMatchTypeOnly() throws Exception {     XContentBuilder builder = JsonXContent.contentBuilder().     builder.startObject().startObject("person").startArray("dynamic_templates").startObject().startObject("test").field("match_mapping_type", "string").startObject("mapping").field("index", false).endObject().endObject().endObject().endArray().endObject().endObject().     IndexService index = createIndex("test").     client().admin().indices().preparePutMapping("test").setType("person").setSource(builder).get().     MapperService mapperService = index.mapperService().     DocumentMapper docMapper = mapperService.documentMapper("person").     builder = JsonXContent.contentBuilder().     builder.startObject().field("s", "hello").field("l", 1).endObject().     ParsedDocument parsedDoc = docMapper.parse(new SourceToParse("test", "person", "1", BytesReference.bytes(builder), XContentType.JSON)).     client().admin().indices().preparePutMapping("test").setType("person").setSource(parsedDoc.dynamicMappingsUpdate().toString(), XContentType.JSON).get().     assertThat(mapperService.fullName("s"), notNullValue()).     assertEquals(IndexOptions.NONE, mapperService.fullName("s").indexOptions()).     assertThat(mapperService.fullName("l"), notNullValue()).     assertNotSame(IndexOptions.NONE, mapperService.fullName("l").indexOptions()). }
false;public;0;58;;public void testSimple() throws Exception {     String mapping = copyToStringFromClasspath("/org/elasticsearch/index/mapper/dynamictemplate/simple/test-mapping.json").     IndexService index = createIndex("test").     client().admin().indices().preparePutMapping("test").setType("person").setSource(mapping, XContentType.JSON).get().     DocumentMapper docMapper = index.mapperService().documentMapper("person").     byte[] json = copyToBytesFromClasspath("/org/elasticsearch/index/mapper/dynamictemplate/simple/test-data.json").     ParsedDocument parsedDoc = docMapper.parse(new SourceToParse("test", "person", "1", new BytesArray(json), XContentType.JSON)).     client().admin().indices().preparePutMapping("test").setType("person").setSource(parsedDoc.dynamicMappingsUpdate().toString(), XContentType.JSON).get().     docMapper = index.mapperService().documentMapper("person").     Document doc = parsedDoc.rootDoc().     IndexableField f = doc.getField("name").     assertThat(f.name(), equalTo("name")).     assertThat(f.binaryValue(), equalTo(new BytesRef("some name"))).     assertNotSame(IndexOptions.NONE, f.fieldType().indexOptions()).     assertThat(f.fieldType().tokenized(), equalTo(false)).     Mapper fieldMapper = docMapper.mappers().getMapper("name").     assertNotNull(fieldMapper).     f = doc.getField("multi1").     assertThat(f.name(), equalTo("multi1")).     assertThat(f.stringValue(), equalTo("multi 1")).     assertNotSame(IndexOptions.NONE, f.fieldType().indexOptions()).     assertThat(f.fieldType().tokenized(), equalTo(true)).     fieldMapper = docMapper.mappers().getMapper("multi1").     assertNotNull(fieldMapper).     f = doc.getField("multi1.org").     assertThat(f.name(), equalTo("multi1.org")).     assertThat(f.binaryValue(), equalTo(new BytesRef("multi 1"))).     assertNotSame(IndexOptions.NONE, f.fieldType().indexOptions()).     assertThat(f.fieldType().tokenized(), equalTo(false)).     fieldMapper = docMapper.mappers().getMapper("multi1.org").     assertNotNull(fieldMapper).     f = doc.getField("multi2").     assertThat(f.name(), equalTo("multi2")).     assertThat(f.stringValue(), equalTo("multi 2")).     assertNotSame(IndexOptions.NONE, f.fieldType().indexOptions()).     assertThat(f.fieldType().tokenized(), equalTo(true)).     fieldMapper = docMapper.mappers().getMapper("multi2").     assertNotNull(fieldMapper).     f = doc.getField("multi2.org").     assertThat(f.name(), equalTo("multi2.org")).     assertThat(f.binaryValue(), equalTo(new BytesRef("multi 2"))).     assertNotSame(IndexOptions.NONE, f.fieldType().indexOptions()).     assertThat(f.fieldType().tokenized(), equalTo(false)).     fieldMapper = docMapper.mappers().getMapper("multi2.org").     assertNotNull(fieldMapper). }
false;public;0;58;;public void testSimpleWithXContentTraverse() throws Exception {     String mapping = copyToStringFromClasspath("/org/elasticsearch/index/mapper/dynamictemplate/simple/test-mapping.json").     IndexService index = createIndex("test").     client().admin().indices().preparePutMapping("test").setType("person").setSource(mapping, XContentType.JSON).get().     DocumentMapper docMapper = index.mapperService().documentMapper("person").     byte[] json = copyToBytesFromClasspath("/org/elasticsearch/index/mapper/dynamictemplate/simple/test-data.json").     ParsedDocument parsedDoc = docMapper.parse(new SourceToParse("test", "person", "1", new BytesArray(json), XContentType.JSON)).     client().admin().indices().preparePutMapping("test").setType("person").setSource(parsedDoc.dynamicMappingsUpdate().toString(), XContentType.JSON).get().     docMapper = index.mapperService().documentMapper("person").     Document doc = parsedDoc.rootDoc().     IndexableField f = doc.getField("name").     assertThat(f.name(), equalTo("name")).     assertThat(f.binaryValue(), equalTo(new BytesRef("some name"))).     assertNotSame(IndexOptions.NONE, f.fieldType().indexOptions()).     assertThat(f.fieldType().tokenized(), equalTo(false)).     Mapper fieldMapper = docMapper.mappers().getMapper("name").     assertNotNull(fieldMapper).     f = doc.getField("multi1").     assertThat(f.name(), equalTo("multi1")).     assertThat(f.stringValue(), equalTo("multi 1")).     assertNotSame(IndexOptions.NONE, f.fieldType().indexOptions()).     assertThat(f.fieldType().tokenized(), equalTo(true)).     fieldMapper = docMapper.mappers().getMapper("multi1").     assertNotNull(fieldMapper).     f = doc.getField("multi1.org").     assertThat(f.name(), equalTo("multi1.org")).     assertThat(f.binaryValue(), equalTo(new BytesRef("multi 1"))).     assertNotSame(IndexOptions.NONE, f.fieldType().indexOptions()).     assertThat(f.fieldType().tokenized(), equalTo(false)).     fieldMapper = docMapper.mappers().getMapper("multi1.org").     assertNotNull(fieldMapper).     f = doc.getField("multi2").     assertThat(f.name(), equalTo("multi2")).     assertThat(f.stringValue(), equalTo("multi 2")).     assertNotSame(IndexOptions.NONE, f.fieldType().indexOptions()).     assertThat(f.fieldType().tokenized(), equalTo(true)).     fieldMapper = docMapper.mappers().getMapper("multi2").     assertNotNull(fieldMapper).     f = doc.getField("multi2.org").     assertThat(f.name(), equalTo("multi2.org")).     assertThat(f.binaryValue(), equalTo(new BytesRef("multi 2"))).     assertNotSame(IndexOptions.NONE, f.fieldType().indexOptions()).     assertThat(f.fieldType().tokenized(), equalTo(false)).     fieldMapper = docMapper.mappers().getMapper("multi2.org").     assertNotNull(fieldMapper). }
