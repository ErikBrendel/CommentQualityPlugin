commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected boolean forbidPrivateIndexSettings() {     return false. }
false;public;0;26;;public void testTypeNotCreatedOnIndexFailure() throws IOException {     final Settings settings = Settings.builder().put(IndexMetaData.SETTING_INDEX_VERSION_CREATED.getKey(), Version.V_6_3_0).build().     try (XContentBuilder mapping = jsonBuilder()) {         mapping.startObject().         {             mapping.startObject("_default_").             {                 mapping.field("dynamic", "strict").             }             mapping.endObject().         }         mapping.endObject().         createIndex("test", settings, "_default_", mapping).     }     try (XContentBuilder sourceBuilder = jsonBuilder().startObject().field("test", "test").endObject()) {         expectThrows(StrictDynamicMappingException.class, () -> client().prepareIndex().setIndex("test").setType("type").setSource(sourceBuilder).get()).         GetMappingsResponse getMappingsResponse = client().admin().indices().prepareGetMappings("test").get().         assertNull(getMappingsResponse.getMappings().get("test").get("type")).     } }
