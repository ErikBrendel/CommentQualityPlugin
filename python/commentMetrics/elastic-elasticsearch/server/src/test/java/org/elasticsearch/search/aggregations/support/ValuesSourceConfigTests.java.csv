commented;modifiers;parameterAmount;loc;comment;code
false;public;0;21;;public void testKeyword() throws Exception {     IndexService indexService = createIndex("index", Settings.EMPTY, "type", "bytes", "type=keyword").     client().prepareIndex("index", "type", "1").setSource("bytes", "abc").setRefreshPolicy(WriteRequest.RefreshPolicy.IMMEDIATE).get().     try (Searcher searcher = indexService.getShard(0).acquireSearcher("test")) {         QueryShardContext context = indexService.newQueryShardContext(0, searcher.reader(), () -> 42L, null).         ValuesSourceConfig<ValuesSource.Bytes> config = ValuesSourceConfig.resolve(context, null, "bytes", null, null, null, null).         ValuesSource.Bytes valuesSource = config.toValuesSource(context).         LeafReaderContext ctx = searcher.reader().leaves().get(0).         SortedBinaryDocValues values = valuesSource.bytesValues(ctx).         assertTrue(values.advanceExact(0)).         assertEquals(1, values.docValueCount()).         assertEquals(new BytesRef("abc"), values.nextValue()).     } }
false;public;0;27;;public void testEmptyKeyword() throws Exception {     IndexService indexService = createIndex("index", Settings.EMPTY, "type", "bytes", "type=keyword").     client().prepareIndex("index", "type", "1").setSource().setRefreshPolicy(WriteRequest.RefreshPolicy.IMMEDIATE).get().     try (Searcher searcher = indexService.getShard(0).acquireSearcher("test")) {         QueryShardContext context = indexService.newQueryShardContext(0, searcher.reader(), () -> 42L, null).         ValuesSourceConfig<ValuesSource.Bytes> config = ValuesSourceConfig.resolve(context, null, "bytes", null, null, null, null).         ValuesSource.Bytes valuesSource = config.toValuesSource(context).         LeafReaderContext ctx = searcher.reader().leaves().get(0).         SortedBinaryDocValues values = valuesSource.bytesValues(ctx).         assertFalse(values.advanceExact(0)).         config = ValuesSourceConfig.resolve(context, null, "bytes", null, "abc", null, null).         valuesSource = config.toValuesSource(context).         values = valuesSource.bytesValues(ctx).         assertTrue(values.advanceExact(0)).         assertEquals(1, values.docValueCount()).         assertEquals(new BytesRef("abc"), values.nextValue()).     } }
false;public;0;24;;public void testUnmappedKeyword() throws Exception {     IndexService indexService = createIndex("index", Settings.EMPTY, "type").     client().prepareIndex("index", "type", "1").setSource().setRefreshPolicy(WriteRequest.RefreshPolicy.IMMEDIATE).get().     try (Searcher searcher = indexService.getShard(0).acquireSearcher("test")) {         QueryShardContext context = indexService.newQueryShardContext(0, searcher.reader(), () -> 42L, null).         ValuesSourceConfig<ValuesSource.Bytes> config = ValuesSourceConfig.resolve(context, ValueType.STRING, "bytes", null, null, null, null).         ValuesSource.Bytes valuesSource = config.toValuesSource(context).         assertNull(valuesSource).         config = ValuesSourceConfig.resolve(context, ValueType.STRING, "bytes", null, "abc", null, null).         valuesSource = config.toValuesSource(context).         LeafReaderContext ctx = searcher.reader().leaves().get(0).         SortedBinaryDocValues values = valuesSource.bytesValues(ctx).         assertTrue(values.advanceExact(0)).         assertEquals(1, values.docValueCount()).         assertEquals(new BytesRef("abc"), values.nextValue()).     } }
false;public;0;21;;public void testLong() throws Exception {     IndexService indexService = createIndex("index", Settings.EMPTY, "type", "long", "type=long").     client().prepareIndex("index", "type", "1").setSource("long", 42).setRefreshPolicy(WriteRequest.RefreshPolicy.IMMEDIATE).get().     try (Searcher searcher = indexService.getShard(0).acquireSearcher("test")) {         QueryShardContext context = indexService.newQueryShardContext(0, searcher.reader(), () -> 42L, null).         ValuesSourceConfig<ValuesSource.Numeric> config = ValuesSourceConfig.resolve(context, null, "long", null, null, null, null).         ValuesSource.Numeric valuesSource = config.toValuesSource(context).         LeafReaderContext ctx = searcher.reader().leaves().get(0).         SortedNumericDocValues values = valuesSource.longValues(ctx).         assertTrue(values.advanceExact(0)).         assertEquals(1, values.docValueCount()).         assertEquals(42, values.nextValue()).     } }
false;public;0;27;;public void testEmptyLong() throws Exception {     IndexService indexService = createIndex("index", Settings.EMPTY, "type", "long", "type=long").     client().prepareIndex("index", "type", "1").setSource().setRefreshPolicy(WriteRequest.RefreshPolicy.IMMEDIATE).get().     try (Searcher searcher = indexService.getShard(0).acquireSearcher("test")) {         QueryShardContext context = indexService.newQueryShardContext(0, searcher.reader(), () -> 42L, null).         ValuesSourceConfig<ValuesSource.Numeric> config = ValuesSourceConfig.resolve(context, null, "long", null, null, null, null).         ValuesSource.Numeric valuesSource = config.toValuesSource(context).         LeafReaderContext ctx = searcher.reader().leaves().get(0).         SortedNumericDocValues values = valuesSource.longValues(ctx).         assertFalse(values.advanceExact(0)).         config = ValuesSourceConfig.resolve(context, null, "long", null, 42, null, null).         valuesSource = config.toValuesSource(context).         values = valuesSource.longValues(ctx).         assertTrue(values.advanceExact(0)).         assertEquals(1, values.docValueCount()).         assertEquals(42, values.nextValue()).     } }
false;public;0;25;;public void testUnmappedLong() throws Exception {     IndexService indexService = createIndex("index", Settings.EMPTY, "type").     client().prepareIndex("index", "type", "1").setSource().setRefreshPolicy(WriteRequest.RefreshPolicy.IMMEDIATE).get().     try (Searcher searcher = indexService.getShard(0).acquireSearcher("test")) {         QueryShardContext context = indexService.newQueryShardContext(0, searcher.reader(), () -> 42L, null).         ValuesSourceConfig<ValuesSource.Numeric> config = ValuesSourceConfig.resolve(context, ValueType.NUMBER, "long", null, null, null, null).         ValuesSource.Numeric valuesSource = config.toValuesSource(context).         assertNull(valuesSource).         config = ValuesSourceConfig.resolve(context, ValueType.NUMBER, "long", null, 42, null, null).         valuesSource = config.toValuesSource(context).         LeafReaderContext ctx = searcher.reader().leaves().get(0).         SortedNumericDocValues values = valuesSource.longValues(ctx).         assertTrue(values.advanceExact(0)).         assertEquals(1, values.docValueCount()).         assertEquals(42, values.nextValue()).     } }
false;public;0;21;;public void testBoolean() throws Exception {     IndexService indexService = createIndex("index", Settings.EMPTY, "type", "bool", "type=boolean").     client().prepareIndex("index", "type", "1").setSource("bool", true).setRefreshPolicy(WriteRequest.RefreshPolicy.IMMEDIATE).get().     try (Searcher searcher = indexService.getShard(0).acquireSearcher("test")) {         QueryShardContext context = indexService.newQueryShardContext(0, searcher.reader(), () -> 42L, null).         ValuesSourceConfig<ValuesSource.Numeric> config = ValuesSourceConfig.resolve(context, null, "bool", null, null, null, null).         ValuesSource.Numeric valuesSource = config.toValuesSource(context).         LeafReaderContext ctx = searcher.reader().leaves().get(0).         SortedNumericDocValues values = valuesSource.longValues(ctx).         assertTrue(values.advanceExact(0)).         assertEquals(1, values.docValueCount()).         assertEquals(1, values.nextValue()).     } }
false;public;0;27;;public void testEmptyBoolean() throws Exception {     IndexService indexService = createIndex("index", Settings.EMPTY, "type", "bool", "type=boolean").     client().prepareIndex("index", "type", "1").setSource().setRefreshPolicy(WriteRequest.RefreshPolicy.IMMEDIATE).get().     try (Searcher searcher = indexService.getShard(0).acquireSearcher("test")) {         QueryShardContext context = indexService.newQueryShardContext(0, searcher.reader(), () -> 42L, null).         ValuesSourceConfig<ValuesSource.Numeric> config = ValuesSourceConfig.resolve(context, null, "bool", null, null, null, null).         ValuesSource.Numeric valuesSource = config.toValuesSource(context).         LeafReaderContext ctx = searcher.reader().leaves().get(0).         SortedNumericDocValues values = valuesSource.longValues(ctx).         assertFalse(values.advanceExact(0)).         config = ValuesSourceConfig.resolve(context, null, "bool", null, true, null, null).         valuesSource = config.toValuesSource(context).         values = valuesSource.longValues(ctx).         assertTrue(values.advanceExact(0)).         assertEquals(1, values.docValueCount()).         assertEquals(1, values.nextValue()).     } }
false;public;0;25;;public void testUnmappedBoolean() throws Exception {     IndexService indexService = createIndex("index", Settings.EMPTY, "type").     client().prepareIndex("index", "type", "1").setSource().setRefreshPolicy(WriteRequest.RefreshPolicy.IMMEDIATE).get().     try (Searcher searcher = indexService.getShard(0).acquireSearcher("test")) {         QueryShardContext context = indexService.newQueryShardContext(0, searcher.reader(), () -> 42L, null).         ValuesSourceConfig<ValuesSource.Numeric> config = ValuesSourceConfig.resolve(context, ValueType.BOOLEAN, "bool", null, null, null, null).         ValuesSource.Numeric valuesSource = config.toValuesSource(context).         assertNull(valuesSource).         config = ValuesSourceConfig.resolve(context, ValueType.BOOLEAN, "bool", null, true, null, null).         valuesSource = config.toValuesSource(context).         LeafReaderContext ctx = searcher.reader().leaves().get(0).         SortedNumericDocValues values = valuesSource.longValues(ctx).         assertTrue(values.advanceExact(0)).         assertEquals(1, values.docValueCount()).         assertEquals(1, values.nextValue()).     } }
false;public;0;10;;public void testTypeFieldDeprecation() {     IndexService indexService = createIndex("index", Settings.EMPTY, "type").     try (Searcher searcher = indexService.getShard(0).acquireSearcher("test")) {         QueryShardContext context = indexService.newQueryShardContext(0, searcher.reader(), () -> 42L, null).         ValuesSourceConfig<ValuesSource.Bytes> config = ValuesSourceConfig.resolve(context, null, TypeFieldMapper.NAME, null, null, null, null).         assertWarnings(QueryShardContext.TYPES_DEPRECATION_MESSAGE).     } }
false;public;0;21;;public void testFieldAlias() throws Exception {     IndexService indexService = createIndex("index", Settings.EMPTY, "type", "field", "type=keyword", "alias", "type=alias,path=field").     client().prepareIndex("index", "type", "1").setSource("field", "value").setRefreshPolicy(WriteRequest.RefreshPolicy.IMMEDIATE).get().     try (Searcher searcher = indexService.getShard(0).acquireSearcher("test")) {         QueryShardContext context = indexService.newQueryShardContext(0, searcher.reader(), () -> 42L, null).         ValuesSourceConfig<ValuesSource.Bytes> config = ValuesSourceConfig.resolve(context, ValueType.STRING, "alias", null, null, null, null).         ValuesSource.Bytes valuesSource = config.toValuesSource(context).         LeafReaderContext ctx = searcher.reader().leaves().get(0).         SortedBinaryDocValues values = valuesSource.bytesValues(ctx).         assertTrue(values.advanceExact(0)).         assertEquals(1, values.docValueCount()).         assertEquals(new BytesRef("value"), values.nextValue()).     } }
