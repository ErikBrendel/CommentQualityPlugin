# id;timestamp;commentText;codeText;commentWords;codeWords
RandomQueryBuilder -> public static MultiTermQueryBuilder createMultiTermQuery(Random r);1524684173;Create a new multi term query of a random type_@param r random seed_@return a random {@link MultiTermQueryBuilder};public static MultiTermQueryBuilder createMultiTermQuery(Random r) {_        _        _        MultiTermQueryBuilder multiTermQueryBuilder__        switch(RandomNumbers.randomIntBetween(r, 0, 3)) {_            case 0:_                RangeQueryBuilder stringRangeQuery = new RangeQueryBuilder(AbstractQueryTestCase.STRING_FIELD_NAME)__                stringRangeQuery.from("a" + RandomStrings.randomAsciiOfLengthBetween(r, 1, 10))__                stringRangeQuery.to("z" + RandomStrings.randomAsciiOfLengthBetween(r, 1, 10))__                multiTermQueryBuilder = stringRangeQuery__                break__            case 1:_                multiTermQueryBuilder = new PrefixQueryBuilderTests().createTestQueryBuilder()__                break__            case 2:_                multiTermQueryBuilder = new WildcardQueryBuilderTests().createTestQueryBuilder()__                break__            case 3:_                multiTermQueryBuilder = new FuzzyQueryBuilder(AbstractQueryTestCase.STRING_FIELD_NAME,_                        RandomStrings.randomAsciiOfLengthBetween(r, 1, 10))__                break__            default:_                throw new UnsupportedOperationException()__        }_        if (r.nextBoolean()) {_            multiTermQueryBuilder.boost(2.0f / RandomNumbers.randomIntBetween(r, 1, 20))__        }_        return multiTermQueryBuilder__    };create,a,new,multi,term,query,of,a,random,type,param,r,random,seed,return,a,random,link,multi,term,query,builder;public,static,multi,term,query,builder,create,multi,term,query,random,r,multi,term,query,builder,multi,term,query,builder,switch,random,numbers,random,int,between,r,0,3,case,0,range,query,builder,string,range,query,new,range,query,builder,abstract,query,test,case,string,range,query,from,a,random,strings,random,ascii,of,length,between,r,1,10,string,range,query,to,z,random,strings,random,ascii,of,length,between,r,1,10,multi,term,query,builder,string,range,query,break,case,1,multi,term,query,builder,new,prefix,query,builder,tests,create,test,query,builder,break,case,2,multi,term,query,builder,new,wildcard,query,builder,tests,create,test,query,builder,break,case,3,multi,term,query,builder,new,fuzzy,query,builder,abstract,query,test,case,random,strings,random,ascii,of,length,between,r,1,10,break,default,throw,new,unsupported,operation,exception,if,r,next,boolean,multi,term,query,builder,boost,2,0f,random,numbers,random,int,between,r,1,20,return,multi,term,query,builder
RandomQueryBuilder -> public static MultiTermQueryBuilder createMultiTermQuery(Random r);1531937412;Create a new multi term query of a random type_@param r random seed_@return a random {@link MultiTermQueryBuilder};public static MultiTermQueryBuilder createMultiTermQuery(Random r) {_        _        _        MultiTermQueryBuilder multiTermQueryBuilder__        String fieldName = randomFrom(STRING_FIELD_NAME, STRING_ALIAS_FIELD_NAME)__        switch(RandomNumbers.randomIntBetween(r, 0, 3)) {_            case 0:_                RangeQueryBuilder stringRangeQuery = new RangeQueryBuilder(fieldName)__                stringRangeQuery.from("a" + RandomStrings.randomAsciiOfLengthBetween(r, 1, 10))__                stringRangeQuery.to("z" + RandomStrings.randomAsciiOfLengthBetween(r, 1, 10))__                multiTermQueryBuilder = stringRangeQuery__                break__            case 1:_                multiTermQueryBuilder = new PrefixQueryBuilderTests().createTestQueryBuilder()__                break__            case 2:_                multiTermQueryBuilder = new WildcardQueryBuilderTests().createTestQueryBuilder()__                break__            case 3:_                multiTermQueryBuilder = new FuzzyQueryBuilder(fieldName,_                        RandomStrings.randomAsciiOfLengthBetween(r, 1, 10))__                break__            default:_                throw new UnsupportedOperationException()__        }_        if (r.nextBoolean()) {_            multiTermQueryBuilder.boost(2.0f / RandomNumbers.randomIntBetween(r, 1, 20))__        }_        return multiTermQueryBuilder__    };create,a,new,multi,term,query,of,a,random,type,param,r,random,seed,return,a,random,link,multi,term,query,builder;public,static,multi,term,query,builder,create,multi,term,query,random,r,multi,term,query,builder,multi,term,query,builder,string,field,name,random,from,switch,random,numbers,random,int,between,r,0,3,case,0,range,query,builder,string,range,query,new,range,query,builder,field,name,string,range,query,from,a,random,strings,random,ascii,of,length,between,r,1,10,string,range,query,to,z,random,strings,random,ascii,of,length,between,r,1,10,multi,term,query,builder,string,range,query,break,case,1,multi,term,query,builder,new,prefix,query,builder,tests,create,test,query,builder,break,case,2,multi,term,query,builder,new,wildcard,query,builder,tests,create,test,query,builder,break,case,3,multi,term,query,builder,new,fuzzy,query,builder,field,name,random,strings,random,ascii,of,length,between,r,1,10,break,default,throw,new,unsupported,operation,exception,if,r,next,boolean,multi,term,query,builder,boost,2,0f,random,numbers,random,int,between,r,1,20,return,multi,term,query,builder
RandomQueryBuilder -> public static MultiTermQueryBuilder createMultiTermQuery(Random r);1547002001;Create a new multi term query of a random type_@param r random seed_@return a random {@link MultiTermQueryBuilder};public static MultiTermQueryBuilder createMultiTermQuery(Random r) {_        _        _        MultiTermQueryBuilder multiTermQueryBuilder__        String fieldName = randomFrom(STRING_FIELD_NAME, STRING_ALIAS_FIELD_NAME)__        switch(RandomNumbers.randomIntBetween(r, 0, 3)) {_            case 0:_                RangeQueryBuilder stringRangeQuery = new RangeQueryBuilder(fieldName)__                stringRangeQuery.from("a" + RandomStrings.randomAsciiOfLengthBetween(r, 1, 10))__                stringRangeQuery.to("z" + RandomStrings.randomAsciiOfLengthBetween(r, 1, 10))__                multiTermQueryBuilder = stringRangeQuery__                break__            case 1:_                multiTermQueryBuilder = new PrefixQueryBuilderTests().createTestQueryBuilder()__                break__            case 2:_                multiTermQueryBuilder = new WildcardQueryBuilderTests().createTestQueryBuilder()__                break__            case 3:_                multiTermQueryBuilder = new FuzzyQueryBuilder(fieldName,_                        RandomStrings.randomAsciiOfLengthBetween(r, 1, 10))__                break__            default:_                throw new UnsupportedOperationException()__        }_        if (r.nextBoolean()) {_            multiTermQueryBuilder.boost(2.0f / RandomNumbers.randomIntBetween(r, 1, 20))__        }_        return multiTermQueryBuilder__    };create,a,new,multi,term,query,of,a,random,type,param,r,random,seed,return,a,random,link,multi,term,query,builder;public,static,multi,term,query,builder,create,multi,term,query,random,r,multi,term,query,builder,multi,term,query,builder,string,field,name,random,from,switch,random,numbers,random,int,between,r,0,3,case,0,range,query,builder,string,range,query,new,range,query,builder,field,name,string,range,query,from,a,random,strings,random,ascii,of,length,between,r,1,10,string,range,query,to,z,random,strings,random,ascii,of,length,between,r,1,10,multi,term,query,builder,string,range,query,break,case,1,multi,term,query,builder,new,prefix,query,builder,tests,create,test,query,builder,break,case,2,multi,term,query,builder,new,wildcard,query,builder,tests,create,test,query,builder,break,case,3,multi,term,query,builder,new,fuzzy,query,builder,field,name,random,strings,random,ascii,of,length,between,r,1,10,break,default,throw,new,unsupported,operation,exception,if,r,next,boolean,multi,term,query,builder,boost,2,0f,random,numbers,random,int,between,r,1,20,return,multi,term,query,builder
RandomQueryBuilder -> public static QueryBuilder createQuery(Random r);1524684173;Create a new query of a random type_@param r random seed_@return a random {@link QueryBuilder};public static QueryBuilder createQuery(Random r) {_        switch (RandomNumbers.randomIntBetween(r, 0, 3)) {_            case 0:_                return new MatchAllQueryBuilderTests().createTestQueryBuilder()__            case 1:_                return new TermQueryBuilderTests().createTestQueryBuilder()__            case 2:_                return new IdsQueryBuilderTests().createTestQueryBuilder()__            case 3:_                return createMultiTermQuery(r)__            default:_                throw new UnsupportedOperationException()__        }_    };create,a,new,query,of,a,random,type,param,r,random,seed,return,a,random,link,query,builder;public,static,query,builder,create,query,random,r,switch,random,numbers,random,int,between,r,0,3,case,0,return,new,match,all,query,builder,tests,create,test,query,builder,case,1,return,new,term,query,builder,tests,create,test,query,builder,case,2,return,new,ids,query,builder,tests,create,test,query,builder,case,3,return,create,multi,term,query,r,default,throw,new,unsupported,operation,exception
RandomQueryBuilder -> public static QueryBuilder createQuery(Random r);1531937412;Create a new query of a random type_@param r random seed_@return a random {@link QueryBuilder};public static QueryBuilder createQuery(Random r) {_        switch (RandomNumbers.randomIntBetween(r, 0, 3)) {_            case 0:_                return new MatchAllQueryBuilderTests().createTestQueryBuilder()__            case 1:_                return new TermQueryBuilderTests().createTestQueryBuilder()__            case 2:_                return new IdsQueryBuilderTests().createTestQueryBuilder()__            case 3:_                return createMultiTermQuery(r)__            default:_                throw new UnsupportedOperationException()__        }_    };create,a,new,query,of,a,random,type,param,r,random,seed,return,a,random,link,query,builder;public,static,query,builder,create,query,random,r,switch,random,numbers,random,int,between,r,0,3,case,0,return,new,match,all,query,builder,tests,create,test,query,builder,case,1,return,new,term,query,builder,tests,create,test,query,builder,case,2,return,new,ids,query,builder,tests,create,test,query,builder,case,3,return,create,multi,term,query,r,default,throw,new,unsupported,operation,exception
RandomQueryBuilder -> public static QueryBuilder createQuery(Random r);1547002001;Create a new query of a random type_@param r random seed_@return a random {@link QueryBuilder};public static QueryBuilder createQuery(Random r) {_        switch (RandomNumbers.randomIntBetween(r, 0, 3)) {_            case 0:_                return new MatchAllQueryBuilderTests().createTestQueryBuilder()__            case 1:_                return new TermQueryBuilderTests().createTestQueryBuilder()__            case 2:_                _                _                return new IdsQueryBuilderTests().createTestQueryBuilder().types(Strings.EMPTY_ARRAY)__            case 3:_                return createMultiTermQuery(r)__            default:_                throw new UnsupportedOperationException()__        }_    };create,a,new,query,of,a,random,type,param,r,random,seed,return,a,random,link,query,builder;public,static,query,builder,create,query,random,r,switch,random,numbers,random,int,between,r,0,3,case,0,return,new,match,all,query,builder,tests,create,test,query,builder,case,1,return,new,term,query,builder,tests,create,test,query,builder,case,2,return,new,ids,query,builder,tests,create,test,query,builder,types,strings,case,3,return,create,multi,term,query,r,default,throw,new,unsupported,operation,exception
