# id;timestamp;commentText;codeText;commentWords;codeWords
FunctionScoreIT -> public void testWithEmptyFunctions() throws IOException, ExecutionException, InterruptedException;1524684173;make sure min_score works if functions is empty, see https://github.com/elastic/elasticsearch/issues/10253;public void testWithEmptyFunctions() throws IOException, ExecutionException, InterruptedException {_        assertAcked(prepareCreate("test"))__        index("test", "testtype", "1", jsonBuilder().startObject().field("text", "test text").endObject())__        refresh()___        SearchResponse termQuery = client().search(_            searchRequest().source(_                    searchSource().explain(true).query(_                            termQuery("text", "text")))).get()__        assertSearchResponse(termQuery)__        assertThat(termQuery.getHits().getTotalHits(), equalTo(1L))__        float termQueryScore = termQuery.getHits().getAt(0).getScore()___        for (CombineFunction combineFunction : CombineFunction.values()) {_            testMinScoreApplied(combineFunction, termQueryScore)__        }_    };make,sure,works,if,functions,is,empty,see,https,github,com,elastic,elasticsearch,issues,10253;public,void,test,with,empty,functions,throws,ioexception,execution,exception,interrupted,exception,assert,acked,prepare,create,test,index,test,testtype,1,json,builder,start,object,field,text,test,text,end,object,refresh,search,response,term,query,client,search,search,request,source,search,source,explain,true,query,term,query,text,text,get,assert,search,response,term,query,assert,that,term,query,get,hits,get,total,hits,equal,to,1l,float,term,query,score,term,query,get,hits,get,at,0,get,score,for,combine,function,combine,function,combine,function,values,test,min,score,applied,combine,function,term,query,score
FunctionScoreIT -> public void testWithEmptyFunctions() throws IOException, ExecutionException, InterruptedException;1531179852;make sure min_score works if functions is empty, see https://github.com/elastic/elasticsearch/issues/10253;public void testWithEmptyFunctions() throws IOException, ExecutionException, InterruptedException {_        assertAcked(prepareCreate("test"))__        index("test", "testtype", "1", jsonBuilder().startObject().field("text", "test text").endObject())__        refresh()___        SearchResponse termQuery = client().search(_            searchRequest().source(_                    searchSource().explain(true).query(_                            termQuery("text", "text")))).get()__        assertSearchResponse(termQuery)__        assertThat(termQuery.getHits().getTotalHits(), equalTo(1L))__        float termQueryScore = termQuery.getHits().getAt(0).getScore()___        for (CombineFunction combineFunction : CombineFunction.values()) {_            testMinScoreApplied(combineFunction, termQueryScore)__        }_    };make,sure,works,if,functions,is,empty,see,https,github,com,elastic,elasticsearch,issues,10253;public,void,test,with,empty,functions,throws,ioexception,execution,exception,interrupted,exception,assert,acked,prepare,create,test,index,test,testtype,1,json,builder,start,object,field,text,test,text,end,object,refresh,search,response,term,query,client,search,search,request,source,search,source,explain,true,query,term,query,text,text,get,assert,search,response,term,query,assert,that,term,query,get,hits,get,total,hits,equal,to,1l,float,term,query,score,term,query,get,hits,get,at,0,get,score,for,combine,function,combine,function,combine,function,values,test,min,score,applied,combine,function,term,query,score
FunctionScoreIT -> public void testWithEmptyFunctions() throws IOException, ExecutionException, InterruptedException;1532353780;make sure min_score works if functions is empty, see https://github.com/elastic/elasticsearch/issues/10253;public void testWithEmptyFunctions() throws IOException, ExecutionException, InterruptedException {_        assertAcked(prepareCreate("test"))__        index("test", "testtype", "1", jsonBuilder().startObject().field("text", "test text").endObject())__        refresh()___        SearchResponse termQuery = client().search(_            searchRequest().source(_                    searchSource().explain(true).query(_                            termQuery("text", "text")))).get()__        assertSearchResponse(termQuery)__        assertThat(termQuery.getHits().getTotalHits(), equalTo(1L))__        float termQueryScore = termQuery.getHits().getAt(0).getScore()___        for (CombineFunction combineFunction : CombineFunction.values()) {_            testMinScoreApplied(combineFunction, termQueryScore)__        }_    };make,sure,works,if,functions,is,empty,see,https,github,com,elastic,elasticsearch,issues,10253;public,void,test,with,empty,functions,throws,ioexception,execution,exception,interrupted,exception,assert,acked,prepare,create,test,index,test,testtype,1,json,builder,start,object,field,text,test,text,end,object,refresh,search,response,term,query,client,search,search,request,source,search,source,explain,true,query,term,query,text,text,get,assert,search,response,term,query,assert,that,term,query,get,hits,get,total,hits,equal,to,1l,float,term,query,score,term,query,get,hits,get,at,0,get,score,for,combine,function,combine,function,combine,function,values,test,min,score,applied,combine,function,term,query,score
FunctionScoreIT -> public void testWithEmptyFunctions() throws IOException, ExecutionException, InterruptedException;1536314350;make sure min_score works if functions is empty, see https://github.com/elastic/elasticsearch/issues/10253;public void testWithEmptyFunctions() throws IOException, ExecutionException, InterruptedException {_        assertAcked(prepareCreate("test"))__        index("test", "testtype", "1", jsonBuilder().startObject().field("text", "test text").endObject())__        refresh()___        SearchResponse termQuery = client().search(_            searchRequest().source(_                    searchSource().explain(true).query(_                            termQuery("text", "text")))).get()__        assertSearchResponse(termQuery)__        assertThat(termQuery.getHits().getTotalHits(), equalTo(1L))__        float termQueryScore = termQuery.getHits().getAt(0).getScore()___        for (CombineFunction combineFunction : CombineFunction.values()) {_            testMinScoreApplied(combineFunction, termQueryScore)__        }_    };make,sure,works,if,functions,is,empty,see,https,github,com,elastic,elasticsearch,issues,10253;public,void,test,with,empty,functions,throws,ioexception,execution,exception,interrupted,exception,assert,acked,prepare,create,test,index,test,testtype,1,json,builder,start,object,field,text,test,text,end,object,refresh,search,response,term,query,client,search,search,request,source,search,source,explain,true,query,term,query,text,text,get,assert,search,response,term,query,assert,that,term,query,get,hits,get,total,hits,equal,to,1l,float,term,query,score,term,query,get,hits,get,at,0,get,score,for,combine,function,combine,function,combine,function,values,test,min,score,applied,combine,function,term,query,score
FunctionScoreIT -> public void testWithEmptyFunctions() throws IOException, ExecutionException, InterruptedException;1539723533;make sure min_score works if functions is empty, see https://github.com/elastic/elasticsearch/issues/10253;public void testWithEmptyFunctions() throws IOException, ExecutionException, InterruptedException {_        assertAcked(prepareCreate("test"))__        index("test", "testtype", "1", jsonBuilder().startObject().field("text", "test text").endObject())__        refresh()___        SearchResponse termQuery = client().search(_            searchRequest().source(_                    searchSource().explain(true).query(_                            termQuery("text", "text")))).get()__        assertSearchResponse(termQuery)__        assertThat(termQuery.getHits().getTotalHits(), equalTo(1L))__        float termQueryScore = termQuery.getHits().getAt(0).getScore()___        for (CombineFunction combineFunction : CombineFunction.values()) {_            testMinScoreApplied(combineFunction, termQueryScore)__        }_    };make,sure,works,if,functions,is,empty,see,https,github,com,elastic,elasticsearch,issues,10253;public,void,test,with,empty,functions,throws,ioexception,execution,exception,interrupted,exception,assert,acked,prepare,create,test,index,test,testtype,1,json,builder,start,object,field,text,test,text,end,object,refresh,search,response,term,query,client,search,search,request,source,search,source,explain,true,query,term,query,text,text,get,assert,search,response,term,query,assert,that,term,query,get,hits,get,total,hits,equal,to,1l,float,term,query,score,term,query,get,hits,get,at,0,get,score,for,combine,function,combine,function,combine,function,values,test,min,score,applied,combine,function,term,query,score
FunctionScoreIT -> public void testWithEmptyFunctions() throws IOException, ExecutionException, InterruptedException;1544035746;make sure min_score works if functions is empty, see https://github.com/elastic/elasticsearch/issues/10253;public void testWithEmptyFunctions() throws IOException, ExecutionException, InterruptedException {_        assertAcked(prepareCreate("test"))__        index("test", "testtype", "1", jsonBuilder().startObject().field("text", "test text").endObject())__        refresh()___        SearchResponse termQuery = client().search(_            searchRequest().source(_                    searchSource().explain(true).query(_                            termQuery("text", "text")))).get()__        assertSearchResponse(termQuery)__        assertThat(termQuery.getHits().getTotalHits().value, equalTo(1L))__        float termQueryScore = termQuery.getHits().getAt(0).getScore()___        for (CombineFunction combineFunction : CombineFunction.values()) {_            testMinScoreApplied(combineFunction, termQueryScore)__        }_    };make,sure,works,if,functions,is,empty,see,https,github,com,elastic,elasticsearch,issues,10253;public,void,test,with,empty,functions,throws,ioexception,execution,exception,interrupted,exception,assert,acked,prepare,create,test,index,test,testtype,1,json,builder,start,object,field,text,test,text,end,object,refresh,search,response,term,query,client,search,search,request,source,search,source,explain,true,query,term,query,text,text,get,assert,search,response,term,query,assert,that,term,query,get,hits,get,total,hits,value,equal,to,1l,float,term,query,score,term,query,get,hits,get,at,0,get,score,for,combine,function,combine,function,combine,function,values,test,min,score,applied,combine,function,term,query,score
