commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public void testSameNormsAsBM25CountOverlaps() {     doTestSameNormsAsBM25(false). }
false;public;0;3;;public void testSameNormsAsBM25DiscountOverlaps() {     doTestSameNormsAsBM25(true). }
false;private;1;18;;private void doTestSameNormsAsBM25(boolean discountOverlaps) {     ScriptedSimilarity sim1 = new ScriptedSimilarity("foobar", null, "foobaz", null, discountOverlaps).     BM25Similarity sim2 = new BM25Similarity().     sim2.setDiscountOverlaps(discountOverlaps).     for (int iter = 0. iter < 100. ++iter) {         final int length = TestUtil.nextInt(random(), 1, 100).         final int position = random().nextInt(length).         final int numOverlaps = random().nextInt(length).         int maxTermFrequency = TestUtil.nextInt(random(), 1, 10).         int uniqueTermCount = TestUtil.nextInt(random(), 1, 10).         FieldInvertState state = new FieldInvertState(Version.LATEST.major, "foo", IndexOptions.DOCS_AND_FREQS, position, length, numOverlaps, 100, maxTermFrequency, uniqueTermCount).         assertEquals(sim2.computeNorm(state), sim1.computeNorm(state), 0f).     } }
false;public;5;30;;@Override public double execute(double weight, ScriptedSimilarity.Query query, ScriptedSimilarity.Field field, ScriptedSimilarity.Term term, ScriptedSimilarity.Doc doc) {     StackTraceElement[] stackTraceElements = Thread.currentThread().getStackTrace().     if (Arrays.stream(stackTraceElements).anyMatch(ste -> {         return ste.getClassName().endsWith(".TermScorer") && ste.getMethodName().equals("score").     }) == false) {         // this might happen when computing max scores         return Float.MAX_VALUE.     }     assertEquals(1, weight, 0).     assertNotNull(doc).     assertEquals(2f, doc.getFreq(), 0).     assertEquals(3, doc.getLength(), 0).     assertNotNull(field).     assertEquals(3, field.getDocCount()).     assertEquals(5, field.getSumDocFreq()).     assertEquals(6, field.getSumTotalTermFreq()).     assertNotNull(term).     assertEquals(2, term.getDocFreq()).     assertEquals(3, term.getTotalTermFreq()).     assertNotNull(query).     assertEquals(3.2f, query.getBoost(), 0).     called.set(true).     return 42f. }
false;public;0;72;;public void testBasics() throws IOException {     final AtomicBoolean called = new AtomicBoolean().     SimilarityScript.Factory scriptFactory = () -> {         return new SimilarityScript() {              @Override             public double execute(double weight, ScriptedSimilarity.Query query, ScriptedSimilarity.Field field, ScriptedSimilarity.Term term, ScriptedSimilarity.Doc doc) {                 StackTraceElement[] stackTraceElements = Thread.currentThread().getStackTrace().                 if (Arrays.stream(stackTraceElements).anyMatch(ste -> {                     return ste.getClassName().endsWith(".TermScorer") && ste.getMethodName().equals("score").                 }) == false) {                     // this might happen when computing max scores                     return Float.MAX_VALUE.                 }                 assertEquals(1, weight, 0).                 assertNotNull(doc).                 assertEquals(2f, doc.getFreq(), 0).                 assertEquals(3, doc.getLength(), 0).                 assertNotNull(field).                 assertEquals(3, field.getDocCount()).                 assertEquals(5, field.getSumDocFreq()).                 assertEquals(6, field.getSumTotalTermFreq()).                 assertNotNull(term).                 assertEquals(2, term.getDocFreq()).                 assertEquals(3, term.getTotalTermFreq()).                 assertNotNull(query).                 assertEquals(3.2f, query.getBoost(), 0).                 called.set(true).                 return 42f.             }         }.     }.     ScriptedSimilarity sim = new ScriptedSimilarity("foobar", null, "foobaz", scriptFactory, true).     Directory dir = new RAMDirectory().     IndexWriter w = new IndexWriter(dir, newIndexWriterConfig().setSimilarity(sim)).     Document doc = new Document().     doc.add(new TextField("f", "foo bar", Store.NO)).     doc.add(new StringField("match", "no", Store.NO)).     w.addDocument(doc).     doc = new Document().     doc.add(new TextField("f", "foo foo bar", Store.NO)).     doc.add(new StringField("match", "yes", Store.NO)).     w.addDocument(doc).     doc = new Document().     doc.add(new TextField("f", "bar", Store.NO)).     doc.add(new StringField("match", "no", Store.NO)).     w.addDocument(doc).     IndexReader r = DirectoryReader.open(w).     w.close().     IndexSearcher searcher = new IndexSearcher(r).     searcher.setSimilarity(sim).     Query query = new BoostQuery(new BooleanQuery.Builder().add(new TermQuery(new Term("f", "foo")), Occur.SHOULD).add(new TermQuery(new Term("match", "yes")), Occur.FILTER).build(), 3.2f).     TopDocs topDocs = searcher.search(query, 1).     assertEquals(1, topDocs.totalHits.value).     assertTrue(called.get()).     assertEquals(42, topDocs.scoreDocs[0].score, 0).     w.close().     dir.close(). }
false;public;3;14;;@Override public double execute(ScriptedSimilarity.Query query, ScriptedSimilarity.Field field, ScriptedSimilarity.Term term) {     assertEquals(3, field.getDocCount()).     assertEquals(5, field.getSumDocFreq()).     assertEquals(6, field.getSumTotalTermFreq()).     assertNotNull(term).     assertEquals(1, term.getDocFreq()).     assertEquals(2, term.getTotalTermFreq()).     assertNotNull(query).     assertEquals(3.2f, query.getBoost(), 0).     initCalled.set(true).     return 28. }
false;public;5;30;;@Override public double execute(double weight, ScriptedSimilarity.Query query, ScriptedSimilarity.Field field, ScriptedSimilarity.Term term, ScriptedSimilarity.Doc doc) {     StackTraceElement[] stackTraceElements = Thread.currentThread().getStackTrace().     if (Arrays.stream(stackTraceElements).anyMatch(ste -> {         return ste.getClassName().endsWith(".TermScorer") && ste.getMethodName().equals("score").     }) == false) {         // this might happen when computing max scores         return Float.MAX_VALUE.     }     assertEquals(28, weight, 0d).     assertNotNull(doc).     assertEquals(2f, doc.getFreq(), 0).     assertEquals(3, doc.getLength(), 0).     assertNotNull(field).     assertEquals(3, field.getDocCount()).     assertEquals(5, field.getSumDocFreq()).     assertEquals(6, field.getSumTotalTermFreq()).     assertNotNull(term).     assertEquals(1, term.getDocFreq()).     assertEquals(2, term.getTotalTermFreq()).     assertNotNull(query).     assertEquals(3.2f, query.getBoost(), 0).     called.set(true).     return 42. }
false;public;0;89;;public void testInitScript() throws IOException {     final AtomicBoolean initCalled = new AtomicBoolean().     SimilarityWeightScript.Factory weightScriptFactory = () -> {         return new SimilarityWeightScript() {              @Override             public double execute(ScriptedSimilarity.Query query, ScriptedSimilarity.Field field, ScriptedSimilarity.Term term) {                 assertEquals(3, field.getDocCount()).                 assertEquals(5, field.getSumDocFreq()).                 assertEquals(6, field.getSumTotalTermFreq()).                 assertNotNull(term).                 assertEquals(1, term.getDocFreq()).                 assertEquals(2, term.getTotalTermFreq()).                 assertNotNull(query).                 assertEquals(3.2f, query.getBoost(), 0).                 initCalled.set(true).                 return 28.             }         }.     }.     final AtomicBoolean called = new AtomicBoolean().     SimilarityScript.Factory scriptFactory = () -> {         return new SimilarityScript() {              @Override             public double execute(double weight, ScriptedSimilarity.Query query, ScriptedSimilarity.Field field, ScriptedSimilarity.Term term, ScriptedSimilarity.Doc doc) {                 StackTraceElement[] stackTraceElements = Thread.currentThread().getStackTrace().                 if (Arrays.stream(stackTraceElements).anyMatch(ste -> {                     return ste.getClassName().endsWith(".TermScorer") && ste.getMethodName().equals("score").                 }) == false) {                     // this might happen when computing max scores                     return Float.MAX_VALUE.                 }                 assertEquals(28, weight, 0d).                 assertNotNull(doc).                 assertEquals(2f, doc.getFreq(), 0).                 assertEquals(3, doc.getLength(), 0).                 assertNotNull(field).                 assertEquals(3, field.getDocCount()).                 assertEquals(5, field.getSumDocFreq()).                 assertEquals(6, field.getSumTotalTermFreq()).                 assertNotNull(term).                 assertEquals(1, term.getDocFreq()).                 assertEquals(2, term.getTotalTermFreq()).                 assertNotNull(query).                 assertEquals(3.2f, query.getBoost(), 0).                 called.set(true).                 return 42.             }         }.     }.     ScriptedSimilarity sim = new ScriptedSimilarity("foobar", weightScriptFactory, "foobaz", scriptFactory, true).     Directory dir = new RAMDirectory().     IndexWriter w = new IndexWriter(dir, newIndexWriterConfig().setSimilarity(sim)).     Document doc = new Document().     doc.add(new TextField("f", "bar baz", Store.NO)).     w.addDocument(doc).     doc = new Document().     doc.add(new TextField("f", "foo foo bar", Store.NO)).     doc.add(new StringField("match", "yes", Store.NO)).     w.addDocument(doc).     doc = new Document().     doc.add(new TextField("f", "bar", Store.NO)).     w.addDocument(doc).     IndexReader r = DirectoryReader.open(w).     w.close().     IndexSearcher searcher = new IndexSearcher(r).     searcher.setSimilarity(sim).     Query query = new BoostQuery(new TermQuery(new Term("f", "foo")), 3.2f).     TopDocs topDocs = searcher.search(query, 1).     assertEquals(1, topDocs.totalHits.value).     assertTrue(initCalled.get()).     assertTrue(called.get()).     assertEquals(42, topDocs.scoreDocs[0].score, 0).     w.close().     dir.close(). }
