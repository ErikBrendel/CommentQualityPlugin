commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;public void testFailureToString() {     Failure failure = new Failure("index", "type", "id", new RuntimeException("test")).     String toString = failure.toString().     assertThat(toString, containsString("\"type\":\"runtime_exception\"")).     assertThat(toString, containsString("\"reason\":\"test\"")).     assertThat(toString, containsString("\"status\":500")). }
false;public;0;31;;public void testToAndFromXContent() throws IOException {     final XContentType xContentType = randomFrom(XContentType.values()).     for (DocWriteRequest.OpType opType : DocWriteRequest.OpType.values()) {         int bulkItemId = randomIntBetween(0, 100).         boolean humanReadable = randomBoolean().         Tuple<? extends DocWriteResponse, ? extends DocWriteResponse> randomDocWriteResponses = null.         if (opType == DocWriteRequest.OpType.INDEX || opType == DocWriteRequest.OpType.CREATE) {             randomDocWriteResponses = IndexResponseTests.randomIndexResponse().         } else if (opType == DocWriteRequest.OpType.DELETE) {             randomDocWriteResponses = DeleteResponseTests.randomDeleteResponse().         } else if (opType == DocWriteRequest.OpType.UPDATE) {             randomDocWriteResponses = UpdateResponseTests.randomUpdateResponse(xContentType).         } else {             fail("Test does not support opType [" + opType + "]").         }         BulkItemResponse bulkItemResponse = new BulkItemResponse(bulkItemId, opType, randomDocWriteResponses.v1()).         BulkItemResponse expectedBulkItemResponse = new BulkItemResponse(bulkItemId, opType, randomDocWriteResponses.v2()).         BytesReference originalBytes = toShuffledXContent(bulkItemResponse, xContentType, ToXContent.EMPTY_PARAMS, humanReadable).         BulkItemResponse parsedBulkItemResponse.         try (XContentParser parser = createParser(xContentType.xContent(), originalBytes)) {             assertEquals(XContentParser.Token.START_OBJECT, parser.nextToken()).             parsedBulkItemResponse = BulkItemResponse.fromXContent(parser, bulkItemId).             assertNull(parser.nextToken()).         }         assertBulkItemResponse(expectedBulkItemResponse, parsedBulkItemResponse).     } }
false;public;0;33;;public void testFailureToAndFromXContent() throws IOException {     final XContentType xContentType = randomFrom(XContentType.values()).     int itemId = randomIntBetween(0, 100).     String index = randomAlphaOfLength(5).     String type = randomAlphaOfLength(5).     String id = randomAlphaOfLength(5).     DocWriteRequest.OpType opType = randomFrom(DocWriteRequest.OpType.values()).     final Tuple<Throwable, ElasticsearchException> exceptions = randomExceptions().     Exception bulkItemCause = (Exception) exceptions.v1().     Failure bulkItemFailure = new Failure(index, type, id, bulkItemCause).     BulkItemResponse bulkItemResponse = new BulkItemResponse(itemId, opType, bulkItemFailure).     Failure expectedBulkItemFailure = new Failure(index, type, id, exceptions.v2(), ExceptionsHelper.status(bulkItemCause)).     BulkItemResponse expectedBulkItemResponse = new BulkItemResponse(itemId, opType, expectedBulkItemFailure).     BytesReference originalBytes = toShuffledXContent(bulkItemResponse, xContentType, ToXContent.EMPTY_PARAMS, randomBoolean()).     // Shuffle the XContent fields     if (randomBoolean()) {         try (XContentParser parser = createParser(xContentType.xContent(), originalBytes)) {             originalBytes = BytesReference.bytes(shuffleXContent(parser, randomBoolean())).         }     }     BulkItemResponse parsedBulkItemResponse.     try (XContentParser parser = createParser(xContentType.xContent(), originalBytes)) {         assertEquals(XContentParser.Token.START_OBJECT, parser.nextToken()).         parsedBulkItemResponse = BulkItemResponse.fromXContent(parser, itemId).         assertNull(parser.nextToken()).     }     assertBulkItemResponse(expectedBulkItemResponse, parsedBulkItemResponse). }
false;public,static;2;30;;public static void assertBulkItemResponse(BulkItemResponse expected, BulkItemResponse actual) {     assertEquals(expected.getItemId(), actual.getItemId()).     assertEquals(expected.getIndex(), actual.getIndex()).     assertEquals(expected.getType(), actual.getType()).     assertEquals(expected.getId(), actual.getId()).     assertEquals(expected.getOpType(), actual.getOpType()).     assertEquals(expected.getVersion(), actual.getVersion()).     assertEquals(expected.isFailed(), actual.isFailed()).     if (expected.isFailed()) {         BulkItemResponse.Failure expectedFailure = expected.getFailure().         BulkItemResponse.Failure actualFailure = actual.getFailure().         assertEquals(expectedFailure.getIndex(), actualFailure.getIndex()).         assertEquals(expectedFailure.getType(), actualFailure.getType()).         assertEquals(expectedFailure.getId(), actualFailure.getId()).         assertEquals(expectedFailure.getMessage(), actualFailure.getMessage()).         assertEquals(expectedFailure.getStatus(), actualFailure.getStatus()).         assertDeepEquals((ElasticsearchException) expectedFailure.getCause(), (ElasticsearchException) actualFailure.getCause()).     } else {         DocWriteResponse expectedDocResponse = expected.getResponse().         DocWriteResponse actualDocResponse = expected.getResponse().         IndexResponseTests.assertDocWriteResponse(expectedDocResponse, actualDocResponse).         if (expected.getOpType() == DocWriteRequest.OpType.UPDATE) {             assertEquals(((UpdateResponse) expectedDocResponse).getGetResult(), ((UpdateResponse) actualDocResponse).getGetResult()).         }     } }
