# id;timestamp;commentText;codeText;commentWords;codeWords
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder order(BucketOrder order);1524684173;Set a new order on this builder and return the builder so that calls_can be chained. A tie-breaker may be added to avoid non-deterministic ordering.;public DateHistogramAggregationBuilder order(BucketOrder order) {_        if (order == null) {_            throw new IllegalArgumentException("[order] must not be null: [" + name + "]")__        }_        if(order instanceof CompoundOrder || InternalOrder.isKeyOrder(order)) {_            this.order = order_ _        } else { _            this.order = BucketOrder.compound(order)__        }_        return this__    };set,a,new,order,on,this,builder,and,return,the,builder,so,that,calls,can,be,chained,a,tie,breaker,may,be,added,to,avoid,non,deterministic,ordering;public,date,histogram,aggregation,builder,order,bucket,order,order,if,order,null,throw,new,illegal,argument,exception,order,must,not,be,null,name,if,order,instanceof,compound,order,internal,order,is,key,order,order,this,order,order,else,this,order,bucket,order,compound,order,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder order(BucketOrder order);1526510804;Set a new order on this builder and return the builder so that calls_can be chained. A tie-breaker may be added to avoid non-deterministic ordering.;public DateHistogramAggregationBuilder order(BucketOrder order) {_        if (order == null) {_            throw new IllegalArgumentException("[order] must not be null: [" + name + "]")__        }_        if(order instanceof CompoundOrder || InternalOrder.isKeyOrder(order)) {_            this.order = order_ _        } else { _            this.order = BucketOrder.compound(order)__        }_        return this__    };set,a,new,order,on,this,builder,and,return,the,builder,so,that,calls,can,be,chained,a,tie,breaker,may,be,added,to,avoid,non,deterministic,ordering;public,date,histogram,aggregation,builder,order,bucket,order,order,if,order,null,throw,new,illegal,argument,exception,order,must,not,be,null,name,if,order,instanceof,compound,order,internal,order,is,key,order,order,this,order,order,else,this,order,bucket,order,compound,order,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder order(BucketOrder order);1527096592;Set a new order on this builder and return the builder so that calls_can be chained. A tie-breaker may be added to avoid non-deterministic ordering.;public DateHistogramAggregationBuilder order(BucketOrder order) {_        if (order == null) {_            throw new IllegalArgumentException("[order] must not be null: [" + name + "]")__        }_        if(order instanceof CompoundOrder || InternalOrder.isKeyOrder(order)) {_            this.order = order_ _        } else { _            this.order = BucketOrder.compound(order)__        }_        return this__    };set,a,new,order,on,this,builder,and,return,the,builder,so,that,calls,can,be,chained,a,tie,breaker,may,be,added,to,avoid,non,deterministic,ordering;public,date,histogram,aggregation,builder,order,bucket,order,order,if,order,null,throw,new,illegal,argument,exception,order,must,not,be,null,name,if,order,instanceof,compound,order,internal,order,is,key,order,order,this,order,order,else,this,order,bucket,order,compound,order,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder order(BucketOrder order);1529487105;Set a new order on this builder and return the builder so that calls_can be chained. A tie-breaker may be added to avoid non-deterministic ordering.;public DateHistogramAggregationBuilder order(BucketOrder order) {_        if (order == null) {_            throw new IllegalArgumentException("[order] must not be null: [" + name + "]")__        }_        if(order instanceof CompoundOrder || InternalOrder.isKeyOrder(order)) {_            this.order = order_ _        } else { _            this.order = BucketOrder.compound(order)__        }_        return this__    };set,a,new,order,on,this,builder,and,return,the,builder,so,that,calls,can,be,chained,a,tie,breaker,may,be,added,to,avoid,non,deterministic,ordering;public,date,histogram,aggregation,builder,order,bucket,order,order,if,order,null,throw,new,illegal,argument,exception,order,must,not,be,null,name,if,order,instanceof,compound,order,internal,order,is,key,order,order,this,order,order,else,this,order,bucket,order,compound,order,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder order(BucketOrder order);1538067637;Set a new order on this builder and return the builder so that calls_can be chained. A tie-breaker may be added to avoid non-deterministic ordering.;public DateHistogramAggregationBuilder order(BucketOrder order) {_        if (order == null) {_            throw new IllegalArgumentException("[order] must not be null: [" + name + "]")__        }_        if(order instanceof CompoundOrder || InternalOrder.isKeyOrder(order)) {_            this.order = order_ _        } else { _            this.order = BucketOrder.compound(order)__        }_        return this__    };set,a,new,order,on,this,builder,and,return,the,builder,so,that,calls,can,be,chained,a,tie,breaker,may,be,added,to,avoid,non,deterministic,ordering;public,date,histogram,aggregation,builder,order,bucket,order,order,if,order,null,throw,new,illegal,argument,exception,order,must,not,be,null,name,if,order,instanceof,compound,order,internal,order,is,key,order,order,this,order,order,else,this,order,bucket,order,compound,order,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder order(BucketOrder order);1544600864;Set a new order on this builder and return the builder so that calls_can be chained. A tie-breaker may be added to avoid non-deterministic ordering.;public DateHistogramAggregationBuilder order(BucketOrder order) {_        if (order == null) {_            throw new IllegalArgumentException("[order] must not be null: [" + name + "]")__        }_        if(order instanceof CompoundOrder || InternalOrder.isKeyOrder(order)) {_            this.order = order_ _        } else { _            this.order = BucketOrder.compound(order)__        }_        return this__    };set,a,new,order,on,this,builder,and,return,the,builder,so,that,calls,can,be,chained,a,tie,breaker,may,be,added,to,avoid,non,deterministic,ordering;public,date,histogram,aggregation,builder,order,bucket,order,order,if,order,null,throw,new,illegal,argument,exception,order,must,not,be,null,name,if,order,instanceof,compound,order,internal,order,is,key,order,order,this,order,order,else,this,order,bucket,order,compound,order,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder order(BucketOrder order);1544732811;Set a new order on this builder and return the builder so that calls_can be chained. A tie-breaker may be added to avoid non-deterministic ordering.;public DateHistogramAggregationBuilder order(BucketOrder order) {_        if (order == null) {_            throw new IllegalArgumentException("[order] must not be null: [" + name + "]")__        }_        if(order instanceof CompoundOrder || InternalOrder.isKeyOrder(order)) {_            this.order = order_ _        } else { _            this.order = BucketOrder.compound(order)__        }_        return this__    };set,a,new,order,on,this,builder,and,return,the,builder,so,that,calls,can,be,chained,a,tie,breaker,may,be,added,to,avoid,non,deterministic,ordering;public,date,histogram,aggregation,builder,order,bucket,order,order,if,order,null,throw,new,illegal,argument,exception,order,must,not,be,null,name,if,order,instanceof,compound,order,internal,order,is,key,order,order,this,order,order,else,this,order,bucket,order,compound,order,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder order(BucketOrder order);1548236405;Set a new order on this builder and return the builder so that calls_can be chained. A tie-breaker may be added to avoid non-deterministic ordering.;public DateHistogramAggregationBuilder order(BucketOrder order) {_        if (order == null) {_            throw new IllegalArgumentException("[order] must not be null: [" + name + "]")__        }_        if(order instanceof CompoundOrder || InternalOrder.isKeyOrder(order)) {_            this.order = order_ _        } else { _            this.order = BucketOrder.compound(order)__        }_        return this__    };set,a,new,order,on,this,builder,and,return,the,builder,so,that,calls,can,be,chained,a,tie,breaker,may,be,added,to,avoid,non,deterministic,ordering;public,date,histogram,aggregation,builder,order,bucket,order,order,if,order,null,throw,new,illegal,argument,exception,order,must,not,be,null,name,if,order,instanceof,compound,order,internal,order,is,key,order,order,this,order,order,else,this,order,bucket,order,compound,order,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder keyed(boolean keyed);1524684173;Set whether to return buckets as a hash or as an array, and return the_builder so that calls can be chained.;public DateHistogramAggregationBuilder keyed(boolean keyed) {_        this.keyed = keyed__        return this__    };set,whether,to,return,buckets,as,a,hash,or,as,an,array,and,return,the,builder,so,that,calls,can,be,chained;public,date,histogram,aggregation,builder,keyed,boolean,keyed,this,keyed,keyed,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder keyed(boolean keyed);1526510804;Set whether to return buckets as a hash or as an array, and return the_builder so that calls can be chained.;public DateHistogramAggregationBuilder keyed(boolean keyed) {_        this.keyed = keyed__        return this__    };set,whether,to,return,buckets,as,a,hash,or,as,an,array,and,return,the,builder,so,that,calls,can,be,chained;public,date,histogram,aggregation,builder,keyed,boolean,keyed,this,keyed,keyed,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder keyed(boolean keyed);1527096592;Set whether to return buckets as a hash or as an array, and return the_builder so that calls can be chained.;public DateHistogramAggregationBuilder keyed(boolean keyed) {_        this.keyed = keyed__        return this__    };set,whether,to,return,buckets,as,a,hash,or,as,an,array,and,return,the,builder,so,that,calls,can,be,chained;public,date,histogram,aggregation,builder,keyed,boolean,keyed,this,keyed,keyed,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder keyed(boolean keyed);1529487105;Set whether to return buckets as a hash or as an array, and return the_builder so that calls can be chained.;public DateHistogramAggregationBuilder keyed(boolean keyed) {_        this.keyed = keyed__        return this__    };set,whether,to,return,buckets,as,a,hash,or,as,an,array,and,return,the,builder,so,that,calls,can,be,chained;public,date,histogram,aggregation,builder,keyed,boolean,keyed,this,keyed,keyed,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder keyed(boolean keyed);1538067637;Set whether to return buckets as a hash or as an array, and return the_builder so that calls can be chained.;public DateHistogramAggregationBuilder keyed(boolean keyed) {_        this.keyed = keyed__        return this__    };set,whether,to,return,buckets,as,a,hash,or,as,an,array,and,return,the,builder,so,that,calls,can,be,chained;public,date,histogram,aggregation,builder,keyed,boolean,keyed,this,keyed,keyed,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder keyed(boolean keyed);1544600864;Set whether to return buckets as a hash or as an array, and return the_builder so that calls can be chained.;public DateHistogramAggregationBuilder keyed(boolean keyed) {_        this.keyed = keyed__        return this__    };set,whether,to,return,buckets,as,a,hash,or,as,an,array,and,return,the,builder,so,that,calls,can,be,chained;public,date,histogram,aggregation,builder,keyed,boolean,keyed,this,keyed,keyed,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder keyed(boolean keyed);1544732811;Set whether to return buckets as a hash or as an array, and return the_builder so that calls can be chained.;public DateHistogramAggregationBuilder keyed(boolean keyed) {_        this.keyed = keyed__        return this__    };set,whether,to,return,buckets,as,a,hash,or,as,an,array,and,return,the,builder,so,that,calls,can,be,chained;public,date,histogram,aggregation,builder,keyed,boolean,keyed,this,keyed,keyed,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder keyed(boolean keyed);1548236405;Set whether to return buckets as a hash or as an array, and return the_builder so that calls can be chained.;public DateHistogramAggregationBuilder keyed(boolean keyed) {_        this.keyed = keyed__        return this__    };set,whether,to,return,buckets,as,a,hash,or,as,an,array,and,return,the,builder,so,that,calls,can,be,chained;public,date,histogram,aggregation,builder,keyed,boolean,keyed,this,keyed,keyed,return,this
DateHistogramAggregationBuilder -> public BucketOrder order();1524684173;Return the order to use to sort buckets of this histogram.;public BucketOrder order() {_        return order__    };return,the,order,to,use,to,sort,buckets,of,this,histogram;public,bucket,order,order,return,order
DateHistogramAggregationBuilder -> public BucketOrder order();1526510804;Return the order to use to sort buckets of this histogram.;public BucketOrder order() {_        return order__    };return,the,order,to,use,to,sort,buckets,of,this,histogram;public,bucket,order,order,return,order
DateHistogramAggregationBuilder -> public BucketOrder order();1527096592;Return the order to use to sort buckets of this histogram.;public BucketOrder order() {_        return order__    };return,the,order,to,use,to,sort,buckets,of,this,histogram;public,bucket,order,order,return,order
DateHistogramAggregationBuilder -> public BucketOrder order();1529487105;Return the order to use to sort buckets of this histogram.;public BucketOrder order() {_        return order__    };return,the,order,to,use,to,sort,buckets,of,this,histogram;public,bucket,order,order,return,order
DateHistogramAggregationBuilder -> public BucketOrder order();1538067637;Return the order to use to sort buckets of this histogram.;public BucketOrder order() {_        return order__    };return,the,order,to,use,to,sort,buckets,of,this,histogram;public,bucket,order,order,return,order
DateHistogramAggregationBuilder -> public BucketOrder order();1544600864;Return the order to use to sort buckets of this histogram.;public BucketOrder order() {_        return order__    };return,the,order,to,use,to,sort,buckets,of,this,histogram;public,bucket,order,order,return,order
DateHistogramAggregationBuilder -> public BucketOrder order();1544732811;Return the order to use to sort buckets of this histogram.;public BucketOrder order() {_        return order__    };return,the,order,to,use,to,sort,buckets,of,this,histogram;public,bucket,order,order,return,order
DateHistogramAggregationBuilder -> public BucketOrder order();1548236405;Return the order to use to sort buckets of this histogram.;public BucketOrder order() {_        return order__    };return,the,order,to,use,to,sort,buckets,of,this,histogram;public,bucket,order,order,return,order
DateHistogramAggregationBuilder -> public long interval();1524684173;Get the current interval in milliseconds that is set on this builder.;public long interval() {_        return interval__    };get,the,current,interval,in,milliseconds,that,is,set,on,this,builder;public,long,interval,return,interval
DateHistogramAggregationBuilder -> public long interval();1526510804;Get the current interval in milliseconds that is set on this builder.;public long interval() {_        return interval__    };get,the,current,interval,in,milliseconds,that,is,set,on,this,builder;public,long,interval,return,interval
DateHistogramAggregationBuilder -> public long interval();1527096592;Get the current interval in milliseconds that is set on this builder.;public long interval() {_        return interval__    };get,the,current,interval,in,milliseconds,that,is,set,on,this,builder;public,long,interval,return,interval
DateHistogramAggregationBuilder -> public long interval();1529487105;Get the current interval in milliseconds that is set on this builder.;public long interval() {_        return interval__    };get,the,current,interval,in,milliseconds,that,is,set,on,this,builder;public,long,interval,return,interval
DateHistogramAggregationBuilder -> public long interval();1538067637;Get the current interval in milliseconds that is set on this builder.;public long interval() {_        return interval__    };get,the,current,interval,in,milliseconds,that,is,set,on,this,builder;public,long,interval,return,interval
DateHistogramAggregationBuilder -> public long interval();1544600864;Get the current interval in milliseconds that is set on this builder.;public long interval() {_        return interval__    };get,the,current,interval,in,milliseconds,that,is,set,on,this,builder;public,long,interval,return,interval
DateHistogramAggregationBuilder -> public long interval();1544732811;Get the current interval in milliseconds that is set on this builder.;public long interval() {_        return interval__    };get,the,current,interval,in,milliseconds,that,is,set,on,this,builder;public,long,interval,return,interval
DateHistogramAggregationBuilder -> public long interval();1548236405;Get the current interval in milliseconds that is set on this builder.;public long interval() {_        return interval__    };get,the,current,interval,in,milliseconds,that,is,set,on,this,builder;public,long,interval,return,interval
DateHistogramAggregationBuilder -> public long minDocCount();1524684173;Return the minimum count of documents that buckets need to have in order_to be included in the response.;public long minDocCount() {_        return minDocCount__    };return,the,minimum,count,of,documents,that,buckets,need,to,have,in,order,to,be,included,in,the,response;public,long,min,doc,count,return,min,doc,count
DateHistogramAggregationBuilder -> public long minDocCount();1526510804;Return the minimum count of documents that buckets need to have in order_to be included in the response.;public long minDocCount() {_        return minDocCount__    };return,the,minimum,count,of,documents,that,buckets,need,to,have,in,order,to,be,included,in,the,response;public,long,min,doc,count,return,min,doc,count
DateHistogramAggregationBuilder -> public long minDocCount();1527096592;Return the minimum count of documents that buckets need to have in order_to be included in the response.;public long minDocCount() {_        return minDocCount__    };return,the,minimum,count,of,documents,that,buckets,need,to,have,in,order,to,be,included,in,the,response;public,long,min,doc,count,return,min,doc,count
DateHistogramAggregationBuilder -> public long minDocCount();1529487105;Return the minimum count of documents that buckets need to have in order_to be included in the response.;public long minDocCount() {_        return minDocCount__    };return,the,minimum,count,of,documents,that,buckets,need,to,have,in,order,to,be,included,in,the,response;public,long,min,doc,count,return,min,doc,count
DateHistogramAggregationBuilder -> public long minDocCount();1538067637;Return the minimum count of documents that buckets need to have in order_to be included in the response.;public long minDocCount() {_        return minDocCount__    };return,the,minimum,count,of,documents,that,buckets,need,to,have,in,order,to,be,included,in,the,response;public,long,min,doc,count,return,min,doc,count
DateHistogramAggregationBuilder -> public long minDocCount();1544600864;Return the minimum count of documents that buckets need to have in order_to be included in the response.;public long minDocCount() {_        return minDocCount__    };return,the,minimum,count,of,documents,that,buckets,need,to,have,in,order,to,be,included,in,the,response;public,long,min,doc,count,return,min,doc,count
DateHistogramAggregationBuilder -> public long minDocCount();1544732811;Return the minimum count of documents that buckets need to have in order_to be included in the response.;public long minDocCount() {_        return minDocCount__    };return,the,minimum,count,of,documents,that,buckets,need,to,have,in,order,to,be,included,in,the,response;public,long,min,doc,count,return,min,doc,count
DateHistogramAggregationBuilder -> public long minDocCount();1548236405;Return the minimum count of documents that buckets need to have in order_to be included in the response.;public long minDocCount() {_        return minDocCount__    };return,the,minimum,count,of,documents,that,buckets,need,to,have,in,order,to,be,included,in,the,response;public,long,min,doc,count,return,min,doc,count
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder dateHistogramInterval(DateHistogramInterval dateHistogramInterval);1524684173;Set the interval on this builder, and return the builder so that calls can be chained._If both {@link #interval()} and {@link #dateHistogramInterval()} are set, then the_{@link #dateHistogramInterval()} wins.;public DateHistogramAggregationBuilder dateHistogramInterval(DateHistogramInterval dateHistogramInterval) {_        if (dateHistogramInterval == null) {_            throw new IllegalArgumentException("[dateHistogramInterval] must not be null: [" + name + "]")__        }_        this.dateHistogramInterval = dateHistogramInterval__        return this__    };set,the,interval,on,this,builder,and,return,the,builder,so,that,calls,can,be,chained,if,both,link,interval,and,link,date,histogram,interval,are,set,then,the,link,date,histogram,interval,wins;public,date,histogram,aggregation,builder,date,histogram,interval,date,histogram,interval,date,histogram,interval,if,date,histogram,interval,null,throw,new,illegal,argument,exception,date,histogram,interval,must,not,be,null,name,this,date,histogram,interval,date,histogram,interval,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder dateHistogramInterval(DateHistogramInterval dateHistogramInterval);1526510804;Set the interval on this builder, and return the builder so that calls can be chained._If both {@link #interval()} and {@link #dateHistogramInterval()} are set, then the_{@link #dateHistogramInterval()} wins.;public DateHistogramAggregationBuilder dateHistogramInterval(DateHistogramInterval dateHistogramInterval) {_        if (dateHistogramInterval == null) {_            throw new IllegalArgumentException("[dateHistogramInterval] must not be null: [" + name + "]")__        }_        this.dateHistogramInterval = dateHistogramInterval__        return this__    };set,the,interval,on,this,builder,and,return,the,builder,so,that,calls,can,be,chained,if,both,link,interval,and,link,date,histogram,interval,are,set,then,the,link,date,histogram,interval,wins;public,date,histogram,aggregation,builder,date,histogram,interval,date,histogram,interval,date,histogram,interval,if,date,histogram,interval,null,throw,new,illegal,argument,exception,date,histogram,interval,must,not,be,null,name,this,date,histogram,interval,date,histogram,interval,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder dateHistogramInterval(DateHistogramInterval dateHistogramInterval);1527096592;Set the interval on this builder, and return the builder so that calls can be chained._If both {@link #interval()} and {@link #dateHistogramInterval()} are set, then the_{@link #dateHistogramInterval()} wins.;public DateHistogramAggregationBuilder dateHistogramInterval(DateHistogramInterval dateHistogramInterval) {_        if (dateHistogramInterval == null) {_            throw new IllegalArgumentException("[dateHistogramInterval] must not be null: [" + name + "]")__        }_        this.dateHistogramInterval = dateHistogramInterval__        return this__    };set,the,interval,on,this,builder,and,return,the,builder,so,that,calls,can,be,chained,if,both,link,interval,and,link,date,histogram,interval,are,set,then,the,link,date,histogram,interval,wins;public,date,histogram,aggregation,builder,date,histogram,interval,date,histogram,interval,date,histogram,interval,if,date,histogram,interval,null,throw,new,illegal,argument,exception,date,histogram,interval,must,not,be,null,name,this,date,histogram,interval,date,histogram,interval,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder dateHistogramInterval(DateHistogramInterval dateHistogramInterval);1529487105;Set the interval on this builder, and return the builder so that calls can be chained._If both {@link #interval()} and {@link #dateHistogramInterval()} are set, then the_{@link #dateHistogramInterval()} wins.;public DateHistogramAggregationBuilder dateHistogramInterval(DateHistogramInterval dateHistogramInterval) {_        if (dateHistogramInterval == null) {_            throw new IllegalArgumentException("[dateHistogramInterval] must not be null: [" + name + "]")__        }_        this.dateHistogramInterval = dateHistogramInterval__        return this__    };set,the,interval,on,this,builder,and,return,the,builder,so,that,calls,can,be,chained,if,both,link,interval,and,link,date,histogram,interval,are,set,then,the,link,date,histogram,interval,wins;public,date,histogram,aggregation,builder,date,histogram,interval,date,histogram,interval,date,histogram,interval,if,date,histogram,interval,null,throw,new,illegal,argument,exception,date,histogram,interval,must,not,be,null,name,this,date,histogram,interval,date,histogram,interval,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder dateHistogramInterval(DateHistogramInterval dateHistogramInterval);1538067637;Set the interval on this builder, and return the builder so that calls can be chained._If both {@link #interval()} and {@link #dateHistogramInterval()} are set, then the_{@link #dateHistogramInterval()} wins.;public DateHistogramAggregationBuilder dateHistogramInterval(DateHistogramInterval dateHistogramInterval) {_        if (dateHistogramInterval == null) {_            throw new IllegalArgumentException("[dateHistogramInterval] must not be null: [" + name + "]")__        }_        this.dateHistogramInterval = dateHistogramInterval__        return this__    };set,the,interval,on,this,builder,and,return,the,builder,so,that,calls,can,be,chained,if,both,link,interval,and,link,date,histogram,interval,are,set,then,the,link,date,histogram,interval,wins;public,date,histogram,aggregation,builder,date,histogram,interval,date,histogram,interval,date,histogram,interval,if,date,histogram,interval,null,throw,new,illegal,argument,exception,date,histogram,interval,must,not,be,null,name,this,date,histogram,interval,date,histogram,interval,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder dateHistogramInterval(DateHistogramInterval dateHistogramInterval);1544600864;Set the interval on this builder, and return the builder so that calls can be chained._If both {@link #interval()} and {@link #dateHistogramInterval()} are set, then the_{@link #dateHistogramInterval()} wins.;public DateHistogramAggregationBuilder dateHistogramInterval(DateHistogramInterval dateHistogramInterval) {_        if (dateHistogramInterval == null) {_            throw new IllegalArgumentException("[dateHistogramInterval] must not be null: [" + name + "]")__        }_        this.dateHistogramInterval = dateHistogramInterval__        return this__    };set,the,interval,on,this,builder,and,return,the,builder,so,that,calls,can,be,chained,if,both,link,interval,and,link,date,histogram,interval,are,set,then,the,link,date,histogram,interval,wins;public,date,histogram,aggregation,builder,date,histogram,interval,date,histogram,interval,date,histogram,interval,if,date,histogram,interval,null,throw,new,illegal,argument,exception,date,histogram,interval,must,not,be,null,name,this,date,histogram,interval,date,histogram,interval,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder dateHistogramInterval(DateHistogramInterval dateHistogramInterval);1544732811;Set the interval on this builder, and return the builder so that calls can be chained._If both {@link #interval()} and {@link #dateHistogramInterval()} are set, then the_{@link #dateHistogramInterval()} wins.;public DateHistogramAggregationBuilder dateHistogramInterval(DateHistogramInterval dateHistogramInterval) {_        if (dateHistogramInterval == null) {_            throw new IllegalArgumentException("[dateHistogramInterval] must not be null: [" + name + "]")__        }_        this.dateHistogramInterval = dateHistogramInterval__        return this__    };set,the,interval,on,this,builder,and,return,the,builder,so,that,calls,can,be,chained,if,both,link,interval,and,link,date,histogram,interval,are,set,then,the,link,date,histogram,interval,wins;public,date,histogram,aggregation,builder,date,histogram,interval,date,histogram,interval,date,histogram,interval,if,date,histogram,interval,null,throw,new,illegal,argument,exception,date,histogram,interval,must,not,be,null,name,this,date,histogram,interval,date,histogram,interval,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder dateHistogramInterval(DateHistogramInterval dateHistogramInterval);1548236405;Set the interval on this builder, and return the builder so that calls can be chained._If both {@link #interval()} and {@link #dateHistogramInterval()} are set, then the_{@link #dateHistogramInterval()} wins.;public DateHistogramAggregationBuilder dateHistogramInterval(DateHistogramInterval dateHistogramInterval) {_        if (dateHistogramInterval == null) {_            throw new IllegalArgumentException("[dateHistogramInterval] must not be null: [" + name + "]")__        }_        this.dateHistogramInterval = dateHistogramInterval__        return this__    };set,the,interval,on,this,builder,and,return,the,builder,so,that,calls,can,be,chained,if,both,link,interval,and,link,date,histogram,interval,are,set,then,the,link,date,histogram,interval,wins;public,date,histogram,aggregation,builder,date,histogram,interval,date,histogram,interval,date,histogram,interval,if,date,histogram,interval,null,throw,new,illegal,argument,exception,date,histogram,interval,must,not,be,null,name,this,date,histogram,interval,date,histogram,interval,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder extendedBounds(ExtendedBounds extendedBounds);1524684173;Set extended bounds on this histogram, so that buckets would also be_generated on intervals that did not match any documents.;public DateHistogramAggregationBuilder extendedBounds(ExtendedBounds extendedBounds) {_        if (extendedBounds == null) {_            throw new IllegalArgumentException("[extendedBounds] must not be null: [" + name + "]")__        }_        this.extendedBounds = extendedBounds__        return this__    };set,extended,bounds,on,this,histogram,so,that,buckets,would,also,be,generated,on,intervals,that,did,not,match,any,documents;public,date,histogram,aggregation,builder,extended,bounds,extended,bounds,extended,bounds,if,extended,bounds,null,throw,new,illegal,argument,exception,extended,bounds,must,not,be,null,name,this,extended,bounds,extended,bounds,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder extendedBounds(ExtendedBounds extendedBounds);1526510804;Set extended bounds on this histogram, so that buckets would also be_generated on intervals that did not match any documents.;public DateHistogramAggregationBuilder extendedBounds(ExtendedBounds extendedBounds) {_        if (extendedBounds == null) {_            throw new IllegalArgumentException("[extendedBounds] must not be null: [" + name + "]")__        }_        this.extendedBounds = extendedBounds__        return this__    };set,extended,bounds,on,this,histogram,so,that,buckets,would,also,be,generated,on,intervals,that,did,not,match,any,documents;public,date,histogram,aggregation,builder,extended,bounds,extended,bounds,extended,bounds,if,extended,bounds,null,throw,new,illegal,argument,exception,extended,bounds,must,not,be,null,name,this,extended,bounds,extended,bounds,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder extendedBounds(ExtendedBounds extendedBounds);1527096592;Set extended bounds on this histogram, so that buckets would also be_generated on intervals that did not match any documents.;public DateHistogramAggregationBuilder extendedBounds(ExtendedBounds extendedBounds) {_        if (extendedBounds == null) {_            throw new IllegalArgumentException("[extendedBounds] must not be null: [" + name + "]")__        }_        this.extendedBounds = extendedBounds__        return this__    };set,extended,bounds,on,this,histogram,so,that,buckets,would,also,be,generated,on,intervals,that,did,not,match,any,documents;public,date,histogram,aggregation,builder,extended,bounds,extended,bounds,extended,bounds,if,extended,bounds,null,throw,new,illegal,argument,exception,extended,bounds,must,not,be,null,name,this,extended,bounds,extended,bounds,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder extendedBounds(ExtendedBounds extendedBounds);1529487105;Set extended bounds on this histogram, so that buckets would also be_generated on intervals that did not match any documents.;public DateHistogramAggregationBuilder extendedBounds(ExtendedBounds extendedBounds) {_        if (extendedBounds == null) {_            throw new IllegalArgumentException("[extendedBounds] must not be null: [" + name + "]")__        }_        this.extendedBounds = extendedBounds__        return this__    };set,extended,bounds,on,this,histogram,so,that,buckets,would,also,be,generated,on,intervals,that,did,not,match,any,documents;public,date,histogram,aggregation,builder,extended,bounds,extended,bounds,extended,bounds,if,extended,bounds,null,throw,new,illegal,argument,exception,extended,bounds,must,not,be,null,name,this,extended,bounds,extended,bounds,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder extendedBounds(ExtendedBounds extendedBounds);1538067637;Set extended bounds on this histogram, so that buckets would also be_generated on intervals that did not match any documents.;public DateHistogramAggregationBuilder extendedBounds(ExtendedBounds extendedBounds) {_        if (extendedBounds == null) {_            throw new IllegalArgumentException("[extendedBounds] must not be null: [" + name + "]")__        }_        this.extendedBounds = extendedBounds__        return this__    };set,extended,bounds,on,this,histogram,so,that,buckets,would,also,be,generated,on,intervals,that,did,not,match,any,documents;public,date,histogram,aggregation,builder,extended,bounds,extended,bounds,extended,bounds,if,extended,bounds,null,throw,new,illegal,argument,exception,extended,bounds,must,not,be,null,name,this,extended,bounds,extended,bounds,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder extendedBounds(ExtendedBounds extendedBounds);1544600864;Set extended bounds on this histogram, so that buckets would also be_generated on intervals that did not match any documents.;public DateHistogramAggregationBuilder extendedBounds(ExtendedBounds extendedBounds) {_        if (extendedBounds == null) {_            throw new IllegalArgumentException("[extendedBounds] must not be null: [" + name + "]")__        }_        this.extendedBounds = extendedBounds__        return this__    };set,extended,bounds,on,this,histogram,so,that,buckets,would,also,be,generated,on,intervals,that,did,not,match,any,documents;public,date,histogram,aggregation,builder,extended,bounds,extended,bounds,extended,bounds,if,extended,bounds,null,throw,new,illegal,argument,exception,extended,bounds,must,not,be,null,name,this,extended,bounds,extended,bounds,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder extendedBounds(ExtendedBounds extendedBounds);1544732811;Set extended bounds on this histogram, so that buckets would also be_generated on intervals that did not match any documents.;public DateHistogramAggregationBuilder extendedBounds(ExtendedBounds extendedBounds) {_        if (extendedBounds == null) {_            throw new IllegalArgumentException("[extendedBounds] must not be null: [" + name + "]")__        }_        this.extendedBounds = extendedBounds__        return this__    };set,extended,bounds,on,this,histogram,so,that,buckets,would,also,be,generated,on,intervals,that,did,not,match,any,documents;public,date,histogram,aggregation,builder,extended,bounds,extended,bounds,extended,bounds,if,extended,bounds,null,throw,new,illegal,argument,exception,extended,bounds,must,not,be,null,name,this,extended,bounds,extended,bounds,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder extendedBounds(ExtendedBounds extendedBounds);1548236405;Set extended bounds on this histogram, so that buckets would also be_generated on intervals that did not match any documents.;public DateHistogramAggregationBuilder extendedBounds(ExtendedBounds extendedBounds) {_        if (extendedBounds == null) {_            throw new IllegalArgumentException("[extendedBounds] must not be null: [" + name + "]")__        }_        this.extendedBounds = extendedBounds__        return this__    };set,extended,bounds,on,this,histogram,so,that,buckets,would,also,be,generated,on,intervals,that,did,not,match,any,documents;public,date,histogram,aggregation,builder,extended,bounds,extended,bounds,extended,bounds,if,extended,bounds,null,throw,new,illegal,argument,exception,extended,bounds,must,not,be,null,name,this,extended,bounds,extended,bounds,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder minDocCount(long minDocCount);1524684173;Set the minimum count of matching documents that buckets need to have_and return this builder so that calls can be chained.;public DateHistogramAggregationBuilder minDocCount(long minDocCount) {_        if (minDocCount < 0) {_            throw new IllegalArgumentException(_                    "[minDocCount] must be greater than or equal to 0. Found [" + minDocCount + "] in [" + name + "]")__        }_        this.minDocCount = minDocCount__        return this__    };set,the,minimum,count,of,matching,documents,that,buckets,need,to,have,and,return,this,builder,so,that,calls,can,be,chained;public,date,histogram,aggregation,builder,min,doc,count,long,min,doc,count,if,min,doc,count,0,throw,new,illegal,argument,exception,min,doc,count,must,be,greater,than,or,equal,to,0,found,min,doc,count,in,name,this,min,doc,count,min,doc,count,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder minDocCount(long minDocCount);1526510804;Set the minimum count of matching documents that buckets need to have_and return this builder so that calls can be chained.;public DateHistogramAggregationBuilder minDocCount(long minDocCount) {_        if (minDocCount < 0) {_            throw new IllegalArgumentException(_                    "[minDocCount] must be greater than or equal to 0. Found [" + minDocCount + "] in [" + name + "]")__        }_        this.minDocCount = minDocCount__        return this__    };set,the,minimum,count,of,matching,documents,that,buckets,need,to,have,and,return,this,builder,so,that,calls,can,be,chained;public,date,histogram,aggregation,builder,min,doc,count,long,min,doc,count,if,min,doc,count,0,throw,new,illegal,argument,exception,min,doc,count,must,be,greater,than,or,equal,to,0,found,min,doc,count,in,name,this,min,doc,count,min,doc,count,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder minDocCount(long minDocCount);1527096592;Set the minimum count of matching documents that buckets need to have_and return this builder so that calls can be chained.;public DateHistogramAggregationBuilder minDocCount(long minDocCount) {_        if (minDocCount < 0) {_            throw new IllegalArgumentException(_                    "[minDocCount] must be greater than or equal to 0. Found [" + minDocCount + "] in [" + name + "]")__        }_        this.minDocCount = minDocCount__        return this__    };set,the,minimum,count,of,matching,documents,that,buckets,need,to,have,and,return,this,builder,so,that,calls,can,be,chained;public,date,histogram,aggregation,builder,min,doc,count,long,min,doc,count,if,min,doc,count,0,throw,new,illegal,argument,exception,min,doc,count,must,be,greater,than,or,equal,to,0,found,min,doc,count,in,name,this,min,doc,count,min,doc,count,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder minDocCount(long minDocCount);1529487105;Set the minimum count of matching documents that buckets need to have_and return this builder so that calls can be chained.;public DateHistogramAggregationBuilder minDocCount(long minDocCount) {_        if (minDocCount < 0) {_            throw new IllegalArgumentException(_                    "[minDocCount] must be greater than or equal to 0. Found [" + minDocCount + "] in [" + name + "]")__        }_        this.minDocCount = minDocCount__        return this__    };set,the,minimum,count,of,matching,documents,that,buckets,need,to,have,and,return,this,builder,so,that,calls,can,be,chained;public,date,histogram,aggregation,builder,min,doc,count,long,min,doc,count,if,min,doc,count,0,throw,new,illegal,argument,exception,min,doc,count,must,be,greater,than,or,equal,to,0,found,min,doc,count,in,name,this,min,doc,count,min,doc,count,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder minDocCount(long minDocCount);1538067637;Set the minimum count of matching documents that buckets need to have_and return this builder so that calls can be chained.;public DateHistogramAggregationBuilder minDocCount(long minDocCount) {_        if (minDocCount < 0) {_            throw new IllegalArgumentException(_                    "[minDocCount] must be greater than or equal to 0. Found [" + minDocCount + "] in [" + name + "]")__        }_        this.minDocCount = minDocCount__        return this__    };set,the,minimum,count,of,matching,documents,that,buckets,need,to,have,and,return,this,builder,so,that,calls,can,be,chained;public,date,histogram,aggregation,builder,min,doc,count,long,min,doc,count,if,min,doc,count,0,throw,new,illegal,argument,exception,min,doc,count,must,be,greater,than,or,equal,to,0,found,min,doc,count,in,name,this,min,doc,count,min,doc,count,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder minDocCount(long minDocCount);1544600864;Set the minimum count of matching documents that buckets need to have_and return this builder so that calls can be chained.;public DateHistogramAggregationBuilder minDocCount(long minDocCount) {_        if (minDocCount < 0) {_            throw new IllegalArgumentException(_                    "[minDocCount] must be greater than or equal to 0. Found [" + minDocCount + "] in [" + name + "]")__        }_        this.minDocCount = minDocCount__        return this__    };set,the,minimum,count,of,matching,documents,that,buckets,need,to,have,and,return,this,builder,so,that,calls,can,be,chained;public,date,histogram,aggregation,builder,min,doc,count,long,min,doc,count,if,min,doc,count,0,throw,new,illegal,argument,exception,min,doc,count,must,be,greater,than,or,equal,to,0,found,min,doc,count,in,name,this,min,doc,count,min,doc,count,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder minDocCount(long minDocCount);1544732811;Set the minimum count of matching documents that buckets need to have_and return this builder so that calls can be chained.;public DateHistogramAggregationBuilder minDocCount(long minDocCount) {_        if (minDocCount < 0) {_            throw new IllegalArgumentException(_                    "[minDocCount] must be greater than or equal to 0. Found [" + minDocCount + "] in [" + name + "]")__        }_        this.minDocCount = minDocCount__        return this__    };set,the,minimum,count,of,matching,documents,that,buckets,need,to,have,and,return,this,builder,so,that,calls,can,be,chained;public,date,histogram,aggregation,builder,min,doc,count,long,min,doc,count,if,min,doc,count,0,throw,new,illegal,argument,exception,min,doc,count,must,be,greater,than,or,equal,to,0,found,min,doc,count,in,name,this,min,doc,count,min,doc,count,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder minDocCount(long minDocCount);1548236405;Set the minimum count of matching documents that buckets need to have_and return this builder so that calls can be chained.;public DateHistogramAggregationBuilder minDocCount(long minDocCount) {_        if (minDocCount < 0) {_            throw new IllegalArgumentException(_                    "[minDocCount] must be greater than or equal to 0. Found [" + minDocCount + "] in [" + name + "]")__        }_        this.minDocCount = minDocCount__        return this__    };set,the,minimum,count,of,matching,documents,that,buckets,need,to,have,and,return,this,builder,so,that,calls,can,be,chained;public,date,histogram,aggregation,builder,min,doc,count,long,min,doc,count,if,min,doc,count,0,throw,new,illegal,argument,exception,min,doc,count,must,be,greater,than,or,equal,to,0,found,min,doc,count,in,name,this,min,doc,count,min,doc,count,return,this
DateHistogramAggregationBuilder -> private TimeValue getIntervalAsTimeValue();1526510804;Get the interval as a {@link TimeValue}. Should only be called if_{@link #getIntervalAsDateTimeUnit()} returned {@code null}.;private TimeValue getIntervalAsTimeValue() {_        if (dateHistogramInterval != null) {_            return TimeValue.parseTimeValue(dateHistogramInterval.toString(), null, getClass().getSimpleName() + ".interval")__        } else {_            return TimeValue.timeValueMillis(interval)__        }_    };get,the,interval,as,a,link,time,value,should,only,be,called,if,link,get,interval,as,date,time,unit,returned,code,null;private,time,value,get,interval,as,time,value,if,date,histogram,interval,null,return,time,value,parse,time,value,date,histogram,interval,to,string,null,get,class,get,simple,name,interval,else,return,time,value,time,value,millis,interval
DateHistogramAggregationBuilder -> private TimeValue getIntervalAsTimeValue();1527096592;Get the interval as a {@link TimeValue}. Should only be called if_{@link #getIntervalAsDateTimeUnit()} returned {@code null}.;private TimeValue getIntervalAsTimeValue() {_        if (dateHistogramInterval != null) {_            return TimeValue.parseTimeValue(dateHistogramInterval.toString(), null, getClass().getSimpleName() + ".interval")__        } else {_            return TimeValue.timeValueMillis(interval)__        }_    };get,the,interval,as,a,link,time,value,should,only,be,called,if,link,get,interval,as,date,time,unit,returned,code,null;private,time,value,get,interval,as,time,value,if,date,histogram,interval,null,return,time,value,parse,time,value,date,histogram,interval,to,string,null,get,class,get,simple,name,interval,else,return,time,value,time,value,millis,interval
DateHistogramAggregationBuilder -> private TimeValue getIntervalAsTimeValue();1529487105;Get the interval as a {@link TimeValue}. Should only be called if_{@link #getIntervalAsDateTimeUnit()} returned {@code null}.;private TimeValue getIntervalAsTimeValue() {_        if (dateHistogramInterval != null) {_            return TimeValue.parseTimeValue(dateHistogramInterval.toString(), null, getClass().getSimpleName() + ".interval")__        } else {_            return TimeValue.timeValueMillis(interval)__        }_    };get,the,interval,as,a,link,time,value,should,only,be,called,if,link,get,interval,as,date,time,unit,returned,code,null;private,time,value,get,interval,as,time,value,if,date,histogram,interval,null,return,time,value,parse,time,value,date,histogram,interval,to,string,null,get,class,get,simple,name,interval,else,return,time,value,time,value,millis,interval
DateHistogramAggregationBuilder -> private TimeValue getIntervalAsTimeValue();1538067637;Get the interval as a {@link TimeValue}. Should only be called if_{@link #getIntervalAsDateTimeUnit()} returned {@code null}.;private TimeValue getIntervalAsTimeValue() {_        if (dateHistogramInterval != null) {_            return TimeValue.parseTimeValue(dateHistogramInterval.toString(), null, getClass().getSimpleName() + ".interval")__        } else {_            return TimeValue.timeValueMillis(interval)__        }_    };get,the,interval,as,a,link,time,value,should,only,be,called,if,link,get,interval,as,date,time,unit,returned,code,null;private,time,value,get,interval,as,time,value,if,date,histogram,interval,null,return,time,value,parse,time,value,date,histogram,interval,to,string,null,get,class,get,simple,name,interval,else,return,time,value,time,value,millis,interval
DateHistogramAggregationBuilder -> private TimeValue getIntervalAsTimeValue();1544600864;Get the interval as a {@link TimeValue}. Should only be called if_{@link #getIntervalAsDateTimeUnit()} returned {@code null}.;private TimeValue getIntervalAsTimeValue() {_        if (dateHistogramInterval != null) {_            return TimeValue.parseTimeValue(dateHistogramInterval.toString(), null, getClass().getSimpleName() + ".interval")__        } else {_            return TimeValue.timeValueMillis(interval)__        }_    };get,the,interval,as,a,link,time,value,should,only,be,called,if,link,get,interval,as,date,time,unit,returned,code,null;private,time,value,get,interval,as,time,value,if,date,histogram,interval,null,return,time,value,parse,time,value,date,histogram,interval,to,string,null,get,class,get,simple,name,interval,else,return,time,value,time,value,millis,interval
DateHistogramAggregationBuilder -> private TimeValue getIntervalAsTimeValue();1544732811;Get the interval as a {@link TimeValue}. Should only be called if_{@link #getIntervalAsDateTimeUnit()} returned {@code null}.;private TimeValue getIntervalAsTimeValue() {_        if (dateHistogramInterval != null) {_            return TimeValue.parseTimeValue(dateHistogramInterval.toString(), null, getClass().getSimpleName() + ".interval")__        } else {_            return TimeValue.timeValueMillis(interval)__        }_    };get,the,interval,as,a,link,time,value,should,only,be,called,if,link,get,interval,as,date,time,unit,returned,code,null;private,time,value,get,interval,as,time,value,if,date,histogram,interval,null,return,time,value,parse,time,value,date,histogram,interval,to,string,null,get,class,get,simple,name,interval,else,return,time,value,time,value,millis,interval
DateHistogramAggregationBuilder -> private TimeValue getIntervalAsTimeValue();1548236405;Get the interval as a {@link TimeValue}. Should only be called if_{@link #getIntervalAsDateTimeUnit()} returned {@code null}.;private TimeValue getIntervalAsTimeValue() {_        if (dateHistogramInterval != null) {_            return TimeValue.parseTimeValue(dateHistogramInterval.toString(), null, getClass().getSimpleName() + ".interval")__        } else {_            return TimeValue.timeValueMillis(interval)__        }_    };get,the,interval,as,a,link,time,value,should,only,be,called,if,link,get,interval,as,date,time,unit,returned,code,null;private,time,value,get,interval,as,time,value,if,date,histogram,interval,null,return,time,value,parse,time,value,date,histogram,interval,to,string,null,get,class,get,simple,name,interval,else,return,time,value,time,value,millis,interval
DateHistogramAggregationBuilder -> private DateTimeUnit getIntervalAsDateTimeUnit();1526510804;Return the interval as a date time unit if applicable. If this returns_{@code null} then it means that the interval is expressed as a fixed_{@link TimeValue} and may be accessed via_{@link #getIntervalAsTimeValue()}.;private DateTimeUnit getIntervalAsDateTimeUnit() {_        if (dateHistogramInterval != null) {_            return DATE_FIELD_UNITS.get(dateHistogramInterval.toString())__        }_        return null__    };return,the,interval,as,a,date,time,unit,if,applicable,if,this,returns,code,null,then,it,means,that,the,interval,is,expressed,as,a,fixed,link,time,value,and,may,be,accessed,via,link,get,interval,as,time,value;private,date,time,unit,get,interval,as,date,time,unit,if,date,histogram,interval,null,return,get,date,histogram,interval,to,string,return,null
DateHistogramAggregationBuilder -> private DateTimeUnit getIntervalAsDateTimeUnit();1527096592;Return the interval as a date time unit if applicable. If this returns_{@code null} then it means that the interval is expressed as a fixed_{@link TimeValue} and may be accessed via_{@link #getIntervalAsTimeValue()}.;private DateTimeUnit getIntervalAsDateTimeUnit() {_        if (dateHistogramInterval != null) {_            return DATE_FIELD_UNITS.get(dateHistogramInterval.toString())__        }_        return null__    };return,the,interval,as,a,date,time,unit,if,applicable,if,this,returns,code,null,then,it,means,that,the,interval,is,expressed,as,a,fixed,link,time,value,and,may,be,accessed,via,link,get,interval,as,time,value;private,date,time,unit,get,interval,as,date,time,unit,if,date,histogram,interval,null,return,get,date,histogram,interval,to,string,return,null
DateHistogramAggregationBuilder -> private DateTimeUnit getIntervalAsDateTimeUnit();1529487105;Return the interval as a date time unit if applicable. If this returns_{@code null} then it means that the interval is expressed as a fixed_{@link TimeValue} and may be accessed via_{@link #getIntervalAsTimeValue()}.;private DateTimeUnit getIntervalAsDateTimeUnit() {_        if (dateHistogramInterval != null) {_            return DATE_FIELD_UNITS.get(dateHistogramInterval.toString())__        }_        return null__    };return,the,interval,as,a,date,time,unit,if,applicable,if,this,returns,code,null,then,it,means,that,the,interval,is,expressed,as,a,fixed,link,time,value,and,may,be,accessed,via,link,get,interval,as,time,value;private,date,time,unit,get,interval,as,date,time,unit,if,date,histogram,interval,null,return,get,date,histogram,interval,to,string,return,null
DateHistogramAggregationBuilder -> private DateTimeUnit getIntervalAsDateTimeUnit();1538067637;Return the interval as a date time unit if applicable. If this returns_{@code null} then it means that the interval is expressed as a fixed_{@link TimeValue} and may be accessed via_{@link #getIntervalAsTimeValue()}.;private DateTimeUnit getIntervalAsDateTimeUnit() {_        if (dateHistogramInterval != null) {_            return DATE_FIELD_UNITS.get(dateHistogramInterval.toString())__        }_        return null__    };return,the,interval,as,a,date,time,unit,if,applicable,if,this,returns,code,null,then,it,means,that,the,interval,is,expressed,as,a,fixed,link,time,value,and,may,be,accessed,via,link,get,interval,as,time,value;private,date,time,unit,get,interval,as,date,time,unit,if,date,histogram,interval,null,return,get,date,histogram,interval,to,string,return,null
DateHistogramAggregationBuilder -> private DateTimeUnit getIntervalAsDateTimeUnit();1544600864;Return the interval as a date time unit if applicable. If this returns_{@code null} then it means that the interval is expressed as a fixed_{@link TimeValue} and may be accessed via_{@link #getIntervalAsTimeValue()}.;private DateTimeUnit getIntervalAsDateTimeUnit() {_        if (dateHistogramInterval != null) {_            return DATE_FIELD_UNITS.get(dateHistogramInterval.toString())__        }_        return null__    };return,the,interval,as,a,date,time,unit,if,applicable,if,this,returns,code,null,then,it,means,that,the,interval,is,expressed,as,a,fixed,link,time,value,and,may,be,accessed,via,link,get,interval,as,time,value;private,date,time,unit,get,interval,as,date,time,unit,if,date,histogram,interval,null,return,get,date,histogram,interval,to,string,return,null
DateHistogramAggregationBuilder -> private DateTimeUnit getIntervalAsDateTimeUnit();1544732811;Return the interval as a date time unit if applicable. If this returns_{@code null} then it means that the interval is expressed as a fixed_{@link TimeValue} and may be accessed via_{@link #getIntervalAsTimeValue()}.;private DateTimeUnit getIntervalAsDateTimeUnit() {_        if (dateHistogramInterval != null) {_            return DATE_FIELD_UNITS.get(dateHistogramInterval.toString())__        }_        return null__    };return,the,interval,as,a,date,time,unit,if,applicable,if,this,returns,code,null,then,it,means,that,the,interval,is,expressed,as,a,fixed,link,time,value,and,may,be,accessed,via,link,get,interval,as,time,value;private,date,time,unit,get,interval,as,date,time,unit,if,date,histogram,interval,null,return,get,date,histogram,interval,to,string,return,null
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder interval(long interval);1524684173;Set the interval on this builder, and return the builder so that calls can be chained._If both {@link #interval()} and {@link #dateHistogramInterval()} are set, then the_{@link #dateHistogramInterval()} wins.;public DateHistogramAggregationBuilder interval(long interval) {_        if (interval < 1) {_            throw new IllegalArgumentException("[interval] must be 1 or greater for histogram aggregation [" + name + "]")__        }_        this.interval = interval__        return this__    };set,the,interval,on,this,builder,and,return,the,builder,so,that,calls,can,be,chained,if,both,link,interval,and,link,date,histogram,interval,are,set,then,the,link,date,histogram,interval,wins;public,date,histogram,aggregation,builder,interval,long,interval,if,interval,1,throw,new,illegal,argument,exception,interval,must,be,1,or,greater,for,histogram,aggregation,name,this,interval,interval,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder interval(long interval);1526510804;Set the interval on this builder, and return the builder so that calls can be chained._If both {@link #interval()} and {@link #dateHistogramInterval()} are set, then the_{@link #dateHistogramInterval()} wins.;public DateHistogramAggregationBuilder interval(long interval) {_        if (interval < 1) {_            throw new IllegalArgumentException("[interval] must be 1 or greater for histogram aggregation [" + name + "]")__        }_        this.interval = interval__        return this__    };set,the,interval,on,this,builder,and,return,the,builder,so,that,calls,can,be,chained,if,both,link,interval,and,link,date,histogram,interval,are,set,then,the,link,date,histogram,interval,wins;public,date,histogram,aggregation,builder,interval,long,interval,if,interval,1,throw,new,illegal,argument,exception,interval,must,be,1,or,greater,for,histogram,aggregation,name,this,interval,interval,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder interval(long interval);1527096592;Set the interval on this builder, and return the builder so that calls can be chained._If both {@link #interval()} and {@link #dateHistogramInterval()} are set, then the_{@link #dateHistogramInterval()} wins.;public DateHistogramAggregationBuilder interval(long interval) {_        if (interval < 1) {_            throw new IllegalArgumentException("[interval] must be 1 or greater for histogram aggregation [" + name + "]")__        }_        this.interval = interval__        return this__    };set,the,interval,on,this,builder,and,return,the,builder,so,that,calls,can,be,chained,if,both,link,interval,and,link,date,histogram,interval,are,set,then,the,link,date,histogram,interval,wins;public,date,histogram,aggregation,builder,interval,long,interval,if,interval,1,throw,new,illegal,argument,exception,interval,must,be,1,or,greater,for,histogram,aggregation,name,this,interval,interval,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder interval(long interval);1529487105;Set the interval on this builder, and return the builder so that calls can be chained._If both {@link #interval()} and {@link #dateHistogramInterval()} are set, then the_{@link #dateHistogramInterval()} wins.;public DateHistogramAggregationBuilder interval(long interval) {_        if (interval < 1) {_            throw new IllegalArgumentException("[interval] must be 1 or greater for histogram aggregation [" + name + "]")__        }_        this.interval = interval__        return this__    };set,the,interval,on,this,builder,and,return,the,builder,so,that,calls,can,be,chained,if,both,link,interval,and,link,date,histogram,interval,are,set,then,the,link,date,histogram,interval,wins;public,date,histogram,aggregation,builder,interval,long,interval,if,interval,1,throw,new,illegal,argument,exception,interval,must,be,1,or,greater,for,histogram,aggregation,name,this,interval,interval,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder interval(long interval);1538067637;Set the interval on this builder, and return the builder so that calls can be chained._If both {@link #interval()} and {@link #dateHistogramInterval()} are set, then the_{@link #dateHistogramInterval()} wins.;public DateHistogramAggregationBuilder interval(long interval) {_        if (interval < 1) {_            throw new IllegalArgumentException("[interval] must be 1 or greater for histogram aggregation [" + name + "]")__        }_        this.interval = interval__        return this__    };set,the,interval,on,this,builder,and,return,the,builder,so,that,calls,can,be,chained,if,both,link,interval,and,link,date,histogram,interval,are,set,then,the,link,date,histogram,interval,wins;public,date,histogram,aggregation,builder,interval,long,interval,if,interval,1,throw,new,illegal,argument,exception,interval,must,be,1,or,greater,for,histogram,aggregation,name,this,interval,interval,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder interval(long interval);1544600864;Set the interval on this builder, and return the builder so that calls can be chained._If both {@link #interval()} and {@link #dateHistogramInterval()} are set, then the_{@link #dateHistogramInterval()} wins.;public DateHistogramAggregationBuilder interval(long interval) {_        if (interval < 1) {_            throw new IllegalArgumentException("[interval] must be 1 or greater for histogram aggregation [" + name + "]")__        }_        this.interval = interval__        return this__    };set,the,interval,on,this,builder,and,return,the,builder,so,that,calls,can,be,chained,if,both,link,interval,and,link,date,histogram,interval,are,set,then,the,link,date,histogram,interval,wins;public,date,histogram,aggregation,builder,interval,long,interval,if,interval,1,throw,new,illegal,argument,exception,interval,must,be,1,or,greater,for,histogram,aggregation,name,this,interval,interval,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder interval(long interval);1544732811;Set the interval on this builder, and return the builder so that calls can be chained._If both {@link #interval()} and {@link #dateHistogramInterval()} are set, then the_{@link #dateHistogramInterval()} wins.;public DateHistogramAggregationBuilder interval(long interval) {_        if (interval < 1) {_            throw new IllegalArgumentException("[interval] must be 1 or greater for histogram aggregation [" + name + "]")__        }_        this.interval = interval__        return this__    };set,the,interval,on,this,builder,and,return,the,builder,so,that,calls,can,be,chained,if,both,link,interval,and,link,date,histogram,interval,are,set,then,the,link,date,histogram,interval,wins;public,date,histogram,aggregation,builder,interval,long,interval,if,interval,1,throw,new,illegal,argument,exception,interval,must,be,1,or,greater,for,histogram,aggregation,name,this,interval,interval,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder interval(long interval);1548236405;Set the interval on this builder, and return the builder so that calls can be chained._If both {@link #interval()} and {@link #dateHistogramInterval()} are set, then the_{@link #dateHistogramInterval()} wins.;public DateHistogramAggregationBuilder interval(long interval) {_        if (interval < 1) {_            throw new IllegalArgumentException("[interval] must be 1 or greater for histogram aggregation [" + name + "]")__        }_        this.interval = interval__        return this__    };set,the,interval,on,this,builder,and,return,the,builder,so,that,calls,can,be,chained,if,both,link,interval,and,link,date,histogram,interval,are,set,then,the,link,date,histogram,interval,wins;public,date,histogram,aggregation,builder,interval,long,interval,if,interval,1,throw,new,illegal,argument,exception,interval,must,be,1,or,greater,for,histogram,aggregation,name,this,interval,interval,return,this
DateHistogramAggregationBuilder -> public long offset();1524684173;Get the offset to use when rounding, which is a number of milliseconds.;public long offset() {_        return offset__    };get,the,offset,to,use,when,rounding,which,is,a,number,of,milliseconds;public,long,offset,return,offset
DateHistogramAggregationBuilder -> public long offset();1526510804;Get the offset to use when rounding, which is a number of milliseconds.;public long offset() {_        return offset__    };get,the,offset,to,use,when,rounding,which,is,a,number,of,milliseconds;public,long,offset,return,offset
DateHistogramAggregationBuilder -> public long offset();1527096592;Get the offset to use when rounding, which is a number of milliseconds.;public long offset() {_        return offset__    };get,the,offset,to,use,when,rounding,which,is,a,number,of,milliseconds;public,long,offset,return,offset
DateHistogramAggregationBuilder -> public long offset();1529487105;Get the offset to use when rounding, which is a number of milliseconds.;public long offset() {_        return offset__    };get,the,offset,to,use,when,rounding,which,is,a,number,of,milliseconds;public,long,offset,return,offset
DateHistogramAggregationBuilder -> public long offset();1538067637;Get the offset to use when rounding, which is a number of milliseconds.;public long offset() {_        return offset__    };get,the,offset,to,use,when,rounding,which,is,a,number,of,milliseconds;public,long,offset,return,offset
DateHistogramAggregationBuilder -> public long offset();1544600864;Get the offset to use when rounding, which is a number of milliseconds.;public long offset() {_        return offset__    };get,the,offset,to,use,when,rounding,which,is,a,number,of,milliseconds;public,long,offset,return,offset
DateHistogramAggregationBuilder -> public long offset();1544732811;Get the offset to use when rounding, which is a number of milliseconds.;public long offset() {_        return offset__    };get,the,offset,to,use,when,rounding,which,is,a,number,of,milliseconds;public,long,offset,return,offset
DateHistogramAggregationBuilder -> public long offset();1548236405;Get the offset to use when rounding, which is a number of milliseconds.;public long offset() {_        return offset__    };get,the,offset,to,use,when,rounding,which,is,a,number,of,milliseconds;public,long,offset,return,offset
DateHistogramAggregationBuilder -> public ExtendedBounds extendedBounds();1524684173;Return extended bounds for this histogram, or {@code null} if none are set.;public ExtendedBounds extendedBounds() {_        return extendedBounds__    };return,extended,bounds,for,this,histogram,or,code,null,if,none,are,set;public,extended,bounds,extended,bounds,return,extended,bounds
DateHistogramAggregationBuilder -> public ExtendedBounds extendedBounds();1526510804;Return extended bounds for this histogram, or {@code null} if none are set.;public ExtendedBounds extendedBounds() {_        return extendedBounds__    };return,extended,bounds,for,this,histogram,or,code,null,if,none,are,set;public,extended,bounds,extended,bounds,return,extended,bounds
DateHistogramAggregationBuilder -> public ExtendedBounds extendedBounds();1527096592;Return extended bounds for this histogram, or {@code null} if none are set.;public ExtendedBounds extendedBounds() {_        return extendedBounds__    };return,extended,bounds,for,this,histogram,or,code,null,if,none,are,set;public,extended,bounds,extended,bounds,return,extended,bounds
DateHistogramAggregationBuilder -> public ExtendedBounds extendedBounds();1529487105;Return extended bounds for this histogram, or {@code null} if none are set.;public ExtendedBounds extendedBounds() {_        return extendedBounds__    };return,extended,bounds,for,this,histogram,or,code,null,if,none,are,set;public,extended,bounds,extended,bounds,return,extended,bounds
DateHistogramAggregationBuilder -> public ExtendedBounds extendedBounds();1538067637;Return extended bounds for this histogram, or {@code null} if none are set.;public ExtendedBounds extendedBounds() {_        return extendedBounds__    };return,extended,bounds,for,this,histogram,or,code,null,if,none,are,set;public,extended,bounds,extended,bounds,return,extended,bounds
DateHistogramAggregationBuilder -> public ExtendedBounds extendedBounds();1544600864;Return extended bounds for this histogram, or {@code null} if none are set.;public ExtendedBounds extendedBounds() {_        return extendedBounds__    };return,extended,bounds,for,this,histogram,or,code,null,if,none,are,set;public,extended,bounds,extended,bounds,return,extended,bounds
DateHistogramAggregationBuilder -> public ExtendedBounds extendedBounds();1544732811;Return extended bounds for this histogram, or {@code null} if none are set.;public ExtendedBounds extendedBounds() {_        return extendedBounds__    };return,extended,bounds,for,this,histogram,or,code,null,if,none,are,set;public,extended,bounds,extended,bounds,return,extended,bounds
DateHistogramAggregationBuilder -> public ExtendedBounds extendedBounds();1548236405;Return extended bounds for this histogram, or {@code null} if none are set.;public ExtendedBounds extendedBounds() {_        return extendedBounds__    };return,extended,bounds,for,this,histogram,or,code,null,if,none,are,set;public,extended,bounds,extended,bounds,return,extended,bounds
DateHistogramAggregationBuilder -> public boolean keyed();1524684173;Return whether buckets should be returned as a hash. In case_{@code keyed} is false, buckets will be returned as an array.;public boolean keyed() {_        return keyed__    };return,whether,buckets,should,be,returned,as,a,hash,in,case,code,keyed,is,false,buckets,will,be,returned,as,an,array;public,boolean,keyed,return,keyed
DateHistogramAggregationBuilder -> public boolean keyed();1526510804;Return whether buckets should be returned as a hash. In case_{@code keyed} is false, buckets will be returned as an array.;public boolean keyed() {_        return keyed__    };return,whether,buckets,should,be,returned,as,a,hash,in,case,code,keyed,is,false,buckets,will,be,returned,as,an,array;public,boolean,keyed,return,keyed
DateHistogramAggregationBuilder -> public boolean keyed();1527096592;Return whether buckets should be returned as a hash. In case_{@code keyed} is false, buckets will be returned as an array.;public boolean keyed() {_        return keyed__    };return,whether,buckets,should,be,returned,as,a,hash,in,case,code,keyed,is,false,buckets,will,be,returned,as,an,array;public,boolean,keyed,return,keyed
DateHistogramAggregationBuilder -> public boolean keyed();1529487105;Return whether buckets should be returned as a hash. In case_{@code keyed} is false, buckets will be returned as an array.;public boolean keyed() {_        return keyed__    };return,whether,buckets,should,be,returned,as,a,hash,in,case,code,keyed,is,false,buckets,will,be,returned,as,an,array;public,boolean,keyed,return,keyed
DateHistogramAggregationBuilder -> public boolean keyed();1538067637;Return whether buckets should be returned as a hash. In case_{@code keyed} is false, buckets will be returned as an array.;public boolean keyed() {_        return keyed__    };return,whether,buckets,should,be,returned,as,a,hash,in,case,code,keyed,is,false,buckets,will,be,returned,as,an,array;public,boolean,keyed,return,keyed
DateHistogramAggregationBuilder -> public boolean keyed();1544600864;Return whether buckets should be returned as a hash. In case_{@code keyed} is false, buckets will be returned as an array.;public boolean keyed() {_        return keyed__    };return,whether,buckets,should,be,returned,as,a,hash,in,case,code,keyed,is,false,buckets,will,be,returned,as,an,array;public,boolean,keyed,return,keyed
DateHistogramAggregationBuilder -> public boolean keyed();1544732811;Return whether buckets should be returned as a hash. In case_{@code keyed} is false, buckets will be returned as an array.;public boolean keyed() {_        return keyed__    };return,whether,buckets,should,be,returned,as,a,hash,in,case,code,keyed,is,false,buckets,will,be,returned,as,an,array;public,boolean,keyed,return,keyed
DateHistogramAggregationBuilder -> public boolean keyed();1548236405;Return whether buckets should be returned as a hash. In case_{@code keyed} is false, buckets will be returned as an array.;public boolean keyed() {_        return keyed__    };return,whether,buckets,should,be,returned,as,a,hash,in,case,code,keyed,is,false,buckets,will,be,returned,as,an,array;public,boolean,keyed,return,keyed
DateHistogramAggregationBuilder -> public DateHistogramInterval dateHistogramInterval();1524684173;Get the current date interval that is set on this builder.;public DateHistogramInterval dateHistogramInterval() {_        return dateHistogramInterval__    };get,the,current,date,interval,that,is,set,on,this,builder;public,date,histogram,interval,date,histogram,interval,return,date,histogram,interval
DateHistogramAggregationBuilder -> public DateHistogramInterval dateHistogramInterval();1526510804;Get the current date interval that is set on this builder.;public DateHistogramInterval dateHistogramInterval() {_        return dateHistogramInterval__    };get,the,current,date,interval,that,is,set,on,this,builder;public,date,histogram,interval,date,histogram,interval,return,date,histogram,interval
DateHistogramAggregationBuilder -> public DateHistogramInterval dateHistogramInterval();1527096592;Get the current date interval that is set on this builder.;public DateHistogramInterval dateHistogramInterval() {_        return dateHistogramInterval__    };get,the,current,date,interval,that,is,set,on,this,builder;public,date,histogram,interval,date,histogram,interval,return,date,histogram,interval
DateHistogramAggregationBuilder -> public DateHistogramInterval dateHistogramInterval();1529487105;Get the current date interval that is set on this builder.;public DateHistogramInterval dateHistogramInterval() {_        return dateHistogramInterval__    };get,the,current,date,interval,that,is,set,on,this,builder;public,date,histogram,interval,date,histogram,interval,return,date,histogram,interval
DateHistogramAggregationBuilder -> public DateHistogramInterval dateHistogramInterval();1538067637;Get the current date interval that is set on this builder.;public DateHistogramInterval dateHistogramInterval() {_        return dateHistogramInterval__    };get,the,current,date,interval,that,is,set,on,this,builder;public,date,histogram,interval,date,histogram,interval,return,date,histogram,interval
DateHistogramAggregationBuilder -> public DateHistogramInterval dateHistogramInterval();1544600864;Get the current date interval that is set on this builder.;public DateHistogramInterval dateHistogramInterval() {_        return dateHistogramInterval__    };get,the,current,date,interval,that,is,set,on,this,builder;public,date,histogram,interval,date,histogram,interval,return,date,histogram,interval
DateHistogramAggregationBuilder -> public DateHistogramInterval dateHistogramInterval();1544732811;Get the current date interval that is set on this builder.;public DateHistogramInterval dateHistogramInterval() {_        return dateHistogramInterval__    };get,the,current,date,interval,that,is,set,on,this,builder;public,date,histogram,interval,date,histogram,interval,return,date,histogram,interval
DateHistogramAggregationBuilder -> public DateHistogramInterval dateHistogramInterval();1548236405;Get the current date interval that is set on this builder.;public DateHistogramInterval dateHistogramInterval() {_        return dateHistogramInterval__    };get,the,current,date,interval,that,is,set,on,this,builder;public,date,histogram,interval,date,histogram,interval,return,date,histogram,interval
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder offset(String offset);1524684173;Set the offset on this builder, as a time value, and_return the builder so that calls can be chained.;public DateHistogramAggregationBuilder offset(String offset) {_        if (offset == null) {_            throw new IllegalArgumentException("[offset] must not be null: [" + name + "]")__        }_        return offset(parseStringOffset(offset))__    };set,the,offset,on,this,builder,as,a,time,value,and,return,the,builder,so,that,calls,can,be,chained;public,date,histogram,aggregation,builder,offset,string,offset,if,offset,null,throw,new,illegal,argument,exception,offset,must,not,be,null,name,return,offset,parse,string,offset,offset
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder offset(String offset);1526510804;Set the offset on this builder, as a time value, and_return the builder so that calls can be chained.;public DateHistogramAggregationBuilder offset(String offset) {_        if (offset == null) {_            throw new IllegalArgumentException("[offset] must not be null: [" + name + "]")__        }_        return offset(parseStringOffset(offset))__    };set,the,offset,on,this,builder,as,a,time,value,and,return,the,builder,so,that,calls,can,be,chained;public,date,histogram,aggregation,builder,offset,string,offset,if,offset,null,throw,new,illegal,argument,exception,offset,must,not,be,null,name,return,offset,parse,string,offset,offset
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder offset(String offset);1527096592;Set the offset on this builder, as a time value, and_return the builder so that calls can be chained.;public DateHistogramAggregationBuilder offset(String offset) {_        if (offset == null) {_            throw new IllegalArgumentException("[offset] must not be null: [" + name + "]")__        }_        return offset(parseStringOffset(offset))__    };set,the,offset,on,this,builder,as,a,time,value,and,return,the,builder,so,that,calls,can,be,chained;public,date,histogram,aggregation,builder,offset,string,offset,if,offset,null,throw,new,illegal,argument,exception,offset,must,not,be,null,name,return,offset,parse,string,offset,offset
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder offset(String offset);1529487105;Set the offset on this builder, as a time value, and_return the builder so that calls can be chained.;public DateHistogramAggregationBuilder offset(String offset) {_        if (offset == null) {_            throw new IllegalArgumentException("[offset] must not be null: [" + name + "]")__        }_        return offset(parseStringOffset(offset))__    };set,the,offset,on,this,builder,as,a,time,value,and,return,the,builder,so,that,calls,can,be,chained;public,date,histogram,aggregation,builder,offset,string,offset,if,offset,null,throw,new,illegal,argument,exception,offset,must,not,be,null,name,return,offset,parse,string,offset,offset
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder offset(String offset);1538067637;Set the offset on this builder, as a time value, and_return the builder so that calls can be chained.;public DateHistogramAggregationBuilder offset(String offset) {_        if (offset == null) {_            throw new IllegalArgumentException("[offset] must not be null: [" + name + "]")__        }_        return offset(parseStringOffset(offset))__    };set,the,offset,on,this,builder,as,a,time,value,and,return,the,builder,so,that,calls,can,be,chained;public,date,histogram,aggregation,builder,offset,string,offset,if,offset,null,throw,new,illegal,argument,exception,offset,must,not,be,null,name,return,offset,parse,string,offset,offset
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder offset(String offset);1544600864;Set the offset on this builder, as a time value, and_return the builder so that calls can be chained.;public DateHistogramAggregationBuilder offset(String offset) {_        if (offset == null) {_            throw new IllegalArgumentException("[offset] must not be null: [" + name + "]")__        }_        return offset(parseStringOffset(offset))__    };set,the,offset,on,this,builder,as,a,time,value,and,return,the,builder,so,that,calls,can,be,chained;public,date,histogram,aggregation,builder,offset,string,offset,if,offset,null,throw,new,illegal,argument,exception,offset,must,not,be,null,name,return,offset,parse,string,offset,offset
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder offset(String offset);1544732811;Set the offset on this builder, as a time value, and_return the builder so that calls can be chained.;public DateHistogramAggregationBuilder offset(String offset) {_        if (offset == null) {_            throw new IllegalArgumentException("[offset] must not be null: [" + name + "]")__        }_        return offset(parseStringOffset(offset))__    };set,the,offset,on,this,builder,as,a,time,value,and,return,the,builder,so,that,calls,can,be,chained;public,date,histogram,aggregation,builder,offset,string,offset,if,offset,null,throw,new,illegal,argument,exception,offset,must,not,be,null,name,return,offset,parse,string,offset,offset
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder offset(String offset);1548236405;Set the offset on this builder, as a time value, and_return the builder so that calls can be chained.;public DateHistogramAggregationBuilder offset(String offset) {_        if (offset == null) {_            throw new IllegalArgumentException("[offset] must not be null: [" + name + "]")__        }_        return offset(parseStringOffset(offset))__    };set,the,offset,on,this,builder,as,a,time,value,and,return,the,builder,so,that,calls,can,be,chained;public,date,histogram,aggregation,builder,offset,string,offset,if,offset,null,throw,new,illegal,argument,exception,offset,must,not,be,null,name,return,offset,parse,string,offset,offset
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder order(List<BucketOrder> orders);1524684173;Sets the order in which the buckets will be returned. A tie-breaker may be added to avoid non-deterministic_ordering.;public DateHistogramAggregationBuilder order(List<BucketOrder> orders) {_        if (orders == null) {_            throw new IllegalArgumentException("[orders] must not be null: [" + name + "]")__        }_        _        order(orders.size() > 1 ? BucketOrder.compound(orders) : orders.get(0))__        return this__    };sets,the,order,in,which,the,buckets,will,be,returned,a,tie,breaker,may,be,added,to,avoid,non,deterministic,ordering;public,date,histogram,aggregation,builder,order,list,bucket,order,orders,if,orders,null,throw,new,illegal,argument,exception,orders,must,not,be,null,name,order,orders,size,1,bucket,order,compound,orders,orders,get,0,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder order(List<BucketOrder> orders);1526510804;Sets the order in which the buckets will be returned. A tie-breaker may be added to avoid non-deterministic_ordering.;public DateHistogramAggregationBuilder order(List<BucketOrder> orders) {_        if (orders == null) {_            throw new IllegalArgumentException("[orders] must not be null: [" + name + "]")__        }_        _        order(orders.size() > 1 ? BucketOrder.compound(orders) : orders.get(0))__        return this__    };sets,the,order,in,which,the,buckets,will,be,returned,a,tie,breaker,may,be,added,to,avoid,non,deterministic,ordering;public,date,histogram,aggregation,builder,order,list,bucket,order,orders,if,orders,null,throw,new,illegal,argument,exception,orders,must,not,be,null,name,order,orders,size,1,bucket,order,compound,orders,orders,get,0,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder order(List<BucketOrder> orders);1527096592;Sets the order in which the buckets will be returned. A tie-breaker may be added to avoid non-deterministic_ordering.;public DateHistogramAggregationBuilder order(List<BucketOrder> orders) {_        if (orders == null) {_            throw new IllegalArgumentException("[orders] must not be null: [" + name + "]")__        }_        _        order(orders.size() > 1 ? BucketOrder.compound(orders) : orders.get(0))__        return this__    };sets,the,order,in,which,the,buckets,will,be,returned,a,tie,breaker,may,be,added,to,avoid,non,deterministic,ordering;public,date,histogram,aggregation,builder,order,list,bucket,order,orders,if,orders,null,throw,new,illegal,argument,exception,orders,must,not,be,null,name,order,orders,size,1,bucket,order,compound,orders,orders,get,0,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder order(List<BucketOrder> orders);1529487105;Sets the order in which the buckets will be returned. A tie-breaker may be added to avoid non-deterministic_ordering.;public DateHistogramAggregationBuilder order(List<BucketOrder> orders) {_        if (orders == null) {_            throw new IllegalArgumentException("[orders] must not be null: [" + name + "]")__        }_        _        order(orders.size() > 1 ? BucketOrder.compound(orders) : orders.get(0))__        return this__    };sets,the,order,in,which,the,buckets,will,be,returned,a,tie,breaker,may,be,added,to,avoid,non,deterministic,ordering;public,date,histogram,aggregation,builder,order,list,bucket,order,orders,if,orders,null,throw,new,illegal,argument,exception,orders,must,not,be,null,name,order,orders,size,1,bucket,order,compound,orders,orders,get,0,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder order(List<BucketOrder> orders);1538067637;Sets the order in which the buckets will be returned. A tie-breaker may be added to avoid non-deterministic_ordering.;public DateHistogramAggregationBuilder order(List<BucketOrder> orders) {_        if (orders == null) {_            throw new IllegalArgumentException("[orders] must not be null: [" + name + "]")__        }_        _        order(orders.size() > 1 ? BucketOrder.compound(orders) : orders.get(0))__        return this__    };sets,the,order,in,which,the,buckets,will,be,returned,a,tie,breaker,may,be,added,to,avoid,non,deterministic,ordering;public,date,histogram,aggregation,builder,order,list,bucket,order,orders,if,orders,null,throw,new,illegal,argument,exception,orders,must,not,be,null,name,order,orders,size,1,bucket,order,compound,orders,orders,get,0,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder order(List<BucketOrder> orders);1544600864;Sets the order in which the buckets will be returned. A tie-breaker may be added to avoid non-deterministic_ordering.;public DateHistogramAggregationBuilder order(List<BucketOrder> orders) {_        if (orders == null) {_            throw new IllegalArgumentException("[orders] must not be null: [" + name + "]")__        }_        _        order(orders.size() > 1 ? BucketOrder.compound(orders) : orders.get(0))__        return this__    };sets,the,order,in,which,the,buckets,will,be,returned,a,tie,breaker,may,be,added,to,avoid,non,deterministic,ordering;public,date,histogram,aggregation,builder,order,list,bucket,order,orders,if,orders,null,throw,new,illegal,argument,exception,orders,must,not,be,null,name,order,orders,size,1,bucket,order,compound,orders,orders,get,0,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder order(List<BucketOrder> orders);1544732811;Sets the order in which the buckets will be returned. A tie-breaker may be added to avoid non-deterministic_ordering.;public DateHistogramAggregationBuilder order(List<BucketOrder> orders) {_        if (orders == null) {_            throw new IllegalArgumentException("[orders] must not be null: [" + name + "]")__        }_        _        order(orders.size() > 1 ? BucketOrder.compound(orders) : orders.get(0))__        return this__    };sets,the,order,in,which,the,buckets,will,be,returned,a,tie,breaker,may,be,added,to,avoid,non,deterministic,ordering;public,date,histogram,aggregation,builder,order,list,bucket,order,orders,if,orders,null,throw,new,illegal,argument,exception,orders,must,not,be,null,name,order,orders,size,1,bucket,order,compound,orders,orders,get,0,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder order(List<BucketOrder> orders);1548236405;Sets the order in which the buckets will be returned. A tie-breaker may be added to avoid non-deterministic_ordering.;public DateHistogramAggregationBuilder order(List<BucketOrder> orders) {_        if (orders == null) {_            throw new IllegalArgumentException("[orders] must not be null: [" + name + "]")__        }_        _        order(orders.size() > 1 ? BucketOrder.compound(orders) : orders.get(0))__        return this__    };sets,the,order,in,which,the,buckets,will,be,returned,a,tie,breaker,may,be,added,to,avoid,non,deterministic,ordering;public,date,histogram,aggregation,builder,order,list,bucket,order,orders,if,orders,null,throw,new,illegal,argument,exception,orders,must,not,be,null,name,order,orders,size,1,bucket,order,compound,orders,orders,get,0,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder offset(long offset);1524684173;Set the offset on this builder, which is a number of milliseconds, and_return the builder so that calls can be chained.;public DateHistogramAggregationBuilder offset(long offset) {_        this.offset = offset__        return this__    };set,the,offset,on,this,builder,which,is,a,number,of,milliseconds,and,return,the,builder,so,that,calls,can,be,chained;public,date,histogram,aggregation,builder,offset,long,offset,this,offset,offset,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder offset(long offset);1526510804;Set the offset on this builder, which is a number of milliseconds, and_return the builder so that calls can be chained.;public DateHistogramAggregationBuilder offset(long offset) {_        this.offset = offset__        return this__    };set,the,offset,on,this,builder,which,is,a,number,of,milliseconds,and,return,the,builder,so,that,calls,can,be,chained;public,date,histogram,aggregation,builder,offset,long,offset,this,offset,offset,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder offset(long offset);1527096592;Set the offset on this builder, which is a number of milliseconds, and_return the builder so that calls can be chained.;public DateHistogramAggregationBuilder offset(long offset) {_        this.offset = offset__        return this__    };set,the,offset,on,this,builder,which,is,a,number,of,milliseconds,and,return,the,builder,so,that,calls,can,be,chained;public,date,histogram,aggregation,builder,offset,long,offset,this,offset,offset,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder offset(long offset);1529487105;Set the offset on this builder, which is a number of milliseconds, and_return the builder so that calls can be chained.;public DateHistogramAggregationBuilder offset(long offset) {_        this.offset = offset__        return this__    };set,the,offset,on,this,builder,which,is,a,number,of,milliseconds,and,return,the,builder,so,that,calls,can,be,chained;public,date,histogram,aggregation,builder,offset,long,offset,this,offset,offset,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder offset(long offset);1538067637;Set the offset on this builder, which is a number of milliseconds, and_return the builder so that calls can be chained.;public DateHistogramAggregationBuilder offset(long offset) {_        this.offset = offset__        return this__    };set,the,offset,on,this,builder,which,is,a,number,of,milliseconds,and,return,the,builder,so,that,calls,can,be,chained;public,date,histogram,aggregation,builder,offset,long,offset,this,offset,offset,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder offset(long offset);1544600864;Set the offset on this builder, which is a number of milliseconds, and_return the builder so that calls can be chained.;public DateHistogramAggregationBuilder offset(long offset) {_        this.offset = offset__        return this__    };set,the,offset,on,this,builder,which,is,a,number,of,milliseconds,and,return,the,builder,so,that,calls,can,be,chained;public,date,histogram,aggregation,builder,offset,long,offset,this,offset,offset,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder offset(long offset);1544732811;Set the offset on this builder, which is a number of milliseconds, and_return the builder so that calls can be chained.;public DateHistogramAggregationBuilder offset(long offset) {_        this.offset = offset__        return this__    };set,the,offset,on,this,builder,which,is,a,number,of,milliseconds,and,return,the,builder,so,that,calls,can,be,chained;public,date,histogram,aggregation,builder,offset,long,offset,this,offset,offset,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder offset(long offset);1548236405;Set the offset on this builder, which is a number of milliseconds, and_return the builder so that calls can be chained.;public DateHistogramAggregationBuilder offset(long offset) {_        this.offset = offset__        return this__    };set,the,offset,on,this,builder,which,is,a,number,of,milliseconds,and,return,the,builder,so,that,calls,can,be,chained;public,date,histogram,aggregation,builder,offset,long,offset,this,offset,offset,return,this
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder(String name);1524684173;Create a new builder with the given name.;public DateHistogramAggregationBuilder(String name) {_        super(name, ValuesSourceType.NUMERIC, ValueType.DATE)__    };create,a,new,builder,with,the,given,name;public,date,histogram,aggregation,builder,string,name,super,name,values,source,type,numeric,value,type,date
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder(String name);1526510804;Create a new builder with the given name.;public DateHistogramAggregationBuilder(String name) {_        super(name, ValuesSourceType.NUMERIC, ValueType.DATE)__    };create,a,new,builder,with,the,given,name;public,date,histogram,aggregation,builder,string,name,super,name,values,source,type,numeric,value,type,date
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder(String name);1527096592;Create a new builder with the given name.;public DateHistogramAggregationBuilder(String name) {_        super(name, ValuesSourceType.NUMERIC, ValueType.DATE)__    };create,a,new,builder,with,the,given,name;public,date,histogram,aggregation,builder,string,name,super,name,values,source,type,numeric,value,type,date
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder(String name);1529487105;Create a new builder with the given name.;public DateHistogramAggregationBuilder(String name) {_        super(name, ValuesSourceType.NUMERIC, ValueType.DATE)__    };create,a,new,builder,with,the,given,name;public,date,histogram,aggregation,builder,string,name,super,name,values,source,type,numeric,value,type,date
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder(String name);1538067637;Create a new builder with the given name.;public DateHistogramAggregationBuilder(String name) {_        super(name, ValuesSourceType.NUMERIC, ValueType.DATE)__    };create,a,new,builder,with,the,given,name;public,date,histogram,aggregation,builder,string,name,super,name,values,source,type,numeric,value,type,date
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder(String name);1544600864;Create a new builder with the given name.;public DateHistogramAggregationBuilder(String name) {_        super(name, ValuesSourceType.NUMERIC, ValueType.DATE)__    };create,a,new,builder,with,the,given,name;public,date,histogram,aggregation,builder,string,name,super,name,values,source,type,numeric,value,type,date
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder(String name);1544732811;Create a new builder with the given name.;public DateHistogramAggregationBuilder(String name) {_        super(name, ValuesSourceType.NUMERIC, ValueType.DATE)__    };create,a,new,builder,with,the,given,name;public,date,histogram,aggregation,builder,string,name,super,name,values,source,type,numeric,value,type,date
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder(String name);1548236405;Create a new builder with the given name.;public DateHistogramAggregationBuilder(String name) {_        super(name, ValuesSourceType.NUMERIC, ValueType.DATE)__    };create,a,new,builder,with,the,given,name;public,date,histogram,aggregation,builder,string,name,super,name,values,source,type,numeric,value,type,date
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder(StreamInput in) throws IOException;1524684173;Read from a stream, for internal use only.;public DateHistogramAggregationBuilder(StreamInput in) throws IOException {_        super(in, ValuesSourceType.NUMERIC, ValueType.DATE)__        order = InternalOrder.Streams.readHistogramOrder(in, true)__        keyed = in.readBoolean()__        minDocCount = in.readVLong()__        interval = in.readLong()__        dateHistogramInterval = in.readOptionalWriteable(DateHistogramInterval::new)__        offset = in.readLong()__        extendedBounds = in.readOptionalWriteable(ExtendedBounds::new)__    };read,from,a,stream,for,internal,use,only;public,date,histogram,aggregation,builder,stream,input,in,throws,ioexception,super,in,values,source,type,numeric,value,type,date,order,internal,order,streams,read,histogram,order,in,true,keyed,in,read,boolean,min,doc,count,in,read,vlong,interval,in,read,long,date,histogram,interval,in,read,optional,writeable,date,histogram,interval,new,offset,in,read,long,extended,bounds,in,read,optional,writeable,extended,bounds,new
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder(StreamInput in) throws IOException;1526510804;Read from a stream, for internal use only.;public DateHistogramAggregationBuilder(StreamInput in) throws IOException {_        super(in, ValuesSourceType.NUMERIC, ValueType.DATE)__        order = InternalOrder.Streams.readHistogramOrder(in, true)__        keyed = in.readBoolean()__        minDocCount = in.readVLong()__        interval = in.readLong()__        dateHistogramInterval = in.readOptionalWriteable(DateHistogramInterval::new)__        offset = in.readLong()__        extendedBounds = in.readOptionalWriteable(ExtendedBounds::new)__    };read,from,a,stream,for,internal,use,only;public,date,histogram,aggregation,builder,stream,input,in,throws,ioexception,super,in,values,source,type,numeric,value,type,date,order,internal,order,streams,read,histogram,order,in,true,keyed,in,read,boolean,min,doc,count,in,read,vlong,interval,in,read,long,date,histogram,interval,in,read,optional,writeable,date,histogram,interval,new,offset,in,read,long,extended,bounds,in,read,optional,writeable,extended,bounds,new
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder(StreamInput in) throws IOException;1527096592;Read from a stream, for internal use only.;public DateHistogramAggregationBuilder(StreamInput in) throws IOException {_        super(in, ValuesSourceType.NUMERIC, ValueType.DATE)__        order = InternalOrder.Streams.readHistogramOrder(in, true)__        keyed = in.readBoolean()__        minDocCount = in.readVLong()__        interval = in.readLong()__        dateHistogramInterval = in.readOptionalWriteable(DateHistogramInterval::new)__        offset = in.readLong()__        extendedBounds = in.readOptionalWriteable(ExtendedBounds::new)__    };read,from,a,stream,for,internal,use,only;public,date,histogram,aggregation,builder,stream,input,in,throws,ioexception,super,in,values,source,type,numeric,value,type,date,order,internal,order,streams,read,histogram,order,in,true,keyed,in,read,boolean,min,doc,count,in,read,vlong,interval,in,read,long,date,histogram,interval,in,read,optional,writeable,date,histogram,interval,new,offset,in,read,long,extended,bounds,in,read,optional,writeable,extended,bounds,new
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder(StreamInput in) throws IOException;1529487105;Read from a stream, for internal use only.;public DateHistogramAggregationBuilder(StreamInput in) throws IOException {_        super(in, ValuesSourceType.NUMERIC, ValueType.DATE)__        order = InternalOrder.Streams.readHistogramOrder(in, true)__        keyed = in.readBoolean()__        minDocCount = in.readVLong()__        interval = in.readLong()__        dateHistogramInterval = in.readOptionalWriteable(DateHistogramInterval::new)__        offset = in.readLong()__        extendedBounds = in.readOptionalWriteable(ExtendedBounds::new)__    };read,from,a,stream,for,internal,use,only;public,date,histogram,aggregation,builder,stream,input,in,throws,ioexception,super,in,values,source,type,numeric,value,type,date,order,internal,order,streams,read,histogram,order,in,true,keyed,in,read,boolean,min,doc,count,in,read,vlong,interval,in,read,long,date,histogram,interval,in,read,optional,writeable,date,histogram,interval,new,offset,in,read,long,extended,bounds,in,read,optional,writeable,extended,bounds,new
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder(StreamInput in) throws IOException;1538067637;Read from a stream, for internal use only.;public DateHistogramAggregationBuilder(StreamInput in) throws IOException {_        super(in, ValuesSourceType.NUMERIC, ValueType.DATE)__        order = InternalOrder.Streams.readHistogramOrder(in, true)__        keyed = in.readBoolean()__        minDocCount = in.readVLong()__        interval = in.readLong()__        dateHistogramInterval = in.readOptionalWriteable(DateHistogramInterval::new)__        offset = in.readLong()__        extendedBounds = in.readOptionalWriteable(ExtendedBounds::new)__    };read,from,a,stream,for,internal,use,only;public,date,histogram,aggregation,builder,stream,input,in,throws,ioexception,super,in,values,source,type,numeric,value,type,date,order,internal,order,streams,read,histogram,order,in,true,keyed,in,read,boolean,min,doc,count,in,read,vlong,interval,in,read,long,date,histogram,interval,in,read,optional,writeable,date,histogram,interval,new,offset,in,read,long,extended,bounds,in,read,optional,writeable,extended,bounds,new
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder(StreamInput in) throws IOException;1544600864;Read from a stream, for internal use only.;public DateHistogramAggregationBuilder(StreamInput in) throws IOException {_        super(in, ValuesSourceType.NUMERIC, ValueType.DATE)__        order = InternalOrder.Streams.readHistogramOrder(in, true)__        keyed = in.readBoolean()__        minDocCount = in.readVLong()__        interval = in.readLong()__        dateHistogramInterval = in.readOptionalWriteable(DateHistogramInterval::new)__        offset = in.readLong()__        extendedBounds = in.readOptionalWriteable(ExtendedBounds::new)__    };read,from,a,stream,for,internal,use,only;public,date,histogram,aggregation,builder,stream,input,in,throws,ioexception,super,in,values,source,type,numeric,value,type,date,order,internal,order,streams,read,histogram,order,in,true,keyed,in,read,boolean,min,doc,count,in,read,vlong,interval,in,read,long,date,histogram,interval,in,read,optional,writeable,date,histogram,interval,new,offset,in,read,long,extended,bounds,in,read,optional,writeable,extended,bounds,new
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder(StreamInput in) throws IOException;1544732811;Read from a stream, for internal use only.;public DateHistogramAggregationBuilder(StreamInput in) throws IOException {_        super(in, ValuesSourceType.NUMERIC, ValueType.DATE)__        order = InternalOrder.Streams.readHistogramOrder(in, true)__        keyed = in.readBoolean()__        minDocCount = in.readVLong()__        interval = in.readLong()__        dateHistogramInterval = in.readOptionalWriteable(DateHistogramInterval::new)__        offset = in.readLong()__        extendedBounds = in.readOptionalWriteable(ExtendedBounds::new)__    };read,from,a,stream,for,internal,use,only;public,date,histogram,aggregation,builder,stream,input,in,throws,ioexception,super,in,values,source,type,numeric,value,type,date,order,internal,order,streams,read,histogram,order,in,true,keyed,in,read,boolean,min,doc,count,in,read,vlong,interval,in,read,long,date,histogram,interval,in,read,optional,writeable,date,histogram,interval,new,offset,in,read,long,extended,bounds,in,read,optional,writeable,extended,bounds,new
DateHistogramAggregationBuilder -> public DateHistogramAggregationBuilder(StreamInput in) throws IOException;1548236405;Read from a stream, for internal use only.;public DateHistogramAggregationBuilder(StreamInput in) throws IOException {_        super(in, ValuesSourceType.NUMERIC, ValueType.DATE)__        order = InternalOrder.Streams.readHistogramOrder(in, true)__        keyed = in.readBoolean()__        minDocCount = in.readVLong()__        interval = in.readLong()__        dateHistogramInterval = in.readOptionalWriteable(DateHistogramInterval::new)__        offset = in.readLong()__        extendedBounds = in.readOptionalWriteable(ExtendedBounds::new)__    };read,from,a,stream,for,internal,use,only;public,date,histogram,aggregation,builder,stream,input,in,throws,ioexception,super,in,values,source,type,numeric,value,type,date,order,internal,order,streams,read,histogram,order,in,true,keyed,in,read,boolean,min,doc,count,in,read,vlong,interval,in,read,long,date,histogram,interval,in,read,optional,writeable,date,histogram,interval,new,offset,in,read,long,extended,bounds,in,read,optional,writeable,extended,bounds,new
