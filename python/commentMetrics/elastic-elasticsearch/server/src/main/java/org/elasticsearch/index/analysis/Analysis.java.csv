# id;timestamp;commentText;codeText;commentWords;codeWords
Analysis -> public static Reader getReaderFromFile(Environment env, Settings settings, String settingPrefix);1524684173;@return null If no settings set for "settingsPrefix" then return <code>null</code>._@throws IllegalArgumentException_If the Reader can not be instantiated.;public static Reader getReaderFromFile(Environment env, Settings settings, String settingPrefix) {_        String filePath = settings.get(settingPrefix, null)___        if (filePath == null) {_            return null__        }_        final Path path = env.configFile().resolve(filePath)__        try {_            return Files.newBufferedReader(path, StandardCharsets.UTF_8)__        } catch (CharacterCodingException ex) {_            String message = String.format(Locale.ROOT,_                "Unsupported character encoding detected while reading %s_path: %s files must be UTF-8 encoded",_                settingPrefix, path.toString())__            throw new IllegalArgumentException(message, ex)__        } catch (IOException ioe) {_            String message = String.format(Locale.ROOT, "IOException while reading %s_path: %s", settingPrefix, path.toString())__            throw new IllegalArgumentException(message, ioe)__        }_    };return,null,if,no,settings,set,for,settings,prefix,then,return,code,null,code,throws,illegal,argument,exception,if,the,reader,can,not,be,instantiated;public,static,reader,get,reader,from,file,environment,env,settings,settings,string,setting,prefix,string,file,path,settings,get,setting,prefix,null,if,file,path,null,return,null,final,path,path,env,config,file,resolve,file,path,try,return,files,new,buffered,reader,path,standard,charsets,catch,character,coding,exception,ex,string,message,string,format,locale,root,unsupported,character,encoding,detected,while,reading,s,files,must,be,utf,8,encoded,setting,prefix,path,to,string,throw,new,illegal,argument,exception,message,ex,catch,ioexception,ioe,string,message,string,format,locale,root,ioexception,while,reading,s,setting,prefix,path,to,string,throw,new,illegal,argument,exception,message,ioe
Analysis -> public static Reader getReaderFromFile(Environment env, Settings settings, String settingPrefix);1527583663;@return null If no settings set for "settingsPrefix" then return <code>null</code>._@throws IllegalArgumentException_If the Reader can not be instantiated.;public static Reader getReaderFromFile(Environment env, Settings settings, String settingPrefix) {_        String filePath = settings.get(settingPrefix, null)___        if (filePath == null) {_            return null__        }_        final Path path = env.configFile().resolve(filePath)__        try {_            return Files.newBufferedReader(path, StandardCharsets.UTF_8)__        } catch (CharacterCodingException ex) {_            String message = String.format(Locale.ROOT,_                "Unsupported character encoding detected while reading %s_path: %s files must be UTF-8 encoded",_                settingPrefix, path.toString())__            throw new IllegalArgumentException(message, ex)__        } catch (IOException ioe) {_            String message = String.format(Locale.ROOT, "IOException while reading %s_path: %s", settingPrefix, path.toString())__            throw new IllegalArgumentException(message, ioe)__        }_    };return,null,if,no,settings,set,for,settings,prefix,then,return,code,null,code,throws,illegal,argument,exception,if,the,reader,can,not,be,instantiated;public,static,reader,get,reader,from,file,environment,env,settings,settings,string,setting,prefix,string,file,path,settings,get,setting,prefix,null,if,file,path,null,return,null,final,path,path,env,config,file,resolve,file,path,try,return,files,new,buffered,reader,path,standard,charsets,catch,character,coding,exception,ex,string,message,string,format,locale,root,unsupported,character,encoding,detected,while,reading,s,files,must,be,utf,8,encoded,setting,prefix,path,to,string,throw,new,illegal,argument,exception,message,ex,catch,ioexception,ioe,string,message,string,format,locale,root,ioexception,while,reading,s,setting,prefix,path,to,string,throw,new,illegal,argument,exception,message,ioe
Analysis -> public static Reader getReaderFromFile(Environment env, Settings settings, String settingPrefix);1544192768;@return null If no settings set for "settingsPrefix" then return <code>null</code>._@throws IllegalArgumentException_If the Reader can not be instantiated.;public static Reader getReaderFromFile(Environment env, Settings settings, String settingPrefix) {_        String filePath = settings.get(settingPrefix, null)___        if (filePath == null) {_            return null__        }_        final Path path = env.configFile().resolve(filePath)__        try {_            return Files.newBufferedReader(path, StandardCharsets.UTF_8)__        } catch (CharacterCodingException ex) {_            String message = String.format(Locale.ROOT,_                "Unsupported character encoding detected while reading %s_path: %s files must be UTF-8 encoded",_                settingPrefix, path.toString())__            throw new IllegalArgumentException(message, ex)__        } catch (IOException ioe) {_            String message = String.format(Locale.ROOT, "IOException while reading %s_path: %s", settingPrefix, path.toString())__            throw new IllegalArgumentException(message, ioe)__        }_    };return,null,if,no,settings,set,for,settings,prefix,then,return,code,null,code,throws,illegal,argument,exception,if,the,reader,can,not,be,instantiated;public,static,reader,get,reader,from,file,environment,env,settings,settings,string,setting,prefix,string,file,path,settings,get,setting,prefix,null,if,file,path,null,return,null,final,path,path,env,config,file,resolve,file,path,try,return,files,new,buffered,reader,path,standard,charsets,catch,character,coding,exception,ex,string,message,string,format,locale,root,unsupported,character,encoding,detected,while,reading,s,files,must,be,utf,8,encoded,setting,prefix,path,to,string,throw,new,illegal,argument,exception,message,ex,catch,ioexception,ioe,string,message,string,format,locale,root,ioexception,while,reading,s,setting,prefix,path,to,string,throw,new,illegal,argument,exception,message,ioe
Analysis -> public static List<String> getWordList(Environment env, Settings settings, String settingPrefix);1524684173;Fetches a list of words from the specified settings file. The list should either be available at the key_specified by settingsPrefix or in a file specified by settingsPrefix + _path.__@throws IllegalArgumentException_If the word list cannot be found at either key.;public static List<String> getWordList(Environment env, Settings settings, String settingPrefix) {_        String wordListPath = settings.get(settingPrefix + "_path", null)___        if (wordListPath == null) {_            List<String> explicitWordList = settings.getAsList(settingPrefix, null)__            if (explicitWordList == null) {_                return null__            } else {_                return explicitWordList__            }_        }__        final Path path = env.configFile().resolve(wordListPath)___        try (BufferedReader reader = Files.newBufferedReader(path, StandardCharsets.UTF_8)) {_            return loadWordList(reader, "#")__        } catch (CharacterCodingException ex) {_            String message = String.format(Locale.ROOT,_                "Unsupported character encoding detected while reading %s_path: %s - files must be UTF-8 encoded",_                settingPrefix, path.toString())__            throw new IllegalArgumentException(message, ex)__        } catch (IOException ioe) {_            String message = String.format(Locale.ROOT, "IOException while reading %s_path: %s", settingPrefix, path.toString())__            throw new IllegalArgumentException(message, ioe)__        }_    };fetches,a,list,of,words,from,the,specified,settings,file,the,list,should,either,be,available,at,the,key,specified,by,settings,prefix,or,in,a,file,specified,by,settings,prefix,throws,illegal,argument,exception,if,the,word,list,cannot,be,found,at,either,key;public,static,list,string,get,word,list,environment,env,settings,settings,string,setting,prefix,string,word,list,path,settings,get,setting,prefix,null,if,word,list,path,null,list,string,explicit,word,list,settings,get,as,list,setting,prefix,null,if,explicit,word,list,null,return,null,else,return,explicit,word,list,final,path,path,env,config,file,resolve,word,list,path,try,buffered,reader,reader,files,new,buffered,reader,path,standard,charsets,return,load,word,list,reader,catch,character,coding,exception,ex,string,message,string,format,locale,root,unsupported,character,encoding,detected,while,reading,s,files,must,be,utf,8,encoded,setting,prefix,path,to,string,throw,new,illegal,argument,exception,message,ex,catch,ioexception,ioe,string,message,string,format,locale,root,ioexception,while,reading,s,setting,prefix,path,to,string,throw,new,illegal,argument,exception,message,ioe
Analysis -> public static List<String> getWordList(Environment env, Settings settings, String settingPrefix);1527583663;Fetches a list of words from the specified settings file. The list should either be available at the key_specified by settingsPrefix or in a file specified by settingsPrefix + _path.__@throws IllegalArgumentException_If the word list cannot be found at either key.;public static List<String> getWordList(Environment env, Settings settings, String settingPrefix) {_        String wordListPath = settings.get(settingPrefix + "_path", null)___        if (wordListPath == null) {_            List<String> explicitWordList = settings.getAsList(settingPrefix, null)__            if (explicitWordList == null) {_                return null__            } else {_                return explicitWordList__            }_        }__        final Path path = env.configFile().resolve(wordListPath)___        try {_            return loadWordList(path, "#")__        } catch (CharacterCodingException ex) {_            String message = String.format(Locale.ROOT,_                "Unsupported character encoding detected while reading %s_path: %s - files must be UTF-8 encoded",_                settingPrefix, path.toString())__            throw new IllegalArgumentException(message, ex)__        } catch (IOException ioe) {_            String message = String.format(Locale.ROOT, "IOException while reading %s_path: %s", settingPrefix, path.toString())__            throw new IllegalArgumentException(message, ioe)__        }_    };fetches,a,list,of,words,from,the,specified,settings,file,the,list,should,either,be,available,at,the,key,specified,by,settings,prefix,or,in,a,file,specified,by,settings,prefix,throws,illegal,argument,exception,if,the,word,list,cannot,be,found,at,either,key;public,static,list,string,get,word,list,environment,env,settings,settings,string,setting,prefix,string,word,list,path,settings,get,setting,prefix,null,if,word,list,path,null,list,string,explicit,word,list,settings,get,as,list,setting,prefix,null,if,explicit,word,list,null,return,null,else,return,explicit,word,list,final,path,path,env,config,file,resolve,word,list,path,try,return,load,word,list,path,catch,character,coding,exception,ex,string,message,string,format,locale,root,unsupported,character,encoding,detected,while,reading,s,files,must,be,utf,8,encoded,setting,prefix,path,to,string,throw,new,illegal,argument,exception,message,ex,catch,ioexception,ioe,string,message,string,format,locale,root,ioexception,while,reading,s,setting,prefix,path,to,string,throw,new,illegal,argument,exception,message,ioe
Analysis -> public static List<String> getWordList(Environment env, Settings settings, String settingPrefix);1544192768;Fetches a list of words from the specified settings file. The list should either be available at the key_specified by settingsPrefix or in a file specified by settingsPrefix + _path.__@throws IllegalArgumentException_If the word list cannot be found at either key.;public static List<String> getWordList(Environment env, Settings settings, String settingPrefix) {_        return getWordList(env, settings, settingPrefix + "_path", settingPrefix)__    };fetches,a,list,of,words,from,the,specified,settings,file,the,list,should,either,be,available,at,the,key,specified,by,settings,prefix,or,in,a,file,specified,by,settings,prefix,throws,illegal,argument,exception,if,the,word,list,cannot,be,found,at,either,key;public,static,list,string,get,word,list,environment,env,settings,settings,string,setting,prefix,return,get,word,list,env,settings,setting,prefix,setting,prefix
