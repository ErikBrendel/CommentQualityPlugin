commented;modifiers;parameterAmount;loc;comment;code
false;public;1;6;;@Override public void doWriteTo(StreamOutput out) throws IOException {     out.writeNamedWriteable(formatter).     gapPolicy.writeTo(out).     out.writeOptionalDouble(xAxisUnits). }
false;public;0;4;;@Override public String getWriteableName() {     return DerivativePipelineAggregationBuilder.NAME. }
false;public;2;34;;@Override public InternalAggregation reduce(InternalAggregation aggregation, ReduceContext reduceContext) {     InternalMultiBucketAggregation<? extends InternalMultiBucketAggregation, ? extends InternalMultiBucketAggregation.InternalBucket> histo = (InternalMultiBucketAggregation<? extends InternalMultiBucketAggregation, ? extends InternalMultiBucketAggregation.InternalBucket>) aggregation.     List<? extends InternalMultiBucketAggregation.InternalBucket> buckets = histo.getBuckets().     HistogramFactory factory = (HistogramFactory) histo.     List<Bucket> newBuckets = new ArrayList<>().     Number lastBucketKey = null.     Double lastBucketValue = null.     for (InternalMultiBucketAggregation.InternalBucket bucket : buckets) {         Number thisBucketKey = factory.getKey(bucket).         Double thisBucketValue = resolveBucketValue(histo, bucket, bucketsPaths()[0], gapPolicy).         if (lastBucketValue != null && thisBucketValue != null) {             double gradient = thisBucketValue - lastBucketValue.             double xDiff = -1.             if (xAxisUnits != null) {                 xDiff = (thisBucketKey.doubleValue() - lastBucketKey.doubleValue()) / xAxisUnits.             }             final List<InternalAggregation> aggs = StreamSupport.stream(bucket.getAggregations().spliterator(), false).map((p) -> {                 return (InternalAggregation) p.             }).collect(Collectors.toList()).             aggs.add(new InternalDerivative(name(), gradient, xDiff, formatter, new ArrayList<PipelineAggregator>(), metaData())).             Bucket newBucket = factory.createBucket(factory.getKey(bucket), bucket.getDocCount(), new InternalAggregations(aggs)).             newBuckets.add(newBucket).         } else {             newBuckets.add(bucket).         }         lastBucketKey = thisBucketKey.         lastBucketValue = thisBucketValue.     }     return factory.createAggregation(newBuckets). }
