commented;modifiers;parameterAmount;loc;comment;code
true;public;1;4;/**  * The types of documents the query will run against. Defaults to all types.  */ ;/**  * The types of documents the query will run against. Defaults to all types.  */ public ValidateQueryRequestBuilder setTypes(String... types) {     request.types(types).     return this. }
true;public;1;4;/**  * The query to validate.  *  * @see org.elasticsearch.index.query.QueryBuilders  */ ;/**  * The query to validate.  *  * @see org.elasticsearch.index.query.QueryBuilders  */ public ValidateQueryRequestBuilder setQuery(QueryBuilder queryBuilder) {     request.query(queryBuilder).     return this. }
true;public;1;4;/**  * Indicates if detailed information about the query should be returned.  *  * @see org.elasticsearch.index.query.QueryBuilders  */ ;/**  * Indicates if detailed information about the query should be returned.  *  * @see org.elasticsearch.index.query.QueryBuilders  */ public ValidateQueryRequestBuilder setExplain(boolean explain) {     request.explain(explain).     return this. }
true;public;1;4;/**  * Indicates whether the query should be rewritten into primitive queries  */ ;/**  * Indicates whether the query should be rewritten into primitive queries  */ public ValidateQueryRequestBuilder setRewrite(boolean rewrite) {     request.rewrite(rewrite).     return this. }
true;public;1;4;/**  * Indicates whether the query should be validated on all shards  */ ;/**  * Indicates whether the query should be validated on all shards  */ public ValidateQueryRequestBuilder setAllShards(boolean rewrite) {     request.allShards(rewrite).     return this. }
