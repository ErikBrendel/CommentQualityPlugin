# id;timestamp;commentText;codeText;commentWords;codeWords
ParentTaskAssigningClient -> public ParentTaskAssigningClient(Client in, DiscoveryNode localNode, Task parentTask);1524684173;Convenience constructor for building the TaskId out of what is usually at hand.;public ParentTaskAssigningClient(Client in, DiscoveryNode localNode, Task parentTask) {_        this(in, new TaskId(localNode.getId(), parentTask.getId()))__    };convenience,constructor,for,building,the,task,id,out,of,what,is,usually,at,hand;public,parent,task,assigning,client,client,in,discovery,node,local,node,task,parent,task,this,in,new,task,id,local,node,get,id,parent,task,get,id
ParentTaskAssigningClient -> public ParentTaskAssigningClient(Client in, DiscoveryNode localNode, Task parentTask);1527840262;Convenience constructor for building the TaskId out of what is usually at hand.;public ParentTaskAssigningClient(Client in, DiscoveryNode localNode, Task parentTask) {_        this(in, new TaskId(localNode.getId(), parentTask.getId()))__    };convenience,constructor,for,building,the,task,id,out,of,what,is,usually,at,hand;public,parent,task,assigning,client,client,in,discovery,node,local,node,task,parent,task,this,in,new,task,id,local,node,get,id,parent,task,get,id
ParentTaskAssigningClient -> public ParentTaskAssigningClient(Client in, DiscoveryNode localNode, Task parentTask);1529433467;Convenience constructor for building the TaskId out of what is usually at hand.;public ParentTaskAssigningClient(Client in, DiscoveryNode localNode, Task parentTask) {_        this(in, new TaskId(localNode.getId(), parentTask.getId()))__    };convenience,constructor,for,building,the,task,id,out,of,what,is,usually,at,hand;public,parent,task,assigning,client,client,in,discovery,node,local,node,task,parent,task,this,in,new,task,id,local,node,get,id,parent,task,get,id
ParentTaskAssigningClient -> public ParentTaskAssigningClient(Client in, DiscoveryNode localNode, Task parentTask);1529600205;Convenience constructor for building the TaskId out of what is usually at hand.;public ParentTaskAssigningClient(Client in, DiscoveryNode localNode, Task parentTask) {_        this(in, new TaskId(localNode.getId(), parentTask.getId()))__    };convenience,constructor,for,building,the,task,id,out,of,what,is,usually,at,hand;public,parent,task,assigning,client,client,in,discovery,node,local,node,task,parent,task,this,in,new,task,id,local,node,get,id,parent,task,get,id
ParentTaskAssigningClient -> public ParentTaskAssigningClient(Client in, TaskId parentTask);1524684173;Standard constructor.;public ParentTaskAssigningClient(Client in, TaskId parentTask) {_        super(in)__        this.parentTask = parentTask__    };standard,constructor;public,parent,task,assigning,client,client,in,task,id,parent,task,super,in,this,parent,task,parent,task
ParentTaskAssigningClient -> public ParentTaskAssigningClient(Client in, TaskId parentTask);1527840262;Standard constructor.;public ParentTaskAssigningClient(Client in, TaskId parentTask) {_        super(in)__        this.parentTask = parentTask__    };standard,constructor;public,parent,task,assigning,client,client,in,task,id,parent,task,super,in,this,parent,task,parent,task
ParentTaskAssigningClient -> public ParentTaskAssigningClient(Client in, TaskId parentTask);1529433467;Standard constructor.;public ParentTaskAssigningClient(Client in, TaskId parentTask) {_        super(in)__        this.parentTask = parentTask__    };standard,constructor;public,parent,task,assigning,client,client,in,task,id,parent,task,super,in,this,parent,task,parent,task
ParentTaskAssigningClient -> public ParentTaskAssigningClient(Client in, TaskId parentTask);1529600205;Standard constructor.;public ParentTaskAssigningClient(Client in, TaskId parentTask) {_        super(in)__        this.parentTask = parentTask__    };standard,constructor;public,parent,task,assigning,client,client,in,task,id,parent,task,super,in,this,parent,task,parent,task
ParentTaskAssigningClient -> public Client unwrap();1524684173;Fetch the wrapped client. Use this to make calls that don't set {@link ActionRequest#setParentTask(TaskId)}.;public Client unwrap() {_        return in()__    };fetch,the,wrapped,client,use,this,to,make,calls,that,don,t,set,link,action,request,set,parent,task,task,id;public,client,unwrap,return,in
ParentTaskAssigningClient -> public Client unwrap();1527840262;Fetch the wrapped client. Use this to make calls that don't set {@link ActionRequest#setParentTask(TaskId)}.;public Client unwrap() {_        return in()__    };fetch,the,wrapped,client,use,this,to,make,calls,that,don,t,set,link,action,request,set,parent,task,task,id;public,client,unwrap,return,in
ParentTaskAssigningClient -> public Client unwrap();1529433467;Fetch the wrapped client. Use this to make calls that don't set {@link ActionRequest#setParentTask(TaskId)}.;public Client unwrap() {_        return in()__    };fetch,the,wrapped,client,use,this,to,make,calls,that,don,t,set,link,action,request,set,parent,task,task,id;public,client,unwrap,return,in
ParentTaskAssigningClient -> public Client unwrap();1529600205;Fetch the wrapped client. Use this to make calls that don't set {@link ActionRequest#setParentTask(TaskId)}.;public Client unwrap() {_        return in()__    };fetch,the,wrapped,client,use,this,to,make,calls,that,don,t,set,link,action,request,set,parent,task,task,id;public,client,unwrap,return,in
