commented;modifiers;parameterAmount;loc;comment;code
false;public;1;6;;@Override public void writeTo(StreamOutput out) throws IOException {     out.writeOptionalString(key).     out.writeVLong(docCount).     aggregations.writeTo(out). }
false;public;0;4;;@Override public String getKey() {     return key. }
false;public;0;4;;@Override public String getKeyAsString() {     return key. }
false;public;0;4;;@Override public long getDocCount() {     return docCount. }
false;public;0;4;;@Override public Aggregations getAggregations() {     return aggregations. }
false;;2;14;;InternalBucket reduce(List<InternalBucket> buckets, ReduceContext context) {     InternalBucket reduced = null.     List<InternalAggregations> aggregationsList = new ArrayList<>(buckets.size()).     for (InternalBucket bucket : buckets) {         if (reduced == null) {             reduced = new InternalBucket(bucket.key, bucket.docCount, bucket.aggregations).         } else {             reduced.docCount += bucket.docCount.         }         aggregationsList.add(bucket.aggregations).     }     reduced.aggregations = InternalAggregations.reduce(aggregationsList, context).     return reduced. }
false;public;2;9;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.startObject().     builder.field(CommonFields.KEY.getPreferredName(), key).     builder.field(CommonFields.DOC_COUNT.getPreferredName(), docCount).     aggregations.toXContentInternal(builder, params).     builder.endObject().     return builder. }
false;public;1;13;;@Override public boolean equals(Object other) {     if (this == other) {         return true.     }     if (other == null || getClass() != other.getClass()) {         return false.     }     InternalBucket that = (InternalBucket) other.     return Objects.equals(key, that.key) && Objects.equals(docCount, that.docCount) && Objects.equals(aggregations, that.aggregations). }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(getClass(), key, docCount, aggregations). }
false;protected;1;7;;@Override protected void doWriteTo(StreamOutput out) throws IOException {     out.writeVInt(buckets.size()).     for (InternalBucket bucket : buckets) {         bucket.writeTo(out).     } }
false;public;0;4;;@Override public String getWriteableName() {     return AdjacencyMatrixAggregationBuilder.NAME. }
false;public;1;4;;@Override public InternalAdjacencyMatrix create(List<InternalBucket> buckets) {     return new InternalAdjacencyMatrix(this.name, buckets, this.pipelineAggregators(), this.metaData). }
false;public;2;4;;@Override public InternalBucket createBucket(InternalAggregations aggregations, InternalBucket prototype) {     return new InternalBucket(prototype.key, prototype.docCount, aggregations). }
false;public;0;4;;@Override public List<InternalBucket> getBuckets() {     return buckets. }
false;public;1;10;;@Override public InternalBucket getBucketByKey(String key) {     if (bucketMap == null) {         bucketMap = new HashMap<>(buckets.size()).         for (InternalBucket bucket : buckets) {             bucketMap.put(bucket.getKey(), bucket).         }     }     return bucketMap.get(key). }
false;public;2;32;;@Override public InternalAggregation doReduce(List<InternalAggregation> aggregations, ReduceContext reduceContext) {     Map<String, List<InternalBucket>> bucketsMap = new HashMap<>().     for (InternalAggregation aggregation : aggregations) {         InternalAdjacencyMatrix filters = (InternalAdjacencyMatrix) aggregation.         for (InternalBucket bucket : filters.buckets) {             List<InternalBucket> sameRangeList = bucketsMap.get(bucket.key).             if (sameRangeList == null) {                 sameRangeList = new ArrayList<>(aggregations.size()).                 bucketsMap.put(bucket.key, sameRangeList).             }             sameRangeList.add(bucket).         }     }     ArrayList<InternalBucket> reducedBuckets = new ArrayList<>(bucketsMap.size()).     for (List<InternalBucket> sameRangeList : bucketsMap.values()) {         InternalBucket reducedBucket = sameRangeList.get(0).reduce(sameRangeList, reduceContext).         if (reducedBucket.docCount >= 1) {             reduceContext.consumeBucketsAndMaybeBreak(1).             reducedBuckets.add(reducedBucket).         } else {             reduceContext.consumeBucketsAndMaybeBreak(-countInnerBucket(reducedBucket)).         }     }     Collections.sort(reducedBuckets, Comparator.comparing(InternalBucket::getKey)).     InternalAdjacencyMatrix reduced = new InternalAdjacencyMatrix(name, reducedBuckets, pipelineAggregators(), getMetaData()).     return reduced. }
false;public;2;9;;@Override public XContentBuilder doXContentBody(XContentBuilder builder, Params params) throws IOException {     builder.startArray(CommonFields.BUCKETS.getPreferredName()).     for (InternalBucket bucket : buckets) {         bucket.toXContent(builder, params).     }     builder.endArray().     return builder. }
false;protected;0;4;;@Override protected int doHashCode() {     return Objects.hash(buckets). }
false;protected;1;5;;@Override protected boolean doEquals(Object obj) {     InternalAdjacencyMatrix that = (InternalAdjacencyMatrix) obj.     return Objects.equals(buckets, that.buckets). }
