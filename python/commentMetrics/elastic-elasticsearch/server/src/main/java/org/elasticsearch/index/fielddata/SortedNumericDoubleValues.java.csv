commented;modifiers;parameterAmount;loc;comment;code
true;public,abstract;1;1;/**  * Advance the iterator to exactly {@code target} and return whether  *  {@code target} has a value.  *  {@code target} must be greater than or equal to the current  *  doc ID and must be a valid doc ID, ie. &ge. 0 and  *  &lt. {@code maxDoc}.  */ ;/**  * Advance the iterator to exactly {@code target} and return whether  *  {@code target} has a value.  *  {@code target} must be greater than or equal to the current  *  doc ID and must be a valid doc ID, ie. &ge. 0 and  *  &lt. {@code maxDoc}.  */ public abstract boolean advanceExact(int target) throws IOException.
true;public,abstract;0;1;/**  * Iterates to the next value in the current document. Do not call this more than  * {@link #docValueCount} times for the document.  */ ;/**  * Iterates to the next value in the current document. Do not call this more than  * {@link #docValueCount} times for the document.  */ public abstract double nextValue() throws IOException.
true;public,abstract;0;1;/**  * Retrieves the number of values for the current document.  This must always  * be greater than zero.  * It is illegal to call this method after {@link #advanceExact(int)}  * returned {@code false}.  */ ;/**  * Retrieves the number of values for the current document.  This must always  * be greater than zero.  * It is illegal to call this method after {@link #advanceExact(int)}  * returned {@code false}.  */ public abstract int docValueCount().
