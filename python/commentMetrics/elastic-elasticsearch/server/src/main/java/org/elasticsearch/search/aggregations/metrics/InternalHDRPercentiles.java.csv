commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String getWriteableName() {     return NAME. }
false;public;0;4;;@Override public Iterator<Percentile> iterator() {     return new Iter(keys, state). }
false;public;1;7;;@Override public double percentile(double percent) {     if (state.getTotalCount() == 0) {         return Double.NaN.     }     return state.getValueAtPercentile(percent). }
false;public;1;4;;@Override public String percentileAsString(double percent) {     return valueAsString(String.valueOf(percent)). }
false;public;1;4;;@Override public double value(double key) {     return percentile(key). }
false;protected;6;5;;@Override protected AbstractInternalHDRPercentiles createReduced(String name, double[] keys, DoubleHistogram merged, boolean keyed, List<PipelineAggregator> pipelineAggregators, Map<String, Object> metaData) {     return new InternalHDRPercentiles(name, keys, merged, keyed, format, pipelineAggregators, metaData). }
false;public;0;4;;@Override public boolean hasNext() {     return i < percents.length. }
false;public;0;8;;@Override public Percentile next() {     double percent = percents[i].     double value = (state.getTotalCount() == 0) ? Double.NaN : state.getValueAtPercentile(percent).     final Percentile next = new Percentile(percent, value).     ++i.     return next. }
false;public,final;0;4;;@Override public final void remove() {     throw new UnsupportedOperationException(). }
