commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String getName() {     return "document_multi_term_vectors_action". }
false;public;2;19;;@Override public RestChannelConsumer prepareRequest(final RestRequest request, final NodeClient client) throws IOException {     MultiTermVectorsRequest multiTermVectorsRequest = new MultiTermVectorsRequest().     TermVectorsRequest template = new TermVectorsRequest().index(request.param("index")).     if (request.hasParam("type")) {         deprecationLogger.deprecatedAndMaybeLog("mtermvectors_with_types", TYPES_DEPRECATION_MESSAGE).         template.type(request.param("type")).     } else {         template.type(MapperService.SINGLE_MAPPING_NAME).     }     RestTermVectorsAction.readURIParameters(template, request).     multiTermVectorsRequest.ids(Strings.commaDelimitedListToStringArray(request.param("ids"))).     request.withContentOrSourceParamParserOrNull(p -> multiTermVectorsRequest.add(template, p)).     return channel -> client.multiTermVectors(multiTermVectorsRequest, new RestToXContentListener<>(channel)). }
