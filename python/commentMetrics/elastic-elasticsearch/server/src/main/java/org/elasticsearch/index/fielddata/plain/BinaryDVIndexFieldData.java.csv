commented;modifiers;parameterAmount;loc;comment;code
false;public;1;4;;@Override public BinaryDVAtomicFieldData load(LeafReaderContext context) {     return new BinaryDVAtomicFieldData(context.reader(), fieldName). }
false;public;1;4;;@Override public BinaryDVAtomicFieldData loadDirect(LeafReaderContext context) throws Exception {     return load(context). }
false;public;4;19;;@Override public SortField sortField(@Nullable Object missingValue, MultiValueMode sortMode, XFieldComparatorSource.Nested nested, boolean reverse) {     XFieldComparatorSource source = new BytesRefFieldComparatorSource(this, missingValue, sortMode, nested).     /**      * Check if we can use a simple {@link SortedSetSortField} compatible with index sorting and      * returns a custom sort field otherwise.      */     if (nested != null || (sortMode != MultiValueMode.MAX && sortMode != MultiValueMode.MIN) || (source.sortMissingFirst(missingValue) == false && source.sortMissingLast(missingValue) == false)) {         return new SortField(getFieldName(), source, reverse).     }     SortField sortField = new SortedSetSortField(fieldName, reverse, sortMode == MultiValueMode.MAX ? SortedSetSelector.Type.MAX : SortedSetSelector.Type.MIN).     sortField.setMissingValue(source.sortMissingLast(missingValue) ^ reverse ? SortedSetSortField.STRING_LAST : SortedSetSortField.STRING_FIRST).     return sortField. }
