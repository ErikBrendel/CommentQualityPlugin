commented;modifiers;parameterAmount;loc;comment;code
true;public;1;4;/**  * Sets the repository name  *  * @param repository repository name  * @return this builder  */ ;/**  * Sets the repository name  *  * @param repository repository name  * @return this builder  */ public SnapshotsStatusRequestBuilder setRepository(String repository) {     request.repository(repository).     return this. }
true;public;1;4;/**  * Sets list of snapshots to return  *  * @param snapshots list of snapshots  * @return this builder  */ ;/**  * Sets list of snapshots to return  *  * @param snapshots list of snapshots  * @return this builder  */ public SnapshotsStatusRequestBuilder setSnapshots(String... snapshots) {     request.snapshots(snapshots).     return this. }
true;public;1;4;/**  * Adds additional snapshots to the list of snapshots to return  *  * @param snapshots additional snapshots  * @return this builder  */ ;/**  * Adds additional snapshots to the list of snapshots to return  *  * @param snapshots additional snapshots  * @return this builder  */ public SnapshotsStatusRequestBuilder addSnapshots(String... snapshots) {     request.snapshots(ArrayUtils.concat(request.snapshots(), snapshots)).     return this. }
true;public;1;4;/**  * Set to <code>true</code> to ignore unavailable snapshots, instead of throwing an exception.  * Defaults to <code>false</code>, which means unavailable snapshots cause an exception to be thrown.  *  * @param ignoreUnavailable whether to ignore unavailable snapshots.  * @return this builder  */ ;/**  * Set to <code>true</code> to ignore unavailable snapshots, instead of throwing an exception.  * Defaults to <code>false</code>, which means unavailable snapshots cause an exception to be thrown.  *  * @param ignoreUnavailable whether to ignore unavailable snapshots.  * @return this builder  */ public SnapshotsStatusRequestBuilder setIgnoreUnavailable(boolean ignoreUnavailable) {     request.ignoreUnavailable(ignoreUnavailable).     return this. }
