# id;timestamp;commentText;codeText;commentWords;codeWords
TruncateTranslogAction -> private static int writeEmptyTranslog(Path filename, String translogUUID) throws IOException;1537371806;Write a translog containing the given translog UUID to the given location. Returns the number of bytes written.;private static int writeEmptyTranslog(Path filename, String translogUUID) throws IOException {_        try (FileChannel fc = FileChannel.open(filename, StandardOpenOption.WRITE, StandardOpenOption.CREATE_NEW)) {_            TranslogHeader header = new TranslogHeader(translogUUID, TranslogHeader.UNKNOWN_PRIMARY_TERM)__            header.write(fc)__            return header.sizeInBytes()__        }_    };write,a,translog,containing,the,given,translog,uuid,to,the,given,location,returns,the,number,of,bytes,written;private,static,int,write,empty,translog,path,filename,string,translog,uuid,throws,ioexception,try,file,channel,fc,file,channel,open,filename,standard,open,option,write,standard,open,option,translog,header,header,new,translog,header,translog,uuid,translog,header,header,write,fc,return,header,size,in,bytes
TruncateTranslogAction -> private static int writeEmptyTranslog(Path filename, String translogUUID) throws IOException;1540486836;Write a translog containing the given translog UUID to the given location. Returns the number of bytes written.;private static int writeEmptyTranslog(Path filename, String translogUUID) throws IOException {_        try (FileChannel fc = FileChannel.open(filename, StandardOpenOption.WRITE, StandardOpenOption.CREATE_NEW)) {_            TranslogHeader header = new TranslogHeader(translogUUID, TranslogHeader.UNKNOWN_PRIMARY_TERM)__            header.write(fc)__            return header.sizeInBytes()__        }_    };write,a,translog,containing,the,given,translog,uuid,to,the,given,location,returns,the,number,of,bytes,written;private,static,int,write,empty,translog,path,filename,string,translog,uuid,throws,ioexception,try,file,channel,fc,file,channel,open,filename,standard,open,option,write,standard,open,option,translog,header,header,new,translog,header,translog,uuid,translog,header,header,write,fc,return,header,size,in,bytes
TruncateTranslogAction -> private static int writeEmptyTranslog(Path filename, String translogUUID) throws IOException;1545221705;Write a translog containing the given translog UUID to the given location. Returns the number of bytes written.;private static int writeEmptyTranslog(Path filename, String translogUUID) throws IOException {_        try (FileChannel fc = FileChannel.open(filename, StandardOpenOption.WRITE, StandardOpenOption.CREATE_NEW)) {_            TranslogHeader header = new TranslogHeader(translogUUID, SequenceNumbers.UNASSIGNED_PRIMARY_TERM)__            header.write(fc)__            return header.sizeInBytes()__        }_    };write,a,translog,containing,the,given,translog,uuid,to,the,given,location,returns,the,number,of,bytes,written;private,static,int,write,empty,translog,path,filename,string,translog,uuid,throws,ioexception,try,file,channel,fc,file,channel,open,filename,standard,open,option,write,standard,open,option,translog,header,header,new,translog,header,translog,uuid,sequence,numbers,header,write,fc,return,header,size,in,bytes
TruncateTranslogAction -> private static int writeEmptyTranslog(Path filename, String translogUUID) throws IOException;1549021898;Write a translog containing the given translog UUID to the given location. Returns the number of bytes written.;private static int writeEmptyTranslog(Path filename, String translogUUID) throws IOException {_        try (FileChannel fc = FileChannel.open(filename, StandardOpenOption.WRITE, StandardOpenOption.CREATE_NEW)) {_            TranslogHeader header = new TranslogHeader(translogUUID, SequenceNumbers.UNASSIGNED_PRIMARY_TERM)__            header.write(fc)__            return header.sizeInBytes()__        }_    };write,a,translog,containing,the,given,translog,uuid,to,the,given,location,returns,the,number,of,bytes,written;private,static,int,write,empty,translog,path,filename,string,translog,uuid,throws,ioexception,try,file,channel,fc,file,channel,open,filename,standard,open,option,write,standard,open,option,translog,header,header,new,translog,header,translog,uuid,sequence,numbers,header,write,fc,return,header,size,in,bytes
TruncateTranslogAction -> public static Set<Path> filesInDirectory(Path directory) throws IOException;1537371806;Return a Set of all files in a given directory;public static Set<Path> filesInDirectory(Path directory) throws IOException {_        Set<Path> files = new TreeSet<>()__        try (DirectoryStream<Path> stream = Files.newDirectoryStream(directory)) {_            for (Path file : stream) {_                files.add(file)__            }_        }_        return files__    };return,a,set,of,all,files,in,a,given,directory;public,static,set,path,files,in,directory,path,directory,throws,ioexception,set,path,files,new,tree,set,try,directory,stream,path,stream,files,new,directory,stream,directory,for,path,file,stream,files,add,file,return,files
TruncateTranslogAction -> public static Set<Path> filesInDirectory(Path directory) throws IOException;1540486836;Return a Set of all files in a given directory;public static Set<Path> filesInDirectory(Path directory) throws IOException {_        Set<Path> files = new TreeSet<>()__        try (DirectoryStream<Path> stream = Files.newDirectoryStream(directory)) {_            for (Path file : stream) {_                files.add(file)__            }_        }_        return files__    };return,a,set,of,all,files,in,a,given,directory;public,static,set,path,files,in,directory,path,directory,throws,ioexception,set,path,files,new,tree,set,try,directory,stream,path,stream,files,new,directory,stream,directory,for,path,file,stream,files,add,file,return,files
TruncateTranslogAction -> public static Set<Path> filesInDirectory(Path directory) throws IOException;1545221705;Return a Set of all files in a given directory;public static Set<Path> filesInDirectory(Path directory) throws IOException {_        Set<Path> files = new TreeSet<>()__        try (DirectoryStream<Path> stream = Files.newDirectoryStream(directory)) {_            for (Path file : stream) {_                files.add(file)__            }_        }_        return files__    };return,a,set,of,all,files,in,a,given,directory;public,static,set,path,files,in,directory,path,directory,throws,ioexception,set,path,files,new,tree,set,try,directory,stream,path,stream,files,new,directory,stream,directory,for,path,file,stream,files,add,file,return,files
TruncateTranslogAction -> public static Set<Path> filesInDirectory(Path directory) throws IOException;1549021898;Return a Set of all files in a given directory;public static Set<Path> filesInDirectory(Path directory) throws IOException {_        Set<Path> files = new TreeSet<>()__        try (DirectoryStream<Path> stream = Files.newDirectoryStream(directory)) {_            for (Path file : stream) {_                files.add(file)__            }_        }_        return files__    };return,a,set,of,all,files,in,a,given,directory;public,static,set,path,files,in,directory,path,directory,throws,ioexception,set,path,files,new,tree,set,try,directory,stream,path,stream,files,new,directory,stream,directory,for,path,file,stream,files,add,file,return,files
TruncateTranslogAction -> static void writeEmptyCheckpoint(Path filename, int translogLength, long translogGeneration, long globalCheckpoint) throws IOException;1537371806;Write a checkpoint file to the given location with the given generation;static void writeEmptyCheckpoint(Path filename, int translogLength, long translogGeneration, long globalCheckpoint) throws IOException {_        Checkpoint emptyCheckpoint = Checkpoint.emptyTranslogCheckpoint(translogLength, translogGeneration,_            globalCheckpoint, translogGeneration)__        Checkpoint.write(FileChannel::open, filename, emptyCheckpoint,_            StandardOpenOption.WRITE, StandardOpenOption.READ, StandardOpenOption.CREATE_NEW)__        _        IOUtils.fsync(filename, false)__    };write,a,checkpoint,file,to,the,given,location,with,the,given,generation;static,void,write,empty,checkpoint,path,filename,int,translog,length,long,translog,generation,long,global,checkpoint,throws,ioexception,checkpoint,empty,checkpoint,checkpoint,empty,translog,checkpoint,translog,length,translog,generation,global,checkpoint,translog,generation,checkpoint,write,file,channel,open,filename,empty,checkpoint,standard,open,option,write,standard,open,option,read,standard,open,option,ioutils,fsync,filename,false
TruncateTranslogAction -> static void writeEmptyCheckpoint(Path filename, int translogLength, long translogGeneration, long globalCheckpoint) throws IOException;1540486836;Write a checkpoint file to the given location with the given generation;static void writeEmptyCheckpoint(Path filename, int translogLength, long translogGeneration, long globalCheckpoint) throws IOException {_        Checkpoint emptyCheckpoint = Checkpoint.emptyTranslogCheckpoint(translogLength, translogGeneration,_            globalCheckpoint, translogGeneration)__        Checkpoint.write(FileChannel::open, filename, emptyCheckpoint,_            StandardOpenOption.WRITE, StandardOpenOption.READ, StandardOpenOption.CREATE_NEW)__        _        IOUtils.fsync(filename, false)__    };write,a,checkpoint,file,to,the,given,location,with,the,given,generation;static,void,write,empty,checkpoint,path,filename,int,translog,length,long,translog,generation,long,global,checkpoint,throws,ioexception,checkpoint,empty,checkpoint,checkpoint,empty,translog,checkpoint,translog,length,translog,generation,global,checkpoint,translog,generation,checkpoint,write,file,channel,open,filename,empty,checkpoint,standard,open,option,write,standard,open,option,read,standard,open,option,ioutils,fsync,filename,false
TruncateTranslogAction -> static void writeEmptyCheckpoint(Path filename, int translogLength, long translogGeneration, long globalCheckpoint) throws IOException;1545221705;Write a checkpoint file to the given location with the given generation;static void writeEmptyCheckpoint(Path filename, int translogLength, long translogGeneration, long globalCheckpoint) throws IOException {_        Checkpoint emptyCheckpoint = Checkpoint.emptyTranslogCheckpoint(translogLength, translogGeneration,_            globalCheckpoint, translogGeneration)__        Checkpoint.write(FileChannel::open, filename, emptyCheckpoint,_            StandardOpenOption.WRITE, StandardOpenOption.READ, StandardOpenOption.CREATE_NEW)__        _        IOUtils.fsync(filename, false)__    };write,a,checkpoint,file,to,the,given,location,with,the,given,generation;static,void,write,empty,checkpoint,path,filename,int,translog,length,long,translog,generation,long,global,checkpoint,throws,ioexception,checkpoint,empty,checkpoint,checkpoint,empty,translog,checkpoint,translog,length,translog,generation,global,checkpoint,translog,generation,checkpoint,write,file,channel,open,filename,empty,checkpoint,standard,open,option,write,standard,open,option,read,standard,open,option,ioutils,fsync,filename,false
TruncateTranslogAction -> static void writeEmptyCheckpoint(Path filename, int translogLength, long translogGeneration, long globalCheckpoint) throws IOException;1549021898;Write a checkpoint file to the given location with the given generation;static void writeEmptyCheckpoint(Path filename, int translogLength, long translogGeneration, long globalCheckpoint) throws IOException {_        Checkpoint emptyCheckpoint = Checkpoint.emptyTranslogCheckpoint(translogLength, translogGeneration,_            globalCheckpoint, translogGeneration)__        Checkpoint.write(FileChannel::open, filename, emptyCheckpoint,_            StandardOpenOption.WRITE, StandardOpenOption.READ, StandardOpenOption.CREATE_NEW)__        _        IOUtils.fsync(filename, false)__    };write,a,checkpoint,file,to,the,given,location,with,the,given,generation;static,void,write,empty,checkpoint,path,filename,int,translog,length,long,translog,generation,long,global,checkpoint,throws,ioexception,checkpoint,empty,checkpoint,checkpoint,empty,translog,checkpoint,translog,length,translog,generation,global,checkpoint,translog,generation,checkpoint,write,file,channel,open,filename,empty,checkpoint,standard,open,option,write,standard,open,option,read,standard,open,option,ioutils,fsync,filename,false
TruncateTranslogAction -> private String deletingFilesDetails(Path translogPath, Set<Path> files);1537371806;Show a warning about deleting files, asking for a confirmation if {@code batchMode} is false;private String deletingFilesDetails(Path translogPath, Set<Path> files) {_        StringBuilder builder = new StringBuilder()___        builder_            .append("Documents inside of translog files will be lost.\n")_            .append("  The following files will be DELETED at ")_            .append(translogPath)_            .append("\n\n")__        for(Iterator<Path> it = files.iterator()_it.hasNext()_) {_            builder.append("  --> ").append(it.next().getFileName())__            if (it.hasNext()) {_                builder.append("\n")__            }_        }_        return builder.toString()__    };show,a,warning,about,deleting,files,asking,for,a,confirmation,if,code,batch,mode,is,false;private,string,deleting,files,details,path,translog,path,set,path,files,string,builder,builder,new,string,builder,builder,append,documents,inside,of,translog,files,will,be,lost,n,append,the,following,files,will,be,deleted,at,append,translog,path,append,n,n,for,iterator,path,it,files,iterator,it,has,next,builder,append,append,it,next,get,file,name,if,it,has,next,builder,append,n,return,builder,to,string
TruncateTranslogAction -> private String deletingFilesDetails(Path translogPath, Set<Path> files);1540486836;Show a warning about deleting files, asking for a confirmation if {@code batchMode} is false;private String deletingFilesDetails(Path translogPath, Set<Path> files) {_        StringBuilder builder = new StringBuilder()___        builder_            .append("Documents inside of translog files will be lost.\n")_            .append("  The following files will be DELETED at ")_            .append(translogPath)_            .append("\n\n")__        for(Iterator<Path> it = files.iterator()_it.hasNext()_) {_            builder.append("  --> ").append(it.next().getFileName())__            if (it.hasNext()) {_                builder.append("\n")__            }_        }_        return builder.toString()__    };show,a,warning,about,deleting,files,asking,for,a,confirmation,if,code,batch,mode,is,false;private,string,deleting,files,details,path,translog,path,set,path,files,string,builder,builder,new,string,builder,builder,append,documents,inside,of,translog,files,will,be,lost,n,append,the,following,files,will,be,deleted,at,append,translog,path,append,n,n,for,iterator,path,it,files,iterator,it,has,next,builder,append,append,it,next,get,file,name,if,it,has,next,builder,append,n,return,builder,to,string
TruncateTranslogAction -> private String deletingFilesDetails(Path translogPath, Set<Path> files);1545221705;Show a warning about deleting files, asking for a confirmation if {@code batchMode} is false;private String deletingFilesDetails(Path translogPath, Set<Path> files) {_        StringBuilder builder = new StringBuilder()___        builder_            .append("Documents inside of translog files will be lost.\n")_            .append("  The following files will be DELETED at ")_            .append(translogPath)_            .append("\n\n")__        for(Iterator<Path> it = files.iterator()_it.hasNext()_) {_            builder.append("  --> ").append(it.next().getFileName())__            if (it.hasNext()) {_                builder.append("\n")__            }_        }_        return builder.toString()__    };show,a,warning,about,deleting,files,asking,for,a,confirmation,if,code,batch,mode,is,false;private,string,deleting,files,details,path,translog,path,set,path,files,string,builder,builder,new,string,builder,builder,append,documents,inside,of,translog,files,will,be,lost,n,append,the,following,files,will,be,deleted,at,append,translog,path,append,n,n,for,iterator,path,it,files,iterator,it,has,next,builder,append,append,it,next,get,file,name,if,it,has,next,builder,append,n,return,builder,to,string
TruncateTranslogAction -> private String deletingFilesDetails(Path translogPath, Set<Path> files);1549021898;Show a warning about deleting files, asking for a confirmation if {@code batchMode} is false;private String deletingFilesDetails(Path translogPath, Set<Path> files) {_        StringBuilder builder = new StringBuilder()___        builder_            .append("Documents inside of translog files will be lost.\n")_            .append("  The following files will be DELETED at ")_            .append(translogPath)_            .append("\n\n")__        for(Iterator<Path> it = files.iterator()_it.hasNext()_) {_            builder.append("  --> ").append(it.next().getFileName())__            if (it.hasNext()) {_                builder.append("\n")__            }_        }_        return builder.toString()__    };show,a,warning,about,deleting,files,asking,for,a,confirmation,if,code,batch,mode,is,false;private,string,deleting,files,details,path,translog,path,set,path,files,string,builder,builder,new,string,builder,builder,append,documents,inside,of,translog,files,will,be,lost,n,append,the,following,files,will,be,deleted,at,append,translog,path,append,n,n,for,iterator,path,it,files,iterator,it,has,next,builder,append,append,it,next,get,file,name,if,it,has,next,builder,append,n,return,builder,to,string
