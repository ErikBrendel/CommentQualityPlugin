commented;modifiers;parameterAmount;loc;comment;code
false;public;1;7;;@Override public void writeTo(StreamOutput out) throws IOException {     out.write(processors.size()).     for (ProcessorInfo info : processors) {         info.writeTo(out).     } }
false;public;0;3;;public Iterable<ProcessorInfo> getProcessors() {     return processors. }
false;public;1;3;;public boolean containsProcessor(String type) {     return processors.contains(new ProcessorInfo(type)). }
false;public;2;11;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.startObject("ingest").     builder.startArray("processors").     for (ProcessorInfo info : processors) {         info.toXContent(builder, params).     }     builder.endArray().     builder.endObject().     return builder. }
false;public;1;7;;@Override public boolean equals(Object o) {     if (this == o)         return true.     if (o == null || getClass() != o.getClass())         return false.     IngestInfo that = (IngestInfo) o.     return Objects.equals(processors, that.processors). }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(processors). }
