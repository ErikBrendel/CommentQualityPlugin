commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public State state() {     return this.state. }
true;public;0;3;/**  * Returns {@code true} if the state is initialized.  */ ;/**  * Returns {@code true} if the state is initialized.  */ public boolean initialized() {     return state == State.INITIALIZED. }
true;public;0;3;/**  * Returns {@code true} if the state is started.  */ ;/**  * Returns {@code true} if the state is started.  */ public boolean started() {     return state == State.STARTED. }
true;public;0;3;/**  * Returns {@code true} if the state is stopped.  */ ;/**  * Returns {@code true} if the state is stopped.  */ public boolean stopped() {     return state == State.STOPPED. }
true;public;0;3;/**  * Returns {@code true} if the state is closed.  */ ;/**  * Returns {@code true} if the state is closed.  */ public boolean closed() {     return state == State.CLOSED. }
false;public;0;4;;public boolean stoppedOrClosed() {     Lifecycle.State state = this.state.     return state == State.STOPPED || state == State.CLOSED. }
false;public;0;13;;public boolean canMoveToStarted() throws IllegalStateException {     State localState = this.state.     if (localState == State.INITIALIZED || localState == State.STOPPED) {         return true.     }     if (localState == State.STARTED) {         return false.     }     if (localState == State.CLOSED) {         throw new IllegalStateException("Can't move to started state when closed").     }     throw new IllegalStateException("Can't move to started with unknown state"). }
false;public;0;14;;public boolean moveToStarted() throws IllegalStateException {     State localState = this.state.     if (localState == State.INITIALIZED || localState == State.STOPPED) {         state = State.STARTED.         return true.     }     if (localState == State.STARTED) {         return false.     }     if (localState == State.CLOSED) {         throw new IllegalStateException("Can't move to started state when closed").     }     throw new IllegalStateException("Can't move to started with unknown state"). }
false;public;0;13;;public boolean canMoveToStopped() throws IllegalStateException {     State localState = state.     if (localState == State.STARTED) {         return true.     }     if (localState == State.INITIALIZED || localState == State.STOPPED) {         return false.     }     if (localState == State.CLOSED) {         throw new IllegalStateException("Can't move to stopped state when closed").     }     throw new IllegalStateException("Can't move to stopped with unknown state"). }
false;public;0;14;;public boolean moveToStopped() throws IllegalStateException {     State localState = state.     if (localState == State.STARTED) {         state = State.STOPPED.         return true.     }     if (localState == State.INITIALIZED || localState == State.STOPPED) {         return false.     }     if (localState == State.CLOSED) {         throw new IllegalStateException("Can't move to stopped state when closed").     }     throw new IllegalStateException("Can't move to stopped with unknown state"). }
false;public;0;10;;public boolean canMoveToClosed() throws IllegalStateException {     State localState = state.     if (localState == State.CLOSED) {         return false.     }     if (localState == State.STARTED) {         throw new IllegalStateException("Can't move to closed before moving to stopped mode").     }     return true. }
false;public;0;11;;public boolean moveToClosed() throws IllegalStateException {     State localState = state.     if (localState == State.CLOSED) {         return false.     }     if (localState == State.STARTED) {         throw new IllegalStateException("Can't move to closed before moving to stopped mode").     }     state = State.CLOSED.     return true. }
false;public;0;4;;@Override public String toString() {     return state.toString(). }
