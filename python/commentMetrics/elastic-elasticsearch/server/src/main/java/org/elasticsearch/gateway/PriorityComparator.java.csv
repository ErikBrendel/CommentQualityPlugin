commented;modifiers;parameterAmount;loc;comment;code
false;public,final;2;18;;@Override public final int compare(ShardRouting o1, ShardRouting o2) {     final String o1Index = o1.getIndexName().     final String o2Index = o2.getIndexName().     int cmp = 0.     if (o1Index.equals(o2Index) == false) {         final Settings settingsO1 = getIndexSettings(o1.index()).         final Settings settingsO2 = getIndexSettings(o2.index()).         cmp = Long.compare(priority(settingsO2), priority(settingsO1)).         if (cmp == 0) {             cmp = Long.compare(timeCreated(settingsO2), timeCreated(settingsO1)).             if (cmp == 0) {                 cmp = o2Index.compareTo(o1Index).             }         }     }     return cmp. }
false;private;1;3;;private int priority(Settings settings) {     return IndexMetaData.INDEX_PRIORITY_SETTING.get(settings). }
false;private;1;3;;private long timeCreated(Settings settings) {     return settings.getAsLong(IndexMetaData.SETTING_CREATION_DATE, -1L). }
false;protected,abstract;1;1;;protected abstract Settings getIndexSettings(Index index).
false;protected;1;5;;@Override protected Settings getIndexSettings(Index index) {     IndexMetaData indexMetaData = allocation.metaData().getIndexSafe(index).     return indexMetaData.getSettings(). }
true;public,static;1;9;/**  * Returns a PriorityComparator that uses the RoutingAllocation index metadata to access the index setting per index.  */ ;/**  * Returns a PriorityComparator that uses the RoutingAllocation index metadata to access the index setting per index.  */ public static PriorityComparator getAllocationComparator(final RoutingAllocation allocation) {     return new PriorityComparator() {          @Override         protected Settings getIndexSettings(Index index) {             IndexMetaData indexMetaData = allocation.metaData().getIndexSafe(index).             return indexMetaData.getSettings().         }     }. }
