commented;modifiers;parameterAmount;loc;comment;code
false;protected,static;1;4;;protected static <T extends CreateIndexResponse> void declareFields(ConstructingObjectParser<T, Void> objectParser) {     declareAcknowledgedAndShardsAcknowledgedFields(objectParser).     objectParser.declareField(constructorArg(), (parser, context) -> parser.textOrNull(), INDEX, ObjectParser.ValueType.STRING_OR_NULL). }
false;public;1;6;;@Override public void readFrom(StreamInput in) throws IOException {     super.readFrom(in).     readShardsAcknowledged(in).     index = in.readString(). }
false;public;1;6;;@Override public void writeTo(StreamOutput out) throws IOException {     super.writeTo(out).     writeShardsAcknowledged(out).     out.writeString(index). }
false;public;0;3;;public String index() {     return index. }
false;protected;2;5;;@Override protected void addCustomFields(XContentBuilder builder, Params params) throws IOException {     super.addCustomFields(builder, params).     builder.field(INDEX.getPreferredName(), index()). }
false;public,static;1;3;;public static CreateIndexResponse fromXContent(XContentParser parser) {     return PARSER.apply(parser, null). }
false;public;1;8;;@Override public boolean equals(Object o) {     if (super.equals(o)) {         CreateIndexResponse that = (CreateIndexResponse) o.         return Objects.equals(index, that.index).     }     return false. }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(super.hashCode(), index). }
