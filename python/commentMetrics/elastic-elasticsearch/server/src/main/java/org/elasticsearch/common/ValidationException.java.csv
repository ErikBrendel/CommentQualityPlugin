commented;modifiers;parameterAmount;loc;comment;code
true;public,final;1;3;/**  * Add a new validation error to the accumulating validation errors  * @param error the error to add  */ ;/**  * Add a new validation error to the accumulating validation errors  * @param error the error to add  */ public final void addValidationError(String error) {     validationErrors.add(error). }
true;public,final;1;5;/**  * Add a sequence of validation errors to the accumulating validation errors  * @param errors the errors to add  */ ;/**  * Add a sequence of validation errors to the accumulating validation errors  * @param errors the errors to add  */ public final void addValidationErrors(Iterable<String> errors) {     for (String error : errors) {         validationErrors.add(error).     } }
true;public,final;0;3;/**  * Returns the validation errors accumulated  */ ;/**  * Returns the validation errors accumulated  */ public final List<String> validationErrors() {     return validationErrors. }
false;public,final;0;10;;@Override public final String getMessage() {     StringBuilder sb = new StringBuilder().     sb.append("Validation Failed: ").     int index = 0.     for (String error : validationErrors) {         sb.append(++index).append(": ").append(error).append(".").     }     return sb.toString(). }
