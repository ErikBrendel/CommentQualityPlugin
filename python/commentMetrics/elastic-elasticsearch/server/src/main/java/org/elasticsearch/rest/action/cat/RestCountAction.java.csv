commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String getName() {     return "cat_count_action". }
false;protected;1;5;;@Override protected void documentation(StringBuilder sb) {     sb.append("/_cat/count\n").     sb.append("/_cat/count/{index}\n"). }
false;public;1;5;;@Override public RestResponse buildResponse(SearchResponse countResponse) throws Exception {     assert countResponse.getHits().getTotalHits().relation == TotalHits.Relation.EQUAL_TO.     return RestTable.buildResponse(buildTable(request, countResponse), channel). }
false;public;2;28;;@Override public RestChannelConsumer doCatRequest(final RestRequest request, final NodeClient client) {     String[] indices = Strings.splitStringByCommaToArray(request.param("index")).     SearchRequest countRequest = new SearchRequest(indices).     SearchSourceBuilder searchSourceBuilder = new SearchSourceBuilder().size(0).trackTotalHits(true).     countRequest.source(searchSourceBuilder).     try {         request.withContentOrSourceParamParserOrNull(parser -> {             if (parser == null) {                 QueryBuilder queryBuilder = RestActions.urlParamsToQueryBuilder(request).                 if (queryBuilder != null) {                     searchSourceBuilder.query(queryBuilder).                 }             } else {                 searchSourceBuilder.query(RestActions.getQueryContent(parser)).             }         }).     } catch (IOException e) {         throw new ElasticsearchException("Couldn't parse query", e).     }     return channel -> client.search(countRequest, new RestResponseListener<SearchResponse>(channel) {          @Override         public RestResponse buildResponse(SearchResponse countResponse) throws Exception {             assert countResponse.getHits().getTotalHits().relation == TotalHits.Relation.EQUAL_TO.             return RestTable.buildResponse(buildTable(request, countResponse), channel).         }     }). }
false;protected;1;8;;@Override protected Table getTableWithHeader(final RestRequest request) {     Table table = new Table().     table.startHeadersWithTimestamp().     table.addCell("count", "alias:dc,docs.count,docsCount.desc:the document count").     table.endHeaders().     return table. }
false;private;2;8;;private Table buildTable(RestRequest request, SearchResponse response) {     Table table = getTableWithHeader(request).     table.startRow().     table.addCell(response.getHits().getTotalHits().value).     table.endRow().     return table. }
