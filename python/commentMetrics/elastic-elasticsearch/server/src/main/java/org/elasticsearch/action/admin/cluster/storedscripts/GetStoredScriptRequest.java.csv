commented;modifiers;parameterAmount;loc;comment;code
false;public;1;10;;@Override public void writeTo(StreamOutput out) throws IOException {     super.writeTo(out).     if (out.getVersion().before(Version.V_6_0_0_alpha2)) {         // write an empty lang to previous versions         out.writeString("").     }     out.writeString(id). }
false;public;0;12;;@Override public ActionRequestValidationException validate() {     ActionRequestValidationException validationException = null.     if (id == null || id.isEmpty()) {         validationException = addValidationError("must specify id for stored script", validationException).     } else if (id.contains("#")) {         validationException = addValidationError("id cannot contain '#' for stored script", validationException).     }     return validationException. }
false;public;0;3;;public String id() {     return id. }
false;public;1;5;;public GetStoredScriptRequest id(String id) {     this.id = id.     return this. }
false;public;1;4;;@Override public void readFrom(StreamInput in) throws IOException {     throw new UnsupportedOperationException("usage of Streamable is to be replaced by Writeable"). }
false;public;0;4;;@Override public String toString() {     return "get script [" + id + "]". }
