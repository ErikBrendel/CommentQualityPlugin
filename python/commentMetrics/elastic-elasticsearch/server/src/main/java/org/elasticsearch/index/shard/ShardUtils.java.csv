commented;modifiers;parameterAmount;loc;comment;code
true;public,static;1;9;/**  * Tries to extract the shard id from a reader if possible, when its not possible,  * will return null.  */ ;/**  * Tries to extract the shard id from a reader if possible, when its not possible,  * will return null.  */ @Nullable public static ShardId extractShardId(LeafReader reader) {     final ElasticsearchLeafReader esReader = ElasticsearchLeafReader.getElasticsearchLeafReader(reader).     if (esReader != null) {         assert reader.getRefCount() > 0 : "ElasticsearchLeafReader is already closed".         return esReader.shardId().     }     return null. }
true;public,static;1;8;/**  * Tries to extract the shard id from a reader if possible, when its not possible,  * will return null.  */ ;/**  * Tries to extract the shard id from a reader if possible, when its not possible,  * will return null.  */ @Nullable public static ShardId extractShardId(DirectoryReader reader) {     final ElasticsearchDirectoryReader esReader = ElasticsearchDirectoryReader.getElasticsearchDirectoryReader(reader).     if (esReader != null) {         return esReader.shardId().     }     throw new IllegalArgumentException("can't extract shard ID, can't unwrap ElasticsearchDirectoryReader"). }
