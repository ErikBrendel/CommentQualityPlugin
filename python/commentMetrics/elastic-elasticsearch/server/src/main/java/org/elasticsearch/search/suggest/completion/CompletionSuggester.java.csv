commented;modifiers;parameterAmount;loc;comment;code
false;protected;4;36;;@Override protected Suggest.Suggestion<? extends Suggest.Suggestion.Entry<? extends Suggest.Suggestion.Entry.Option>> innerExecute(String name, final CompletionSuggestionContext suggestionContext, final IndexSearcher searcher, CharsRefBuilder spare) throws IOException {     if (suggestionContext.getFieldType() != null) {         final CompletionFieldMapper.CompletionFieldType fieldType = suggestionContext.getFieldType().         CompletionSuggestion completionSuggestion = new CompletionSuggestion(name, suggestionContext.getSize(), suggestionContext.isSkipDuplicates()).         spare.copyUTF8Bytes(suggestionContext.getText()).         CompletionSuggestion.Entry completionSuggestEntry = new CompletionSuggestion.Entry(new Text(spare.toString()), 0, spare.length()).         completionSuggestion.addTerm(completionSuggestEntry).         int shardSize = suggestionContext.getShardSize() != null ? suggestionContext.getShardSize() : suggestionContext.getSize().         TopSuggestGroupDocsCollector collector = new TopSuggestGroupDocsCollector(shardSize, suggestionContext.isSkipDuplicates()).         suggest(searcher, suggestionContext.toQuery(), collector).         int numResult = 0.         for (TopSuggestDocs.SuggestScoreDoc suggestDoc : collector.get().scoreLookupDocs()) {             // collect contexts             Map<String, Set<String>> contexts = Collections.emptyMap().             if (fieldType.hasContextMappings()) {                 List<CharSequence> rawContexts = collector.getContexts(suggestDoc.doc).                 if (rawContexts.size() > 0) {                     contexts = fieldType.getContextMappings().getNamedContexts(rawContexts).                 }             }             if (numResult++ < suggestionContext.getSize()) {                 CompletionSuggestion.Entry.Option option = new CompletionSuggestion.Entry.Option(suggestDoc.doc, new Text(suggestDoc.key.toString()), suggestDoc.score, contexts).                 completionSuggestEntry.addOption(option).             } else {                 break.             }         }         return completionSuggestion.     }     return null. }
false;private,static;3;15;;private static void suggest(IndexSearcher searcher, CompletionQuery query, TopSuggestDocsCollector collector) throws IOException {     query = (CompletionQuery) query.rewrite(searcher.getIndexReader()).     Weight weight = query.createWeight(searcher, collector.scoreMode(), 1f).     for (LeafReaderContext context : searcher.getIndexReader().leaves()) {         BulkScorer scorer = weight.bulkScorer(context).         if (scorer != null) {             try {                 scorer.score(collector.getLeafCollector(context), context.reader().getLiveDocs()).             } catch (CollectionTerminatedException e) {             // collection was terminated prematurely             // continue with the following leaf             }         }     } }
