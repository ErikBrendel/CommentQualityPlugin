# id;timestamp;commentText;codeText;commentWords;codeWords
GeoJsonParser -> static GeometryCollectionBuilder parseGeometries(XContentParser parser, GeoShapeFieldMapper mapper) throws         IOException;1524684173;Parse the geometries array of a GeometryCollection__@param parser Parser that will be read from_@return Geometry[] geometries of the GeometryCollection_@throws IOException Thrown if an error occurs while reading from the XContentParser;static GeometryCollectionBuilder parseGeometries(XContentParser parser, GeoShapeFieldMapper mapper) throws_        IOException {_        if (parser.currentToken() != XContentParser.Token.START_ARRAY) {_            throw new ElasticsearchParseException("geometries must be an array of geojson objects")__        }__        XContentParser.Token token = parser.nextToken()__        GeometryCollectionBuilder geometryCollection = new GeometryCollectionBuilder()__        while (token != XContentParser.Token.END_ARRAY) {_            ShapeBuilder shapeBuilder = ShapeParser.parse(parser)__            geometryCollection.shape(shapeBuilder)__            token = parser.nextToken()__        }__        return geometryCollection__    };parse,the,geometries,array,of,a,geometry,collection,param,parser,parser,that,will,be,read,from,return,geometry,geometries,of,the,geometry,collection,throws,ioexception,thrown,if,an,error,occurs,while,reading,from,the,xcontent,parser;static,geometry,collection,builder,parse,geometries,xcontent,parser,parser,geo,shape,field,mapper,mapper,throws,ioexception,if,parser,current,token,xcontent,parser,token,throw,new,elasticsearch,parse,exception,geometries,must,be,an,array,of,geojson,objects,xcontent,parser,token,token,parser,next,token,geometry,collection,builder,geometry,collection,new,geometry,collection,builder,while,token,xcontent,parser,token,shape,builder,shape,builder,shape,parser,parse,parser,geometry,collection,shape,shape,builder,token,parser,next,token,return,geometry,collection
GeoJsonParser -> static GeometryCollectionBuilder parseGeometries(XContentParser parser, GeoShapeFieldMapper mapper) throws         IOException;1531179852;Parse the geometries array of a GeometryCollection__@param parser Parser that will be read from_@return Geometry[] geometries of the GeometryCollection_@throws IOException Thrown if an error occurs while reading from the XContentParser;static GeometryCollectionBuilder parseGeometries(XContentParser parser, GeoShapeFieldMapper mapper) throws_        IOException {_        if (parser.currentToken() != XContentParser.Token.START_ARRAY) {_            throw new ElasticsearchParseException("geometries must be an array of geojson objects")__        }__        XContentParser.Token token = parser.nextToken()__        GeometryCollectionBuilder geometryCollection = new GeometryCollectionBuilder()__        while (token != XContentParser.Token.END_ARRAY) {_            ShapeBuilder shapeBuilder = ShapeParser.parse(parser)__            geometryCollection.shape(shapeBuilder)__            token = parser.nextToken()__        }__        return geometryCollection__    };parse,the,geometries,array,of,a,geometry,collection,param,parser,parser,that,will,be,read,from,return,geometry,geometries,of,the,geometry,collection,throws,ioexception,thrown,if,an,error,occurs,while,reading,from,the,xcontent,parser;static,geometry,collection,builder,parse,geometries,xcontent,parser,parser,geo,shape,field,mapper,mapper,throws,ioexception,if,parser,current,token,xcontent,parser,token,throw,new,elasticsearch,parse,exception,geometries,must,be,an,array,of,geojson,objects,xcontent,parser,token,token,parser,next,token,geometry,collection,builder,geometry,collection,new,geometry,collection,builder,while,token,xcontent,parser,token,shape,builder,shape,builder,shape,parser,parse,parser,geometry,collection,shape,shape,builder,token,parser,next,token,return,geometry,collection
GeoJsonParser -> static GeometryCollectionBuilder parseGeometries(XContentParser parser, GeoShapeFieldMapper mapper) throws         IOException;1532685069;Parse the geometries array of a GeometryCollection__@param parser Parser that will be read from_@return Geometry[] geometries of the GeometryCollection_@throws IOException Thrown if an error occurs while reading from the XContentParser;static GeometryCollectionBuilder parseGeometries(XContentParser parser, GeoShapeFieldMapper mapper) throws_        IOException {_        if (parser.currentToken() != XContentParser.Token.START_ARRAY) {_            throw new ElasticsearchParseException("geometries must be an array of geojson objects")__        }__        XContentParser.Token token = parser.nextToken()__        GeometryCollectionBuilder geometryCollection = new GeometryCollectionBuilder()__        while (token != XContentParser.Token.END_ARRAY) {_            ShapeBuilder shapeBuilder = ShapeParser.parse(parser)__            geometryCollection.shape(shapeBuilder)__            token = parser.nextToken()__        }__        return geometryCollection__    };parse,the,geometries,array,of,a,geometry,collection,param,parser,parser,that,will,be,read,from,return,geometry,geometries,of,the,geometry,collection,throws,ioexception,thrown,if,an,error,occurs,while,reading,from,the,xcontent,parser;static,geometry,collection,builder,parse,geometries,xcontent,parser,parser,geo,shape,field,mapper,mapper,throws,ioexception,if,parser,current,token,xcontent,parser,token,throw,new,elasticsearch,parse,exception,geometries,must,be,an,array,of,geojson,objects,xcontent,parser,token,token,parser,next,token,geometry,collection,builder,geometry,collection,new,geometry,collection,builder,while,token,xcontent,parser,token,shape,builder,shape,builder,shape,parser,parse,parser,geometry,collection,shape,shape,builder,token,parser,next,token,return,geometry,collection
GeoJsonParser -> static GeometryCollectionBuilder parseGeometries(XContentParser parser, GeoShapeFieldMapper mapper) throws         IOException;1542834241;Parse the geometries array of a GeometryCollection__@param parser Parser that will be read from_@return Geometry[] geometries of the GeometryCollection_@throws IOException Thrown if an error occurs while reading from the XContentParser;static GeometryCollectionBuilder parseGeometries(XContentParser parser, GeoShapeFieldMapper mapper) throws_        IOException {_        if (parser.currentToken() != XContentParser.Token.START_ARRAY) {_            throw new ElasticsearchParseException("geometries must be an array of geojson objects")__        }__        XContentParser.Token token = parser.nextToken()__        GeometryCollectionBuilder geometryCollection = new GeometryCollectionBuilder()__        while (token != XContentParser.Token.END_ARRAY) {_            ShapeBuilder shapeBuilder = ShapeParser.parse(parser)__            geometryCollection.shape(shapeBuilder)__            token = parser.nextToken()__        }__        return geometryCollection__    };parse,the,geometries,array,of,a,geometry,collection,param,parser,parser,that,will,be,read,from,return,geometry,geometries,of,the,geometry,collection,throws,ioexception,thrown,if,an,error,occurs,while,reading,from,the,xcontent,parser;static,geometry,collection,builder,parse,geometries,xcontent,parser,parser,geo,shape,field,mapper,mapper,throws,ioexception,if,parser,current,token,xcontent,parser,token,throw,new,elasticsearch,parse,exception,geometries,must,be,an,array,of,geojson,objects,xcontent,parser,token,token,parser,next,token,geometry,collection,builder,geometry,collection,new,geometry,collection,builder,while,token,xcontent,parser,token,shape,builder,shape,builder,shape,parser,parse,parser,geometry,collection,shape,shape,builder,token,parser,next,token,return,geometry,collection
GeoJsonParser -> static GeometryCollectionBuilder parseGeometries(XContentParser parser, GeoShapeFieldMapper mapper) throws         IOException;1545098986;Parse the geometries array of a GeometryCollection__@param parser Parser that will be read from_@return Geometry[] geometries of the GeometryCollection_@throws IOException Thrown if an error occurs while reading from the XContentParser;static GeometryCollectionBuilder parseGeometries(XContentParser parser, GeoShapeFieldMapper mapper) throws_        IOException {_        if (parser.currentToken() != XContentParser.Token.START_ARRAY) {_            throw new ElasticsearchParseException("geometries must be an array of geojson objects")__        }__        XContentParser.Token token = parser.nextToken()__        GeometryCollectionBuilder geometryCollection = new GeometryCollectionBuilder()__        while (token != XContentParser.Token.END_ARRAY) {_            ShapeBuilder shapeBuilder = ShapeParser.parse(parser)__            geometryCollection.shape(shapeBuilder)__            token = parser.nextToken()__        }__        return geometryCollection__    };parse,the,geometries,array,of,a,geometry,collection,param,parser,parser,that,will,be,read,from,return,geometry,geometries,of,the,geometry,collection,throws,ioexception,thrown,if,an,error,occurs,while,reading,from,the,xcontent,parser;static,geometry,collection,builder,parse,geometries,xcontent,parser,parser,geo,shape,field,mapper,mapper,throws,ioexception,if,parser,current,token,xcontent,parser,token,throw,new,elasticsearch,parse,exception,geometries,must,be,an,array,of,geojson,objects,xcontent,parser,token,token,parser,next,token,geometry,collection,builder,geometry,collection,new,geometry,collection,builder,while,token,xcontent,parser,token,shape,builder,shape,builder,shape,parser,parse,parser,geometry,collection,shape,shape,builder,token,parser,next,token,return,geometry,collection
GeoJsonParser -> private static CoordinateNode parseCoordinates(XContentParser parser, boolean ignoreZValue) throws IOException;1524684173;Recursive method which parses the arrays of coordinates used to define_Shapes__@param parser_Parser that will be read from_@return CoordinateNode representing the start of the coordinate tree_@throws IOException_Thrown if an error occurs while reading from the_XContentParser;private static CoordinateNode parseCoordinates(XContentParser parser, boolean ignoreZValue) throws IOException {_        XContentParser.Token token = parser.nextToken()__        _        if (token != XContentParser.Token.START_ARRAY &&_            token != XContentParser.Token.END_ARRAY &&_            token != XContentParser.Token.VALUE_NULL) {_            return new CoordinateNode(parseCoordinate(parser, ignoreZValue))__        } else if (token == XContentParser.Token.VALUE_NULL) {_            throw new IllegalArgumentException("coordinates cannot contain NULL values)")__        }__        List<CoordinateNode> nodes = new ArrayList<>()__        while (token != XContentParser.Token.END_ARRAY) {_            CoordinateNode node = parseCoordinates(parser, ignoreZValue)__            if (nodes.isEmpty() == false && nodes.get(0).numDimensions() != node.numDimensions()) {_                throw new ElasticsearchParseException("Exception parsing coordinates: number of dimensions do not match")__            }_            nodes.add(node)__            token = parser.nextToken()__        }__        return new CoordinateNode(nodes)__    };recursive,method,which,parses,the,arrays,of,coordinates,used,to,define,shapes,param,parser,parser,that,will,be,read,from,return,coordinate,node,representing,the,start,of,the,coordinate,tree,throws,ioexception,thrown,if,an,error,occurs,while,reading,from,the,xcontent,parser;private,static,coordinate,node,parse,coordinates,xcontent,parser,parser,boolean,ignore,zvalue,throws,ioexception,xcontent,parser,token,token,parser,next,token,if,token,xcontent,parser,token,token,xcontent,parser,token,token,xcontent,parser,token,return,new,coordinate,node,parse,coordinate,parser,ignore,zvalue,else,if,token,xcontent,parser,token,throw,new,illegal,argument,exception,coordinates,cannot,contain,null,values,list,coordinate,node,nodes,new,array,list,while,token,xcontent,parser,token,coordinate,node,node,parse,coordinates,parser,ignore,zvalue,if,nodes,is,empty,false,nodes,get,0,num,dimensions,node,num,dimensions,throw,new,elasticsearch,parse,exception,exception,parsing,coordinates,number,of,dimensions,do,not,match,nodes,add,node,token,parser,next,token,return,new,coordinate,node,nodes
GeoJsonParser -> private static CoordinateNode parseCoordinates(XContentParser parser, boolean ignoreZValue) throws IOException;1531179852;Recursive method which parses the arrays of coordinates used to define_Shapes__@param parser_Parser that will be read from_@return CoordinateNode representing the start of the coordinate tree_@throws IOException_Thrown if an error occurs while reading from the_XContentParser;private static CoordinateNode parseCoordinates(XContentParser parser, boolean ignoreZValue) throws IOException {_        if (parser.currentToken() == XContentParser.Token.START_OBJECT) {_            parser.skipChildren()__            parser.nextToken()__            throw new ElasticsearchParseException("coordinates cannot be specified as objects")__        }__        XContentParser.Token token = parser.nextToken()__        _        if (token != XContentParser.Token.START_ARRAY &&_            token != XContentParser.Token.END_ARRAY &&_            token != XContentParser.Token.VALUE_NULL) {_            return new CoordinateNode(parseCoordinate(parser, ignoreZValue))__        } else if (token == XContentParser.Token.VALUE_NULL) {_            throw new IllegalArgumentException("coordinates cannot contain NULL values)")__        }__        List<CoordinateNode> nodes = new ArrayList<>()__        while (token != XContentParser.Token.END_ARRAY) {_            CoordinateNode node = parseCoordinates(parser, ignoreZValue)__            if (nodes.isEmpty() == false && nodes.get(0).numDimensions() != node.numDimensions()) {_                throw new ElasticsearchParseException("Exception parsing coordinates: number of dimensions do not match")__            }_            nodes.add(node)__            token = parser.nextToken()__        }__        return new CoordinateNode(nodes)__    };recursive,method,which,parses,the,arrays,of,coordinates,used,to,define,shapes,param,parser,parser,that,will,be,read,from,return,coordinate,node,representing,the,start,of,the,coordinate,tree,throws,ioexception,thrown,if,an,error,occurs,while,reading,from,the,xcontent,parser;private,static,coordinate,node,parse,coordinates,xcontent,parser,parser,boolean,ignore,zvalue,throws,ioexception,if,parser,current,token,xcontent,parser,token,parser,skip,children,parser,next,token,throw,new,elasticsearch,parse,exception,coordinates,cannot,be,specified,as,objects,xcontent,parser,token,token,parser,next,token,if,token,xcontent,parser,token,token,xcontent,parser,token,token,xcontent,parser,token,return,new,coordinate,node,parse,coordinate,parser,ignore,zvalue,else,if,token,xcontent,parser,token,throw,new,illegal,argument,exception,coordinates,cannot,contain,null,values,list,coordinate,node,nodes,new,array,list,while,token,xcontent,parser,token,coordinate,node,node,parse,coordinates,parser,ignore,zvalue,if,nodes,is,empty,false,nodes,get,0,num,dimensions,node,num,dimensions,throw,new,elasticsearch,parse,exception,exception,parsing,coordinates,number,of,dimensions,do,not,match,nodes,add,node,token,parser,next,token,return,new,coordinate,node,nodes
GeoJsonParser -> private static CoordinateNode parseCoordinates(XContentParser parser, boolean ignoreZValue) throws IOException;1532685069;Recursive method which parses the arrays of coordinates used to define_Shapes__@param parser_Parser that will be read from_@return CoordinateNode representing the start of the coordinate tree_@throws IOException_Thrown if an error occurs while reading from the_XContentParser;private static CoordinateNode parseCoordinates(XContentParser parser, boolean ignoreZValue) throws IOException {_        if (parser.currentToken() == XContentParser.Token.START_OBJECT) {_            parser.skipChildren()__            parser.nextToken()__            throw new ElasticsearchParseException("coordinates cannot be specified as objects")__        }__        XContentParser.Token token = parser.nextToken()__        _        if (token != XContentParser.Token.START_ARRAY &&_            token != XContentParser.Token.END_ARRAY &&_            token != XContentParser.Token.VALUE_NULL) {_            return new CoordinateNode(parseCoordinate(parser, ignoreZValue))__        } else if (token == XContentParser.Token.VALUE_NULL) {_            throw new IllegalArgumentException("coordinates cannot contain NULL values)")__        }__        List<CoordinateNode> nodes = new ArrayList<>()__        while (token != XContentParser.Token.END_ARRAY) {_            CoordinateNode node = parseCoordinates(parser, ignoreZValue)__            if (nodes.isEmpty() == false && nodes.get(0).numDimensions() != node.numDimensions()) {_                throw new ElasticsearchParseException("Exception parsing coordinates: number of dimensions do not match")__            }_            nodes.add(node)__            token = parser.nextToken()__        }__        return new CoordinateNode(nodes)__    };recursive,method,which,parses,the,arrays,of,coordinates,used,to,define,shapes,param,parser,parser,that,will,be,read,from,return,coordinate,node,representing,the,start,of,the,coordinate,tree,throws,ioexception,thrown,if,an,error,occurs,while,reading,from,the,xcontent,parser;private,static,coordinate,node,parse,coordinates,xcontent,parser,parser,boolean,ignore,zvalue,throws,ioexception,if,parser,current,token,xcontent,parser,token,parser,skip,children,parser,next,token,throw,new,elasticsearch,parse,exception,coordinates,cannot,be,specified,as,objects,xcontent,parser,token,token,parser,next,token,if,token,xcontent,parser,token,token,xcontent,parser,token,token,xcontent,parser,token,return,new,coordinate,node,parse,coordinate,parser,ignore,zvalue,else,if,token,xcontent,parser,token,throw,new,illegal,argument,exception,coordinates,cannot,contain,null,values,list,coordinate,node,nodes,new,array,list,while,token,xcontent,parser,token,coordinate,node,node,parse,coordinates,parser,ignore,zvalue,if,nodes,is,empty,false,nodes,get,0,num,dimensions,node,num,dimensions,throw,new,elasticsearch,parse,exception,exception,parsing,coordinates,number,of,dimensions,do,not,match,nodes,add,node,token,parser,next,token,return,new,coordinate,node,nodes
GeoJsonParser -> private static CoordinateNode parseCoordinates(XContentParser parser, boolean ignoreZValue) throws IOException;1542834241;Recursive method which parses the arrays of coordinates used to define_Shapes__@param parser_Parser that will be read from_@return CoordinateNode representing the start of the coordinate tree_@throws IOException_Thrown if an error occurs while reading from the_XContentParser;private static CoordinateNode parseCoordinates(XContentParser parser, boolean ignoreZValue) throws IOException {_        if (parser.currentToken() == XContentParser.Token.START_OBJECT) {_            parser.skipChildren()__            parser.nextToken()__            throw new ElasticsearchParseException("coordinates cannot be specified as objects")__        }__        XContentParser.Token token = parser.nextToken()__        _        if (token != XContentParser.Token.START_ARRAY &&_            token != XContentParser.Token.END_ARRAY &&_            token != XContentParser.Token.VALUE_NULL) {_            return new CoordinateNode(parseCoordinate(parser, ignoreZValue))__        } else if (token == XContentParser.Token.VALUE_NULL) {_            throw new IllegalArgumentException("coordinates cannot contain NULL values)")__        }__        List<CoordinateNode> nodes = new ArrayList<>()__        while (token != XContentParser.Token.END_ARRAY) {_            CoordinateNode node = parseCoordinates(parser, ignoreZValue)__            if (nodes.isEmpty() == false && nodes.get(0).numDimensions() != node.numDimensions()) {_                throw new ElasticsearchParseException("Exception parsing coordinates: number of dimensions do not match")__            }_            nodes.add(node)__            token = parser.nextToken()__        }__        return new CoordinateNode(nodes)__    };recursive,method,which,parses,the,arrays,of,coordinates,used,to,define,shapes,param,parser,parser,that,will,be,read,from,return,coordinate,node,representing,the,start,of,the,coordinate,tree,throws,ioexception,thrown,if,an,error,occurs,while,reading,from,the,xcontent,parser;private,static,coordinate,node,parse,coordinates,xcontent,parser,parser,boolean,ignore,zvalue,throws,ioexception,if,parser,current,token,xcontent,parser,token,parser,skip,children,parser,next,token,throw,new,elasticsearch,parse,exception,coordinates,cannot,be,specified,as,objects,xcontent,parser,token,token,parser,next,token,if,token,xcontent,parser,token,token,xcontent,parser,token,token,xcontent,parser,token,return,new,coordinate,node,parse,coordinate,parser,ignore,zvalue,else,if,token,xcontent,parser,token,throw,new,illegal,argument,exception,coordinates,cannot,contain,null,values,list,coordinate,node,nodes,new,array,list,while,token,xcontent,parser,token,coordinate,node,node,parse,coordinates,parser,ignore,zvalue,if,nodes,is,empty,false,nodes,get,0,num,dimensions,node,num,dimensions,throw,new,elasticsearch,parse,exception,exception,parsing,coordinates,number,of,dimensions,do,not,match,nodes,add,node,token,parser,next,token,return,new,coordinate,node,nodes
GeoJsonParser -> private static CoordinateNode parseCoordinates(XContentParser parser, boolean ignoreZValue) throws IOException;1545079094;Recursive method which parses the arrays of coordinates used to define_Shapes__@param parser_Parser that will be read from_@return CoordinateNode representing the start of the coordinate tree_@throws IOException_Thrown if an error occurs while reading from the_XContentParser;private static CoordinateNode parseCoordinates(XContentParser parser, boolean ignoreZValue) throws IOException {_        if (parser.currentToken() == XContentParser.Token.START_OBJECT) {_            parser.skipChildren()__            parser.nextToken()__            throw new ElasticsearchParseException("coordinates cannot be specified as objects")__        }__        XContentParser.Token token = parser.nextToken()__        _        if (token != XContentParser.Token.START_ARRAY &&_            token != XContentParser.Token.END_ARRAY &&_            token != XContentParser.Token.VALUE_NULL) {_            return new CoordinateNode(parseCoordinate(parser, ignoreZValue))__        } else if (token == XContentParser.Token.VALUE_NULL) {_            throw new IllegalArgumentException("coordinates cannot contain NULL values)")__        }__        List<CoordinateNode> nodes = new ArrayList<>()__        while (token != XContentParser.Token.END_ARRAY) {_            CoordinateNode node = parseCoordinates(parser, ignoreZValue)__            if (nodes.isEmpty() == false && nodes.get(0).numDimensions() != node.numDimensions()) {_                throw new ElasticsearchParseException("Exception parsing coordinates: number of dimensions do not match")__            }_            nodes.add(node)__            token = parser.nextToken()__        }__        return new CoordinateNode(nodes)__    };recursive,method,which,parses,the,arrays,of,coordinates,used,to,define,shapes,param,parser,parser,that,will,be,read,from,return,coordinate,node,representing,the,start,of,the,coordinate,tree,throws,ioexception,thrown,if,an,error,occurs,while,reading,from,the,xcontent,parser;private,static,coordinate,node,parse,coordinates,xcontent,parser,parser,boolean,ignore,zvalue,throws,ioexception,if,parser,current,token,xcontent,parser,token,parser,skip,children,parser,next,token,throw,new,elasticsearch,parse,exception,coordinates,cannot,be,specified,as,objects,xcontent,parser,token,token,parser,next,token,if,token,xcontent,parser,token,token,xcontent,parser,token,token,xcontent,parser,token,return,new,coordinate,node,parse,coordinate,parser,ignore,zvalue,else,if,token,xcontent,parser,token,throw,new,illegal,argument,exception,coordinates,cannot,contain,null,values,list,coordinate,node,nodes,new,array,list,while,token,xcontent,parser,token,coordinate,node,node,parse,coordinates,parser,ignore,zvalue,if,nodes,is,empty,false,nodes,get,0,num,dimensions,node,num,dimensions,throw,new,elasticsearch,parse,exception,exception,parsing,coordinates,number,of,dimensions,do,not,match,nodes,add,node,token,parser,next,token,return,new,coordinate,node,nodes
GeoJsonParser -> private static CoordinateNode parseCoordinates(XContentParser parser, boolean ignoreZValue) throws IOException;1545098986;Recursive method which parses the arrays of coordinates used to define_Shapes__@param parser_Parser that will be read from_@return CoordinateNode representing the start of the coordinate tree_@throws IOException_Thrown if an error occurs while reading from the_XContentParser;private static CoordinateNode parseCoordinates(XContentParser parser, boolean ignoreZValue) throws IOException {_        if (parser.currentToken() == XContentParser.Token.START_OBJECT) {_            parser.skipChildren()__            parser.nextToken()__            throw new ElasticsearchParseException("coordinates cannot be specified as objects")__        }__        XContentParser.Token token = parser.nextToken()__        _        if (token != XContentParser.Token.START_ARRAY &&_            token != XContentParser.Token.END_ARRAY &&_            token != XContentParser.Token.VALUE_NULL) {_            return new CoordinateNode(parseCoordinate(parser, ignoreZValue))__        } else if (token == XContentParser.Token.VALUE_NULL) {_            throw new IllegalArgumentException("coordinates cannot contain NULL values)")__        }__        List<CoordinateNode> nodes = new ArrayList<>()__        while (token != XContentParser.Token.END_ARRAY) {_            CoordinateNode node = parseCoordinates(parser, ignoreZValue)__            if (nodes.isEmpty() == false && nodes.get(0).numDimensions() != node.numDimensions()) {_                throw new ElasticsearchParseException("Exception parsing coordinates: number of dimensions do not match")__            }_            nodes.add(node)__            token = parser.nextToken()__        }__        return new CoordinateNode(nodes)__    };recursive,method,which,parses,the,arrays,of,coordinates,used,to,define,shapes,param,parser,parser,that,will,be,read,from,return,coordinate,node,representing,the,start,of,the,coordinate,tree,throws,ioexception,thrown,if,an,error,occurs,while,reading,from,the,xcontent,parser;private,static,coordinate,node,parse,coordinates,xcontent,parser,parser,boolean,ignore,zvalue,throws,ioexception,if,parser,current,token,xcontent,parser,token,parser,skip,children,parser,next,token,throw,new,elasticsearch,parse,exception,coordinates,cannot,be,specified,as,objects,xcontent,parser,token,token,parser,next,token,if,token,xcontent,parser,token,token,xcontent,parser,token,token,xcontent,parser,token,return,new,coordinate,node,parse,coordinate,parser,ignore,zvalue,else,if,token,xcontent,parser,token,throw,new,illegal,argument,exception,coordinates,cannot,contain,null,values,list,coordinate,node,nodes,new,array,list,while,token,xcontent,parser,token,coordinate,node,node,parse,coordinates,parser,ignore,zvalue,if,nodes,is,empty,false,nodes,get,0,num,dimensions,node,num,dimensions,throw,new,elasticsearch,parse,exception,exception,parsing,coordinates,number,of,dimensions,do,not,match,nodes,add,node,token,parser,next,token,return,new,coordinate,node,nodes
GeoJsonParser -> private static CoordinateNode parseCoordinates(XContentParser parser, boolean ignoreZValue) throws IOException;1545148496;Recursive method which parses the arrays of coordinates used to define_Shapes__@param parser_Parser that will be read from_@return CoordinateNode representing the start of the coordinate tree_@throws IOException_Thrown if an error occurs while reading from the_XContentParser;private static CoordinateNode parseCoordinates(XContentParser parser, boolean ignoreZValue) throws IOException {_        if (parser.currentToken() == XContentParser.Token.START_OBJECT) {_            parser.skipChildren()__            parser.nextToken()__            throw new ElasticsearchParseException("coordinates cannot be specified as objects")__        }__        XContentParser.Token token = parser.nextToken()__        _        if (token != XContentParser.Token.START_ARRAY &&_            token != XContentParser.Token.END_ARRAY &&_            token != XContentParser.Token.VALUE_NULL) {_            return new CoordinateNode(parseCoordinate(parser, ignoreZValue))__        } else if (token == XContentParser.Token.VALUE_NULL) {_            throw new IllegalArgumentException("coordinates cannot contain NULL values)")__        }__        List<CoordinateNode> nodes = new ArrayList<>()__        while (token != XContentParser.Token.END_ARRAY) {_            CoordinateNode node = parseCoordinates(parser, ignoreZValue)__            if (nodes.isEmpty() == false && nodes.get(0).numDimensions() != node.numDimensions()) {_                throw new ElasticsearchParseException("Exception parsing coordinates: number of dimensions do not match")__            }_            nodes.add(node)__            token = parser.nextToken()__        }__        return new CoordinateNode(nodes)__    };recursive,method,which,parses,the,arrays,of,coordinates,used,to,define,shapes,param,parser,parser,that,will,be,read,from,return,coordinate,node,representing,the,start,of,the,coordinate,tree,throws,ioexception,thrown,if,an,error,occurs,while,reading,from,the,xcontent,parser;private,static,coordinate,node,parse,coordinates,xcontent,parser,parser,boolean,ignore,zvalue,throws,ioexception,if,parser,current,token,xcontent,parser,token,parser,skip,children,parser,next,token,throw,new,elasticsearch,parse,exception,coordinates,cannot,be,specified,as,objects,xcontent,parser,token,token,parser,next,token,if,token,xcontent,parser,token,token,xcontent,parser,token,token,xcontent,parser,token,return,new,coordinate,node,parse,coordinate,parser,ignore,zvalue,else,if,token,xcontent,parser,token,throw,new,illegal,argument,exception,coordinates,cannot,contain,null,values,list,coordinate,node,nodes,new,array,list,while,token,xcontent,parser,token,coordinate,node,node,parse,coordinates,parser,ignore,zvalue,if,nodes,is,empty,false,nodes,get,0,num,dimensions,node,num,dimensions,throw,new,elasticsearch,parse,exception,exception,parsing,coordinates,number,of,dimensions,do,not,match,nodes,add,node,token,parser,next,token,return,new,coordinate,node,nodes
GeoJsonParser -> static GeometryCollectionBuilder parseGeometries(XContentParser parser, BaseGeoShapeFieldMapper mapper) throws         IOException;1545079094;Parse the geometries array of a GeometryCollection__@param parser Parser that will be read from_@return Geometry[] geometries of the GeometryCollection_@throws IOException Thrown if an error occurs while reading from the XContentParser;static GeometryCollectionBuilder parseGeometries(XContentParser parser, BaseGeoShapeFieldMapper mapper) throws_        IOException {_        if (parser.currentToken() != XContentParser.Token.START_ARRAY) {_            throw new ElasticsearchParseException("geometries must be an array of geojson objects")__        }__        XContentParser.Token token = parser.nextToken()__        GeometryCollectionBuilder geometryCollection = new GeometryCollectionBuilder()__        while (token != XContentParser.Token.END_ARRAY) {_            ShapeBuilder shapeBuilder = ShapeParser.parse(parser)__            geometryCollection.shape(shapeBuilder)__            token = parser.nextToken()__        }__        return geometryCollection__    };parse,the,geometries,array,of,a,geometry,collection,param,parser,parser,that,will,be,read,from,return,geometry,geometries,of,the,geometry,collection,throws,ioexception,thrown,if,an,error,occurs,while,reading,from,the,xcontent,parser;static,geometry,collection,builder,parse,geometries,xcontent,parser,parser,base,geo,shape,field,mapper,mapper,throws,ioexception,if,parser,current,token,xcontent,parser,token,throw,new,elasticsearch,parse,exception,geometries,must,be,an,array,of,geojson,objects,xcontent,parser,token,token,parser,next,token,geometry,collection,builder,geometry,collection,new,geometry,collection,builder,while,token,xcontent,parser,token,shape,builder,shape,builder,shape,parser,parse,parser,geometry,collection,shape,shape,builder,token,parser,next,token,return,geometry,collection
GeoJsonParser -> static GeometryCollectionBuilder parseGeometries(XContentParser parser, BaseGeoShapeFieldMapper mapper) throws         IOException;1545148496;Parse the geometries array of a GeometryCollection__@param parser Parser that will be read from_@return Geometry[] geometries of the GeometryCollection_@throws IOException Thrown if an error occurs while reading from the XContentParser;static GeometryCollectionBuilder parseGeometries(XContentParser parser, BaseGeoShapeFieldMapper mapper) throws_        IOException {_        if (parser.currentToken() != XContentParser.Token.START_ARRAY) {_            throw new ElasticsearchParseException("geometries must be an array of geojson objects")__        }__        XContentParser.Token token = parser.nextToken()__        GeometryCollectionBuilder geometryCollection = new GeometryCollectionBuilder()__        while (token != XContentParser.Token.END_ARRAY) {_            ShapeBuilder shapeBuilder = ShapeParser.parse(parser)__            geometryCollection.shape(shapeBuilder)__            token = parser.nextToken()__        }__        return geometryCollection__    };parse,the,geometries,array,of,a,geometry,collection,param,parser,parser,that,will,be,read,from,return,geometry,geometries,of,the,geometry,collection,throws,ioexception,thrown,if,an,error,occurs,while,reading,from,the,xcontent,parser;static,geometry,collection,builder,parse,geometries,xcontent,parser,parser,base,geo,shape,field,mapper,mapper,throws,ioexception,if,parser,current,token,xcontent,parser,token,throw,new,elasticsearch,parse,exception,geometries,must,be,an,array,of,geojson,objects,xcontent,parser,token,token,parser,next,token,geometry,collection,builder,geometry,collection,new,geometry,collection,builder,while,token,xcontent,parser,token,shape,builder,shape,builder,shape,parser,parse,parser,geometry,collection,shape,shape,builder,token,parser,next,token,return,geometry,collection
