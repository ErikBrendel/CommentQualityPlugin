commented;modifiers;parameterAmount;loc;comment;code
false;public;3;4;;@Override public Decision canAllocate(ShardRouting shardRouting, RoutingNode node, RoutingAllocation allocation) {     return canAllocate(shardRouting, allocation). }
false;public;2;11;;@Override public Decision canAllocate(ShardRouting shardRouting, RoutingAllocation allocation) {     if (shardRouting.primary()) {         return allocation.decision(Decision.YES, NAME, "shard is primary and can be allocated").     }     ShardRouting primary = allocation.routingNodes().activePrimary(shardRouting.shardId()).     if (primary == null) {         return allocation.decision(Decision.NO, NAME, "primary shard for this replica is not yet active").     }     return allocation.decision(Decision.YES, NAME, "primary shard for this replica is already active"). }
