commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;3;;protected String name() {     return name. }
false;protected,static;2;3;;protected static String settingsKey(final String prefix, final String key) {     return String.join(".", prefix, key). }
false;protected;2;7;;protected int applyHardSizeLimit(final Settings settings, final String name) {     if (name.equals("bulk") || name.equals(ThreadPool.Names.WRITE)) {         return 1 + EsExecutors.numberOfProcessors(settings).     } else {         return Integer.MAX_VALUE.     } }
true;public,abstract;0;1;/**  * The list of settings this builder will register.  *  * @return the list of registered settings  */ ;/**  * The list of settings this builder will register.  *  * @return the list of registered settings  */ public abstract List<Setting<?>> getRegisteredSettings().
true;abstract;1;1;/**  * Return an executor settings object from the node-level settings.  *  * @param settings the node-level settings  * @return the executor settings object  */ ;/**  * Return an executor settings object from the node-level settings.  *  * @param settings the node-level settings  * @return the executor settings object  */ abstract U getSettings(Settings settings).
true;abstract;2;1;/**  * Builds the executor with the specified executor settings.  *  * @param settings      the executor settings  * @param threadContext the current thread context  * @return a new executor built from the specified executor settings  */ ;/**  * Builds the executor with the specified executor settings.  *  * @param settings      the executor settings  * @param threadContext the current thread context  * @return a new executor built from the specified executor settings  */ abstract ThreadPool.ExecutorHolder build(U settings, ThreadContext threadContext).
true;abstract;1;1;/**  * Format the thread pool info object for this executor.  *  * @param info the thread pool info object to format  * @return a formatted thread pool info (useful for logging)  */ ;/**  * Format the thread pool info object for this executor.  *  * @param info the thread pool info object to format  * @return a formatted thread pool info (useful for logging)  */ abstract String formatInfo(ThreadPool.Info info).
