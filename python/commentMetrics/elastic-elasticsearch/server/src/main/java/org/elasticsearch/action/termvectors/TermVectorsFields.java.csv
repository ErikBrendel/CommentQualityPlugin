# id;timestamp;commentText;codeText;commentWords;codeWords
TermVectorsFields -> public TermVectorsFields(BytesReference headerRef, BytesReference termVectors) throws IOException;1524684173;@param headerRef   Stores offsets per field in the {@code termVectors} and some_header information as {@link BytesRef}._@param termVectors Stores the actual term vectors as a {@link BytesRef}.;public TermVectorsFields(BytesReference headerRef, BytesReference termVectors) throws IOException {_        try (StreamInput header = headerRef.streamInput()) {_            fieldMap = new ObjectLongHashMap<>()__            _            String headerString = header.readString()__            assert headerString.equals("TV")__            int version = header.readInt()__            assert version == -1__            hasTermStatistic = header.readBoolean()__            hasFieldStatistic = header.readBoolean()__            hasScores = header.readBoolean()__            final int numFields = header.readVInt()__            for (int i = 0_ i < numFields_ i++) {_                fieldMap.put((header.readString()), header.readVLong())__            }_        }_        _        this.termVectors = termVectors__    };param,header,ref,stores,offsets,per,field,in,the,code,term,vectors,and,some,header,information,as,link,bytes,ref,param,term,vectors,stores,the,actual,term,vectors,as,a,link,bytes,ref;public,term,vectors,fields,bytes,reference,header,ref,bytes,reference,term,vectors,throws,ioexception,try,stream,input,header,header,ref,stream,input,field,map,new,object,long,hash,map,string,header,string,header,read,string,assert,header,string,equals,tv,int,version,header,read,int,assert,version,1,has,term,statistic,header,read,boolean,has,field,statistic,header,read,boolean,has,scores,header,read,boolean,final,int,num,fields,header,read,vint,for,int,i,0,i,num,fields,i,field,map,put,header,read,string,header,read,vlong,this,term,vectors,term,vectors
TermVectorsFields -> public TermVectorsFields(BytesReference headerRef, BytesReference termVectors) throws IOException;1525334055;@param headerRef   Stores offsets per field in the {@code termVectors} and some_header information as {@link BytesRef}._@param termVectors Stores the actual term vectors as a {@link BytesRef}.;public TermVectorsFields(BytesReference headerRef, BytesReference termVectors) throws IOException {_        try (StreamInput header = headerRef.streamInput()) {_            fieldMap = new ObjectLongHashMap<>()__            _            String headerString = header.readString()__            assert headerString.equals("TV")__            int version = header.readInt()__            assert version == -1__            hasTermStatistic = header.readBoolean()__            hasFieldStatistic = header.readBoolean()__            hasScores = header.readBoolean()__            final int numFields = header.readVInt()__            for (int i = 0_ i < numFields_ i++) {_                fieldMap.put((header.readString()), header.readVLong())__            }_        }_        _        this.termVectors = termVectors__    };param,header,ref,stores,offsets,per,field,in,the,code,term,vectors,and,some,header,information,as,link,bytes,ref,param,term,vectors,stores,the,actual,term,vectors,as,a,link,bytes,ref;public,term,vectors,fields,bytes,reference,header,ref,bytes,reference,term,vectors,throws,ioexception,try,stream,input,header,header,ref,stream,input,field,map,new,object,long,hash,map,string,header,string,header,read,string,assert,header,string,equals,tv,int,version,header,read,int,assert,version,1,has,term,statistic,header,read,boolean,has,field,statistic,header,read,boolean,has,scores,header,read,boolean,final,int,num,fields,header,read,vint,for,int,i,0,i,num,fields,i,field,map,put,header,read,string,header,read,vlong,this,term,vectors,term,vectors
TermVectorsFields -> public TermVectorsFields(BytesReference headerRef, BytesReference termVectors) throws IOException;1536314350;@param headerRef   Stores offsets per field in the {@code termVectors} and some_header information as {@link BytesRef}._@param termVectors Stores the actual term vectors as a {@link BytesRef}.;public TermVectorsFields(BytesReference headerRef, BytesReference termVectors) throws IOException {_        try (StreamInput header = headerRef.streamInput()) {_            fieldMap = new ObjectLongHashMap<>()__            _            String headerString = header.readString()__            assert headerString.equals("TV")__            int version = header.readInt()__            assert version == -1__            hasTermStatistic = header.readBoolean()__            hasFieldStatistic = header.readBoolean()__            hasScores = header.readBoolean()__            final int numFields = header.readVInt()__            for (int i = 0_ i < numFields_ i++) {_                fieldMap.put((header.readString()), header.readVLong())__            }_        }_        _        this.termVectors = termVectors__    };param,header,ref,stores,offsets,per,field,in,the,code,term,vectors,and,some,header,information,as,link,bytes,ref,param,term,vectors,stores,the,actual,term,vectors,as,a,link,bytes,ref;public,term,vectors,fields,bytes,reference,header,ref,bytes,reference,term,vectors,throws,ioexception,try,stream,input,header,header,ref,stream,input,field,map,new,object,long,hash,map,string,header,string,header,read,string,assert,header,string,equals,tv,int,version,header,read,int,assert,version,1,has,term,statistic,header,read,boolean,has,field,statistic,header,read,boolean,has,scores,header,read,boolean,final,int,num,fields,header,read,vint,for,int,i,0,i,num,fields,i,field,map,put,header,read,string,header,read,vlong,this,term,vectors,term,vectors
TermVectorsFields -> public TermVectorsFields(BytesReference headerRef, BytesReference termVectors) throws IOException;1551278144;@param headerRef   Stores offsets per field in the {@code termVectors} and some_header information as {@link BytesRef}._@param termVectors Stores the actual term vectors as a {@link BytesRef}.;public TermVectorsFields(BytesReference headerRef, BytesReference termVectors) throws IOException {_        try (StreamInput header = headerRef.streamInput()) {_            fieldMap = new ObjectLongHashMap<>()__            _            String headerString = header.readString()__            assert headerString.equals("TV")__            int version = header.readInt()__            assert version == -1__            hasTermStatistic = header.readBoolean()__            hasFieldStatistic = header.readBoolean()__            hasScores = header.readBoolean()__            final int numFields = header.readVInt()__            for (int i = 0_ i < numFields_ i++) {_                fieldMap.put((header.readString()), header.readVLong())__            }_        }_        _        this.termVectors = termVectors__    };param,header,ref,stores,offsets,per,field,in,the,code,term,vectors,and,some,header,information,as,link,bytes,ref,param,term,vectors,stores,the,actual,term,vectors,as,a,link,bytes,ref;public,term,vectors,fields,bytes,reference,header,ref,bytes,reference,term,vectors,throws,ioexception,try,stream,input,header,header,ref,stream,input,field,map,new,object,long,hash,map,string,header,string,header,read,string,assert,header,string,equals,tv,int,version,header,read,int,assert,version,1,has,term,statistic,header,read,boolean,has,field,statistic,header,read,boolean,has,scores,header,read,boolean,final,int,num,fields,header,read,vint,for,int,i,0,i,num,fields,i,field,map,put,header,read,string,header,read,vlong,this,term,vectors,term,vectors
