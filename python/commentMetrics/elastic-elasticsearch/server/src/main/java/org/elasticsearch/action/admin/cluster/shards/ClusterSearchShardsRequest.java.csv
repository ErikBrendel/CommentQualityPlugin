commented;modifiers;parameterAmount;loc;comment;code
false;public;1;14;;@Override public void writeTo(StreamOutput out) throws IOException {     super.writeTo(out).     out.writeVInt(indices.length).     for (String index : indices) {         out.writeString(index).     }     out.writeOptionalString(routing).     out.writeOptionalString(preference).     indicesOptions.writeIndicesOptions(out). }
false;public;0;4;;@Override public ActionRequestValidationException validate() {     return null. }
true;public;1;9;/**  * Sets the indices the search will be executed on.  */ ;/**  * Sets the indices the search will be executed on.  */ @Override public ClusterSearchShardsRequest indices(String... indices) {     Objects.requireNonNull(indices, "indices must not be null").     for (int i = 0. i < indices.length. i++) {         Objects.requireNonNull(indices[i], "indices[" + i + "] must not be null").     }     this.indices = indices.     return this. }
true;public;0;4;/**  * The indices  */ ;/**  * The indices  */ @Override public String[] indices() {     return indices. }
false;public;0;4;;@Override public IndicesOptions indicesOptions() {     return indicesOptions. }
false;public;1;4;;public ClusterSearchShardsRequest indicesOptions(IndicesOptions indicesOptions) {     this.indicesOptions = indicesOptions.     return this. }
true;public;0;3;/**  * A comma separated list of routing values to control the shards the search will be executed on.  */ ;/**  * A comma separated list of routing values to control the shards the search will be executed on.  */ public String routing() {     return this.routing. }
true;public;1;4;/**  * A comma separated list of routing values to control the shards the search will be executed on.  */ ;/**  * A comma separated list of routing values to control the shards the search will be executed on.  */ public ClusterSearchShardsRequest routing(String routing) {     this.routing = routing.     return this. }
true;public;1;4;/**  * The routing values to control the shards that the search will be executed on.  */ ;/**  * The routing values to control the shards that the search will be executed on.  */ public ClusterSearchShardsRequest routing(String... routings) {     this.routing = Strings.arrayToCommaDelimitedString(routings).     return this. }
true;public;1;4;/**  * Sets the preference to execute the search. Defaults to randomize across shards. Can be set to  * {@code _local} to prefer local shards or a custom value, which guarantees that the same order  * will be used across different requests.  */ ;/**  * Sets the preference to execute the search. Defaults to randomize across shards. Can be set to  * {@code _local} to prefer local shards or a custom value, which guarantees that the same order  * will be used across different requests.  */ public ClusterSearchShardsRequest preference(String preference) {     this.preference = preference.     return this. }
false;public;0;3;;public String preference() {     return this.preference. }
false;public;1;4;;@Override public void readFrom(StreamInput in) throws IOException {     throw new UnsupportedOperationException("usage of Streamable is to be replaced by Writeable"). }
