commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;5;;@Override protected String executor() {     // we go async right away....     return ThreadPool.Names.SAME. }
false;protected;2;16;;@Override protected ClusterBlockException checkBlock(UpdateSettingsRequest request, ClusterState state) {     // allow for dedicated changes to the metadata blocks, so we don't block those to allow to "re-enable" it     ClusterBlockException globalBlock = state.blocks().globalBlockedException(ClusterBlockLevel.METADATA_WRITE).     if (globalBlock != null) {         return globalBlock.     }     if (// we have to allow resetting these settings otherwise users can't unblock an index     request.settings().size() == 1 && IndexMetaData.INDEX_BLOCKS_METADATA_SETTING.exists(request.settings()) || IndexMetaData.INDEX_READ_ONLY_SETTING.exists(request.settings()) || IndexMetaData.INDEX_BLOCKS_READ_ONLY_ALLOW_DELETE_SETTING.exists(request.settings())) {         return null.     }     return state.blocks().indicesBlockedException(ClusterBlockLevel.METADATA_WRITE, indexNameExpressionResolver.concreteIndexNames(state, request)). }
false;protected;0;4;;@Override protected AcknowledgedResponse newResponse() {     return new AcknowledgedResponse(). }
false;public;1;4;;@Override public void onResponse(ClusterStateUpdateResponse response) {     listener.onResponse(new AcknowledgedResponse(response.isAcknowledged())). }
false;public;1;5;;@Override public void onFailure(Exception t) {     logger.debug(() -> new ParameterizedMessage("failed to update settings on indices [{}]", (Object) concreteIndices), t).     listener.onFailure(t). }
false;protected;3;24;;@Override protected void masterOperation(final UpdateSettingsRequest request, final ClusterState state, final ActionListener<AcknowledgedResponse> listener) {     final Index[] concreteIndices = indexNameExpressionResolver.concreteIndices(state, request).     UpdateSettingsClusterStateUpdateRequest clusterStateUpdateRequest = new UpdateSettingsClusterStateUpdateRequest().indices(concreteIndices).settings(request.settings()).setPreserveExisting(request.isPreserveExisting()).ackTimeout(request.timeout()).masterNodeTimeout(request.masterNodeTimeout()).     updateSettingsService.updateSettings(clusterStateUpdateRequest, new ActionListener<ClusterStateUpdateResponse>() {          @Override         public void onResponse(ClusterStateUpdateResponse response) {             listener.onResponse(new AcknowledgedResponse(response.isAcknowledged())).         }          @Override         public void onFailure(Exception t) {             logger.debug(() -> new ParameterizedMessage("failed to update settings on indices [{}]", (Object) concreteIndices), t).             listener.onFailure(t).         }     }). }
