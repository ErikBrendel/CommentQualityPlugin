commented;modifiers;parameterAmount;loc;comment;code
true;;0;1;/**  * Returns the configuration information in this private environment.  */ ;/**  * Returns the configuration information in this private environment.  */ List<Element> getElements().
true;;0;1;/**  * Returns the child injector that hosts these private elements, or null if the elements haven't  * been used to create an injector.  */ ;/**  * Returns the child injector that hosts these private elements, or null if the elements haven't  * been used to create an injector.  */ Injector getInjector().
true;;0;1;/**  * Returns the unique exposed keys for these private elements.  */ ;/**  * Returns the unique exposed keys for these private elements.  */ Set<Key<?>> getExposedKeys().
true;;1;1;/**  * Returns an arbitrary object containing information about the "place" where this key was  * exposed. Used by Guice in the production of descriptive error messages.  * <p>  * Tools might specially handle types they know about. {@code StackTraceElement} is a good  * example. Tools should simply call {@code toString()} on the source object if the type is  * unfamiliar.  *  * @param key one of the keys exposed by this module.  */ ;/**  * Returns an arbitrary object containing information about the "place" where this key was  * exposed. Used by Guice in the production of descriptive error messages.  * <p>  * Tools might specially handle types they know about. {@code StackTraceElement} is a good  * example. Tools should simply call {@code toString()} on the source object if the type is  * unfamiliar.  *  * @param key one of the keys exposed by this module.  */ Object getExposedSource(Key<?> key).
