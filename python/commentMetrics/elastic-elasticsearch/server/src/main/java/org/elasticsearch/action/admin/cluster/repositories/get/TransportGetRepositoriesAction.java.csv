commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected String executor() {     return ThreadPool.Names.MANAGEMENT. }
false;protected;0;4;;@Override protected GetRepositoriesResponse newResponse() {     return new GetRepositoriesResponse(). }
false;protected;2;4;;@Override protected ClusterBlockException checkBlock(GetRepositoriesRequest request, ClusterState state) {     return state.blocks().globalBlockedException(ClusterBlockLevel.METADATA_READ). }
false;protected;3;40;;@Override protected void masterOperation(final GetRepositoriesRequest request, ClusterState state, final ActionListener<GetRepositoriesResponse> listener) {     MetaData metaData = state.metaData().     RepositoriesMetaData repositories = metaData.custom(RepositoriesMetaData.TYPE).     if (request.repositories().length == 0 || (request.repositories().length == 1 && "_all".equals(request.repositories()[0]))) {         if (repositories != null) {             listener.onResponse(new GetRepositoriesResponse(repositories)).         } else {             listener.onResponse(new GetRepositoriesResponse(new RepositoriesMetaData(Collections.emptyList()))).         }     } else {         if (repositories != null) {             // to keep insertion order             Set<String> repositoriesToGet = new LinkedHashSet<>().             for (String repositoryOrPattern : request.repositories()) {                 if (Regex.isSimpleMatchPattern(repositoryOrPattern) == false) {                     repositoriesToGet.add(repositoryOrPattern).                 } else {                     for (RepositoryMetaData repository : repositories.repositories()) {                         if (Regex.simpleMatch(repositoryOrPattern, repository.name())) {                             repositoriesToGet.add(repository.name()).                         }                     }                 }             }             List<RepositoryMetaData> repositoryListBuilder = new ArrayList<>().             for (String repository : repositoriesToGet) {                 RepositoryMetaData repositoryMetaData = repositories.repository(repository).                 if (repositoryMetaData == null) {                     listener.onFailure(new RepositoryMissingException(repository)).                     return.                 }                 repositoryListBuilder.add(repositoryMetaData).             }             listener.onResponse(new GetRepositoriesResponse(new RepositoriesMetaData(repositoryListBuilder))).         } else {             listener.onFailure(new RepositoryMissingException(request.repositories()[0])).         }     } }
