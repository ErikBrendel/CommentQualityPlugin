commented;modifiers;parameterAmount;loc;comment;code
true;public;0;3;/**  * Return the name of this {@link Similarity}.  */ ;/**  * Return the name of this {@link Similarity}.  */ public String name() {     return name. }
true;public;0;3;/**  * Return the wrapped {@link Similarity}.  */ ;/**  * Return the wrapped {@link Similarity}.  */ public Similarity get() {     return similarity. }
false;public;1;13;;@Override public boolean equals(Object o) {     if (this == o)         return true.     if (o == null || getClass() != o.getClass())         return false.     SimilarityProvider that = (SimilarityProvider) o.     /**      * We check <code>name</code> only because the <code>similarity</code> is      * re-created for each new instance and they don't implement equals.      * This is not entirely correct though but we only use equality checks      * for similarities inside the same index and names are unique in this case.      */     return Objects.equals(name, that.name). }
false;public;0;10;;@Override public int hashCode() {     /**      * We use <code>name</code> only because the <code>similarity</code> is      * re-created for each new instance and they don't implement equals.      * This is not entirely correct though but we only use equality checks      * for similarities a single index and names are unique in this case.      */     return Objects.hash(name). }
