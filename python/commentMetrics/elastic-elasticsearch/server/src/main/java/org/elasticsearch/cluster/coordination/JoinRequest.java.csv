commented;modifiers;parameterAmount;loc;comment;code
false;public;1;6;;@Override public void writeTo(StreamOutput out) throws IOException {     super.writeTo(out).     sourceNode.writeTo(out).     out.writeOptionalWriteable(optionalJoin.orElse(null)). }
false;public;0;3;;public DiscoveryNode getSourceNode() {     return sourceNode. }
false;public;0;3;;public Optional<Join> getOptionalJoin() {     return optionalJoin. }
false;public;1;10;;@Override public boolean equals(Object o) {     if (this == o)         return true.     if (!(o instanceof JoinRequest))         return false.     JoinRequest that = (JoinRequest) o.     if (!sourceNode.equals(that.sourceNode))         return false.     return optionalJoin.equals(that.optionalJoin). }
false;public;0;6;;@Override public int hashCode() {     int result = sourceNode.hashCode().     result = 31 * result + optionalJoin.hashCode().     return result. }
false;public;0;7;;@Override public String toString() {     return "JoinRequest{" + "sourceNode=" + sourceNode + ", optionalJoin=" + optionalJoin + '}'. }
