commented;modifiers;parameterAmount;loc;comment;code
false;public;1;3;;public void add(RefreshStats refreshStats) {     addTotals(refreshStats). }
false;public;1;8;;public void addTotals(RefreshStats refreshStats) {     if (refreshStats == null) {         return.     }     this.total += refreshStats.total.     this.totalTimeInMillis += refreshStats.totalTimeInMillis.     this.listeners += refreshStats.listeners. }
true;public;0;3;/**  * The total number of refresh executed.  */ ;/**  * The total number of refresh executed.  */ public long getTotal() {     return this.total. }
true;public;0;3;/**  * The total time merges have been executed (in milliseconds).  */ ;/**  * The total time merges have been executed (in milliseconds).  */ public long getTotalTimeInMillis() {     return this.totalTimeInMillis. }
true;public;0;3;/**  * The total time merges have been executed.  */ ;/**  * The total time merges have been executed.  */ public TimeValue getTotalTime() {     return new TimeValue(totalTimeInMillis). }
true;public;0;3;/**  * The number of waiting refresh listeners.  */ ;/**  * The number of waiting refresh listeners.  */ public int getListeners() {     return listeners. }
false;public;2;9;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.startObject("refresh").     builder.field("total", total).     builder.humanReadableField("total_time_in_millis", "total_time", getTotalTime()).     builder.field("listeners", listeners).     builder.endObject().     return builder. }
false;public;1;6;;@Override public void readFrom(StreamInput in) throws IOException {     total = in.readVLong().     totalTimeInMillis = in.readVLong().     listeners = in.readVInt(). }
false;public;1;6;;@Override public void writeTo(StreamOutput out) throws IOException {     out.writeVLong(total).     out.writeVLong(totalTimeInMillis).     out.writeVInt(listeners). }
false;public;1;10;;@Override public boolean equals(Object obj) {     if (obj == null || obj.getClass() != RefreshStats.class) {         return false.     }     RefreshStats rhs = (RefreshStats) obj.     return total == rhs.total && totalTimeInMillis == rhs.totalTimeInMillis && listeners == rhs.listeners. }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(total, totalTimeInMillis, listeners). }
