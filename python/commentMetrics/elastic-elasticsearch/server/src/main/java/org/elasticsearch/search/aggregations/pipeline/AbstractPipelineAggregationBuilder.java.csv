commented;modifiers;parameterAmount;loc;comment;code
false;public;1;7;;@Override public void writeTo(StreamOutput out) throws IOException {     out.writeString(name).     out.writeStringArray(bucketsPaths).     out.writeMap(metaData).     doWriteTo(out). }
false;protected,abstract;1;1;;protected abstract void doWriteTo(StreamOutput out) throws IOException.
false;public;0;3;;public String type() {     return type. }
true;public,final;3;5;/**  * Validates the state of this factory (makes sure the factory is properly  * configured)  */ ;/**  * Validates the state of this factory (makes sure the factory is properly  * configured)  */ @Override public final void validate(AggregatorFactory<?> parent, Collection<AggregationBuilder> factories, Collection<PipelineAggregationBuilder> pipelineAggregatorFactories) {     doValidate(parent, factories, pipelineAggregatorFactories). }
false;protected,abstract;1;1;;protected abstract PipelineAggregator createInternal(Map<String, Object> metaData) throws IOException.
true;public,final;0;5;/**  * Creates the pipeline aggregator  *  * @return The created aggregator  */ ;/**  * Creates the pipeline aggregator  *  * @return The created aggregator  */ @Override public final PipelineAggregator create() throws IOException {     PipelineAggregator aggregator = createInternal(this.metaData).     return aggregator. }
false;public;3;3;;public void doValidate(AggregatorFactory<?> parent, Collection<AggregationBuilder> factories, Collection<PipelineAggregationBuilder> pipelineAggregatorFactories) { }
true;public,static;3;18;/**  * Validates pipeline aggregations that need sequentially ordered data.  */ ;/**  * Validates pipeline aggregations that need sequentially ordered data.  */ public static void validateSequentiallyOrderedParentAggs(AggregatorFactory<?> parent, String type, String name) {     if ((parent instanceof HistogramAggregatorFactory || parent instanceof DateHistogramAggregatorFactory || parent instanceof AutoDateHistogramAggregatorFactory) == false) {         throw new IllegalStateException(type + " aggregation [" + name + "] must have a histogram, date_histogram or auto_date_histogram as parent").     }     if (parent instanceof HistogramAggregatorFactory) {         HistogramAggregatorFactory histoParent = (HistogramAggregatorFactory) parent.         if (histoParent.minDocCount() != 0) {             throw new IllegalStateException("parent histogram of " + type + " aggregation [" + name + "] must have min_doc_count of 0").         }     } else if (parent instanceof DateHistogramAggregatorFactory) {         DateHistogramAggregatorFactory histoParent = (DateHistogramAggregatorFactory) parent.         if (histoParent.minDocCount() != 0) {             throw new IllegalStateException("parent histogram of " + type + " aggregation [" + name + "] must have min_doc_count of 0").         }     } }
false;public;1;6;;@SuppressWarnings("unchecked") @Override public PAB setMetaData(Map<String, Object> metaData) {     this.metaData = metaData.     return (PAB) this. }
false;public,final;2;23;;@Override public final XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.startObject(getName()).     if (this.metaData != null) {         builder.field("meta", this.metaData).     }     builder.startObject(type).     if (!overrideBucketsPath() && bucketsPaths != null) {         builder.startArray(PipelineAggregator.Parser.BUCKETS_PATH.getPreferredName()).         for (String path : bucketsPaths) {             builder.value(path).         }         builder.endArray().     }     internalXContent(builder, params).     builder.endObject().     return builder.endObject(). }
true;protected;0;3;/**  * @return <code>true</code> if the {@link AbstractPipelineAggregationBuilder}  *         overrides the XContent rendering of the bucketPath option.  */ ;/**  * @return <code>true</code> if the {@link AbstractPipelineAggregationBuilder}  *         overrides the XContent rendering of the bucketPath option.  */ protected boolean overrideBucketsPath() {     return false. }
false;protected,abstract;2;1;;protected abstract XContentBuilder internalXContent(XContentBuilder builder, Params params) throws IOException.
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(Arrays.hashCode(bucketsPaths), metaData, name, type, doHashCode()). }
false;protected,abstract;0;1;;protected abstract int doHashCode().
false;public;1;18;;@Override public boolean equals(Object obj) {     if (obj == null)         return false.     if (getClass() != obj.getClass())         return false.     @SuppressWarnings("unchecked")     AbstractPipelineAggregationBuilder<PAB> other = (AbstractPipelineAggregationBuilder<PAB>) obj.     if (!Objects.equals(name, other.name))         return false.     if (!Objects.equals(type, other.type))         return false.     if (!Objects.deepEquals(bucketsPaths, other.bucketsPaths))         return false.     if (!Objects.equals(metaData, other.metaData))         return false.     return doEquals(obj). }
false;protected,abstract;1;1;;protected abstract boolean doEquals(Object obj).
false;public;0;4;;@Override public String getType() {     return type. }
