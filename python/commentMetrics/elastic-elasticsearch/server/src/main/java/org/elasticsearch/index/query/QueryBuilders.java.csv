# id;timestamp;commentText;codeText;commentWords;codeWords
QueryBuilders -> public static TermsQueryBuilder termsQuery(String name, long... values);1524684173;A filer for a field based on several terms matching on any of them.__@param name   The field name_@param values The terms;public static TermsQueryBuilder termsQuery(String name, long... values) {_        return new TermsQueryBuilder(name, values)__    };a,filer,for,a,field,based,on,several,terms,matching,on,any,of,them,param,name,the,field,name,param,values,the,terms;public,static,terms,query,builder,terms,query,string,name,long,values,return,new,terms,query,builder,name,values
QueryBuilders -> public static TermsQueryBuilder termsQuery(String name, long... values);1525334055;A filer for a field based on several terms matching on any of them.__@param name   The field name_@param values The terms;public static TermsQueryBuilder termsQuery(String name, long... values) {_        return new TermsQueryBuilder(name, values)__    };a,filer,for,a,field,based,on,several,terms,matching,on,any,of,them,param,name,the,field,name,param,values,the,terms;public,static,terms,query,builder,terms,query,string,name,long,values,return,new,terms,query,builder,name,values
QueryBuilders -> public static TermsQueryBuilder termsQuery(String name, long... values);1542697754;A filer for a field based on several terms matching on any of them.__@param name   The field name_@param values The terms;public static TermsQueryBuilder termsQuery(String name, long... values) {_        return new TermsQueryBuilder(name, values)__    };a,filer,for,a,field,based,on,several,terms,matching,on,any,of,them,param,name,the,field,name,param,values,the,terms;public,static,terms,query,builder,terms,query,string,name,long,values,return,new,terms,query,builder,name,values
QueryBuilders -> public static TermsQueryBuilder termsQuery(String name, long... values);1542748206;A filer for a field based on several terms matching on any of them.__@param name   The field name_@param values The terms;public static TermsQueryBuilder termsQuery(String name, long... values) {_        return new TermsQueryBuilder(name, values)__    };a,filer,for,a,field,based,on,several,terms,matching,on,any,of,them,param,name,the,field,name,param,values,the,terms;public,static,terms,query,builder,terms,query,string,name,long,values,return,new,terms,query,builder,name,values
QueryBuilders -> public static TermsQueryBuilder termsQuery(String name, long... values);1547002001;A filer for a field based on several terms matching on any of them.__@param name   The field name_@param values The terms;public static TermsQueryBuilder termsQuery(String name, long... values) {_        return new TermsQueryBuilder(name, values)__    };a,filer,for,a,field,based,on,several,terms,matching,on,any,of,them,param,name,the,field,name,param,values,the,terms;public,static,terms,query,builder,terms,query,string,name,long,values,return,new,terms,query,builder,name,values
QueryBuilders -> public static SpanWithinQueryBuilder spanWithinQuery(SpanQueryBuilder big, SpanQueryBuilder little);1524684173;Creates a new {@code span_within} builder._@param big the big clause, it must enclose {@code little} for a match._@param little the little clause, it must be contained within {@code big} for a match.;public static SpanWithinQueryBuilder spanWithinQuery(SpanQueryBuilder big, SpanQueryBuilder little) {_        return new SpanWithinQueryBuilder(big, little)__    };creates,a,new,code,builder,param,big,the,big,clause,it,must,enclose,code,little,for,a,match,param,little,the,little,clause,it,must,be,contained,within,code,big,for,a,match;public,static,span,within,query,builder,span,within,query,span,query,builder,big,span,query,builder,little,return,new,span,within,query,builder,big,little
QueryBuilders -> public static SpanWithinQueryBuilder spanWithinQuery(SpanQueryBuilder big, SpanQueryBuilder little);1525334055;Creates a new {@code span_within} builder._@param big the big clause, it must enclose {@code little} for a match._@param little the little clause, it must be contained within {@code big} for a match.;public static SpanWithinQueryBuilder spanWithinQuery(SpanQueryBuilder big, SpanQueryBuilder little) {_        return new SpanWithinQueryBuilder(big, little)__    };creates,a,new,code,builder,param,big,the,big,clause,it,must,enclose,code,little,for,a,match,param,little,the,little,clause,it,must,be,contained,within,code,big,for,a,match;public,static,span,within,query,builder,span,within,query,span,query,builder,big,span,query,builder,little,return,new,span,within,query,builder,big,little
QueryBuilders -> public static SpanWithinQueryBuilder spanWithinQuery(SpanQueryBuilder big, SpanQueryBuilder little);1542697754;Creates a new {@code span_within} builder._@param big the big clause, it must enclose {@code little} for a match._@param little the little clause, it must be contained within {@code big} for a match.;public static SpanWithinQueryBuilder spanWithinQuery(SpanQueryBuilder big, SpanQueryBuilder little) {_        return new SpanWithinQueryBuilder(big, little)__    };creates,a,new,code,builder,param,big,the,big,clause,it,must,enclose,code,little,for,a,match,param,little,the,little,clause,it,must,be,contained,within,code,big,for,a,match;public,static,span,within,query,builder,span,within,query,span,query,builder,big,span,query,builder,little,return,new,span,within,query,builder,big,little
QueryBuilders -> public static SpanWithinQueryBuilder spanWithinQuery(SpanQueryBuilder big, SpanQueryBuilder little);1542748206;Creates a new {@code span_within} builder._@param big the big clause, it must enclose {@code little} for a match._@param little the little clause, it must be contained within {@code big} for a match.;public static SpanWithinQueryBuilder spanWithinQuery(SpanQueryBuilder big, SpanQueryBuilder little) {_        return new SpanWithinQueryBuilder(big, little)__    };creates,a,new,code,builder,param,big,the,big,clause,it,must,enclose,code,little,for,a,match,param,little,the,little,clause,it,must,be,contained,within,code,big,for,a,match;public,static,span,within,query,builder,span,within,query,span,query,builder,big,span,query,builder,little,return,new,span,within,query,builder,big,little
QueryBuilders -> public static SpanWithinQueryBuilder spanWithinQuery(SpanQueryBuilder big, SpanQueryBuilder little);1547002001;Creates a new {@code span_within} builder._@param big the big clause, it must enclose {@code little} for a match._@param little the little clause, it must be contained within {@code big} for a match.;public static SpanWithinQueryBuilder spanWithinQuery(SpanQueryBuilder big, SpanQueryBuilder little) {_        return new SpanWithinQueryBuilder(big, little)__    };creates,a,new,code,builder,param,big,the,big,clause,it,must,enclose,code,little,for,a,match,param,little,the,little,clause,it,must,be,contained,within,code,big,for,a,match;public,static,span,within,query,builder,span,within,query,span,query,builder,big,span,query,builder,little,return,new,span,within,query,builder,big,little
QueryBuilders -> public static TermsQueryBuilder termsQuery(String name, Collection<?> values);1524684173;A filer for a field based on several terms matching on any of them.__@param name   The field name_@param values The terms;public static TermsQueryBuilder termsQuery(String name, Collection<?> values) {_        return new TermsQueryBuilder(name, values)__    };a,filer,for,a,field,based,on,several,terms,matching,on,any,of,them,param,name,the,field,name,param,values,the,terms;public,static,terms,query,builder,terms,query,string,name,collection,values,return,new,terms,query,builder,name,values
QueryBuilders -> public static TermsQueryBuilder termsQuery(String name, Collection<?> values);1525334055;A filer for a field based on several terms matching on any of them.__@param name   The field name_@param values The terms;public static TermsQueryBuilder termsQuery(String name, Collection<?> values) {_        return new TermsQueryBuilder(name, values)__    };a,filer,for,a,field,based,on,several,terms,matching,on,any,of,them,param,name,the,field,name,param,values,the,terms;public,static,terms,query,builder,terms,query,string,name,collection,values,return,new,terms,query,builder,name,values
QueryBuilders -> public static TermsQueryBuilder termsQuery(String name, Collection<?> values);1542697754;A filer for a field based on several terms matching on any of them.__@param name   The field name_@param values The terms;public static TermsQueryBuilder termsQuery(String name, Collection<?> values) {_        return new TermsQueryBuilder(name, values)__    };a,filer,for,a,field,based,on,several,terms,matching,on,any,of,them,param,name,the,field,name,param,values,the,terms;public,static,terms,query,builder,terms,query,string,name,collection,values,return,new,terms,query,builder,name,values
QueryBuilders -> public static TermsQueryBuilder termsQuery(String name, Collection<?> values);1542748206;A filer for a field based on several terms matching on any of them.__@param name   The field name_@param values The terms;public static TermsQueryBuilder termsQuery(String name, Collection<?> values) {_        return new TermsQueryBuilder(name, values)__    };a,filer,for,a,field,based,on,several,terms,matching,on,any,of,them,param,name,the,field,name,param,values,the,terms;public,static,terms,query,builder,terms,query,string,name,collection,values,return,new,terms,query,builder,name,values
QueryBuilders -> public static TermsQueryBuilder termsQuery(String name, Collection<?> values);1547002001;A filer for a field based on several terms matching on any of them.__@param name   The field name_@param values The terms;public static TermsQueryBuilder termsQuery(String name, Collection<?> values) {_        return new TermsQueryBuilder(name, values)__    };a,filer,for,a,field,based,on,several,terms,matching,on,any,of,them,param,name,the,field,name,param,values,the,terms;public,static,terms,query,builder,terms,query,string,name,collection,values,return,new,terms,query,builder,name,values
QueryBuilders -> public static MoreLikeThisQueryBuilder moreLikeThisQuery(String[] likeTexts, Item[] likeItems);1524684173;A more like this query that finds documents that are "like" the provided texts or documents_which is checked against the "_all" field._@param likeTexts the text to use when generating the 'More Like This' query._@param likeItems the documents to use when generating the 'More Like This' query.;public static MoreLikeThisQueryBuilder moreLikeThisQuery(String[] likeTexts, Item[] likeItems) {_        return moreLikeThisQuery(null, likeTexts, likeItems)__    };a,more,like,this,query,that,finds,documents,that,are,like,the,provided,texts,or,documents,which,is,checked,against,the,field,param,like,texts,the,text,to,use,when,generating,the,more,like,this,query,param,like,items,the,documents,to,use,when,generating,the,more,like,this,query;public,static,more,like,this,query,builder,more,like,this,query,string,like,texts,item,like,items,return,more,like,this,query,null,like,texts,like,items
QueryBuilders -> public static MoreLikeThisQueryBuilder moreLikeThisQuery(String[] likeTexts, Item[] likeItems);1525334055;A more like this query that finds documents that are "like" the provided texts or documents_which is checked against the "_all" field._@param likeTexts the text to use when generating the 'More Like This' query._@param likeItems the documents to use when generating the 'More Like This' query.;public static MoreLikeThisQueryBuilder moreLikeThisQuery(String[] likeTexts, Item[] likeItems) {_        return moreLikeThisQuery(null, likeTexts, likeItems)__    };a,more,like,this,query,that,finds,documents,that,are,like,the,provided,texts,or,documents,which,is,checked,against,the,field,param,like,texts,the,text,to,use,when,generating,the,more,like,this,query,param,like,items,the,documents,to,use,when,generating,the,more,like,this,query;public,static,more,like,this,query,builder,more,like,this,query,string,like,texts,item,like,items,return,more,like,this,query,null,like,texts,like,items
QueryBuilders -> public static MoreLikeThisQueryBuilder moreLikeThisQuery(String[] likeTexts, Item[] likeItems);1542697754;A more like this query that finds documents that are "like" the provided texts or documents_which is checked against the "_all" field._@param likeTexts the text to use when generating the 'More Like This' query._@param likeItems the documents to use when generating the 'More Like This' query.;public static MoreLikeThisQueryBuilder moreLikeThisQuery(String[] likeTexts, Item[] likeItems) {_        return moreLikeThisQuery(null, likeTexts, likeItems)__    };a,more,like,this,query,that,finds,documents,that,are,like,the,provided,texts,or,documents,which,is,checked,against,the,field,param,like,texts,the,text,to,use,when,generating,the,more,like,this,query,param,like,items,the,documents,to,use,when,generating,the,more,like,this,query;public,static,more,like,this,query,builder,more,like,this,query,string,like,texts,item,like,items,return,more,like,this,query,null,like,texts,like,items
QueryBuilders -> public static MoreLikeThisQueryBuilder moreLikeThisQuery(String[] likeTexts, Item[] likeItems);1542748206;A more like this query that finds documents that are "like" the provided texts or documents_which is checked against the "_all" field._@param likeTexts the text to use when generating the 'More Like This' query._@param likeItems the documents to use when generating the 'More Like This' query.;public static MoreLikeThisQueryBuilder moreLikeThisQuery(String[] likeTexts, Item[] likeItems) {_        return moreLikeThisQuery(null, likeTexts, likeItems)__    };a,more,like,this,query,that,finds,documents,that,are,like,the,provided,texts,or,documents,which,is,checked,against,the,field,param,like,texts,the,text,to,use,when,generating,the,more,like,this,query,param,like,items,the,documents,to,use,when,generating,the,more,like,this,query;public,static,more,like,this,query,builder,more,like,this,query,string,like,texts,item,like,items,return,more,like,this,query,null,like,texts,like,items
QueryBuilders -> public static MoreLikeThisQueryBuilder moreLikeThisQuery(String[] likeTexts, Item[] likeItems);1547002001;A more like this query that finds documents that are "like" the provided texts or documents_which is checked against the "_all" field._@param likeTexts the text to use when generating the 'More Like This' query._@param likeItems the documents to use when generating the 'More Like This' query.;public static MoreLikeThisQueryBuilder moreLikeThisQuery(String[] likeTexts, Item[] likeItems) {_        return moreLikeThisQuery(null, likeTexts, likeItems)__    };a,more,like,this,query,that,finds,documents,that,are,like,the,provided,texts,or,documents,which,is,checked,against,the,field,param,like,texts,the,text,to,use,when,generating,the,more,like,this,query,param,like,items,the,documents,to,use,when,generating,the,more,like,this,query;public,static,more,like,this,query,builder,more,like,this,query,string,like,texts,item,like,items,return,more,like,this,query,null,like,texts,like,items
QueryBuilders -> public static FunctionScoreQueryBuilder functionScoreQuery(ScoreFunctionBuilder function);1524684173;A query that allows to define a custom scoring function.__@param function The function builder used to custom score;public static FunctionScoreQueryBuilder functionScoreQuery(ScoreFunctionBuilder function) {_        return new FunctionScoreQueryBuilder(function)__    };a,query,that,allows,to,define,a,custom,scoring,function,param,function,the,function,builder,used,to,custom,score;public,static,function,score,query,builder,function,score,query,score,function,builder,function,return,new,function,score,query,builder,function
QueryBuilders -> public static FunctionScoreQueryBuilder functionScoreQuery(ScoreFunctionBuilder function);1525334055;A query that allows to define a custom scoring function.__@param function The function builder used to custom score;public static FunctionScoreQueryBuilder functionScoreQuery(ScoreFunctionBuilder function) {_        return new FunctionScoreQueryBuilder(function)__    };a,query,that,allows,to,define,a,custom,scoring,function,param,function,the,function,builder,used,to,custom,score;public,static,function,score,query,builder,function,score,query,score,function,builder,function,return,new,function,score,query,builder,function
QueryBuilders -> public static FunctionScoreQueryBuilder functionScoreQuery(ScoreFunctionBuilder function);1542697754;A query that allows to define a custom scoring function.__@param function The function builder used to custom score;public static FunctionScoreQueryBuilder functionScoreQuery(ScoreFunctionBuilder function) {_        return new FunctionScoreQueryBuilder(function)__    };a,query,that,allows,to,define,a,custom,scoring,function,param,function,the,function,builder,used,to,custom,score;public,static,function,score,query,builder,function,score,query,score,function,builder,function,return,new,function,score,query,builder,function
QueryBuilders -> public static FunctionScoreQueryBuilder functionScoreQuery(ScoreFunctionBuilder function);1542748206;A query that allows to define a custom scoring function.__@param function The function builder used to custom score;public static FunctionScoreQueryBuilder functionScoreQuery(ScoreFunctionBuilder function) {_        return new FunctionScoreQueryBuilder(function)__    };a,query,that,allows,to,define,a,custom,scoring,function,param,function,the,function,builder,used,to,custom,score;public,static,function,score,query,builder,function,score,query,score,function,builder,function,return,new,function,score,query,builder,function
QueryBuilders -> public static FunctionScoreQueryBuilder functionScoreQuery(ScoreFunctionBuilder function);1547002001;A query that allows to define a custom scoring function.__@param function The function builder used to custom score;public static FunctionScoreQueryBuilder functionScoreQuery(ScoreFunctionBuilder function) {_        return new FunctionScoreQueryBuilder(function)__    };a,query,that,allows,to,define,a,custom,scoring,function,param,function,the,function,builder,used,to,custom,score;public,static,function,score,query,builder,function,score,query,score,function,builder,function,return,new,function,score,query,builder,function
QueryBuilders -> public static GeoBoundingBoxQueryBuilder geoBoundingBoxQuery(String name);1524684173;A filter to filter based on a bounding box defined by top left and bottom right locations / points__@param name The location field name.;public static GeoBoundingBoxQueryBuilder geoBoundingBoxQuery(String name) {_        return new GeoBoundingBoxQueryBuilder(name)__    };a,filter,to,filter,based,on,a,bounding,box,defined,by,top,left,and,bottom,right,locations,points,param,name,the,location,field,name;public,static,geo,bounding,box,query,builder,geo,bounding,box,query,string,name,return,new,geo,bounding,box,query,builder,name
QueryBuilders -> public static GeoBoundingBoxQueryBuilder geoBoundingBoxQuery(String name);1525334055;A filter to filter based on a bounding box defined by top left and bottom right locations / points__@param name The location field name.;public static GeoBoundingBoxQueryBuilder geoBoundingBoxQuery(String name) {_        return new GeoBoundingBoxQueryBuilder(name)__    };a,filter,to,filter,based,on,a,bounding,box,defined,by,top,left,and,bottom,right,locations,points,param,name,the,location,field,name;public,static,geo,bounding,box,query,builder,geo,bounding,box,query,string,name,return,new,geo,bounding,box,query,builder,name
QueryBuilders -> public static GeoBoundingBoxQueryBuilder geoBoundingBoxQuery(String name);1542697754;A filter to filter based on a bounding box defined by top left and bottom right locations / points__@param name The location field name.;public static GeoBoundingBoxQueryBuilder geoBoundingBoxQuery(String name) {_        return new GeoBoundingBoxQueryBuilder(name)__    };a,filter,to,filter,based,on,a,bounding,box,defined,by,top,left,and,bottom,right,locations,points,param,name,the,location,field,name;public,static,geo,bounding,box,query,builder,geo,bounding,box,query,string,name,return,new,geo,bounding,box,query,builder,name
QueryBuilders -> public static GeoBoundingBoxQueryBuilder geoBoundingBoxQuery(String name);1542748206;A filter to filter based on a bounding box defined by top left and bottom right locations / points__@param name The location field name.;public static GeoBoundingBoxQueryBuilder geoBoundingBoxQuery(String name) {_        return new GeoBoundingBoxQueryBuilder(name)__    };a,filter,to,filter,based,on,a,bounding,box,defined,by,top,left,and,bottom,right,locations,points,param,name,the,location,field,name;public,static,geo,bounding,box,query,builder,geo,bounding,box,query,string,name,return,new,geo,bounding,box,query,builder,name
QueryBuilders -> public static GeoBoundingBoxQueryBuilder geoBoundingBoxQuery(String name);1547002001;A filter to filter based on a bounding box defined by top left and bottom right locations / points__@param name The location field name.;public static GeoBoundingBoxQueryBuilder geoBoundingBoxQuery(String name) {_        return new GeoBoundingBoxQueryBuilder(name)__    };a,filter,to,filter,based,on,a,bounding,box,defined,by,top,left,and,bottom,right,locations,points,param,name,the,location,field,name;public,static,geo,bounding,box,query,builder,geo,bounding,box,query,string,name,return,new,geo,bounding,box,query,builder,name
QueryBuilders -> public static FunctionScoreQueryBuilder functionScoreQuery(QueryBuilder queryBuilder, ScoreFunctionBuilder function);1524684173;A query that allows to define a custom scoring function.__@param queryBuilder The query to custom score_@param function     The function builder used to custom score;public static FunctionScoreQueryBuilder functionScoreQuery(QueryBuilder queryBuilder, ScoreFunctionBuilder function) {_        return (new FunctionScoreQueryBuilder(queryBuilder, function))__    };a,query,that,allows,to,define,a,custom,scoring,function,param,query,builder,the,query,to,custom,score,param,function,the,function,builder,used,to,custom,score;public,static,function,score,query,builder,function,score,query,query,builder,query,builder,score,function,builder,function,return,new,function,score,query,builder,query,builder,function
QueryBuilders -> public static FunctionScoreQueryBuilder functionScoreQuery(QueryBuilder queryBuilder, ScoreFunctionBuilder function);1525334055;A query that allows to define a custom scoring function.__@param queryBuilder The query to custom score_@param function     The function builder used to custom score;public static FunctionScoreQueryBuilder functionScoreQuery(QueryBuilder queryBuilder, ScoreFunctionBuilder function) {_        return (new FunctionScoreQueryBuilder(queryBuilder, function))__    };a,query,that,allows,to,define,a,custom,scoring,function,param,query,builder,the,query,to,custom,score,param,function,the,function,builder,used,to,custom,score;public,static,function,score,query,builder,function,score,query,query,builder,query,builder,score,function,builder,function,return,new,function,score,query,builder,query,builder,function
QueryBuilders -> public static FunctionScoreQueryBuilder functionScoreQuery(QueryBuilder queryBuilder, ScoreFunctionBuilder function);1542697754;A query that allows to define a custom scoring function.__@param queryBuilder The query to custom score_@param function     The function builder used to custom score;public static FunctionScoreQueryBuilder functionScoreQuery(QueryBuilder queryBuilder, ScoreFunctionBuilder function) {_        return (new FunctionScoreQueryBuilder(queryBuilder, function))__    };a,query,that,allows,to,define,a,custom,scoring,function,param,query,builder,the,query,to,custom,score,param,function,the,function,builder,used,to,custom,score;public,static,function,score,query,builder,function,score,query,query,builder,query,builder,score,function,builder,function,return,new,function,score,query,builder,query,builder,function
QueryBuilders -> public static FunctionScoreQueryBuilder functionScoreQuery(QueryBuilder queryBuilder, ScoreFunctionBuilder function);1542748206;A query that allows to define a custom scoring function.__@param queryBuilder The query to custom score_@param function     The function builder used to custom score;public static FunctionScoreQueryBuilder functionScoreQuery(QueryBuilder queryBuilder, ScoreFunctionBuilder function) {_        return (new FunctionScoreQueryBuilder(queryBuilder, function))__    };a,query,that,allows,to,define,a,custom,scoring,function,param,query,builder,the,query,to,custom,score,param,function,the,function,builder,used,to,custom,score;public,static,function,score,query,builder,function,score,query,query,builder,query,builder,score,function,builder,function,return,new,function,score,query,builder,query,builder,function
QueryBuilders -> public static FunctionScoreQueryBuilder functionScoreQuery(QueryBuilder queryBuilder, ScoreFunctionBuilder function);1547002001;A query that allows to define a custom scoring function.__@param queryBuilder The query to custom score_@param function     The function builder used to custom score;public static FunctionScoreQueryBuilder functionScoreQuery(QueryBuilder queryBuilder, ScoreFunctionBuilder function) {_        return (new FunctionScoreQueryBuilder(queryBuilder, function))__    };a,query,that,allows,to,define,a,custom,scoring,function,param,query,builder,the,query,to,custom,score,param,function,the,function,builder,used,to,custom,score;public,static,function,score,query,builder,function,score,query,query,builder,query,builder,score,function,builder,function,return,new,function,score,query,builder,query,builder,function
QueryBuilders -> public static TermsQueryBuilder termsQuery(String name, int... values);1524684173;A filer for a field based on several terms matching on any of them.__@param name   The field name_@param values The terms;public static TermsQueryBuilder termsQuery(String name, int... values) {_        return new TermsQueryBuilder(name, values)__    };a,filer,for,a,field,based,on,several,terms,matching,on,any,of,them,param,name,the,field,name,param,values,the,terms;public,static,terms,query,builder,terms,query,string,name,int,values,return,new,terms,query,builder,name,values
QueryBuilders -> public static TermsQueryBuilder termsQuery(String name, int... values);1525334055;A filer for a field based on several terms matching on any of them.__@param name   The field name_@param values The terms;public static TermsQueryBuilder termsQuery(String name, int... values) {_        return new TermsQueryBuilder(name, values)__    };a,filer,for,a,field,based,on,several,terms,matching,on,any,of,them,param,name,the,field,name,param,values,the,terms;public,static,terms,query,builder,terms,query,string,name,int,values,return,new,terms,query,builder,name,values
QueryBuilders -> public static TermsQueryBuilder termsQuery(String name, int... values);1542697754;A filer for a field based on several terms matching on any of them.__@param name   The field name_@param values The terms;public static TermsQueryBuilder termsQuery(String name, int... values) {_        return new TermsQueryBuilder(name, values)__    };a,filer,for,a,field,based,on,several,terms,matching,on,any,of,them,param,name,the,field,name,param,values,the,terms;public,static,terms,query,builder,terms,query,string,name,int,values,return,new,terms,query,builder,name,values
QueryBuilders -> public static TermsQueryBuilder termsQuery(String name, int... values);1542748206;A filer for a field based on several terms matching on any of them.__@param name   The field name_@param values The terms;public static TermsQueryBuilder termsQuery(String name, int... values) {_        return new TermsQueryBuilder(name, values)__    };a,filer,for,a,field,based,on,several,terms,matching,on,any,of,them,param,name,the,field,name,param,values,the,terms;public,static,terms,query,builder,terms,query,string,name,int,values,return,new,terms,query,builder,name,values
QueryBuilders -> public static TermsQueryBuilder termsQuery(String name, int... values);1547002001;A filer for a field based on several terms matching on any of them.__@param name   The field name_@param values The terms;public static TermsQueryBuilder termsQuery(String name, int... values) {_        return new TermsQueryBuilder(name, values)__    };a,filer,for,a,field,based,on,several,terms,matching,on,any,of,them,param,name,the,field,name,param,values,the,terms;public,static,terms,query,builder,terms,query,string,name,int,values,return,new,terms,query,builder,name,values
QueryBuilders -> public static TermsQueryBuilder termsQuery(String name, Object... values);1524684173;A filer for a field based on several terms matching on any of them.__@param name   The field name_@param values The terms;public static TermsQueryBuilder termsQuery(String name, Object... values) {_        return new TermsQueryBuilder(name, values)__    };a,filer,for,a,field,based,on,several,terms,matching,on,any,of,them,param,name,the,field,name,param,values,the,terms;public,static,terms,query,builder,terms,query,string,name,object,values,return,new,terms,query,builder,name,values
QueryBuilders -> public static TermsQueryBuilder termsQuery(String name, Object... values);1525334055;A filer for a field based on several terms matching on any of them.__@param name   The field name_@param values The terms;public static TermsQueryBuilder termsQuery(String name, Object... values) {_        return new TermsQueryBuilder(name, values)__    };a,filer,for,a,field,based,on,several,terms,matching,on,any,of,them,param,name,the,field,name,param,values,the,terms;public,static,terms,query,builder,terms,query,string,name,object,values,return,new,terms,query,builder,name,values
QueryBuilders -> public static TermsQueryBuilder termsQuery(String name, Object... values);1542697754;A filer for a field based on several terms matching on any of them.__@param name   The field name_@param values The terms;public static TermsQueryBuilder termsQuery(String name, Object... values) {_        return new TermsQueryBuilder(name, values)__    };a,filer,for,a,field,based,on,several,terms,matching,on,any,of,them,param,name,the,field,name,param,values,the,terms;public,static,terms,query,builder,terms,query,string,name,object,values,return,new,terms,query,builder,name,values
QueryBuilders -> public static TermsQueryBuilder termsQuery(String name, Object... values);1542748206;A filer for a field based on several terms matching on any of them.__@param name   The field name_@param values The terms;public static TermsQueryBuilder termsQuery(String name, Object... values) {_        return new TermsQueryBuilder(name, values)__    };a,filer,for,a,field,based,on,several,terms,matching,on,any,of,them,param,name,the,field,name,param,values,the,terms;public,static,terms,query,builder,terms,query,string,name,object,values,return,new,terms,query,builder,name,values
QueryBuilders -> public static TermsQueryBuilder termsQuery(String name, Object... values);1547002001;A filer for a field based on several terms matching on any of them.__@param name   The field name_@param values The terms;public static TermsQueryBuilder termsQuery(String name, Object... values) {_        return new TermsQueryBuilder(name, values)__    };a,filer,for,a,field,based,on,several,terms,matching,on,any,of,them,param,name,the,field,name,param,values,the,terms;public,static,terms,query,builder,terms,query,string,name,object,values,return,new,terms,query,builder,name,values
QueryBuilders -> public static IdsQueryBuilder idsQuery();1524684173;Constructs a query that will match only specific ids within all types.;public static IdsQueryBuilder idsQuery() {_        return new IdsQueryBuilder()__    };constructs,a,query,that,will,match,only,specific,ids,within,all,types;public,static,ids,query,builder,ids,query,return,new,ids,query,builder
QueryBuilders -> public static IdsQueryBuilder idsQuery();1525334055;Constructs a query that will match only specific ids within all types.;public static IdsQueryBuilder idsQuery() {_        return new IdsQueryBuilder()__    };constructs,a,query,that,will,match,only,specific,ids,within,all,types;public,static,ids,query,builder,ids,query,return,new,ids,query,builder
QueryBuilders -> public static IdsQueryBuilder idsQuery();1542697754;Constructs a query that will match only specific ids within all types.;public static IdsQueryBuilder idsQuery() {_        return new IdsQueryBuilder()__    };constructs,a,query,that,will,match,only,specific,ids,within,all,types;public,static,ids,query,builder,ids,query,return,new,ids,query,builder
QueryBuilders -> public static IdsQueryBuilder idsQuery();1542748206;Constructs a query that will match only specific ids within all types.;public static IdsQueryBuilder idsQuery() {_        return new IdsQueryBuilder()__    };constructs,a,query,that,will,match,only,specific,ids,within,all,types;public,static,ids,query,builder,ids,query,return,new,ids,query,builder
QueryBuilders -> public static IdsQueryBuilder idsQuery();1547002001;Constructs a query that will match only specific ids within all types.;public static IdsQueryBuilder idsQuery() {_        return new IdsQueryBuilder()__    };constructs,a,query,that,will,match,only,specific,ids,within,all,types;public,static,ids,query,builder,ids,query,return,new,ids,query,builder
QueryBuilders -> public static FunctionScoreQueryBuilder functionScoreQuery(QueryBuilder queryBuilder,                                                                FunctionScoreQueryBuilder.FilterFunctionBuilder[] filterFunctionBuilders);1542697754;A query that allows to define a custom scoring function__@param queryBuilder The query to custom score_@param filterFunctionBuilders the filters and functions to execute_@return the function score query;public static FunctionScoreQueryBuilder functionScoreQuery(QueryBuilder queryBuilder,_                                                               FunctionScoreQueryBuilder.FilterFunctionBuilder[] filterFunctionBuilders) {_        return new FunctionScoreQueryBuilder(queryBuilder, filterFunctionBuilders)__    };a,query,that,allows,to,define,a,custom,scoring,function,param,query,builder,the,query,to,custom,score,param,filter,function,builders,the,filters,and,functions,to,execute,return,the,function,score,query;public,static,function,score,query,builder,function,score,query,query,builder,query,builder,function,score,query,builder,filter,function,builder,filter,function,builders,return,new,function,score,query,builder,query,builder,filter,function,builders
QueryBuilders -> public static FunctionScoreQueryBuilder functionScoreQuery(QueryBuilder queryBuilder,                                                                FunctionScoreQueryBuilder.FilterFunctionBuilder[] filterFunctionBuilders);1542748206;A query that allows to define a custom scoring function__@param queryBuilder The query to custom score_@param filterFunctionBuilders the filters and functions to execute_@return the function score query;public static FunctionScoreQueryBuilder functionScoreQuery(QueryBuilder queryBuilder,_                                                               FunctionScoreQueryBuilder.FilterFunctionBuilder[] filterFunctionBuilders) {_        return new FunctionScoreQueryBuilder(queryBuilder, filterFunctionBuilders)__    };a,query,that,allows,to,define,a,custom,scoring,function,param,query,builder,the,query,to,custom,score,param,filter,function,builders,the,filters,and,functions,to,execute,return,the,function,score,query;public,static,function,score,query,builder,function,score,query,query,builder,query,builder,function,score,query,builder,filter,function,builder,filter,function,builders,return,new,function,score,query,builder,query,builder,filter,function,builders
QueryBuilders -> public static FunctionScoreQueryBuilder functionScoreQuery(QueryBuilder queryBuilder,                                                                FunctionScoreQueryBuilder.FilterFunctionBuilder[] filterFunctionBuilders);1547002001;A query that allows to define a custom scoring function__@param queryBuilder The query to custom score_@param filterFunctionBuilders the filters and functions to execute_@return the function score query;public static FunctionScoreQueryBuilder functionScoreQuery(QueryBuilder queryBuilder,_                                                               FunctionScoreQueryBuilder.FilterFunctionBuilder[] filterFunctionBuilders) {_        return new FunctionScoreQueryBuilder(queryBuilder, filterFunctionBuilders)__    };a,query,that,allows,to,define,a,custom,scoring,function,param,query,builder,the,query,to,custom,score,param,filter,function,builders,the,filters,and,functions,to,execute,return,the,function,score,query;public,static,function,score,query,builder,function,score,query,query,builder,query,builder,function,score,query,builder,filter,function,builder,filter,function,builders,return,new,function,score,query,builder,query,builder,filter,function,builders
QueryBuilders -> public static RegexpQueryBuilder regexpQuery(String name, String regexp);1524684173;A Query that matches documents containing terms with a specified regular expression.__@param name   The name of the field_@param regexp The regular expression;public static RegexpQueryBuilder regexpQuery(String name, String regexp) {_        return new RegexpQueryBuilder(name, regexp)__    };a,query,that,matches,documents,containing,terms,with,a,specified,regular,expression,param,name,the,name,of,the,field,param,regexp,the,regular,expression;public,static,regexp,query,builder,regexp,query,string,name,string,regexp,return,new,regexp,query,builder,name,regexp
QueryBuilders -> public static RegexpQueryBuilder regexpQuery(String name, String regexp);1525334055;A Query that matches documents containing terms with a specified regular expression.__@param name   The name of the field_@param regexp The regular expression;public static RegexpQueryBuilder regexpQuery(String name, String regexp) {_        return new RegexpQueryBuilder(name, regexp)__    };a,query,that,matches,documents,containing,terms,with,a,specified,regular,expression,param,name,the,name,of,the,field,param,regexp,the,regular,expression;public,static,regexp,query,builder,regexp,query,string,name,string,regexp,return,new,regexp,query,builder,name,regexp
QueryBuilders -> public static RegexpQueryBuilder regexpQuery(String name, String regexp);1542697754;A Query that matches documents containing terms with a specified regular expression.__@param name   The name of the field_@param regexp The regular expression;public static RegexpQueryBuilder regexpQuery(String name, String regexp) {_        return new RegexpQueryBuilder(name, regexp)__    };a,query,that,matches,documents,containing,terms,with,a,specified,regular,expression,param,name,the,name,of,the,field,param,regexp,the,regular,expression;public,static,regexp,query,builder,regexp,query,string,name,string,regexp,return,new,regexp,query,builder,name,regexp
QueryBuilders -> public static RegexpQueryBuilder regexpQuery(String name, String regexp);1542748206;A Query that matches documents containing terms with a specified regular expression.__@param name   The name of the field_@param regexp The regular expression;public static RegexpQueryBuilder regexpQuery(String name, String regexp) {_        return new RegexpQueryBuilder(name, regexp)__    };a,query,that,matches,documents,containing,terms,with,a,specified,regular,expression,param,name,the,name,of,the,field,param,regexp,the,regular,expression;public,static,regexp,query,builder,regexp,query,string,name,string,regexp,return,new,regexp,query,builder,name,regexp
QueryBuilders -> public static RegexpQueryBuilder regexpQuery(String name, String regexp);1547002001;A Query that matches documents containing terms with a specified regular expression.__@param name   The name of the field_@param regexp The regular expression;public static RegexpQueryBuilder regexpQuery(String name, String regexp) {_        return new RegexpQueryBuilder(name, regexp)__    };a,query,that,matches,documents,containing,terms,with,a,specified,regular,expression,param,name,the,name,of,the,field,param,regexp,the,regular,expression;public,static,regexp,query,builder,regexp,query,string,name,string,regexp,return,new,regexp,query,builder,name,regexp
QueryBuilders -> public static ExistsQueryBuilder existsQuery(String name);1524684173;A filter to filter only documents where a field exists in them.__@param name The name of the field;public static ExistsQueryBuilder existsQuery(String name) {_        return new ExistsQueryBuilder(name)__    };a,filter,to,filter,only,documents,where,a,field,exists,in,them,param,name,the,name,of,the,field;public,static,exists,query,builder,exists,query,string,name,return,new,exists,query,builder,name
QueryBuilders -> public static ExistsQueryBuilder existsQuery(String name);1525334055;A filter to filter only documents where a field exists in them.__@param name The name of the field;public static ExistsQueryBuilder existsQuery(String name) {_        return new ExistsQueryBuilder(name)__    };a,filter,to,filter,only,documents,where,a,field,exists,in,them,param,name,the,name,of,the,field;public,static,exists,query,builder,exists,query,string,name,return,new,exists,query,builder,name
QueryBuilders -> public static ExistsQueryBuilder existsQuery(String name);1542697754;A filter to filter only documents where a field exists in them.__@param name The name of the field;public static ExistsQueryBuilder existsQuery(String name) {_        return new ExistsQueryBuilder(name)__    };a,filter,to,filter,only,documents,where,a,field,exists,in,them,param,name,the,name,of,the,field;public,static,exists,query,builder,exists,query,string,name,return,new,exists,query,builder,name
QueryBuilders -> public static ExistsQueryBuilder existsQuery(String name);1542748206;A filter to filter only documents where a field exists in them.__@param name The name of the field;public static ExistsQueryBuilder existsQuery(String name) {_        return new ExistsQueryBuilder(name)__    };a,filter,to,filter,only,documents,where,a,field,exists,in,them,param,name,the,name,of,the,field;public,static,exists,query,builder,exists,query,string,name,return,new,exists,query,builder,name
QueryBuilders -> public static ExistsQueryBuilder existsQuery(String name);1547002001;A filter to filter only documents where a field exists in them.__@param name The name of the field;public static ExistsQueryBuilder existsQuery(String name) {_        return new ExistsQueryBuilder(name)__    };a,filter,to,filter,only,documents,where,a,field,exists,in,them,param,name,the,name,of,the,field;public,static,exists,query,builder,exists,query,string,name,return,new,exists,query,builder,name
QueryBuilders -> public static FunctionScoreQueryBuilder functionScoreQuery(QueryBuilder queryBuilder);1524684173;A function_score query with no functions.__@param queryBuilder The query to custom score_@return the function score query;public static FunctionScoreQueryBuilder functionScoreQuery(QueryBuilder queryBuilder) {_        return new FunctionScoreQueryBuilder(queryBuilder)__    };a,query,with,no,functions,param,query,builder,the,query,to,custom,score,return,the,function,score,query;public,static,function,score,query,builder,function,score,query,query,builder,query,builder,return,new,function,score,query,builder,query,builder
QueryBuilders -> public static FunctionScoreQueryBuilder functionScoreQuery(QueryBuilder queryBuilder);1525334055;A function_score query with no functions.__@param queryBuilder The query to custom score_@return the function score query;public static FunctionScoreQueryBuilder functionScoreQuery(QueryBuilder queryBuilder) {_        return new FunctionScoreQueryBuilder(queryBuilder)__    };a,query,with,no,functions,param,query,builder,the,query,to,custom,score,return,the,function,score,query;public,static,function,score,query,builder,function,score,query,query,builder,query,builder,return,new,function,score,query,builder,query,builder
QueryBuilders -> public static FunctionScoreQueryBuilder functionScoreQuery(QueryBuilder queryBuilder);1542697754;A function_score query with no functions.__@param queryBuilder The query to custom score_@return the function score query;public static FunctionScoreQueryBuilder functionScoreQuery(QueryBuilder queryBuilder) {_        return new FunctionScoreQueryBuilder(queryBuilder)__    };a,query,with,no,functions,param,query,builder,the,query,to,custom,score,return,the,function,score,query;public,static,function,score,query,builder,function,score,query,query,builder,query,builder,return,new,function,score,query,builder,query,builder
QueryBuilders -> public static FunctionScoreQueryBuilder functionScoreQuery(QueryBuilder queryBuilder);1542748206;A function_score query with no functions.__@param queryBuilder The query to custom score_@return the function score query;public static FunctionScoreQueryBuilder functionScoreQuery(QueryBuilder queryBuilder) {_        return new FunctionScoreQueryBuilder(queryBuilder)__    };a,query,with,no,functions,param,query,builder,the,query,to,custom,score,return,the,function,score,query;public,static,function,score,query,builder,function,score,query,query,builder,query,builder,return,new,function,score,query,builder,query,builder
QueryBuilders -> public static FunctionScoreQueryBuilder functionScoreQuery(QueryBuilder queryBuilder);1547002001;A function_score query with no functions.__@param queryBuilder The query to custom score_@return the function score query;public static FunctionScoreQueryBuilder functionScoreQuery(QueryBuilder queryBuilder) {_        return new FunctionScoreQueryBuilder(queryBuilder)__    };a,query,with,no,functions,param,query,builder,the,query,to,custom,score,return,the,function,score,query;public,static,function,score,query,builder,function,score,query,query,builder,query,builder,return,new,function,score,query,builder,query,builder
QueryBuilders -> public static GeoShapeQueryBuilder geoIntersectionQuery(String name, ShapeBuilder shape) throws IOException;1524684173;A filter to filter indexed shapes intersecting with shapes__@param name  The shape field name_@param shape Shape to use in the filter;public static GeoShapeQueryBuilder geoIntersectionQuery(String name, ShapeBuilder shape) throws IOException {_        GeoShapeQueryBuilder builder = geoShapeQuery(name, shape)__        builder.relation(ShapeRelation.INTERSECTS)__        return builder__    };a,filter,to,filter,indexed,shapes,intersecting,with,shapes,param,name,the,shape,field,name,param,shape,shape,to,use,in,the,filter;public,static,geo,shape,query,builder,geo,intersection,query,string,name,shape,builder,shape,throws,ioexception,geo,shape,query,builder,builder,geo,shape,query,name,shape,builder,relation,shape,relation,intersects,return,builder
QueryBuilders -> public static GeoShapeQueryBuilder geoIntersectionQuery(String name, ShapeBuilder shape) throws IOException;1525334055;A filter to filter indexed shapes intersecting with shapes__@param name  The shape field name_@param shape Shape to use in the filter;public static GeoShapeQueryBuilder geoIntersectionQuery(String name, ShapeBuilder shape) throws IOException {_        GeoShapeQueryBuilder builder = geoShapeQuery(name, shape)__        builder.relation(ShapeRelation.INTERSECTS)__        return builder__    };a,filter,to,filter,indexed,shapes,intersecting,with,shapes,param,name,the,shape,field,name,param,shape,shape,to,use,in,the,filter;public,static,geo,shape,query,builder,geo,intersection,query,string,name,shape,builder,shape,throws,ioexception,geo,shape,query,builder,builder,geo,shape,query,name,shape,builder,relation,shape,relation,intersects,return,builder
QueryBuilders -> public static GeoShapeQueryBuilder geoIntersectionQuery(String name, ShapeBuilder shape) throws IOException;1542697754;A filter to filter indexed shapes intersecting with shapes__@param name  The shape field name_@param shape Shape to use in the filter;public static GeoShapeQueryBuilder geoIntersectionQuery(String name, ShapeBuilder shape) throws IOException {_        GeoShapeQueryBuilder builder = geoShapeQuery(name, shape)__        builder.relation(ShapeRelation.INTERSECTS)__        return builder__    };a,filter,to,filter,indexed,shapes,intersecting,with,shapes,param,name,the,shape,field,name,param,shape,shape,to,use,in,the,filter;public,static,geo,shape,query,builder,geo,intersection,query,string,name,shape,builder,shape,throws,ioexception,geo,shape,query,builder,builder,geo,shape,query,name,shape,builder,relation,shape,relation,intersects,return,builder
QueryBuilders -> public static GeoShapeQueryBuilder geoIntersectionQuery(String name, ShapeBuilder shape) throws IOException;1542748206;A filter to filter indexed shapes intersecting with shapes__@param name  The shape field name_@param shape Shape to use in the filter;public static GeoShapeQueryBuilder geoIntersectionQuery(String name, ShapeBuilder shape) throws IOException {_        GeoShapeQueryBuilder builder = geoShapeQuery(name, shape)__        builder.relation(ShapeRelation.INTERSECTS)__        return builder__    };a,filter,to,filter,indexed,shapes,intersecting,with,shapes,param,name,the,shape,field,name,param,shape,shape,to,use,in,the,filter;public,static,geo,shape,query,builder,geo,intersection,query,string,name,shape,builder,shape,throws,ioexception,geo,shape,query,builder,builder,geo,shape,query,name,shape,builder,relation,shape,relation,intersects,return,builder
QueryBuilders -> public static GeoShapeQueryBuilder geoIntersectionQuery(String name, ShapeBuilder shape) throws IOException;1547002001;A filter to filter indexed shapes intersecting with shapes__@param name  The shape field name_@param shape Shape to use in the filter;public static GeoShapeQueryBuilder geoIntersectionQuery(String name, ShapeBuilder shape) throws IOException {_        GeoShapeQueryBuilder builder = geoShapeQuery(name, shape)__        builder.relation(ShapeRelation.INTERSECTS)__        return builder__    };a,filter,to,filter,indexed,shapes,intersecting,with,shapes,param,name,the,shape,field,name,param,shape,shape,to,use,in,the,filter;public,static,geo,shape,query,builder,geo,intersection,query,string,name,shape,builder,shape,throws,ioexception,geo,shape,query,builder,builder,geo,shape,query,name,shape,builder,relation,shape,relation,intersects,return,builder
QueryBuilders -> public static FunctionScoreQueryBuilder functionScoreQuery(FunctionScoreQueryBuilder.FilterFunctionBuilder[] filterFunctionBuilders);1524684173;A query that allows to define a custom scoring function__@param filterFunctionBuilders the filters and functions to execute_@return the function score query;public static FunctionScoreQueryBuilder functionScoreQuery(FunctionScoreQueryBuilder.FilterFunctionBuilder[] filterFunctionBuilders) {_        return new FunctionScoreQueryBuilder(filterFunctionBuilders)__    };a,query,that,allows,to,define,a,custom,scoring,function,param,filter,function,builders,the,filters,and,functions,to,execute,return,the,function,score,query;public,static,function,score,query,builder,function,score,query,function,score,query,builder,filter,function,builder,filter,function,builders,return,new,function,score,query,builder,filter,function,builders
QueryBuilders -> public static FunctionScoreQueryBuilder functionScoreQuery(FunctionScoreQueryBuilder.FilterFunctionBuilder[] filterFunctionBuilders);1525334055;A query that allows to define a custom scoring function__@param filterFunctionBuilders the filters and functions to execute_@return the function score query;public static FunctionScoreQueryBuilder functionScoreQuery(FunctionScoreQueryBuilder.FilterFunctionBuilder[] filterFunctionBuilders) {_        return new FunctionScoreQueryBuilder(filterFunctionBuilders)__    };a,query,that,allows,to,define,a,custom,scoring,function,param,filter,function,builders,the,filters,and,functions,to,execute,return,the,function,score,query;public,static,function,score,query,builder,function,score,query,function,score,query,builder,filter,function,builder,filter,function,builders,return,new,function,score,query,builder,filter,function,builders
QueryBuilders -> public static FunctionScoreQueryBuilder functionScoreQuery(FunctionScoreQueryBuilder.FilterFunctionBuilder[] filterFunctionBuilders);1542697754;A query that allows to define a custom scoring function__@param filterFunctionBuilders the filters and functions to execute_@return the function score query;public static FunctionScoreQueryBuilder functionScoreQuery(FunctionScoreQueryBuilder.FilterFunctionBuilder[] filterFunctionBuilders) {_        return new FunctionScoreQueryBuilder(filterFunctionBuilders)__    };a,query,that,allows,to,define,a,custom,scoring,function,param,filter,function,builders,the,filters,and,functions,to,execute,return,the,function,score,query;public,static,function,score,query,builder,function,score,query,function,score,query,builder,filter,function,builder,filter,function,builders,return,new,function,score,query,builder,filter,function,builders
QueryBuilders -> public static FunctionScoreQueryBuilder functionScoreQuery(FunctionScoreQueryBuilder.FilterFunctionBuilder[] filterFunctionBuilders);1542748206;A query that allows to define a custom scoring function__@param filterFunctionBuilders the filters and functions to execute_@return the function score query;public static FunctionScoreQueryBuilder functionScoreQuery(FunctionScoreQueryBuilder.FilterFunctionBuilder[] filterFunctionBuilders) {_        return new FunctionScoreQueryBuilder(filterFunctionBuilders)__    };a,query,that,allows,to,define,a,custom,scoring,function,param,filter,function,builders,the,filters,and,functions,to,execute,return,the,function,score,query;public,static,function,score,query,builder,function,score,query,function,score,query,builder,filter,function,builder,filter,function,builders,return,new,function,score,query,builder,filter,function,builders
QueryBuilders -> public static FunctionScoreQueryBuilder functionScoreQuery(FunctionScoreQueryBuilder.FilterFunctionBuilder[] filterFunctionBuilders);1547002001;A query that allows to define a custom scoring function__@param filterFunctionBuilders the filters and functions to execute_@return the function score query;public static FunctionScoreQueryBuilder functionScoreQuery(FunctionScoreQueryBuilder.FilterFunctionBuilder[] filterFunctionBuilders) {_        return new FunctionScoreQueryBuilder(filterFunctionBuilders)__    };a,query,that,allows,to,define,a,custom,scoring,function,param,filter,function,builders,the,filters,and,functions,to,execute,return,the,function,score,query;public,static,function,score,query,builder,function,score,query,function,score,query,builder,filter,function,builder,filter,function,builders,return,new,function,score,query,builder,filter,function,builders
QueryBuilders -> public static TermsQueryBuilder termsQuery(String name, double... values);1524684173;A filer for a field based on several terms matching on any of them.__@param name   The field name_@param values The terms;public static TermsQueryBuilder termsQuery(String name, double... values) {_        return new TermsQueryBuilder(name, values)__    };a,filer,for,a,field,based,on,several,terms,matching,on,any,of,them,param,name,the,field,name,param,values,the,terms;public,static,terms,query,builder,terms,query,string,name,double,values,return,new,terms,query,builder,name,values
QueryBuilders -> public static TermsQueryBuilder termsQuery(String name, double... values);1525334055;A filer for a field based on several terms matching on any of them.__@param name   The field name_@param values The terms;public static TermsQueryBuilder termsQuery(String name, double... values) {_        return new TermsQueryBuilder(name, values)__    };a,filer,for,a,field,based,on,several,terms,matching,on,any,of,them,param,name,the,field,name,param,values,the,terms;public,static,terms,query,builder,terms,query,string,name,double,values,return,new,terms,query,builder,name,values
QueryBuilders -> public static TermsQueryBuilder termsQuery(String name, double... values);1542697754;A filer for a field based on several terms matching on any of them.__@param name   The field name_@param values The terms;public static TermsQueryBuilder termsQuery(String name, double... values) {_        return new TermsQueryBuilder(name, values)__    };a,filer,for,a,field,based,on,several,terms,matching,on,any,of,them,param,name,the,field,name,param,values,the,terms;public,static,terms,query,builder,terms,query,string,name,double,values,return,new,terms,query,builder,name,values
QueryBuilders -> public static TermsQueryBuilder termsQuery(String name, double... values);1542748206;A filer for a field based on several terms matching on any of them.__@param name   The field name_@param values The terms;public static TermsQueryBuilder termsQuery(String name, double... values) {_        return new TermsQueryBuilder(name, values)__    };a,filer,for,a,field,based,on,several,terms,matching,on,any,of,them,param,name,the,field,name,param,values,the,terms;public,static,terms,query,builder,terms,query,string,name,double,values,return,new,terms,query,builder,name,values
QueryBuilders -> public static TermsQueryBuilder termsQuery(String name, double... values);1547002001;A filer for a field based on several terms matching on any of them.__@param name   The field name_@param values The terms;public static TermsQueryBuilder termsQuery(String name, double... values) {_        return new TermsQueryBuilder(name, values)__    };a,filer,for,a,field,based,on,several,terms,matching,on,any,of,them,param,name,the,field,name,param,values,the,terms;public,static,terms,query,builder,terms,query,string,name,double,values,return,new,terms,query,builder,name,values
QueryBuilders -> public static GeoShapeQueryBuilder geoWithinQuery(String name, ShapeBuilder shape) throws IOException;1524684173;A filter to filter indexed shapes that are contained by a shape__@param name  The shape field name_@param shape Shape to use in the filter;public static GeoShapeQueryBuilder geoWithinQuery(String name, ShapeBuilder shape) throws IOException {_        GeoShapeQueryBuilder builder = geoShapeQuery(name, shape)__        builder.relation(ShapeRelation.WITHIN)__        return builder__    };a,filter,to,filter,indexed,shapes,that,are,contained,by,a,shape,param,name,the,shape,field,name,param,shape,shape,to,use,in,the,filter;public,static,geo,shape,query,builder,geo,within,query,string,name,shape,builder,shape,throws,ioexception,geo,shape,query,builder,builder,geo,shape,query,name,shape,builder,relation,shape,relation,within,return,builder
QueryBuilders -> public static GeoShapeQueryBuilder geoWithinQuery(String name, ShapeBuilder shape) throws IOException;1525334055;A filter to filter indexed shapes that are contained by a shape__@param name  The shape field name_@param shape Shape to use in the filter;public static GeoShapeQueryBuilder geoWithinQuery(String name, ShapeBuilder shape) throws IOException {_        GeoShapeQueryBuilder builder = geoShapeQuery(name, shape)__        builder.relation(ShapeRelation.WITHIN)__        return builder__    };a,filter,to,filter,indexed,shapes,that,are,contained,by,a,shape,param,name,the,shape,field,name,param,shape,shape,to,use,in,the,filter;public,static,geo,shape,query,builder,geo,within,query,string,name,shape,builder,shape,throws,ioexception,geo,shape,query,builder,builder,geo,shape,query,name,shape,builder,relation,shape,relation,within,return,builder
QueryBuilders -> public static GeoShapeQueryBuilder geoWithinQuery(String name, ShapeBuilder shape) throws IOException;1542697754;A filter to filter indexed shapes that are contained by a shape__@param name  The shape field name_@param shape Shape to use in the filter;public static GeoShapeQueryBuilder geoWithinQuery(String name, ShapeBuilder shape) throws IOException {_        GeoShapeQueryBuilder builder = geoShapeQuery(name, shape)__        builder.relation(ShapeRelation.WITHIN)__        return builder__    };a,filter,to,filter,indexed,shapes,that,are,contained,by,a,shape,param,name,the,shape,field,name,param,shape,shape,to,use,in,the,filter;public,static,geo,shape,query,builder,geo,within,query,string,name,shape,builder,shape,throws,ioexception,geo,shape,query,builder,builder,geo,shape,query,name,shape,builder,relation,shape,relation,within,return,builder
QueryBuilders -> public static GeoShapeQueryBuilder geoWithinQuery(String name, ShapeBuilder shape) throws IOException;1542748206;A filter to filter indexed shapes that are contained by a shape__@param name  The shape field name_@param shape Shape to use in the filter;public static GeoShapeQueryBuilder geoWithinQuery(String name, ShapeBuilder shape) throws IOException {_        GeoShapeQueryBuilder builder = geoShapeQuery(name, shape)__        builder.relation(ShapeRelation.WITHIN)__        return builder__    };a,filter,to,filter,indexed,shapes,that,are,contained,by,a,shape,param,name,the,shape,field,name,param,shape,shape,to,use,in,the,filter;public,static,geo,shape,query,builder,geo,within,query,string,name,shape,builder,shape,throws,ioexception,geo,shape,query,builder,builder,geo,shape,query,name,shape,builder,relation,shape,relation,within,return,builder
QueryBuilders -> public static GeoShapeQueryBuilder geoWithinQuery(String name, ShapeBuilder shape) throws IOException;1547002001;A filter to filter indexed shapes that are contained by a shape__@param name  The shape field name_@param shape Shape to use in the filter;public static GeoShapeQueryBuilder geoWithinQuery(String name, ShapeBuilder shape) throws IOException {_        GeoShapeQueryBuilder builder = geoShapeQuery(name, shape)__        builder.relation(ShapeRelation.WITHIN)__        return builder__    };a,filter,to,filter,indexed,shapes,that,are,contained,by,a,shape,param,name,the,shape,field,name,param,shape,shape,to,use,in,the,filter;public,static,geo,shape,query,builder,geo,within,query,string,name,shape,builder,shape,throws,ioexception,geo,shape,query,builder,builder,geo,shape,query,name,shape,builder,relation,shape,relation,within,return,builder
QueryBuilders -> public static MoreLikeThisQueryBuilder moreLikeThisQuery(String[] likeTexts);1524684173;A more like this query that finds documents that are "like" the provided texts_which is checked against the "_all" field._@param likeTexts the text to use when generating the 'More Like This' query.;public static MoreLikeThisQueryBuilder moreLikeThisQuery(String[] likeTexts) {_        return moreLikeThisQuery(null, likeTexts, null)__    };a,more,like,this,query,that,finds,documents,that,are,like,the,provided,texts,which,is,checked,against,the,field,param,like,texts,the,text,to,use,when,generating,the,more,like,this,query;public,static,more,like,this,query,builder,more,like,this,query,string,like,texts,return,more,like,this,query,null,like,texts,null
QueryBuilders -> public static MoreLikeThisQueryBuilder moreLikeThisQuery(String[] likeTexts);1525334055;A more like this query that finds documents that are "like" the provided texts_which is checked against the "_all" field._@param likeTexts the text to use when generating the 'More Like This' query.;public static MoreLikeThisQueryBuilder moreLikeThisQuery(String[] likeTexts) {_        return moreLikeThisQuery(null, likeTexts, null)__    };a,more,like,this,query,that,finds,documents,that,are,like,the,provided,texts,which,is,checked,against,the,field,param,like,texts,the,text,to,use,when,generating,the,more,like,this,query;public,static,more,like,this,query,builder,more,like,this,query,string,like,texts,return,more,like,this,query,null,like,texts,null
QueryBuilders -> public static MoreLikeThisQueryBuilder moreLikeThisQuery(String[] likeTexts);1542697754;A more like this query that finds documents that are "like" the provided texts_which is checked against the "_all" field._@param likeTexts the text to use when generating the 'More Like This' query.;public static MoreLikeThisQueryBuilder moreLikeThisQuery(String[] likeTexts) {_        return moreLikeThisQuery(null, likeTexts, null)__    };a,more,like,this,query,that,finds,documents,that,are,like,the,provided,texts,which,is,checked,against,the,field,param,like,texts,the,text,to,use,when,generating,the,more,like,this,query;public,static,more,like,this,query,builder,more,like,this,query,string,like,texts,return,more,like,this,query,null,like,texts,null
QueryBuilders -> public static MoreLikeThisQueryBuilder moreLikeThisQuery(String[] likeTexts);1542748206;A more like this query that finds documents that are "like" the provided texts_which is checked against the "_all" field._@param likeTexts the text to use when generating the 'More Like This' query.;public static MoreLikeThisQueryBuilder moreLikeThisQuery(String[] likeTexts) {_        return moreLikeThisQuery(null, likeTexts, null)__    };a,more,like,this,query,that,finds,documents,that,are,like,the,provided,texts,which,is,checked,against,the,field,param,like,texts,the,text,to,use,when,generating,the,more,like,this,query;public,static,more,like,this,query,builder,more,like,this,query,string,like,texts,return,more,like,this,query,null,like,texts,null
QueryBuilders -> public static MoreLikeThisQueryBuilder moreLikeThisQuery(String[] likeTexts);1547002001;A more like this query that finds documents that are "like" the provided texts_which is checked against the "_all" field._@param likeTexts the text to use when generating the 'More Like This' query.;public static MoreLikeThisQueryBuilder moreLikeThisQuery(String[] likeTexts) {_        return moreLikeThisQuery(null, likeTexts, null)__    };a,more,like,this,query,that,finds,documents,that,are,like,the,provided,texts,which,is,checked,against,the,field,param,like,texts,the,text,to,use,when,generating,the,more,like,this,query;public,static,more,like,this,query,builder,more,like,this,query,string,like,texts,return,more,like,this,query,null,like,texts,null
QueryBuilders -> public static RangeQueryBuilder rangeQuery(String name);1524684173;A Query that matches documents within an range of terms.__@param name The field name;public static RangeQueryBuilder rangeQuery(String name) {_        return new RangeQueryBuilder(name)__    };a,query,that,matches,documents,within,an,range,of,terms,param,name,the,field,name;public,static,range,query,builder,range,query,string,name,return,new,range,query,builder,name
QueryBuilders -> public static RangeQueryBuilder rangeQuery(String name);1525334055;A Query that matches documents within an range of terms.__@param name The field name;public static RangeQueryBuilder rangeQuery(String name) {_        return new RangeQueryBuilder(name)__    };a,query,that,matches,documents,within,an,range,of,terms,param,name,the,field,name;public,static,range,query,builder,range,query,string,name,return,new,range,query,builder,name
QueryBuilders -> public static RangeQueryBuilder rangeQuery(String name);1542697754;A Query that matches documents within an range of terms.__@param name The field name;public static RangeQueryBuilder rangeQuery(String name) {_        return new RangeQueryBuilder(name)__    };a,query,that,matches,documents,within,an,range,of,terms,param,name,the,field,name;public,static,range,query,builder,range,query,string,name,return,new,range,query,builder,name
QueryBuilders -> public static RangeQueryBuilder rangeQuery(String name);1542748206;A Query that matches documents within an range of terms.__@param name The field name;public static RangeQueryBuilder rangeQuery(String name) {_        return new RangeQueryBuilder(name)__    };a,query,that,matches,documents,within,an,range,of,terms,param,name,the,field,name;public,static,range,query,builder,range,query,string,name,return,new,range,query,builder,name
QueryBuilders -> public static RangeQueryBuilder rangeQuery(String name);1547002001;A Query that matches documents within an range of terms.__@param name The field name;public static RangeQueryBuilder rangeQuery(String name) {_        return new RangeQueryBuilder(name)__    };a,query,that,matches,documents,within,an,range,of,terms,param,name,the,field,name;public,static,range,query,builder,range,query,string,name,return,new,range,query,builder,name
QueryBuilders -> public static TermQueryBuilder termQuery(String name, int value);1524684173;A Query that matches documents containing a term.__@param name  The name of the field_@param value The value of the term;public static TermQueryBuilder termQuery(String name, int value) {_        return new TermQueryBuilder(name, value)__    };a,query,that,matches,documents,containing,a,term,param,name,the,name,of,the,field,param,value,the,value,of,the,term;public,static,term,query,builder,term,query,string,name,int,value,return,new,term,query,builder,name,value
QueryBuilders -> public static TermQueryBuilder termQuery(String name, int value);1525334055;A Query that matches documents containing a term.__@param name  The name of the field_@param value The value of the term;public static TermQueryBuilder termQuery(String name, int value) {_        return new TermQueryBuilder(name, value)__    };a,query,that,matches,documents,containing,a,term,param,name,the,name,of,the,field,param,value,the,value,of,the,term;public,static,term,query,builder,term,query,string,name,int,value,return,new,term,query,builder,name,value
QueryBuilders -> public static TermQueryBuilder termQuery(String name, int value);1542697754;A Query that matches documents containing a term.__@param name  The name of the field_@param value The value of the term;public static TermQueryBuilder termQuery(String name, int value) {_        return new TermQueryBuilder(name, value)__    };a,query,that,matches,documents,containing,a,term,param,name,the,name,of,the,field,param,value,the,value,of,the,term;public,static,term,query,builder,term,query,string,name,int,value,return,new,term,query,builder,name,value
QueryBuilders -> public static TermQueryBuilder termQuery(String name, int value);1542748206;A Query that matches documents containing a term.__@param name  The name of the field_@param value The value of the term;public static TermQueryBuilder termQuery(String name, int value) {_        return new TermQueryBuilder(name, value)__    };a,query,that,matches,documents,containing,a,term,param,name,the,name,of,the,field,param,value,the,value,of,the,term;public,static,term,query,builder,term,query,string,name,int,value,return,new,term,query,builder,name,value
QueryBuilders -> public static TermQueryBuilder termQuery(String name, int value);1547002001;A Query that matches documents containing a term.__@param name  The name of the field_@param value The value of the term;public static TermQueryBuilder termQuery(String name, int value) {_        return new TermQueryBuilder(name, value)__    };a,query,that,matches,documents,containing,a,term,param,name,the,name,of,the,field,param,value,the,value,of,the,term;public,static,term,query,builder,term,query,string,name,int,value,return,new,term,query,builder,name,value
QueryBuilders -> public static WrapperQueryBuilder wrapperQuery(BytesReference source);1524684173;A Query builder which allows building a query thanks to a JSON string or binary data.;public static WrapperQueryBuilder wrapperQuery(BytesReference source) {_        return new WrapperQueryBuilder(source)__    };a,query,builder,which,allows,building,a,query,thanks,to,a,json,string,or,binary,data;public,static,wrapper,query,builder,wrapper,query,bytes,reference,source,return,new,wrapper,query,builder,source
QueryBuilders -> public static WrapperQueryBuilder wrapperQuery(BytesReference source);1525334055;A Query builder which allows building a query thanks to a JSON string or binary data.;public static WrapperQueryBuilder wrapperQuery(BytesReference source) {_        return new WrapperQueryBuilder(source)__    };a,query,builder,which,allows,building,a,query,thanks,to,a,json,string,or,binary,data;public,static,wrapper,query,builder,wrapper,query,bytes,reference,source,return,new,wrapper,query,builder,source
QueryBuilders -> public static WrapperQueryBuilder wrapperQuery(BytesReference source);1542697754;A Query builder which allows building a query thanks to a JSON string or binary data.;public static WrapperQueryBuilder wrapperQuery(BytesReference source) {_        return new WrapperQueryBuilder(source)__    };a,query,builder,which,allows,building,a,query,thanks,to,a,json,string,or,binary,data;public,static,wrapper,query,builder,wrapper,query,bytes,reference,source,return,new,wrapper,query,builder,source
QueryBuilders -> public static WrapperQueryBuilder wrapperQuery(BytesReference source);1542748206;A Query builder which allows building a query thanks to a JSON string or binary data.;public static WrapperQueryBuilder wrapperQuery(BytesReference source) {_        return new WrapperQueryBuilder(source)__    };a,query,builder,which,allows,building,a,query,thanks,to,a,json,string,or,binary,data;public,static,wrapper,query,builder,wrapper,query,bytes,reference,source,return,new,wrapper,query,builder,source
QueryBuilders -> public static WrapperQueryBuilder wrapperQuery(BytesReference source);1547002001;A Query builder which allows building a query thanks to a JSON string or binary data.;public static WrapperQueryBuilder wrapperQuery(BytesReference source) {_        return new WrapperQueryBuilder(source)__    };a,query,builder,which,allows,building,a,query,thanks,to,a,json,string,or,binary,data;public,static,wrapper,query,builder,wrapper,query,bytes,reference,source,return,new,wrapper,query,builder,source
QueryBuilders -> public static TermsQueryBuilder termsQuery(String name, String... values);1524684173;A filer for a field based on several terms matching on any of them.__@param name   The field name_@param values The terms;public static TermsQueryBuilder termsQuery(String name, String... values) {_        return new TermsQueryBuilder(name, values)__    };a,filer,for,a,field,based,on,several,terms,matching,on,any,of,them,param,name,the,field,name,param,values,the,terms;public,static,terms,query,builder,terms,query,string,name,string,values,return,new,terms,query,builder,name,values
QueryBuilders -> public static TermsQueryBuilder termsQuery(String name, String... values);1525334055;A filer for a field based on several terms matching on any of them.__@param name   The field name_@param values The terms;public static TermsQueryBuilder termsQuery(String name, String... values) {_        return new TermsQueryBuilder(name, values)__    };a,filer,for,a,field,based,on,several,terms,matching,on,any,of,them,param,name,the,field,name,param,values,the,terms;public,static,terms,query,builder,terms,query,string,name,string,values,return,new,terms,query,builder,name,values
QueryBuilders -> public static TermsQueryBuilder termsQuery(String name, String... values);1542697754;A filer for a field based on several terms matching on any of them.__@param name   The field name_@param values The terms;public static TermsQueryBuilder termsQuery(String name, String... values) {_        return new TermsQueryBuilder(name, values)__    };a,filer,for,a,field,based,on,several,terms,matching,on,any,of,them,param,name,the,field,name,param,values,the,terms;public,static,terms,query,builder,terms,query,string,name,string,values,return,new,terms,query,builder,name,values
QueryBuilders -> public static TermsQueryBuilder termsQuery(String name, String... values);1542748206;A filer for a field based on several terms matching on any of them.__@param name   The field name_@param values The terms;public static TermsQueryBuilder termsQuery(String name, String... values) {_        return new TermsQueryBuilder(name, values)__    };a,filer,for,a,field,based,on,several,terms,matching,on,any,of,them,param,name,the,field,name,param,values,the,terms;public,static,terms,query,builder,terms,query,string,name,string,values,return,new,terms,query,builder,name,values
QueryBuilders -> public static TermsQueryBuilder termsQuery(String name, String... values);1547002001;A filer for a field based on several terms matching on any of them.__@param name   The field name_@param values The terms;public static TermsQueryBuilder termsQuery(String name, String... values) {_        return new TermsQueryBuilder(name, values)__    };a,filer,for,a,field,based,on,several,terms,matching,on,any,of,them,param,name,the,field,name,param,values,the,terms;public,static,terms,query,builder,terms,query,string,name,string,values,return,new,terms,query,builder,name,values
QueryBuilders -> public static ScriptScoreQueryBuilder scriptScoreQuery(QueryBuilder queryBuilder, ScriptScoreFunctionBuilder function);1542748206;A query that allows to define a custom scoring function through script.__@param queryBuilder The query to custom score_@param function     The script score function builder used to custom score;public static ScriptScoreQueryBuilder scriptScoreQuery(QueryBuilder queryBuilder, ScriptScoreFunctionBuilder function) {_        return new ScriptScoreQueryBuilder(queryBuilder, function)__    };a,query,that,allows,to,define,a,custom,scoring,function,through,script,param,query,builder,the,query,to,custom,score,param,function,the,script,score,function,builder,used,to,custom,score;public,static,script,score,query,builder,script,score,query,query,builder,query,builder,script,score,function,builder,function,return,new,script,score,query,builder,query,builder,function
QueryBuilders -> public static ScriptScoreQueryBuilder scriptScoreQuery(QueryBuilder queryBuilder, ScriptScoreFunctionBuilder function);1547002001;A query that allows to define a custom scoring function through script.__@param queryBuilder The query to custom score_@param function     The script score function builder used to custom score;public static ScriptScoreQueryBuilder scriptScoreQuery(QueryBuilder queryBuilder, ScriptScoreFunctionBuilder function) {_        return new ScriptScoreQueryBuilder(queryBuilder, function)__    };a,query,that,allows,to,define,a,custom,scoring,function,through,script,param,query,builder,the,query,to,custom,score,param,function,the,script,score,function,builder,used,to,custom,score;public,static,script,score,query,builder,script,score,query,query,builder,query,builder,script,score,function,builder,function,return,new,script,score,query,builder,query,builder,function
QueryBuilders -> public static GeoDistanceQueryBuilder geoDistanceQuery(String name);1524684173;A filter to filter based on a specific distance from a specific geo location / point.__@param name The location field name.;public static GeoDistanceQueryBuilder geoDistanceQuery(String name) {_        return new GeoDistanceQueryBuilder(name)__    };a,filter,to,filter,based,on,a,specific,distance,from,a,specific,geo,location,point,param,name,the,location,field,name;public,static,geo,distance,query,builder,geo,distance,query,string,name,return,new,geo,distance,query,builder,name
QueryBuilders -> public static GeoDistanceQueryBuilder geoDistanceQuery(String name);1525334055;A filter to filter based on a specific distance from a specific geo location / point.__@param name The location field name.;public static GeoDistanceQueryBuilder geoDistanceQuery(String name) {_        return new GeoDistanceQueryBuilder(name)__    };a,filter,to,filter,based,on,a,specific,distance,from,a,specific,geo,location,point,param,name,the,location,field,name;public,static,geo,distance,query,builder,geo,distance,query,string,name,return,new,geo,distance,query,builder,name
QueryBuilders -> public static GeoDistanceQueryBuilder geoDistanceQuery(String name);1542697754;A filter to filter based on a specific distance from a specific geo location / point.__@param name The location field name.;public static GeoDistanceQueryBuilder geoDistanceQuery(String name) {_        return new GeoDistanceQueryBuilder(name)__    };a,filter,to,filter,based,on,a,specific,distance,from,a,specific,geo,location,point,param,name,the,location,field,name;public,static,geo,distance,query,builder,geo,distance,query,string,name,return,new,geo,distance,query,builder,name
QueryBuilders -> public static GeoDistanceQueryBuilder geoDistanceQuery(String name);1542748206;A filter to filter based on a specific distance from a specific geo location / point.__@param name The location field name.;public static GeoDistanceQueryBuilder geoDistanceQuery(String name) {_        return new GeoDistanceQueryBuilder(name)__    };a,filter,to,filter,based,on,a,specific,distance,from,a,specific,geo,location,point,param,name,the,location,field,name;public,static,geo,distance,query,builder,geo,distance,query,string,name,return,new,geo,distance,query,builder,name
QueryBuilders -> public static GeoDistanceQueryBuilder geoDistanceQuery(String name);1547002001;A filter to filter based on a specific distance from a specific geo location / point.__@param name The location field name.;public static GeoDistanceQueryBuilder geoDistanceQuery(String name) {_        return new GeoDistanceQueryBuilder(name)__    };a,filter,to,filter,based,on,a,specific,distance,from,a,specific,geo,location,point,param,name,the,location,field,name;public,static,geo,distance,query,builder,geo,distance,query,string,name,return,new,geo,distance,query,builder,name
QueryBuilders -> public static TermQueryBuilder termQuery(String name, boolean value);1524684173;A Query that matches documents containing a term.__@param name  The name of the field_@param value The value of the term;public static TermQueryBuilder termQuery(String name, boolean value) {_        return new TermQueryBuilder(name, value)__    };a,query,that,matches,documents,containing,a,term,param,name,the,name,of,the,field,param,value,the,value,of,the,term;public,static,term,query,builder,term,query,string,name,boolean,value,return,new,term,query,builder,name,value
QueryBuilders -> public static TermQueryBuilder termQuery(String name, boolean value);1525334055;A Query that matches documents containing a term.__@param name  The name of the field_@param value The value of the term;public static TermQueryBuilder termQuery(String name, boolean value) {_        return new TermQueryBuilder(name, value)__    };a,query,that,matches,documents,containing,a,term,param,name,the,name,of,the,field,param,value,the,value,of,the,term;public,static,term,query,builder,term,query,string,name,boolean,value,return,new,term,query,builder,name,value
QueryBuilders -> public static TermQueryBuilder termQuery(String name, boolean value);1542697754;A Query that matches documents containing a term.__@param name  The name of the field_@param value The value of the term;public static TermQueryBuilder termQuery(String name, boolean value) {_        return new TermQueryBuilder(name, value)__    };a,query,that,matches,documents,containing,a,term,param,name,the,name,of,the,field,param,value,the,value,of,the,term;public,static,term,query,builder,term,query,string,name,boolean,value,return,new,term,query,builder,name,value
QueryBuilders -> public static TermQueryBuilder termQuery(String name, boolean value);1542748206;A Query that matches documents containing a term.__@param name  The name of the field_@param value The value of the term;public static TermQueryBuilder termQuery(String name, boolean value) {_        return new TermQueryBuilder(name, value)__    };a,query,that,matches,documents,containing,a,term,param,name,the,name,of,the,field,param,value,the,value,of,the,term;public,static,term,query,builder,term,query,string,name,boolean,value,return,new,term,query,builder,name,value
QueryBuilders -> public static TermQueryBuilder termQuery(String name, boolean value);1547002001;A Query that matches documents containing a term.__@param name  The name of the field_@param value The value of the term;public static TermQueryBuilder termQuery(String name, boolean value) {_        return new TermQueryBuilder(name, value)__    };a,query,that,matches,documents,containing,a,term,param,name,the,name,of,the,field,param,value,the,value,of,the,term;public,static,term,query,builder,term,query,string,name,boolean,value,return,new,term,query,builder,name,value
QueryBuilders -> public static FuzzyQueryBuilder fuzzyQuery(String name, String value);1524684173;A Query that matches documents using fuzzy query.__@param name  The name of the field_@param value The value of the term__@see #matchQuery(String, Object)_@see #rangeQuery(String);public static FuzzyQueryBuilder fuzzyQuery(String name, String value) {_        return new FuzzyQueryBuilder(name, value)__    };a,query,that,matches,documents,using,fuzzy,query,param,name,the,name,of,the,field,param,value,the,value,of,the,term,see,match,query,string,object,see,range,query,string;public,static,fuzzy,query,builder,fuzzy,query,string,name,string,value,return,new,fuzzy,query,builder,name,value
QueryBuilders -> public static FuzzyQueryBuilder fuzzyQuery(String name, String value);1525334055;A Query that matches documents using fuzzy query.__@param name  The name of the field_@param value The value of the term__@see #matchQuery(String, Object)_@see #rangeQuery(String);public static FuzzyQueryBuilder fuzzyQuery(String name, String value) {_        return new FuzzyQueryBuilder(name, value)__    };a,query,that,matches,documents,using,fuzzy,query,param,name,the,name,of,the,field,param,value,the,value,of,the,term,see,match,query,string,object,see,range,query,string;public,static,fuzzy,query,builder,fuzzy,query,string,name,string,value,return,new,fuzzy,query,builder,name,value
QueryBuilders -> public static FuzzyQueryBuilder fuzzyQuery(String name, String value);1542697754;A Query that matches documents using fuzzy query.__@param name  The name of the field_@param value The value of the term__@see #matchQuery(String, Object)_@see #rangeQuery(String);public static FuzzyQueryBuilder fuzzyQuery(String name, String value) {_        return new FuzzyQueryBuilder(name, value)__    };a,query,that,matches,documents,using,fuzzy,query,param,name,the,name,of,the,field,param,value,the,value,of,the,term,see,match,query,string,object,see,range,query,string;public,static,fuzzy,query,builder,fuzzy,query,string,name,string,value,return,new,fuzzy,query,builder,name,value
QueryBuilders -> public static FuzzyQueryBuilder fuzzyQuery(String name, String value);1542748206;A Query that matches documents using fuzzy query.__@param name  The name of the field_@param value The value of the term__@see #matchQuery(String, Object)_@see #rangeQuery(String);public static FuzzyQueryBuilder fuzzyQuery(String name, String value) {_        return new FuzzyQueryBuilder(name, value)__    };a,query,that,matches,documents,using,fuzzy,query,param,name,the,name,of,the,field,param,value,the,value,of,the,term,see,match,query,string,object,see,range,query,string;public,static,fuzzy,query,builder,fuzzy,query,string,name,string,value,return,new,fuzzy,query,builder,name,value
QueryBuilders -> public static FuzzyQueryBuilder fuzzyQuery(String name, String value);1547002001;A Query that matches documents using fuzzy query.__@param name  The name of the field_@param value The value of the term__@see #matchQuery(String, Object)_@see #rangeQuery(String);public static FuzzyQueryBuilder fuzzyQuery(String name, String value) {_        return new FuzzyQueryBuilder(name, value)__    };a,query,that,matches,documents,using,fuzzy,query,param,name,the,name,of,the,field,param,value,the,value,of,the,term,see,match,query,string,object,see,range,query,string;public,static,fuzzy,query,builder,fuzzy,query,string,name,string,value,return,new,fuzzy,query,builder,name,value
QueryBuilders -> public static QueryStringQueryBuilder queryStringQuery(String queryString);1524684173;A query that parses a query string and runs it. There are two modes that this operates. The first,_when no field is added (using {@link QueryStringQueryBuilder#field(String)}, will run the query once and non prefixed fields_will use the {@link QueryStringQueryBuilder#defaultField(String)} set. The second, when one or more fields are added_(using {@link QueryStringQueryBuilder#field(String)}), will run the parsed query against the provided fields, and combine_them either using Dismax.__@param queryString The query string to run;public static QueryStringQueryBuilder queryStringQuery(String queryString) {_        return new QueryStringQueryBuilder(queryString)__    };a,query,that,parses,a,query,string,and,runs,it,there,are,two,modes,that,this,operates,the,first,when,no,field,is,added,using,link,query,string,query,builder,field,string,will,run,the,query,once,and,non,prefixed,fields,will,use,the,link,query,string,query,builder,default,field,string,set,the,second,when,one,or,more,fields,are,added,using,link,query,string,query,builder,field,string,will,run,the,parsed,query,against,the,provided,fields,and,combine,them,either,using,dismax,param,query,string,the,query,string,to,run;public,static,query,string,query,builder,query,string,query,string,query,string,return,new,query,string,query,builder,query,string
QueryBuilders -> public static QueryStringQueryBuilder queryStringQuery(String queryString);1525334055;A query that parses a query string and runs it. There are two modes that this operates. The first,_when no field is added (using {@link QueryStringQueryBuilder#field(String)}, will run the query once and non prefixed fields_will use the {@link QueryStringQueryBuilder#defaultField(String)} set. The second, when one or more fields are added_(using {@link QueryStringQueryBuilder#field(String)}), will run the parsed query against the provided fields, and combine_them either using Dismax.__@param queryString The query string to run;public static QueryStringQueryBuilder queryStringQuery(String queryString) {_        return new QueryStringQueryBuilder(queryString)__    };a,query,that,parses,a,query,string,and,runs,it,there,are,two,modes,that,this,operates,the,first,when,no,field,is,added,using,link,query,string,query,builder,field,string,will,run,the,query,once,and,non,prefixed,fields,will,use,the,link,query,string,query,builder,default,field,string,set,the,second,when,one,or,more,fields,are,added,using,link,query,string,query,builder,field,string,will,run,the,parsed,query,against,the,provided,fields,and,combine,them,either,using,dismax,param,query,string,the,query,string,to,run;public,static,query,string,query,builder,query,string,query,string,query,string,return,new,query,string,query,builder,query,string
QueryBuilders -> public static QueryStringQueryBuilder queryStringQuery(String queryString);1542697754;A query that parses a query string and runs it. There are two modes that this operates. The first,_when no field is added (using {@link QueryStringQueryBuilder#field(String)}, will run the query once and non prefixed fields_will use the {@link QueryStringQueryBuilder#defaultField(String)} set. The second, when one or more fields are added_(using {@link QueryStringQueryBuilder#field(String)}), will run the parsed query against the provided fields, and combine_them either using Dismax.__@param queryString The query string to run;public static QueryStringQueryBuilder queryStringQuery(String queryString) {_        return new QueryStringQueryBuilder(queryString)__    };a,query,that,parses,a,query,string,and,runs,it,there,are,two,modes,that,this,operates,the,first,when,no,field,is,added,using,link,query,string,query,builder,field,string,will,run,the,query,once,and,non,prefixed,fields,will,use,the,link,query,string,query,builder,default,field,string,set,the,second,when,one,or,more,fields,are,added,using,link,query,string,query,builder,field,string,will,run,the,parsed,query,against,the,provided,fields,and,combine,them,either,using,dismax,param,query,string,the,query,string,to,run;public,static,query,string,query,builder,query,string,query,string,query,string,return,new,query,string,query,builder,query,string
QueryBuilders -> public static QueryStringQueryBuilder queryStringQuery(String queryString);1542748206;A query that parses a query string and runs it. There are two modes that this operates. The first,_when no field is added (using {@link QueryStringQueryBuilder#field(String)}, will run the query once and non prefixed fields_will use the {@link QueryStringQueryBuilder#defaultField(String)} set. The second, when one or more fields are added_(using {@link QueryStringQueryBuilder#field(String)}), will run the parsed query against the provided fields, and combine_them either using Dismax.__@param queryString The query string to run;public static QueryStringQueryBuilder queryStringQuery(String queryString) {_        return new QueryStringQueryBuilder(queryString)__    };a,query,that,parses,a,query,string,and,runs,it,there,are,two,modes,that,this,operates,the,first,when,no,field,is,added,using,link,query,string,query,builder,field,string,will,run,the,query,once,and,non,prefixed,fields,will,use,the,link,query,string,query,builder,default,field,string,set,the,second,when,one,or,more,fields,are,added,using,link,query,string,query,builder,field,string,will,run,the,parsed,query,against,the,provided,fields,and,combine,them,either,using,dismax,param,query,string,the,query,string,to,run;public,static,query,string,query,builder,query,string,query,string,query,string,return,new,query,string,query,builder,query,string
QueryBuilders -> public static QueryStringQueryBuilder queryStringQuery(String queryString);1547002001;A query that parses a query string and runs it. There are two modes that this operates. The first,_when no field is added (using {@link QueryStringQueryBuilder#field(String)}, will run the query once and non prefixed fields_will use the {@link QueryStringQueryBuilder#defaultField(String)} set. The second, when one or more fields are added_(using {@link QueryStringQueryBuilder#field(String)}), will run the parsed query against the provided fields, and combine_them either using Dismax.__@param queryString The query string to run;public static QueryStringQueryBuilder queryStringQuery(String queryString) {_        return new QueryStringQueryBuilder(queryString)__    };a,query,that,parses,a,query,string,and,runs,it,there,are,two,modes,that,this,operates,the,first,when,no,field,is,added,using,link,query,string,query,builder,field,string,will,run,the,query,once,and,non,prefixed,fields,will,use,the,link,query,string,query,builder,default,field,string,set,the,second,when,one,or,more,fields,are,added,using,link,query,string,query,builder,field,string,will,run,the,parsed,query,against,the,provided,fields,and,combine,them,either,using,dismax,param,query,string,the,query,string,to,run;public,static,query,string,query,builder,query,string,query,string,query,string,return,new,query,string,query,builder,query,string
QueryBuilders -> public static FunctionScoreQueryBuilder functionScoreQuery(QueryBuilder queryBuilder, FunctionScoreQueryBuilder.FilterFunctionBuilder[] filterFunctionBuilders);1524684173;A query that allows to define a custom scoring function__@param queryBuilder The query to custom score_@param filterFunctionBuilders the filters and functions to execute_@return the function score query;public static FunctionScoreQueryBuilder functionScoreQuery(QueryBuilder queryBuilder, FunctionScoreQueryBuilder.FilterFunctionBuilder[] filterFunctionBuilders) {_        return new FunctionScoreQueryBuilder(queryBuilder, filterFunctionBuilders)__    };a,query,that,allows,to,define,a,custom,scoring,function,param,query,builder,the,query,to,custom,score,param,filter,function,builders,the,filters,and,functions,to,execute,return,the,function,score,query;public,static,function,score,query,builder,function,score,query,query,builder,query,builder,function,score,query,builder,filter,function,builder,filter,function,builders,return,new,function,score,query,builder,query,builder,filter,function,builders
QueryBuilders -> public static FunctionScoreQueryBuilder functionScoreQuery(QueryBuilder queryBuilder, FunctionScoreQueryBuilder.FilterFunctionBuilder[] filterFunctionBuilders);1525334055;A query that allows to define a custom scoring function__@param queryBuilder The query to custom score_@param filterFunctionBuilders the filters and functions to execute_@return the function score query;public static FunctionScoreQueryBuilder functionScoreQuery(QueryBuilder queryBuilder, FunctionScoreQueryBuilder.FilterFunctionBuilder[] filterFunctionBuilders) {_        return new FunctionScoreQueryBuilder(queryBuilder, filterFunctionBuilders)__    };a,query,that,allows,to,define,a,custom,scoring,function,param,query,builder,the,query,to,custom,score,param,filter,function,builders,the,filters,and,functions,to,execute,return,the,function,score,query;public,static,function,score,query,builder,function,score,query,query,builder,query,builder,function,score,query,builder,filter,function,builder,filter,function,builders,return,new,function,score,query,builder,query,builder,filter,function,builders
QueryBuilders -> public static GeoShapeQueryBuilder geoDisjointQuery(String name, ShapeBuilder shape) throws IOException;1524684173;A filter to filter indexed shapes that are not intersection with the query shape__@param name  The shape field name_@param shape Shape to use in the filter;public static GeoShapeQueryBuilder geoDisjointQuery(String name, ShapeBuilder shape) throws IOException {_        GeoShapeQueryBuilder builder = geoShapeQuery(name, shape)__        builder.relation(ShapeRelation.DISJOINT)__        return builder__    };a,filter,to,filter,indexed,shapes,that,are,not,intersection,with,the,query,shape,param,name,the,shape,field,name,param,shape,shape,to,use,in,the,filter;public,static,geo,shape,query,builder,geo,disjoint,query,string,name,shape,builder,shape,throws,ioexception,geo,shape,query,builder,builder,geo,shape,query,name,shape,builder,relation,shape,relation,disjoint,return,builder
QueryBuilders -> public static GeoShapeQueryBuilder geoDisjointQuery(String name, ShapeBuilder shape) throws IOException;1525334055;A filter to filter indexed shapes that are not intersection with the query shape__@param name  The shape field name_@param shape Shape to use in the filter;public static GeoShapeQueryBuilder geoDisjointQuery(String name, ShapeBuilder shape) throws IOException {_        GeoShapeQueryBuilder builder = geoShapeQuery(name, shape)__        builder.relation(ShapeRelation.DISJOINT)__        return builder__    };a,filter,to,filter,indexed,shapes,that,are,not,intersection,with,the,query,shape,param,name,the,shape,field,name,param,shape,shape,to,use,in,the,filter;public,static,geo,shape,query,builder,geo,disjoint,query,string,name,shape,builder,shape,throws,ioexception,geo,shape,query,builder,builder,geo,shape,query,name,shape,builder,relation,shape,relation,disjoint,return,builder
QueryBuilders -> public static GeoShapeQueryBuilder geoDisjointQuery(String name, ShapeBuilder shape) throws IOException;1542697754;A filter to filter indexed shapes that are not intersection with the query shape__@param name  The shape field name_@param shape Shape to use in the filter;public static GeoShapeQueryBuilder geoDisjointQuery(String name, ShapeBuilder shape) throws IOException {_        GeoShapeQueryBuilder builder = geoShapeQuery(name, shape)__        builder.relation(ShapeRelation.DISJOINT)__        return builder__    };a,filter,to,filter,indexed,shapes,that,are,not,intersection,with,the,query,shape,param,name,the,shape,field,name,param,shape,shape,to,use,in,the,filter;public,static,geo,shape,query,builder,geo,disjoint,query,string,name,shape,builder,shape,throws,ioexception,geo,shape,query,builder,builder,geo,shape,query,name,shape,builder,relation,shape,relation,disjoint,return,builder
QueryBuilders -> public static GeoShapeQueryBuilder geoDisjointQuery(String name, ShapeBuilder shape) throws IOException;1542748206;A filter to filter indexed shapes that are not intersection with the query shape__@param name  The shape field name_@param shape Shape to use in the filter;public static GeoShapeQueryBuilder geoDisjointQuery(String name, ShapeBuilder shape) throws IOException {_        GeoShapeQueryBuilder builder = geoShapeQuery(name, shape)__        builder.relation(ShapeRelation.DISJOINT)__        return builder__    };a,filter,to,filter,indexed,shapes,that,are,not,intersection,with,the,query,shape,param,name,the,shape,field,name,param,shape,shape,to,use,in,the,filter;public,static,geo,shape,query,builder,geo,disjoint,query,string,name,shape,builder,shape,throws,ioexception,geo,shape,query,builder,builder,geo,shape,query,name,shape,builder,relation,shape,relation,disjoint,return,builder
QueryBuilders -> public static GeoShapeQueryBuilder geoDisjointQuery(String name, ShapeBuilder shape) throws IOException;1547002001;A filter to filter indexed shapes that are not intersection with the query shape__@param name  The shape field name_@param shape Shape to use in the filter;public static GeoShapeQueryBuilder geoDisjointQuery(String name, ShapeBuilder shape) throws IOException {_        GeoShapeQueryBuilder builder = geoShapeQuery(name, shape)__        builder.relation(ShapeRelation.DISJOINT)__        return builder__    };a,filter,to,filter,indexed,shapes,that,are,not,intersection,with,the,query,shape,param,name,the,shape,field,name,param,shape,shape,to,use,in,the,filter;public,static,geo,shape,query,builder,geo,disjoint,query,string,name,shape,builder,shape,throws,ioexception,geo,shape,query,builder,builder,geo,shape,query,name,shape,builder,relation,shape,relation,disjoint,return,builder
QueryBuilders -> public static CommonTermsQueryBuilder commonTermsQuery(String fieldName, Object text);1524684173;Creates a common query for the provided field name and text.__@param fieldName The field name._@param text The query text (to be analyzed).;public static CommonTermsQueryBuilder commonTermsQuery(String fieldName, Object text) {_        return new CommonTermsQueryBuilder(fieldName, text)__    };creates,a,common,query,for,the,provided,field,name,and,text,param,field,name,the,field,name,param,text,the,query,text,to,be,analyzed;public,static,common,terms,query,builder,common,terms,query,string,field,name,object,text,return,new,common,terms,query,builder,field,name,text
QueryBuilders -> public static CommonTermsQueryBuilder commonTermsQuery(String fieldName, Object text);1525334055;Creates a common query for the provided field name and text.__@param fieldName The field name._@param text The query text (to be analyzed).;public static CommonTermsQueryBuilder commonTermsQuery(String fieldName, Object text) {_        return new CommonTermsQueryBuilder(fieldName, text)__    };creates,a,common,query,for,the,provided,field,name,and,text,param,field,name,the,field,name,param,text,the,query,text,to,be,analyzed;public,static,common,terms,query,builder,common,terms,query,string,field,name,object,text,return,new,common,terms,query,builder,field,name,text
QueryBuilders -> public static CommonTermsQueryBuilder commonTermsQuery(String fieldName, Object text);1542697754;Creates a common query for the provided field name and text.__@param fieldName The field name._@param text The query text (to be analyzed).;public static CommonTermsQueryBuilder commonTermsQuery(String fieldName, Object text) {_        return new CommonTermsQueryBuilder(fieldName, text)__    };creates,a,common,query,for,the,provided,field,name,and,text,param,field,name,the,field,name,param,text,the,query,text,to,be,analyzed;public,static,common,terms,query,builder,common,terms,query,string,field,name,object,text,return,new,common,terms,query,builder,field,name,text
QueryBuilders -> public static CommonTermsQueryBuilder commonTermsQuery(String fieldName, Object text);1542748206;Creates a common query for the provided field name and text.__@param fieldName The field name._@param text The query text (to be analyzed).;public static CommonTermsQueryBuilder commonTermsQuery(String fieldName, Object text) {_        return new CommonTermsQueryBuilder(fieldName, text)__    };creates,a,common,query,for,the,provided,field,name,and,text,param,field,name,the,field,name,param,text,the,query,text,to,be,analyzed;public,static,common,terms,query,builder,common,terms,query,string,field,name,object,text,return,new,common,terms,query,builder,field,name,text
QueryBuilders -> public static CommonTermsQueryBuilder commonTermsQuery(String fieldName, Object text);1547002001;Creates a common query for the provided field name and text.__@param fieldName The field name._@param text The query text (to be analyzed).;public static CommonTermsQueryBuilder commonTermsQuery(String fieldName, Object text) {_        return new CommonTermsQueryBuilder(fieldName, text)__    };creates,a,common,query,for,the,provided,field,name,and,text,param,field,name,the,field,name,param,text,the,query,text,to,be,analyzed;public,static,common,terms,query,builder,common,terms,query,string,field,name,object,text,return,new,common,terms,query,builder,field,name,text
QueryBuilders -> public static MatchAllQueryBuilder matchAllQuery();1524684173;A query that matches on all documents.;public static MatchAllQueryBuilder matchAllQuery() {_        return new MatchAllQueryBuilder()__    };a,query,that,matches,on,all,documents;public,static,match,all,query,builder,match,all,query,return,new,match,all,query,builder
QueryBuilders -> public static MatchAllQueryBuilder matchAllQuery();1525334055;A query that matches on all documents.;public static MatchAllQueryBuilder matchAllQuery() {_        return new MatchAllQueryBuilder()__    };a,query,that,matches,on,all,documents;public,static,match,all,query,builder,match,all,query,return,new,match,all,query,builder
QueryBuilders -> public static MatchAllQueryBuilder matchAllQuery();1542697754;A query that matches on all documents.;public static MatchAllQueryBuilder matchAllQuery() {_        return new MatchAllQueryBuilder()__    };a,query,that,matches,on,all,documents;public,static,match,all,query,builder,match,all,query,return,new,match,all,query,builder
QueryBuilders -> public static MatchAllQueryBuilder matchAllQuery();1542748206;A query that matches on all documents.;public static MatchAllQueryBuilder matchAllQuery() {_        return new MatchAllQueryBuilder()__    };a,query,that,matches,on,all,documents;public,static,match,all,query,builder,match,all,query,return,new,match,all,query,builder
QueryBuilders -> public static MatchAllQueryBuilder matchAllQuery();1547002001;A query that matches on all documents.;public static MatchAllQueryBuilder matchAllQuery() {_        return new MatchAllQueryBuilder()__    };a,query,that,matches,on,all,documents;public,static,match,all,query,builder,match,all,query,return,new,match,all,query,builder
QueryBuilders -> public static DisMaxQueryBuilder disMaxQuery();1524684173;A query that generates the union of documents produced by its sub-queries, and that scores each document_with the maximum score for that document as produced by any sub-query, plus a tie breaking increment for any_additional matching sub-queries.;public static DisMaxQueryBuilder disMaxQuery() {_        return new DisMaxQueryBuilder()__    };a,query,that,generates,the,union,of,documents,produced,by,its,sub,queries,and,that,scores,each,document,with,the,maximum,score,for,that,document,as,produced,by,any,sub,query,plus,a,tie,breaking,increment,for,any,additional,matching,sub,queries;public,static,dis,max,query,builder,dis,max,query,return,new,dis,max,query,builder
QueryBuilders -> public static DisMaxQueryBuilder disMaxQuery();1525334055;A query that generates the union of documents produced by its sub-queries, and that scores each document_with the maximum score for that document as produced by any sub-query, plus a tie breaking increment for any_additional matching sub-queries.;public static DisMaxQueryBuilder disMaxQuery() {_        return new DisMaxQueryBuilder()__    };a,query,that,generates,the,union,of,documents,produced,by,its,sub,queries,and,that,scores,each,document,with,the,maximum,score,for,that,document,as,produced,by,any,sub,query,plus,a,tie,breaking,increment,for,any,additional,matching,sub,queries;public,static,dis,max,query,builder,dis,max,query,return,new,dis,max,query,builder
QueryBuilders -> public static DisMaxQueryBuilder disMaxQuery();1542697754;A query that generates the union of documents produced by its sub-queries, and that scores each document_with the maximum score for that document as produced by any sub-query, plus a tie breaking increment for any_additional matching sub-queries.;public static DisMaxQueryBuilder disMaxQuery() {_        return new DisMaxQueryBuilder()__    };a,query,that,generates,the,union,of,documents,produced,by,its,sub,queries,and,that,scores,each,document,with,the,maximum,score,for,that,document,as,produced,by,any,sub,query,plus,a,tie,breaking,increment,for,any,additional,matching,sub,queries;public,static,dis,max,query,builder,dis,max,query,return,new,dis,max,query,builder
QueryBuilders -> public static DisMaxQueryBuilder disMaxQuery();1542748206;A query that generates the union of documents produced by its sub-queries, and that scores each document_with the maximum score for that document as produced by any sub-query, plus a tie breaking increment for any_additional matching sub-queries.;public static DisMaxQueryBuilder disMaxQuery() {_        return new DisMaxQueryBuilder()__    };a,query,that,generates,the,union,of,documents,produced,by,its,sub,queries,and,that,scores,each,document,with,the,maximum,score,for,that,document,as,produced,by,any,sub,query,plus,a,tie,breaking,increment,for,any,additional,matching,sub,queries;public,static,dis,max,query,builder,dis,max,query,return,new,dis,max,query,builder
QueryBuilders -> public static DisMaxQueryBuilder disMaxQuery();1547002001;A query that generates the union of documents produced by its sub-queries, and that scores each document_with the maximum score for that document as produced by any sub-query, plus a tie breaking increment for any_additional matching sub-queries.;public static DisMaxQueryBuilder disMaxQuery() {_        return new DisMaxQueryBuilder()__    };a,query,that,generates,the,union,of,documents,produced,by,its,sub,queries,and,that,scores,each,document,with,the,maximum,score,for,that,document,as,produced,by,any,sub,query,plus,a,tie,breaking,increment,for,any,additional,matching,sub,queries;public,static,dis,max,query,builder,dis,max,query,return,new,dis,max,query,builder
QueryBuilders -> public static WrapperQueryBuilder wrapperQuery(String source);1524684173;A Query builder which allows building a query thanks to a JSON string or binary data.;public static WrapperQueryBuilder wrapperQuery(String source) {_        return new WrapperQueryBuilder(source)__    };a,query,builder,which,allows,building,a,query,thanks,to,a,json,string,or,binary,data;public,static,wrapper,query,builder,wrapper,query,string,source,return,new,wrapper,query,builder,source
QueryBuilders -> public static WrapperQueryBuilder wrapperQuery(String source);1525334055;A Query builder which allows building a query thanks to a JSON string or binary data.;public static WrapperQueryBuilder wrapperQuery(String source) {_        return new WrapperQueryBuilder(source)__    };a,query,builder,which,allows,building,a,query,thanks,to,a,json,string,or,binary,data;public,static,wrapper,query,builder,wrapper,query,string,source,return,new,wrapper,query,builder,source
QueryBuilders -> public static WrapperQueryBuilder wrapperQuery(String source);1542697754;A Query builder which allows building a query thanks to a JSON string or binary data.;public static WrapperQueryBuilder wrapperQuery(String source) {_        return new WrapperQueryBuilder(source)__    };a,query,builder,which,allows,building,a,query,thanks,to,a,json,string,or,binary,data;public,static,wrapper,query,builder,wrapper,query,string,source,return,new,wrapper,query,builder,source
QueryBuilders -> public static WrapperQueryBuilder wrapperQuery(String source);1542748206;A Query builder which allows building a query thanks to a JSON string or binary data.;public static WrapperQueryBuilder wrapperQuery(String source) {_        return new WrapperQueryBuilder(source)__    };a,query,builder,which,allows,building,a,query,thanks,to,a,json,string,or,binary,data;public,static,wrapper,query,builder,wrapper,query,string,source,return,new,wrapper,query,builder,source
QueryBuilders -> public static WrapperQueryBuilder wrapperQuery(String source);1547002001;A Query builder which allows building a query thanks to a JSON string or binary data.;public static WrapperQueryBuilder wrapperQuery(String source) {_        return new WrapperQueryBuilder(source)__    };a,query,builder,which,allows,building,a,query,thanks,to,a,json,string,or,binary,data;public,static,wrapper,query,builder,wrapper,query,string,source,return,new,wrapper,query,builder,source
QueryBuilders -> public static GeoPolygonQueryBuilder geoPolygonQuery(String name, List<GeoPoint> points);1524684173;A filter to filter based on a polygon defined by a set of locations  / points.__@param name The location field name.;public static GeoPolygonQueryBuilder geoPolygonQuery(String name, List<GeoPoint> points) {_        return new GeoPolygonQueryBuilder(name, points)__    };a,filter,to,filter,based,on,a,polygon,defined,by,a,set,of,locations,points,param,name,the,location,field,name;public,static,geo,polygon,query,builder,geo,polygon,query,string,name,list,geo,point,points,return,new,geo,polygon,query,builder,name,points
QueryBuilders -> public static GeoPolygonQueryBuilder geoPolygonQuery(String name, List<GeoPoint> points);1525334055;A filter to filter based on a polygon defined by a set of locations  / points.__@param name The location field name.;public static GeoPolygonQueryBuilder geoPolygonQuery(String name, List<GeoPoint> points) {_        return new GeoPolygonQueryBuilder(name, points)__    };a,filter,to,filter,based,on,a,polygon,defined,by,a,set,of,locations,points,param,name,the,location,field,name;public,static,geo,polygon,query,builder,geo,polygon,query,string,name,list,geo,point,points,return,new,geo,polygon,query,builder,name,points
QueryBuilders -> public static GeoPolygonQueryBuilder geoPolygonQuery(String name, List<GeoPoint> points);1542697754;A filter to filter based on a polygon defined by a set of locations  / points.__@param name The location field name.;public static GeoPolygonQueryBuilder geoPolygonQuery(String name, List<GeoPoint> points) {_        return new GeoPolygonQueryBuilder(name, points)__    };a,filter,to,filter,based,on,a,polygon,defined,by,a,set,of,locations,points,param,name,the,location,field,name;public,static,geo,polygon,query,builder,geo,polygon,query,string,name,list,geo,point,points,return,new,geo,polygon,query,builder,name,points
QueryBuilders -> public static GeoPolygonQueryBuilder geoPolygonQuery(String name, List<GeoPoint> points);1542748206;A filter to filter based on a polygon defined by a set of locations  / points.__@param name The location field name.;public static GeoPolygonQueryBuilder geoPolygonQuery(String name, List<GeoPoint> points) {_        return new GeoPolygonQueryBuilder(name, points)__    };a,filter,to,filter,based,on,a,polygon,defined,by,a,set,of,locations,points,param,name,the,location,field,name;public,static,geo,polygon,query,builder,geo,polygon,query,string,name,list,geo,point,points,return,new,geo,polygon,query,builder,name,points
QueryBuilders -> public static GeoPolygonQueryBuilder geoPolygonQuery(String name, List<GeoPoint> points);1547002001;A filter to filter based on a polygon defined by a set of locations  / points.__@param name The location field name.;public static GeoPolygonQueryBuilder geoPolygonQuery(String name, List<GeoPoint> points) {_        return new GeoPolygonQueryBuilder(name, points)__    };a,filter,to,filter,based,on,a,polygon,defined,by,a,set,of,locations,points,param,name,the,location,field,name;public,static,geo,polygon,query,builder,geo,polygon,query,string,name,list,geo,point,points,return,new,geo,polygon,query,builder,name,points
QueryBuilders -> public static SpanMultiTermQueryBuilder spanMultiTermQueryBuilder(MultiTermQueryBuilder multiTermQueryBuilder);1524684173;Creates a {@link SpanQueryBuilder} which allows having a sub query_which implements {@link MultiTermQueryBuilder}. This is useful for_having e.g. wildcard or fuzzy queries inside spans.__@param multiTermQueryBuilder The {@link MultiTermQueryBuilder} that_backs the created builder.;public static SpanMultiTermQueryBuilder spanMultiTermQueryBuilder(MultiTermQueryBuilder multiTermQueryBuilder) {_        return new SpanMultiTermQueryBuilder(multiTermQueryBuilder)__    };creates,a,link,span,query,builder,which,allows,having,a,sub,query,which,implements,link,multi,term,query,builder,this,is,useful,for,having,e,g,wildcard,or,fuzzy,queries,inside,spans,param,multi,term,query,builder,the,link,multi,term,query,builder,that,backs,the,created,builder;public,static,span,multi,term,query,builder,span,multi,term,query,builder,multi,term,query,builder,multi,term,query,builder,return,new,span,multi,term,query,builder,multi,term,query,builder
QueryBuilders -> public static SpanMultiTermQueryBuilder spanMultiTermQueryBuilder(MultiTermQueryBuilder multiTermQueryBuilder);1525334055;Creates a {@link SpanQueryBuilder} which allows having a sub query_which implements {@link MultiTermQueryBuilder}. This is useful for_having e.g. wildcard or fuzzy queries inside spans.__@param multiTermQueryBuilder The {@link MultiTermQueryBuilder} that_backs the created builder.;public static SpanMultiTermQueryBuilder spanMultiTermQueryBuilder(MultiTermQueryBuilder multiTermQueryBuilder) {_        return new SpanMultiTermQueryBuilder(multiTermQueryBuilder)__    };creates,a,link,span,query,builder,which,allows,having,a,sub,query,which,implements,link,multi,term,query,builder,this,is,useful,for,having,e,g,wildcard,or,fuzzy,queries,inside,spans,param,multi,term,query,builder,the,link,multi,term,query,builder,that,backs,the,created,builder;public,static,span,multi,term,query,builder,span,multi,term,query,builder,multi,term,query,builder,multi,term,query,builder,return,new,span,multi,term,query,builder,multi,term,query,builder
QueryBuilders -> public static SpanMultiTermQueryBuilder spanMultiTermQueryBuilder(MultiTermQueryBuilder multiTermQueryBuilder);1542697754;Creates a {@link SpanQueryBuilder} which allows having a sub query_which implements {@link MultiTermQueryBuilder}. This is useful for_having e.g. wildcard or fuzzy queries inside spans.__@param multiTermQueryBuilder The {@link MultiTermQueryBuilder} that_backs the created builder.;public static SpanMultiTermQueryBuilder spanMultiTermQueryBuilder(MultiTermQueryBuilder multiTermQueryBuilder) {_        return new SpanMultiTermQueryBuilder(multiTermQueryBuilder)__    };creates,a,link,span,query,builder,which,allows,having,a,sub,query,which,implements,link,multi,term,query,builder,this,is,useful,for,having,e,g,wildcard,or,fuzzy,queries,inside,spans,param,multi,term,query,builder,the,link,multi,term,query,builder,that,backs,the,created,builder;public,static,span,multi,term,query,builder,span,multi,term,query,builder,multi,term,query,builder,multi,term,query,builder,return,new,span,multi,term,query,builder,multi,term,query,builder
QueryBuilders -> public static SpanMultiTermQueryBuilder spanMultiTermQueryBuilder(MultiTermQueryBuilder multiTermQueryBuilder);1542748206;Creates a {@link SpanQueryBuilder} which allows having a sub query_which implements {@link MultiTermQueryBuilder}. This is useful for_having e.g. wildcard or fuzzy queries inside spans.__@param multiTermQueryBuilder The {@link MultiTermQueryBuilder} that_backs the created builder.;public static SpanMultiTermQueryBuilder spanMultiTermQueryBuilder(MultiTermQueryBuilder multiTermQueryBuilder) {_        return new SpanMultiTermQueryBuilder(multiTermQueryBuilder)__    };creates,a,link,span,query,builder,which,allows,having,a,sub,query,which,implements,link,multi,term,query,builder,this,is,useful,for,having,e,g,wildcard,or,fuzzy,queries,inside,spans,param,multi,term,query,builder,the,link,multi,term,query,builder,that,backs,the,created,builder;public,static,span,multi,term,query,builder,span,multi,term,query,builder,multi,term,query,builder,multi,term,query,builder,return,new,span,multi,term,query,builder,multi,term,query,builder
QueryBuilders -> public static SpanMultiTermQueryBuilder spanMultiTermQueryBuilder(MultiTermQueryBuilder multiTermQueryBuilder);1547002001;Creates a {@link SpanQueryBuilder} which allows having a sub query_which implements {@link MultiTermQueryBuilder}. This is useful for_having e.g. wildcard or fuzzy queries inside spans.__@param multiTermQueryBuilder The {@link MultiTermQueryBuilder} that_backs the created builder.;public static SpanMultiTermQueryBuilder spanMultiTermQueryBuilder(MultiTermQueryBuilder multiTermQueryBuilder) {_        return new SpanMultiTermQueryBuilder(multiTermQueryBuilder)__    };creates,a,link,span,query,builder,which,allows,having,a,sub,query,which,implements,link,multi,term,query,builder,this,is,useful,for,having,e,g,wildcard,or,fuzzy,queries,inside,spans,param,multi,term,query,builder,the,link,multi,term,query,builder,that,backs,the,created,builder;public,static,span,multi,term,query,builder,span,multi,term,query,builder,multi,term,query,builder,multi,term,query,builder,return,new,span,multi,term,query,builder,multi,term,query,builder
QueryBuilders -> @Deprecated     public static TypeQueryBuilder typeQuery(String type);1524684173;A filter based on doc/mapping type._@deprecated Types are going away, prefer filtering on a field.;@Deprecated_    public static TypeQueryBuilder typeQuery(String type) {_        return new TypeQueryBuilder(type)__    };a,filter,based,on,doc,mapping,type,deprecated,types,are,going,away,prefer,filtering,on,a,field;deprecated,public,static,type,query,builder,type,query,string,type,return,new,type,query,builder,type
QueryBuilders -> @Deprecated     public static TypeQueryBuilder typeQuery(String type);1525334055;A filter based on doc/mapping type._@deprecated Types are going away, prefer filtering on a field.;@Deprecated_    public static TypeQueryBuilder typeQuery(String type) {_        return new TypeQueryBuilder(type)__    };a,filter,based,on,doc,mapping,type,deprecated,types,are,going,away,prefer,filtering,on,a,field;deprecated,public,static,type,query,builder,type,query,string,type,return,new,type,query,builder,type
QueryBuilders -> @Deprecated     public static TypeQueryBuilder typeQuery(String type);1542697754;A filter based on doc/mapping type._@deprecated Types are going away, prefer filtering on a field.;@Deprecated_    public static TypeQueryBuilder typeQuery(String type) {_        return new TypeQueryBuilder(type)__    };a,filter,based,on,doc,mapping,type,deprecated,types,are,going,away,prefer,filtering,on,a,field;deprecated,public,static,type,query,builder,type,query,string,type,return,new,type,query,builder,type
QueryBuilders -> @Deprecated     public static TypeQueryBuilder typeQuery(String type);1542748206;A filter based on doc/mapping type._@deprecated Types are going away, prefer filtering on a field.;@Deprecated_    public static TypeQueryBuilder typeQuery(String type) {_        return new TypeQueryBuilder(type)__    };a,filter,based,on,doc,mapping,type,deprecated,types,are,going,away,prefer,filtering,on,a,field;deprecated,public,static,type,query,builder,type,query,string,type,return,new,type,query,builder,type
QueryBuilders -> @Deprecated     public static TypeQueryBuilder typeQuery(String type);1547002001;A filter based on doc/mapping type._@deprecated Types are going away, prefer filtering on a field.;@Deprecated_    public static TypeQueryBuilder typeQuery(String type) {_        return new TypeQueryBuilder(type)__    };a,filter,based,on,doc,mapping,type,deprecated,types,are,going,away,prefer,filtering,on,a,field;deprecated,public,static,type,query,builder,type,query,string,type,return,new,type,query,builder,type
QueryBuilders -> public static TermQueryBuilder termQuery(String name, Object value);1524684173;A Query that matches documents containing a term.__@param name  The name of the field_@param value The value of the term;public static TermQueryBuilder termQuery(String name, Object value) {_        return new TermQueryBuilder(name, value)__    };a,query,that,matches,documents,containing,a,term,param,name,the,name,of,the,field,param,value,the,value,of,the,term;public,static,term,query,builder,term,query,string,name,object,value,return,new,term,query,builder,name,value
QueryBuilders -> public static TermQueryBuilder termQuery(String name, Object value);1525334055;A Query that matches documents containing a term.__@param name  The name of the field_@param value The value of the term;public static TermQueryBuilder termQuery(String name, Object value) {_        return new TermQueryBuilder(name, value)__    };a,query,that,matches,documents,containing,a,term,param,name,the,name,of,the,field,param,value,the,value,of,the,term;public,static,term,query,builder,term,query,string,name,object,value,return,new,term,query,builder,name,value
QueryBuilders -> public static TermQueryBuilder termQuery(String name, Object value);1542697754;A Query that matches documents containing a term.__@param name  The name of the field_@param value The value of the term;public static TermQueryBuilder termQuery(String name, Object value) {_        return new TermQueryBuilder(name, value)__    };a,query,that,matches,documents,containing,a,term,param,name,the,name,of,the,field,param,value,the,value,of,the,term;public,static,term,query,builder,term,query,string,name,object,value,return,new,term,query,builder,name,value
QueryBuilders -> public static TermQueryBuilder termQuery(String name, Object value);1542748206;A Query that matches documents containing a term.__@param name  The name of the field_@param value The value of the term;public static TermQueryBuilder termQuery(String name, Object value) {_        return new TermQueryBuilder(name, value)__    };a,query,that,matches,documents,containing,a,term,param,name,the,name,of,the,field,param,value,the,value,of,the,term;public,static,term,query,builder,term,query,string,name,object,value,return,new,term,query,builder,name,value
QueryBuilders -> public static TermQueryBuilder termQuery(String name, Object value);1547002001;A Query that matches documents containing a term.__@param name  The name of the field_@param value The value of the term;public static TermQueryBuilder termQuery(String name, Object value) {_        return new TermQueryBuilder(name, value)__    };a,query,that,matches,documents,containing,a,term,param,name,the,name,of,the,field,param,value,the,value,of,the,term;public,static,term,query,builder,term,query,string,name,object,value,return,new,term,query,builder,name,value
QueryBuilders -> public static FuzzyQueryBuilder fuzzyQuery(String name, Object value);1524684173;A Query that matches documents using fuzzy query.__@param name  The name of the field_@param value The value of the term__@see #matchQuery(String, Object)_@see #rangeQuery(String);public static FuzzyQueryBuilder fuzzyQuery(String name, Object value) {_        return new FuzzyQueryBuilder(name, value)__    };a,query,that,matches,documents,using,fuzzy,query,param,name,the,name,of,the,field,param,value,the,value,of,the,term,see,match,query,string,object,see,range,query,string;public,static,fuzzy,query,builder,fuzzy,query,string,name,object,value,return,new,fuzzy,query,builder,name,value
QueryBuilders -> public static FuzzyQueryBuilder fuzzyQuery(String name, Object value);1525334055;A Query that matches documents using fuzzy query.__@param name  The name of the field_@param value The value of the term__@see #matchQuery(String, Object)_@see #rangeQuery(String);public static FuzzyQueryBuilder fuzzyQuery(String name, Object value) {_        return new FuzzyQueryBuilder(name, value)__    };a,query,that,matches,documents,using,fuzzy,query,param,name,the,name,of,the,field,param,value,the,value,of,the,term,see,match,query,string,object,see,range,query,string;public,static,fuzzy,query,builder,fuzzy,query,string,name,object,value,return,new,fuzzy,query,builder,name,value
QueryBuilders -> public static FuzzyQueryBuilder fuzzyQuery(String name, Object value);1542697754;A Query that matches documents using fuzzy query.__@param name  The name of the field_@param value The value of the term__@see #matchQuery(String, Object)_@see #rangeQuery(String);public static FuzzyQueryBuilder fuzzyQuery(String name, Object value) {_        return new FuzzyQueryBuilder(name, value)__    };a,query,that,matches,documents,using,fuzzy,query,param,name,the,name,of,the,field,param,value,the,value,of,the,term,see,match,query,string,object,see,range,query,string;public,static,fuzzy,query,builder,fuzzy,query,string,name,object,value,return,new,fuzzy,query,builder,name,value
QueryBuilders -> public static FuzzyQueryBuilder fuzzyQuery(String name, Object value);1542748206;A Query that matches documents using fuzzy query.__@param name  The name of the field_@param value The value of the term__@see #matchQuery(String, Object)_@see #rangeQuery(String);public static FuzzyQueryBuilder fuzzyQuery(String name, Object value) {_        return new FuzzyQueryBuilder(name, value)__    };a,query,that,matches,documents,using,fuzzy,query,param,name,the,name,of,the,field,param,value,the,value,of,the,term,see,match,query,string,object,see,range,query,string;public,static,fuzzy,query,builder,fuzzy,query,string,name,object,value,return,new,fuzzy,query,builder,name,value
QueryBuilders -> public static FuzzyQueryBuilder fuzzyQuery(String name, Object value);1547002001;A Query that matches documents using fuzzy query.__@param name  The name of the field_@param value The value of the term__@see #matchQuery(String, Object)_@see #rangeQuery(String);public static FuzzyQueryBuilder fuzzyQuery(String name, Object value) {_        return new FuzzyQueryBuilder(name, value)__    };a,query,that,matches,documents,using,fuzzy,query,param,name,the,name,of,the,field,param,value,the,value,of,the,term,see,match,query,string,object,see,range,query,string;public,static,fuzzy,query,builder,fuzzy,query,string,name,object,value,return,new,fuzzy,query,builder,name,value
QueryBuilders -> public static ConstantScoreQueryBuilder constantScoreQuery(QueryBuilder queryBuilder);1524684173;A query that wraps another query and simply returns a constant score equal to the_query boost for every document in the query.__@param queryBuilder The query to wrap in a constant score query;public static ConstantScoreQueryBuilder constantScoreQuery(QueryBuilder queryBuilder) {_        return new ConstantScoreQueryBuilder(queryBuilder)__    };a,query,that,wraps,another,query,and,simply,returns,a,constant,score,equal,to,the,query,boost,for,every,document,in,the,query,param,query,builder,the,query,to,wrap,in,a,constant,score,query;public,static,constant,score,query,builder,constant,score,query,query,builder,query,builder,return,new,constant,score,query,builder,query,builder
QueryBuilders -> public static ConstantScoreQueryBuilder constantScoreQuery(QueryBuilder queryBuilder);1525334055;A query that wraps another query and simply returns a constant score equal to the_query boost for every document in the query.__@param queryBuilder The query to wrap in a constant score query;public static ConstantScoreQueryBuilder constantScoreQuery(QueryBuilder queryBuilder) {_        return new ConstantScoreQueryBuilder(queryBuilder)__    };a,query,that,wraps,another,query,and,simply,returns,a,constant,score,equal,to,the,query,boost,for,every,document,in,the,query,param,query,builder,the,query,to,wrap,in,a,constant,score,query;public,static,constant,score,query,builder,constant,score,query,query,builder,query,builder,return,new,constant,score,query,builder,query,builder
QueryBuilders -> public static ConstantScoreQueryBuilder constantScoreQuery(QueryBuilder queryBuilder);1542697754;A query that wraps another query and simply returns a constant score equal to the_query boost for every document in the query.__@param queryBuilder The query to wrap in a constant score query;public static ConstantScoreQueryBuilder constantScoreQuery(QueryBuilder queryBuilder) {_        return new ConstantScoreQueryBuilder(queryBuilder)__    };a,query,that,wraps,another,query,and,simply,returns,a,constant,score,equal,to,the,query,boost,for,every,document,in,the,query,param,query,builder,the,query,to,wrap,in,a,constant,score,query;public,static,constant,score,query,builder,constant,score,query,query,builder,query,builder,return,new,constant,score,query,builder,query,builder
QueryBuilders -> public static ConstantScoreQueryBuilder constantScoreQuery(QueryBuilder queryBuilder);1542748206;A query that wraps another query and simply returns a constant score equal to the_query boost for every document in the query.__@param queryBuilder The query to wrap in a constant score query;public static ConstantScoreQueryBuilder constantScoreQuery(QueryBuilder queryBuilder) {_        return new ConstantScoreQueryBuilder(queryBuilder)__    };a,query,that,wraps,another,query,and,simply,returns,a,constant,score,equal,to,the,query,boost,for,every,document,in,the,query,param,query,builder,the,query,to,wrap,in,a,constant,score,query;public,static,constant,score,query,builder,constant,score,query,query,builder,query,builder,return,new,constant,score,query,builder,query,builder
QueryBuilders -> public static ConstantScoreQueryBuilder constantScoreQuery(QueryBuilder queryBuilder);1547002001;A query that wraps another query and simply returns a constant score equal to the_query boost for every document in the query.__@param queryBuilder The query to wrap in a constant score query;public static ConstantScoreQueryBuilder constantScoreQuery(QueryBuilder queryBuilder) {_        return new ConstantScoreQueryBuilder(queryBuilder)__    };a,query,that,wraps,another,query,and,simply,returns,a,constant,score,equal,to,the,query,boost,for,every,document,in,the,query,param,query,builder,the,query,to,wrap,in,a,constant,score,query;public,static,constant,score,query,builder,constant,score,query,query,builder,query,builder,return,new,constant,score,query,builder,query,builder
QueryBuilders -> public static MatchPhraseQueryBuilder matchPhraseQuery(String name, Object text);1524684173;Creates a text query with type "PHRASE" for the provided field name and text.__@param name The field name._@param text The query text (to be analyzed).;public static MatchPhraseQueryBuilder matchPhraseQuery(String name, Object text) {_        return new MatchPhraseQueryBuilder(name, text)__    };creates,a,text,query,with,type,phrase,for,the,provided,field,name,and,text,param,name,the,field,name,param,text,the,query,text,to,be,analyzed;public,static,match,phrase,query,builder,match,phrase,query,string,name,object,text,return,new,match,phrase,query,builder,name,text
QueryBuilders -> public static MatchPhraseQueryBuilder matchPhraseQuery(String name, Object text);1525334055;Creates a text query with type "PHRASE" for the provided field name and text.__@param name The field name._@param text The query text (to be analyzed).;public static MatchPhraseQueryBuilder matchPhraseQuery(String name, Object text) {_        return new MatchPhraseQueryBuilder(name, text)__    };creates,a,text,query,with,type,phrase,for,the,provided,field,name,and,text,param,name,the,field,name,param,text,the,query,text,to,be,analyzed;public,static,match,phrase,query,builder,match,phrase,query,string,name,object,text,return,new,match,phrase,query,builder,name,text
QueryBuilders -> public static MatchPhraseQueryBuilder matchPhraseQuery(String name, Object text);1542697754;Creates a text query with type "PHRASE" for the provided field name and text.__@param name The field name._@param text The query text (to be analyzed).;public static MatchPhraseQueryBuilder matchPhraseQuery(String name, Object text) {_        return new MatchPhraseQueryBuilder(name, text)__    };creates,a,text,query,with,type,phrase,for,the,provided,field,name,and,text,param,name,the,field,name,param,text,the,query,text,to,be,analyzed;public,static,match,phrase,query,builder,match,phrase,query,string,name,object,text,return,new,match,phrase,query,builder,name,text
QueryBuilders -> public static MatchPhraseQueryBuilder matchPhraseQuery(String name, Object text);1542748206;Creates a text query with type "PHRASE" for the provided field name and text.__@param name The field name._@param text The query text (to be analyzed).;public static MatchPhraseQueryBuilder matchPhraseQuery(String name, Object text) {_        return new MatchPhraseQueryBuilder(name, text)__    };creates,a,text,query,with,type,phrase,for,the,provided,field,name,and,text,param,name,the,field,name,param,text,the,query,text,to,be,analyzed;public,static,match,phrase,query,builder,match,phrase,query,string,name,object,text,return,new,match,phrase,query,builder,name,text
QueryBuilders -> public static MatchPhraseQueryBuilder matchPhraseQuery(String name, Object text);1547002001;Creates a text query with type "PHRASE" for the provided field name and text.__@param name The field name._@param text The query text (to be analyzed).;public static MatchPhraseQueryBuilder matchPhraseQuery(String name, Object text) {_        return new MatchPhraseQueryBuilder(name, text)__    };creates,a,text,query,with,type,phrase,for,the,provided,field,name,and,text,param,name,the,field,name,param,text,the,query,text,to,be,analyzed;public,static,match,phrase,query,builder,match,phrase,query,string,name,object,text,return,new,match,phrase,query,builder,name,text
QueryBuilders -> public static WrapperQueryBuilder wrapperQuery(byte[] source);1524684173;A Query builder which allows building a query thanks to a JSON string or binary data.;public static WrapperQueryBuilder wrapperQuery(byte[] source) {_        return new WrapperQueryBuilder(source)__    };a,query,builder,which,allows,building,a,query,thanks,to,a,json,string,or,binary,data;public,static,wrapper,query,builder,wrapper,query,byte,source,return,new,wrapper,query,builder,source
QueryBuilders -> public static WrapperQueryBuilder wrapperQuery(byte[] source);1525334055;A Query builder which allows building a query thanks to a JSON string or binary data.;public static WrapperQueryBuilder wrapperQuery(byte[] source) {_        return new WrapperQueryBuilder(source)__    };a,query,builder,which,allows,building,a,query,thanks,to,a,json,string,or,binary,data;public,static,wrapper,query,builder,wrapper,query,byte,source,return,new,wrapper,query,builder,source
QueryBuilders -> public static WrapperQueryBuilder wrapperQuery(byte[] source);1542697754;A Query builder which allows building a query thanks to a JSON string or binary data.;public static WrapperQueryBuilder wrapperQuery(byte[] source) {_        return new WrapperQueryBuilder(source)__    };a,query,builder,which,allows,building,a,query,thanks,to,a,json,string,or,binary,data;public,static,wrapper,query,builder,wrapper,query,byte,source,return,new,wrapper,query,builder,source
QueryBuilders -> public static WrapperQueryBuilder wrapperQuery(byte[] source);1542748206;A Query builder which allows building a query thanks to a JSON string or binary data.;public static WrapperQueryBuilder wrapperQuery(byte[] source) {_        return new WrapperQueryBuilder(source)__    };a,query,builder,which,allows,building,a,query,thanks,to,a,json,string,or,binary,data;public,static,wrapper,query,builder,wrapper,query,byte,source,return,new,wrapper,query,builder,source
QueryBuilders -> public static WrapperQueryBuilder wrapperQuery(byte[] source);1547002001;A Query builder which allows building a query thanks to a JSON string or binary data.;public static WrapperQueryBuilder wrapperQuery(byte[] source) {_        return new WrapperQueryBuilder(source)__    };a,query,builder,which,allows,building,a,query,thanks,to,a,json,string,or,binary,data;public,static,wrapper,query,builder,wrapper,query,byte,source,return,new,wrapper,query,builder,source
QueryBuilders -> public static PrefixQueryBuilder prefixQuery(String name, String prefix);1524684173;A Query that matches documents containing terms with a specified prefix.__@param name   The name of the field_@param prefix The prefix query;public static PrefixQueryBuilder prefixQuery(String name, String prefix) {_        return new PrefixQueryBuilder(name, prefix)__    };a,query,that,matches,documents,containing,terms,with,a,specified,prefix,param,name,the,name,of,the,field,param,prefix,the,prefix,query;public,static,prefix,query,builder,prefix,query,string,name,string,prefix,return,new,prefix,query,builder,name,prefix
QueryBuilders -> public static PrefixQueryBuilder prefixQuery(String name, String prefix);1525334055;A Query that matches documents containing terms with a specified prefix.__@param name   The name of the field_@param prefix The prefix query;public static PrefixQueryBuilder prefixQuery(String name, String prefix) {_        return new PrefixQueryBuilder(name, prefix)__    };a,query,that,matches,documents,containing,terms,with,a,specified,prefix,param,name,the,name,of,the,field,param,prefix,the,prefix,query;public,static,prefix,query,builder,prefix,query,string,name,string,prefix,return,new,prefix,query,builder,name,prefix
QueryBuilders -> public static PrefixQueryBuilder prefixQuery(String name, String prefix);1542697754;A Query that matches documents containing terms with a specified prefix.__@param name   The name of the field_@param prefix The prefix query;public static PrefixQueryBuilder prefixQuery(String name, String prefix) {_        return new PrefixQueryBuilder(name, prefix)__    };a,query,that,matches,documents,containing,terms,with,a,specified,prefix,param,name,the,name,of,the,field,param,prefix,the,prefix,query;public,static,prefix,query,builder,prefix,query,string,name,string,prefix,return,new,prefix,query,builder,name,prefix
QueryBuilders -> public static PrefixQueryBuilder prefixQuery(String name, String prefix);1542748206;A Query that matches documents containing terms with a specified prefix.__@param name   The name of the field_@param prefix The prefix query;public static PrefixQueryBuilder prefixQuery(String name, String prefix) {_        return new PrefixQueryBuilder(name, prefix)__    };a,query,that,matches,documents,containing,terms,with,a,specified,prefix,param,name,the,name,of,the,field,param,prefix,the,prefix,query;public,static,prefix,query,builder,prefix,query,string,name,string,prefix,return,new,prefix,query,builder,name,prefix
QueryBuilders -> public static PrefixQueryBuilder prefixQuery(String name, String prefix);1547002001;A Query that matches documents containing terms with a specified prefix.__@param name   The name of the field_@param prefix The prefix query;public static PrefixQueryBuilder prefixQuery(String name, String prefix) {_        return new PrefixQueryBuilder(name, prefix)__    };a,query,that,matches,documents,containing,terms,with,a,specified,prefix,param,name,the,name,of,the,field,param,prefix,the,prefix,query;public,static,prefix,query,builder,prefix,query,string,name,string,prefix,return,new,prefix,query,builder,name,prefix
QueryBuilders -> public static TermQueryBuilder termQuery(String name, float value);1524684173;A Query that matches documents containing a term.__@param name  The name of the field_@param value The value of the term;public static TermQueryBuilder termQuery(String name, float value) {_        return new TermQueryBuilder(name, value)__    };a,query,that,matches,documents,containing,a,term,param,name,the,name,of,the,field,param,value,the,value,of,the,term;public,static,term,query,builder,term,query,string,name,float,value,return,new,term,query,builder,name,value
QueryBuilders -> public static TermQueryBuilder termQuery(String name, float value);1525334055;A Query that matches documents containing a term.__@param name  The name of the field_@param value The value of the term;public static TermQueryBuilder termQuery(String name, float value) {_        return new TermQueryBuilder(name, value)__    };a,query,that,matches,documents,containing,a,term,param,name,the,name,of,the,field,param,value,the,value,of,the,term;public,static,term,query,builder,term,query,string,name,float,value,return,new,term,query,builder,name,value
QueryBuilders -> public static TermQueryBuilder termQuery(String name, float value);1542697754;A Query that matches documents containing a term.__@param name  The name of the field_@param value The value of the term;public static TermQueryBuilder termQuery(String name, float value) {_        return new TermQueryBuilder(name, value)__    };a,query,that,matches,documents,containing,a,term,param,name,the,name,of,the,field,param,value,the,value,of,the,term;public,static,term,query,builder,term,query,string,name,float,value,return,new,term,query,builder,name,value
QueryBuilders -> public static TermQueryBuilder termQuery(String name, float value);1542748206;A Query that matches documents containing a term.__@param name  The name of the field_@param value The value of the term;public static TermQueryBuilder termQuery(String name, float value) {_        return new TermQueryBuilder(name, value)__    };a,query,that,matches,documents,containing,a,term,param,name,the,name,of,the,field,param,value,the,value,of,the,term;public,static,term,query,builder,term,query,string,name,float,value,return,new,term,query,builder,name,value
QueryBuilders -> public static TermQueryBuilder termQuery(String name, float value);1547002001;A Query that matches documents containing a term.__@param name  The name of the field_@param value The value of the term;public static TermQueryBuilder termQuery(String name, float value) {_        return new TermQueryBuilder(name, value)__    };a,query,that,matches,documents,containing,a,term,param,name,the,name,of,the,field,param,value,the,value,of,the,term;public,static,term,query,builder,term,query,string,name,float,value,return,new,term,query,builder,name,value
QueryBuilders -> public static SimpleQueryStringBuilder simpleQueryStringQuery(String queryString);1524684173;A query that acts similar to a query_string query, but won't throw_exceptions for any weird string syntax. See_{@link org.apache.lucene.queryparser.simple.SimpleQueryParser} for the full_supported syntax.;public static SimpleQueryStringBuilder simpleQueryStringQuery(String queryString) {_        return new SimpleQueryStringBuilder(queryString)__    };a,query,that,acts,similar,to,a,query,but,won,t,throw,exceptions,for,any,weird,string,syntax,see,link,org,apache,lucene,queryparser,simple,simple,query,parser,for,the,full,supported,syntax;public,static,simple,query,string,builder,simple,query,string,query,string,query,string,return,new,simple,query,string,builder,query,string
QueryBuilders -> public static SimpleQueryStringBuilder simpleQueryStringQuery(String queryString);1525334055;A query that acts similar to a query_string query, but won't throw_exceptions for any weird string syntax. See_{@link org.apache.lucene.queryparser.simple.SimpleQueryParser} for the full_supported syntax.;public static SimpleQueryStringBuilder simpleQueryStringQuery(String queryString) {_        return new SimpleQueryStringBuilder(queryString)__    };a,query,that,acts,similar,to,a,query,but,won,t,throw,exceptions,for,any,weird,string,syntax,see,link,org,apache,lucene,queryparser,simple,simple,query,parser,for,the,full,supported,syntax;public,static,simple,query,string,builder,simple,query,string,query,string,query,string,return,new,simple,query,string,builder,query,string
QueryBuilders -> public static SimpleQueryStringBuilder simpleQueryStringQuery(String queryString);1542697754;A query that acts similar to a query_string query, but won't throw_exceptions for any weird string syntax. See_{@link org.apache.lucene.queryparser.simple.SimpleQueryParser} for the full_supported syntax.;public static SimpleQueryStringBuilder simpleQueryStringQuery(String queryString) {_        return new SimpleQueryStringBuilder(queryString)__    };a,query,that,acts,similar,to,a,query,but,won,t,throw,exceptions,for,any,weird,string,syntax,see,link,org,apache,lucene,queryparser,simple,simple,query,parser,for,the,full,supported,syntax;public,static,simple,query,string,builder,simple,query,string,query,string,query,string,return,new,simple,query,string,builder,query,string
QueryBuilders -> public static SimpleQueryStringBuilder simpleQueryStringQuery(String queryString);1542748206;A query that acts similar to a query_string query, but won't throw_exceptions for any weird string syntax. See_{@link org.apache.lucene.queryparser.simple.SimpleQueryParser} for the full_supported syntax.;public static SimpleQueryStringBuilder simpleQueryStringQuery(String queryString) {_        return new SimpleQueryStringBuilder(queryString)__    };a,query,that,acts,similar,to,a,query,but,won,t,throw,exceptions,for,any,weird,string,syntax,see,link,org,apache,lucene,queryparser,simple,simple,query,parser,for,the,full,supported,syntax;public,static,simple,query,string,builder,simple,query,string,query,string,query,string,return,new,simple,query,string,builder,query,string
QueryBuilders -> public static SimpleQueryStringBuilder simpleQueryStringQuery(String queryString);1547002001;A query that acts similar to a query_string query, but won't throw_exceptions for any weird string syntax. See_{@link org.apache.lucene.queryparser.simple.SimpleQueryParser} for the full_supported syntax.;public static SimpleQueryStringBuilder simpleQueryStringQuery(String queryString) {_        return new SimpleQueryStringBuilder(queryString)__    };a,query,that,acts,similar,to,a,query,but,won,t,throw,exceptions,for,any,weird,string,syntax,see,link,org,apache,lucene,queryparser,simple,simple,query,parser,for,the,full,supported,syntax;public,static,simple,query,string,builder,simple,query,string,query,string,query,string,return,new,simple,query,string,builder,query,string
QueryBuilders -> public static TermsQueryBuilder termsQuery(String name, float... values);1524684173;A filer for a field based on several terms matching on any of them.__@param name   The field name_@param values The terms;public static TermsQueryBuilder termsQuery(String name, float... values) {_        return new TermsQueryBuilder(name, values)__    };a,filer,for,a,field,based,on,several,terms,matching,on,any,of,them,param,name,the,field,name,param,values,the,terms;public,static,terms,query,builder,terms,query,string,name,float,values,return,new,terms,query,builder,name,values
QueryBuilders -> public static TermsQueryBuilder termsQuery(String name, float... values);1525334055;A filer for a field based on several terms matching on any of them.__@param name   The field name_@param values The terms;public static TermsQueryBuilder termsQuery(String name, float... values) {_        return new TermsQueryBuilder(name, values)__    };a,filer,for,a,field,based,on,several,terms,matching,on,any,of,them,param,name,the,field,name,param,values,the,terms;public,static,terms,query,builder,terms,query,string,name,float,values,return,new,terms,query,builder,name,values
QueryBuilders -> public static TermsQueryBuilder termsQuery(String name, float... values);1542697754;A filer for a field based on several terms matching on any of them.__@param name   The field name_@param values The terms;public static TermsQueryBuilder termsQuery(String name, float... values) {_        return new TermsQueryBuilder(name, values)__    };a,filer,for,a,field,based,on,several,terms,matching,on,any,of,them,param,name,the,field,name,param,values,the,terms;public,static,terms,query,builder,terms,query,string,name,float,values,return,new,terms,query,builder,name,values
QueryBuilders -> public static TermsQueryBuilder termsQuery(String name, float... values);1542748206;A filer for a field based on several terms matching on any of them.__@param name   The field name_@param values The terms;public static TermsQueryBuilder termsQuery(String name, float... values) {_        return new TermsQueryBuilder(name, values)__    };a,filer,for,a,field,based,on,several,terms,matching,on,any,of,them,param,name,the,field,name,param,values,the,terms;public,static,terms,query,builder,terms,query,string,name,float,values,return,new,terms,query,builder,name,values
QueryBuilders -> public static TermsQueryBuilder termsQuery(String name, float... values);1547002001;A filer for a field based on several terms matching on any of them.__@param name   The field name_@param values The terms;public static TermsQueryBuilder termsQuery(String name, float... values) {_        return new TermsQueryBuilder(name, values)__    };a,filer,for,a,field,based,on,several,terms,matching,on,any,of,them,param,name,the,field,name,param,values,the,terms;public,static,terms,query,builder,terms,query,string,name,float,values,return,new,terms,query,builder,name,values
QueryBuilders -> public static MoreLikeThisQueryBuilder moreLikeThisQuery(Item[] likeItems);1524684173;A more like this query that finds documents that are "like" the provided documents_which is checked against the "_all" field._@param likeItems the documents to use when generating the 'More Like This' query.;public static MoreLikeThisQueryBuilder moreLikeThisQuery(Item[] likeItems) {_        return moreLikeThisQuery(null, null, likeItems)__    };a,more,like,this,query,that,finds,documents,that,are,like,the,provided,documents,which,is,checked,against,the,field,param,like,items,the,documents,to,use,when,generating,the,more,like,this,query;public,static,more,like,this,query,builder,more,like,this,query,item,like,items,return,more,like,this,query,null,null,like,items
QueryBuilders -> public static MoreLikeThisQueryBuilder moreLikeThisQuery(Item[] likeItems);1525334055;A more like this query that finds documents that are "like" the provided documents_which is checked against the "_all" field._@param likeItems the documents to use when generating the 'More Like This' query.;public static MoreLikeThisQueryBuilder moreLikeThisQuery(Item[] likeItems) {_        return moreLikeThisQuery(null, null, likeItems)__    };a,more,like,this,query,that,finds,documents,that,are,like,the,provided,documents,which,is,checked,against,the,field,param,like,items,the,documents,to,use,when,generating,the,more,like,this,query;public,static,more,like,this,query,builder,more,like,this,query,item,like,items,return,more,like,this,query,null,null,like,items
QueryBuilders -> public static MoreLikeThisQueryBuilder moreLikeThisQuery(Item[] likeItems);1542697754;A more like this query that finds documents that are "like" the provided documents_which is checked against the "_all" field._@param likeItems the documents to use when generating the 'More Like This' query.;public static MoreLikeThisQueryBuilder moreLikeThisQuery(Item[] likeItems) {_        return moreLikeThisQuery(null, null, likeItems)__    };a,more,like,this,query,that,finds,documents,that,are,like,the,provided,documents,which,is,checked,against,the,field,param,like,items,the,documents,to,use,when,generating,the,more,like,this,query;public,static,more,like,this,query,builder,more,like,this,query,item,like,items,return,more,like,this,query,null,null,like,items
QueryBuilders -> public static MoreLikeThisQueryBuilder moreLikeThisQuery(Item[] likeItems);1542748206;A more like this query that finds documents that are "like" the provided documents_which is checked against the "_all" field._@param likeItems the documents to use when generating the 'More Like This' query.;public static MoreLikeThisQueryBuilder moreLikeThisQuery(Item[] likeItems) {_        return moreLikeThisQuery(null, null, likeItems)__    };a,more,like,this,query,that,finds,documents,that,are,like,the,provided,documents,which,is,checked,against,the,field,param,like,items,the,documents,to,use,when,generating,the,more,like,this,query;public,static,more,like,this,query,builder,more,like,this,query,item,like,items,return,more,like,this,query,null,null,like,items
QueryBuilders -> public static MoreLikeThisQueryBuilder moreLikeThisQuery(Item[] likeItems);1547002001;A more like this query that finds documents that are "like" the provided documents_which is checked against the "_all" field._@param likeItems the documents to use when generating the 'More Like This' query.;public static MoreLikeThisQueryBuilder moreLikeThisQuery(Item[] likeItems) {_        return moreLikeThisQuery(null, null, likeItems)__    };a,more,like,this,query,that,finds,documents,that,are,like,the,provided,documents,which,is,checked,against,the,field,param,like,items,the,documents,to,use,when,generating,the,more,like,this,query;public,static,more,like,this,query,builder,more,like,this,query,item,like,items,return,more,like,this,query,null,null,like,items
QueryBuilders -> public static ScriptQueryBuilder scriptQuery(Script script);1524684173;A builder for filter based on a script.__@param script The script to filter by.;public static ScriptQueryBuilder scriptQuery(Script script) {_        return new ScriptQueryBuilder(script)__    };a,builder,for,filter,based,on,a,script,param,script,the,script,to,filter,by;public,static,script,query,builder,script,query,script,script,return,new,script,query,builder,script
QueryBuilders -> public static ScriptQueryBuilder scriptQuery(Script script);1525334055;A builder for filter based on a script.__@param script The script to filter by.;public static ScriptQueryBuilder scriptQuery(Script script) {_        return new ScriptQueryBuilder(script)__    };a,builder,for,filter,based,on,a,script,param,script,the,script,to,filter,by;public,static,script,query,builder,script,query,script,script,return,new,script,query,builder,script
QueryBuilders -> public static ScriptQueryBuilder scriptQuery(Script script);1542697754;A builder for filter based on a script.__@param script The script to filter by.;public static ScriptQueryBuilder scriptQuery(Script script) {_        return new ScriptQueryBuilder(script)__    };a,builder,for,filter,based,on,a,script,param,script,the,script,to,filter,by;public,static,script,query,builder,script,query,script,script,return,new,script,query,builder,script
QueryBuilders -> public static ScriptQueryBuilder scriptQuery(Script script);1542748206;A builder for filter based on a script.__@param script The script to filter by.;public static ScriptQueryBuilder scriptQuery(Script script) {_        return new ScriptQueryBuilder(script)__    };a,builder,for,filter,based,on,a,script,param,script,the,script,to,filter,by;public,static,script,query,builder,script,query,script,script,return,new,script,query,builder,script
QueryBuilders -> public static ScriptQueryBuilder scriptQuery(Script script);1547002001;A builder for filter based on a script.__@param script The script to filter by.;public static ScriptQueryBuilder scriptQuery(Script script) {_        return new ScriptQueryBuilder(script)__    };a,builder,for,filter,based,on,a,script,param,script,the,script,to,filter,by;public,static,script,query,builder,script,query,script,script,return,new,script,query,builder,script
QueryBuilders -> public static BoostingQueryBuilder boostingQuery(QueryBuilder positiveQuery, QueryBuilder negativeQuery);1524684173;The BoostingQuery class can be used to effectively demote results that match a given query._Unlike the "NOT" clause, this still selects documents that contain undesirable terms,_but reduces their overall score:;public static BoostingQueryBuilder boostingQuery(QueryBuilder positiveQuery, QueryBuilder negativeQuery) {_        return new BoostingQueryBuilder(positiveQuery, negativeQuery)__    };the,boosting,query,class,can,be,used,to,effectively,demote,results,that,match,a,given,query,unlike,the,not,clause,this,still,selects,documents,that,contain,undesirable,terms,but,reduces,their,overall,score;public,static,boosting,query,builder,boosting,query,query,builder,positive,query,query,builder,negative,query,return,new,boosting,query,builder,positive,query,negative,query
QueryBuilders -> public static BoostingQueryBuilder boostingQuery(QueryBuilder positiveQuery, QueryBuilder negativeQuery);1525334055;The BoostingQuery class can be used to effectively demote results that match a given query._Unlike the "NOT" clause, this still selects documents that contain undesirable terms,_but reduces their overall score:;public static BoostingQueryBuilder boostingQuery(QueryBuilder positiveQuery, QueryBuilder negativeQuery) {_        return new BoostingQueryBuilder(positiveQuery, negativeQuery)__    };the,boosting,query,class,can,be,used,to,effectively,demote,results,that,match,a,given,query,unlike,the,not,clause,this,still,selects,documents,that,contain,undesirable,terms,but,reduces,their,overall,score;public,static,boosting,query,builder,boosting,query,query,builder,positive,query,query,builder,negative,query,return,new,boosting,query,builder,positive,query,negative,query
QueryBuilders -> public static BoostingQueryBuilder boostingQuery(QueryBuilder positiveQuery, QueryBuilder negativeQuery);1542697754;The BoostingQuery class can be used to effectively demote results that match a given query._Unlike the "NOT" clause, this still selects documents that contain undesirable terms,_but reduces their overall score:;public static BoostingQueryBuilder boostingQuery(QueryBuilder positiveQuery, QueryBuilder negativeQuery) {_        return new BoostingQueryBuilder(positiveQuery, negativeQuery)__    };the,boosting,query,class,can,be,used,to,effectively,demote,results,that,match,a,given,query,unlike,the,not,clause,this,still,selects,documents,that,contain,undesirable,terms,but,reduces,their,overall,score;public,static,boosting,query,builder,boosting,query,query,builder,positive,query,query,builder,negative,query,return,new,boosting,query,builder,positive,query,negative,query
QueryBuilders -> public static BoostingQueryBuilder boostingQuery(QueryBuilder positiveQuery, QueryBuilder negativeQuery);1542748206;The BoostingQuery class can be used to effectively demote results that match a given query._Unlike the "NOT" clause, this still selects documents that contain undesirable terms,_but reduces their overall score:;public static BoostingQueryBuilder boostingQuery(QueryBuilder positiveQuery, QueryBuilder negativeQuery) {_        return new BoostingQueryBuilder(positiveQuery, negativeQuery)__    };the,boosting,query,class,can,be,used,to,effectively,demote,results,that,match,a,given,query,unlike,the,not,clause,this,still,selects,documents,that,contain,undesirable,terms,but,reduces,their,overall,score;public,static,boosting,query,builder,boosting,query,query,builder,positive,query,query,builder,negative,query,return,new,boosting,query,builder,positive,query,negative,query
QueryBuilders -> public static BoostingQueryBuilder boostingQuery(QueryBuilder positiveQuery, QueryBuilder negativeQuery);1547002001;The BoostingQuery class can be used to effectively demote results that match a given query._Unlike the "NOT" clause, this still selects documents that contain undesirable terms,_but reduces their overall score:;public static BoostingQueryBuilder boostingQuery(QueryBuilder positiveQuery, QueryBuilder negativeQuery) {_        return new BoostingQueryBuilder(positiveQuery, negativeQuery)__    };the,boosting,query,class,can,be,used,to,effectively,demote,results,that,match,a,given,query,unlike,the,not,clause,this,still,selects,documents,that,contain,undesirable,terms,but,reduces,their,overall,score;public,static,boosting,query,builder,boosting,query,query,builder,positive,query,query,builder,negative,query,return,new,boosting,query,builder,positive,query,negative,query
QueryBuilders -> public static MatchQueryBuilder matchQuery(String name, Object text);1524684173;Creates a match query with type "BOOLEAN" for the provided field name and text.__@param name The field name._@param text The query text (to be analyzed).;public static MatchQueryBuilder matchQuery(String name, Object text) {_        return new MatchQueryBuilder(name, text)__    };creates,a,match,query,with,type,boolean,for,the,provided,field,name,and,text,param,name,the,field,name,param,text,the,query,text,to,be,analyzed;public,static,match,query,builder,match,query,string,name,object,text,return,new,match,query,builder,name,text
QueryBuilders -> public static MatchQueryBuilder matchQuery(String name, Object text);1525334055;Creates a match query with type "BOOLEAN" for the provided field name and text.__@param name The field name._@param text The query text (to be analyzed).;public static MatchQueryBuilder matchQuery(String name, Object text) {_        return new MatchQueryBuilder(name, text)__    };creates,a,match,query,with,type,boolean,for,the,provided,field,name,and,text,param,name,the,field,name,param,text,the,query,text,to,be,analyzed;public,static,match,query,builder,match,query,string,name,object,text,return,new,match,query,builder,name,text
QueryBuilders -> public static MatchQueryBuilder matchQuery(String name, Object text);1542697754;Creates a match query with type "BOOLEAN" for the provided field name and text.__@param name The field name._@param text The query text (to be analyzed).;public static MatchQueryBuilder matchQuery(String name, Object text) {_        return new MatchQueryBuilder(name, text)__    };creates,a,match,query,with,type,boolean,for,the,provided,field,name,and,text,param,name,the,field,name,param,text,the,query,text,to,be,analyzed;public,static,match,query,builder,match,query,string,name,object,text,return,new,match,query,builder,name,text
QueryBuilders -> public static MatchQueryBuilder matchQuery(String name, Object text);1542748206;Creates a match query with type "BOOLEAN" for the provided field name and text.__@param name The field name._@param text The query text (to be analyzed).;public static MatchQueryBuilder matchQuery(String name, Object text) {_        return new MatchQueryBuilder(name, text)__    };creates,a,match,query,with,type,boolean,for,the,provided,field,name,and,text,param,name,the,field,name,param,text,the,query,text,to,be,analyzed;public,static,match,query,builder,match,query,string,name,object,text,return,new,match,query,builder,name,text
QueryBuilders -> public static MatchQueryBuilder matchQuery(String name, Object text);1547002001;Creates a match query with type "BOOLEAN" for the provided field name and text.__@param name The field name._@param text The query text (to be analyzed).;public static MatchQueryBuilder matchQuery(String name, Object text) {_        return new MatchQueryBuilder(name, text)__    };creates,a,match,query,with,type,boolean,for,the,provided,field,name,and,text,param,name,the,field,name,param,text,the,query,text,to,be,analyzed;public,static,match,query,builder,match,query,string,name,object,text,return,new,match,query,builder,name,text
QueryBuilders -> public static TermQueryBuilder termQuery(String name, long value);1524684173;A Query that matches documents containing a term.__@param name  The name of the field_@param value The value of the term;public static TermQueryBuilder termQuery(String name, long value) {_        return new TermQueryBuilder(name, value)__    };a,query,that,matches,documents,containing,a,term,param,name,the,name,of,the,field,param,value,the,value,of,the,term;public,static,term,query,builder,term,query,string,name,long,value,return,new,term,query,builder,name,value
QueryBuilders -> public static TermQueryBuilder termQuery(String name, long value);1525334055;A Query that matches documents containing a term.__@param name  The name of the field_@param value The value of the term;public static TermQueryBuilder termQuery(String name, long value) {_        return new TermQueryBuilder(name, value)__    };a,query,that,matches,documents,containing,a,term,param,name,the,name,of,the,field,param,value,the,value,of,the,term;public,static,term,query,builder,term,query,string,name,long,value,return,new,term,query,builder,name,value
QueryBuilders -> public static TermQueryBuilder termQuery(String name, long value);1542697754;A Query that matches documents containing a term.__@param name  The name of the field_@param value The value of the term;public static TermQueryBuilder termQuery(String name, long value) {_        return new TermQueryBuilder(name, value)__    };a,query,that,matches,documents,containing,a,term,param,name,the,name,of,the,field,param,value,the,value,of,the,term;public,static,term,query,builder,term,query,string,name,long,value,return,new,term,query,builder,name,value
QueryBuilders -> public static TermQueryBuilder termQuery(String name, long value);1542748206;A Query that matches documents containing a term.__@param name  The name of the field_@param value The value of the term;public static TermQueryBuilder termQuery(String name, long value) {_        return new TermQueryBuilder(name, value)__    };a,query,that,matches,documents,containing,a,term,param,name,the,name,of,the,field,param,value,the,value,of,the,term;public,static,term,query,builder,term,query,string,name,long,value,return,new,term,query,builder,name,value
QueryBuilders -> public static TermQueryBuilder termQuery(String name, long value);1547002001;A Query that matches documents containing a term.__@param name  The name of the field_@param value The value of the term;public static TermQueryBuilder termQuery(String name, long value) {_        return new TermQueryBuilder(name, value)__    };a,query,that,matches,documents,containing,a,term,param,name,the,name,of,the,field,param,value,the,value,of,the,term;public,static,term,query,builder,term,query,string,name,long,value,return,new,term,query,builder,name,value
QueryBuilders -> public static MoreLikeThisQueryBuilder moreLikeThisQuery(String[] fields, String[] likeTexts, Item[] likeItems);1524684173;A more like this query that finds documents that are "like" the provided texts or documents_which is checked against the fields the query is constructed with.__@param fields the field names that will be used when generating the 'More Like This' query._@param likeTexts the text to use when generating the 'More Like This' query._@param likeItems the documents to use when generating the 'More Like This' query.;public static MoreLikeThisQueryBuilder moreLikeThisQuery(String[] fields, String[] likeTexts, Item[] likeItems) {_        return new MoreLikeThisQueryBuilder(fields, likeTexts, likeItems)__    };a,more,like,this,query,that,finds,documents,that,are,like,the,provided,texts,or,documents,which,is,checked,against,the,fields,the,query,is,constructed,with,param,fields,the,field,names,that,will,be,used,when,generating,the,more,like,this,query,param,like,texts,the,text,to,use,when,generating,the,more,like,this,query,param,like,items,the,documents,to,use,when,generating,the,more,like,this,query;public,static,more,like,this,query,builder,more,like,this,query,string,fields,string,like,texts,item,like,items,return,new,more,like,this,query,builder,fields,like,texts,like,items
QueryBuilders -> public static MoreLikeThisQueryBuilder moreLikeThisQuery(String[] fields, String[] likeTexts, Item[] likeItems);1525334055;A more like this query that finds documents that are "like" the provided texts or documents_which is checked against the fields the query is constructed with.__@param fields the field names that will be used when generating the 'More Like This' query._@param likeTexts the text to use when generating the 'More Like This' query._@param likeItems the documents to use when generating the 'More Like This' query.;public static MoreLikeThisQueryBuilder moreLikeThisQuery(String[] fields, String[] likeTexts, Item[] likeItems) {_        return new MoreLikeThisQueryBuilder(fields, likeTexts, likeItems)__    };a,more,like,this,query,that,finds,documents,that,are,like,the,provided,texts,or,documents,which,is,checked,against,the,fields,the,query,is,constructed,with,param,fields,the,field,names,that,will,be,used,when,generating,the,more,like,this,query,param,like,texts,the,text,to,use,when,generating,the,more,like,this,query,param,like,items,the,documents,to,use,when,generating,the,more,like,this,query;public,static,more,like,this,query,builder,more,like,this,query,string,fields,string,like,texts,item,like,items,return,new,more,like,this,query,builder,fields,like,texts,like,items
QueryBuilders -> public static MoreLikeThisQueryBuilder moreLikeThisQuery(String[] fields, String[] likeTexts, Item[] likeItems);1542697754;A more like this query that finds documents that are "like" the provided texts or documents_which is checked against the fields the query is constructed with.__@param fields the field names that will be used when generating the 'More Like This' query._@param likeTexts the text to use when generating the 'More Like This' query._@param likeItems the documents to use when generating the 'More Like This' query.;public static MoreLikeThisQueryBuilder moreLikeThisQuery(String[] fields, String[] likeTexts, Item[] likeItems) {_        return new MoreLikeThisQueryBuilder(fields, likeTexts, likeItems)__    };a,more,like,this,query,that,finds,documents,that,are,like,the,provided,texts,or,documents,which,is,checked,against,the,fields,the,query,is,constructed,with,param,fields,the,field,names,that,will,be,used,when,generating,the,more,like,this,query,param,like,texts,the,text,to,use,when,generating,the,more,like,this,query,param,like,items,the,documents,to,use,when,generating,the,more,like,this,query;public,static,more,like,this,query,builder,more,like,this,query,string,fields,string,like,texts,item,like,items,return,new,more,like,this,query,builder,fields,like,texts,like,items
QueryBuilders -> public static MoreLikeThisQueryBuilder moreLikeThisQuery(String[] fields, String[] likeTexts, Item[] likeItems);1542748206;A more like this query that finds documents that are "like" the provided texts or documents_which is checked against the fields the query is constructed with.__@param fields the field names that will be used when generating the 'More Like This' query._@param likeTexts the text to use when generating the 'More Like This' query._@param likeItems the documents to use when generating the 'More Like This' query.;public static MoreLikeThisQueryBuilder moreLikeThisQuery(String[] fields, String[] likeTexts, Item[] likeItems) {_        return new MoreLikeThisQueryBuilder(fields, likeTexts, likeItems)__    };a,more,like,this,query,that,finds,documents,that,are,like,the,provided,texts,or,documents,which,is,checked,against,the,fields,the,query,is,constructed,with,param,fields,the,field,names,that,will,be,used,when,generating,the,more,like,this,query,param,like,texts,the,text,to,use,when,generating,the,more,like,this,query,param,like,items,the,documents,to,use,when,generating,the,more,like,this,query;public,static,more,like,this,query,builder,more,like,this,query,string,fields,string,like,texts,item,like,items,return,new,more,like,this,query,builder,fields,like,texts,like,items
QueryBuilders -> public static MoreLikeThisQueryBuilder moreLikeThisQuery(String[] fields, String[] likeTexts, Item[] likeItems);1547002001;A more like this query that finds documents that are "like" the provided texts or documents_which is checked against the fields the query is constructed with.__@param fields the field names that will be used when generating the 'More Like This' query._@param likeTexts the text to use when generating the 'More Like This' query._@param likeItems the documents to use when generating the 'More Like This' query.;public static MoreLikeThisQueryBuilder moreLikeThisQuery(String[] fields, String[] likeTexts, Item[] likeItems) {_        return new MoreLikeThisQueryBuilder(fields, likeTexts, likeItems)__    };a,more,like,this,query,that,finds,documents,that,are,like,the,provided,texts,or,documents,which,is,checked,against,the,fields,the,query,is,constructed,with,param,fields,the,field,names,that,will,be,used,when,generating,the,more,like,this,query,param,like,texts,the,text,to,use,when,generating,the,more,like,this,query,param,like,items,the,documents,to,use,when,generating,the,more,like,this,query;public,static,more,like,this,query,builder,more,like,this,query,string,fields,string,like,texts,item,like,items,return,new,more,like,this,query,builder,fields,like,texts,like,items
QueryBuilders -> public static GeoShapeQueryBuilder geoShapeQuery(String name, ShapeBuilder shape) throws IOException;1524684173;A filter based on the relationship of a shape and indexed shapes__@param name  The shape field name_@param shape Shape to use in the filter;public static GeoShapeQueryBuilder geoShapeQuery(String name, ShapeBuilder shape) throws IOException {_        return new GeoShapeQueryBuilder(name, shape)__    };a,filter,based,on,the,relationship,of,a,shape,and,indexed,shapes,param,name,the,shape,field,name,param,shape,shape,to,use,in,the,filter;public,static,geo,shape,query,builder,geo,shape,query,string,name,shape,builder,shape,throws,ioexception,return,new,geo,shape,query,builder,name,shape
QueryBuilders -> public static GeoShapeQueryBuilder geoShapeQuery(String name, ShapeBuilder shape) throws IOException;1525334055;A filter based on the relationship of a shape and indexed shapes__@param name  The shape field name_@param shape Shape to use in the filter;public static GeoShapeQueryBuilder geoShapeQuery(String name, ShapeBuilder shape) throws IOException {_        return new GeoShapeQueryBuilder(name, shape)__    };a,filter,based,on,the,relationship,of,a,shape,and,indexed,shapes,param,name,the,shape,field,name,param,shape,shape,to,use,in,the,filter;public,static,geo,shape,query,builder,geo,shape,query,string,name,shape,builder,shape,throws,ioexception,return,new,geo,shape,query,builder,name,shape
QueryBuilders -> public static GeoShapeQueryBuilder geoShapeQuery(String name, ShapeBuilder shape) throws IOException;1542697754;A filter based on the relationship of a shape and indexed shapes__@param name  The shape field name_@param shape Shape to use in the filter;public static GeoShapeQueryBuilder geoShapeQuery(String name, ShapeBuilder shape) throws IOException {_        return new GeoShapeQueryBuilder(name, shape)__    };a,filter,based,on,the,relationship,of,a,shape,and,indexed,shapes,param,name,the,shape,field,name,param,shape,shape,to,use,in,the,filter;public,static,geo,shape,query,builder,geo,shape,query,string,name,shape,builder,shape,throws,ioexception,return,new,geo,shape,query,builder,name,shape
QueryBuilders -> public static GeoShapeQueryBuilder geoShapeQuery(String name, ShapeBuilder shape) throws IOException;1542748206;A filter based on the relationship of a shape and indexed shapes__@param name  The shape field name_@param shape Shape to use in the filter;public static GeoShapeQueryBuilder geoShapeQuery(String name, ShapeBuilder shape) throws IOException {_        return new GeoShapeQueryBuilder(name, shape)__    };a,filter,based,on,the,relationship,of,a,shape,and,indexed,shapes,param,name,the,shape,field,name,param,shape,shape,to,use,in,the,filter;public,static,geo,shape,query,builder,geo,shape,query,string,name,shape,builder,shape,throws,ioexception,return,new,geo,shape,query,builder,name,shape
QueryBuilders -> public static GeoShapeQueryBuilder geoShapeQuery(String name, ShapeBuilder shape) throws IOException;1547002001;A filter based on the relationship of a shape and indexed shapes__@param name  The shape field name_@param shape Shape to use in the filter;public static GeoShapeQueryBuilder geoShapeQuery(String name, ShapeBuilder shape) throws IOException {_        return new GeoShapeQueryBuilder(name, shape)__    };a,filter,based,on,the,relationship,of,a,shape,and,indexed,shapes,param,name,the,shape,field,name,param,shape,shape,to,use,in,the,filter;public,static,geo,shape,query,builder,geo,shape,query,string,name,shape,builder,shape,throws,ioexception,return,new,geo,shape,query,builder,name,shape
QueryBuilders -> public static TermQueryBuilder termQuery(String name, String value);1524684173;A Query that matches documents containing a term.__@param name  The name of the field_@param value The value of the term;public static TermQueryBuilder termQuery(String name, String value) {_        return new TermQueryBuilder(name, value)__    };a,query,that,matches,documents,containing,a,term,param,name,the,name,of,the,field,param,value,the,value,of,the,term;public,static,term,query,builder,term,query,string,name,string,value,return,new,term,query,builder,name,value
QueryBuilders -> public static TermQueryBuilder termQuery(String name, String value);1525334055;A Query that matches documents containing a term.__@param name  The name of the field_@param value The value of the term;public static TermQueryBuilder termQuery(String name, String value) {_        return new TermQueryBuilder(name, value)__    };a,query,that,matches,documents,containing,a,term,param,name,the,name,of,the,field,param,value,the,value,of,the,term;public,static,term,query,builder,term,query,string,name,string,value,return,new,term,query,builder,name,value
QueryBuilders -> public static TermQueryBuilder termQuery(String name, String value);1542697754;A Query that matches documents containing a term.__@param name  The name of the field_@param value The value of the term;public static TermQueryBuilder termQuery(String name, String value) {_        return new TermQueryBuilder(name, value)__    };a,query,that,matches,documents,containing,a,term,param,name,the,name,of,the,field,param,value,the,value,of,the,term;public,static,term,query,builder,term,query,string,name,string,value,return,new,term,query,builder,name,value
QueryBuilders -> public static TermQueryBuilder termQuery(String name, String value);1542748206;A Query that matches documents containing a term.__@param name  The name of the field_@param value The value of the term;public static TermQueryBuilder termQuery(String name, String value) {_        return new TermQueryBuilder(name, value)__    };a,query,that,matches,documents,containing,a,term,param,name,the,name,of,the,field,param,value,the,value,of,the,term;public,static,term,query,builder,term,query,string,name,string,value,return,new,term,query,builder,name,value
QueryBuilders -> public static TermQueryBuilder termQuery(String name, String value);1547002001;A Query that matches documents containing a term.__@param name  The name of the field_@param value The value of the term;public static TermQueryBuilder termQuery(String name, String value) {_        return new TermQueryBuilder(name, value)__    };a,query,that,matches,documents,containing,a,term,param,name,the,name,of,the,field,param,value,the,value,of,the,term;public,static,term,query,builder,term,query,string,name,string,value,return,new,term,query,builder,name,value
QueryBuilders -> public static MultiMatchQueryBuilder multiMatchQuery(Object text, String... fieldNames);1524684173;Creates a match query with type "BOOLEAN" for the provided field name and text.__@param fieldNames The field names._@param text       The query text (to be analyzed).;public static MultiMatchQueryBuilder multiMatchQuery(Object text, String... fieldNames) {_        return new MultiMatchQueryBuilder(text, fieldNames)_ _    };creates,a,match,query,with,type,boolean,for,the,provided,field,name,and,text,param,field,names,the,field,names,param,text,the,query,text,to,be,analyzed;public,static,multi,match,query,builder,multi,match,query,object,text,string,field,names,return,new,multi,match,query,builder,text,field,names
QueryBuilders -> public static MultiMatchQueryBuilder multiMatchQuery(Object text, String... fieldNames);1525334055;Creates a match query with type "BOOLEAN" for the provided field name and text.__@param fieldNames The field names._@param text       The query text (to be analyzed).;public static MultiMatchQueryBuilder multiMatchQuery(Object text, String... fieldNames) {_        return new MultiMatchQueryBuilder(text, fieldNames)_ _    };creates,a,match,query,with,type,boolean,for,the,provided,field,name,and,text,param,field,names,the,field,names,param,text,the,query,text,to,be,analyzed;public,static,multi,match,query,builder,multi,match,query,object,text,string,field,names,return,new,multi,match,query,builder,text,field,names
QueryBuilders -> public static MultiMatchQueryBuilder multiMatchQuery(Object text, String... fieldNames);1542697754;Creates a match query with type "BOOLEAN" for the provided field name and text.__@param fieldNames The field names._@param text       The query text (to be analyzed).;public static MultiMatchQueryBuilder multiMatchQuery(Object text, String... fieldNames) {_        return new MultiMatchQueryBuilder(text, fieldNames)_ _    };creates,a,match,query,with,type,boolean,for,the,provided,field,name,and,text,param,field,names,the,field,names,param,text,the,query,text,to,be,analyzed;public,static,multi,match,query,builder,multi,match,query,object,text,string,field,names,return,new,multi,match,query,builder,text,field,names
QueryBuilders -> public static MultiMatchQueryBuilder multiMatchQuery(Object text, String... fieldNames);1542748206;Creates a match query with type "BOOLEAN" for the provided field name and text.__@param fieldNames The field names._@param text       The query text (to be analyzed).;public static MultiMatchQueryBuilder multiMatchQuery(Object text, String... fieldNames) {_        return new MultiMatchQueryBuilder(text, fieldNames)_ _    };creates,a,match,query,with,type,boolean,for,the,provided,field,name,and,text,param,field,names,the,field,names,param,text,the,query,text,to,be,analyzed;public,static,multi,match,query,builder,multi,match,query,object,text,string,field,names,return,new,multi,match,query,builder,text,field,names
QueryBuilders -> public static MultiMatchQueryBuilder multiMatchQuery(Object text, String... fieldNames);1547002001;Creates a match query with type "BOOLEAN" for the provided field name and text.__@param fieldNames The field names._@param text       The query text (to be analyzed).;public static MultiMatchQueryBuilder multiMatchQuery(Object text, String... fieldNames) {_        return new MultiMatchQueryBuilder(text, fieldNames)_ _    };creates,a,match,query,with,type,boolean,for,the,provided,field,name,and,text,param,field,names,the,field,names,param,text,the,query,text,to,be,analyzed;public,static,multi,match,query,builder,multi,match,query,object,text,string,field,names,return,new,multi,match,query,builder,text,field,names
QueryBuilders -> public static TermQueryBuilder termQuery(String name, double value);1524684173;A Query that matches documents containing a term.__@param name  The name of the field_@param value The value of the term;public static TermQueryBuilder termQuery(String name, double value) {_        return new TermQueryBuilder(name, value)__    };a,query,that,matches,documents,containing,a,term,param,name,the,name,of,the,field,param,value,the,value,of,the,term;public,static,term,query,builder,term,query,string,name,double,value,return,new,term,query,builder,name,value
QueryBuilders -> public static TermQueryBuilder termQuery(String name, double value);1525334055;A Query that matches documents containing a term.__@param name  The name of the field_@param value The value of the term;public static TermQueryBuilder termQuery(String name, double value) {_        return new TermQueryBuilder(name, value)__    };a,query,that,matches,documents,containing,a,term,param,name,the,name,of,the,field,param,value,the,value,of,the,term;public,static,term,query,builder,term,query,string,name,double,value,return,new,term,query,builder,name,value
QueryBuilders -> public static TermQueryBuilder termQuery(String name, double value);1542697754;A Query that matches documents containing a term.__@param name  The name of the field_@param value The value of the term;public static TermQueryBuilder termQuery(String name, double value) {_        return new TermQueryBuilder(name, value)__    };a,query,that,matches,documents,containing,a,term,param,name,the,name,of,the,field,param,value,the,value,of,the,term;public,static,term,query,builder,term,query,string,name,double,value,return,new,term,query,builder,name,value
QueryBuilders -> public static TermQueryBuilder termQuery(String name, double value);1542748206;A Query that matches documents containing a term.__@param name  The name of the field_@param value The value of the term;public static TermQueryBuilder termQuery(String name, double value) {_        return new TermQueryBuilder(name, value)__    };a,query,that,matches,documents,containing,a,term,param,name,the,name,of,the,field,param,value,the,value,of,the,term;public,static,term,query,builder,term,query,string,name,double,value,return,new,term,query,builder,name,value
QueryBuilders -> public static TermQueryBuilder termQuery(String name, double value);1547002001;A Query that matches documents containing a term.__@param name  The name of the field_@param value The value of the term;public static TermQueryBuilder termQuery(String name, double value) {_        return new TermQueryBuilder(name, value)__    };a,query,that,matches,documents,containing,a,term,param,name,the,name,of,the,field,param,value,the,value,of,the,term;public,static,term,query,builder,term,query,string,name,double,value,return,new,term,query,builder,name,value
QueryBuilders -> public static BoolQueryBuilder boolQuery();1524684173;A Query that matches documents matching boolean combinations of other queries.;public static BoolQueryBuilder boolQuery() {_        return new BoolQueryBuilder()__    };a,query,that,matches,documents,matching,boolean,combinations,of,other,queries;public,static,bool,query,builder,bool,query,return,new,bool,query,builder
QueryBuilders -> public static BoolQueryBuilder boolQuery();1525334055;A Query that matches documents matching boolean combinations of other queries.;public static BoolQueryBuilder boolQuery() {_        return new BoolQueryBuilder()__    };a,query,that,matches,documents,matching,boolean,combinations,of,other,queries;public,static,bool,query,builder,bool,query,return,new,bool,query,builder
QueryBuilders -> public static BoolQueryBuilder boolQuery();1542697754;A Query that matches documents matching boolean combinations of other queries.;public static BoolQueryBuilder boolQuery() {_        return new BoolQueryBuilder()__    };a,query,that,matches,documents,matching,boolean,combinations,of,other,queries;public,static,bool,query,builder,bool,query,return,new,bool,query,builder
QueryBuilders -> public static BoolQueryBuilder boolQuery();1542748206;A Query that matches documents matching boolean combinations of other queries.;public static BoolQueryBuilder boolQuery() {_        return new BoolQueryBuilder()__    };a,query,that,matches,documents,matching,boolean,combinations,of,other,queries;public,static,bool,query,builder,bool,query,return,new,bool,query,builder
QueryBuilders -> public static BoolQueryBuilder boolQuery();1547002001;A Query that matches documents matching boolean combinations of other queries.;public static BoolQueryBuilder boolQuery() {_        return new BoolQueryBuilder()__    };a,query,that,matches,documents,matching,boolean,combinations,of,other,queries;public,static,bool,query,builder,bool,query,return,new,bool,query,builder
QueryBuilders -> public static MatchPhrasePrefixQueryBuilder matchPhrasePrefixQuery(String name, Object text);1524684173;Creates a match query with type "PHRASE_PREFIX" for the provided field name and text.__@param name The field name._@param text The query text (to be analyzed).;public static MatchPhrasePrefixQueryBuilder matchPhrasePrefixQuery(String name, Object text) {_        return new MatchPhrasePrefixQueryBuilder(name, text)__    };creates,a,match,query,with,type,for,the,provided,field,name,and,text,param,name,the,field,name,param,text,the,query,text,to,be,analyzed;public,static,match,phrase,prefix,query,builder,match,phrase,prefix,query,string,name,object,text,return,new,match,phrase,prefix,query,builder,name,text
QueryBuilders -> public static MatchPhrasePrefixQueryBuilder matchPhrasePrefixQuery(String name, Object text);1525334055;Creates a match query with type "PHRASE_PREFIX" for the provided field name and text.__@param name The field name._@param text The query text (to be analyzed).;public static MatchPhrasePrefixQueryBuilder matchPhrasePrefixQuery(String name, Object text) {_        return new MatchPhrasePrefixQueryBuilder(name, text)__    };creates,a,match,query,with,type,for,the,provided,field,name,and,text,param,name,the,field,name,param,text,the,query,text,to,be,analyzed;public,static,match,phrase,prefix,query,builder,match,phrase,prefix,query,string,name,object,text,return,new,match,phrase,prefix,query,builder,name,text
QueryBuilders -> public static MatchPhrasePrefixQueryBuilder matchPhrasePrefixQuery(String name, Object text);1542697754;Creates a match query with type "PHRASE_PREFIX" for the provided field name and text.__@param name The field name._@param text The query text (to be analyzed).;public static MatchPhrasePrefixQueryBuilder matchPhrasePrefixQuery(String name, Object text) {_        return new MatchPhrasePrefixQueryBuilder(name, text)__    };creates,a,match,query,with,type,for,the,provided,field,name,and,text,param,name,the,field,name,param,text,the,query,text,to,be,analyzed;public,static,match,phrase,prefix,query,builder,match,phrase,prefix,query,string,name,object,text,return,new,match,phrase,prefix,query,builder,name,text
QueryBuilders -> public static MatchPhrasePrefixQueryBuilder matchPhrasePrefixQuery(String name, Object text);1542748206;Creates a match query with type "PHRASE_PREFIX" for the provided field name and text.__@param name The field name._@param text The query text (to be analyzed).;public static MatchPhrasePrefixQueryBuilder matchPhrasePrefixQuery(String name, Object text) {_        return new MatchPhrasePrefixQueryBuilder(name, text)__    };creates,a,match,query,with,type,for,the,provided,field,name,and,text,param,name,the,field,name,param,text,the,query,text,to,be,analyzed;public,static,match,phrase,prefix,query,builder,match,phrase,prefix,query,string,name,object,text,return,new,match,phrase,prefix,query,builder,name,text
QueryBuilders -> public static MatchPhrasePrefixQueryBuilder matchPhrasePrefixQuery(String name, Object text);1547002001;Creates a match query with type "PHRASE_PREFIX" for the provided field name and text.__@param name The field name._@param text The query text (to be analyzed).;public static MatchPhrasePrefixQueryBuilder matchPhrasePrefixQuery(String name, Object text) {_        return new MatchPhrasePrefixQueryBuilder(name, text)__    };creates,a,match,query,with,type,for,the,provided,field,name,and,text,param,name,the,field,name,param,text,the,query,text,to,be,analyzed;public,static,match,phrase,prefix,query,builder,match,phrase,prefix,query,string,name,object,text,return,new,match,phrase,prefix,query,builder,name,text
QueryBuilders -> public static SpanContainingQueryBuilder spanContainingQuery(SpanQueryBuilder big, SpanQueryBuilder little);1524684173;Creates a new {@code span_containing} builder._@param big the big clause, it must enclose {@code little} for a match._@param little the little clause, it must be contained within {@code big} for a match.;public static SpanContainingQueryBuilder spanContainingQuery(SpanQueryBuilder big, SpanQueryBuilder little) {_        return new SpanContainingQueryBuilder(big, little)__    };creates,a,new,code,builder,param,big,the,big,clause,it,must,enclose,code,little,for,a,match,param,little,the,little,clause,it,must,be,contained,within,code,big,for,a,match;public,static,span,containing,query,builder,span,containing,query,span,query,builder,big,span,query,builder,little,return,new,span,containing,query,builder,big,little
QueryBuilders -> public static SpanContainingQueryBuilder spanContainingQuery(SpanQueryBuilder big, SpanQueryBuilder little);1525334055;Creates a new {@code span_containing} builder._@param big the big clause, it must enclose {@code little} for a match._@param little the little clause, it must be contained within {@code big} for a match.;public static SpanContainingQueryBuilder spanContainingQuery(SpanQueryBuilder big, SpanQueryBuilder little) {_        return new SpanContainingQueryBuilder(big, little)__    };creates,a,new,code,builder,param,big,the,big,clause,it,must,enclose,code,little,for,a,match,param,little,the,little,clause,it,must,be,contained,within,code,big,for,a,match;public,static,span,containing,query,builder,span,containing,query,span,query,builder,big,span,query,builder,little,return,new,span,containing,query,builder,big,little
QueryBuilders -> public static SpanContainingQueryBuilder spanContainingQuery(SpanQueryBuilder big, SpanQueryBuilder little);1542697754;Creates a new {@code span_containing} builder._@param big the big clause, it must enclose {@code little} for a match._@param little the little clause, it must be contained within {@code big} for a match.;public static SpanContainingQueryBuilder spanContainingQuery(SpanQueryBuilder big, SpanQueryBuilder little) {_        return new SpanContainingQueryBuilder(big, little)__    };creates,a,new,code,builder,param,big,the,big,clause,it,must,enclose,code,little,for,a,match,param,little,the,little,clause,it,must,be,contained,within,code,big,for,a,match;public,static,span,containing,query,builder,span,containing,query,span,query,builder,big,span,query,builder,little,return,new,span,containing,query,builder,big,little
QueryBuilders -> public static SpanContainingQueryBuilder spanContainingQuery(SpanQueryBuilder big, SpanQueryBuilder little);1542748206;Creates a new {@code span_containing} builder._@param big the big clause, it must enclose {@code little} for a match._@param little the little clause, it must be contained within {@code big} for a match.;public static SpanContainingQueryBuilder spanContainingQuery(SpanQueryBuilder big, SpanQueryBuilder little) {_        return new SpanContainingQueryBuilder(big, little)__    };creates,a,new,code,builder,param,big,the,big,clause,it,must,enclose,code,little,for,a,match,param,little,the,little,clause,it,must,be,contained,within,code,big,for,a,match;public,static,span,containing,query,builder,span,containing,query,span,query,builder,big,span,query,builder,little,return,new,span,containing,query,builder,big,little
QueryBuilders -> public static SpanContainingQueryBuilder spanContainingQuery(SpanQueryBuilder big, SpanQueryBuilder little);1547002001;Creates a new {@code span_containing} builder._@param big the big clause, it must enclose {@code little} for a match._@param little the little clause, it must be contained within {@code big} for a match.;public static SpanContainingQueryBuilder spanContainingQuery(SpanQueryBuilder big, SpanQueryBuilder little) {_        return new SpanContainingQueryBuilder(big, little)__    };creates,a,new,code,builder,param,big,the,big,clause,it,must,enclose,code,little,for,a,match,param,little,the,little,clause,it,must,be,contained,within,code,big,for,a,match;public,static,span,containing,query,builder,span,containing,query,span,query,builder,big,span,query,builder,little,return,new,span,containing,query,builder,big,little
QueryBuilders -> public static TermsQueryBuilder termsLookupQuery(String name, TermsLookup termsLookup);1524684173;A terms query that can extract the terms from another doc in an index.;public static TermsQueryBuilder termsLookupQuery(String name, TermsLookup termsLookup) {_        return new TermsQueryBuilder(name, termsLookup)__    };a,terms,query,that,can,extract,the,terms,from,another,doc,in,an,index;public,static,terms,query,builder,terms,lookup,query,string,name,terms,lookup,terms,lookup,return,new,terms,query,builder,name,terms,lookup
QueryBuilders -> public static TermsQueryBuilder termsLookupQuery(String name, TermsLookup termsLookup);1525334055;A terms query that can extract the terms from another doc in an index.;public static TermsQueryBuilder termsLookupQuery(String name, TermsLookup termsLookup) {_        return new TermsQueryBuilder(name, termsLookup)__    };a,terms,query,that,can,extract,the,terms,from,another,doc,in,an,index;public,static,terms,query,builder,terms,lookup,query,string,name,terms,lookup,terms,lookup,return,new,terms,query,builder,name,terms,lookup
QueryBuilders -> public static TermsQueryBuilder termsLookupQuery(String name, TermsLookup termsLookup);1542697754;A terms query that can extract the terms from another doc in an index.;public static TermsQueryBuilder termsLookupQuery(String name, TermsLookup termsLookup) {_        return new TermsQueryBuilder(name, termsLookup)__    };a,terms,query,that,can,extract,the,terms,from,another,doc,in,an,index;public,static,terms,query,builder,terms,lookup,query,string,name,terms,lookup,terms,lookup,return,new,terms,query,builder,name,terms,lookup
QueryBuilders -> public static TermsQueryBuilder termsLookupQuery(String name, TermsLookup termsLookup);1542748206;A terms query that can extract the terms from another doc in an index.;public static TermsQueryBuilder termsLookupQuery(String name, TermsLookup termsLookup) {_        return new TermsQueryBuilder(name, termsLookup)__    };a,terms,query,that,can,extract,the,terms,from,another,doc,in,an,index;public,static,terms,query,builder,terms,lookup,query,string,name,terms,lookup,terms,lookup,return,new,terms,query,builder,name,terms,lookup
QueryBuilders -> public static TermsQueryBuilder termsLookupQuery(String name, TermsLookup termsLookup);1547002001;A terms query that can extract the terms from another doc in an index.;public static TermsQueryBuilder termsLookupQuery(String name, TermsLookup termsLookup) {_        return new TermsQueryBuilder(name, termsLookup)__    };a,terms,query,that,can,extract,the,terms,from,another,doc,in,an,index;public,static,terms,query,builder,terms,lookup,query,string,name,terms,lookup,terms,lookup,return,new,terms,query,builder,name,terms,lookup
QueryBuilders -> public static IdsQueryBuilder idsQuery(String... types);1524684173;Constructs a query that will match only specific ids within types.__@param types The mapping/doc type;public static IdsQueryBuilder idsQuery(String... types) {_        return new IdsQueryBuilder().types(types)__    };constructs,a,query,that,will,match,only,specific,ids,within,types,param,types,the,mapping,doc,type;public,static,ids,query,builder,ids,query,string,types,return,new,ids,query,builder,types,types
QueryBuilders -> public static IdsQueryBuilder idsQuery(String... types);1525334055;Constructs a query that will match only specific ids within types.__@param types The mapping/doc type;public static IdsQueryBuilder idsQuery(String... types) {_        return new IdsQueryBuilder().types(types)__    };constructs,a,query,that,will,match,only,specific,ids,within,types,param,types,the,mapping,doc,type;public,static,ids,query,builder,ids,query,string,types,return,new,ids,query,builder,types,types
QueryBuilders -> public static IdsQueryBuilder idsQuery(String... types);1542697754;Constructs a query that will match only specific ids within types.__@param types The mapping/doc type;public static IdsQueryBuilder idsQuery(String... types) {_        return new IdsQueryBuilder().types(types)__    };constructs,a,query,that,will,match,only,specific,ids,within,types,param,types,the,mapping,doc,type;public,static,ids,query,builder,ids,query,string,types,return,new,ids,query,builder,types,types
QueryBuilders -> public static IdsQueryBuilder idsQuery(String... types);1542748206;Constructs a query that will match only specific ids within types.__@param types The mapping/doc type;public static IdsQueryBuilder idsQuery(String... types) {_        return new IdsQueryBuilder().types(types)__    };constructs,a,query,that,will,match,only,specific,ids,within,types,param,types,the,mapping,doc,type;public,static,ids,query,builder,ids,query,string,types,return,new,ids,query,builder,types,types
QueryBuilders -> public static WildcardQueryBuilder wildcardQuery(String name, String query);1524684173;Implements the wildcard search query. Supported wildcards are <tt>*</tt>, which_matches any character sequence (including the empty one), and <tt>?</tt>,_which matches any single character. Note this query can be slow, as it_needs to iterate over many terms. In order to prevent extremely slow WildcardQueries,_a Wildcard term should not start with one of the wildcards <tt>*</tt> or_<tt>?</tt>.__@param name  The field name_@param query The wildcard query string;public static WildcardQueryBuilder wildcardQuery(String name, String query) {_        return new WildcardQueryBuilder(name, query)__    };implements,the,wildcard,search,query,supported,wildcards,are,tt,tt,which,matches,any,character,sequence,including,the,empty,one,and,tt,tt,which,matches,any,single,character,note,this,query,can,be,slow,as,it,needs,to,iterate,over,many,terms,in,order,to,prevent,extremely,slow,wildcard,queries,a,wildcard,term,should,not,start,with,one,of,the,wildcards,tt,tt,or,tt,tt,param,name,the,field,name,param,query,the,wildcard,query,string;public,static,wildcard,query,builder,wildcard,query,string,name,string,query,return,new,wildcard,query,builder,name,query
QueryBuilders -> public static WildcardQueryBuilder wildcardQuery(String name, String query);1525334055;Implements the wildcard search query. Supported wildcards are {@code *}, which_matches any character sequence (including the empty one), and {@code ?},_which matches any single character. Note this query can be slow, as it_needs to iterate over many terms. In order to prevent extremely slow WildcardQueries,_a Wildcard term should not start with one of the wildcards {@code *} or_{@code ?}.__@param name  The field name_@param query The wildcard query string;public static WildcardQueryBuilder wildcardQuery(String name, String query) {_        return new WildcardQueryBuilder(name, query)__    };implements,the,wildcard,search,query,supported,wildcards,are,code,which,matches,any,character,sequence,including,the,empty,one,and,code,which,matches,any,single,character,note,this,query,can,be,slow,as,it,needs,to,iterate,over,many,terms,in,order,to,prevent,extremely,slow,wildcard,queries,a,wildcard,term,should,not,start,with,one,of,the,wildcards,code,or,code,param,name,the,field,name,param,query,the,wildcard,query,string;public,static,wildcard,query,builder,wildcard,query,string,name,string,query,return,new,wildcard,query,builder,name,query
QueryBuilders -> public static WildcardQueryBuilder wildcardQuery(String name, String query);1542697754;Implements the wildcard search query. Supported wildcards are {@code *}, which_matches any character sequence (including the empty one), and {@code ?},_which matches any single character. Note this query can be slow, as it_needs to iterate over many terms. In order to prevent extremely slow WildcardQueries,_a Wildcard term should not start with one of the wildcards {@code *} or_{@code ?}.__@param name  The field name_@param query The wildcard query string;public static WildcardQueryBuilder wildcardQuery(String name, String query) {_        return new WildcardQueryBuilder(name, query)__    };implements,the,wildcard,search,query,supported,wildcards,are,code,which,matches,any,character,sequence,including,the,empty,one,and,code,which,matches,any,single,character,note,this,query,can,be,slow,as,it,needs,to,iterate,over,many,terms,in,order,to,prevent,extremely,slow,wildcard,queries,a,wildcard,term,should,not,start,with,one,of,the,wildcards,code,or,code,param,name,the,field,name,param,query,the,wildcard,query,string;public,static,wildcard,query,builder,wildcard,query,string,name,string,query,return,new,wildcard,query,builder,name,query
QueryBuilders -> public static WildcardQueryBuilder wildcardQuery(String name, String query);1542748206;Implements the wildcard search query. Supported wildcards are {@code *}, which_matches any character sequence (including the empty one), and {@code ?},_which matches any single character. Note this query can be slow, as it_needs to iterate over many terms. In order to prevent extremely slow WildcardQueries,_a Wildcard term should not start with one of the wildcards {@code *} or_{@code ?}.__@param name  The field name_@param query The wildcard query string;public static WildcardQueryBuilder wildcardQuery(String name, String query) {_        return new WildcardQueryBuilder(name, query)__    };implements,the,wildcard,search,query,supported,wildcards,are,code,which,matches,any,character,sequence,including,the,empty,one,and,code,which,matches,any,single,character,note,this,query,can,be,slow,as,it,needs,to,iterate,over,many,terms,in,order,to,prevent,extremely,slow,wildcard,queries,a,wildcard,term,should,not,start,with,one,of,the,wildcards,code,or,code,param,name,the,field,name,param,query,the,wildcard,query,string;public,static,wildcard,query,builder,wildcard,query,string,name,string,query,return,new,wildcard,query,builder,name,query
QueryBuilders -> public static WildcardQueryBuilder wildcardQuery(String name, String query);1547002001;Implements the wildcard search query. Supported wildcards are {@code *}, which_matches any character sequence (including the empty one), and {@code ?},_which matches any single character. Note this query can be slow, as it_needs to iterate over many terms. In order to prevent extremely slow WildcardQueries,_a Wildcard term should not start with one of the wildcards {@code *} or_{@code ?}.__@param name  The field name_@param query The wildcard query string;public static WildcardQueryBuilder wildcardQuery(String name, String query) {_        return new WildcardQueryBuilder(name, query)__    };implements,the,wildcard,search,query,supported,wildcards,are,code,which,matches,any,character,sequence,including,the,empty,one,and,code,which,matches,any,single,character,note,this,query,can,be,slow,as,it,needs,to,iterate,over,many,terms,in,order,to,prevent,extremely,slow,wildcard,queries,a,wildcard,term,should,not,start,with,one,of,the,wildcards,code,or,code,param,name,the,field,name,param,query,the,wildcard,query,string;public,static,wildcard,query,builder,wildcard,query,string,name,string,query,return,new,wildcard,query,builder,name,query
