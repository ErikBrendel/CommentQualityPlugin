commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public int getStatus() {     return status. }
false;public,static;1;3;;public static RestStatus readFrom(StreamInput in) throws IOException {     return RestStatus.valueOf(in.readString()). }
false;public,static;2;3;;public static void writeTo(StreamOutput out, RestStatus status) throws IOException {     out.writeString(status.name()). }
false;public,static;3;19;;public static RestStatus status(int successfulShards, int totalShards, ShardOperationFailedException... failures) {     if (failures.length == 0) {         if (successfulShards == 0 && totalShards > 0) {             return RestStatus.SERVICE_UNAVAILABLE.         }         return RestStatus.OK.     }     RestStatus status = RestStatus.OK.     if (successfulShards == 0 && totalShards > 0) {         for (ShardOperationFailedException failure : failures) {             RestStatus shardStatus = failure.status().             if (shardStatus.getStatus() >= status.getStatus()) {                 status = failure.status().             }         }         return status.     }     return status. }
true;public,static;1;3;/**  * Turn a status code into a {@link RestStatus}, returning null if we don't know that status.  */ ;/**  * Turn a status code into a {@link RestStatus}, returning null if we don't know that status.  */ public static RestStatus fromCode(int code) {     return CODE_TO_STATUS.get(code). }
