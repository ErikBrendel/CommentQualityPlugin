# id;timestamp;commentText;codeText;commentWords;codeWords
VerifyRepositoryResponse -> NodeView -> DiscoveryNode convertToDiscoveryNode();1527096592;Temporary method that allows turning a {@link NodeView} into a {@link DiscoveryNode}. This representation will never be used in_practice, because in >= 6.4 a consumer of the response will only be able to retrieve a representation of {@link NodeView}_objects.__Effectively this will be used to hold the state of the object in 6.x so there is no need to have 2 backing objects that_represent the state of the Response. In practice these will always be read by a consumer as a NodeView, but it eases the_transition to master which will not contain any representation of a {@link DiscoveryNode}.;DiscoveryNode convertToDiscoveryNode() {_            return new DiscoveryNode(name, nodeId, "", "", "", new TransportAddress(TransportAddress.META_ADDRESS, 0),_                Collections.emptyMap(), Collections.emptySet(), Version.CURRENT)__        };temporary,method,that,allows,turning,a,link,node,view,into,a,link,discovery,node,this,representation,will,never,be,used,in,practice,because,in,6,4,a,consumer,of,the,response,will,only,be,able,to,retrieve,a,representation,of,link,node,view,objects,effectively,this,will,be,used,to,hold,the,state,of,the,object,in,6,x,so,there,is,no,need,to,have,2,backing,objects,that,represent,the,state,of,the,response,in,practice,these,will,always,be,read,by,a,consumer,as,a,node,view,but,it,eases,the,transition,to,master,which,will,not,contain,any,representation,of,a,link,discovery,node;discovery,node,convert,to,discovery,node,return,new,discovery,node,name,node,id,new,transport,address,transport,address,0,collections,empty,map,collections,empty,set,version,current
VerifyRepositoryResponse -> NodeView -> DiscoveryNode convertToDiscoveryNode();1527583663;Temporary method that allows turning a {@link NodeView} into a {@link DiscoveryNode}. This representation will never be used in_practice, because in >= 6.4 a consumer of the response will only be able to retrieve a representation of {@link NodeView}_objects.__Effectively this will be used to hold the state of the object in 6.x so there is no need to have 2 backing objects that_represent the state of the Response. In practice these will always be read by a consumer as a NodeView, but it eases the_transition to master which will not contain any representation of a {@link DiscoveryNode}.;DiscoveryNode convertToDiscoveryNode() {_            return new DiscoveryNode(name, nodeId, "", "", "", new TransportAddress(TransportAddress.META_ADDRESS, 0),_                Collections.emptyMap(), Collections.emptySet(), Version.CURRENT)__        };temporary,method,that,allows,turning,a,link,node,view,into,a,link,discovery,node,this,representation,will,never,be,used,in,practice,because,in,6,4,a,consumer,of,the,response,will,only,be,able,to,retrieve,a,representation,of,link,node,view,objects,effectively,this,will,be,used,to,hold,the,state,of,the,object,in,6,x,so,there,is,no,need,to,have,2,backing,objects,that,represent,the,state,of,the,response,in,practice,these,will,always,be,read,by,a,consumer,as,a,node,view,but,it,eases,the,transition,to,master,which,will,not,contain,any,representation,of,a,link,discovery,node;discovery,node,convert,to,discovery,node,return,new,discovery,node,name,node,id,new,transport,address,transport,address,0,collections,empty,map,collections,empty,set,version,current
VerifyRepositoryResponse -> NodeView -> DiscoveryNode convertToDiscoveryNode();1527773340;Temporary method that allows turning a {@link NodeView} into a {@link DiscoveryNode}. This representation will never be used in_practice, because in >= 6.4 a consumer of the response will only be able to retrieve a representation of {@link NodeView}_objects.__Effectively this will be used to hold the state of the object in 6.x so there is no need to have 2 backing objects that_represent the state of the Response. In practice these will always be read by a consumer as a NodeView, but it eases the_transition to master which will not contain any representation of a {@link DiscoveryNode}.;DiscoveryNode convertToDiscoveryNode() {_            return new DiscoveryNode(name, nodeId, "", "", "", new TransportAddress(TransportAddress.META_ADDRESS, 0),_                Collections.emptyMap(), Collections.emptySet(), Version.CURRENT)__        };temporary,method,that,allows,turning,a,link,node,view,into,a,link,discovery,node,this,representation,will,never,be,used,in,practice,because,in,6,4,a,consumer,of,the,response,will,only,be,able,to,retrieve,a,representation,of,link,node,view,objects,effectively,this,will,be,used,to,hold,the,state,of,the,object,in,6,x,so,there,is,no,need,to,have,2,backing,objects,that,represent,the,state,of,the,response,in,practice,these,will,always,be,read,by,a,consumer,as,a,node,view,but,it,eases,the,transition,to,master,which,will,not,contain,any,representation,of,a,link,discovery,node;discovery,node,convert,to,discovery,node,return,new,discovery,node,name,node,id,new,transport,address,transport,address,0,collections,empty,map,collections,empty,set,version,current
