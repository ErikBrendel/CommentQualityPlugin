commented;modifiers;parameterAmount;loc;comment;code
true;public;1;5;/**  * Adds / merges the given field memory stats into this stats instance  */ ;/**  * Adds / merges the given field memory stats into this stats instance  */ public void add(FieldMemoryStats fieldMemoryStats) {     for (ObjectLongCursor<String> entry : fieldMemoryStats.stats) {         stats.addTo(entry.key, entry.value).     } }
false;public;1;8;;@Override public void writeTo(StreamOutput out) throws IOException {     out.writeVInt(stats.size()).     for (ObjectLongCursor<String> entry : stats) {         out.writeString(entry.key).         out.writeVLong(entry.value).     } }
true;public;4;9;/**  * Generates x-content into the given builder for each of the fields in this stats instance  * @param builder the builder to generated on  * @param key the top level key for this stats object  * @param rawKey the raw byte key for each of the fields byte sizes  * @param readableKey the readable key for each of the fields byte sizes  */ ;/**  * Generates x-content into the given builder for each of the fields in this stats instance  * @param builder the builder to generated on  * @param key the top level key for this stats object  * @param rawKey the raw byte key for each of the fields byte sizes  * @param readableKey the readable key for each of the fields byte sizes  */ public void toXContent(XContentBuilder builder, String key, String rawKey, String readableKey) throws IOException {     builder.startObject(key).     for (ObjectLongCursor<String> entry : stats) {         builder.startObject(entry.key).         builder.humanReadableField(rawKey, readableKey, new ByteSizeValue(entry.value)).         builder.endObject().     }     builder.endObject(). }
true;public;0;3;/**  * Creates a deep copy of this stats instance  */ ;/**  * Creates a deep copy of this stats instance  */ public FieldMemoryStats copy() {     return new FieldMemoryStats(stats.clone()). }
false;public;1;7;;@Override public boolean equals(Object o) {     if (this == o)         return true.     if (o == null || getClass() != o.getClass())         return false.     FieldMemoryStats that = (FieldMemoryStats) o.     return Objects.equals(stats, that.stats). }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(stats). }
false;public;0;4;;@Override public Iterator<ObjectLongCursor<String>> iterator() {     return stats.iterator(). }
true;public;1;3;/**  * Returns the fields value in bytes or <code>0</code> if it's not present in the stats  */ ;/**  * Returns the fields value in bytes or <code>0</code> if it's not present in the stats  */ public long get(String field) {     return stats.get(field). }
true;public;1;3;/**  * Returns <code>true</code> iff the given field is in the stats  */ ;/**  * Returns <code>true</code> iff the given field is in the stats  */ public boolean containsField(String field) {     return stats.containsKey(field). }
