commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected String executor() {     return ThreadPool.Names.SAME. }
false;protected;0;4;;@Override protected AcknowledgedResponse newResponse() {     return new AcknowledgedResponse(). }
false;protected;2;4;;@Override protected ClusterBlockException checkBlock(DeleteRepositoryRequest request, ClusterState state) {     return state.blocks().globalBlockedException(ClusterBlockLevel.METADATA_WRITE). }
false;public;1;4;;@Override public void onResponse(ClusterStateUpdateResponse unregisterRepositoryResponse) {     listener.onResponse(new AcknowledgedResponse(unregisterRepositoryResponse.isAcknowledged())). }
false;public;1;4;;@Override public void onFailure(Exception e) {     listener.onFailure(e). }
false;protected;3;18;;@Override protected void masterOperation(final DeleteRepositoryRequest request, ClusterState state, final ActionListener<AcknowledgedResponse> listener) {     repositoriesService.unregisterRepository(new RepositoriesService.UnregisterRepositoryRequest("delete_repository [" + request.name() + "]", request.name()).masterNodeTimeout(request.masterNodeTimeout()).ackTimeout(request.timeout()), new ActionListener<ClusterStateUpdateResponse>() {          @Override         public void onResponse(ClusterStateUpdateResponse unregisterRepositoryResponse) {             listener.onResponse(new AcknowledgedResponse(unregisterRepositoryResponse.isAcknowledged())).         }          @Override         public void onFailure(Exception e) {             listener.onFailure(e).         }     }). }
