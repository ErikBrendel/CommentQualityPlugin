commented;modifiers;parameterAmount;loc;comment;code
false;public;1;6;;@Override public void writeTo(StreamOutput out) throws IOException {     out.writeOptionalString(key).     out.writeVLong(docCount).     aggregations.writeTo(out). }
false;public;0;4;;@Override public String getKey() {     return key. }
false;public;0;4;;@Override public String getKeyAsString() {     return key. }
false;public;0;4;;@Override public long getDocCount() {     return docCount. }
false;public;0;4;;@Override public Aggregations getAggregations() {     return aggregations. }
false;;2;14;;InternalBucket reduce(List<InternalBucket> buckets, ReduceContext context) {     InternalBucket reduced = null.     List<InternalAggregations> aggregationsList = new ArrayList<>(buckets.size()).     for (InternalBucket bucket : buckets) {         if (reduced == null) {             reduced = new InternalBucket(bucket.key, bucket.docCount, bucket.aggregations, bucket.keyed).         } else {             reduced.docCount += bucket.docCount.         }         aggregationsList.add(bucket.aggregations).     }     reduced.aggregations = InternalAggregations.reduce(aggregationsList, context).     return reduced. }
false;public;2;12;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     if (keyed) {         builder.startObject(key).     } else {         builder.startObject().     }     builder.field(CommonFields.DOC_COUNT.getPreferredName(), docCount).     aggregations.toXContentInternal(builder, params).     builder.endObject().     return builder. }
false;public;1;14;;@Override public boolean equals(Object other) {     if (this == other) {         return true.     }     if (other == null || getClass() != other.getClass()) {         return false.     }     InternalBucket that = (InternalBucket) other.     return Objects.equals(key, that.key) && Objects.equals(keyed, that.keyed) && Objects.equals(docCount, that.docCount) && Objects.equals(aggregations, that.aggregations). }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(getClass(), key, keyed, docCount, aggregations). }
false;protected;1;8;;@Override protected void doWriteTo(StreamOutput out) throws IOException {     out.writeBoolean(keyed).     out.writeVInt(buckets.size()).     for (InternalBucket bucket : buckets) {         bucket.writeTo(out).     } }
false;public;0;4;;@Override public String getWriteableName() {     return FiltersAggregationBuilder.NAME. }
false;public;1;4;;@Override public InternalFilters create(List<InternalBucket> buckets) {     return new InternalFilters(this.name, buckets, this.keyed, this.pipelineAggregators(), this.metaData). }
false;public;2;4;;@Override public InternalBucket createBucket(InternalAggregations aggregations, InternalBucket prototype) {     return new InternalBucket(prototype.key, prototype.docCount, aggregations, prototype.keyed). }
false;public;0;4;;@Override public List<InternalBucket> getBuckets() {     return buckets. }
false;public;1;10;;@Override public InternalBucket getBucketByKey(String key) {     if (bucketMap == null) {         bucketMap = new HashMap<>(buckets.size()).         for (InternalBucket bucket : buckets) {             bucketMap.put(bucket.getKey(), bucket).         }     }     return bucketMap.get(key). }
false;public;2;28;;@Override public InternalAggregation doReduce(List<InternalAggregation> aggregations, ReduceContext reduceContext) {     List<List<InternalBucket>> bucketsList = null.     for (InternalAggregation aggregation : aggregations) {         InternalFilters filters = (InternalFilters) aggregation.         if (bucketsList == null) {             bucketsList = new ArrayList<>(filters.buckets.size()).             for (InternalBucket bucket : filters.buckets) {                 List<InternalBucket> sameRangeList = new ArrayList<>(aggregations.size()).                 sameRangeList.add(bucket).                 bucketsList.add(sameRangeList).             }         } else {             int i = 0.             for (InternalBucket bucket : filters.buckets) {                 bucketsList.get(i++).add(bucket).             }         }     }     reduceContext.consumeBucketsAndMaybeBreak(bucketsList.size()).     InternalFilters reduced = new InternalFilters(name, new ArrayList<>(bucketsList.size()), keyed, pipelineAggregators(), getMetaData()).     for (List<InternalBucket> sameRangeList : bucketsList) {         reduced.buckets.add((sameRangeList.get(0)).reduce(sameRangeList, reduceContext)).     }     return reduced. }
false;public;2;17;;@Override public XContentBuilder doXContentBody(XContentBuilder builder, Params params) throws IOException {     if (keyed) {         builder.startObject(CommonFields.BUCKETS.getPreferredName()).     } else {         builder.startArray(CommonFields.BUCKETS.getPreferredName()).     }     for (InternalBucket bucket : buckets) {         bucket.toXContent(builder, params).     }     if (keyed) {         builder.endObject().     } else {         builder.endArray().     }     return builder. }
false;protected;0;4;;@Override protected int doHashCode() {     return Objects.hash(buckets, keyed). }
false;protected;1;6;;@Override protected boolean doEquals(Object obj) {     InternalFilters that = (InternalFilters) obj.     return Objects.equals(buckets, that.buckets) && Objects.equals(keyed, that.keyed). }
