# id;timestamp;commentText;codeText;commentWords;codeWords
BaseRestHandler -> protected abstract RestChannelConsumer prepareRequest(RestRequest request, NodeClient client) throws IOException_;1524684173;Prepare the request for execution. Implementations should consume all request params before_returning the runnable for actual execution. Unconsumed params will immediately terminate_execution of the request. However, some params are only used in processing the response__implementations can override {@link BaseRestHandler#responseParams()} to indicate such_params.__@param request the request to execute_@param client  client for executing actions on the local node_@return the action to execute_@throws IOException if an I/O exception occurred parsing the request and preparing for_execution;protected abstract RestChannelConsumer prepareRequest(RestRequest request, NodeClient client) throws IOException_;prepare,the,request,for,execution,implementations,should,consume,all,request,params,before,returning,the,runnable,for,actual,execution,unconsumed,params,will,immediately,terminate,execution,of,the,request,however,some,params,are,only,used,in,processing,the,response,implementations,can,override,link,base,rest,handler,response,params,to,indicate,such,params,param,request,the,request,to,execute,param,client,client,for,executing,actions,on,the,local,node,return,the,action,to,execute,throws,ioexception,if,an,i,o,exception,occurred,parsing,the,request,and,preparing,for,execution;protected,abstract,rest,channel,consumer,prepare,request,rest,request,request,node,client,client,throws,ioexception
BaseRestHandler -> protected abstract RestChannelConsumer prepareRequest(RestRequest request, NodeClient client) throws IOException_;1536314350;Prepare the request for execution. Implementations should consume all request params before_returning the runnable for actual execution. Unconsumed params will immediately terminate_execution of the request. However, some params are only used in processing the response__implementations can override {@link BaseRestHandler#responseParams()} to indicate such_params.__@param request the request to execute_@param client  client for executing actions on the local node_@return the action to execute_@throws IOException if an I/O exception occurred parsing the request and preparing for_execution;protected abstract RestChannelConsumer prepareRequest(RestRequest request, NodeClient client) throws IOException_;prepare,the,request,for,execution,implementations,should,consume,all,request,params,before,returning,the,runnable,for,actual,execution,unconsumed,params,will,immediately,terminate,execution,of,the,request,however,some,params,are,only,used,in,processing,the,response,implementations,can,override,link,base,rest,handler,response,params,to,indicate,such,params,param,request,the,request,to,execute,param,client,client,for,executing,actions,on,the,local,node,return,the,action,to,execute,throws,ioexception,if,an,i,o,exception,occurred,parsing,the,request,and,preparing,for,execution;protected,abstract,rest,channel,consumer,prepare,request,rest,request,request,node,client,client,throws,ioexception
BaseRestHandler -> protected abstract RestChannelConsumer prepareRequest(RestRequest request, NodeClient client) throws IOException_;1541092382;Prepare the request for execution. Implementations should consume all request params before_returning the runnable for actual execution. Unconsumed params will immediately terminate_execution of the request. However, some params are only used in processing the response__implementations can override {@link BaseRestHandler#responseParams()} to indicate such_params.__@param request the request to execute_@param client  client for executing actions on the local node_@return the action to execute_@throws IOException if an I/O exception occurred parsing the request and preparing for_execution;protected abstract RestChannelConsumer prepareRequest(RestRequest request, NodeClient client) throws IOException_;prepare,the,request,for,execution,implementations,should,consume,all,request,params,before,returning,the,runnable,for,actual,execution,unconsumed,params,will,immediately,terminate,execution,of,the,request,however,some,params,are,only,used,in,processing,the,response,implementations,can,override,link,base,rest,handler,response,params,to,indicate,such,params,param,request,the,request,to,execute,param,client,client,for,executing,actions,on,the,local,node,return,the,action,to,execute,throws,ioexception,if,an,i,o,exception,occurred,parsing,the,request,and,preparing,for,execution;protected,abstract,rest,channel,consumer,prepare,request,rest,request,request,node,client,client,throws,ioexception
BaseRestHandler -> protected abstract RestChannelConsumer prepareRequest(RestRequest request, NodeClient client) throws IOException_;1546854100;Prepare the request for execution. Implementations should consume all request params before_returning the runnable for actual execution. Unconsumed params will immediately terminate_execution of the request. However, some params are only used in processing the response__implementations can override {@link BaseRestHandler#responseParams()} to indicate such_params.__@param request the request to execute_@param client  client for executing actions on the local node_@return the action to execute_@throws IOException if an I/O exception occurred parsing the request and preparing for_execution;protected abstract RestChannelConsumer prepareRequest(RestRequest request, NodeClient client) throws IOException_;prepare,the,request,for,execution,implementations,should,consume,all,request,params,before,returning,the,runnable,for,actual,execution,unconsumed,params,will,immediately,terminate,execution,of,the,request,however,some,params,are,only,used,in,processing,the,response,implementations,can,override,link,base,rest,handler,response,params,to,indicate,such,params,param,request,the,request,to,execute,param,client,client,for,executing,actions,on,the,local,node,return,the,action,to,execute,throws,ioexception,if,an,i,o,exception,occurred,parsing,the,request,and,preparing,for,execution;protected,abstract,rest,channel,consumer,prepare,request,rest,request,request,node,client,client,throws,ioexception
BaseRestHandler -> protected abstract RestChannelConsumer prepareRequest(RestRequest request, NodeClient client) throws IOException_;1547039837;Prepare the request for execution. Implementations should consume all request params before_returning the runnable for actual execution. Unconsumed params will immediately terminate_execution of the request. However, some params are only used in processing the response__implementations can override {@link BaseRestHandler#responseParams()} to indicate such_params.__@param request the request to execute_@param client  client for executing actions on the local node_@return the action to execute_@throws IOException if an I/O exception occurred parsing the request and preparing for_execution;protected abstract RestChannelConsumer prepareRequest(RestRequest request, NodeClient client) throws IOException_;prepare,the,request,for,execution,implementations,should,consume,all,request,params,before,returning,the,runnable,for,actual,execution,unconsumed,params,will,immediately,terminate,execution,of,the,request,however,some,params,are,only,used,in,processing,the,response,implementations,can,override,link,base,rest,handler,response,params,to,indicate,such,params,param,request,the,request,to,execute,param,client,client,for,executing,actions,on,the,local,node,return,the,action,to,execute,throws,ioexception,if,an,i,o,exception,occurred,parsing,the,request,and,preparing,for,execution;protected,abstract,rest,channel,consumer,prepare,request,rest,request,request,node,client,client,throws,ioexception
BaseRestHandler -> protected abstract RestChannelConsumer prepareRequest(RestRequest request, NodeClient client) throws IOException_;1547141048;Prepare the request for execution. Implementations should consume all request params before_returning the runnable for actual execution. Unconsumed params will immediately terminate_execution of the request. However, some params are only used in processing the response__implementations can override {@link BaseRestHandler#responseParams()} to indicate such_params.__@param request the request to execute_@param client  client for executing actions on the local node_@return the action to execute_@throws IOException if an I/O exception occurred parsing the request and preparing for_execution;protected abstract RestChannelConsumer prepareRequest(RestRequest request, NodeClient client) throws IOException_;prepare,the,request,for,execution,implementations,should,consume,all,request,params,before,returning,the,runnable,for,actual,execution,unconsumed,params,will,immediately,terminate,execution,of,the,request,however,some,params,are,only,used,in,processing,the,response,implementations,can,override,link,base,rest,handler,response,params,to,indicate,such,params,param,request,the,request,to,execute,param,client,client,for,executing,actions,on,the,local,node,return,the,action,to,execute,throws,ioexception,if,an,i,o,exception,occurred,parsing,the,request,and,preparing,for,execution;protected,abstract,rest,channel,consumer,prepare,request,rest,request,request,node,client,client,throws,ioexception
BaseRestHandler -> protected abstract RestChannelConsumer prepareRequest(RestRequest request, NodeClient client) throws IOException_;1547500081;Prepare the request for execution. Implementations should consume all request params before_returning the runnable for actual execution. Unconsumed params will immediately terminate_execution of the request. However, some params are only used in processing the response__implementations can override {@link BaseRestHandler#responseParams()} to indicate such_params.__@param request the request to execute_@param client  client for executing actions on the local node_@return the action to execute_@throws IOException if an I/O exception occurred parsing the request and preparing for_execution;protected abstract RestChannelConsumer prepareRequest(RestRequest request, NodeClient client) throws IOException_;prepare,the,request,for,execution,implementations,should,consume,all,request,params,before,returning,the,runnable,for,actual,execution,unconsumed,params,will,immediately,terminate,execution,of,the,request,however,some,params,are,only,used,in,processing,the,response,implementations,can,override,link,base,rest,handler,response,params,to,indicate,such,params,param,request,the,request,to,execute,param,client,client,for,executing,actions,on,the,local,node,return,the,action,to,execute,throws,ioexception,if,an,i,o,exception,occurred,parsing,the,request,and,preparing,for,execution;protected,abstract,rest,channel,consumer,prepare,request,rest,request,request,node,client,client,throws,ioexception
BaseRestHandler -> protected abstract RestChannelConsumer prepareRequest(RestRequest request, NodeClient client) throws IOException_;1547641765;Prepare the request for execution. Implementations should consume all request params before_returning the runnable for actual execution. Unconsumed params will immediately terminate_execution of the request. However, some params are only used in processing the response__implementations can override {@link BaseRestHandler#responseParams()} to indicate such_params.__@param request the request to execute_@param client  client for executing actions on the local node_@return the action to execute_@throws IOException if an I/O exception occurred parsing the request and preparing for_execution;protected abstract RestChannelConsumer prepareRequest(RestRequest request, NodeClient client) throws IOException_;prepare,the,request,for,execution,implementations,should,consume,all,request,params,before,returning,the,runnable,for,actual,execution,unconsumed,params,will,immediately,terminate,execution,of,the,request,however,some,params,are,only,used,in,processing,the,response,implementations,can,override,link,base,rest,handler,response,params,to,indicate,such,params,param,request,the,request,to,execute,param,client,client,for,executing,actions,on,the,local,node,return,the,action,to,execute,throws,ioexception,if,an,i,o,exception,occurred,parsing,the,request,and,preparing,for,execution;protected,abstract,rest,channel,consumer,prepare,request,rest,request,request,node,client,client,throws,ioexception
BaseRestHandler -> protected abstract RestChannelConsumer prepareRequest(RestRequest request, NodeClient client) throws IOException_;1548401719;Prepare the request for execution. Implementations should consume all request params before_returning the runnable for actual execution. Unconsumed params will immediately terminate_execution of the request. However, some params are only used in processing the response__implementations can override {@link BaseRestHandler#responseParams()} to indicate such_params.__@param request the request to execute_@param client  client for executing actions on the local node_@return the action to execute_@throws IOException if an I/O exception occurred parsing the request and preparing for_execution;protected abstract RestChannelConsumer prepareRequest(RestRequest request, NodeClient client) throws IOException_;prepare,the,request,for,execution,implementations,should,consume,all,request,params,before,returning,the,runnable,for,actual,execution,unconsumed,params,will,immediately,terminate,execution,of,the,request,however,some,params,are,only,used,in,processing,the,response,implementations,can,override,link,base,rest,handler,response,params,to,indicate,such,params,param,request,the,request,to,execute,param,client,client,for,executing,actions,on,the,local,node,return,the,action,to,execute,throws,ioexception,if,an,i,o,exception,occurred,parsing,the,request,and,preparing,for,execution;protected,abstract,rest,channel,consumer,prepare,request,rest,request,request,node,client,client,throws,ioexception
BaseRestHandler -> public abstract String getName()_;1524684173;@return the name of this handler. The name should be human readable and_should describe the action that will performed when this API is_called. This name is used in the response to the_{@link RestNodesUsageAction}.;public abstract String getName()_;return,the,name,of,this,handler,the,name,should,be,human,readable,and,should,describe,the,action,that,will,performed,when,this,api,is,called,this,name,is,used,in,the,response,to,the,link,rest,nodes,usage,action;public,abstract,string,get,name
BaseRestHandler -> public abstract String getName()_;1536314350;@return the name of this handler. The name should be human readable and_should describe the action that will performed when this API is_called. This name is used in the response to the_{@link RestNodesUsageAction}.;public abstract String getName()_;return,the,name,of,this,handler,the,name,should,be,human,readable,and,should,describe,the,action,that,will,performed,when,this,api,is,called,this,name,is,used,in,the,response,to,the,link,rest,nodes,usage,action;public,abstract,string,get,name
BaseRestHandler -> public abstract String getName()_;1541092382;@return the name of this handler. The name should be human readable and_should describe the action that will performed when this API is_called. This name is used in the response to the_{@link RestNodesUsageAction}.;public abstract String getName()_;return,the,name,of,this,handler,the,name,should,be,human,readable,and,should,describe,the,action,that,will,performed,when,this,api,is,called,this,name,is,used,in,the,response,to,the,link,rest,nodes,usage,action;public,abstract,string,get,name
BaseRestHandler -> public abstract String getName()_;1546854100;@return the name of this handler. The name should be human readable and_should describe the action that will performed when this API is_called. This name is used in the response to the_{@link RestNodesUsageAction}.;public abstract String getName()_;return,the,name,of,this,handler,the,name,should,be,human,readable,and,should,describe,the,action,that,will,performed,when,this,api,is,called,this,name,is,used,in,the,response,to,the,link,rest,nodes,usage,action;public,abstract,string,get,name
BaseRestHandler -> public abstract String getName()_;1547039837;@return the name of this handler. The name should be human readable and_should describe the action that will performed when this API is_called. This name is used in the response to the_{@link RestNodesUsageAction}.;public abstract String getName()_;return,the,name,of,this,handler,the,name,should,be,human,readable,and,should,describe,the,action,that,will,performed,when,this,api,is,called,this,name,is,used,in,the,response,to,the,link,rest,nodes,usage,action;public,abstract,string,get,name
BaseRestHandler -> public abstract String getName()_;1547141048;@return the name of this handler. The name should be human readable and_should describe the action that will performed when this API is_called. This name is used in the response to the_{@link RestNodesUsageAction}.;public abstract String getName()_;return,the,name,of,this,handler,the,name,should,be,human,readable,and,should,describe,the,action,that,will,performed,when,this,api,is,called,this,name,is,used,in,the,response,to,the,link,rest,nodes,usage,action;public,abstract,string,get,name
BaseRestHandler -> public abstract String getName()_;1547500081;@return the name of this handler. The name should be human readable and_should describe the action that will performed when this API is_called. This name is used in the response to the_{@link RestNodesUsageAction}.;public abstract String getName()_;return,the,name,of,this,handler,the,name,should,be,human,readable,and,should,describe,the,action,that,will,performed,when,this,api,is,called,this,name,is,used,in,the,response,to,the,link,rest,nodes,usage,action;public,abstract,string,get,name
BaseRestHandler -> public abstract String getName()_;1547641765;@return the name of this handler. The name should be human readable and_should describe the action that will performed when this API is_called. This name is used in the response to the_{@link RestNodesUsageAction}.;public abstract String getName()_;return,the,name,of,this,handler,the,name,should,be,human,readable,and,should,describe,the,action,that,will,performed,when,this,api,is,called,this,name,is,used,in,the,response,to,the,link,rest,nodes,usage,action;public,abstract,string,get,name
BaseRestHandler -> public abstract String getName()_;1548401719;@return the name of this handler. The name should be human readable and_should describe the action that will performed when this API is_called. This name is used in the response to the_{@link RestNodesUsageAction}.;public abstract String getName()_;return,the,name,of,this,handler,the,name,should,be,human,readable,and,should,describe,the,action,that,will,performed,when,this,api,is,called,this,name,is,used,in,the,response,to,the,link,rest,nodes,usage,action;public,abstract,string,get,name
BaseRestHandler -> protected Set<String> responseParams();1524684173;Parameters used for controlling the response and thus might not be consumed during_preparation of the request execution in_{@link BaseRestHandler#prepareRequest(RestRequest, NodeClient)}.__@return a set of parameters used to control the response and thus should not trip strict_URL parameter checks.;protected Set<String> responseParams() {_        return Collections.emptySet()__    };parameters,used,for,controlling,the,response,and,thus,might,not,be,consumed,during,preparation,of,the,request,execution,in,link,base,rest,handler,prepare,request,rest,request,node,client,return,a,set,of,parameters,used,to,control,the,response,and,thus,should,not,trip,strict,url,parameter,checks;protected,set,string,response,params,return,collections,empty,set
BaseRestHandler -> protected Set<String> responseParams();1536314350;Parameters used for controlling the response and thus might not be consumed during_preparation of the request execution in_{@link BaseRestHandler#prepareRequest(RestRequest, NodeClient)}.__@return a set of parameters used to control the response and thus should not trip strict_URL parameter checks.;protected Set<String> responseParams() {_        return Collections.emptySet()__    };parameters,used,for,controlling,the,response,and,thus,might,not,be,consumed,during,preparation,of,the,request,execution,in,link,base,rest,handler,prepare,request,rest,request,node,client,return,a,set,of,parameters,used,to,control,the,response,and,thus,should,not,trip,strict,url,parameter,checks;protected,set,string,response,params,return,collections,empty,set
BaseRestHandler -> protected Set<String> responseParams();1541092382;Parameters used for controlling the response and thus might not be consumed during_preparation of the request execution in_{@link BaseRestHandler#prepareRequest(RestRequest, NodeClient)}.__@return a set of parameters used to control the response and thus should not trip strict_URL parameter checks.;protected Set<String> responseParams() {_        return Collections.emptySet()__    };parameters,used,for,controlling,the,response,and,thus,might,not,be,consumed,during,preparation,of,the,request,execution,in,link,base,rest,handler,prepare,request,rest,request,node,client,return,a,set,of,parameters,used,to,control,the,response,and,thus,should,not,trip,strict,url,parameter,checks;protected,set,string,response,params,return,collections,empty,set
BaseRestHandler -> protected Set<String> responseParams();1546854100;Parameters used for controlling the response and thus might not be consumed during_preparation of the request execution in_{@link BaseRestHandler#prepareRequest(RestRequest, NodeClient)}.__@return a set of parameters used to control the response and thus should not trip strict_URL parameter checks.;protected Set<String> responseParams() {_        return Collections.emptySet()__    };parameters,used,for,controlling,the,response,and,thus,might,not,be,consumed,during,preparation,of,the,request,execution,in,link,base,rest,handler,prepare,request,rest,request,node,client,return,a,set,of,parameters,used,to,control,the,response,and,thus,should,not,trip,strict,url,parameter,checks;protected,set,string,response,params,return,collections,empty,set
BaseRestHandler -> protected Set<String> responseParams();1547039837;Parameters used for controlling the response and thus might not be consumed during_preparation of the request execution in_{@link BaseRestHandler#prepareRequest(RestRequest, NodeClient)}.__@return a set of parameters used to control the response and thus should not trip strict_URL parameter checks.;protected Set<String> responseParams() {_        return Collections.emptySet()__    };parameters,used,for,controlling,the,response,and,thus,might,not,be,consumed,during,preparation,of,the,request,execution,in,link,base,rest,handler,prepare,request,rest,request,node,client,return,a,set,of,parameters,used,to,control,the,response,and,thus,should,not,trip,strict,url,parameter,checks;protected,set,string,response,params,return,collections,empty,set
BaseRestHandler -> protected Set<String> responseParams();1547141048;Parameters used for controlling the response and thus might not be consumed during_preparation of the request execution in_{@link BaseRestHandler#prepareRequest(RestRequest, NodeClient)}.__@return a set of parameters used to control the response and thus should not trip strict_URL parameter checks.;protected Set<String> responseParams() {_        return Collections.emptySet()__    };parameters,used,for,controlling,the,response,and,thus,might,not,be,consumed,during,preparation,of,the,request,execution,in,link,base,rest,handler,prepare,request,rest,request,node,client,return,a,set,of,parameters,used,to,control,the,response,and,thus,should,not,trip,strict,url,parameter,checks;protected,set,string,response,params,return,collections,empty,set
BaseRestHandler -> protected Set<String> responseParams();1547500081;Parameters used for controlling the response and thus might not be consumed during_preparation of the request execution in_{@link BaseRestHandler#prepareRequest(RestRequest, NodeClient)}.__@return a set of parameters used to control the response and thus should not trip strict_URL parameter checks.;protected Set<String> responseParams() {_        return Collections.emptySet()__    };parameters,used,for,controlling,the,response,and,thus,might,not,be,consumed,during,preparation,of,the,request,execution,in,link,base,rest,handler,prepare,request,rest,request,node,client,return,a,set,of,parameters,used,to,control,the,response,and,thus,should,not,trip,strict,url,parameter,checks;protected,set,string,response,params,return,collections,empty,set
BaseRestHandler -> protected Set<String> responseParams();1547641765;Parameters used for controlling the response and thus might not be consumed during_preparation of the request execution in_{@link BaseRestHandler#prepareRequest(RestRequest, NodeClient)}.__@return a set of parameters used to control the response and thus should not trip strict_URL parameter checks.;protected Set<String> responseParams() {_        return Collections.emptySet()__    };parameters,used,for,controlling,the,response,and,thus,might,not,be,consumed,during,preparation,of,the,request,execution,in,link,base,rest,handler,prepare,request,rest,request,node,client,return,a,set,of,parameters,used,to,control,the,response,and,thus,should,not,trip,strict,url,parameter,checks;protected,set,string,response,params,return,collections,empty,set
BaseRestHandler -> protected Set<String> responseParams();1548401719;Parameters used for controlling the response and thus might not be consumed during_preparation of the request execution in_{@link BaseRestHandler#prepareRequest(RestRequest, NodeClient)}.__@return a set of parameters used to control the response and thus should not trip strict_URL parameter checks.;protected Set<String> responseParams() {_        return Collections.emptySet()__    };parameters,used,for,controlling,the,response,and,thus,might,not,be,consumed,during,preparation,of,the,request,execution,in,link,base,rest,handler,prepare,request,rest,request,node,client,return,a,set,of,parameters,used,to,control,the,response,and,thus,should,not,trip,strict,url,parameter,checks;protected,set,string,response,params,return,collections,empty,set
