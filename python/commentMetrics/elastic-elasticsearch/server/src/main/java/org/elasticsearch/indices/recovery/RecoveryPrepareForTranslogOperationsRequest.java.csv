commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public long recoveryId() {     return this.recoveryId. }
false;public;0;3;;public ShardId shardId() {     return shardId. }
false;public;0;3;;public int totalTranslogOps() {     return totalTranslogOps. }
true;public;0;3;/**  * Whether or not the recovery is file based  */ ;/**  * Whether or not the recovery is file based  */ public boolean isFileBasedRecovery() {     return fileBasedRecovery. }
false;public;1;13;;@Override public void writeTo(StreamOutput out) throws IOException {     super.writeTo(out).     out.writeLong(recoveryId).     shardId.writeTo(out).     out.writeVInt(totalTranslogOps).     if (out.getVersion().before(Version.V_6_0_0_alpha1)) {         // maxUnsafeAutoIdTimestamp         out.writeLong(IndexRequest.UNSET_AUTO_GENERATED_TIMESTAMP).     }     if (out.getVersion().onOrAfter(Version.V_6_2_0)) {         out.writeBoolean(fileBasedRecovery).     } }
