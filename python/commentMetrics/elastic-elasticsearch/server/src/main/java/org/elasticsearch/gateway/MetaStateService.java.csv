# id;timestamp;commentText;codeText;commentWords;codeWords
MetaStateService -> List<IndexMetaData> loadIndicesStates(Predicate<String> excludeIndexPathIdsPredicate) throws IOException;1524684173;Loads all indices states available on disk;List<IndexMetaData> loadIndicesStates(Predicate<String> excludeIndexPathIdsPredicate) throws IOException {_        List<IndexMetaData> indexMetaDataList = new ArrayList<>()__        for (String indexFolderName : nodeEnv.availableIndexFolders()) {_            if (excludeIndexPathIdsPredicate.test(indexFolderName)) {_                continue__            }_            IndexMetaData indexMetaData = IndexMetaData.FORMAT.loadLatestState(logger, namedXContentRegistry,_                nodeEnv.resolveIndexFolder(indexFolderName))__            if (indexMetaData != null) {_                final String indexPathId = indexMetaData.getIndex().getUUID()__                if (indexFolderName.equals(indexPathId)) {_                    indexMetaDataList.add(indexMetaData)__                } else {_                    throw new IllegalStateException("[" + indexFolderName+ "] invalid index folder name, rename to [" + indexPathId + "]")__                }_            } else {_                logger.debug("[{}] failed to find metadata for existing index location", indexFolderName)__            }_        }_        return indexMetaDataList__    };loads,all,indices,states,available,on,disk;list,index,meta,data,load,indices,states,predicate,string,exclude,index,path,ids,predicate,throws,ioexception,list,index,meta,data,index,meta,data,list,new,array,list,for,string,index,folder,name,node,env,available,index,folders,if,exclude,index,path,ids,predicate,test,index,folder,name,continue,index,meta,data,index,meta,data,index,meta,data,format,load,latest,state,logger,named,xcontent,registry,node,env,resolve,index,folder,index,folder,name,if,index,meta,data,null,final,string,index,path,id,index,meta,data,get,index,get,uuid,if,index,folder,name,equals,index,path,id,index,meta,data,list,add,index,meta,data,else,throw,new,illegal,state,exception,index,folder,name,invalid,index,folder,name,rename,to,index,path,id,else,logger,debug,failed,to,find,metadata,for,existing,index,location,index,folder,name,return,index,meta,data,list
MetaStateService -> List<IndexMetaData> loadIndicesStates(Predicate<String> excludeIndexPathIdsPredicate) throws IOException;1529015561;Loads all indices states available on disk;List<IndexMetaData> loadIndicesStates(Predicate<String> excludeIndexPathIdsPredicate) throws IOException {_        List<IndexMetaData> indexMetaDataList = new ArrayList<>()__        for (String indexFolderName : nodeEnv.availableIndexFolders()) {_            if (excludeIndexPathIdsPredicate.test(indexFolderName)) {_                continue__            }_            IndexMetaData indexMetaData = IndexMetaData.FORMAT.loadLatestState(logger, namedXContentRegistry,_                nodeEnv.resolveIndexFolder(indexFolderName))__            if (indexMetaData != null) {_                final String indexPathId = indexMetaData.getIndex().getUUID()__                if (indexFolderName.equals(indexPathId)) {_                    indexMetaDataList.add(indexMetaData)__                } else {_                    throw new IllegalStateException("[" + indexFolderName+ "] invalid index folder name, rename to [" + indexPathId + "]")__                }_            } else {_                logger.debug("[{}] failed to find metadata for existing index location", indexFolderName)__            }_        }_        return indexMetaDataList__    };loads,all,indices,states,available,on,disk;list,index,meta,data,load,indices,states,predicate,string,exclude,index,path,ids,predicate,throws,ioexception,list,index,meta,data,index,meta,data,list,new,array,list,for,string,index,folder,name,node,env,available,index,folders,if,exclude,index,path,ids,predicate,test,index,folder,name,continue,index,meta,data,index,meta,data,index,meta,data,format,load,latest,state,logger,named,xcontent,registry,node,env,resolve,index,folder,index,folder,name,if,index,meta,data,null,final,string,index,path,id,index,meta,data,get,index,get,uuid,if,index,folder,name,equals,index,path,id,index,meta,data,list,add,index,meta,data,else,throw,new,illegal,state,exception,index,folder,name,invalid,index,folder,name,rename,to,index,path,id,else,logger,debug,failed,to,find,metadata,for,existing,index,location,index,folder,name,return,index,meta,data,list
MetaStateService -> List<IndexMetaData> loadIndicesStates(Predicate<String> excludeIndexPathIdsPredicate) throws IOException;1539615817;Loads all indices states available on disk;List<IndexMetaData> loadIndicesStates(Predicate<String> excludeIndexPathIdsPredicate) throws IOException {_        List<IndexMetaData> indexMetaDataList = new ArrayList<>()__        for (String indexFolderName : nodeEnv.availableIndexFolders(excludeIndexPathIdsPredicate)) {_            assert excludeIndexPathIdsPredicate.test(indexFolderName) == false :_                "unexpected folder " + indexFolderName + " which should have been excluded"__            IndexMetaData indexMetaData = IndexMetaData.FORMAT.loadLatestState(logger, namedXContentRegistry,_                nodeEnv.resolveIndexFolder(indexFolderName))__            if (indexMetaData != null) {_                final String indexPathId = indexMetaData.getIndex().getUUID()__                if (indexFolderName.equals(indexPathId)) {_                    indexMetaDataList.add(indexMetaData)__                } else {_                    throw new IllegalStateException("[" + indexFolderName+ "] invalid index folder name, rename to [" + indexPathId + "]")__                }_            } else {_                logger.debug("[{}] failed to find metadata for existing index location", indexFolderName)__            }_        }_        return indexMetaDataList__    };loads,all,indices,states,available,on,disk;list,index,meta,data,load,indices,states,predicate,string,exclude,index,path,ids,predicate,throws,ioexception,list,index,meta,data,index,meta,data,list,new,array,list,for,string,index,folder,name,node,env,available,index,folders,exclude,index,path,ids,predicate,assert,exclude,index,path,ids,predicate,test,index,folder,name,false,unexpected,folder,index,folder,name,which,should,have,been,excluded,index,meta,data,index,meta,data,index,meta,data,format,load,latest,state,logger,named,xcontent,registry,node,env,resolve,index,folder,index,folder,name,if,index,meta,data,null,final,string,index,path,id,index,meta,data,get,index,get,uuid,if,index,folder,name,equals,index,path,id,index,meta,data,list,add,index,meta,data,else,throw,new,illegal,state,exception,index,folder,name,invalid,index,folder,name,rename,to,index,path,id,else,logger,debug,failed,to,find,metadata,for,existing,index,location,index,folder,name,return,index,meta,data,list
MetaStateService -> List<IndexMetaData> loadIndicesStates(Predicate<String> excludeIndexPathIdsPredicate) throws IOException;1541092382;Loads all indices states available on disk;List<IndexMetaData> loadIndicesStates(Predicate<String> excludeIndexPathIdsPredicate) throws IOException {_        List<IndexMetaData> indexMetaDataList = new ArrayList<>()__        for (String indexFolderName : nodeEnv.availableIndexFolders(excludeIndexPathIdsPredicate)) {_            assert excludeIndexPathIdsPredicate.test(indexFolderName) == false :_                "unexpected folder " + indexFolderName + " which should have been excluded"__            IndexMetaData indexMetaData = IndexMetaData.FORMAT.loadLatestState(logger, namedXContentRegistry,_                nodeEnv.resolveIndexFolder(indexFolderName))__            if (indexMetaData != null) {_                final String indexPathId = indexMetaData.getIndex().getUUID()__                if (indexFolderName.equals(indexPathId)) {_                    indexMetaDataList.add(indexMetaData)__                } else {_                    throw new IllegalStateException("[" + indexFolderName+ "] invalid index folder name, rename to [" + indexPathId + "]")__                }_            } else {_                logger.debug("[{}] failed to find metadata for existing index location", indexFolderName)__            }_        }_        return indexMetaDataList__    };loads,all,indices,states,available,on,disk;list,index,meta,data,load,indices,states,predicate,string,exclude,index,path,ids,predicate,throws,ioexception,list,index,meta,data,index,meta,data,list,new,array,list,for,string,index,folder,name,node,env,available,index,folders,exclude,index,path,ids,predicate,assert,exclude,index,path,ids,predicate,test,index,folder,name,false,unexpected,folder,index,folder,name,which,should,have,been,excluded,index,meta,data,index,meta,data,index,meta,data,format,load,latest,state,logger,named,xcontent,registry,node,env,resolve,index,folder,index,folder,name,if,index,meta,data,null,final,string,index,path,id,index,meta,data,get,index,get,uuid,if,index,folder,name,equals,index,path,id,index,meta,data,list,add,index,meta,data,else,throw,new,illegal,state,exception,index,folder,name,invalid,index,folder,name,rename,to,index,path,id,else,logger,debug,failed,to,find,metadata,for,existing,index,location,index,folder,name,return,index,meta,data,list
MetaStateService -> List<IndexMetaData> loadIndicesStates(Predicate<String> excludeIndexPathIdsPredicate) throws IOException;1542402632;Loads all indices states available on disk;List<IndexMetaData> loadIndicesStates(Predicate<String> excludeIndexPathIdsPredicate) throws IOException {_        List<IndexMetaData> indexMetaDataList = new ArrayList<>()__        for (String indexFolderName : nodeEnv.availableIndexFolders(excludeIndexPathIdsPredicate)) {_            assert excludeIndexPathIdsPredicate.test(indexFolderName) == false :_                "unexpected folder " + indexFolderName + " which should have been excluded"__            IndexMetaData indexMetaData = IndexMetaData.FORMAT.loadLatestState(logger, namedXContentRegistry,_                nodeEnv.resolveIndexFolder(indexFolderName))__            if (indexMetaData != null) {_                final String indexPathId = indexMetaData.getIndex().getUUID()__                if (indexFolderName.equals(indexPathId)) {_                    indexMetaDataList.add(indexMetaData)__                } else {_                    throw new IllegalStateException("[" + indexFolderName+ "] invalid index folder name, rename to [" + indexPathId + "]")__                }_            } else {_                logger.debug("[{}] failed to find metadata for existing index location", indexFolderName)__            }_        }_        return indexMetaDataList__    };loads,all,indices,states,available,on,disk;list,index,meta,data,load,indices,states,predicate,string,exclude,index,path,ids,predicate,throws,ioexception,list,index,meta,data,index,meta,data,list,new,array,list,for,string,index,folder,name,node,env,available,index,folders,exclude,index,path,ids,predicate,assert,exclude,index,path,ids,predicate,test,index,folder,name,false,unexpected,folder,index,folder,name,which,should,have,been,excluded,index,meta,data,index,meta,data,index,meta,data,format,load,latest,state,logger,named,xcontent,registry,node,env,resolve,index,folder,index,folder,name,if,index,meta,data,null,final,string,index,path,id,index,meta,data,get,index,get,uuid,if,index,folder,name,equals,index,path,id,index,meta,data,list,add,index,meta,data,else,throw,new,illegal,state,exception,index,folder,name,invalid,index,folder,name,rename,to,index,path,id,else,logger,debug,failed,to,find,metadata,for,existing,index,location,index,folder,name,return,index,meta,data,list
MetaStateService -> List<IndexMetaData> loadIndicesStates(Predicate<String> excludeIndexPathIdsPredicate) throws IOException;1544081506;Loads all indices states available on disk;List<IndexMetaData> loadIndicesStates(Predicate<String> excludeIndexPathIdsPredicate) throws IOException {_        List<IndexMetaData> indexMetaDataList = new ArrayList<>()__        for (String indexFolderName : nodeEnv.availableIndexFolders(excludeIndexPathIdsPredicate)) {_            assert excludeIndexPathIdsPredicate.test(indexFolderName) == false :_                    "unexpected folder " + indexFolderName + " which should have been excluded"__            IndexMetaData indexMetaData = INDEX_META_DATA_FORMAT.loadLatestState(logger, namedXContentRegistry,_                    nodeEnv.resolveIndexFolder(indexFolderName))__            if (indexMetaData != null) {_                final String indexPathId = indexMetaData.getIndex().getUUID()__                if (indexFolderName.equals(indexPathId)) {_                    indexMetaDataList.add(indexMetaData)__                } else {_                    throw new IllegalStateException("[" + indexFolderName + "] invalid index folder name, rename to [" + indexPathId + "]")__                }_            } else {_                logger.debug("[{}] failed to find metadata for existing index location", indexFolderName)__            }_        }_        return indexMetaDataList__    };loads,all,indices,states,available,on,disk;list,index,meta,data,load,indices,states,predicate,string,exclude,index,path,ids,predicate,throws,ioexception,list,index,meta,data,index,meta,data,list,new,array,list,for,string,index,folder,name,node,env,available,index,folders,exclude,index,path,ids,predicate,assert,exclude,index,path,ids,predicate,test,index,folder,name,false,unexpected,folder,index,folder,name,which,should,have,been,excluded,index,meta,data,index,meta,data,load,latest,state,logger,named,xcontent,registry,node,env,resolve,index,folder,index,folder,name,if,index,meta,data,null,final,string,index,path,id,index,meta,data,get,index,get,uuid,if,index,folder,name,equals,index,path,id,index,meta,data,list,add,index,meta,data,else,throw,new,illegal,state,exception,index,folder,name,invalid,index,folder,name,rename,to,index,path,id,else,logger,debug,failed,to,find,metadata,for,existing,index,location,index,folder,name,return,index,meta,data,list
MetaStateService -> List<IndexMetaData> loadIndicesStates(Predicate<String> excludeIndexPathIdsPredicate) throws IOException;1549608646;Loads all indices states available on disk;List<IndexMetaData> loadIndicesStates(Predicate<String> excludeIndexPathIdsPredicate) throws IOException {_        List<IndexMetaData> indexMetaDataList = new ArrayList<>()__        for (String indexFolderName : nodeEnv.availableIndexFolders(excludeIndexPathIdsPredicate)) {_            assert excludeIndexPathIdsPredicate.test(indexFolderName) == false :_                    "unexpected folder " + indexFolderName + " which should have been excluded"__            IndexMetaData indexMetaData = INDEX_META_DATA_FORMAT.loadLatestState(logger, namedXContentRegistry,_                    nodeEnv.resolveIndexFolder(indexFolderName))__            if (indexMetaData != null) {_                final String indexPathId = indexMetaData.getIndex().getUUID()__                if (indexFolderName.equals(indexPathId)) {_                    indexMetaDataList.add(indexMetaData)__                } else {_                    throw new IllegalStateException("[" + indexFolderName + "] invalid index folder name, rename to [" + indexPathId + "]")__                }_            } else {_                logger.debug("[{}] failed to find metadata for existing index location", indexFolderName)__            }_        }_        return indexMetaDataList__    };loads,all,indices,states,available,on,disk;list,index,meta,data,load,indices,states,predicate,string,exclude,index,path,ids,predicate,throws,ioexception,list,index,meta,data,index,meta,data,list,new,array,list,for,string,index,folder,name,node,env,available,index,folders,exclude,index,path,ids,predicate,assert,exclude,index,path,ids,predicate,test,index,folder,name,false,unexpected,folder,index,folder,name,which,should,have,been,excluded,index,meta,data,index,meta,data,load,latest,state,logger,named,xcontent,registry,node,env,resolve,index,folder,index,folder,name,if,index,meta,data,null,final,string,index,path,id,index,meta,data,get,index,get,uuid,if,index,folder,name,equals,index,path,id,index,meta,data,list,add,index,meta,data,else,throw,new,illegal,state,exception,index,folder,name,invalid,index,folder,name,rename,to,index,path,id,else,logger,debug,failed,to,find,metadata,for,existing,index,location,index,folder,name,return,index,meta,data,list
MetaStateService -> public long writeIndex(String reason, IndexMetaData indexMetaData) throws WriteStateException;1544081506;Writes the index state._<p>_This method is public for testing purposes.__@throws WriteStateException if exception when writing state occurs. {@link WriteStateException#isDirty()} will always return_false, because new index state file is not yet referenced by manifest file.;public long writeIndex(String reason, IndexMetaData indexMetaData) throws WriteStateException {_        final Index index = indexMetaData.getIndex()__        logger.trace("[{}] writing state, reason [{}]", index, reason)__        try {_            long generation = INDEX_META_DATA_FORMAT.write(indexMetaData,_                    nodeEnv.indexPaths(indexMetaData.getIndex()))__            logger.trace("[{}] state written", index)__            return generation__        } catch (WriteStateException ex) {_            throw new WriteStateException(false, "[" + index + "]: failed to write index state", ex)__        }_    };writes,the,index,state,p,this,method,is,public,for,testing,purposes,throws,write,state,exception,if,exception,when,writing,state,occurs,link,write,state,exception,is,dirty,will,always,return,false,because,new,index,state,file,is,not,yet,referenced,by,manifest,file;public,long,write,index,string,reason,index,meta,data,index,meta,data,throws,write,state,exception,final,index,index,index,meta,data,get,index,logger,trace,writing,state,reason,index,reason,try,long,generation,write,index,meta,data,node,env,index,paths,index,meta,data,get,index,logger,trace,state,written,index,return,generation,catch,write,state,exception,ex,throw,new,write,state,exception,false,index,failed,to,write,index,state,ex
MetaStateService -> public long writeIndex(String reason, IndexMetaData indexMetaData) throws WriteStateException;1549608646;Writes the index state._<p>_This method is public for testing purposes.__@throws WriteStateException if exception when writing state occurs. {@link WriteStateException#isDirty()} will always return_false, because new index state file is not yet referenced by manifest file.;public long writeIndex(String reason, IndexMetaData indexMetaData) throws WriteStateException {_        final Index index = indexMetaData.getIndex()__        logger.trace("[{}] writing state, reason [{}]", index, reason)__        try {_            long generation = INDEX_META_DATA_FORMAT.write(indexMetaData,_                    nodeEnv.indexPaths(indexMetaData.getIndex()))__            logger.trace("[{}] state written", index)__            return generation__        } catch (WriteStateException ex) {_            throw new WriteStateException(false, "[" + index + "]: failed to write index state", ex)__        }_    };writes,the,index,state,p,this,method,is,public,for,testing,purposes,throws,write,state,exception,if,exception,when,writing,state,occurs,link,write,state,exception,is,dirty,will,always,return,false,because,new,index,state,file,is,not,yet,referenced,by,manifest,file;public,long,write,index,string,reason,index,meta,data,index,meta,data,throws,write,state,exception,final,index,index,index,meta,data,get,index,logger,trace,writing,state,reason,index,reason,try,long,generation,write,index,meta,data,node,env,index,paths,index,meta,data,get,index,logger,trace,state,written,index,return,generation,catch,write,state,exception,ex,throw,new,write,state,exception,false,index,failed,to,write,index,state,ex
MetaStateService -> MetaData loadGlobalState() throws IOException;1524684173;Loads the global state, *without* index state, see {@link #loadFullState()} for that.;MetaData loadGlobalState() throws IOException {_        return MetaData.FORMAT.loadLatestState(logger, namedXContentRegistry, nodeEnv.nodeDataPaths())__    };loads,the,global,state,without,index,state,see,link,load,full,state,for,that;meta,data,load,global,state,throws,ioexception,return,meta,data,format,load,latest,state,logger,named,xcontent,registry,node,env,node,data,paths
MetaStateService -> MetaData loadGlobalState() throws IOException;1529015561;Loads the global state, *without* index state, see {@link #loadFullState()} for that.;MetaData loadGlobalState() throws IOException {_        return MetaData.FORMAT.loadLatestState(logger, namedXContentRegistry, nodeEnv.nodeDataPaths())__    };loads,the,global,state,without,index,state,see,link,load,full,state,for,that;meta,data,load,global,state,throws,ioexception,return,meta,data,format,load,latest,state,logger,named,xcontent,registry,node,env,node,data,paths
MetaStateService -> MetaData loadGlobalState() throws IOException;1539615817;Loads the global state, *without* index state, see {@link #loadFullState()} for that.;MetaData loadGlobalState() throws IOException {_        return MetaData.FORMAT.loadLatestState(logger, namedXContentRegistry, nodeEnv.nodeDataPaths())__    };loads,the,global,state,without,index,state,see,link,load,full,state,for,that;meta,data,load,global,state,throws,ioexception,return,meta,data,format,load,latest,state,logger,named,xcontent,registry,node,env,node,data,paths
MetaStateService -> MetaData loadGlobalState() throws IOException;1541092382;Loads the global state, *without* index state, see {@link #loadFullState()} for that.;MetaData loadGlobalState() throws IOException {_        return MetaData.FORMAT.loadLatestState(logger, namedXContentRegistry, nodeEnv.nodeDataPaths())__    };loads,the,global,state,without,index,state,see,link,load,full,state,for,that;meta,data,load,global,state,throws,ioexception,return,meta,data,format,load,latest,state,logger,named,xcontent,registry,node,env,node,data,paths
MetaStateService -> MetaData loadGlobalState() throws IOException;1542402632;Loads the global state, *without* index state, see {@link #loadFullState()} for that.;MetaData loadGlobalState() throws IOException {_        return MetaData.FORMAT.loadLatestState(logger, namedXContentRegistry, nodeEnv.nodeDataPaths())__    };loads,the,global,state,without,index,state,see,link,load,full,state,for,that;meta,data,load,global,state,throws,ioexception,return,meta,data,format,load,latest,state,logger,named,xcontent,registry,node,env,node,data,paths
MetaStateService -> MetaData loadGlobalState() throws IOException;1544081506;Loads the global state, *without* index state, see {@link #loadFullState()} for that.;MetaData loadGlobalState() throws IOException {_        return META_DATA_FORMAT.loadLatestState(logger, namedXContentRegistry, nodeEnv.nodeDataPaths())__    };loads,the,global,state,without,index,state,see,link,load,full,state,for,that;meta,data,load,global,state,throws,ioexception,return,load,latest,state,logger,named,xcontent,registry,node,env,node,data,paths
MetaStateService -> MetaData loadGlobalState() throws IOException;1549608646;Loads the global state, *without* index state, see {@link #loadFullState()} for that.;MetaData loadGlobalState() throws IOException {_        return META_DATA_FORMAT.loadLatestState(logger, namedXContentRegistry, nodeEnv.nodeDataPaths())__    };loads,the,global,state,without,index,state,see,link,load,full,state,for,that;meta,data,load,global,state,throws,ioexception,return,load,latest,state,logger,named,xcontent,registry,node,env,node,data,paths
MetaStateService -> Tuple<Manifest, MetaData> loadFullState() throws IOException;1544081506;Loads the full state, which includes both the global state and all the indices meta data. <br>_When loading, manifest file is consulted (represented by {@link Manifest} class), to load proper generations. <br>_If there is no manifest file on disk, this method fallbacks to BWC mode, where latest generation of global and indices_metadata is loaded. Please note that currently there is no way to distinguish between manifest file being removed and manifest_file was not yet created. It means that this method always fallbacks to BWC mode, if there is no manifest file.__@return tuple of {@link Manifest} and {@link MetaData} with global metadata and indices metadata. If there is no state on disk,_meta state with globalGeneration -1 and empty meta data is returned._@throws IOException if some IOException when loading files occurs or there is no metadata referenced by manifest file.;Tuple<Manifest, MetaData> loadFullState() throws IOException {_        final Manifest manifest = MANIFEST_FORMAT.loadLatestState(logger, namedXContentRegistry, nodeEnv.nodeDataPaths())__        if (manifest == null) {_            return loadFullStateBWC()__        }__        final MetaData.Builder metaDataBuilder__        if (manifest.isGlobalGenerationMissing()) {_            metaDataBuilder = MetaData.builder()__        } else {_            final MetaData globalMetaData = META_DATA_FORMAT.loadGeneration(logger, namedXContentRegistry, manifest.getGlobalGeneration(),_                    nodeEnv.nodeDataPaths())__            if (globalMetaData != null) {_                metaDataBuilder = MetaData.builder(globalMetaData)__            } else {_                throw new IOException("failed to find global metadata [generation: " + manifest.getGlobalGeneration() + "]")__            }_        }__        for (Map.Entry<Index, Long> entry : manifest.getIndexGenerations().entrySet()) {_            final Index index = entry.getKey()__            final long generation = entry.getValue()__            final String indexFolderName = index.getUUID()__            final IndexMetaData indexMetaData = INDEX_META_DATA_FORMAT.loadGeneration(logger, namedXContentRegistry, generation,_                    nodeEnv.resolveIndexFolder(indexFolderName))__            if (indexMetaData != null) {_                metaDataBuilder.put(indexMetaData, false)__            } else {_                throw new IOException("failed to find metadata for existing index " + index.getName() + " [location: " + indexFolderName +_                        ", generation: " + generation + "]")__            }_        }__        return new Tuple<>(manifest, metaDataBuilder.build())__    };loads,the,full,state,which,includes,both,the,global,state,and,all,the,indices,meta,data,br,when,loading,manifest,file,is,consulted,represented,by,link,manifest,class,to,load,proper,generations,br,if,there,is,no,manifest,file,on,disk,this,method,fallbacks,to,bwc,mode,where,latest,generation,of,global,and,indices,metadata,is,loaded,please,note,that,currently,there,is,no,way,to,distinguish,between,manifest,file,being,removed,and,manifest,file,was,not,yet,created,it,means,that,this,method,always,fallbacks,to,bwc,mode,if,there,is,no,manifest,file,return,tuple,of,link,manifest,and,link,meta,data,with,global,metadata,and,indices,metadata,if,there,is,no,state,on,disk,meta,state,with,global,generation,1,and,empty,meta,data,is,returned,throws,ioexception,if,some,ioexception,when,loading,files,occurs,or,there,is,no,metadata,referenced,by,manifest,file;tuple,manifest,meta,data,load,full,state,throws,ioexception,final,manifest,manifest,load,latest,state,logger,named,xcontent,registry,node,env,node,data,paths,if,manifest,null,return,load,full,state,bwc,final,meta,data,builder,meta,data,builder,if,manifest,is,global,generation,missing,meta,data,builder,meta,data,builder,else,final,meta,data,global,meta,data,load,generation,logger,named,xcontent,registry,manifest,get,global,generation,node,env,node,data,paths,if,global,meta,data,null,meta,data,builder,meta,data,builder,global,meta,data,else,throw,new,ioexception,failed,to,find,global,metadata,generation,manifest,get,global,generation,for,map,entry,index,long,entry,manifest,get,index,generations,entry,set,final,index,index,entry,get,key,final,long,generation,entry,get,value,final,string,index,folder,name,index,get,uuid,final,index,meta,data,index,meta,data,load,generation,logger,named,xcontent,registry,generation,node,env,resolve,index,folder,index,folder,name,if,index,meta,data,null,meta,data,builder,put,index,meta,data,false,else,throw,new,ioexception,failed,to,find,metadata,for,existing,index,index,get,name,location,index,folder,name,generation,generation,return,new,tuple,manifest,meta,data,builder,build
MetaStateService -> Tuple<Manifest, MetaData> loadFullState() throws IOException;1549608646;Loads the full state, which includes both the global state and all the indices meta data. <br>_When loading, manifest file is consulted (represented by {@link Manifest} class), to load proper generations. <br>_If there is no manifest file on disk, this method fallbacks to BWC mode, where latest generation of global and indices_metadata is loaded. Please note that currently there is no way to distinguish between manifest file being removed and manifest_file was not yet created. It means that this method always fallbacks to BWC mode, if there is no manifest file.__@return tuple of {@link Manifest} and {@link MetaData} with global metadata and indices metadata. If there is no state on disk,_meta state with globalGeneration -1 and empty meta data is returned._@throws IOException if some IOException when loading files occurs or there is no metadata referenced by manifest file.;Tuple<Manifest, MetaData> loadFullState() throws IOException {_        final Manifest manifest = MANIFEST_FORMAT.loadLatestState(logger, namedXContentRegistry, nodeEnv.nodeDataPaths())__        if (manifest == null) {_            return loadFullStateBWC()__        }__        final MetaData.Builder metaDataBuilder__        if (manifest.isGlobalGenerationMissing()) {_            metaDataBuilder = MetaData.builder()__        } else {_            final MetaData globalMetaData = META_DATA_FORMAT.loadGeneration(logger, namedXContentRegistry, manifest.getGlobalGeneration(),_                    nodeEnv.nodeDataPaths())__            if (globalMetaData != null) {_                metaDataBuilder = MetaData.builder(globalMetaData)__            } else {_                throw new IOException("failed to find global metadata [generation: " + manifest.getGlobalGeneration() + "]")__            }_        }__        for (Map.Entry<Index, Long> entry : manifest.getIndexGenerations().entrySet()) {_            final Index index = entry.getKey()__            final long generation = entry.getValue()__            final String indexFolderName = index.getUUID()__            final IndexMetaData indexMetaData = INDEX_META_DATA_FORMAT.loadGeneration(logger, namedXContentRegistry, generation,_                    nodeEnv.resolveIndexFolder(indexFolderName))__            if (indexMetaData != null) {_                metaDataBuilder.put(indexMetaData, false)__            } else {_                throw new IOException("failed to find metadata for existing index " + index.getName() + " [location: " + indexFolderName +_                        ", generation: " + generation + "]")__            }_        }__        return new Tuple<>(manifest, metaDataBuilder.build())__    };loads,the,full,state,which,includes,both,the,global,state,and,all,the,indices,meta,data,br,when,loading,manifest,file,is,consulted,represented,by,link,manifest,class,to,load,proper,generations,br,if,there,is,no,manifest,file,on,disk,this,method,fallbacks,to,bwc,mode,where,latest,generation,of,global,and,indices,metadata,is,loaded,please,note,that,currently,there,is,no,way,to,distinguish,between,manifest,file,being,removed,and,manifest,file,was,not,yet,created,it,means,that,this,method,always,fallbacks,to,bwc,mode,if,there,is,no,manifest,file,return,tuple,of,link,manifest,and,link,meta,data,with,global,metadata,and,indices,metadata,if,there,is,no,state,on,disk,meta,state,with,global,generation,1,and,empty,meta,data,is,returned,throws,ioexception,if,some,ioexception,when,loading,files,occurs,or,there,is,no,metadata,referenced,by,manifest,file;tuple,manifest,meta,data,load,full,state,throws,ioexception,final,manifest,manifest,load,latest,state,logger,named,xcontent,registry,node,env,node,data,paths,if,manifest,null,return,load,full,state,bwc,final,meta,data,builder,meta,data,builder,if,manifest,is,global,generation,missing,meta,data,builder,meta,data,builder,else,final,meta,data,global,meta,data,load,generation,logger,named,xcontent,registry,manifest,get,global,generation,node,env,node,data,paths,if,global,meta,data,null,meta,data,builder,meta,data,builder,global,meta,data,else,throw,new,ioexception,failed,to,find,global,metadata,generation,manifest,get,global,generation,for,map,entry,index,long,entry,manifest,get,index,generations,entry,set,final,index,index,entry,get,key,final,long,generation,entry,get,value,final,string,index,folder,name,index,get,uuid,final,index,meta,data,index,meta,data,load,generation,logger,named,xcontent,registry,generation,node,env,resolve,index,folder,index,folder,name,if,index,meta,data,null,meta,data,builder,put,index,meta,data,false,else,throw,new,ioexception,failed,to,find,metadata,for,existing,index,index,get,name,location,index,folder,name,generation,generation,return,new,tuple,manifest,meta,data,builder,build
MetaStateService -> private Tuple<Manifest, MetaData> loadFullStateBWC() throws IOException;1544081506;"Manifest-less" BWC version of loading metadata from disk. See also {@link #loadFullState()};private Tuple<Manifest, MetaData> loadFullStateBWC() throws IOException {_        Map<Index, Long> indices = new HashMap<>()__        MetaData.Builder metaDataBuilder___        Tuple<MetaData, Long> metaDataAndGeneration =_                META_DATA_FORMAT.loadLatestStateWithGeneration(logger, namedXContentRegistry, nodeEnv.nodeDataPaths())__        MetaData globalMetaData = metaDataAndGeneration.v1()__        long globalStateGeneration = metaDataAndGeneration.v2()___        if (globalMetaData != null) {_            metaDataBuilder = MetaData.builder(globalMetaData)__            assert Version.CURRENT.major < 8 : "failed to find manifest file, which is mandatory staring with Elasticsearch version 8.0"__        } else {_            metaDataBuilder = MetaData.builder()__        }__        for (String indexFolderName : nodeEnv.availableIndexFolders()) {_            Tuple<IndexMetaData, Long> indexMetaDataAndGeneration =_                    INDEX_META_DATA_FORMAT.loadLatestStateWithGeneration(logger, namedXContentRegistry,_                            nodeEnv.resolveIndexFolder(indexFolderName))__            assert Version.CURRENT.major < 8 : "failed to find manifest file, which is mandatory staring with Elasticsearch version 8.0"__            IndexMetaData indexMetaData = indexMetaDataAndGeneration.v1()__            long generation = indexMetaDataAndGeneration.v2()__            if (indexMetaData != null) {_                indices.put(indexMetaData.getIndex(), generation)__                metaDataBuilder.put(indexMetaData, false)__            } else {_                logger.debug("[{}] failed to find metadata for existing index location", indexFolderName)__            }_        }__        Manifest manifest = Manifest.unknownCurrentTermAndVersion(globalStateGeneration, indices)__        return new Tuple<>(manifest, metaDataBuilder.build())__    };manifest,less,bwc,version,of,loading,metadata,from,disk,see,also,link,load,full,state;private,tuple,manifest,meta,data,load,full,state,bwc,throws,ioexception,map,index,long,indices,new,hash,map,meta,data,builder,meta,data,builder,tuple,meta,data,long,meta,data,and,generation,load,latest,state,with,generation,logger,named,xcontent,registry,node,env,node,data,paths,meta,data,global,meta,data,meta,data,and,generation,v1,long,global,state,generation,meta,data,and,generation,v2,if,global,meta,data,null,meta,data,builder,meta,data,builder,global,meta,data,assert,version,current,major,8,failed,to,find,manifest,file,which,is,mandatory,staring,with,elasticsearch,version,8,0,else,meta,data,builder,meta,data,builder,for,string,index,folder,name,node,env,available,index,folders,tuple,index,meta,data,long,index,meta,data,and,generation,load,latest,state,with,generation,logger,named,xcontent,registry,node,env,resolve,index,folder,index,folder,name,assert,version,current,major,8,failed,to,find,manifest,file,which,is,mandatory,staring,with,elasticsearch,version,8,0,index,meta,data,index,meta,data,index,meta,data,and,generation,v1,long,generation,index,meta,data,and,generation,v2,if,index,meta,data,null,indices,put,index,meta,data,get,index,generation,meta,data,builder,put,index,meta,data,false,else,logger,debug,failed,to,find,metadata,for,existing,index,location,index,folder,name,manifest,manifest,manifest,unknown,current,term,and,version,global,state,generation,indices,return,new,tuple,manifest,meta,data,builder,build
MetaStateService -> private Tuple<Manifest, MetaData> loadFullStateBWC() throws IOException;1549608646;"Manifest-less" BWC version of loading metadata from disk. See also {@link #loadFullState()};private Tuple<Manifest, MetaData> loadFullStateBWC() throws IOException {_        Map<Index, Long> indices = new HashMap<>()__        MetaData.Builder metaDataBuilder___        Tuple<MetaData, Long> metaDataAndGeneration =_                META_DATA_FORMAT.loadLatestStateWithGeneration(logger, namedXContentRegistry, nodeEnv.nodeDataPaths())__        MetaData globalMetaData = metaDataAndGeneration.v1()__        long globalStateGeneration = metaDataAndGeneration.v2()___        if (globalMetaData != null) {_            metaDataBuilder = MetaData.builder(globalMetaData)__            _            _        } else {_            metaDataBuilder = MetaData.builder()__        }__        for (String indexFolderName : nodeEnv.availableIndexFolders()) {_            Tuple<IndexMetaData, Long> indexMetaDataAndGeneration =_                    INDEX_META_DATA_FORMAT.loadLatestStateWithGeneration(logger, namedXContentRegistry,_                            nodeEnv.resolveIndexFolder(indexFolderName))__            _            _            IndexMetaData indexMetaData = indexMetaDataAndGeneration.v1()__            long generation = indexMetaDataAndGeneration.v2()__            if (indexMetaData != null) {_                indices.put(indexMetaData.getIndex(), generation)__                metaDataBuilder.put(indexMetaData, false)__            } else {_                logger.debug("[{}] failed to find metadata for existing index location", indexFolderName)__            }_        }__        Manifest manifest = Manifest.unknownCurrentTermAndVersion(globalStateGeneration, indices)__        return new Tuple<>(manifest, metaDataBuilder.build())__    };manifest,less,bwc,version,of,loading,metadata,from,disk,see,also,link,load,full,state;private,tuple,manifest,meta,data,load,full,state,bwc,throws,ioexception,map,index,long,indices,new,hash,map,meta,data,builder,meta,data,builder,tuple,meta,data,long,meta,data,and,generation,load,latest,state,with,generation,logger,named,xcontent,registry,node,env,node,data,paths,meta,data,global,meta,data,meta,data,and,generation,v1,long,global,state,generation,meta,data,and,generation,v2,if,global,meta,data,null,meta,data,builder,meta,data,builder,global,meta,data,else,meta,data,builder,meta,data,builder,for,string,index,folder,name,node,env,available,index,folders,tuple,index,meta,data,long,index,meta,data,and,generation,load,latest,state,with,generation,logger,named,xcontent,registry,node,env,resolve,index,folder,index,folder,name,index,meta,data,index,meta,data,index,meta,data,and,generation,v1,long,generation,index,meta,data,and,generation,v2,if,index,meta,data,null,indices,put,index,meta,data,get,index,generation,meta,data,builder,put,index,meta,data,false,else,logger,debug,failed,to,find,metadata,for,existing,index,location,index,folder,name,manifest,manifest,manifest,unknown,current,term,and,version,global,state,generation,indices,return,new,tuple,manifest,meta,data,builder,build
MetaStateService -> public void cleanupIndex(Index index, long currentGeneration);1544081506;Removes old state files in index directory.__@param index             index to perform clean up on._@param currentGeneration current state generation to keep in the index directory.;public void cleanupIndex(Index index, long currentGeneration) {_        INDEX_META_DATA_FORMAT.cleanupOldFiles(currentGeneration, nodeEnv.indexPaths(index))__    };removes,old,state,files,in,index,directory,param,index,index,to,perform,clean,up,on,param,current,generation,current,state,generation,to,keep,in,the,index,directory;public,void,cleanup,index,index,index,long,current,generation,cleanup,old,files,current,generation,node,env,index,paths,index
MetaStateService -> public void cleanupIndex(Index index, long currentGeneration);1549608646;Removes old state files in index directory.__@param index             index to perform clean up on._@param currentGeneration current state generation to keep in the index directory.;public void cleanupIndex(Index index, long currentGeneration) {_        INDEX_META_DATA_FORMAT.cleanupOldFiles(currentGeneration, nodeEnv.indexPaths(index))__    };removes,old,state,files,in,index,directory,param,index,index,to,perform,clean,up,on,param,current,generation,current,state,generation,to,keep,in,the,index,directory;public,void,cleanup,index,index,index,long,current,generation,cleanup,old,files,current,generation,node,env,index,paths,index
MetaStateService -> public void writeIndexAndUpdateManifest(String reason, IndexMetaData metaData) throws IOException;1544081506;Writes index metadata and updates manifest file accordingly._Used by tests.;public void writeIndexAndUpdateManifest(String reason, IndexMetaData metaData) throws IOException {_        long generation = writeIndex(reason, metaData)__        Manifest manifest = loadManifestOrEmpty()__        Map<Index, Long> indices = new HashMap<>(manifest.getIndexGenerations())__        indices.put(metaData.getIndex(), generation)__        manifest = new Manifest(manifest.getCurrentTerm(), manifest.getClusterStateVersion(), manifest.getGlobalGeneration(), indices)__        writeManifestAndCleanup(reason, manifest)__        cleanupIndex(metaData.getIndex(), generation)__    };writes,index,metadata,and,updates,manifest,file,accordingly,used,by,tests;public,void,write,index,and,update,manifest,string,reason,index,meta,data,meta,data,throws,ioexception,long,generation,write,index,reason,meta,data,manifest,manifest,load,manifest,or,empty,map,index,long,indices,new,hash,map,manifest,get,index,generations,indices,put,meta,data,get,index,generation,manifest,new,manifest,manifest,get,current,term,manifest,get,cluster,state,version,manifest,get,global,generation,indices,write,manifest,and,cleanup,reason,manifest,cleanup,index,meta,data,get,index,generation
MetaStateService -> public void writeIndexAndUpdateManifest(String reason, IndexMetaData metaData) throws IOException;1549608646;Writes index metadata and updates manifest file accordingly._Used by tests.;public void writeIndexAndUpdateManifest(String reason, IndexMetaData metaData) throws IOException {_        long generation = writeIndex(reason, metaData)__        Manifest manifest = loadManifestOrEmpty()__        Map<Index, Long> indices = new HashMap<>(manifest.getIndexGenerations())__        indices.put(metaData.getIndex(), generation)__        manifest = new Manifest(manifest.getCurrentTerm(), manifest.getClusterStateVersion(), manifest.getGlobalGeneration(), indices)__        writeManifestAndCleanup(reason, manifest)__        cleanupIndex(metaData.getIndex(), generation)__    };writes,index,metadata,and,updates,manifest,file,accordingly,used,by,tests;public,void,write,index,and,update,manifest,string,reason,index,meta,data,meta,data,throws,ioexception,long,generation,write,index,reason,meta,data,manifest,manifest,load,manifest,or,empty,map,index,long,indices,new,hash,map,manifest,get,index,generations,indices,put,meta,data,get,index,generation,manifest,new,manifest,manifest,get,current,term,manifest,get,cluster,state,version,manifest,get,global,generation,indices,write,manifest,and,cleanup,reason,manifest,cleanup,index,meta,data,get,index,generation
MetaStateService -> long writeGlobalState(String reason, MetaData metaData) throws WriteStateException;1544081506;Writes the global state, *without* the indices states.__@throws WriteStateException if exception when writing state occurs. {@link WriteStateException#isDirty()} will always return_false, because new global state file is not yet referenced by manifest file.;long writeGlobalState(String reason, MetaData metaData) throws WriteStateException {_        logger.trace("[_global] writing state, reason [{}]", reason)__        try {_            long generation = META_DATA_FORMAT.write(metaData, nodeEnv.nodeDataPaths())__            logger.trace("[_global] state written")__            return generation__        } catch (WriteStateException ex) {_            throw new WriteStateException(false, "[_global]: failed to write global state", ex)__        }_    };writes,the,global,state,without,the,indices,states,throws,write,state,exception,if,exception,when,writing,state,occurs,link,write,state,exception,is,dirty,will,always,return,false,because,new,global,state,file,is,not,yet,referenced,by,manifest,file;long,write,global,state,string,reason,meta,data,meta,data,throws,write,state,exception,logger,trace,writing,state,reason,reason,try,long,generation,write,meta,data,node,env,node,data,paths,logger,trace,state,written,return,generation,catch,write,state,exception,ex,throw,new,write,state,exception,false,failed,to,write,global,state,ex
MetaStateService -> long writeGlobalState(String reason, MetaData metaData) throws WriteStateException;1549608646;Writes the global state, *without* the indices states.__@throws WriteStateException if exception when writing state occurs. {@link WriteStateException#isDirty()} will always return_false, because new global state file is not yet referenced by manifest file.;long writeGlobalState(String reason, MetaData metaData) throws WriteStateException {_        logger.trace("[_global] writing state, reason [{}]", reason)__        try {_            long generation = META_DATA_FORMAT.write(metaData, nodeEnv.nodeDataPaths())__            logger.trace("[_global] state written")__            return generation__        } catch (WriteStateException ex) {_            throw new WriteStateException(false, "[_global]: failed to write global state", ex)__        }_    };writes,the,global,state,without,the,indices,states,throws,write,state,exception,if,exception,when,writing,state,occurs,link,write,state,exception,is,dirty,will,always,return,false,because,new,global,state,file,is,not,yet,referenced,by,manifest,file;long,write,global,state,string,reason,meta,data,meta,data,throws,write,state,exception,logger,trace,writing,state,reason,reason,try,long,generation,write,meta,data,node,env,node,data,paths,logger,trace,state,written,return,generation,catch,write,state,exception,ex,throw,new,write,state,exception,false,failed,to,write,global,state,ex
MetaStateService -> void writeGlobalState(String reason, MetaData metaData) throws IOException;1524684173;Writes the global state, *without* the indices states.;void writeGlobalState(String reason, MetaData metaData) throws IOException {_        logger.trace("[_global] writing state, reason [{}]",  reason)__        try {_            MetaData.FORMAT.write(metaData, nodeEnv.nodeDataPaths())__        } catch (Exception ex) {_            logger.warn("[_global]: failed to write global state", ex)__            throw new IOException("failed to write global state", ex)__        }_    };writes,the,global,state,without,the,indices,states;void,write,global,state,string,reason,meta,data,meta,data,throws,ioexception,logger,trace,writing,state,reason,reason,try,meta,data,format,write,meta,data,node,env,node,data,paths,catch,exception,ex,logger,warn,failed,to,write,global,state,ex,throw,new,ioexception,failed,to,write,global,state,ex
MetaStateService -> void writeGlobalState(String reason, MetaData metaData) throws IOException;1529015561;Writes the global state, *without* the indices states.;void writeGlobalState(String reason, MetaData metaData) throws IOException {_        logger.trace("[_global] writing state, reason [{}]",  reason)__        try {_            MetaData.FORMAT.write(metaData, nodeEnv.nodeDataPaths())__            logger.trace("[_global] state written")__        } catch (Exception ex) {_            logger.warn("[_global]: failed to write global state", ex)__            throw new IOException("failed to write global state", ex)__        }_    };writes,the,global,state,without,the,indices,states;void,write,global,state,string,reason,meta,data,meta,data,throws,ioexception,logger,trace,writing,state,reason,reason,try,meta,data,format,write,meta,data,node,env,node,data,paths,logger,trace,state,written,catch,exception,ex,logger,warn,failed,to,write,global,state,ex,throw,new,ioexception,failed,to,write,global,state,ex
MetaStateService -> void writeGlobalState(String reason, MetaData metaData) throws IOException;1539615817;Writes the global state, *without* the indices states.;void writeGlobalState(String reason, MetaData metaData) throws IOException {_        logger.trace("[_global] writing state, reason [{}]",  reason)__        try {_            MetaData.FORMAT.write(metaData, nodeEnv.nodeDataPaths())__            logger.trace("[_global] state written")__        } catch (Exception ex) {_            logger.warn("[_global]: failed to write global state", ex)__            throw new IOException("failed to write global state", ex)__        }_    };writes,the,global,state,without,the,indices,states;void,write,global,state,string,reason,meta,data,meta,data,throws,ioexception,logger,trace,writing,state,reason,reason,try,meta,data,format,write,meta,data,node,env,node,data,paths,logger,trace,state,written,catch,exception,ex,logger,warn,failed,to,write,global,state,ex,throw,new,ioexception,failed,to,write,global,state,ex
MetaStateService -> void writeGlobalState(String reason, MetaData metaData) throws IOException;1541092382;Writes the global state, *without* the indices states.;void writeGlobalState(String reason, MetaData metaData) throws IOException {_        logger.trace("[_global] writing state, reason [{}]",  reason)__        try {_            MetaData.FORMAT.write(metaData, nodeEnv.nodeDataPaths())__            logger.trace("[_global] state written")__        } catch (Exception ex) {_            logger.warn("[_global]: failed to write global state", ex)__            throw new IOException("failed to write global state", ex)__        }_    };writes,the,global,state,without,the,indices,states;void,write,global,state,string,reason,meta,data,meta,data,throws,ioexception,logger,trace,writing,state,reason,reason,try,meta,data,format,write,meta,data,node,env,node,data,paths,logger,trace,state,written,catch,exception,ex,logger,warn,failed,to,write,global,state,ex,throw,new,ioexception,failed,to,write,global,state,ex
MetaStateService -> void writeGlobalState(String reason, MetaData metaData) throws IOException;1542402632;Writes the global state, *without* the indices states.;void writeGlobalState(String reason, MetaData metaData) throws IOException {_        logger.trace("[_global] writing state, reason [{}]",  reason)__        try {_            MetaData.FORMAT.write(metaData, nodeEnv.nodeDataPaths())__            logger.trace("[_global] state written")__        } catch (Exception ex) {_            logger.warn("[_global]: failed to write global state", ex)__            throw new IOException("failed to write global state", ex)__        }_    };writes,the,global,state,without,the,indices,states;void,write,global,state,string,reason,meta,data,meta,data,throws,ioexception,logger,trace,writing,state,reason,reason,try,meta,data,format,write,meta,data,node,env,node,data,paths,logger,trace,state,written,catch,exception,ex,logger,warn,failed,to,write,global,state,ex,throw,new,ioexception,failed,to,write,global,state,ex
MetaStateService -> public Manifest loadManifestOrEmpty() throws IOException;1544081506;Loads Manifest file from disk, returns <code>Manifest.empty()</code> if there is no manifest file.;public Manifest loadManifestOrEmpty() throws IOException {_        Manifest manifest = MANIFEST_FORMAT.loadLatestState(logger, namedXContentRegistry, nodeEnv.nodeDataPaths())__        if (manifest == null) {_            manifest = Manifest.empty()__        }_        return manifest__    };loads,manifest,file,from,disk,returns,code,manifest,empty,code,if,there,is,no,manifest,file;public,manifest,load,manifest,or,empty,throws,ioexception,manifest,manifest,load,latest,state,logger,named,xcontent,registry,node,env,node,data,paths,if,manifest,null,manifest,manifest,empty,return,manifest
MetaStateService -> public Manifest loadManifestOrEmpty() throws IOException;1549608646;Loads Manifest file from disk, returns <code>Manifest.empty()</code> if there is no manifest file.;public Manifest loadManifestOrEmpty() throws IOException {_        Manifest manifest = MANIFEST_FORMAT.loadLatestState(logger, namedXContentRegistry, nodeEnv.nodeDataPaths())__        if (manifest == null) {_            manifest = Manifest.empty()__        }_        return manifest__    };loads,manifest,file,from,disk,returns,code,manifest,empty,code,if,there,is,no,manifest,file;public,manifest,load,manifest,or,empty,throws,ioexception,manifest,manifest,load,latest,state,logger,named,xcontent,registry,node,env,node,data,paths,if,manifest,null,manifest,manifest,empty,return,manifest
MetaStateService -> public void writeIndex(String reason, IndexMetaData indexMetaData) throws IOException;1524684173;Writes the index state.__This method is public for testing purposes.;public void writeIndex(String reason, IndexMetaData indexMetaData) throws IOException {_        final Index index = indexMetaData.getIndex()__        logger.trace("[{}] writing state, reason [{}]", index, reason)__        try {_            IndexMetaData.FORMAT.write(indexMetaData,_                nodeEnv.indexPaths(indexMetaData.getIndex()))__        } catch (Exception ex) {_            logger.warn(() -> new ParameterizedMessage("[{}]: failed to write index state", index), ex)__            throw new IOException("failed to write state for [" + index + "]", ex)__        }_    };writes,the,index,state,this,method,is,public,for,testing,purposes;public,void,write,index,string,reason,index,meta,data,index,meta,data,throws,ioexception,final,index,index,index,meta,data,get,index,logger,trace,writing,state,reason,index,reason,try,index,meta,data,format,write,index,meta,data,node,env,index,paths,index,meta,data,get,index,catch,exception,ex,logger,warn,new,parameterized,message,failed,to,write,index,state,index,ex,throw,new,ioexception,failed,to,write,state,for,index,ex
MetaStateService -> public void writeIndex(String reason, IndexMetaData indexMetaData) throws IOException;1529015561;Writes the index state.__This method is public for testing purposes.;public void writeIndex(String reason, IndexMetaData indexMetaData) throws IOException {_        final Index index = indexMetaData.getIndex()__        logger.trace("[{}] writing state, reason [{}]", index, reason)__        try {_            IndexMetaData.FORMAT.write(indexMetaData,_                nodeEnv.indexPaths(indexMetaData.getIndex()))__            logger.trace("[{}] state written", index)__        } catch (Exception ex) {_            logger.warn(() -> new ParameterizedMessage("[{}]: failed to write index state", index), ex)__            throw new IOException("failed to write state for [" + index + "]", ex)__        }_    };writes,the,index,state,this,method,is,public,for,testing,purposes;public,void,write,index,string,reason,index,meta,data,index,meta,data,throws,ioexception,final,index,index,index,meta,data,get,index,logger,trace,writing,state,reason,index,reason,try,index,meta,data,format,write,index,meta,data,node,env,index,paths,index,meta,data,get,index,logger,trace,state,written,index,catch,exception,ex,logger,warn,new,parameterized,message,failed,to,write,index,state,index,ex,throw,new,ioexception,failed,to,write,state,for,index,ex
MetaStateService -> public void writeIndex(String reason, IndexMetaData indexMetaData) throws IOException;1539615817;Writes the index state.__This method is public for testing purposes.;public void writeIndex(String reason, IndexMetaData indexMetaData) throws IOException {_        final Index index = indexMetaData.getIndex()__        logger.trace("[{}] writing state, reason [{}]", index, reason)__        try {_            IndexMetaData.FORMAT.write(indexMetaData,_                nodeEnv.indexPaths(indexMetaData.getIndex()))__            logger.trace("[{}] state written", index)__        } catch (Exception ex) {_            logger.warn(() -> new ParameterizedMessage("[{}]: failed to write index state", index), ex)__            throw new IOException("failed to write state for [" + index + "]", ex)__        }_    };writes,the,index,state,this,method,is,public,for,testing,purposes;public,void,write,index,string,reason,index,meta,data,index,meta,data,throws,ioexception,final,index,index,index,meta,data,get,index,logger,trace,writing,state,reason,index,reason,try,index,meta,data,format,write,index,meta,data,node,env,index,paths,index,meta,data,get,index,logger,trace,state,written,index,catch,exception,ex,logger,warn,new,parameterized,message,failed,to,write,index,state,index,ex,throw,new,ioexception,failed,to,write,state,for,index,ex
MetaStateService -> public void writeIndex(String reason, IndexMetaData indexMetaData) throws IOException;1541092382;Writes the index state.__This method is public for testing purposes.;public void writeIndex(String reason, IndexMetaData indexMetaData) throws IOException {_        final Index index = indexMetaData.getIndex()__        logger.trace("[{}] writing state, reason [{}]", index, reason)__        try {_            IndexMetaData.FORMAT.write(indexMetaData,_                nodeEnv.indexPaths(indexMetaData.getIndex()))__            logger.trace("[{}] state written", index)__        } catch (Exception ex) {_            logger.warn(() -> new ParameterizedMessage("[{}]: failed to write index state", index), ex)__            throw new IOException("failed to write state for [" + index + "]", ex)__        }_    };writes,the,index,state,this,method,is,public,for,testing,purposes;public,void,write,index,string,reason,index,meta,data,index,meta,data,throws,ioexception,final,index,index,index,meta,data,get,index,logger,trace,writing,state,reason,index,reason,try,index,meta,data,format,write,index,meta,data,node,env,index,paths,index,meta,data,get,index,logger,trace,state,written,index,catch,exception,ex,logger,warn,new,parameterized,message,failed,to,write,index,state,index,ex,throw,new,ioexception,failed,to,write,state,for,index,ex
MetaStateService -> public void writeIndex(String reason, IndexMetaData indexMetaData) throws IOException;1542402632;Writes the index state.__This method is public for testing purposes.;public void writeIndex(String reason, IndexMetaData indexMetaData) throws IOException {_        final Index index = indexMetaData.getIndex()__        logger.trace("[{}] writing state, reason [{}]", index, reason)__        try {_            IndexMetaData.FORMAT.write(indexMetaData,_                nodeEnv.indexPaths(indexMetaData.getIndex()))__            logger.trace("[{}] state written", index)__        } catch (Exception ex) {_            logger.warn(() -> new ParameterizedMessage("[{}]: failed to write index state", index), ex)__            throw new IOException("failed to write state for [" + index + "]", ex)__        }_    };writes,the,index,state,this,method,is,public,for,testing,purposes;public,void,write,index,string,reason,index,meta,data,index,meta,data,throws,ioexception,final,index,index,index,meta,data,get,index,logger,trace,writing,state,reason,index,reason,try,index,meta,data,format,write,index,meta,data,node,env,index,paths,index,meta,data,get,index,logger,trace,state,written,index,catch,exception,ex,logger,warn,new,parameterized,message,failed,to,write,index,state,index,ex,throw,new,ioexception,failed,to,write,state,for,index,ex
MetaStateService -> public long writeManifestAndCleanup(String reason, Manifest manifest) throws WriteStateException;1544081506;Writes manifest file (represented by {@link Manifest}) to disk and performs cleanup of old manifest state file if_the write succeeds or newly created manifest state if the write fails.__@throws WriteStateException if exception when writing state occurs. See also {@link WriteStateException#isDirty()};public long writeManifestAndCleanup(String reason, Manifest manifest) throws WriteStateException {_        logger.trace("[_meta] writing state, reason [{}]", reason)__        try {_            long generation = MANIFEST_FORMAT.writeAndCleanup(manifest, nodeEnv.nodeDataPaths())__            logger.trace("[_meta] state written (generation: {})", generation)__            return generation__        } catch (WriteStateException ex) {_            throw new WriteStateException(ex.isDirty(), "[_meta]: failed to write meta state", ex)__        }_    };writes,manifest,file,represented,by,link,manifest,to,disk,and,performs,cleanup,of,old,manifest,state,file,if,the,write,succeeds,or,newly,created,manifest,state,if,the,write,fails,throws,write,state,exception,if,exception,when,writing,state,occurs,see,also,link,write,state,exception,is,dirty;public,long,write,manifest,and,cleanup,string,reason,manifest,manifest,throws,write,state,exception,logger,trace,writing,state,reason,reason,try,long,generation,write,and,cleanup,manifest,node,env,node,data,paths,logger,trace,state,written,generation,generation,return,generation,catch,write,state,exception,ex,throw,new,write,state,exception,ex,is,dirty,failed,to,write,meta,state,ex
MetaStateService -> public long writeManifestAndCleanup(String reason, Manifest manifest) throws WriteStateException;1549608646;Writes manifest file (represented by {@link Manifest}) to disk and performs cleanup of old manifest state file if_the write succeeds or newly created manifest state if the write fails.__@throws WriteStateException if exception when writing state occurs. See also {@link WriteStateException#isDirty()};public long writeManifestAndCleanup(String reason, Manifest manifest) throws WriteStateException {_        logger.trace("[_meta] writing state, reason [{}]", reason)__        try {_            long generation = MANIFEST_FORMAT.writeAndCleanup(manifest, nodeEnv.nodeDataPaths())__            logger.trace("[_meta] state written (generation: {})", generation)__            return generation__        } catch (WriteStateException ex) {_            throw new WriteStateException(ex.isDirty(), "[_meta]: failed to write meta state", ex)__        }_    };writes,manifest,file,represented,by,link,manifest,to,disk,and,performs,cleanup,of,old,manifest,state,file,if,the,write,succeeds,or,newly,created,manifest,state,if,the,write,fails,throws,write,state,exception,if,exception,when,writing,state,occurs,see,also,link,write,state,exception,is,dirty;public,long,write,manifest,and,cleanup,string,reason,manifest,manifest,throws,write,state,exception,logger,trace,writing,state,reason,reason,try,long,generation,write,and,cleanup,manifest,node,env,node,data,paths,logger,trace,state,written,generation,generation,return,generation,catch,write,state,exception,ex,throw,new,write,state,exception,ex,is,dirty,failed,to,write,meta,state,ex
MetaStateService -> @Nullable     public IndexMetaData loadIndexState(Index index) throws IOException;1524684173;Loads the index state for the provided index name, returning null if doesn't exists.;@Nullable_    public IndexMetaData loadIndexState(Index index) throws IOException {_        return IndexMetaData.FORMAT.loadLatestState(logger, namedXContentRegistry, nodeEnv.indexPaths(index))__    };loads,the,index,state,for,the,provided,index,name,returning,null,if,doesn,t,exists;nullable,public,index,meta,data,load,index,state,index,index,throws,ioexception,return,index,meta,data,format,load,latest,state,logger,named,xcontent,registry,node,env,index,paths,index
MetaStateService -> @Nullable     public IndexMetaData loadIndexState(Index index) throws IOException;1529015561;Loads the index state for the provided index name, returning null if doesn't exists.;@Nullable_    public IndexMetaData loadIndexState(Index index) throws IOException {_        return IndexMetaData.FORMAT.loadLatestState(logger, namedXContentRegistry, nodeEnv.indexPaths(index))__    };loads,the,index,state,for,the,provided,index,name,returning,null,if,doesn,t,exists;nullable,public,index,meta,data,load,index,state,index,index,throws,ioexception,return,index,meta,data,format,load,latest,state,logger,named,xcontent,registry,node,env,index,paths,index
MetaStateService -> @Nullable     public IndexMetaData loadIndexState(Index index) throws IOException;1539615817;Loads the index state for the provided index name, returning null if doesn't exists.;@Nullable_    public IndexMetaData loadIndexState(Index index) throws IOException {_        return IndexMetaData.FORMAT.loadLatestState(logger, namedXContentRegistry, nodeEnv.indexPaths(index))__    };loads,the,index,state,for,the,provided,index,name,returning,null,if,doesn,t,exists;nullable,public,index,meta,data,load,index,state,index,index,throws,ioexception,return,index,meta,data,format,load,latest,state,logger,named,xcontent,registry,node,env,index,paths,index
MetaStateService -> @Nullable     public IndexMetaData loadIndexState(Index index) throws IOException;1541092382;Loads the index state for the provided index name, returning null if doesn't exists.;@Nullable_    public IndexMetaData loadIndexState(Index index) throws IOException {_        return IndexMetaData.FORMAT.loadLatestState(logger, namedXContentRegistry, nodeEnv.indexPaths(index))__    };loads,the,index,state,for,the,provided,index,name,returning,null,if,doesn,t,exists;nullable,public,index,meta,data,load,index,state,index,index,throws,ioexception,return,index,meta,data,format,load,latest,state,logger,named,xcontent,registry,node,env,index,paths,index
MetaStateService -> @Nullable     public IndexMetaData loadIndexState(Index index) throws IOException;1542402632;Loads the index state for the provided index name, returning null if doesn't exists.;@Nullable_    public IndexMetaData loadIndexState(Index index) throws IOException {_        return IndexMetaData.FORMAT.loadLatestState(logger, namedXContentRegistry, nodeEnv.indexPaths(index))__    };loads,the,index,state,for,the,provided,index,name,returning,null,if,doesn,t,exists;nullable,public,index,meta,data,load,index,state,index,index,throws,ioexception,return,index,meta,data,format,load,latest,state,logger,named,xcontent,registry,node,env,index,paths,index
MetaStateService -> @Nullable     public IndexMetaData loadIndexState(Index index) throws IOException;1544081506;Loads the index state for the provided index name, returning null if doesn't exists.;@Nullable_    public IndexMetaData loadIndexState(Index index) throws IOException {_        return INDEX_META_DATA_FORMAT.loadLatestState(logger, namedXContentRegistry, nodeEnv.indexPaths(index))__    };loads,the,index,state,for,the,provided,index,name,returning,null,if,doesn,t,exists;nullable,public,index,meta,data,load,index,state,index,index,throws,ioexception,return,load,latest,state,logger,named,xcontent,registry,node,env,index,paths,index
MetaStateService -> @Nullable     public IndexMetaData loadIndexState(Index index) throws IOException;1549608646;Loads the index state for the provided index name, returning null if doesn't exists.;@Nullable_    public IndexMetaData loadIndexState(Index index) throws IOException {_        return INDEX_META_DATA_FORMAT.loadLatestState(logger, namedXContentRegistry, nodeEnv.indexPaths(index))__    };loads,the,index,state,for,the,provided,index,name,returning,null,if,doesn,t,exists;nullable,public,index,meta,data,load,index,state,index,index,throws,ioexception,return,load,latest,state,logger,named,xcontent,registry,node,env,index,paths,index
MetaStateService -> MetaData loadFullState() throws IOException;1524684173;Loads the full state, which includes both the global state and all the indices_meta state.;MetaData loadFullState() throws IOException {_        MetaData globalMetaData = loadGlobalState()__        MetaData.Builder metaDataBuilder__        if (globalMetaData != null) {_            metaDataBuilder = MetaData.builder(globalMetaData)__        } else {_            metaDataBuilder = MetaData.builder()__        }_        for (String indexFolderName : nodeEnv.availableIndexFolders()) {_            IndexMetaData indexMetaData = IndexMetaData.FORMAT.loadLatestState(logger, namedXContentRegistry,_                nodeEnv.resolveIndexFolder(indexFolderName))__            if (indexMetaData != null) {_                metaDataBuilder.put(indexMetaData, false)__            } else {_                logger.debug("[{}] failed to find metadata for existing index location", indexFolderName)__            }_        }_        return metaDataBuilder.build()__    };loads,the,full,state,which,includes,both,the,global,state,and,all,the,indices,meta,state;meta,data,load,full,state,throws,ioexception,meta,data,global,meta,data,load,global,state,meta,data,builder,meta,data,builder,if,global,meta,data,null,meta,data,builder,meta,data,builder,global,meta,data,else,meta,data,builder,meta,data,builder,for,string,index,folder,name,node,env,available,index,folders,index,meta,data,index,meta,data,index,meta,data,format,load,latest,state,logger,named,xcontent,registry,node,env,resolve,index,folder,index,folder,name,if,index,meta,data,null,meta,data,builder,put,index,meta,data,false,else,logger,debug,failed,to,find,metadata,for,existing,index,location,index,folder,name,return,meta,data,builder,build
MetaStateService -> MetaData loadFullState() throws IOException;1529015561;Loads the full state, which includes both the global state and all the indices_meta state.;MetaData loadFullState() throws IOException {_        MetaData globalMetaData = loadGlobalState()__        MetaData.Builder metaDataBuilder__        if (globalMetaData != null) {_            metaDataBuilder = MetaData.builder(globalMetaData)__        } else {_            metaDataBuilder = MetaData.builder()__        }_        for (String indexFolderName : nodeEnv.availableIndexFolders()) {_            IndexMetaData indexMetaData = IndexMetaData.FORMAT.loadLatestState(logger, namedXContentRegistry,_                nodeEnv.resolveIndexFolder(indexFolderName))__            if (indexMetaData != null) {_                metaDataBuilder.put(indexMetaData, false)__            } else {_                logger.debug("[{}] failed to find metadata for existing index location", indexFolderName)__            }_        }_        return metaDataBuilder.build()__    };loads,the,full,state,which,includes,both,the,global,state,and,all,the,indices,meta,state;meta,data,load,full,state,throws,ioexception,meta,data,global,meta,data,load,global,state,meta,data,builder,meta,data,builder,if,global,meta,data,null,meta,data,builder,meta,data,builder,global,meta,data,else,meta,data,builder,meta,data,builder,for,string,index,folder,name,node,env,available,index,folders,index,meta,data,index,meta,data,index,meta,data,format,load,latest,state,logger,named,xcontent,registry,node,env,resolve,index,folder,index,folder,name,if,index,meta,data,null,meta,data,builder,put,index,meta,data,false,else,logger,debug,failed,to,find,metadata,for,existing,index,location,index,folder,name,return,meta,data,builder,build
MetaStateService -> MetaData loadFullState() throws IOException;1539615817;Loads the full state, which includes both the global state and all the indices_meta state.;MetaData loadFullState() throws IOException {_        MetaData globalMetaData = loadGlobalState()__        MetaData.Builder metaDataBuilder__        if (globalMetaData != null) {_            metaDataBuilder = MetaData.builder(globalMetaData)__        } else {_            metaDataBuilder = MetaData.builder()__        }_        for (String indexFolderName : nodeEnv.availableIndexFolders()) {_            IndexMetaData indexMetaData = IndexMetaData.FORMAT.loadLatestState(logger, namedXContentRegistry,_                nodeEnv.resolveIndexFolder(indexFolderName))__            if (indexMetaData != null) {_                metaDataBuilder.put(indexMetaData, false)__            } else {_                logger.debug("[{}] failed to find metadata for existing index location", indexFolderName)__            }_        }_        return metaDataBuilder.build()__    };loads,the,full,state,which,includes,both,the,global,state,and,all,the,indices,meta,state;meta,data,load,full,state,throws,ioexception,meta,data,global,meta,data,load,global,state,meta,data,builder,meta,data,builder,if,global,meta,data,null,meta,data,builder,meta,data,builder,global,meta,data,else,meta,data,builder,meta,data,builder,for,string,index,folder,name,node,env,available,index,folders,index,meta,data,index,meta,data,index,meta,data,format,load,latest,state,logger,named,xcontent,registry,node,env,resolve,index,folder,index,folder,name,if,index,meta,data,null,meta,data,builder,put,index,meta,data,false,else,logger,debug,failed,to,find,metadata,for,existing,index,location,index,folder,name,return,meta,data,builder,build
MetaStateService -> MetaData loadFullState() throws IOException;1541092382;Loads the full state, which includes both the global state and all the indices_meta state.;MetaData loadFullState() throws IOException {_        MetaData globalMetaData = loadGlobalState()__        MetaData.Builder metaDataBuilder__        if (globalMetaData != null) {_            metaDataBuilder = MetaData.builder(globalMetaData)__        } else {_            metaDataBuilder = MetaData.builder()__        }_        for (String indexFolderName : nodeEnv.availableIndexFolders()) {_            IndexMetaData indexMetaData = IndexMetaData.FORMAT.loadLatestState(logger, namedXContentRegistry,_                nodeEnv.resolveIndexFolder(indexFolderName))__            if (indexMetaData != null) {_                metaDataBuilder.put(indexMetaData, false)__            } else {_                logger.debug("[{}] failed to find metadata for existing index location", indexFolderName)__            }_        }_        return metaDataBuilder.build()__    };loads,the,full,state,which,includes,both,the,global,state,and,all,the,indices,meta,state;meta,data,load,full,state,throws,ioexception,meta,data,global,meta,data,load,global,state,meta,data,builder,meta,data,builder,if,global,meta,data,null,meta,data,builder,meta,data,builder,global,meta,data,else,meta,data,builder,meta,data,builder,for,string,index,folder,name,node,env,available,index,folders,index,meta,data,index,meta,data,index,meta,data,format,load,latest,state,logger,named,xcontent,registry,node,env,resolve,index,folder,index,folder,name,if,index,meta,data,null,meta,data,builder,put,index,meta,data,false,else,logger,debug,failed,to,find,metadata,for,existing,index,location,index,folder,name,return,meta,data,builder,build
MetaStateService -> MetaData loadFullState() throws IOException;1542402632;Loads the full state, which includes both the global state and all the indices_meta state.;MetaData loadFullState() throws IOException {_        MetaData globalMetaData = loadGlobalState()__        MetaData.Builder metaDataBuilder__        if (globalMetaData != null) {_            metaDataBuilder = MetaData.builder(globalMetaData)__        } else {_            metaDataBuilder = MetaData.builder()__        }_        for (String indexFolderName : nodeEnv.availableIndexFolders()) {_            IndexMetaData indexMetaData = IndexMetaData.FORMAT.loadLatestState(logger, namedXContentRegistry,_                nodeEnv.resolveIndexFolder(indexFolderName))__            if (indexMetaData != null) {_                metaDataBuilder.put(indexMetaData, false)__            } else {_                logger.debug("[{}] failed to find metadata for existing index location", indexFolderName)__            }_        }_        return metaDataBuilder.build()__    };loads,the,full,state,which,includes,both,the,global,state,and,all,the,indices,meta,state;meta,data,load,full,state,throws,ioexception,meta,data,global,meta,data,load,global,state,meta,data,builder,meta,data,builder,if,global,meta,data,null,meta,data,builder,meta,data,builder,global,meta,data,else,meta,data,builder,meta,data,builder,for,string,index,folder,name,node,env,available,index,folders,index,meta,data,index,meta,data,index,meta,data,format,load,latest,state,logger,named,xcontent,registry,node,env,resolve,index,folder,index,folder,name,if,index,meta,data,null,meta,data,builder,put,index,meta,data,false,else,logger,debug,failed,to,find,metadata,for,existing,index,location,index,folder,name,return,meta,data,builder,build
MetaStateService -> void cleanupGlobalState(long currentGeneration);1544081506;Removes old state files in global state directory.__@param currentGeneration current state generation to keep in the directory.;void cleanupGlobalState(long currentGeneration) {_        META_DATA_FORMAT.cleanupOldFiles(currentGeneration, nodeEnv.nodeDataPaths())__    };removes,old,state,files,in,global,state,directory,param,current,generation,current,state,generation,to,keep,in,the,directory;void,cleanup,global,state,long,current,generation,cleanup,old,files,current,generation,node,env,node,data,paths
MetaStateService -> void cleanupGlobalState(long currentGeneration);1549608646;Removes old state files in global state directory.__@param currentGeneration current state generation to keep in the directory.;void cleanupGlobalState(long currentGeneration) {_        META_DATA_FORMAT.cleanupOldFiles(currentGeneration, nodeEnv.nodeDataPaths())__    };removes,old,state,files,in,global,state,directory,param,current,generation,current,state,generation,to,keep,in,the,directory;void,cleanup,global,state,long,current,generation,cleanup,old,files,current,generation,node,env,node,data,paths
MetaStateService -> public void writeGlobalStateAndUpdateManifest(String reason, MetaData metaData) throws IOException;1544081506;Writes global metadata and updates manifest file accordingly._Used by tests.;public void writeGlobalStateAndUpdateManifest(String reason, MetaData metaData) throws IOException {_        long generation = writeGlobalState(reason, metaData)__        Manifest manifest = loadManifestOrEmpty()__        manifest = new Manifest(manifest.getCurrentTerm(), manifest.getClusterStateVersion(), generation, manifest.getIndexGenerations())__        writeManifestAndCleanup(reason, manifest)__        cleanupGlobalState(generation)__    };writes,global,metadata,and,updates,manifest,file,accordingly,used,by,tests;public,void,write,global,state,and,update,manifest,string,reason,meta,data,meta,data,throws,ioexception,long,generation,write,global,state,reason,meta,data,manifest,manifest,load,manifest,or,empty,manifest,new,manifest,manifest,get,current,term,manifest,get,cluster,state,version,generation,manifest,get,index,generations,write,manifest,and,cleanup,reason,manifest,cleanup,global,state,generation
MetaStateService -> public void writeGlobalStateAndUpdateManifest(String reason, MetaData metaData) throws IOException;1549608646;Writes global metadata and updates manifest file accordingly._Used by tests.;public void writeGlobalStateAndUpdateManifest(String reason, MetaData metaData) throws IOException {_        long generation = writeGlobalState(reason, metaData)__        Manifest manifest = loadManifestOrEmpty()__        manifest = new Manifest(manifest.getCurrentTerm(), manifest.getClusterStateVersion(), generation, manifest.getIndexGenerations())__        writeManifestAndCleanup(reason, manifest)__        cleanupGlobalState(generation)__    };writes,global,metadata,and,updates,manifest,file,accordingly,used,by,tests;public,void,write,global,state,and,update,manifest,string,reason,meta,data,meta,data,throws,ioexception,long,generation,write,global,state,reason,meta,data,manifest,manifest,load,manifest,or,empty,manifest,new,manifest,manifest,get,current,term,manifest,get,cluster,state,version,generation,manifest,get,index,generations,write,manifest,and,cleanup,reason,manifest,cleanup,global,state,generation
