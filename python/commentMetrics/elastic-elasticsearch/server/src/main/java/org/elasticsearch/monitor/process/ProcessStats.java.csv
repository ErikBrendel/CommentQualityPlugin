commented;modifiers;parameterAmount;loc;comment;code
false;public;1;8;;@Override public void writeTo(StreamOutput out) throws IOException {     out.writeVLong(timestamp).     out.writeLong(openFileDescriptors).     out.writeLong(maxFileDescriptors).     out.writeOptionalWriteable(cpu).     out.writeOptionalWriteable(mem). }
false;public;0;3;;public long getTimestamp() {     return timestamp. }
false;public;0;3;;public long getOpenFileDescriptors() {     return openFileDescriptors. }
false;public;0;3;;public long getMaxFileDescriptors() {     return maxFileDescriptors. }
false;public;0;3;;public Cpu getCpu() {     return cpu. }
false;public;0;3;;public Mem getMem() {     return mem. }
false;public;2;20;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.startObject(Fields.PROCESS).     builder.field(Fields.TIMESTAMP, timestamp).     builder.field(Fields.OPEN_FILE_DESCRIPTORS, openFileDescriptors).     builder.field(Fields.MAX_FILE_DESCRIPTORS, maxFileDescriptors).     if (cpu != null) {         builder.startObject(Fields.CPU).         builder.field(Fields.PERCENT, cpu.percent).         builder.humanReadableField(Fields.TOTAL_IN_MILLIS, Fields.TOTAL, new TimeValue(cpu.total)).         builder.endObject().     }     if (mem != null) {         builder.startObject(Fields.MEM).         builder.humanReadableField(Fields.TOTAL_VIRTUAL_IN_BYTES, Fields.TOTAL_VIRTUAL, new ByteSizeValue(mem.totalVirtual)).         builder.endObject().     }     builder.endObject().     return builder. }
false;public;1;4;;@Override public void writeTo(StreamOutput out) throws IOException {     out.writeLong(totalVirtual). }
false;public;0;3;;public ByteSizeValue getTotalVirtual() {     return new ByteSizeValue(totalVirtual). }
false;public;1;5;;@Override public void writeTo(StreamOutput out) throws IOException {     out.writeShort(percent).     out.writeLong(total). }
true;public;0;3;/**  * Get the Process cpu usage.  * <p>  * Supported Platforms: All.  */ ;/**  * Get the Process cpu usage.  * <p>  * Supported Platforms: All.  */ public short getPercent() {     return percent. }
true;public;0;3;/**  * Get the Process cpu time (sum of User and Sys).  * <p>  * Supported Platforms: All.  */ ;/**  * Get the Process cpu time (sum of User and Sys).  * <p>  * Supported Platforms: All.  */ public TimeValue getTotal() {     return new TimeValue(total). }
