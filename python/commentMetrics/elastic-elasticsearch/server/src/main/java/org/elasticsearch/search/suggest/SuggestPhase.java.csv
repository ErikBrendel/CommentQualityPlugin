commented;modifiers;parameterAmount;loc;comment;code
false;public;1;3;;@Override public void preProcess(SearchContext context) { }
false;public;1;25;;@Override public void execute(SearchContext context) {     final SuggestionSearchContext suggest = context.suggest().     if (suggest == null) {         return.     }     try {         CharsRefBuilder spare = new CharsRefBuilder().         final List<Suggestion<? extends Entry<? extends Option>>> suggestions = new ArrayList<>(suggest.suggestions().size()).         for (Map.Entry<String, SuggestionSearchContext.SuggestionContext> entry : suggest.suggestions().entrySet()) {             SuggestionSearchContext.SuggestionContext suggestion = entry.getValue().             Suggester<SuggestionContext> suggester = suggestion.getSuggester().             Suggestion<? extends Entry<? extends Option>> result = suggester.execute(entry.getKey(), suggestion, context.searcher(), spare).             if (result != null) {                 assert entry.getKey().equals(result.name).                 suggestions.add(result).             }         }         context.queryResult().suggest(new Suggest(suggestions)).     } catch (IOException e) {         throw new ElasticsearchException("I/O exception during suggest phase", e).     } }
