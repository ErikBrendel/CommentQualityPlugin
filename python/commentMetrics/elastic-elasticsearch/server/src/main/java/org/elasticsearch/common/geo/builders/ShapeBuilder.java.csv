# id;timestamp;commentText;codeText;commentWords;codeWords
ShapeBuilder -> protected ShapeBuilder();1524684173;default ctor;protected ShapeBuilder() {_        coordinates = new ArrayList<>()__    };default,ctor;protected,shape,builder,coordinates,new,array,list
ShapeBuilder -> protected ShapeBuilder();1538067637;default ctor;protected ShapeBuilder() {_        coordinates = new ArrayList<>()__    };default,ctor;protected,shape,builder,coordinates,new,array,list
ShapeBuilder -> protected ShapeBuilder();1542820501;default ctor;protected ShapeBuilder() {_        coordinates = new ArrayList<>()__    };default,ctor;protected,shape,builder,coordinates,new,array,list
ShapeBuilder -> protected ShapeBuilder();1548434247;default ctor;protected ShapeBuilder() {_        coordinates = new ArrayList<>()__    };default,ctor;protected,shape,builder,coordinates,new,array,list
ShapeBuilder -> protected XContentBuilder coordinatesToXcontent(XContentBuilder builder, boolean closed) throws IOException;1524684173;builds an array of coordinates to a {@link XContentBuilder}__@param builder builder to use_@param closed repeat the first point at the end of the array if it's not already defines as last element of the array_@return the builder;protected XContentBuilder coordinatesToXcontent(XContentBuilder builder, boolean closed) throws IOException {_        builder.startArray()__        for(Coordinate coord : coordinates) {_            toXContent(builder, coord)__        }_        if(closed) {_            Coordinate start = coordinates.get(0)__            Coordinate end = coordinates.get(coordinates.size()-1)__            if(start.x != end.x || start.y != end.y) {_                toXContent(builder, coordinates.get(0))__            }_        }_        builder.endArray()__        return builder__    };builds,an,array,of,coordinates,to,a,link,xcontent,builder,param,builder,builder,to,use,param,closed,repeat,the,first,point,at,the,end,of,the,array,if,it,s,not,already,defines,as,last,element,of,the,array,return,the,builder;protected,xcontent,builder,coordinates,to,xcontent,xcontent,builder,builder,boolean,closed,throws,ioexception,builder,start,array,for,coordinate,coord,coordinates,to,xcontent,builder,coord,if,closed,coordinate,start,coordinates,get,0,coordinate,end,coordinates,get,coordinates,size,1,if,start,x,end,x,start,y,end,y,to,xcontent,builder,coordinates,get,0,builder,end,array,return,builder
ShapeBuilder -> protected XContentBuilder coordinatesToXcontent(XContentBuilder builder, boolean closed) throws IOException;1538067637;builds an array of coordinates to a {@link XContentBuilder}__@param builder builder to use_@param closed repeat the first point at the end of the array if it's not already defines as last element of the array_@return the builder;protected XContentBuilder coordinatesToXcontent(XContentBuilder builder, boolean closed) throws IOException {_        builder.startArray()__        for(Coordinate coord : coordinates) {_            toXContent(builder, coord)__        }_        if(closed) {_            Coordinate start = coordinates.get(0)__            Coordinate end = coordinates.get(coordinates.size()-1)__            if(start.x != end.x || start.y != end.y) {_                toXContent(builder, coordinates.get(0))__            }_        }_        builder.endArray()__        return builder__    };builds,an,array,of,coordinates,to,a,link,xcontent,builder,param,builder,builder,to,use,param,closed,repeat,the,first,point,at,the,end,of,the,array,if,it,s,not,already,defines,as,last,element,of,the,array,return,the,builder;protected,xcontent,builder,coordinates,to,xcontent,xcontent,builder,builder,boolean,closed,throws,ioexception,builder,start,array,for,coordinate,coord,coordinates,to,xcontent,builder,coord,if,closed,coordinate,start,coordinates,get,0,coordinate,end,coordinates,get,coordinates,size,1,if,start,x,end,x,start,y,end,y,to,xcontent,builder,coordinates,get,0,builder,end,array,return,builder
ShapeBuilder -> protected XContentBuilder coordinatesToXcontent(XContentBuilder builder, boolean closed) throws IOException;1542820501;builds an array of coordinates to a {@link XContentBuilder}__@param builder builder to use_@param closed repeat the first point at the end of the array if it's not already defines as last element of the array_@return the builder;protected XContentBuilder coordinatesToXcontent(XContentBuilder builder, boolean closed) throws IOException {_        builder.startArray()__        for(Coordinate coord : coordinates) {_            toXContent(builder, coord)__        }_        if(closed) {_            Coordinate start = coordinates.get(0)__            Coordinate end = coordinates.get(coordinates.size()-1)__            if(start.x != end.x || start.y != end.y) {_                toXContent(builder, coordinates.get(0))__            }_        }_        builder.endArray()__        return builder__    };builds,an,array,of,coordinates,to,a,link,xcontent,builder,param,builder,builder,to,use,param,closed,repeat,the,first,point,at,the,end,of,the,array,if,it,s,not,already,defines,as,last,element,of,the,array,return,the,builder;protected,xcontent,builder,coordinates,to,xcontent,xcontent,builder,builder,boolean,closed,throws,ioexception,builder,start,array,for,coordinate,coord,coordinates,to,xcontent,builder,coord,if,closed,coordinate,start,coordinates,get,0,coordinate,end,coordinates,get,coordinates,size,1,if,start,x,end,x,start,y,end,y,to,xcontent,builder,coordinates,get,0,builder,end,array,return,builder
ShapeBuilder -> protected XContentBuilder coordinatesToXcontent(XContentBuilder builder, boolean closed) throws IOException;1548434247;builds an array of coordinates to a {@link XContentBuilder}__@param builder builder to use_@param closed repeat the first point at the end of the array if it's not already defines as last element of the array_@return the builder;protected XContentBuilder coordinatesToXcontent(XContentBuilder builder, boolean closed) throws IOException {_        builder.startArray()__        for(Coordinate coord : coordinates) {_            toXContent(builder, coord)__        }_        if(closed) {_            Coordinate start = coordinates.get(0)__            Coordinate end = coordinates.get(coordinates.size()-1)__            if(start.x != end.x || start.y != end.y) {_                toXContent(builder, coordinates.get(0))__            }_        }_        builder.endArray()__        return builder__    };builds,an,array,of,coordinates,to,a,link,xcontent,builder,param,builder,builder,to,use,param,closed,repeat,the,first,point,at,the,end,of,the,array,if,it,s,not,already,defines,as,last,element,of,the,array,return,the,builder;protected,xcontent,builder,coordinates,to,xcontent,xcontent,builder,builder,boolean,closed,throws,ioexception,builder,start,array,for,coordinate,coord,coordinates,to,xcontent,builder,coord,if,closed,coordinate,start,coordinates,get,0,coordinate,end,coordinates,get,coordinates,size,1,if,start,x,end,x,start,y,end,y,to,xcontent,builder,coordinates,get,0,builder,end,array,return,builder
ShapeBuilder -> public E coordinates(Collection<? extends Coordinate> coordinates);1524684173;Add a collection of coordinates to the collection__@param coordinates array of {@link Coordinate}s to add_@return this;public E coordinates(Collection<? extends Coordinate> coordinates) {_        this.coordinates.addAll(coordinates)__        return thisRef()__    };add,a,collection,of,coordinates,to,the,collection,param,coordinates,array,of,link,coordinate,s,to,add,return,this;public,e,coordinates,collection,extends,coordinate,coordinates,this,coordinates,add,all,coordinates,return,this,ref
ShapeBuilder -> public E coordinates(Collection<? extends Coordinate> coordinates);1538067637;Add a collection of coordinates to the collection__@param coordinates array of {@link Coordinate}s to add_@return this;public E coordinates(Collection<? extends Coordinate> coordinates) {_        this.coordinates.addAll(coordinates)__        return thisRef()__    };add,a,collection,of,coordinates,to,the,collection,param,coordinates,array,of,link,coordinate,s,to,add,return,this;public,e,coordinates,collection,extends,coordinate,coordinates,this,coordinates,add,all,coordinates,return,this,ref
ShapeBuilder -> public E coordinates(Collection<? extends Coordinate> coordinates);1542820501;Add a collection of coordinates to the collection__@param coordinates array of {@link Coordinate}s to add_@return this;public E coordinates(Collection<? extends Coordinate> coordinates) {_        this.coordinates.addAll(coordinates)__        return thisRef()__    };add,a,collection,of,coordinates,to,the,collection,param,coordinates,array,of,link,coordinate,s,to,add,return,this;public,e,coordinates,collection,extends,coordinate,coordinates,this,coordinates,add,all,coordinates,return,this,ref
ShapeBuilder -> public E coordinates(Collection<? extends Coordinate> coordinates);1548434247;Add a collection of coordinates to the collection__@param coordinates array of {@link Coordinate}s to add_@return this;public E coordinates(Collection<? extends Coordinate> coordinates) {_        this.coordinates.addAll(coordinates)__        return thisRef()__    };add,a,collection,of,coordinates,to,the,collection,param,coordinates,array,of,link,coordinate,s,to,add,return,this;public,e,coordinates,collection,extends,coordinate,coordinates,this,coordinates,add,all,coordinates,return,this,ref
ShapeBuilder -> public E coordinate(Coordinate coordinate);1524684173;Add a new coordinate to the collection_@param coordinate coordinate of the point_@return this;public E coordinate(Coordinate coordinate) {_        this.coordinates.add(coordinate)__        return thisRef()__    };add,a,new,coordinate,to,the,collection,param,coordinate,coordinate,of,the,point,return,this;public,e,coordinate,coordinate,coordinate,this,coordinates,add,coordinate,return,this,ref
ShapeBuilder -> public E coordinate(Coordinate coordinate);1538067637;Add a new coordinate to the collection_@param coordinate coordinate of the point_@return this;public E coordinate(Coordinate coordinate) {_        this.coordinates.add(coordinate)__        return thisRef()__    };add,a,new,coordinate,to,the,collection,param,coordinate,coordinate,of,the,point,return,this;public,e,coordinate,coordinate,coordinate,this,coordinates,add,coordinate,return,this,ref
ShapeBuilder -> public E coordinate(Coordinate coordinate);1542820501;Add a new coordinate to the collection_@param coordinate coordinate of the point_@return this;public E coordinate(Coordinate coordinate) {_        this.coordinates.add(coordinate)__        return thisRef()__    };add,a,new,coordinate,to,the,collection,param,coordinate,coordinate,of,the,point,return,this;public,e,coordinate,coordinate,coordinate,this,coordinates,add,coordinate,return,this,ref
ShapeBuilder -> public E coordinate(Coordinate coordinate);1548434247;Add a new coordinate to the collection_@param coordinate coordinate of the point_@return this;public E coordinate(Coordinate coordinate) {_        this.coordinates.add(coordinate)__        return thisRef()__    };add,a,new,coordinate,to,the,collection,param,coordinate,coordinate,of,the,point,return,this;public,e,coordinate,coordinate,coordinate,this,coordinates,add,coordinate,return,this,ref
ShapeBuilder -> protected Coordinate[] coordinates(boolean closed);1524684173;Copy all coordinate to a new Array__@param closed if set to true the first point of the array is repeated as last element_@return Array of coordinates;protected Coordinate[] coordinates(boolean closed) {_        Coordinate[] result = coordinates.toArray(new Coordinate[coordinates.size() + (closed?1:0)])__        if(closed) {_            result[result.length-1] = result[0]__        }_        return result__    };copy,all,coordinate,to,a,new,array,param,closed,if,set,to,true,the,first,point,of,the,array,is,repeated,as,last,element,return,array,of,coordinates;protected,coordinate,coordinates,boolean,closed,coordinate,result,coordinates,to,array,new,coordinate,coordinates,size,closed,1,0,if,closed,result,result,length,1,result,0,return,result
ShapeBuilder -> protected Coordinate[] coordinates(boolean closed);1538067637;Copy all coordinate to a new Array__@param closed if set to true the first point of the array is repeated as last element_@return Array of coordinates;protected Coordinate[] coordinates(boolean closed) {_        Coordinate[] result = coordinates.toArray(new Coordinate[coordinates.size() + (closed?1:0)])__        if(closed) {_            result[result.length-1] = result[0]__        }_        return result__    };copy,all,coordinate,to,a,new,array,param,closed,if,set,to,true,the,first,point,of,the,array,is,repeated,as,last,element,return,array,of,coordinates;protected,coordinate,coordinates,boolean,closed,coordinate,result,coordinates,to,array,new,coordinate,coordinates,size,closed,1,0,if,closed,result,result,length,1,result,0,return,result
ShapeBuilder -> protected Coordinate[] coordinates(boolean closed);1542820501;Copy all coordinate to a new Array__@param closed if set to true the first point of the array is repeated as last element_@return Array of coordinates;protected Coordinate[] coordinates(boolean closed) {_        Coordinate[] result = coordinates.toArray(new Coordinate[coordinates.size() + (closed?1:0)])__        if(closed) {_            result[result.length-1] = result[0]__        }_        return result__    };copy,all,coordinate,to,a,new,array,param,closed,if,set,to,true,the,first,point,of,the,array,is,repeated,as,last,element,return,array,of,coordinates;protected,coordinate,coordinates,boolean,closed,coordinate,result,coordinates,to,array,new,coordinate,coordinates,size,closed,1,0,if,closed,result,result,length,1,result,0,return,result
ShapeBuilder -> protected Coordinate[] coordinates(boolean closed);1548434247;Copy all coordinate to a new Array__@param closed if set to true the first point of the array is repeated as last element_@return Array of coordinates;protected Coordinate[] coordinates(boolean closed) {_        Coordinate[] result = coordinates.toArray(new Coordinate[coordinates.size() + (closed?1:0)])__        if(closed) {_            result[result.length-1] = result[0]__        }_        return result__    };copy,all,coordinate,to,a,new,array,param,closed,if,set,to,true,the,first,point,of,the,array,is,repeated,as,last,element,return,array,of,coordinates;protected,coordinate,coordinates,boolean,closed,coordinate,result,coordinates,to,array,new,coordinate,coordinates,size,closed,1,0,if,closed,result,result,length,1,result,0,return,result
ShapeBuilder -> Edge -> protected Coordinate intersection(double position);1524684173;Set the intersection of this line segment to the given position__@param position_position of the intersection [0..1]_@return the {@link Coordinate} of the intersection;protected Coordinate intersection(double position) {_            return intersect = position(coordinate, next.coordinate, position)__        };set,the,intersection,of,this,line,segment,to,the,given,position,param,position,position,of,the,intersection,0,1,return,the,link,coordinate,of,the,intersection;protected,coordinate,intersection,double,position,return,intersect,position,coordinate,next,coordinate,position
ShapeBuilder -> Edge -> protected Coordinate intersection(double position);1538067637;Set the intersection of this line segment to the given position__@param position_position of the intersection [0..1]_@return the {@link Coordinate} of the intersection;protected Coordinate intersection(double position) {_            return intersect = position(coordinate, next.coordinate, position)__        };set,the,intersection,of,this,line,segment,to,the,given,position,param,position,position,of,the,intersection,0,1,return,the,link,coordinate,of,the,intersection;protected,coordinate,intersection,double,position,return,intersect,position,coordinate,next,coordinate,position
ShapeBuilder -> Edge -> protected Coordinate intersection(double position);1542820501;Set the intersection of this line segment to the given position__@param position_position of the intersection [0..1]_@return the {@link Coordinate} of the intersection;protected Coordinate intersection(double position) {_            return intersect = position(coordinate, next.coordinate, position)__        };set,the,intersection,of,this,line,segment,to,the,given,position,param,position,position,of,the,intersection,0,1,return,the,link,coordinate,of,the,intersection;protected,coordinate,intersection,double,position,return,intersect,position,coordinate,next,coordinate,position
ShapeBuilder -> Edge -> protected Coordinate intersection(double position);1548434247;Set the intersection of this line segment to the given position__@param position_position of the intersection [0..1]_@return the {@link Coordinate} of the intersection;protected Coordinate intersection(double position) {_            return intersect = position(coordinate, next.coordinate, position)__        };set,the,intersection,of,this,line,segment,to,the,given,position,param,position,position,of,the,intersection,0,1,return,the,link,coordinate,of,the,intersection;protected,coordinate,intersection,double,position,return,intersect,position,coordinate,next,coordinate,position
ShapeBuilder -> public abstract T build()_;1524684173;Create a new Shape from this builder. Since calling this method could change the_defined shape. (by inserting new coordinates or change the position of points)_the builder looses its validity. So this method should only be called once on a builder_@return new {@link Shape} defined by the builder;public abstract T build()_;create,a,new,shape,from,this,builder,since,calling,this,method,could,change,the,defined,shape,by,inserting,new,coordinates,or,change,the,position,of,points,the,builder,looses,its,validity,so,this,method,should,only,be,called,once,on,a,builder,return,new,link,shape,defined,by,the,builder;public,abstract,t,build
ShapeBuilder -> public abstract T build()_;1538067637;Create a new Shape from this builder. Since calling this method could change the_defined shape. (by inserting new coordinates or change the position of points)_the builder looses its validity. So this method should only be called once on a builder_@return new {@link Shape} defined by the builder;public abstract T build()_;create,a,new,shape,from,this,builder,since,calling,this,method,could,change,the,defined,shape,by,inserting,new,coordinates,or,change,the,position,of,points,the,builder,looses,its,validity,so,this,method,should,only,be,called,once,on,a,builder,return,new,link,shape,defined,by,the,builder;public,abstract,t,build
ShapeBuilder -> public abstract T buildS4J()_;1542820501;Create a new Shape from this builder. Since calling this method could change the_defined shape. (by inserting new coordinates or change the position of points)_the builder looses its validity. So this method should only be called once on a builder_@return new {@link Shape} defined by the builder;public abstract T buildS4J()_;create,a,new,shape,from,this,builder,since,calling,this,method,could,change,the,defined,shape,by,inserting,new,coordinates,or,change,the,position,of,points,the,builder,looses,its,validity,so,this,method,should,only,be,called,once,on,a,builder,return,new,link,shape,defined,by,the,builder;public,abstract,t,build,s4j
ShapeBuilder -> public abstract T buildS4J()_;1548434247;Create a new Shape from this builder. Since calling this method could change the_defined shape. (by inserting new coordinates or change the position of points)_the builder looses its validity. So this method should only be called once on a builder_@return new {@link Shape} defined by the builder;public abstract T buildS4J()_;create,a,new,shape,from,this,builder,since,calling,this,method,could,change,the,defined,shape,by,inserting,new,coordinates,or,change,the,position,of,points,the,builder,looses,its,validity,so,this,method,should,only,be,called,once,on,a,builder,return,new,link,shape,defined,by,the,builder;public,abstract,t,build,s4j
ShapeBuilder -> public abstract int numDimensions()_;1524684173;tracks number of dimensions for this shape;public abstract int numDimensions()_;tracks,number,of,dimensions,for,this,shape;public,abstract,int,num,dimensions
ShapeBuilder -> public abstract int numDimensions()_;1538067637;tracks number of dimensions for this shape;public abstract int numDimensions()_;tracks,number,of,dimensions,for,this,shape;public,abstract,int,num,dimensions
ShapeBuilder -> public abstract int numDimensions()_;1542820501;tracks number of dimensions for this shape;public abstract int numDimensions()_;tracks,number,of,dimensions,for,this,shape;public,abstract,int,num,dimensions
ShapeBuilder -> public abstract int numDimensions()_;1548434247;tracks number of dimensions for this shape;public abstract int numDimensions()_;tracks,number,of,dimensions,for,this,shape;public,abstract,int,num,dimensions
ShapeBuilder -> public E coordinate(double longitude, double latitude);1524684173;Add a new coordinate to the collection_@param longitude longitude of the coordinate_@param latitude latitude of the coordinate_@return this;public E coordinate(double longitude, double latitude) {_        return this.coordinate(new Coordinate(longitude, latitude))__    };add,a,new,coordinate,to,the,collection,param,longitude,longitude,of,the,coordinate,param,latitude,latitude,of,the,coordinate,return,this;public,e,coordinate,double,longitude,double,latitude,return,this,coordinate,new,coordinate,longitude,latitude
ShapeBuilder -> public E coordinate(double longitude, double latitude);1538067637;Add a new coordinate to the collection_@param longitude longitude of the coordinate_@param latitude latitude of the coordinate_@return this;public E coordinate(double longitude, double latitude) {_        return this.coordinate(new Coordinate(longitude, latitude))__    };add,a,new,coordinate,to,the,collection,param,longitude,longitude,of,the,coordinate,param,latitude,latitude,of,the,coordinate,return,this;public,e,coordinate,double,longitude,double,latitude,return,this,coordinate,new,coordinate,longitude,latitude
ShapeBuilder -> public E coordinate(double longitude, double latitude);1542820501;Add a new coordinate to the collection_@param longitude longitude of the coordinate_@param latitude latitude of the coordinate_@return this;public E coordinate(double longitude, double latitude) {_        return this.coordinate(new Coordinate(longitude, latitude))__    };add,a,new,coordinate,to,the,collection,param,longitude,longitude,of,the,coordinate,param,latitude,latitude,of,the,coordinate,return,this;public,e,coordinate,double,longitude,double,latitude,return,this,coordinate,new,coordinate,longitude,latitude
ShapeBuilder -> public E coordinate(double longitude, double latitude);1548434247;Add a new coordinate to the collection_@param longitude longitude of the coordinate_@param latitude latitude of the coordinate_@return this;public E coordinate(double longitude, double latitude) {_        return this.coordinate(new Coordinate(longitude, latitude))__    };add,a,new,coordinate,to,the,collection,param,longitude,longitude,of,the,coordinate,param,latitude,latitude,of,the,coordinate,return,this;public,e,coordinate,double,longitude,double,latitude,return,this,coordinate,new,coordinate,longitude,latitude
ShapeBuilder -> public E coordinates(Coordinate...coordinates);1524684173;Add a array of coordinates to the collection__@param coordinates array of {@link Coordinate}s to add_@return this;public E coordinates(Coordinate...coordinates) {_        return this.coordinates(Arrays.asList(coordinates))__    };add,a,array,of,coordinates,to,the,collection,param,coordinates,array,of,link,coordinate,s,to,add,return,this;public,e,coordinates,coordinate,coordinates,return,this,coordinates,arrays,as,list,coordinates
ShapeBuilder -> public E coordinates(Coordinate...coordinates);1538067637;Add a array of coordinates to the collection__@param coordinates array of {@link Coordinate}s to add_@return this;public E coordinates(Coordinate...coordinates) {_        return this.coordinates(Arrays.asList(coordinates))__    };add,a,array,of,coordinates,to,the,collection,param,coordinates,array,of,link,coordinate,s,to,add,return,this;public,e,coordinates,coordinate,coordinates,return,this,coordinates,arrays,as,list,coordinates
ShapeBuilder -> public E coordinates(Coordinate...coordinates);1542820501;Add a array of coordinates to the collection__@param coordinates array of {@link Coordinate}s to add_@return this;public E coordinates(Coordinate...coordinates) {_        return this.coordinates(Arrays.asList(coordinates))__    };add,a,array,of,coordinates,to,the,collection,param,coordinates,array,of,link,coordinate,s,to,add,return,this;public,e,coordinates,coordinate,coordinates,return,this,coordinates,arrays,as,list,coordinates
ShapeBuilder -> public E coordinates(Coordinate...coordinates);1548434247;Add a array of coordinates to the collection__@param coordinates array of {@link Coordinate}s to add_@return this;public E coordinates(Coordinate...coordinates) {_        return this.coordinates(Arrays.asList(coordinates))__    };add,a,array,of,coordinates,to,the,collection,param,coordinates,array,of,link,coordinate,s,to,add,return,this;public,e,coordinates,coordinate,coordinates,return,this,coordinates,arrays,as,list,coordinates
ShapeBuilder -> protected static final double intersection(Coordinate p1, Coordinate p2, double dateline);1524684173;Calculate the intersection of a line segment and a vertical dateline.__@param p1_start-point of the line segment_@param p2_end-point of the line segment_@param dateline_x-coordinate of the vertical dateline_@return position of the intersection in the open range (0..1] if the line_segment intersects with the line segment. Otherwise this method_returns {@link Double#NaN};protected static final double intersection(Coordinate p1, Coordinate p2, double dateline) {_        if (p1.x == p2.x && p1.x != dateline) {_            return Double.NaN__        } else if (p1.x == p2.x && p1.x == dateline) {_            return 1.0__        } else {_            final double t = (dateline - p1.x) / (p2.x - p1.x)__            if (t > 1 || t <= 0) {_                return Double.NaN__            } else {_                return t__            }_        }_    };calculate,the,intersection,of,a,line,segment,and,a,vertical,dateline,param,p1,start,point,of,the,line,segment,param,p2,end,point,of,the,line,segment,param,dateline,x,coordinate,of,the,vertical,dateline,return,position,of,the,intersection,in,the,open,range,0,1,if,the,line,segment,intersects,with,the,line,segment,otherwise,this,method,returns,link,double,na,n;protected,static,final,double,intersection,coordinate,p1,coordinate,p2,double,dateline,if,p1,x,p2,x,p1,x,dateline,return,double,na,n,else,if,p1,x,p2,x,p1,x,dateline,return,1,0,else,final,double,t,dateline,p1,x,p2,x,p1,x,if,t,1,t,0,return,double,na,n,else,return,t
ShapeBuilder -> protected static final double intersection(Coordinate p1, Coordinate p2, double dateline);1538067637;Calculate the intersection of a line segment and a vertical dateline.__@param p1_start-point of the line segment_@param p2_end-point of the line segment_@param dateline_x-coordinate of the vertical dateline_@return position of the intersection in the open range (0..1] if the line_segment intersects with the line segment. Otherwise this method_returns {@link Double#NaN};protected static final double intersection(Coordinate p1, Coordinate p2, double dateline) {_        if (p1.x == p2.x && p1.x != dateline) {_            return Double.NaN__        } else if (p1.x == p2.x && p1.x == dateline) {_            return 1.0__        } else {_            final double t = (dateline - p1.x) / (p2.x - p1.x)__            if (t > 1 || t <= 0) {_                return Double.NaN__            } else {_                return t__            }_        }_    };calculate,the,intersection,of,a,line,segment,and,a,vertical,dateline,param,p1,start,point,of,the,line,segment,param,p2,end,point,of,the,line,segment,param,dateline,x,coordinate,of,the,vertical,dateline,return,position,of,the,intersection,in,the,open,range,0,1,if,the,line,segment,intersects,with,the,line,segment,otherwise,this,method,returns,link,double,na,n;protected,static,final,double,intersection,coordinate,p1,coordinate,p2,double,dateline,if,p1,x,p2,x,p1,x,dateline,return,double,na,n,else,if,p1,x,p2,x,p1,x,dateline,return,1,0,else,final,double,t,dateline,p1,x,p2,x,p1,x,if,t,1,t,0,return,double,na,n,else,return,t
ShapeBuilder -> protected static final double intersection(Coordinate p1, Coordinate p2, double dateline);1542820501;Calculate the intersection of a line segment and a vertical dateline.__@param p1_start-point of the line segment_@param p2_end-point of the line segment_@param dateline_x-coordinate of the vertical dateline_@return position of the intersection in the open range (0..1] if the line_segment intersects with the line segment. Otherwise this method_returns {@link Double#NaN};protected static final double intersection(Coordinate p1, Coordinate p2, double dateline) {_        if (p1.x == p2.x && p1.x != dateline) {_            return Double.NaN__        } else if (p1.x == p2.x && p1.x == dateline) {_            return 1.0__        } else {_            final double t = (dateline - p1.x) / (p2.x - p1.x)__            if (t > 1 || t <= 0) {_                return Double.NaN__            } else {_                return t__            }_        }_    };calculate,the,intersection,of,a,line,segment,and,a,vertical,dateline,param,p1,start,point,of,the,line,segment,param,p2,end,point,of,the,line,segment,param,dateline,x,coordinate,of,the,vertical,dateline,return,position,of,the,intersection,in,the,open,range,0,1,if,the,line,segment,intersects,with,the,line,segment,otherwise,this,method,returns,link,double,na,n;protected,static,final,double,intersection,coordinate,p1,coordinate,p2,double,dateline,if,p1,x,p2,x,p1,x,dateline,return,double,na,n,else,if,p1,x,p2,x,p1,x,dateline,return,1,0,else,final,double,t,dateline,p1,x,p2,x,p1,x,if,t,1,t,0,return,double,na,n,else,return,t
ShapeBuilder -> protected static final double intersection(Coordinate p1, Coordinate p2, double dateline);1548434247;Calculate the intersection of a line segment and a vertical dateline.__@param p1_start-point of the line segment_@param p2_end-point of the line segment_@param dateline_x-coordinate of the vertical dateline_@return position of the intersection in the open range (0..1] if the line_segment intersects with the line segment. Otherwise this method_returns {@link Double#NaN};protected static final double intersection(Coordinate p1, Coordinate p2, double dateline) {_        if (p1.x == p2.x && p1.x != dateline) {_            return Double.NaN__        } else if (p1.x == p2.x && p1.x == dateline) {_            return 1.0__        } else {_            final double t = (dateline - p1.x) / (p2.x - p1.x)__            if (t > 1 || t <= 0) {_                return Double.NaN__            } else {_                return t__            }_        }_    };calculate,the,intersection,of,a,line,segment,and,a,vertical,dateline,param,p1,start,point,of,the,line,segment,param,p2,end,point,of,the,line,segment,param,dateline,x,coordinate,of,the,vertical,dateline,return,position,of,the,intersection,in,the,open,range,0,1,if,the,line,segment,intersects,with,the,line,segment,otherwise,this,method,returns,link,double,na,n;protected,static,final,double,intersection,coordinate,p1,coordinate,p2,double,dateline,if,p1,x,p2,x,p1,x,dateline,return,double,na,n,else,if,p1,x,p2,x,p1,x,dateline,return,1,0,else,final,double,t,dateline,p1,x,p2,x,p1,x,if,t,1,t,0,return,double,na,n,else,return,t
ShapeBuilder -> protected ShapeBuilder(List<Coordinate> coordinates);1524684173;ctor from list of coordinates;protected ShapeBuilder(List<Coordinate> coordinates) {_        if (coordinates == null || coordinates.size() == 0) {_            throw new IllegalArgumentException("cannot create point collection with empty set of points")__        }_        this.coordinates = coordinates__    };ctor,from,list,of,coordinates;protected,shape,builder,list,coordinate,coordinates,if,coordinates,null,coordinates,size,0,throw,new,illegal,argument,exception,cannot,create,point,collection,with,empty,set,of,points,this,coordinates,coordinates
ShapeBuilder -> protected ShapeBuilder(List<Coordinate> coordinates);1538067637;ctor from list of coordinates;protected ShapeBuilder(List<Coordinate> coordinates) {_        if (coordinates == null || coordinates.size() == 0) {_            throw new IllegalArgumentException("cannot create point collection with empty set of points")__        }_        this.coordinates = coordinates__    };ctor,from,list,of,coordinates;protected,shape,builder,list,coordinate,coordinates,if,coordinates,null,coordinates,size,0,throw,new,illegal,argument,exception,cannot,create,point,collection,with,empty,set,of,points,this,coordinates,coordinates
ShapeBuilder -> protected ShapeBuilder(List<Coordinate> coordinates);1542820501;ctor from list of coordinates;protected ShapeBuilder(List<Coordinate> coordinates) {_        if (coordinates == null || coordinates.size() == 0) {_            throw new IllegalArgumentException("cannot create point collection with empty set of points")__        }_        this.coordinates = coordinates__    };ctor,from,list,of,coordinates;protected,shape,builder,list,coordinate,coordinates,if,coordinates,null,coordinates,size,0,throw,new,illegal,argument,exception,cannot,create,point,collection,with,empty,set,of,points,this,coordinates,coordinates
ShapeBuilder -> protected ShapeBuilder(List<Coordinate> coordinates);1548434247;ctor from list of coordinates;protected ShapeBuilder(List<Coordinate> coordinates) {_        if (coordinates == null || coordinates.size() == 0) {_            throw new IllegalArgumentException("cannot create point collection with empty set of points")__        }_        this.coordinates = coordinates__    };ctor,from,list,of,coordinates;protected,shape,builder,list,coordinate,coordinates,if,coordinates,null,coordinates,size,0,throw,new,illegal,argument,exception,cannot,create,point,collection,with,empty,set,of,points,this,coordinates,coordinates
ShapeBuilder -> protected static int intersections(double dateline, Edge[] edges);1524684173;Calculate all intersections of line segments and a vertical line. The_Array of edges will be ordered asc by the y-coordinate of the_intersections of edges.__@param dateline_x-coordinate of the dateline_@param edges_set of edges that may intersect with the dateline_@return number of intersecting edges;protected static int intersections(double dateline, Edge[] edges) {_        int numIntersections = 0__        assert !Double.isNaN(dateline)__        for (int i = 0_ i < edges.length_ i++) {_            Coordinate p1 = edges[i].coordinate__            Coordinate p2 = edges[i].next.coordinate__            assert !Double.isNaN(p2.x) && !Double.isNaN(p1.x)__            edges[i].intersect = Edge.MAX_COORDINATE___            double position = intersection(p1, p2, dateline)__            if (!Double.isNaN(position)) {_                edges[i].intersection(position)__                numIntersections++__            }_        }_        Arrays.sort(edges, INTERSECTION_ORDER)__        return numIntersections__    };calculate,all,intersections,of,line,segments,and,a,vertical,line,the,array,of,edges,will,be,ordered,asc,by,the,y,coordinate,of,the,intersections,of,edges,param,dateline,x,coordinate,of,the,dateline,param,edges,set,of,edges,that,may,intersect,with,the,dateline,return,number,of,intersecting,edges;protected,static,int,intersections,double,dateline,edge,edges,int,num,intersections,0,assert,double,is,na,n,dateline,for,int,i,0,i,edges,length,i,coordinate,p1,edges,i,coordinate,coordinate,p2,edges,i,next,coordinate,assert,double,is,na,n,p2,x,double,is,na,n,p1,x,edges,i,intersect,edge,double,position,intersection,p1,p2,dateline,if,double,is,na,n,position,edges,i,intersection,position,num,intersections,arrays,sort,edges,return,num,intersections
ShapeBuilder -> protected static int intersections(double dateline, Edge[] edges);1538067637;Calculate all intersections of line segments and a vertical line. The_Array of edges will be ordered asc by the y-coordinate of the_intersections of edges.__@param dateline_x-coordinate of the dateline_@param edges_set of edges that may intersect with the dateline_@return number of intersecting edges;protected static int intersections(double dateline, Edge[] edges) {_        int numIntersections = 0__        assert !Double.isNaN(dateline)__        for (int i = 0_ i < edges.length_ i++) {_            Coordinate p1 = edges[i].coordinate__            Coordinate p2 = edges[i].next.coordinate__            assert !Double.isNaN(p2.x) && !Double.isNaN(p1.x)__            edges[i].intersect = Edge.MAX_COORDINATE___            double position = intersection(p1, p2, dateline)__            if (!Double.isNaN(position)) {_                edges[i].intersection(position)__                numIntersections++__            }_        }_        Arrays.sort(edges, INTERSECTION_ORDER)__        return numIntersections__    };calculate,all,intersections,of,line,segments,and,a,vertical,line,the,array,of,edges,will,be,ordered,asc,by,the,y,coordinate,of,the,intersections,of,edges,param,dateline,x,coordinate,of,the,dateline,param,edges,set,of,edges,that,may,intersect,with,the,dateline,return,number,of,intersecting,edges;protected,static,int,intersections,double,dateline,edge,edges,int,num,intersections,0,assert,double,is,na,n,dateline,for,int,i,0,i,edges,length,i,coordinate,p1,edges,i,coordinate,coordinate,p2,edges,i,next,coordinate,assert,double,is,na,n,p2,x,double,is,na,n,p1,x,edges,i,intersect,edge,double,position,intersection,p1,p2,dateline,if,double,is,na,n,position,edges,i,intersection,position,num,intersections,arrays,sort,edges,return,num,intersections
ShapeBuilder -> protected static int intersections(double dateline, Edge[] edges);1542820501;Calculate all intersections of line segments and a vertical line. The_Array of edges will be ordered asc by the y-coordinate of the_intersections of edges.__@param dateline_x-coordinate of the dateline_@param edges_set of edges that may intersect with the dateline_@return number of intersecting edges;protected static int intersections(double dateline, Edge[] edges) {_        int numIntersections = 0__        assert !Double.isNaN(dateline)__        for (int i = 0_ i < edges.length_ i++) {_            Coordinate p1 = edges[i].coordinate__            Coordinate p2 = edges[i].next.coordinate__            assert !Double.isNaN(p2.x) && !Double.isNaN(p1.x)__            edges[i].intersect = Edge.MAX_COORDINATE___            double position = intersection(p1, p2, dateline)__            if (!Double.isNaN(position)) {_                edges[i].intersection(position)__                numIntersections++__            }_        }_        Arrays.sort(edges, INTERSECTION_ORDER)__        return numIntersections__    };calculate,all,intersections,of,line,segments,and,a,vertical,line,the,array,of,edges,will,be,ordered,asc,by,the,y,coordinate,of,the,intersections,of,edges,param,dateline,x,coordinate,of,the,dateline,param,edges,set,of,edges,that,may,intersect,with,the,dateline,return,number,of,intersecting,edges;protected,static,int,intersections,double,dateline,edge,edges,int,num,intersections,0,assert,double,is,na,n,dateline,for,int,i,0,i,edges,length,i,coordinate,p1,edges,i,coordinate,coordinate,p2,edges,i,next,coordinate,assert,double,is,na,n,p2,x,double,is,na,n,p1,x,edges,i,intersect,edge,double,position,intersection,p1,p2,dateline,if,double,is,na,n,position,edges,i,intersection,position,num,intersections,arrays,sort,edges,return,num,intersections
ShapeBuilder -> protected static int intersections(double dateline, Edge[] edges);1548434247;Calculate all intersections of line segments and a vertical line. The_Array of edges will be ordered asc by the y-coordinate of the_intersections of edges.__@param dateline_x-coordinate of the dateline_@param edges_set of edges that may intersect with the dateline_@return number of intersecting edges;protected static int intersections(double dateline, Edge[] edges) {_        int numIntersections = 0__        assert !Double.isNaN(dateline)__        for (int i = 0_ i < edges.length_ i++) {_            Coordinate p1 = edges[i].coordinate__            Coordinate p2 = edges[i].next.coordinate__            assert !Double.isNaN(p2.x) && !Double.isNaN(p1.x)__            edges[i].intersect = Edge.MAX_COORDINATE___            double position = intersection(p1, p2, dateline)__            if (!Double.isNaN(position)) {_                edges[i].intersection(position)__                numIntersections++__            }_        }_        Arrays.sort(edges, INTERSECTION_ORDER)__        return numIntersections__    };calculate,all,intersections,of,line,segments,and,a,vertical,line,the,array,of,edges,will,be,ordered,asc,by,the,y,coordinate,of,the,intersections,of,edges,param,dateline,x,coordinate,of,the,dateline,param,edges,set,of,edges,that,may,intersect,with,the,dateline,return,number,of,intersecting,edges;protected,static,int,intersections,double,dateline,edge,edges,int,num,intersections,0,assert,double,is,na,n,dateline,for,int,i,0,i,edges,length,i,coordinate,p1,edges,i,coordinate,coordinate,p2,edges,i,next,coordinate,assert,double,is,na,n,p2,x,double,is,na,n,p1,x,edges,i,intersect,edge,double,position,intersection,p1,p2,dateline,if,double,is,na,n,position,edges,i,intersection,position,num,intersections,arrays,sort,edges,return,num,intersections
ShapeBuilder -> protected ShapeBuilder(StreamInput in) throws IOException;1524684173;ctor from serialized stream input;protected ShapeBuilder(StreamInput in) throws IOException {_        int size = in.readVInt()__        coordinates = new ArrayList<>(size)__        for (int i=0_ i < size_ i++) {_            coordinates.add(readFromStream(in))__        }_    };ctor,from,serialized,stream,input;protected,shape,builder,stream,input,in,throws,ioexception,int,size,in,read,vint,coordinates,new,array,list,size,for,int,i,0,i,size,i,coordinates,add,read,from,stream,in
ShapeBuilder -> protected ShapeBuilder(StreamInput in) throws IOException;1538067637;ctor from serialized stream input;protected ShapeBuilder(StreamInput in) throws IOException {_        int size = in.readVInt()__        coordinates = new ArrayList<>(size)__        for (int i=0_ i < size_ i++) {_            coordinates.add(readFromStream(in))__        }_    };ctor,from,serialized,stream,input;protected,shape,builder,stream,input,in,throws,ioexception,int,size,in,read,vint,coordinates,new,array,list,size,for,int,i,0,i,size,i,coordinates,add,read,from,stream,in
ShapeBuilder -> protected ShapeBuilder(StreamInput in) throws IOException;1542820501;ctor from serialized stream input;protected ShapeBuilder(StreamInput in) throws IOException {_        int size = in.readVInt()__        coordinates = new ArrayList<>(size)__        for (int i=0_ i < size_ i++) {_            coordinates.add(readFromStream(in))__        }_    };ctor,from,serialized,stream,input;protected,shape,builder,stream,input,in,throws,ioexception,int,size,in,read,vint,coordinates,new,array,list,size,for,int,i,0,i,size,i,coordinates,add,read,from,stream,in
ShapeBuilder -> protected ShapeBuilder(StreamInput in) throws IOException;1548434247;ctor from serialized stream input;protected ShapeBuilder(StreamInput in) throws IOException {_        int size = in.readVInt()__        coordinates = new ArrayList<>(size)__        for (int i=0_ i < size_ i++) {_            coordinates.add(readFromStream(in))__        }_    };ctor,from,serialized,stream,input;protected,shape,builder,stream,input,in,throws,ioexception,int,size,in,read,vint,coordinates,new,array,list,size,for,int,i,0,i,size,i,coordinates,add,read,from,stream,in
ShapeBuilder -> public abstract GeoShapeType type()_;1524684173;get the shapes type_@return type of the shape;public abstract GeoShapeType type()_;get,the,shapes,type,return,type,of,the,shape;public,abstract,geo,shape,type,type
ShapeBuilder -> public abstract GeoShapeType type()_;1538067637;get the shapes type_@return type of the shape;public abstract GeoShapeType type()_;get,the,shapes,type,return,type,of,the,shape;public,abstract,geo,shape,type,type
ShapeBuilder -> public abstract GeoShapeType type()_;1542820501;get the shapes type_@return type of the shape;public abstract GeoShapeType type()_;get,the,shapes,type,return,type,of,the,shape;public,abstract,geo,shape,type,type
ShapeBuilder -> public abstract GeoShapeType type()_;1548434247;get the shapes type_@return type of the shape;public abstract GeoShapeType type()_;get,the,shapes,type,return,type,of,the,shape;public,abstract,geo,shape,type,type
