# id;timestamp;commentText;codeText;commentWords;codeWords
Settings -> public boolean hasValue(String key);1524684173;Returns <code>true</code> iff the given key has a value in this settings object;public boolean hasValue(String key) {_        return settings.get(key) != null__    };returns,code,true,code,iff,the,given,key,has,a,value,in,this,settings,object;public,boolean,has,value,string,key,return,settings,get,key,null
Settings -> public boolean hasValue(String key);1525334055;Returns <code>true</code> iff the given key has a value in this settings object;public boolean hasValue(String key) {_        return settings.get(key) != null__    };returns,code,true,code,iff,the,given,key,has,a,value,in,this,settings,object;public,boolean,has,value,string,key,return,settings,get,key,null
Settings -> public boolean hasValue(String key);1536828374;Returns <code>true</code> iff the given key has a value in this settings object;public boolean hasValue(String key) {_        return settings.get(key) != null__    };returns,code,true,code,iff,the,given,key,has,a,value,in,this,settings,object;public,boolean,has,value,string,key,return,settings,get,key,null
Settings -> public boolean hasValue(String key);1539951844;Returns <code>true</code> iff the given key has a value in this settings object;public boolean hasValue(String key) {_        return settings.get(key) != null__    };returns,code,true,code,iff,the,given,key,has,a,value,in,this,settings,object;public,boolean,has,value,string,key,return,settings,get,key,null
Settings -> public boolean hasValue(String key);1540486836;Returns <code>true</code> iff the given key has a value in this settings object;public boolean hasValue(String key) {_        return settings.get(key) != null__    };returns,code,true,code,iff,the,given,key,has,a,value,in,this,settings,object;public,boolean,has,value,string,key,return,settings,get,key,null
Settings -> public boolean hasValue(String key);1546842892;Returns <code>true</code> iff the given key has a value in this settings object;public boolean hasValue(String key) {_        return settings.get(key) != null__    };returns,code,true,code,iff,the,given,key,has,a,value,in,this,settings,object;public,boolean,has,value,string,key,return,settings,get,key,null
Settings -> public boolean hasValue(String key);1546874030;Returns <code>true</code> iff the given key has a value in this settings object;public boolean hasValue(String key) {_        return settings.get(key) != null__    };returns,code,true,code,iff,the,given,key,has,a,value,in,this,settings,object;public,boolean,has,value,string,key,return,settings,get,key,null
Settings -> public boolean hasValue(String key);1546901964;Returns <code>true</code> iff the given key has a value in this settings object;public boolean hasValue(String key) {_        return settings.get(key) != null__    };returns,code,true,code,iff,the,given,key,has,a,value,in,this,settings,object;public,boolean,has,value,string,key,return,settings,get,key,null
Settings -> public boolean hasValue(String key);1547643436;Returns <code>true</code> iff the given key has a value in this settings object;public boolean hasValue(String key) {_        return settings.get(key) != null__    };returns,code,true,code,iff,the,given,key,has,a,value,in,this,settings,object;public,boolean,has,value,string,key,return,settings,get,key,null
Settings -> public boolean hasValue(String key);1548422582;Returns <code>true</code> iff the given key has a value in this settings object;public boolean hasValue(String key) {_        return settings.get(key) != null__    };returns,code,true,code,iff,the,given,key,has,a,value,in,this,settings,object;public,boolean,has,value,string,key,return,settings,get,key,null
Settings -> public Set<String> names();1524684173;@return  The direct keys of this settings;public Set<String> names() {_        synchronized (firstLevelNames) {_            if (firstLevelNames.get() == null) {_                Stream<String> stream = settings.keySet().stream()__                if (secureSettings != null) {_                    stream = Stream.concat(stream, secureSettings.getSettingNames().stream())__                }_                Set<String> names = stream.map(k -> {_                    int i = k.indexOf('.')__                    if (i < 0) {_                        return k__                    } else {_                        return k.substring(0, i)__                    }_                }).collect(Collectors.toSet())__                firstLevelNames.set(Collections.unmodifiableSet(names))__            }_        }_        return firstLevelNames.get()__    };return,the,direct,keys,of,this,settings;public,set,string,names,synchronized,first,level,names,if,first,level,names,get,null,stream,string,stream,settings,key,set,stream,if,secure,settings,null,stream,stream,concat,stream,secure,settings,get,setting,names,stream,set,string,names,stream,map,k,int,i,k,index,of,if,i,0,return,k,else,return,k,substring,0,i,collect,collectors,to,set,first,level,names,set,collections,unmodifiable,set,names,return,first,level,names,get
Settings -> public Set<String> names();1525334055;@return  The direct keys of this settings;public Set<String> names() {_        synchronized (firstLevelNames) {_            if (firstLevelNames.get() == null) {_                Stream<String> stream = settings.keySet().stream()__                if (secureSettings != null) {_                    stream = Stream.concat(stream, secureSettings.getSettingNames().stream())__                }_                Set<String> names = stream.map(k -> {_                    int i = k.indexOf('.')__                    if (i < 0) {_                        return k__                    } else {_                        return k.substring(0, i)__                    }_                }).collect(Collectors.toSet())__                firstLevelNames.set(Collections.unmodifiableSet(names))__            }_        }_        return firstLevelNames.get()__    };return,the,direct,keys,of,this,settings;public,set,string,names,synchronized,first,level,names,if,first,level,names,get,null,stream,string,stream,settings,key,set,stream,if,secure,settings,null,stream,stream,concat,stream,secure,settings,get,setting,names,stream,set,string,names,stream,map,k,int,i,k,index,of,if,i,0,return,k,else,return,k,substring,0,i,collect,collectors,to,set,first,level,names,set,collections,unmodifiable,set,names,return,first,level,names,get
Settings -> public Set<String> names();1536828374;@return  The direct keys of this settings;public Set<String> names() {_        synchronized (firstLevelNames) {_            if (firstLevelNames.get() == null) {_                Stream<String> stream = settings.keySet().stream()__                if (secureSettings != null) {_                    stream = Stream.concat(stream, secureSettings.getSettingNames().stream())__                }_                Set<String> names = stream.map(k -> {_                    int i = k.indexOf('.')__                    if (i < 0) {_                        return k__                    } else {_                        return k.substring(0, i)__                    }_                }).collect(Collectors.toSet())__                firstLevelNames.set(Collections.unmodifiableSet(names))__            }_        }_        return firstLevelNames.get()__    };return,the,direct,keys,of,this,settings;public,set,string,names,synchronized,first,level,names,if,first,level,names,get,null,stream,string,stream,settings,key,set,stream,if,secure,settings,null,stream,stream,concat,stream,secure,settings,get,setting,names,stream,set,string,names,stream,map,k,int,i,k,index,of,if,i,0,return,k,else,return,k,substring,0,i,collect,collectors,to,set,first,level,names,set,collections,unmodifiable,set,names,return,first,level,names,get
Settings -> public Set<String> names();1539951844;@return  The direct keys of this settings;public Set<String> names() {_        synchronized (firstLevelNames) {_            if (firstLevelNames.get() == null) {_                Stream<String> stream = settings.keySet().stream()__                if (secureSettings != null) {_                    stream = Stream.concat(stream, secureSettings.getSettingNames().stream())__                }_                Set<String> names = stream.map(k -> {_                    int i = k.indexOf('.')__                    if (i < 0) {_                        return k__                    } else {_                        return k.substring(0, i)__                    }_                }).collect(Collectors.toSet())__                firstLevelNames.set(Collections.unmodifiableSet(names))__            }_        }_        return firstLevelNames.get()__    };return,the,direct,keys,of,this,settings;public,set,string,names,synchronized,first,level,names,if,first,level,names,get,null,stream,string,stream,settings,key,set,stream,if,secure,settings,null,stream,stream,concat,stream,secure,settings,get,setting,names,stream,set,string,names,stream,map,k,int,i,k,index,of,if,i,0,return,k,else,return,k,substring,0,i,collect,collectors,to,set,first,level,names,set,collections,unmodifiable,set,names,return,first,level,names,get
Settings -> public Set<String> names();1540486836;@return  The direct keys of this settings;public Set<String> names() {_        synchronized (firstLevelNames) {_            if (firstLevelNames.get() == null) {_                Stream<String> stream = settings.keySet().stream()__                if (secureSettings != null) {_                    stream = Stream.concat(stream, secureSettings.getSettingNames().stream())__                }_                Set<String> names = stream.map(k -> {_                    int i = k.indexOf('.')__                    if (i < 0) {_                        return k__                    } else {_                        return k.substring(0, i)__                    }_                }).collect(Collectors.toSet())__                firstLevelNames.set(Collections.unmodifiableSet(names))__            }_        }_        return firstLevelNames.get()__    };return,the,direct,keys,of,this,settings;public,set,string,names,synchronized,first,level,names,if,first,level,names,get,null,stream,string,stream,settings,key,set,stream,if,secure,settings,null,stream,stream,concat,stream,secure,settings,get,setting,names,stream,set,string,names,stream,map,k,int,i,k,index,of,if,i,0,return,k,else,return,k,substring,0,i,collect,collectors,to,set,first,level,names,set,collections,unmodifiable,set,names,return,first,level,names,get
Settings -> public Set<String> names();1546842892;@return  The direct keys of this settings;public Set<String> names() {_        synchronized (firstLevelNames) {_            if (firstLevelNames.get() == null) {_                Stream<String> stream = settings.keySet().stream()__                if (secureSettings != null) {_                    stream = Stream.concat(stream, secureSettings.getSettingNames().stream())__                }_                Set<String> names = stream.map(k -> {_                    int i = k.indexOf('.')__                    if (i < 0) {_                        return k__                    } else {_                        return k.substring(0, i)__                    }_                }).collect(Collectors.toSet())__                firstLevelNames.set(Collections.unmodifiableSet(names))__            }_        }_        return firstLevelNames.get()__    };return,the,direct,keys,of,this,settings;public,set,string,names,synchronized,first,level,names,if,first,level,names,get,null,stream,string,stream,settings,key,set,stream,if,secure,settings,null,stream,stream,concat,stream,secure,settings,get,setting,names,stream,set,string,names,stream,map,k,int,i,k,index,of,if,i,0,return,k,else,return,k,substring,0,i,collect,collectors,to,set,first,level,names,set,collections,unmodifiable,set,names,return,first,level,names,get
Settings -> public Set<String> names();1546874030;@return  The direct keys of this settings;public Set<String> names() {_        synchronized (firstLevelNames) {_            if (firstLevelNames.get() == null) {_                Stream<String> stream = settings.keySet().stream()__                if (secureSettings != null) {_                    stream = Stream.concat(stream, secureSettings.getSettingNames().stream())__                }_                Set<String> names = stream.map(k -> {_                    int i = k.indexOf('.')__                    if (i < 0) {_                        return k__                    } else {_                        return k.substring(0, i)__                    }_                }).collect(Collectors.toSet())__                firstLevelNames.set(Collections.unmodifiableSet(names))__            }_        }_        return firstLevelNames.get()__    };return,the,direct,keys,of,this,settings;public,set,string,names,synchronized,first,level,names,if,first,level,names,get,null,stream,string,stream,settings,key,set,stream,if,secure,settings,null,stream,stream,concat,stream,secure,settings,get,setting,names,stream,set,string,names,stream,map,k,int,i,k,index,of,if,i,0,return,k,else,return,k,substring,0,i,collect,collectors,to,set,first,level,names,set,collections,unmodifiable,set,names,return,first,level,names,get
Settings -> public Set<String> names();1546901964;@return  The direct keys of this settings;public Set<String> names() {_        synchronized (firstLevelNames) {_            if (firstLevelNames.get() == null) {_                Stream<String> stream = settings.keySet().stream()__                if (secureSettings != null) {_                    stream = Stream.concat(stream, secureSettings.getSettingNames().stream())__                }_                Set<String> names = stream.map(k -> {_                    int i = k.indexOf('.')__                    if (i < 0) {_                        return k__                    } else {_                        return k.substring(0, i)__                    }_                }).collect(Collectors.toSet())__                firstLevelNames.set(Collections.unmodifiableSet(names))__            }_        }_        return firstLevelNames.get()__    };return,the,direct,keys,of,this,settings;public,set,string,names,synchronized,first,level,names,if,first,level,names,get,null,stream,string,stream,settings,key,set,stream,if,secure,settings,null,stream,stream,concat,stream,secure,settings,get,setting,names,stream,set,string,names,stream,map,k,int,i,k,index,of,if,i,0,return,k,else,return,k,substring,0,i,collect,collectors,to,set,first,level,names,set,collections,unmodifiable,set,names,return,first,level,names,get
Settings -> public Set<String> names();1547643436;@return  The direct keys of this settings;public Set<String> names() {_        synchronized (firstLevelNames) {_            if (firstLevelNames.get() == null) {_                Stream<String> stream = settings.keySet().stream()__                if (secureSettings != null) {_                    stream = Stream.concat(stream, secureSettings.getSettingNames().stream())__                }_                Set<String> names = stream.map(k -> {_                    int i = k.indexOf('.')__                    if (i < 0) {_                        return k__                    } else {_                        return k.substring(0, i)__                    }_                }).collect(Collectors.toSet())__                firstLevelNames.set(Collections.unmodifiableSet(names))__            }_        }_        return firstLevelNames.get()__    };return,the,direct,keys,of,this,settings;public,set,string,names,synchronized,first,level,names,if,first,level,names,get,null,stream,string,stream,settings,key,set,stream,if,secure,settings,null,stream,stream,concat,stream,secure,settings,get,setting,names,stream,set,string,names,stream,map,k,int,i,k,index,of,if,i,0,return,k,else,return,k,substring,0,i,collect,collectors,to,set,first,level,names,set,collections,unmodifiable,set,names,return,first,level,names,get
Settings -> public Set<String> names();1548422582;@return  The direct keys of this settings;public Set<String> names() {_        synchronized (firstLevelNames) {_            if (firstLevelNames.get() == null) {_                Stream<String> stream = settings.keySet().stream()__                if (secureSettings != null) {_                    stream = Stream.concat(stream, secureSettings.getSettingNames().stream())__                }_                Set<String> names = stream.map(k -> {_                    int i = k.indexOf('.')__                    if (i < 0) {_                        return k__                    } else {_                        return k.substring(0, i)__                    }_                }).collect(Collectors.toSet())__                firstLevelNames.set(Collections.unmodifiableSet(names))__            }_        }_        return firstLevelNames.get()__    };return,the,direct,keys,of,this,settings;public,set,string,names,synchronized,first,level,names,if,first,level,names,get,null,stream,string,stream,settings,key,set,stream,if,secure,settings,null,stream,stream,concat,stream,secure,settings,get,setting,names,stream,set,string,names,stream,map,k,int,i,k,index,of,if,i,0,return,k,else,return,k,substring,0,i,collect,collectors,to,set,first,level,names,set,collections,unmodifiable,set,names,return,first,level,names,get
Settings -> public String get(String setting);1524684173;Returns the setting value associated with the setting key.__@param setting The setting key_@return The setting value, <tt>null</tt> if it does not exists.;public String get(String setting) {_        return toString(settings.get(setting))__    };returns,the,setting,value,associated,with,the,setting,key,param,setting,the,setting,key,return,the,setting,value,tt,null,tt,if,it,does,not,exists;public,string,get,string,setting,return,to,string,settings,get,setting
Settings -> public String get(String setting);1525334055;Returns the setting value associated with the setting key.__@param setting The setting key_@return The setting value, {@code null} if it does not exists.;public String get(String setting) {_        return toString(settings.get(setting))__    };returns,the,setting,value,associated,with,the,setting,key,param,setting,the,setting,key,return,the,setting,value,code,null,if,it,does,not,exists;public,string,get,string,setting,return,to,string,settings,get,setting
Settings -> public String get(String setting);1536828374;Returns the setting value associated with the setting key.__@param setting The setting key_@return The setting value, {@code null} if it does not exists.;public String get(String setting) {_        return toString(settings.get(setting))__    };returns,the,setting,value,associated,with,the,setting,key,param,setting,the,setting,key,return,the,setting,value,code,null,if,it,does,not,exists;public,string,get,string,setting,return,to,string,settings,get,setting
Settings -> public String get(String setting);1539951844;Returns the setting value associated with the setting key.__@param setting The setting key_@return The setting value, {@code null} if it does not exists.;public String get(String setting) {_        return toString(settings.get(setting))__    };returns,the,setting,value,associated,with,the,setting,key,param,setting,the,setting,key,return,the,setting,value,code,null,if,it,does,not,exists;public,string,get,string,setting,return,to,string,settings,get,setting
Settings -> public String get(String setting);1540486836;Returns the setting value associated with the setting key.__@param setting The setting key_@return The setting value, {@code null} if it does not exists.;public String get(String setting) {_        return toString(settings.get(setting))__    };returns,the,setting,value,associated,with,the,setting,key,param,setting,the,setting,key,return,the,setting,value,code,null,if,it,does,not,exists;public,string,get,string,setting,return,to,string,settings,get,setting
Settings -> public String get(String setting);1546842892;Returns the setting value associated with the setting key.__@param setting The setting key_@return The setting value, {@code null} if it does not exists.;public String get(String setting) {_        return toString(settings.get(setting))__    };returns,the,setting,value,associated,with,the,setting,key,param,setting,the,setting,key,return,the,setting,value,code,null,if,it,does,not,exists;public,string,get,string,setting,return,to,string,settings,get,setting
Settings -> public String get(String setting);1546874030;Returns the setting value associated with the setting key.__@param setting The setting key_@return The setting value, {@code null} if it does not exists.;public String get(String setting) {_        return toString(settings.get(setting))__    };returns,the,setting,value,associated,with,the,setting,key,param,setting,the,setting,key,return,the,setting,value,code,null,if,it,does,not,exists;public,string,get,string,setting,return,to,string,settings,get,setting
Settings -> public String get(String setting);1546901964;Returns the setting value associated with the setting key.__@param setting The setting key_@return The setting value, {@code null} if it does not exists.;public String get(String setting) {_        return toString(settings.get(setting))__    };returns,the,setting,value,associated,with,the,setting,key,param,setting,the,setting,key,return,the,setting,value,code,null,if,it,does,not,exists;public,string,get,string,setting,return,to,string,settings,get,setting
Settings -> public String get(String setting);1547643436;Returns the setting value associated with the setting key.__@param setting The setting key_@return The setting value, {@code null} if it does not exists.;public String get(String setting) {_        return toString(settings.get(setting))__    };returns,the,setting,value,associated,with,the,setting,key,param,setting,the,setting,key,return,the,setting,value,code,null,if,it,does,not,exists;public,string,get,string,setting,return,to,string,settings,get,setting
Settings -> public String get(String setting);1548422582;Returns the setting value associated with the setting key.__@param setting The setting key_@return The setting value, {@code null} if it does not exists.;public String get(String setting) {_        return toString(settings.get(setting))__    };returns,the,setting,value,associated,with,the,setting,key,param,setting,the,setting,key,return,the,setting,value,code,null,if,it,does,not,exists;public,string,get,string,setting,return,to,string,settings,get,setting
Settings -> Builder -> public Builder put(String key, Path path);1524684173;Sets a path setting with the provided setting key and path.__@param key  The setting key_@param path The setting path_@return The builder;public Builder put(String key, Path path) {_            return put(key, path.toString())__        };sets,a,path,setting,with,the,provided,setting,key,and,path,param,key,the,setting,key,param,path,the,setting,path,return,the,builder;public,builder,put,string,key,path,path,return,put,key,path,to,string
Settings -> Builder -> public Builder put(String key, Path path);1525334055;Sets a path setting with the provided setting key and path.__@param key  The setting key_@param path The setting path_@return The builder;public Builder put(String key, Path path) {_            return put(key, path.toString())__        };sets,a,path,setting,with,the,provided,setting,key,and,path,param,key,the,setting,key,param,path,the,setting,path,return,the,builder;public,builder,put,string,key,path,path,return,put,key,path,to,string
Settings -> Builder -> public Builder put(String key, Path path);1536828374;Sets a path setting with the provided setting key and path.__@param key  The setting key_@param path The setting path_@return The builder;public Builder put(String key, Path path) {_            return put(key, path.toString())__        };sets,a,path,setting,with,the,provided,setting,key,and,path,param,key,the,setting,key,param,path,the,setting,path,return,the,builder;public,builder,put,string,key,path,path,return,put,key,path,to,string
Settings -> Builder -> public Builder put(String key, Path path);1539951844;Sets a path setting with the provided setting key and path.__@param key  The setting key_@param path The setting path_@return The builder;public Builder put(String key, Path path) {_            return put(key, path.toString())__        };sets,a,path,setting,with,the,provided,setting,key,and,path,param,key,the,setting,key,param,path,the,setting,path,return,the,builder;public,builder,put,string,key,path,path,return,put,key,path,to,string
Settings -> Builder -> public Builder put(String key, Path path);1540486836;Sets a path setting with the provided setting key and path.__@param key  The setting key_@param path The setting path_@return The builder;public Builder put(String key, Path path) {_            return put(key, path.toString())__        };sets,a,path,setting,with,the,provided,setting,key,and,path,param,key,the,setting,key,param,path,the,setting,path,return,the,builder;public,builder,put,string,key,path,path,return,put,key,path,to,string
Settings -> Builder -> public Builder put(String key, Path path);1546842892;Sets a path setting with the provided setting key and path.__@param key  The setting key_@param path The setting path_@return The builder;public Builder put(String key, Path path) {_            return put(key, path.toString())__        };sets,a,path,setting,with,the,provided,setting,key,and,path,param,key,the,setting,key,param,path,the,setting,path,return,the,builder;public,builder,put,string,key,path,path,return,put,key,path,to,string
Settings -> Builder -> public Builder put(String key, Path path);1546874030;Sets a path setting with the provided setting key and path.__@param key  The setting key_@param path The setting path_@return The builder;public Builder put(String key, Path path) {_            return put(key, path.toString())__        };sets,a,path,setting,with,the,provided,setting,key,and,path,param,key,the,setting,key,param,path,the,setting,path,return,the,builder;public,builder,put,string,key,path,path,return,put,key,path,to,string
Settings -> Builder -> public Builder put(String key, Path path);1546901964;Sets a path setting with the provided setting key and path.__@param key  The setting key_@param path The setting path_@return The builder;public Builder put(String key, Path path) {_            return put(key, path.toString())__        };sets,a,path,setting,with,the,provided,setting,key,and,path,param,key,the,setting,key,param,path,the,setting,path,return,the,builder;public,builder,put,string,key,path,path,return,put,key,path,to,string
Settings -> Builder -> public Builder put(String key, Path path);1547643436;Sets a path setting with the provided setting key and path.__@param key  The setting key_@param path The setting path_@return The builder;public Builder put(String key, Path path) {_            return put(key, path.toString())__        };sets,a,path,setting,with,the,provided,setting,key,and,path,param,key,the,setting,key,param,path,the,setting,path,return,the,builder;public,builder,put,string,key,path,path,return,put,key,path,to,string
Settings -> Builder -> public Builder put(String key, Path path);1548422582;Sets a path setting with the provided setting key and path.__@param key  The setting key_@param path The setting path_@return The builder;public Builder put(String key, Path path) {_            return put(key, path.toString())__        };sets,a,path,setting,with,the,provided,setting,key,and,path,param,key,the,setting,key,param,path,the,setting,path,return,the,builder;public,builder,put,string,key,path,path,return,put,key,path,to,string
Settings -> Builder -> public Builder putNull(String key);1524684173;Sets a null value for the given setting key;public Builder putNull(String key) {_            return put(key, (String) null)__        };sets,a,null,value,for,the,given,setting,key;public,builder,put,null,string,key,return,put,key,string,null
Settings -> Builder -> public Builder putNull(String key);1525334055;Sets a null value for the given setting key;public Builder putNull(String key) {_            return put(key, (String) null)__        };sets,a,null,value,for,the,given,setting,key;public,builder,put,null,string,key,return,put,key,string,null
Settings -> Builder -> public Builder putNull(String key);1536828374;Sets a null value for the given setting key;public Builder putNull(String key) {_            return put(key, (String) null)__        };sets,a,null,value,for,the,given,setting,key;public,builder,put,null,string,key,return,put,key,string,null
Settings -> Builder -> public Builder putNull(String key);1539951844;Sets a null value for the given setting key;public Builder putNull(String key) {_            return put(key, (String) null)__        };sets,a,null,value,for,the,given,setting,key;public,builder,put,null,string,key,return,put,key,string,null
Settings -> Builder -> public Builder putNull(String key);1540486836;Sets a null value for the given setting key;public Builder putNull(String key) {_            return put(key, (String) null)__        };sets,a,null,value,for,the,given,setting,key;public,builder,put,null,string,key,return,put,key,string,null
Settings -> Builder -> public Builder putNull(String key);1546842892;Sets a null value for the given setting key;public Builder putNull(String key) {_            return put(key, (String) null)__        };sets,a,null,value,for,the,given,setting,key;public,builder,put,null,string,key,return,put,key,string,null
Settings -> Builder -> public Builder putNull(String key);1546874030;Sets a null value for the given setting key;public Builder putNull(String key) {_            return put(key, (String) null)__        };sets,a,null,value,for,the,given,setting,key;public,builder,put,null,string,key,return,put,key,string,null
Settings -> Builder -> public Builder putNull(String key);1546901964;Sets a null value for the given setting key;public Builder putNull(String key) {_            return put(key, (String) null)__        };sets,a,null,value,for,the,given,setting,key;public,builder,put,null,string,key,return,put,key,string,null
Settings -> Builder -> public Builder putNull(String key);1547643436;Sets a null value for the given setting key;public Builder putNull(String key) {_            return put(key, (String) null)__        };sets,a,null,value,for,the,given,setting,key;public,builder,put,null,string,key,return,put,key,string,null
Settings -> Builder -> public Builder putNull(String key);1548422582;Sets a null value for the given setting key;public Builder putNull(String key) {_            return put(key, (String) null)__        };sets,a,null,value,for,the,given,setting,key;public,builder,put,null,string,key,return,put,key,string,null
Settings -> Builder -> public Builder put(String setting, float value);1524684173;Sets the setting with the provided setting key and the float value.__@param setting The setting key_@param value   The float value_@return The builder;public Builder put(String setting, float value) {_            put(setting, String.valueOf(value))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,float,value,param,setting,the,setting,key,param,value,the,float,value,return,the,builder;public,builder,put,string,setting,float,value,put,setting,string,value,of,value,return,this
Settings -> Builder -> public Builder put(String setting, float value);1525334055;Sets the setting with the provided setting key and the float value.__@param setting The setting key_@param value   The float value_@return The builder;public Builder put(String setting, float value) {_            put(setting, String.valueOf(value))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,float,value,param,setting,the,setting,key,param,value,the,float,value,return,the,builder;public,builder,put,string,setting,float,value,put,setting,string,value,of,value,return,this
Settings -> Builder -> public Builder put(String setting, float value);1536828374;Sets the setting with the provided setting key and the float value.__@param setting The setting key_@param value   The float value_@return The builder;public Builder put(String setting, float value) {_            put(setting, String.valueOf(value))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,float,value,param,setting,the,setting,key,param,value,the,float,value,return,the,builder;public,builder,put,string,setting,float,value,put,setting,string,value,of,value,return,this
Settings -> Builder -> public Builder put(String setting, float value);1539951844;Sets the setting with the provided setting key and the float value.__@param setting The setting key_@param value   The float value_@return The builder;public Builder put(String setting, float value) {_            put(setting, String.valueOf(value))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,float,value,param,setting,the,setting,key,param,value,the,float,value,return,the,builder;public,builder,put,string,setting,float,value,put,setting,string,value,of,value,return,this
Settings -> Builder -> public Builder put(String setting, float value);1540486836;Sets the setting with the provided setting key and the float value.__@param setting The setting key_@param value   The float value_@return The builder;public Builder put(String setting, float value) {_            put(setting, String.valueOf(value))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,float,value,param,setting,the,setting,key,param,value,the,float,value,return,the,builder;public,builder,put,string,setting,float,value,put,setting,string,value,of,value,return,this
Settings -> Builder -> public Builder put(String setting, float value);1546842892;Sets the setting with the provided setting key and the float value.__@param setting The setting key_@param value   The float value_@return The builder;public Builder put(String setting, float value) {_            put(setting, String.valueOf(value))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,float,value,param,setting,the,setting,key,param,value,the,float,value,return,the,builder;public,builder,put,string,setting,float,value,put,setting,string,value,of,value,return,this
Settings -> Builder -> public Builder put(String setting, float value);1546874030;Sets the setting with the provided setting key and the float value.__@param setting The setting key_@param value   The float value_@return The builder;public Builder put(String setting, float value) {_            put(setting, String.valueOf(value))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,float,value,param,setting,the,setting,key,param,value,the,float,value,return,the,builder;public,builder,put,string,setting,float,value,put,setting,string,value,of,value,return,this
Settings -> Builder -> public Builder put(String setting, float value);1546901964;Sets the setting with the provided setting key and the float value.__@param setting The setting key_@param value   The float value_@return The builder;public Builder put(String setting, float value) {_            put(setting, String.valueOf(value))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,float,value,param,setting,the,setting,key,param,value,the,float,value,return,the,builder;public,builder,put,string,setting,float,value,put,setting,string,value,of,value,return,this
Settings -> Builder -> public Builder put(String setting, float value);1547643436;Sets the setting with the provided setting key and the float value.__@param setting The setting key_@param value   The float value_@return The builder;public Builder put(String setting, float value) {_            put(setting, String.valueOf(value))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,float,value,param,setting,the,setting,key,param,value,the,float,value,return,the,builder;public,builder,put,string,setting,float,value,put,setting,string,value,of,value,return,this
Settings -> Builder -> public Builder put(String setting, float value);1548422582;Sets the setting with the provided setting key and the float value.__@param setting The setting key_@param value   The float value_@return The builder;public Builder put(String setting, float value) {_            put(setting, String.valueOf(value))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,float,value,param,setting,the,setting,key,param,value,the,float,value,return,the,builder;public,builder,put,string,setting,float,value,put,setting,string,value,of,value,return,this
Settings -> Builder -> public Builder put(String setting, long value, TimeUnit timeUnit);1524684173;Sets the setting with the provided setting key and the time value.__@param setting The setting key_@param value   The time value_@return The builder;public Builder put(String setting, long value, TimeUnit timeUnit) {_            put(setting, timeUnit.toMillis(value) + "ms")__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,time,value,param,setting,the,setting,key,param,value,the,time,value,return,the,builder;public,builder,put,string,setting,long,value,time,unit,time,unit,put,setting,time,unit,to,millis,value,ms,return,this
Settings -> Builder -> public Builder put(String setting, long value, TimeUnit timeUnit);1525334055;Sets the setting with the provided setting key and the time value.__@param setting The setting key_@param value   The time value_@return The builder;public Builder put(String setting, long value, TimeUnit timeUnit) {_            put(setting, timeUnit.toMillis(value) + "ms")__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,time,value,param,setting,the,setting,key,param,value,the,time,value,return,the,builder;public,builder,put,string,setting,long,value,time,unit,time,unit,put,setting,time,unit,to,millis,value,ms,return,this
Settings -> Builder -> public Builder put(String setting, long value, TimeUnit timeUnit);1536828374;Sets the setting with the provided setting key and the time value.__@param setting The setting key_@param value   The time value_@return The builder;public Builder put(String setting, long value, TimeUnit timeUnit) {_            put(setting, timeUnit.toMillis(value) + "ms")__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,time,value,param,setting,the,setting,key,param,value,the,time,value,return,the,builder;public,builder,put,string,setting,long,value,time,unit,time,unit,put,setting,time,unit,to,millis,value,ms,return,this
Settings -> Builder -> public Builder put(String setting, long value, TimeUnit timeUnit);1539951844;Sets the setting with the provided setting key and the time value.__@param setting The setting key_@param value   The time value_@return The builder;public Builder put(String setting, long value, TimeUnit timeUnit) {_            put(setting, timeUnit.toMillis(value) + "ms")__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,time,value,param,setting,the,setting,key,param,value,the,time,value,return,the,builder;public,builder,put,string,setting,long,value,time,unit,time,unit,put,setting,time,unit,to,millis,value,ms,return,this
Settings -> Builder -> public Builder put(String setting, long value, TimeUnit timeUnit);1540486836;Sets the setting with the provided setting key and the time value.__@param setting The setting key_@param value   The time value_@return The builder;public Builder put(String setting, long value, TimeUnit timeUnit) {_            put(setting, timeUnit.toMillis(value) + "ms")__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,time,value,param,setting,the,setting,key,param,value,the,time,value,return,the,builder;public,builder,put,string,setting,long,value,time,unit,time,unit,put,setting,time,unit,to,millis,value,ms,return,this
Settings -> Builder -> public Builder put(String setting, long value, TimeUnit timeUnit);1546842892;Sets the setting with the provided setting key and the time value.__@param setting The setting key_@param value   The time value_@return The builder;public Builder put(String setting, long value, TimeUnit timeUnit) {_            put(setting, timeUnit.toMillis(value) + "ms")__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,time,value,param,setting,the,setting,key,param,value,the,time,value,return,the,builder;public,builder,put,string,setting,long,value,time,unit,time,unit,put,setting,time,unit,to,millis,value,ms,return,this
Settings -> Builder -> public Builder put(String setting, long value, TimeUnit timeUnit);1546874030;Sets the setting with the provided setting key and the time value.__@param setting The setting key_@param value   The time value_@return The builder;public Builder put(String setting, long value, TimeUnit timeUnit) {_            put(setting, timeUnit.toMillis(value) + "ms")__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,time,value,param,setting,the,setting,key,param,value,the,time,value,return,the,builder;public,builder,put,string,setting,long,value,time,unit,time,unit,put,setting,time,unit,to,millis,value,ms,return,this
Settings -> public Settings getByPrefix(String prefix);1524684173;A settings that are filtered (and key is removed) with the specified prefix.;public Settings getByPrefix(String prefix) {_        return new Settings(new FilteredMap(this.settings, (k) -> k.startsWith(prefix), prefix), secureSettings == null ? null :_            new PrefixedSecureSettings(secureSettings, prefix, s -> s.startsWith(prefix)))__    };a,settings,that,are,filtered,and,key,is,removed,with,the,specified,prefix;public,settings,get,by,prefix,string,prefix,return,new,settings,new,filtered,map,this,settings,k,k,starts,with,prefix,prefix,secure,settings,null,null,new,prefixed,secure,settings,secure,settings,prefix,s,s,starts,with,prefix
Settings -> public Settings getByPrefix(String prefix);1525334055;A settings that are filtered (and key is removed) with the specified prefix.;public Settings getByPrefix(String prefix) {_        return new Settings(new FilteredMap(this.settings, (k) -> k.startsWith(prefix), prefix), secureSettings == null ? null :_            new PrefixedSecureSettings(secureSettings, prefix, s -> s.startsWith(prefix)))__    };a,settings,that,are,filtered,and,key,is,removed,with,the,specified,prefix;public,settings,get,by,prefix,string,prefix,return,new,settings,new,filtered,map,this,settings,k,k,starts,with,prefix,prefix,secure,settings,null,null,new,prefixed,secure,settings,secure,settings,prefix,s,s,starts,with,prefix
Settings -> public Settings getByPrefix(String prefix);1536828374;A settings that are filtered (and key is removed) with the specified prefix.;public Settings getByPrefix(String prefix) {_        return new Settings(new FilteredMap(this.settings, (k) -> k.startsWith(prefix), prefix), secureSettings == null ? null :_            new PrefixedSecureSettings(secureSettings, prefix, s -> s.startsWith(prefix)))__    };a,settings,that,are,filtered,and,key,is,removed,with,the,specified,prefix;public,settings,get,by,prefix,string,prefix,return,new,settings,new,filtered,map,this,settings,k,k,starts,with,prefix,prefix,secure,settings,null,null,new,prefixed,secure,settings,secure,settings,prefix,s,s,starts,with,prefix
Settings -> public Settings getByPrefix(String prefix);1539951844;A settings that are filtered (and key is removed) with the specified prefix.;public Settings getByPrefix(String prefix) {_        return new Settings(new FilteredMap(this.settings, (k) -> k.startsWith(prefix), prefix), secureSettings == null ? null :_            new PrefixedSecureSettings(secureSettings, prefix, s -> s.startsWith(prefix)))__    };a,settings,that,are,filtered,and,key,is,removed,with,the,specified,prefix;public,settings,get,by,prefix,string,prefix,return,new,settings,new,filtered,map,this,settings,k,k,starts,with,prefix,prefix,secure,settings,null,null,new,prefixed,secure,settings,secure,settings,prefix,s,s,starts,with,prefix
Settings -> public Settings getByPrefix(String prefix);1540486836;A settings that are filtered (and key is removed) with the specified prefix.;public Settings getByPrefix(String prefix) {_        return new Settings(new FilteredMap(this.settings, (k) -> k.startsWith(prefix), prefix), secureSettings == null ? null :_            new PrefixedSecureSettings(secureSettings, prefix, s -> s.startsWith(prefix)))__    };a,settings,that,are,filtered,and,key,is,removed,with,the,specified,prefix;public,settings,get,by,prefix,string,prefix,return,new,settings,new,filtered,map,this,settings,k,k,starts,with,prefix,prefix,secure,settings,null,null,new,prefixed,secure,settings,secure,settings,prefix,s,s,starts,with,prefix
Settings -> public Settings getByPrefix(String prefix);1546842892;A settings that are filtered (and key is removed) with the specified prefix.;public Settings getByPrefix(String prefix) {_        return new Settings(new FilteredMap(this.settings, (k) -> k.startsWith(prefix), prefix), secureSettings == null ? null :_            new PrefixedSecureSettings(secureSettings, prefix, s -> s.startsWith(prefix)))__    };a,settings,that,are,filtered,and,key,is,removed,with,the,specified,prefix;public,settings,get,by,prefix,string,prefix,return,new,settings,new,filtered,map,this,settings,k,k,starts,with,prefix,prefix,secure,settings,null,null,new,prefixed,secure,settings,secure,settings,prefix,s,s,starts,with,prefix
Settings -> public Settings getByPrefix(String prefix);1546874030;A settings that are filtered (and key is removed) with the specified prefix.;public Settings getByPrefix(String prefix) {_        return new Settings(new FilteredMap(this.settings, (k) -> k.startsWith(prefix), prefix), secureSettings == null ? null :_            new PrefixedSecureSettings(secureSettings, prefix, s -> s.startsWith(prefix)))__    };a,settings,that,are,filtered,and,key,is,removed,with,the,specified,prefix;public,settings,get,by,prefix,string,prefix,return,new,settings,new,filtered,map,this,settings,k,k,starts,with,prefix,prefix,secure,settings,null,null,new,prefixed,secure,settings,secure,settings,prefix,s,s,starts,with,prefix
Settings -> public Settings getByPrefix(String prefix);1546901964;A settings that are filtered (and key is removed) with the specified prefix.;public Settings getByPrefix(String prefix) {_        return new Settings(new FilteredMap(this.settings, (k) -> k.startsWith(prefix), prefix), secureSettings == null ? null :_            new PrefixedSecureSettings(secureSettings, prefix, s -> s.startsWith(prefix)))__    };a,settings,that,are,filtered,and,key,is,removed,with,the,specified,prefix;public,settings,get,by,prefix,string,prefix,return,new,settings,new,filtered,map,this,settings,k,k,starts,with,prefix,prefix,secure,settings,null,null,new,prefixed,secure,settings,secure,settings,prefix,s,s,starts,with,prefix
Settings -> public Settings getByPrefix(String prefix);1547643436;A settings that are filtered (and key is removed) with the specified prefix.;public Settings getByPrefix(String prefix) {_        return new Settings(new FilteredMap(this.settings, (k) -> k.startsWith(prefix), prefix), secureSettings == null ? null :_            new PrefixedSecureSettings(secureSettings, prefix, s -> s.startsWith(prefix)))__    };a,settings,that,are,filtered,and,key,is,removed,with,the,specified,prefix;public,settings,get,by,prefix,string,prefix,return,new,settings,new,filtered,map,this,settings,k,k,starts,with,prefix,prefix,secure,settings,null,null,new,prefixed,secure,settings,secure,settings,prefix,s,s,starts,with,prefix
Settings -> public Settings getByPrefix(String prefix);1548422582;A settings that are filtered (and key is removed) with the specified prefix.;public Settings getByPrefix(String prefix) {_        return new Settings(new FilteredMap(this.settings, (k) -> k.startsWith(prefix), prefix), secureSettings == null ? null :_            new PrefixedSecureSettings(secureSettings, prefix, s -> s.startsWith(prefix)))__    };a,settings,that,are,filtered,and,key,is,removed,with,the,specified,prefix;public,settings,get,by,prefix,string,prefix,return,new,settings,new,filtered,map,this,settings,k,k,starts,with,prefix,prefix,secure,settings,null,null,new,prefixed,secure,settings,secure,settings,prefix,s,s,starts,with,prefix
Settings -> Builder -> public Builder put(final String key, final ByteSizeValue byteSizeValue);1546874030;Sets a byteSizeValue setting with the provided setting key and byteSizeValue.__@param key  The setting key_@param byteSizeValue The setting value_@return The builder;public Builder put(final String key, final ByteSizeValue byteSizeValue) {_            return put(key, byteSizeValue.getStringRep())__        };sets,a,byte,size,value,setting,with,the,provided,setting,key,and,byte,size,value,param,key,the,setting,key,param,byte,size,value,the,setting,value,return,the,builder;public,builder,put,final,string,key,final,byte,size,value,byte,size,value,return,put,key,byte,size,value,get,string,rep
Settings -> Builder -> public Builder put(final String key, final ByteSizeValue byteSizeValue);1546901964;Sets a byteSizeValue setting with the provided setting key and byteSizeValue.__@param key  The setting key_@param byteSizeValue The setting value_@return The builder;public Builder put(final String key, final ByteSizeValue byteSizeValue) {_            return put(key, byteSizeValue.getStringRep())__        };sets,a,byte,size,value,setting,with,the,provided,setting,key,and,byte,size,value,param,key,the,setting,key,param,byte,size,value,the,setting,value,return,the,builder;public,builder,put,final,string,key,final,byte,size,value,byte,size,value,return,put,key,byte,size,value,get,string,rep
Settings -> Builder -> public Builder put(final String key, final ByteSizeValue byteSizeValue);1547643436;Sets a byteSizeValue setting with the provided setting key and byteSizeValue.__@param key  The setting key_@param byteSizeValue The setting value_@return The builder;public Builder put(final String key, final ByteSizeValue byteSizeValue) {_            return put(key, byteSizeValue.getStringRep())__        };sets,a,byte,size,value,setting,with,the,provided,setting,key,and,byte,size,value,param,key,the,setting,key,param,byte,size,value,the,setting,value,return,the,builder;public,builder,put,final,string,key,final,byte,size,value,byte,size,value,return,put,key,byte,size,value,get,string,rep
Settings -> Builder -> public Builder put(final String key, final ByteSizeValue byteSizeValue);1548422582;Sets a byteSizeValue setting with the provided setting key and byteSizeValue.__@param key  The setting key_@param byteSizeValue The setting value_@return The builder;public Builder put(final String key, final ByteSizeValue byteSizeValue) {_            return put(key, byteSizeValue.getStringRep())__        };sets,a,byte,size,value,setting,with,the,provided,setting,key,and,byte,size,value,param,key,the,setting,key,param,byte,size,value,the,setting,value,return,the,builder;public,builder,put,final,string,key,final,byte,size,value,byte,size,value,return,put,key,byte,size,value,get,string,rep
Settings -> Builder -> public Builder loadFromSource(String source, XContentType xContentType);1524684173;Loads settings from the actual string content that represents them using {@link #fromXContent(XContentParser)};public Builder loadFromSource(String source, XContentType xContentType) {_            try (XContentParser parser =  XContentFactory.xContent(xContentType)_                    .createParser(NamedXContentRegistry.EMPTY, LoggingDeprecationHandler.INSTANCE, source)) {_                this.put(fromXContent(parser, true, true))__            } catch (Exception e) {_                throw new SettingsException("Failed to load settings from [" + source + "]", e)__            }_            return this__        };loads,settings,from,the,actual,string,content,that,represents,them,using,link,from,xcontent,xcontent,parser;public,builder,load,from,source,string,source,xcontent,type,x,content,type,try,xcontent,parser,parser,xcontent,factory,x,content,x,content,type,create,parser,named,xcontent,registry,empty,logging,deprecation,handler,instance,source,this,put,from,xcontent,parser,true,true,catch,exception,e,throw,new,settings,exception,failed,to,load,settings,from,source,e,return,this
Settings -> Builder -> public Builder loadFromSource(String source, XContentType xContentType);1525334055;Loads settings from the actual string content that represents them using {@link #fromXContent(XContentParser)};public Builder loadFromSource(String source, XContentType xContentType) {_            try (XContentParser parser =  XContentFactory.xContent(xContentType)_                    .createParser(NamedXContentRegistry.EMPTY, LoggingDeprecationHandler.INSTANCE, source)) {_                this.put(fromXContent(parser, true, true))__            } catch (Exception e) {_                throw new SettingsException("Failed to load settings from [" + source + "]", e)__            }_            return this__        };loads,settings,from,the,actual,string,content,that,represents,them,using,link,from,xcontent,xcontent,parser;public,builder,load,from,source,string,source,xcontent,type,x,content,type,try,xcontent,parser,parser,xcontent,factory,x,content,x,content,type,create,parser,named,xcontent,registry,empty,logging,deprecation,handler,instance,source,this,put,from,xcontent,parser,true,true,catch,exception,e,throw,new,settings,exception,failed,to,load,settings,from,source,e,return,this
Settings -> Builder -> public Builder loadFromSource(String source, XContentType xContentType);1536828374;Loads settings from the actual string content that represents them using {@link #fromXContent(XContentParser)};public Builder loadFromSource(String source, XContentType xContentType) {_            try (XContentParser parser =  XContentFactory.xContent(xContentType)_                    .createParser(NamedXContentRegistry.EMPTY, LoggingDeprecationHandler.INSTANCE, source)) {_                this.put(fromXContent(parser, true, true))__            } catch (Exception e) {_                throw new SettingsException("Failed to load settings from [" + source + "]", e)__            }_            return this__        };loads,settings,from,the,actual,string,content,that,represents,them,using,link,from,xcontent,xcontent,parser;public,builder,load,from,source,string,source,xcontent,type,x,content,type,try,xcontent,parser,parser,xcontent,factory,x,content,x,content,type,create,parser,named,xcontent,registry,empty,logging,deprecation,handler,instance,source,this,put,from,xcontent,parser,true,true,catch,exception,e,throw,new,settings,exception,failed,to,load,settings,from,source,e,return,this
Settings -> Builder -> public Builder loadFromSource(String source, XContentType xContentType);1539951844;Loads settings from the actual string content that represents them using {@link #fromXContent(XContentParser)};public Builder loadFromSource(String source, XContentType xContentType) {_            try (XContentParser parser =  XContentFactory.xContent(xContentType)_                    .createParser(NamedXContentRegistry.EMPTY, LoggingDeprecationHandler.INSTANCE, source)) {_                this.put(fromXContent(parser, true, true))__            } catch (Exception e) {_                throw new SettingsException("Failed to load settings from [" + source + "]", e)__            }_            return this__        };loads,settings,from,the,actual,string,content,that,represents,them,using,link,from,xcontent,xcontent,parser;public,builder,load,from,source,string,source,xcontent,type,x,content,type,try,xcontent,parser,parser,xcontent,factory,x,content,x,content,type,create,parser,named,xcontent,registry,empty,logging,deprecation,handler,instance,source,this,put,from,xcontent,parser,true,true,catch,exception,e,throw,new,settings,exception,failed,to,load,settings,from,source,e,return,this
Settings -> Builder -> public Builder loadFromSource(String source, XContentType xContentType);1540486836;Loads settings from the actual string content that represents them using {@link #fromXContent(XContentParser)};public Builder loadFromSource(String source, XContentType xContentType) {_            try (XContentParser parser =  XContentFactory.xContent(xContentType)_                    .createParser(NamedXContentRegistry.EMPTY, LoggingDeprecationHandler.INSTANCE, source)) {_                this.put(fromXContent(parser, true, true))__            } catch (Exception e) {_                throw new SettingsException("Failed to load settings from [" + source + "]", e)__            }_            return this__        };loads,settings,from,the,actual,string,content,that,represents,them,using,link,from,xcontent,xcontent,parser;public,builder,load,from,source,string,source,xcontent,type,x,content,type,try,xcontent,parser,parser,xcontent,factory,x,content,x,content,type,create,parser,named,xcontent,registry,empty,logging,deprecation,handler,instance,source,this,put,from,xcontent,parser,true,true,catch,exception,e,throw,new,settings,exception,failed,to,load,settings,from,source,e,return,this
Settings -> Builder -> public Builder loadFromSource(String source, XContentType xContentType);1546842892;Loads settings from the actual string content that represents them using {@link #fromXContent(XContentParser)};public Builder loadFromSource(String source, XContentType xContentType) {_            try (XContentParser parser =  XContentFactory.xContent(xContentType)_                    .createParser(NamedXContentRegistry.EMPTY, LoggingDeprecationHandler.INSTANCE, source)) {_                this.put(fromXContent(parser, true, true))__            } catch (Exception e) {_                throw new SettingsException("Failed to load settings from [" + source + "]", e)__            }_            return this__        };loads,settings,from,the,actual,string,content,that,represents,them,using,link,from,xcontent,xcontent,parser;public,builder,load,from,source,string,source,xcontent,type,x,content,type,try,xcontent,parser,parser,xcontent,factory,x,content,x,content,type,create,parser,named,xcontent,registry,empty,logging,deprecation,handler,instance,source,this,put,from,xcontent,parser,true,true,catch,exception,e,throw,new,settings,exception,failed,to,load,settings,from,source,e,return,this
Settings -> Builder -> public Builder loadFromSource(String source, XContentType xContentType);1546874030;Loads settings from the actual string content that represents them using {@link #fromXContent(XContentParser)};public Builder loadFromSource(String source, XContentType xContentType) {_            try (XContentParser parser =  XContentFactory.xContent(xContentType)_                    .createParser(NamedXContentRegistry.EMPTY, LoggingDeprecationHandler.INSTANCE, source)) {_                this.put(fromXContent(parser, true, true))__            } catch (Exception e) {_                throw new SettingsException("Failed to load settings from [" + source + "]", e)__            }_            return this__        };loads,settings,from,the,actual,string,content,that,represents,them,using,link,from,xcontent,xcontent,parser;public,builder,load,from,source,string,source,xcontent,type,x,content,type,try,xcontent,parser,parser,xcontent,factory,x,content,x,content,type,create,parser,named,xcontent,registry,empty,logging,deprecation,handler,instance,source,this,put,from,xcontent,parser,true,true,catch,exception,e,throw,new,settings,exception,failed,to,load,settings,from,source,e,return,this
Settings -> Builder -> public Builder loadFromSource(String source, XContentType xContentType);1546901964;Loads settings from the actual string content that represents them using {@link #fromXContent(XContentParser)};public Builder loadFromSource(String source, XContentType xContentType) {_            try (XContentParser parser =  XContentFactory.xContent(xContentType)_                    .createParser(NamedXContentRegistry.EMPTY, LoggingDeprecationHandler.INSTANCE, source)) {_                this.put(fromXContent(parser, true, true))__            } catch (Exception e) {_                throw new SettingsException("Failed to load settings from [" + source + "]", e)__            }_            return this__        };loads,settings,from,the,actual,string,content,that,represents,them,using,link,from,xcontent,xcontent,parser;public,builder,load,from,source,string,source,xcontent,type,x,content,type,try,xcontent,parser,parser,xcontent,factory,x,content,x,content,type,create,parser,named,xcontent,registry,empty,logging,deprecation,handler,instance,source,this,put,from,xcontent,parser,true,true,catch,exception,e,throw,new,settings,exception,failed,to,load,settings,from,source,e,return,this
Settings -> Builder -> public Builder loadFromSource(String source, XContentType xContentType);1547643436;Loads settings from the actual string content that represents them using {@link #fromXContent(XContentParser)};public Builder loadFromSource(String source, XContentType xContentType) {_            try (XContentParser parser =  XContentFactory.xContent(xContentType)_                    .createParser(NamedXContentRegistry.EMPTY, LoggingDeprecationHandler.INSTANCE, source)) {_                this.put(fromXContent(parser, true, true))__            } catch (Exception e) {_                throw new SettingsException("Failed to load settings from [" + source + "]", e)__            }_            return this__        };loads,settings,from,the,actual,string,content,that,represents,them,using,link,from,xcontent,xcontent,parser;public,builder,load,from,source,string,source,xcontent,type,x,content,type,try,xcontent,parser,parser,xcontent,factory,x,content,x,content,type,create,parser,named,xcontent,registry,empty,logging,deprecation,handler,instance,source,this,put,from,xcontent,parser,true,true,catch,exception,e,throw,new,settings,exception,failed,to,load,settings,from,source,e,return,this
Settings -> Builder -> public Builder loadFromSource(String source, XContentType xContentType);1548422582;Loads settings from the actual string content that represents them using {@link #fromXContent(XContentParser)};public Builder loadFromSource(String source, XContentType xContentType) {_            try (XContentParser parser =  XContentFactory.xContent(xContentType)_                    .createParser(NamedXContentRegistry.EMPTY, LoggingDeprecationHandler.INSTANCE, source)) {_                this.put(fromXContent(parser, true, true))__            } catch (Exception e) {_                throw new SettingsException("Failed to load settings from [" + source + "]", e)__            }_            return this__        };loads,settings,from,the,actual,string,content,that,represents,them,using,link,from,xcontent,xcontent,parser;public,builder,load,from,source,string,source,xcontent,type,x,content,type,try,xcontent,parser,parser,xcontent,factory,x,content,x,content,type,create,parser,named,xcontent,registry,empty,logging,deprecation,handler,instance,source,this,put,from,xcontent,parser,true,true,catch,exception,e,throw,new,settings,exception,failed,to,load,settings,from,source,e,return,this
Settings -> Builder -> public Builder put(String setting, long value, ByteSizeUnit sizeUnit);1524684173;Sets the setting with the provided setting key and the size value.__@param setting The setting key_@param value   The size value_@return The builder;public Builder put(String setting, long value, ByteSizeUnit sizeUnit) {_            put(setting, sizeUnit.toBytes(value) + "b")__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,size,value,param,setting,the,setting,key,param,value,the,size,value,return,the,builder;public,builder,put,string,setting,long,value,byte,size,unit,size,unit,put,setting,size,unit,to,bytes,value,b,return,this
Settings -> Builder -> public Builder put(String setting, long value, ByteSizeUnit sizeUnit);1525334055;Sets the setting with the provided setting key and the size value.__@param setting The setting key_@param value   The size value_@return The builder;public Builder put(String setting, long value, ByteSizeUnit sizeUnit) {_            put(setting, sizeUnit.toBytes(value) + "b")__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,size,value,param,setting,the,setting,key,param,value,the,size,value,return,the,builder;public,builder,put,string,setting,long,value,byte,size,unit,size,unit,put,setting,size,unit,to,bytes,value,b,return,this
Settings -> Builder -> public Builder put(String setting, long value, ByteSizeUnit sizeUnit);1536828374;Sets the setting with the provided setting key and the size value.__@param setting The setting key_@param value   The size value_@return The builder;public Builder put(String setting, long value, ByteSizeUnit sizeUnit) {_            put(setting, sizeUnit.toBytes(value) + "b")__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,size,value,param,setting,the,setting,key,param,value,the,size,value,return,the,builder;public,builder,put,string,setting,long,value,byte,size,unit,size,unit,put,setting,size,unit,to,bytes,value,b,return,this
Settings -> Builder -> public Builder put(String setting, long value, ByteSizeUnit sizeUnit);1539951844;Sets the setting with the provided setting key and the size value.__@param setting The setting key_@param value   The size value_@return The builder;public Builder put(String setting, long value, ByteSizeUnit sizeUnit) {_            put(setting, sizeUnit.toBytes(value) + "b")__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,size,value,param,setting,the,setting,key,param,value,the,size,value,return,the,builder;public,builder,put,string,setting,long,value,byte,size,unit,size,unit,put,setting,size,unit,to,bytes,value,b,return,this
Settings -> Builder -> public Builder put(String setting, long value, ByteSizeUnit sizeUnit);1540486836;Sets the setting with the provided setting key and the size value.__@param setting The setting key_@param value   The size value_@return The builder;public Builder put(String setting, long value, ByteSizeUnit sizeUnit) {_            put(setting, sizeUnit.toBytes(value) + "b")__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,size,value,param,setting,the,setting,key,param,value,the,size,value,return,the,builder;public,builder,put,string,setting,long,value,byte,size,unit,size,unit,put,setting,size,unit,to,bytes,value,b,return,this
Settings -> Builder -> public Builder put(String setting, long value, ByteSizeUnit sizeUnit);1546842892;Sets the setting with the provided setting key and the size value.__@param setting The setting key_@param value   The size value_@return The builder;public Builder put(String setting, long value, ByteSizeUnit sizeUnit) {_            put(setting, sizeUnit.toBytes(value) + "b")__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,size,value,param,setting,the,setting,key,param,value,the,size,value,return,the,builder;public,builder,put,string,setting,long,value,byte,size,unit,size,unit,put,setting,size,unit,to,bytes,value,b,return,this
Settings -> Builder -> public Builder put(String setting, long value, ByteSizeUnit sizeUnit);1546874030;Sets the setting with the provided setting key and the size value.__@param setting The setting key_@param value   The size value_@return The builder;public Builder put(String setting, long value, ByteSizeUnit sizeUnit) {_            put(setting, sizeUnit.toBytes(value) + "b")__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,size,value,param,setting,the,setting,key,param,value,the,size,value,return,the,builder;public,builder,put,string,setting,long,value,byte,size,unit,size,unit,put,setting,size,unit,to,bytes,value,b,return,this
Settings -> Builder -> public Builder put(String setting, long value, ByteSizeUnit sizeUnit);1546901964;Sets the setting with the provided setting key and the size value.__@param setting The setting key_@param value   The size value_@return The builder;public Builder put(String setting, long value, ByteSizeUnit sizeUnit) {_            put(setting, sizeUnit.toBytes(value) + "b")__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,size,value,param,setting,the,setting,key,param,value,the,size,value,return,the,builder;public,builder,put,string,setting,long,value,byte,size,unit,size,unit,put,setting,size,unit,to,bytes,value,b,return,this
Settings -> Builder -> public Builder put(String setting, long value, ByteSizeUnit sizeUnit);1547643436;Sets the setting with the provided setting key and the size value.__@param setting The setting key_@param value   The size value_@return The builder;public Builder put(String setting, long value, ByteSizeUnit sizeUnit) {_            put(setting, sizeUnit.toBytes(value) + "b")__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,size,value,param,setting,the,setting,key,param,value,the,size,value,return,the,builder;public,builder,put,string,setting,long,value,byte,size,unit,size,unit,put,setting,size,unit,to,bytes,value,b,return,this
Settings -> Builder -> public Builder put(String setting, long value, ByteSizeUnit sizeUnit);1548422582;Sets the setting with the provided setting key and the size value.__@param setting The setting key_@param value   The size value_@return The builder;public Builder put(String setting, long value, ByteSizeUnit sizeUnit) {_            put(setting, sizeUnit.toBytes(value) + "b")__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,size,value,param,setting,the,setting,key,param,value,the,size,value,return,the,builder;public,builder,put,string,setting,long,value,byte,size,unit,size,unit,put,setting,size,unit,to,bytes,value,b,return,this
Settings -> Builder -> public Builder put(Settings settings, boolean copySecureSettings);1524684173;Sets all the provided settings._@param settings the settings to set_@param copySecureSettings if <code>true</code> all settings including secure settings are copied.;public Builder put(Settings settings, boolean copySecureSettings) {_            Map<String, Object> settingsMap = new HashMap<>(settings.settings)__            processLegacyLists(settingsMap)__            map.putAll(settingsMap)__            if (copySecureSettings && settings.getSecureSettings() != null) {_                setSecureSettings(settings.getSecureSettings())__            }_            return this__        };sets,all,the,provided,settings,param,settings,the,settings,to,set,param,copy,secure,settings,if,code,true,code,all,settings,including,secure,settings,are,copied;public,builder,put,settings,settings,boolean,copy,secure,settings,map,string,object,settings,map,new,hash,map,settings,settings,process,legacy,lists,settings,map,map,put,all,settings,map,if,copy,secure,settings,settings,get,secure,settings,null,set,secure,settings,settings,get,secure,settings,return,this
Settings -> Builder -> public Builder put(Settings settings, boolean copySecureSettings);1525334055;Sets all the provided settings._@param settings the settings to set_@param copySecureSettings if <code>true</code> all settings including secure settings are copied.;public Builder put(Settings settings, boolean copySecureSettings) {_            Map<String, Object> settingsMap = new HashMap<>(settings.settings)__            processLegacyLists(settingsMap)__            map.putAll(settingsMap)__            if (copySecureSettings && settings.getSecureSettings() != null) {_                setSecureSettings(settings.getSecureSettings())__            }_            return this__        };sets,all,the,provided,settings,param,settings,the,settings,to,set,param,copy,secure,settings,if,code,true,code,all,settings,including,secure,settings,are,copied;public,builder,put,settings,settings,boolean,copy,secure,settings,map,string,object,settings,map,new,hash,map,settings,settings,process,legacy,lists,settings,map,map,put,all,settings,map,if,copy,secure,settings,settings,get,secure,settings,null,set,secure,settings,settings,get,secure,settings,return,this
Settings -> Builder -> public Builder put(Settings settings, boolean copySecureSettings);1536828374;Sets all the provided settings._@param settings the settings to set_@param copySecureSettings if <code>true</code> all settings including secure settings are copied.;public Builder put(Settings settings, boolean copySecureSettings) {_            Map<String, Object> settingsMap = new HashMap<>(settings.settings)__            processLegacyLists(settingsMap)__            map.putAll(settingsMap)__            if (copySecureSettings && settings.getSecureSettings() != null) {_                setSecureSettings(settings.getSecureSettings())__            }_            return this__        };sets,all,the,provided,settings,param,settings,the,settings,to,set,param,copy,secure,settings,if,code,true,code,all,settings,including,secure,settings,are,copied;public,builder,put,settings,settings,boolean,copy,secure,settings,map,string,object,settings,map,new,hash,map,settings,settings,process,legacy,lists,settings,map,map,put,all,settings,map,if,copy,secure,settings,settings,get,secure,settings,null,set,secure,settings,settings,get,secure,settings,return,this
Settings -> Builder -> public Builder put(Settings settings, boolean copySecureSettings);1539951844;Sets all the provided settings._@param settings the settings to set_@param copySecureSettings if <code>true</code> all settings including secure settings are copied.;public Builder put(Settings settings, boolean copySecureSettings) {_            Map<String, Object> settingsMap = new HashMap<>(settings.settings)__            processLegacyLists(settingsMap)__            map.putAll(settingsMap)__            if (copySecureSettings && settings.getSecureSettings() != null) {_                setSecureSettings(settings.getSecureSettings())__            }_            return this__        };sets,all,the,provided,settings,param,settings,the,settings,to,set,param,copy,secure,settings,if,code,true,code,all,settings,including,secure,settings,are,copied;public,builder,put,settings,settings,boolean,copy,secure,settings,map,string,object,settings,map,new,hash,map,settings,settings,process,legacy,lists,settings,map,map,put,all,settings,map,if,copy,secure,settings,settings,get,secure,settings,null,set,secure,settings,settings,get,secure,settings,return,this
Settings -> Builder -> public Builder put(Settings settings, boolean copySecureSettings);1540486836;Sets all the provided settings._@param settings the settings to set_@param copySecureSettings if <code>true</code> all settings including secure settings are copied.;public Builder put(Settings settings, boolean copySecureSettings) {_            Map<String, Object> settingsMap = new HashMap<>(settings.settings)__            processLegacyLists(settingsMap)__            map.putAll(settingsMap)__            if (copySecureSettings && settings.getSecureSettings() != null) {_                setSecureSettings(settings.getSecureSettings())__            }_            return this__        };sets,all,the,provided,settings,param,settings,the,settings,to,set,param,copy,secure,settings,if,code,true,code,all,settings,including,secure,settings,are,copied;public,builder,put,settings,settings,boolean,copy,secure,settings,map,string,object,settings,map,new,hash,map,settings,settings,process,legacy,lists,settings,map,map,put,all,settings,map,if,copy,secure,settings,settings,get,secure,settings,null,set,secure,settings,settings,get,secure,settings,return,this
Settings -> Builder -> public Builder put(Settings settings, boolean copySecureSettings);1546842892;Sets all the provided settings._@param settings the settings to set_@param copySecureSettings if <code>true</code> all settings including secure settings are copied.;public Builder put(Settings settings, boolean copySecureSettings) {_            Map<String, Object> settingsMap = new HashMap<>(settings.settings)__            processLegacyLists(settingsMap)__            map.putAll(settingsMap)__            if (copySecureSettings && settings.getSecureSettings() != null) {_                setSecureSettings(settings.getSecureSettings())__            }_            return this__        };sets,all,the,provided,settings,param,settings,the,settings,to,set,param,copy,secure,settings,if,code,true,code,all,settings,including,secure,settings,are,copied;public,builder,put,settings,settings,boolean,copy,secure,settings,map,string,object,settings,map,new,hash,map,settings,settings,process,legacy,lists,settings,map,map,put,all,settings,map,if,copy,secure,settings,settings,get,secure,settings,null,set,secure,settings,settings,get,secure,settings,return,this
Settings -> Builder -> public Builder put(Settings settings, boolean copySecureSettings);1546874030;Sets all the provided settings._@param settings the settings to set_@param copySecureSettings if <code>true</code> all settings including secure settings are copied.;public Builder put(Settings settings, boolean copySecureSettings) {_            Map<String, Object> settingsMap = new HashMap<>(settings.settings)__            processLegacyLists(settingsMap)__            map.putAll(settingsMap)__            if (copySecureSettings && settings.getSecureSettings() != null) {_                setSecureSettings(settings.getSecureSettings())__            }_            return this__        };sets,all,the,provided,settings,param,settings,the,settings,to,set,param,copy,secure,settings,if,code,true,code,all,settings,including,secure,settings,are,copied;public,builder,put,settings,settings,boolean,copy,secure,settings,map,string,object,settings,map,new,hash,map,settings,settings,process,legacy,lists,settings,map,map,put,all,settings,map,if,copy,secure,settings,settings,get,secure,settings,null,set,secure,settings,settings,get,secure,settings,return,this
Settings -> Builder -> public Builder put(Settings settings, boolean copySecureSettings);1546901964;Sets all the provided settings._@param settings the settings to set_@param copySecureSettings if <code>true</code> all settings including secure settings are copied.;public Builder put(Settings settings, boolean copySecureSettings) {_            Map<String, Object> settingsMap = new HashMap<>(settings.settings)__            processLegacyLists(settingsMap)__            map.putAll(settingsMap)__            if (copySecureSettings && settings.getSecureSettings() != null) {_                setSecureSettings(settings.getSecureSettings())__            }_            return this__        };sets,all,the,provided,settings,param,settings,the,settings,to,set,param,copy,secure,settings,if,code,true,code,all,settings,including,secure,settings,are,copied;public,builder,put,settings,settings,boolean,copy,secure,settings,map,string,object,settings,map,new,hash,map,settings,settings,process,legacy,lists,settings,map,map,put,all,settings,map,if,copy,secure,settings,settings,get,secure,settings,null,set,secure,settings,settings,get,secure,settings,return,this
Settings -> Builder -> public Builder put(Settings settings, boolean copySecureSettings);1547643436;Sets all the provided settings._@param settings the settings to set_@param copySecureSettings if <code>true</code> all settings including secure settings are copied.;public Builder put(Settings settings, boolean copySecureSettings) {_            Map<String, Object> settingsMap = new HashMap<>(settings.settings)__            processLegacyLists(settingsMap)__            map.putAll(settingsMap)__            if (copySecureSettings && settings.getSecureSettings() != null) {_                setSecureSettings(settings.getSecureSettings())__            }_            return this__        };sets,all,the,provided,settings,param,settings,the,settings,to,set,param,copy,secure,settings,if,code,true,code,all,settings,including,secure,settings,are,copied;public,builder,put,settings,settings,boolean,copy,secure,settings,map,string,object,settings,map,new,hash,map,settings,settings,process,legacy,lists,settings,map,map,put,all,settings,map,if,copy,secure,settings,settings,get,secure,settings,null,set,secure,settings,settings,get,secure,settings,return,this
Settings -> Builder -> public Builder put(Settings settings, boolean copySecureSettings);1548422582;Sets all the provided settings._@param settings the settings to set_@param copySecureSettings if <code>true</code> all settings including secure settings are copied.;public Builder put(Settings settings, boolean copySecureSettings) {_            Map<String, Object> settingsMap = new HashMap<>(settings.settings)__            processLegacyLists(settingsMap)__            map.putAll(settingsMap)__            if (copySecureSettings && settings.getSecureSettings() != null) {_                setSecureSettings(settings.getSecureSettings())__            }_            return this__        };sets,all,the,provided,settings,param,settings,the,settings,to,set,param,copy,secure,settings,if,code,true,code,all,settings,including,secure,settings,are,copied;public,builder,put,settings,settings,boolean,copy,secure,settings,map,string,object,settings,map,new,hash,map,settings,settings,process,legacy,lists,settings,map,map,put,all,settings,map,if,copy,secure,settings,settings,get,secure,settings,null,set,secure,settings,settings,get,secure,settings,return,this
Settings -> Builder -> public Builder normalizePrefix(String prefix);1524684173;Checks that all settings in the builder start with the specified prefix.__If a setting doesn't start with the prefix, the builder appends the prefix to such setting.;public Builder normalizePrefix(String prefix) {_            Map<String, Object> replacements = new HashMap<>()__            Iterator<Map.Entry<String, Object>> iterator = map.entrySet().iterator()__            while(iterator.hasNext()) {_                Map.Entry<String, Object> entry = iterator.next()__                String key = entry.getKey()__                if (key.startsWith(prefix) == false && key.endsWith("*") == false) {_                    replacements.put(prefix + key, entry.getValue())__                    iterator.remove()__                }_            }_            map.putAll(replacements)__            return this__        };checks,that,all,settings,in,the,builder,start,with,the,specified,prefix,if,a,setting,doesn,t,start,with,the,prefix,the,builder,appends,the,prefix,to,such,setting;public,builder,normalize,prefix,string,prefix,map,string,object,replacements,new,hash,map,iterator,map,entry,string,object,iterator,map,entry,set,iterator,while,iterator,has,next,map,entry,string,object,entry,iterator,next,string,key,entry,get,key,if,key,starts,with,prefix,false,key,ends,with,false,replacements,put,prefix,key,entry,get,value,iterator,remove,map,put,all,replacements,return,this
Settings -> Builder -> public Builder normalizePrefix(String prefix);1525334055;Checks that all settings in the builder start with the specified prefix.__If a setting doesn't start with the prefix, the builder appends the prefix to such setting.;public Builder normalizePrefix(String prefix) {_            Map<String, Object> replacements = new HashMap<>()__            Iterator<Map.Entry<String, Object>> iterator = map.entrySet().iterator()__            while(iterator.hasNext()) {_                Map.Entry<String, Object> entry = iterator.next()__                String key = entry.getKey()__                if (key.startsWith(prefix) == false && key.endsWith("*") == false) {_                    replacements.put(prefix + key, entry.getValue())__                    iterator.remove()__                }_            }_            map.putAll(replacements)__            return this__        };checks,that,all,settings,in,the,builder,start,with,the,specified,prefix,if,a,setting,doesn,t,start,with,the,prefix,the,builder,appends,the,prefix,to,such,setting;public,builder,normalize,prefix,string,prefix,map,string,object,replacements,new,hash,map,iterator,map,entry,string,object,iterator,map,entry,set,iterator,while,iterator,has,next,map,entry,string,object,entry,iterator,next,string,key,entry,get,key,if,key,starts,with,prefix,false,key,ends,with,false,replacements,put,prefix,key,entry,get,value,iterator,remove,map,put,all,replacements,return,this
Settings -> Builder -> public Builder normalizePrefix(String prefix);1536828374;Checks that all settings in the builder start with the specified prefix.__If a setting doesn't start with the prefix, the builder appends the prefix to such setting.;public Builder normalizePrefix(String prefix) {_            Map<String, Object> replacements = new HashMap<>()__            Iterator<Map.Entry<String, Object>> iterator = map.entrySet().iterator()__            while(iterator.hasNext()) {_                Map.Entry<String, Object> entry = iterator.next()__                String key = entry.getKey()__                if (key.startsWith(prefix) == false && key.endsWith("*") == false) {_                    replacements.put(prefix + key, entry.getValue())__                    iterator.remove()__                }_            }_            map.putAll(replacements)__            return this__        };checks,that,all,settings,in,the,builder,start,with,the,specified,prefix,if,a,setting,doesn,t,start,with,the,prefix,the,builder,appends,the,prefix,to,such,setting;public,builder,normalize,prefix,string,prefix,map,string,object,replacements,new,hash,map,iterator,map,entry,string,object,iterator,map,entry,set,iterator,while,iterator,has,next,map,entry,string,object,entry,iterator,next,string,key,entry,get,key,if,key,starts,with,prefix,false,key,ends,with,false,replacements,put,prefix,key,entry,get,value,iterator,remove,map,put,all,replacements,return,this
Settings -> Builder -> public Builder normalizePrefix(String prefix);1539951844;Checks that all settings in the builder start with the specified prefix.__If a setting doesn't start with the prefix, the builder appends the prefix to such setting.;public Builder normalizePrefix(String prefix) {_            Map<String, Object> replacements = new HashMap<>()__            Iterator<Map.Entry<String, Object>> iterator = map.entrySet().iterator()__            while(iterator.hasNext()) {_                Map.Entry<String, Object> entry = iterator.next()__                String key = entry.getKey()__                if (key.startsWith(prefix) == false && key.endsWith("*") == false) {_                    replacements.put(prefix + key, entry.getValue())__                    iterator.remove()__                }_            }_            map.putAll(replacements)__            return this__        };checks,that,all,settings,in,the,builder,start,with,the,specified,prefix,if,a,setting,doesn,t,start,with,the,prefix,the,builder,appends,the,prefix,to,such,setting;public,builder,normalize,prefix,string,prefix,map,string,object,replacements,new,hash,map,iterator,map,entry,string,object,iterator,map,entry,set,iterator,while,iterator,has,next,map,entry,string,object,entry,iterator,next,string,key,entry,get,key,if,key,starts,with,prefix,false,key,ends,with,false,replacements,put,prefix,key,entry,get,value,iterator,remove,map,put,all,replacements,return,this
Settings -> Builder -> public Builder normalizePrefix(String prefix);1540486836;Checks that all settings in the builder start with the specified prefix.__If a setting doesn't start with the prefix, the builder appends the prefix to such setting.;public Builder normalizePrefix(String prefix) {_            Map<String, Object> replacements = new HashMap<>()__            Iterator<Map.Entry<String, Object>> iterator = map.entrySet().iterator()__            while(iterator.hasNext()) {_                Map.Entry<String, Object> entry = iterator.next()__                String key = entry.getKey()__                if (key.startsWith(prefix) == false && key.endsWith("*") == false) {_                    replacements.put(prefix + key, entry.getValue())__                    iterator.remove()__                }_            }_            map.putAll(replacements)__            return this__        };checks,that,all,settings,in,the,builder,start,with,the,specified,prefix,if,a,setting,doesn,t,start,with,the,prefix,the,builder,appends,the,prefix,to,such,setting;public,builder,normalize,prefix,string,prefix,map,string,object,replacements,new,hash,map,iterator,map,entry,string,object,iterator,map,entry,set,iterator,while,iterator,has,next,map,entry,string,object,entry,iterator,next,string,key,entry,get,key,if,key,starts,with,prefix,false,key,ends,with,false,replacements,put,prefix,key,entry,get,value,iterator,remove,map,put,all,replacements,return,this
Settings -> Builder -> public Builder normalizePrefix(String prefix);1546842892;Checks that all settings in the builder start with the specified prefix.__If a setting doesn't start with the prefix, the builder appends the prefix to such setting.;public Builder normalizePrefix(String prefix) {_            Map<String, Object> replacements = new HashMap<>()__            Iterator<Map.Entry<String, Object>> iterator = map.entrySet().iterator()__            while(iterator.hasNext()) {_                Map.Entry<String, Object> entry = iterator.next()__                String key = entry.getKey()__                if (key.startsWith(prefix) == false && key.endsWith("*") == false) {_                    replacements.put(prefix + key, entry.getValue())__                    iterator.remove()__                }_            }_            map.putAll(replacements)__            return this__        };checks,that,all,settings,in,the,builder,start,with,the,specified,prefix,if,a,setting,doesn,t,start,with,the,prefix,the,builder,appends,the,prefix,to,such,setting;public,builder,normalize,prefix,string,prefix,map,string,object,replacements,new,hash,map,iterator,map,entry,string,object,iterator,map,entry,set,iterator,while,iterator,has,next,map,entry,string,object,entry,iterator,next,string,key,entry,get,key,if,key,starts,with,prefix,false,key,ends,with,false,replacements,put,prefix,key,entry,get,value,iterator,remove,map,put,all,replacements,return,this
Settings -> Builder -> public Builder normalizePrefix(String prefix);1546874030;Checks that all settings in the builder start with the specified prefix.__If a setting doesn't start with the prefix, the builder appends the prefix to such setting.;public Builder normalizePrefix(String prefix) {_            Map<String, Object> replacements = new HashMap<>()__            Iterator<Map.Entry<String, Object>> iterator = map.entrySet().iterator()__            while(iterator.hasNext()) {_                Map.Entry<String, Object> entry = iterator.next()__                String key = entry.getKey()__                if (key.startsWith(prefix) == false && key.endsWith("*") == false) {_                    replacements.put(prefix + key, entry.getValue())__                    iterator.remove()__                }_            }_            map.putAll(replacements)__            return this__        };checks,that,all,settings,in,the,builder,start,with,the,specified,prefix,if,a,setting,doesn,t,start,with,the,prefix,the,builder,appends,the,prefix,to,such,setting;public,builder,normalize,prefix,string,prefix,map,string,object,replacements,new,hash,map,iterator,map,entry,string,object,iterator,map,entry,set,iterator,while,iterator,has,next,map,entry,string,object,entry,iterator,next,string,key,entry,get,key,if,key,starts,with,prefix,false,key,ends,with,false,replacements,put,prefix,key,entry,get,value,iterator,remove,map,put,all,replacements,return,this
Settings -> Builder -> public Builder normalizePrefix(String prefix);1546901964;Checks that all settings in the builder start with the specified prefix.__If a setting doesn't start with the prefix, the builder appends the prefix to such setting.;public Builder normalizePrefix(String prefix) {_            Map<String, Object> replacements = new HashMap<>()__            Iterator<Map.Entry<String, Object>> iterator = map.entrySet().iterator()__            while(iterator.hasNext()) {_                Map.Entry<String, Object> entry = iterator.next()__                String key = entry.getKey()__                if (key.startsWith(prefix) == false && key.endsWith("*") == false) {_                    replacements.put(prefix + key, entry.getValue())__                    iterator.remove()__                }_            }_            map.putAll(replacements)__            return this__        };checks,that,all,settings,in,the,builder,start,with,the,specified,prefix,if,a,setting,doesn,t,start,with,the,prefix,the,builder,appends,the,prefix,to,such,setting;public,builder,normalize,prefix,string,prefix,map,string,object,replacements,new,hash,map,iterator,map,entry,string,object,iterator,map,entry,set,iterator,while,iterator,has,next,map,entry,string,object,entry,iterator,next,string,key,entry,get,key,if,key,starts,with,prefix,false,key,ends,with,false,replacements,put,prefix,key,entry,get,value,iterator,remove,map,put,all,replacements,return,this
Settings -> Builder -> public Builder normalizePrefix(String prefix);1547643436;Checks that all settings in the builder start with the specified prefix.__If a setting doesn't start with the prefix, the builder appends the prefix to such setting.;public Builder normalizePrefix(String prefix) {_            Map<String, Object> replacements = new HashMap<>()__            Iterator<Map.Entry<String, Object>> iterator = map.entrySet().iterator()__            while(iterator.hasNext()) {_                Map.Entry<String, Object> entry = iterator.next()__                String key = entry.getKey()__                if (key.startsWith(prefix) == false && key.endsWith("*") == false) {_                    replacements.put(prefix + key, entry.getValue())__                    iterator.remove()__                }_            }_            map.putAll(replacements)__            return this__        };checks,that,all,settings,in,the,builder,start,with,the,specified,prefix,if,a,setting,doesn,t,start,with,the,prefix,the,builder,appends,the,prefix,to,such,setting;public,builder,normalize,prefix,string,prefix,map,string,object,replacements,new,hash,map,iterator,map,entry,string,object,iterator,map,entry,set,iterator,while,iterator,has,next,map,entry,string,object,entry,iterator,next,string,key,entry,get,key,if,key,starts,with,prefix,false,key,ends,with,false,replacements,put,prefix,key,entry,get,value,iterator,remove,map,put,all,replacements,return,this
Settings -> Builder -> public Builder normalizePrefix(String prefix);1548422582;Checks that all settings in the builder start with the specified prefix.__If a setting doesn't start with the prefix, the builder appends the prefix to such setting.;public Builder normalizePrefix(String prefix) {_            Map<String, Object> replacements = new HashMap<>()__            Iterator<Map.Entry<String, Object>> iterator = map.entrySet().iterator()__            while(iterator.hasNext()) {_                Map.Entry<String, Object> entry = iterator.next()__                String key = entry.getKey()__                if (key.startsWith(prefix) == false && key.endsWith("*") == false) {_                    replacements.put(prefix + key, entry.getValue())__                    iterator.remove()__                }_            }_            map.putAll(replacements)__            return this__        };checks,that,all,settings,in,the,builder,start,with,the,specified,prefix,if,a,setting,doesn,t,start,with,the,prefix,the,builder,appends,the,prefix,to,such,setting;public,builder,normalize,prefix,string,prefix,map,string,object,replacements,new,hash,map,iterator,map,entry,string,object,iterator,map,entry,set,iterator,while,iterator,has,next,map,entry,string,object,entry,iterator,next,string,key,entry,get,key,if,key,starts,with,prefix,false,key,ends,with,false,replacements,put,prefix,key,entry,get,value,iterator,remove,map,put,all,replacements,return,this
Settings -> Builder -> public Builder put(final String setting, final long value, final TimeUnit timeUnit);1546901964;Sets the setting with the provided setting key and the time value.__@param setting The setting key_@param value   The time value_@return The builder;public Builder put(final String setting, final long value, final TimeUnit timeUnit) {_            put(setting, new TimeValue(value, timeUnit))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,time,value,param,setting,the,setting,key,param,value,the,time,value,return,the,builder;public,builder,put,final,string,setting,final,long,value,final,time,unit,time,unit,put,setting,new,time,value,value,time,unit,return,this
Settings -> Builder -> public Builder put(final String setting, final long value, final TimeUnit timeUnit);1547643436;Sets the setting with the provided setting key and the time value.__@param setting The setting key_@param value   The time value_@return The builder;public Builder put(final String setting, final long value, final TimeUnit timeUnit) {_            put(setting, new TimeValue(value, timeUnit))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,time,value,param,setting,the,setting,key,param,value,the,time,value,return,the,builder;public,builder,put,final,string,setting,final,long,value,final,time,unit,time,unit,put,setting,new,time,value,value,time,unit,return,this
Settings -> Builder -> public Builder put(final String setting, final long value, final TimeUnit timeUnit);1548422582;Sets the setting with the provided setting key and the time value.__@param setting The setting key_@param value   The time value_@return The builder;public Builder put(final String setting, final long value, final TimeUnit timeUnit) {_            put(setting, new TimeValue(value, timeUnit))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,time,value,param,setting,the,setting,key,param,value,the,time,value,return,the,builder;public,builder,put,final,string,setting,final,long,value,final,time,unit,time,unit,put,setting,new,time,value,value,time,unit,return,this
Settings -> Builder -> public SecureSettings getSecureSettings();1524684173;Return the current secure settings, or {@code null} if none have been set.;public SecureSettings getSecureSettings() {_            return secureSettings.get()__        };return,the,current,secure,settings,or,code,null,if,none,have,been,set;public,secure,settings,get,secure,settings,return,secure,settings,get
Settings -> Builder -> public SecureSettings getSecureSettings();1525334055;Return the current secure settings, or {@code null} if none have been set.;public SecureSettings getSecureSettings() {_            return secureSettings.get()__        };return,the,current,secure,settings,or,code,null,if,none,have,been,set;public,secure,settings,get,secure,settings,return,secure,settings,get
Settings -> Builder -> public SecureSettings getSecureSettings();1536828374;Return the current secure settings, or {@code null} if none have been set.;public SecureSettings getSecureSettings() {_            return secureSettings.get()__        };return,the,current,secure,settings,or,code,null,if,none,have,been,set;public,secure,settings,get,secure,settings,return,secure,settings,get
Settings -> Builder -> public SecureSettings getSecureSettings();1539951844;Return the current secure settings, or {@code null} if none have been set.;public SecureSettings getSecureSettings() {_            return secureSettings.get()__        };return,the,current,secure,settings,or,code,null,if,none,have,been,set;public,secure,settings,get,secure,settings,return,secure,settings,get
Settings -> Builder -> public SecureSettings getSecureSettings();1540486836;Return the current secure settings, or {@code null} if none have been set.;public SecureSettings getSecureSettings() {_            return secureSettings.get()__        };return,the,current,secure,settings,or,code,null,if,none,have,been,set;public,secure,settings,get,secure,settings,return,secure,settings,get
Settings -> Builder -> public SecureSettings getSecureSettings();1546842892;Return the current secure settings, or {@code null} if none have been set.;public SecureSettings getSecureSettings() {_            return secureSettings.get()__        };return,the,current,secure,settings,or,code,null,if,none,have,been,set;public,secure,settings,get,secure,settings,return,secure,settings,get
Settings -> Builder -> public SecureSettings getSecureSettings();1546874030;Return the current secure settings, or {@code null} if none have been set.;public SecureSettings getSecureSettings() {_            return secureSettings.get()__        };return,the,current,secure,settings,or,code,null,if,none,have,been,set;public,secure,settings,get,secure,settings,return,secure,settings,get
Settings -> Builder -> public SecureSettings getSecureSettings();1546901964;Return the current secure settings, or {@code null} if none have been set.;public SecureSettings getSecureSettings() {_            return secureSettings.get()__        };return,the,current,secure,settings,or,code,null,if,none,have,been,set;public,secure,settings,get,secure,settings,return,secure,settings,get
Settings -> Builder -> public SecureSettings getSecureSettings();1547643436;Return the current secure settings, or {@code null} if none have been set.;public SecureSettings getSecureSettings() {_            return secureSettings.get()__        };return,the,current,secure,settings,or,code,null,if,none,have,been,set;public,secure,settings,get,secure,settings,return,secure,settings,get
Settings -> Builder -> public SecureSettings getSecureSettings();1548422582;Return the current secure settings, or {@code null} if none have been set.;public SecureSettings getSecureSettings() {_            return secureSettings.get()__        };return,the,current,secure,settings,or,code,null,if,none,have,been,set;public,secure,settings,get,secure,settings,return,secure,settings,get
Settings -> SecureSettings getSecureSettings();1524684173;Retrieve the secure settings in these settings.;SecureSettings getSecureSettings() {_        _        return secureSettings__    };retrieve,the,secure,settings,in,these,settings;secure,settings,get,secure,settings,return,secure,settings
Settings -> SecureSettings getSecureSettings();1525334055;Retrieve the secure settings in these settings.;SecureSettings getSecureSettings() {_        _        return secureSettings__    };retrieve,the,secure,settings,in,these,settings;secure,settings,get,secure,settings,return,secure,settings
Settings -> SecureSettings getSecureSettings();1536828374;Retrieve the secure settings in these settings.;SecureSettings getSecureSettings() {_        _        return secureSettings__    };retrieve,the,secure,settings,in,these,settings;secure,settings,get,secure,settings,return,secure,settings
Settings -> SecureSettings getSecureSettings();1539951844;Retrieve the secure settings in these settings.;SecureSettings getSecureSettings() {_        _        return secureSettings__    };retrieve,the,secure,settings,in,these,settings;secure,settings,get,secure,settings,return,secure,settings
Settings -> SecureSettings getSecureSettings();1540486836;Retrieve the secure settings in these settings.;SecureSettings getSecureSettings() {_        _        return secureSettings__    };retrieve,the,secure,settings,in,these,settings;secure,settings,get,secure,settings,return,secure,settings
Settings -> SecureSettings getSecureSettings();1546842892;Retrieve the secure settings in these settings.;SecureSettings getSecureSettings() {_        _        return secureSettings__    };retrieve,the,secure,settings,in,these,settings;secure,settings,get,secure,settings,return,secure,settings
Settings -> SecureSettings getSecureSettings();1546874030;Retrieve the secure settings in these settings.;SecureSettings getSecureSettings() {_        _        return secureSettings__    };retrieve,the,secure,settings,in,these,settings;secure,settings,get,secure,settings,return,secure,settings
Settings -> SecureSettings getSecureSettings();1546901964;Retrieve the secure settings in these settings.;SecureSettings getSecureSettings() {_        _        return secureSettings__    };retrieve,the,secure,settings,in,these,settings;secure,settings,get,secure,settings,return,secure,settings
Settings -> SecureSettings getSecureSettings();1547643436;Retrieve the secure settings in these settings.;SecureSettings getSecureSettings() {_        _        return secureSettings__    };retrieve,the,secure,settings,in,these,settings;secure,settings,get,secure,settings,return,secure,settings
Settings -> SecureSettings getSecureSettings();1548422582;Retrieve the secure settings in these settings.;SecureSettings getSecureSettings() {_        _        return secureSettings__    };retrieve,the,secure,settings,in,these,settings;secure,settings,get,secure,settings,return,secure,settings
Settings -> public Long getAsLong(String setting, Long defaultValue);1524684173;Returns the setting value (as long) associated with the setting key. If it does not exists,_returns the default value provided.;public Long getAsLong(String setting, Long defaultValue) {_        String sValue = get(setting)__        if (sValue == null) {_            return defaultValue__        }_        try {_            return Long.parseLong(sValue)__        } catch (NumberFormatException e) {_            throw new SettingsException("Failed to parse long setting [" + setting + "] with value [" + sValue + "]", e)__        }_    };returns,the,setting,value,as,long,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,long,get,as,long,string,setting,long,default,value,string,s,value,get,setting,if,s,value,null,return,default,value,try,return,long,parse,long,s,value,catch,number,format,exception,e,throw,new,settings,exception,failed,to,parse,long,setting,setting,with,value,s,value,e
Settings -> public Long getAsLong(String setting, Long defaultValue);1525334055;Returns the setting value (as long) associated with the setting key. If it does not exists,_returns the default value provided.;public Long getAsLong(String setting, Long defaultValue) {_        String sValue = get(setting)__        if (sValue == null) {_            return defaultValue__        }_        try {_            return Long.parseLong(sValue)__        } catch (NumberFormatException e) {_            throw new SettingsException("Failed to parse long setting [" + setting + "] with value [" + sValue + "]", e)__        }_    };returns,the,setting,value,as,long,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,long,get,as,long,string,setting,long,default,value,string,s,value,get,setting,if,s,value,null,return,default,value,try,return,long,parse,long,s,value,catch,number,format,exception,e,throw,new,settings,exception,failed,to,parse,long,setting,setting,with,value,s,value,e
Settings -> public Long getAsLong(String setting, Long defaultValue);1536828374;Returns the setting value (as long) associated with the setting key. If it does not exists,_returns the default value provided.;public Long getAsLong(String setting, Long defaultValue) {_        String sValue = get(setting)__        if (sValue == null) {_            return defaultValue__        }_        try {_            return Long.parseLong(sValue)__        } catch (NumberFormatException e) {_            throw new SettingsException("Failed to parse long setting [" + setting + "] with value [" + sValue + "]", e)__        }_    };returns,the,setting,value,as,long,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,long,get,as,long,string,setting,long,default,value,string,s,value,get,setting,if,s,value,null,return,default,value,try,return,long,parse,long,s,value,catch,number,format,exception,e,throw,new,settings,exception,failed,to,parse,long,setting,setting,with,value,s,value,e
Settings -> public Long getAsLong(String setting, Long defaultValue);1539951844;Returns the setting value (as long) associated with the setting key. If it does not exists,_returns the default value provided.;public Long getAsLong(String setting, Long defaultValue) {_        String sValue = get(setting)__        if (sValue == null) {_            return defaultValue__        }_        try {_            return Long.parseLong(sValue)__        } catch (NumberFormatException e) {_            throw new SettingsException("Failed to parse long setting [" + setting + "] with value [" + sValue + "]", e)__        }_    };returns,the,setting,value,as,long,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,long,get,as,long,string,setting,long,default,value,string,s,value,get,setting,if,s,value,null,return,default,value,try,return,long,parse,long,s,value,catch,number,format,exception,e,throw,new,settings,exception,failed,to,parse,long,setting,setting,with,value,s,value,e
Settings -> public Long getAsLong(String setting, Long defaultValue);1540486836;Returns the setting value (as long) associated with the setting key. If it does not exists,_returns the default value provided.;public Long getAsLong(String setting, Long defaultValue) {_        String sValue = get(setting)__        if (sValue == null) {_            return defaultValue__        }_        try {_            return Long.parseLong(sValue)__        } catch (NumberFormatException e) {_            throw new SettingsException("Failed to parse long setting [" + setting + "] with value [" + sValue + "]", e)__        }_    };returns,the,setting,value,as,long,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,long,get,as,long,string,setting,long,default,value,string,s,value,get,setting,if,s,value,null,return,default,value,try,return,long,parse,long,s,value,catch,number,format,exception,e,throw,new,settings,exception,failed,to,parse,long,setting,setting,with,value,s,value,e
Settings -> public Long getAsLong(String setting, Long defaultValue);1546842892;Returns the setting value (as long) associated with the setting key. If it does not exists,_returns the default value provided.;public Long getAsLong(String setting, Long defaultValue) {_        String sValue = get(setting)__        if (sValue == null) {_            return defaultValue__        }_        try {_            return Long.parseLong(sValue)__        } catch (NumberFormatException e) {_            throw new SettingsException("Failed to parse long setting [" + setting + "] with value [" + sValue + "]", e)__        }_    };returns,the,setting,value,as,long,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,long,get,as,long,string,setting,long,default,value,string,s,value,get,setting,if,s,value,null,return,default,value,try,return,long,parse,long,s,value,catch,number,format,exception,e,throw,new,settings,exception,failed,to,parse,long,setting,setting,with,value,s,value,e
Settings -> public Long getAsLong(String setting, Long defaultValue);1546874030;Returns the setting value (as long) associated with the setting key. If it does not exists,_returns the default value provided.;public Long getAsLong(String setting, Long defaultValue) {_        String sValue = get(setting)__        if (sValue == null) {_            return defaultValue__        }_        try {_            return Long.parseLong(sValue)__        } catch (NumberFormatException e) {_            throw new SettingsException("Failed to parse long setting [" + setting + "] with value [" + sValue + "]", e)__        }_    };returns,the,setting,value,as,long,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,long,get,as,long,string,setting,long,default,value,string,s,value,get,setting,if,s,value,null,return,default,value,try,return,long,parse,long,s,value,catch,number,format,exception,e,throw,new,settings,exception,failed,to,parse,long,setting,setting,with,value,s,value,e
Settings -> public Long getAsLong(String setting, Long defaultValue);1546901964;Returns the setting value (as long) associated with the setting key. If it does not exists,_returns the default value provided.;public Long getAsLong(String setting, Long defaultValue) {_        String sValue = get(setting)__        if (sValue == null) {_            return defaultValue__        }_        try {_            return Long.parseLong(sValue)__        } catch (NumberFormatException e) {_            throw new SettingsException("Failed to parse long setting [" + setting + "] with value [" + sValue + "]", e)__        }_    };returns,the,setting,value,as,long,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,long,get,as,long,string,setting,long,default,value,string,s,value,get,setting,if,s,value,null,return,default,value,try,return,long,parse,long,s,value,catch,number,format,exception,e,throw,new,settings,exception,failed,to,parse,long,setting,setting,with,value,s,value,e
Settings -> public Long getAsLong(String setting, Long defaultValue);1547643436;Returns the setting value (as long) associated with the setting key. If it does not exists,_returns the default value provided.;public Long getAsLong(String setting, Long defaultValue) {_        String sValue = get(setting)__        if (sValue == null) {_            return defaultValue__        }_        try {_            return Long.parseLong(sValue)__        } catch (NumberFormatException e) {_            throw new SettingsException("Failed to parse long setting [" + setting + "] with value [" + sValue + "]", e)__        }_    };returns,the,setting,value,as,long,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,long,get,as,long,string,setting,long,default,value,string,s,value,get,setting,if,s,value,null,return,default,value,try,return,long,parse,long,s,value,catch,number,format,exception,e,throw,new,settings,exception,failed,to,parse,long,setting,setting,with,value,s,value,e
Settings -> public Long getAsLong(String setting, Long defaultValue);1548422582;Returns the setting value (as long) associated with the setting key. If it does not exists,_returns the default value provided.;public Long getAsLong(String setting, Long defaultValue) {_        String sValue = get(setting)__        if (sValue == null) {_            return defaultValue__        }_        try {_            return Long.parseLong(sValue)__        } catch (NumberFormatException e) {_            throw new SettingsException("Failed to parse long setting [" + setting + "] with value [" + sValue + "]", e)__        }_    };returns,the,setting,value,as,long,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,long,get,as,long,string,setting,long,default,value,string,s,value,get,setting,if,s,value,null,return,default,value,try,return,long,parse,long,s,value,catch,number,format,exception,e,throw,new,settings,exception,failed,to,parse,long,setting,setting,with,value,s,value,e
Settings -> public TimeValue getAsTime(String setting, TimeValue defaultValue);1524684173;Returns the setting value (as time) associated with the setting key. If it does not exists,_returns the default value provided.;public TimeValue getAsTime(String setting, TimeValue defaultValue) {_        return parseTimeValue(get(setting), defaultValue, setting)__    };returns,the,setting,value,as,time,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,time,value,get,as,time,string,setting,time,value,default,value,return,parse,time,value,get,setting,default,value,setting
Settings -> public TimeValue getAsTime(String setting, TimeValue defaultValue);1525334055;Returns the setting value (as time) associated with the setting key. If it does not exists,_returns the default value provided.;public TimeValue getAsTime(String setting, TimeValue defaultValue) {_        return parseTimeValue(get(setting), defaultValue, setting)__    };returns,the,setting,value,as,time,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,time,value,get,as,time,string,setting,time,value,default,value,return,parse,time,value,get,setting,default,value,setting
Settings -> public TimeValue getAsTime(String setting, TimeValue defaultValue);1536828374;Returns the setting value (as time) associated with the setting key. If it does not exists,_returns the default value provided.;public TimeValue getAsTime(String setting, TimeValue defaultValue) {_        return parseTimeValue(get(setting), defaultValue, setting)__    };returns,the,setting,value,as,time,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,time,value,get,as,time,string,setting,time,value,default,value,return,parse,time,value,get,setting,default,value,setting
Settings -> public TimeValue getAsTime(String setting, TimeValue defaultValue);1539951844;Returns the setting value (as time) associated with the setting key. If it does not exists,_returns the default value provided.;public TimeValue getAsTime(String setting, TimeValue defaultValue) {_        return parseTimeValue(get(setting), defaultValue, setting)__    };returns,the,setting,value,as,time,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,time,value,get,as,time,string,setting,time,value,default,value,return,parse,time,value,get,setting,default,value,setting
Settings -> public TimeValue getAsTime(String setting, TimeValue defaultValue);1540486836;Returns the setting value (as time) associated with the setting key. If it does not exists,_returns the default value provided.;public TimeValue getAsTime(String setting, TimeValue defaultValue) {_        return parseTimeValue(get(setting), defaultValue, setting)__    };returns,the,setting,value,as,time,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,time,value,get,as,time,string,setting,time,value,default,value,return,parse,time,value,get,setting,default,value,setting
Settings -> public TimeValue getAsTime(String setting, TimeValue defaultValue);1546842892;Returns the setting value (as time) associated with the setting key. If it does not exists,_returns the default value provided.;public TimeValue getAsTime(String setting, TimeValue defaultValue) {_        return parseTimeValue(get(setting), defaultValue, setting)__    };returns,the,setting,value,as,time,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,time,value,get,as,time,string,setting,time,value,default,value,return,parse,time,value,get,setting,default,value,setting
Settings -> public TimeValue getAsTime(String setting, TimeValue defaultValue);1546874030;Returns the setting value (as time) associated with the setting key. If it does not exists,_returns the default value provided.;public TimeValue getAsTime(String setting, TimeValue defaultValue) {_        return parseTimeValue(get(setting), defaultValue, setting)__    };returns,the,setting,value,as,time,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,time,value,get,as,time,string,setting,time,value,default,value,return,parse,time,value,get,setting,default,value,setting
Settings -> public TimeValue getAsTime(String setting, TimeValue defaultValue);1546901964;Returns the setting value (as time) associated with the setting key. If it does not exists,_returns the default value provided.;public TimeValue getAsTime(String setting, TimeValue defaultValue) {_        return parseTimeValue(get(setting), defaultValue, setting)__    };returns,the,setting,value,as,time,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,time,value,get,as,time,string,setting,time,value,default,value,return,parse,time,value,get,setting,default,value,setting
Settings -> public TimeValue getAsTime(String setting, TimeValue defaultValue);1547643436;Returns the setting value (as time) associated with the setting key. If it does not exists,_returns the default value provided.;public TimeValue getAsTime(String setting, TimeValue defaultValue) {_        return parseTimeValue(get(setting), defaultValue, setting)__    };returns,the,setting,value,as,time,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,time,value,get,as,time,string,setting,time,value,default,value,return,parse,time,value,get,setting,default,value,setting
Settings -> public TimeValue getAsTime(String setting, TimeValue defaultValue);1548422582;Returns the setting value (as time) associated with the setting key. If it does not exists,_returns the default value provided.;public TimeValue getAsTime(String setting, TimeValue defaultValue) {_        return parseTimeValue(get(setting), defaultValue, setting)__    };returns,the,setting,value,as,time,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,time,value,get,as,time,string,setting,time,value,default,value,return,parse,time,value,get,setting,default,value,setting
Settings -> public Set<String> keySet();1524684173;Returns the fully qualified setting names contained in this settings object.;public Set<String> keySet() {_        synchronized (keys) {_            if (keys.get() == null) {_                if (secureSettings == null) {_                    keys.set(settings.keySet())__                } else {_                    Stream<String> stream = Stream.concat(settings.keySet().stream(), secureSettings.getSettingNames().stream())__                    _                    keys.set(Collections.unmodifiableSet(stream.collect(Collectors.toSet())))__                }_            }_        }_        return keys.get()__    };returns,the,fully,qualified,setting,names,contained,in,this,settings,object;public,set,string,key,set,synchronized,keys,if,keys,get,null,if,secure,settings,null,keys,set,settings,key,set,else,stream,string,stream,stream,concat,settings,key,set,stream,secure,settings,get,setting,names,stream,keys,set,collections,unmodifiable,set,stream,collect,collectors,to,set,return,keys,get
Settings -> public Set<String> keySet();1525334055;Returns the fully qualified setting names contained in this settings object.;public Set<String> keySet() {_        synchronized (keys) {_            if (keys.get() == null) {_                if (secureSettings == null) {_                    keys.set(settings.keySet())__                } else {_                    Stream<String> stream = Stream.concat(settings.keySet().stream(), secureSettings.getSettingNames().stream())__                    _                    keys.set(Collections.unmodifiableSet(stream.collect(Collectors.toSet())))__                }_            }_        }_        return keys.get()__    };returns,the,fully,qualified,setting,names,contained,in,this,settings,object;public,set,string,key,set,synchronized,keys,if,keys,get,null,if,secure,settings,null,keys,set,settings,key,set,else,stream,string,stream,stream,concat,settings,key,set,stream,secure,settings,get,setting,names,stream,keys,set,collections,unmodifiable,set,stream,collect,collectors,to,set,return,keys,get
Settings -> public Set<String> keySet();1536828374;Returns the fully qualified setting names contained in this settings object.;public Set<String> keySet() {_        synchronized (keys) {_            if (keys.get() == null) {_                if (secureSettings == null) {_                    keys.set(settings.keySet())__                } else {_                    Stream<String> stream = Stream.concat(settings.keySet().stream(), secureSettings.getSettingNames().stream())__                    _                    keys.set(Collections.unmodifiableSet(stream.collect(Collectors.toSet())))__                }_            }_        }_        return keys.get()__    };returns,the,fully,qualified,setting,names,contained,in,this,settings,object;public,set,string,key,set,synchronized,keys,if,keys,get,null,if,secure,settings,null,keys,set,settings,key,set,else,stream,string,stream,stream,concat,settings,key,set,stream,secure,settings,get,setting,names,stream,keys,set,collections,unmodifiable,set,stream,collect,collectors,to,set,return,keys,get
Settings -> public Set<String> keySet();1539951844;Returns the fully qualified setting names contained in this settings object.;public Set<String> keySet() {_        synchronized (keys) {_            if (keys.get() == null) {_                if (secureSettings == null) {_                    keys.set(settings.keySet())__                } else {_                    Stream<String> stream = Stream.concat(settings.keySet().stream(), secureSettings.getSettingNames().stream())__                    _                    keys.set(Collections.unmodifiableSet(stream.collect(Collectors.toSet())))__                }_            }_        }_        return keys.get()__    };returns,the,fully,qualified,setting,names,contained,in,this,settings,object;public,set,string,key,set,synchronized,keys,if,keys,get,null,if,secure,settings,null,keys,set,settings,key,set,else,stream,string,stream,stream,concat,settings,key,set,stream,secure,settings,get,setting,names,stream,keys,set,collections,unmodifiable,set,stream,collect,collectors,to,set,return,keys,get
Settings -> public Set<String> keySet();1540486836;Returns the fully qualified setting names contained in this settings object.;public Set<String> keySet() {_        synchronized (keys) {_            if (keys.get() == null) {_                if (secureSettings == null) {_                    keys.set(settings.keySet())__                } else {_                    Stream<String> stream = Stream.concat(settings.keySet().stream(), secureSettings.getSettingNames().stream())__                    _                    keys.set(Collections.unmodifiableSet(stream.collect(Collectors.toSet())))__                }_            }_        }_        return keys.get()__    };returns,the,fully,qualified,setting,names,contained,in,this,settings,object;public,set,string,key,set,synchronized,keys,if,keys,get,null,if,secure,settings,null,keys,set,settings,key,set,else,stream,string,stream,stream,concat,settings,key,set,stream,secure,settings,get,setting,names,stream,keys,set,collections,unmodifiable,set,stream,collect,collectors,to,set,return,keys,get
Settings -> public Set<String> keySet();1546842892;Returns the fully qualified setting names contained in this settings object.;public Set<String> keySet() {_        synchronized (keys) {_            if (keys.get() == null) {_                if (secureSettings == null) {_                    keys.set(settings.keySet())__                } else {_                    Stream<String> stream = Stream.concat(settings.keySet().stream(), secureSettings.getSettingNames().stream())__                    _                    keys.set(Collections.unmodifiableSet(stream.collect(Collectors.toSet())))__                }_            }_        }_        return keys.get()__    };returns,the,fully,qualified,setting,names,contained,in,this,settings,object;public,set,string,key,set,synchronized,keys,if,keys,get,null,if,secure,settings,null,keys,set,settings,key,set,else,stream,string,stream,stream,concat,settings,key,set,stream,secure,settings,get,setting,names,stream,keys,set,collections,unmodifiable,set,stream,collect,collectors,to,set,return,keys,get
Settings -> public Set<String> keySet();1546874030;Returns the fully qualified setting names contained in this settings object.;public Set<String> keySet() {_        synchronized (keys) {_            if (keys.get() == null) {_                if (secureSettings == null) {_                    keys.set(settings.keySet())__                } else {_                    Stream<String> stream = Stream.concat(settings.keySet().stream(), secureSettings.getSettingNames().stream())__                    _                    keys.set(Collections.unmodifiableSet(stream.collect(Collectors.toSet())))__                }_            }_        }_        return keys.get()__    };returns,the,fully,qualified,setting,names,contained,in,this,settings,object;public,set,string,key,set,synchronized,keys,if,keys,get,null,if,secure,settings,null,keys,set,settings,key,set,else,stream,string,stream,stream,concat,settings,key,set,stream,secure,settings,get,setting,names,stream,keys,set,collections,unmodifiable,set,stream,collect,collectors,to,set,return,keys,get
Settings -> public Set<String> keySet();1546901964;Returns the fully qualified setting names contained in this settings object.;public Set<String> keySet() {_        synchronized (keys) {_            if (keys.get() == null) {_                if (secureSettings == null) {_                    keys.set(settings.keySet())__                } else {_                    Stream<String> stream = Stream.concat(settings.keySet().stream(), secureSettings.getSettingNames().stream())__                    _                    keys.set(Collections.unmodifiableSet(stream.collect(Collectors.toSet())))__                }_            }_        }_        return keys.get()__    };returns,the,fully,qualified,setting,names,contained,in,this,settings,object;public,set,string,key,set,synchronized,keys,if,keys,get,null,if,secure,settings,null,keys,set,settings,key,set,else,stream,string,stream,stream,concat,settings,key,set,stream,secure,settings,get,setting,names,stream,keys,set,collections,unmodifiable,set,stream,collect,collectors,to,set,return,keys,get
Settings -> public Set<String> keySet();1547643436;Returns the fully qualified setting names contained in this settings object.;public Set<String> keySet() {_        synchronized (keys) {_            if (keys.get() == null) {_                if (secureSettings == null) {_                    keys.set(settings.keySet())__                } else {_                    Stream<String> stream = Stream.concat(settings.keySet().stream(), secureSettings.getSettingNames().stream())__                    _                    keys.set(Collections.unmodifiableSet(stream.collect(Collectors.toSet())))__                }_            }_        }_        return keys.get()__    };returns,the,fully,qualified,setting,names,contained,in,this,settings,object;public,set,string,key,set,synchronized,keys,if,keys,get,null,if,secure,settings,null,keys,set,settings,key,set,else,stream,string,stream,stream,concat,settings,key,set,stream,secure,settings,get,setting,names,stream,keys,set,collections,unmodifiable,set,stream,collect,collectors,to,set,return,keys,get
Settings -> public Set<String> keySet();1548422582;Returns the fully qualified setting names contained in this settings object.;public Set<String> keySet() {_        synchronized (keys) {_            if (keys.get() == null) {_                if (secureSettings == null) {_                    keys.set(settings.keySet())__                } else {_                    Stream<String> stream = Stream.concat(settings.keySet().stream(), secureSettings.getSettingNames().stream())__                    _                    keys.set(Collections.unmodifiableSet(stream.collect(Collectors.toSet())))__                }_            }_        }_        return keys.get()__    };returns,the,fully,qualified,setting,names,contained,in,this,settings,object;public,set,string,key,set,synchronized,keys,if,keys,get,null,if,secure,settings,null,keys,set,settings,key,set,else,stream,string,stream,stream,concat,settings,key,set,stream,secure,settings,get,setting,names,stream,keys,set,collections,unmodifiable,set,stream,collect,collectors,to,set,return,keys,get
Settings -> Builder -> public Builder put(String key, TimeValue timeValue);1524684173;Sets a time value setting with the provided setting key and value.__@param key  The setting key_@param timeValue The setting timeValue_@return The builder;public Builder put(String key, TimeValue timeValue) {_            return put(key, timeValue.toString())__        };sets,a,time,value,setting,with,the,provided,setting,key,and,value,param,key,the,setting,key,param,time,value,the,setting,time,value,return,the,builder;public,builder,put,string,key,time,value,time,value,return,put,key,time,value,to,string
Settings -> Builder -> public Builder put(String key, TimeValue timeValue);1525334055;Sets a time value setting with the provided setting key and value.__@param key  The setting key_@param timeValue The setting timeValue_@return The builder;public Builder put(String key, TimeValue timeValue) {_            return put(key, timeValue.toString())__        };sets,a,time,value,setting,with,the,provided,setting,key,and,value,param,key,the,setting,key,param,time,value,the,setting,time,value,return,the,builder;public,builder,put,string,key,time,value,time,value,return,put,key,time,value,to,string
Settings -> Builder -> public Builder put(String key, TimeValue timeValue);1536828374;Sets a time value setting with the provided setting key and value.__@param key  The setting key_@param timeValue The setting timeValue_@return The builder;public Builder put(String key, TimeValue timeValue) {_            return put(key, timeValue.toString())__        };sets,a,time,value,setting,with,the,provided,setting,key,and,value,param,key,the,setting,key,param,time,value,the,setting,time,value,return,the,builder;public,builder,put,string,key,time,value,time,value,return,put,key,time,value,to,string
Settings -> Builder -> public Builder put(String key, TimeValue timeValue);1539951844;Sets a time value setting with the provided setting key and value.__@param key  The setting key_@param timeValue The setting timeValue_@return The builder;public Builder put(String key, TimeValue timeValue) {_            return put(key, timeValue.toString())__        };sets,a,time,value,setting,with,the,provided,setting,key,and,value,param,key,the,setting,key,param,time,value,the,setting,time,value,return,the,builder;public,builder,put,string,key,time,value,time,value,return,put,key,time,value,to,string
Settings -> Builder -> public Builder put(String key, TimeValue timeValue);1540486836;Sets a time value setting with the provided setting key and value.__@param key  The setting key_@param timeValue The setting timeValue_@return The builder;public Builder put(String key, TimeValue timeValue) {_            return put(key, timeValue.toString())__        };sets,a,time,value,setting,with,the,provided,setting,key,and,value,param,key,the,setting,key,param,time,value,the,setting,time,value,return,the,builder;public,builder,put,string,key,time,value,time,value,return,put,key,time,value,to,string
Settings -> public Float getAsFloat(String setting, Float defaultValue);1524684173;Returns the setting value (as float) associated with the setting key. If it does not exists,_returns the default value provided.;public Float getAsFloat(String setting, Float defaultValue) {_        String sValue = get(setting)__        if (sValue == null) {_            return defaultValue__        }_        try {_            return Float.parseFloat(sValue)__        } catch (NumberFormatException e) {_            throw new SettingsException("Failed to parse float setting [" + setting + "] with value [" + sValue + "]", e)__        }_    };returns,the,setting,value,as,float,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,float,get,as,float,string,setting,float,default,value,string,s,value,get,setting,if,s,value,null,return,default,value,try,return,float,parse,float,s,value,catch,number,format,exception,e,throw,new,settings,exception,failed,to,parse,float,setting,setting,with,value,s,value,e
Settings -> public Float getAsFloat(String setting, Float defaultValue);1525334055;Returns the setting value (as float) associated with the setting key. If it does not exists,_returns the default value provided.;public Float getAsFloat(String setting, Float defaultValue) {_        String sValue = get(setting)__        if (sValue == null) {_            return defaultValue__        }_        try {_            return Float.parseFloat(sValue)__        } catch (NumberFormatException e) {_            throw new SettingsException("Failed to parse float setting [" + setting + "] with value [" + sValue + "]", e)__        }_    };returns,the,setting,value,as,float,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,float,get,as,float,string,setting,float,default,value,string,s,value,get,setting,if,s,value,null,return,default,value,try,return,float,parse,float,s,value,catch,number,format,exception,e,throw,new,settings,exception,failed,to,parse,float,setting,setting,with,value,s,value,e
Settings -> public Float getAsFloat(String setting, Float defaultValue);1536828374;Returns the setting value (as float) associated with the setting key. If it does not exists,_returns the default value provided.;public Float getAsFloat(String setting, Float defaultValue) {_        String sValue = get(setting)__        if (sValue == null) {_            return defaultValue__        }_        try {_            return Float.parseFloat(sValue)__        } catch (NumberFormatException e) {_            throw new SettingsException("Failed to parse float setting [" + setting + "] with value [" + sValue + "]", e)__        }_    };returns,the,setting,value,as,float,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,float,get,as,float,string,setting,float,default,value,string,s,value,get,setting,if,s,value,null,return,default,value,try,return,float,parse,float,s,value,catch,number,format,exception,e,throw,new,settings,exception,failed,to,parse,float,setting,setting,with,value,s,value,e
Settings -> public Float getAsFloat(String setting, Float defaultValue);1539951844;Returns the setting value (as float) associated with the setting key. If it does not exists,_returns the default value provided.;public Float getAsFloat(String setting, Float defaultValue) {_        String sValue = get(setting)__        if (sValue == null) {_            return defaultValue__        }_        try {_            return Float.parseFloat(sValue)__        } catch (NumberFormatException e) {_            throw new SettingsException("Failed to parse float setting [" + setting + "] with value [" + sValue + "]", e)__        }_    };returns,the,setting,value,as,float,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,float,get,as,float,string,setting,float,default,value,string,s,value,get,setting,if,s,value,null,return,default,value,try,return,float,parse,float,s,value,catch,number,format,exception,e,throw,new,settings,exception,failed,to,parse,float,setting,setting,with,value,s,value,e
Settings -> public Float getAsFloat(String setting, Float defaultValue);1540486836;Returns the setting value (as float) associated with the setting key. If it does not exists,_returns the default value provided.;public Float getAsFloat(String setting, Float defaultValue) {_        String sValue = get(setting)__        if (sValue == null) {_            return defaultValue__        }_        try {_            return Float.parseFloat(sValue)__        } catch (NumberFormatException e) {_            throw new SettingsException("Failed to parse float setting [" + setting + "] with value [" + sValue + "]", e)__        }_    };returns,the,setting,value,as,float,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,float,get,as,float,string,setting,float,default,value,string,s,value,get,setting,if,s,value,null,return,default,value,try,return,float,parse,float,s,value,catch,number,format,exception,e,throw,new,settings,exception,failed,to,parse,float,setting,setting,with,value,s,value,e
Settings -> public Float getAsFloat(String setting, Float defaultValue);1546842892;Returns the setting value (as float) associated with the setting key. If it does not exists,_returns the default value provided.;public Float getAsFloat(String setting, Float defaultValue) {_        String sValue = get(setting)__        if (sValue == null) {_            return defaultValue__        }_        try {_            return Float.parseFloat(sValue)__        } catch (NumberFormatException e) {_            throw new SettingsException("Failed to parse float setting [" + setting + "] with value [" + sValue + "]", e)__        }_    };returns,the,setting,value,as,float,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,float,get,as,float,string,setting,float,default,value,string,s,value,get,setting,if,s,value,null,return,default,value,try,return,float,parse,float,s,value,catch,number,format,exception,e,throw,new,settings,exception,failed,to,parse,float,setting,setting,with,value,s,value,e
Settings -> public Float getAsFloat(String setting, Float defaultValue);1546874030;Returns the setting value (as float) associated with the setting key. If it does not exists,_returns the default value provided.;public Float getAsFloat(String setting, Float defaultValue) {_        String sValue = get(setting)__        if (sValue == null) {_            return defaultValue__        }_        try {_            return Float.parseFloat(sValue)__        } catch (NumberFormatException e) {_            throw new SettingsException("Failed to parse float setting [" + setting + "] with value [" + sValue + "]", e)__        }_    };returns,the,setting,value,as,float,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,float,get,as,float,string,setting,float,default,value,string,s,value,get,setting,if,s,value,null,return,default,value,try,return,float,parse,float,s,value,catch,number,format,exception,e,throw,new,settings,exception,failed,to,parse,float,setting,setting,with,value,s,value,e
Settings -> public Float getAsFloat(String setting, Float defaultValue);1546901964;Returns the setting value (as float) associated with the setting key. If it does not exists,_returns the default value provided.;public Float getAsFloat(String setting, Float defaultValue) {_        String sValue = get(setting)__        if (sValue == null) {_            return defaultValue__        }_        try {_            return Float.parseFloat(sValue)__        } catch (NumberFormatException e) {_            throw new SettingsException("Failed to parse float setting [" + setting + "] with value [" + sValue + "]", e)__        }_    };returns,the,setting,value,as,float,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,float,get,as,float,string,setting,float,default,value,string,s,value,get,setting,if,s,value,null,return,default,value,try,return,float,parse,float,s,value,catch,number,format,exception,e,throw,new,settings,exception,failed,to,parse,float,setting,setting,with,value,s,value,e
Settings -> public Float getAsFloat(String setting, Float defaultValue);1547643436;Returns the setting value (as float) associated with the setting key. If it does not exists,_returns the default value provided.;public Float getAsFloat(String setting, Float defaultValue) {_        String sValue = get(setting)__        if (sValue == null) {_            return defaultValue__        }_        try {_            return Float.parseFloat(sValue)__        } catch (NumberFormatException e) {_            throw new SettingsException("Failed to parse float setting [" + setting + "] with value [" + sValue + "]", e)__        }_    };returns,the,setting,value,as,float,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,float,get,as,float,string,setting,float,default,value,string,s,value,get,setting,if,s,value,null,return,default,value,try,return,float,parse,float,s,value,catch,number,format,exception,e,throw,new,settings,exception,failed,to,parse,float,setting,setting,with,value,s,value,e
Settings -> public Float getAsFloat(String setting, Float defaultValue);1548422582;Returns the setting value (as float) associated with the setting key. If it does not exists,_returns the default value provided.;public Float getAsFloat(String setting, Float defaultValue) {_        String sValue = get(setting)__        if (sValue == null) {_            return defaultValue__        }_        try {_            return Float.parseFloat(sValue)__        } catch (NumberFormatException e) {_            throw new SettingsException("Failed to parse float setting [" + setting + "] with value [" + sValue + "]", e)__        }_    };returns,the,setting,value,as,float,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,float,get,as,float,string,setting,float,default,value,string,s,value,get,setting,if,s,value,null,return,default,value,try,return,float,parse,float,s,value,catch,number,format,exception,e,throw,new,settings,exception,failed,to,parse,float,setting,setting,with,value,s,value,e
Settings -> Builder -> public Builder putList(String setting, List<String> values);1524684173;Sets the setting with the provided setting key and a list of values.__@param setting The setting key_@param values  The values_@return The builder;public Builder putList(String setting, List<String> values) {_            remove(setting)__            map.put(setting, new ArrayList<>(values))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,a,list,of,values,param,setting,the,setting,key,param,values,the,values,return,the,builder;public,builder,put,list,string,setting,list,string,values,remove,setting,map,put,setting,new,array,list,values,return,this
Settings -> Builder -> public Builder putList(String setting, List<String> values);1525334055;Sets the setting with the provided setting key and a list of values.__@param setting The setting key_@param values  The values_@return The builder;public Builder putList(String setting, List<String> values) {_            remove(setting)__            map.put(setting, new ArrayList<>(values))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,a,list,of,values,param,setting,the,setting,key,param,values,the,values,return,the,builder;public,builder,put,list,string,setting,list,string,values,remove,setting,map,put,setting,new,array,list,values,return,this
Settings -> Builder -> public Builder putList(String setting, List<String> values);1536828374;Sets the setting with the provided setting key and a list of values.__@param setting The setting key_@param values  The values_@return The builder;public Builder putList(String setting, List<String> values) {_            remove(setting)__            map.put(setting, new ArrayList<>(values))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,a,list,of,values,param,setting,the,setting,key,param,values,the,values,return,the,builder;public,builder,put,list,string,setting,list,string,values,remove,setting,map,put,setting,new,array,list,values,return,this
Settings -> Builder -> public Builder putList(String setting, List<String> values);1539951844;Sets the setting with the provided setting key and a list of values.__@param setting The setting key_@param values  The values_@return The builder;public Builder putList(String setting, List<String> values) {_            remove(setting)__            map.put(setting, new ArrayList<>(values))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,a,list,of,values,param,setting,the,setting,key,param,values,the,values,return,the,builder;public,builder,put,list,string,setting,list,string,values,remove,setting,map,put,setting,new,array,list,values,return,this
Settings -> Builder -> public Builder putList(String setting, List<String> values);1540486836;Sets the setting with the provided setting key and a list of values.__@param setting The setting key_@param values  The values_@return The builder;public Builder putList(String setting, List<String> values) {_            remove(setting)__            map.put(setting, new ArrayList<>(values))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,a,list,of,values,param,setting,the,setting,key,param,values,the,values,return,the,builder;public,builder,put,list,string,setting,list,string,values,remove,setting,map,put,setting,new,array,list,values,return,this
Settings -> Builder -> public Builder putList(String setting, List<String> values);1546842892;Sets the setting with the provided setting key and a list of values.__@param setting The setting key_@param values  The values_@return The builder;public Builder putList(String setting, List<String> values) {_            remove(setting)__            map.put(setting, new ArrayList<>(values))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,a,list,of,values,param,setting,the,setting,key,param,values,the,values,return,the,builder;public,builder,put,list,string,setting,list,string,values,remove,setting,map,put,setting,new,array,list,values,return,this
Settings -> Builder -> public Builder putList(String setting, List<String> values);1546874030;Sets the setting with the provided setting key and a list of values.__@param setting The setting key_@param values  The values_@return The builder;public Builder putList(String setting, List<String> values) {_            remove(setting)__            map.put(setting, new ArrayList<>(values))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,a,list,of,values,param,setting,the,setting,key,param,values,the,values,return,the,builder;public,builder,put,list,string,setting,list,string,values,remove,setting,map,put,setting,new,array,list,values,return,this
Settings -> Builder -> public Builder putList(String setting, List<String> values);1546901964;Sets the setting with the provided setting key and a list of values.__@param setting The setting key_@param values  The values_@return The builder;public Builder putList(String setting, List<String> values) {_            remove(setting)__            map.put(setting, new ArrayList<>(values))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,a,list,of,values,param,setting,the,setting,key,param,values,the,values,return,the,builder;public,builder,put,list,string,setting,list,string,values,remove,setting,map,put,setting,new,array,list,values,return,this
Settings -> Builder -> public Builder putList(String setting, List<String> values);1547643436;Sets the setting with the provided setting key and a list of values.__@param setting The setting key_@param values  The values_@return The builder;public Builder putList(String setting, List<String> values) {_            remove(setting)__            map.put(setting, new ArrayList<>(values))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,a,list,of,values,param,setting,the,setting,key,param,values,the,values,return,the,builder;public,builder,put,list,string,setting,list,string,values,remove,setting,map,put,setting,new,array,list,values,return,this
Settings -> Builder -> public Builder putList(String setting, List<String> values);1548422582;Sets the setting with the provided setting key and a list of values.__@param setting The setting key_@param values  The values_@return The builder;public Builder putList(String setting, List<String> values) {_            remove(setting)__            map.put(setting, new ArrayList<>(values))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,a,list,of,values,param,setting,the,setting,key,param,values,the,values,return,the,builder;public,builder,put,list,string,setting,list,string,values,remove,setting,map,put,setting,new,array,list,values,return,this
Settings -> public Integer getAsInt(String setting, Integer defaultValue);1524684173;Returns the setting value (as int) associated with the setting key. If it does not exists,_returns the default value provided.;public Integer getAsInt(String setting, Integer defaultValue) {_        String sValue = get(setting)__        if (sValue == null) {_            return defaultValue__        }_        try {_            return Integer.parseInt(sValue)__        } catch (NumberFormatException e) {_            throw new SettingsException("Failed to parse int setting [" + setting + "] with value [" + sValue + "]", e)__        }_    };returns,the,setting,value,as,int,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,integer,get,as,int,string,setting,integer,default,value,string,s,value,get,setting,if,s,value,null,return,default,value,try,return,integer,parse,int,s,value,catch,number,format,exception,e,throw,new,settings,exception,failed,to,parse,int,setting,setting,with,value,s,value,e
Settings -> public Integer getAsInt(String setting, Integer defaultValue);1525334055;Returns the setting value (as int) associated with the setting key. If it does not exists,_returns the default value provided.;public Integer getAsInt(String setting, Integer defaultValue) {_        String sValue = get(setting)__        if (sValue == null) {_            return defaultValue__        }_        try {_            return Integer.parseInt(sValue)__        } catch (NumberFormatException e) {_            throw new SettingsException("Failed to parse int setting [" + setting + "] with value [" + sValue + "]", e)__        }_    };returns,the,setting,value,as,int,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,integer,get,as,int,string,setting,integer,default,value,string,s,value,get,setting,if,s,value,null,return,default,value,try,return,integer,parse,int,s,value,catch,number,format,exception,e,throw,new,settings,exception,failed,to,parse,int,setting,setting,with,value,s,value,e
Settings -> public Integer getAsInt(String setting, Integer defaultValue);1536828374;Returns the setting value (as int) associated with the setting key. If it does not exists,_returns the default value provided.;public Integer getAsInt(String setting, Integer defaultValue) {_        String sValue = get(setting)__        if (sValue == null) {_            return defaultValue__        }_        try {_            return Integer.parseInt(sValue)__        } catch (NumberFormatException e) {_            throw new SettingsException("Failed to parse int setting [" + setting + "] with value [" + sValue + "]", e)__        }_    };returns,the,setting,value,as,int,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,integer,get,as,int,string,setting,integer,default,value,string,s,value,get,setting,if,s,value,null,return,default,value,try,return,integer,parse,int,s,value,catch,number,format,exception,e,throw,new,settings,exception,failed,to,parse,int,setting,setting,with,value,s,value,e
Settings -> public Integer getAsInt(String setting, Integer defaultValue);1539951844;Returns the setting value (as int) associated with the setting key. If it does not exists,_returns the default value provided.;public Integer getAsInt(String setting, Integer defaultValue) {_        String sValue = get(setting)__        if (sValue == null) {_            return defaultValue__        }_        try {_            return Integer.parseInt(sValue)__        } catch (NumberFormatException e) {_            throw new SettingsException("Failed to parse int setting [" + setting + "] with value [" + sValue + "]", e)__        }_    };returns,the,setting,value,as,int,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,integer,get,as,int,string,setting,integer,default,value,string,s,value,get,setting,if,s,value,null,return,default,value,try,return,integer,parse,int,s,value,catch,number,format,exception,e,throw,new,settings,exception,failed,to,parse,int,setting,setting,with,value,s,value,e
Settings -> public Integer getAsInt(String setting, Integer defaultValue);1540486836;Returns the setting value (as int) associated with the setting key. If it does not exists,_returns the default value provided.;public Integer getAsInt(String setting, Integer defaultValue) {_        String sValue = get(setting)__        if (sValue == null) {_            return defaultValue__        }_        try {_            return Integer.parseInt(sValue)__        } catch (NumberFormatException e) {_            throw new SettingsException("Failed to parse int setting [" + setting + "] with value [" + sValue + "]", e)__        }_    };returns,the,setting,value,as,int,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,integer,get,as,int,string,setting,integer,default,value,string,s,value,get,setting,if,s,value,null,return,default,value,try,return,integer,parse,int,s,value,catch,number,format,exception,e,throw,new,settings,exception,failed,to,parse,int,setting,setting,with,value,s,value,e
Settings -> public Integer getAsInt(String setting, Integer defaultValue);1546842892;Returns the setting value (as int) associated with the setting key. If it does not exists,_returns the default value provided.;public Integer getAsInt(String setting, Integer defaultValue) {_        String sValue = get(setting)__        if (sValue == null) {_            return defaultValue__        }_        try {_            return Integer.parseInt(sValue)__        } catch (NumberFormatException e) {_            throw new SettingsException("Failed to parse int setting [" + setting + "] with value [" + sValue + "]", e)__        }_    };returns,the,setting,value,as,int,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,integer,get,as,int,string,setting,integer,default,value,string,s,value,get,setting,if,s,value,null,return,default,value,try,return,integer,parse,int,s,value,catch,number,format,exception,e,throw,new,settings,exception,failed,to,parse,int,setting,setting,with,value,s,value,e
Settings -> public Integer getAsInt(String setting, Integer defaultValue);1546874030;Returns the setting value (as int) associated with the setting key. If it does not exists,_returns the default value provided.;public Integer getAsInt(String setting, Integer defaultValue) {_        String sValue = get(setting)__        if (sValue == null) {_            return defaultValue__        }_        try {_            return Integer.parseInt(sValue)__        } catch (NumberFormatException e) {_            throw new SettingsException("Failed to parse int setting [" + setting + "] with value [" + sValue + "]", e)__        }_    };returns,the,setting,value,as,int,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,integer,get,as,int,string,setting,integer,default,value,string,s,value,get,setting,if,s,value,null,return,default,value,try,return,integer,parse,int,s,value,catch,number,format,exception,e,throw,new,settings,exception,failed,to,parse,int,setting,setting,with,value,s,value,e
Settings -> public Integer getAsInt(String setting, Integer defaultValue);1546901964;Returns the setting value (as int) associated with the setting key. If it does not exists,_returns the default value provided.;public Integer getAsInt(String setting, Integer defaultValue) {_        String sValue = get(setting)__        if (sValue == null) {_            return defaultValue__        }_        try {_            return Integer.parseInt(sValue)__        } catch (NumberFormatException e) {_            throw new SettingsException("Failed to parse int setting [" + setting + "] with value [" + sValue + "]", e)__        }_    };returns,the,setting,value,as,int,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,integer,get,as,int,string,setting,integer,default,value,string,s,value,get,setting,if,s,value,null,return,default,value,try,return,integer,parse,int,s,value,catch,number,format,exception,e,throw,new,settings,exception,failed,to,parse,int,setting,setting,with,value,s,value,e
Settings -> public Integer getAsInt(String setting, Integer defaultValue);1547643436;Returns the setting value (as int) associated with the setting key. If it does not exists,_returns the default value provided.;public Integer getAsInt(String setting, Integer defaultValue) {_        String sValue = get(setting)__        if (sValue == null) {_            return defaultValue__        }_        try {_            return Integer.parseInt(sValue)__        } catch (NumberFormatException e) {_            throw new SettingsException("Failed to parse int setting [" + setting + "] with value [" + sValue + "]", e)__        }_    };returns,the,setting,value,as,int,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,integer,get,as,int,string,setting,integer,default,value,string,s,value,get,setting,if,s,value,null,return,default,value,try,return,integer,parse,int,s,value,catch,number,format,exception,e,throw,new,settings,exception,failed,to,parse,int,setting,setting,with,value,s,value,e
Settings -> public Integer getAsInt(String setting, Integer defaultValue);1548422582;Returns the setting value (as int) associated with the setting key. If it does not exists,_returns the default value provided.;public Integer getAsInt(String setting, Integer defaultValue) {_        String sValue = get(setting)__        if (sValue == null) {_            return defaultValue__        }_        try {_            return Integer.parseInt(sValue)__        } catch (NumberFormatException e) {_            throw new SettingsException("Failed to parse int setting [" + setting + "] with value [" + sValue + "]", e)__        }_    };returns,the,setting,value,as,int,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,integer,get,as,int,string,setting,integer,default,value,string,s,value,get,setting,if,s,value,null,return,default,value,try,return,integer,parse,int,s,value,catch,number,format,exception,e,throw,new,settings,exception,failed,to,parse,int,setting,setting,with,value,s,value,e
Settings -> public Double getAsDouble(String setting, Double defaultValue);1524684173;Returns the setting value (as double) associated with the setting key. If it does not exists,_returns the default value provided.;public Double getAsDouble(String setting, Double defaultValue) {_        String sValue = get(setting)__        if (sValue == null) {_            return defaultValue__        }_        try {_            return Double.parseDouble(sValue)__        } catch (NumberFormatException e) {_            throw new SettingsException("Failed to parse double setting [" + setting + "] with value [" + sValue + "]", e)__        }_    };returns,the,setting,value,as,double,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,double,get,as,double,string,setting,double,default,value,string,s,value,get,setting,if,s,value,null,return,default,value,try,return,double,parse,double,s,value,catch,number,format,exception,e,throw,new,settings,exception,failed,to,parse,double,setting,setting,with,value,s,value,e
Settings -> public Double getAsDouble(String setting, Double defaultValue);1525334055;Returns the setting value (as double) associated with the setting key. If it does not exists,_returns the default value provided.;public Double getAsDouble(String setting, Double defaultValue) {_        String sValue = get(setting)__        if (sValue == null) {_            return defaultValue__        }_        try {_            return Double.parseDouble(sValue)__        } catch (NumberFormatException e) {_            throw new SettingsException("Failed to parse double setting [" + setting + "] with value [" + sValue + "]", e)__        }_    };returns,the,setting,value,as,double,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,double,get,as,double,string,setting,double,default,value,string,s,value,get,setting,if,s,value,null,return,default,value,try,return,double,parse,double,s,value,catch,number,format,exception,e,throw,new,settings,exception,failed,to,parse,double,setting,setting,with,value,s,value,e
Settings -> public Double getAsDouble(String setting, Double defaultValue);1536828374;Returns the setting value (as double) associated with the setting key. If it does not exists,_returns the default value provided.;public Double getAsDouble(String setting, Double defaultValue) {_        String sValue = get(setting)__        if (sValue == null) {_            return defaultValue__        }_        try {_            return Double.parseDouble(sValue)__        } catch (NumberFormatException e) {_            throw new SettingsException("Failed to parse double setting [" + setting + "] with value [" + sValue + "]", e)__        }_    };returns,the,setting,value,as,double,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,double,get,as,double,string,setting,double,default,value,string,s,value,get,setting,if,s,value,null,return,default,value,try,return,double,parse,double,s,value,catch,number,format,exception,e,throw,new,settings,exception,failed,to,parse,double,setting,setting,with,value,s,value,e
Settings -> public Double getAsDouble(String setting, Double defaultValue);1539951844;Returns the setting value (as double) associated with the setting key. If it does not exists,_returns the default value provided.;public Double getAsDouble(String setting, Double defaultValue) {_        String sValue = get(setting)__        if (sValue == null) {_            return defaultValue__        }_        try {_            return Double.parseDouble(sValue)__        } catch (NumberFormatException e) {_            throw new SettingsException("Failed to parse double setting [" + setting + "] with value [" + sValue + "]", e)__        }_    };returns,the,setting,value,as,double,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,double,get,as,double,string,setting,double,default,value,string,s,value,get,setting,if,s,value,null,return,default,value,try,return,double,parse,double,s,value,catch,number,format,exception,e,throw,new,settings,exception,failed,to,parse,double,setting,setting,with,value,s,value,e
Settings -> public Double getAsDouble(String setting, Double defaultValue);1540486836;Returns the setting value (as double) associated with the setting key. If it does not exists,_returns the default value provided.;public Double getAsDouble(String setting, Double defaultValue) {_        String sValue = get(setting)__        if (sValue == null) {_            return defaultValue__        }_        try {_            return Double.parseDouble(sValue)__        } catch (NumberFormatException e) {_            throw new SettingsException("Failed to parse double setting [" + setting + "] with value [" + sValue + "]", e)__        }_    };returns,the,setting,value,as,double,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,double,get,as,double,string,setting,double,default,value,string,s,value,get,setting,if,s,value,null,return,default,value,try,return,double,parse,double,s,value,catch,number,format,exception,e,throw,new,settings,exception,failed,to,parse,double,setting,setting,with,value,s,value,e
Settings -> public Double getAsDouble(String setting, Double defaultValue);1546842892;Returns the setting value (as double) associated with the setting key. If it does not exists,_returns the default value provided.;public Double getAsDouble(String setting, Double defaultValue) {_        String sValue = get(setting)__        if (sValue == null) {_            return defaultValue__        }_        try {_            return Double.parseDouble(sValue)__        } catch (NumberFormatException e) {_            throw new SettingsException("Failed to parse double setting [" + setting + "] with value [" + sValue + "]", e)__        }_    };returns,the,setting,value,as,double,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,double,get,as,double,string,setting,double,default,value,string,s,value,get,setting,if,s,value,null,return,default,value,try,return,double,parse,double,s,value,catch,number,format,exception,e,throw,new,settings,exception,failed,to,parse,double,setting,setting,with,value,s,value,e
Settings -> public Double getAsDouble(String setting, Double defaultValue);1546874030;Returns the setting value (as double) associated with the setting key. If it does not exists,_returns the default value provided.;public Double getAsDouble(String setting, Double defaultValue) {_        String sValue = get(setting)__        if (sValue == null) {_            return defaultValue__        }_        try {_            return Double.parseDouble(sValue)__        } catch (NumberFormatException e) {_            throw new SettingsException("Failed to parse double setting [" + setting + "] with value [" + sValue + "]", e)__        }_    };returns,the,setting,value,as,double,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,double,get,as,double,string,setting,double,default,value,string,s,value,get,setting,if,s,value,null,return,default,value,try,return,double,parse,double,s,value,catch,number,format,exception,e,throw,new,settings,exception,failed,to,parse,double,setting,setting,with,value,s,value,e
Settings -> public Double getAsDouble(String setting, Double defaultValue);1546901964;Returns the setting value (as double) associated with the setting key. If it does not exists,_returns the default value provided.;public Double getAsDouble(String setting, Double defaultValue) {_        String sValue = get(setting)__        if (sValue == null) {_            return defaultValue__        }_        try {_            return Double.parseDouble(sValue)__        } catch (NumberFormatException e) {_            throw new SettingsException("Failed to parse double setting [" + setting + "] with value [" + sValue + "]", e)__        }_    };returns,the,setting,value,as,double,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,double,get,as,double,string,setting,double,default,value,string,s,value,get,setting,if,s,value,null,return,default,value,try,return,double,parse,double,s,value,catch,number,format,exception,e,throw,new,settings,exception,failed,to,parse,double,setting,setting,with,value,s,value,e
Settings -> public Double getAsDouble(String setting, Double defaultValue);1547643436;Returns the setting value (as double) associated with the setting key. If it does not exists,_returns the default value provided.;public Double getAsDouble(String setting, Double defaultValue) {_        String sValue = get(setting)__        if (sValue == null) {_            return defaultValue__        }_        try {_            return Double.parseDouble(sValue)__        } catch (NumberFormatException e) {_            throw new SettingsException("Failed to parse double setting [" + setting + "] with value [" + sValue + "]", e)__        }_    };returns,the,setting,value,as,double,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,double,get,as,double,string,setting,double,default,value,string,s,value,get,setting,if,s,value,null,return,default,value,try,return,double,parse,double,s,value,catch,number,format,exception,e,throw,new,settings,exception,failed,to,parse,double,setting,setting,with,value,s,value,e
Settings -> public Double getAsDouble(String setting, Double defaultValue);1548422582;Returns the setting value (as double) associated with the setting key. If it does not exists,_returns the default value provided.;public Double getAsDouble(String setting, Double defaultValue) {_        String sValue = get(setting)__        if (sValue == null) {_            return defaultValue__        }_        try {_            return Double.parseDouble(sValue)__        } catch (NumberFormatException e) {_            throw new SettingsException("Failed to parse double setting [" + setting + "] with value [" + sValue + "]", e)__        }_    };returns,the,setting,value,as,double,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,double,get,as,double,string,setting,double,default,value,string,s,value,get,setting,if,s,value,null,return,default,value,try,return,double,parse,double,s,value,catch,number,format,exception,e,throw,new,settings,exception,failed,to,parse,double,setting,setting,with,value,s,value,e
Settings -> Builder -> public Builder put(String setting, int value);1524684173;Sets the setting with the provided setting key and the int value.__@param setting The setting key_@param value   The int value_@return The builder;public Builder put(String setting, int value) {_            put(setting, String.valueOf(value))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,int,value,param,setting,the,setting,key,param,value,the,int,value,return,the,builder;public,builder,put,string,setting,int,value,put,setting,string,value,of,value,return,this
Settings -> Builder -> public Builder put(String setting, int value);1525334055;Sets the setting with the provided setting key and the int value.__@param setting The setting key_@param value   The int value_@return The builder;public Builder put(String setting, int value) {_            put(setting, String.valueOf(value))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,int,value,param,setting,the,setting,key,param,value,the,int,value,return,the,builder;public,builder,put,string,setting,int,value,put,setting,string,value,of,value,return,this
Settings -> Builder -> public Builder put(String setting, int value);1536828374;Sets the setting with the provided setting key and the int value.__@param setting The setting key_@param value   The int value_@return The builder;public Builder put(String setting, int value) {_            put(setting, String.valueOf(value))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,int,value,param,setting,the,setting,key,param,value,the,int,value,return,the,builder;public,builder,put,string,setting,int,value,put,setting,string,value,of,value,return,this
Settings -> Builder -> public Builder put(String setting, int value);1539951844;Sets the setting with the provided setting key and the int value.__@param setting The setting key_@param value   The int value_@return The builder;public Builder put(String setting, int value) {_            put(setting, String.valueOf(value))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,int,value,param,setting,the,setting,key,param,value,the,int,value,return,the,builder;public,builder,put,string,setting,int,value,put,setting,string,value,of,value,return,this
Settings -> Builder -> public Builder put(String setting, int value);1540486836;Sets the setting with the provided setting key and the int value.__@param setting The setting key_@param value   The int value_@return The builder;public Builder put(String setting, int value) {_            put(setting, String.valueOf(value))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,int,value,param,setting,the,setting,key,param,value,the,int,value,return,the,builder;public,builder,put,string,setting,int,value,put,setting,string,value,of,value,return,this
Settings -> Builder -> public Builder put(String setting, int value);1546842892;Sets the setting with the provided setting key and the int value.__@param setting The setting key_@param value   The int value_@return The builder;public Builder put(String setting, int value) {_            put(setting, String.valueOf(value))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,int,value,param,setting,the,setting,key,param,value,the,int,value,return,the,builder;public,builder,put,string,setting,int,value,put,setting,string,value,of,value,return,this
Settings -> Builder -> public Builder put(String setting, int value);1546874030;Sets the setting with the provided setting key and the int value.__@param setting The setting key_@param value   The int value_@return The builder;public Builder put(String setting, int value) {_            put(setting, String.valueOf(value))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,int,value,param,setting,the,setting,key,param,value,the,int,value,return,the,builder;public,builder,put,string,setting,int,value,put,setting,string,value,of,value,return,this
Settings -> Builder -> public Builder put(String setting, int value);1546901964;Sets the setting with the provided setting key and the int value.__@param setting The setting key_@param value   The int value_@return The builder;public Builder put(String setting, int value) {_            put(setting, String.valueOf(value))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,int,value,param,setting,the,setting,key,param,value,the,int,value,return,the,builder;public,builder,put,string,setting,int,value,put,setting,string,value,of,value,return,this
Settings -> Builder -> public Builder put(String setting, int value);1547643436;Sets the setting with the provided setting key and the int value.__@param setting The setting key_@param value   The int value_@return The builder;public Builder put(String setting, int value) {_            put(setting, String.valueOf(value))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,int,value,param,setting,the,setting,key,param,value,the,int,value,return,the,builder;public,builder,put,string,setting,int,value,put,setting,string,value,of,value,return,this
Settings -> Builder -> public Builder put(String setting, int value);1548422582;Sets the setting with the provided setting key and the int value.__@param setting The setting key_@param value   The int value_@return The builder;public Builder put(String setting, int value) {_            put(setting, String.valueOf(value))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,int,value,param,setting,the,setting,key,param,value,the,int,value,return,the,builder;public,builder,put,string,setting,int,value,put,setting,string,value,of,value,return,this
Settings -> Builder -> public Settings build();1524684173;Builds a {@link Settings} (underlying uses {@link Settings}) based on everything_set on this builder.;public Settings build() {_            processLegacyLists(map)__            return new Settings(map, secureSettings.get())__        };builds,a,link,settings,underlying,uses,link,settings,based,on,everything,set,on,this,builder;public,settings,build,process,legacy,lists,map,return,new,settings,map,secure,settings,get
Settings -> Builder -> public Settings build();1525334055;Builds a {@link Settings} (underlying uses {@link Settings}) based on everything_set on this builder.;public Settings build() {_            processLegacyLists(map)__            return new Settings(map, secureSettings.get())__        };builds,a,link,settings,underlying,uses,link,settings,based,on,everything,set,on,this,builder;public,settings,build,process,legacy,lists,map,return,new,settings,map,secure,settings,get
Settings -> Builder -> public Settings build();1536828374;Builds a {@link Settings} (underlying uses {@link Settings}) based on everything_set on this builder.;public Settings build() {_            processLegacyLists(map)__            return new Settings(map, secureSettings.get())__        };builds,a,link,settings,underlying,uses,link,settings,based,on,everything,set,on,this,builder;public,settings,build,process,legacy,lists,map,return,new,settings,map,secure,settings,get
Settings -> Builder -> public Settings build();1539951844;Builds a {@link Settings} (underlying uses {@link Settings}) based on everything_set on this builder.;public Settings build() {_            processLegacyLists(map)__            return new Settings(map, secureSettings.get())__        };builds,a,link,settings,underlying,uses,link,settings,based,on,everything,set,on,this,builder;public,settings,build,process,legacy,lists,map,return,new,settings,map,secure,settings,get
Settings -> Builder -> public Settings build();1540486836;Builds a {@link Settings} (underlying uses {@link Settings}) based on everything_set on this builder.;public Settings build() {_            processLegacyLists(map)__            return new Settings(map, secureSettings.get())__        };builds,a,link,settings,underlying,uses,link,settings,based,on,everything,set,on,this,builder;public,settings,build,process,legacy,lists,map,return,new,settings,map,secure,settings,get
Settings -> Builder -> public Settings build();1546842892;Builds a {@link Settings} (underlying uses {@link Settings}) based on everything_set on this builder.;public Settings build() {_            processLegacyLists(map)__            return new Settings(map, secureSettings.get())__        };builds,a,link,settings,underlying,uses,link,settings,based,on,everything,set,on,this,builder;public,settings,build,process,legacy,lists,map,return,new,settings,map,secure,settings,get
Settings -> Builder -> public Settings build();1546874030;Builds a {@link Settings} (underlying uses {@link Settings}) based on everything_set on this builder.;public Settings build() {_            processLegacyLists(map)__            return new Settings(map, secureSettings.get())__        };builds,a,link,settings,underlying,uses,link,settings,based,on,everything,set,on,this,builder;public,settings,build,process,legacy,lists,map,return,new,settings,map,secure,settings,get
Settings -> Builder -> public Settings build();1546901964;Builds a {@link Settings} (underlying uses {@link Settings}) based on everything_set on this builder.;public Settings build() {_            processLegacyLists(map)__            return new Settings(map, secureSettings.get())__        };builds,a,link,settings,underlying,uses,link,settings,based,on,everything,set,on,this,builder;public,settings,build,process,legacy,lists,map,return,new,settings,map,secure,settings,get
Settings -> Builder -> public Settings build();1547643436;Builds a {@link Settings} (underlying uses {@link Settings}) based on everything_set on this builder.;public Settings build() {_            processLegacyLists(map)__            return new Settings(map, secureSettings.get())__        };builds,a,link,settings,underlying,uses,link,settings,based,on,everything,set,on,this,builder;public,settings,build,process,legacy,lists,map,return,new,settings,map,secure,settings,get
Settings -> Builder -> public Settings build();1548422582;Builds a {@link Settings} (underlying uses {@link Settings}) based on everything_set on this builder.;public Settings build() {_            processLegacyLists(map)__            return new Settings(map, secureSettings.get())__        };builds,a,link,settings,underlying,uses,link,settings,based,on,everything,set,on,this,builder;public,settings,build,process,legacy,lists,map,return,new,settings,map,secure,settings,get
Settings -> Builder -> public Builder put(String settingPrefix, String groupName, String[] settings, String[] values) throws SettingsException;1524684173;Sets the setting group.;public Builder put(String settingPrefix, String groupName, String[] settings, String[] values) throws SettingsException {_            if (settings.length != values.length) {_                throw new SettingsException("The settings length must match the value length")__            }_            for (int i = 0_ i < settings.length_ i++) {_                if (values[i] == null) {_                    continue__                }_                put(settingPrefix + "." + groupName + "." + settings[i], values[i])__            }_            return this__        };sets,the,setting,group;public,builder,put,string,setting,prefix,string,group,name,string,settings,string,values,throws,settings,exception,if,settings,length,values,length,throw,new,settings,exception,the,settings,length,must,match,the,value,length,for,int,i,0,i,settings,length,i,if,values,i,null,continue,put,setting,prefix,group,name,settings,i,values,i,return,this
Settings -> Builder -> public Builder put(String settingPrefix, String groupName, String[] settings, String[] values) throws SettingsException;1525334055;Sets the setting group.;public Builder put(String settingPrefix, String groupName, String[] settings, String[] values) throws SettingsException {_            if (settings.length != values.length) {_                throw new SettingsException("The settings length must match the value length")__            }_            for (int i = 0_ i < settings.length_ i++) {_                if (values[i] == null) {_                    continue__                }_                put(settingPrefix + "." + groupName + "." + settings[i], values[i])__            }_            return this__        };sets,the,setting,group;public,builder,put,string,setting,prefix,string,group,name,string,settings,string,values,throws,settings,exception,if,settings,length,values,length,throw,new,settings,exception,the,settings,length,must,match,the,value,length,for,int,i,0,i,settings,length,i,if,values,i,null,continue,put,setting,prefix,group,name,settings,i,values,i,return,this
Settings -> Builder -> public Builder put(String settingPrefix, String groupName, String[] settings, String[] values) throws SettingsException;1536828374;Sets the setting group.;public Builder put(String settingPrefix, String groupName, String[] settings, String[] values) throws SettingsException {_            if (settings.length != values.length) {_                throw new SettingsException("The settings length must match the value length")__            }_            for (int i = 0_ i < settings.length_ i++) {_                if (values[i] == null) {_                    continue__                }_                put(settingPrefix + "." + groupName + "." + settings[i], values[i])__            }_            return this__        };sets,the,setting,group;public,builder,put,string,setting,prefix,string,group,name,string,settings,string,values,throws,settings,exception,if,settings,length,values,length,throw,new,settings,exception,the,settings,length,must,match,the,value,length,for,int,i,0,i,settings,length,i,if,values,i,null,continue,put,setting,prefix,group,name,settings,i,values,i,return,this
Settings -> Builder -> public Builder put(String settingPrefix, String groupName, String[] settings, String[] values) throws SettingsException;1539951844;Sets the setting group.;public Builder put(String settingPrefix, String groupName, String[] settings, String[] values) throws SettingsException {_            if (settings.length != values.length) {_                throw new SettingsException("The settings length must match the value length")__            }_            for (int i = 0_ i < settings.length_ i++) {_                if (values[i] == null) {_                    continue__                }_                put(settingPrefix + "." + groupName + "." + settings[i], values[i])__            }_            return this__        };sets,the,setting,group;public,builder,put,string,setting,prefix,string,group,name,string,settings,string,values,throws,settings,exception,if,settings,length,values,length,throw,new,settings,exception,the,settings,length,must,match,the,value,length,for,int,i,0,i,settings,length,i,if,values,i,null,continue,put,setting,prefix,group,name,settings,i,values,i,return,this
Settings -> Builder -> public Builder put(String settingPrefix, String groupName, String[] settings, String[] values) throws SettingsException;1540486836;Sets the setting group.;public Builder put(String settingPrefix, String groupName, String[] settings, String[] values) throws SettingsException {_            if (settings.length != values.length) {_                throw new SettingsException("The settings length must match the value length")__            }_            for (int i = 0_ i < settings.length_ i++) {_                if (values[i] == null) {_                    continue__                }_                put(settingPrefix + "." + groupName + "." + settings[i], values[i])__            }_            return this__        };sets,the,setting,group;public,builder,put,string,setting,prefix,string,group,name,string,settings,string,values,throws,settings,exception,if,settings,length,values,length,throw,new,settings,exception,the,settings,length,must,match,the,value,length,for,int,i,0,i,settings,length,i,if,values,i,null,continue,put,setting,prefix,group,name,settings,i,values,i,return,this
Settings -> Builder -> public Builder put(String settingPrefix, String groupName, String[] settings, String[] values) throws SettingsException;1546842892;Sets the setting group.;public Builder put(String settingPrefix, String groupName, String[] settings, String[] values) throws SettingsException {_            if (settings.length != values.length) {_                throw new SettingsException("The settings length must match the value length")__            }_            for (int i = 0_ i < settings.length_ i++) {_                if (values[i] == null) {_                    continue__                }_                put(settingPrefix + "." + groupName + "." + settings[i], values[i])__            }_            return this__        };sets,the,setting,group;public,builder,put,string,setting,prefix,string,group,name,string,settings,string,values,throws,settings,exception,if,settings,length,values,length,throw,new,settings,exception,the,settings,length,must,match,the,value,length,for,int,i,0,i,settings,length,i,if,values,i,null,continue,put,setting,prefix,group,name,settings,i,values,i,return,this
Settings -> Builder -> public Builder put(String settingPrefix, String groupName, String[] settings, String[] values) throws SettingsException;1546874030;Sets the setting group.;public Builder put(String settingPrefix, String groupName, String[] settings, String[] values) throws SettingsException {_            if (settings.length != values.length) {_                throw new SettingsException("The settings length must match the value length")__            }_            for (int i = 0_ i < settings.length_ i++) {_                if (values[i] == null) {_                    continue__                }_                put(settingPrefix + "." + groupName + "." + settings[i], values[i])__            }_            return this__        };sets,the,setting,group;public,builder,put,string,setting,prefix,string,group,name,string,settings,string,values,throws,settings,exception,if,settings,length,values,length,throw,new,settings,exception,the,settings,length,must,match,the,value,length,for,int,i,0,i,settings,length,i,if,values,i,null,continue,put,setting,prefix,group,name,settings,i,values,i,return,this
Settings -> Builder -> public Builder put(String settingPrefix, String groupName, String[] settings, String[] values) throws SettingsException;1546901964;Sets the setting group.;public Builder put(String settingPrefix, String groupName, String[] settings, String[] values) throws SettingsException {_            if (settings.length != values.length) {_                throw new SettingsException("The settings length must match the value length")__            }_            for (int i = 0_ i < settings.length_ i++) {_                if (values[i] == null) {_                    continue__                }_                put(settingPrefix + "." + groupName + "." + settings[i], values[i])__            }_            return this__        };sets,the,setting,group;public,builder,put,string,setting,prefix,string,group,name,string,settings,string,values,throws,settings,exception,if,settings,length,values,length,throw,new,settings,exception,the,settings,length,must,match,the,value,length,for,int,i,0,i,settings,length,i,if,values,i,null,continue,put,setting,prefix,group,name,settings,i,values,i,return,this
Settings -> public static Builder builder();1524684173;Returns a builder to be used in order to build settings.;public static Builder builder() {_        return new Builder()__    };returns,a,builder,to,be,used,in,order,to,build,settings;public,static,builder,builder,return,new,builder
Settings -> public static Builder builder();1525334055;Returns a builder to be used in order to build settings.;public static Builder builder() {_        return new Builder()__    };returns,a,builder,to,be,used,in,order,to,build,settings;public,static,builder,builder,return,new,builder
Settings -> public static Builder builder();1536828374;Returns a builder to be used in order to build settings.;public static Builder builder() {_        return new Builder()__    };returns,a,builder,to,be,used,in,order,to,build,settings;public,static,builder,builder,return,new,builder
Settings -> public static Builder builder();1539951844;Returns a builder to be used in order to build settings.;public static Builder builder() {_        return new Builder()__    };returns,a,builder,to,be,used,in,order,to,build,settings;public,static,builder,builder,return,new,builder
Settings -> public static Builder builder();1540486836;Returns a builder to be used in order to build settings.;public static Builder builder() {_        return new Builder()__    };returns,a,builder,to,be,used,in,order,to,build,settings;public,static,builder,builder,return,new,builder
Settings -> public static Builder builder();1546842892;Returns a builder to be used in order to build settings.;public static Builder builder() {_        return new Builder()__    };returns,a,builder,to,be,used,in,order,to,build,settings;public,static,builder,builder,return,new,builder
Settings -> public static Builder builder();1546874030;Returns a builder to be used in order to build settings.;public static Builder builder() {_        return new Builder()__    };returns,a,builder,to,be,used,in,order,to,build,settings;public,static,builder,builder,return,new,builder
Settings -> public static Builder builder();1546901964;Returns a builder to be used in order to build settings.;public static Builder builder() {_        return new Builder()__    };returns,a,builder,to,be,used,in,order,to,build,settings;public,static,builder,builder,return,new,builder
Settings -> public static Builder builder();1547643436;Returns a builder to be used in order to build settings.;public static Builder builder() {_        return new Builder()__    };returns,a,builder,to,be,used,in,order,to,build,settings;public,static,builder,builder,return,new,builder
Settings -> public static Builder builder();1548422582;Returns a builder to be used in order to build settings.;public static Builder builder() {_        return new Builder()__    };returns,a,builder,to,be,used,in,order,to,build,settings;public,static,builder,builder,return,new,builder
Settings -> public List<String> getAsList(String key) throws SettingsException;1524684173;The values associated with a setting key as an immutable list._<p>_It will also automatically load a comma separated list under the settingPrefix and merge with_the numbered format.__@param key The setting key to load the list by_@return The setting list values;public List<String> getAsList(String key) throws SettingsException {_        return getAsList(key, Collections.emptyList())__    };the,values,associated,with,a,setting,key,as,an,immutable,list,p,it,will,also,automatically,load,a,comma,separated,list,under,the,setting,prefix,and,merge,with,the,numbered,format,param,key,the,setting,key,to,load,the,list,by,return,the,setting,list,values;public,list,string,get,as,list,string,key,throws,settings,exception,return,get,as,list,key,collections,empty,list
Settings -> public List<String> getAsList(String key) throws SettingsException;1525334055;The values associated with a setting key as an immutable list._<p>_It will also automatically load a comma separated list under the settingPrefix and merge with_the numbered format.__@param key The setting key to load the list by_@return The setting list values;public List<String> getAsList(String key) throws SettingsException {_        return getAsList(key, Collections.emptyList())__    };the,values,associated,with,a,setting,key,as,an,immutable,list,p,it,will,also,automatically,load,a,comma,separated,list,under,the,setting,prefix,and,merge,with,the,numbered,format,param,key,the,setting,key,to,load,the,list,by,return,the,setting,list,values;public,list,string,get,as,list,string,key,throws,settings,exception,return,get,as,list,key,collections,empty,list
Settings -> public List<String> getAsList(String key) throws SettingsException;1536828374;The values associated with a setting key as an immutable list._<p>_It will also automatically load a comma separated list under the settingPrefix and merge with_the numbered format.__@param key The setting key to load the list by_@return The setting list values;public List<String> getAsList(String key) throws SettingsException {_        return getAsList(key, Collections.emptyList())__    };the,values,associated,with,a,setting,key,as,an,immutable,list,p,it,will,also,automatically,load,a,comma,separated,list,under,the,setting,prefix,and,merge,with,the,numbered,format,param,key,the,setting,key,to,load,the,list,by,return,the,setting,list,values;public,list,string,get,as,list,string,key,throws,settings,exception,return,get,as,list,key,collections,empty,list
Settings -> public List<String> getAsList(String key) throws SettingsException;1539951844;The values associated with a setting key as an immutable list._<p>_It will also automatically load a comma separated list under the settingPrefix and merge with_the numbered format.__@param key The setting key to load the list by_@return The setting list values;public List<String> getAsList(String key) throws SettingsException {_        return getAsList(key, Collections.emptyList())__    };the,values,associated,with,a,setting,key,as,an,immutable,list,p,it,will,also,automatically,load,a,comma,separated,list,under,the,setting,prefix,and,merge,with,the,numbered,format,param,key,the,setting,key,to,load,the,list,by,return,the,setting,list,values;public,list,string,get,as,list,string,key,throws,settings,exception,return,get,as,list,key,collections,empty,list
Settings -> public List<String> getAsList(String key) throws SettingsException;1540486836;The values associated with a setting key as an immutable list._<p>_It will also automatically load a comma separated list under the settingPrefix and merge with_the numbered format.__@param key The setting key to load the list by_@return The setting list values;public List<String> getAsList(String key) throws SettingsException {_        return getAsList(key, Collections.emptyList())__    };the,values,associated,with,a,setting,key,as,an,immutable,list,p,it,will,also,automatically,load,a,comma,separated,list,under,the,setting,prefix,and,merge,with,the,numbered,format,param,key,the,setting,key,to,load,the,list,by,return,the,setting,list,values;public,list,string,get,as,list,string,key,throws,settings,exception,return,get,as,list,key,collections,empty,list
Settings -> public List<String> getAsList(String key) throws SettingsException;1546842892;The values associated with a setting key as an immutable list._<p>_It will also automatically load a comma separated list under the settingPrefix and merge with_the numbered format.__@param key The setting key to load the list by_@return The setting list values;public List<String> getAsList(String key) throws SettingsException {_        return getAsList(key, Collections.emptyList())__    };the,values,associated,with,a,setting,key,as,an,immutable,list,p,it,will,also,automatically,load,a,comma,separated,list,under,the,setting,prefix,and,merge,with,the,numbered,format,param,key,the,setting,key,to,load,the,list,by,return,the,setting,list,values;public,list,string,get,as,list,string,key,throws,settings,exception,return,get,as,list,key,collections,empty,list
Settings -> public List<String> getAsList(String key) throws SettingsException;1546874030;The values associated with a setting key as an immutable list._<p>_It will also automatically load a comma separated list under the settingPrefix and merge with_the numbered format.__@param key The setting key to load the list by_@return The setting list values;public List<String> getAsList(String key) throws SettingsException {_        return getAsList(key, Collections.emptyList())__    };the,values,associated,with,a,setting,key,as,an,immutable,list,p,it,will,also,automatically,load,a,comma,separated,list,under,the,setting,prefix,and,merge,with,the,numbered,format,param,key,the,setting,key,to,load,the,list,by,return,the,setting,list,values;public,list,string,get,as,list,string,key,throws,settings,exception,return,get,as,list,key,collections,empty,list
Settings -> public List<String> getAsList(String key) throws SettingsException;1546901964;The values associated with a setting key as an immutable list._<p>_It will also automatically load a comma separated list under the settingPrefix and merge with_the numbered format.__@param key The setting key to load the list by_@return The setting list values;public List<String> getAsList(String key) throws SettingsException {_        return getAsList(key, Collections.emptyList())__    };the,values,associated,with,a,setting,key,as,an,immutable,list,p,it,will,also,automatically,load,a,comma,separated,list,under,the,setting,prefix,and,merge,with,the,numbered,format,param,key,the,setting,key,to,load,the,list,by,return,the,setting,list,values;public,list,string,get,as,list,string,key,throws,settings,exception,return,get,as,list,key,collections,empty,list
Settings -> public List<String> getAsList(String key) throws SettingsException;1547643436;The values associated with a setting key as an immutable list._<p>_It will also automatically load a comma separated list under the settingPrefix and merge with_the numbered format.__@param key The setting key to load the list by_@return The setting list values;public List<String> getAsList(String key) throws SettingsException {_        return getAsList(key, Collections.emptyList())__    };the,values,associated,with,a,setting,key,as,an,immutable,list,p,it,will,also,automatically,load,a,comma,separated,list,under,the,setting,prefix,and,merge,with,the,numbered,format,param,key,the,setting,key,to,load,the,list,by,return,the,setting,list,values;public,list,string,get,as,list,string,key,throws,settings,exception,return,get,as,list,key,collections,empty,list
Settings -> public List<String> getAsList(String key) throws SettingsException;1548422582;The values associated with a setting key as an immutable list._<p>_It will also automatically load a comma separated list under the settingPrefix and merge with_the numbered format.__@param key The setting key to load the list by_@return The setting list values;public List<String> getAsList(String key) throws SettingsException {_        return getAsList(key, Collections.emptyList())__    };the,values,associated,with,a,setting,key,as,an,immutable,list,p,it,will,also,automatically,load,a,comma,separated,list,under,the,setting,prefix,and,merge,with,the,numbered,format,param,key,the,setting,key,to,load,the,list,by,return,the,setting,list,values;public,list,string,get,as,list,string,key,throws,settings,exception,return,get,as,list,key,collections,empty,list
Settings -> public boolean isEmpty();1524684173;Returns <tt>true</tt> if this settings object contains no settings_@return <tt>true</tt> if this settings object contains no settings;public boolean isEmpty() {_        return this.settings.isEmpty() && (secureSettings == null || secureSettings.getSettingNames().isEmpty())__    };returns,tt,true,tt,if,this,settings,object,contains,no,settings,return,tt,true,tt,if,this,settings,object,contains,no,settings;public,boolean,is,empty,return,this,settings,is,empty,secure,settings,null,secure,settings,get,setting,names,is,empty
Settings -> public boolean isEmpty();1525334055;Returns {@code true} if this settings object contains no settings_@return {@code true} if this settings object contains no settings;public boolean isEmpty() {_        return this.settings.isEmpty() && (secureSettings == null || secureSettings.getSettingNames().isEmpty())__    };returns,code,true,if,this,settings,object,contains,no,settings,return,code,true,if,this,settings,object,contains,no,settings;public,boolean,is,empty,return,this,settings,is,empty,secure,settings,null,secure,settings,get,setting,names,is,empty
Settings -> public boolean isEmpty();1536828374;Returns {@code true} if this settings object contains no settings_@return {@code true} if this settings object contains no settings;public boolean isEmpty() {_        return this.settings.isEmpty() && (secureSettings == null || secureSettings.getSettingNames().isEmpty())__    };returns,code,true,if,this,settings,object,contains,no,settings,return,code,true,if,this,settings,object,contains,no,settings;public,boolean,is,empty,return,this,settings,is,empty,secure,settings,null,secure,settings,get,setting,names,is,empty
Settings -> public boolean isEmpty();1539951844;Returns {@code true} if this settings object contains no settings_@return {@code true} if this settings object contains no settings;public boolean isEmpty() {_        return this.settings.isEmpty() && (secureSettings == null || secureSettings.getSettingNames().isEmpty())__    };returns,code,true,if,this,settings,object,contains,no,settings,return,code,true,if,this,settings,object,contains,no,settings;public,boolean,is,empty,return,this,settings,is,empty,secure,settings,null,secure,settings,get,setting,names,is,empty
Settings -> public boolean isEmpty();1540486836;Returns {@code true} if this settings object contains no settings_@return {@code true} if this settings object contains no settings;public boolean isEmpty() {_        return this.settings.isEmpty() && (secureSettings == null || secureSettings.getSettingNames().isEmpty())__    };returns,code,true,if,this,settings,object,contains,no,settings,return,code,true,if,this,settings,object,contains,no,settings;public,boolean,is,empty,return,this,settings,is,empty,secure,settings,null,secure,settings,get,setting,names,is,empty
Settings -> public boolean isEmpty();1546842892;Returns {@code true} if this settings object contains no settings_@return {@code true} if this settings object contains no settings;public boolean isEmpty() {_        return this.settings.isEmpty() && (secureSettings == null || secureSettings.getSettingNames().isEmpty())__    };returns,code,true,if,this,settings,object,contains,no,settings,return,code,true,if,this,settings,object,contains,no,settings;public,boolean,is,empty,return,this,settings,is,empty,secure,settings,null,secure,settings,get,setting,names,is,empty
Settings -> public boolean isEmpty();1546874030;Returns {@code true} if this settings object contains no settings_@return {@code true} if this settings object contains no settings;public boolean isEmpty() {_        return this.settings.isEmpty() && (secureSettings == null || secureSettings.getSettingNames().isEmpty())__    };returns,code,true,if,this,settings,object,contains,no,settings,return,code,true,if,this,settings,object,contains,no,settings;public,boolean,is,empty,return,this,settings,is,empty,secure,settings,null,secure,settings,get,setting,names,is,empty
Settings -> public boolean isEmpty();1546901964;Returns {@code true} if this settings object contains no settings_@return {@code true} if this settings object contains no settings;public boolean isEmpty() {_        return this.settings.isEmpty() && (secureSettings == null || secureSettings.getSettingNames().isEmpty())__    };returns,code,true,if,this,settings,object,contains,no,settings,return,code,true,if,this,settings,object,contains,no,settings;public,boolean,is,empty,return,this,settings,is,empty,secure,settings,null,secure,settings,get,setting,names,is,empty
Settings -> public boolean isEmpty();1547643436;Returns {@code true} if this settings object contains no settings_@return {@code true} if this settings object contains no settings;public boolean isEmpty() {_        return this.settings.isEmpty() && (secureSettings == null || secureSettings.getSettingNames().isEmpty())__    };returns,code,true,if,this,settings,object,contains,no,settings,return,code,true,if,this,settings,object,contains,no,settings;public,boolean,is,empty,return,this,settings,is,empty,secure,settings,null,secure,settings,get,setting,names,is,empty
Settings -> public boolean isEmpty();1548422582;Returns {@code true} if this settings object contains no settings_@return {@code true} if this settings object contains no settings;public boolean isEmpty() {_        return this.settings.isEmpty() && (secureSettings == null || secureSettings.getSettingNames().isEmpty())__    };returns,code,true,if,this,settings,object,contains,no,settings,return,code,true,if,this,settings,object,contains,no,settings;public,boolean,is,empty,return,this,settings,is,empty,secure,settings,null,secure,settings,get,setting,names,is,empty
Settings -> public String toDelimitedString(char delimiter);1524684173;Returns the settings as delimited string.;public String toDelimitedString(char delimiter) {_        StringBuilder sb = new StringBuilder()__        for (Map.Entry<String, Object> entry : settings.entrySet()) {_            sb.append(entry.getKey()).append("=").append(entry.getValue()).append(delimiter)__        }_        return sb.toString()__    };returns,the,settings,as,delimited,string;public,string,to,delimited,string,char,delimiter,string,builder,sb,new,string,builder,for,map,entry,string,object,entry,settings,entry,set,sb,append,entry,get,key,append,append,entry,get,value,append,delimiter,return,sb,to,string
Settings -> public String toDelimitedString(char delimiter);1525334055;Returns the settings as delimited string.;public String toDelimitedString(char delimiter) {_        StringBuilder sb = new StringBuilder()__        for (Map.Entry<String, Object> entry : settings.entrySet()) {_            sb.append(entry.getKey()).append("=").append(entry.getValue()).append(delimiter)__        }_        return sb.toString()__    };returns,the,settings,as,delimited,string;public,string,to,delimited,string,char,delimiter,string,builder,sb,new,string,builder,for,map,entry,string,object,entry,settings,entry,set,sb,append,entry,get,key,append,append,entry,get,value,append,delimiter,return,sb,to,string
Settings -> public String toDelimitedString(char delimiter);1536828374;Returns the settings as delimited string.;public String toDelimitedString(char delimiter) {_        StringBuilder sb = new StringBuilder()__        for (Map.Entry<String, Object> entry : settings.entrySet()) {_            sb.append(entry.getKey()).append("=").append(entry.getValue()).append(delimiter)__        }_        return sb.toString()__    };returns,the,settings,as,delimited,string;public,string,to,delimited,string,char,delimiter,string,builder,sb,new,string,builder,for,map,entry,string,object,entry,settings,entry,set,sb,append,entry,get,key,append,append,entry,get,value,append,delimiter,return,sb,to,string
Settings -> public String toDelimitedString(char delimiter);1539951844;Returns the settings as delimited string.;public String toDelimitedString(char delimiter) {_        StringBuilder sb = new StringBuilder()__        for (Map.Entry<String, Object> entry : settings.entrySet()) {_            sb.append(entry.getKey()).append("=").append(entry.getValue()).append(delimiter)__        }_        return sb.toString()__    };returns,the,settings,as,delimited,string;public,string,to,delimited,string,char,delimiter,string,builder,sb,new,string,builder,for,map,entry,string,object,entry,settings,entry,set,sb,append,entry,get,key,append,append,entry,get,value,append,delimiter,return,sb,to,string
Settings -> public String toDelimitedString(char delimiter);1540486836;Returns the settings as delimited string.;public String toDelimitedString(char delimiter) {_        StringBuilder sb = new StringBuilder()__        for (Map.Entry<String, Object> entry : settings.entrySet()) {_            sb.append(entry.getKey()).append("=").append(entry.getValue()).append(delimiter)__        }_        return sb.toString()__    };returns,the,settings,as,delimited,string;public,string,to,delimited,string,char,delimiter,string,builder,sb,new,string,builder,for,map,entry,string,object,entry,settings,entry,set,sb,append,entry,get,key,append,append,entry,get,value,append,delimiter,return,sb,to,string
Settings -> public String toDelimitedString(char delimiter);1546842892;Returns the settings as delimited string.;public String toDelimitedString(char delimiter) {_        StringBuilder sb = new StringBuilder()__        for (Map.Entry<String, Object> entry : settings.entrySet()) {_            sb.append(entry.getKey()).append("=").append(entry.getValue()).append(delimiter)__        }_        return sb.toString()__    };returns,the,settings,as,delimited,string;public,string,to,delimited,string,char,delimiter,string,builder,sb,new,string,builder,for,map,entry,string,object,entry,settings,entry,set,sb,append,entry,get,key,append,append,entry,get,value,append,delimiter,return,sb,to,string
Settings -> public String toDelimitedString(char delimiter);1546874030;Returns the settings as delimited string.;public String toDelimitedString(char delimiter) {_        StringBuilder sb = new StringBuilder()__        for (Map.Entry<String, Object> entry : settings.entrySet()) {_            sb.append(entry.getKey()).append("=").append(entry.getValue()).append(delimiter)__        }_        return sb.toString()__    };returns,the,settings,as,delimited,string;public,string,to,delimited,string,char,delimiter,string,builder,sb,new,string,builder,for,map,entry,string,object,entry,settings,entry,set,sb,append,entry,get,key,append,append,entry,get,value,append,delimiter,return,sb,to,string
Settings -> public String toDelimitedString(char delimiter);1546901964;Returns the settings as delimited string.;public String toDelimitedString(char delimiter) {_        StringBuilder sb = new StringBuilder()__        for (Map.Entry<String, Object> entry : settings.entrySet()) {_            sb.append(entry.getKey()).append("=").append(entry.getValue()).append(delimiter)__        }_        return sb.toString()__    };returns,the,settings,as,delimited,string;public,string,to,delimited,string,char,delimiter,string,builder,sb,new,string,builder,for,map,entry,string,object,entry,settings,entry,set,sb,append,entry,get,key,append,append,entry,get,value,append,delimiter,return,sb,to,string
Settings -> public String toDelimitedString(char delimiter);1547643436;Returns the settings as delimited string.;public String toDelimitedString(char delimiter) {_        StringBuilder sb = new StringBuilder()__        for (Map.Entry<String, Object> entry : settings.entrySet()) {_            sb.append(entry.getKey()).append("=").append(entry.getValue()).append(delimiter)__        }_        return sb.toString()__    };returns,the,settings,as,delimited,string;public,string,to,delimited,string,char,delimiter,string,builder,sb,new,string,builder,for,map,entry,string,object,entry,settings,entry,set,sb,append,entry,get,key,append,append,entry,get,value,append,delimiter,return,sb,to,string
Settings -> public String toDelimitedString(char delimiter);1548422582;Returns the settings as delimited string.;public String toDelimitedString(char delimiter) {_        StringBuilder sb = new StringBuilder()__        for (Map.Entry<String, Object> entry : settings.entrySet()) {_            sb.append(entry.getKey()).append("=").append(entry.getValue()).append(delimiter)__        }_        return sb.toString()__    };returns,the,settings,as,delimited,string;public,string,to,delimited,string,char,delimiter,string,builder,sb,new,string,builder,for,map,entry,string,object,entry,settings,entry,set,sb,append,entry,get,key,append,append,entry,get,value,append,delimiter,return,sb,to,string
Settings -> Builder -> public String remove(String key);1524684173;Removes the provided setting from the internal map holding the current list of settings.;public String remove(String key) {_            return Settings.toString(map.remove(key))__        };removes,the,provided,setting,from,the,internal,map,holding,the,current,list,of,settings;public,string,remove,string,key,return,settings,to,string,map,remove,key
Settings -> Builder -> public String remove(String key);1525334055;Removes the provided setting from the internal map holding the current list of settings.;public String remove(String key) {_            return Settings.toString(map.remove(key))__        };removes,the,provided,setting,from,the,internal,map,holding,the,current,list,of,settings;public,string,remove,string,key,return,settings,to,string,map,remove,key
Settings -> Builder -> public String remove(String key);1536828374;Removes the provided setting from the internal map holding the current list of settings.;public String remove(String key) {_            return Settings.toString(map.remove(key))__        };removes,the,provided,setting,from,the,internal,map,holding,the,current,list,of,settings;public,string,remove,string,key,return,settings,to,string,map,remove,key
Settings -> Builder -> public String remove(String key);1539951844;Removes the provided setting from the internal map holding the current list of settings.;public String remove(String key) {_            return Settings.toString(map.remove(key))__        };removes,the,provided,setting,from,the,internal,map,holding,the,current,list,of,settings;public,string,remove,string,key,return,settings,to,string,map,remove,key
Settings -> Builder -> public String remove(String key);1540486836;Removes the provided setting from the internal map holding the current list of settings.;public String remove(String key) {_            return Settings.toString(map.remove(key))__        };removes,the,provided,setting,from,the,internal,map,holding,the,current,list,of,settings;public,string,remove,string,key,return,settings,to,string,map,remove,key
Settings -> Builder -> public String remove(String key);1546842892;Removes the provided setting from the internal map holding the current list of settings.;public String remove(String key) {_            return Settings.toString(map.remove(key))__        };removes,the,provided,setting,from,the,internal,map,holding,the,current,list,of,settings;public,string,remove,string,key,return,settings,to,string,map,remove,key
Settings -> Builder -> public String remove(String key);1546874030;Removes the provided setting from the internal map holding the current list of settings.;public String remove(String key) {_            return Settings.toString(map.remove(key))__        };removes,the,provided,setting,from,the,internal,map,holding,the,current,list,of,settings;public,string,remove,string,key,return,settings,to,string,map,remove,key
Settings -> Builder -> public String remove(String key);1546901964;Removes the provided setting from the internal map holding the current list of settings.;public String remove(String key) {_            return Settings.toString(map.remove(key))__        };removes,the,provided,setting,from,the,internal,map,holding,the,current,list,of,settings;public,string,remove,string,key,return,settings,to,string,map,remove,key
Settings -> Builder -> public String remove(String key);1547643436;Removes the provided setting from the internal map holding the current list of settings.;public String remove(String key) {_            return Settings.toString(map.remove(key))__        };removes,the,provided,setting,from,the,internal,map,holding,the,current,list,of,settings;public,string,remove,string,key,return,settings,to,string,map,remove,key
Settings -> Builder -> public String remove(String key);1548422582;Removes the provided setting from the internal map holding the current list of settings.;public String remove(String key) {_            return Settings.toString(map.remove(key))__        };removes,the,provided,setting,from,the,internal,map,holding,the,current,list,of,settings;public,string,remove,string,key,return,settings,to,string,map,remove,key
Settings -> Builder -> public Builder put(Settings settings);1524684173;Sets all the provided settings including secure settings;public Builder put(Settings settings) {_            return put(settings, true)__        };sets,all,the,provided,settings,including,secure,settings;public,builder,put,settings,settings,return,put,settings,true
Settings -> Builder -> public Builder put(Settings settings);1525334055;Sets all the provided settings including secure settings;public Builder put(Settings settings) {_            return put(settings, true)__        };sets,all,the,provided,settings,including,secure,settings;public,builder,put,settings,settings,return,put,settings,true
Settings -> Builder -> public Builder put(Settings settings);1536828374;Sets all the provided settings including secure settings;public Builder put(Settings settings) {_            return put(settings, true)__        };sets,all,the,provided,settings,including,secure,settings;public,builder,put,settings,settings,return,put,settings,true
Settings -> Builder -> public Builder put(Settings settings);1539951844;Sets all the provided settings including secure settings;public Builder put(Settings settings) {_            return put(settings, true)__        };sets,all,the,provided,settings,including,secure,settings;public,builder,put,settings,settings,return,put,settings,true
Settings -> Builder -> public Builder put(Settings settings);1540486836;Sets all the provided settings including secure settings;public Builder put(Settings settings) {_            return put(settings, true)__        };sets,all,the,provided,settings,including,secure,settings;public,builder,put,settings,settings,return,put,settings,true
Settings -> Builder -> public Builder put(Settings settings);1546842892;Sets all the provided settings including secure settings;public Builder put(Settings settings) {_            return put(settings, true)__        };sets,all,the,provided,settings,including,secure,settings;public,builder,put,settings,settings,return,put,settings,true
Settings -> Builder -> public Builder put(Settings settings);1546874030;Sets all the provided settings including secure settings;public Builder put(Settings settings) {_            return put(settings, true)__        };sets,all,the,provided,settings,including,secure,settings;public,builder,put,settings,settings,return,put,settings,true
Settings -> Builder -> public Builder put(Settings settings);1546901964;Sets all the provided settings including secure settings;public Builder put(Settings settings) {_            return put(settings, true)__        };sets,all,the,provided,settings,including,secure,settings;public,builder,put,settings,settings,return,put,settings,true
Settings -> Builder -> public Builder put(Settings settings);1547643436;Sets all the provided settings including secure settings;public Builder put(Settings settings) {_            return put(settings, true)__        };sets,all,the,provided,settings,including,secure,settings;public,builder,put,settings,settings,return,put,settings,true
Settings -> Builder -> public Builder put(Settings settings);1548422582;Sets all the provided settings including secure settings;public Builder put(Settings settings) {_            return put(settings, true)__        };sets,all,the,provided,settings,including,secure,settings;public,builder,put,settings,settings,return,put,settings,true
Settings -> public List<String> getAsList(String key, List<String> defaultValue, Boolean commaDelimited) throws SettingsException;1524684173;The values associated with a setting key as an immutable list._<p>_It will also automatically load a comma separated list under the settingPrefix and merge with_the numbered format.__@param key  The setting key to load the list by_@param defaultValue   The default value to use if no value is specified_@param commaDelimited Whether to try to parse a string as a comma-delimited value_@return The setting list values;public List<String> getAsList(String key, List<String> defaultValue, Boolean commaDelimited) throws SettingsException {_        List<String> result = new ArrayList<>()__        final Object valueFromPrefix = settings.get(key)__        if (valueFromPrefix != null) {_            if (valueFromPrefix instanceof List) {_                return Collections.unmodifiableList((List<String>) valueFromPrefix)__            } else if (commaDelimited) {_                String[] strings = Strings.splitStringByCommaToArray(get(key))__                if (strings.length > 0) {_                    for (String string : strings) {_                        result.add(string.trim())__                    }_                }_            } else {_                result.add(get(key).trim())__            }_        }__        if (result.isEmpty()) {_            return defaultValue__        }_        return Collections.unmodifiableList(result)__    };the,values,associated,with,a,setting,key,as,an,immutable,list,p,it,will,also,automatically,load,a,comma,separated,list,under,the,setting,prefix,and,merge,with,the,numbered,format,param,key,the,setting,key,to,load,the,list,by,param,default,value,the,default,value,to,use,if,no,value,is,specified,param,comma,delimited,whether,to,try,to,parse,a,string,as,a,comma,delimited,value,return,the,setting,list,values;public,list,string,get,as,list,string,key,list,string,default,value,boolean,comma,delimited,throws,settings,exception,list,string,result,new,array,list,final,object,value,from,prefix,settings,get,key,if,value,from,prefix,null,if,value,from,prefix,instanceof,list,return,collections,unmodifiable,list,list,string,value,from,prefix,else,if,comma,delimited,string,strings,strings,split,string,by,comma,to,array,get,key,if,strings,length,0,for,string,string,strings,result,add,string,trim,else,result,add,get,key,trim,if,result,is,empty,return,default,value,return,collections,unmodifiable,list,result
Settings -> public List<String> getAsList(String key, List<String> defaultValue, Boolean commaDelimited) throws SettingsException;1525334055;The values associated with a setting key as an immutable list._<p>_It will also automatically load a comma separated list under the settingPrefix and merge with_the numbered format.__@param key  The setting key to load the list by_@param defaultValue   The default value to use if no value is specified_@param commaDelimited Whether to try to parse a string as a comma-delimited value_@return The setting list values;public List<String> getAsList(String key, List<String> defaultValue, Boolean commaDelimited) throws SettingsException {_        List<String> result = new ArrayList<>()__        final Object valueFromPrefix = settings.get(key)__        if (valueFromPrefix != null) {_            if (valueFromPrefix instanceof List) {_                return Collections.unmodifiableList((List<String>) valueFromPrefix)__            } else if (commaDelimited) {_                String[] strings = Strings.splitStringByCommaToArray(get(key))__                if (strings.length > 0) {_                    for (String string : strings) {_                        result.add(string.trim())__                    }_                }_            } else {_                result.add(get(key).trim())__            }_        }__        if (result.isEmpty()) {_            return defaultValue__        }_        return Collections.unmodifiableList(result)__    };the,values,associated,with,a,setting,key,as,an,immutable,list,p,it,will,also,automatically,load,a,comma,separated,list,under,the,setting,prefix,and,merge,with,the,numbered,format,param,key,the,setting,key,to,load,the,list,by,param,default,value,the,default,value,to,use,if,no,value,is,specified,param,comma,delimited,whether,to,try,to,parse,a,string,as,a,comma,delimited,value,return,the,setting,list,values;public,list,string,get,as,list,string,key,list,string,default,value,boolean,comma,delimited,throws,settings,exception,list,string,result,new,array,list,final,object,value,from,prefix,settings,get,key,if,value,from,prefix,null,if,value,from,prefix,instanceof,list,return,collections,unmodifiable,list,list,string,value,from,prefix,else,if,comma,delimited,string,strings,strings,split,string,by,comma,to,array,get,key,if,strings,length,0,for,string,string,strings,result,add,string,trim,else,result,add,get,key,trim,if,result,is,empty,return,default,value,return,collections,unmodifiable,list,result
Settings -> public List<String> getAsList(String key, List<String> defaultValue, Boolean commaDelimited) throws SettingsException;1536828374;The values associated with a setting key as an immutable list._<p>_It will also automatically load a comma separated list under the settingPrefix and merge with_the numbered format.__@param key  The setting key to load the list by_@param defaultValue   The default value to use if no value is specified_@param commaDelimited Whether to try to parse a string as a comma-delimited value_@return The setting list values;public List<String> getAsList(String key, List<String> defaultValue, Boolean commaDelimited) throws SettingsException {_        List<String> result = new ArrayList<>()__        final Object valueFromPrefix = settings.get(key)__        if (valueFromPrefix != null) {_            if (valueFromPrefix instanceof List) {_                return Collections.unmodifiableList((List<String>) valueFromPrefix)__            } else if (commaDelimited) {_                String[] strings = Strings.splitStringByCommaToArray(get(key))__                if (strings.length > 0) {_                    for (String string : strings) {_                        result.add(string.trim())__                    }_                }_            } else {_                result.add(get(key).trim())__            }_        }__        if (result.isEmpty()) {_            return defaultValue__        }_        return Collections.unmodifiableList(result)__    };the,values,associated,with,a,setting,key,as,an,immutable,list,p,it,will,also,automatically,load,a,comma,separated,list,under,the,setting,prefix,and,merge,with,the,numbered,format,param,key,the,setting,key,to,load,the,list,by,param,default,value,the,default,value,to,use,if,no,value,is,specified,param,comma,delimited,whether,to,try,to,parse,a,string,as,a,comma,delimited,value,return,the,setting,list,values;public,list,string,get,as,list,string,key,list,string,default,value,boolean,comma,delimited,throws,settings,exception,list,string,result,new,array,list,final,object,value,from,prefix,settings,get,key,if,value,from,prefix,null,if,value,from,prefix,instanceof,list,return,collections,unmodifiable,list,list,string,value,from,prefix,else,if,comma,delimited,string,strings,strings,split,string,by,comma,to,array,get,key,if,strings,length,0,for,string,string,strings,result,add,string,trim,else,result,add,get,key,trim,if,result,is,empty,return,default,value,return,collections,unmodifiable,list,result
Settings -> public List<String> getAsList(String key, List<String> defaultValue, Boolean commaDelimited) throws SettingsException;1539951844;The values associated with a setting key as an immutable list._<p>_It will also automatically load a comma separated list under the settingPrefix and merge with_the numbered format.__@param key  The setting key to load the list by_@param defaultValue   The default value to use if no value is specified_@param commaDelimited Whether to try to parse a string as a comma-delimited value_@return The setting list values;public List<String> getAsList(String key, List<String> defaultValue, Boolean commaDelimited) throws SettingsException {_        List<String> result = new ArrayList<>()__        final Object valueFromPrefix = settings.get(key)__        if (valueFromPrefix != null) {_            if (valueFromPrefix instanceof List) {_                return Collections.unmodifiableList((List<String>) valueFromPrefix)__            } else if (commaDelimited) {_                String[] strings = Strings.splitStringByCommaToArray(get(key))__                if (strings.length > 0) {_                    for (String string : strings) {_                        result.add(string.trim())__                    }_                }_            } else {_                result.add(get(key).trim())__            }_        }__        if (result.isEmpty()) {_            return defaultValue__        }_        return Collections.unmodifiableList(result)__    };the,values,associated,with,a,setting,key,as,an,immutable,list,p,it,will,also,automatically,load,a,comma,separated,list,under,the,setting,prefix,and,merge,with,the,numbered,format,param,key,the,setting,key,to,load,the,list,by,param,default,value,the,default,value,to,use,if,no,value,is,specified,param,comma,delimited,whether,to,try,to,parse,a,string,as,a,comma,delimited,value,return,the,setting,list,values;public,list,string,get,as,list,string,key,list,string,default,value,boolean,comma,delimited,throws,settings,exception,list,string,result,new,array,list,final,object,value,from,prefix,settings,get,key,if,value,from,prefix,null,if,value,from,prefix,instanceof,list,return,collections,unmodifiable,list,list,string,value,from,prefix,else,if,comma,delimited,string,strings,strings,split,string,by,comma,to,array,get,key,if,strings,length,0,for,string,string,strings,result,add,string,trim,else,result,add,get,key,trim,if,result,is,empty,return,default,value,return,collections,unmodifiable,list,result
Settings -> public List<String> getAsList(String key, List<String> defaultValue, Boolean commaDelimited) throws SettingsException;1540486836;The values associated with a setting key as an immutable list._<p>_It will also automatically load a comma separated list under the settingPrefix and merge with_the numbered format.__@param key  The setting key to load the list by_@param defaultValue   The default value to use if no value is specified_@param commaDelimited Whether to try to parse a string as a comma-delimited value_@return The setting list values;public List<String> getAsList(String key, List<String> defaultValue, Boolean commaDelimited) throws SettingsException {_        List<String> result = new ArrayList<>()__        final Object valueFromPrefix = settings.get(key)__        if (valueFromPrefix != null) {_            if (valueFromPrefix instanceof List) {_                return Collections.unmodifiableList((List<String>) valueFromPrefix)__            } else if (commaDelimited) {_                String[] strings = Strings.splitStringByCommaToArray(get(key))__                if (strings.length > 0) {_                    for (String string : strings) {_                        result.add(string.trim())__                    }_                }_            } else {_                result.add(get(key).trim())__            }_        }__        if (result.isEmpty()) {_            return defaultValue__        }_        return Collections.unmodifiableList(result)__    };the,values,associated,with,a,setting,key,as,an,immutable,list,p,it,will,also,automatically,load,a,comma,separated,list,under,the,setting,prefix,and,merge,with,the,numbered,format,param,key,the,setting,key,to,load,the,list,by,param,default,value,the,default,value,to,use,if,no,value,is,specified,param,comma,delimited,whether,to,try,to,parse,a,string,as,a,comma,delimited,value,return,the,setting,list,values;public,list,string,get,as,list,string,key,list,string,default,value,boolean,comma,delimited,throws,settings,exception,list,string,result,new,array,list,final,object,value,from,prefix,settings,get,key,if,value,from,prefix,null,if,value,from,prefix,instanceof,list,return,collections,unmodifiable,list,list,string,value,from,prefix,else,if,comma,delimited,string,strings,strings,split,string,by,comma,to,array,get,key,if,strings,length,0,for,string,string,strings,result,add,string,trim,else,result,add,get,key,trim,if,result,is,empty,return,default,value,return,collections,unmodifiable,list,result
Settings -> public List<String> getAsList(String key, List<String> defaultValue, Boolean commaDelimited) throws SettingsException;1546842892;The values associated with a setting key as an immutable list._<p>_It will also automatically load a comma separated list under the settingPrefix and merge with_the numbered format.__@param key  The setting key to load the list by_@param defaultValue   The default value to use if no value is specified_@param commaDelimited Whether to try to parse a string as a comma-delimited value_@return The setting list values;public List<String> getAsList(String key, List<String> defaultValue, Boolean commaDelimited) throws SettingsException {_        List<String> result = new ArrayList<>()__        final Object valueFromPrefix = settings.get(key)__        if (valueFromPrefix != null) {_            if (valueFromPrefix instanceof List) {_                return Collections.unmodifiableList((List<String>) valueFromPrefix)__            } else if (commaDelimited) {_                String[] strings = Strings.splitStringByCommaToArray(get(key))__                if (strings.length > 0) {_                    for (String string : strings) {_                        result.add(string.trim())__                    }_                }_            } else {_                result.add(get(key).trim())__            }_        }__        if (result.isEmpty()) {_            return defaultValue__        }_        return Collections.unmodifiableList(result)__    };the,values,associated,with,a,setting,key,as,an,immutable,list,p,it,will,also,automatically,load,a,comma,separated,list,under,the,setting,prefix,and,merge,with,the,numbered,format,param,key,the,setting,key,to,load,the,list,by,param,default,value,the,default,value,to,use,if,no,value,is,specified,param,comma,delimited,whether,to,try,to,parse,a,string,as,a,comma,delimited,value,return,the,setting,list,values;public,list,string,get,as,list,string,key,list,string,default,value,boolean,comma,delimited,throws,settings,exception,list,string,result,new,array,list,final,object,value,from,prefix,settings,get,key,if,value,from,prefix,null,if,value,from,prefix,instanceof,list,return,collections,unmodifiable,list,list,string,value,from,prefix,else,if,comma,delimited,string,strings,strings,split,string,by,comma,to,array,get,key,if,strings,length,0,for,string,string,strings,result,add,string,trim,else,result,add,get,key,trim,if,result,is,empty,return,default,value,return,collections,unmodifiable,list,result
Settings -> public List<String> getAsList(String key, List<String> defaultValue, Boolean commaDelimited) throws SettingsException;1546874030;The values associated with a setting key as an immutable list._<p>_It will also automatically load a comma separated list under the settingPrefix and merge with_the numbered format.__@param key  The setting key to load the list by_@param defaultValue   The default value to use if no value is specified_@param commaDelimited Whether to try to parse a string as a comma-delimited value_@return The setting list values;public List<String> getAsList(String key, List<String> defaultValue, Boolean commaDelimited) throws SettingsException {_        List<String> result = new ArrayList<>()__        final Object valueFromPrefix = settings.get(key)__        if (valueFromPrefix != null) {_            if (valueFromPrefix instanceof List) {_                return Collections.unmodifiableList((List<String>) valueFromPrefix)__            } else if (commaDelimited) {_                String[] strings = Strings.splitStringByCommaToArray(get(key))__                if (strings.length > 0) {_                    for (String string : strings) {_                        result.add(string.trim())__                    }_                }_            } else {_                result.add(get(key).trim())__            }_        }__        if (result.isEmpty()) {_            return defaultValue__        }_        return Collections.unmodifiableList(result)__    };the,values,associated,with,a,setting,key,as,an,immutable,list,p,it,will,also,automatically,load,a,comma,separated,list,under,the,setting,prefix,and,merge,with,the,numbered,format,param,key,the,setting,key,to,load,the,list,by,param,default,value,the,default,value,to,use,if,no,value,is,specified,param,comma,delimited,whether,to,try,to,parse,a,string,as,a,comma,delimited,value,return,the,setting,list,values;public,list,string,get,as,list,string,key,list,string,default,value,boolean,comma,delimited,throws,settings,exception,list,string,result,new,array,list,final,object,value,from,prefix,settings,get,key,if,value,from,prefix,null,if,value,from,prefix,instanceof,list,return,collections,unmodifiable,list,list,string,value,from,prefix,else,if,comma,delimited,string,strings,strings,split,string,by,comma,to,array,get,key,if,strings,length,0,for,string,string,strings,result,add,string,trim,else,result,add,get,key,trim,if,result,is,empty,return,default,value,return,collections,unmodifiable,list,result
Settings -> public List<String> getAsList(String key, List<String> defaultValue, Boolean commaDelimited) throws SettingsException;1546901964;The values associated with a setting key as an immutable list._<p>_It will also automatically load a comma separated list under the settingPrefix and merge with_the numbered format.__@param key  The setting key to load the list by_@param defaultValue   The default value to use if no value is specified_@param commaDelimited Whether to try to parse a string as a comma-delimited value_@return The setting list values;public List<String> getAsList(String key, List<String> defaultValue, Boolean commaDelimited) throws SettingsException {_        List<String> result = new ArrayList<>()__        final Object valueFromPrefix = settings.get(key)__        if (valueFromPrefix != null) {_            if (valueFromPrefix instanceof List) {_                return Collections.unmodifiableList((List<String>) valueFromPrefix)__            } else if (commaDelimited) {_                String[] strings = Strings.splitStringByCommaToArray(get(key))__                if (strings.length > 0) {_                    for (String string : strings) {_                        result.add(string.trim())__                    }_                }_            } else {_                result.add(get(key).trim())__            }_        }__        if (result.isEmpty()) {_            return defaultValue__        }_        return Collections.unmodifiableList(result)__    };the,values,associated,with,a,setting,key,as,an,immutable,list,p,it,will,also,automatically,load,a,comma,separated,list,under,the,setting,prefix,and,merge,with,the,numbered,format,param,key,the,setting,key,to,load,the,list,by,param,default,value,the,default,value,to,use,if,no,value,is,specified,param,comma,delimited,whether,to,try,to,parse,a,string,as,a,comma,delimited,value,return,the,setting,list,values;public,list,string,get,as,list,string,key,list,string,default,value,boolean,comma,delimited,throws,settings,exception,list,string,result,new,array,list,final,object,value,from,prefix,settings,get,key,if,value,from,prefix,null,if,value,from,prefix,instanceof,list,return,collections,unmodifiable,list,list,string,value,from,prefix,else,if,comma,delimited,string,strings,strings,split,string,by,comma,to,array,get,key,if,strings,length,0,for,string,string,strings,result,add,string,trim,else,result,add,get,key,trim,if,result,is,empty,return,default,value,return,collections,unmodifiable,list,result
Settings -> public List<String> getAsList(String key, List<String> defaultValue, Boolean commaDelimited) throws SettingsException;1547643436;The values associated with a setting key as an immutable list._<p>_It will also automatically load a comma separated list under the settingPrefix and merge with_the numbered format.__@param key  The setting key to load the list by_@param defaultValue   The default value to use if no value is specified_@param commaDelimited Whether to try to parse a string as a comma-delimited value_@return The setting list values;public List<String> getAsList(String key, List<String> defaultValue, Boolean commaDelimited) throws SettingsException {_        List<String> result = new ArrayList<>()__        final Object valueFromPrefix = settings.get(key)__        if (valueFromPrefix != null) {_            if (valueFromPrefix instanceof List) {_                return Collections.unmodifiableList((List<String>) valueFromPrefix)__            } else if (commaDelimited) {_                String[] strings = Strings.splitStringByCommaToArray(get(key))__                if (strings.length > 0) {_                    for (String string : strings) {_                        result.add(string.trim())__                    }_                }_            } else {_                result.add(get(key).trim())__            }_        }__        if (result.isEmpty()) {_            return defaultValue__        }_        return Collections.unmodifiableList(result)__    };the,values,associated,with,a,setting,key,as,an,immutable,list,p,it,will,also,automatically,load,a,comma,separated,list,under,the,setting,prefix,and,merge,with,the,numbered,format,param,key,the,setting,key,to,load,the,list,by,param,default,value,the,default,value,to,use,if,no,value,is,specified,param,comma,delimited,whether,to,try,to,parse,a,string,as,a,comma,delimited,value,return,the,setting,list,values;public,list,string,get,as,list,string,key,list,string,default,value,boolean,comma,delimited,throws,settings,exception,list,string,result,new,array,list,final,object,value,from,prefix,settings,get,key,if,value,from,prefix,null,if,value,from,prefix,instanceof,list,return,collections,unmodifiable,list,list,string,value,from,prefix,else,if,comma,delimited,string,strings,strings,split,string,by,comma,to,array,get,key,if,strings,length,0,for,string,string,strings,result,add,string,trim,else,result,add,get,key,trim,if,result,is,empty,return,default,value,return,collections,unmodifiable,list,result
Settings -> public List<String> getAsList(String key, List<String> defaultValue, Boolean commaDelimited) throws SettingsException;1548422582;The values associated with a setting key as an immutable list._<p>_It will also automatically load a comma separated list under the settingPrefix and merge with_the numbered format.__@param key  The setting key to load the list by_@param defaultValue   The default value to use if no value is specified_@param commaDelimited Whether to try to parse a string as a comma-delimited value_@return The setting list values;public List<String> getAsList(String key, List<String> defaultValue, Boolean commaDelimited) throws SettingsException {_        List<String> result = new ArrayList<>()__        final Object valueFromPrefix = settings.get(key)__        if (valueFromPrefix != null) {_            if (valueFromPrefix instanceof List) {_                return Collections.unmodifiableList((List<String>) valueFromPrefix)__            } else if (commaDelimited) {_                String[] strings = Strings.splitStringByCommaToArray(get(key))__                if (strings.length > 0) {_                    for (String string : strings) {_                        result.add(string.trim())__                    }_                }_            } else {_                result.add(get(key).trim())__            }_        }__        if (result.isEmpty()) {_            return defaultValue__        }_        return Collections.unmodifiableList(result)__    };the,values,associated,with,a,setting,key,as,an,immutable,list,p,it,will,also,automatically,load,a,comma,separated,list,under,the,setting,prefix,and,merge,with,the,numbered,format,param,key,the,setting,key,to,load,the,list,by,param,default,value,the,default,value,to,use,if,no,value,is,specified,param,comma,delimited,whether,to,try,to,parse,a,string,as,a,comma,delimited,value,return,the,setting,list,values;public,list,string,get,as,list,string,key,list,string,default,value,boolean,comma,delimited,throws,settings,exception,list,string,result,new,array,list,final,object,value,from,prefix,settings,get,key,if,value,from,prefix,null,if,value,from,prefix,instanceof,list,return,collections,unmodifiable,list,list,string,value,from,prefix,else,if,comma,delimited,string,strings,strings,split,string,by,comma,to,array,get,key,if,strings,length,0,for,string,string,strings,result,add,string,trim,else,result,add,get,key,trim,if,result,is,empty,return,default,value,return,collections,unmodifiable,list,result
Settings -> public Map<String, Settings> getGroups(String settingPrefix) throws SettingsException;1524684173;Returns group settings for the given setting prefix.;public Map<String, Settings> getGroups(String settingPrefix) throws SettingsException {_        return getGroups(settingPrefix, false)__    };returns,group,settings,for,the,given,setting,prefix;public,map,string,settings,get,groups,string,setting,prefix,throws,settings,exception,return,get,groups,setting,prefix,false
Settings -> public Map<String, Settings> getGroups(String settingPrefix) throws SettingsException;1525334055;Returns group settings for the given setting prefix.;public Map<String, Settings> getGroups(String settingPrefix) throws SettingsException {_        return getGroups(settingPrefix, false)__    };returns,group,settings,for,the,given,setting,prefix;public,map,string,settings,get,groups,string,setting,prefix,throws,settings,exception,return,get,groups,setting,prefix,false
Settings -> public Map<String, Settings> getGroups(String settingPrefix) throws SettingsException;1536828374;Returns group settings for the given setting prefix.;public Map<String, Settings> getGroups(String settingPrefix) throws SettingsException {_        return getGroups(settingPrefix, false)__    };returns,group,settings,for,the,given,setting,prefix;public,map,string,settings,get,groups,string,setting,prefix,throws,settings,exception,return,get,groups,setting,prefix,false
Settings -> public Map<String, Settings> getGroups(String settingPrefix) throws SettingsException;1539951844;Returns group settings for the given setting prefix.;public Map<String, Settings> getGroups(String settingPrefix) throws SettingsException {_        return getGroups(settingPrefix, false)__    };returns,group,settings,for,the,given,setting,prefix;public,map,string,settings,get,groups,string,setting,prefix,throws,settings,exception,return,get,groups,setting,prefix,false
Settings -> public Map<String, Settings> getGroups(String settingPrefix) throws SettingsException;1540486836;Returns group settings for the given setting prefix.;public Map<String, Settings> getGroups(String settingPrefix) throws SettingsException {_        return getGroups(settingPrefix, false)__    };returns,group,settings,for,the,given,setting,prefix;public,map,string,settings,get,groups,string,setting,prefix,throws,settings,exception,return,get,groups,setting,prefix,false
Settings -> public Map<String, Settings> getGroups(String settingPrefix) throws SettingsException;1546842892;Returns group settings for the given setting prefix.;public Map<String, Settings> getGroups(String settingPrefix) throws SettingsException {_        return getGroups(settingPrefix, false)__    };returns,group,settings,for,the,given,setting,prefix;public,map,string,settings,get,groups,string,setting,prefix,throws,settings,exception,return,get,groups,setting,prefix,false
Settings -> public Map<String, Settings> getGroups(String settingPrefix) throws SettingsException;1546874030;Returns group settings for the given setting prefix.;public Map<String, Settings> getGroups(String settingPrefix) throws SettingsException {_        return getGroups(settingPrefix, false)__    };returns,group,settings,for,the,given,setting,prefix;public,map,string,settings,get,groups,string,setting,prefix,throws,settings,exception,return,get,groups,setting,prefix,false
Settings -> public Map<String, Settings> getGroups(String settingPrefix) throws SettingsException;1546901964;Returns group settings for the given setting prefix.;public Map<String, Settings> getGroups(String settingPrefix) throws SettingsException {_        return getGroups(settingPrefix, false)__    };returns,group,settings,for,the,given,setting,prefix;public,map,string,settings,get,groups,string,setting,prefix,throws,settings,exception,return,get,groups,setting,prefix,false
Settings -> public Map<String, Settings> getGroups(String settingPrefix) throws SettingsException;1547643436;Returns group settings for the given setting prefix.;public Map<String, Settings> getGroups(String settingPrefix) throws SettingsException {_        return getGroups(settingPrefix, false)__    };returns,group,settings,for,the,given,setting,prefix;public,map,string,settings,get,groups,string,setting,prefix,throws,settings,exception,return,get,groups,setting,prefix,false
Settings -> public Map<String, Settings> getGroups(String settingPrefix) throws SettingsException;1548422582;Returns group settings for the given setting prefix.;public Map<String, Settings> getGroups(String settingPrefix) throws SettingsException {_        return getGroups(settingPrefix, false)__    };returns,group,settings,for,the,given,setting,prefix;public,map,string,settings,get,groups,string,setting,prefix,throws,settings,exception,return,get,groups,setting,prefix,false
Settings -> Builder -> public Builder loadFromStream(String resourceName, InputStream is, boolean acceptNullValues) throws IOException;1524684173;Loads settings from a stream that represents them using {@link #fromXContent(XContentParser)};public Builder loadFromStream(String resourceName, InputStream is, boolean acceptNullValues) throws IOException {_            final XContentType xContentType__            if (resourceName.endsWith(".json")) {_                xContentType = XContentType.JSON__            } else if (resourceName.endsWith(".yml") || resourceName.endsWith(".yaml")) {_                xContentType = XContentType.YAML__            } else {_                throw new IllegalArgumentException("unable to detect content type from resource name [" + resourceName + "]")__            }_            _            try (XContentParser parser =  XContentFactory.xContent(xContentType)_                    .createParser(NamedXContentRegistry.EMPTY, DeprecationHandler.THROW_UNSUPPORTED_OPERATION, is)) {_                if (parser.currentToken() == null) {_                    if (parser.nextToken() == null) {_                        return this_ _                    }_                }_                put(fromXContent(parser, acceptNullValues, true))__            } catch (ElasticsearchParseException e) {_                throw e__            } catch (Exception e) {_                throw new SettingsException("Failed to load settings from [" + resourceName + "]", e)__            } finally {_                IOUtils.close(is)__            }_            return this__        };loads,settings,from,a,stream,that,represents,them,using,link,from,xcontent,xcontent,parser;public,builder,load,from,stream,string,resource,name,input,stream,is,boolean,accept,null,values,throws,ioexception,final,xcontent,type,x,content,type,if,resource,name,ends,with,json,x,content,type,xcontent,type,json,else,if,resource,name,ends,with,yml,resource,name,ends,with,yaml,x,content,type,xcontent,type,yaml,else,throw,new,illegal,argument,exception,unable,to,detect,content,type,from,resource,name,resource,name,try,xcontent,parser,parser,xcontent,factory,x,content,x,content,type,create,parser,named,xcontent,registry,empty,deprecation,handler,is,if,parser,current,token,null,if,parser,next,token,null,return,this,put,from,xcontent,parser,accept,null,values,true,catch,elasticsearch,parse,exception,e,throw,e,catch,exception,e,throw,new,settings,exception,failed,to,load,settings,from,resource,name,e,finally,ioutils,close,is,return,this
Settings -> Builder -> public Builder loadFromStream(String resourceName, InputStream is, boolean acceptNullValues) throws IOException;1525334055;Loads settings from a stream that represents them using {@link #fromXContent(XContentParser)};public Builder loadFromStream(String resourceName, InputStream is, boolean acceptNullValues) throws IOException {_            final XContentType xContentType__            if (resourceName.endsWith(".json")) {_                xContentType = XContentType.JSON__            } else if (resourceName.endsWith(".yml") || resourceName.endsWith(".yaml")) {_                xContentType = XContentType.YAML__            } else {_                throw new IllegalArgumentException("unable to detect content type from resource name [" + resourceName + "]")__            }_            _            try (XContentParser parser =  XContentFactory.xContent(xContentType)_                    .createParser(NamedXContentRegistry.EMPTY, DeprecationHandler.THROW_UNSUPPORTED_OPERATION, is)) {_                if (parser.currentToken() == null) {_                    if (parser.nextToken() == null) {_                        return this_ _                    }_                }_                put(fromXContent(parser, acceptNullValues, true))__            } catch (ElasticsearchParseException e) {_                throw e__            } catch (Exception e) {_                throw new SettingsException("Failed to load settings from [" + resourceName + "]", e)__            } finally {_                IOUtils.close(is)__            }_            return this__        };loads,settings,from,a,stream,that,represents,them,using,link,from,xcontent,xcontent,parser;public,builder,load,from,stream,string,resource,name,input,stream,is,boolean,accept,null,values,throws,ioexception,final,xcontent,type,x,content,type,if,resource,name,ends,with,json,x,content,type,xcontent,type,json,else,if,resource,name,ends,with,yml,resource,name,ends,with,yaml,x,content,type,xcontent,type,yaml,else,throw,new,illegal,argument,exception,unable,to,detect,content,type,from,resource,name,resource,name,try,xcontent,parser,parser,xcontent,factory,x,content,x,content,type,create,parser,named,xcontent,registry,empty,deprecation,handler,is,if,parser,current,token,null,if,parser,next,token,null,return,this,put,from,xcontent,parser,accept,null,values,true,catch,elasticsearch,parse,exception,e,throw,e,catch,exception,e,throw,new,settings,exception,failed,to,load,settings,from,resource,name,e,finally,ioutils,close,is,return,this
Settings -> Builder -> public Builder loadFromStream(String resourceName, InputStream is, boolean acceptNullValues) throws IOException;1536828374;Loads settings from a stream that represents them using {@link #fromXContent(XContentParser)};public Builder loadFromStream(String resourceName, InputStream is, boolean acceptNullValues) throws IOException {_            final XContentType xContentType__            if (resourceName.endsWith(".json")) {_                xContentType = XContentType.JSON__            } else if (resourceName.endsWith(".yml") || resourceName.endsWith(".yaml")) {_                xContentType = XContentType.YAML__            } else {_                throw new IllegalArgumentException("unable to detect content type from resource name [" + resourceName + "]")__            }_            _            try (XContentParser parser =  XContentFactory.xContent(xContentType)_                    .createParser(NamedXContentRegistry.EMPTY, DeprecationHandler.THROW_UNSUPPORTED_OPERATION, is)) {_                if (parser.currentToken() == null) {_                    if (parser.nextToken() == null) {_                        return this_ _                    }_                }_                put(fromXContent(parser, acceptNullValues, true))__            } catch (ElasticsearchParseException e) {_                throw e__            } catch (Exception e) {_                throw new SettingsException("Failed to load settings from [" + resourceName + "]", e)__            } finally {_                IOUtils.close(is)__            }_            return this__        };loads,settings,from,a,stream,that,represents,them,using,link,from,xcontent,xcontent,parser;public,builder,load,from,stream,string,resource,name,input,stream,is,boolean,accept,null,values,throws,ioexception,final,xcontent,type,x,content,type,if,resource,name,ends,with,json,x,content,type,xcontent,type,json,else,if,resource,name,ends,with,yml,resource,name,ends,with,yaml,x,content,type,xcontent,type,yaml,else,throw,new,illegal,argument,exception,unable,to,detect,content,type,from,resource,name,resource,name,try,xcontent,parser,parser,xcontent,factory,x,content,x,content,type,create,parser,named,xcontent,registry,empty,deprecation,handler,is,if,parser,current,token,null,if,parser,next,token,null,return,this,put,from,xcontent,parser,accept,null,values,true,catch,elasticsearch,parse,exception,e,throw,e,catch,exception,e,throw,new,settings,exception,failed,to,load,settings,from,resource,name,e,finally,ioutils,close,is,return,this
Settings -> Builder -> public Builder loadFromStream(String resourceName, InputStream is, boolean acceptNullValues) throws IOException;1539951844;Loads settings from a stream that represents them using {@link #fromXContent(XContentParser)};public Builder loadFromStream(String resourceName, InputStream is, boolean acceptNullValues) throws IOException {_            final XContentType xContentType__            if (resourceName.endsWith(".json")) {_                xContentType = XContentType.JSON__            } else if (resourceName.endsWith(".yml") || resourceName.endsWith(".yaml")) {_                xContentType = XContentType.YAML__            } else {_                throw new IllegalArgumentException("unable to detect content type from resource name [" + resourceName + "]")__            }_            _            try (XContentParser parser =  XContentFactory.xContent(xContentType)_                    .createParser(NamedXContentRegistry.EMPTY, DeprecationHandler.THROW_UNSUPPORTED_OPERATION, is)) {_                if (parser.currentToken() == null) {_                    if (parser.nextToken() == null) {_                        return this_ _                    }_                }_                put(fromXContent(parser, acceptNullValues, true))__            } catch (ElasticsearchParseException e) {_                throw e__            } catch (Exception e) {_                throw new SettingsException("Failed to load settings from [" + resourceName + "]", e)__            } finally {_                IOUtils.close(is)__            }_            return this__        };loads,settings,from,a,stream,that,represents,them,using,link,from,xcontent,xcontent,parser;public,builder,load,from,stream,string,resource,name,input,stream,is,boolean,accept,null,values,throws,ioexception,final,xcontent,type,x,content,type,if,resource,name,ends,with,json,x,content,type,xcontent,type,json,else,if,resource,name,ends,with,yml,resource,name,ends,with,yaml,x,content,type,xcontent,type,yaml,else,throw,new,illegal,argument,exception,unable,to,detect,content,type,from,resource,name,resource,name,try,xcontent,parser,parser,xcontent,factory,x,content,x,content,type,create,parser,named,xcontent,registry,empty,deprecation,handler,is,if,parser,current,token,null,if,parser,next,token,null,return,this,put,from,xcontent,parser,accept,null,values,true,catch,elasticsearch,parse,exception,e,throw,e,catch,exception,e,throw,new,settings,exception,failed,to,load,settings,from,resource,name,e,finally,ioutils,close,is,return,this
Settings -> Builder -> public Builder loadFromStream(String resourceName, InputStream is, boolean acceptNullValues) throws IOException;1540486836;Loads settings from a stream that represents them using {@link #fromXContent(XContentParser)};public Builder loadFromStream(String resourceName, InputStream is, boolean acceptNullValues) throws IOException {_            final XContentType xContentType__            if (resourceName.endsWith(".json")) {_                xContentType = XContentType.JSON__            } else if (resourceName.endsWith(".yml") || resourceName.endsWith(".yaml")) {_                xContentType = XContentType.YAML__            } else {_                throw new IllegalArgumentException("unable to detect content type from resource name [" + resourceName + "]")__            }_            _            try (XContentParser parser =  XContentFactory.xContent(xContentType)_                    .createParser(NamedXContentRegistry.EMPTY, DeprecationHandler.THROW_UNSUPPORTED_OPERATION, is)) {_                if (parser.currentToken() == null) {_                    if (parser.nextToken() == null) {_                        return this_ _                    }_                }_                put(fromXContent(parser, acceptNullValues, true))__            } catch (ElasticsearchParseException e) {_                throw e__            } catch (Exception e) {_                throw new SettingsException("Failed to load settings from [" + resourceName + "]", e)__            } finally {_                IOUtils.close(is)__            }_            return this__        };loads,settings,from,a,stream,that,represents,them,using,link,from,xcontent,xcontent,parser;public,builder,load,from,stream,string,resource,name,input,stream,is,boolean,accept,null,values,throws,ioexception,final,xcontent,type,x,content,type,if,resource,name,ends,with,json,x,content,type,xcontent,type,json,else,if,resource,name,ends,with,yml,resource,name,ends,with,yaml,x,content,type,xcontent,type,yaml,else,throw,new,illegal,argument,exception,unable,to,detect,content,type,from,resource,name,resource,name,try,xcontent,parser,parser,xcontent,factory,x,content,x,content,type,create,parser,named,xcontent,registry,empty,deprecation,handler,is,if,parser,current,token,null,if,parser,next,token,null,return,this,put,from,xcontent,parser,accept,null,values,true,catch,elasticsearch,parse,exception,e,throw,e,catch,exception,e,throw,new,settings,exception,failed,to,load,settings,from,resource,name,e,finally,ioutils,close,is,return,this
Settings -> Builder -> public Builder loadFromStream(String resourceName, InputStream is, boolean acceptNullValues) throws IOException;1546842892;Loads settings from a stream that represents them using {@link #fromXContent(XContentParser)};public Builder loadFromStream(String resourceName, InputStream is, boolean acceptNullValues) throws IOException {_            final XContentType xContentType__            if (resourceName.endsWith(".json")) {_                xContentType = XContentType.JSON__            } else if (resourceName.endsWith(".yml") || resourceName.endsWith(".yaml")) {_                xContentType = XContentType.YAML__            } else {_                throw new IllegalArgumentException("unable to detect content type from resource name [" + resourceName + "]")__            }_            _            try (XContentParser parser =  XContentFactory.xContent(xContentType)_                    .createParser(NamedXContentRegistry.EMPTY, DeprecationHandler.THROW_UNSUPPORTED_OPERATION, is)) {_                if (parser.currentToken() == null) {_                    if (parser.nextToken() == null) {_                        return this_ _                    }_                }_                put(fromXContent(parser, acceptNullValues, true))__            } catch (ElasticsearchParseException e) {_                throw e__            } catch (Exception e) {_                throw new SettingsException("Failed to load settings from [" + resourceName + "]", e)__            } finally {_                IOUtils.close(is)__            }_            return this__        };loads,settings,from,a,stream,that,represents,them,using,link,from,xcontent,xcontent,parser;public,builder,load,from,stream,string,resource,name,input,stream,is,boolean,accept,null,values,throws,ioexception,final,xcontent,type,x,content,type,if,resource,name,ends,with,json,x,content,type,xcontent,type,json,else,if,resource,name,ends,with,yml,resource,name,ends,with,yaml,x,content,type,xcontent,type,yaml,else,throw,new,illegal,argument,exception,unable,to,detect,content,type,from,resource,name,resource,name,try,xcontent,parser,parser,xcontent,factory,x,content,x,content,type,create,parser,named,xcontent,registry,empty,deprecation,handler,is,if,parser,current,token,null,if,parser,next,token,null,return,this,put,from,xcontent,parser,accept,null,values,true,catch,elasticsearch,parse,exception,e,throw,e,catch,exception,e,throw,new,settings,exception,failed,to,load,settings,from,resource,name,e,finally,ioutils,close,is,return,this
Settings -> Builder -> public Builder loadFromStream(String resourceName, InputStream is, boolean acceptNullValues) throws IOException;1546874030;Loads settings from a stream that represents them using {@link #fromXContent(XContentParser)};public Builder loadFromStream(String resourceName, InputStream is, boolean acceptNullValues) throws IOException {_            final XContentType xContentType__            if (resourceName.endsWith(".json")) {_                xContentType = XContentType.JSON__            } else if (resourceName.endsWith(".yml") || resourceName.endsWith(".yaml")) {_                xContentType = XContentType.YAML__            } else {_                throw new IllegalArgumentException("unable to detect content type from resource name [" + resourceName + "]")__            }_            _            try (XContentParser parser =  XContentFactory.xContent(xContentType)_                    .createParser(NamedXContentRegistry.EMPTY, DeprecationHandler.THROW_UNSUPPORTED_OPERATION, is)) {_                if (parser.currentToken() == null) {_                    if (parser.nextToken() == null) {_                        return this_ _                    }_                }_                put(fromXContent(parser, acceptNullValues, true))__            } catch (ElasticsearchParseException e) {_                throw e__            } catch (Exception e) {_                throw new SettingsException("Failed to load settings from [" + resourceName + "]", e)__            } finally {_                IOUtils.close(is)__            }_            return this__        };loads,settings,from,a,stream,that,represents,them,using,link,from,xcontent,xcontent,parser;public,builder,load,from,stream,string,resource,name,input,stream,is,boolean,accept,null,values,throws,ioexception,final,xcontent,type,x,content,type,if,resource,name,ends,with,json,x,content,type,xcontent,type,json,else,if,resource,name,ends,with,yml,resource,name,ends,with,yaml,x,content,type,xcontent,type,yaml,else,throw,new,illegal,argument,exception,unable,to,detect,content,type,from,resource,name,resource,name,try,xcontent,parser,parser,xcontent,factory,x,content,x,content,type,create,parser,named,xcontent,registry,empty,deprecation,handler,is,if,parser,current,token,null,if,parser,next,token,null,return,this,put,from,xcontent,parser,accept,null,values,true,catch,elasticsearch,parse,exception,e,throw,e,catch,exception,e,throw,new,settings,exception,failed,to,load,settings,from,resource,name,e,finally,ioutils,close,is,return,this
Settings -> Builder -> public Builder loadFromStream(String resourceName, InputStream is, boolean acceptNullValues) throws IOException;1546901964;Loads settings from a stream that represents them using {@link #fromXContent(XContentParser)};public Builder loadFromStream(String resourceName, InputStream is, boolean acceptNullValues) throws IOException {_            final XContentType xContentType__            if (resourceName.endsWith(".json")) {_                xContentType = XContentType.JSON__            } else if (resourceName.endsWith(".yml") || resourceName.endsWith(".yaml")) {_                xContentType = XContentType.YAML__            } else {_                throw new IllegalArgumentException("unable to detect content type from resource name [" + resourceName + "]")__            }_            _            try (XContentParser parser =  XContentFactory.xContent(xContentType)_                    .createParser(NamedXContentRegistry.EMPTY, DeprecationHandler.THROW_UNSUPPORTED_OPERATION, is)) {_                if (parser.currentToken() == null) {_                    if (parser.nextToken() == null) {_                        return this_ _                    }_                }_                put(fromXContent(parser, acceptNullValues, true))__            } catch (ElasticsearchParseException e) {_                throw e__            } catch (Exception e) {_                throw new SettingsException("Failed to load settings from [" + resourceName + "]", e)__            } finally {_                IOUtils.close(is)__            }_            return this__        };loads,settings,from,a,stream,that,represents,them,using,link,from,xcontent,xcontent,parser;public,builder,load,from,stream,string,resource,name,input,stream,is,boolean,accept,null,values,throws,ioexception,final,xcontent,type,x,content,type,if,resource,name,ends,with,json,x,content,type,xcontent,type,json,else,if,resource,name,ends,with,yml,resource,name,ends,with,yaml,x,content,type,xcontent,type,yaml,else,throw,new,illegal,argument,exception,unable,to,detect,content,type,from,resource,name,resource,name,try,xcontent,parser,parser,xcontent,factory,x,content,x,content,type,create,parser,named,xcontent,registry,empty,deprecation,handler,is,if,parser,current,token,null,if,parser,next,token,null,return,this,put,from,xcontent,parser,accept,null,values,true,catch,elasticsearch,parse,exception,e,throw,e,catch,exception,e,throw,new,settings,exception,failed,to,load,settings,from,resource,name,e,finally,ioutils,close,is,return,this
Settings -> Builder -> public Builder loadFromStream(String resourceName, InputStream is, boolean acceptNullValues) throws IOException;1547643436;Loads settings from a stream that represents them using {@link #fromXContent(XContentParser)};public Builder loadFromStream(String resourceName, InputStream is, boolean acceptNullValues) throws IOException {_            final XContentType xContentType__            if (resourceName.endsWith(".json")) {_                xContentType = XContentType.JSON__            } else if (resourceName.endsWith(".yml") || resourceName.endsWith(".yaml")) {_                xContentType = XContentType.YAML__            } else {_                throw new IllegalArgumentException("unable to detect content type from resource name [" + resourceName + "]")__            }_            _            try (XContentParser parser =  XContentFactory.xContent(xContentType)_                    .createParser(NamedXContentRegistry.EMPTY, DeprecationHandler.THROW_UNSUPPORTED_OPERATION, is)) {_                if (parser.currentToken() == null) {_                    if (parser.nextToken() == null) {_                        return this_ _                    }_                }_                put(fromXContent(parser, acceptNullValues, true))__            } catch (ElasticsearchParseException e) {_                throw e__            } catch (Exception e) {_                throw new SettingsException("Failed to load settings from [" + resourceName + "]", e)__            } finally {_                IOUtils.close(is)__            }_            return this__        };loads,settings,from,a,stream,that,represents,them,using,link,from,xcontent,xcontent,parser;public,builder,load,from,stream,string,resource,name,input,stream,is,boolean,accept,null,values,throws,ioexception,final,xcontent,type,x,content,type,if,resource,name,ends,with,json,x,content,type,xcontent,type,json,else,if,resource,name,ends,with,yml,resource,name,ends,with,yaml,x,content,type,xcontent,type,yaml,else,throw,new,illegal,argument,exception,unable,to,detect,content,type,from,resource,name,resource,name,try,xcontent,parser,parser,xcontent,factory,x,content,x,content,type,create,parser,named,xcontent,registry,empty,deprecation,handler,is,if,parser,current,token,null,if,parser,next,token,null,return,this,put,from,xcontent,parser,accept,null,values,true,catch,elasticsearch,parse,exception,e,throw,e,catch,exception,e,throw,new,settings,exception,failed,to,load,settings,from,resource,name,e,finally,ioutils,close,is,return,this
Settings -> Builder -> public Builder loadFromStream(String resourceName, InputStream is, boolean acceptNullValues) throws IOException;1548422582;Loads settings from a stream that represents them using {@link #fromXContent(XContentParser)};public Builder loadFromStream(String resourceName, InputStream is, boolean acceptNullValues) throws IOException {_            final XContentType xContentType__            if (resourceName.endsWith(".json")) {_                xContentType = XContentType.JSON__            } else if (resourceName.endsWith(".yml") || resourceName.endsWith(".yaml")) {_                xContentType = XContentType.YAML__            } else {_                throw new IllegalArgumentException("unable to detect content type from resource name [" + resourceName + "]")__            }_            _            try (XContentParser parser =  XContentFactory.xContent(xContentType)_                    .createParser(NamedXContentRegistry.EMPTY, DeprecationHandler.THROW_UNSUPPORTED_OPERATION, is)) {_                if (parser.currentToken() == null) {_                    if (parser.nextToken() == null) {_                        return this_ _                    }_                }_                put(fromXContent(parser, acceptNullValues, true))__            } catch (ElasticsearchParseException e) {_                throw e__            } catch (Exception e) {_                throw new SettingsException("Failed to load settings from [" + resourceName + "]", e)__            } finally {_                IOUtils.close(is)__            }_            return this__        };loads,settings,from,a,stream,that,represents,them,using,link,from,xcontent,xcontent,parser;public,builder,load,from,stream,string,resource,name,input,stream,is,boolean,accept,null,values,throws,ioexception,final,xcontent,type,x,content,type,if,resource,name,ends,with,json,x,content,type,xcontent,type,json,else,if,resource,name,ends,with,yml,resource,name,ends,with,yaml,x,content,type,xcontent,type,yaml,else,throw,new,illegal,argument,exception,unable,to,detect,content,type,from,resource,name,resource,name,try,xcontent,parser,parser,xcontent,factory,x,content,x,content,type,create,parser,named,xcontent,registry,empty,deprecation,handler,is,if,parser,current,token,null,if,parser,next,token,null,return,this,put,from,xcontent,parser,accept,null,values,true,catch,elasticsearch,parse,exception,e,throw,e,catch,exception,e,throw,new,settings,exception,failed,to,load,settings,from,resource,name,e,finally,ioutils,close,is,return,this
Settings -> public Boolean getAsBoolean(String setting, Boolean defaultValue);1524684173;Returns the setting value (as boolean) associated with the setting key. If it does not exists,_returns the default value provided.;public Boolean getAsBoolean(String setting, Boolean defaultValue) {_        return Booleans.parseBoolean(get(setting), defaultValue)__    };returns,the,setting,value,as,boolean,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,boolean,get,as,boolean,string,setting,boolean,default,value,return,booleans,parse,boolean,get,setting,default,value
Settings -> public Boolean getAsBoolean(String setting, Boolean defaultValue);1525334055;Returns the setting value (as boolean) associated with the setting key. If it does not exists,_returns the default value provided.;public Boolean getAsBoolean(String setting, Boolean defaultValue) {_        return Booleans.parseBoolean(get(setting), defaultValue)__    };returns,the,setting,value,as,boolean,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,boolean,get,as,boolean,string,setting,boolean,default,value,return,booleans,parse,boolean,get,setting,default,value
Settings -> public Boolean getAsBoolean(String setting, Boolean defaultValue);1536828374;Returns the setting value (as boolean) associated with the setting key. If it does not exists,_returns the default value provided.;public Boolean getAsBoolean(String setting, Boolean defaultValue) {_        return Booleans.parseBoolean(get(setting), defaultValue)__    };returns,the,setting,value,as,boolean,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,boolean,get,as,boolean,string,setting,boolean,default,value,return,booleans,parse,boolean,get,setting,default,value
Settings -> public Boolean getAsBoolean(String setting, Boolean defaultValue);1539951844;Returns the setting value (as boolean) associated with the setting key. If it does not exists,_returns the default value provided.;public Boolean getAsBoolean(String setting, Boolean defaultValue) {_        return Booleans.parseBoolean(get(setting), defaultValue)__    };returns,the,setting,value,as,boolean,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,boolean,get,as,boolean,string,setting,boolean,default,value,return,booleans,parse,boolean,get,setting,default,value
Settings -> public Boolean getAsBoolean(String setting, Boolean defaultValue);1540486836;Returns the setting value (as boolean) associated with the setting key. If it does not exists,_returns the default value provided.;public Boolean getAsBoolean(String setting, Boolean defaultValue) {_        return Booleans.parseBoolean(get(setting), defaultValue)__    };returns,the,setting,value,as,boolean,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,boolean,get,as,boolean,string,setting,boolean,default,value,return,booleans,parse,boolean,get,setting,default,value
Settings -> public Boolean getAsBoolean(String setting, Boolean defaultValue);1546842892;Returns the setting value (as boolean) associated with the setting key. If it does not exists,_returns the default value provided.;public Boolean getAsBoolean(String setting, Boolean defaultValue) {_        return Booleans.parseBoolean(get(setting), defaultValue)__    };returns,the,setting,value,as,boolean,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,boolean,get,as,boolean,string,setting,boolean,default,value,return,booleans,parse,boolean,get,setting,default,value
Settings -> public Boolean getAsBoolean(String setting, Boolean defaultValue);1546874030;Returns the setting value (as boolean) associated with the setting key. If it does not exists,_returns the default value provided.;public Boolean getAsBoolean(String setting, Boolean defaultValue) {_        return Booleans.parseBoolean(get(setting), defaultValue)__    };returns,the,setting,value,as,boolean,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,boolean,get,as,boolean,string,setting,boolean,default,value,return,booleans,parse,boolean,get,setting,default,value
Settings -> public Boolean getAsBoolean(String setting, Boolean defaultValue);1546901964;Returns the setting value (as boolean) associated with the setting key. If it does not exists,_returns the default value provided.;public Boolean getAsBoolean(String setting, Boolean defaultValue) {_        return Booleans.parseBoolean(get(setting), defaultValue)__    };returns,the,setting,value,as,boolean,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,boolean,get,as,boolean,string,setting,boolean,default,value,return,booleans,parse,boolean,get,setting,default,value
Settings -> public Boolean getAsBoolean(String setting, Boolean defaultValue);1547643436;Returns the setting value (as boolean) associated with the setting key. If it does not exists,_returns the default value provided.;public Boolean getAsBoolean(String setting, Boolean defaultValue) {_        return Booleans.parseBoolean(get(setting), defaultValue)__    };returns,the,setting,value,as,boolean,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,boolean,get,as,boolean,string,setting,boolean,default,value,return,booleans,parse,boolean,get,setting,default,value
Settings -> public Boolean getAsBoolean(String setting, Boolean defaultValue);1548422582;Returns the setting value (as boolean) associated with the setting key. If it does not exists,_returns the default value provided.;public Boolean getAsBoolean(String setting, Boolean defaultValue) {_        return Booleans.parseBoolean(get(setting), defaultValue)__    };returns,the,setting,value,as,boolean,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,boolean,get,as,boolean,string,setting,boolean,default,value,return,booleans,parse,boolean,get,setting,default,value
Settings -> public Map<String, Settings> getGroups(String settingPrefix, boolean ignoreNonGrouped) throws SettingsException;1524684173;Returns group settings for the given setting prefix.;public Map<String, Settings> getGroups(String settingPrefix, boolean ignoreNonGrouped) throws SettingsException {_        if (!Strings.hasLength(settingPrefix)) {_            throw new IllegalArgumentException("illegal setting prefix " + settingPrefix)__        }_        if (settingPrefix.charAt(settingPrefix.length() - 1) != '.') {_            settingPrefix = settingPrefix + "."__        }_        return getGroupsInternal(settingPrefix, ignoreNonGrouped)__    };returns,group,settings,for,the,given,setting,prefix;public,map,string,settings,get,groups,string,setting,prefix,boolean,ignore,non,grouped,throws,settings,exception,if,strings,has,length,setting,prefix,throw,new,illegal,argument,exception,illegal,setting,prefix,setting,prefix,if,setting,prefix,char,at,setting,prefix,length,1,setting,prefix,setting,prefix,return,get,groups,internal,setting,prefix,ignore,non,grouped
Settings -> public Map<String, Settings> getGroups(String settingPrefix, boolean ignoreNonGrouped) throws SettingsException;1525334055;Returns group settings for the given setting prefix.;public Map<String, Settings> getGroups(String settingPrefix, boolean ignoreNonGrouped) throws SettingsException {_        if (!Strings.hasLength(settingPrefix)) {_            throw new IllegalArgumentException("illegal setting prefix " + settingPrefix)__        }_        if (settingPrefix.charAt(settingPrefix.length() - 1) != '.') {_            settingPrefix = settingPrefix + "."__        }_        return getGroupsInternal(settingPrefix, ignoreNonGrouped)__    };returns,group,settings,for,the,given,setting,prefix;public,map,string,settings,get,groups,string,setting,prefix,boolean,ignore,non,grouped,throws,settings,exception,if,strings,has,length,setting,prefix,throw,new,illegal,argument,exception,illegal,setting,prefix,setting,prefix,if,setting,prefix,char,at,setting,prefix,length,1,setting,prefix,setting,prefix,return,get,groups,internal,setting,prefix,ignore,non,grouped
Settings -> public Map<String, Settings> getGroups(String settingPrefix, boolean ignoreNonGrouped) throws SettingsException;1536828374;Returns group settings for the given setting prefix.;public Map<String, Settings> getGroups(String settingPrefix, boolean ignoreNonGrouped) throws SettingsException {_        if (!Strings.hasLength(settingPrefix)) {_            throw new IllegalArgumentException("illegal setting prefix " + settingPrefix)__        }_        if (settingPrefix.charAt(settingPrefix.length() - 1) != '.') {_            settingPrefix = settingPrefix + "."__        }_        return getGroupsInternal(settingPrefix, ignoreNonGrouped)__    };returns,group,settings,for,the,given,setting,prefix;public,map,string,settings,get,groups,string,setting,prefix,boolean,ignore,non,grouped,throws,settings,exception,if,strings,has,length,setting,prefix,throw,new,illegal,argument,exception,illegal,setting,prefix,setting,prefix,if,setting,prefix,char,at,setting,prefix,length,1,setting,prefix,setting,prefix,return,get,groups,internal,setting,prefix,ignore,non,grouped
Settings -> public Map<String, Settings> getGroups(String settingPrefix, boolean ignoreNonGrouped) throws SettingsException;1539951844;Returns group settings for the given setting prefix.;public Map<String, Settings> getGroups(String settingPrefix, boolean ignoreNonGrouped) throws SettingsException {_        if (!Strings.hasLength(settingPrefix)) {_            throw new IllegalArgumentException("illegal setting prefix " + settingPrefix)__        }_        if (settingPrefix.charAt(settingPrefix.length() - 1) != '.') {_            settingPrefix = settingPrefix + "."__        }_        return getGroupsInternal(settingPrefix, ignoreNonGrouped)__    };returns,group,settings,for,the,given,setting,prefix;public,map,string,settings,get,groups,string,setting,prefix,boolean,ignore,non,grouped,throws,settings,exception,if,strings,has,length,setting,prefix,throw,new,illegal,argument,exception,illegal,setting,prefix,setting,prefix,if,setting,prefix,char,at,setting,prefix,length,1,setting,prefix,setting,prefix,return,get,groups,internal,setting,prefix,ignore,non,grouped
Settings -> public Map<String, Settings> getGroups(String settingPrefix, boolean ignoreNonGrouped) throws SettingsException;1540486836;Returns group settings for the given setting prefix.;public Map<String, Settings> getGroups(String settingPrefix, boolean ignoreNonGrouped) throws SettingsException {_        if (!Strings.hasLength(settingPrefix)) {_            throw new IllegalArgumentException("illegal setting prefix " + settingPrefix)__        }_        if (settingPrefix.charAt(settingPrefix.length() - 1) != '.') {_            settingPrefix = settingPrefix + "."__        }_        return getGroupsInternal(settingPrefix, ignoreNonGrouped)__    };returns,group,settings,for,the,given,setting,prefix;public,map,string,settings,get,groups,string,setting,prefix,boolean,ignore,non,grouped,throws,settings,exception,if,strings,has,length,setting,prefix,throw,new,illegal,argument,exception,illegal,setting,prefix,setting,prefix,if,setting,prefix,char,at,setting,prefix,length,1,setting,prefix,setting,prefix,return,get,groups,internal,setting,prefix,ignore,non,grouped
Settings -> public Map<String, Settings> getGroups(String settingPrefix, boolean ignoreNonGrouped) throws SettingsException;1546842892;Returns group settings for the given setting prefix.;public Map<String, Settings> getGroups(String settingPrefix, boolean ignoreNonGrouped) throws SettingsException {_        if (!Strings.hasLength(settingPrefix)) {_            throw new IllegalArgumentException("illegal setting prefix " + settingPrefix)__        }_        if (settingPrefix.charAt(settingPrefix.length() - 1) != '.') {_            settingPrefix = settingPrefix + "."__        }_        return getGroupsInternal(settingPrefix, ignoreNonGrouped)__    };returns,group,settings,for,the,given,setting,prefix;public,map,string,settings,get,groups,string,setting,prefix,boolean,ignore,non,grouped,throws,settings,exception,if,strings,has,length,setting,prefix,throw,new,illegal,argument,exception,illegal,setting,prefix,setting,prefix,if,setting,prefix,char,at,setting,prefix,length,1,setting,prefix,setting,prefix,return,get,groups,internal,setting,prefix,ignore,non,grouped
Settings -> public Map<String, Settings> getGroups(String settingPrefix, boolean ignoreNonGrouped) throws SettingsException;1546874030;Returns group settings for the given setting prefix.;public Map<String, Settings> getGroups(String settingPrefix, boolean ignoreNonGrouped) throws SettingsException {_        if (!Strings.hasLength(settingPrefix)) {_            throw new IllegalArgumentException("illegal setting prefix " + settingPrefix)__        }_        if (settingPrefix.charAt(settingPrefix.length() - 1) != '.') {_            settingPrefix = settingPrefix + "."__        }_        return getGroupsInternal(settingPrefix, ignoreNonGrouped)__    };returns,group,settings,for,the,given,setting,prefix;public,map,string,settings,get,groups,string,setting,prefix,boolean,ignore,non,grouped,throws,settings,exception,if,strings,has,length,setting,prefix,throw,new,illegal,argument,exception,illegal,setting,prefix,setting,prefix,if,setting,prefix,char,at,setting,prefix,length,1,setting,prefix,setting,prefix,return,get,groups,internal,setting,prefix,ignore,non,grouped
Settings -> public Map<String, Settings> getGroups(String settingPrefix, boolean ignoreNonGrouped) throws SettingsException;1546901964;Returns group settings for the given setting prefix.;public Map<String, Settings> getGroups(String settingPrefix, boolean ignoreNonGrouped) throws SettingsException {_        if (!Strings.hasLength(settingPrefix)) {_            throw new IllegalArgumentException("illegal setting prefix " + settingPrefix)__        }_        if (settingPrefix.charAt(settingPrefix.length() - 1) != '.') {_            settingPrefix = settingPrefix + "."__        }_        return getGroupsInternal(settingPrefix, ignoreNonGrouped)__    };returns,group,settings,for,the,given,setting,prefix;public,map,string,settings,get,groups,string,setting,prefix,boolean,ignore,non,grouped,throws,settings,exception,if,strings,has,length,setting,prefix,throw,new,illegal,argument,exception,illegal,setting,prefix,setting,prefix,if,setting,prefix,char,at,setting,prefix,length,1,setting,prefix,setting,prefix,return,get,groups,internal,setting,prefix,ignore,non,grouped
Settings -> public Map<String, Settings> getGroups(String settingPrefix, boolean ignoreNonGrouped) throws SettingsException;1547643436;Returns group settings for the given setting prefix.;public Map<String, Settings> getGroups(String settingPrefix, boolean ignoreNonGrouped) throws SettingsException {_        if (!Strings.hasLength(settingPrefix)) {_            throw new IllegalArgumentException("illegal setting prefix " + settingPrefix)__        }_        if (settingPrefix.charAt(settingPrefix.length() - 1) != '.') {_            settingPrefix = settingPrefix + "."__        }_        return getGroupsInternal(settingPrefix, ignoreNonGrouped)__    };returns,group,settings,for,the,given,setting,prefix;public,map,string,settings,get,groups,string,setting,prefix,boolean,ignore,non,grouped,throws,settings,exception,if,strings,has,length,setting,prefix,throw,new,illegal,argument,exception,illegal,setting,prefix,setting,prefix,if,setting,prefix,char,at,setting,prefix,length,1,setting,prefix,setting,prefix,return,get,groups,internal,setting,prefix,ignore,non,grouped
Settings -> public Map<String, Settings> getGroups(String settingPrefix, boolean ignoreNonGrouped) throws SettingsException;1548422582;Returns group settings for the given setting prefix.;public Map<String, Settings> getGroups(String settingPrefix, boolean ignoreNonGrouped) throws SettingsException {_        if (!Strings.hasLength(settingPrefix)) {_            throw new IllegalArgumentException("illegal setting prefix " + settingPrefix)__        }_        if (settingPrefix.charAt(settingPrefix.length() - 1) != '.') {_            settingPrefix = settingPrefix + "."__        }_        return getGroupsInternal(settingPrefix, ignoreNonGrouped)__    };returns,group,settings,for,the,given,setting,prefix;public,map,string,settings,get,groups,string,setting,prefix,boolean,ignore,non,grouped,throws,settings,exception,if,strings,has,length,setting,prefix,throw,new,illegal,argument,exception,illegal,setting,prefix,setting,prefix,if,setting,prefix,char,at,setting,prefix,length,1,setting,prefix,setting,prefix,return,get,groups,internal,setting,prefix,ignore,non,grouped
Settings -> public RatioValue getAsRatio(String setting, String defaultValue) throws SettingsException;1524684173;Returns the setting value (as a RatioValue) associated with the setting key. Provided values can_either be a percentage value (eg. 23%), or expressed as a floating point number (eg. 0.23). If_it does not exist, parses the default value provided.;public RatioValue getAsRatio(String setting, String defaultValue) throws SettingsException {_        return RatioValue.parseRatioValue(get(setting, defaultValue))__    };returns,the,setting,value,as,a,ratio,value,associated,with,the,setting,key,provided,values,can,either,be,a,percentage,value,eg,23,or,expressed,as,a,floating,point,number,eg,0,23,if,it,does,not,exist,parses,the,default,value,provided;public,ratio,value,get,as,ratio,string,setting,string,default,value,throws,settings,exception,return,ratio,value,parse,ratio,value,get,setting,default,value
Settings -> public RatioValue getAsRatio(String setting, String defaultValue) throws SettingsException;1525334055;Returns the setting value (as a RatioValue) associated with the setting key. Provided values can_either be a percentage value (eg. 23%), or expressed as a floating point number (eg. 0.23). If_it does not exist, parses the default value provided.;public RatioValue getAsRatio(String setting, String defaultValue) throws SettingsException {_        return RatioValue.parseRatioValue(get(setting, defaultValue))__    };returns,the,setting,value,as,a,ratio,value,associated,with,the,setting,key,provided,values,can,either,be,a,percentage,value,eg,23,or,expressed,as,a,floating,point,number,eg,0,23,if,it,does,not,exist,parses,the,default,value,provided;public,ratio,value,get,as,ratio,string,setting,string,default,value,throws,settings,exception,return,ratio,value,parse,ratio,value,get,setting,default,value
Settings -> public RatioValue getAsRatio(String setting, String defaultValue) throws SettingsException;1536828374;Returns the setting value (as a RatioValue) associated with the setting key. Provided values can_either be a percentage value (eg. 23%), or expressed as a floating point number (eg. 0.23). If_it does not exist, parses the default value provided.;public RatioValue getAsRatio(String setting, String defaultValue) throws SettingsException {_        return RatioValue.parseRatioValue(get(setting, defaultValue))__    };returns,the,setting,value,as,a,ratio,value,associated,with,the,setting,key,provided,values,can,either,be,a,percentage,value,eg,23,or,expressed,as,a,floating,point,number,eg,0,23,if,it,does,not,exist,parses,the,default,value,provided;public,ratio,value,get,as,ratio,string,setting,string,default,value,throws,settings,exception,return,ratio,value,parse,ratio,value,get,setting,default,value
Settings -> public RatioValue getAsRatio(String setting, String defaultValue) throws SettingsException;1539951844;Returns the setting value (as a RatioValue) associated with the setting key. Provided values can_either be a percentage value (eg. 23%), or expressed as a floating point number (eg. 0.23). If_it does not exist, parses the default value provided.;public RatioValue getAsRatio(String setting, String defaultValue) throws SettingsException {_        return RatioValue.parseRatioValue(get(setting, defaultValue))__    };returns,the,setting,value,as,a,ratio,value,associated,with,the,setting,key,provided,values,can,either,be,a,percentage,value,eg,23,or,expressed,as,a,floating,point,number,eg,0,23,if,it,does,not,exist,parses,the,default,value,provided;public,ratio,value,get,as,ratio,string,setting,string,default,value,throws,settings,exception,return,ratio,value,parse,ratio,value,get,setting,default,value
Settings -> public RatioValue getAsRatio(String setting, String defaultValue) throws SettingsException;1540486836;Returns the setting value (as a RatioValue) associated with the setting key. Provided values can_either be a percentage value (eg. 23%), or expressed as a floating point number (eg. 0.23). If_it does not exist, parses the default value provided.;public RatioValue getAsRatio(String setting, String defaultValue) throws SettingsException {_        return RatioValue.parseRatioValue(get(setting, defaultValue))__    };returns,the,setting,value,as,a,ratio,value,associated,with,the,setting,key,provided,values,can,either,be,a,percentage,value,eg,23,or,expressed,as,a,floating,point,number,eg,0,23,if,it,does,not,exist,parses,the,default,value,provided;public,ratio,value,get,as,ratio,string,setting,string,default,value,throws,settings,exception,return,ratio,value,parse,ratio,value,get,setting,default,value
Settings -> public RatioValue getAsRatio(String setting, String defaultValue) throws SettingsException;1546842892;Returns the setting value (as a RatioValue) associated with the setting key. Provided values can_either be a percentage value (eg. 23%), or expressed as a floating point number (eg. 0.23). If_it does not exist, parses the default value provided.;public RatioValue getAsRatio(String setting, String defaultValue) throws SettingsException {_        return RatioValue.parseRatioValue(get(setting, defaultValue))__    };returns,the,setting,value,as,a,ratio,value,associated,with,the,setting,key,provided,values,can,either,be,a,percentage,value,eg,23,or,expressed,as,a,floating,point,number,eg,0,23,if,it,does,not,exist,parses,the,default,value,provided;public,ratio,value,get,as,ratio,string,setting,string,default,value,throws,settings,exception,return,ratio,value,parse,ratio,value,get,setting,default,value
Settings -> public RatioValue getAsRatio(String setting, String defaultValue) throws SettingsException;1546874030;Returns the setting value (as a RatioValue) associated with the setting key. Provided values can_either be a percentage value (eg. 23%), or expressed as a floating point number (eg. 0.23). If_it does not exist, parses the default value provided.;public RatioValue getAsRatio(String setting, String defaultValue) throws SettingsException {_        return RatioValue.parseRatioValue(get(setting, defaultValue))__    };returns,the,setting,value,as,a,ratio,value,associated,with,the,setting,key,provided,values,can,either,be,a,percentage,value,eg,23,or,expressed,as,a,floating,point,number,eg,0,23,if,it,does,not,exist,parses,the,default,value,provided;public,ratio,value,get,as,ratio,string,setting,string,default,value,throws,settings,exception,return,ratio,value,parse,ratio,value,get,setting,default,value
Settings -> public RatioValue getAsRatio(String setting, String defaultValue) throws SettingsException;1546901964;Returns the setting value (as a RatioValue) associated with the setting key. Provided values can_either be a percentage value (eg. 23%), or expressed as a floating point number (eg. 0.23). If_it does not exist, parses the default value provided.;public RatioValue getAsRatio(String setting, String defaultValue) throws SettingsException {_        return RatioValue.parseRatioValue(get(setting, defaultValue))__    };returns,the,setting,value,as,a,ratio,value,associated,with,the,setting,key,provided,values,can,either,be,a,percentage,value,eg,23,or,expressed,as,a,floating,point,number,eg,0,23,if,it,does,not,exist,parses,the,default,value,provided;public,ratio,value,get,as,ratio,string,setting,string,default,value,throws,settings,exception,return,ratio,value,parse,ratio,value,get,setting,default,value
Settings -> Builder -> public Builder put(final String key, final TimeValue timeValue);1546842892;Sets a time value setting with the provided setting key and value.__@param key  The setting key_@param timeValue The setting timeValue_@return The builder;public Builder put(final String key, final TimeValue timeValue) {_            return put(key, timeValue.getStringRep())__        };sets,a,time,value,setting,with,the,provided,setting,key,and,value,param,key,the,setting,key,param,time,value,the,setting,time,value,return,the,builder;public,builder,put,final,string,key,final,time,value,time,value,return,put,key,time,value,get,string,rep
Settings -> Builder -> public Builder put(final String key, final TimeValue timeValue);1546874030;Sets a time value setting with the provided setting key and value.__@param key  The setting key_@param timeValue The setting timeValue_@return The builder;public Builder put(final String key, final TimeValue timeValue) {_            return put(key, timeValue.getStringRep())__        };sets,a,time,value,setting,with,the,provided,setting,key,and,value,param,key,the,setting,key,param,time,value,the,setting,time,value,return,the,builder;public,builder,put,final,string,key,final,time,value,time,value,return,put,key,time,value,get,string,rep
Settings -> Builder -> public Builder put(final String key, final TimeValue timeValue);1546901964;Sets a time value setting with the provided setting key and value.__@param key  The setting key_@param timeValue The setting timeValue_@return The builder;public Builder put(final String key, final TimeValue timeValue) {_            return put(key, timeValue.getStringRep())__        };sets,a,time,value,setting,with,the,provided,setting,key,and,value,param,key,the,setting,key,param,time,value,the,setting,time,value,return,the,builder;public,builder,put,final,string,key,final,time,value,time,value,return,put,key,time,value,get,string,rep
Settings -> Builder -> public Builder put(final String key, final TimeValue timeValue);1547643436;Sets a time value setting with the provided setting key and value.__@param key  The setting key_@param timeValue The setting timeValue_@return The builder;public Builder put(final String key, final TimeValue timeValue) {_            return put(key, timeValue.getStringRep())__        };sets,a,time,value,setting,with,the,provided,setting,key,and,value,param,key,the,setting,key,param,time,value,the,setting,time,value,return,the,builder;public,builder,put,final,string,key,final,time,value,time,value,return,put,key,time,value,get,string,rep
Settings -> Builder -> public Builder put(final String key, final TimeValue timeValue);1548422582;Sets a time value setting with the provided setting key and value.__@param key  The setting key_@param timeValue The setting timeValue_@return The builder;public Builder put(final String key, final TimeValue timeValue) {_            return put(key, timeValue.getStringRep())__        };sets,a,time,value,setting,with,the,provided,setting,key,and,value,param,key,the,setting,key,param,time,value,the,setting,time,value,return,the,builder;public,builder,put,final,string,key,final,time,value,time,value,return,put,key,time,value,get,string,rep
Settings -> Builder -> public Builder put(String setting, long value);1524684173;Sets the setting with the provided setting key and the long value.__@param setting The setting key_@param value   The long value_@return The builder;public Builder put(String setting, long value) {_            put(setting, String.valueOf(value))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,long,value,param,setting,the,setting,key,param,value,the,long,value,return,the,builder;public,builder,put,string,setting,long,value,put,setting,string,value,of,value,return,this
Settings -> Builder -> public Builder put(String setting, long value);1525334055;Sets the setting with the provided setting key and the long value.__@param setting The setting key_@param value   The long value_@return The builder;public Builder put(String setting, long value) {_            put(setting, String.valueOf(value))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,long,value,param,setting,the,setting,key,param,value,the,long,value,return,the,builder;public,builder,put,string,setting,long,value,put,setting,string,value,of,value,return,this
Settings -> Builder -> public Builder put(String setting, long value);1536828374;Sets the setting with the provided setting key and the long value.__@param setting The setting key_@param value   The long value_@return The builder;public Builder put(String setting, long value) {_            put(setting, String.valueOf(value))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,long,value,param,setting,the,setting,key,param,value,the,long,value,return,the,builder;public,builder,put,string,setting,long,value,put,setting,string,value,of,value,return,this
Settings -> Builder -> public Builder put(String setting, long value);1539951844;Sets the setting with the provided setting key and the long value.__@param setting The setting key_@param value   The long value_@return The builder;public Builder put(String setting, long value) {_            put(setting, String.valueOf(value))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,long,value,param,setting,the,setting,key,param,value,the,long,value,return,the,builder;public,builder,put,string,setting,long,value,put,setting,string,value,of,value,return,this
Settings -> Builder -> public Builder put(String setting, long value);1540486836;Sets the setting with the provided setting key and the long value.__@param setting The setting key_@param value   The long value_@return The builder;public Builder put(String setting, long value) {_            put(setting, String.valueOf(value))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,long,value,param,setting,the,setting,key,param,value,the,long,value,return,the,builder;public,builder,put,string,setting,long,value,put,setting,string,value,of,value,return,this
Settings -> Builder -> public Builder put(String setting, long value);1546842892;Sets the setting with the provided setting key and the long value.__@param setting The setting key_@param value   The long value_@return The builder;public Builder put(String setting, long value) {_            put(setting, String.valueOf(value))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,long,value,param,setting,the,setting,key,param,value,the,long,value,return,the,builder;public,builder,put,string,setting,long,value,put,setting,string,value,of,value,return,this
Settings -> Builder -> public Builder put(String setting, long value);1546874030;Sets the setting with the provided setting key and the long value.__@param setting The setting key_@param value   The long value_@return The builder;public Builder put(String setting, long value) {_            put(setting, String.valueOf(value))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,long,value,param,setting,the,setting,key,param,value,the,long,value,return,the,builder;public,builder,put,string,setting,long,value,put,setting,string,value,of,value,return,this
Settings -> Builder -> public Builder put(String setting, long value);1546901964;Sets the setting with the provided setting key and the long value.__@param setting The setting key_@param value   The long value_@return The builder;public Builder put(String setting, long value) {_            put(setting, String.valueOf(value))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,long,value,param,setting,the,setting,key,param,value,the,long,value,return,the,builder;public,builder,put,string,setting,long,value,put,setting,string,value,of,value,return,this
Settings -> Builder -> public Builder put(String setting, long value);1547643436;Sets the setting with the provided setting key and the long value.__@param setting The setting key_@param value   The long value_@return The builder;public Builder put(String setting, long value) {_            put(setting, String.valueOf(value))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,long,value,param,setting,the,setting,key,param,value,the,long,value,return,the,builder;public,builder,put,string,setting,long,value,put,setting,string,value,of,value,return,this
Settings -> Builder -> public Builder put(String setting, long value);1548422582;Sets the setting with the provided setting key and the long value.__@param setting The setting key_@param value   The long value_@return The builder;public Builder put(String setting, long value) {_            put(setting, String.valueOf(value))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,long,value,param,setting,the,setting,key,param,value,the,long,value,return,the,builder;public,builder,put,string,setting,long,value,put,setting,string,value,of,value,return,this
Settings -> Builder -> public Builder put(String setting, double value);1524684173;Sets the setting with the provided setting key and the double value.__@param setting The setting key_@param value   The double value_@return The builder;public Builder put(String setting, double value) {_            put(setting, String.valueOf(value))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,double,value,param,setting,the,setting,key,param,value,the,double,value,return,the,builder;public,builder,put,string,setting,double,value,put,setting,string,value,of,value,return,this
Settings -> Builder -> public Builder put(String setting, double value);1525334055;Sets the setting with the provided setting key and the double value.__@param setting The setting key_@param value   The double value_@return The builder;public Builder put(String setting, double value) {_            put(setting, String.valueOf(value))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,double,value,param,setting,the,setting,key,param,value,the,double,value,return,the,builder;public,builder,put,string,setting,double,value,put,setting,string,value,of,value,return,this
Settings -> Builder -> public Builder put(String setting, double value);1536828374;Sets the setting with the provided setting key and the double value.__@param setting The setting key_@param value   The double value_@return The builder;public Builder put(String setting, double value) {_            put(setting, String.valueOf(value))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,double,value,param,setting,the,setting,key,param,value,the,double,value,return,the,builder;public,builder,put,string,setting,double,value,put,setting,string,value,of,value,return,this
Settings -> Builder -> public Builder put(String setting, double value);1539951844;Sets the setting with the provided setting key and the double value.__@param setting The setting key_@param value   The double value_@return The builder;public Builder put(String setting, double value) {_            put(setting, String.valueOf(value))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,double,value,param,setting,the,setting,key,param,value,the,double,value,return,the,builder;public,builder,put,string,setting,double,value,put,setting,string,value,of,value,return,this
Settings -> Builder -> public Builder put(String setting, double value);1540486836;Sets the setting with the provided setting key and the double value.__@param setting The setting key_@param value   The double value_@return The builder;public Builder put(String setting, double value) {_            put(setting, String.valueOf(value))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,double,value,param,setting,the,setting,key,param,value,the,double,value,return,the,builder;public,builder,put,string,setting,double,value,put,setting,string,value,of,value,return,this
Settings -> Builder -> public Builder put(String setting, double value);1546842892;Sets the setting with the provided setting key and the double value.__@param setting The setting key_@param value   The double value_@return The builder;public Builder put(String setting, double value) {_            put(setting, String.valueOf(value))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,double,value,param,setting,the,setting,key,param,value,the,double,value,return,the,builder;public,builder,put,string,setting,double,value,put,setting,string,value,of,value,return,this
Settings -> Builder -> public Builder put(String setting, double value);1546874030;Sets the setting with the provided setting key and the double value.__@param setting The setting key_@param value   The double value_@return The builder;public Builder put(String setting, double value) {_            put(setting, String.valueOf(value))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,double,value,param,setting,the,setting,key,param,value,the,double,value,return,the,builder;public,builder,put,string,setting,double,value,put,setting,string,value,of,value,return,this
Settings -> Builder -> public Builder put(String setting, double value);1546901964;Sets the setting with the provided setting key and the double value.__@param setting The setting key_@param value   The double value_@return The builder;public Builder put(String setting, double value) {_            put(setting, String.valueOf(value))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,double,value,param,setting,the,setting,key,param,value,the,double,value,return,the,builder;public,builder,put,string,setting,double,value,put,setting,string,value,of,value,return,this
Settings -> Builder -> public Builder put(String setting, double value);1547643436;Sets the setting with the provided setting key and the double value.__@param setting The setting key_@param value   The double value_@return The builder;public Builder put(String setting, double value) {_            put(setting, String.valueOf(value))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,double,value,param,setting,the,setting,key,param,value,the,double,value,return,the,builder;public,builder,put,string,setting,double,value,put,setting,string,value,of,value,return,this
Settings -> Builder -> public Builder put(String setting, double value);1548422582;Sets the setting with the provided setting key and the double value.__@param setting The setting key_@param value   The double value_@return The builder;public Builder put(String setting, double value) {_            put(setting, String.valueOf(value))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,double,value,param,setting,the,setting,key,param,value,the,double,value,return,the,builder;public,builder,put,string,setting,double,value,put,setting,string,value,of,value,return,this
Settings -> Builder -> public Builder replacePropertyPlaceholders();1524684173;Runs across all the settings set on this builder and_replaces <tt>${...}</tt> elements in each setting with_another setting already set on this builder.;public Builder replacePropertyPlaceholders() {_            return replacePropertyPlaceholders(System::getenv)__        };runs,across,all,the,settings,set,on,this,builder,and,replaces,tt,tt,elements,in,each,setting,with,another,setting,already,set,on,this,builder;public,builder,replace,property,placeholders,return,replace,property,placeholders,system,getenv
Settings -> Builder -> public Builder replacePropertyPlaceholders();1525334055;Runs across all the settings set on this builder and_replaces {@code ${...}} elements in each setting with_another setting already set on this builder.;public Builder replacePropertyPlaceholders() {_            return replacePropertyPlaceholders(System::getenv)__        };runs,across,all,the,settings,set,on,this,builder,and,replaces,code,elements,in,each,setting,with,another,setting,already,set,on,this,builder;public,builder,replace,property,placeholders,return,replace,property,placeholders,system,getenv
Settings -> Builder -> public Builder replacePropertyPlaceholders();1536828374;Runs across all the settings set on this builder and_replaces {@code ${...}} elements in each setting with_another setting already set on this builder.;public Builder replacePropertyPlaceholders() {_            return replacePropertyPlaceholders(System::getenv)__        };runs,across,all,the,settings,set,on,this,builder,and,replaces,code,elements,in,each,setting,with,another,setting,already,set,on,this,builder;public,builder,replace,property,placeholders,return,replace,property,placeholders,system,getenv
Settings -> Builder -> public Builder replacePropertyPlaceholders();1539951844;Runs across all the settings set on this builder and_replaces {@code ${...}} elements in each setting with_another setting already set on this builder.;public Builder replacePropertyPlaceholders() {_            return replacePropertyPlaceholders(System::getenv)__        };runs,across,all,the,settings,set,on,this,builder,and,replaces,code,elements,in,each,setting,with,another,setting,already,set,on,this,builder;public,builder,replace,property,placeholders,return,replace,property,placeholders,system,getenv
Settings -> Builder -> public Builder replacePropertyPlaceholders();1540486836;Runs across all the settings set on this builder and_replaces {@code ${...}} elements in each setting with_another setting already set on this builder.;public Builder replacePropertyPlaceholders() {_            return replacePropertyPlaceholders(System::getenv)__        };runs,across,all,the,settings,set,on,this,builder,and,replaces,code,elements,in,each,setting,with,another,setting,already,set,on,this,builder;public,builder,replace,property,placeholders,return,replace,property,placeholders,system,getenv
Settings -> Builder -> public Builder replacePropertyPlaceholders();1546842892;Runs across all the settings set on this builder and_replaces {@code ${...}} elements in each setting with_another setting already set on this builder.;public Builder replacePropertyPlaceholders() {_            return replacePropertyPlaceholders(System::getenv)__        };runs,across,all,the,settings,set,on,this,builder,and,replaces,code,elements,in,each,setting,with,another,setting,already,set,on,this,builder;public,builder,replace,property,placeholders,return,replace,property,placeholders,system,getenv
Settings -> Builder -> public Builder replacePropertyPlaceholders();1546874030;Runs across all the settings set on this builder and_replaces {@code ${...}} elements in each setting with_another setting already set on this builder.;public Builder replacePropertyPlaceholders() {_            return replacePropertyPlaceholders(System::getenv)__        };runs,across,all,the,settings,set,on,this,builder,and,replaces,code,elements,in,each,setting,with,another,setting,already,set,on,this,builder;public,builder,replace,property,placeholders,return,replace,property,placeholders,system,getenv
Settings -> Builder -> public Builder replacePropertyPlaceholders();1546901964;Runs across all the settings set on this builder and_replaces {@code ${...}} elements in each setting with_another setting already set on this builder.;public Builder replacePropertyPlaceholders() {_            return replacePropertyPlaceholders(System::getenv)__        };runs,across,all,the,settings,set,on,this,builder,and,replaces,code,elements,in,each,setting,with,another,setting,already,set,on,this,builder;public,builder,replace,property,placeholders,return,replace,property,placeholders,system,getenv
Settings -> Builder -> public Builder replacePropertyPlaceholders();1547643436;Runs across all the settings set on this builder and_replaces {@code ${...}} elements in each setting with_another setting already set on this builder.;public Builder replacePropertyPlaceholders() {_            return replacePropertyPlaceholders(System::getenv)__        };runs,across,all,the,settings,set,on,this,builder,and,replaces,code,elements,in,each,setting,with,another,setting,already,set,on,this,builder;public,builder,replace,property,placeholders,return,replace,property,placeholders,system,getenv
Settings -> Builder -> public Builder replacePropertyPlaceholders();1548422582;Runs across all the settings set on this builder and_replaces {@code ${...}} elements in each setting with_another setting already set on this builder.;public Builder replacePropertyPlaceholders() {_            return replacePropertyPlaceholders(System::getenv)__        };runs,across,all,the,settings,set,on,this,builder,and,replaces,code,elements,in,each,setting,with,another,setting,already,set,on,this,builder;public,builder,replace,property,placeholders,return,replace,property,placeholders,system,getenv
Settings -> public Settings filter(Predicate<String> predicate);1524684173;Returns a new settings object that contains all setting of the current one filtered by the given settings key predicate.;public Settings filter(Predicate<String> predicate) {_        return new Settings(new FilteredMap(this.settings, predicate, null), secureSettings == null ? null :_            new PrefixedSecureSettings(secureSettings, "", predicate))__    };returns,a,new,settings,object,that,contains,all,setting,of,the,current,one,filtered,by,the,given,settings,key,predicate;public,settings,filter,predicate,string,predicate,return,new,settings,new,filtered,map,this,settings,predicate,null,secure,settings,null,null,new,prefixed,secure,settings,secure,settings,predicate
Settings -> public Settings filter(Predicate<String> predicate);1525334055;Returns a new settings object that contains all setting of the current one filtered by the given settings key predicate.;public Settings filter(Predicate<String> predicate) {_        return new Settings(new FilteredMap(this.settings, predicate, null), secureSettings == null ? null :_            new PrefixedSecureSettings(secureSettings, "", predicate))__    };returns,a,new,settings,object,that,contains,all,setting,of,the,current,one,filtered,by,the,given,settings,key,predicate;public,settings,filter,predicate,string,predicate,return,new,settings,new,filtered,map,this,settings,predicate,null,secure,settings,null,null,new,prefixed,secure,settings,secure,settings,predicate
Settings -> public Settings filter(Predicate<String> predicate);1536828374;Returns a new settings object that contains all setting of the current one filtered by the given settings key predicate.;public Settings filter(Predicate<String> predicate) {_        return new Settings(new FilteredMap(this.settings, predicate, null), secureSettings == null ? null :_            new PrefixedSecureSettings(secureSettings, "", predicate))__    };returns,a,new,settings,object,that,contains,all,setting,of,the,current,one,filtered,by,the,given,settings,key,predicate;public,settings,filter,predicate,string,predicate,return,new,settings,new,filtered,map,this,settings,predicate,null,secure,settings,null,null,new,prefixed,secure,settings,secure,settings,predicate
Settings -> public Settings filter(Predicate<String> predicate);1539951844;Returns a new settings object that contains all setting of the current one filtered by the given settings key predicate.;public Settings filter(Predicate<String> predicate) {_        return new Settings(new FilteredMap(this.settings, predicate, null), secureSettings == null ? null :_            new PrefixedSecureSettings(secureSettings, "", predicate))__    };returns,a,new,settings,object,that,contains,all,setting,of,the,current,one,filtered,by,the,given,settings,key,predicate;public,settings,filter,predicate,string,predicate,return,new,settings,new,filtered,map,this,settings,predicate,null,secure,settings,null,null,new,prefixed,secure,settings,secure,settings,predicate
Settings -> public Settings filter(Predicate<String> predicate);1540486836;Returns a new settings object that contains all setting of the current one filtered by the given settings key predicate.;public Settings filter(Predicate<String> predicate) {_        return new Settings(new FilteredMap(this.settings, predicate, null), secureSettings == null ? null :_            new PrefixedSecureSettings(secureSettings, "", predicate))__    };returns,a,new,settings,object,that,contains,all,setting,of,the,current,one,filtered,by,the,given,settings,key,predicate;public,settings,filter,predicate,string,predicate,return,new,settings,new,filtered,map,this,settings,predicate,null,secure,settings,null,null,new,prefixed,secure,settings,secure,settings,predicate
Settings -> public Settings filter(Predicate<String> predicate);1546842892;Returns a new settings object that contains all setting of the current one filtered by the given settings key predicate.;public Settings filter(Predicate<String> predicate) {_        return new Settings(new FilteredMap(this.settings, predicate, null), secureSettings == null ? null :_            new PrefixedSecureSettings(secureSettings, "", predicate))__    };returns,a,new,settings,object,that,contains,all,setting,of,the,current,one,filtered,by,the,given,settings,key,predicate;public,settings,filter,predicate,string,predicate,return,new,settings,new,filtered,map,this,settings,predicate,null,secure,settings,null,null,new,prefixed,secure,settings,secure,settings,predicate
Settings -> public Settings filter(Predicate<String> predicate);1546874030;Returns a new settings object that contains all setting of the current one filtered by the given settings key predicate.;public Settings filter(Predicate<String> predicate) {_        return new Settings(new FilteredMap(this.settings, predicate, null), secureSettings == null ? null :_            new PrefixedSecureSettings(secureSettings, "", predicate))__    };returns,a,new,settings,object,that,contains,all,setting,of,the,current,one,filtered,by,the,given,settings,key,predicate;public,settings,filter,predicate,string,predicate,return,new,settings,new,filtered,map,this,settings,predicate,null,secure,settings,null,null,new,prefixed,secure,settings,secure,settings,predicate
Settings -> public Settings filter(Predicate<String> predicate);1546901964;Returns a new settings object that contains all setting of the current one filtered by the given settings key predicate.;public Settings filter(Predicate<String> predicate) {_        return new Settings(new FilteredMap(this.settings, predicate, null), secureSettings == null ? null :_            new PrefixedSecureSettings(secureSettings, "", predicate))__    };returns,a,new,settings,object,that,contains,all,setting,of,the,current,one,filtered,by,the,given,settings,key,predicate;public,settings,filter,predicate,string,predicate,return,new,settings,new,filtered,map,this,settings,predicate,null,secure,settings,null,null,new,prefixed,secure,settings,secure,settings,predicate
Settings -> public Settings filter(Predicate<String> predicate);1547643436;Returns a new settings object that contains all setting of the current one filtered by the given settings key predicate.;public Settings filter(Predicate<String> predicate) {_        return new Settings(new FilteredMap(this.settings, predicate, null), secureSettings == null ? null :_            new PrefixedSecureSettings(secureSettings, "", predicate))__    };returns,a,new,settings,object,that,contains,all,setting,of,the,current,one,filtered,by,the,given,settings,key,predicate;public,settings,filter,predicate,string,predicate,return,new,settings,new,filtered,map,this,settings,predicate,null,secure,settings,null,null,new,prefixed,secure,settings,secure,settings,predicate
Settings -> public Settings filter(Predicate<String> predicate);1548422582;Returns a new settings object that contains all setting of the current one filtered by the given settings key predicate.;public Settings filter(Predicate<String> predicate) {_        return new Settings(new FilteredMap(this.settings, predicate, null), secureSettings == null ? null :_            new PrefixedSecureSettings(secureSettings, "", predicate))__    };returns,a,new,settings,object,that,contains,all,setting,of,the,current,one,filtered,by,the,given,settings,key,predicate;public,settings,filter,predicate,string,predicate,return,new,settings,new,filtered,map,this,settings,predicate,null,secure,settings,null,null,new,prefixed,secure,settings,secure,settings,predicate
Settings -> public static Settings fromXContent(XContentParser parser) throws IOException;1524684173;Parsers the generated xcontent from {@link Settings#toXContent(XContentBuilder, Params)} into a new Settings object._Note this method requires the parser to either be positioned on a null token or on_{@link org.elasticsearch.common.xcontent.XContentParser.Token#START_OBJECT}.;public static Settings fromXContent(XContentParser parser) throws IOException {_        return fromXContent(parser, true, false)__    };parsers,the,generated,xcontent,from,link,settings,to,xcontent,xcontent,builder,params,into,a,new,settings,object,note,this,method,requires,the,parser,to,either,be,positioned,on,a,null,token,or,on,link,org,elasticsearch,common,xcontent,xcontent,parser,token;public,static,settings,from,xcontent,xcontent,parser,parser,throws,ioexception,return,from,xcontent,parser,true,false
Settings -> public static Settings fromXContent(XContentParser parser) throws IOException;1525334055;Parsers the generated xcontent from {@link Settings#toXContent(XContentBuilder, Params)} into a new Settings object._Note this method requires the parser to either be positioned on a null token or on_{@link org.elasticsearch.common.xcontent.XContentParser.Token#START_OBJECT}.;public static Settings fromXContent(XContentParser parser) throws IOException {_        return fromXContent(parser, true, false)__    };parsers,the,generated,xcontent,from,link,settings,to,xcontent,xcontent,builder,params,into,a,new,settings,object,note,this,method,requires,the,parser,to,either,be,positioned,on,a,null,token,or,on,link,org,elasticsearch,common,xcontent,xcontent,parser,token;public,static,settings,from,xcontent,xcontent,parser,parser,throws,ioexception,return,from,xcontent,parser,true,false
Settings -> public static Settings fromXContent(XContentParser parser) throws IOException;1536828374;Parsers the generated xcontent from {@link Settings#toXContent(XContentBuilder, Params)} into a new Settings object._Note this method requires the parser to either be positioned on a null token or on_{@link org.elasticsearch.common.xcontent.XContentParser.Token#START_OBJECT}.;public static Settings fromXContent(XContentParser parser) throws IOException {_        return fromXContent(parser, true, false)__    };parsers,the,generated,xcontent,from,link,settings,to,xcontent,xcontent,builder,params,into,a,new,settings,object,note,this,method,requires,the,parser,to,either,be,positioned,on,a,null,token,or,on,link,org,elasticsearch,common,xcontent,xcontent,parser,token;public,static,settings,from,xcontent,xcontent,parser,parser,throws,ioexception,return,from,xcontent,parser,true,false
Settings -> public static Settings fromXContent(XContentParser parser) throws IOException;1539951844;Parsers the generated xcontent from {@link Settings#toXContent(XContentBuilder, Params)} into a new Settings object._Note this method requires the parser to either be positioned on a null token or on_{@link org.elasticsearch.common.xcontent.XContentParser.Token#START_OBJECT}.;public static Settings fromXContent(XContentParser parser) throws IOException {_        return fromXContent(parser, true, false)__    };parsers,the,generated,xcontent,from,link,settings,to,xcontent,xcontent,builder,params,into,a,new,settings,object,note,this,method,requires,the,parser,to,either,be,positioned,on,a,null,token,or,on,link,org,elasticsearch,common,xcontent,xcontent,parser,token;public,static,settings,from,xcontent,xcontent,parser,parser,throws,ioexception,return,from,xcontent,parser,true,false
Settings -> public static Settings fromXContent(XContentParser parser) throws IOException;1540486836;Parsers the generated xcontent from {@link Settings#toXContent(XContentBuilder, Params)} into a new Settings object._Note this method requires the parser to either be positioned on a null token or on_{@link org.elasticsearch.common.xcontent.XContentParser.Token#START_OBJECT}.;public static Settings fromXContent(XContentParser parser) throws IOException {_        return fromXContent(parser, true, false)__    };parsers,the,generated,xcontent,from,link,settings,to,xcontent,xcontent,builder,params,into,a,new,settings,object,note,this,method,requires,the,parser,to,either,be,positioned,on,a,null,token,or,on,link,org,elasticsearch,common,xcontent,xcontent,parser,token;public,static,settings,from,xcontent,xcontent,parser,parser,throws,ioexception,return,from,xcontent,parser,true,false
Settings -> public static Settings fromXContent(XContentParser parser) throws IOException;1546842892;Parsers the generated xcontent from {@link Settings#toXContent(XContentBuilder, Params)} into a new Settings object._Note this method requires the parser to either be positioned on a null token or on_{@link org.elasticsearch.common.xcontent.XContentParser.Token#START_OBJECT}.;public static Settings fromXContent(XContentParser parser) throws IOException {_        return fromXContent(parser, true, false)__    };parsers,the,generated,xcontent,from,link,settings,to,xcontent,xcontent,builder,params,into,a,new,settings,object,note,this,method,requires,the,parser,to,either,be,positioned,on,a,null,token,or,on,link,org,elasticsearch,common,xcontent,xcontent,parser,token;public,static,settings,from,xcontent,xcontent,parser,parser,throws,ioexception,return,from,xcontent,parser,true,false
Settings -> public static Settings fromXContent(XContentParser parser) throws IOException;1546874030;Parsers the generated xcontent from {@link Settings#toXContent(XContentBuilder, Params)} into a new Settings object._Note this method requires the parser to either be positioned on a null token or on_{@link org.elasticsearch.common.xcontent.XContentParser.Token#START_OBJECT}.;public static Settings fromXContent(XContentParser parser) throws IOException {_        return fromXContent(parser, true, false)__    };parsers,the,generated,xcontent,from,link,settings,to,xcontent,xcontent,builder,params,into,a,new,settings,object,note,this,method,requires,the,parser,to,either,be,positioned,on,a,null,token,or,on,link,org,elasticsearch,common,xcontent,xcontent,parser,token;public,static,settings,from,xcontent,xcontent,parser,parser,throws,ioexception,return,from,xcontent,parser,true,false
Settings -> public static Settings fromXContent(XContentParser parser) throws IOException;1546901964;Parsers the generated xcontent from {@link Settings#toXContent(XContentBuilder, Params)} into a new Settings object._Note this method requires the parser to either be positioned on a null token or on_{@link org.elasticsearch.common.xcontent.XContentParser.Token#START_OBJECT}.;public static Settings fromXContent(XContentParser parser) throws IOException {_        return fromXContent(parser, true, false)__    };parsers,the,generated,xcontent,from,link,settings,to,xcontent,xcontent,builder,params,into,a,new,settings,object,note,this,method,requires,the,parser,to,either,be,positioned,on,a,null,token,or,on,link,org,elasticsearch,common,xcontent,xcontent,parser,token;public,static,settings,from,xcontent,xcontent,parser,parser,throws,ioexception,return,from,xcontent,parser,true,false
Settings -> public static Settings fromXContent(XContentParser parser) throws IOException;1547643436;Parsers the generated xcontent from {@link Settings#toXContent(XContentBuilder, Params)} into a new Settings object._Note this method requires the parser to either be positioned on a null token or on_{@link org.elasticsearch.common.xcontent.XContentParser.Token#START_OBJECT}.;public static Settings fromXContent(XContentParser parser) throws IOException {_        return fromXContent(parser, true, false)__    };parsers,the,generated,xcontent,from,link,settings,to,xcontent,xcontent,builder,params,into,a,new,settings,object,note,this,method,requires,the,parser,to,either,be,positioned,on,a,null,token,or,on,link,org,elasticsearch,common,xcontent,xcontent,parser,token;public,static,settings,from,xcontent,xcontent,parser,parser,throws,ioexception,return,from,xcontent,parser,true,false
Settings -> public static Settings fromXContent(XContentParser parser) throws IOException;1548422582;Parsers the generated xcontent from {@link Settings#toXContent(XContentBuilder, Params)} into a new Settings object._Note this method requires the parser to either be positioned on a null token or on_{@link org.elasticsearch.common.xcontent.XContentParser.Token#START_OBJECT}.;public static Settings fromXContent(XContentParser parser) throws IOException {_        return fromXContent(parser, true, false)__    };parsers,the,generated,xcontent,from,link,settings,to,xcontent,xcontent,builder,params,into,a,new,settings,object,note,this,method,requires,the,parser,to,either,be,positioned,on,a,null,token,or,on,link,org,elasticsearch,common,xcontent,xcontent,parser,token;public,static,settings,from,xcontent,xcontent,parser,parser,throws,ioexception,return,from,xcontent,parser,true,false
Settings -> Builder -> public Builder loadFromPath(Path path) throws IOException;1524684173;Loads settings from a url that represents them using {@link #fromXContent(XContentParser)}_Note: Loading from a path doesn't allow <code>null</code> values in the incoming xcontent;public Builder loadFromPath(Path path) throws IOException {_            _            return loadFromStream(path.getFileName().toString(), Files.newInputStream(path), false)__        };loads,settings,from,a,url,that,represents,them,using,link,from,xcontent,xcontent,parser,note,loading,from,a,path,doesn,t,allow,code,null,code,values,in,the,incoming,xcontent;public,builder,load,from,path,path,path,throws,ioexception,return,load,from,stream,path,get,file,name,to,string,files,new,input,stream,path,false
Settings -> Builder -> public Builder loadFromPath(Path path) throws IOException;1525334055;Loads settings from a url that represents them using {@link #fromXContent(XContentParser)}_Note: Loading from a path doesn't allow <code>null</code> values in the incoming xcontent;public Builder loadFromPath(Path path) throws IOException {_            _            return loadFromStream(path.getFileName().toString(), Files.newInputStream(path), false)__        };loads,settings,from,a,url,that,represents,them,using,link,from,xcontent,xcontent,parser,note,loading,from,a,path,doesn,t,allow,code,null,code,values,in,the,incoming,xcontent;public,builder,load,from,path,path,path,throws,ioexception,return,load,from,stream,path,get,file,name,to,string,files,new,input,stream,path,false
Settings -> Builder -> public Builder loadFromPath(Path path) throws IOException;1536828374;Loads settings from a url that represents them using {@link #fromXContent(XContentParser)}_Note: Loading from a path doesn't allow <code>null</code> values in the incoming xcontent;public Builder loadFromPath(Path path) throws IOException {_            _            return loadFromStream(path.getFileName().toString(), Files.newInputStream(path), false)__        };loads,settings,from,a,url,that,represents,them,using,link,from,xcontent,xcontent,parser,note,loading,from,a,path,doesn,t,allow,code,null,code,values,in,the,incoming,xcontent;public,builder,load,from,path,path,path,throws,ioexception,return,load,from,stream,path,get,file,name,to,string,files,new,input,stream,path,false
Settings -> Builder -> public Builder loadFromPath(Path path) throws IOException;1539951844;Loads settings from a url that represents them using {@link #fromXContent(XContentParser)}_Note: Loading from a path doesn't allow <code>null</code> values in the incoming xcontent;public Builder loadFromPath(Path path) throws IOException {_            _            return loadFromStream(path.getFileName().toString(), Files.newInputStream(path), false)__        };loads,settings,from,a,url,that,represents,them,using,link,from,xcontent,xcontent,parser,note,loading,from,a,path,doesn,t,allow,code,null,code,values,in,the,incoming,xcontent;public,builder,load,from,path,path,path,throws,ioexception,return,load,from,stream,path,get,file,name,to,string,files,new,input,stream,path,false
Settings -> Builder -> public Builder loadFromPath(Path path) throws IOException;1540486836;Loads settings from a url that represents them using {@link #fromXContent(XContentParser)}_Note: Loading from a path doesn't allow <code>null</code> values in the incoming xcontent;public Builder loadFromPath(Path path) throws IOException {_            _            return loadFromStream(path.getFileName().toString(), Files.newInputStream(path), false)__        };loads,settings,from,a,url,that,represents,them,using,link,from,xcontent,xcontent,parser,note,loading,from,a,path,doesn,t,allow,code,null,code,values,in,the,incoming,xcontent;public,builder,load,from,path,path,path,throws,ioexception,return,load,from,stream,path,get,file,name,to,string,files,new,input,stream,path,false
Settings -> Builder -> public Builder loadFromPath(Path path) throws IOException;1546842892;Loads settings from a url that represents them using {@link #fromXContent(XContentParser)}_Note: Loading from a path doesn't allow <code>null</code> values in the incoming xcontent;public Builder loadFromPath(Path path) throws IOException {_            _            return loadFromStream(path.getFileName().toString(), Files.newInputStream(path), false)__        };loads,settings,from,a,url,that,represents,them,using,link,from,xcontent,xcontent,parser,note,loading,from,a,path,doesn,t,allow,code,null,code,values,in,the,incoming,xcontent;public,builder,load,from,path,path,path,throws,ioexception,return,load,from,stream,path,get,file,name,to,string,files,new,input,stream,path,false
Settings -> Builder -> public Builder loadFromPath(Path path) throws IOException;1546874030;Loads settings from a url that represents them using {@link #fromXContent(XContentParser)}_Note: Loading from a path doesn't allow <code>null</code> values in the incoming xcontent;public Builder loadFromPath(Path path) throws IOException {_            _            return loadFromStream(path.getFileName().toString(), Files.newInputStream(path), false)__        };loads,settings,from,a,url,that,represents,them,using,link,from,xcontent,xcontent,parser,note,loading,from,a,path,doesn,t,allow,code,null,code,values,in,the,incoming,xcontent;public,builder,load,from,path,path,path,throws,ioexception,return,load,from,stream,path,get,file,name,to,string,files,new,input,stream,path,false
Settings -> Builder -> public Builder loadFromPath(Path path) throws IOException;1546901964;Loads settings from a url that represents them using {@link #fromXContent(XContentParser)}_Note: Loading from a path doesn't allow <code>null</code> values in the incoming xcontent;public Builder loadFromPath(Path path) throws IOException {_            _            return loadFromStream(path.getFileName().toString(), Files.newInputStream(path), false)__        };loads,settings,from,a,url,that,represents,them,using,link,from,xcontent,xcontent,parser,note,loading,from,a,path,doesn,t,allow,code,null,code,values,in,the,incoming,xcontent;public,builder,load,from,path,path,path,throws,ioexception,return,load,from,stream,path,get,file,name,to,string,files,new,input,stream,path,false
Settings -> Builder -> public Builder loadFromPath(Path path) throws IOException;1547643436;Loads settings from a url that represents them using {@link #fromXContent(XContentParser)}_Note: Loading from a path doesn't allow <code>null</code> values in the incoming xcontent;public Builder loadFromPath(Path path) throws IOException {_            _            return loadFromStream(path.getFileName().toString(), Files.newInputStream(path), false)__        };loads,settings,from,a,url,that,represents,them,using,link,from,xcontent,xcontent,parser,note,loading,from,a,path,doesn,t,allow,code,null,code,values,in,the,incoming,xcontent;public,builder,load,from,path,path,path,throws,ioexception,return,load,from,stream,path,get,file,name,to,string,files,new,input,stream,path,false
Settings -> Builder -> public Builder loadFromPath(Path path) throws IOException;1548422582;Loads settings from a url that represents them using {@link #fromXContent(XContentParser)}_Note: Loading from a path doesn't allow <code>null</code> values in the incoming xcontent;public Builder loadFromPath(Path path) throws IOException {_            _            return loadFromStream(path.getFileName().toString(), Files.newInputStream(path), false)__        };loads,settings,from,a,url,that,represents,them,using,link,from,xcontent,xcontent,parser,note,loading,from,a,path,doesn,t,allow,code,null,code,values,in,the,incoming,xcontent;public,builder,load,from,path,path,path,throws,ioexception,return,load,from,stream,path,get,file,name,to,string,files,new,input,stream,path,false
Settings -> public ByteSizeValue getAsMemory(String setting, String defaultValue) throws SettingsException;1524684173;Returns the setting value (as size) associated with the setting key. Provided values can either be_absolute values (interpreted as a number of bytes), byte sizes (eg. 1mb) or percentage of the heap size_(eg. 12%). If it does not exists, parses the default value provided.;public ByteSizeValue getAsMemory(String setting, String defaultValue) throws SettingsException {_        return MemorySizeValue.parseBytesSizeValueOrHeapRatio(get(setting, defaultValue), setting)__    };returns,the,setting,value,as,size,associated,with,the,setting,key,provided,values,can,either,be,absolute,values,interpreted,as,a,number,of,bytes,byte,sizes,eg,1mb,or,percentage,of,the,heap,size,eg,12,if,it,does,not,exists,parses,the,default,value,provided;public,byte,size,value,get,as,memory,string,setting,string,default,value,throws,settings,exception,return,memory,size,value,parse,bytes,size,value,or,heap,ratio,get,setting,default,value,setting
Settings -> public ByteSizeValue getAsMemory(String setting, String defaultValue) throws SettingsException;1525334055;Returns the setting value (as size) associated with the setting key. Provided values can either be_absolute values (interpreted as a number of bytes), byte sizes (eg. 1mb) or percentage of the heap size_(eg. 12%). If it does not exists, parses the default value provided.;public ByteSizeValue getAsMemory(String setting, String defaultValue) throws SettingsException {_        return MemorySizeValue.parseBytesSizeValueOrHeapRatio(get(setting, defaultValue), setting)__    };returns,the,setting,value,as,size,associated,with,the,setting,key,provided,values,can,either,be,absolute,values,interpreted,as,a,number,of,bytes,byte,sizes,eg,1mb,or,percentage,of,the,heap,size,eg,12,if,it,does,not,exists,parses,the,default,value,provided;public,byte,size,value,get,as,memory,string,setting,string,default,value,throws,settings,exception,return,memory,size,value,parse,bytes,size,value,or,heap,ratio,get,setting,default,value,setting
Settings -> public ByteSizeValue getAsMemory(String setting, String defaultValue) throws SettingsException;1536828374;Returns the setting value (as size) associated with the setting key. Provided values can either be_absolute values (interpreted as a number of bytes), byte sizes (eg. 1mb) or percentage of the heap size_(eg. 12%). If it does not exists, parses the default value provided.;public ByteSizeValue getAsMemory(String setting, String defaultValue) throws SettingsException {_        return MemorySizeValue.parseBytesSizeValueOrHeapRatio(get(setting, defaultValue), setting)__    };returns,the,setting,value,as,size,associated,with,the,setting,key,provided,values,can,either,be,absolute,values,interpreted,as,a,number,of,bytes,byte,sizes,eg,1mb,or,percentage,of,the,heap,size,eg,12,if,it,does,not,exists,parses,the,default,value,provided;public,byte,size,value,get,as,memory,string,setting,string,default,value,throws,settings,exception,return,memory,size,value,parse,bytes,size,value,or,heap,ratio,get,setting,default,value,setting
Settings -> public ByteSizeValue getAsMemory(String setting, String defaultValue) throws SettingsException;1539951844;Returns the setting value (as size) associated with the setting key. Provided values can either be_absolute values (interpreted as a number of bytes), byte sizes (eg. 1mb) or percentage of the heap size_(eg. 12%). If it does not exists, parses the default value provided.;public ByteSizeValue getAsMemory(String setting, String defaultValue) throws SettingsException {_        return MemorySizeValue.parseBytesSizeValueOrHeapRatio(get(setting, defaultValue), setting)__    };returns,the,setting,value,as,size,associated,with,the,setting,key,provided,values,can,either,be,absolute,values,interpreted,as,a,number,of,bytes,byte,sizes,eg,1mb,or,percentage,of,the,heap,size,eg,12,if,it,does,not,exists,parses,the,default,value,provided;public,byte,size,value,get,as,memory,string,setting,string,default,value,throws,settings,exception,return,memory,size,value,parse,bytes,size,value,or,heap,ratio,get,setting,default,value,setting
Settings -> public ByteSizeValue getAsMemory(String setting, String defaultValue) throws SettingsException;1540486836;Returns the setting value (as size) associated with the setting key. Provided values can either be_absolute values (interpreted as a number of bytes), byte sizes (eg. 1mb) or percentage of the heap size_(eg. 12%). If it does not exists, parses the default value provided.;public ByteSizeValue getAsMemory(String setting, String defaultValue) throws SettingsException {_        return MemorySizeValue.parseBytesSizeValueOrHeapRatio(get(setting, defaultValue), setting)__    };returns,the,setting,value,as,size,associated,with,the,setting,key,provided,values,can,either,be,absolute,values,interpreted,as,a,number,of,bytes,byte,sizes,eg,1mb,or,percentage,of,the,heap,size,eg,12,if,it,does,not,exists,parses,the,default,value,provided;public,byte,size,value,get,as,memory,string,setting,string,default,value,throws,settings,exception,return,memory,size,value,parse,bytes,size,value,or,heap,ratio,get,setting,default,value,setting
Settings -> public ByteSizeValue getAsMemory(String setting, String defaultValue) throws SettingsException;1546842892;Returns the setting value (as size) associated with the setting key. Provided values can either be_absolute values (interpreted as a number of bytes), byte sizes (eg. 1mb) or percentage of the heap size_(eg. 12%). If it does not exists, parses the default value provided.;public ByteSizeValue getAsMemory(String setting, String defaultValue) throws SettingsException {_        return MemorySizeValue.parseBytesSizeValueOrHeapRatio(get(setting, defaultValue), setting)__    };returns,the,setting,value,as,size,associated,with,the,setting,key,provided,values,can,either,be,absolute,values,interpreted,as,a,number,of,bytes,byte,sizes,eg,1mb,or,percentage,of,the,heap,size,eg,12,if,it,does,not,exists,parses,the,default,value,provided;public,byte,size,value,get,as,memory,string,setting,string,default,value,throws,settings,exception,return,memory,size,value,parse,bytes,size,value,or,heap,ratio,get,setting,default,value,setting
Settings -> public ByteSizeValue getAsMemory(String setting, String defaultValue) throws SettingsException;1546874030;Returns the setting value (as size) associated with the setting key. Provided values can either be_absolute values (interpreted as a number of bytes), byte sizes (eg. 1mb) or percentage of the heap size_(eg. 12%). If it does not exists, parses the default value provided.;public ByteSizeValue getAsMemory(String setting, String defaultValue) throws SettingsException {_        return MemorySizeValue.parseBytesSizeValueOrHeapRatio(get(setting, defaultValue), setting)__    };returns,the,setting,value,as,size,associated,with,the,setting,key,provided,values,can,either,be,absolute,values,interpreted,as,a,number,of,bytes,byte,sizes,eg,1mb,or,percentage,of,the,heap,size,eg,12,if,it,does,not,exists,parses,the,default,value,provided;public,byte,size,value,get,as,memory,string,setting,string,default,value,throws,settings,exception,return,memory,size,value,parse,bytes,size,value,or,heap,ratio,get,setting,default,value,setting
Settings -> public ByteSizeValue getAsMemory(String setting, String defaultValue) throws SettingsException;1546901964;Returns the setting value (as size) associated with the setting key. Provided values can either be_absolute values (interpreted as a number of bytes), byte sizes (eg. 1mb) or percentage of the heap size_(eg. 12%). If it does not exists, parses the default value provided.;public ByteSizeValue getAsMemory(String setting, String defaultValue) throws SettingsException {_        return MemorySizeValue.parseBytesSizeValueOrHeapRatio(get(setting, defaultValue), setting)__    };returns,the,setting,value,as,size,associated,with,the,setting,key,provided,values,can,either,be,absolute,values,interpreted,as,a,number,of,bytes,byte,sizes,eg,1mb,or,percentage,of,the,heap,size,eg,12,if,it,does,not,exists,parses,the,default,value,provided;public,byte,size,value,get,as,memory,string,setting,string,default,value,throws,settings,exception,return,memory,size,value,parse,bytes,size,value,or,heap,ratio,get,setting,default,value,setting
Settings -> public ByteSizeValue getAsMemory(String setting, String defaultValue) throws SettingsException;1547643436;Returns the setting value (as size) associated with the setting key. Provided values can either be_absolute values (interpreted as a number of bytes), byte sizes (eg. 1mb) or percentage of the heap size_(eg. 12%). If it does not exists, parses the default value provided.;public ByteSizeValue getAsMemory(String setting, String defaultValue) throws SettingsException {_        return MemorySizeValue.parseBytesSizeValueOrHeapRatio(get(setting, defaultValue), setting)__    };returns,the,setting,value,as,size,associated,with,the,setting,key,provided,values,can,either,be,absolute,values,interpreted,as,a,number,of,bytes,byte,sizes,eg,1mb,or,percentage,of,the,heap,size,eg,12,if,it,does,not,exists,parses,the,default,value,provided;public,byte,size,value,get,as,memory,string,setting,string,default,value,throws,settings,exception,return,memory,size,value,parse,bytes,size,value,or,heap,ratio,get,setting,default,value,setting
Settings -> public ByteSizeValue getAsMemory(String setting, String defaultValue) throws SettingsException;1548422582;Returns the setting value (as size) associated with the setting key. Provided values can either be_absolute values (interpreted as a number of bytes), byte sizes (eg. 1mb) or percentage of the heap size_(eg. 12%). If it does not exists, parses the default value provided.;public ByteSizeValue getAsMemory(String setting, String defaultValue) throws SettingsException {_        return MemorySizeValue.parseBytesSizeValueOrHeapRatio(get(setting, defaultValue), setting)__    };returns,the,setting,value,as,size,associated,with,the,setting,key,provided,values,can,either,be,absolute,values,interpreted,as,a,number,of,bytes,byte,sizes,eg,1mb,or,percentage,of,the,heap,size,eg,12,if,it,does,not,exists,parses,the,default,value,provided;public,byte,size,value,get,as,memory,string,setting,string,default,value,throws,settings,exception,return,memory,size,value,parse,bytes,size,value,or,heap,ratio,get,setting,default,value,setting
Settings -> Builder -> public Builder put(String key, ByteSizeValue byteSizeValue);1524684173;Sets a byteSizeValue setting with the provided setting key and byteSizeValue.__@param key  The setting key_@param byteSizeValue The setting value_@return The builder;public Builder put(String key, ByteSizeValue byteSizeValue) {_            return put(key, byteSizeValue.toString())__        };sets,a,byte,size,value,setting,with,the,provided,setting,key,and,byte,size,value,param,key,the,setting,key,param,byte,size,value,the,setting,value,return,the,builder;public,builder,put,string,key,byte,size,value,byte,size,value,return,put,key,byte,size,value,to,string
Settings -> Builder -> public Builder put(String key, ByteSizeValue byteSizeValue);1525334055;Sets a byteSizeValue setting with the provided setting key and byteSizeValue.__@param key  The setting key_@param byteSizeValue The setting value_@return The builder;public Builder put(String key, ByteSizeValue byteSizeValue) {_            return put(key, byteSizeValue.toString())__        };sets,a,byte,size,value,setting,with,the,provided,setting,key,and,byte,size,value,param,key,the,setting,key,param,byte,size,value,the,setting,value,return,the,builder;public,builder,put,string,key,byte,size,value,byte,size,value,return,put,key,byte,size,value,to,string
Settings -> Builder -> public Builder put(String key, ByteSizeValue byteSizeValue);1536828374;Sets a byteSizeValue setting with the provided setting key and byteSizeValue.__@param key  The setting key_@param byteSizeValue The setting value_@return The builder;public Builder put(String key, ByteSizeValue byteSizeValue) {_            return put(key, byteSizeValue.toString())__        };sets,a,byte,size,value,setting,with,the,provided,setting,key,and,byte,size,value,param,key,the,setting,key,param,byte,size,value,the,setting,value,return,the,builder;public,builder,put,string,key,byte,size,value,byte,size,value,return,put,key,byte,size,value,to,string
Settings -> Builder -> public Builder put(String key, ByteSizeValue byteSizeValue);1539951844;Sets a byteSizeValue setting with the provided setting key and byteSizeValue.__@param key  The setting key_@param byteSizeValue The setting value_@return The builder;public Builder put(String key, ByteSizeValue byteSizeValue) {_            return put(key, byteSizeValue.toString())__        };sets,a,byte,size,value,setting,with,the,provided,setting,key,and,byte,size,value,param,key,the,setting,key,param,byte,size,value,the,setting,value,return,the,builder;public,builder,put,string,key,byte,size,value,byte,size,value,return,put,key,byte,size,value,to,string
Settings -> Builder -> public Builder put(String key, ByteSizeValue byteSizeValue);1540486836;Sets a byteSizeValue setting with the provided setting key and byteSizeValue.__@param key  The setting key_@param byteSizeValue The setting value_@return The builder;public Builder put(String key, ByteSizeValue byteSizeValue) {_            return put(key, byteSizeValue.toString())__        };sets,a,byte,size,value,setting,with,the,provided,setting,key,and,byte,size,value,param,key,the,setting,key,param,byte,size,value,the,setting,value,return,the,builder;public,builder,put,string,key,byte,size,value,byte,size,value,return,put,key,byte,size,value,to,string
Settings -> Builder -> public Builder put(String key, ByteSizeValue byteSizeValue);1546842892;Sets a byteSizeValue setting with the provided setting key and byteSizeValue.__@param key  The setting key_@param byteSizeValue The setting value_@return The builder;public Builder put(String key, ByteSizeValue byteSizeValue) {_            return put(key, byteSizeValue.toString())__        };sets,a,byte,size,value,setting,with,the,provided,setting,key,and,byte,size,value,param,key,the,setting,key,param,byte,size,value,the,setting,value,return,the,builder;public,builder,put,string,key,byte,size,value,byte,size,value,return,put,key,byte,size,value,to,string
Settings -> public ByteSizeValue getAsBytesSize(String setting, ByteSizeValue defaultValue) throws SettingsException;1524684173;Returns the setting value (as size) associated with the setting key. If it does not exists,_returns the default value provided.;public ByteSizeValue getAsBytesSize(String setting, ByteSizeValue defaultValue) throws SettingsException {_        return parseBytesSizeValue(get(setting), defaultValue, setting)__    };returns,the,setting,value,as,size,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,byte,size,value,get,as,bytes,size,string,setting,byte,size,value,default,value,throws,settings,exception,return,parse,bytes,size,value,get,setting,default,value,setting
Settings -> public ByteSizeValue getAsBytesSize(String setting, ByteSizeValue defaultValue) throws SettingsException;1525334055;Returns the setting value (as size) associated with the setting key. If it does not exists,_returns the default value provided.;public ByteSizeValue getAsBytesSize(String setting, ByteSizeValue defaultValue) throws SettingsException {_        return parseBytesSizeValue(get(setting), defaultValue, setting)__    };returns,the,setting,value,as,size,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,byte,size,value,get,as,bytes,size,string,setting,byte,size,value,default,value,throws,settings,exception,return,parse,bytes,size,value,get,setting,default,value,setting
Settings -> public ByteSizeValue getAsBytesSize(String setting, ByteSizeValue defaultValue) throws SettingsException;1536828374;Returns the setting value (as size) associated with the setting key. If it does not exists,_returns the default value provided.;public ByteSizeValue getAsBytesSize(String setting, ByteSizeValue defaultValue) throws SettingsException {_        return parseBytesSizeValue(get(setting), defaultValue, setting)__    };returns,the,setting,value,as,size,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,byte,size,value,get,as,bytes,size,string,setting,byte,size,value,default,value,throws,settings,exception,return,parse,bytes,size,value,get,setting,default,value,setting
Settings -> public ByteSizeValue getAsBytesSize(String setting, ByteSizeValue defaultValue) throws SettingsException;1539951844;Returns the setting value (as size) associated with the setting key. If it does not exists,_returns the default value provided.;public ByteSizeValue getAsBytesSize(String setting, ByteSizeValue defaultValue) throws SettingsException {_        return parseBytesSizeValue(get(setting), defaultValue, setting)__    };returns,the,setting,value,as,size,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,byte,size,value,get,as,bytes,size,string,setting,byte,size,value,default,value,throws,settings,exception,return,parse,bytes,size,value,get,setting,default,value,setting
Settings -> public ByteSizeValue getAsBytesSize(String setting, ByteSizeValue defaultValue) throws SettingsException;1540486836;Returns the setting value (as size) associated with the setting key. If it does not exists,_returns the default value provided.;public ByteSizeValue getAsBytesSize(String setting, ByteSizeValue defaultValue) throws SettingsException {_        return parseBytesSizeValue(get(setting), defaultValue, setting)__    };returns,the,setting,value,as,size,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,byte,size,value,get,as,bytes,size,string,setting,byte,size,value,default,value,throws,settings,exception,return,parse,bytes,size,value,get,setting,default,value,setting
Settings -> public ByteSizeValue getAsBytesSize(String setting, ByteSizeValue defaultValue) throws SettingsException;1546842892;Returns the setting value (as size) associated with the setting key. If it does not exists,_returns the default value provided.;public ByteSizeValue getAsBytesSize(String setting, ByteSizeValue defaultValue) throws SettingsException {_        return parseBytesSizeValue(get(setting), defaultValue, setting)__    };returns,the,setting,value,as,size,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,byte,size,value,get,as,bytes,size,string,setting,byte,size,value,default,value,throws,settings,exception,return,parse,bytes,size,value,get,setting,default,value,setting
Settings -> public ByteSizeValue getAsBytesSize(String setting, ByteSizeValue defaultValue) throws SettingsException;1546874030;Returns the setting value (as size) associated with the setting key. If it does not exists,_returns the default value provided.;public ByteSizeValue getAsBytesSize(String setting, ByteSizeValue defaultValue) throws SettingsException {_        return parseBytesSizeValue(get(setting), defaultValue, setting)__    };returns,the,setting,value,as,size,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,byte,size,value,get,as,bytes,size,string,setting,byte,size,value,default,value,throws,settings,exception,return,parse,bytes,size,value,get,setting,default,value,setting
Settings -> public ByteSizeValue getAsBytesSize(String setting, ByteSizeValue defaultValue) throws SettingsException;1546901964;Returns the setting value (as size) associated with the setting key. If it does not exists,_returns the default value provided.;public ByteSizeValue getAsBytesSize(String setting, ByteSizeValue defaultValue) throws SettingsException {_        return parseBytesSizeValue(get(setting), defaultValue, setting)__    };returns,the,setting,value,as,size,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,byte,size,value,get,as,bytes,size,string,setting,byte,size,value,default,value,throws,settings,exception,return,parse,bytes,size,value,get,setting,default,value,setting
Settings -> public ByteSizeValue getAsBytesSize(String setting, ByteSizeValue defaultValue) throws SettingsException;1547643436;Returns the setting value (as size) associated with the setting key. If it does not exists,_returns the default value provided.;public ByteSizeValue getAsBytesSize(String setting, ByteSizeValue defaultValue) throws SettingsException {_        return parseBytesSizeValue(get(setting), defaultValue, setting)__    };returns,the,setting,value,as,size,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,byte,size,value,get,as,bytes,size,string,setting,byte,size,value,default,value,throws,settings,exception,return,parse,bytes,size,value,get,setting,default,value,setting
Settings -> public ByteSizeValue getAsBytesSize(String setting, ByteSizeValue defaultValue) throws SettingsException;1548422582;Returns the setting value (as size) associated with the setting key. If it does not exists,_returns the default value provided.;public ByteSizeValue getAsBytesSize(String setting, ByteSizeValue defaultValue) throws SettingsException {_        return parseBytesSizeValue(get(setting), defaultValue, setting)__    };returns,the,setting,value,as,size,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,byte,size,value,get,as,bytes,size,string,setting,byte,size,value,default,value,throws,settings,exception,return,parse,bytes,size,value,get,setting,default,value,setting
Settings -> Builder -> public String get(String key);1524684173;Returns a setting value based on the setting key.;public String get(String key) {_            return Settings.toString(map.get(key))__        };returns,a,setting,value,based,on,the,setting,key;public,string,get,string,key,return,settings,to,string,map,get,key
Settings -> Builder -> public String get(String key);1525334055;Returns a setting value based on the setting key.;public String get(String key) {_            return Settings.toString(map.get(key))__        };returns,a,setting,value,based,on,the,setting,key;public,string,get,string,key,return,settings,to,string,map,get,key
Settings -> Builder -> public String get(String key);1536828374;Returns a setting value based on the setting key.;public String get(String key) {_            return Settings.toString(map.get(key))__        };returns,a,setting,value,based,on,the,setting,key;public,string,get,string,key,return,settings,to,string,map,get,key
Settings -> Builder -> public String get(String key);1539951844;Returns a setting value based on the setting key.;public String get(String key) {_            return Settings.toString(map.get(key))__        };returns,a,setting,value,based,on,the,setting,key;public,string,get,string,key,return,settings,to,string,map,get,key
Settings -> Builder -> public String get(String key);1540486836;Returns a setting value based on the setting key.;public String get(String key) {_            return Settings.toString(map.get(key))__        };returns,a,setting,value,based,on,the,setting,key;public,string,get,string,key,return,settings,to,string,map,get,key
Settings -> Builder -> public String get(String key);1546842892;Returns a setting value based on the setting key.;public String get(String key) {_            return Settings.toString(map.get(key))__        };returns,a,setting,value,based,on,the,setting,key;public,string,get,string,key,return,settings,to,string,map,get,key
Settings -> Builder -> public String get(String key);1546874030;Returns a setting value based on the setting key.;public String get(String key) {_            return Settings.toString(map.get(key))__        };returns,a,setting,value,based,on,the,setting,key;public,string,get,string,key,return,settings,to,string,map,get,key
Settings -> Builder -> public String get(String key);1546901964;Returns a setting value based on the setting key.;public String get(String key) {_            return Settings.toString(map.get(key))__        };returns,a,setting,value,based,on,the,setting,key;public,string,get,string,key,return,settings,to,string,map,get,key
Settings -> Builder -> public String get(String key);1547643436;Returns a setting value based on the setting key.;public String get(String key) {_            return Settings.toString(map.get(key))__        };returns,a,setting,value,based,on,the,setting,key;public,string,get,string,key,return,settings,to,string,map,get,key
Settings -> Builder -> public String get(String key);1548422582;Returns a setting value based on the setting key.;public String get(String key) {_            return Settings.toString(map.get(key))__        };returns,a,setting,value,based,on,the,setting,key;public,string,get,string,key,return,settings,to,string,map,get,key
Settings -> Builder -> public Builder put(String setting, boolean value);1524684173;Sets the setting with the provided setting key and the boolean value.__@param setting The setting key_@param value   The boolean value_@return The builder;public Builder put(String setting, boolean value) {_            put(setting, String.valueOf(value))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,boolean,value,param,setting,the,setting,key,param,value,the,boolean,value,return,the,builder;public,builder,put,string,setting,boolean,value,put,setting,string,value,of,value,return,this
Settings -> Builder -> public Builder put(String setting, boolean value);1525334055;Sets the setting with the provided setting key and the boolean value.__@param setting The setting key_@param value   The boolean value_@return The builder;public Builder put(String setting, boolean value) {_            put(setting, String.valueOf(value))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,boolean,value,param,setting,the,setting,key,param,value,the,boolean,value,return,the,builder;public,builder,put,string,setting,boolean,value,put,setting,string,value,of,value,return,this
Settings -> Builder -> public Builder put(String setting, boolean value);1536828374;Sets the setting with the provided setting key and the boolean value.__@param setting The setting key_@param value   The boolean value_@return The builder;public Builder put(String setting, boolean value) {_            put(setting, String.valueOf(value))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,boolean,value,param,setting,the,setting,key,param,value,the,boolean,value,return,the,builder;public,builder,put,string,setting,boolean,value,put,setting,string,value,of,value,return,this
Settings -> Builder -> public Builder put(String setting, boolean value);1539951844;Sets the setting with the provided setting key and the boolean value.__@param setting The setting key_@param value   The boolean value_@return The builder;public Builder put(String setting, boolean value) {_            put(setting, String.valueOf(value))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,boolean,value,param,setting,the,setting,key,param,value,the,boolean,value,return,the,builder;public,builder,put,string,setting,boolean,value,put,setting,string,value,of,value,return,this
Settings -> Builder -> public Builder put(String setting, boolean value);1540486836;Sets the setting with the provided setting key and the boolean value.__@param setting The setting key_@param value   The boolean value_@return The builder;public Builder put(String setting, boolean value) {_            put(setting, String.valueOf(value))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,boolean,value,param,setting,the,setting,key,param,value,the,boolean,value,return,the,builder;public,builder,put,string,setting,boolean,value,put,setting,string,value,of,value,return,this
Settings -> Builder -> public Builder put(String setting, boolean value);1546842892;Sets the setting with the provided setting key and the boolean value.__@param setting The setting key_@param value   The boolean value_@return The builder;public Builder put(String setting, boolean value) {_            put(setting, String.valueOf(value))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,boolean,value,param,setting,the,setting,key,param,value,the,boolean,value,return,the,builder;public,builder,put,string,setting,boolean,value,put,setting,string,value,of,value,return,this
Settings -> Builder -> public Builder put(String setting, boolean value);1546874030;Sets the setting with the provided setting key and the boolean value.__@param setting The setting key_@param value   The boolean value_@return The builder;public Builder put(String setting, boolean value) {_            put(setting, String.valueOf(value))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,boolean,value,param,setting,the,setting,key,param,value,the,boolean,value,return,the,builder;public,builder,put,string,setting,boolean,value,put,setting,string,value,of,value,return,this
Settings -> Builder -> public Builder put(String setting, boolean value);1546901964;Sets the setting with the provided setting key and the boolean value.__@param setting The setting key_@param value   The boolean value_@return The builder;public Builder put(String setting, boolean value) {_            put(setting, String.valueOf(value))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,boolean,value,param,setting,the,setting,key,param,value,the,boolean,value,return,the,builder;public,builder,put,string,setting,boolean,value,put,setting,string,value,of,value,return,this
Settings -> Builder -> public Builder put(String setting, boolean value);1547643436;Sets the setting with the provided setting key and the boolean value.__@param setting The setting key_@param value   The boolean value_@return The builder;public Builder put(String setting, boolean value) {_            put(setting, String.valueOf(value))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,boolean,value,param,setting,the,setting,key,param,value,the,boolean,value,return,the,builder;public,builder,put,string,setting,boolean,value,put,setting,string,value,of,value,return,this
Settings -> Builder -> public Builder put(String setting, boolean value);1548422582;Sets the setting with the provided setting key and the boolean value.__@param setting The setting key_@param value   The boolean value_@return The builder;public Builder put(String setting, boolean value) {_            put(setting, String.valueOf(value))__            return this__        };sets,the,setting,with,the,provided,setting,key,and,the,boolean,value,param,setting,the,setting,key,param,value,the,boolean,value,return,the,builder;public,builder,put,string,setting,boolean,value,put,setting,string,value,of,value,return,this
Settings -> Builder -> public Builder put(String key, String value);1524684173;Sets a setting with the provided setting key and value.__@param key   The setting key_@param value The setting value_@return The builder;public Builder put(String key, String value) {_            map.put(key, value)__            return this__        };sets,a,setting,with,the,provided,setting,key,and,value,param,key,the,setting,key,param,value,the,setting,value,return,the,builder;public,builder,put,string,key,string,value,map,put,key,value,return,this
Settings -> Builder -> public Builder put(String key, String value);1525334055;Sets a setting with the provided setting key and value.__@param key   The setting key_@param value The setting value_@return The builder;public Builder put(String key, String value) {_            map.put(key, value)__            return this__        };sets,a,setting,with,the,provided,setting,key,and,value,param,key,the,setting,key,param,value,the,setting,value,return,the,builder;public,builder,put,string,key,string,value,map,put,key,value,return,this
Settings -> Builder -> public Builder put(String key, String value);1536828374;Sets a setting with the provided setting key and value.__@param key   The setting key_@param value The setting value_@return The builder;public Builder put(String key, String value) {_            map.put(key, value)__            return this__        };sets,a,setting,with,the,provided,setting,key,and,value,param,key,the,setting,key,param,value,the,setting,value,return,the,builder;public,builder,put,string,key,string,value,map,put,key,value,return,this
Settings -> Builder -> public Builder put(String key, String value);1539951844;Sets a setting with the provided setting key and value.__@param key   The setting key_@param value The setting value_@return The builder;public Builder put(String key, String value) {_            map.put(key, value)__            return this__        };sets,a,setting,with,the,provided,setting,key,and,value,param,key,the,setting,key,param,value,the,setting,value,return,the,builder;public,builder,put,string,key,string,value,map,put,key,value,return,this
Settings -> Builder -> public Builder put(String key, String value);1540486836;Sets a setting with the provided setting key and value.__@param key   The setting key_@param value The setting value_@return The builder;public Builder put(String key, String value) {_            map.put(key, value)__            return this__        };sets,a,setting,with,the,provided,setting,key,and,value,param,key,the,setting,key,param,value,the,setting,value,return,the,builder;public,builder,put,string,key,string,value,map,put,key,value,return,this
Settings -> Builder -> public Builder put(String key, String value);1546842892;Sets a setting with the provided setting key and value.__@param key   The setting key_@param value The setting value_@return The builder;public Builder put(String key, String value) {_            map.put(key, value)__            return this__        };sets,a,setting,with,the,provided,setting,key,and,value,param,key,the,setting,key,param,value,the,setting,value,return,the,builder;public,builder,put,string,key,string,value,map,put,key,value,return,this
Settings -> Builder -> public Builder put(String key, String value);1546874030;Sets a setting with the provided setting key and value.__@param key   The setting key_@param value The setting value_@return The builder;public Builder put(String key, String value) {_            map.put(key, value)__            return this__        };sets,a,setting,with,the,provided,setting,key,and,value,param,key,the,setting,key,param,value,the,setting,value,return,the,builder;public,builder,put,string,key,string,value,map,put,key,value,return,this
Settings -> Builder -> public Builder put(String key, String value);1546901964;Sets a setting with the provided setting key and value.__@param key   The setting key_@param value The setting value_@return The builder;public Builder put(String key, String value) {_            map.put(key, value)__            return this__        };sets,a,setting,with,the,provided,setting,key,and,value,param,key,the,setting,key,param,value,the,setting,value,return,the,builder;public,builder,put,string,key,string,value,map,put,key,value,return,this
Settings -> Builder -> public Builder put(String key, String value);1547643436;Sets a setting with the provided setting key and value.__@param key   The setting key_@param value The setting value_@return The builder;public Builder put(String key, String value) {_            map.put(key, value)__            return this__        };sets,a,setting,with,the,provided,setting,key,and,value,param,key,the,setting,key,param,value,the,setting,value,return,the,builder;public,builder,put,string,key,string,value,map,put,key,value,return,this
Settings -> Builder -> public Builder put(String key, String value);1548422582;Sets a setting with the provided setting key and value.__@param key   The setting key_@param value The setting value_@return The builder;public Builder put(String key, String value) {_            map.put(key, value)__            return this__        };sets,a,setting,with,the,provided,setting,key,and,value,param,key,the,setting,key,param,value,the,setting,value,return,the,builder;public,builder,put,string,key,string,value,map,put,key,value,return,this
Settings -> String get(String setting, String defaultValue, boolean isList);1536828374;Returns the setting value associated with the setting key. If it does not exists,_returns the default value provided.;String get(String setting, String defaultValue, boolean isList) {_        Object value = settings.get(setting)__        if (value != null) {_            if (value instanceof List) {_                if (isList == false) {_                    throw new IllegalArgumentException(_                        "Found list type value for setting [" + setting + "] but but did not expect a list for it."_                    )__                }_            } else if (isList) {_                throw new IllegalArgumentException(_                    "Expected list type value for setting [" + setting + "] but found [" + value.getClass() + ']'_                )__            }_            return toString(value)__        } else {_            return defaultValue__        }_    };returns,the,setting,value,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;string,get,string,setting,string,default,value,boolean,is,list,object,value,settings,get,setting,if,value,null,if,value,instanceof,list,if,is,list,false,throw,new,illegal,argument,exception,found,list,type,value,for,setting,setting,but,but,did,not,expect,a,list,for,it,else,if,is,list,throw,new,illegal,argument,exception,expected,list,type,value,for,setting,setting,but,found,value,get,class,return,to,string,value,else,return,default,value
Settings -> String get(String setting, String defaultValue, boolean isList);1539951844;Returns the setting value associated with the setting key. If it does not exists,_returns the default value provided.;String get(String setting, String defaultValue, boolean isList) {_        Object value = settings.get(setting)__        if (value != null) {_            if (value instanceof List) {_                if (isList == false) {_                    throw new IllegalArgumentException(_                        "Found list type value for setting [" + setting + "] but but did not expect a list for it."_                    )__                }_            } else if (isList) {_                throw new IllegalArgumentException(_                    "Expected list type value for setting [" + setting + "] but found [" + value.getClass() + ']'_                )__            }_            return toString(value)__        } else {_            return defaultValue__        }_    };returns,the,setting,value,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;string,get,string,setting,string,default,value,boolean,is,list,object,value,settings,get,setting,if,value,null,if,value,instanceof,list,if,is,list,false,throw,new,illegal,argument,exception,found,list,type,value,for,setting,setting,but,but,did,not,expect,a,list,for,it,else,if,is,list,throw,new,illegal,argument,exception,expected,list,type,value,for,setting,setting,but,found,value,get,class,return,to,string,value,else,return,default,value
Settings -> String get(String setting, String defaultValue, boolean isList);1540486836;Returns the setting value associated with the setting key. If it does not exists,_returns the default value provided.;String get(String setting, String defaultValue, boolean isList) {_        Object value = settings.get(setting)__        if (value != null) {_            if (value instanceof List) {_                if (isList == false) {_                    throw new IllegalArgumentException(_                        "Found list type value for setting [" + setting + "] but but did not expect a list for it."_                    )__                }_            } else if (isList) {_                throw new IllegalArgumentException(_                    "Expected list type value for setting [" + setting + "] but found [" + value.getClass() + ']'_                )__            }_            return toString(value)__        } else {_            return defaultValue__        }_    };returns,the,setting,value,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;string,get,string,setting,string,default,value,boolean,is,list,object,value,settings,get,setting,if,value,null,if,value,instanceof,list,if,is,list,false,throw,new,illegal,argument,exception,found,list,type,value,for,setting,setting,but,but,did,not,expect,a,list,for,it,else,if,is,list,throw,new,illegal,argument,exception,expected,list,type,value,for,setting,setting,but,found,value,get,class,return,to,string,value,else,return,default,value
Settings -> String get(String setting, String defaultValue, boolean isList);1546842892;Returns the setting value associated with the setting key. If it does not exists,_returns the default value provided.;String get(String setting, String defaultValue, boolean isList) {_        Object value = settings.get(setting)__        if (value != null) {_            if (value instanceof List) {_                if (isList == false) {_                    throw new IllegalArgumentException(_                        "Found list type value for setting [" + setting + "] but but did not expect a list for it."_                    )__                }_            } else if (isList) {_                throw new IllegalArgumentException(_                    "Expected list type value for setting [" + setting + "] but found [" + value.getClass() + ']'_                )__            }_            return toString(value)__        } else {_            return defaultValue__        }_    };returns,the,setting,value,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;string,get,string,setting,string,default,value,boolean,is,list,object,value,settings,get,setting,if,value,null,if,value,instanceof,list,if,is,list,false,throw,new,illegal,argument,exception,found,list,type,value,for,setting,setting,but,but,did,not,expect,a,list,for,it,else,if,is,list,throw,new,illegal,argument,exception,expected,list,type,value,for,setting,setting,but,found,value,get,class,return,to,string,value,else,return,default,value
Settings -> String get(String setting, String defaultValue, boolean isList);1546874030;Returns the setting value associated with the setting key. If it does not exists,_returns the default value provided.;String get(String setting, String defaultValue, boolean isList) {_        Object value = settings.get(setting)__        if (value != null) {_            if (value instanceof List) {_                if (isList == false) {_                    throw new IllegalArgumentException(_                        "Found list type value for setting [" + setting + "] but but did not expect a list for it."_                    )__                }_            } else if (isList) {_                throw new IllegalArgumentException(_                    "Expected list type value for setting [" + setting + "] but found [" + value.getClass() + ']'_                )__            }_            return toString(value)__        } else {_            return defaultValue__        }_    };returns,the,setting,value,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;string,get,string,setting,string,default,value,boolean,is,list,object,value,settings,get,setting,if,value,null,if,value,instanceof,list,if,is,list,false,throw,new,illegal,argument,exception,found,list,type,value,for,setting,setting,but,but,did,not,expect,a,list,for,it,else,if,is,list,throw,new,illegal,argument,exception,expected,list,type,value,for,setting,setting,but,found,value,get,class,return,to,string,value,else,return,default,value
Settings -> String get(String setting, String defaultValue, boolean isList);1546901964;Returns the setting value associated with the setting key. If it does not exists,_returns the default value provided.;String get(String setting, String defaultValue, boolean isList) {_        Object value = settings.get(setting)__        if (value != null) {_            if (value instanceof List) {_                if (isList == false) {_                    throw new IllegalArgumentException(_                        "Found list type value for setting [" + setting + "] but but did not expect a list for it."_                    )__                }_            } else if (isList) {_                throw new IllegalArgumentException(_                    "Expected list type value for setting [" + setting + "] but found [" + value.getClass() + ']'_                )__            }_            return toString(value)__        } else {_            return defaultValue__        }_    };returns,the,setting,value,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;string,get,string,setting,string,default,value,boolean,is,list,object,value,settings,get,setting,if,value,null,if,value,instanceof,list,if,is,list,false,throw,new,illegal,argument,exception,found,list,type,value,for,setting,setting,but,but,did,not,expect,a,list,for,it,else,if,is,list,throw,new,illegal,argument,exception,expected,list,type,value,for,setting,setting,but,found,value,get,class,return,to,string,value,else,return,default,value
Settings -> Builder -> public Builder putList(String setting, String... values);1524684173;Sets the setting with the provided setting key and an array of values.__@param setting The setting key_@param values  The values_@return The builder;public Builder putList(String setting, String... values) {_            return putList(setting, Arrays.asList(values))__        };sets,the,setting,with,the,provided,setting,key,and,an,array,of,values,param,setting,the,setting,key,param,values,the,values,return,the,builder;public,builder,put,list,string,setting,string,values,return,put,list,setting,arrays,as,list,values
Settings -> Builder -> public Builder putList(String setting, String... values);1525334055;Sets the setting with the provided setting key and an array of values.__@param setting The setting key_@param values  The values_@return The builder;public Builder putList(String setting, String... values) {_            return putList(setting, Arrays.asList(values))__        };sets,the,setting,with,the,provided,setting,key,and,an,array,of,values,param,setting,the,setting,key,param,values,the,values,return,the,builder;public,builder,put,list,string,setting,string,values,return,put,list,setting,arrays,as,list,values
Settings -> Builder -> public Builder putList(String setting, String... values);1536828374;Sets the setting with the provided setting key and an array of values.__@param setting The setting key_@param values  The values_@return The builder;public Builder putList(String setting, String... values) {_            return putList(setting, Arrays.asList(values))__        };sets,the,setting,with,the,provided,setting,key,and,an,array,of,values,param,setting,the,setting,key,param,values,the,values,return,the,builder;public,builder,put,list,string,setting,string,values,return,put,list,setting,arrays,as,list,values
Settings -> Builder -> public Builder putList(String setting, String... values);1539951844;Sets the setting with the provided setting key and an array of values.__@param setting The setting key_@param values  The values_@return The builder;public Builder putList(String setting, String... values) {_            return putList(setting, Arrays.asList(values))__        };sets,the,setting,with,the,provided,setting,key,and,an,array,of,values,param,setting,the,setting,key,param,values,the,values,return,the,builder;public,builder,put,list,string,setting,string,values,return,put,list,setting,arrays,as,list,values
Settings -> Builder -> public Builder putList(String setting, String... values);1540486836;Sets the setting with the provided setting key and an array of values.__@param setting The setting key_@param values  The values_@return The builder;public Builder putList(String setting, String... values) {_            return putList(setting, Arrays.asList(values))__        };sets,the,setting,with,the,provided,setting,key,and,an,array,of,values,param,setting,the,setting,key,param,values,the,values,return,the,builder;public,builder,put,list,string,setting,string,values,return,put,list,setting,arrays,as,list,values
Settings -> Builder -> public Builder putList(String setting, String... values);1546842892;Sets the setting with the provided setting key and an array of values.__@param setting The setting key_@param values  The values_@return The builder;public Builder putList(String setting, String... values) {_            return putList(setting, Arrays.asList(values))__        };sets,the,setting,with,the,provided,setting,key,and,an,array,of,values,param,setting,the,setting,key,param,values,the,values,return,the,builder;public,builder,put,list,string,setting,string,values,return,put,list,setting,arrays,as,list,values
Settings -> Builder -> public Builder putList(String setting, String... values);1546874030;Sets the setting with the provided setting key and an array of values.__@param setting The setting key_@param values  The values_@return The builder;public Builder putList(String setting, String... values) {_            return putList(setting, Arrays.asList(values))__        };sets,the,setting,with,the,provided,setting,key,and,an,array,of,values,param,setting,the,setting,key,param,values,the,values,return,the,builder;public,builder,put,list,string,setting,string,values,return,put,list,setting,arrays,as,list,values
Settings -> Builder -> public Builder putList(String setting, String... values);1546901964;Sets the setting with the provided setting key and an array of values.__@param setting The setting key_@param values  The values_@return The builder;public Builder putList(String setting, String... values) {_            return putList(setting, Arrays.asList(values))__        };sets,the,setting,with,the,provided,setting,key,and,an,array,of,values,param,setting,the,setting,key,param,values,the,values,return,the,builder;public,builder,put,list,string,setting,string,values,return,put,list,setting,arrays,as,list,values
Settings -> Builder -> public Builder putList(String setting, String... values);1547643436;Sets the setting with the provided setting key and an array of values.__@param setting The setting key_@param values  The values_@return The builder;public Builder putList(String setting, String... values) {_            return putList(setting, Arrays.asList(values))__        };sets,the,setting,with,the,provided,setting,key,and,an,array,of,values,param,setting,the,setting,key,param,values,the,values,return,the,builder;public,builder,put,list,string,setting,string,values,return,put,list,setting,arrays,as,list,values
Settings -> Builder -> public Builder putList(String setting, String... values);1548422582;Sets the setting with the provided setting key and an array of values.__@param setting The setting key_@param values  The values_@return The builder;public Builder putList(String setting, String... values) {_            return putList(setting, Arrays.asList(values))__        };sets,the,setting,with,the,provided,setting,key,and,an,array,of,values,param,setting,the,setting,key,param,values,the,values,return,the,builder;public,builder,put,list,string,setting,string,values,return,put,list,setting,arrays,as,list,values
Settings -> public List<String> getAsList(String key, List<String> defaultValue) throws SettingsException;1524684173;The values associated with a setting key as an immutable list._<p>_If commaDelimited is true, it will automatically load a comma separated list under the settingPrefix and merge with_the numbered format.__@param key The setting key to load the list by_@return The setting list values;public List<String> getAsList(String key, List<String> defaultValue) throws SettingsException {_        return getAsList(key, defaultValue, true)__    };the,values,associated,with,a,setting,key,as,an,immutable,list,p,if,comma,delimited,is,true,it,will,automatically,load,a,comma,separated,list,under,the,setting,prefix,and,merge,with,the,numbered,format,param,key,the,setting,key,to,load,the,list,by,return,the,setting,list,values;public,list,string,get,as,list,string,key,list,string,default,value,throws,settings,exception,return,get,as,list,key,default,value,true
Settings -> public List<String> getAsList(String key, List<String> defaultValue) throws SettingsException;1525334055;The values associated with a setting key as an immutable list._<p>_If commaDelimited is true, it will automatically load a comma separated list under the settingPrefix and merge with_the numbered format.__@param key The setting key to load the list by_@return The setting list values;public List<String> getAsList(String key, List<String> defaultValue) throws SettingsException {_        return getAsList(key, defaultValue, true)__    };the,values,associated,with,a,setting,key,as,an,immutable,list,p,if,comma,delimited,is,true,it,will,automatically,load,a,comma,separated,list,under,the,setting,prefix,and,merge,with,the,numbered,format,param,key,the,setting,key,to,load,the,list,by,return,the,setting,list,values;public,list,string,get,as,list,string,key,list,string,default,value,throws,settings,exception,return,get,as,list,key,default,value,true
Settings -> public List<String> getAsList(String key, List<String> defaultValue) throws SettingsException;1536828374;The values associated with a setting key as an immutable list._<p>_If commaDelimited is true, it will automatically load a comma separated list under the settingPrefix and merge with_the numbered format.__@param key The setting key to load the list by_@return The setting list values;public List<String> getAsList(String key, List<String> defaultValue) throws SettingsException {_        return getAsList(key, defaultValue, true)__    };the,values,associated,with,a,setting,key,as,an,immutable,list,p,if,comma,delimited,is,true,it,will,automatically,load,a,comma,separated,list,under,the,setting,prefix,and,merge,with,the,numbered,format,param,key,the,setting,key,to,load,the,list,by,return,the,setting,list,values;public,list,string,get,as,list,string,key,list,string,default,value,throws,settings,exception,return,get,as,list,key,default,value,true
Settings -> public List<String> getAsList(String key, List<String> defaultValue) throws SettingsException;1539951844;The values associated with a setting key as an immutable list._<p>_If commaDelimited is true, it will automatically load a comma separated list under the settingPrefix and merge with_the numbered format.__@param key The setting key to load the list by_@return The setting list values;public List<String> getAsList(String key, List<String> defaultValue) throws SettingsException {_        return getAsList(key, defaultValue, true)__    };the,values,associated,with,a,setting,key,as,an,immutable,list,p,if,comma,delimited,is,true,it,will,automatically,load,a,comma,separated,list,under,the,setting,prefix,and,merge,with,the,numbered,format,param,key,the,setting,key,to,load,the,list,by,return,the,setting,list,values;public,list,string,get,as,list,string,key,list,string,default,value,throws,settings,exception,return,get,as,list,key,default,value,true
Settings -> public List<String> getAsList(String key, List<String> defaultValue) throws SettingsException;1540486836;The values associated with a setting key as an immutable list._<p>_If commaDelimited is true, it will automatically load a comma separated list under the settingPrefix and merge with_the numbered format.__@param key The setting key to load the list by_@return The setting list values;public List<String> getAsList(String key, List<String> defaultValue) throws SettingsException {_        return getAsList(key, defaultValue, true)__    };the,values,associated,with,a,setting,key,as,an,immutable,list,p,if,comma,delimited,is,true,it,will,automatically,load,a,comma,separated,list,under,the,setting,prefix,and,merge,with,the,numbered,format,param,key,the,setting,key,to,load,the,list,by,return,the,setting,list,values;public,list,string,get,as,list,string,key,list,string,default,value,throws,settings,exception,return,get,as,list,key,default,value,true
Settings -> public List<String> getAsList(String key, List<String> defaultValue) throws SettingsException;1546842892;The values associated with a setting key as an immutable list._<p>_If commaDelimited is true, it will automatically load a comma separated list under the settingPrefix and merge with_the numbered format.__@param key The setting key to load the list by_@return The setting list values;public List<String> getAsList(String key, List<String> defaultValue) throws SettingsException {_        return getAsList(key, defaultValue, true)__    };the,values,associated,with,a,setting,key,as,an,immutable,list,p,if,comma,delimited,is,true,it,will,automatically,load,a,comma,separated,list,under,the,setting,prefix,and,merge,with,the,numbered,format,param,key,the,setting,key,to,load,the,list,by,return,the,setting,list,values;public,list,string,get,as,list,string,key,list,string,default,value,throws,settings,exception,return,get,as,list,key,default,value,true
Settings -> public List<String> getAsList(String key, List<String> defaultValue) throws SettingsException;1546874030;The values associated with a setting key as an immutable list._<p>_If commaDelimited is true, it will automatically load a comma separated list under the settingPrefix and merge with_the numbered format.__@param key The setting key to load the list by_@return The setting list values;public List<String> getAsList(String key, List<String> defaultValue) throws SettingsException {_        return getAsList(key, defaultValue, true)__    };the,values,associated,with,a,setting,key,as,an,immutable,list,p,if,comma,delimited,is,true,it,will,automatically,load,a,comma,separated,list,under,the,setting,prefix,and,merge,with,the,numbered,format,param,key,the,setting,key,to,load,the,list,by,return,the,setting,list,values;public,list,string,get,as,list,string,key,list,string,default,value,throws,settings,exception,return,get,as,list,key,default,value,true
Settings -> public List<String> getAsList(String key, List<String> defaultValue) throws SettingsException;1546901964;The values associated with a setting key as an immutable list._<p>_If commaDelimited is true, it will automatically load a comma separated list under the settingPrefix and merge with_the numbered format.__@param key The setting key to load the list by_@return The setting list values;public List<String> getAsList(String key, List<String> defaultValue) throws SettingsException {_        return getAsList(key, defaultValue, true)__    };the,values,associated,with,a,setting,key,as,an,immutable,list,p,if,comma,delimited,is,true,it,will,automatically,load,a,comma,separated,list,under,the,setting,prefix,and,merge,with,the,numbered,format,param,key,the,setting,key,to,load,the,list,by,return,the,setting,list,values;public,list,string,get,as,list,string,key,list,string,default,value,throws,settings,exception,return,get,as,list,key,default,value,true
Settings -> public List<String> getAsList(String key, List<String> defaultValue) throws SettingsException;1547643436;The values associated with a setting key as an immutable list._<p>_If commaDelimited is true, it will automatically load a comma separated list under the settingPrefix and merge with_the numbered format.__@param key The setting key to load the list by_@return The setting list values;public List<String> getAsList(String key, List<String> defaultValue) throws SettingsException {_        return getAsList(key, defaultValue, true)__    };the,values,associated,with,a,setting,key,as,an,immutable,list,p,if,comma,delimited,is,true,it,will,automatically,load,a,comma,separated,list,under,the,setting,prefix,and,merge,with,the,numbered,format,param,key,the,setting,key,to,load,the,list,by,return,the,setting,list,values;public,list,string,get,as,list,string,key,list,string,default,value,throws,settings,exception,return,get,as,list,key,default,value,true
Settings -> public List<String> getAsList(String key, List<String> defaultValue) throws SettingsException;1548422582;The values associated with a setting key as an immutable list._<p>_If commaDelimited is true, it will automatically load a comma separated list under the settingPrefix and merge with_the numbered format.__@param key The setting key to load the list by_@return The setting list values;public List<String> getAsList(String key, List<String> defaultValue) throws SettingsException {_        return getAsList(key, defaultValue, true)__    };the,values,associated,with,a,setting,key,as,an,immutable,list,p,if,comma,delimited,is,true,it,will,automatically,load,a,comma,separated,list,under,the,setting,prefix,and,merge,with,the,numbered,format,param,key,the,setting,key,to,load,the,list,by,return,the,setting,list,values;public,list,string,get,as,list,string,key,list,string,default,value,throws,settings,exception,return,get,as,list,key,default,value,true
Settings -> public SizeValue getAsSize(String setting, SizeValue defaultValue) throws SettingsException;1524684173;Returns the setting value (as size) associated with the setting key. If it does not exists,_returns the default value provided.;public SizeValue getAsSize(String setting, SizeValue defaultValue) throws SettingsException {_        return parseSizeValue(get(setting), defaultValue)__    };returns,the,setting,value,as,size,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,size,value,get,as,size,string,setting,size,value,default,value,throws,settings,exception,return,parse,size,value,get,setting,default,value
Settings -> public SizeValue getAsSize(String setting, SizeValue defaultValue) throws SettingsException;1525334055;Returns the setting value (as size) associated with the setting key. If it does not exists,_returns the default value provided.;public SizeValue getAsSize(String setting, SizeValue defaultValue) throws SettingsException {_        return parseSizeValue(get(setting), defaultValue)__    };returns,the,setting,value,as,size,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,size,value,get,as,size,string,setting,size,value,default,value,throws,settings,exception,return,parse,size,value,get,setting,default,value
Settings -> public SizeValue getAsSize(String setting, SizeValue defaultValue) throws SettingsException;1536828374;Returns the setting value (as size) associated with the setting key. If it does not exists,_returns the default value provided.;public SizeValue getAsSize(String setting, SizeValue defaultValue) throws SettingsException {_        return parseSizeValue(get(setting), defaultValue)__    };returns,the,setting,value,as,size,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,size,value,get,as,size,string,setting,size,value,default,value,throws,settings,exception,return,parse,size,value,get,setting,default,value
Settings -> public SizeValue getAsSize(String setting, SizeValue defaultValue) throws SettingsException;1539951844;Returns the setting value (as size) associated with the setting key. If it does not exists,_returns the default value provided.;public SizeValue getAsSize(String setting, SizeValue defaultValue) throws SettingsException {_        return parseSizeValue(get(setting), defaultValue)__    };returns,the,setting,value,as,size,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,size,value,get,as,size,string,setting,size,value,default,value,throws,settings,exception,return,parse,size,value,get,setting,default,value
Settings -> public SizeValue getAsSize(String setting, SizeValue defaultValue) throws SettingsException;1540486836;Returns the setting value (as size) associated with the setting key. If it does not exists,_returns the default value provided.;public SizeValue getAsSize(String setting, SizeValue defaultValue) throws SettingsException {_        return parseSizeValue(get(setting), defaultValue)__    };returns,the,setting,value,as,size,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,size,value,get,as,size,string,setting,size,value,default,value,throws,settings,exception,return,parse,size,value,get,setting,default,value
Settings -> public SizeValue getAsSize(String setting, SizeValue defaultValue) throws SettingsException;1546842892;Returns the setting value (as size) associated with the setting key. If it does not exists,_returns the default value provided.;public SizeValue getAsSize(String setting, SizeValue defaultValue) throws SettingsException {_        return parseSizeValue(get(setting), defaultValue)__    };returns,the,setting,value,as,size,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,size,value,get,as,size,string,setting,size,value,default,value,throws,settings,exception,return,parse,size,value,get,setting,default,value
Settings -> public SizeValue getAsSize(String setting, SizeValue defaultValue) throws SettingsException;1546874030;Returns the setting value (as size) associated with the setting key. If it does not exists,_returns the default value provided.;public SizeValue getAsSize(String setting, SizeValue defaultValue) throws SettingsException {_        return parseSizeValue(get(setting), defaultValue)__    };returns,the,setting,value,as,size,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,size,value,get,as,size,string,setting,size,value,default,value,throws,settings,exception,return,parse,size,value,get,setting,default,value
Settings -> public SizeValue getAsSize(String setting, SizeValue defaultValue) throws SettingsException;1546901964;Returns the setting value (as size) associated with the setting key. If it does not exists,_returns the default value provided.;public SizeValue getAsSize(String setting, SizeValue defaultValue) throws SettingsException {_        return parseSizeValue(get(setting), defaultValue)__    };returns,the,setting,value,as,size,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,size,value,get,as,size,string,setting,size,value,default,value,throws,settings,exception,return,parse,size,value,get,setting,default,value
Settings -> Builder -> public Builder put(String key, Level level);1524684173;Sets an level setting with the provided setting key and level instance.__@param key  The setting key_@param level The setting value_@return The builder;public Builder put(String key, Level level) {_            return put(key, level.toString())__        };sets,an,level,setting,with,the,provided,setting,key,and,level,instance,param,key,the,setting,key,param,level,the,setting,value,return,the,builder;public,builder,put,string,key,level,level,return,put,key,level,to,string
Settings -> Builder -> public Builder put(String key, Level level);1525334055;Sets an level setting with the provided setting key and level instance.__@param key  The setting key_@param level The setting value_@return The builder;public Builder put(String key, Level level) {_            return put(key, level.toString())__        };sets,an,level,setting,with,the,provided,setting,key,and,level,instance,param,key,the,setting,key,param,level,the,setting,value,return,the,builder;public,builder,put,string,key,level,level,return,put,key,level,to,string
Settings -> Builder -> public Builder put(String key, Level level);1536828374;Sets an level setting with the provided setting key and level instance.__@param key  The setting key_@param level The setting value_@return The builder;public Builder put(String key, Level level) {_            return put(key, level.toString())__        };sets,an,level,setting,with,the,provided,setting,key,and,level,instance,param,key,the,setting,key,param,level,the,setting,value,return,the,builder;public,builder,put,string,key,level,level,return,put,key,level,to,string
Settings -> Builder -> public Builder put(String key, Level level);1539951844;Sets an level setting with the provided setting key and level instance.__@param key  The setting key_@param level The setting value_@return The builder;public Builder put(String key, Level level) {_            return put(key, level.toString())__        };sets,an,level,setting,with,the,provided,setting,key,and,level,instance,param,key,the,setting,key,param,level,the,setting,value,return,the,builder;public,builder,put,string,key,level,level,return,put,key,level,to,string
Settings -> Builder -> public Builder put(String key, Level level);1540486836;Sets an level setting with the provided setting key and level instance.__@param key  The setting key_@param level The setting value_@return The builder;public Builder put(String key, Level level) {_            return put(key, level.toString())__        };sets,an,level,setting,with,the,provided,setting,key,and,level,instance,param,key,the,setting,key,param,level,the,setting,value,return,the,builder;public,builder,put,string,key,level,level,return,put,key,level,to,string
Settings -> Builder -> public Builder put(String key, Level level);1546842892;Sets an level setting with the provided setting key and level instance.__@param key  The setting key_@param level The setting value_@return The builder;public Builder put(String key, Level level) {_            return put(key, level.toString())__        };sets,an,level,setting,with,the,provided,setting,key,and,level,instance,param,key,the,setting,key,param,level,the,setting,value,return,the,builder;public,builder,put,string,key,level,level,return,put,key,level,to,string
Settings -> Builder -> public Builder put(String key, Level level);1546874030;Sets an level setting with the provided setting key and level instance.__@param key  The setting key_@param level The setting value_@return The builder;public Builder put(String key, Level level) {_            return put(key, level.toString())__        };sets,an,level,setting,with,the,provided,setting,key,and,level,instance,param,key,the,setting,key,param,level,the,setting,value,return,the,builder;public,builder,put,string,key,level,level,return,put,key,level,to,string
Settings -> Builder -> public Builder put(String key, Level level);1546901964;Sets an level setting with the provided setting key and level instance.__@param key  The setting key_@param level The setting value_@return The builder;public Builder put(String key, Level level) {_            return put(key, level.toString())__        };sets,an,level,setting,with,the,provided,setting,key,and,level,instance,param,key,the,setting,key,param,level,the,setting,value,return,the,builder;public,builder,put,string,key,level,level,return,put,key,level,to,string
Settings -> Builder -> public Builder put(String key, Level level);1547643436;Sets an level setting with the provided setting key and level instance.__@param key  The setting key_@param level The setting value_@return The builder;public Builder put(String key, Level level) {_            return put(key, level.toString())__        };sets,an,level,setting,with,the,provided,setting,key,and,level,instance,param,key,the,setting,key,param,level,the,setting,value,return,the,builder;public,builder,put,string,key,level,level,return,put,key,level,to,string
Settings -> Builder -> public Builder put(String key, Level level);1548422582;Sets an level setting with the provided setting key and level instance.__@param key  The setting key_@param level The setting value_@return The builder;public Builder put(String key, Level level) {_            return put(key, level.toString())__        };sets,an,level,setting,with,the,provided,setting,key,and,level,instance,param,key,the,setting,key,param,level,the,setting,value,return,the,builder;public,builder,put,string,key,level,level,return,put,key,level,to,string
Settings -> public Settings getAsSettings(String setting);1524684173;Returns the settings mapped to the given setting name.;public Settings getAsSettings(String setting) {_        return getByPrefix(setting + ".")__    };returns,the,settings,mapped,to,the,given,setting,name;public,settings,get,as,settings,string,setting,return,get,by,prefix,setting
Settings -> public Settings getAsSettings(String setting);1525334055;Returns the settings mapped to the given setting name.;public Settings getAsSettings(String setting) {_        return getByPrefix(setting + ".")__    };returns,the,settings,mapped,to,the,given,setting,name;public,settings,get,as,settings,string,setting,return,get,by,prefix,setting
Settings -> public Settings getAsSettings(String setting);1536828374;Returns the settings mapped to the given setting name.;public Settings getAsSettings(String setting) {_        return getByPrefix(setting + ".")__    };returns,the,settings,mapped,to,the,given,setting,name;public,settings,get,as,settings,string,setting,return,get,by,prefix,setting
Settings -> public Settings getAsSettings(String setting);1539951844;Returns the settings mapped to the given setting name.;public Settings getAsSettings(String setting) {_        return getByPrefix(setting + ".")__    };returns,the,settings,mapped,to,the,given,setting,name;public,settings,get,as,settings,string,setting,return,get,by,prefix,setting
Settings -> public Settings getAsSettings(String setting);1540486836;Returns the settings mapped to the given setting name.;public Settings getAsSettings(String setting) {_        return getByPrefix(setting + ".")__    };returns,the,settings,mapped,to,the,given,setting,name;public,settings,get,as,settings,string,setting,return,get,by,prefix,setting
Settings -> public Settings getAsSettings(String setting);1546842892;Returns the settings mapped to the given setting name.;public Settings getAsSettings(String setting) {_        return getByPrefix(setting + ".")__    };returns,the,settings,mapped,to,the,given,setting,name;public,settings,get,as,settings,string,setting,return,get,by,prefix,setting
Settings -> public Settings getAsSettings(String setting);1546874030;Returns the settings mapped to the given setting name.;public Settings getAsSettings(String setting) {_        return getByPrefix(setting + ".")__    };returns,the,settings,mapped,to,the,given,setting,name;public,settings,get,as,settings,string,setting,return,get,by,prefix,setting
Settings -> public Settings getAsSettings(String setting);1546901964;Returns the settings mapped to the given setting name.;public Settings getAsSettings(String setting) {_        return getByPrefix(setting + ".")__    };returns,the,settings,mapped,to,the,given,setting,name;public,settings,get,as,settings,string,setting,return,get,by,prefix,setting
Settings -> public Settings getAsSettings(String setting);1547643436;Returns the settings mapped to the given setting name.;public Settings getAsSettings(String setting) {_        return getByPrefix(setting + ".")__    };returns,the,settings,mapped,to,the,given,setting,name;public,settings,get,as,settings,string,setting,return,get,by,prefix,setting
Settings -> public Settings getAsSettings(String setting);1548422582;Returns the settings mapped to the given setting name.;public Settings getAsSettings(String setting) {_        return getByPrefix(setting + ".")__    };returns,the,settings,mapped,to,the,given,setting,name;public,settings,get,as,settings,string,setting,return,get,by,prefix,setting
Settings -> public int size();1524684173;Returns the number of settings in this settings object.;public int size() {_        return keySet().size()__    };returns,the,number,of,settings,in,this,settings,object;public,int,size,return,key,set,size
Settings -> public int size();1525334055;Returns the number of settings in this settings object.;public int size() {_        return keySet().size()__    };returns,the,number,of,settings,in,this,settings,object;public,int,size,return,key,set,size
Settings -> public int size();1536828374;Returns the number of settings in this settings object.;public int size() {_        return keySet().size()__    };returns,the,number,of,settings,in,this,settings,object;public,int,size,return,key,set,size
Settings -> public int size();1539951844;Returns the number of settings in this settings object.;public int size() {_        return keySet().size()__    };returns,the,number,of,settings,in,this,settings,object;public,int,size,return,key,set,size
Settings -> public int size();1540486836;Returns the number of settings in this settings object.;public int size() {_        return keySet().size()__    };returns,the,number,of,settings,in,this,settings,object;public,int,size,return,key,set,size
Settings -> public int size();1546842892;Returns the number of settings in this settings object.;public int size() {_        return keySet().size()__    };returns,the,number,of,settings,in,this,settings,object;public,int,size,return,key,set,size
Settings -> public int size();1546874030;Returns the number of settings in this settings object.;public int size() {_        return keySet().size()__    };returns,the,number,of,settings,in,this,settings,object;public,int,size,return,key,set,size
Settings -> public int size();1546901964;Returns the number of settings in this settings object.;public int size() {_        return keySet().size()__    };returns,the,number,of,settings,in,this,settings,object;public,int,size,return,key,set,size
Settings -> public int size();1547643436;Returns the number of settings in this settings object.;public int size() {_        return keySet().size()__    };returns,the,number,of,settings,in,this,settings,object;public,int,size,return,key,set,size
Settings -> public int size();1548422582;Returns the number of settings in this settings object.;public int size() {_        return keySet().size()__    };returns,the,number,of,settings,in,this,settings,object;public,int,size,return,key,set,size
Settings -> Builder -> public Builder put(String key, Class clazz);1524684173;Sets a setting with the provided setting key and class as value.__@param key   The setting key_@param clazz The setting class value_@return The builder;public Builder put(String key, Class clazz) {_            map.put(key, clazz.getName())__            return this__        };sets,a,setting,with,the,provided,setting,key,and,class,as,value,param,key,the,setting,key,param,clazz,the,setting,class,value,return,the,builder;public,builder,put,string,key,class,clazz,map,put,key,clazz,get,name,return,this
Settings -> Builder -> public Builder put(String key, Class clazz);1525334055;Sets a setting with the provided setting key and class as value.__@param key   The setting key_@param clazz The setting class value_@return The builder;public Builder put(String key, Class clazz) {_            map.put(key, clazz.getName())__            return this__        };sets,a,setting,with,the,provided,setting,key,and,class,as,value,param,key,the,setting,key,param,clazz,the,setting,class,value,return,the,builder;public,builder,put,string,key,class,clazz,map,put,key,clazz,get,name,return,this
Settings -> Builder -> public Builder put(String key, Class clazz);1536828374;Sets a setting with the provided setting key and class as value.__@param key   The setting key_@param clazz The setting class value_@return The builder;public Builder put(String key, Class clazz) {_            map.put(key, clazz.getName())__            return this__        };sets,a,setting,with,the,provided,setting,key,and,class,as,value,param,key,the,setting,key,param,clazz,the,setting,class,value,return,the,builder;public,builder,put,string,key,class,clazz,map,put,key,clazz,get,name,return,this
Settings -> Builder -> public Builder put(String key, Class clazz);1539951844;Sets a setting with the provided setting key and class as value.__@param key   The setting key_@param clazz The setting class value_@return The builder;public Builder put(String key, Class clazz) {_            map.put(key, clazz.getName())__            return this__        };sets,a,setting,with,the,provided,setting,key,and,class,as,value,param,key,the,setting,key,param,clazz,the,setting,class,value,return,the,builder;public,builder,put,string,key,class,clazz,map,put,key,clazz,get,name,return,this
Settings -> Builder -> public Builder put(String key, Class clazz);1540486836;Sets a setting with the provided setting key and class as value.__@param key   The setting key_@param clazz The setting class value_@return The builder;public Builder put(String key, Class clazz) {_            map.put(key, clazz.getName())__            return this__        };sets,a,setting,with,the,provided,setting,key,and,class,as,value,param,key,the,setting,key,param,clazz,the,setting,class,value,return,the,builder;public,builder,put,string,key,class,clazz,map,put,key,clazz,get,name,return,this
Settings -> Builder -> public Builder put(String key, Class clazz);1546842892;Sets a setting with the provided setting key and class as value.__@param key   The setting key_@param clazz The setting class value_@return The builder;public Builder put(String key, Class clazz) {_            map.put(key, clazz.getName())__            return this__        };sets,a,setting,with,the,provided,setting,key,and,class,as,value,param,key,the,setting,key,param,clazz,the,setting,class,value,return,the,builder;public,builder,put,string,key,class,clazz,map,put,key,clazz,get,name,return,this
Settings -> Builder -> public Builder put(String key, Class clazz);1546874030;Sets a setting with the provided setting key and class as value.__@param key   The setting key_@param clazz The setting class value_@return The builder;public Builder put(String key, Class clazz) {_            map.put(key, clazz.getName())__            return this__        };sets,a,setting,with,the,provided,setting,key,and,class,as,value,param,key,the,setting,key,param,clazz,the,setting,class,value,return,the,builder;public,builder,put,string,key,class,clazz,map,put,key,clazz,get,name,return,this
Settings -> Builder -> public Builder put(String key, Class clazz);1546901964;Sets a setting with the provided setting key and class as value.__@param key   The setting key_@param clazz The setting class value_@return The builder;public Builder put(String key, Class clazz) {_            map.put(key, clazz.getName())__            return this__        };sets,a,setting,with,the,provided,setting,key,and,class,as,value,param,key,the,setting,key,param,clazz,the,setting,class,value,return,the,builder;public,builder,put,string,key,class,clazz,map,put,key,clazz,get,name,return,this
Settings -> Builder -> public Builder put(String key, Enum<?> enumValue);1524684173;Sets an enum setting with the provided setting key and enum instance.__@param key  The setting key_@param enumValue The setting value_@return The builder;public Builder put(String key, Enum<?> enumValue) {_            return put(key, enumValue.toString())__        };sets,an,enum,setting,with,the,provided,setting,key,and,enum,instance,param,key,the,setting,key,param,enum,value,the,setting,value,return,the,builder;public,builder,put,string,key,enum,enum,value,return,put,key,enum,value,to,string
Settings -> Builder -> public Builder put(String key, Enum<?> enumValue);1525334055;Sets an enum setting with the provided setting key and enum instance.__@param key  The setting key_@param enumValue The setting value_@return The builder;public Builder put(String key, Enum<?> enumValue) {_            return put(key, enumValue.toString())__        };sets,an,enum,setting,with,the,provided,setting,key,and,enum,instance,param,key,the,setting,key,param,enum,value,the,setting,value,return,the,builder;public,builder,put,string,key,enum,enum,value,return,put,key,enum,value,to,string
Settings -> Builder -> public Builder put(String key, Enum<?> enumValue);1536828374;Sets an enum setting with the provided setting key and enum instance.__@param key  The setting key_@param enumValue The setting value_@return The builder;public Builder put(String key, Enum<?> enumValue) {_            return put(key, enumValue.toString())__        };sets,an,enum,setting,with,the,provided,setting,key,and,enum,instance,param,key,the,setting,key,param,enum,value,the,setting,value,return,the,builder;public,builder,put,string,key,enum,enum,value,return,put,key,enum,value,to,string
Settings -> Builder -> public Builder put(String key, Enum<?> enumValue);1539951844;Sets an enum setting with the provided setting key and enum instance.__@param key  The setting key_@param enumValue The setting value_@return The builder;public Builder put(String key, Enum<?> enumValue) {_            return put(key, enumValue.toString())__        };sets,an,enum,setting,with,the,provided,setting,key,and,enum,instance,param,key,the,setting,key,param,enum,value,the,setting,value,return,the,builder;public,builder,put,string,key,enum,enum,value,return,put,key,enum,value,to,string
Settings -> Builder -> public Builder put(String key, Enum<?> enumValue);1540486836;Sets an enum setting with the provided setting key and enum instance.__@param key  The setting key_@param enumValue The setting value_@return The builder;public Builder put(String key, Enum<?> enumValue) {_            return put(key, enumValue.toString())__        };sets,an,enum,setting,with,the,provided,setting,key,and,enum,instance,param,key,the,setting,key,param,enum,value,the,setting,value,return,the,builder;public,builder,put,string,key,enum,enum,value,return,put,key,enum,value,to,string
Settings -> Builder -> public Builder put(String key, Enum<?> enumValue);1546842892;Sets an enum setting with the provided setting key and enum instance.__@param key  The setting key_@param enumValue The setting value_@return The builder;public Builder put(String key, Enum<?> enumValue) {_            return put(key, enumValue.toString())__        };sets,an,enum,setting,with,the,provided,setting,key,and,enum,instance,param,key,the,setting,key,param,enum,value,the,setting,value,return,the,builder;public,builder,put,string,key,enum,enum,value,return,put,key,enum,value,to,string
Settings -> Builder -> public Builder put(String key, Enum<?> enumValue);1546874030;Sets an enum setting with the provided setting key and enum instance.__@param key  The setting key_@param enumValue The setting value_@return The builder;public Builder put(String key, Enum<?> enumValue) {_            return put(key, enumValue.toString())__        };sets,an,enum,setting,with,the,provided,setting,key,and,enum,instance,param,key,the,setting,key,param,enum,value,the,setting,value,return,the,builder;public,builder,put,string,key,enum,enum,value,return,put,key,enum,value,to,string
Settings -> Builder -> public Builder put(String key, Enum<?> enumValue);1546901964;Sets an enum setting with the provided setting key and enum instance.__@param key  The setting key_@param enumValue The setting value_@return The builder;public Builder put(String key, Enum<?> enumValue) {_            return put(key, enumValue.toString())__        };sets,an,enum,setting,with,the,provided,setting,key,and,enum,instance,param,key,the,setting,key,param,enum,value,the,setting,value,return,the,builder;public,builder,put,string,key,enum,enum,value,return,put,key,enum,value,to,string
Settings -> Builder -> public Builder put(String key, Enum<?> enumValue);1547643436;Sets an enum setting with the provided setting key and enum instance.__@param key  The setting key_@param enumValue The setting value_@return The builder;public Builder put(String key, Enum<?> enumValue) {_            return put(key, enumValue.toString())__        };sets,an,enum,setting,with,the,provided,setting,key,and,enum,instance,param,key,the,setting,key,param,enum,value,the,setting,value,return,the,builder;public,builder,put,string,key,enum,enum,value,return,put,key,enum,value,to,string
Settings -> Builder -> public Builder put(String key, Enum<?> enumValue);1548422582;Sets an enum setting with the provided setting key and enum instance.__@param key  The setting key_@param enumValue The setting value_@return The builder;public Builder put(String key, Enum<?> enumValue) {_            return put(key, enumValue.toString())__        };sets,an,enum,setting,with,the,provided,setting,key,and,enum,instance,param,key,the,setting,key,param,enum,value,the,setting,value,return,the,builder;public,builder,put,string,key,enum,enum,value,return,put,key,enum,value,to,string
Settings -> Builder -> public Builder put(String key, org.apache.lucene.util.Version luceneVersion);1524684173;Sets an lucene version setting with the provided setting key and lucene version instance.__@param key  The setting key_@param luceneVersion The setting value_@return The builder;public Builder put(String key, org.apache.lucene.util.Version luceneVersion) {_            return put(key, luceneVersion.toString())__        };sets,an,lucene,version,setting,with,the,provided,setting,key,and,lucene,version,instance,param,key,the,setting,key,param,lucene,version,the,setting,value,return,the,builder;public,builder,put,string,key,org,apache,lucene,util,version,lucene,version,return,put,key,lucene,version,to,string
Settings -> Builder -> public Builder put(String key, org.apache.lucene.util.Version luceneVersion);1525334055;Sets an lucene version setting with the provided setting key and lucene version instance.__@param key  The setting key_@param luceneVersion The setting value_@return The builder;public Builder put(String key, org.apache.lucene.util.Version luceneVersion) {_            return put(key, luceneVersion.toString())__        };sets,an,lucene,version,setting,with,the,provided,setting,key,and,lucene,version,instance,param,key,the,setting,key,param,lucene,version,the,setting,value,return,the,builder;public,builder,put,string,key,org,apache,lucene,util,version,lucene,version,return,put,key,lucene,version,to,string
Settings -> Builder -> public Builder put(String key, org.apache.lucene.util.Version luceneVersion);1536828374;Sets an lucene version setting with the provided setting key and lucene version instance.__@param key  The setting key_@param luceneVersion The setting value_@return The builder;public Builder put(String key, org.apache.lucene.util.Version luceneVersion) {_            return put(key, luceneVersion.toString())__        };sets,an,lucene,version,setting,with,the,provided,setting,key,and,lucene,version,instance,param,key,the,setting,key,param,lucene,version,the,setting,value,return,the,builder;public,builder,put,string,key,org,apache,lucene,util,version,lucene,version,return,put,key,lucene,version,to,string
Settings -> Builder -> public Builder put(String key, org.apache.lucene.util.Version luceneVersion);1539951844;Sets an lucene version setting with the provided setting key and lucene version instance.__@param key  The setting key_@param luceneVersion The setting value_@return The builder;public Builder put(String key, org.apache.lucene.util.Version luceneVersion) {_            return put(key, luceneVersion.toString())__        };sets,an,lucene,version,setting,with,the,provided,setting,key,and,lucene,version,instance,param,key,the,setting,key,param,lucene,version,the,setting,value,return,the,builder;public,builder,put,string,key,org,apache,lucene,util,version,lucene,version,return,put,key,lucene,version,to,string
Settings -> Builder -> public Builder put(String key, org.apache.lucene.util.Version luceneVersion);1540486836;Sets an lucene version setting with the provided setting key and lucene version instance.__@param key  The setting key_@param luceneVersion The setting value_@return The builder;public Builder put(String key, org.apache.lucene.util.Version luceneVersion) {_            return put(key, luceneVersion.toString())__        };sets,an,lucene,version,setting,with,the,provided,setting,key,and,lucene,version,instance,param,key,the,setting,key,param,lucene,version,the,setting,value,return,the,builder;public,builder,put,string,key,org,apache,lucene,util,version,lucene,version,return,put,key,lucene,version,to,string
Settings -> Builder -> public Builder put(String key, org.apache.lucene.util.Version luceneVersion);1546842892;Sets an lucene version setting with the provided setting key and lucene version instance.__@param key  The setting key_@param luceneVersion The setting value_@return The builder;public Builder put(String key, org.apache.lucene.util.Version luceneVersion) {_            return put(key, luceneVersion.toString())__        };sets,an,lucene,version,setting,with,the,provided,setting,key,and,lucene,version,instance,param,key,the,setting,key,param,lucene,version,the,setting,value,return,the,builder;public,builder,put,string,key,org,apache,lucene,util,version,lucene,version,return,put,key,lucene,version,to,string
Settings -> Builder -> public Builder put(String key, org.apache.lucene.util.Version luceneVersion);1546874030;Sets an lucene version setting with the provided setting key and lucene version instance.__@param key  The setting key_@param luceneVersion The setting value_@return The builder;public Builder put(String key, org.apache.lucene.util.Version luceneVersion) {_            return put(key, luceneVersion.toString())__        };sets,an,lucene,version,setting,with,the,provided,setting,key,and,lucene,version,instance,param,key,the,setting,key,param,lucene,version,the,setting,value,return,the,builder;public,builder,put,string,key,org,apache,lucene,util,version,lucene,version,return,put,key,lucene,version,to,string
Settings -> Builder -> public Builder put(String key, org.apache.lucene.util.Version luceneVersion);1546901964;Sets an lucene version setting with the provided setting key and lucene version instance.__@param key  The setting key_@param luceneVersion The setting value_@return The builder;public Builder put(String key, org.apache.lucene.util.Version luceneVersion) {_            return put(key, luceneVersion.toString())__        };sets,an,lucene,version,setting,with,the,provided,setting,key,and,lucene,version,instance,param,key,the,setting,key,param,lucene,version,the,setting,value,return,the,builder;public,builder,put,string,key,org,apache,lucene,util,version,lucene,version,return,put,key,lucene,version,to,string
Settings -> Builder -> public Builder put(String key, org.apache.lucene.util.Version luceneVersion);1547643436;Sets an lucene version setting with the provided setting key and lucene version instance.__@param key  The setting key_@param luceneVersion The setting value_@return The builder;public Builder put(String key, org.apache.lucene.util.Version luceneVersion) {_            return put(key, luceneVersion.toString())__        };sets,an,lucene,version,setting,with,the,provided,setting,key,and,lucene,version,instance,param,key,the,setting,key,param,lucene,version,the,setting,value,return,the,builder;public,builder,put,string,key,org,apache,lucene,util,version,lucene,version,return,put,key,lucene,version,to,string
Settings -> Builder -> public Builder put(String key, org.apache.lucene.util.Version luceneVersion);1548422582;Sets an lucene version setting with the provided setting key and lucene version instance.__@param key  The setting key_@param luceneVersion The setting value_@return The builder;public Builder put(String key, org.apache.lucene.util.Version luceneVersion) {_            return put(key, luceneVersion.toString())__        };sets,an,lucene,version,setting,with,the,provided,setting,key,and,lucene,version,instance,param,key,the,setting,key,param,lucene,version,the,setting,value,return,the,builder;public,builder,put,string,key,org,apache,lucene,util,version,lucene,version,return,put,key,lucene,version,to,string
Settings -> public Version getAsVersion(String setting, Version defaultVersion) throws SettingsException;1524684173;Returns a parsed version.;public Version getAsVersion(String setting, Version defaultVersion) throws SettingsException {_        String sValue = get(setting)__        if (sValue == null) {_            return defaultVersion__        }_        try {_            return Version.fromId(Integer.parseInt(sValue))__        } catch (Exception e) {_            throw new SettingsException("Failed to parse version setting [" + setting + "] with value [" + sValue + "]", e)__        }_    };returns,a,parsed,version;public,version,get,as,version,string,setting,version,default,version,throws,settings,exception,string,s,value,get,setting,if,s,value,null,return,default,version,try,return,version,from,id,integer,parse,int,s,value,catch,exception,e,throw,new,settings,exception,failed,to,parse,version,setting,setting,with,value,s,value,e
Settings -> public Version getAsVersion(String setting, Version defaultVersion) throws SettingsException;1525334055;Returns a parsed version.;public Version getAsVersion(String setting, Version defaultVersion) throws SettingsException {_        String sValue = get(setting)__        if (sValue == null) {_            return defaultVersion__        }_        try {_            return Version.fromId(Integer.parseInt(sValue))__        } catch (Exception e) {_            throw new SettingsException("Failed to parse version setting [" + setting + "] with value [" + sValue + "]", e)__        }_    };returns,a,parsed,version;public,version,get,as,version,string,setting,version,default,version,throws,settings,exception,string,s,value,get,setting,if,s,value,null,return,default,version,try,return,version,from,id,integer,parse,int,s,value,catch,exception,e,throw,new,settings,exception,failed,to,parse,version,setting,setting,with,value,s,value,e
Settings -> public Version getAsVersion(String setting, Version defaultVersion) throws SettingsException;1536828374;Returns a parsed version.;public Version getAsVersion(String setting, Version defaultVersion) throws SettingsException {_        String sValue = get(setting)__        if (sValue == null) {_            return defaultVersion__        }_        try {_            return Version.fromId(Integer.parseInt(sValue))__        } catch (Exception e) {_            throw new SettingsException("Failed to parse version setting [" + setting + "] with value [" + sValue + "]", e)__        }_    };returns,a,parsed,version;public,version,get,as,version,string,setting,version,default,version,throws,settings,exception,string,s,value,get,setting,if,s,value,null,return,default,version,try,return,version,from,id,integer,parse,int,s,value,catch,exception,e,throw,new,settings,exception,failed,to,parse,version,setting,setting,with,value,s,value,e
Settings -> public Version getAsVersion(String setting, Version defaultVersion) throws SettingsException;1539951844;Returns a parsed version.;public Version getAsVersion(String setting, Version defaultVersion) throws SettingsException {_        String sValue = get(setting)__        if (sValue == null) {_            return defaultVersion__        }_        try {_            return Version.fromId(Integer.parseInt(sValue))__        } catch (Exception e) {_            throw new SettingsException("Failed to parse version setting [" + setting + "] with value [" + sValue + "]", e)__        }_    };returns,a,parsed,version;public,version,get,as,version,string,setting,version,default,version,throws,settings,exception,string,s,value,get,setting,if,s,value,null,return,default,version,try,return,version,from,id,integer,parse,int,s,value,catch,exception,e,throw,new,settings,exception,failed,to,parse,version,setting,setting,with,value,s,value,e
Settings -> public Version getAsVersion(String setting, Version defaultVersion) throws SettingsException;1540486836;Returns a parsed version.;public Version getAsVersion(String setting, Version defaultVersion) throws SettingsException {_        String sValue = get(setting)__        if (sValue == null) {_            return defaultVersion__        }_        try {_            return Version.fromId(Integer.parseInt(sValue))__        } catch (Exception e) {_            throw new SettingsException("Failed to parse version setting [" + setting + "] with value [" + sValue + "]", e)__        }_    };returns,a,parsed,version;public,version,get,as,version,string,setting,version,default,version,throws,settings,exception,string,s,value,get,setting,if,s,value,null,return,default,version,try,return,version,from,id,integer,parse,int,s,value,catch,exception,e,throw,new,settings,exception,failed,to,parse,version,setting,setting,with,value,s,value,e
Settings -> public Version getAsVersion(String setting, Version defaultVersion) throws SettingsException;1546842892;Returns a parsed version.;public Version getAsVersion(String setting, Version defaultVersion) throws SettingsException {_        String sValue = get(setting)__        if (sValue == null) {_            return defaultVersion__        }_        try {_            return Version.fromId(Integer.parseInt(sValue))__        } catch (Exception e) {_            throw new SettingsException("Failed to parse version setting [" + setting + "] with value [" + sValue + "]", e)__        }_    };returns,a,parsed,version;public,version,get,as,version,string,setting,version,default,version,throws,settings,exception,string,s,value,get,setting,if,s,value,null,return,default,version,try,return,version,from,id,integer,parse,int,s,value,catch,exception,e,throw,new,settings,exception,failed,to,parse,version,setting,setting,with,value,s,value,e
Settings -> public Version getAsVersion(String setting, Version defaultVersion) throws SettingsException;1546874030;Returns a parsed version.;public Version getAsVersion(String setting, Version defaultVersion) throws SettingsException {_        String sValue = get(setting)__        if (sValue == null) {_            return defaultVersion__        }_        try {_            return Version.fromId(Integer.parseInt(sValue))__        } catch (Exception e) {_            throw new SettingsException("Failed to parse version setting [" + setting + "] with value [" + sValue + "]", e)__        }_    };returns,a,parsed,version;public,version,get,as,version,string,setting,version,default,version,throws,settings,exception,string,s,value,get,setting,if,s,value,null,return,default,version,try,return,version,from,id,integer,parse,int,s,value,catch,exception,e,throw,new,settings,exception,failed,to,parse,version,setting,setting,with,value,s,value,e
Settings -> public Version getAsVersion(String setting, Version defaultVersion) throws SettingsException;1546901964;Returns a parsed version.;public Version getAsVersion(String setting, Version defaultVersion) throws SettingsException {_        String sValue = get(setting)__        if (sValue == null) {_            return defaultVersion__        }_        try {_            return Version.fromId(Integer.parseInt(sValue))__        } catch (Exception e) {_            throw new SettingsException("Failed to parse version setting [" + setting + "] with value [" + sValue + "]", e)__        }_    };returns,a,parsed,version;public,version,get,as,version,string,setting,version,default,version,throws,settings,exception,string,s,value,get,setting,if,s,value,null,return,default,version,try,return,version,from,id,integer,parse,int,s,value,catch,exception,e,throw,new,settings,exception,failed,to,parse,version,setting,setting,with,value,s,value,e
Settings -> public Version getAsVersion(String setting, Version defaultVersion) throws SettingsException;1547643436;Returns a parsed version.;public Version getAsVersion(String setting, Version defaultVersion) throws SettingsException {_        String sValue = get(setting)__        if (sValue == null) {_            return defaultVersion__        }_        try {_            return Version.fromId(Integer.parseInt(sValue))__        } catch (Exception e) {_            throw new SettingsException("Failed to parse version setting [" + setting + "] with value [" + sValue + "]", e)__        }_    };returns,a,parsed,version;public,version,get,as,version,string,setting,version,default,version,throws,settings,exception,string,s,value,get,setting,if,s,value,null,return,default,version,try,return,version,from,id,integer,parse,int,s,value,catch,exception,e,throw,new,settings,exception,failed,to,parse,version,setting,setting,with,value,s,value,e
Settings -> public Version getAsVersion(String setting, Version defaultVersion) throws SettingsException;1548422582;Returns a parsed version.;public Version getAsVersion(String setting, Version defaultVersion) throws SettingsException {_        String sValue = get(setting)__        if (sValue == null) {_            return defaultVersion__        }_        try {_            return Version.fromId(Integer.parseInt(sValue))__        } catch (Exception e) {_            throw new SettingsException("Failed to parse version setting [" + setting + "] with value [" + sValue + "]", e)__        }_    };returns,a,parsed,version;public,version,get,as,version,string,setting,version,default,version,throws,settings,exception,string,s,value,get,setting,if,s,value,null,return,default,version,try,return,version,from,id,integer,parse,int,s,value,catch,exception,e,throw,new,settings,exception,failed,to,parse,version,setting,setting,with,value,s,value,e
Settings -> public String get(String setting, String defaultValue);1524684173;Returns the setting value associated with the setting key. If it does not exists,_returns the default value provided.;public String get(String setting, String defaultValue) {_        String retVal = get(setting)__        return retVal == null ? defaultValue : retVal__    };returns,the,setting,value,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,string,get,string,setting,string,default,value,string,ret,val,get,setting,return,ret,val,null,default,value,ret,val
Settings -> public String get(String setting, String defaultValue);1525334055;Returns the setting value associated with the setting key. If it does not exists,_returns the default value provided.;public String get(String setting, String defaultValue) {_        String retVal = get(setting)__        return retVal == null ? defaultValue : retVal__    };returns,the,setting,value,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,string,get,string,setting,string,default,value,string,ret,val,get,setting,return,ret,val,null,default,value,ret,val
Settings -> public String get(String setting, String defaultValue);1536828374;Returns the setting value associated with the setting key. If it does not exists,_returns the default value provided.;public String get(String setting, String defaultValue) {_        String retVal = get(setting)__        return retVal == null ? defaultValue : retVal__    };returns,the,setting,value,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,string,get,string,setting,string,default,value,string,ret,val,get,setting,return,ret,val,null,default,value,ret,val
Settings -> public String get(String setting, String defaultValue);1539951844;Returns the setting value associated with the setting key. If it does not exists,_returns the default value provided.;public String get(String setting, String defaultValue) {_        String retVal = get(setting)__        return retVal == null ? defaultValue : retVal__    };returns,the,setting,value,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,string,get,string,setting,string,default,value,string,ret,val,get,setting,return,ret,val,null,default,value,ret,val
Settings -> public String get(String setting, String defaultValue);1540486836;Returns the setting value associated with the setting key. If it does not exists,_returns the default value provided.;public String get(String setting, String defaultValue) {_        String retVal = get(setting)__        return retVal == null ? defaultValue : retVal__    };returns,the,setting,value,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,string,get,string,setting,string,default,value,string,ret,val,get,setting,return,ret,val,null,default,value,ret,val
Settings -> public String get(String setting, String defaultValue);1546842892;Returns the setting value associated with the setting key. If it does not exists,_returns the default value provided.;public String get(String setting, String defaultValue) {_        String retVal = get(setting)__        return retVal == null ? defaultValue : retVal__    };returns,the,setting,value,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,string,get,string,setting,string,default,value,string,ret,val,get,setting,return,ret,val,null,default,value,ret,val
Settings -> public String get(String setting, String defaultValue);1546874030;Returns the setting value associated with the setting key. If it does not exists,_returns the default value provided.;public String get(String setting, String defaultValue) {_        String retVal = get(setting)__        return retVal == null ? defaultValue : retVal__    };returns,the,setting,value,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,string,get,string,setting,string,default,value,string,ret,val,get,setting,return,ret,val,null,default,value,ret,val
Settings -> public String get(String setting, String defaultValue);1546901964;Returns the setting value associated with the setting key. If it does not exists,_returns the default value provided.;public String get(String setting, String defaultValue) {_        String retVal = get(setting)__        return retVal == null ? defaultValue : retVal__    };returns,the,setting,value,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,string,get,string,setting,string,default,value,string,ret,val,get,setting,return,ret,val,null,default,value,ret,val
Settings -> public String get(String setting, String defaultValue);1547643436;Returns the setting value associated with the setting key. If it does not exists,_returns the default value provided.;public String get(String setting, String defaultValue) {_        String retVal = get(setting)__        return retVal == null ? defaultValue : retVal__    };returns,the,setting,value,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,string,get,string,setting,string,default,value,string,ret,val,get,setting,return,ret,val,null,default,value,ret,val
Settings -> public String get(String setting, String defaultValue);1548422582;Returns the setting value associated with the setting key. If it does not exists,_returns the default value provided.;public String get(String setting, String defaultValue) {_        String retVal = get(setting)__        return retVal == null ? defaultValue : retVal__    };returns,the,setting,value,associated,with,the,setting,key,if,it,does,not,exists,returns,the,default,value,provided;public,string,get,string,setting,string,default,value,string,ret,val,get,setting,return,ret,val,null,default,value,ret,val
Settings -> public Map<String, Settings> getAsGroups() throws SettingsException;1524684173;Returns group settings for the given setting prefix.;public Map<String, Settings> getAsGroups() throws SettingsException {_        return getAsGroups(false)__    };returns,group,settings,for,the,given,setting,prefix;public,map,string,settings,get,as,groups,throws,settings,exception,return,get,as,groups,false
Settings -> public Map<String, Settings> getAsGroups() throws SettingsException;1525334055;Returns group settings for the given setting prefix.;public Map<String, Settings> getAsGroups() throws SettingsException {_        return getAsGroups(false)__    };returns,group,settings,for,the,given,setting,prefix;public,map,string,settings,get,as,groups,throws,settings,exception,return,get,as,groups,false
Settings -> public Map<String, Settings> getAsGroups() throws SettingsException;1536828374;Returns group settings for the given setting prefix.;public Map<String, Settings> getAsGroups() throws SettingsException {_        return getAsGroups(false)__    };returns,group,settings,for,the,given,setting,prefix;public,map,string,settings,get,as,groups,throws,settings,exception,return,get,as,groups,false
Settings -> public Map<String, Settings> getAsGroups() throws SettingsException;1539951844;Returns group settings for the given setting prefix.;public Map<String, Settings> getAsGroups() throws SettingsException {_        return getAsGroups(false)__    };returns,group,settings,for,the,given,setting,prefix;public,map,string,settings,get,as,groups,throws,settings,exception,return,get,as,groups,false
Settings -> public Map<String, Settings> getAsGroups() throws SettingsException;1540486836;Returns group settings for the given setting prefix.;public Map<String, Settings> getAsGroups() throws SettingsException {_        return getAsGroups(false)__    };returns,group,settings,for,the,given,setting,prefix;public,map,string,settings,get,as,groups,throws,settings,exception,return,get,as,groups,false
Settings -> public Map<String, Settings> getAsGroups() throws SettingsException;1546842892;Returns group settings for the given setting prefix.;public Map<String, Settings> getAsGroups() throws SettingsException {_        return getAsGroups(false)__    };returns,group,settings,for,the,given,setting,prefix;public,map,string,settings,get,as,groups,throws,settings,exception,return,get,as,groups,false
Settings -> public Map<String, Settings> getAsGroups() throws SettingsException;1546874030;Returns group settings for the given setting prefix.;public Map<String, Settings> getAsGroups() throws SettingsException {_        return getAsGroups(false)__    };returns,group,settings,for,the,given,setting,prefix;public,map,string,settings,get,as,groups,throws,settings,exception,return,get,as,groups,false
Settings -> public Map<String, Settings> getAsGroups() throws SettingsException;1546901964;Returns group settings for the given setting prefix.;public Map<String, Settings> getAsGroups() throws SettingsException {_        return getAsGroups(false)__    };returns,group,settings,for,the,given,setting,prefix;public,map,string,settings,get,as,groups,throws,settings,exception,return,get,as,groups,false
Settings -> public Map<String, Settings> getAsGroups() throws SettingsException;1547643436;Returns group settings for the given setting prefix.;public Map<String, Settings> getAsGroups() throws SettingsException {_        return getGroupsInternal("", false)__    };returns,group,settings,for,the,given,setting,prefix;public,map,string,settings,get,as,groups,throws,settings,exception,return,get,groups,internal,false
Settings -> public Map<String, Settings> getAsGroups() throws SettingsException;1548422582;Returns group settings for the given setting prefix.;public Map<String, Settings> getAsGroups() throws SettingsException {_        return getGroupsInternal("", false)__    };returns,group,settings,for,the,given,setting,prefix;public,map,string,settings,get,as,groups,throws,settings,exception,return,get,groups,internal,false
