commented;modifiers;parameterAmount;loc;comment;code
false;public;1;6;;@Override public void writeTo(StreamOutput out) throws IOException {     super.writeTo(out).     publishResponse.writeTo(out).     out.writeOptionalWriteable(optionalJoin.orElse(null)). }
false;public;0;3;;public PublishResponse getPublishResponse() {     return publishResponse. }
false;public;0;3;;public Optional<Join> getJoin() {     return optionalJoin. }
false;public;1;10;;@Override public boolean equals(Object o) {     if (this == o)         return true.     if (!(o instanceof PublishWithJoinResponse))         return false.     PublishWithJoinResponse that = (PublishWithJoinResponse) o.     if (!publishResponse.equals(that.publishResponse))         return false.     return optionalJoin.equals(that.optionalJoin). }
false;public;0;6;;@Override public int hashCode() {     int result = publishResponse.hashCode().     result = 31 * result + optionalJoin.hashCode().     return result. }
false;public;0;7;;@Override public String toString() {     return "PublishWithJoinResponse{" + "publishResponse=" + publishResponse + ", optionalJoin=" + optionalJoin + '}'. }
