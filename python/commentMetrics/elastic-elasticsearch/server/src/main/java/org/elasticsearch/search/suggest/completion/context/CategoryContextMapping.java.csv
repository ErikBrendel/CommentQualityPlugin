# id;timestamp;commentText;codeText;commentWords;codeWords
CategoryContextMapping -> @Override     public Set<CharSequence> parseContext(ParseContext parseContext, XContentParser parser)             throws IOException, ElasticsearchParseException;1524684173;Parse a set of {@link CharSequence} contexts at index-time._Acceptable formats:__<ul>_<li>Array: <pre>[<i>&lt_string&gt_</i>, ..]</pre></li>_<li>String: <pre>&quot_string&quot_</pre></li>_</ul>;@Override_    public Set<CharSequence> parseContext(ParseContext parseContext, XContentParser parser)_            throws IOException, ElasticsearchParseException {_        final Set<CharSequence> contexts = new HashSet<>()__        Token token = parser.currentToken()__        if (token == Token.VALUE_STRING || token == Token.VALUE_NUMBER || token == Token.VALUE_BOOLEAN) {_            contexts.add(parser.text())__        } else if (token == Token.START_ARRAY) {_            while ((token = parser.nextToken()) != Token.END_ARRAY) {_                if (token == Token.VALUE_STRING || token == Token.VALUE_NUMBER || token == Token.VALUE_BOOLEAN) {_                    contexts.add(parser.text())__                } else {_                    throw new ElasticsearchParseException(_                            "context array must have string, number or boolean values, but was [" + token + "]")__                }_            }_        } else {_            throw new ElasticsearchParseException(_                    "contexts must be a string, number or boolean or a list of string, number or boolean, but was [" + token + "]")__        }_        return contexts__    };parse,a,set,of,link,char,sequence,contexts,at,index,time,acceptable,formats,ul,li,array,pre,i,lt,string,gt,i,pre,li,li,string,pre,quot,string,quot,pre,li,ul;override,public,set,char,sequence,parse,context,parse,context,parse,context,xcontent,parser,parser,throws,ioexception,elasticsearch,parse,exception,final,set,char,sequence,contexts,new,hash,set,token,token,parser,current,token,if,token,token,token,token,token,token,contexts,add,parser,text,else,if,token,token,while,token,parser,next,token,token,if,token,token,token,token,token,token,contexts,add,parser,text,else,throw,new,elasticsearch,parse,exception,context,array,must,have,string,number,or,boolean,values,but,was,token,else,throw,new,elasticsearch,parse,exception,contexts,must,be,a,string,number,or,boolean,or,a,list,of,string,number,or,boolean,but,was,token,return,contexts
CategoryContextMapping -> @Override     public Set<CharSequence> parseContext(ParseContext parseContext, XContentParser parser)             throws IOException, ElasticsearchParseException;1528762805;Parse a set of {@link CharSequence} contexts at index-time._Acceptable formats:__<ul>_<li>Array: <pre>[<i>&lt_string&gt_</i>, ..]</pre></li>_<li>String: <pre>&quot_string&quot_</pre></li>_</ul>;@Override_    public Set<CharSequence> parseContext(ParseContext parseContext, XContentParser parser)_            throws IOException, ElasticsearchParseException {_        final Set<CharSequence> contexts = new HashSet<>()__        Token token = parser.currentToken()__        if (token == Token.VALUE_STRING || token == Token.VALUE_NUMBER || token == Token.VALUE_BOOLEAN) {_            contexts.add(parser.text())__        } else if (token == Token.START_ARRAY) {_            while ((token = parser.nextToken()) != Token.END_ARRAY) {_                if (token == Token.VALUE_STRING || token == Token.VALUE_NUMBER || token == Token.VALUE_BOOLEAN) {_                    contexts.add(parser.text())__                } else {_                    throw new ElasticsearchParseException(_                            "context array must have string, number or boolean values, but was [" + token + "]")__                }_            }_        } else {_            throw new ElasticsearchParseException(_                    "contexts must be a string, number or boolean or a list of string, number or boolean, but was [" + token + "]")__        }_        return contexts__    };parse,a,set,of,link,char,sequence,contexts,at,index,time,acceptable,formats,ul,li,array,pre,i,lt,string,gt,i,pre,li,li,string,pre,quot,string,quot,pre,li,ul;override,public,set,char,sequence,parse,context,parse,context,parse,context,xcontent,parser,parser,throws,ioexception,elasticsearch,parse,exception,final,set,char,sequence,contexts,new,hash,set,token,token,parser,current,token,if,token,token,token,token,token,token,contexts,add,parser,text,else,if,token,token,while,token,parser,next,token,token,if,token,token,token,token,token,token,contexts,add,parser,text,else,throw,new,elasticsearch,parse,exception,context,array,must,have,string,number,or,boolean,values,but,was,token,else,throw,new,elasticsearch,parse,exception,contexts,must,be,a,string,number,or,boolean,or,a,list,of,string,number,or,boolean,but,was,token,return,contexts
CategoryContextMapping -> private CategoryContextMapping(String name, String fieldName);1524684173;Create a new {@link CategoryContextMapping} with field_<code>fieldName</code>;private CategoryContextMapping(String name, String fieldName) {_        super(Type.CATEGORY, name)__        this.fieldName = fieldName__    };create,a,new,link,category,context,mapping,with,field,code,field,name,code;private,category,context,mapping,string,name,string,field,name,super,type,category,name,this,field,name,field,name
CategoryContextMapping -> private CategoryContextMapping(String name, String fieldName);1528762805;Create a new {@link CategoryContextMapping} with field_<code>fieldName</code>;private CategoryContextMapping(String name, String fieldName) {_        super(Type.CATEGORY, name)__        this.fieldName = fieldName__    };create,a,new,link,category,context,mapping,with,field,code,field,name,code;private,category,context,mapping,string,name,string,field,name,super,type,category,name,this,field,name,field,name
CategoryContextMapping -> private CategoryContextMapping(String name, String fieldName);1542357322;Create a new {@link CategoryContextMapping} with field_<code>fieldName</code>;private CategoryContextMapping(String name, String fieldName) {_        super(Type.CATEGORY, name)__        this.fieldName = fieldName__    };create,a,new,link,category,context,mapping,with,field,code,field,name,code;private,category,context,mapping,string,name,string,field,name,super,type,category,name,this,field,name,field,name
CategoryContextMapping -> private CategoryContextMapping(String name, String fieldName);1544110272;Create a new {@link CategoryContextMapping} with field_<code>fieldName</code>;private CategoryContextMapping(String name, String fieldName) {_        super(Type.CATEGORY, name)__        this.fieldName = fieldName__    };create,a,new,link,category,context,mapping,with,field,code,field,name,code;private,category,context,mapping,string,name,string,field,name,super,type,category,name,this,field,name,field,name
CategoryContextMapping -> Builder -> public Builder(String name);1524684173;Create a builder for_a named {@link CategoryContextMapping}_@param name name of the mapping;public Builder(String name) {_            super(name)__        };create,a,builder,for,a,named,link,category,context,mapping,param,name,name,of,the,mapping;public,builder,string,name,super,name
CategoryContextMapping -> Builder -> public Builder(String name);1528762805;Create a builder for_a named {@link CategoryContextMapping}_@param name name of the mapping;public Builder(String name) {_            super(name)__        };create,a,builder,for,a,named,link,category,context,mapping,param,name,name,of,the,mapping;public,builder,string,name,super,name
CategoryContextMapping -> Builder -> public Builder(String name);1542357322;Create a builder for_a named {@link CategoryContextMapping}_@param name name of the mapping;public Builder(String name) {_            super(name)__        };create,a,builder,for,a,named,link,category,context,mapping,param,name,name,of,the,mapping;public,builder,string,name,super,name
CategoryContextMapping -> Builder -> public Builder(String name);1544110272;Create a builder for_a named {@link CategoryContextMapping}_@param name name of the mapping;public Builder(String name) {_            super(name)__        };create,a,builder,for,a,named,link,category,context,mapping,param,name,name,of,the,mapping;public,builder,string,name,super,name
CategoryContextMapping -> Builder -> public Builder field(String fieldName);1524684173;Set the name of the field to use;public Builder field(String fieldName) {_            this.fieldName = fieldName__            return this__        };set,the,name,of,the,field,to,use;public,builder,field,string,field,name,this,field,name,field,name,return,this
CategoryContextMapping -> Builder -> public Builder field(String fieldName);1528762805;Set the name of the field to use;public Builder field(String fieldName) {_            this.fieldName = fieldName__            return this__        };set,the,name,of,the,field,to,use;public,builder,field,string,field,name,this,field,name,field,name,return,this
CategoryContextMapping -> Builder -> public Builder field(String fieldName);1542357322;Set the name of the field to use;public Builder field(String fieldName) {_            this.fieldName = fieldName__            return this__        };set,the,name,of,the,field,to,use;public,builder,field,string,field,name,this,field,name,field,name,return,this
CategoryContextMapping -> Builder -> public Builder field(String fieldName);1544110272;Set the name of the field to use;public Builder field(String fieldName) {_            this.fieldName = fieldName__            return this__        };set,the,name,of,the,field,to,use;public,builder,field,string,field,name,this,field,name,field,name,return,this
CategoryContextMapping -> @Override     public Set<String> parseContext(ParseContext parseContext, XContentParser parser)             throws IOException, ElasticsearchParseException;1542357322;Parse a set of {@link CharSequence} contexts at index-time._Acceptable formats:__<ul>_<li>Array: <pre>[<i>&lt_string&gt_</i>, ..]</pre></li>_<li>String: <pre>&quot_string&quot_</pre></li>_</ul>;@Override_    public Set<String> parseContext(ParseContext parseContext, XContentParser parser)_            throws IOException, ElasticsearchParseException {_        final Set<String> contexts = new HashSet<>()__        Token token = parser.currentToken()__        if (token == Token.VALUE_STRING || token == Token.VALUE_NUMBER || token == Token.VALUE_BOOLEAN) {_            contexts.add(parser.text())__        } else if (token == Token.START_ARRAY) {_            while ((token = parser.nextToken()) != Token.END_ARRAY) {_                if (token == Token.VALUE_STRING || token == Token.VALUE_NUMBER || token == Token.VALUE_BOOLEAN) {_                    contexts.add(parser.text())__                } else {_                    throw new ElasticsearchParseException(_                            "context array must have string, number or boolean values, but was [" + token + "]")__                }_            }_        } else {_            throw new ElasticsearchParseException(_                    "contexts must be a string, number or boolean or a list of string, number or boolean, but was [" + token + "]")__        }_        return contexts__    };parse,a,set,of,link,char,sequence,contexts,at,index,time,acceptable,formats,ul,li,array,pre,i,lt,string,gt,i,pre,li,li,string,pre,quot,string,quot,pre,li,ul;override,public,set,string,parse,context,parse,context,parse,context,xcontent,parser,parser,throws,ioexception,elasticsearch,parse,exception,final,set,string,contexts,new,hash,set,token,token,parser,current,token,if,token,token,token,token,token,token,contexts,add,parser,text,else,if,token,token,while,token,parser,next,token,token,if,token,token,token,token,token,token,contexts,add,parser,text,else,throw,new,elasticsearch,parse,exception,context,array,must,have,string,number,or,boolean,values,but,was,token,else,throw,new,elasticsearch,parse,exception,contexts,must,be,a,string,number,or,boolean,or,a,list,of,string,number,or,boolean,but,was,token,return,contexts
CategoryContextMapping -> @Override     public Set<String> parseContext(ParseContext parseContext, XContentParser parser)             throws IOException, ElasticsearchParseException;1544110272;Parse a set of {@link CharSequence} contexts at index-time._Acceptable formats:__<ul>_<li>Array: <pre>[<i>&lt_string&gt_</i>, ..]</pre></li>_<li>String: <pre>&quot_string&quot_</pre></li>_</ul>;@Override_    public Set<String> parseContext(ParseContext parseContext, XContentParser parser)_            throws IOException, ElasticsearchParseException {_        final Set<String> contexts = new HashSet<>()__        Token token = parser.currentToken()__        if (token == Token.VALUE_STRING || token == Token.VALUE_NUMBER || token == Token.VALUE_BOOLEAN) {_            contexts.add(parser.text())__        } else if (token == Token.START_ARRAY) {_            while ((token = parser.nextToken()) != Token.END_ARRAY) {_                if (token == Token.VALUE_STRING || token == Token.VALUE_NUMBER || token == Token.VALUE_BOOLEAN) {_                    contexts.add(parser.text())__                } else {_                    throw new ElasticsearchParseException(_                            "context array must have string, number or boolean values, but was [" + token + "]")__                }_            }_        } else {_            throw new ElasticsearchParseException(_                    "contexts must be a string, number or boolean or a list of string, number or boolean, but was [" + token + "]")__        }_        return contexts__    };parse,a,set,of,link,char,sequence,contexts,at,index,time,acceptable,formats,ul,li,array,pre,i,lt,string,gt,i,pre,li,li,string,pre,quot,string,quot,pre,li,ul;override,public,set,string,parse,context,parse,context,parse,context,xcontent,parser,parser,throws,ioexception,elasticsearch,parse,exception,final,set,string,contexts,new,hash,set,token,token,parser,current,token,if,token,token,token,token,token,token,contexts,add,parser,text,else,if,token,token,while,token,parser,next,token,token,if,token,token,token,token,token,token,contexts,add,parser,text,else,throw,new,elasticsearch,parse,exception,context,array,must,have,string,number,or,boolean,values,but,was,token,else,throw,new,elasticsearch,parse,exception,contexts,must,be,a,string,number,or,boolean,or,a,list,of,string,number,or,boolean,but,was,token,return,contexts
CategoryContextMapping -> public String getFieldName();1524684173;Name of the field to get contexts from at index-time;public String getFieldName() {_        return fieldName__    };name,of,the,field,to,get,contexts,from,at,index,time;public,string,get,field,name,return,field,name
CategoryContextMapping -> public String getFieldName();1528762805;Name of the field to get contexts from at index-time;public String getFieldName() {_        return fieldName__    };name,of,the,field,to,get,contexts,from,at,index,time;public,string,get,field,name,return,field,name
CategoryContextMapping -> public String getFieldName();1542357322;Name of the field to get contexts from at index-time;public String getFieldName() {_        return fieldName__    };name,of,the,field,to,get,contexts,from,at,index,time;public,string,get,field,name,return,field,name
CategoryContextMapping -> public String getFieldName();1544110272;Name of the field to get contexts from at index-time;public String getFieldName() {_        return fieldName__    };name,of,the,field,to,get,contexts,from,at,index,time;public,string,get,field,name,return,field,name
CategoryContextMapping -> @Override     public List<InternalQueryContext> toInternalQueryContexts(List<CategoryQueryContext> queryContexts);1524684173;Parse a list of {@link CategoryQueryContext}_using <code>parser</code>. A QueryContexts accepts one of the following forms:__<ul>_<li>Object: CategoryQueryContext</li>_<li>String: CategoryQueryContext value with prefix=false and boost=1</li>_<li>Array: <pre>[CategoryQueryContext, ..]</pre></li>_</ul>__A CategoryQueryContext has one of the following forms:_<ul>_<li>Object: <pre>{&quot_context&quot_: <i>&lt_string&gt_</i>, &quot_boost&quot_: <i>&lt_int&gt_</i>, &quot_prefix&quot_: <i>&lt_boolean&gt_</i>}</pre></li>_<li>String: <pre>&quot_string&quot_</pre></li>_</ul>;@Override_    public List<InternalQueryContext> toInternalQueryContexts(List<CategoryQueryContext> queryContexts) {_        List<InternalQueryContext> internalInternalQueryContexts = new ArrayList<>(queryContexts.size())__        internalInternalQueryContexts.addAll(_            queryContexts.stream()_                .map(queryContext -> new InternalQueryContext(queryContext.getCategory(), queryContext.getBoost(), queryContext.isPrefix()))_                .collect(Collectors.toList()))__        return internalInternalQueryContexts__    };parse,a,list,of,link,category,query,context,using,code,parser,code,a,query,contexts,accepts,one,of,the,following,forms,ul,li,object,category,query,context,li,li,string,category,query,context,value,with,prefix,false,and,boost,1,li,li,array,pre,category,query,context,pre,li,ul,a,category,query,context,has,one,of,the,following,forms,ul,li,object,pre,quot,context,quot,i,lt,string,gt,i,quot,boost,quot,i,lt,int,gt,i,quot,prefix,quot,i,lt,boolean,gt,i,pre,li,li,string,pre,quot,string,quot,pre,li,ul;override,public,list,internal,query,context,to,internal,query,contexts,list,category,query,context,query,contexts,list,internal,query,context,internal,internal,query,contexts,new,array,list,query,contexts,size,internal,internal,query,contexts,add,all,query,contexts,stream,map,query,context,new,internal,query,context,query,context,get,category,query,context,get,boost,query,context,is,prefix,collect,collectors,to,list,return,internal,internal,query,contexts
CategoryContextMapping -> @Override     public List<InternalQueryContext> toInternalQueryContexts(List<CategoryQueryContext> queryContexts);1528762805;Parse a list of {@link CategoryQueryContext}_using <code>parser</code>. A QueryContexts accepts one of the following forms:__<ul>_<li>Object: CategoryQueryContext</li>_<li>String: CategoryQueryContext value with prefix=false and boost=1</li>_<li>Array: <pre>[CategoryQueryContext, ..]</pre></li>_</ul>__A CategoryQueryContext has one of the following forms:_<ul>_<li>Object: <pre>{&quot_context&quot_: <i>&lt_string&gt_</i>, &quot_boost&quot_: <i>&lt_int&gt_</i>, &quot_prefix&quot_: <i>&lt_boolean&gt_</i>}</pre></li>_<li>String: <pre>&quot_string&quot_</pre></li>_</ul>;@Override_    public List<InternalQueryContext> toInternalQueryContexts(List<CategoryQueryContext> queryContexts) {_        List<InternalQueryContext> internalInternalQueryContexts = new ArrayList<>(queryContexts.size())__        internalInternalQueryContexts.addAll(_            queryContexts.stream()_                .map(queryContext -> new InternalQueryContext(queryContext.getCategory(), queryContext.getBoost(), queryContext.isPrefix()))_                .collect(Collectors.toList()))__        return internalInternalQueryContexts__    };parse,a,list,of,link,category,query,context,using,code,parser,code,a,query,contexts,accepts,one,of,the,following,forms,ul,li,object,category,query,context,li,li,string,category,query,context,value,with,prefix,false,and,boost,1,li,li,array,pre,category,query,context,pre,li,ul,a,category,query,context,has,one,of,the,following,forms,ul,li,object,pre,quot,context,quot,i,lt,string,gt,i,quot,boost,quot,i,lt,int,gt,i,quot,prefix,quot,i,lt,boolean,gt,i,pre,li,li,string,pre,quot,string,quot,pre,li,ul;override,public,list,internal,query,context,to,internal,query,contexts,list,category,query,context,query,contexts,list,internal,query,context,internal,internal,query,contexts,new,array,list,query,contexts,size,internal,internal,query,contexts,add,all,query,contexts,stream,map,query,context,new,internal,query,context,query,context,get,category,query,context,get,boost,query,context,is,prefix,collect,collectors,to,list,return,internal,internal,query,contexts
CategoryContextMapping -> @Override     public List<InternalQueryContext> toInternalQueryContexts(List<CategoryQueryContext> queryContexts);1542357322;Parse a list of {@link CategoryQueryContext}_using <code>parser</code>. A QueryContexts accepts one of the following forms:__<ul>_<li>Object: CategoryQueryContext</li>_<li>String: CategoryQueryContext value with prefix=false and boost=1</li>_<li>Array: <pre>[CategoryQueryContext, ..]</pre></li>_</ul>__A CategoryQueryContext has one of the following forms:_<ul>_<li>Object: <pre>{&quot_context&quot_: <i>&lt_string&gt_</i>, &quot_boost&quot_: <i>&lt_int&gt_</i>, &quot_prefix&quot_: <i>&lt_boolean&gt_</i>}</pre></li>_<li>String: <pre>&quot_string&quot_</pre></li>_</ul>;@Override_    public List<InternalQueryContext> toInternalQueryContexts(List<CategoryQueryContext> queryContexts) {_        List<InternalQueryContext> internalInternalQueryContexts = new ArrayList<>(queryContexts.size())__        internalInternalQueryContexts.addAll(_            queryContexts.stream()_                .map(queryContext -> new InternalQueryContext(queryContext.getCategory(), queryContext.getBoost(), queryContext.isPrefix()))_                .collect(Collectors.toList()))__        return internalInternalQueryContexts__    };parse,a,list,of,link,category,query,context,using,code,parser,code,a,query,contexts,accepts,one,of,the,following,forms,ul,li,object,category,query,context,li,li,string,category,query,context,value,with,prefix,false,and,boost,1,li,li,array,pre,category,query,context,pre,li,ul,a,category,query,context,has,one,of,the,following,forms,ul,li,object,pre,quot,context,quot,i,lt,string,gt,i,quot,boost,quot,i,lt,int,gt,i,quot,prefix,quot,i,lt,boolean,gt,i,pre,li,li,string,pre,quot,string,quot,pre,li,ul;override,public,list,internal,query,context,to,internal,query,contexts,list,category,query,context,query,contexts,list,internal,query,context,internal,internal,query,contexts,new,array,list,query,contexts,size,internal,internal,query,contexts,add,all,query,contexts,stream,map,query,context,new,internal,query,context,query,context,get,category,query,context,get,boost,query,context,is,prefix,collect,collectors,to,list,return,internal,internal,query,contexts
CategoryContextMapping -> @Override     public List<InternalQueryContext> toInternalQueryContexts(List<CategoryQueryContext> queryContexts);1544110272;Parse a list of {@link CategoryQueryContext}_using <code>parser</code>. A QueryContexts accepts one of the following forms:__<ul>_<li>Object: CategoryQueryContext</li>_<li>String: CategoryQueryContext value with prefix=false and boost=1</li>_<li>Array: <pre>[CategoryQueryContext, ..]</pre></li>_</ul>__A CategoryQueryContext has one of the following forms:_<ul>_<li>Object: <pre>{&quot_context&quot_: <i>&lt_string&gt_</i>, &quot_boost&quot_: <i>&lt_int&gt_</i>, &quot_prefix&quot_:_<i>&lt_boolean&gt_</i>}</pre></li>_<li>String: <pre>&quot_string&quot_</pre></li>_</ul>;@Override_    public List<InternalQueryContext> toInternalQueryContexts(List<CategoryQueryContext> queryContexts) {_        List<InternalQueryContext> internalInternalQueryContexts = new ArrayList<>(queryContexts.size())__        internalInternalQueryContexts.addAll(_            queryContexts.stream()_                .map(queryContext -> new InternalQueryContext(queryContext.getCategory(), queryContext.getBoost(), queryContext.isPrefix()))_                .collect(Collectors.toList()))__        return internalInternalQueryContexts__    };parse,a,list,of,link,category,query,context,using,code,parser,code,a,query,contexts,accepts,one,of,the,following,forms,ul,li,object,category,query,context,li,li,string,category,query,context,value,with,prefix,false,and,boost,1,li,li,array,pre,category,query,context,pre,li,ul,a,category,query,context,has,one,of,the,following,forms,ul,li,object,pre,quot,context,quot,i,lt,string,gt,i,quot,boost,quot,i,lt,int,gt,i,quot,prefix,quot,i,lt,boolean,gt,i,pre,li,li,string,pre,quot,string,quot,pre,li,ul;override,public,list,internal,query,context,to,internal,query,contexts,list,category,query,context,query,contexts,list,internal,query,context,internal,internal,query,contexts,new,array,list,query,contexts,size,internal,internal,query,contexts,add,all,query,contexts,stream,map,query,context,new,internal,query,context,query,context,get,category,query,context,get,boost,query,context,is,prefix,collect,collectors,to,list,return,internal,internal,query,contexts
CategoryContextMapping -> protected static CategoryContextMapping load(String name, Map<String, Object> config) throws ElasticsearchParseException;1524684173;Loads a <code>name</code>d {@link CategoryContextMapping} instance_from a map._see {@link ContextMappings#load(Object, Version)}__Acceptable map param: <code>path</code>;protected static CategoryContextMapping load(String name, Map<String, Object> config) throws ElasticsearchParseException {_        CategoryContextMapping.Builder mapping = new CategoryContextMapping.Builder(name)__        Object fieldName = config.get(FIELD_FIELDNAME)__        if (fieldName != null) {_            mapping.field(fieldName.toString())__            config.remove(FIELD_FIELDNAME)__        }_        return mapping.build()__    };loads,a,code,name,code,d,link,category,context,mapping,instance,from,a,map,see,link,context,mappings,load,object,version,acceptable,map,param,code,path,code;protected,static,category,context,mapping,load,string,name,map,string,object,config,throws,elasticsearch,parse,exception,category,context,mapping,builder,mapping,new,category,context,mapping,builder,name,object,field,name,config,get,if,field,name,null,mapping,field,field,name,to,string,config,remove,return,mapping,build
CategoryContextMapping -> protected static CategoryContextMapping load(String name, Map<String, Object> config) throws ElasticsearchParseException;1528762805;Loads a <code>name</code>d {@link CategoryContextMapping} instance_from a map._see {@link ContextMappings#load(Object, Version)}__Acceptable map param: <code>path</code>;protected static CategoryContextMapping load(String name, Map<String, Object> config) throws ElasticsearchParseException {_        CategoryContextMapping.Builder mapping = new CategoryContextMapping.Builder(name)__        Object fieldName = config.get(FIELD_FIELDNAME)__        if (fieldName != null) {_            mapping.field(fieldName.toString())__            config.remove(FIELD_FIELDNAME)__        }_        return mapping.build()__    };loads,a,code,name,code,d,link,category,context,mapping,instance,from,a,map,see,link,context,mappings,load,object,version,acceptable,map,param,code,path,code;protected,static,category,context,mapping,load,string,name,map,string,object,config,throws,elasticsearch,parse,exception,category,context,mapping,builder,mapping,new,category,context,mapping,builder,name,object,field,name,config,get,if,field,name,null,mapping,field,field,name,to,string,config,remove,return,mapping,build
CategoryContextMapping -> protected static CategoryContextMapping load(String name, Map<String, Object> config) throws ElasticsearchParseException;1542357322;Loads a <code>name</code>d {@link CategoryContextMapping} instance_from a map._see {@link ContextMappings#load(Object, Version)}__Acceptable map param: <code>path</code>;protected static CategoryContextMapping load(String name, Map<String, Object> config) throws ElasticsearchParseException {_        CategoryContextMapping.Builder mapping = new CategoryContextMapping.Builder(name)__        Object fieldName = config.get(FIELD_FIELDNAME)__        if (fieldName != null) {_            mapping.field(fieldName.toString())__            config.remove(FIELD_FIELDNAME)__        }_        return mapping.build()__    };loads,a,code,name,code,d,link,category,context,mapping,instance,from,a,map,see,link,context,mappings,load,object,version,acceptable,map,param,code,path,code;protected,static,category,context,mapping,load,string,name,map,string,object,config,throws,elasticsearch,parse,exception,category,context,mapping,builder,mapping,new,category,context,mapping,builder,name,object,field,name,config,get,if,field,name,null,mapping,field,field,name,to,string,config,remove,return,mapping,build
CategoryContextMapping -> protected static CategoryContextMapping load(String name, Map<String, Object> config) throws ElasticsearchParseException;1544110272;Loads a <code>name</code>d {@link CategoryContextMapping} instance_from a map._see {@link ContextMappings#load(Object, Version)}__Acceptable map param: <code>path</code>;protected static CategoryContextMapping load(String name, Map<String, Object> config) throws ElasticsearchParseException {_        CategoryContextMapping.Builder mapping = new CategoryContextMapping.Builder(name)__        Object fieldName = config.get(FIELD_FIELDNAME)__        if (fieldName != null) {_            mapping.field(fieldName.toString())__            config.remove(FIELD_FIELDNAME)__        }_        return mapping.build()__    };loads,a,code,name,code,d,link,category,context,mapping,instance,from,a,map,see,link,context,mappings,load,object,version,acceptable,map,param,code,path,code;protected,static,category,context,mapping,load,string,name,map,string,object,config,throws,elasticsearch,parse,exception,category,context,mapping,builder,mapping,new,category,context,mapping,builder,name,object,field,name,config,get,if,field,name,null,mapping,field,field,name,to,string,config,remove,return,mapping,build
