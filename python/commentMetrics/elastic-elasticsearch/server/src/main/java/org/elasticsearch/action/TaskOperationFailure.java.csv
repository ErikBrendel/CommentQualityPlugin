commented;modifiers;parameterAmount;loc;comment;code
false;public;1;7;;@Override public void writeTo(StreamOutput out) throws IOException {     out.writeString(nodeId).     out.writeLong(taskId).     out.writeException(reason).     RestStatus.writeTo(out, status). }
false;public;0;3;;public String getNodeId() {     return this.nodeId. }
false;public;0;3;;public long getTaskId() {     return this.taskId. }
false;public;0;3;;public String getReason() {     return detailedMessage(reason). }
false;public;0;3;;public RestStatus getStatus() {     return status. }
false;public;0;3;;public Exception getCause() {     return reason. }
false;public;0;4;;@Override public String toString() {     return "[" + nodeId + "][" + taskId + "] failed, reason [" + getReason() + "]". }
false;public,static;1;3;;public static TaskOperationFailure fromXContent(XContentParser parser) {     return PARSER.apply(parser, null). }
false;public;2;14;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.field(TASK_ID, getTaskId()).     builder.field(NODE_ID, getNodeId()).     builder.field(STATUS, status.name()).     if (reason != null) {         builder.field(REASON).         builder.startObject().         ElasticsearchException.generateThrowableXContent(builder, params, reason).         builder.endObject().     }     return builder. }
