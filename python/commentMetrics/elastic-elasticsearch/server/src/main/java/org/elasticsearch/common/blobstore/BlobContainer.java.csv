# id;timestamp;commentText;codeText;commentWords;codeWords
BlobContainer -> boolean blobExists(String blobName)_;1524684173;Tests whether a blob with the given blob name exists in the container.__@param   blobName_The name of the blob whose existence is to be determined._@return  {@code true} if a blob exists in the {@link BlobContainer} with the given name, and {@code false} otherwise.;boolean blobExists(String blobName)_;tests,whether,a,blob,with,the,given,blob,name,exists,in,the,container,param,blob,name,the,name,of,the,blob,whose,existence,is,to,be,determined,return,code,true,if,a,blob,exists,in,the,link,blob,container,with,the,given,name,and,code,false,otherwise;boolean,blob,exists,string,blob,name
BlobContainer -> boolean blobExists(String blobName)_;1525798020;Tests whether a blob with the given blob name exists in the container.__@param   blobName_The name of the blob whose existence is to be determined._@return  {@code true} if a blob exists in the {@link BlobContainer} with the given name, and {@code false} otherwise.;boolean blobExists(String blobName)_;tests,whether,a,blob,with,the,given,blob,name,exists,in,the,container,param,blob,name,the,name,of,the,blob,whose,existence,is,to,be,determined,return,code,true,if,a,blob,exists,in,the,link,blob,container,with,the,given,name,and,code,false,otherwise;boolean,blob,exists,string,blob,name
BlobContainer -> boolean blobExists(String blobName)_;1528211342;Tests whether a blob with the given blob name exists in the container.__@param   blobName_The name of the blob whose existence is to be determined._@return  {@code true} if a blob exists in the {@link BlobContainer} with the given name, and {@code false} otherwise.;boolean blobExists(String blobName)_;tests,whether,a,blob,with,the,given,blob,name,exists,in,the,container,param,blob,name,the,name,of,the,blob,whose,existence,is,to,be,determined,return,code,true,if,a,blob,exists,in,the,link,blob,container,with,the,given,name,and,code,false,otherwise;boolean,blob,exists,string,blob,name
BlobContainer -> boolean blobExists(String blobName)_;1528706846;Tests whether a blob with the given blob name exists in the container.__@param   blobName_The name of the blob whose existence is to be determined._@return  {@code true} if a blob exists in the {@link BlobContainer} with the given name, and {@code false} otherwise.;boolean blobExists(String blobName)_;tests,whether,a,blob,with,the,given,blob,name,exists,in,the,container,param,blob,name,the,name,of,the,blob,whose,existence,is,to,be,determined,return,code,true,if,a,blob,exists,in,the,link,blob,container,with,the,given,name,and,code,false,otherwise;boolean,blob,exists,string,blob,name
BlobContainer -> boolean blobExists(String blobName)_;1531179852;Tests whether a blob with the given blob name exists in the container.__@param   blobName_The name of the blob whose existence is to be determined._@return  {@code true} if a blob exists in the {@link BlobContainer} with the given name, and {@code false} otherwise.;boolean blobExists(String blobName)_;tests,whether,a,blob,with,the,given,blob,name,exists,in,the,container,param,blob,name,the,name,of,the,blob,whose,existence,is,to,be,determined,return,code,true,if,a,blob,exists,in,the,link,blob,container,with,the,given,name,and,code,false,otherwise;boolean,blob,exists,string,blob,name
BlobContainer -> boolean blobExists(String blobName)_;1546859479;Tests whether a blob with the given blob name exists in the container.__@param   blobName_The name of the blob whose existence is to be determined._@return  {@code true} if a blob exists in the {@link BlobContainer} with the given name, and {@code false} otherwise.;boolean blobExists(String blobName)_;tests,whether,a,blob,with,the,given,blob,name,exists,in,the,container,param,blob,name,the,name,of,the,blob,whose,existence,is,to,be,determined,return,code,true,if,a,blob,exists,in,the,link,blob,container,with,the,given,name,and,code,false,otherwise;boolean,blob,exists,string,blob,name
BlobContainer -> default void deleteBlobIgnoringIfNotExists(String blobName) throws IOException;1525798020;Deletes a blob with giving name, ignoring if the blob does not exist.__@param   blobName_The name of the blob to delete._@throws  IOException if the blob exists but could not be deleted.;default void deleteBlobIgnoringIfNotExists(String blobName) throws IOException {_        try {_            deleteBlob(blobName)__        } catch (final NoSuchFileException ignored) {_            _        }_    };deletes,a,blob,with,giving,name,ignoring,if,the,blob,does,not,exist,param,blob,name,the,name,of,the,blob,to,delete,throws,ioexception,if,the,blob,exists,but,could,not,be,deleted;default,void,delete,blob,ignoring,if,not,exists,string,blob,name,throws,ioexception,try,delete,blob,blob,name,catch,final,no,such,file,exception,ignored
BlobContainer -> default void deleteBlobIgnoringIfNotExists(String blobName) throws IOException;1528211342;Deletes a blob with giving name, ignoring if the blob does not exist.__@param   blobName_The name of the blob to delete._@throws  IOException if the blob exists but could not be deleted.;default void deleteBlobIgnoringIfNotExists(String blobName) throws IOException {_        try {_            deleteBlob(blobName)__        } catch (final NoSuchFileException ignored) {_            _        }_    };deletes,a,blob,with,giving,name,ignoring,if,the,blob,does,not,exist,param,blob,name,the,name,of,the,blob,to,delete,throws,ioexception,if,the,blob,exists,but,could,not,be,deleted;default,void,delete,blob,ignoring,if,not,exists,string,blob,name,throws,ioexception,try,delete,blob,blob,name,catch,final,no,such,file,exception,ignored
BlobContainer -> default void deleteBlobIgnoringIfNotExists(String blobName) throws IOException;1528706846;Deletes a blob with giving name, ignoring if the blob does not exist.__@param   blobName_The name of the blob to delete._@throws  IOException if the blob exists but could not be deleted.;default void deleteBlobIgnoringIfNotExists(String blobName) throws IOException {_        try {_            deleteBlob(blobName)__        } catch (final NoSuchFileException ignored) {_            _        }_    };deletes,a,blob,with,giving,name,ignoring,if,the,blob,does,not,exist,param,blob,name,the,name,of,the,blob,to,delete,throws,ioexception,if,the,blob,exists,but,could,not,be,deleted;default,void,delete,blob,ignoring,if,not,exists,string,blob,name,throws,ioexception,try,delete,blob,blob,name,catch,final,no,such,file,exception,ignored
BlobContainer -> default void deleteBlobIgnoringIfNotExists(String blobName) throws IOException;1531179852;Deletes a blob with giving name, ignoring if the blob does not exist.__@param   blobName_The name of the blob to delete._@throws  IOException if the blob exists but could not be deleted.;default void deleteBlobIgnoringIfNotExists(String blobName) throws IOException {_        try {_            deleteBlob(blobName)__        } catch (final NoSuchFileException ignored) {_            _        }_    };deletes,a,blob,with,giving,name,ignoring,if,the,blob,does,not,exist,param,blob,name,the,name,of,the,blob,to,delete,throws,ioexception,if,the,blob,exists,but,could,not,be,deleted;default,void,delete,blob,ignoring,if,not,exists,string,blob,name,throws,ioexception,try,delete,blob,blob,name,catch,final,no,such,file,exception,ignored
BlobContainer -> default void deleteBlobIgnoringIfNotExists(String blobName) throws IOException;1546859479;Deletes a blob with giving name, ignoring if the blob does not exist.__@param   blobName_The name of the blob to delete._@throws  IOException if the blob exists but could not be deleted.;default void deleteBlobIgnoringIfNotExists(String blobName) throws IOException {_        try {_            deleteBlob(blobName)__        } catch (final NoSuchFileException ignored) {_            _        }_    };deletes,a,blob,with,giving,name,ignoring,if,the,blob,does,not,exist,param,blob,name,the,name,of,the,blob,to,delete,throws,ioexception,if,the,blob,exists,but,could,not,be,deleted;default,void,delete,blob,ignoring,if,not,exists,string,blob,name,throws,ioexception,try,delete,blob,blob,name,catch,final,no,such,file,exception,ignored
BlobContainer -> void deleteBlob(String blobName) throws IOException_;1524684173;Deletes a blob with giving name, if the blob exists.  If the blob does not exist, this method throws an IOException.__@param   blobName_The name of the blob to delete._@throws  NoSuchFileException if the blob does not exist_@throws  IOException if the blob exists but could not be deleted.;void deleteBlob(String blobName) throws IOException_;deletes,a,blob,with,giving,name,if,the,blob,exists,if,the,blob,does,not,exist,this,method,throws,an,ioexception,param,blob,name,the,name,of,the,blob,to,delete,throws,no,such,file,exception,if,the,blob,does,not,exist,throws,ioexception,if,the,blob,exists,but,could,not,be,deleted;void,delete,blob,string,blob,name,throws,ioexception
BlobContainer -> void deleteBlob(String blobName) throws IOException_;1525798020;Deletes a blob with giving name, if the blob exists. If the blob does not exist,_this method throws a NoSuchFileException.__@param   blobName_The name of the blob to delete._@throws  NoSuchFileException if the blob does not exist_@throws  IOException if the blob exists but could not be deleted.;void deleteBlob(String blobName) throws IOException_;deletes,a,blob,with,giving,name,if,the,blob,exists,if,the,blob,does,not,exist,this,method,throws,a,no,such,file,exception,param,blob,name,the,name,of,the,blob,to,delete,throws,no,such,file,exception,if,the,blob,does,not,exist,throws,ioexception,if,the,blob,exists,but,could,not,be,deleted;void,delete,blob,string,blob,name,throws,ioexception
BlobContainer -> void deleteBlob(String blobName) throws IOException_;1528211342;Deletes a blob with giving name, if the blob exists. If the blob does not exist,_this method throws a NoSuchFileException.__@param   blobName_The name of the blob to delete._@throws  NoSuchFileException if the blob does not exist_@throws  IOException if the blob exists but could not be deleted.;void deleteBlob(String blobName) throws IOException_;deletes,a,blob,with,giving,name,if,the,blob,exists,if,the,blob,does,not,exist,this,method,throws,a,no,such,file,exception,param,blob,name,the,name,of,the,blob,to,delete,throws,no,such,file,exception,if,the,blob,does,not,exist,throws,ioexception,if,the,blob,exists,but,could,not,be,deleted;void,delete,blob,string,blob,name,throws,ioexception
BlobContainer -> void deleteBlob(String blobName) throws IOException_;1528706846;Deletes a blob with giving name, if the blob exists. If the blob does not exist,_this method throws a NoSuchFileException.__@param   blobName_The name of the blob to delete._@throws  NoSuchFileException if the blob does not exist_@throws  IOException if the blob exists but could not be deleted.;void deleteBlob(String blobName) throws IOException_;deletes,a,blob,with,giving,name,if,the,blob,exists,if,the,blob,does,not,exist,this,method,throws,a,no,such,file,exception,param,blob,name,the,name,of,the,blob,to,delete,throws,no,such,file,exception,if,the,blob,does,not,exist,throws,ioexception,if,the,blob,exists,but,could,not,be,deleted;void,delete,blob,string,blob,name,throws,ioexception
BlobContainer -> void deleteBlob(String blobName) throws IOException_;1531179852;Deletes a blob with giving name, if the blob exists. If the blob does not exist,_this method throws a NoSuchFileException.__@param   blobName_The name of the blob to delete._@throws  NoSuchFileException if the blob does not exist_@throws  IOException if the blob exists but could not be deleted.;void deleteBlob(String blobName) throws IOException_;deletes,a,blob,with,giving,name,if,the,blob,exists,if,the,blob,does,not,exist,this,method,throws,a,no,such,file,exception,param,blob,name,the,name,of,the,blob,to,delete,throws,no,such,file,exception,if,the,blob,does,not,exist,throws,ioexception,if,the,blob,exists,but,could,not,be,deleted;void,delete,blob,string,blob,name,throws,ioexception
BlobContainer -> void deleteBlob(String blobName) throws IOException_;1546859479;Deletes a blob with giving name, if the blob exists. If the blob does not exist,_this method throws a NoSuchFileException.__@param   blobName_The name of the blob to delete._@throws  NoSuchFileException if the blob does not exist_@throws  IOException if the blob exists but could not be deleted.;void deleteBlob(String blobName) throws IOException_;deletes,a,blob,with,giving,name,if,the,blob,exists,if,the,blob,does,not,exist,this,method,throws,a,no,such,file,exception,param,blob,name,the,name,of,the,blob,to,delete,throws,no,such,file,exception,if,the,blob,does,not,exist,throws,ioexception,if,the,blob,exists,but,could,not,be,deleted;void,delete,blob,string,blob,name,throws,ioexception
BlobContainer -> void writeBlob(String blobName, InputStream inputStream, long blobSize) throws IOException_;1524684173;Reads blob content from the input stream and writes it to the container in a new blob with the given name._This method assumes the container does not already contain a blob of the same blobName.  If a blob by the_same name already exists, the operation will fail and an {@link IOException} will be thrown.__@param   blobName_The name of the blob to write the contents of the input stream to._@param   inputStream_The input stream from which to retrieve the bytes to write to the blob._@param   blobSize_The size of the blob to be written, in bytes.  It is implementation dependent whether_this value is used in writing the blob to the repository._@throws  FileAlreadyExistsException if a blob by the same name already exists_@throws  IOException if the input stream could not be read, or the target blob could not be written to.;void writeBlob(String blobName, InputStream inputStream, long blobSize) throws IOException_;reads,blob,content,from,the,input,stream,and,writes,it,to,the,container,in,a,new,blob,with,the,given,name,this,method,assumes,the,container,does,not,already,contain,a,blob,of,the,same,blob,name,if,a,blob,by,the,same,name,already,exists,the,operation,will,fail,and,an,link,ioexception,will,be,thrown,param,blob,name,the,name,of,the,blob,to,write,the,contents,of,the,input,stream,to,param,input,stream,the,input,stream,from,which,to,retrieve,the,bytes,to,write,to,the,blob,param,blob,size,the,size,of,the,blob,to,be,written,in,bytes,it,is,implementation,dependent,whether,this,value,is,used,in,writing,the,blob,to,the,repository,throws,file,already,exists,exception,if,a,blob,by,the,same,name,already,exists,throws,ioexception,if,the,input,stream,could,not,be,read,or,the,target,blob,could,not,be,written,to;void,write,blob,string,blob,name,input,stream,input,stream,long,blob,size,throws,ioexception
BlobContainer -> void writeBlob(String blobName, InputStream inputStream, long blobSize) throws IOException_;1525798020;Reads blob content from the input stream and writes it to the container in a new blob with the given name._This method assumes the container does not already contain a blob of the same blobName.  If a blob by the_same name already exists, the operation will fail and an {@link IOException} will be thrown.__@param   blobName_The name of the blob to write the contents of the input stream to._@param   inputStream_The input stream from which to retrieve the bytes to write to the blob._@param   blobSize_The size of the blob to be written, in bytes.  It is implementation dependent whether_this value is used in writing the blob to the repository._@throws  FileAlreadyExistsException if a blob by the same name already exists_@throws  IOException if the input stream could not be read, or the target blob could not be written to.;void writeBlob(String blobName, InputStream inputStream, long blobSize) throws IOException_;reads,blob,content,from,the,input,stream,and,writes,it,to,the,container,in,a,new,blob,with,the,given,name,this,method,assumes,the,container,does,not,already,contain,a,blob,of,the,same,blob,name,if,a,blob,by,the,same,name,already,exists,the,operation,will,fail,and,an,link,ioexception,will,be,thrown,param,blob,name,the,name,of,the,blob,to,write,the,contents,of,the,input,stream,to,param,input,stream,the,input,stream,from,which,to,retrieve,the,bytes,to,write,to,the,blob,param,blob,size,the,size,of,the,blob,to,be,written,in,bytes,it,is,implementation,dependent,whether,this,value,is,used,in,writing,the,blob,to,the,repository,throws,file,already,exists,exception,if,a,blob,by,the,same,name,already,exists,throws,ioexception,if,the,input,stream,could,not,be,read,or,the,target,blob,could,not,be,written,to;void,write,blob,string,blob,name,input,stream,input,stream,long,blob,size,throws,ioexception
BlobContainer -> void writeBlob(String blobName, InputStream inputStream, long blobSize) throws IOException_;1528211342;Reads blob content from the input stream and writes it to the container in a new blob with the given name._This method assumes the container does not already contain a blob of the same blobName.  If a blob by the_same name already exists, the operation will fail and an {@link IOException} will be thrown.__@param   blobName_The name of the blob to write the contents of the input stream to._@param   inputStream_The input stream from which to retrieve the bytes to write to the blob._@param   blobSize_The size of the blob to be written, in bytes.  It is implementation dependent whether_this value is used in writing the blob to the repository._@throws  FileAlreadyExistsException if a blob by the same name already exists_@throws  IOException if the input stream could not be read, or the target blob could not be written to.;void writeBlob(String blobName, InputStream inputStream, long blobSize) throws IOException_;reads,blob,content,from,the,input,stream,and,writes,it,to,the,container,in,a,new,blob,with,the,given,name,this,method,assumes,the,container,does,not,already,contain,a,blob,of,the,same,blob,name,if,a,blob,by,the,same,name,already,exists,the,operation,will,fail,and,an,link,ioexception,will,be,thrown,param,blob,name,the,name,of,the,blob,to,write,the,contents,of,the,input,stream,to,param,input,stream,the,input,stream,from,which,to,retrieve,the,bytes,to,write,to,the,blob,param,blob,size,the,size,of,the,blob,to,be,written,in,bytes,it,is,implementation,dependent,whether,this,value,is,used,in,writing,the,blob,to,the,repository,throws,file,already,exists,exception,if,a,blob,by,the,same,name,already,exists,throws,ioexception,if,the,input,stream,could,not,be,read,or,the,target,blob,could,not,be,written,to;void,write,blob,string,blob,name,input,stream,input,stream,long,blob,size,throws,ioexception
BlobContainer -> void writeBlob(String blobName, InputStream inputStream, long blobSize) throws IOException_;1528706846;Reads blob content from the input stream and writes it to the container in a new blob with the given name._This method assumes the container does not already contain a blob of the same blobName.  If a blob by the_same name already exists, the operation will fail and an {@link IOException} will be thrown.__@param   blobName_The name of the blob to write the contents of the input stream to._@param   inputStream_The input stream from which to retrieve the bytes to write to the blob._@param   blobSize_The size of the blob to be written, in bytes.  It is implementation dependent whether_this value is used in writing the blob to the repository._@throws  FileAlreadyExistsException if a blob by the same name already exists_@throws  IOException if the input stream could not be read, or the target blob could not be written to.;void writeBlob(String blobName, InputStream inputStream, long blobSize) throws IOException_;reads,blob,content,from,the,input,stream,and,writes,it,to,the,container,in,a,new,blob,with,the,given,name,this,method,assumes,the,container,does,not,already,contain,a,blob,of,the,same,blob,name,if,a,blob,by,the,same,name,already,exists,the,operation,will,fail,and,an,link,ioexception,will,be,thrown,param,blob,name,the,name,of,the,blob,to,write,the,contents,of,the,input,stream,to,param,input,stream,the,input,stream,from,which,to,retrieve,the,bytes,to,write,to,the,blob,param,blob,size,the,size,of,the,blob,to,be,written,in,bytes,it,is,implementation,dependent,whether,this,value,is,used,in,writing,the,blob,to,the,repository,throws,file,already,exists,exception,if,a,blob,by,the,same,name,already,exists,throws,ioexception,if,the,input,stream,could,not,be,read,or,the,target,blob,could,not,be,written,to;void,write,blob,string,blob,name,input,stream,input,stream,long,blob,size,throws,ioexception
BlobContainer -> default void writeBlobAtomic(final String blobName, final InputStream inputStream, final long blobSize) throws IOException;1528211342;Reads blob content from the input stream and writes it to the container in a new blob with the given name,_using an atomic write operation if the implementation supports it. When the BlobContainer implementation_does not provide a specific implementation of writeBlobAtomic(String, InputStream, long), then_the {@link #writeBlob(String, InputStream, long)} method is used.__This method assumes the container does not already contain a blob of the same blobName.  If a blob by the_same name already exists, the operation will fail and an {@link IOException} will be thrown.__@param   blobName_The name of the blob to write the contents of the input stream to._@param   inputStream_The input stream from which to retrieve the bytes to write to the blob._@param   blobSize_The size of the blob to be written, in bytes.  It is implementation dependent whether_this value is used in writing the blob to the repository._@throws  FileAlreadyExistsException if a blob by the same name already exists_@throws  IOException if the input stream could not be read, or the target blob could not be written to.;default void writeBlobAtomic(final String blobName, final InputStream inputStream, final long blobSize) throws IOException {_        writeBlob(blobName, inputStream, blobSize)__    };reads,blob,content,from,the,input,stream,and,writes,it,to,the,container,in,a,new,blob,with,the,given,name,using,an,atomic,write,operation,if,the,implementation,supports,it,when,the,blob,container,implementation,does,not,provide,a,specific,implementation,of,write,blob,atomic,string,input,stream,long,then,the,link,write,blob,string,input,stream,long,method,is,used,this,method,assumes,the,container,does,not,already,contain,a,blob,of,the,same,blob,name,if,a,blob,by,the,same,name,already,exists,the,operation,will,fail,and,an,link,ioexception,will,be,thrown,param,blob,name,the,name,of,the,blob,to,write,the,contents,of,the,input,stream,to,param,input,stream,the,input,stream,from,which,to,retrieve,the,bytes,to,write,to,the,blob,param,blob,size,the,size,of,the,blob,to,be,written,in,bytes,it,is,implementation,dependent,whether,this,value,is,used,in,writing,the,blob,to,the,repository,throws,file,already,exists,exception,if,a,blob,by,the,same,name,already,exists,throws,ioexception,if,the,input,stream,could,not,be,read,or,the,target,blob,could,not,be,written,to;default,void,write,blob,atomic,final,string,blob,name,final,input,stream,input,stream,final,long,blob,size,throws,ioexception,write,blob,blob,name,input,stream,blob,size
BlobContainer -> default void writeBlobAtomic(final String blobName, final InputStream inputStream, final long blobSize) throws IOException;1528706846;Reads blob content from the input stream and writes it to the container in a new blob with the given name,_using an atomic write operation if the implementation supports it. When the BlobContainer implementation_does not provide a specific implementation of writeBlobAtomic(String, InputStream, long), then_the {@link #writeBlob(String, InputStream, long)} method is used.__This method assumes the container does not already contain a blob of the same blobName.  If a blob by the_same name already exists, the operation will fail and an {@link IOException} will be thrown.__@param   blobName_The name of the blob to write the contents of the input stream to._@param   inputStream_The input stream from which to retrieve the bytes to write to the blob._@param   blobSize_The size of the blob to be written, in bytes.  It is implementation dependent whether_this value is used in writing the blob to the repository._@throws  FileAlreadyExistsException if a blob by the same name already exists_@throws  IOException if the input stream could not be read, or the target blob could not be written to.;default void writeBlobAtomic(final String blobName, final InputStream inputStream, final long blobSize) throws IOException {_        writeBlob(blobName, inputStream, blobSize)__    };reads,blob,content,from,the,input,stream,and,writes,it,to,the,container,in,a,new,blob,with,the,given,name,using,an,atomic,write,operation,if,the,implementation,supports,it,when,the,blob,container,implementation,does,not,provide,a,specific,implementation,of,write,blob,atomic,string,input,stream,long,then,the,link,write,blob,string,input,stream,long,method,is,used,this,method,assumes,the,container,does,not,already,contain,a,blob,of,the,same,blob,name,if,a,blob,by,the,same,name,already,exists,the,operation,will,fail,and,an,link,ioexception,will,be,thrown,param,blob,name,the,name,of,the,blob,to,write,the,contents,of,the,input,stream,to,param,input,stream,the,input,stream,from,which,to,retrieve,the,bytes,to,write,to,the,blob,param,blob,size,the,size,of,the,blob,to,be,written,in,bytes,it,is,implementation,dependent,whether,this,value,is,used,in,writing,the,blob,to,the,repository,throws,file,already,exists,exception,if,a,blob,by,the,same,name,already,exists,throws,ioexception,if,the,input,stream,could,not,be,read,or,the,target,blob,could,not,be,written,to;default,void,write,blob,atomic,final,string,blob,name,final,input,stream,input,stream,final,long,blob,size,throws,ioexception,write,blob,blob,name,input,stream,blob,size
BlobContainer -> Map<String, BlobMetaData> listBlobs() throws IOException_;1524684173;Lists all blobs in the container.__@return  A map of all the blobs in the container.  The keys in the map are the names of the blobs and_the values are {@link BlobMetaData}, containing basic information about each blob._@throws  IOException if there were any failures in reading from the blob container.;Map<String, BlobMetaData> listBlobs() throws IOException_;lists,all,blobs,in,the,container,return,a,map,of,all,the,blobs,in,the,container,the,keys,in,the,map,are,the,names,of,the,blobs,and,the,values,are,link,blob,meta,data,containing,basic,information,about,each,blob,throws,ioexception,if,there,were,any,failures,in,reading,from,the,blob,container;map,string,blob,meta,data,list,blobs,throws,ioexception
BlobContainer -> Map<String, BlobMetaData> listBlobs() throws IOException_;1525798020;Lists all blobs in the container.__@return  A map of all the blobs in the container.  The keys in the map are the names of the blobs and_the values are {@link BlobMetaData}, containing basic information about each blob._@throws  IOException if there were any failures in reading from the blob container.;Map<String, BlobMetaData> listBlobs() throws IOException_;lists,all,blobs,in,the,container,return,a,map,of,all,the,blobs,in,the,container,the,keys,in,the,map,are,the,names,of,the,blobs,and,the,values,are,link,blob,meta,data,containing,basic,information,about,each,blob,throws,ioexception,if,there,were,any,failures,in,reading,from,the,blob,container;map,string,blob,meta,data,list,blobs,throws,ioexception
BlobContainer -> Map<String, BlobMetaData> listBlobs() throws IOException_;1528211342;Lists all blobs in the container.__@return  A map of all the blobs in the container.  The keys in the map are the names of the blobs and_the values are {@link BlobMetaData}, containing basic information about each blob._@throws  IOException if there were any failures in reading from the blob container.;Map<String, BlobMetaData> listBlobs() throws IOException_;lists,all,blobs,in,the,container,return,a,map,of,all,the,blobs,in,the,container,the,keys,in,the,map,are,the,names,of,the,blobs,and,the,values,are,link,blob,meta,data,containing,basic,information,about,each,blob,throws,ioexception,if,there,were,any,failures,in,reading,from,the,blob,container;map,string,blob,meta,data,list,blobs,throws,ioexception
BlobContainer -> Map<String, BlobMetaData> listBlobs() throws IOException_;1528706846;Lists all blobs in the container.__@return  A map of all the blobs in the container.  The keys in the map are the names of the blobs and_the values are {@link BlobMetaData}, containing basic information about each blob._@throws  IOException if there were any failures in reading from the blob container.;Map<String, BlobMetaData> listBlobs() throws IOException_;lists,all,blobs,in,the,container,return,a,map,of,all,the,blobs,in,the,container,the,keys,in,the,map,are,the,names,of,the,blobs,and,the,values,are,link,blob,meta,data,containing,basic,information,about,each,blob,throws,ioexception,if,there,were,any,failures,in,reading,from,the,blob,container;map,string,blob,meta,data,list,blobs,throws,ioexception
BlobContainer -> Map<String, BlobMetaData> listBlobs() throws IOException_;1531179852;Lists all blobs in the container.__@return  A map of all the blobs in the container.  The keys in the map are the names of the blobs and_the values are {@link BlobMetaData}, containing basic information about each blob._@throws  IOException if there were any failures in reading from the blob container.;Map<String, BlobMetaData> listBlobs() throws IOException_;lists,all,blobs,in,the,container,return,a,map,of,all,the,blobs,in,the,container,the,keys,in,the,map,are,the,names,of,the,blobs,and,the,values,are,link,blob,meta,data,containing,basic,information,about,each,blob,throws,ioexception,if,there,were,any,failures,in,reading,from,the,blob,container;map,string,blob,meta,data,list,blobs,throws,ioexception
BlobContainer -> Map<String, BlobMetaData> listBlobs() throws IOException_;1546859479;Lists all blobs in the container.__@return  A map of all the blobs in the container.  The keys in the map are the names of the blobs and_the values are {@link BlobMetaData}, containing basic information about each blob._@throws  IOException if there were any failures in reading from the blob container.;Map<String, BlobMetaData> listBlobs() throws IOException_;lists,all,blobs,in,the,container,return,a,map,of,all,the,blobs,in,the,container,the,keys,in,the,map,are,the,names,of,the,blobs,and,the,values,are,link,blob,meta,data,containing,basic,information,about,each,blob,throws,ioexception,if,there,were,any,failures,in,reading,from,the,blob,container;map,string,blob,meta,data,list,blobs,throws,ioexception
BlobContainer -> void writeBlob(String blobName, InputStream inputStream, long blobSize, boolean failIfAlreadyExists) throws IOException_;1531179852;Reads blob content from the input stream and writes it to the container in a new blob with the given name._This method assumes the container does not already contain a blob of the same blobName.  If a blob by the_same name already exists, the operation will fail and an {@link IOException} will be thrown.__@param   blobName_The name of the blob to write the contents of the input stream to._@param   inputStream_The input stream from which to retrieve the bytes to write to the blob._@param   blobSize_The size of the blob to be written, in bytes.  It is implementation dependent whether_this value is used in writing the blob to the repository._@param   failIfAlreadyExists_whether to throw a FileAlreadyExistsException if the given blob already exists_@throws  FileAlreadyExistsException if failIfAlreadyExists is true and a blob by the same name already exists_@throws  IOException if the input stream could not be read, or the target blob could not be written to.;void writeBlob(String blobName, InputStream inputStream, long blobSize, boolean failIfAlreadyExists) throws IOException_;reads,blob,content,from,the,input,stream,and,writes,it,to,the,container,in,a,new,blob,with,the,given,name,this,method,assumes,the,container,does,not,already,contain,a,blob,of,the,same,blob,name,if,a,blob,by,the,same,name,already,exists,the,operation,will,fail,and,an,link,ioexception,will,be,thrown,param,blob,name,the,name,of,the,blob,to,write,the,contents,of,the,input,stream,to,param,input,stream,the,input,stream,from,which,to,retrieve,the,bytes,to,write,to,the,blob,param,blob,size,the,size,of,the,blob,to,be,written,in,bytes,it,is,implementation,dependent,whether,this,value,is,used,in,writing,the,blob,to,the,repository,param,fail,if,already,exists,whether,to,throw,a,file,already,exists,exception,if,the,given,blob,already,exists,throws,file,already,exists,exception,if,fail,if,already,exists,is,true,and,a,blob,by,the,same,name,already,exists,throws,ioexception,if,the,input,stream,could,not,be,read,or,the,target,blob,could,not,be,written,to;void,write,blob,string,blob,name,input,stream,input,stream,long,blob,size,boolean,fail,if,already,exists,throws,ioexception
BlobContainer -> void writeBlob(String blobName, InputStream inputStream, long blobSize, boolean failIfAlreadyExists) throws IOException_;1546859479;Reads blob content from the input stream and writes it to the container in a new blob with the given name._This method assumes the container does not already contain a blob of the same blobName.  If a blob by the_same name already exists, the operation will fail and an {@link IOException} will be thrown.__@param   blobName_The name of the blob to write the contents of the input stream to._@param   inputStream_The input stream from which to retrieve the bytes to write to the blob._@param   blobSize_The size of the blob to be written, in bytes.  It is implementation dependent whether_this value is used in writing the blob to the repository._@param   failIfAlreadyExists_whether to throw a FileAlreadyExistsException if the given blob already exists_@throws  FileAlreadyExistsException if failIfAlreadyExists is true and a blob by the same name already exists_@throws  IOException if the input stream could not be read, or the target blob could not be written to.;void writeBlob(String blobName, InputStream inputStream, long blobSize, boolean failIfAlreadyExists) throws IOException_;reads,blob,content,from,the,input,stream,and,writes,it,to,the,container,in,a,new,blob,with,the,given,name,this,method,assumes,the,container,does,not,already,contain,a,blob,of,the,same,blob,name,if,a,blob,by,the,same,name,already,exists,the,operation,will,fail,and,an,link,ioexception,will,be,thrown,param,blob,name,the,name,of,the,blob,to,write,the,contents,of,the,input,stream,to,param,input,stream,the,input,stream,from,which,to,retrieve,the,bytes,to,write,to,the,blob,param,blob,size,the,size,of,the,blob,to,be,written,in,bytes,it,is,implementation,dependent,whether,this,value,is,used,in,writing,the,blob,to,the,repository,param,fail,if,already,exists,whether,to,throw,a,file,already,exists,exception,if,the,given,blob,already,exists,throws,file,already,exists,exception,if,fail,if,already,exists,is,true,and,a,blob,by,the,same,name,already,exists,throws,ioexception,if,the,input,stream,could,not,be,read,or,the,target,blob,could,not,be,written,to;void,write,blob,string,blob,name,input,stream,input,stream,long,blob,size,boolean,fail,if,already,exists,throws,ioexception
BlobContainer -> Map<String, BlobMetaData> listBlobsByPrefix(String blobNamePrefix) throws IOException_;1524684173;Lists all blobs in the container that match the specified prefix.__@param   blobNamePrefix_The prefix to match against blob names in the container._@return  A map of the matching blobs in the container.  The keys in the map are the names of the blobs_and the values are {@link BlobMetaData}, containing basic information about each blob._@throws  IOException if there were any failures in reading from the blob container.;Map<String, BlobMetaData> listBlobsByPrefix(String blobNamePrefix) throws IOException_;lists,all,blobs,in,the,container,that,match,the,specified,prefix,param,blob,name,prefix,the,prefix,to,match,against,blob,names,in,the,container,return,a,map,of,the,matching,blobs,in,the,container,the,keys,in,the,map,are,the,names,of,the,blobs,and,the,values,are,link,blob,meta,data,containing,basic,information,about,each,blob,throws,ioexception,if,there,were,any,failures,in,reading,from,the,blob,container;map,string,blob,meta,data,list,blobs,by,prefix,string,blob,name,prefix,throws,ioexception
BlobContainer -> Map<String, BlobMetaData> listBlobsByPrefix(String blobNamePrefix) throws IOException_;1525798020;Lists all blobs in the container that match the specified prefix.__@param   blobNamePrefix_The prefix to match against blob names in the container._@return  A map of the matching blobs in the container.  The keys in the map are the names of the blobs_and the values are {@link BlobMetaData}, containing basic information about each blob._@throws  IOException if there were any failures in reading from the blob container.;Map<String, BlobMetaData> listBlobsByPrefix(String blobNamePrefix) throws IOException_;lists,all,blobs,in,the,container,that,match,the,specified,prefix,param,blob,name,prefix,the,prefix,to,match,against,blob,names,in,the,container,return,a,map,of,the,matching,blobs,in,the,container,the,keys,in,the,map,are,the,names,of,the,blobs,and,the,values,are,link,blob,meta,data,containing,basic,information,about,each,blob,throws,ioexception,if,there,were,any,failures,in,reading,from,the,blob,container;map,string,blob,meta,data,list,blobs,by,prefix,string,blob,name,prefix,throws,ioexception
BlobContainer -> Map<String, BlobMetaData> listBlobsByPrefix(String blobNamePrefix) throws IOException_;1528211342;Lists all blobs in the container that match the specified prefix.__@param   blobNamePrefix_The prefix to match against blob names in the container._@return  A map of the matching blobs in the container.  The keys in the map are the names of the blobs_and the values are {@link BlobMetaData}, containing basic information about each blob._@throws  IOException if there were any failures in reading from the blob container.;Map<String, BlobMetaData> listBlobsByPrefix(String blobNamePrefix) throws IOException_;lists,all,blobs,in,the,container,that,match,the,specified,prefix,param,blob,name,prefix,the,prefix,to,match,against,blob,names,in,the,container,return,a,map,of,the,matching,blobs,in,the,container,the,keys,in,the,map,are,the,names,of,the,blobs,and,the,values,are,link,blob,meta,data,containing,basic,information,about,each,blob,throws,ioexception,if,there,were,any,failures,in,reading,from,the,blob,container;map,string,blob,meta,data,list,blobs,by,prefix,string,blob,name,prefix,throws,ioexception
BlobContainer -> Map<String, BlobMetaData> listBlobsByPrefix(String blobNamePrefix) throws IOException_;1528706846;Lists all blobs in the container that match the specified prefix.__@param   blobNamePrefix_The prefix to match against blob names in the container._@return  A map of the matching blobs in the container.  The keys in the map are the names of the blobs_and the values are {@link BlobMetaData}, containing basic information about each blob._@throws  IOException if there were any failures in reading from the blob container.;Map<String, BlobMetaData> listBlobsByPrefix(String blobNamePrefix) throws IOException_;lists,all,blobs,in,the,container,that,match,the,specified,prefix,param,blob,name,prefix,the,prefix,to,match,against,blob,names,in,the,container,return,a,map,of,the,matching,blobs,in,the,container,the,keys,in,the,map,are,the,names,of,the,blobs,and,the,values,are,link,blob,meta,data,containing,basic,information,about,each,blob,throws,ioexception,if,there,were,any,failures,in,reading,from,the,blob,container;map,string,blob,meta,data,list,blobs,by,prefix,string,blob,name,prefix,throws,ioexception
BlobContainer -> Map<String, BlobMetaData> listBlobsByPrefix(String blobNamePrefix) throws IOException_;1531179852;Lists all blobs in the container that match the specified prefix.__@param   blobNamePrefix_The prefix to match against blob names in the container._@return  A map of the matching blobs in the container.  The keys in the map are the names of the blobs_and the values are {@link BlobMetaData}, containing basic information about each blob._@throws  IOException if there were any failures in reading from the blob container.;Map<String, BlobMetaData> listBlobsByPrefix(String blobNamePrefix) throws IOException_;lists,all,blobs,in,the,container,that,match,the,specified,prefix,param,blob,name,prefix,the,prefix,to,match,against,blob,names,in,the,container,return,a,map,of,the,matching,blobs,in,the,container,the,keys,in,the,map,are,the,names,of,the,blobs,and,the,values,are,link,blob,meta,data,containing,basic,information,about,each,blob,throws,ioexception,if,there,were,any,failures,in,reading,from,the,blob,container;map,string,blob,meta,data,list,blobs,by,prefix,string,blob,name,prefix,throws,ioexception
BlobContainer -> Map<String, BlobMetaData> listBlobsByPrefix(String blobNamePrefix) throws IOException_;1546859479;Lists all blobs in the container that match the specified prefix.__@param   blobNamePrefix_The prefix to match against blob names in the container._@return  A map of the matching blobs in the container.  The keys in the map are the names of the blobs_and the values are {@link BlobMetaData}, containing basic information about each blob._@throws  IOException if there were any failures in reading from the blob container.;Map<String, BlobMetaData> listBlobsByPrefix(String blobNamePrefix) throws IOException_;lists,all,blobs,in,the,container,that,match,the,specified,prefix,param,blob,name,prefix,the,prefix,to,match,against,blob,names,in,the,container,return,a,map,of,the,matching,blobs,in,the,container,the,keys,in,the,map,are,the,names,of,the,blobs,and,the,values,are,link,blob,meta,data,containing,basic,information,about,each,blob,throws,ioexception,if,there,were,any,failures,in,reading,from,the,blob,container;map,string,blob,meta,data,list,blobs,by,prefix,string,blob,name,prefix,throws,ioexception
BlobContainer -> BlobPath path()_;1524684173;Gets the {@link BlobPath} that defines the implementation specific paths to where the blobs are contained.__@return  the BlobPath where the blobs are contained;BlobPath path()_;gets,the,link,blob,path,that,defines,the,implementation,specific,paths,to,where,the,blobs,are,contained,return,the,blob,path,where,the,blobs,are,contained;blob,path,path
BlobContainer -> BlobPath path()_;1525798020;Gets the {@link BlobPath} that defines the implementation specific paths to where the blobs are contained.__@return  the BlobPath where the blobs are contained;BlobPath path()_;gets,the,link,blob,path,that,defines,the,implementation,specific,paths,to,where,the,blobs,are,contained,return,the,blob,path,where,the,blobs,are,contained;blob,path,path
BlobContainer -> BlobPath path()_;1528211342;Gets the {@link BlobPath} that defines the implementation specific paths to where the blobs are contained.__@return  the BlobPath where the blobs are contained;BlobPath path()_;gets,the,link,blob,path,that,defines,the,implementation,specific,paths,to,where,the,blobs,are,contained,return,the,blob,path,where,the,blobs,are,contained;blob,path,path
BlobContainer -> BlobPath path()_;1528706846;Gets the {@link BlobPath} that defines the implementation specific paths to where the blobs are contained.__@return  the BlobPath where the blobs are contained;BlobPath path()_;gets,the,link,blob,path,that,defines,the,implementation,specific,paths,to,where,the,blobs,are,contained,return,the,blob,path,where,the,blobs,are,contained;blob,path,path
BlobContainer -> BlobPath path()_;1531179852;Gets the {@link BlobPath} that defines the implementation specific paths to where the blobs are contained.__@return  the BlobPath where the blobs are contained;BlobPath path()_;gets,the,link,blob,path,that,defines,the,implementation,specific,paths,to,where,the,blobs,are,contained,return,the,blob,path,where,the,blobs,are,contained;blob,path,path
BlobContainer -> BlobPath path()_;1546859479;Gets the {@link BlobPath} that defines the implementation specific paths to where the blobs are contained.__@return  the BlobPath where the blobs are contained;BlobPath path()_;gets,the,link,blob,path,that,defines,the,implementation,specific,paths,to,where,the,blobs,are,contained,return,the,blob,path,where,the,blobs,are,contained;blob,path,path
BlobContainer -> InputStream readBlob(String blobName) throws IOException_;1524684173;Creates a new {@link InputStream} for the given blob name.__@param   blobName_The name of the blob to get an {@link InputStream} for._@return  The {@code InputStream} to read the blob._@throws  NoSuchFileException if the blob does not exist_@throws  IOException if the blob can not be read.;InputStream readBlob(String blobName) throws IOException_;creates,a,new,link,input,stream,for,the,given,blob,name,param,blob,name,the,name,of,the,blob,to,get,an,link,input,stream,for,return,the,code,input,stream,to,read,the,blob,throws,no,such,file,exception,if,the,blob,does,not,exist,throws,ioexception,if,the,blob,can,not,be,read;input,stream,read,blob,string,blob,name,throws,ioexception
BlobContainer -> InputStream readBlob(String blobName) throws IOException_;1525798020;Creates a new {@link InputStream} for the given blob name.__@param   blobName_The name of the blob to get an {@link InputStream} for._@return  The {@code InputStream} to read the blob._@throws  NoSuchFileException if the blob does not exist_@throws  IOException if the blob can not be read.;InputStream readBlob(String blobName) throws IOException_;creates,a,new,link,input,stream,for,the,given,blob,name,param,blob,name,the,name,of,the,blob,to,get,an,link,input,stream,for,return,the,code,input,stream,to,read,the,blob,throws,no,such,file,exception,if,the,blob,does,not,exist,throws,ioexception,if,the,blob,can,not,be,read;input,stream,read,blob,string,blob,name,throws,ioexception
BlobContainer -> InputStream readBlob(String blobName) throws IOException_;1528211342;Creates a new {@link InputStream} for the given blob name.__@param   blobName_The name of the blob to get an {@link InputStream} for._@return  The {@code InputStream} to read the blob._@throws  NoSuchFileException if the blob does not exist_@throws  IOException if the blob can not be read.;InputStream readBlob(String blobName) throws IOException_;creates,a,new,link,input,stream,for,the,given,blob,name,param,blob,name,the,name,of,the,blob,to,get,an,link,input,stream,for,return,the,code,input,stream,to,read,the,blob,throws,no,such,file,exception,if,the,blob,does,not,exist,throws,ioexception,if,the,blob,can,not,be,read;input,stream,read,blob,string,blob,name,throws,ioexception
BlobContainer -> InputStream readBlob(String blobName) throws IOException_;1528706846;Creates a new {@link InputStream} for the given blob name.__@param   blobName_The name of the blob to get an {@link InputStream} for._@return  The {@code InputStream} to read the blob._@throws  NoSuchFileException if the blob does not exist_@throws  IOException if the blob can not be read.;InputStream readBlob(String blobName) throws IOException_;creates,a,new,link,input,stream,for,the,given,blob,name,param,blob,name,the,name,of,the,blob,to,get,an,link,input,stream,for,return,the,code,input,stream,to,read,the,blob,throws,no,such,file,exception,if,the,blob,does,not,exist,throws,ioexception,if,the,blob,can,not,be,read;input,stream,read,blob,string,blob,name,throws,ioexception
BlobContainer -> InputStream readBlob(String blobName) throws IOException_;1531179852;Creates a new {@link InputStream} for the given blob name.__@param   blobName_The name of the blob to get an {@link InputStream} for._@return  The {@code InputStream} to read the blob._@throws  NoSuchFileException if the blob does not exist_@throws  IOException if the blob can not be read.;InputStream readBlob(String blobName) throws IOException_;creates,a,new,link,input,stream,for,the,given,blob,name,param,blob,name,the,name,of,the,blob,to,get,an,link,input,stream,for,return,the,code,input,stream,to,read,the,blob,throws,no,such,file,exception,if,the,blob,does,not,exist,throws,ioexception,if,the,blob,can,not,be,read;input,stream,read,blob,string,blob,name,throws,ioexception
BlobContainer -> InputStream readBlob(String blobName) throws IOException_;1546859479;Creates a new {@link InputStream} for the given blob name.__@param   blobName_The name of the blob to get an {@link InputStream} for._@return  The {@code InputStream} to read the blob._@throws  NoSuchFileException if the blob does not exist_@throws  IOException if the blob can not be read.;InputStream readBlob(String blobName) throws IOException_;creates,a,new,link,input,stream,for,the,given,blob,name,param,blob,name,the,name,of,the,blob,to,get,an,link,input,stream,for,return,the,code,input,stream,to,read,the,blob,throws,no,such,file,exception,if,the,blob,does,not,exist,throws,ioexception,if,the,blob,can,not,be,read;input,stream,read,blob,string,blob,name,throws,ioexception
BlobContainer -> void move(String sourceBlobName, String targetBlobName) throws IOException_;1524684173;Renames the source blob into the target blob.  If the source blob does not exist or the_target blob already exists, an exception is thrown.  Atomicity of the move operation_can only be guaranteed on an implementation-by-implementation basis.  The only current_implementation of {@link BlobContainer} for which atomicity can be guaranteed is the_{@link org.elasticsearch.common.blobstore.fs.FsBlobContainer}.__@param   sourceBlobName_The blob to rename._@param   targetBlobName_The name of the blob after the renaming._@throws  IOException if the source blob does not exist, the target blob already exists,_or there were any failures in reading from the blob container.;void move(String sourceBlobName, String targetBlobName) throws IOException_;renames,the,source,blob,into,the,target,blob,if,the,source,blob,does,not,exist,or,the,target,blob,already,exists,an,exception,is,thrown,atomicity,of,the,move,operation,can,only,be,guaranteed,on,an,implementation,by,implementation,basis,the,only,current,implementation,of,link,blob,container,for,which,atomicity,can,be,guaranteed,is,the,link,org,elasticsearch,common,blobstore,fs,fs,blob,container,param,source,blob,name,the,blob,to,rename,param,target,blob,name,the,name,of,the,blob,after,the,renaming,throws,ioexception,if,the,source,blob,does,not,exist,the,target,blob,already,exists,or,there,were,any,failures,in,reading,from,the,blob,container;void,move,string,source,blob,name,string,target,blob,name,throws,ioexception
BlobContainer -> void move(String sourceBlobName, String targetBlobName) throws IOException_;1525798020;Renames the source blob into the target blob.  If the source blob does not exist or the_target blob already exists, an exception is thrown.  Atomicity of the move operation_can only be guaranteed on an implementation-by-implementation basis.  The only current_implementation of {@link BlobContainer} for which atomicity can be guaranteed is the_{@link org.elasticsearch.common.blobstore.fs.FsBlobContainer}.__@param   sourceBlobName_The blob to rename._@param   targetBlobName_The name of the blob after the renaming._@throws  IOException if the source blob does not exist, the target blob already exists,_or there were any failures in reading from the blob container.;void move(String sourceBlobName, String targetBlobName) throws IOException_;renames,the,source,blob,into,the,target,blob,if,the,source,blob,does,not,exist,or,the,target,blob,already,exists,an,exception,is,thrown,atomicity,of,the,move,operation,can,only,be,guaranteed,on,an,implementation,by,implementation,basis,the,only,current,implementation,of,link,blob,container,for,which,atomicity,can,be,guaranteed,is,the,link,org,elasticsearch,common,blobstore,fs,fs,blob,container,param,source,blob,name,the,blob,to,rename,param,target,blob,name,the,name,of,the,blob,after,the,renaming,throws,ioexception,if,the,source,blob,does,not,exist,the,target,blob,already,exists,or,there,were,any,failures,in,reading,from,the,blob,container;void,move,string,source,blob,name,string,target,blob,name,throws,ioexception
BlobContainer -> void move(String sourceBlobName, String targetBlobName) throws IOException_;1528211342;Renames the source blob into the target blob.  If the source blob does not exist or the_target blob already exists, an exception is thrown.  Atomicity of the move operation_can only be guaranteed on an implementation-by-implementation basis.  The only current_implementation of {@link BlobContainer} for which atomicity can be guaranteed is the_{@link org.elasticsearch.common.blobstore.fs.FsBlobContainer}.__@param   sourceBlobName_The blob to rename._@param   targetBlobName_The name of the blob after the renaming._@throws  IOException if the source blob does not exist, the target blob already exists,_or there were any failures in reading from the blob container.;void move(String sourceBlobName, String targetBlobName) throws IOException_;renames,the,source,blob,into,the,target,blob,if,the,source,blob,does,not,exist,or,the,target,blob,already,exists,an,exception,is,thrown,atomicity,of,the,move,operation,can,only,be,guaranteed,on,an,implementation,by,implementation,basis,the,only,current,implementation,of,link,blob,container,for,which,atomicity,can,be,guaranteed,is,the,link,org,elasticsearch,common,blobstore,fs,fs,blob,container,param,source,blob,name,the,blob,to,rename,param,target,blob,name,the,name,of,the,blob,after,the,renaming,throws,ioexception,if,the,source,blob,does,not,exist,the,target,blob,already,exists,or,there,were,any,failures,in,reading,from,the,blob,container;void,move,string,source,blob,name,string,target,blob,name,throws,ioexception
