# id;timestamp;commentText;codeText;commentWords;codeWords
MatchPhraseQueryBuilder -> public String analyzer();1524684173;Get the analyzer to use, if previously set, otherwise <tt>null</tt>;public String analyzer() {_        return this.analyzer__    };get,the,analyzer,to,use,if,previously,set,otherwise,tt,null,tt;public,string,analyzer,return,this,analyzer
MatchPhraseQueryBuilder -> public String analyzer();1525334055;Get the analyzer to use, if previously set, otherwise {@code null};public String analyzer() {_        return this.analyzer__    };get,the,analyzer,to,use,if,previously,set,otherwise,code,null;public,string,analyzer,return,this,analyzer
MatchPhraseQueryBuilder -> public String analyzer();1528103657;Get the analyzer to use, if previously set, otherwise {@code null};public String analyzer() {_        return this.analyzer__    };get,the,analyzer,to,use,if,previously,set,otherwise,code,null;public,string,analyzer,return,this,analyzer
MatchPhraseQueryBuilder -> public String analyzer();1528762805;Get the analyzer to use, if previously set, otherwise {@code null};public String analyzer() {_        return this.analyzer__    };get,the,analyzer,to,use,if,previously,set,otherwise,code,null;public,string,analyzer,return,this,analyzer
MatchPhraseQueryBuilder -> public String fieldName();1524684173;Returns the field name used in this query.;public String fieldName() {_        return this.fieldName__    };returns,the,field,name,used,in,this,query;public,string,field,name,return,this,field,name
MatchPhraseQueryBuilder -> public String fieldName();1525334055;Returns the field name used in this query.;public String fieldName() {_        return this.fieldName__    };returns,the,field,name,used,in,this,query;public,string,field,name,return,this,field,name
MatchPhraseQueryBuilder -> public String fieldName();1528103657;Returns the field name used in this query.;public String fieldName() {_        return this.fieldName__    };returns,the,field,name,used,in,this,query;public,string,field,name,return,this,field,name
MatchPhraseQueryBuilder -> public String fieldName();1528762805;Returns the field name used in this query.;public String fieldName() {_        return this.fieldName__    };returns,the,field,name,used,in,this,query;public,string,field,name,return,this,field,name
MatchPhraseQueryBuilder -> public MatchPhraseQueryBuilder slop(int slop);1524684173;Sets a slop factor for phrase queries;public MatchPhraseQueryBuilder slop(int slop) {_        if (slop < 0) {_            throw new IllegalArgumentException("No negative slop allowed.")__        }_        this.slop = slop__        return this__    };sets,a,slop,factor,for,phrase,queries;public,match,phrase,query,builder,slop,int,slop,if,slop,0,throw,new,illegal,argument,exception,no,negative,slop,allowed,this,slop,slop,return,this
MatchPhraseQueryBuilder -> public MatchPhraseQueryBuilder slop(int slop);1525334055;Sets a slop factor for phrase queries;public MatchPhraseQueryBuilder slop(int slop) {_        if (slop < 0) {_            throw new IllegalArgumentException("No negative slop allowed.")__        }_        this.slop = slop__        return this__    };sets,a,slop,factor,for,phrase,queries;public,match,phrase,query,builder,slop,int,slop,if,slop,0,throw,new,illegal,argument,exception,no,negative,slop,allowed,this,slop,slop,return,this
MatchPhraseQueryBuilder -> public MatchPhraseQueryBuilder slop(int slop);1528103657;Sets a slop factor for phrase queries;public MatchPhraseQueryBuilder slop(int slop) {_        if (slop < 0) {_            throw new IllegalArgumentException("No negative slop allowed.")__        }_        this.slop = slop__        return this__    };sets,a,slop,factor,for,phrase,queries;public,match,phrase,query,builder,slop,int,slop,if,slop,0,throw,new,illegal,argument,exception,no,negative,slop,allowed,this,slop,slop,return,this
MatchPhraseQueryBuilder -> public MatchPhraseQueryBuilder slop(int slop);1528762805;Sets a slop factor for phrase queries;public MatchPhraseQueryBuilder slop(int slop) {_        if (slop < 0) {_            throw new IllegalArgumentException("No negative slop allowed.")__        }_        this.slop = slop__        return this__    };sets,a,slop,factor,for,phrase,queries;public,match,phrase,query,builder,slop,int,slop,if,slop,0,throw,new,illegal,argument,exception,no,negative,slop,allowed,this,slop,slop,return,this
MatchPhraseQueryBuilder -> public int slop();1524684173;Get the slop factor for phrase queries.;public int slop() {_        return this.slop__    };get,the,slop,factor,for,phrase,queries;public,int,slop,return,this,slop
MatchPhraseQueryBuilder -> public int slop();1525334055;Get the slop factor for phrase queries.;public int slop() {_        return this.slop__    };get,the,slop,factor,for,phrase,queries;public,int,slop,return,this,slop
MatchPhraseQueryBuilder -> public int slop();1528103657;Get the slop factor for phrase queries.;public int slop() {_        return this.slop__    };get,the,slop,factor,for,phrase,queries;public,int,slop,return,this,slop
MatchPhraseQueryBuilder -> public int slop();1528762805;Get the slop factor for phrase queries.;public int slop() {_        return this.slop__    };get,the,slop,factor,for,phrase,queries;public,int,slop,return,this,slop
MatchPhraseQueryBuilder -> public MatchPhraseQueryBuilder analyzer(String analyzer);1524684173;Explicitly set the analyzer to use. Defaults to use explicit mapping_config for the field, or, if not set, the default search analyzer.;public MatchPhraseQueryBuilder analyzer(String analyzer) {_        this.analyzer = analyzer__        return this__    };explicitly,set,the,analyzer,to,use,defaults,to,use,explicit,mapping,config,for,the,field,or,if,not,set,the,default,search,analyzer;public,match,phrase,query,builder,analyzer,string,analyzer,this,analyzer,analyzer,return,this
MatchPhraseQueryBuilder -> public MatchPhraseQueryBuilder analyzer(String analyzer);1525334055;Explicitly set the analyzer to use. Defaults to use explicit mapping_config for the field, or, if not set, the default search analyzer.;public MatchPhraseQueryBuilder analyzer(String analyzer) {_        this.analyzer = analyzer__        return this__    };explicitly,set,the,analyzer,to,use,defaults,to,use,explicit,mapping,config,for,the,field,or,if,not,set,the,default,search,analyzer;public,match,phrase,query,builder,analyzer,string,analyzer,this,analyzer,analyzer,return,this
MatchPhraseQueryBuilder -> public MatchPhraseQueryBuilder analyzer(String analyzer);1528103657;Explicitly set the analyzer to use. Defaults to use explicit mapping_config for the field, or, if not set, the default search analyzer.;public MatchPhraseQueryBuilder analyzer(String analyzer) {_        this.analyzer = analyzer__        return this__    };explicitly,set,the,analyzer,to,use,defaults,to,use,explicit,mapping,config,for,the,field,or,if,not,set,the,default,search,analyzer;public,match,phrase,query,builder,analyzer,string,analyzer,this,analyzer,analyzer,return,this
MatchPhraseQueryBuilder -> public MatchPhraseQueryBuilder analyzer(String analyzer);1528762805;Explicitly set the analyzer to use. Defaults to use explicit mapping_config for the field, or, if not set, the default search analyzer.;public MatchPhraseQueryBuilder analyzer(String analyzer) {_        this.analyzer = analyzer__        return this__    };explicitly,set,the,analyzer,to,use,defaults,to,use,explicit,mapping,config,for,the,field,or,if,not,set,the,default,search,analyzer;public,match,phrase,query,builder,analyzer,string,analyzer,this,analyzer,analyzer,return,this
MatchPhraseQueryBuilder -> public MatchPhraseQueryBuilder zeroTermsQuery(ZeroTermsQuery zeroTermsQuery);1524684173;Sets query to use in case no query terms are available, e.g. after analysis removed them._Defaults to {@link ZeroTermsQuery#NONE}, but can be set to_{@link ZeroTermsQuery#ALL} instead.;public MatchPhraseQueryBuilder zeroTermsQuery(ZeroTermsQuery zeroTermsQuery) {_        if (zeroTermsQuery == null) {_            throw new IllegalArgumentException("[" + NAME + "] requires zeroTermsQuery to be non-null")__        }_        this.zeroTermsQuery = zeroTermsQuery__        return this__    };sets,query,to,use,in,case,no,query,terms,are,available,e,g,after,analysis,removed,them,defaults,to,link,zero,terms,query,none,but,can,be,set,to,link,zero,terms,query,all,instead;public,match,phrase,query,builder,zero,terms,query,zero,terms,query,zero,terms,query,if,zero,terms,query,null,throw,new,illegal,argument,exception,name,requires,zero,terms,query,to,be,non,null,this,zero,terms,query,zero,terms,query,return,this
MatchPhraseQueryBuilder -> public MatchPhraseQueryBuilder zeroTermsQuery(ZeroTermsQuery zeroTermsQuery);1525334055;Sets query to use in case no query terms are available, e.g. after analysis removed them._Defaults to {@link ZeroTermsQuery#NONE}, but can be set to_{@link ZeroTermsQuery#ALL} instead.;public MatchPhraseQueryBuilder zeroTermsQuery(ZeroTermsQuery zeroTermsQuery) {_        if (zeroTermsQuery == null) {_            throw new IllegalArgumentException("[" + NAME + "] requires zeroTermsQuery to be non-null")__        }_        this.zeroTermsQuery = zeroTermsQuery__        return this__    };sets,query,to,use,in,case,no,query,terms,are,available,e,g,after,analysis,removed,them,defaults,to,link,zero,terms,query,none,but,can,be,set,to,link,zero,terms,query,all,instead;public,match,phrase,query,builder,zero,terms,query,zero,terms,query,zero,terms,query,if,zero,terms,query,null,throw,new,illegal,argument,exception,name,requires,zero,terms,query,to,be,non,null,this,zero,terms,query,zero,terms,query,return,this
MatchPhraseQueryBuilder -> public MatchPhraseQueryBuilder zeroTermsQuery(ZeroTermsQuery zeroTermsQuery);1528103657;Sets query to use in case no query terms are available, e.g. after analysis removed them._Defaults to {@link ZeroTermsQuery#NONE}, but can be set to_{@link ZeroTermsQuery#ALL} instead.;public MatchPhraseQueryBuilder zeroTermsQuery(ZeroTermsQuery zeroTermsQuery) {_        if (zeroTermsQuery == null) {_            throw new IllegalArgumentException("[" + NAME + "] requires zeroTermsQuery to be non-null")__        }_        this.zeroTermsQuery = zeroTermsQuery__        return this__    };sets,query,to,use,in,case,no,query,terms,are,available,e,g,after,analysis,removed,them,defaults,to,link,zero,terms,query,none,but,can,be,set,to,link,zero,terms,query,all,instead;public,match,phrase,query,builder,zero,terms,query,zero,terms,query,zero,terms,query,if,zero,terms,query,null,throw,new,illegal,argument,exception,name,requires,zero,terms,query,to,be,non,null,this,zero,terms,query,zero,terms,query,return,this
MatchPhraseQueryBuilder -> public MatchPhraseQueryBuilder zeroTermsQuery(ZeroTermsQuery zeroTermsQuery);1528762805;Sets query to use in case no query terms are available, e.g. after analysis removed them._Defaults to {@link ZeroTermsQuery#NONE}, but can be set to_{@link ZeroTermsQuery#ALL} instead.;public MatchPhraseQueryBuilder zeroTermsQuery(ZeroTermsQuery zeroTermsQuery) {_        if (zeroTermsQuery == null) {_            throw new IllegalArgumentException("[" + NAME + "] requires zeroTermsQuery to be non-null")__        }_        this.zeroTermsQuery = zeroTermsQuery__        return this__    };sets,query,to,use,in,case,no,query,terms,are,available,e,g,after,analysis,removed,them,defaults,to,link,zero,terms,query,none,but,can,be,set,to,link,zero,terms,query,all,instead;public,match,phrase,query,builder,zero,terms,query,zero,terms,query,zero,terms,query,if,zero,terms,query,null,throw,new,illegal,argument,exception,name,requires,zero,terms,query,to,be,non,null,this,zero,terms,query,zero,terms,query,return,this
MatchPhraseQueryBuilder -> public MatchPhraseQueryBuilder(StreamInput in) throws IOException;1524684173;Read from a stream.;public MatchPhraseQueryBuilder(StreamInput in) throws IOException {_        super(in)__        fieldName = in.readString()__        value = in.readGenericValue()__        slop = in.readVInt()__        if (in.getVersion().onOrAfter(Version.V_6_3_0)) {_            zeroTermsQuery = ZeroTermsQuery.readFromStream(in)__        }_        analyzer = in.readOptionalString()__    };read,from,a,stream;public,match,phrase,query,builder,stream,input,in,throws,ioexception,super,in,field,name,in,read,string,value,in,read,generic,value,slop,in,read,vint,if,in,get,version,on,or,after,version,zero,terms,query,zero,terms,query,read,from,stream,in,analyzer,in,read,optional,string
MatchPhraseQueryBuilder -> public MatchPhraseQueryBuilder(StreamInput in) throws IOException;1525334055;Read from a stream.;public MatchPhraseQueryBuilder(StreamInput in) throws IOException {_        super(in)__        fieldName = in.readString()__        value = in.readGenericValue()__        slop = in.readVInt()__        if (in.getVersion().onOrAfter(Version.V_6_3_0)) {_            zeroTermsQuery = ZeroTermsQuery.readFromStream(in)__        }_        analyzer = in.readOptionalString()__    };read,from,a,stream;public,match,phrase,query,builder,stream,input,in,throws,ioexception,super,in,field,name,in,read,string,value,in,read,generic,value,slop,in,read,vint,if,in,get,version,on,or,after,version,zero,terms,query,zero,terms,query,read,from,stream,in,analyzer,in,read,optional,string
MatchPhraseQueryBuilder -> public MatchPhraseQueryBuilder(StreamInput in) throws IOException;1528103657;Read from a stream.;public MatchPhraseQueryBuilder(StreamInput in) throws IOException {_        super(in)__        fieldName = in.readString()__        value = in.readGenericValue()__        slop = in.readVInt()__        if (in.getVersion().onOrAfter(Version.V_6_3_0)) {_            zeroTermsQuery = ZeroTermsQuery.readFromStream(in)__        }_        analyzer = in.readOptionalString()__    };read,from,a,stream;public,match,phrase,query,builder,stream,input,in,throws,ioexception,super,in,field,name,in,read,string,value,in,read,generic,value,slop,in,read,vint,if,in,get,version,on,or,after,version,zero,terms,query,zero,terms,query,read,from,stream,in,analyzer,in,read,optional,string
MatchPhraseQueryBuilder -> public MatchPhraseQueryBuilder(StreamInput in) throws IOException;1528762805;Read from a stream.;public MatchPhraseQueryBuilder(StreamInput in) throws IOException {_        super(in)__        fieldName = in.readString()__        value = in.readGenericValue()__        slop = in.readVInt()__        if (in.getVersion().onOrAfter(Version.V_6_3_0)) {_            zeroTermsQuery = ZeroTermsQuery.readFromStream(in)__        }_        analyzer = in.readOptionalString()__    };read,from,a,stream;public,match,phrase,query,builder,stream,input,in,throws,ioexception,super,in,field,name,in,read,string,value,in,read,generic,value,slop,in,read,vint,if,in,get,version,on,or,after,version,zero,terms,query,zero,terms,query,read,from,stream,in,analyzer,in,read,optional,string
MatchPhraseQueryBuilder -> public Object value();1524684173;Returns the value used in this query.;public Object value() {_        return this.value__    };returns,the,value,used,in,this,query;public,object,value,return,this,value
MatchPhraseQueryBuilder -> public Object value();1525334055;Returns the value used in this query.;public Object value() {_        return this.value__    };returns,the,value,used,in,this,query;public,object,value,return,this,value
MatchPhraseQueryBuilder -> public Object value();1528103657;Returns the value used in this query.;public Object value() {_        return this.value__    };returns,the,value,used,in,this,query;public,object,value,return,this,value
MatchPhraseQueryBuilder -> public Object value();1528762805;Returns the value used in this query.;public Object value() {_        return this.value__    };returns,the,value,used,in,this,query;public,object,value,return,this,value
