commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public void run() {     runner.run(). }
false;public;1;4;;@Override public void onResponse(TransportResponse response) {     onFreedContext(true). }
false;public;1;4;;@Override public void onFailure(Exception e) {     onFailedFreedContext(e, node). }
false;;0;20;;void cleanAllScrolls() {     for (final DiscoveryNode node : nodes) {         try {             Transport.Connection connection = searchTransportService.getConnection(null, node).             searchTransportService.sendClearAllScrollContexts(connection, new ActionListener<TransportResponse>() {                  @Override                 public void onResponse(TransportResponse response) {                     onFreedContext(true).                 }                  @Override                 public void onFailure(Exception e) {                     onFailedFreedContext(e, node).                 }             }).         } catch (Exception e) {             onFailedFreedContext(e, node).         }     } }
false;;1;19;;void cleanScrollIds(List<ScrollIdForNode> parsedScrollIds) {     SearchScrollAsyncAction.collectNodesAndRun(parsedScrollIds, nodes, searchTransportService, ActionListener.wrap(lookup -> {         for (ScrollIdForNode target : parsedScrollIds) {             final DiscoveryNode node = lookup.apply(target.getClusterAlias(), target.getNode()).             if (node == null) {                 onFreedContext(false).             } else {                 try {                     Transport.Connection connection = searchTransportService.getConnection(target.getClusterAlias(), node).                     searchTransportService.sendFreeContext(connection, target.getScrollId(), ActionListener.wrap(freed -> onFreedContext(freed.isFreed()), e -> onFailedFreedContext(e, node))).                 } catch (Exception e) {                     onFailedFreedContext(e, node).                 }             }         }     }, listener::onFailure)). }
false;private;1;9;;private void onFreedContext(boolean freed) {     if (freed) {         freedSearchContexts.incrementAndGet().     }     if (expectedOps.countDown()) {         boolean succeeded = hasFailed.get() == false.         listener.onResponse(new ClearScrollResponse(succeeded, freedSearchContexts.get())).     } }
false;private;2;11;;private void onFailedFreedContext(Throwable e, DiscoveryNode node) {     logger.warn(() -> new ParameterizedMessage("Clear SC failed on node[{}]", node), e).     /*          * We have to set the failure marker before we count down otherwise we can expose the failure marker before we have set it to a          * racing thread successfully freeing a context. This would lead to that thread responding that the clear scroll succeeded.          */     hasFailed.set(true).     if (expectedOps.countDown()) {         listener.onResponse(new ClearScrollResponse(false, freedSearchContexts.get())).     } }
