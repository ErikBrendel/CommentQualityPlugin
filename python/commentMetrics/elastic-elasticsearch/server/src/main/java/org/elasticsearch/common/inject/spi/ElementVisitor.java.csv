commented;modifiers;parameterAmount;loc;comment;code
true;;1;1;/**  * Visit a mapping from a key (type and optional annotation) to the strategy for getting  * instances of the type.  */ ;/**  * Visit a mapping from a key (type and optional annotation) to the strategy for getting  * instances of the type.  */ <T> V visit(Binding<T> binding).
true;;1;1;/**  * Visit a registration of a scope annotation with the scope that implements it.  */ ;/**  * Visit a registration of a scope annotation with the scope that implements it.  */ V visit(ScopeBinding binding).
true;;1;1;/**  * Visit a registration of type converters for matching target types.  */ ;/**  * Visit a registration of type converters for matching target types.  */ V visit(TypeConverterBinding binding).
true;;1;1;/**  * Visit a request to inject the instance fields and methods of an instance.  */ ;/**  * Visit a request to inject the instance fields and methods of an instance.  */ V visit(InjectionRequest<?> request).
true;;1;1;/**  * Visit a request to inject the static fields and methods of type.  */ ;/**  * Visit a request to inject the static fields and methods of type.  */ V visit(StaticInjectionRequest request).
true;;1;1;/**  * Visit a lookup of the provider for a type.  */ ;/**  * Visit a lookup of the provider for a type.  */ <T> V visit(ProviderLookup<T> lookup).
true;;1;1;/**  * Visit a lookup of the members injector.  */ ;/**  * Visit a lookup of the members injector.  */ <T> V visit(MembersInjectorLookup<T> lookup).
true;;1;1;/**  * Visit an error message and the context in which it occurred.  */ ;/**  * Visit an error message and the context in which it occurred.  */ V visit(Message message).
true;;1;1;/**  * Visit a collection of configuration elements for a {@linkplain org.elasticsearch.common.inject.PrivateBinder  * private binder}.  */ ;/**  * Visit a collection of configuration elements for a {@linkplain org.elasticsearch.common.inject.PrivateBinder  * private binder}.  */ V visit(PrivateElements elements).
true;;1;1;/**  * Visit an injectable type listener binding.  */ ;/**  * Visit an injectable type listener binding.  */ V visit(TypeListenerBinding binding).
