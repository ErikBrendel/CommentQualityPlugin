commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public long recoveryId() {     return this.recoveryId. }
false;public;0;3;;public ShardId shardId() {     return shardId. }
false;public;0;3;;public long globalCheckpoint() {     return globalCheckpoint. }
false;public;1;11;;@Override public void readFrom(StreamInput in) throws IOException {     super.readFrom(in).     recoveryId = in.readLong().     shardId = ShardId.readShardId(in).     if (in.getVersion().onOrAfter(Version.V_6_0_0_alpha1)) {         globalCheckpoint = in.readZLong().     } else {         globalCheckpoint = SequenceNumbers.UNASSIGNED_SEQ_NO.     } }
false;public;1;9;;@Override public void writeTo(StreamOutput out) throws IOException {     super.writeTo(out).     out.writeLong(recoveryId).     shardId.writeTo(out).     if (out.getVersion().onOrAfter(Version.V_6_0_0_alpha1)) {         out.writeZLong(globalCheckpoint).     } }
