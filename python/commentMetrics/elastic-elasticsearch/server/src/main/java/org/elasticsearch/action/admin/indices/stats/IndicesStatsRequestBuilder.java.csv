commented;modifiers;parameterAmount;loc;comment;code
true;public;0;4;/**  * Sets all flags to return all stats.  */ ;/**  * Sets all flags to return all stats.  */ public IndicesStatsRequestBuilder all() {     request.all().     return this. }
true;public;0;4;/**  * Clears all stats.  */ ;/**  * Clears all stats.  */ public IndicesStatsRequestBuilder clear() {     request.clear().     return this. }
true;public;1;4;/**  * Document types to return stats for. Mainly affects {@link #setIndexing(boolean)} when  * enabled, returning specific indexing stats for those types.  */ ;/**  * Document types to return stats for. Mainly affects {@link #setIndexing(boolean)} when  * enabled, returning specific indexing stats for those types.  */ public IndicesStatsRequestBuilder setTypes(String... types) {     request.types(types).     return this. }
false;public;1;4;;public IndicesStatsRequestBuilder setGroups(String... groups) {     request.groups(groups).     return this. }
false;public;1;4;;public IndicesStatsRequestBuilder setDocs(boolean docs) {     request.docs(docs).     return this. }
false;public;1;4;;public IndicesStatsRequestBuilder setStore(boolean store) {     request.store(store).     return this. }
false;public;1;4;;public IndicesStatsRequestBuilder setIndexing(boolean indexing) {     request.indexing(indexing).     return this. }
false;public;1;4;;public IndicesStatsRequestBuilder setGet(boolean get) {     request.get(get).     return this. }
false;public;1;4;;public IndicesStatsRequestBuilder setSearch(boolean search) {     request.search(search).     return this. }
false;public;1;4;;public IndicesStatsRequestBuilder setMerge(boolean merge) {     request.merge(merge).     return this. }
false;public;1;4;;public IndicesStatsRequestBuilder setRefresh(boolean refresh) {     request.refresh(refresh).     return this. }
false;public;1;4;;public IndicesStatsRequestBuilder setFlush(boolean flush) {     request.flush(flush).     return this. }
false;public;1;4;;public IndicesStatsRequestBuilder setWarmer(boolean warmer) {     request.warmer(warmer).     return this. }
false;public;1;4;;public IndicesStatsRequestBuilder setQueryCache(boolean queryCache) {     request.queryCache(queryCache).     return this. }
false;public;1;4;;public IndicesStatsRequestBuilder setFieldData(boolean fieldData) {     request.fieldData(fieldData).     return this. }
false;public;1;4;;public IndicesStatsRequestBuilder setFieldDataFields(String... fields) {     request.fieldDataFields(fields).     return this. }
false;public;1;4;;public IndicesStatsRequestBuilder setSegments(boolean segments) {     request.segments(segments).     return this. }
false;public;1;4;;public IndicesStatsRequestBuilder setCompletion(boolean completion) {     request.completion(completion).     return this. }
false;public;1;4;;public IndicesStatsRequestBuilder setCompletionFields(String... fields) {     request.completionFields(fields).     return this. }
false;public;1;4;;public IndicesStatsRequestBuilder setTranslog(boolean translog) {     request.translog(translog).     return this. }
false;public;1;4;;public IndicesStatsRequestBuilder setRequestCache(boolean requestCache) {     request.requestCache(requestCache).     return this. }
false;public;1;4;;public IndicesStatsRequestBuilder setRecovery(boolean recovery) {     request.recovery(recovery).     return this. }
false;public;1;4;;public IndicesStatsRequestBuilder setIncludeSegmentFileSizes(boolean includeSegmentFileSizes) {     request.includeSegmentFileSizes(includeSegmentFileSizes).     return this. }
