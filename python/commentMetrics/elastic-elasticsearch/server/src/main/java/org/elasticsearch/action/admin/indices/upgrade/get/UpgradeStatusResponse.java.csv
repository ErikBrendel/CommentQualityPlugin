commented;modifiers;parameterAmount;loc;comment;code
false;public;0;23;;public Map<String, IndexUpgradeStatus> getIndices() {     if (indicesUpgradeStatus != null) {         return indicesUpgradeStatus.     }     Map<String, IndexUpgradeStatus> indicesUpgradeStats = new HashMap<>().     Set<String> indices = new HashSet<>().     for (ShardUpgradeStatus shard : shards) {         indices.add(shard.getIndex()).     }     for (String indexName : indices) {         List<ShardUpgradeStatus> shards = new ArrayList<>().         for (ShardUpgradeStatus shard : this.shards) {             if (shard.getShardRouting().getIndexName().equals(indexName)) {                 shards.add(shard).             }         }         indicesUpgradeStats.put(indexName, new IndexUpgradeStatus(indexName, shards.toArray(new ShardUpgradeStatus[shards.size()]))).     }     this.indicesUpgradeStatus = indicesUpgradeStats.     return indicesUpgradeStats. }
false;public;1;8;;@Override public void readFrom(StreamInput in) throws IOException {     super.readFrom(in).     shards = new ShardUpgradeStatus[in.readVInt()].     for (int i = 0. i < shards.length. i++) {         shards[i] = ShardUpgradeStatus.readShardUpgradeStatus(in).     } }
false;public;1;8;;@Override public void writeTo(StreamOutput out) throws IOException {     super.writeTo(out).     out.writeVInt(shards.length).     for (ShardUpgradeStatus shard : shards) {         shard.writeTo(out).     } }
false;public;0;7;;public long getTotalBytes() {     long totalBytes = 0.     for (IndexUpgradeStatus indexShardUpgradeStatus : getIndices().values()) {         totalBytes += indexShardUpgradeStatus.getTotalBytes().     }     return totalBytes. }
false;public;0;7;;public long getToUpgradeBytes() {     long upgradeBytes = 0.     for (IndexUpgradeStatus indexShardUpgradeStatus : getIndices().values()) {         upgradeBytes += indexShardUpgradeStatus.getToUpgradeBytes().     }     return upgradeBytes. }
false;public;0;7;;public long getToUpgradeBytesAncient() {     long upgradeBytesAncient = 0.     for (IndexUpgradeStatus indexShardUpgradeStatus : getIndices().values()) {         upgradeBytesAncient += indexShardUpgradeStatus.getToUpgradeBytesAncient().     }     return upgradeBytesAncient. }
false;public;2;56;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.startObject().     builder.humanReadableField(Fields.SIZE_IN_BYTES, Fields.SIZE, new ByteSizeValue(getTotalBytes())).     builder.humanReadableField(Fields.SIZE_TO_UPGRADE_IN_BYTES, Fields.SIZE_TO_UPGRADE, new ByteSizeValue(getToUpgradeBytes())).     builder.humanReadableField(Fields.SIZE_TO_UPGRADE_ANCIENT_IN_BYTES, Fields.SIZE_TO_UPGRADE_ANCIENT, new ByteSizeValue(getToUpgradeBytesAncient())).     String level = params.param("level", "indices").     boolean outputShards = "shards".equals(level).     boolean outputIndices = "indices".equals(level) || outputShards.     if (outputIndices) {         builder.startObject(Fields.INDICES).         for (IndexUpgradeStatus indexUpgradeStatus : getIndices().values()) {             builder.startObject(indexUpgradeStatus.getIndex()).             builder.humanReadableField(Fields.SIZE_IN_BYTES, Fields.SIZE, new ByteSizeValue(indexUpgradeStatus.getTotalBytes())).             builder.humanReadableField(Fields.SIZE_TO_UPGRADE_IN_BYTES, Fields.SIZE_TO_UPGRADE, new ByteSizeValue(indexUpgradeStatus.getToUpgradeBytes())).             builder.humanReadableField(Fields.SIZE_TO_UPGRADE_ANCIENT_IN_BYTES, Fields.SIZE_TO_UPGRADE_ANCIENT, new ByteSizeValue(indexUpgradeStatus.getToUpgradeBytesAncient())).             if (outputShards) {                 builder.startObject(Fields.SHARDS).                 for (IndexShardUpgradeStatus indexShardUpgradeStatus : indexUpgradeStatus) {                     builder.startArray(Integer.toString(indexShardUpgradeStatus.getShardId().id())).                     for (ShardUpgradeStatus shardUpgradeStatus : indexShardUpgradeStatus) {                         builder.startObject().                         builder.humanReadableField(Fields.SIZE_IN_BYTES, Fields.SIZE, new ByteSizeValue(getTotalBytes())).                         builder.humanReadableField(Fields.SIZE_TO_UPGRADE_IN_BYTES, Fields.SIZE_TO_UPGRADE, new ByteSizeValue(getToUpgradeBytes())).                         builder.humanReadableField(Fields.SIZE_TO_UPGRADE_ANCIENT_IN_BYTES, Fields.SIZE_TO_UPGRADE_ANCIENT, new ByteSizeValue(getToUpgradeBytesAncient())).                         builder.startObject(Fields.ROUTING).                         builder.field(Fields.STATE, shardUpgradeStatus.getShardRouting().state()).                         builder.field(Fields.PRIMARY, shardUpgradeStatus.getShardRouting().primary()).                         builder.field(Fields.NODE, shardUpgradeStatus.getShardRouting().currentNodeId()).                         if (shardUpgradeStatus.getShardRouting().relocatingNodeId() != null) {                             builder.field(Fields.RELOCATING_NODE, shardUpgradeStatus.getShardRouting().relocatingNodeId()).                         }                         builder.endObject().                         builder.endObject().                     }                     builder.endArray().                 }                 builder.endObject().             }             builder.endObject().         }         builder.endObject().     }     builder.endObject().     return builder. }
