commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected String executor() {     return ThreadPool.Names.MANAGEMENT. }
false;protected;0;4;;@Override protected VerifyRepositoryResponse newResponse() {     return new VerifyRepositoryResponse(). }
false;protected;2;4;;@Override protected ClusterBlockException checkBlock(VerifyRepositoryRequest request, ClusterState state) {     return state.blocks().globalBlockedException(ClusterBlockLevel.METADATA_READ). }
false;public;1;8;;@Override public void onResponse(RepositoriesService.VerifyResponse verifyResponse) {     if (verifyResponse.failed()) {         listener.onFailure(new RepositoryVerificationException(request.name(), verifyResponse.failureDescription())).     } else {         listener.onResponse(new VerifyRepositoryResponse(verifyResponse.nodes())).     } }
false;public;1;4;;@Override public void onFailure(Exception e) {     listener.onFailure(e). }
false;protected;3;19;;@Override protected void masterOperation(final VerifyRepositoryRequest request, ClusterState state, final ActionListener<VerifyRepositoryResponse> listener) {     repositoriesService.verifyRepository(request.name(), new ActionListener<RepositoriesService.VerifyResponse>() {          @Override         public void onResponse(RepositoriesService.VerifyResponse verifyResponse) {             if (verifyResponse.failed()) {                 listener.onFailure(new RepositoryVerificationException(request.name(), verifyResponse.failureDescription())).             } else {                 listener.onResponse(new VerifyRepositoryResponse(verifyResponse.nodes())).             }         }          @Override         public void onFailure(Exception e) {             listener.onFailure(e).         }     }). }
