commented;modifiers;parameterAmount;loc;comment;code
true;public;0;3;/**  * Returns code that represents the snapshot state  *  * @return code for the state  */ ;/**  * Returns code that represents the snapshot state  *  * @return code for the state  */ public byte value() {     return value. }
true;public;0;3;/**  * Returns true if snapshot completed (successfully or not)  *  * @return true if snapshot completed, false otherwise  */ ;/**  * Returns true if snapshot completed (successfully or not)  *  * @return true if snapshot completed, false otherwise  */ public boolean completed() {     return completed. }
true;public;0;3;/**  * Returns true if snapshot can be restored (at least partially)  *  * @return true if snapshot can be restored, false otherwise  */ ;/**  * Returns true if snapshot can be restored (at least partially)  *  * @return true if snapshot can be restored, false otherwise  */ public boolean restorable() {     return restorable. }
true;public,static;1;16;/**  * Generate snapshot state from code  *  * @param value the state code  * @return state  */ ;/**  * Generate snapshot state from code  *  * @param value the state code  * @return state  */ public static SnapshotState fromValue(byte value) {     switch(value) {         case 0:             return IN_PROGRESS.         case 1:             return SUCCESS.         case 2:             return FAILED.         case 3:             return PARTIAL.         case 4:             return INCOMPATIBLE.         default:             throw new IllegalArgumentException("No snapshot state for value [" + value + "]").     } }
