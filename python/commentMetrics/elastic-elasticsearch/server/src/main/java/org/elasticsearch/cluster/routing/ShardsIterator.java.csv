commented;modifiers;parameterAmount;loc;comment;code
true;;0;1;/**  * Resets the iterator to its initial state.  */ ;/**  * Resets the iterator to its initial state.  */ void reset().
true;;0;1;/**  * The number of shard routing instances.  *  * @return number of shard routing instances in this iterator  */ ;/**  * The number of shard routing instances.  *  * @return number of shard routing instances in this iterator  */ int size().
true;;0;1;/**  * The number of active shard routing instances  *  * @return number of active shard routing instances  */ ;/**  * The number of active shard routing instances  *  * @return number of active shard routing instances  */ int sizeActive().
true;;0;1;/**  * Returns the next shard, or {@code null} if none available.  */ ;/**  * Returns the next shard, or {@code null} if none available.  */ ShardRouting nextOrNull().
true;;0;1;/**  * Return the number of shards remaining in this {@link ShardsIterator}  *  * @return number of shard remaining  */ ;/**  * Return the number of shards remaining in this {@link ShardsIterator}  *  * @return number of shard remaining  */ int remaining().
false;;0;2;;@Override int hashCode().
false;;1;2;;@Override boolean equals(Object other).
true;;0;1;/**  * Returns the {@link ShardRouting}s that this shards iterator holds.  */ ;/**  * Returns the {@link ShardRouting}s that this shards iterator holds.  */ List<ShardRouting> getShardRoutings().
