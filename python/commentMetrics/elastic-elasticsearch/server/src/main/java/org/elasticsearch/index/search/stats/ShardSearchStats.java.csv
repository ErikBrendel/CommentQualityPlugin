commented;modifiers;parameterAmount;loc;comment;code
true;public;1;19;/**  * Returns the stats, including group specific stats. If the groups are null/0 length, then nothing  * is returned for them. If they are set, then only groups provided will be returned, or  * {@code _all} for all groups.  */ ;/**  * Returns the stats, including group specific stats. If the groups are null/0 length, then nothing  * is returned for them. If they are set, then only groups provided will be returned, or  * {@code _all} for all groups.  */ public SearchStats stats(String... groups) {     SearchStats.Stats total = totalStats.stats().     Map<String, SearchStats.Stats> groupsSt = null.     if (groups != null && groups.length > 0) {         groupsSt = new HashMap<>(groupsStats.size()).         if (groups.length == 1 && groups[0].equals("_all")) {             for (Map.Entry<String, StatsHolder> entry : groupsStats.entrySet()) {                 groupsSt.put(entry.getKey(), entry.getValue().stats()).             }         } else {             for (Map.Entry<String, StatsHolder> entry : groupsStats.entrySet()) {                 if (Regex.simpleMatch(groups, entry.getKey())) {                     groupsSt.put(entry.getKey(), entry.getValue().stats()).                 }             }         }     }     return new SearchStats(total, openContexts.count(), groupsSt). }
false;public;1;10;;@Override public void onPreQueryPhase(SearchContext searchContext) {     computeStats(searchContext, statsHolder -> {         if (searchContext.hasOnlySuggest()) {             statsHolder.suggestCurrent.inc().         } else {             statsHolder.queryCurrent.inc().         }     }). }
false;public;1;12;;@Override public void onFailedQueryPhase(SearchContext searchContext) {     computeStats(searchContext, statsHolder -> {         if (searchContext.hasOnlySuggest()) {             statsHolder.suggestCurrent.dec().             assert statsHolder.suggestCurrent.count() >= 0.         } else {             statsHolder.queryCurrent.dec().             assert statsHolder.queryCurrent.count() >= 0.         }     }). }
false;public;2;14;;@Override public void onQueryPhase(SearchContext searchContext, long tookInNanos) {     computeStats(searchContext, statsHolder -> {         if (searchContext.hasOnlySuggest()) {             statsHolder.suggestMetric.inc(tookInNanos).             statsHolder.suggestCurrent.dec().             assert statsHolder.suggestCurrent.count() >= 0.         } else {             statsHolder.queryMetric.inc(tookInNanos).             statsHolder.queryCurrent.dec().             assert statsHolder.queryCurrent.count() >= 0.         }     }). }
false;public;1;4;;@Override public void onPreFetchPhase(SearchContext searchContext) {     computeStats(searchContext, statsHolder -> statsHolder.fetchCurrent.inc()). }
false;public;1;4;;@Override public void onFailedFetchPhase(SearchContext searchContext) {     computeStats(searchContext, statsHolder -> statsHolder.fetchCurrent.dec()). }
false;public;2;8;;@Override public void onFetchPhase(SearchContext searchContext, long tookInNanos) {     computeStats(searchContext, statsHolder -> {         statsHolder.fetchMetric.inc(tookInNanos).         statsHolder.fetchCurrent.dec().         assert statsHolder.fetchCurrent.count() >= 0.     }). }
false;private;2;8;;private void computeStats(SearchContext searchContext, Consumer<StatsHolder> consumer) {     consumer.accept(totalStats).     if (searchContext.groupStats() != null) {         for (String group : searchContext.groupStats()) {             consumer.accept(groupStats(group)).         }     } }
false;private;1;13;;private StatsHolder groupStats(String group) {     StatsHolder stats = groupsStats.get(group).     if (stats == null) {         synchronized (this) {             stats = groupsStats.get(group).             if (stats == null) {                 stats = new StatsHolder().                 groupsStats = MapBuilder.newMapBuilder(groupsStats).put(group, stats).immutableMap().             }         }     }     return stats. }
false;public;1;4;;@Override public void onNewContext(SearchContext context) {     openContexts.inc(). }
false;public;1;4;;@Override public void onFreeContext(SearchContext context) {     openContexts.dec(). }
false;public;1;4;;@Override public void onNewScrollContext(SearchContext context) {     totalStats.scrollCurrent.inc(). }
false;public;1;6;;@Override public void onFreeScrollContext(SearchContext context) {     totalStats.scrollCurrent.dec().     assert totalStats.scrollCurrent.count() >= 0.     totalStats.scrollMetric.inc(TimeUnit.NANOSECONDS.toMicros(System.nanoTime() - context.getOriginNanoTime())). }
false;;0;8;;SearchStats.Stats stats() {     return new SearchStats.Stats(queryMetric.count(), TimeUnit.NANOSECONDS.toMillis(queryMetric.sum()), queryCurrent.count(), fetchMetric.count(), TimeUnit.NANOSECONDS.toMillis(fetchMetric.sum()), fetchCurrent.count(), scrollMetric.count(), TimeUnit.MICROSECONDS.toMillis(scrollMetric.sum()), scrollCurrent.count(), suggestMetric.count(), TimeUnit.NANOSECONDS.toMillis(suggestMetric.sum()), suggestCurrent.count()). }
