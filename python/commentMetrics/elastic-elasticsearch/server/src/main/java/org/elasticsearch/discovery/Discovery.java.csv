# id;timestamp;commentText;codeText;commentWords;codeWords
Discovery -> void startInitialJoin()_;1524684173;Triggers the first join cycle;void startInitialJoin()_;triggers,the,first,join,cycle;void,start,initial,join
Discovery -> void startInitialJoin()_;1526029249;Triggers the first join cycle;void startInitialJoin()_;triggers,the,first,join,cycle;void,start,initial,join
Discovery -> void startInitialJoin()_;1529015561;Triggers the first join cycle;void startInitialJoin()_;triggers,the,first,join,cycle;void,start,initial,join
Discovery -> void startInitialJoin()_;1540847035;Triggers the first join cycle;void startInitialJoin()_;triggers,the,first,join,cycle;void,start,initial,join
Discovery -> void startInitialJoin()_;1544081506;Triggers the first join cycle;void startInitialJoin()_;triggers,the,first,join,cycle;void,start,initial,join
Discovery -> void publish(ClusterChangedEvent clusterChangedEvent, AckListener ackListener)_;1524684173;Publish all the changes to the cluster from the master (can be called just by the master). The publish_process should apply this state to the master as well!__The {@link AckListener} allows to keep track of the ack received from nodes, and verify whether_they updated their own cluster state or not.__The method is guaranteed to throw a {@link FailedToCommitClusterStateException} if the change is not committed and should be rejected._Any other exception signals the something wrong happened but the change is committed.;void publish(ClusterChangedEvent clusterChangedEvent, AckListener ackListener)_;publish,all,the,changes,to,the,cluster,from,the,master,can,be,called,just,by,the,master,the,publish,process,should,apply,this,state,to,the,master,as,well,the,link,ack,listener,allows,to,keep,track,of,the,ack,received,from,nodes,and,verify,whether,they,updated,their,own,cluster,state,or,not,the,method,is,guaranteed,to,throw,a,link,failed,to,commit,cluster,state,exception,if,the,change,is,not,committed,and,should,be,rejected,any,other,exception,signals,the,something,wrong,happened,but,the,change,is,committed;void,publish,cluster,changed,event,cluster,changed,event,ack,listener,ack,listener
Discovery -> void publish(ClusterChangedEvent clusterChangedEvent, AckListener ackListener)_;1526029249;Publish all the changes to the cluster from the master (can be called just by the master). The publish_process should apply this state to the master as well!__The {@link AckListener} allows to keep track of the ack received from nodes, and verify whether_they updated their own cluster state or not.__The method is guaranteed to throw a {@link FailedToCommitClusterStateException} if the change is not committed and should be rejected._Any other exception signals the something wrong happened but the change is committed.;void publish(ClusterChangedEvent clusterChangedEvent, AckListener ackListener)_;publish,all,the,changes,to,the,cluster,from,the,master,can,be,called,just,by,the,master,the,publish,process,should,apply,this,state,to,the,master,as,well,the,link,ack,listener,allows,to,keep,track,of,the,ack,received,from,nodes,and,verify,whether,they,updated,their,own,cluster,state,or,not,the,method,is,guaranteed,to,throw,a,link,failed,to,commit,cluster,state,exception,if,the,change,is,not,committed,and,should,be,rejected,any,other,exception,signals,the,something,wrong,happened,but,the,change,is,committed;void,publish,cluster,changed,event,cluster,changed,event,ack,listener,ack,listener
Discovery -> void publish(ClusterChangedEvent clusterChangedEvent, AckListener ackListener)_;1529015561;Publish all the changes to the cluster from the master (can be called just by the master). The publish_process should apply this state to the master as well!__The {@link AckListener} allows to keep track of the ack received from nodes, and verify whether_they updated their own cluster state or not.__The method is guaranteed to throw a {@link FailedToCommitClusterStateException} if the change is not committed and should be rejected._Any other exception signals the something wrong happened but the change is committed.;void publish(ClusterChangedEvent clusterChangedEvent, AckListener ackListener)_;publish,all,the,changes,to,the,cluster,from,the,master,can,be,called,just,by,the,master,the,publish,process,should,apply,this,state,to,the,master,as,well,the,link,ack,listener,allows,to,keep,track,of,the,ack,received,from,nodes,and,verify,whether,they,updated,their,own,cluster,state,or,not,the,method,is,guaranteed,to,throw,a,link,failed,to,commit,cluster,state,exception,if,the,change,is,not,committed,and,should,be,rejected,any,other,exception,signals,the,something,wrong,happened,but,the,change,is,committed;void,publish,cluster,changed,event,cluster,changed,event,ack,listener,ack,listener
Discovery -> void publish(ClusterChangedEvent clusterChangedEvent, AckListener ackListener)_;1540847035;Publish all the changes to the cluster from the master (can be called just by the master). The publish_process should apply this state to the master as well!__The {@link AckListener} allows to keep track of the ack received from nodes, and verify whether_they updated their own cluster state or not.__The method is guaranteed to throw a {@link FailedToCommitClusterStateException} if the change is not_committed and should be rejected._Any other exception signals the something wrong happened but the change is committed.;void publish(ClusterChangedEvent clusterChangedEvent, AckListener ackListener)_;publish,all,the,changes,to,the,cluster,from,the,master,can,be,called,just,by,the,master,the,publish,process,should,apply,this,state,to,the,master,as,well,the,link,ack,listener,allows,to,keep,track,of,the,ack,received,from,nodes,and,verify,whether,they,updated,their,own,cluster,state,or,not,the,method,is,guaranteed,to,throw,a,link,failed,to,commit,cluster,state,exception,if,the,change,is,not,committed,and,should,be,rejected,any,other,exception,signals,the,something,wrong,happened,but,the,change,is,committed;void,publish,cluster,changed,event,cluster,changed,event,ack,listener,ack,listener
Discovery -> AckListener -> void onNodeAck(DiscoveryNode node, @Nullable Exception e)_;1529015561;Should be called whenever the discovery layer receives confirmation from a node that it has successfully applied_the cluster state. In case of failures, an exception should be provided as parameter._@param node the node_@param e the optional exception;void onNodeAck(DiscoveryNode node, @Nullable Exception e)_;should,be,called,whenever,the,discovery,layer,receives,confirmation,from,a,node,that,it,has,successfully,applied,the,cluster,state,in,case,of,failures,an,exception,should,be,provided,as,parameter,param,node,the,node,param,e,the,optional,exception;void,on,node,ack,discovery,node,node,nullable,exception,e
Discovery -> AckListener -> void onNodeAck(DiscoveryNode node, @Nullable Exception e)_;1540847035;Should be called whenever the discovery layer receives confirmation from a node that it has successfully applied_the cluster state. In case of failures, an exception should be provided as parameter._@param node the node_@param e the optional exception;void onNodeAck(DiscoveryNode node, @Nullable Exception e)_;should,be,called,whenever,the,discovery,layer,receives,confirmation,from,a,node,that,it,has,successfully,applied,the,cluster,state,in,case,of,failures,an,exception,should,be,provided,as,parameter,param,node,the,node,param,e,the,optional,exception;void,on,node,ack,discovery,node,node,nullable,exception,e
Discovery -> DiscoveryStats stats()_;1524684173;@return stats about the discovery;DiscoveryStats stats()_;return,stats,about,the,discovery;discovery,stats,stats
Discovery -> DiscoveryStats stats()_;1526029249;@return stats about the discovery;DiscoveryStats stats()_;return,stats,about,the,discovery;discovery,stats,stats
Discovery -> DiscoveryStats stats()_;1529015561;@return stats about the discovery;DiscoveryStats stats()_;return,stats,about,the,discovery;discovery,stats,stats
Discovery -> DiscoveryStats stats()_;1540847035;@return stats about the discovery;DiscoveryStats stats()_;return,stats,about,the,discovery;discovery,stats,stats
Discovery -> DiscoveryStats stats()_;1544081506;@return stats about the discovery;DiscoveryStats stats()_;return,stats,about,the,discovery;discovery,stats,stats
Discovery -> AckListener -> void onCommit(TimeValue commitTime)_;1529015561;Should be called when the discovery layer has committed the clusters state (i.e. even if this publication fails,_it is guaranteed to appear in future publications)._@param commitTime the time it took to commit the cluster state;void onCommit(TimeValue commitTime)_;should,be,called,when,the,discovery,layer,has,committed,the,clusters,state,i,e,even,if,this,publication,fails,it,is,guaranteed,to,appear,in,future,publications,param,commit,time,the,time,it,took,to,commit,the,cluster,state;void,on,commit,time,value,commit,time
Discovery -> AckListener -> void onCommit(TimeValue commitTime)_;1540847035;Should be called when the discovery layer has committed the clusters state (i.e. even if this publication fails,_it is guaranteed to appear in future publications)._@param commitTime the time it took to commit the cluster state;void onCommit(TimeValue commitTime)_;should,be,called,when,the,discovery,layer,has,committed,the,clusters,state,i,e,even,if,this,publication,fails,it,is,guaranteed,to,appear,in,future,publications,param,commit,time,the,time,it,took,to,commit,the,cluster,state;void,on,commit,time,value,commit,time
