# id;timestamp;commentText;codeText;commentWords;codeWords
SearchTransportService -> Transport.Connection getConnection(String clusterAlias, DiscoveryNode node);1524684173;Returns a connection to the given node on the provided cluster. If the cluster alias is <code>null</code> the node will be resolved_against the local cluster._@param clusterAlias the cluster alias the node should be resolve against_@param node the node to resolve_@return a connection to the given node belonging to the cluster with the provided alias.;Transport.Connection getConnection(String clusterAlias, DiscoveryNode node) {_        if (clusterAlias == null) {_            return transportService.getConnection(node)__        } else {_            return transportService.getRemoteClusterService().getConnection(node, clusterAlias)__        }_    };returns,a,connection,to,the,given,node,on,the,provided,cluster,if,the,cluster,alias,is,code,null,code,the,node,will,be,resolved,against,the,local,cluster,param,cluster,alias,the,cluster,alias,the,node,should,be,resolve,against,param,node,the,node,to,resolve,return,a,connection,to,the,given,node,belonging,to,the,cluster,with,the,provided,alias;transport,connection,get,connection,string,cluster,alias,discovery,node,node,if,cluster,alias,null,return,transport,service,get,connection,node,else,return,transport,service,get,remote,cluster,service,get,connection,node,cluster,alias
SearchTransportService -> Transport.Connection getConnection(String clusterAlias, DiscoveryNode node);1528762805;Returns a connection to the given node on the provided cluster. If the cluster alias is <code>null</code> the node will be resolved_against the local cluster._@param clusterAlias the cluster alias the node should be resolve against_@param node the node to resolve_@return a connection to the given node belonging to the cluster with the provided alias.;Transport.Connection getConnection(String clusterAlias, DiscoveryNode node) {_        if (clusterAlias == null) {_            return transportService.getConnection(node)__        } else {_            return transportService.getRemoteClusterService().getConnection(node, clusterAlias)__        }_    };returns,a,connection,to,the,given,node,on,the,provided,cluster,if,the,cluster,alias,is,code,null,code,the,node,will,be,resolved,against,the,local,cluster,param,cluster,alias,the,cluster,alias,the,node,should,be,resolve,against,param,node,the,node,to,resolve,return,a,connection,to,the,given,node,belonging,to,the,cluster,with,the,provided,alias;transport,connection,get,connection,string,cluster,alias,discovery,node,node,if,cluster,alias,null,return,transport,service,get,connection,node,else,return,transport,service,get,remote,cluster,service,get,connection,node,cluster,alias
SearchTransportService -> Transport.Connection getConnection(String clusterAlias, DiscoveryNode node);1529687475;Returns a connection to the given node on the provided cluster. If the cluster alias is <code>null</code> the node will be resolved_against the local cluster._@param clusterAlias the cluster alias the node should be resolve against_@param node the node to resolve_@return a connection to the given node belonging to the cluster with the provided alias.;Transport.Connection getConnection(String clusterAlias, DiscoveryNode node) {_        if (clusterAlias == null) {_            return transportService.getConnection(node)__        } else {_            return transportService.getRemoteClusterService().getConnection(node, clusterAlias)__        }_    };returns,a,connection,to,the,given,node,on,the,provided,cluster,if,the,cluster,alias,is,code,null,code,the,node,will,be,resolved,against,the,local,cluster,param,cluster,alias,the,cluster,alias,the,node,should,be,resolve,against,param,node,the,node,to,resolve,return,a,connection,to,the,given,node,belonging,to,the,cluster,with,the,provided,alias;transport,connection,get,connection,string,cluster,alias,discovery,node,node,if,cluster,alias,null,return,transport,service,get,connection,node,else,return,transport,service,get,remote,cluster,service,get,connection,node,cluster,alias
SearchTransportService -> Transport.Connection getConnection(String clusterAlias, DiscoveryNode node);1531729807;Returns a connection to the given node on the provided cluster. If the cluster alias is <code>null</code> the node will be resolved_against the local cluster._@param clusterAlias the cluster alias the node should be resolve against_@param node the node to resolve_@return a connection to the given node belonging to the cluster with the provided alias.;Transport.Connection getConnection(String clusterAlias, DiscoveryNode node) {_        if (clusterAlias == null) {_            return transportService.getConnection(node)__        } else {_            return transportService.getRemoteClusterService().getConnection(node, clusterAlias)__        }_    };returns,a,connection,to,the,given,node,on,the,provided,cluster,if,the,cluster,alias,is,code,null,code,the,node,will,be,resolved,against,the,local,cluster,param,cluster,alias,the,cluster,alias,the,node,should,be,resolve,against,param,node,the,node,to,resolve,return,a,connection,to,the,given,node,belonging,to,the,cluster,with,the,provided,alias;transport,connection,get,connection,string,cluster,alias,discovery,node,node,if,cluster,alias,null,return,transport,service,get,connection,node,else,return,transport,service,get,remote,cluster,service,get,connection,node,cluster,alias
SearchTransportService -> Transport.Connection getConnection(String clusterAlias, DiscoveryNode node);1535139672;Returns a connection to the given node on the provided cluster. If the cluster alias is <code>null</code> the node will be resolved_against the local cluster._@param clusterAlias the cluster alias the node should be resolve against_@param node the node to resolve_@return a connection to the given node belonging to the cluster with the provided alias.;Transport.Connection getConnection(String clusterAlias, DiscoveryNode node) {_        if (clusterAlias == null) {_            return transportService.getConnection(node)__        } else {_            return transportService.getRemoteClusterService().getConnection(node, clusterAlias)__        }_    };returns,a,connection,to,the,given,node,on,the,provided,cluster,if,the,cluster,alias,is,code,null,code,the,node,will,be,resolved,against,the,local,cluster,param,cluster,alias,the,cluster,alias,the,node,should,be,resolve,against,param,node,the,node,to,resolve,return,a,connection,to,the,given,node,belonging,to,the,cluster,with,the,provided,alias;transport,connection,get,connection,string,cluster,alias,discovery,node,node,if,cluster,alias,null,return,transport,service,get,connection,node,else,return,transport,service,get,remote,cluster,service,get,connection,node,cluster,alias
SearchTransportService -> Transport.Connection getConnection(String clusterAlias, DiscoveryNode node);1537300661;Returns a connection to the given node on the provided cluster. If the cluster alias is <code>null</code> the node will be resolved_against the local cluster._@param clusterAlias the cluster alias the node should be resolve against_@param node the node to resolve_@return a connection to the given node belonging to the cluster with the provided alias.;Transport.Connection getConnection(String clusterAlias, DiscoveryNode node) {_        if (clusterAlias == null) {_            return transportService.getConnection(node)__        } else {_            return transportService.getRemoteClusterService().getConnection(node, clusterAlias)__        }_    };returns,a,connection,to,the,given,node,on,the,provided,cluster,if,the,cluster,alias,is,code,null,code,the,node,will,be,resolved,against,the,local,cluster,param,cluster,alias,the,cluster,alias,the,node,should,be,resolve,against,param,node,the,node,to,resolve,return,a,connection,to,the,given,node,belonging,to,the,cluster,with,the,provided,alias;transport,connection,get,connection,string,cluster,alias,discovery,node,node,if,cluster,alias,null,return,transport,service,get,connection,node,else,return,transport,service,get,remote,cluster,service,get,connection,node,cluster,alias
SearchTransportService -> Transport.Connection getConnection(String clusterAlias, DiscoveryNode node);1537806831;Returns a connection to the given node on the provided cluster. If the cluster alias is <code>null</code> the node will be resolved_against the local cluster._@param clusterAlias the cluster alias the node should be resolve against_@param node the node to resolve_@return a connection to the given node belonging to the cluster with the provided alias.;Transport.Connection getConnection(String clusterAlias, DiscoveryNode node) {_        if (clusterAlias == null) {_            return transportService.getConnection(node)__        } else {_            return transportService.getRemoteClusterService().getConnection(node, clusterAlias)__        }_    };returns,a,connection,to,the,given,node,on,the,provided,cluster,if,the,cluster,alias,is,code,null,code,the,node,will,be,resolved,against,the,local,cluster,param,cluster,alias,the,cluster,alias,the,node,should,be,resolve,against,param,node,the,node,to,resolve,return,a,connection,to,the,given,node,belonging,to,the,cluster,with,the,provided,alias;transport,connection,get,connection,string,cluster,alias,discovery,node,node,if,cluster,alias,null,return,transport,service,get,connection,node,else,return,transport,service,get,remote,cluster,service,get,connection,node,cluster,alias
SearchTransportService -> Transport.Connection getConnection(String clusterAlias, DiscoveryNode node);1540583181;Returns a connection to the given node on the provided cluster. If the cluster alias is <code>null</code> the node will be resolved_against the local cluster._@param clusterAlias the cluster alias the node should be resolve against_@param node the node to resolve_@return a connection to the given node belonging to the cluster with the provided alias.;Transport.Connection getConnection(String clusterAlias, DiscoveryNode node) {_        if (clusterAlias == null) {_            return transportService.getConnection(node)__        } else {_            return transportService.getRemoteClusterService().getConnection(node, clusterAlias)__        }_    };returns,a,connection,to,the,given,node,on,the,provided,cluster,if,the,cluster,alias,is,code,null,code,the,node,will,be,resolved,against,the,local,cluster,param,cluster,alias,the,cluster,alias,the,node,should,be,resolve,against,param,node,the,node,to,resolve,return,a,connection,to,the,given,node,belonging,to,the,cluster,with,the,provided,alias;transport,connection,get,connection,string,cluster,alias,discovery,node,node,if,cluster,alias,null,return,transport,service,get,connection,node,else,return,transport,service,get,remote,cluster,service,get,connection,node,cluster,alias
SearchTransportService -> Transport.Connection getConnection(String clusterAlias, DiscoveryNode node);1541092382;Returns a connection to the given node on the provided cluster. If the cluster alias is <code>null</code> the node will be resolved_against the local cluster._@param clusterAlias the cluster alias the node should be resolve against_@param node the node to resolve_@return a connection to the given node belonging to the cluster with the provided alias.;Transport.Connection getConnection(String clusterAlias, DiscoveryNode node) {_        if (clusterAlias == null) {_            return transportService.getConnection(node)__        } else {_            return transportService.getRemoteClusterService().getConnection(node, clusterAlias)__        }_    };returns,a,connection,to,the,given,node,on,the,provided,cluster,if,the,cluster,alias,is,code,null,code,the,node,will,be,resolved,against,the,local,cluster,param,cluster,alias,the,cluster,alias,the,node,should,be,resolve,against,param,node,the,node,to,resolve,return,a,connection,to,the,given,node,belonging,to,the,cluster,with,the,provided,alias;transport,connection,get,connection,string,cluster,alias,discovery,node,node,if,cluster,alias,null,return,transport,service,get,connection,node,else,return,transport,service,get,remote,cluster,service,get,connection,node,cluster,alias
SearchTransportService -> public Map<String, Long> getPendingSearchRequests();1524684173;Return a map of nodeId to pending number of search requests._This is a snapshot of the current pending search and not a live map.;public Map<String, Long> getPendingSearchRequests() {_        return new HashMap<>(clientConnections)__    };return,a,map,of,node,id,to,pending,number,of,search,requests,this,is,a,snapshot,of,the,current,pending,search,and,not,a,live,map;public,map,string,long,get,pending,search,requests,return,new,hash,map,client,connections
SearchTransportService -> public Map<String, Long> getPendingSearchRequests();1528762805;Return a map of nodeId to pending number of search requests._This is a snapshot of the current pending search and not a live map.;public Map<String, Long> getPendingSearchRequests() {_        return new HashMap<>(clientConnections)__    };return,a,map,of,node,id,to,pending,number,of,search,requests,this,is,a,snapshot,of,the,current,pending,search,and,not,a,live,map;public,map,string,long,get,pending,search,requests,return,new,hash,map,client,connections
SearchTransportService -> public Map<String, Long> getPendingSearchRequests();1529687475;Return a map of nodeId to pending number of search requests._This is a snapshot of the current pending search and not a live map.;public Map<String, Long> getPendingSearchRequests() {_        return new HashMap<>(clientConnections)__    };return,a,map,of,node,id,to,pending,number,of,search,requests,this,is,a,snapshot,of,the,current,pending,search,and,not,a,live,map;public,map,string,long,get,pending,search,requests,return,new,hash,map,client,connections
SearchTransportService -> public Map<String, Long> getPendingSearchRequests();1531729807;Return a map of nodeId to pending number of search requests._This is a snapshot of the current pending search and not a live map.;public Map<String, Long> getPendingSearchRequests() {_        return new HashMap<>(clientConnections)__    };return,a,map,of,node,id,to,pending,number,of,search,requests,this,is,a,snapshot,of,the,current,pending,search,and,not,a,live,map;public,map,string,long,get,pending,search,requests,return,new,hash,map,client,connections
SearchTransportService -> public Map<String, Long> getPendingSearchRequests();1535139672;Return a map of nodeId to pending number of search requests._This is a snapshot of the current pending search and not a live map.;public Map<String, Long> getPendingSearchRequests() {_        return new HashMap<>(clientConnections)__    };return,a,map,of,node,id,to,pending,number,of,search,requests,this,is,a,snapshot,of,the,current,pending,search,and,not,a,live,map;public,map,string,long,get,pending,search,requests,return,new,hash,map,client,connections
SearchTransportService -> public Map<String, Long> getPendingSearchRequests();1537300661;Return a map of nodeId to pending number of search requests._This is a snapshot of the current pending search and not a live map.;public Map<String, Long> getPendingSearchRequests() {_        return new HashMap<>(clientConnections)__    };return,a,map,of,node,id,to,pending,number,of,search,requests,this,is,a,snapshot,of,the,current,pending,search,and,not,a,live,map;public,map,string,long,get,pending,search,requests,return,new,hash,map,client,connections
SearchTransportService -> public Map<String, Long> getPendingSearchRequests();1537806831;Return a map of nodeId to pending number of search requests._This is a snapshot of the current pending search and not a live map.;public Map<String, Long> getPendingSearchRequests() {_        return new HashMap<>(clientConnections)__    };return,a,map,of,node,id,to,pending,number,of,search,requests,this,is,a,snapshot,of,the,current,pending,search,and,not,a,live,map;public,map,string,long,get,pending,search,requests,return,new,hash,map,client,connections
SearchTransportService -> public Map<String, Long> getPendingSearchRequests();1540583181;Return a map of nodeId to pending number of search requests._This is a snapshot of the current pending search and not a live map.;public Map<String, Long> getPendingSearchRequests() {_        return new HashMap<>(clientConnections)__    };return,a,map,of,node,id,to,pending,number,of,search,requests,this,is,a,snapshot,of,the,current,pending,search,and,not,a,live,map;public,map,string,long,get,pending,search,requests,return,new,hash,map,client,connections
SearchTransportService -> public Map<String, Long> getPendingSearchRequests();1541092382;Return a map of nodeId to pending number of search requests._This is a snapshot of the current pending search and not a live map.;public Map<String, Long> getPendingSearchRequests() {_        return new HashMap<>(clientConnections)__    };return,a,map,of,node,id,to,pending,number,of,search,requests,this,is,a,snapshot,of,the,current,pending,search,and,not,a,live,map;public,map,string,long,get,pending,search,requests,return,new,hash,map,client,connections
SearchTransportService -> public Map<String, Long> getPendingSearchRequests();1546600771;Return a map of nodeId to pending number of search requests._This is a snapshot of the current pending search and not a live map.;public Map<String, Long> getPendingSearchRequests() {_        return new HashMap<>(clientConnections)__    };return,a,map,of,node,id,to,pending,number,of,search,requests,this,is,a,snapshot,of,the,current,pending,search,and,not,a,live,map;public,map,string,long,get,pending,search,requests,return,new,hash,map,client,connections
SearchTransportService -> public Map<String, Long> getPendingSearchRequests();1548558090;Return a map of nodeId to pending number of search requests._This is a snapshot of the current pending search and not a live map.;public Map<String, Long> getPendingSearchRequests() {_        return new HashMap<>(clientConnections)__    };return,a,map,of,node,id,to,pending,number,of,search,requests,this,is,a,snapshot,of,the,current,pending,search,and,not,a,live,map;public,map,string,long,get,pending,search,requests,return,new,hash,map,client,connections
SearchTransportService -> void sendExecuteMultiSearch(final MultiSearchRequest request, SearchTask task,                                 final ActionListener<MultiSearchResponse> listener);1524684173;Used by {@link TransportSearchAction} to send the expand queries (field collapsing).;void sendExecuteMultiSearch(final MultiSearchRequest request, SearchTask task,_                                final ActionListener<MultiSearchResponse> listener) {_        final Transport.Connection connection = transportService.getConnection(transportService.getLocalNode())__        transportService.sendChildRequest(connection, MultiSearchAction.NAME, request, task,_                new ConnectionCountingHandler<>(listener, MultiSearchResponse::new, clientConnections, connection.getNode().getId()))__    };used,by,link,transport,search,action,to,send,the,expand,queries,field,collapsing;void,send,execute,multi,search,final,multi,search,request,request,search,task,task,final,action,listener,multi,search,response,listener,final,transport,connection,connection,transport,service,get,connection,transport,service,get,local,node,transport,service,send,child,request,connection,multi,search,action,name,request,task,new,connection,counting,handler,listener,multi,search,response,new,client,connections,connection,get,node,get,id
SearchTransportService -> void sendExecuteMultiSearch(final MultiSearchRequest request, SearchTask task,                                 final ActionListener<MultiSearchResponse> listener);1528762805;Used by {@link TransportSearchAction} to send the expand queries (field collapsing).;void sendExecuteMultiSearch(final MultiSearchRequest request, SearchTask task,_                                final ActionListener<MultiSearchResponse> listener) {_        final Transport.Connection connection = transportService.getConnection(transportService.getLocalNode())__        transportService.sendChildRequest(connection, MultiSearchAction.NAME, request, task,_                new ConnectionCountingHandler<>(listener, MultiSearchResponse::new, clientConnections, connection.getNode().getId()))__    };used,by,link,transport,search,action,to,send,the,expand,queries,field,collapsing;void,send,execute,multi,search,final,multi,search,request,request,search,task,task,final,action,listener,multi,search,response,listener,final,transport,connection,connection,transport,service,get,connection,transport,service,get,local,node,transport,service,send,child,request,connection,multi,search,action,name,request,task,new,connection,counting,handler,listener,multi,search,response,new,client,connections,connection,get,node,get,id
SearchTransportService -> void sendExecuteMultiSearch(final MultiSearchRequest request, SearchTask task,                                 final ActionListener<MultiSearchResponse> listener);1529687475;Used by {@link TransportSearchAction} to send the expand queries (field collapsing).;void sendExecuteMultiSearch(final MultiSearchRequest request, SearchTask task,_                                final ActionListener<MultiSearchResponse> listener) {_        final Transport.Connection connection = transportService.getConnection(transportService.getLocalNode())__        transportService.sendChildRequest(connection, MultiSearchAction.NAME, request, task,_                new ConnectionCountingHandler<>(listener, MultiSearchResponse::new, clientConnections, connection.getNode().getId()))__    };used,by,link,transport,search,action,to,send,the,expand,queries,field,collapsing;void,send,execute,multi,search,final,multi,search,request,request,search,task,task,final,action,listener,multi,search,response,listener,final,transport,connection,connection,transport,service,get,connection,transport,service,get,local,node,transport,service,send,child,request,connection,multi,search,action,name,request,task,new,connection,counting,handler,listener,multi,search,response,new,client,connections,connection,get,node,get,id
SearchTransportService -> void sendExecuteMultiSearch(final MultiSearchRequest request, SearchTask task,                                 final ActionListener<MultiSearchResponse> listener);1531729807;Used by {@link TransportSearchAction} to send the expand queries (field collapsing).;void sendExecuteMultiSearch(final MultiSearchRequest request, SearchTask task,_                                final ActionListener<MultiSearchResponse> listener) {_        final Transport.Connection connection = transportService.getConnection(transportService.getLocalNode())__        transportService.sendChildRequest(connection, MultiSearchAction.NAME, request, task,_                new ConnectionCountingHandler<>(listener, MultiSearchResponse::new, clientConnections, connection.getNode().getId()))__    };used,by,link,transport,search,action,to,send,the,expand,queries,field,collapsing;void,send,execute,multi,search,final,multi,search,request,request,search,task,task,final,action,listener,multi,search,response,listener,final,transport,connection,connection,transport,service,get,connection,transport,service,get,local,node,transport,service,send,child,request,connection,multi,search,action,name,request,task,new,connection,counting,handler,listener,multi,search,response,new,client,connections,connection,get,node,get,id
SearchTransportService -> void sendExecuteMultiSearch(final MultiSearchRequest request, SearchTask task,                                 final ActionListener<MultiSearchResponse> listener);1535139672;Used by {@link TransportSearchAction} to send the expand queries (field collapsing).;void sendExecuteMultiSearch(final MultiSearchRequest request, SearchTask task,_                                final ActionListener<MultiSearchResponse> listener) {_        final Transport.Connection connection = transportService.getConnection(transportService.getLocalNode())__        transportService.sendChildRequest(connection, MultiSearchAction.NAME, request, task,_                new ConnectionCountingHandler<>(listener, MultiSearchResponse::new, clientConnections, connection.getNode().getId()))__    };used,by,link,transport,search,action,to,send,the,expand,queries,field,collapsing;void,send,execute,multi,search,final,multi,search,request,request,search,task,task,final,action,listener,multi,search,response,listener,final,transport,connection,connection,transport,service,get,connection,transport,service,get,local,node,transport,service,send,child,request,connection,multi,search,action,name,request,task,new,connection,counting,handler,listener,multi,search,response,new,client,connections,connection,get,node,get,id
SearchTransportService -> void sendExecuteMultiSearch(final MultiSearchRequest request, SearchTask task,                                 final ActionListener<MultiSearchResponse> listener);1537300661;Used by {@link TransportSearchAction} to send the expand queries (field collapsing).;void sendExecuteMultiSearch(final MultiSearchRequest request, SearchTask task,_                                final ActionListener<MultiSearchResponse> listener) {_        final Transport.Connection connection = transportService.getConnection(transportService.getLocalNode())__        transportService.sendChildRequest(connection, MultiSearchAction.NAME, request, task,_                new ConnectionCountingHandler<>(listener, MultiSearchResponse::new, clientConnections, connection.getNode().getId()))__    };used,by,link,transport,search,action,to,send,the,expand,queries,field,collapsing;void,send,execute,multi,search,final,multi,search,request,request,search,task,task,final,action,listener,multi,search,response,listener,final,transport,connection,connection,transport,service,get,connection,transport,service,get,local,node,transport,service,send,child,request,connection,multi,search,action,name,request,task,new,connection,counting,handler,listener,multi,search,response,new,client,connections,connection,get,node,get,id
SearchTransportService -> void sendExecuteMultiSearch(final MultiSearchRequest request, SearchTask task,                                 final ActionListener<MultiSearchResponse> listener);1537806831;Used by {@link TransportSearchAction} to send the expand queries (field collapsing).;void sendExecuteMultiSearch(final MultiSearchRequest request, SearchTask task,_                                final ActionListener<MultiSearchResponse> listener) {_        final Transport.Connection connection = transportService.getConnection(transportService.getLocalNode())__        transportService.sendChildRequest(connection, MultiSearchAction.NAME, request, task,_                new ConnectionCountingHandler<>(listener, MultiSearchResponse::new, clientConnections, connection.getNode().getId()))__    };used,by,link,transport,search,action,to,send,the,expand,queries,field,collapsing;void,send,execute,multi,search,final,multi,search,request,request,search,task,task,final,action,listener,multi,search,response,listener,final,transport,connection,connection,transport,service,get,connection,transport,service,get,local,node,transport,service,send,child,request,connection,multi,search,action,name,request,task,new,connection,counting,handler,listener,multi,search,response,new,client,connections,connection,get,node,get,id
SearchTransportService -> void sendExecuteMultiSearch(final MultiSearchRequest request, SearchTask task,                                 final ActionListener<MultiSearchResponse> listener);1540583181;Used by {@link TransportSearchAction} to send the expand queries (field collapsing).;void sendExecuteMultiSearch(final MultiSearchRequest request, SearchTask task,_                                final ActionListener<MultiSearchResponse> listener) {_        final Transport.Connection connection = transportService.getConnection(transportService.getLocalNode())__        transportService.sendChildRequest(connection, MultiSearchAction.NAME, request, task,_                new ConnectionCountingHandler<>(listener, MultiSearchResponse::new, clientConnections, connection.getNode().getId()))__    };used,by,link,transport,search,action,to,send,the,expand,queries,field,collapsing;void,send,execute,multi,search,final,multi,search,request,request,search,task,task,final,action,listener,multi,search,response,listener,final,transport,connection,connection,transport,service,get,connection,transport,service,get,local,node,transport,service,send,child,request,connection,multi,search,action,name,request,task,new,connection,counting,handler,listener,multi,search,response,new,client,connections,connection,get,node,get,id
SearchTransportService -> void sendExecuteMultiSearch(final MultiSearchRequest request, SearchTask task,                                 final ActionListener<MultiSearchResponse> listener);1541092382;Used by {@link TransportSearchAction} to send the expand queries (field collapsing).;void sendExecuteMultiSearch(final MultiSearchRequest request, SearchTask task,_                                final ActionListener<MultiSearchResponse> listener) {_        final Transport.Connection connection = transportService.getConnection(transportService.getLocalNode())__        transportService.sendChildRequest(connection, MultiSearchAction.NAME, request, task,_                new ConnectionCountingHandler<>(listener, MultiSearchResponse::new, clientConnections, connection.getNode().getId()))__    };used,by,link,transport,search,action,to,send,the,expand,queries,field,collapsing;void,send,execute,multi,search,final,multi,search,request,request,search,task,task,final,action,listener,multi,search,response,listener,final,transport,connection,connection,transport,service,get,connection,transport,service,get,local,node,transport,service,send,child,request,connection,multi,search,action,name,request,task,new,connection,counting,handler,listener,multi,search,response,new,client,connections,connection,get,node,get,id
SearchTransportService -> void sendExecuteMultiSearch(final MultiSearchRequest request, SearchTask task,                                 final ActionListener<MultiSearchResponse> listener);1546600771;Used by {@link TransportSearchAction} to send the expand queries (field collapsing).;void sendExecuteMultiSearch(final MultiSearchRequest request, SearchTask task,_                                final ActionListener<MultiSearchResponse> listener) {_        final Transport.Connection connection = transportService.getConnection(transportService.getLocalNode())__        transportService.sendChildRequest(connection, MultiSearchAction.NAME, request, task,_                new ConnectionCountingHandler<>(listener, MultiSearchResponse::new, clientConnections, connection.getNode().getId()))__    };used,by,link,transport,search,action,to,send,the,expand,queries,field,collapsing;void,send,execute,multi,search,final,multi,search,request,request,search,task,task,final,action,listener,multi,search,response,listener,final,transport,connection,connection,transport,service,get,connection,transport,service,get,local,node,transport,service,send,child,request,connection,multi,search,action,name,request,task,new,connection,counting,handler,listener,multi,search,response,new,client,connections,connection,get,node,get,id
SearchTransportService -> void sendExecuteMultiSearch(final MultiSearchRequest request, SearchTask task,                                 final ActionListener<MultiSearchResponse> listener);1548558090;Used by {@link TransportSearchAction} to send the expand queries (field collapsing).;void sendExecuteMultiSearch(final MultiSearchRequest request, SearchTask task,_                                final ActionListener<MultiSearchResponse> listener) {_        final Transport.Connection connection = transportService.getConnection(transportService.getLocalNode())__        transportService.sendChildRequest(connection, MultiSearchAction.NAME, request, task,_                new ConnectionCountingHandler<>(listener, MultiSearchResponse::new, clientConnections, connection.getNode().getId()))__    };used,by,link,transport,search,action,to,send,the,expand,queries,field,collapsing;void,send,execute,multi,search,final,multi,search,request,request,search,task,task,final,action,listener,multi,search,response,listener,final,transport,connection,connection,transport,service,get,connection,transport,service,get,local,node,transport,service,send,child,request,connection,multi,search,action,name,request,task,new,connection,counting,handler,listener,multi,search,response,new,client,connections,connection,get,node,get,id
SearchTransportService -> Transport.Connection getConnection(@Nullable String clusterAlias, DiscoveryNode node);1546600771;Returns a connection to the given node on the provided cluster. If the cluster alias is <code>null</code> the node will be resolved_against the local cluster._@param clusterAlias the cluster alias the node should be resolved against_@param node the node to resolve_@return a connection to the given node belonging to the cluster with the provided alias.;Transport.Connection getConnection(@Nullable String clusterAlias, DiscoveryNode node) {_        if (clusterAlias == null) {_            return transportService.getConnection(node)__        } else {_            return transportService.getRemoteClusterService().getConnection(node, clusterAlias)__        }_    };returns,a,connection,to,the,given,node,on,the,provided,cluster,if,the,cluster,alias,is,code,null,code,the,node,will,be,resolved,against,the,local,cluster,param,cluster,alias,the,cluster,alias,the,node,should,be,resolved,against,param,node,the,node,to,resolve,return,a,connection,to,the,given,node,belonging,to,the,cluster,with,the,provided,alias;transport,connection,get,connection,nullable,string,cluster,alias,discovery,node,node,if,cluster,alias,null,return,transport,service,get,connection,node,else,return,transport,service,get,remote,cluster,service,get,connection,node,cluster,alias
SearchTransportService -> Transport.Connection getConnection(@Nullable String clusterAlias, DiscoveryNode node);1548558090;Returns a connection to the given node on the provided cluster. If the cluster alias is <code>null</code> the node will be resolved_against the local cluster._@param clusterAlias the cluster alias the node should be resolved against_@param node the node to resolve_@return a connection to the given node belonging to the cluster with the provided alias.;Transport.Connection getConnection(@Nullable String clusterAlias, DiscoveryNode node) {_        if (clusterAlias == null) {_            return transportService.getConnection(node)__        } else {_            return transportService.getRemoteClusterService().getConnection(node, clusterAlias)__        }_    };returns,a,connection,to,the,given,node,on,the,provided,cluster,if,the,cluster,alias,is,code,null,code,the,node,will,be,resolved,against,the,local,cluster,param,cluster,alias,the,cluster,alias,the,node,should,be,resolved,against,param,node,the,node,to,resolve,return,a,connection,to,the,given,node,belonging,to,the,cluster,with,the,provided,alias;transport,connection,get,connection,nullable,string,cluster,alias,discovery,node,node,if,cluster,alias,null,return,transport,service,get,connection,node,else,return,transport,service,get,remote,cluster,service,get,connection,node,cluster,alias
