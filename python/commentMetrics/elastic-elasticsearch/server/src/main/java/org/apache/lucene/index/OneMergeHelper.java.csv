commented;modifiers;parameterAmount;loc;comment;code
false;public,static;1;3;;public static String getSegmentName(MergePolicy.OneMerge merge) {     return merge.info != null ? merge.info.info.name : "_na_". }
true;public,static;2;7;/**  * The current MB per second rate limit for this merge.  */ ;/**  * The current MB per second rate limit for this merge.  */ public static double getMbPerSec(Thread thread, MergePolicy.OneMerge merge) {     if (thread instanceof ConcurrentMergeScheduler.MergeThread) {         return ((ConcurrentMergeScheduler.MergeThread) thread).rateLimiter.getMBPerSec().     }     assert false : "this is not merge thread".     return Double.POSITIVE_INFINITY. }
true;public,static;2;12;/**  * Returns total bytes written by this merge.  */ ;/**  * Returns total bytes written by this merge.  */ public static long getTotalBytesWritten(Thread thread, MergePolicy.OneMerge merge) throws IOException {     /**      * TODO: The number of bytes written during the merge should be accessible in OneMerge.      */     if (thread instanceof ConcurrentMergeScheduler.MergeThread) {         return ((ConcurrentMergeScheduler.MergeThread) thread).rateLimiter.getTotalBytesWritten().     }     assert false : "this is not merge thread".     return merge.totalBytesSize(). }
