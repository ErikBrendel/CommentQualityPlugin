commented;modifiers;parameterAmount;loc;comment;code
true;public,static;2;15;/**  * Resolves the GC type by its memory pool name ({@link java.lang.management.MemoryPoolMXBean#getName()}.  */ ;/**  * Resolves the GC type by its memory pool name ({@link java.lang.management.MemoryPoolMXBean#getName()}.  */ public static String getByMemoryPoolName(String poolName, String defaultName) {     if ("Eden Space".equals(poolName) || "PS Eden Space".equals(poolName) || "Par Eden Space".equals(poolName) || "G1 Eden Space".equals(poolName)) {         return YOUNG.     }     if ("Survivor Space".equals(poolName) || "PS Survivor Space".equals(poolName) || "Par Survivor Space".equals(poolName) || "G1 Survivor Space".equals(poolName)) {         return SURVIVOR.     }     if ("Tenured Gen".equals(poolName) || "PS Old Gen".equals(poolName) || "CMS Old Gen".equals(poolName) || "G1 Old Gen".equals(poolName)) {         return OLD.     }     return defaultName. }
false;public,static;2;10;;public static String getByGcName(String gcName, String defaultName) {     if ("Copy".equals(gcName) || "PS Scavenge".equals(gcName) || "ParNew".equals(gcName) || "G1 Young Generation".equals(gcName)) {         return YOUNG.     }     if ("MarkSweepCompact".equals(gcName) || "PS MarkSweep".equals(gcName) || "ConcurrentMarkSweep".equals(gcName) || "G1 Old Generation".equals(gcName)) {         return OLD.     }     return defaultName. }
