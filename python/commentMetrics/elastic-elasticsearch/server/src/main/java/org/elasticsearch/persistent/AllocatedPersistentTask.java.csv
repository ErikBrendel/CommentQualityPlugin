# id;timestamp;commentText;codeText;commentWords;codeWords
AllocatedPersistentTask -> public void waitForPersistentTaskStatus(Predicate<PersistentTasksCustomMetaData.PersistentTask<?>> predicate,                                             @Nullable TimeValue timeout,                                             PersistentTasksService.WaitForPersistentTaskStatusListener<?> listener);1524684173;Waits for this persistent task to have the desired state.;public void waitForPersistentTaskStatus(Predicate<PersistentTasksCustomMetaData.PersistentTask<?>> predicate,_                                            @Nullable TimeValue timeout,_                                            PersistentTasksService.WaitForPersistentTaskStatusListener<?> listener) {_        persistentTasksService.waitForPersistentTaskStatus(persistentTaskId, predicate, timeout, listener)__    };waits,for,this,persistent,task,to,have,the,desired,state;public,void,wait,for,persistent,task,status,predicate,persistent,tasks,custom,meta,data,persistent,task,predicate,nullable,time,value,timeout,persistent,tasks,service,wait,for,persistent,task,status,listener,listener,persistent,tasks,service,wait,for,persistent,task,status,persistent,task,id,predicate,timeout,listener
AllocatedPersistentTask -> public void waitForPersistentTaskStatus(Predicate<PersistentTasksCustomMetaData.PersistentTask<?>> predicate,                                             @Nullable TimeValue timeout,                                             PersistentTasksService.WaitForPersistentTaskStatusListener<?> listener);1527583663;Waits for this persistent task to have the desired state.;public void waitForPersistentTaskStatus(Predicate<PersistentTasksCustomMetaData.PersistentTask<?>> predicate,_                                            @Nullable TimeValue timeout,_                                            PersistentTasksService.WaitForPersistentTaskStatusListener<?> listener) {_        persistentTasksService.waitForPersistentTaskStatus(persistentTaskId, predicate, timeout, listener)__    };waits,for,this,persistent,task,to,have,the,desired,state;public,void,wait,for,persistent,task,status,predicate,persistent,tasks,custom,meta,data,persistent,task,predicate,nullable,time,value,timeout,persistent,tasks,service,wait,for,persistent,task,status,listener,listener,persistent,tasks,service,wait,for,persistent,task,status,persistent,task,id,predicate,timeout,listener
AllocatedPersistentTask -> public void waitForPersistentTask(final Predicate<PersistentTasksCustomMetaData.PersistentTask<?>> predicate,                                       final @Nullable TimeValue timeout,                                       final PersistentTasksService.WaitForPersistentTaskListener<?> listener);1527773340;Waits for a given persistent task to comply with a given predicate, then call back the listener accordingly.__@param predicate the persistent task predicate to evaluate_@param timeout a timeout for waiting_@param listener the callback listener;public void waitForPersistentTask(final Predicate<PersistentTasksCustomMetaData.PersistentTask<?>> predicate,_                                      final @Nullable TimeValue timeout,_                                      final PersistentTasksService.WaitForPersistentTaskListener<?> listener) {_        persistentTasksService.waitForPersistentTaskCondition(persistentTaskId, predicate, timeout, listener)__    };waits,for,a,given,persistent,task,to,comply,with,a,given,predicate,then,call,back,the,listener,accordingly,param,predicate,the,persistent,task,predicate,to,evaluate,param,timeout,a,timeout,for,waiting,param,listener,the,callback,listener;public,void,wait,for,persistent,task,final,predicate,persistent,tasks,custom,meta,data,persistent,task,predicate,final,nullable,time,value,timeout,final,persistent,tasks,service,wait,for,persistent,task,listener,listener,persistent,tasks,service,wait,for,persistent,task,condition,persistent,task,id,predicate,timeout,listener
AllocatedPersistentTask -> public void waitForPersistentTask(final Predicate<PersistentTasksCustomMetaData.PersistentTask<?>> predicate,                                       final @Nullable TimeValue timeout,                                       final PersistentTasksService.WaitForPersistentTaskListener<?> listener);1529076503;Waits for a given persistent task to comply with a given predicate, then call back the listener accordingly.__@param predicate the persistent task predicate to evaluate_@param timeout a timeout for waiting_@param listener the callback listener;public void waitForPersistentTask(final Predicate<PersistentTasksCustomMetaData.PersistentTask<?>> predicate,_                                      final @Nullable TimeValue timeout,_                                      final PersistentTasksService.WaitForPersistentTaskListener<?> listener) {_        persistentTasksService.waitForPersistentTaskCondition(persistentTaskId, predicate, timeout, listener)__    };waits,for,a,given,persistent,task,to,comply,with,a,given,predicate,then,call,back,the,listener,accordingly,param,predicate,the,persistent,task,predicate,to,evaluate,param,timeout,a,timeout,for,waiting,param,listener,the,callback,listener;public,void,wait,for,persistent,task,final,predicate,persistent,tasks,custom,meta,data,persistent,task,predicate,final,nullable,time,value,timeout,final,persistent,tasks,service,wait,for,persistent,task,listener,listener,persistent,tasks,service,wait,for,persistent,task,condition,persistent,task,id,predicate,timeout,listener
AllocatedPersistentTask -> public void updatePersistentStatus(Task.Status status, ActionListener<PersistentTasksCustomMetaData.PersistentTask<?>> listener);1524684173;Updates the persistent state for the corresponding persistent task._<p>_This doesn't affect the status of this allocated task.;public void updatePersistentStatus(Task.Status status, ActionListener<PersistentTasksCustomMetaData.PersistentTask<?>> listener) {_        persistentTasksService.updateStatus(persistentTaskId, allocationId, status, listener)__    };updates,the,persistent,state,for,the,corresponding,persistent,task,p,this,doesn,t,affect,the,status,of,this,allocated,task;public,void,update,persistent,status,task,status,status,action,listener,persistent,tasks,custom,meta,data,persistent,task,listener,persistent,tasks,service,update,status,persistent,task,id,allocation,id,status,listener
AllocatedPersistentTask -> public void updatePersistentStatus(Task.Status status, ActionListener<PersistentTasksCustomMetaData.PersistentTask<?>> listener);1527583663;Updates the persistent state for the corresponding persistent task._<p>_This doesn't affect the status of this allocated task.;public void updatePersistentStatus(Task.Status status, ActionListener<PersistentTasksCustomMetaData.PersistentTask<?>> listener) {_        persistentTasksService.updateStatus(persistentTaskId, allocationId, status, listener)__    };updates,the,persistent,state,for,the,corresponding,persistent,task,p,this,doesn,t,affect,the,status,of,this,allocated,task;public,void,update,persistent,status,task,status,status,action,listener,persistent,tasks,custom,meta,data,persistent,task,listener,persistent,tasks,service,update,status,persistent,task,id,allocation,id,status,listener
AllocatedPersistentTask -> public void updatePersistentStatus(Task.Status status, ActionListener<PersistentTasksCustomMetaData.PersistentTask<?>> listener);1527773340;Updates the persistent state for the corresponding persistent task._<p>_This doesn't affect the status of this allocated task.;public void updatePersistentStatus(Task.Status status, ActionListener<PersistentTasksCustomMetaData.PersistentTask<?>> listener) {_        persistentTasksService.updateStatus(persistentTaskId, allocationId, status, listener)__    };updates,the,persistent,state,for,the,corresponding,persistent,task,p,this,doesn,t,affect,the,status,of,this,allocated,task;public,void,update,persistent,status,task,status,status,action,listener,persistent,tasks,custom,meta,data,persistent,task,listener,persistent,tasks,service,update,status,persistent,task,id,allocation,id,status,listener
