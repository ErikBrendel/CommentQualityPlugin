commented;modifiers;parameterAmount;loc;comment;code
false;public;3;5;;public void add(long total, long periodic, long totalTimeInMillis) {     this.total += total.     this.periodic += periodic.     this.totalTimeInMillis += totalTimeInMillis. }
false;public;1;3;;public void add(FlushStats flushStats) {     addTotals(flushStats). }
false;public;1;8;;public void addTotals(FlushStats flushStats) {     if (flushStats == null) {         return.     }     this.total += flushStats.total.     this.periodic += flushStats.periodic.     this.totalTimeInMillis += flushStats.totalTimeInMillis. }
true;public;0;3;/**  * The total number of flush executed.  */ ;/**  * The total number of flush executed.  */ public long getTotal() {     return this.total. }
true;public;0;3;/**  * The number of flushes that were periodically triggered when translog exceeded the flush threshold.  */ ;/**  * The number of flushes that were periodically triggered when translog exceeded the flush threshold.  */ public long getPeriodic() {     return periodic. }
true;public;0;3;/**  * The total time merges have been executed (in milliseconds).  */ ;/**  * The total time merges have been executed (in milliseconds).  */ public long getTotalTimeInMillis() {     return this.totalTimeInMillis. }
true;public;0;3;/**  * The total time merges have been executed.  */ ;/**  * The total time merges have been executed.  */ public TimeValue getTotalTime() {     return new TimeValue(totalTimeInMillis). }
false;public;2;9;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.startObject(Fields.FLUSH).     builder.field(Fields.TOTAL, total).     builder.field(Fields.PERIODIC, periodic).     builder.humanReadableField(Fields.TOTAL_TIME_IN_MILLIS, Fields.TOTAL_TIME, getTotalTime()).     builder.endObject().     return builder. }
false;public;1;8;;@Override public void readFrom(StreamInput in) throws IOException {     total = in.readVLong().     totalTimeInMillis = in.readVLong().     if (in.getVersion().onOrAfter(Version.V_6_3_0)) {         periodic = in.readVLong().     } }
false;public;1;8;;@Override public void writeTo(StreamOutput out) throws IOException {     out.writeVLong(total).     out.writeVLong(totalTimeInMillis).     if (out.getVersion().onOrAfter(Version.V_6_3_0)) {         out.writeVLong(periodic).     } }
