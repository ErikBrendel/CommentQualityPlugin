commented;modifiers;parameterAmount;loc;comment;code
true;public;1;4;/**  * Sets the type of the document to delete.  */ ;/**  * Sets the type of the document to delete.  */ public DeleteRequestBuilder setType(String type) {     request.type(type).     return this. }
true;public;1;4;/**  * Sets the id of the document to delete.  */ ;/**  * Sets the id of the document to delete.  */ public DeleteRequestBuilder setId(String id) {     request.id(id).     return this. }
true;public;1;4;/**  * Controls the shard routing of the delete request. Using this value to hash the shard  * and not the id.  */ ;/**  * Controls the shard routing of the delete request. Using this value to hash the shard  * and not the id.  */ public DeleteRequestBuilder setRouting(String routing) {     request.routing(routing).     return this. }
true;public;1;4;/**  * Sets the version, which will cause the delete operation to only be performed if a matching  * version exists and no changes happened on the doc since then.  */ ;/**  * Sets the version, which will cause the delete operation to only be performed if a matching  * version exists and no changes happened on the doc since then.  */ public DeleteRequestBuilder setVersion(long version) {     request.version(version).     return this. }
true;public;1;4;/**  * Sets the type of versioning to use. Defaults to {@link VersionType#INTERNAL}.  */ ;/**  * Sets the type of versioning to use. Defaults to {@link VersionType#INTERNAL}.  */ public DeleteRequestBuilder setVersionType(VersionType versionType) {     request.versionType(versionType).     return this. }
true;public;1;4;/**  * only perform this delete request if the document was last modification was assigned the given  * sequence number. Must be used in combination with {@link #setIfPrimaryTerm(long)}  *  * If the document last modification was assigned a different sequence number a  * {@link org.elasticsearch.index.engine.VersionConflictEngineException} will be thrown.  */ ;/**  * only perform this delete request if the document was last modification was assigned the given  * sequence number. Must be used in combination with {@link #setIfPrimaryTerm(long)}  *  * If the document last modification was assigned a different sequence number a  * {@link org.elasticsearch.index.engine.VersionConflictEngineException} will be thrown.  */ public DeleteRequestBuilder setIfSeqNo(long seqNo) {     request.setIfSeqNo(seqNo).     return this. }
true;public;1;4;/**  * only perform this delete request if the document was last modification was assigned the given  * primary term. Must be used in combination with {@link #setIfSeqNo(long)}  *  * If the document last modification was assigned a different term a  * {@link org.elasticsearch.index.engine.VersionConflictEngineException} will be thrown.  */ ;/**  * only perform this delete request if the document was last modification was assigned the given  * primary term. Must be used in combination with {@link #setIfSeqNo(long)}  *  * If the document last modification was assigned a different term a  * {@link org.elasticsearch.index.engine.VersionConflictEngineException} will be thrown.  */ public DeleteRequestBuilder setIfPrimaryTerm(long term) {     request.setIfPrimaryTerm(term).     return this. }
