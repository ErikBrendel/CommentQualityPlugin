commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String getName() {     return "index_put_alias_action". }
false;public;2;68;;@Override public RestChannelConsumer prepareRequest(final RestRequest request, final NodeClient client) throws IOException {     String[] indices = Strings.splitStringByCommaToArray(request.param("index")).     String alias = request.param("name").     Map<String, Object> filter = null.     String routing = null.     String indexRouting = null.     String searchRouting = null.     Boolean writeIndex = null.     if (request.hasContent()) {         try (XContentParser parser = request.contentParser()) {             XContentParser.Token token = parser.nextToken().             if (token == null) {                 throw new IllegalArgumentException("No index alias is specified").             }             String currentFieldName = null.             while ((token = parser.nextToken()) != null) {                 if (token == XContentParser.Token.FIELD_NAME) {                     currentFieldName = parser.currentName().                 } else if (token.isValue()) {                     if ("index".equals(currentFieldName)) {                         indices = Strings.splitStringByCommaToArray(parser.text()).                     } else if ("alias".equals(currentFieldName)) {                         alias = parser.text().                     } else if ("routing".equals(currentFieldName)) {                         routing = parser.textOrNull().                     } else if ("indexRouting".equals(currentFieldName) || "index-routing".equals(currentFieldName) || "index_routing".equals(currentFieldName)) {                         indexRouting = parser.textOrNull().                     } else if ("searchRouting".equals(currentFieldName) || "search-routing".equals(currentFieldName) || "search_routing".equals(currentFieldName)) {                         searchRouting = parser.textOrNull().                     } else if ("is_write_index".equals(currentFieldName)) {                         writeIndex = parser.booleanValue().                     }                 } else if (token == XContentParser.Token.START_OBJECT) {                     if ("filter".equals(currentFieldName)) {                         filter = parser.mapOrdered().                     }                 }             }         }     }     IndicesAliasesRequest indicesAliasesRequest = new IndicesAliasesRequest().     indicesAliasesRequest.timeout(request.paramAsTime("timeout", indicesAliasesRequest.timeout())).     indicesAliasesRequest.masterNodeTimeout(request.paramAsTime("master_timeout", indicesAliasesRequest.masterNodeTimeout())).     IndicesAliasesRequest.AliasActions aliasAction = AliasActions.add().indices(indices).alias(alias).     if (routing != null) {         aliasAction.routing(routing).     }     if (searchRouting != null) {         aliasAction.searchRouting(searchRouting).     }     if (indexRouting != null) {         aliasAction.indexRouting(indexRouting).     }     if (filter != null) {         aliasAction.filter(filter).     }     if (writeIndex != null) {         aliasAction.writeIndex(writeIndex).     }     indicesAliasesRequest.addAliasAction(aliasAction).     return channel -> client.admin().indices().aliases(indicesAliasesRequest, new RestToXContentListener<>(channel)). }
