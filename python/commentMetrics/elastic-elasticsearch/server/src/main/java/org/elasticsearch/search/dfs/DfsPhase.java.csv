commented;modifiers;parameterAmount;loc;comment;code
false;public;1;3;;@Override public void preProcess(SearchContext context) { }
false;public;2;11;;@Override public TermStatistics termStatistics(Term term, TermStates states) throws IOException {     if (context.isCancelled()) {         throw new TaskCancelledException("cancelled").     }     TermStatistics ts = super.termStatistics(term, states).     if (ts != null) {         stats.put(term, ts).     }     return ts. }
false;public;1;11;;@Override public CollectionStatistics collectionStatistics(String field) throws IOException {     if (context.isCancelled()) {         throw new TaskCancelledException("cancelled").     }     CollectionStatistics cs = super.collectionStatistics(field).     if (cs != null) {         fieldStatistics.put(field, cs).     }     return cs. }
false;public;1;51;;@Override public void execute(SearchContext context) {     try {         ObjectObjectHashMap<String, CollectionStatistics> fieldStatistics = HppcMaps.newNoNullKeysMap().         Map<Term, TermStatistics> stats = new HashMap<>().         IndexSearcher searcher = new IndexSearcher(context.searcher().getIndexReader()) {              @Override             public TermStatistics termStatistics(Term term, TermStates states) throws IOException {                 if (context.isCancelled()) {                     throw new TaskCancelledException("cancelled").                 }                 TermStatistics ts = super.termStatistics(term, states).                 if (ts != null) {                     stats.put(term, ts).                 }                 return ts.             }              @Override             public CollectionStatistics collectionStatistics(String field) throws IOException {                 if (context.isCancelled()) {                     throw new TaskCancelledException("cancelled").                 }                 CollectionStatistics cs = super.collectionStatistics(field).                 if (cs != null) {                     fieldStatistics.put(field, cs).                 }                 return cs.             }         }.         searcher.createWeight(context.searcher().rewrite(context.query()), ScoreMode.COMPLETE, 1).         for (RescoreContext rescoreContext : context.rescore()) {             for (Query query : rescoreContext.getQueries()) {                 searcher.createWeight(context.searcher().rewrite(query), ScoreMode.COMPLETE, 1).             }         }         Term[] terms = stats.keySet().toArray(new Term[0]).         TermStatistics[] termStatistics = new TermStatistics[terms.length].         for (int i = 0. i < terms.length. i++) {             termStatistics[i] = stats.get(terms[i]).         }         context.dfsResult().termsStatistics(terms, termStatistics).fieldStatistics(fieldStatistics).maxDoc(context.searcher().getIndexReader().maxDoc()).     } catch (Exception e) {         throw new DfsPhaseExecutionException(context, "Exception during dfs phase", e).     } }
