commented;modifiers;parameterAmount;loc;comment;code
false;public;1;5;;@Override public void writeTo(StreamOutput out) throws IOException {     out.writeMap(ingestDocument.getSourceAndMetadata()).     out.writeMap(ingestDocument.getIngestMetadata()). }
false;;0;3;;IngestDocument getIngestDocument() {     return ingestDocument. }
false;public;2;16;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.startObject(DOC_FIELD).     Map<IngestDocument.MetaData, Object> metadataMap = ingestDocument.getMetadata().     for (Map.Entry<IngestDocument.MetaData, Object> metadata : metadataMap.entrySet()) {         if (metadata.getValue() != null) {             builder.field(metadata.getKey().getFieldName(), metadata.getValue().toString()).         }     }     Map<String, Object> source = IngestDocument.deepCopyMap(ingestDocument.getSourceAndMetadata()).     metadataMap.keySet().forEach(mD -> source.remove(mD.getFieldName())).     builder.field(SOURCE_FIELD, source).     builder.field(INGEST_FIELD, ingestDocument.getIngestMetadata()).     builder.endObject().     return builder. }
false;public,static;1;3;;public static WriteableIngestDocument fromXContent(XContentParser parser) {     return PARSER.apply(parser, null). }
false;public;1;11;;@Override public boolean equals(Object o) {     if (this == o) {         return true.     }     if (o == null || getClass() != o.getClass()) {         return false.     }     WriteableIngestDocument that = (WriteableIngestDocument) o.     return Objects.equals(ingestDocument, that.ingestDocument). }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(ingestDocument). }
false;public;0;4;;@Override public String toString() {     return ingestDocument.toString(). }
