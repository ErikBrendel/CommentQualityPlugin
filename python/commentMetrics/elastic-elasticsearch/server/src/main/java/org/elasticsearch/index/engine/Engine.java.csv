# id;timestamp;commentText;codeText;commentWords;codeWords
Engine -> Result -> public Translog.Location getTranslogLocation();1524684173;get the translog location after executing the operation;public Translog.Location getTranslogLocation() {_            return translogLocation__        };get,the,translog,location,after,executing,the,operation;public,translog,location,get,translog,location,return,translog,location
Engine -> Result -> public Translog.Location getTranslogLocation();1525162917;get the translog location after executing the operation;public Translog.Location getTranslogLocation() {_            return translogLocation__        };get,the,translog,location,after,executing,the,operation;public,translog,location,get,translog,location,return,translog,location
Engine -> Result -> public Translog.Location getTranslogLocation();1525334055;get the translog location after executing the operation;public Translog.Location getTranslogLocation() {_            return translogLocation__        };get,the,translog,location,after,executing,the,operation;public,translog,location,get,translog,location,return,translog,location
Engine -> Result -> public Translog.Location getTranslogLocation();1527583663;get the translog location after executing the operation;public Translog.Location getTranslogLocation() {_            return translogLocation__        };get,the,translog,location,after,executing,the,operation;public,translog,location,get,translog,location,return,translog,location
Engine -> Result -> public Translog.Location getTranslogLocation();1528706846;get the translog location after executing the operation;public Translog.Location getTranslogLocation() {_            return translogLocation__        };get,the,translog,location,after,executing,the,operation;public,translog,location,get,translog,location,return,translog,location
Engine -> Result -> public Translog.Location getTranslogLocation();1528762805;get the translog location after executing the operation;public Translog.Location getTranslogLocation() {_            return translogLocation__        };get,the,translog,location,after,executing,the,operation;public,translog,location,get,translog,location,return,translog,location
Engine -> Result -> public Translog.Location getTranslogLocation();1531910483;get the translog location after executing the operation;public Translog.Location getTranslogLocation() {_            return translogLocation__        };get,the,translog,location,after,executing,the,operation;public,translog,location,get,translog,location,return,translog,location
Engine -> Result -> public Translog.Location getTranslogLocation();1532685069;get the translog location after executing the operation;public Translog.Location getTranslogLocation() {_            return translogLocation__        };get,the,translog,location,after,executing,the,operation;public,translog,location,get,translog,location,return,translog,location
Engine -> Result -> public Translog.Location getTranslogLocation();1533295538;get the translog location after executing the operation;public Translog.Location getTranslogLocation() {_            return translogLocation__        };get,the,translog,location,after,executing,the,operation;public,translog,location,get,translog,location,return,translog,location
Engine -> Result -> public Translog.Location getTranslogLocation();1535046779;get the translog location after executing the operation;public Translog.Location getTranslogLocation() {_            return translogLocation__        };get,the,translog,location,after,executing,the,operation;public,translog,location,get,translog,location,return,translog,location
Engine -> Result -> public Translog.Location getTranslogLocation();1535723122;get the translog location after executing the operation;public Translog.Location getTranslogLocation() {_            return translogLocation__        };get,the,translog,location,after,executing,the,operation;public,translog,location,get,translog,location,return,translog,location
Engine -> Result -> public Translog.Location getTranslogLocation();1535965276;get the translog location after executing the operation;public Translog.Location getTranslogLocation() {_            return translogLocation__        };get,the,translog,location,after,executing,the,operation;public,translog,location,get,translog,location,return,translog,location
Engine -> Result -> public Translog.Location getTranslogLocation();1536314350;get the translog location after executing the operation;public Translog.Location getTranslogLocation() {_            return translogLocation__        };get,the,translog,location,after,executing,the,operation;public,translog,location,get,translog,location,return,translog,location
Engine -> Result -> public Translog.Location getTranslogLocation();1536828374;get the translog location after executing the operation;public Translog.Location getTranslogLocation() {_            return translogLocation__        };get,the,translog,location,after,executing,the,operation;public,translog,location,get,translog,location,return,translog,location
Engine -> Result -> public Translog.Location getTranslogLocation();1537371806;get the translog location after executing the operation;public Translog.Location getTranslogLocation() {_            return translogLocation__        };get,the,translog,location,after,executing,the,operation;public,translog,location,get,translog,location,return,translog,location
Engine -> Result -> public Translog.Location getTranslogLocation();1537806831;get the translog location after executing the operation;public Translog.Location getTranslogLocation() {_            return translogLocation__        };get,the,translog,location,after,executing,the,operation;public,translog,location,get,translog,location,return,translog,location
Engine -> Result -> public Translog.Location getTranslogLocation();1538067637;get the translog location after executing the operation;public Translog.Location getTranslogLocation() {_            return translogLocation__        };get,the,translog,location,after,executing,the,operation;public,translog,location,get,translog,location,return,translog,location
Engine -> Result -> public Translog.Location getTranslogLocation();1538424609;get the translog location after executing the operation;public Translog.Location getTranslogLocation() {_            return translogLocation__        };get,the,translog,location,after,executing,the,operation;public,translog,location,get,translog,location,return,translog,location
Engine -> Result -> public Translog.Location getTranslogLocation();1539723533;get the translog location after executing the operation;public Translog.Location getTranslogLocation() {_            return translogLocation__        };get,the,translog,location,after,executing,the,operation;public,translog,location,get,translog,location,return,translog,location
Engine -> Result -> public Translog.Location getTranslogLocation();1541618615;get the translog location after executing the operation;public Translog.Location getTranslogLocation() {_            return translogLocation__        };get,the,translog,location,after,executing,the,operation;public,translog,location,get,translog,location,return,translog,location
Engine -> Result -> public Translog.Location getTranslogLocation();1542697754;get the translog location after executing the operation;public Translog.Location getTranslogLocation() {_            return translogLocation__        };get,the,translog,location,after,executing,the,operation;public,translog,location,get,translog,location,return,translog,location
Engine -> Result -> public Translog.Location getTranslogLocation();1543047942;get the translog location after executing the operation;public Translog.Location getTranslogLocation() {_            return translogLocation__        };get,the,translog,location,after,executing,the,operation;public,translog,location,get,translog,location,return,translog,location
Engine -> Result -> public Translog.Location getTranslogLocation();1544545090;get the translog location after executing the operation;public Translog.Location getTranslogLocation() {_            return translogLocation__        };get,the,translog,location,after,executing,the,operation;public,translog,location,get,translog,location,return,translog,location
Engine -> Result -> public Translog.Location getTranslogLocation();1544684920;get the translog location after executing the operation;public Translog.Location getTranslogLocation() {_            return translogLocation__        };get,the,translog,location,after,executing,the,operation;public,translog,location,get,translog,location,return,translog,location
Engine -> Result -> public Translog.Location getTranslogLocation();1545140118;get the translog location after executing the operation;public Translog.Location getTranslogLocation() {_            return translogLocation__        };get,the,translog,location,after,executing,the,operation;public,translog,location,get,translog,location,return,translog,location
Engine -> Result -> public Translog.Location getTranslogLocation();1545221705;get the translog location after executing the operation;public Translog.Location getTranslogLocation() {_            return translogLocation__        };get,the,translog,location,after,executing,the,operation;public,translog,location,get,translog,location,return,translog,location
Engine -> Result -> public Translog.Location getTranslogLocation();1547332999;get the translog location after executing the operation;public Translog.Location getTranslogLocation() {_            return translogLocation__        };get,the,translog,location,after,executing,the,operation;public,translog,location,get,translog,location,return,translog,location
Engine -> Result -> public Translog.Location getTranslogLocation();1548771485;get the translog location after executing the operation;public Translog.Location getTranslogLocation() {_            return translogLocation__        };get,the,translog,location,after,executing,the,operation;public,translog,location,get,translog,location,return,translog,location
Engine -> Result -> public Translog.Location getTranslogLocation();1549891630;get the translog location after executing the operation;public Translog.Location getTranslogLocation() {_            return translogLocation__        };get,the,translog,location,after,executing,the,operation;public,translog,location,get,translog,location,return,translog,location
Engine -> Result -> public Translog.Location getTranslogLocation();1549975032;get the translog location after executing the operation;public Translog.Location getTranslogLocation() {_            return translogLocation__        };get,the,translog,location,after,executing,the,operation;public,translog,location,get,translog,location,return,translog,location
Engine -> Result -> public Translog.Location getTranslogLocation();1550220204;get the translog location after executing the operation;public Translog.Location getTranslogLocation() {_            return translogLocation__        };get,the,translog,location,after,executing,the,operation;public,translog,location,get,translog,location,return,translog,location
Engine -> Result -> public Translog.Location getTranslogLocation();1550526771;get the translog location after executing the operation;public Translog.Location getTranslogLocation() {_            return translogLocation__        };get,the,translog,location,after,executing,the,operation;public,translog,location,get,translog,location,return,translog,location
Engine -> Result -> public Translog.Location getTranslogLocation();1551110274;get the translog location after executing the operation;public Translog.Location getTranslogLocation() {_            return translogLocation__        };get,the,translog,location,after,executing,the,operation;public,translog,location,get,translog,location,return,translog,location
Engine -> Result -> public Translog.Location getTranslogLocation();1551126708;get the translog location after executing the operation;public Translog.Location getTranslogLocation() {_            return translogLocation__        };get,the,translog,location,after,executing,the,operation;public,translog,location,get,translog,location,return,translog,location
Engine -> public void verifyEngineBeforeIndexClosing() throws IllegalStateException;1549891630;Performs the pre-closing checks on the {@link Engine}.__@throws IllegalStateException if the sanity checks failed;public void verifyEngineBeforeIndexClosing() throws IllegalStateException {_        final long globalCheckpoint = engineConfig.getGlobalCheckpointSupplier().getAsLong()__        final long maxSeqNo = getSeqNoStats(globalCheckpoint).getMaxSeqNo()__        if (globalCheckpoint != maxSeqNo) {_            throw new IllegalStateException("Global checkpoint [" + globalCheckpoint_                + "] mismatches maximum sequence number [" + maxSeqNo + "] on index shard " + shardId)__        }_    };performs,the,pre,closing,checks,on,the,link,engine,throws,illegal,state,exception,if,the,sanity,checks,failed;public,void,verify,engine,before,index,closing,throws,illegal,state,exception,final,long,global,checkpoint,engine,config,get,global,checkpoint,supplier,get,as,long,final,long,max,seq,no,get,seq,no,stats,global,checkpoint,get,max,seq,no,if,global,checkpoint,max,seq,no,throw,new,illegal,state,exception,global,checkpoint,global,checkpoint,mismatches,maximum,sequence,number,max,seq,no,on,index,shard,shard,id
Engine -> public void verifyEngineBeforeIndexClosing() throws IllegalStateException;1549975032;Performs the pre-closing checks on the {@link Engine}.__@throws IllegalStateException if the sanity checks failed;public void verifyEngineBeforeIndexClosing() throws IllegalStateException {_        final long globalCheckpoint = engineConfig.getGlobalCheckpointSupplier().getAsLong()__        final long maxSeqNo = getSeqNoStats(globalCheckpoint).getMaxSeqNo()__        if (globalCheckpoint != maxSeqNo) {_            throw new IllegalStateException("Global checkpoint [" + globalCheckpoint_                + "] mismatches maximum sequence number [" + maxSeqNo + "] on index shard " + shardId)__        }_    };performs,the,pre,closing,checks,on,the,link,engine,throws,illegal,state,exception,if,the,sanity,checks,failed;public,void,verify,engine,before,index,closing,throws,illegal,state,exception,final,long,global,checkpoint,engine,config,get,global,checkpoint,supplier,get,as,long,final,long,max,seq,no,get,seq,no,stats,global,checkpoint,get,max,seq,no,if,global,checkpoint,max,seq,no,throw,new,illegal,state,exception,global,checkpoint,global,checkpoint,mismatches,maximum,sequence,number,max,seq,no,on,index,shard,shard,id
Engine -> public void verifyEngineBeforeIndexClosing() throws IllegalStateException;1550220204;Performs the pre-closing checks on the {@link Engine}.__@throws IllegalStateException if the sanity checks failed;public void verifyEngineBeforeIndexClosing() throws IllegalStateException {_        final long globalCheckpoint = engineConfig.getGlobalCheckpointSupplier().getAsLong()__        final long maxSeqNo = getSeqNoStats(globalCheckpoint).getMaxSeqNo()__        if (globalCheckpoint != maxSeqNo) {_            throw new IllegalStateException("Global checkpoint [" + globalCheckpoint_                + "] mismatches maximum sequence number [" + maxSeqNo + "] on index shard " + shardId)__        }_    };performs,the,pre,closing,checks,on,the,link,engine,throws,illegal,state,exception,if,the,sanity,checks,failed;public,void,verify,engine,before,index,closing,throws,illegal,state,exception,final,long,global,checkpoint,engine,config,get,global,checkpoint,supplier,get,as,long,final,long,max,seq,no,get,seq,no,stats,global,checkpoint,get,max,seq,no,if,global,checkpoint,max,seq,no,throw,new,illegal,state,exception,global,checkpoint,global,checkpoint,mismatches,maximum,sequence,number,max,seq,no,on,index,shard,shard,id
Engine -> public void verifyEngineBeforeIndexClosing() throws IllegalStateException;1550526771;Performs the pre-closing checks on the {@link Engine}.__@throws IllegalStateException if the sanity checks failed;public void verifyEngineBeforeIndexClosing() throws IllegalStateException {_        final long globalCheckpoint = engineConfig.getGlobalCheckpointSupplier().getAsLong()__        final long maxSeqNo = getSeqNoStats(globalCheckpoint).getMaxSeqNo()__        if (globalCheckpoint != maxSeqNo) {_            throw new IllegalStateException("Global checkpoint [" + globalCheckpoint_                + "] mismatches maximum sequence number [" + maxSeqNo + "] on index shard " + shardId)__        }_    };performs,the,pre,closing,checks,on,the,link,engine,throws,illegal,state,exception,if,the,sanity,checks,failed;public,void,verify,engine,before,index,closing,throws,illegal,state,exception,final,long,global,checkpoint,engine,config,get,global,checkpoint,supplier,get,as,long,final,long,max,seq,no,get,seq,no,stats,global,checkpoint,get,max,seq,no,if,global,checkpoint,max,seq,no,throw,new,illegal,state,exception,global,checkpoint,global,checkpoint,mismatches,maximum,sequence,number,max,seq,no,on,index,shard,shard,id
Engine -> public void verifyEngineBeforeIndexClosing() throws IllegalStateException;1551110274;Performs the pre-closing checks on the {@link Engine}.__@throws IllegalStateException if the sanity checks failed;public void verifyEngineBeforeIndexClosing() throws IllegalStateException {_        final long globalCheckpoint = engineConfig.getGlobalCheckpointSupplier().getAsLong()__        final long maxSeqNo = getSeqNoStats(globalCheckpoint).getMaxSeqNo()__        if (globalCheckpoint != maxSeqNo) {_            throw new IllegalStateException("Global checkpoint [" + globalCheckpoint_                + "] mismatches maximum sequence number [" + maxSeqNo + "] on index shard " + shardId)__        }_    };performs,the,pre,closing,checks,on,the,link,engine,throws,illegal,state,exception,if,the,sanity,checks,failed;public,void,verify,engine,before,index,closing,throws,illegal,state,exception,final,long,global,checkpoint,engine,config,get,global,checkpoint,supplier,get,as,long,final,long,max,seq,no,get,seq,no,stats,global,checkpoint,get,max,seq,no,if,global,checkpoint,max,seq,no,throw,new,illegal,state,exception,global,checkpoint,global,checkpoint,mismatches,maximum,sequence,number,max,seq,no,on,index,shard,shard,id
Engine -> public void verifyEngineBeforeIndexClosing() throws IllegalStateException;1551126708;Performs the pre-closing checks on the {@link Engine}.__@throws IllegalStateException if the sanity checks failed;public void verifyEngineBeforeIndexClosing() throws IllegalStateException {_        final long globalCheckpoint = engineConfig.getGlobalCheckpointSupplier().getAsLong()__        final long maxSeqNo = getSeqNoStats(globalCheckpoint).getMaxSeqNo()__        if (globalCheckpoint != maxSeqNo) {_            throw new IllegalStateException("Global checkpoint [" + globalCheckpoint_                + "] mismatches maximum sequence number [" + maxSeqNo + "] on index shard " + shardId)__        }_    };performs,the,pre,closing,checks,on,the,link,engine,throws,illegal,state,exception,if,the,sanity,checks,failed;public,void,verify,engine,before,index,closing,throws,illegal,state,exception,final,long,global,checkpoint,engine,config,get,global,checkpoint,supplier,get,as,long,final,long,max,seq,no,get,seq,no,stats,global,checkpoint,get,max,seq,no,if,global,checkpoint,max,seq,no,throw,new,illegal,state,exception,global,checkpoint,global,checkpoint,mismatches,maximum,sequence,number,max,seq,no,on,index,shard,shard,id
Engine -> public abstract int estimateNumberOfHistoryOperations(String source, MapperService mapperService, long startingSeqNo) throws IOException_;1535723122;Returns the estimated number of history operations whose seq# at least {@code startingSeqNo}(inclusive) in this engine.;public abstract int estimateNumberOfHistoryOperations(String source, MapperService mapperService, long startingSeqNo) throws IOException_;returns,the,estimated,number,of,history,operations,whose,seq,at,least,code,starting,seq,no,inclusive,in,this,engine;public,abstract,int,estimate,number,of,history,operations,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract int estimateNumberOfHistoryOperations(String source, MapperService mapperService, long startingSeqNo) throws IOException_;1535965276;Returns the estimated number of history operations whose seq# at least {@code startingSeqNo}(inclusive) in this engine.;public abstract int estimateNumberOfHistoryOperations(String source, MapperService mapperService, long startingSeqNo) throws IOException_;returns,the,estimated,number,of,history,operations,whose,seq,at,least,code,starting,seq,no,inclusive,in,this,engine;public,abstract,int,estimate,number,of,history,operations,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract int estimateNumberOfHistoryOperations(String source, MapperService mapperService, long startingSeqNo) throws IOException_;1536314350;Returns the estimated number of history operations whose seq# at least {@code startingSeqNo}(inclusive) in this engine.;public abstract int estimateNumberOfHistoryOperations(String source, MapperService mapperService, long startingSeqNo) throws IOException_;returns,the,estimated,number,of,history,operations,whose,seq,at,least,code,starting,seq,no,inclusive,in,this,engine;public,abstract,int,estimate,number,of,history,operations,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract int estimateNumberOfHistoryOperations(String source, MapperService mapperService, long startingSeqNo) throws IOException_;1536828374;Returns the estimated number of history operations whose seq# at least {@code startingSeqNo}(inclusive) in this engine.;public abstract int estimateNumberOfHistoryOperations(String source, MapperService mapperService, long startingSeqNo) throws IOException_;returns,the,estimated,number,of,history,operations,whose,seq,at,least,code,starting,seq,no,inclusive,in,this,engine;public,abstract,int,estimate,number,of,history,operations,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract int estimateNumberOfHistoryOperations(String source, MapperService mapperService, long startingSeqNo) throws IOException_;1537371806;Returns the estimated number of history operations whose seq# at least {@code startingSeqNo}(inclusive) in this engine.;public abstract int estimateNumberOfHistoryOperations(String source, MapperService mapperService, long startingSeqNo) throws IOException_;returns,the,estimated,number,of,history,operations,whose,seq,at,least,code,starting,seq,no,inclusive,in,this,engine;public,abstract,int,estimate,number,of,history,operations,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract int estimateNumberOfHistoryOperations(String source, MapperService mapperService, long startingSeqNo) throws IOException_;1537806831;Returns the estimated number of history operations whose seq# at least {@code startingSeqNo}(inclusive) in this engine.;public abstract int estimateNumberOfHistoryOperations(String source, MapperService mapperService, long startingSeqNo) throws IOException_;returns,the,estimated,number,of,history,operations,whose,seq,at,least,code,starting,seq,no,inclusive,in,this,engine;public,abstract,int,estimate,number,of,history,operations,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract int estimateNumberOfHistoryOperations(String source, MapperService mapperService, long startingSeqNo) throws IOException_;1538067637;Returns the estimated number of history operations whose seq# at least {@code startingSeqNo}(inclusive) in this engine.;public abstract int estimateNumberOfHistoryOperations(String source, MapperService mapperService, long startingSeqNo) throws IOException_;returns,the,estimated,number,of,history,operations,whose,seq,at,least,code,starting,seq,no,inclusive,in,this,engine;public,abstract,int,estimate,number,of,history,operations,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract int estimateNumberOfHistoryOperations(String source, MapperService mapperService, long startingSeqNo) throws IOException_;1538424609;Returns the estimated number of history operations whose seq# at least {@code startingSeqNo}(inclusive) in this engine.;public abstract int estimateNumberOfHistoryOperations(String source, MapperService mapperService, long startingSeqNo) throws IOException_;returns,the,estimated,number,of,history,operations,whose,seq,at,least,code,starting,seq,no,inclusive,in,this,engine;public,abstract,int,estimate,number,of,history,operations,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract int estimateNumberOfHistoryOperations(String source, MapperService mapperService, long startingSeqNo) throws IOException_;1539723533;Returns the estimated number of history operations whose seq# at least {@code startingSeqNo}(inclusive) in this engine.;public abstract int estimateNumberOfHistoryOperations(String source, MapperService mapperService, long startingSeqNo) throws IOException_;returns,the,estimated,number,of,history,operations,whose,seq,at,least,code,starting,seq,no,inclusive,in,this,engine;public,abstract,int,estimate,number,of,history,operations,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract int estimateNumberOfHistoryOperations(String source, MapperService mapperService, long startingSeqNo) throws IOException_;1541618615;Returns the estimated number of history operations whose seq# at least {@code startingSeqNo}(inclusive) in this engine.;public abstract int estimateNumberOfHistoryOperations(String source, MapperService mapperService, long startingSeqNo) throws IOException_;returns,the,estimated,number,of,history,operations,whose,seq,at,least,code,starting,seq,no,inclusive,in,this,engine;public,abstract,int,estimate,number,of,history,operations,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract LocalCheckpointTracker getLocalCheckpointTracker()_;1524684173;The sequence number service for this engine.__@return the sequence number service;public abstract LocalCheckpointTracker getLocalCheckpointTracker()_;the,sequence,number,service,for,this,engine,return,the,sequence,number,service;public,abstract,local,checkpoint,tracker,get,local,checkpoint,tracker
Engine -> public abstract LocalCheckpointTracker getLocalCheckpointTracker()_;1525162917;The sequence number service for this engine.__@return the sequence number service;public abstract LocalCheckpointTracker getLocalCheckpointTracker()_;the,sequence,number,service,for,this,engine,return,the,sequence,number,service;public,abstract,local,checkpoint,tracker,get,local,checkpoint,tracker
Engine -> public abstract LocalCheckpointTracker getLocalCheckpointTracker()_;1525334055;The sequence number service for this engine.__@return the sequence number service;public abstract LocalCheckpointTracker getLocalCheckpointTracker()_;the,sequence,number,service,for,this,engine,return,the,sequence,number,service;public,abstract,local,checkpoint,tracker,get,local,checkpoint,tracker
Engine -> public abstract LocalCheckpointTracker getLocalCheckpointTracker()_;1527583663;The sequence number service for this engine.__@return the sequence number service;public abstract LocalCheckpointTracker getLocalCheckpointTracker()_;the,sequence,number,service,for,this,engine,return,the,sequence,number,service;public,abstract,local,checkpoint,tracker,get,local,checkpoint,tracker
Engine -> Searcher -> public final String source();1538067637;The source that caused this searcher to be acquired.;public final String source() {_            return source__        };the,source,that,caused,this,searcher,to,be,acquired;public,final,string,source,return,source
Engine -> Searcher -> public final String source();1538424609;The source that caused this searcher to be acquired.;public final String source() {_            return source__        };the,source,that,caused,this,searcher,to,be,acquired;public,final,string,source,return,source
Engine -> public final CommitStats commitStats();1536828374;get commits stats for the last commit;public final CommitStats commitStats() {_        return new CommitStats(getLastCommittedSegmentInfos())__    };get,commits,stats,for,the,last,commit;public,final,commit,stats,commit,stats,return,new,commit,stats,get,last,committed,segment,infos
Engine -> public final CommitStats commitStats();1537371806;get commits stats for the last commit;public final CommitStats commitStats() {_        return new CommitStats(getLastCommittedSegmentInfos())__    };get,commits,stats,for,the,last,commit;public,final,commit,stats,commit,stats,return,new,commit,stats,get,last,committed,segment,infos
Engine -> public final CommitStats commitStats();1537806831;get commits stats for the last commit;public final CommitStats commitStats() {_        return new CommitStats(getLastCommittedSegmentInfos())__    };get,commits,stats,for,the,last,commit;public,final,commit,stats,commit,stats,return,new,commit,stats,get,last,committed,segment,infos
Engine -> public final CommitStats commitStats();1538067637;get commits stats for the last commit;public final CommitStats commitStats() {_        return new CommitStats(getLastCommittedSegmentInfos())__    };get,commits,stats,for,the,last,commit;public,final,commit,stats,commit,stats,return,new,commit,stats,get,last,committed,segment,infos
Engine -> public final CommitStats commitStats();1538424609;get commits stats for the last commit;public final CommitStats commitStats() {_        return new CommitStats(getLastCommittedSegmentInfos())__    };get,commits,stats,for,the,last,commit;public,final,commit,stats,commit,stats,return,new,commit,stats,get,last,committed,segment,infos
Engine -> public final CommitStats commitStats();1539723533;get commits stats for the last commit;public final CommitStats commitStats() {_        return new CommitStats(getLastCommittedSegmentInfos())__    };get,commits,stats,for,the,last,commit;public,final,commit,stats,commit,stats,return,new,commit,stats,get,last,committed,segment,infos
Engine -> public final CommitStats commitStats();1541618615;get commits stats for the last commit;public final CommitStats commitStats() {_        return new CommitStats(getLastCommittedSegmentInfos())__    };get,commits,stats,for,the,last,commit;public,final,commit,stats,commit,stats,return,new,commit,stats,get,last,committed,segment,infos
Engine -> public final CommitStats commitStats();1542697754;get commits stats for the last commit;public final CommitStats commitStats() {_        return new CommitStats(getLastCommittedSegmentInfos())__    };get,commits,stats,for,the,last,commit;public,final,commit,stats,commit,stats,return,new,commit,stats,get,last,committed,segment,infos
Engine -> public final CommitStats commitStats();1543047942;get commits stats for the last commit;public final CommitStats commitStats() {_        return new CommitStats(getLastCommittedSegmentInfos())__    };get,commits,stats,for,the,last,commit;public,final,commit,stats,commit,stats,return,new,commit,stats,get,last,committed,segment,infos
Engine -> public final CommitStats commitStats();1544545090;get commits stats for the last commit;public final CommitStats commitStats() {_        return new CommitStats(getLastCommittedSegmentInfos())__    };get,commits,stats,for,the,last,commit;public,final,commit,stats,commit,stats,return,new,commit,stats,get,last,committed,segment,infos
Engine -> public final CommitStats commitStats();1544684920;get commits stats for the last commit;public final CommitStats commitStats() {_        return new CommitStats(getLastCommittedSegmentInfos())__    };get,commits,stats,for,the,last,commit;public,final,commit,stats,commit,stats,return,new,commit,stats,get,last,committed,segment,infos
Engine -> public final CommitStats commitStats();1545140118;get commits stats for the last commit;public final CommitStats commitStats() {_        return new CommitStats(getLastCommittedSegmentInfos())__    };get,commits,stats,for,the,last,commit;public,final,commit,stats,commit,stats,return,new,commit,stats,get,last,committed,segment,infos
Engine -> public final CommitStats commitStats();1545221705;get commits stats for the last commit;public final CommitStats commitStats() {_        return new CommitStats(getLastCommittedSegmentInfos())__    };get,commits,stats,for,the,last,commit;public,final,commit,stats,commit,stats,return,new,commit,stats,get,last,committed,segment,infos
Engine -> public final CommitStats commitStats();1547332999;get commits stats for the last commit;public final CommitStats commitStats() {_        return new CommitStats(getLastCommittedSegmentInfos())__    };get,commits,stats,for,the,last,commit;public,final,commit,stats,commit,stats,return,new,commit,stats,get,last,committed,segment,infos
Engine -> public final CommitStats commitStats();1548771485;get commits stats for the last commit;public final CommitStats commitStats() {_        return new CommitStats(getLastCommittedSegmentInfos())__    };get,commits,stats,for,the,last,commit;public,final,commit,stats,commit,stats,return,new,commit,stats,get,last,committed,segment,infos
Engine -> public final CommitStats commitStats();1549891630;get commits stats for the last commit;public final CommitStats commitStats() {_        return new CommitStats(getLastCommittedSegmentInfos())__    };get,commits,stats,for,the,last,commit;public,final,commit,stats,commit,stats,return,new,commit,stats,get,last,committed,segment,infos
Engine -> public final CommitStats commitStats();1549975032;get commits stats for the last commit;public final CommitStats commitStats() {_        return new CommitStats(getLastCommittedSegmentInfos())__    };get,commits,stats,for,the,last,commit;public,final,commit,stats,commit,stats,return,new,commit,stats,get,last,committed,segment,infos
Engine -> public final CommitStats commitStats();1550220204;get commits stats for the last commit;public final CommitStats commitStats() {_        return new CommitStats(getLastCommittedSegmentInfos())__    };get,commits,stats,for,the,last,commit;public,final,commit,stats,commit,stats,return,new,commit,stats,get,last,committed,segment,infos
Engine -> public final CommitStats commitStats();1550526771;get commits stats for the last commit;public final CommitStats commitStats() {_        return new CommitStats(getLastCommittedSegmentInfos())__    };get,commits,stats,for,the,last,commit;public,final,commit,stats,commit,stats,return,new,commit,stats,get,last,committed,segment,infos
Engine -> public final CommitStats commitStats();1551110274;get commits stats for the last commit;public final CommitStats commitStats() {_        return new CommitStats(getLastCommittedSegmentInfos())__    };get,commits,stats,for,the,last,commit;public,final,commit,stats,commit,stats,return,new,commit,stats,get,last,committed,segment,infos
Engine -> public final CommitStats commitStats();1551126708;get commits stats for the last commit;public final CommitStats commitStats() {_        return new CommitStats(getLastCommittedSegmentInfos())__    };get,commits,stats,for,the,last,commit;public,final,commit,stats,commit,stats,return,new,commit,stats,get,last,committed,segment,infos
Engine -> public void flushAndClose() throws IOException;1524684173;Flush the engine (committing segments to disk and truncating the_translog) and close it.;public void flushAndClose() throws IOException {_        if (isClosed.get() == false) {_            logger.trace("flushAndClose now acquire writeLock")__            try (ReleasableLock lock = writeLock.acquire()) {_                logger.trace("flushAndClose now acquired writeLock")__                try {_                    logger.debug("flushing shard on close - this might take some time to sync files to disk")__                    try {_                        flush()_ _                    } catch (AlreadyClosedException ex) {_                        logger.debug("engine already closed - skipping flushAndClose")__                    }_                } finally {_                    close()_ _                }_            }_        }_        awaitPendingClose()__    };flush,the,engine,committing,segments,to,disk,and,truncating,the,translog,and,close,it;public,void,flush,and,close,throws,ioexception,if,is,closed,get,false,logger,trace,flush,and,close,now,acquire,write,lock,try,releasable,lock,lock,write,lock,acquire,logger,trace,flush,and,close,now,acquired,write,lock,try,logger,debug,flushing,shard,on,close,this,might,take,some,time,to,sync,files,to,disk,try,flush,catch,already,closed,exception,ex,logger,debug,engine,already,closed,skipping,flush,and,close,finally,close,await,pending,close
Engine -> public void flushAndClose() throws IOException;1525162917;Flush the engine (committing segments to disk and truncating the_translog) and close it.;public void flushAndClose() throws IOException {_        if (isClosed.get() == false) {_            logger.trace("flushAndClose now acquire writeLock")__            try (ReleasableLock lock = writeLock.acquire()) {_                logger.trace("flushAndClose now acquired writeLock")__                try {_                    logger.debug("flushing shard on close - this might take some time to sync files to disk")__                    try {_                        flush()_ _                    } catch (AlreadyClosedException ex) {_                        logger.debug("engine already closed - skipping flushAndClose")__                    }_                } finally {_                    close()_ _                }_            }_        }_        awaitPendingClose()__    };flush,the,engine,committing,segments,to,disk,and,truncating,the,translog,and,close,it;public,void,flush,and,close,throws,ioexception,if,is,closed,get,false,logger,trace,flush,and,close,now,acquire,write,lock,try,releasable,lock,lock,write,lock,acquire,logger,trace,flush,and,close,now,acquired,write,lock,try,logger,debug,flushing,shard,on,close,this,might,take,some,time,to,sync,files,to,disk,try,flush,catch,already,closed,exception,ex,logger,debug,engine,already,closed,skipping,flush,and,close,finally,close,await,pending,close
Engine -> public void flushAndClose() throws IOException;1525334055;Flush the engine (committing segments to disk and truncating the_translog) and close it.;public void flushAndClose() throws IOException {_        if (isClosed.get() == false) {_            logger.trace("flushAndClose now acquire writeLock")__            try (ReleasableLock lock = writeLock.acquire()) {_                logger.trace("flushAndClose now acquired writeLock")__                try {_                    logger.debug("flushing shard on close - this might take some time to sync files to disk")__                    try {_                        flush()_ _                    } catch (AlreadyClosedException ex) {_                        logger.debug("engine already closed - skipping flushAndClose")__                    }_                } finally {_                    close()_ _                }_            }_        }_        awaitPendingClose()__    };flush,the,engine,committing,segments,to,disk,and,truncating,the,translog,and,close,it;public,void,flush,and,close,throws,ioexception,if,is,closed,get,false,logger,trace,flush,and,close,now,acquire,write,lock,try,releasable,lock,lock,write,lock,acquire,logger,trace,flush,and,close,now,acquired,write,lock,try,logger,debug,flushing,shard,on,close,this,might,take,some,time,to,sync,files,to,disk,try,flush,catch,already,closed,exception,ex,logger,debug,engine,already,closed,skipping,flush,and,close,finally,close,await,pending,close
Engine -> public void flushAndClose() throws IOException;1527583663;Flush the engine (committing segments to disk and truncating the_translog) and close it.;public void flushAndClose() throws IOException {_        if (isClosed.get() == false) {_            logger.trace("flushAndClose now acquire writeLock")__            try (ReleasableLock lock = writeLock.acquire()) {_                logger.trace("flushAndClose now acquired writeLock")__                try {_                    logger.debug("flushing shard on close - this might take some time to sync files to disk")__                    try {_                        flush()_ _                    } catch (AlreadyClosedException ex) {_                        logger.debug("engine already closed - skipping flushAndClose")__                    }_                } finally {_                    close()_ _                }_            }_        }_        awaitPendingClose()__    };flush,the,engine,committing,segments,to,disk,and,truncating,the,translog,and,close,it;public,void,flush,and,close,throws,ioexception,if,is,closed,get,false,logger,trace,flush,and,close,now,acquire,write,lock,try,releasable,lock,lock,write,lock,acquire,logger,trace,flush,and,close,now,acquired,write,lock,try,logger,debug,flushing,shard,on,close,this,might,take,some,time,to,sync,files,to,disk,try,flush,catch,already,closed,exception,ex,logger,debug,engine,already,closed,skipping,flush,and,close,finally,close,await,pending,close
Engine -> public void flushAndClose() throws IOException;1528706846;Flush the engine (committing segments to disk and truncating the_translog) and close it.;public void flushAndClose() throws IOException {_        if (isClosed.get() == false) {_            logger.trace("flushAndClose now acquire writeLock")__            try (ReleasableLock lock = writeLock.acquire()) {_                logger.trace("flushAndClose now acquired writeLock")__                try {_                    logger.debug("flushing shard on close - this might take some time to sync files to disk")__                    try {_                        flush()_ _                    } catch (AlreadyClosedException ex) {_                        logger.debug("engine already closed - skipping flushAndClose")__                    }_                } finally {_                    close()_ _                }_            }_        }_        awaitPendingClose()__    };flush,the,engine,committing,segments,to,disk,and,truncating,the,translog,and,close,it;public,void,flush,and,close,throws,ioexception,if,is,closed,get,false,logger,trace,flush,and,close,now,acquire,write,lock,try,releasable,lock,lock,write,lock,acquire,logger,trace,flush,and,close,now,acquired,write,lock,try,logger,debug,flushing,shard,on,close,this,might,take,some,time,to,sync,files,to,disk,try,flush,catch,already,closed,exception,ex,logger,debug,engine,already,closed,skipping,flush,and,close,finally,close,await,pending,close
Engine -> public void flushAndClose() throws IOException;1528762805;Flush the engine (committing segments to disk and truncating the_translog) and close it.;public void flushAndClose() throws IOException {_        if (isClosed.get() == false) {_            logger.trace("flushAndClose now acquire writeLock")__            try (ReleasableLock lock = writeLock.acquire()) {_                logger.trace("flushAndClose now acquired writeLock")__                try {_                    logger.debug("flushing shard on close - this might take some time to sync files to disk")__                    try {_                        flush()_ _                    } catch (AlreadyClosedException ex) {_                        logger.debug("engine already closed - skipping flushAndClose")__                    }_                } finally {_                    close()_ _                }_            }_        }_        awaitPendingClose()__    };flush,the,engine,committing,segments,to,disk,and,truncating,the,translog,and,close,it;public,void,flush,and,close,throws,ioexception,if,is,closed,get,false,logger,trace,flush,and,close,now,acquire,write,lock,try,releasable,lock,lock,write,lock,acquire,logger,trace,flush,and,close,now,acquired,write,lock,try,logger,debug,flushing,shard,on,close,this,might,take,some,time,to,sync,files,to,disk,try,flush,catch,already,closed,exception,ex,logger,debug,engine,already,closed,skipping,flush,and,close,finally,close,await,pending,close
Engine -> public void flushAndClose() throws IOException;1531910483;Flush the engine (committing segments to disk and truncating the_translog) and close it.;public void flushAndClose() throws IOException {_        if (isClosed.get() == false) {_            logger.trace("flushAndClose now acquire writeLock")__            try (ReleasableLock lock = writeLock.acquire()) {_                logger.trace("flushAndClose now acquired writeLock")__                try {_                    logger.debug("flushing shard on close - this might take some time to sync files to disk")__                    try {_                        flush()_ _                    } catch (AlreadyClosedException ex) {_                        logger.debug("engine already closed - skipping flushAndClose")__                    }_                } finally {_                    close()_ _                }_            }_        }_        awaitPendingClose()__    };flush,the,engine,committing,segments,to,disk,and,truncating,the,translog,and,close,it;public,void,flush,and,close,throws,ioexception,if,is,closed,get,false,logger,trace,flush,and,close,now,acquire,write,lock,try,releasable,lock,lock,write,lock,acquire,logger,trace,flush,and,close,now,acquired,write,lock,try,logger,debug,flushing,shard,on,close,this,might,take,some,time,to,sync,files,to,disk,try,flush,catch,already,closed,exception,ex,logger,debug,engine,already,closed,skipping,flush,and,close,finally,close,await,pending,close
Engine -> public void flushAndClose() throws IOException;1532685069;Flush the engine (committing segments to disk and truncating the_translog) and close it.;public void flushAndClose() throws IOException {_        if (isClosed.get() == false) {_            logger.trace("flushAndClose now acquire writeLock")__            try (ReleasableLock lock = writeLock.acquire()) {_                logger.trace("flushAndClose now acquired writeLock")__                try {_                    logger.debug("flushing shard on close - this might take some time to sync files to disk")__                    try {_                        flush()_ _                    } catch (AlreadyClosedException ex) {_                        logger.debug("engine already closed - skipping flushAndClose")__                    }_                } finally {_                    close()_ _                }_            }_        }_        awaitPendingClose()__    };flush,the,engine,committing,segments,to,disk,and,truncating,the,translog,and,close,it;public,void,flush,and,close,throws,ioexception,if,is,closed,get,false,logger,trace,flush,and,close,now,acquire,write,lock,try,releasable,lock,lock,write,lock,acquire,logger,trace,flush,and,close,now,acquired,write,lock,try,logger,debug,flushing,shard,on,close,this,might,take,some,time,to,sync,files,to,disk,try,flush,catch,already,closed,exception,ex,logger,debug,engine,already,closed,skipping,flush,and,close,finally,close,await,pending,close
Engine -> public void flushAndClose() throws IOException;1533295538;Flush the engine (committing segments to disk and truncating the_translog) and close it.;public void flushAndClose() throws IOException {_        if (isClosed.get() == false) {_            logger.trace("flushAndClose now acquire writeLock")__            try (ReleasableLock lock = writeLock.acquire()) {_                logger.trace("flushAndClose now acquired writeLock")__                try {_                    logger.debug("flushing shard on close - this might take some time to sync files to disk")__                    try {_                        flush()_ _                    } catch (AlreadyClosedException ex) {_                        logger.debug("engine already closed - skipping flushAndClose")__                    }_                } finally {_                    close()_ _                }_            }_        }_        awaitPendingClose()__    };flush,the,engine,committing,segments,to,disk,and,truncating,the,translog,and,close,it;public,void,flush,and,close,throws,ioexception,if,is,closed,get,false,logger,trace,flush,and,close,now,acquire,write,lock,try,releasable,lock,lock,write,lock,acquire,logger,trace,flush,and,close,now,acquired,write,lock,try,logger,debug,flushing,shard,on,close,this,might,take,some,time,to,sync,files,to,disk,try,flush,catch,already,closed,exception,ex,logger,debug,engine,already,closed,skipping,flush,and,close,finally,close,await,pending,close
Engine -> public void flushAndClose() throws IOException;1535046779;Flush the engine (committing segments to disk and truncating the_translog) and close it.;public void flushAndClose() throws IOException {_        if (isClosed.get() == false) {_            logger.trace("flushAndClose now acquire writeLock")__            try (ReleasableLock lock = writeLock.acquire()) {_                logger.trace("flushAndClose now acquired writeLock")__                try {_                    logger.debug("flushing shard on close - this might take some time to sync files to disk")__                    try {_                        flush()_ _                    } catch (AlreadyClosedException ex) {_                        logger.debug("engine already closed - skipping flushAndClose")__                    }_                } finally {_                    close()_ _                }_            }_        }_        awaitPendingClose()__    };flush,the,engine,committing,segments,to,disk,and,truncating,the,translog,and,close,it;public,void,flush,and,close,throws,ioexception,if,is,closed,get,false,logger,trace,flush,and,close,now,acquire,write,lock,try,releasable,lock,lock,write,lock,acquire,logger,trace,flush,and,close,now,acquired,write,lock,try,logger,debug,flushing,shard,on,close,this,might,take,some,time,to,sync,files,to,disk,try,flush,catch,already,closed,exception,ex,logger,debug,engine,already,closed,skipping,flush,and,close,finally,close,await,pending,close
Engine -> public void flushAndClose() throws IOException;1535723122;Flush the engine (committing segments to disk and truncating the_translog) and close it.;public void flushAndClose() throws IOException {_        if (isClosed.get() == false) {_            logger.trace("flushAndClose now acquire writeLock")__            try (ReleasableLock lock = writeLock.acquire()) {_                logger.trace("flushAndClose now acquired writeLock")__                try {_                    logger.debug("flushing shard on close - this might take some time to sync files to disk")__                    try {_                        flush()_ _                    } catch (AlreadyClosedException ex) {_                        logger.debug("engine already closed - skipping flushAndClose")__                    }_                } finally {_                    close()_ _                }_            }_        }_        awaitPendingClose()__    };flush,the,engine,committing,segments,to,disk,and,truncating,the,translog,and,close,it;public,void,flush,and,close,throws,ioexception,if,is,closed,get,false,logger,trace,flush,and,close,now,acquire,write,lock,try,releasable,lock,lock,write,lock,acquire,logger,trace,flush,and,close,now,acquired,write,lock,try,logger,debug,flushing,shard,on,close,this,might,take,some,time,to,sync,files,to,disk,try,flush,catch,already,closed,exception,ex,logger,debug,engine,already,closed,skipping,flush,and,close,finally,close,await,pending,close
Engine -> public void flushAndClose() throws IOException;1535965276;Flush the engine (committing segments to disk and truncating the_translog) and close it.;public void flushAndClose() throws IOException {_        if (isClosed.get() == false) {_            logger.trace("flushAndClose now acquire writeLock")__            try (ReleasableLock lock = writeLock.acquire()) {_                logger.trace("flushAndClose now acquired writeLock")__                try {_                    logger.debug("flushing shard on close - this might take some time to sync files to disk")__                    try {_                        flush()_ _                    } catch (AlreadyClosedException ex) {_                        logger.debug("engine already closed - skipping flushAndClose")__                    }_                } finally {_                    close()_ _                }_            }_        }_        awaitPendingClose()__    };flush,the,engine,committing,segments,to,disk,and,truncating,the,translog,and,close,it;public,void,flush,and,close,throws,ioexception,if,is,closed,get,false,logger,trace,flush,and,close,now,acquire,write,lock,try,releasable,lock,lock,write,lock,acquire,logger,trace,flush,and,close,now,acquired,write,lock,try,logger,debug,flushing,shard,on,close,this,might,take,some,time,to,sync,files,to,disk,try,flush,catch,already,closed,exception,ex,logger,debug,engine,already,closed,skipping,flush,and,close,finally,close,await,pending,close
Engine -> public void flushAndClose() throws IOException;1536314350;Flush the engine (committing segments to disk and truncating the_translog) and close it.;public void flushAndClose() throws IOException {_        if (isClosed.get() == false) {_            logger.trace("flushAndClose now acquire writeLock")__            try (ReleasableLock lock = writeLock.acquire()) {_                logger.trace("flushAndClose now acquired writeLock")__                try {_                    logger.debug("flushing shard on close - this might take some time to sync files to disk")__                    try {_                        flush()_ _                    } catch (AlreadyClosedException ex) {_                        logger.debug("engine already closed - skipping flushAndClose")__                    }_                } finally {_                    close()_ _                }_            }_        }_        awaitPendingClose()__    };flush,the,engine,committing,segments,to,disk,and,truncating,the,translog,and,close,it;public,void,flush,and,close,throws,ioexception,if,is,closed,get,false,logger,trace,flush,and,close,now,acquire,write,lock,try,releasable,lock,lock,write,lock,acquire,logger,trace,flush,and,close,now,acquired,write,lock,try,logger,debug,flushing,shard,on,close,this,might,take,some,time,to,sync,files,to,disk,try,flush,catch,already,closed,exception,ex,logger,debug,engine,already,closed,skipping,flush,and,close,finally,close,await,pending,close
Engine -> public void flushAndClose() throws IOException;1536828374;Flush the engine (committing segments to disk and truncating the_translog) and close it.;public void flushAndClose() throws IOException {_        if (isClosed.get() == false) {_            logger.trace("flushAndClose now acquire writeLock")__            try (ReleasableLock lock = writeLock.acquire()) {_                logger.trace("flushAndClose now acquired writeLock")__                try {_                    logger.debug("flushing shard on close - this might take some time to sync files to disk")__                    try {_                        flush()_ _                    } catch (AlreadyClosedException ex) {_                        logger.debug("engine already closed - skipping flushAndClose")__                    }_                } finally {_                    close()_ _                }_            }_        }_        awaitPendingClose()__    };flush,the,engine,committing,segments,to,disk,and,truncating,the,translog,and,close,it;public,void,flush,and,close,throws,ioexception,if,is,closed,get,false,logger,trace,flush,and,close,now,acquire,write,lock,try,releasable,lock,lock,write,lock,acquire,logger,trace,flush,and,close,now,acquired,write,lock,try,logger,debug,flushing,shard,on,close,this,might,take,some,time,to,sync,files,to,disk,try,flush,catch,already,closed,exception,ex,logger,debug,engine,already,closed,skipping,flush,and,close,finally,close,await,pending,close
Engine -> public void flushAndClose() throws IOException;1537371806;Flush the engine (committing segments to disk and truncating the_translog) and close it.;public void flushAndClose() throws IOException {_        if (isClosed.get() == false) {_            logger.trace("flushAndClose now acquire writeLock")__            try (ReleasableLock lock = writeLock.acquire()) {_                logger.trace("flushAndClose now acquired writeLock")__                try {_                    logger.debug("flushing shard on close - this might take some time to sync files to disk")__                    try {_                        flush()_ _                    } catch (AlreadyClosedException ex) {_                        logger.debug("engine already closed - skipping flushAndClose")__                    }_                } finally {_                    close()_ _                }_            }_        }_        awaitPendingClose()__    };flush,the,engine,committing,segments,to,disk,and,truncating,the,translog,and,close,it;public,void,flush,and,close,throws,ioexception,if,is,closed,get,false,logger,trace,flush,and,close,now,acquire,write,lock,try,releasable,lock,lock,write,lock,acquire,logger,trace,flush,and,close,now,acquired,write,lock,try,logger,debug,flushing,shard,on,close,this,might,take,some,time,to,sync,files,to,disk,try,flush,catch,already,closed,exception,ex,logger,debug,engine,already,closed,skipping,flush,and,close,finally,close,await,pending,close
Engine -> public void flushAndClose() throws IOException;1537806831;Flush the engine (committing segments to disk and truncating the_translog) and close it.;public void flushAndClose() throws IOException {_        if (isClosed.get() == false) {_            logger.trace("flushAndClose now acquire writeLock")__            try (ReleasableLock lock = writeLock.acquire()) {_                logger.trace("flushAndClose now acquired writeLock")__                try {_                    logger.debug("flushing shard on close - this might take some time to sync files to disk")__                    try {_                        flush()_ _                    } catch (AlreadyClosedException ex) {_                        logger.debug("engine already closed - skipping flushAndClose")__                    }_                } finally {_                    close()_ _                }_            }_        }_        awaitPendingClose()__    };flush,the,engine,committing,segments,to,disk,and,truncating,the,translog,and,close,it;public,void,flush,and,close,throws,ioexception,if,is,closed,get,false,logger,trace,flush,and,close,now,acquire,write,lock,try,releasable,lock,lock,write,lock,acquire,logger,trace,flush,and,close,now,acquired,write,lock,try,logger,debug,flushing,shard,on,close,this,might,take,some,time,to,sync,files,to,disk,try,flush,catch,already,closed,exception,ex,logger,debug,engine,already,closed,skipping,flush,and,close,finally,close,await,pending,close
Engine -> public void flushAndClose() throws IOException;1538067637;Flush the engine (committing segments to disk and truncating the_translog) and close it.;public void flushAndClose() throws IOException {_        if (isClosed.get() == false) {_            logger.trace("flushAndClose now acquire writeLock")__            try (ReleasableLock lock = writeLock.acquire()) {_                logger.trace("flushAndClose now acquired writeLock")__                try {_                    logger.debug("flushing shard on close - this might take some time to sync files to disk")__                    try {_                        flush()_ _                    } catch (AlreadyClosedException ex) {_                        logger.debug("engine already closed - skipping flushAndClose")__                    }_                } finally {_                    close()_ _                }_            }_        }_        awaitPendingClose()__    };flush,the,engine,committing,segments,to,disk,and,truncating,the,translog,and,close,it;public,void,flush,and,close,throws,ioexception,if,is,closed,get,false,logger,trace,flush,and,close,now,acquire,write,lock,try,releasable,lock,lock,write,lock,acquire,logger,trace,flush,and,close,now,acquired,write,lock,try,logger,debug,flushing,shard,on,close,this,might,take,some,time,to,sync,files,to,disk,try,flush,catch,already,closed,exception,ex,logger,debug,engine,already,closed,skipping,flush,and,close,finally,close,await,pending,close
Engine -> public void flushAndClose() throws IOException;1538424609;Flush the engine (committing segments to disk and truncating the_translog) and close it.;public void flushAndClose() throws IOException {_        if (isClosed.get() == false) {_            logger.trace("flushAndClose now acquire writeLock")__            try (ReleasableLock lock = writeLock.acquire()) {_                logger.trace("flushAndClose now acquired writeLock")__                try {_                    logger.debug("flushing shard on close - this might take some time to sync files to disk")__                    try {_                        flush()_ _                    } catch (AlreadyClosedException ex) {_                        logger.debug("engine already closed - skipping flushAndClose")__                    }_                } finally {_                    close()_ _                }_            }_        }_        awaitPendingClose()__    };flush,the,engine,committing,segments,to,disk,and,truncating,the,translog,and,close,it;public,void,flush,and,close,throws,ioexception,if,is,closed,get,false,logger,trace,flush,and,close,now,acquire,write,lock,try,releasable,lock,lock,write,lock,acquire,logger,trace,flush,and,close,now,acquired,write,lock,try,logger,debug,flushing,shard,on,close,this,might,take,some,time,to,sync,files,to,disk,try,flush,catch,already,closed,exception,ex,logger,debug,engine,already,closed,skipping,flush,and,close,finally,close,await,pending,close
Engine -> public void flushAndClose() throws IOException;1539723533;Flush the engine (committing segments to disk and truncating the_translog) and close it.;public void flushAndClose() throws IOException {_        if (isClosed.get() == false) {_            logger.trace("flushAndClose now acquire writeLock")__            try (ReleasableLock lock = writeLock.acquire()) {_                logger.trace("flushAndClose now acquired writeLock")__                try {_                    logger.debug("flushing shard on close - this might take some time to sync files to disk")__                    try {_                        flush()_ _                    } catch (AlreadyClosedException ex) {_                        logger.debug("engine already closed - skipping flushAndClose")__                    }_                } finally {_                    close()_ _                }_            }_        }_        awaitPendingClose()__    };flush,the,engine,committing,segments,to,disk,and,truncating,the,translog,and,close,it;public,void,flush,and,close,throws,ioexception,if,is,closed,get,false,logger,trace,flush,and,close,now,acquire,write,lock,try,releasable,lock,lock,write,lock,acquire,logger,trace,flush,and,close,now,acquired,write,lock,try,logger,debug,flushing,shard,on,close,this,might,take,some,time,to,sync,files,to,disk,try,flush,catch,already,closed,exception,ex,logger,debug,engine,already,closed,skipping,flush,and,close,finally,close,await,pending,close
Engine -> public void flushAndClose() throws IOException;1541618615;Flush the engine (committing segments to disk and truncating the_translog) and close it.;public void flushAndClose() throws IOException {_        if (isClosed.get() == false) {_            logger.trace("flushAndClose now acquire writeLock")__            try (ReleasableLock lock = writeLock.acquire()) {_                logger.trace("flushAndClose now acquired writeLock")__                try {_                    logger.debug("flushing shard on close - this might take some time to sync files to disk")__                    try {_                        flush()_ _                    } catch (AlreadyClosedException ex) {_                        logger.debug("engine already closed - skipping flushAndClose")__                    }_                } finally {_                    close()_ _                }_            }_        }_        awaitPendingClose()__    };flush,the,engine,committing,segments,to,disk,and,truncating,the,translog,and,close,it;public,void,flush,and,close,throws,ioexception,if,is,closed,get,false,logger,trace,flush,and,close,now,acquire,write,lock,try,releasable,lock,lock,write,lock,acquire,logger,trace,flush,and,close,now,acquired,write,lock,try,logger,debug,flushing,shard,on,close,this,might,take,some,time,to,sync,files,to,disk,try,flush,catch,already,closed,exception,ex,logger,debug,engine,already,closed,skipping,flush,and,close,finally,close,await,pending,close
Engine -> public void flushAndClose() throws IOException;1542697754;Flush the engine (committing segments to disk and truncating the_translog) and close it.;public void flushAndClose() throws IOException {_        if (isClosed.get() == false) {_            logger.trace("flushAndClose now acquire writeLock")__            try (ReleasableLock lock = writeLock.acquire()) {_                logger.trace("flushAndClose now acquired writeLock")__                try {_                    logger.debug("flushing shard on close - this might take some time to sync files to disk")__                    try {_                        _                        _                        flush()__                    } catch (AlreadyClosedException ex) {_                        logger.debug("engine already closed - skipping flushAndClose")__                    }_                } finally {_                    close()_ _                }_            }_        }_        awaitPendingClose()__    };flush,the,engine,committing,segments,to,disk,and,truncating,the,translog,and,close,it;public,void,flush,and,close,throws,ioexception,if,is,closed,get,false,logger,trace,flush,and,close,now,acquire,write,lock,try,releasable,lock,lock,write,lock,acquire,logger,trace,flush,and,close,now,acquired,write,lock,try,logger,debug,flushing,shard,on,close,this,might,take,some,time,to,sync,files,to,disk,try,flush,catch,already,closed,exception,ex,logger,debug,engine,already,closed,skipping,flush,and,close,finally,close,await,pending,close
Engine -> public void flushAndClose() throws IOException;1543047942;Flush the engine (committing segments to disk and truncating the_translog) and close it.;public void flushAndClose() throws IOException {_        if (isClosed.get() == false) {_            logger.trace("flushAndClose now acquire writeLock")__            try (ReleasableLock lock = writeLock.acquire()) {_                logger.trace("flushAndClose now acquired writeLock")__                try {_                    logger.debug("flushing shard on close - this might take some time to sync files to disk")__                    try {_                        _                        _                        flush()__                    } catch (AlreadyClosedException ex) {_                        logger.debug("engine already closed - skipping flushAndClose")__                    }_                } finally {_                    close()_ _                }_            }_        }_        awaitPendingClose()__    };flush,the,engine,committing,segments,to,disk,and,truncating,the,translog,and,close,it;public,void,flush,and,close,throws,ioexception,if,is,closed,get,false,logger,trace,flush,and,close,now,acquire,write,lock,try,releasable,lock,lock,write,lock,acquire,logger,trace,flush,and,close,now,acquired,write,lock,try,logger,debug,flushing,shard,on,close,this,might,take,some,time,to,sync,files,to,disk,try,flush,catch,already,closed,exception,ex,logger,debug,engine,already,closed,skipping,flush,and,close,finally,close,await,pending,close
Engine -> public void flushAndClose() throws IOException;1544545090;Flush the engine (committing segments to disk and truncating the_translog) and close it.;public void flushAndClose() throws IOException {_        if (isClosed.get() == false) {_            logger.trace("flushAndClose now acquire writeLock")__            try (ReleasableLock lock = writeLock.acquire()) {_                logger.trace("flushAndClose now acquired writeLock")__                try {_                    logger.debug("flushing shard on close - this might take some time to sync files to disk")__                    try {_                        _                        _                        flush()__                    } catch (AlreadyClosedException ex) {_                        logger.debug("engine already closed - skipping flushAndClose")__                    }_                } finally {_                    close()_ _                }_            }_        }_        awaitPendingClose()__    };flush,the,engine,committing,segments,to,disk,and,truncating,the,translog,and,close,it;public,void,flush,and,close,throws,ioexception,if,is,closed,get,false,logger,trace,flush,and,close,now,acquire,write,lock,try,releasable,lock,lock,write,lock,acquire,logger,trace,flush,and,close,now,acquired,write,lock,try,logger,debug,flushing,shard,on,close,this,might,take,some,time,to,sync,files,to,disk,try,flush,catch,already,closed,exception,ex,logger,debug,engine,already,closed,skipping,flush,and,close,finally,close,await,pending,close
Engine -> public void flushAndClose() throws IOException;1544684920;Flush the engine (committing segments to disk and truncating the_translog) and close it.;public void flushAndClose() throws IOException {_        if (isClosed.get() == false) {_            logger.trace("flushAndClose now acquire writeLock")__            try (ReleasableLock lock = writeLock.acquire()) {_                logger.trace("flushAndClose now acquired writeLock")__                try {_                    logger.debug("flushing shard on close - this might take some time to sync files to disk")__                    try {_                        _                        _                        flush()__                    } catch (AlreadyClosedException ex) {_                        logger.debug("engine already closed - skipping flushAndClose")__                    }_                } finally {_                    close()_ _                }_            }_        }_        awaitPendingClose()__    };flush,the,engine,committing,segments,to,disk,and,truncating,the,translog,and,close,it;public,void,flush,and,close,throws,ioexception,if,is,closed,get,false,logger,trace,flush,and,close,now,acquire,write,lock,try,releasable,lock,lock,write,lock,acquire,logger,trace,flush,and,close,now,acquired,write,lock,try,logger,debug,flushing,shard,on,close,this,might,take,some,time,to,sync,files,to,disk,try,flush,catch,already,closed,exception,ex,logger,debug,engine,already,closed,skipping,flush,and,close,finally,close,await,pending,close
Engine -> public void flushAndClose() throws IOException;1545140118;Flush the engine (committing segments to disk and truncating the_translog) and close it.;public void flushAndClose() throws IOException {_        if (isClosed.get() == false) {_            logger.trace("flushAndClose now acquire writeLock")__            try (ReleasableLock lock = writeLock.acquire()) {_                logger.trace("flushAndClose now acquired writeLock")__                try {_                    logger.debug("flushing shard on close - this might take some time to sync files to disk")__                    try {_                        _                        _                        flush()__                    } catch (AlreadyClosedException ex) {_                        logger.debug("engine already closed - skipping flushAndClose")__                    }_                } finally {_                    close()_ _                }_            }_        }_        awaitPendingClose()__    };flush,the,engine,committing,segments,to,disk,and,truncating,the,translog,and,close,it;public,void,flush,and,close,throws,ioexception,if,is,closed,get,false,logger,trace,flush,and,close,now,acquire,write,lock,try,releasable,lock,lock,write,lock,acquire,logger,trace,flush,and,close,now,acquired,write,lock,try,logger,debug,flushing,shard,on,close,this,might,take,some,time,to,sync,files,to,disk,try,flush,catch,already,closed,exception,ex,logger,debug,engine,already,closed,skipping,flush,and,close,finally,close,await,pending,close
Engine -> public void flushAndClose() throws IOException;1545221705;Flush the engine (committing segments to disk and truncating the_translog) and close it.;public void flushAndClose() throws IOException {_        if (isClosed.get() == false) {_            logger.trace("flushAndClose now acquire writeLock")__            try (ReleasableLock lock = writeLock.acquire()) {_                logger.trace("flushAndClose now acquired writeLock")__                try {_                    logger.debug("flushing shard on close - this might take some time to sync files to disk")__                    try {_                        _                        _                        flush()__                    } catch (AlreadyClosedException ex) {_                        logger.debug("engine already closed - skipping flushAndClose")__                    }_                } finally {_                    close()_ _                }_            }_        }_        awaitPendingClose()__    };flush,the,engine,committing,segments,to,disk,and,truncating,the,translog,and,close,it;public,void,flush,and,close,throws,ioexception,if,is,closed,get,false,logger,trace,flush,and,close,now,acquire,write,lock,try,releasable,lock,lock,write,lock,acquire,logger,trace,flush,and,close,now,acquired,write,lock,try,logger,debug,flushing,shard,on,close,this,might,take,some,time,to,sync,files,to,disk,try,flush,catch,already,closed,exception,ex,logger,debug,engine,already,closed,skipping,flush,and,close,finally,close,await,pending,close
Engine -> public void flushAndClose() throws IOException;1547332999;Flush the engine (committing segments to disk and truncating the_translog) and close it.;public void flushAndClose() throws IOException {_        if (isClosed.get() == false) {_            logger.trace("flushAndClose now acquire writeLock")__            try (ReleasableLock lock = writeLock.acquire()) {_                logger.trace("flushAndClose now acquired writeLock")__                try {_                    logger.debug("flushing shard on close - this might take some time to sync files to disk")__                    try {_                        _                        _                        flush()__                    } catch (AlreadyClosedException ex) {_                        logger.debug("engine already closed - skipping flushAndClose")__                    }_                } finally {_                    close()_ _                }_            }_        }_        awaitPendingClose()__    };flush,the,engine,committing,segments,to,disk,and,truncating,the,translog,and,close,it;public,void,flush,and,close,throws,ioexception,if,is,closed,get,false,logger,trace,flush,and,close,now,acquire,write,lock,try,releasable,lock,lock,write,lock,acquire,logger,trace,flush,and,close,now,acquired,write,lock,try,logger,debug,flushing,shard,on,close,this,might,take,some,time,to,sync,files,to,disk,try,flush,catch,already,closed,exception,ex,logger,debug,engine,already,closed,skipping,flush,and,close,finally,close,await,pending,close
Engine -> public void flushAndClose() throws IOException;1548771485;Flush the engine (committing segments to disk and truncating the_translog) and close it.;public void flushAndClose() throws IOException {_        if (isClosed.get() == false) {_            logger.trace("flushAndClose now acquire writeLock")__            try (ReleasableLock lock = writeLock.acquire()) {_                logger.trace("flushAndClose now acquired writeLock")__                try {_                    logger.debug("flushing shard on close - this might take some time to sync files to disk")__                    try {_                        _                        _                        flush()__                    } catch (AlreadyClosedException ex) {_                        logger.debug("engine already closed - skipping flushAndClose")__                    }_                } finally {_                    close()_ _                }_            }_        }_        awaitPendingClose()__    };flush,the,engine,committing,segments,to,disk,and,truncating,the,translog,and,close,it;public,void,flush,and,close,throws,ioexception,if,is,closed,get,false,logger,trace,flush,and,close,now,acquire,write,lock,try,releasable,lock,lock,write,lock,acquire,logger,trace,flush,and,close,now,acquired,write,lock,try,logger,debug,flushing,shard,on,close,this,might,take,some,time,to,sync,files,to,disk,try,flush,catch,already,closed,exception,ex,logger,debug,engine,already,closed,skipping,flush,and,close,finally,close,await,pending,close
Engine -> public void flushAndClose() throws IOException;1549891630;Flush the engine (committing segments to disk and truncating the_translog) and close it.;public void flushAndClose() throws IOException {_        if (isClosed.get() == false) {_            logger.trace("flushAndClose now acquire writeLock")__            try (ReleasableLock lock = writeLock.acquire()) {_                logger.trace("flushAndClose now acquired writeLock")__                try {_                    logger.debug("flushing shard on close - this might take some time to sync files to disk")__                    try {_                        _                        _                        flush()__                    } catch (AlreadyClosedException ex) {_                        logger.debug("engine already closed - skipping flushAndClose")__                    }_                } finally {_                    close()_ _                }_            }_        }_        awaitPendingClose()__    };flush,the,engine,committing,segments,to,disk,and,truncating,the,translog,and,close,it;public,void,flush,and,close,throws,ioexception,if,is,closed,get,false,logger,trace,flush,and,close,now,acquire,write,lock,try,releasable,lock,lock,write,lock,acquire,logger,trace,flush,and,close,now,acquired,write,lock,try,logger,debug,flushing,shard,on,close,this,might,take,some,time,to,sync,files,to,disk,try,flush,catch,already,closed,exception,ex,logger,debug,engine,already,closed,skipping,flush,and,close,finally,close,await,pending,close
Engine -> public void flushAndClose() throws IOException;1549975032;Flush the engine (committing segments to disk and truncating the_translog) and close it.;public void flushAndClose() throws IOException {_        if (isClosed.get() == false) {_            logger.trace("flushAndClose now acquire writeLock")__            try (ReleasableLock lock = writeLock.acquire()) {_                logger.trace("flushAndClose now acquired writeLock")__                try {_                    logger.debug("flushing shard on close - this might take some time to sync files to disk")__                    try {_                        _                        _                        flush()__                    } catch (AlreadyClosedException ex) {_                        logger.debug("engine already closed - skipping flushAndClose")__                    }_                } finally {_                    close()_ _                }_            }_        }_        awaitPendingClose()__    };flush,the,engine,committing,segments,to,disk,and,truncating,the,translog,and,close,it;public,void,flush,and,close,throws,ioexception,if,is,closed,get,false,logger,trace,flush,and,close,now,acquire,write,lock,try,releasable,lock,lock,write,lock,acquire,logger,trace,flush,and,close,now,acquired,write,lock,try,logger,debug,flushing,shard,on,close,this,might,take,some,time,to,sync,files,to,disk,try,flush,catch,already,closed,exception,ex,logger,debug,engine,already,closed,skipping,flush,and,close,finally,close,await,pending,close
Engine -> public void flushAndClose() throws IOException;1550220204;Flush the engine (committing segments to disk and truncating the_translog) and close it.;public void flushAndClose() throws IOException {_        if (isClosed.get() == false) {_            logger.trace("flushAndClose now acquire writeLock")__            try (ReleasableLock lock = writeLock.acquire()) {_                logger.trace("flushAndClose now acquired writeLock")__                try {_                    logger.debug("flushing shard on close - this might take some time to sync files to disk")__                    try {_                        _                        _                        flush()__                    } catch (AlreadyClosedException ex) {_                        logger.debug("engine already closed - skipping flushAndClose")__                    }_                } finally {_                    close()_ _                }_            }_        }_        awaitPendingClose()__    };flush,the,engine,committing,segments,to,disk,and,truncating,the,translog,and,close,it;public,void,flush,and,close,throws,ioexception,if,is,closed,get,false,logger,trace,flush,and,close,now,acquire,write,lock,try,releasable,lock,lock,write,lock,acquire,logger,trace,flush,and,close,now,acquired,write,lock,try,logger,debug,flushing,shard,on,close,this,might,take,some,time,to,sync,files,to,disk,try,flush,catch,already,closed,exception,ex,logger,debug,engine,already,closed,skipping,flush,and,close,finally,close,await,pending,close
Engine -> public void flushAndClose() throws IOException;1550526771;Flush the engine (committing segments to disk and truncating the_translog) and close it.;public void flushAndClose() throws IOException {_        if (isClosed.get() == false) {_            logger.trace("flushAndClose now acquire writeLock")__            try (ReleasableLock lock = writeLock.acquire()) {_                logger.trace("flushAndClose now acquired writeLock")__                try {_                    logger.debug("flushing shard on close - this might take some time to sync files to disk")__                    try {_                        _                        _                        flush()__                    } catch (AlreadyClosedException ex) {_                        logger.debug("engine already closed - skipping flushAndClose")__                    }_                } finally {_                    close()_ _                }_            }_        }_        awaitPendingClose()__    };flush,the,engine,committing,segments,to,disk,and,truncating,the,translog,and,close,it;public,void,flush,and,close,throws,ioexception,if,is,closed,get,false,logger,trace,flush,and,close,now,acquire,write,lock,try,releasable,lock,lock,write,lock,acquire,logger,trace,flush,and,close,now,acquired,write,lock,try,logger,debug,flushing,shard,on,close,this,might,take,some,time,to,sync,files,to,disk,try,flush,catch,already,closed,exception,ex,logger,debug,engine,already,closed,skipping,flush,and,close,finally,close,await,pending,close
Engine -> public void flushAndClose() throws IOException;1551110274;Flush the engine (committing segments to disk and truncating the_translog) and close it.;public void flushAndClose() throws IOException {_        if (isClosed.get() == false) {_            logger.trace("flushAndClose now acquire writeLock")__            try (ReleasableLock lock = writeLock.acquire()) {_                logger.trace("flushAndClose now acquired writeLock")__                try {_                    logger.debug("flushing shard on close - this might take some time to sync files to disk")__                    try {_                        _                        _                        flush()__                    } catch (AlreadyClosedException ex) {_                        logger.debug("engine already closed - skipping flushAndClose")__                    }_                } finally {_                    close()_ _                }_            }_        }_        awaitPendingClose()__    };flush,the,engine,committing,segments,to,disk,and,truncating,the,translog,and,close,it;public,void,flush,and,close,throws,ioexception,if,is,closed,get,false,logger,trace,flush,and,close,now,acquire,write,lock,try,releasable,lock,lock,write,lock,acquire,logger,trace,flush,and,close,now,acquired,write,lock,try,logger,debug,flushing,shard,on,close,this,might,take,some,time,to,sync,files,to,disk,try,flush,catch,already,closed,exception,ex,logger,debug,engine,already,closed,skipping,flush,and,close,finally,close,await,pending,close
Engine -> public void flushAndClose() throws IOException;1551126708;Flush the engine (committing segments to disk and truncating the_translog) and close it.;public void flushAndClose() throws IOException {_        if (isClosed.get() == false) {_            logger.trace("flushAndClose now acquire writeLock")__            try (ReleasableLock lock = writeLock.acquire()) {_                logger.trace("flushAndClose now acquired writeLock")__                try {_                    logger.debug("flushing shard on close - this might take some time to sync files to disk")__                    try {_                        _                        _                        flush()__                    } catch (AlreadyClosedException ex) {_                        logger.debug("engine already closed - skipping flushAndClose")__                    }_                } finally {_                    close()_ _                }_            }_        }_        awaitPendingClose()__    };flush,the,engine,committing,segments,to,disk,and,truncating,the,translog,and,close,it;public,void,flush,and,close,throws,ioexception,if,is,closed,get,false,logger,trace,flush,and,close,now,acquire,write,lock,try,releasable,lock,lock,write,lock,acquire,logger,trace,flush,and,close,now,acquired,write,lock,try,logger,debug,flushing,shard,on,close,this,might,take,some,time,to,sync,files,to,disk,try,flush,catch,already,closed,exception,ex,logger,debug,engine,already,closed,skipping,flush,and,close,finally,close,await,pending,close
Engine -> IndexResult -> public IndexResult(Exception failure, long version, long term);1533295538;use in case of the index operation failed before getting to internal engine;public IndexResult(Exception failure, long version, long term) {_            this(failure, version, term, SequenceNumbers.UNASSIGNED_SEQ_NO)__        };use,in,case,of,the,index,operation,failed,before,getting,to,internal,engine;public,index,result,exception,failure,long,version,long,term,this,failure,version,term,sequence,numbers
Engine -> IndexResult -> public IndexResult(Exception failure, long version, long term);1535046779;use in case of the index operation failed before getting to internal engine;public IndexResult(Exception failure, long version, long term) {_            this(failure, version, term, SequenceNumbers.UNASSIGNED_SEQ_NO)__        };use,in,case,of,the,index,operation,failed,before,getting,to,internal,engine;public,index,result,exception,failure,long,version,long,term,this,failure,version,term,sequence,numbers
Engine -> IndexResult -> public IndexResult(Exception failure, long version, long term);1535723122;use in case of the index operation failed before getting to internal engine;public IndexResult(Exception failure, long version, long term) {_            this(failure, version, term, SequenceNumbers.UNASSIGNED_SEQ_NO)__        };use,in,case,of,the,index,operation,failed,before,getting,to,internal,engine;public,index,result,exception,failure,long,version,long,term,this,failure,version,term,sequence,numbers
Engine -> IndexResult -> public IndexResult(Exception failure, long version, long term);1535965276;use in case of the index operation failed before getting to internal engine;public IndexResult(Exception failure, long version, long term) {_            this(failure, version, term, SequenceNumbers.UNASSIGNED_SEQ_NO)__        };use,in,case,of,the,index,operation,failed,before,getting,to,internal,engine;public,index,result,exception,failure,long,version,long,term,this,failure,version,term,sequence,numbers
Engine -> IndexResult -> public IndexResult(Exception failure, long version, long term);1536314350;use in case of the index operation failed before getting to internal engine;public IndexResult(Exception failure, long version, long term) {_            this(failure, version, term, SequenceNumbers.UNASSIGNED_SEQ_NO)__        };use,in,case,of,the,index,operation,failed,before,getting,to,internal,engine;public,index,result,exception,failure,long,version,long,term,this,failure,version,term,sequence,numbers
Engine -> IndexResult -> public IndexResult(Exception failure, long version, long term);1536828374;use in case of the index operation failed before getting to internal engine;public IndexResult(Exception failure, long version, long term) {_            this(failure, version, term, SequenceNumbers.UNASSIGNED_SEQ_NO)__        };use,in,case,of,the,index,operation,failed,before,getting,to,internal,engine;public,index,result,exception,failure,long,version,long,term,this,failure,version,term,sequence,numbers
Engine -> IndexResult -> public IndexResult(Exception failure, long version, long term);1537371806;use in case of the index operation failed before getting to internal engine;public IndexResult(Exception failure, long version, long term) {_            this(failure, version, term, SequenceNumbers.UNASSIGNED_SEQ_NO)__        };use,in,case,of,the,index,operation,failed,before,getting,to,internal,engine;public,index,result,exception,failure,long,version,long,term,this,failure,version,term,sequence,numbers
Engine -> IndexResult -> public IndexResult(Exception failure, long version, long term);1537806831;use in case of the index operation failed before getting to internal engine;public IndexResult(Exception failure, long version, long term) {_            this(failure, version, term, SequenceNumbers.UNASSIGNED_SEQ_NO)__        };use,in,case,of,the,index,operation,failed,before,getting,to,internal,engine;public,index,result,exception,failure,long,version,long,term,this,failure,version,term,sequence,numbers
Engine -> IndexResult -> public IndexResult(Exception failure, long version, long term);1538067637;use in case of the index operation failed before getting to internal engine;public IndexResult(Exception failure, long version, long term) {_            this(failure, version, term, SequenceNumbers.UNASSIGNED_SEQ_NO)__        };use,in,case,of,the,index,operation,failed,before,getting,to,internal,engine;public,index,result,exception,failure,long,version,long,term,this,failure,version,term,sequence,numbers
Engine -> IndexResult -> public IndexResult(Exception failure, long version, long term);1538424609;use in case of the index operation failed before getting to internal engine;public IndexResult(Exception failure, long version, long term) {_            this(failure, version, term, SequenceNumbers.UNASSIGNED_SEQ_NO)__        };use,in,case,of,the,index,operation,failed,before,getting,to,internal,engine;public,index,result,exception,failure,long,version,long,term,this,failure,version,term,sequence,numbers
Engine -> IndexResult -> public IndexResult(Exception failure, long version, long term);1539723533;use in case of the index operation failed before getting to internal engine;public IndexResult(Exception failure, long version, long term) {_            this(failure, version, term, SequenceNumbers.UNASSIGNED_SEQ_NO)__        };use,in,case,of,the,index,operation,failed,before,getting,to,internal,engine;public,index,result,exception,failure,long,version,long,term,this,failure,version,term,sequence,numbers
Engine -> IndexResult -> public IndexResult(Exception failure, long version, long term);1541618615;use in case of the index operation failed before getting to internal engine;public IndexResult(Exception failure, long version, long term) {_            this(failure, version, term, SequenceNumbers.UNASSIGNED_SEQ_NO)__        };use,in,case,of,the,index,operation,failed,before,getting,to,internal,engine;public,index,result,exception,failure,long,version,long,term,this,failure,version,term,sequence,numbers
Engine -> IndexResult -> public IndexResult(Exception failure, long version, long term);1542697754;use in case of the index operation failed before getting to internal engine;public IndexResult(Exception failure, long version, long term) {_            this(failure, version, term, SequenceNumbers.UNASSIGNED_SEQ_NO)__        };use,in,case,of,the,index,operation,failed,before,getting,to,internal,engine;public,index,result,exception,failure,long,version,long,term,this,failure,version,term,sequence,numbers
Engine -> IndexResult -> public IndexResult(Exception failure, long version, long term);1543047942;use in case of the index operation failed before getting to internal engine;public IndexResult(Exception failure, long version, long term) {_            this(failure, version, term, SequenceNumbers.UNASSIGNED_SEQ_NO)__        };use,in,case,of,the,index,operation,failed,before,getting,to,internal,engine;public,index,result,exception,failure,long,version,long,term,this,failure,version,term,sequence,numbers
Engine -> IndexResult -> public IndexResult(Exception failure, long version, long term);1544545090;use in case of the index operation failed before getting to internal engine;public IndexResult(Exception failure, long version, long term) {_            this(failure, version, term, SequenceNumbers.UNASSIGNED_SEQ_NO)__        };use,in,case,of,the,index,operation,failed,before,getting,to,internal,engine;public,index,result,exception,failure,long,version,long,term,this,failure,version,term,sequence,numbers
Engine -> IndexResult -> public IndexResult(Exception failure, long version, long term);1544684920;use in case of the index operation failed before getting to internal engine;public IndexResult(Exception failure, long version, long term) {_            this(failure, version, term, SequenceNumbers.UNASSIGNED_SEQ_NO)__        };use,in,case,of,the,index,operation,failed,before,getting,to,internal,engine;public,index,result,exception,failure,long,version,long,term,this,failure,version,term,sequence,numbers
Engine -> IndexResult -> public IndexResult(Exception failure, long version, long term);1545140118;use in case of the index operation failed before getting to internal engine;public IndexResult(Exception failure, long version, long term) {_            this(failure, version, term, SequenceNumbers.UNASSIGNED_SEQ_NO)__        };use,in,case,of,the,index,operation,failed,before,getting,to,internal,engine;public,index,result,exception,failure,long,version,long,term,this,failure,version,term,sequence,numbers
Engine -> IndexResult -> public IndexResult(Exception failure, long version, long term);1545221705;use in case of the index operation failed before getting to internal engine;public IndexResult(Exception failure, long version, long term) {_            this(failure, version, term, UNASSIGNED_SEQ_NO)__        };use,in,case,of,the,index,operation,failed,before,getting,to,internal,engine;public,index,result,exception,failure,long,version,long,term,this,failure,version,term
Engine -> IndexResult -> public IndexResult(Exception failure, long version, long term);1547332999;use in case of the index operation failed before getting to internal engine;public IndexResult(Exception failure, long version, long term) {_            this(failure, version, term, UNASSIGNED_SEQ_NO)__        };use,in,case,of,the,index,operation,failed,before,getting,to,internal,engine;public,index,result,exception,failure,long,version,long,term,this,failure,version,term
Engine -> IndexResult -> public IndexResult(Exception failure, long version, long term);1548771485;use in case of the index operation failed before getting to internal engine;public IndexResult(Exception failure, long version, long term) {_            this(failure, version, term, UNASSIGNED_SEQ_NO)__        };use,in,case,of,the,index,operation,failed,before,getting,to,internal,engine;public,index,result,exception,failure,long,version,long,term,this,failure,version,term
Engine -> IndexResult -> public IndexResult(Exception failure, long version, long term);1549891630;use in case of the index operation failed before getting to internal engine;public IndexResult(Exception failure, long version, long term) {_            this(failure, version, term, UNASSIGNED_SEQ_NO)__        };use,in,case,of,the,index,operation,failed,before,getting,to,internal,engine;public,index,result,exception,failure,long,version,long,term,this,failure,version,term
Engine -> IndexResult -> public IndexResult(Exception failure, long version, long term);1549975032;use in case of the index operation failed before getting to internal engine;public IndexResult(Exception failure, long version, long term) {_            this(failure, version, term, UNASSIGNED_SEQ_NO)__        };use,in,case,of,the,index,operation,failed,before,getting,to,internal,engine;public,index,result,exception,failure,long,version,long,term,this,failure,version,term
Engine -> IndexResult -> public IndexResult(Exception failure, long version, long term);1550220204;use in case of the index operation failed before getting to internal engine;public IndexResult(Exception failure, long version, long term) {_            this(failure, version, term, UNASSIGNED_SEQ_NO)__        };use,in,case,of,the,index,operation,failed,before,getting,to,internal,engine;public,index,result,exception,failure,long,version,long,term,this,failure,version,term
Engine -> IndexResult -> public IndexResult(Exception failure, long version, long term);1550526771;use in case of the index operation failed before getting to internal engine;public IndexResult(Exception failure, long version, long term) {_            this(failure, version, term, UNASSIGNED_SEQ_NO)__        };use,in,case,of,the,index,operation,failed,before,getting,to,internal,engine;public,index,result,exception,failure,long,version,long,term,this,failure,version,term
Engine -> IndexResult -> public IndexResult(Exception failure, long version, long term);1551110274;use in case of the index operation failed before getting to internal engine;public IndexResult(Exception failure, long version, long term) {_            this(failure, version, term, UNASSIGNED_SEQ_NO)__        };use,in,case,of,the,index,operation,failed,before,getting,to,internal,engine;public,index,result,exception,failure,long,version,long,term,this,failure,version,term
Engine -> IndexResult -> public IndexResult(Exception failure, long version, long term);1551126708;use in case of the index operation failed before getting to internal engine;public IndexResult(Exception failure, long version, long term) {_            this(failure, version, term, UNASSIGNED_SEQ_NO)__        };use,in,case,of,the,index,operation,failed,before,getting,to,internal,engine;public,index,result,exception,failure,long,version,long,term,this,failure,version,term
Engine -> Result -> public long getVersion();1524684173;get the updated document version;public long getVersion() {_            return version__        };get,the,updated,document,version;public,long,get,version,return,version
Engine -> Result -> public long getVersion();1525162917;get the updated document version;public long getVersion() {_            return version__        };get,the,updated,document,version;public,long,get,version,return,version
Engine -> Result -> public long getVersion();1525334055;get the updated document version;public long getVersion() {_            return version__        };get,the,updated,document,version;public,long,get,version,return,version
Engine -> Result -> public long getVersion();1527583663;get the updated document version;public long getVersion() {_            return version__        };get,the,updated,document,version;public,long,get,version,return,version
Engine -> Result -> public long getVersion();1528706846;get the updated document version;public long getVersion() {_            return version__        };get,the,updated,document,version;public,long,get,version,return,version
Engine -> Result -> public long getVersion();1528762805;get the updated document version;public long getVersion() {_            return version__        };get,the,updated,document,version;public,long,get,version,return,version
Engine -> Result -> public long getVersion();1531910483;get the updated document version;public long getVersion() {_            return version__        };get,the,updated,document,version;public,long,get,version,return,version
Engine -> Result -> public long getVersion();1532685069;get the updated document version;public long getVersion() {_            return version__        };get,the,updated,document,version;public,long,get,version,return,version
Engine -> Result -> public long getVersion();1533295538;get the updated document version;public long getVersion() {_            return version__        };get,the,updated,document,version;public,long,get,version,return,version
Engine -> Result -> public long getVersion();1535046779;get the updated document version;public long getVersion() {_            return version__        };get,the,updated,document,version;public,long,get,version,return,version
Engine -> Result -> public long getVersion();1535723122;get the updated document version;public long getVersion() {_            return version__        };get,the,updated,document,version;public,long,get,version,return,version
Engine -> Result -> public long getVersion();1535965276;get the updated document version;public long getVersion() {_            return version__        };get,the,updated,document,version;public,long,get,version,return,version
Engine -> Result -> public long getVersion();1536314350;get the updated document version;public long getVersion() {_            return version__        };get,the,updated,document,version;public,long,get,version,return,version
Engine -> Result -> public long getVersion();1536828374;get the updated document version;public long getVersion() {_            return version__        };get,the,updated,document,version;public,long,get,version,return,version
Engine -> Result -> public long getVersion();1537371806;get the updated document version;public long getVersion() {_            return version__        };get,the,updated,document,version;public,long,get,version,return,version
Engine -> Result -> public long getVersion();1537806831;get the updated document version;public long getVersion() {_            return version__        };get,the,updated,document,version;public,long,get,version,return,version
Engine -> Result -> public long getVersion();1538067637;get the updated document version;public long getVersion() {_            return version__        };get,the,updated,document,version;public,long,get,version,return,version
Engine -> Result -> public long getVersion();1538424609;get the updated document version;public long getVersion() {_            return version__        };get,the,updated,document,version;public,long,get,version,return,version
Engine -> Result -> public long getVersion();1539723533;get the updated document version;public long getVersion() {_            return version__        };get,the,updated,document,version;public,long,get,version,return,version
Engine -> Result -> public long getVersion();1541618615;get the updated document version;public long getVersion() {_            return version__        };get,the,updated,document,version;public,long,get,version,return,version
Engine -> Result -> public long getVersion();1542697754;get the updated document version;public long getVersion() {_            return version__        };get,the,updated,document,version;public,long,get,version,return,version
Engine -> Result -> public long getVersion();1543047942;get the updated document version;public long getVersion() {_            return version__        };get,the,updated,document,version;public,long,get,version,return,version
Engine -> Result -> public long getVersion();1544545090;get the updated document version;public long getVersion() {_            return version__        };get,the,updated,document,version;public,long,get,version,return,version
Engine -> Result -> public long getVersion();1544684920;get the updated document version;public long getVersion() {_            return version__        };get,the,updated,document,version;public,long,get,version,return,version
Engine -> Result -> public long getVersion();1545140118;get the updated document version;public long getVersion() {_            return version__        };get,the,updated,document,version;public,long,get,version,return,version
Engine -> Result -> public long getVersion();1545221705;get the updated document version;public long getVersion() {_            return version__        };get,the,updated,document,version;public,long,get,version,return,version
Engine -> Result -> public long getVersion();1547332999;get the updated document version;public long getVersion() {_            return version__        };get,the,updated,document,version;public,long,get,version,return,version
Engine -> Result -> public long getVersion();1548771485;get the updated document version;public long getVersion() {_            return version__        };get,the,updated,document,version;public,long,get,version,return,version
Engine -> Result -> public long getVersion();1549891630;get the updated document version;public long getVersion() {_            return version__        };get,the,updated,document,version;public,long,get,version,return,version
Engine -> Result -> public long getVersion();1549975032;get the updated document version;public long getVersion() {_            return version__        };get,the,updated,document,version;public,long,get,version,return,version
Engine -> Result -> public long getVersion();1550220204;get the updated document version;public long getVersion() {_            return version__        };get,the,updated,document,version;public,long,get,version,return,version
Engine -> Result -> public long getVersion();1550526771;get the updated document version;public long getVersion() {_            return version__        };get,the,updated,document,version;public,long,get,version,return,version
Engine -> Result -> public long getVersion();1551110274;get the updated document version;public long getVersion() {_            return version__        };get,the,updated,document,version;public,long,get,version,return,version
Engine -> Result -> public long getVersion();1551126708;get the updated document version;public long getVersion() {_            return version__        };get,the,updated,document,version;public,long,get,version,return,version
Engine -> IndexResult -> public IndexResult(Exception failure, long version);1524684173;use in case of index operation failed before getting to internal engine_(e.g while preparing operation or updating mappings);public IndexResult(Exception failure, long version) {_            this(failure, version, SequenceNumbers.UNASSIGNED_SEQ_NO)__        };use,in,case,of,index,operation,failed,before,getting,to,internal,engine,e,g,while,preparing,operation,or,updating,mappings;public,index,result,exception,failure,long,version,this,failure,version,sequence,numbers
Engine -> IndexResult -> public IndexResult(Exception failure, long version);1525162917;use in case of the index operation failed before getting to internal engine;public IndexResult(Exception failure, long version) {_            this(failure, version, SequenceNumbers.UNASSIGNED_SEQ_NO)__        };use,in,case,of,the,index,operation,failed,before,getting,to,internal,engine;public,index,result,exception,failure,long,version,this,failure,version,sequence,numbers
Engine -> IndexResult -> public IndexResult(Exception failure, long version);1525334055;use in case of the index operation failed before getting to internal engine;public IndexResult(Exception failure, long version) {_            this(failure, version, SequenceNumbers.UNASSIGNED_SEQ_NO)__        };use,in,case,of,the,index,operation,failed,before,getting,to,internal,engine;public,index,result,exception,failure,long,version,this,failure,version,sequence,numbers
Engine -> IndexResult -> public IndexResult(Exception failure, long version);1527583663;use in case of the index operation failed before getting to internal engine;public IndexResult(Exception failure, long version) {_            this(failure, version, SequenceNumbers.UNASSIGNED_SEQ_NO)__        };use,in,case,of,the,index,operation,failed,before,getting,to,internal,engine;public,index,result,exception,failure,long,version,this,failure,version,sequence,numbers
Engine -> IndexResult -> public IndexResult(Exception failure, long version);1528706846;use in case of the index operation failed before getting to internal engine;public IndexResult(Exception failure, long version) {_            this(failure, version, SequenceNumbers.UNASSIGNED_SEQ_NO)__        };use,in,case,of,the,index,operation,failed,before,getting,to,internal,engine;public,index,result,exception,failure,long,version,this,failure,version,sequence,numbers
Engine -> IndexResult -> public IndexResult(Exception failure, long version);1528762805;use in case of the index operation failed before getting to internal engine;public IndexResult(Exception failure, long version) {_            this(failure, version, SequenceNumbers.UNASSIGNED_SEQ_NO)__        };use,in,case,of,the,index,operation,failed,before,getting,to,internal,engine;public,index,result,exception,failure,long,version,this,failure,version,sequence,numbers
Engine -> IndexResult -> public IndexResult(Exception failure, long version);1531910483;use in case of the index operation failed before getting to internal engine;public IndexResult(Exception failure, long version) {_            this(failure, version, SequenceNumbers.UNASSIGNED_SEQ_NO)__        };use,in,case,of,the,index,operation,failed,before,getting,to,internal,engine;public,index,result,exception,failure,long,version,this,failure,version,sequence,numbers
Engine -> IndexResult -> public IndexResult(Exception failure, long version);1532685069;use in case of the index operation failed before getting to internal engine;public IndexResult(Exception failure, long version) {_            this(failure, version, SequenceNumbers.UNASSIGNED_SEQ_NO)__        };use,in,case,of,the,index,operation,failed,before,getting,to,internal,engine;public,index,result,exception,failure,long,version,this,failure,version,sequence,numbers
Engine -> public DocsStats docStats();1537371806;Returns the {@link DocsStats} for this engine;public DocsStats docStats() {_        _        _        _        _        _        try (Engine.Searcher searcher = acquireSearcher("docStats", Engine.SearcherScope.INTERNAL)) {_           return docsStats(searcher.reader())__        }_    };returns,the,link,docs,stats,for,this,engine;public,docs,stats,doc,stats,try,engine,searcher,searcher,acquire,searcher,doc,stats,engine,searcher,scope,internal,return,docs,stats,searcher,reader
Engine -> public DocsStats docStats();1537806831;Returns the {@link DocsStats} for this engine;public DocsStats docStats() {_        _        _        _        _        _        try (Engine.Searcher searcher = acquireSearcher("docStats", Engine.SearcherScope.INTERNAL)) {_           return docsStats(searcher.reader())__        }_    };returns,the,link,docs,stats,for,this,engine;public,docs,stats,doc,stats,try,engine,searcher,searcher,acquire,searcher,doc,stats,engine,searcher,scope,internal,return,docs,stats,searcher,reader
Engine -> public DocsStats docStats();1538067637;Returns the {@link DocsStats} for this engine;public DocsStats docStats() {_        _        _        _        _        _        try (Engine.Searcher searcher = acquireSearcher("docStats", Engine.SearcherScope.INTERNAL)) {_           return docsStats(searcher.reader())__        }_    };returns,the,link,docs,stats,for,this,engine;public,docs,stats,doc,stats,try,engine,searcher,searcher,acquire,searcher,doc,stats,engine,searcher,scope,internal,return,docs,stats,searcher,reader
Engine -> public DocsStats docStats();1538424609;Returns the {@link DocsStats} for this engine;public DocsStats docStats() {_        _        _        _        _        _        try (Engine.Searcher searcher = acquireSearcher("docStats", Engine.SearcherScope.INTERNAL)) {_           return docsStats(searcher.reader())__        }_    };returns,the,link,docs,stats,for,this,engine;public,docs,stats,doc,stats,try,engine,searcher,searcher,acquire,searcher,doc,stats,engine,searcher,scope,internal,return,docs,stats,searcher,reader
Engine -> public DocsStats docStats();1539723533;Returns the {@link DocsStats} for this engine;public DocsStats docStats() {_        _        _        _        _        _        try (Engine.Searcher searcher = acquireSearcher("docStats", Engine.SearcherScope.INTERNAL)) {_           return docsStats(searcher.reader())__        }_    };returns,the,link,docs,stats,for,this,engine;public,docs,stats,doc,stats,try,engine,searcher,searcher,acquire,searcher,doc,stats,engine,searcher,scope,internal,return,docs,stats,searcher,reader
Engine -> public DocsStats docStats();1541618615;Returns the {@link DocsStats} for this engine;public DocsStats docStats() {_        _        _        _        _        _        try (Engine.Searcher searcher = acquireSearcher("docStats", Engine.SearcherScope.INTERNAL)) {_           return docsStats(searcher.reader())__        }_    };returns,the,link,docs,stats,for,this,engine;public,docs,stats,doc,stats,try,engine,searcher,searcher,acquire,searcher,doc,stats,engine,searcher,scope,internal,return,docs,stats,searcher,reader
Engine -> public DocsStats docStats();1542697754;Returns the {@link DocsStats} for this engine;public DocsStats docStats() {_        _        _        _        _        _        try (Engine.Searcher searcher = acquireSearcher("docStats", Engine.SearcherScope.INTERNAL)) {_           return docsStats(searcher.reader())__        }_    };returns,the,link,docs,stats,for,this,engine;public,docs,stats,doc,stats,try,engine,searcher,searcher,acquire,searcher,doc,stats,engine,searcher,scope,internal,return,docs,stats,searcher,reader
Engine -> public DocsStats docStats();1543047942;Returns the {@link DocsStats} for this engine;public DocsStats docStats() {_        _        _        _        _        _        try (Engine.Searcher searcher = acquireSearcher("docStats", Engine.SearcherScope.INTERNAL)) {_           return docsStats(searcher.reader())__        }_    };returns,the,link,docs,stats,for,this,engine;public,docs,stats,doc,stats,try,engine,searcher,searcher,acquire,searcher,doc,stats,engine,searcher,scope,internal,return,docs,stats,searcher,reader
Engine -> public DocsStats docStats();1544545090;Returns the {@link DocsStats} for this engine;public DocsStats docStats() {_        _        _        _        _        _        try (Engine.Searcher searcher = acquireSearcher("docStats", Engine.SearcherScope.INTERNAL)) {_           return docsStats(searcher.reader())__        }_    };returns,the,link,docs,stats,for,this,engine;public,docs,stats,doc,stats,try,engine,searcher,searcher,acquire,searcher,doc,stats,engine,searcher,scope,internal,return,docs,stats,searcher,reader
Engine -> public DocsStats docStats();1544684920;Returns the {@link DocsStats} for this engine;public DocsStats docStats() {_        _        _        _        _        _        try (Engine.Searcher searcher = acquireSearcher("docStats", Engine.SearcherScope.INTERNAL)) {_           return docsStats(searcher.reader())__        }_    };returns,the,link,docs,stats,for,this,engine;public,docs,stats,doc,stats,try,engine,searcher,searcher,acquire,searcher,doc,stats,engine,searcher,scope,internal,return,docs,stats,searcher,reader
Engine -> public DocsStats docStats();1545140118;Returns the {@link DocsStats} for this engine;public DocsStats docStats() {_        _        _        _        _        _        try (Engine.Searcher searcher = acquireSearcher("docStats", Engine.SearcherScope.INTERNAL)) {_           return docsStats(searcher.reader())__        }_    };returns,the,link,docs,stats,for,this,engine;public,docs,stats,doc,stats,try,engine,searcher,searcher,acquire,searcher,doc,stats,engine,searcher,scope,internal,return,docs,stats,searcher,reader
Engine -> public DocsStats docStats();1545221705;Returns the {@link DocsStats} for this engine;public DocsStats docStats() {_        _        _        _        _        _        try (Engine.Searcher searcher = acquireSearcher("docStats", Engine.SearcherScope.INTERNAL)) {_           return docsStats(searcher.reader())__        }_    };returns,the,link,docs,stats,for,this,engine;public,docs,stats,doc,stats,try,engine,searcher,searcher,acquire,searcher,doc,stats,engine,searcher,scope,internal,return,docs,stats,searcher,reader
Engine -> public DocsStats docStats();1547332999;Returns the {@link DocsStats} for this engine;public DocsStats docStats() {_        _        _        _        _        _        try (Engine.Searcher searcher = acquireSearcher("docStats", Engine.SearcherScope.INTERNAL)) {_           return docsStats(searcher.reader())__        }_    };returns,the,link,docs,stats,for,this,engine;public,docs,stats,doc,stats,try,engine,searcher,searcher,acquire,searcher,doc,stats,engine,searcher,scope,internal,return,docs,stats,searcher,reader
Engine -> public DocsStats docStats();1548771485;Returns the {@link DocsStats} for this engine;public DocsStats docStats() {_        _        _        _        _        _        try (Engine.Searcher searcher = acquireSearcher("docStats", Engine.SearcherScope.INTERNAL)) {_           return docsStats(searcher.reader())__        }_    };returns,the,link,docs,stats,for,this,engine;public,docs,stats,doc,stats,try,engine,searcher,searcher,acquire,searcher,doc,stats,engine,searcher,scope,internal,return,docs,stats,searcher,reader
Engine -> public DocsStats docStats();1549891630;Returns the {@link DocsStats} for this engine;public DocsStats docStats() {_        _        _        _        _        _        try (Engine.Searcher searcher = acquireSearcher("docStats", Engine.SearcherScope.INTERNAL)) {_           return docsStats(searcher.reader())__        }_    };returns,the,link,docs,stats,for,this,engine;public,docs,stats,doc,stats,try,engine,searcher,searcher,acquire,searcher,doc,stats,engine,searcher,scope,internal,return,docs,stats,searcher,reader
Engine -> public DocsStats docStats();1549975032;Returns the {@link DocsStats} for this engine;public DocsStats docStats() {_        _        _        _        _        _        try (Engine.Searcher searcher = acquireSearcher("docStats", Engine.SearcherScope.INTERNAL)) {_           return docsStats(searcher.reader())__        }_    };returns,the,link,docs,stats,for,this,engine;public,docs,stats,doc,stats,try,engine,searcher,searcher,acquire,searcher,doc,stats,engine,searcher,scope,internal,return,docs,stats,searcher,reader
Engine -> public DocsStats docStats();1550220204;Returns the {@link DocsStats} for this engine;public DocsStats docStats() {_        _        _        _        _        _        try (Engine.Searcher searcher = acquireSearcher("docStats", Engine.SearcherScope.INTERNAL)) {_           return docsStats(searcher.reader())__        }_    };returns,the,link,docs,stats,for,this,engine;public,docs,stats,doc,stats,try,engine,searcher,searcher,acquire,searcher,doc,stats,engine,searcher,scope,internal,return,docs,stats,searcher,reader
Engine -> public DocsStats docStats();1550526771;Returns the {@link DocsStats} for this engine;public DocsStats docStats() {_        _        _        _        _        _        try (Engine.Searcher searcher = acquireSearcher("docStats", Engine.SearcherScope.INTERNAL)) {_           return docsStats(searcher.reader())__        }_    };returns,the,link,docs,stats,for,this,engine;public,docs,stats,doc,stats,try,engine,searcher,searcher,acquire,searcher,doc,stats,engine,searcher,scope,internal,return,docs,stats,searcher,reader
Engine -> public DocsStats docStats();1551110274;Returns the {@link DocsStats} for this engine;public DocsStats docStats() {_        _        _        _        _        _        try (Engine.Searcher searcher = acquireSearcher("docStats", Engine.SearcherScope.INTERNAL)) {_           return docsStats(searcher.reader())__        }_    };returns,the,link,docs,stats,for,this,engine;public,docs,stats,doc,stats,try,engine,searcher,searcher,acquire,searcher,doc,stats,engine,searcher,scope,internal,return,docs,stats,searcher,reader
Engine -> public DocsStats docStats();1551126708;Returns the {@link DocsStats} for this engine;public DocsStats docStats() {_        _        _        _        _        _        try (Engine.Searcher searcher = acquireSearcher("docStats", Engine.SearcherScope.INTERNAL)) {_           return docsStats(searcher.reader())__        }_    };returns,the,link,docs,stats,for,this,engine;public,docs,stats,doc,stats,try,engine,searcher,searcher,acquire,searcher,doc,stats,engine,searcher,scope,internal,return,docs,stats,searcher,reader
Engine -> public Translog.Location getTranslogLastWriteLocation();1524684173;Returns the last location that the translog of this engine has written into.;public Translog.Location getTranslogLastWriteLocation() {_        return getTranslog().getLastWriteLocation()__    };returns,the,last,location,that,the,translog,of,this,engine,has,written,into;public,translog,location,get,translog,last,write,location,return,get,translog,get,last,write,location
Engine -> public Translog.Location getTranslogLastWriteLocation();1525162917;Returns the last location that the translog of this engine has written into.;public Translog.Location getTranslogLastWriteLocation() {_        return getTranslog().getLastWriteLocation()__    };returns,the,last,location,that,the,translog,of,this,engine,has,written,into;public,translog,location,get,translog,last,write,location,return,get,translog,get,last,write,location
Engine -> public Translog.Location getTranslogLastWriteLocation();1525334055;Returns the last location that the translog of this engine has written into.;public Translog.Location getTranslogLastWriteLocation() {_        return getTranslog().getLastWriteLocation()__    };returns,the,last,location,that,the,translog,of,this,engine,has,written,into;public,translog,location,get,translog,last,write,location,return,get,translog,get,last,write,location
Engine -> public Translog.Location getTranslogLastWriteLocation();1527583663;Returns the last location that the translog of this engine has written into.;public Translog.Location getTranslogLastWriteLocation() {_        return getTranslog().getLastWriteLocation()__    };returns,the,last,location,that,the,translog,of,this,engine,has,written,into;public,translog,location,get,translog,last,write,location,return,get,translog,get,last,write,location
Engine -> public Translog.Location getTranslogLastWriteLocation();1528706846;Returns the last location that the translog of this engine has written into.;public Translog.Location getTranslogLastWriteLocation() {_        return getTranslog().getLastWriteLocation()__    };returns,the,last,location,that,the,translog,of,this,engine,has,written,into;public,translog,location,get,translog,last,write,location,return,get,translog,get,last,write,location
Engine -> public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;1524684173;Ensures that all locations in the given stream have been written to the underlying storage.;public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;ensures,that,all,locations,in,the,given,stream,have,been,written,to,the,underlying,storage;public,abstract,boolean,ensure,translog,synced,stream,translog,location,locations,throws,ioexception
Engine -> public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;1525162917;Ensures that all locations in the given stream have been written to the underlying storage.;public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;ensures,that,all,locations,in,the,given,stream,have,been,written,to,the,underlying,storage;public,abstract,boolean,ensure,translog,synced,stream,translog,location,locations,throws,ioexception
Engine -> public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;1525334055;Ensures that all locations in the given stream have been written to the underlying storage.;public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;ensures,that,all,locations,in,the,given,stream,have,been,written,to,the,underlying,storage;public,abstract,boolean,ensure,translog,synced,stream,translog,location,locations,throws,ioexception
Engine -> public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;1527583663;Ensures that all locations in the given stream have been written to the underlying storage.;public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;ensures,that,all,locations,in,the,given,stream,have,been,written,to,the,underlying,storage;public,abstract,boolean,ensure,translog,synced,stream,translog,location,locations,throws,ioexception
Engine -> public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;1528706846;Ensures that all locations in the given stream have been written to the underlying storage.;public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;ensures,that,all,locations,in,the,given,stream,have,been,written,to,the,underlying,storage;public,abstract,boolean,ensure,translog,synced,stream,translog,location,locations,throws,ioexception
Engine -> public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;1528762805;Ensures that all locations in the given stream have been written to the underlying storage.;public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;ensures,that,all,locations,in,the,given,stream,have,been,written,to,the,underlying,storage;public,abstract,boolean,ensure,translog,synced,stream,translog,location,locations,throws,ioexception
Engine -> public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;1531910483;Ensures that all locations in the given stream have been written to the underlying storage.;public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;ensures,that,all,locations,in,the,given,stream,have,been,written,to,the,underlying,storage;public,abstract,boolean,ensure,translog,synced,stream,translog,location,locations,throws,ioexception
Engine -> public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;1532685069;Ensures that all locations in the given stream have been written to the underlying storage.;public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;ensures,that,all,locations,in,the,given,stream,have,been,written,to,the,underlying,storage;public,abstract,boolean,ensure,translog,synced,stream,translog,location,locations,throws,ioexception
Engine -> public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;1533295538;Ensures that all locations in the given stream have been written to the underlying storage.;public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;ensures,that,all,locations,in,the,given,stream,have,been,written,to,the,underlying,storage;public,abstract,boolean,ensure,translog,synced,stream,translog,location,locations,throws,ioexception
Engine -> public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;1535046779;Ensures that all locations in the given stream have been written to the underlying storage.;public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;ensures,that,all,locations,in,the,given,stream,have,been,written,to,the,underlying,storage;public,abstract,boolean,ensure,translog,synced,stream,translog,location,locations,throws,ioexception
Engine -> public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;1535723122;Ensures that all locations in the given stream have been written to the underlying storage.;public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;ensures,that,all,locations,in,the,given,stream,have,been,written,to,the,underlying,storage;public,abstract,boolean,ensure,translog,synced,stream,translog,location,locations,throws,ioexception
Engine -> public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;1535965276;Ensures that all locations in the given stream have been written to the underlying storage.;public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;ensures,that,all,locations,in,the,given,stream,have,been,written,to,the,underlying,storage;public,abstract,boolean,ensure,translog,synced,stream,translog,location,locations,throws,ioexception
Engine -> public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;1536314350;Ensures that all locations in the given stream have been written to the underlying storage.;public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;ensures,that,all,locations,in,the,given,stream,have,been,written,to,the,underlying,storage;public,abstract,boolean,ensure,translog,synced,stream,translog,location,locations,throws,ioexception
Engine -> public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;1536828374;Ensures that all locations in the given stream have been written to the underlying storage.;public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;ensures,that,all,locations,in,the,given,stream,have,been,written,to,the,underlying,storage;public,abstract,boolean,ensure,translog,synced,stream,translog,location,locations,throws,ioexception
Engine -> public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;1537371806;Ensures that all locations in the given stream have been written to the underlying storage.;public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;ensures,that,all,locations,in,the,given,stream,have,been,written,to,the,underlying,storage;public,abstract,boolean,ensure,translog,synced,stream,translog,location,locations,throws,ioexception
Engine -> public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;1537806831;Ensures that all locations in the given stream have been written to the underlying storage.;public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;ensures,that,all,locations,in,the,given,stream,have,been,written,to,the,underlying,storage;public,abstract,boolean,ensure,translog,synced,stream,translog,location,locations,throws,ioexception
Engine -> public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;1538067637;Ensures that all locations in the given stream have been written to the underlying storage.;public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;ensures,that,all,locations,in,the,given,stream,have,been,written,to,the,underlying,storage;public,abstract,boolean,ensure,translog,synced,stream,translog,location,locations,throws,ioexception
Engine -> public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;1538424609;Ensures that all locations in the given stream have been written to the underlying storage.;public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;ensures,that,all,locations,in,the,given,stream,have,been,written,to,the,underlying,storage;public,abstract,boolean,ensure,translog,synced,stream,translog,location,locations,throws,ioexception
Engine -> public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;1539723533;Ensures that all locations in the given stream have been written to the underlying storage.;public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;ensures,that,all,locations,in,the,given,stream,have,been,written,to,the,underlying,storage;public,abstract,boolean,ensure,translog,synced,stream,translog,location,locations,throws,ioexception
Engine -> public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;1541618615;Ensures that all locations in the given stream have been written to the underlying storage.;public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;ensures,that,all,locations,in,the,given,stream,have,been,written,to,the,underlying,storage;public,abstract,boolean,ensure,translog,synced,stream,translog,location,locations,throws,ioexception
Engine -> public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;1542697754;Ensures that all locations in the given stream have been written to the underlying storage.;public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;ensures,that,all,locations,in,the,given,stream,have,been,written,to,the,underlying,storage;public,abstract,boolean,ensure,translog,synced,stream,translog,location,locations,throws,ioexception
Engine -> public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;1543047942;Ensures that all locations in the given stream have been written to the underlying storage.;public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;ensures,that,all,locations,in,the,given,stream,have,been,written,to,the,underlying,storage;public,abstract,boolean,ensure,translog,synced,stream,translog,location,locations,throws,ioexception
Engine -> public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;1544545090;Ensures that all locations in the given stream have been written to the underlying storage.;public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;ensures,that,all,locations,in,the,given,stream,have,been,written,to,the,underlying,storage;public,abstract,boolean,ensure,translog,synced,stream,translog,location,locations,throws,ioexception
Engine -> public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;1544684920;Ensures that all locations in the given stream have been written to the underlying storage.;public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;ensures,that,all,locations,in,the,given,stream,have,been,written,to,the,underlying,storage;public,abstract,boolean,ensure,translog,synced,stream,translog,location,locations,throws,ioexception
Engine -> public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;1545140118;Ensures that all locations in the given stream have been written to the underlying storage.;public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;ensures,that,all,locations,in,the,given,stream,have,been,written,to,the,underlying,storage;public,abstract,boolean,ensure,translog,synced,stream,translog,location,locations,throws,ioexception
Engine -> public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;1545221705;Ensures that all locations in the given stream have been written to the underlying storage.;public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;ensures,that,all,locations,in,the,given,stream,have,been,written,to,the,underlying,storage;public,abstract,boolean,ensure,translog,synced,stream,translog,location,locations,throws,ioexception
Engine -> public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;1547332999;Ensures that all locations in the given stream have been written to the underlying storage.;public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;ensures,that,all,locations,in,the,given,stream,have,been,written,to,the,underlying,storage;public,abstract,boolean,ensure,translog,synced,stream,translog,location,locations,throws,ioexception
Engine -> public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;1548771485;Ensures that all locations in the given stream have been written to the underlying storage.;public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;ensures,that,all,locations,in,the,given,stream,have,been,written,to,the,underlying,storage;public,abstract,boolean,ensure,translog,synced,stream,translog,location,locations,throws,ioexception
Engine -> public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;1549891630;Ensures that all locations in the given stream have been written to the underlying storage.;public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;ensures,that,all,locations,in,the,given,stream,have,been,written,to,the,underlying,storage;public,abstract,boolean,ensure,translog,synced,stream,translog,location,locations,throws,ioexception
Engine -> public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;1549975032;Ensures that all locations in the given stream have been written to the underlying storage.;public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;ensures,that,all,locations,in,the,given,stream,have,been,written,to,the,underlying,storage;public,abstract,boolean,ensure,translog,synced,stream,translog,location,locations,throws,ioexception
Engine -> public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;1550220204;Ensures that all locations in the given stream have been written to the underlying storage.;public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;ensures,that,all,locations,in,the,given,stream,have,been,written,to,the,underlying,storage;public,abstract,boolean,ensure,translog,synced,stream,translog,location,locations,throws,ioexception
Engine -> public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;1550526771;Ensures that all locations in the given stream have been written to the underlying storage.;public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;ensures,that,all,locations,in,the,given,stream,have,been,written,to,the,underlying,storage;public,abstract,boolean,ensure,translog,synced,stream,translog,location,locations,throws,ioexception
Engine -> public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;1551110274;Ensures that all locations in the given stream have been written to the underlying storage.;public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;ensures,that,all,locations,in,the,given,stream,have,been,written,to,the,underlying,storage;public,abstract,boolean,ensure,translog,synced,stream,translog,location,locations,throws,ioexception
Engine -> public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;1551126708;Ensures that all locations in the given stream have been written to the underlying storage.;public abstract boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException_;ensures,that,all,locations,in,the,given,stream,have,been,written,to,the,underlying,storage;public,abstract,boolean,ensure,translog,synced,stream,translog,location,locations,throws,ioexception
Engine -> public abstract boolean isTranslogSyncNeeded()_;1528762805;Checks if the underlying storage sync is required.;public abstract boolean isTranslogSyncNeeded()_;checks,if,the,underlying,storage,sync,is,required;public,abstract,boolean,is,translog,sync,needed
Engine -> public abstract boolean isTranslogSyncNeeded()_;1531910483;Checks if the underlying storage sync is required.;public abstract boolean isTranslogSyncNeeded()_;checks,if,the,underlying,storage,sync,is,required;public,abstract,boolean,is,translog,sync,needed
Engine -> public abstract boolean isTranslogSyncNeeded()_;1532685069;Checks if the underlying storage sync is required.;public abstract boolean isTranslogSyncNeeded()_;checks,if,the,underlying,storage,sync,is,required;public,abstract,boolean,is,translog,sync,needed
Engine -> public abstract boolean isTranslogSyncNeeded()_;1533295538;Checks if the underlying storage sync is required.;public abstract boolean isTranslogSyncNeeded()_;checks,if,the,underlying,storage,sync,is,required;public,abstract,boolean,is,translog,sync,needed
Engine -> public abstract boolean isTranslogSyncNeeded()_;1535046779;Checks if the underlying storage sync is required.;public abstract boolean isTranslogSyncNeeded()_;checks,if,the,underlying,storage,sync,is,required;public,abstract,boolean,is,translog,sync,needed
Engine -> public abstract boolean isTranslogSyncNeeded()_;1535723122;Checks if the underlying storage sync is required.;public abstract boolean isTranslogSyncNeeded()_;checks,if,the,underlying,storage,sync,is,required;public,abstract,boolean,is,translog,sync,needed
Engine -> public abstract boolean isTranslogSyncNeeded()_;1535965276;Checks if the underlying storage sync is required.;public abstract boolean isTranslogSyncNeeded()_;checks,if,the,underlying,storage,sync,is,required;public,abstract,boolean,is,translog,sync,needed
Engine -> public abstract boolean isTranslogSyncNeeded()_;1536314350;Checks if the underlying storage sync is required.;public abstract boolean isTranslogSyncNeeded()_;checks,if,the,underlying,storage,sync,is,required;public,abstract,boolean,is,translog,sync,needed
Engine -> public abstract boolean isTranslogSyncNeeded()_;1536828374;Checks if the underlying storage sync is required.;public abstract boolean isTranslogSyncNeeded()_;checks,if,the,underlying,storage,sync,is,required;public,abstract,boolean,is,translog,sync,needed
Engine -> public abstract boolean isTranslogSyncNeeded()_;1537371806;Checks if the underlying storage sync is required.;public abstract boolean isTranslogSyncNeeded()_;checks,if,the,underlying,storage,sync,is,required;public,abstract,boolean,is,translog,sync,needed
Engine -> public abstract boolean isTranslogSyncNeeded()_;1537806831;Checks if the underlying storage sync is required.;public abstract boolean isTranslogSyncNeeded()_;checks,if,the,underlying,storage,sync,is,required;public,abstract,boolean,is,translog,sync,needed
Engine -> public abstract boolean isTranslogSyncNeeded()_;1538067637;Checks if the underlying storage sync is required.;public abstract boolean isTranslogSyncNeeded()_;checks,if,the,underlying,storage,sync,is,required;public,abstract,boolean,is,translog,sync,needed
Engine -> public abstract boolean isTranslogSyncNeeded()_;1538424609;Checks if the underlying storage sync is required.;public abstract boolean isTranslogSyncNeeded()_;checks,if,the,underlying,storage,sync,is,required;public,abstract,boolean,is,translog,sync,needed
Engine -> public abstract boolean isTranslogSyncNeeded()_;1539723533;Checks if the underlying storage sync is required.;public abstract boolean isTranslogSyncNeeded()_;checks,if,the,underlying,storage,sync,is,required;public,abstract,boolean,is,translog,sync,needed
Engine -> public abstract boolean isTranslogSyncNeeded()_;1541618615;Checks if the underlying storage sync is required.;public abstract boolean isTranslogSyncNeeded()_;checks,if,the,underlying,storage,sync,is,required;public,abstract,boolean,is,translog,sync,needed
Engine -> public abstract boolean isTranslogSyncNeeded()_;1542697754;Checks if the underlying storage sync is required.;public abstract boolean isTranslogSyncNeeded()_;checks,if,the,underlying,storage,sync,is,required;public,abstract,boolean,is,translog,sync,needed
Engine -> public abstract boolean isTranslogSyncNeeded()_;1543047942;Checks if the underlying storage sync is required.;public abstract boolean isTranslogSyncNeeded()_;checks,if,the,underlying,storage,sync,is,required;public,abstract,boolean,is,translog,sync,needed
Engine -> public abstract boolean isTranslogSyncNeeded()_;1544545090;Checks if the underlying storage sync is required.;public abstract boolean isTranslogSyncNeeded()_;checks,if,the,underlying,storage,sync,is,required;public,abstract,boolean,is,translog,sync,needed
Engine -> public abstract boolean isTranslogSyncNeeded()_;1544684920;Checks if the underlying storage sync is required.;public abstract boolean isTranslogSyncNeeded()_;checks,if,the,underlying,storage,sync,is,required;public,abstract,boolean,is,translog,sync,needed
Engine -> public abstract boolean isTranslogSyncNeeded()_;1545140118;Checks if the underlying storage sync is required.;public abstract boolean isTranslogSyncNeeded()_;checks,if,the,underlying,storage,sync,is,required;public,abstract,boolean,is,translog,sync,needed
Engine -> public abstract boolean isTranslogSyncNeeded()_;1545221705;Checks if the underlying storage sync is required.;public abstract boolean isTranslogSyncNeeded()_;checks,if,the,underlying,storage,sync,is,required;public,abstract,boolean,is,translog,sync,needed
Engine -> public abstract boolean isTranslogSyncNeeded()_;1547332999;Checks if the underlying storage sync is required.;public abstract boolean isTranslogSyncNeeded()_;checks,if,the,underlying,storage,sync,is,required;public,abstract,boolean,is,translog,sync,needed
Engine -> public abstract boolean isTranslogSyncNeeded()_;1548771485;Checks if the underlying storage sync is required.;public abstract boolean isTranslogSyncNeeded()_;checks,if,the,underlying,storage,sync,is,required;public,abstract,boolean,is,translog,sync,needed
Engine -> public abstract boolean isTranslogSyncNeeded()_;1549891630;Checks if the underlying storage sync is required.;public abstract boolean isTranslogSyncNeeded()_;checks,if,the,underlying,storage,sync,is,required;public,abstract,boolean,is,translog,sync,needed
Engine -> public abstract boolean isTranslogSyncNeeded()_;1549975032;Checks if the underlying storage sync is required.;public abstract boolean isTranslogSyncNeeded()_;checks,if,the,underlying,storage,sync,is,required;public,abstract,boolean,is,translog,sync,needed
Engine -> public abstract boolean isTranslogSyncNeeded()_;1550220204;Checks if the underlying storage sync is required.;public abstract boolean isTranslogSyncNeeded()_;checks,if,the,underlying,storage,sync,is,required;public,abstract,boolean,is,translog,sync,needed
Engine -> public abstract boolean isTranslogSyncNeeded()_;1550526771;Checks if the underlying storage sync is required.;public abstract boolean isTranslogSyncNeeded()_;checks,if,the,underlying,storage,sync,is,required;public,abstract,boolean,is,translog,sync,needed
Engine -> public abstract boolean isTranslogSyncNeeded()_;1551110274;Checks if the underlying storage sync is required.;public abstract boolean isTranslogSyncNeeded()_;checks,if,the,underlying,storage,sync,is,required;public,abstract,boolean,is,translog,sync,needed
Engine -> public abstract boolean isTranslogSyncNeeded()_;1551126708;Checks if the underlying storage sync is required.;public abstract boolean isTranslogSyncNeeded()_;checks,if,the,underlying,storage,sync,is,required;public,abstract,boolean,is,translog,sync,needed
Engine -> public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;1528706846;Waits for all operations up to the provided sequence number to complete.__@param seqNo the sequence number that the checkpoint must advance to before this method returns_@throws InterruptedException if the thread was interrupted while blocking on the condition;public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;waits,for,all,operations,up,to,the,provided,sequence,number,to,complete,param,seq,no,the,sequence,number,that,the,checkpoint,must,advance,to,before,this,method,returns,throws,interrupted,exception,if,the,thread,was,interrupted,while,blocking,on,the,condition;public,abstract,void,wait,for,ops,to,complete,long,seq,no,throws,interrupted,exception
Engine -> public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;1528762805;Waits for all operations up to the provided sequence number to complete.__@param seqNo the sequence number that the checkpoint must advance to before this method returns_@throws InterruptedException if the thread was interrupted while blocking on the condition;public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;waits,for,all,operations,up,to,the,provided,sequence,number,to,complete,param,seq,no,the,sequence,number,that,the,checkpoint,must,advance,to,before,this,method,returns,throws,interrupted,exception,if,the,thread,was,interrupted,while,blocking,on,the,condition;public,abstract,void,wait,for,ops,to,complete,long,seq,no,throws,interrupted,exception
Engine -> public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;1531910483;Waits for all operations up to the provided sequence number to complete.__@param seqNo the sequence number that the checkpoint must advance to before this method returns_@throws InterruptedException if the thread was interrupted while blocking on the condition;public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;waits,for,all,operations,up,to,the,provided,sequence,number,to,complete,param,seq,no,the,sequence,number,that,the,checkpoint,must,advance,to,before,this,method,returns,throws,interrupted,exception,if,the,thread,was,interrupted,while,blocking,on,the,condition;public,abstract,void,wait,for,ops,to,complete,long,seq,no,throws,interrupted,exception
Engine -> public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;1532685069;Waits for all operations up to the provided sequence number to complete.__@param seqNo the sequence number that the checkpoint must advance to before this method returns_@throws InterruptedException if the thread was interrupted while blocking on the condition;public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;waits,for,all,operations,up,to,the,provided,sequence,number,to,complete,param,seq,no,the,sequence,number,that,the,checkpoint,must,advance,to,before,this,method,returns,throws,interrupted,exception,if,the,thread,was,interrupted,while,blocking,on,the,condition;public,abstract,void,wait,for,ops,to,complete,long,seq,no,throws,interrupted,exception
Engine -> public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;1533295538;Waits for all operations up to the provided sequence number to complete.__@param seqNo the sequence number that the checkpoint must advance to before this method returns_@throws InterruptedException if the thread was interrupted while blocking on the condition;public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;waits,for,all,operations,up,to,the,provided,sequence,number,to,complete,param,seq,no,the,sequence,number,that,the,checkpoint,must,advance,to,before,this,method,returns,throws,interrupted,exception,if,the,thread,was,interrupted,while,blocking,on,the,condition;public,abstract,void,wait,for,ops,to,complete,long,seq,no,throws,interrupted,exception
Engine -> public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;1535046779;Waits for all operations up to the provided sequence number to complete.__@param seqNo the sequence number that the checkpoint must advance to before this method returns_@throws InterruptedException if the thread was interrupted while blocking on the condition;public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;waits,for,all,operations,up,to,the,provided,sequence,number,to,complete,param,seq,no,the,sequence,number,that,the,checkpoint,must,advance,to,before,this,method,returns,throws,interrupted,exception,if,the,thread,was,interrupted,while,blocking,on,the,condition;public,abstract,void,wait,for,ops,to,complete,long,seq,no,throws,interrupted,exception
Engine -> public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;1535723122;Waits for all operations up to the provided sequence number to complete.__@param seqNo the sequence number that the checkpoint must advance to before this method returns_@throws InterruptedException if the thread was interrupted while blocking on the condition;public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;waits,for,all,operations,up,to,the,provided,sequence,number,to,complete,param,seq,no,the,sequence,number,that,the,checkpoint,must,advance,to,before,this,method,returns,throws,interrupted,exception,if,the,thread,was,interrupted,while,blocking,on,the,condition;public,abstract,void,wait,for,ops,to,complete,long,seq,no,throws,interrupted,exception
Engine -> public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;1535965276;Waits for all operations up to the provided sequence number to complete.__@param seqNo the sequence number that the checkpoint must advance to before this method returns_@throws InterruptedException if the thread was interrupted while blocking on the condition;public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;waits,for,all,operations,up,to,the,provided,sequence,number,to,complete,param,seq,no,the,sequence,number,that,the,checkpoint,must,advance,to,before,this,method,returns,throws,interrupted,exception,if,the,thread,was,interrupted,while,blocking,on,the,condition;public,abstract,void,wait,for,ops,to,complete,long,seq,no,throws,interrupted,exception
Engine -> public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;1536314350;Waits for all operations up to the provided sequence number to complete.__@param seqNo the sequence number that the checkpoint must advance to before this method returns_@throws InterruptedException if the thread was interrupted while blocking on the condition;public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;waits,for,all,operations,up,to,the,provided,sequence,number,to,complete,param,seq,no,the,sequence,number,that,the,checkpoint,must,advance,to,before,this,method,returns,throws,interrupted,exception,if,the,thread,was,interrupted,while,blocking,on,the,condition;public,abstract,void,wait,for,ops,to,complete,long,seq,no,throws,interrupted,exception
Engine -> public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;1536828374;Waits for all operations up to the provided sequence number to complete.__@param seqNo the sequence number that the checkpoint must advance to before this method returns_@throws InterruptedException if the thread was interrupted while blocking on the condition;public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;waits,for,all,operations,up,to,the,provided,sequence,number,to,complete,param,seq,no,the,sequence,number,that,the,checkpoint,must,advance,to,before,this,method,returns,throws,interrupted,exception,if,the,thread,was,interrupted,while,blocking,on,the,condition;public,abstract,void,wait,for,ops,to,complete,long,seq,no,throws,interrupted,exception
Engine -> public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;1537371806;Waits for all operations up to the provided sequence number to complete.__@param seqNo the sequence number that the checkpoint must advance to before this method returns_@throws InterruptedException if the thread was interrupted while blocking on the condition;public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;waits,for,all,operations,up,to,the,provided,sequence,number,to,complete,param,seq,no,the,sequence,number,that,the,checkpoint,must,advance,to,before,this,method,returns,throws,interrupted,exception,if,the,thread,was,interrupted,while,blocking,on,the,condition;public,abstract,void,wait,for,ops,to,complete,long,seq,no,throws,interrupted,exception
Engine -> public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;1537806831;Waits for all operations up to the provided sequence number to complete.__@param seqNo the sequence number that the checkpoint must advance to before this method returns_@throws InterruptedException if the thread was interrupted while blocking on the condition;public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;waits,for,all,operations,up,to,the,provided,sequence,number,to,complete,param,seq,no,the,sequence,number,that,the,checkpoint,must,advance,to,before,this,method,returns,throws,interrupted,exception,if,the,thread,was,interrupted,while,blocking,on,the,condition;public,abstract,void,wait,for,ops,to,complete,long,seq,no,throws,interrupted,exception
Engine -> public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;1538067637;Waits for all operations up to the provided sequence number to complete.__@param seqNo the sequence number that the checkpoint must advance to before this method returns_@throws InterruptedException if the thread was interrupted while blocking on the condition;public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;waits,for,all,operations,up,to,the,provided,sequence,number,to,complete,param,seq,no,the,sequence,number,that,the,checkpoint,must,advance,to,before,this,method,returns,throws,interrupted,exception,if,the,thread,was,interrupted,while,blocking,on,the,condition;public,abstract,void,wait,for,ops,to,complete,long,seq,no,throws,interrupted,exception
Engine -> public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;1538424609;Waits for all operations up to the provided sequence number to complete.__@param seqNo the sequence number that the checkpoint must advance to before this method returns_@throws InterruptedException if the thread was interrupted while blocking on the condition;public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;waits,for,all,operations,up,to,the,provided,sequence,number,to,complete,param,seq,no,the,sequence,number,that,the,checkpoint,must,advance,to,before,this,method,returns,throws,interrupted,exception,if,the,thread,was,interrupted,while,blocking,on,the,condition;public,abstract,void,wait,for,ops,to,complete,long,seq,no,throws,interrupted,exception
Engine -> public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;1539723533;Waits for all operations up to the provided sequence number to complete.__@param seqNo the sequence number that the checkpoint must advance to before this method returns_@throws InterruptedException if the thread was interrupted while blocking on the condition;public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;waits,for,all,operations,up,to,the,provided,sequence,number,to,complete,param,seq,no,the,sequence,number,that,the,checkpoint,must,advance,to,before,this,method,returns,throws,interrupted,exception,if,the,thread,was,interrupted,while,blocking,on,the,condition;public,abstract,void,wait,for,ops,to,complete,long,seq,no,throws,interrupted,exception
Engine -> public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;1541618615;Waits for all operations up to the provided sequence number to complete.__@param seqNo the sequence number that the checkpoint must advance to before this method returns_@throws InterruptedException if the thread was interrupted while blocking on the condition;public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;waits,for,all,operations,up,to,the,provided,sequence,number,to,complete,param,seq,no,the,sequence,number,that,the,checkpoint,must,advance,to,before,this,method,returns,throws,interrupted,exception,if,the,thread,was,interrupted,while,blocking,on,the,condition;public,abstract,void,wait,for,ops,to,complete,long,seq,no,throws,interrupted,exception
Engine -> public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;1542697754;Waits for all operations up to the provided sequence number to complete.__@param seqNo the sequence number that the checkpoint must advance to before this method returns_@throws InterruptedException if the thread was interrupted while blocking on the condition;public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;waits,for,all,operations,up,to,the,provided,sequence,number,to,complete,param,seq,no,the,sequence,number,that,the,checkpoint,must,advance,to,before,this,method,returns,throws,interrupted,exception,if,the,thread,was,interrupted,while,blocking,on,the,condition;public,abstract,void,wait,for,ops,to,complete,long,seq,no,throws,interrupted,exception
Engine -> public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;1543047942;Waits for all operations up to the provided sequence number to complete.__@param seqNo the sequence number that the checkpoint must advance to before this method returns_@throws InterruptedException if the thread was interrupted while blocking on the condition;public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;waits,for,all,operations,up,to,the,provided,sequence,number,to,complete,param,seq,no,the,sequence,number,that,the,checkpoint,must,advance,to,before,this,method,returns,throws,interrupted,exception,if,the,thread,was,interrupted,while,blocking,on,the,condition;public,abstract,void,wait,for,ops,to,complete,long,seq,no,throws,interrupted,exception
Engine -> public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;1544545090;Waits for all operations up to the provided sequence number to complete.__@param seqNo the sequence number that the checkpoint must advance to before this method returns_@throws InterruptedException if the thread was interrupted while blocking on the condition;public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;waits,for,all,operations,up,to,the,provided,sequence,number,to,complete,param,seq,no,the,sequence,number,that,the,checkpoint,must,advance,to,before,this,method,returns,throws,interrupted,exception,if,the,thread,was,interrupted,while,blocking,on,the,condition;public,abstract,void,wait,for,ops,to,complete,long,seq,no,throws,interrupted,exception
Engine -> public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;1544684920;Waits for all operations up to the provided sequence number to complete.__@param seqNo the sequence number that the checkpoint must advance to before this method returns_@throws InterruptedException if the thread was interrupted while blocking on the condition;public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;waits,for,all,operations,up,to,the,provided,sequence,number,to,complete,param,seq,no,the,sequence,number,that,the,checkpoint,must,advance,to,before,this,method,returns,throws,interrupted,exception,if,the,thread,was,interrupted,while,blocking,on,the,condition;public,abstract,void,wait,for,ops,to,complete,long,seq,no,throws,interrupted,exception
Engine -> public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;1545140118;Waits for all operations up to the provided sequence number to complete.__@param seqNo the sequence number that the checkpoint must advance to before this method returns_@throws InterruptedException if the thread was interrupted while blocking on the condition;public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;waits,for,all,operations,up,to,the,provided,sequence,number,to,complete,param,seq,no,the,sequence,number,that,the,checkpoint,must,advance,to,before,this,method,returns,throws,interrupted,exception,if,the,thread,was,interrupted,while,blocking,on,the,condition;public,abstract,void,wait,for,ops,to,complete,long,seq,no,throws,interrupted,exception
Engine -> public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;1545221705;Waits for all operations up to the provided sequence number to complete.__@param seqNo the sequence number that the checkpoint must advance to before this method returns_@throws InterruptedException if the thread was interrupted while blocking on the condition;public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;waits,for,all,operations,up,to,the,provided,sequence,number,to,complete,param,seq,no,the,sequence,number,that,the,checkpoint,must,advance,to,before,this,method,returns,throws,interrupted,exception,if,the,thread,was,interrupted,while,blocking,on,the,condition;public,abstract,void,wait,for,ops,to,complete,long,seq,no,throws,interrupted,exception
Engine -> public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;1547332999;Waits for all operations up to the provided sequence number to complete.__@param seqNo the sequence number that the checkpoint must advance to before this method returns_@throws InterruptedException if the thread was interrupted while blocking on the condition;public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;waits,for,all,operations,up,to,the,provided,sequence,number,to,complete,param,seq,no,the,sequence,number,that,the,checkpoint,must,advance,to,before,this,method,returns,throws,interrupted,exception,if,the,thread,was,interrupted,while,blocking,on,the,condition;public,abstract,void,wait,for,ops,to,complete,long,seq,no,throws,interrupted,exception
Engine -> public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;1548771485;Waits for all operations up to the provided sequence number to complete.__@param seqNo the sequence number that the checkpoint must advance to before this method returns_@throws InterruptedException if the thread was interrupted while blocking on the condition;public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;waits,for,all,operations,up,to,the,provided,sequence,number,to,complete,param,seq,no,the,sequence,number,that,the,checkpoint,must,advance,to,before,this,method,returns,throws,interrupted,exception,if,the,thread,was,interrupted,while,blocking,on,the,condition;public,abstract,void,wait,for,ops,to,complete,long,seq,no,throws,interrupted,exception
Engine -> public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;1549891630;Waits for all operations up to the provided sequence number to complete.__@param seqNo the sequence number that the checkpoint must advance to before this method returns_@throws InterruptedException if the thread was interrupted while blocking on the condition;public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;waits,for,all,operations,up,to,the,provided,sequence,number,to,complete,param,seq,no,the,sequence,number,that,the,checkpoint,must,advance,to,before,this,method,returns,throws,interrupted,exception,if,the,thread,was,interrupted,while,blocking,on,the,condition;public,abstract,void,wait,for,ops,to,complete,long,seq,no,throws,interrupted,exception
Engine -> public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;1549975032;Waits for all operations up to the provided sequence number to complete.__@param seqNo the sequence number that the checkpoint must advance to before this method returns_@throws InterruptedException if the thread was interrupted while blocking on the condition;public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;waits,for,all,operations,up,to,the,provided,sequence,number,to,complete,param,seq,no,the,sequence,number,that,the,checkpoint,must,advance,to,before,this,method,returns,throws,interrupted,exception,if,the,thread,was,interrupted,while,blocking,on,the,condition;public,abstract,void,wait,for,ops,to,complete,long,seq,no,throws,interrupted,exception
Engine -> public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;1550220204;Waits for all operations up to the provided sequence number to complete.__@param seqNo the sequence number that the checkpoint must advance to before this method returns_@throws InterruptedException if the thread was interrupted while blocking on the condition;public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;waits,for,all,operations,up,to,the,provided,sequence,number,to,complete,param,seq,no,the,sequence,number,that,the,checkpoint,must,advance,to,before,this,method,returns,throws,interrupted,exception,if,the,thread,was,interrupted,while,blocking,on,the,condition;public,abstract,void,wait,for,ops,to,complete,long,seq,no,throws,interrupted,exception
Engine -> public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;1550526771;Waits for all operations up to the provided sequence number to complete.__@param seqNo the sequence number that the checkpoint must advance to before this method returns_@throws InterruptedException if the thread was interrupted while blocking on the condition;public abstract void waitForOpsToComplete(long seqNo) throws InterruptedException_;waits,for,all,operations,up,to,the,provided,sequence,number,to,complete,param,seq,no,the,sequence,number,that,the,checkpoint,must,advance,to,before,this,method,returns,throws,interrupted,exception,if,the,thread,was,interrupted,while,blocking,on,the,condition;public,abstract,void,wait,for,ops,to,complete,long,seq,no,throws,interrupted,exception
Engine -> protected static boolean isMergedSegment(LeafReader reader);1524684173;Returns whether a leaf reader comes from a merge (versus flush or addIndexes).;protected static boolean isMergedSegment(LeafReader reader) {_        _        final Map<String, String> diagnostics = Lucene.segmentReader(reader).getSegmentInfo().info.getDiagnostics()__        final String source = diagnostics.get(IndexWriter.SOURCE)__        assert Arrays.asList(IndexWriter.SOURCE_ADDINDEXES_READERS, IndexWriter.SOURCE_FLUSH,_                IndexWriter.SOURCE_MERGE).contains(source) : "Unknown source " + source__        return IndexWriter.SOURCE_MERGE.equals(source)__    };returns,whether,a,leaf,reader,comes,from,a,merge,versus,flush,or,add,indexes;protected,static,boolean,is,merged,segment,leaf,reader,reader,final,map,string,string,diagnostics,lucene,segment,reader,reader,get,segment,info,info,get,diagnostics,final,string,source,diagnostics,get,index,writer,source,assert,arrays,as,list,index,writer,index,writer,index,writer,contains,source,unknown,source,source,return,index,writer,equals,source
Engine -> protected static boolean isMergedSegment(LeafReader reader);1525162917;Returns whether a leaf reader comes from a merge (versus flush or addIndexes).;protected static boolean isMergedSegment(LeafReader reader) {_        _        final Map<String, String> diagnostics = Lucene.segmentReader(reader).getSegmentInfo().info.getDiagnostics()__        final String source = diagnostics.get(IndexWriter.SOURCE)__        assert Arrays.asList(IndexWriter.SOURCE_ADDINDEXES_READERS, IndexWriter.SOURCE_FLUSH,_                IndexWriter.SOURCE_MERGE).contains(source) : "Unknown source " + source__        return IndexWriter.SOURCE_MERGE.equals(source)__    };returns,whether,a,leaf,reader,comes,from,a,merge,versus,flush,or,add,indexes;protected,static,boolean,is,merged,segment,leaf,reader,reader,final,map,string,string,diagnostics,lucene,segment,reader,reader,get,segment,info,info,get,diagnostics,final,string,source,diagnostics,get,index,writer,source,assert,arrays,as,list,index,writer,index,writer,index,writer,contains,source,unknown,source,source,return,index,writer,equals,source
Engine -> protected static boolean isMergedSegment(LeafReader reader);1525334055;Returns whether a leaf reader comes from a merge (versus flush or addIndexes).;protected static boolean isMergedSegment(LeafReader reader) {_        _        final Map<String, String> diagnostics = Lucene.segmentReader(reader).getSegmentInfo().info.getDiagnostics()__        final String source = diagnostics.get(IndexWriter.SOURCE)__        assert Arrays.asList(IndexWriter.SOURCE_ADDINDEXES_READERS, IndexWriter.SOURCE_FLUSH,_                IndexWriter.SOURCE_MERGE).contains(source) : "Unknown source " + source__        return IndexWriter.SOURCE_MERGE.equals(source)__    };returns,whether,a,leaf,reader,comes,from,a,merge,versus,flush,or,add,indexes;protected,static,boolean,is,merged,segment,leaf,reader,reader,final,map,string,string,diagnostics,lucene,segment,reader,reader,get,segment,info,info,get,diagnostics,final,string,source,diagnostics,get,index,writer,source,assert,arrays,as,list,index,writer,index,writer,index,writer,contains,source,unknown,source,source,return,index,writer,equals,source
Engine -> protected static boolean isMergedSegment(LeafReader reader);1527583663;Returns whether a leaf reader comes from a merge (versus flush or addIndexes).;protected static boolean isMergedSegment(LeafReader reader) {_        _        final Map<String, String> diagnostics = Lucene.segmentReader(reader).getSegmentInfo().info.getDiagnostics()__        final String source = diagnostics.get(IndexWriter.SOURCE)__        assert Arrays.asList(IndexWriter.SOURCE_ADDINDEXES_READERS, IndexWriter.SOURCE_FLUSH,_                IndexWriter.SOURCE_MERGE).contains(source) : "Unknown source " + source__        return IndexWriter.SOURCE_MERGE.equals(source)__    };returns,whether,a,leaf,reader,comes,from,a,merge,versus,flush,or,add,indexes;protected,static,boolean,is,merged,segment,leaf,reader,reader,final,map,string,string,diagnostics,lucene,segment,reader,reader,get,segment,info,info,get,diagnostics,final,string,source,diagnostics,get,index,writer,source,assert,arrays,as,list,index,writer,index,writer,index,writer,contains,source,unknown,source,source,return,index,writer,equals,source
Engine -> protected static boolean isMergedSegment(LeafReader reader);1528706846;Returns whether a leaf reader comes from a merge (versus flush or addIndexes).;protected static boolean isMergedSegment(LeafReader reader) {_        _        final Map<String, String> diagnostics = Lucene.segmentReader(reader).getSegmentInfo().info.getDiagnostics()__        final String source = diagnostics.get(IndexWriter.SOURCE)__        assert Arrays.asList(IndexWriter.SOURCE_ADDINDEXES_READERS, IndexWriter.SOURCE_FLUSH,_                IndexWriter.SOURCE_MERGE).contains(source) : "Unknown source " + source__        return IndexWriter.SOURCE_MERGE.equals(source)__    };returns,whether,a,leaf,reader,comes,from,a,merge,versus,flush,or,add,indexes;protected,static,boolean,is,merged,segment,leaf,reader,reader,final,map,string,string,diagnostics,lucene,segment,reader,reader,get,segment,info,info,get,diagnostics,final,string,source,diagnostics,get,index,writer,source,assert,arrays,as,list,index,writer,index,writer,index,writer,contains,source,unknown,source,source,return,index,writer,equals,source
Engine -> protected static boolean isMergedSegment(LeafReader reader);1528762805;Returns whether a leaf reader comes from a merge (versus flush or addIndexes).;protected static boolean isMergedSegment(LeafReader reader) {_        _        final Map<String, String> diagnostics = Lucene.segmentReader(reader).getSegmentInfo().info.getDiagnostics()__        final String source = diagnostics.get(IndexWriter.SOURCE)__        assert Arrays.asList(IndexWriter.SOURCE_ADDINDEXES_READERS, IndexWriter.SOURCE_FLUSH,_                IndexWriter.SOURCE_MERGE).contains(source) : "Unknown source " + source__        return IndexWriter.SOURCE_MERGE.equals(source)__    };returns,whether,a,leaf,reader,comes,from,a,merge,versus,flush,or,add,indexes;protected,static,boolean,is,merged,segment,leaf,reader,reader,final,map,string,string,diagnostics,lucene,segment,reader,reader,get,segment,info,info,get,diagnostics,final,string,source,diagnostics,get,index,writer,source,assert,arrays,as,list,index,writer,index,writer,index,writer,contains,source,unknown,source,source,return,index,writer,equals,source
Engine -> protected static boolean isMergedSegment(LeafReader reader);1531910483;Returns whether a leaf reader comes from a merge (versus flush or addIndexes).;protected static boolean isMergedSegment(LeafReader reader) {_        _        final Map<String, String> diagnostics = Lucene.segmentReader(reader).getSegmentInfo().info.getDiagnostics()__        final String source = diagnostics.get(IndexWriter.SOURCE)__        assert Arrays.asList(IndexWriter.SOURCE_ADDINDEXES_READERS, IndexWriter.SOURCE_FLUSH,_                IndexWriter.SOURCE_MERGE).contains(source) : "Unknown source " + source__        return IndexWriter.SOURCE_MERGE.equals(source)__    };returns,whether,a,leaf,reader,comes,from,a,merge,versus,flush,or,add,indexes;protected,static,boolean,is,merged,segment,leaf,reader,reader,final,map,string,string,diagnostics,lucene,segment,reader,reader,get,segment,info,info,get,diagnostics,final,string,source,diagnostics,get,index,writer,source,assert,arrays,as,list,index,writer,index,writer,index,writer,contains,source,unknown,source,source,return,index,writer,equals,source
Engine -> protected static boolean isMergedSegment(LeafReader reader);1532685069;Returns whether a leaf reader comes from a merge (versus flush or addIndexes).;protected static boolean isMergedSegment(LeafReader reader) {_        _        final Map<String, String> diagnostics = Lucene.segmentReader(reader).getSegmentInfo().info.getDiagnostics()__        final String source = diagnostics.get(IndexWriter.SOURCE)__        assert Arrays.asList(IndexWriter.SOURCE_ADDINDEXES_READERS, IndexWriter.SOURCE_FLUSH,_                IndexWriter.SOURCE_MERGE).contains(source) : "Unknown source " + source__        return IndexWriter.SOURCE_MERGE.equals(source)__    };returns,whether,a,leaf,reader,comes,from,a,merge,versus,flush,or,add,indexes;protected,static,boolean,is,merged,segment,leaf,reader,reader,final,map,string,string,diagnostics,lucene,segment,reader,reader,get,segment,info,info,get,diagnostics,final,string,source,diagnostics,get,index,writer,source,assert,arrays,as,list,index,writer,index,writer,index,writer,contains,source,unknown,source,source,return,index,writer,equals,source
Engine -> protected static boolean isMergedSegment(LeafReader reader);1533295538;Returns whether a leaf reader comes from a merge (versus flush or addIndexes).;protected static boolean isMergedSegment(LeafReader reader) {_        _        final Map<String, String> diagnostics = Lucene.segmentReader(reader).getSegmentInfo().info.getDiagnostics()__        final String source = diagnostics.get(IndexWriter.SOURCE)__        assert Arrays.asList(IndexWriter.SOURCE_ADDINDEXES_READERS, IndexWriter.SOURCE_FLUSH,_                IndexWriter.SOURCE_MERGE).contains(source) : "Unknown source " + source__        return IndexWriter.SOURCE_MERGE.equals(source)__    };returns,whether,a,leaf,reader,comes,from,a,merge,versus,flush,or,add,indexes;protected,static,boolean,is,merged,segment,leaf,reader,reader,final,map,string,string,diagnostics,lucene,segment,reader,reader,get,segment,info,info,get,diagnostics,final,string,source,diagnostics,get,index,writer,source,assert,arrays,as,list,index,writer,index,writer,index,writer,contains,source,unknown,source,source,return,index,writer,equals,source
Engine -> protected static boolean isMergedSegment(LeafReader reader);1535046779;Returns whether a leaf reader comes from a merge (versus flush or addIndexes).;protected static boolean isMergedSegment(LeafReader reader) {_        _        final Map<String, String> diagnostics = Lucene.segmentReader(reader).getSegmentInfo().info.getDiagnostics()__        final String source = diagnostics.get(IndexWriter.SOURCE)__        assert Arrays.asList(IndexWriter.SOURCE_ADDINDEXES_READERS, IndexWriter.SOURCE_FLUSH,_                IndexWriter.SOURCE_MERGE).contains(source) : "Unknown source " + source__        return IndexWriter.SOURCE_MERGE.equals(source)__    };returns,whether,a,leaf,reader,comes,from,a,merge,versus,flush,or,add,indexes;protected,static,boolean,is,merged,segment,leaf,reader,reader,final,map,string,string,diagnostics,lucene,segment,reader,reader,get,segment,info,info,get,diagnostics,final,string,source,diagnostics,get,index,writer,source,assert,arrays,as,list,index,writer,index,writer,index,writer,contains,source,unknown,source,source,return,index,writer,equals,source
Engine -> protected static boolean isMergedSegment(LeafReader reader);1535723122;Returns whether a leaf reader comes from a merge (versus flush or addIndexes).;protected static boolean isMergedSegment(LeafReader reader) {_        _        final Map<String, String> diagnostics = Lucene.segmentReader(reader).getSegmentInfo().info.getDiagnostics()__        final String source = diagnostics.get(IndexWriter.SOURCE)__        assert Arrays.asList(IndexWriter.SOURCE_ADDINDEXES_READERS, IndexWriter.SOURCE_FLUSH,_                IndexWriter.SOURCE_MERGE).contains(source) : "Unknown source " + source__        return IndexWriter.SOURCE_MERGE.equals(source)__    };returns,whether,a,leaf,reader,comes,from,a,merge,versus,flush,or,add,indexes;protected,static,boolean,is,merged,segment,leaf,reader,reader,final,map,string,string,diagnostics,lucene,segment,reader,reader,get,segment,info,info,get,diagnostics,final,string,source,diagnostics,get,index,writer,source,assert,arrays,as,list,index,writer,index,writer,index,writer,contains,source,unknown,source,source,return,index,writer,equals,source
Engine -> protected static boolean isMergedSegment(LeafReader reader);1535965276;Returns whether a leaf reader comes from a merge (versus flush or addIndexes).;protected static boolean isMergedSegment(LeafReader reader) {_        _        final Map<String, String> diagnostics = Lucene.segmentReader(reader).getSegmentInfo().info.getDiagnostics()__        final String source = diagnostics.get(IndexWriter.SOURCE)__        assert Arrays.asList(IndexWriter.SOURCE_ADDINDEXES_READERS, IndexWriter.SOURCE_FLUSH,_                IndexWriter.SOURCE_MERGE).contains(source) : "Unknown source " + source__        return IndexWriter.SOURCE_MERGE.equals(source)__    };returns,whether,a,leaf,reader,comes,from,a,merge,versus,flush,or,add,indexes;protected,static,boolean,is,merged,segment,leaf,reader,reader,final,map,string,string,diagnostics,lucene,segment,reader,reader,get,segment,info,info,get,diagnostics,final,string,source,diagnostics,get,index,writer,source,assert,arrays,as,list,index,writer,index,writer,index,writer,contains,source,unknown,source,source,return,index,writer,equals,source
Engine -> protected static boolean isMergedSegment(LeafReader reader);1536314350;Returns whether a leaf reader comes from a merge (versus flush or addIndexes).;protected static boolean isMergedSegment(LeafReader reader) {_        _        final Map<String, String> diagnostics = Lucene.segmentReader(reader).getSegmentInfo().info.getDiagnostics()__        final String source = diagnostics.get(IndexWriter.SOURCE)__        assert Arrays.asList(IndexWriter.SOURCE_ADDINDEXES_READERS, IndexWriter.SOURCE_FLUSH,_                IndexWriter.SOURCE_MERGE).contains(source) : "Unknown source " + source__        return IndexWriter.SOURCE_MERGE.equals(source)__    };returns,whether,a,leaf,reader,comes,from,a,merge,versus,flush,or,add,indexes;protected,static,boolean,is,merged,segment,leaf,reader,reader,final,map,string,string,diagnostics,lucene,segment,reader,reader,get,segment,info,info,get,diagnostics,final,string,source,diagnostics,get,index,writer,source,assert,arrays,as,list,index,writer,index,writer,index,writer,contains,source,unknown,source,source,return,index,writer,equals,source
Engine -> protected static boolean isMergedSegment(LeafReader reader);1536828374;Returns whether a leaf reader comes from a merge (versus flush or addIndexes).;protected static boolean isMergedSegment(LeafReader reader) {_        _        final Map<String, String> diagnostics = Lucene.segmentReader(reader).getSegmentInfo().info.getDiagnostics()__        final String source = diagnostics.get(IndexWriter.SOURCE)__        assert Arrays.asList(IndexWriter.SOURCE_ADDINDEXES_READERS, IndexWriter.SOURCE_FLUSH,_                IndexWriter.SOURCE_MERGE).contains(source) : "Unknown source " + source__        return IndexWriter.SOURCE_MERGE.equals(source)__    };returns,whether,a,leaf,reader,comes,from,a,merge,versus,flush,or,add,indexes;protected,static,boolean,is,merged,segment,leaf,reader,reader,final,map,string,string,diagnostics,lucene,segment,reader,reader,get,segment,info,info,get,diagnostics,final,string,source,diagnostics,get,index,writer,source,assert,arrays,as,list,index,writer,index,writer,index,writer,contains,source,unknown,source,source,return,index,writer,equals,source
Engine -> protected static boolean isMergedSegment(LeafReader reader);1537371806;Returns whether a leaf reader comes from a merge (versus flush or addIndexes).;protected static boolean isMergedSegment(LeafReader reader) {_        _        final Map<String, String> diagnostics = Lucene.segmentReader(reader).getSegmentInfo().info.getDiagnostics()__        final String source = diagnostics.get(IndexWriter.SOURCE)__        assert Arrays.asList(IndexWriter.SOURCE_ADDINDEXES_READERS, IndexWriter.SOURCE_FLUSH,_                IndexWriter.SOURCE_MERGE).contains(source) : "Unknown source " + source__        return IndexWriter.SOURCE_MERGE.equals(source)__    };returns,whether,a,leaf,reader,comes,from,a,merge,versus,flush,or,add,indexes;protected,static,boolean,is,merged,segment,leaf,reader,reader,final,map,string,string,diagnostics,lucene,segment,reader,reader,get,segment,info,info,get,diagnostics,final,string,source,diagnostics,get,index,writer,source,assert,arrays,as,list,index,writer,index,writer,index,writer,contains,source,unknown,source,source,return,index,writer,equals,source
Engine -> protected static boolean isMergedSegment(LeafReader reader);1537806831;Returns whether a leaf reader comes from a merge (versus flush or addIndexes).;protected static boolean isMergedSegment(LeafReader reader) {_        _        final Map<String, String> diagnostics = Lucene.segmentReader(reader).getSegmentInfo().info.getDiagnostics()__        final String source = diagnostics.get(IndexWriter.SOURCE)__        assert Arrays.asList(IndexWriter.SOURCE_ADDINDEXES_READERS, IndexWriter.SOURCE_FLUSH,_                IndexWriter.SOURCE_MERGE).contains(source) : "Unknown source " + source__        return IndexWriter.SOURCE_MERGE.equals(source)__    };returns,whether,a,leaf,reader,comes,from,a,merge,versus,flush,or,add,indexes;protected,static,boolean,is,merged,segment,leaf,reader,reader,final,map,string,string,diagnostics,lucene,segment,reader,reader,get,segment,info,info,get,diagnostics,final,string,source,diagnostics,get,index,writer,source,assert,arrays,as,list,index,writer,index,writer,index,writer,contains,source,unknown,source,source,return,index,writer,equals,source
Engine -> protected static boolean isMergedSegment(LeafReader reader);1538067637;Returns whether a leaf reader comes from a merge (versus flush or addIndexes).;protected static boolean isMergedSegment(LeafReader reader) {_        _        final Map<String, String> diagnostics = Lucene.segmentReader(reader).getSegmentInfo().info.getDiagnostics()__        final String source = diagnostics.get(IndexWriter.SOURCE)__        assert Arrays.asList(IndexWriter.SOURCE_ADDINDEXES_READERS, IndexWriter.SOURCE_FLUSH,_                IndexWriter.SOURCE_MERGE).contains(source) : "Unknown source " + source__        return IndexWriter.SOURCE_MERGE.equals(source)__    };returns,whether,a,leaf,reader,comes,from,a,merge,versus,flush,or,add,indexes;protected,static,boolean,is,merged,segment,leaf,reader,reader,final,map,string,string,diagnostics,lucene,segment,reader,reader,get,segment,info,info,get,diagnostics,final,string,source,diagnostics,get,index,writer,source,assert,arrays,as,list,index,writer,index,writer,index,writer,contains,source,unknown,source,source,return,index,writer,equals,source
Engine -> protected static boolean isMergedSegment(LeafReader reader);1538424609;Returns whether a leaf reader comes from a merge (versus flush or addIndexes).;protected static boolean isMergedSegment(LeafReader reader) {_        _        final Map<String, String> diagnostics = Lucene.segmentReader(reader).getSegmentInfo().info.getDiagnostics()__        final String source = diagnostics.get(IndexWriter.SOURCE)__        assert Arrays.asList(IndexWriter.SOURCE_ADDINDEXES_READERS, IndexWriter.SOURCE_FLUSH,_                IndexWriter.SOURCE_MERGE).contains(source) : "Unknown source " + source__        return IndexWriter.SOURCE_MERGE.equals(source)__    };returns,whether,a,leaf,reader,comes,from,a,merge,versus,flush,or,add,indexes;protected,static,boolean,is,merged,segment,leaf,reader,reader,final,map,string,string,diagnostics,lucene,segment,reader,reader,get,segment,info,info,get,diagnostics,final,string,source,diagnostics,get,index,writer,source,assert,arrays,as,list,index,writer,index,writer,index,writer,contains,source,unknown,source,source,return,index,writer,equals,source
Engine -> protected static boolean isMergedSegment(LeafReader reader);1539723533;Returns whether a leaf reader comes from a merge (versus flush or addIndexes).;protected static boolean isMergedSegment(LeafReader reader) {_        _        final Map<String, String> diagnostics = Lucene.segmentReader(reader).getSegmentInfo().info.getDiagnostics()__        final String source = diagnostics.get(IndexWriter.SOURCE)__        assert Arrays.asList(IndexWriter.SOURCE_ADDINDEXES_READERS, IndexWriter.SOURCE_FLUSH,_                IndexWriter.SOURCE_MERGE).contains(source) : "Unknown source " + source__        return IndexWriter.SOURCE_MERGE.equals(source)__    };returns,whether,a,leaf,reader,comes,from,a,merge,versus,flush,or,add,indexes;protected,static,boolean,is,merged,segment,leaf,reader,reader,final,map,string,string,diagnostics,lucene,segment,reader,reader,get,segment,info,info,get,diagnostics,final,string,source,diagnostics,get,index,writer,source,assert,arrays,as,list,index,writer,index,writer,index,writer,contains,source,unknown,source,source,return,index,writer,equals,source
Engine -> protected static boolean isMergedSegment(LeafReader reader);1541618615;Returns whether a leaf reader comes from a merge (versus flush or addIndexes).;protected static boolean isMergedSegment(LeafReader reader) {_        _        final Map<String, String> diagnostics = Lucene.segmentReader(reader).getSegmentInfo().info.getDiagnostics()__        final String source = diagnostics.get(IndexWriter.SOURCE)__        assert Arrays.asList(IndexWriter.SOURCE_ADDINDEXES_READERS, IndexWriter.SOURCE_FLUSH,_                IndexWriter.SOURCE_MERGE).contains(source) : "Unknown source " + source__        return IndexWriter.SOURCE_MERGE.equals(source)__    };returns,whether,a,leaf,reader,comes,from,a,merge,versus,flush,or,add,indexes;protected,static,boolean,is,merged,segment,leaf,reader,reader,final,map,string,string,diagnostics,lucene,segment,reader,reader,get,segment,info,info,get,diagnostics,final,string,source,diagnostics,get,index,writer,source,assert,arrays,as,list,index,writer,index,writer,index,writer,contains,source,unknown,source,source,return,index,writer,equals,source
Engine -> protected static boolean isMergedSegment(LeafReader reader);1542697754;Returns whether a leaf reader comes from a merge (versus flush or addIndexes).;protected static boolean isMergedSegment(LeafReader reader) {_        _        final Map<String, String> diagnostics = Lucene.segmentReader(reader).getSegmentInfo().info.getDiagnostics()__        final String source = diagnostics.get(IndexWriter.SOURCE)__        assert Arrays.asList(IndexWriter.SOURCE_ADDINDEXES_READERS, IndexWriter.SOURCE_FLUSH,_                IndexWriter.SOURCE_MERGE).contains(source) : "Unknown source " + source__        return IndexWriter.SOURCE_MERGE.equals(source)__    };returns,whether,a,leaf,reader,comes,from,a,merge,versus,flush,or,add,indexes;protected,static,boolean,is,merged,segment,leaf,reader,reader,final,map,string,string,diagnostics,lucene,segment,reader,reader,get,segment,info,info,get,diagnostics,final,string,source,diagnostics,get,index,writer,source,assert,arrays,as,list,index,writer,index,writer,index,writer,contains,source,unknown,source,source,return,index,writer,equals,source
Engine -> protected static boolean isMergedSegment(LeafReader reader);1543047942;Returns whether a leaf reader comes from a merge (versus flush or addIndexes).;protected static boolean isMergedSegment(LeafReader reader) {_        _        final Map<String, String> diagnostics = Lucene.segmentReader(reader).getSegmentInfo().info.getDiagnostics()__        final String source = diagnostics.get(IndexWriter.SOURCE)__        assert Arrays.asList(IndexWriter.SOURCE_ADDINDEXES_READERS, IndexWriter.SOURCE_FLUSH,_                IndexWriter.SOURCE_MERGE).contains(source) : "Unknown source " + source__        return IndexWriter.SOURCE_MERGE.equals(source)__    };returns,whether,a,leaf,reader,comes,from,a,merge,versus,flush,or,add,indexes;protected,static,boolean,is,merged,segment,leaf,reader,reader,final,map,string,string,diagnostics,lucene,segment,reader,reader,get,segment,info,info,get,diagnostics,final,string,source,diagnostics,get,index,writer,source,assert,arrays,as,list,index,writer,index,writer,index,writer,contains,source,unknown,source,source,return,index,writer,equals,source
Engine -> protected static boolean isMergedSegment(LeafReader reader);1544545090;Returns whether a leaf reader comes from a merge (versus flush or addIndexes).;protected static boolean isMergedSegment(LeafReader reader) {_        _        final Map<String, String> diagnostics = Lucene.segmentReader(reader).getSegmentInfo().info.getDiagnostics()__        final String source = diagnostics.get(IndexWriter.SOURCE)__        assert Arrays.asList(IndexWriter.SOURCE_ADDINDEXES_READERS, IndexWriter.SOURCE_FLUSH,_                IndexWriter.SOURCE_MERGE).contains(source) : "Unknown source " + source__        return IndexWriter.SOURCE_MERGE.equals(source)__    };returns,whether,a,leaf,reader,comes,from,a,merge,versus,flush,or,add,indexes;protected,static,boolean,is,merged,segment,leaf,reader,reader,final,map,string,string,diagnostics,lucene,segment,reader,reader,get,segment,info,info,get,diagnostics,final,string,source,diagnostics,get,index,writer,source,assert,arrays,as,list,index,writer,index,writer,index,writer,contains,source,unknown,source,source,return,index,writer,equals,source
Engine -> protected static boolean isMergedSegment(LeafReader reader);1544684920;Returns whether a leaf reader comes from a merge (versus flush or addIndexes).;protected static boolean isMergedSegment(LeafReader reader) {_        _        final Map<String, String> diagnostics = Lucene.segmentReader(reader).getSegmentInfo().info.getDiagnostics()__        final String source = diagnostics.get(IndexWriter.SOURCE)__        assert Arrays.asList(IndexWriter.SOURCE_ADDINDEXES_READERS, IndexWriter.SOURCE_FLUSH,_                IndexWriter.SOURCE_MERGE).contains(source) : "Unknown source " + source__        return IndexWriter.SOURCE_MERGE.equals(source)__    };returns,whether,a,leaf,reader,comes,from,a,merge,versus,flush,or,add,indexes;protected,static,boolean,is,merged,segment,leaf,reader,reader,final,map,string,string,diagnostics,lucene,segment,reader,reader,get,segment,info,info,get,diagnostics,final,string,source,diagnostics,get,index,writer,source,assert,arrays,as,list,index,writer,index,writer,index,writer,contains,source,unknown,source,source,return,index,writer,equals,source
Engine -> protected static boolean isMergedSegment(LeafReader reader);1545140118;Returns whether a leaf reader comes from a merge (versus flush or addIndexes).;protected static boolean isMergedSegment(LeafReader reader) {_        _        final Map<String, String> diagnostics = Lucene.segmentReader(reader).getSegmentInfo().info.getDiagnostics()__        final String source = diagnostics.get(IndexWriter.SOURCE)__        assert Arrays.asList(IndexWriter.SOURCE_ADDINDEXES_READERS, IndexWriter.SOURCE_FLUSH,_                IndexWriter.SOURCE_MERGE).contains(source) : "Unknown source " + source__        return IndexWriter.SOURCE_MERGE.equals(source)__    };returns,whether,a,leaf,reader,comes,from,a,merge,versus,flush,or,add,indexes;protected,static,boolean,is,merged,segment,leaf,reader,reader,final,map,string,string,diagnostics,lucene,segment,reader,reader,get,segment,info,info,get,diagnostics,final,string,source,diagnostics,get,index,writer,source,assert,arrays,as,list,index,writer,index,writer,index,writer,contains,source,unknown,source,source,return,index,writer,equals,source
Engine -> protected static boolean isMergedSegment(LeafReader reader);1545221705;Returns whether a leaf reader comes from a merge (versus flush or addIndexes).;protected static boolean isMergedSegment(LeafReader reader) {_        _        final Map<String, String> diagnostics = Lucene.segmentReader(reader).getSegmentInfo().info.getDiagnostics()__        final String source = diagnostics.get(IndexWriter.SOURCE)__        assert Arrays.asList(IndexWriter.SOURCE_ADDINDEXES_READERS, IndexWriter.SOURCE_FLUSH,_                IndexWriter.SOURCE_MERGE).contains(source) : "Unknown source " + source__        return IndexWriter.SOURCE_MERGE.equals(source)__    };returns,whether,a,leaf,reader,comes,from,a,merge,versus,flush,or,add,indexes;protected,static,boolean,is,merged,segment,leaf,reader,reader,final,map,string,string,diagnostics,lucene,segment,reader,reader,get,segment,info,info,get,diagnostics,final,string,source,diagnostics,get,index,writer,source,assert,arrays,as,list,index,writer,index,writer,index,writer,contains,source,unknown,source,source,return,index,writer,equals,source
Engine -> protected static boolean isMergedSegment(LeafReader reader);1547332999;Returns whether a leaf reader comes from a merge (versus flush or addIndexes).;protected static boolean isMergedSegment(LeafReader reader) {_        _        final Map<String, String> diagnostics = Lucene.segmentReader(reader).getSegmentInfo().info.getDiagnostics()__        final String source = diagnostics.get(IndexWriter.SOURCE)__        assert Arrays.asList(IndexWriter.SOURCE_ADDINDEXES_READERS, IndexWriter.SOURCE_FLUSH,_                IndexWriter.SOURCE_MERGE).contains(source) : "Unknown source " + source__        return IndexWriter.SOURCE_MERGE.equals(source)__    };returns,whether,a,leaf,reader,comes,from,a,merge,versus,flush,or,add,indexes;protected,static,boolean,is,merged,segment,leaf,reader,reader,final,map,string,string,diagnostics,lucene,segment,reader,reader,get,segment,info,info,get,diagnostics,final,string,source,diagnostics,get,index,writer,source,assert,arrays,as,list,index,writer,index,writer,index,writer,contains,source,unknown,source,source,return,index,writer,equals,source
Engine -> protected static boolean isMergedSegment(LeafReader reader);1548771485;Returns whether a leaf reader comes from a merge (versus flush or addIndexes).;protected static boolean isMergedSegment(LeafReader reader) {_        _        final Map<String, String> diagnostics = Lucene.segmentReader(reader).getSegmentInfo().info.getDiagnostics()__        final String source = diagnostics.get(IndexWriter.SOURCE)__        assert Arrays.asList(IndexWriter.SOURCE_ADDINDEXES_READERS, IndexWriter.SOURCE_FLUSH,_                IndexWriter.SOURCE_MERGE).contains(source) : "Unknown source " + source__        return IndexWriter.SOURCE_MERGE.equals(source)__    };returns,whether,a,leaf,reader,comes,from,a,merge,versus,flush,or,add,indexes;protected,static,boolean,is,merged,segment,leaf,reader,reader,final,map,string,string,diagnostics,lucene,segment,reader,reader,get,segment,info,info,get,diagnostics,final,string,source,diagnostics,get,index,writer,source,assert,arrays,as,list,index,writer,index,writer,index,writer,contains,source,unknown,source,source,return,index,writer,equals,source
Engine -> protected static boolean isMergedSegment(LeafReader reader);1549891630;Returns whether a leaf reader comes from a merge (versus flush or addIndexes).;protected static boolean isMergedSegment(LeafReader reader) {_        _        final Map<String, String> diagnostics = Lucene.segmentReader(reader).getSegmentInfo().info.getDiagnostics()__        final String source = diagnostics.get(IndexWriter.SOURCE)__        assert Arrays.asList(IndexWriter.SOURCE_ADDINDEXES_READERS, IndexWriter.SOURCE_FLUSH,_                IndexWriter.SOURCE_MERGE).contains(source) : "Unknown source " + source__        return IndexWriter.SOURCE_MERGE.equals(source)__    };returns,whether,a,leaf,reader,comes,from,a,merge,versus,flush,or,add,indexes;protected,static,boolean,is,merged,segment,leaf,reader,reader,final,map,string,string,diagnostics,lucene,segment,reader,reader,get,segment,info,info,get,diagnostics,final,string,source,diagnostics,get,index,writer,source,assert,arrays,as,list,index,writer,index,writer,index,writer,contains,source,unknown,source,source,return,index,writer,equals,source
Engine -> protected static boolean isMergedSegment(LeafReader reader);1549975032;Returns whether a leaf reader comes from a merge (versus flush or addIndexes).;protected static boolean isMergedSegment(LeafReader reader) {_        _        final Map<String, String> diagnostics = Lucene.segmentReader(reader).getSegmentInfo().info.getDiagnostics()__        final String source = diagnostics.get(IndexWriter.SOURCE)__        assert Arrays.asList(IndexWriter.SOURCE_ADDINDEXES_READERS, IndexWriter.SOURCE_FLUSH,_                IndexWriter.SOURCE_MERGE).contains(source) : "Unknown source " + source__        return IndexWriter.SOURCE_MERGE.equals(source)__    };returns,whether,a,leaf,reader,comes,from,a,merge,versus,flush,or,add,indexes;protected,static,boolean,is,merged,segment,leaf,reader,reader,final,map,string,string,diagnostics,lucene,segment,reader,reader,get,segment,info,info,get,diagnostics,final,string,source,diagnostics,get,index,writer,source,assert,arrays,as,list,index,writer,index,writer,index,writer,contains,source,unknown,source,source,return,index,writer,equals,source
Engine -> protected static boolean isMergedSegment(LeafReader reader);1550220204;Returns whether a leaf reader comes from a merge (versus flush or addIndexes).;protected static boolean isMergedSegment(LeafReader reader) {_        _        final Map<String, String> diagnostics = Lucene.segmentReader(reader).getSegmentInfo().info.getDiagnostics()__        final String source = diagnostics.get(IndexWriter.SOURCE)__        assert Arrays.asList(IndexWriter.SOURCE_ADDINDEXES_READERS, IndexWriter.SOURCE_FLUSH,_                IndexWriter.SOURCE_MERGE).contains(source) : "Unknown source " + source__        return IndexWriter.SOURCE_MERGE.equals(source)__    };returns,whether,a,leaf,reader,comes,from,a,merge,versus,flush,or,add,indexes;protected,static,boolean,is,merged,segment,leaf,reader,reader,final,map,string,string,diagnostics,lucene,segment,reader,reader,get,segment,info,info,get,diagnostics,final,string,source,diagnostics,get,index,writer,source,assert,arrays,as,list,index,writer,index,writer,index,writer,contains,source,unknown,source,source,return,index,writer,equals,source
Engine -> protected static boolean isMergedSegment(LeafReader reader);1550526771;Returns whether a leaf reader comes from a merge (versus flush or addIndexes).;protected static boolean isMergedSegment(LeafReader reader) {_        _        final Map<String, String> diagnostics = Lucene.segmentReader(reader).getSegmentInfo().info.getDiagnostics()__        final String source = diagnostics.get(IndexWriter.SOURCE)__        assert Arrays.asList(IndexWriter.SOURCE_ADDINDEXES_READERS, IndexWriter.SOURCE_FLUSH,_                IndexWriter.SOURCE_MERGE).contains(source) : "Unknown source " + source__        return IndexWriter.SOURCE_MERGE.equals(source)__    };returns,whether,a,leaf,reader,comes,from,a,merge,versus,flush,or,add,indexes;protected,static,boolean,is,merged,segment,leaf,reader,reader,final,map,string,string,diagnostics,lucene,segment,reader,reader,get,segment,info,info,get,diagnostics,final,string,source,diagnostics,get,index,writer,source,assert,arrays,as,list,index,writer,index,writer,index,writer,contains,source,unknown,source,source,return,index,writer,equals,source
Engine -> protected static boolean isMergedSegment(LeafReader reader);1551110274;Returns whether a leaf reader comes from a merge (versus flush or addIndexes).;protected static boolean isMergedSegment(LeafReader reader) {_        _        final Map<String, String> diagnostics = Lucene.segmentReader(reader).getSegmentInfo().info.getDiagnostics()__        final String source = diagnostics.get(IndexWriter.SOURCE)__        assert Arrays.asList(IndexWriter.SOURCE_ADDINDEXES_READERS, IndexWriter.SOURCE_FLUSH,_                IndexWriter.SOURCE_MERGE).contains(source) : "Unknown source " + source__        return IndexWriter.SOURCE_MERGE.equals(source)__    };returns,whether,a,leaf,reader,comes,from,a,merge,versus,flush,or,add,indexes;protected,static,boolean,is,merged,segment,leaf,reader,reader,final,map,string,string,diagnostics,lucene,segment,reader,reader,get,segment,info,info,get,diagnostics,final,string,source,diagnostics,get,index,writer,source,assert,arrays,as,list,index,writer,index,writer,index,writer,contains,source,unknown,source,source,return,index,writer,equals,source
Engine -> protected static boolean isMergedSegment(LeafReader reader);1551126708;Returns whether a leaf reader comes from a merge (versus flush or addIndexes).;protected static boolean isMergedSegment(LeafReader reader) {_        _        final Map<String, String> diagnostics = Lucene.segmentReader(reader).getSegmentInfo().info.getDiagnostics()__        final String source = diagnostics.get(IndexWriter.SOURCE)__        assert Arrays.asList(IndexWriter.SOURCE_ADDINDEXES_READERS, IndexWriter.SOURCE_FLUSH,_                IndexWriter.SOURCE_MERGE).contains(source) : "Unknown source " + source__        return IndexWriter.SOURCE_MERGE.equals(source)__    };returns,whether,a,leaf,reader,comes,from,a,merge,versus,flush,or,add,indexes;protected,static,boolean,is,merged,segment,leaf,reader,reader,final,map,string,string,diagnostics,lucene,segment,reader,reader,get,segment,info,info,get,diagnostics,final,string,source,diagnostics,get,index,writer,source,assert,arrays,as,list,index,writer,index,writer,index,writer,contains,source,unknown,source,source,return,index,writer,equals,source
Engine -> public abstract Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException_;1524684173;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire_@param scope the scope of this searcher ie. if the searcher will be used for get or search purposes__@see Searcher#close();public abstract Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException_;returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,param,scope,the,scope,of,this,searcher,ie,if,the,searcher,will,be,used,for,get,or,search,purposes,see,searcher,close;public,abstract,searcher,acquire,searcher,string,source,searcher,scope,scope,throws,engine,exception
Engine -> public abstract Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException_;1525162917;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire_@param scope the scope of this searcher ie. if the searcher will be used for get or search purposes__@see Searcher#close();public abstract Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException_;returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,param,scope,the,scope,of,this,searcher,ie,if,the,searcher,will,be,used,for,get,or,search,purposes,see,searcher,close;public,abstract,searcher,acquire,searcher,string,source,searcher,scope,scope,throws,engine,exception
Engine -> public abstract Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException_;1525334055;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire_@param scope the scope of this searcher ie. if the searcher will be used for get or search purposes__@see Searcher#close();public abstract Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException_;returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,param,scope,the,scope,of,this,searcher,ie,if,the,searcher,will,be,used,for,get,or,search,purposes,see,searcher,close;public,abstract,searcher,acquire,searcher,string,source,searcher,scope,scope,throws,engine,exception
Engine -> public abstract Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException_;1527583663;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire_@param scope the scope of this searcher ie. if the searcher will be used for get or search purposes__@see Searcher#close();public abstract Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException_;returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,param,scope,the,scope,of,this,searcher,ie,if,the,searcher,will,be,used,for,get,or,search,purposes,see,searcher,close;public,abstract,searcher,acquire,searcher,string,source,searcher,scope,scope,throws,engine,exception
Engine -> public abstract Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException_;1528706846;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire_@param scope the scope of this searcher ie. if the searcher will be used for get or search purposes__@see Searcher#close();public abstract Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException_;returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,param,scope,the,scope,of,this,searcher,ie,if,the,searcher,will,be,used,for,get,or,search,purposes,see,searcher,close;public,abstract,searcher,acquire,searcher,string,source,searcher,scope,scope,throws,engine,exception
Engine -> public abstract Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException_;1528762805;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire_@param scope the scope of this searcher ie. if the searcher will be used for get or search purposes__@see Searcher#close();public abstract Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException_;returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,param,scope,the,scope,of,this,searcher,ie,if,the,searcher,will,be,used,for,get,or,search,purposes,see,searcher,close;public,abstract,searcher,acquire,searcher,string,source,searcher,scope,scope,throws,engine,exception
Engine -> public abstract Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException_;1531910483;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire_@param scope the scope of this searcher ie. if the searcher will be used for get or search purposes__@see Searcher#close();public abstract Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException_;returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,param,scope,the,scope,of,this,searcher,ie,if,the,searcher,will,be,used,for,get,or,search,purposes,see,searcher,close;public,abstract,searcher,acquire,searcher,string,source,searcher,scope,scope,throws,engine,exception
Engine -> public abstract Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException_;1532685069;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire_@param scope the scope of this searcher ie. if the searcher will be used for get or search purposes__@see Searcher#close();public abstract Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException_;returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,param,scope,the,scope,of,this,searcher,ie,if,the,searcher,will,be,used,for,get,or,search,purposes,see,searcher,close;public,abstract,searcher,acquire,searcher,string,source,searcher,scope,scope,throws,engine,exception
Engine -> public abstract Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException_;1533295538;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire_@param scope the scope of this searcher ie. if the searcher will be used for get or search purposes__@see Searcher#close();public abstract Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException_;returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,param,scope,the,scope,of,this,searcher,ie,if,the,searcher,will,be,used,for,get,or,search,purposes,see,searcher,close;public,abstract,searcher,acquire,searcher,string,source,searcher,scope,scope,throws,engine,exception
Engine -> public abstract Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException_;1535046779;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire_@param scope the scope of this searcher ie. if the searcher will be used for get or search purposes__@see Searcher#close();public abstract Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException_;returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,param,scope,the,scope,of,this,searcher,ie,if,the,searcher,will,be,used,for,get,or,search,purposes,see,searcher,close;public,abstract,searcher,acquire,searcher,string,source,searcher,scope,scope,throws,engine,exception
Engine -> public abstract Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException_;1535723122;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire_@param scope the scope of this searcher ie. if the searcher will be used for get or search purposes__@see Searcher#close();public abstract Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException_;returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,param,scope,the,scope,of,this,searcher,ie,if,the,searcher,will,be,used,for,get,or,search,purposes,see,searcher,close;public,abstract,searcher,acquire,searcher,string,source,searcher,scope,scope,throws,engine,exception
Engine -> public abstract Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException_;1535965276;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire_@param scope the scope of this searcher ie. if the searcher will be used for get or search purposes__@see Searcher#close();public abstract Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException_;returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,param,scope,the,scope,of,this,searcher,ie,if,the,searcher,will,be,used,for,get,or,search,purposes,see,searcher,close;public,abstract,searcher,acquire,searcher,string,source,searcher,scope,scope,throws,engine,exception
Engine -> public int estimateTranslogOperationsFromMinSeq(long minSeqNo);1524684173;Returns the estimated number of translog operations in this engine whose seq# at least the provided seq#.;public int estimateTranslogOperationsFromMinSeq(long minSeqNo) {_        return getTranslog().estimateTotalOperationsFromMinSeq(minSeqNo)__    };returns,the,estimated,number,of,translog,operations,in,this,engine,whose,seq,at,least,the,provided,seq;public,int,estimate,translog,operations,from,min,seq,long,min,seq,no,return,get,translog,estimate,total,operations,from,min,seq,min,seq,no
Engine -> public int estimateTranslogOperationsFromMinSeq(long minSeqNo);1525162917;Returns the estimated number of translog operations in this engine whose seq# at least the provided seq#.;public int estimateTranslogOperationsFromMinSeq(long minSeqNo) {_        return getTranslog().estimateTotalOperationsFromMinSeq(minSeqNo)__    };returns,the,estimated,number,of,translog,operations,in,this,engine,whose,seq,at,least,the,provided,seq;public,int,estimate,translog,operations,from,min,seq,long,min,seq,no,return,get,translog,estimate,total,operations,from,min,seq,min,seq,no
Engine -> public int estimateTranslogOperationsFromMinSeq(long minSeqNo);1525334055;Returns the estimated number of translog operations in this engine whose seq# at least the provided seq#.;public int estimateTranslogOperationsFromMinSeq(long minSeqNo) {_        return getTranslog().estimateTotalOperationsFromMinSeq(minSeqNo)__    };returns,the,estimated,number,of,translog,operations,in,this,engine,whose,seq,at,least,the,provided,seq;public,int,estimate,translog,operations,from,min,seq,long,min,seq,no,return,get,translog,estimate,total,operations,from,min,seq,min,seq,no
Engine -> public int estimateTranslogOperationsFromMinSeq(long minSeqNo);1527583663;Returns the estimated number of translog operations in this engine whose seq# at least the provided seq#.;public int estimateTranslogOperationsFromMinSeq(long minSeqNo) {_        return getTranslog().estimateTotalOperationsFromMinSeq(minSeqNo)__    };returns,the,estimated,number,of,translog,operations,in,this,engine,whose,seq,at,least,the,provided,seq;public,int,estimate,translog,operations,from,min,seq,long,min,seq,no,return,get,translog,estimate,total,operations,from,min,seq,min,seq,no
Engine -> public int estimateTranslogOperationsFromMinSeq(long minSeqNo);1528706846;Returns the estimated number of translog operations in this engine whose seq# at least the provided seq#.;public int estimateTranslogOperationsFromMinSeq(long minSeqNo) {_        return getTranslog().estimateTotalOperationsFromMinSeq(minSeqNo)__    };returns,the,estimated,number,of,translog,operations,in,this,engine,whose,seq,at,least,the,provided,seq;public,int,estimate,translog,operations,from,min,seq,long,min,seq,no,return,get,translog,estimate,total,operations,from,min,seq,min,seq,no
Engine -> DeleteResult -> public DeleteResult(Exception failure, long version, long term);1533295538;use in case of the delete operation failed before getting to internal engine;public DeleteResult(Exception failure, long version, long term) {_            this(failure, version, term, SequenceNumbers.UNASSIGNED_SEQ_NO, false)__        };use,in,case,of,the,delete,operation,failed,before,getting,to,internal,engine;public,delete,result,exception,failure,long,version,long,term,this,failure,version,term,sequence,numbers,false
Engine -> DeleteResult -> public DeleteResult(Exception failure, long version, long term);1535046779;use in case of the delete operation failed before getting to internal engine;public DeleteResult(Exception failure, long version, long term) {_            this(failure, version, term, SequenceNumbers.UNASSIGNED_SEQ_NO, false)__        };use,in,case,of,the,delete,operation,failed,before,getting,to,internal,engine;public,delete,result,exception,failure,long,version,long,term,this,failure,version,term,sequence,numbers,false
Engine -> DeleteResult -> public DeleteResult(Exception failure, long version, long term);1535723122;use in case of the delete operation failed before getting to internal engine;public DeleteResult(Exception failure, long version, long term) {_            this(failure, version, term, SequenceNumbers.UNASSIGNED_SEQ_NO, false)__        };use,in,case,of,the,delete,operation,failed,before,getting,to,internal,engine;public,delete,result,exception,failure,long,version,long,term,this,failure,version,term,sequence,numbers,false
Engine -> DeleteResult -> public DeleteResult(Exception failure, long version, long term);1535965276;use in case of the delete operation failed before getting to internal engine;public DeleteResult(Exception failure, long version, long term) {_            this(failure, version, term, SequenceNumbers.UNASSIGNED_SEQ_NO, false)__        };use,in,case,of,the,delete,operation,failed,before,getting,to,internal,engine;public,delete,result,exception,failure,long,version,long,term,this,failure,version,term,sequence,numbers,false
Engine -> DeleteResult -> public DeleteResult(Exception failure, long version, long term);1536314350;use in case of the delete operation failed before getting to internal engine;public DeleteResult(Exception failure, long version, long term) {_            this(failure, version, term, SequenceNumbers.UNASSIGNED_SEQ_NO, false)__        };use,in,case,of,the,delete,operation,failed,before,getting,to,internal,engine;public,delete,result,exception,failure,long,version,long,term,this,failure,version,term,sequence,numbers,false
Engine -> DeleteResult -> public DeleteResult(Exception failure, long version, long term);1536828374;use in case of the delete operation failed before getting to internal engine;public DeleteResult(Exception failure, long version, long term) {_            this(failure, version, term, SequenceNumbers.UNASSIGNED_SEQ_NO, false)__        };use,in,case,of,the,delete,operation,failed,before,getting,to,internal,engine;public,delete,result,exception,failure,long,version,long,term,this,failure,version,term,sequence,numbers,false
Engine -> DeleteResult -> public DeleteResult(Exception failure, long version, long term);1537371806;use in case of the delete operation failed before getting to internal engine;public DeleteResult(Exception failure, long version, long term) {_            this(failure, version, term, SequenceNumbers.UNASSIGNED_SEQ_NO, false)__        };use,in,case,of,the,delete,operation,failed,before,getting,to,internal,engine;public,delete,result,exception,failure,long,version,long,term,this,failure,version,term,sequence,numbers,false
Engine -> DeleteResult -> public DeleteResult(Exception failure, long version, long term);1537806831;use in case of the delete operation failed before getting to internal engine;public DeleteResult(Exception failure, long version, long term) {_            this(failure, version, term, SequenceNumbers.UNASSIGNED_SEQ_NO, false)__        };use,in,case,of,the,delete,operation,failed,before,getting,to,internal,engine;public,delete,result,exception,failure,long,version,long,term,this,failure,version,term,sequence,numbers,false
Engine -> DeleteResult -> public DeleteResult(Exception failure, long version, long term);1538067637;use in case of the delete operation failed before getting to internal engine;public DeleteResult(Exception failure, long version, long term) {_            this(failure, version, term, SequenceNumbers.UNASSIGNED_SEQ_NO, false)__        };use,in,case,of,the,delete,operation,failed,before,getting,to,internal,engine;public,delete,result,exception,failure,long,version,long,term,this,failure,version,term,sequence,numbers,false
Engine -> DeleteResult -> public DeleteResult(Exception failure, long version, long term);1538424609;use in case of the delete operation failed before getting to internal engine;public DeleteResult(Exception failure, long version, long term) {_            this(failure, version, term, SequenceNumbers.UNASSIGNED_SEQ_NO, false)__        };use,in,case,of,the,delete,operation,failed,before,getting,to,internal,engine;public,delete,result,exception,failure,long,version,long,term,this,failure,version,term,sequence,numbers,false
Engine -> DeleteResult -> public DeleteResult(Exception failure, long version, long term);1539723533;use in case of the delete operation failed before getting to internal engine;public DeleteResult(Exception failure, long version, long term) {_            this(failure, version, term, SequenceNumbers.UNASSIGNED_SEQ_NO, false)__        };use,in,case,of,the,delete,operation,failed,before,getting,to,internal,engine;public,delete,result,exception,failure,long,version,long,term,this,failure,version,term,sequence,numbers,false
Engine -> DeleteResult -> public DeleteResult(Exception failure, long version, long term);1541618615;use in case of the delete operation failed before getting to internal engine;public DeleteResult(Exception failure, long version, long term) {_            this(failure, version, term, SequenceNumbers.UNASSIGNED_SEQ_NO, false)__        };use,in,case,of,the,delete,operation,failed,before,getting,to,internal,engine;public,delete,result,exception,failure,long,version,long,term,this,failure,version,term,sequence,numbers,false
Engine -> DeleteResult -> public DeleteResult(Exception failure, long version, long term);1542697754;use in case of the delete operation failed before getting to internal engine;public DeleteResult(Exception failure, long version, long term) {_            this(failure, version, term, SequenceNumbers.UNASSIGNED_SEQ_NO, false)__        };use,in,case,of,the,delete,operation,failed,before,getting,to,internal,engine;public,delete,result,exception,failure,long,version,long,term,this,failure,version,term,sequence,numbers,false
Engine -> DeleteResult -> public DeleteResult(Exception failure, long version, long term);1543047942;use in case of the delete operation failed before getting to internal engine;public DeleteResult(Exception failure, long version, long term) {_            this(failure, version, term, SequenceNumbers.UNASSIGNED_SEQ_NO, false)__        };use,in,case,of,the,delete,operation,failed,before,getting,to,internal,engine;public,delete,result,exception,failure,long,version,long,term,this,failure,version,term,sequence,numbers,false
Engine -> DeleteResult -> public DeleteResult(Exception failure, long version, long term);1544545090;use in case of the delete operation failed before getting to internal engine;public DeleteResult(Exception failure, long version, long term) {_            this(failure, version, term, SequenceNumbers.UNASSIGNED_SEQ_NO, false)__        };use,in,case,of,the,delete,operation,failed,before,getting,to,internal,engine;public,delete,result,exception,failure,long,version,long,term,this,failure,version,term,sequence,numbers,false
Engine -> DeleteResult -> public DeleteResult(Exception failure, long version, long term);1544684920;use in case of the delete operation failed before getting to internal engine;public DeleteResult(Exception failure, long version, long term) {_            this(failure, version, term, SequenceNumbers.UNASSIGNED_SEQ_NO, false)__        };use,in,case,of,the,delete,operation,failed,before,getting,to,internal,engine;public,delete,result,exception,failure,long,version,long,term,this,failure,version,term,sequence,numbers,false
Engine -> DeleteResult -> public DeleteResult(Exception failure, long version, long term);1545140118;use in case of the delete operation failed before getting to internal engine;public DeleteResult(Exception failure, long version, long term) {_            this(failure, version, term, SequenceNumbers.UNASSIGNED_SEQ_NO, false)__        };use,in,case,of,the,delete,operation,failed,before,getting,to,internal,engine;public,delete,result,exception,failure,long,version,long,term,this,failure,version,term,sequence,numbers,false
Engine -> DeleteResult -> public DeleteResult(Exception failure, long version, long term);1545221705;use in case of the delete operation failed before getting to internal engine;public DeleteResult(Exception failure, long version, long term) {_            this(failure, version, term, UNASSIGNED_SEQ_NO, false)__        };use,in,case,of,the,delete,operation,failed,before,getting,to,internal,engine;public,delete,result,exception,failure,long,version,long,term,this,failure,version,term,false
Engine -> DeleteResult -> public DeleteResult(Exception failure, long version, long term);1547332999;use in case of the delete operation failed before getting to internal engine;public DeleteResult(Exception failure, long version, long term) {_            this(failure, version, term, UNASSIGNED_SEQ_NO, false)__        };use,in,case,of,the,delete,operation,failed,before,getting,to,internal,engine;public,delete,result,exception,failure,long,version,long,term,this,failure,version,term,false
Engine -> DeleteResult -> public DeleteResult(Exception failure, long version, long term);1548771485;use in case of the delete operation failed before getting to internal engine;public DeleteResult(Exception failure, long version, long term) {_            this(failure, version, term, UNASSIGNED_SEQ_NO, false)__        };use,in,case,of,the,delete,operation,failed,before,getting,to,internal,engine;public,delete,result,exception,failure,long,version,long,term,this,failure,version,term,false
Engine -> DeleteResult -> public DeleteResult(Exception failure, long version, long term);1549891630;use in case of the delete operation failed before getting to internal engine;public DeleteResult(Exception failure, long version, long term) {_            this(failure, version, term, UNASSIGNED_SEQ_NO, false)__        };use,in,case,of,the,delete,operation,failed,before,getting,to,internal,engine;public,delete,result,exception,failure,long,version,long,term,this,failure,version,term,false
Engine -> DeleteResult -> public DeleteResult(Exception failure, long version, long term);1549975032;use in case of the delete operation failed before getting to internal engine;public DeleteResult(Exception failure, long version, long term) {_            this(failure, version, term, UNASSIGNED_SEQ_NO, false)__        };use,in,case,of,the,delete,operation,failed,before,getting,to,internal,engine;public,delete,result,exception,failure,long,version,long,term,this,failure,version,term,false
Engine -> DeleteResult -> public DeleteResult(Exception failure, long version, long term);1550220204;use in case of the delete operation failed before getting to internal engine;public DeleteResult(Exception failure, long version, long term) {_            this(failure, version, term, UNASSIGNED_SEQ_NO, false)__        };use,in,case,of,the,delete,operation,failed,before,getting,to,internal,engine;public,delete,result,exception,failure,long,version,long,term,this,failure,version,term,false
Engine -> DeleteResult -> public DeleteResult(Exception failure, long version, long term);1550526771;use in case of the delete operation failed before getting to internal engine;public DeleteResult(Exception failure, long version, long term) {_            this(failure, version, term, UNASSIGNED_SEQ_NO, false)__        };use,in,case,of,the,delete,operation,failed,before,getting,to,internal,engine;public,delete,result,exception,failure,long,version,long,term,this,failure,version,term,false
Engine -> DeleteResult -> public DeleteResult(Exception failure, long version, long term);1551110274;use in case of the delete operation failed before getting to internal engine;public DeleteResult(Exception failure, long version, long term) {_            this(failure, version, term, UNASSIGNED_SEQ_NO, false)__        };use,in,case,of,the,delete,operation,failed,before,getting,to,internal,engine;public,delete,result,exception,failure,long,version,long,term,this,failure,version,term,false
Engine -> DeleteResult -> public DeleteResult(Exception failure, long version, long term);1551126708;use in case of the delete operation failed before getting to internal engine;public DeleteResult(Exception failure, long version, long term) {_            this(failure, version, term, UNASSIGNED_SEQ_NO, false)__        };use,in,case,of,the,delete,operation,failed,before,getting,to,internal,engine;public,delete,result,exception,failure,long,version,long,term,this,failure,version,term,false
Engine -> public Translog.Snapshot newTranslogSnapshotFromMinSeqNo(long minSeqNo) throws IOException;1524684173;Creates a new translog snapshot from this engine for reading translog operations whose seq# at least the provided seq#._The caller has to close the returned snapshot after finishing the reading.;public Translog.Snapshot newTranslogSnapshotFromMinSeqNo(long minSeqNo) throws IOException {_        return getTranslog().newSnapshotFromMinSeqNo(minSeqNo)__    };creates,a,new,translog,snapshot,from,this,engine,for,reading,translog,operations,whose,seq,at,least,the,provided,seq,the,caller,has,to,close,the,returned,snapshot,after,finishing,the,reading;public,translog,snapshot,new,translog,snapshot,from,min,seq,no,long,min,seq,no,throws,ioexception,return,get,translog,new,snapshot,from,min,seq,no,min,seq,no
Engine -> public Translog.Snapshot newTranslogSnapshotFromMinSeqNo(long minSeqNo) throws IOException;1525162917;Creates a new translog snapshot from this engine for reading translog operations whose seq# at least the provided seq#._The caller has to close the returned snapshot after finishing the reading.;public Translog.Snapshot newTranslogSnapshotFromMinSeqNo(long minSeqNo) throws IOException {_        return getTranslog().newSnapshotFromMinSeqNo(minSeqNo)__    };creates,a,new,translog,snapshot,from,this,engine,for,reading,translog,operations,whose,seq,at,least,the,provided,seq,the,caller,has,to,close,the,returned,snapshot,after,finishing,the,reading;public,translog,snapshot,new,translog,snapshot,from,min,seq,no,long,min,seq,no,throws,ioexception,return,get,translog,new,snapshot,from,min,seq,no,min,seq,no
Engine -> public Translog.Snapshot newTranslogSnapshotFromMinSeqNo(long minSeqNo) throws IOException;1525334055;Creates a new translog snapshot from this engine for reading translog operations whose seq# at least the provided seq#._The caller has to close the returned snapshot after finishing the reading.;public Translog.Snapshot newTranslogSnapshotFromMinSeqNo(long minSeqNo) throws IOException {_        return getTranslog().newSnapshotFromMinSeqNo(minSeqNo)__    };creates,a,new,translog,snapshot,from,this,engine,for,reading,translog,operations,whose,seq,at,least,the,provided,seq,the,caller,has,to,close,the,returned,snapshot,after,finishing,the,reading;public,translog,snapshot,new,translog,snapshot,from,min,seq,no,long,min,seq,no,throws,ioexception,return,get,translog,new,snapshot,from,min,seq,no,min,seq,no
Engine -> public Translog.Snapshot newTranslogSnapshotFromMinSeqNo(long minSeqNo) throws IOException;1527583663;Creates a new translog snapshot from this engine for reading translog operations whose seq# at least the provided seq#._The caller has to close the returned snapshot after finishing the reading.;public Translog.Snapshot newTranslogSnapshotFromMinSeqNo(long minSeqNo) throws IOException {_        return getTranslog().newSnapshotFromMinSeqNo(minSeqNo)__    };creates,a,new,translog,snapshot,from,this,engine,for,reading,translog,operations,whose,seq,at,least,the,provided,seq,the,caller,has,to,close,the,returned,snapshot,after,finishing,the,reading;public,translog,snapshot,new,translog,snapshot,from,min,seq,no,long,min,seq,no,throws,ioexception,return,get,translog,new,snapshot,from,min,seq,no,min,seq,no
Engine -> public Translog.Snapshot newTranslogSnapshotFromMinSeqNo(long minSeqNo) throws IOException;1528706846;Creates a new translog snapshot from this engine for reading translog operations whose seq# at least the provided seq#._The caller has to close the returned snapshot after finishing the reading.;public Translog.Snapshot newTranslogSnapshotFromMinSeqNo(long minSeqNo) throws IOException {_        return getTranslog().newSnapshotFromMinSeqNo(minSeqNo)__    };creates,a,new,translog,snapshot,from,this,engine,for,reading,translog,operations,whose,seq,at,least,the,provided,seq,the,caller,has,to,close,the,returned,snapshot,after,finishing,the,reading;public,translog,snapshot,new,translog,snapshot,from,min,seq,no,long,min,seq,no,throws,ioexception,return,get,translog,new,snapshot,from,min,seq,no,min,seq,no
Engine -> public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;1528706846;@return a {@link SeqNoStats} object, using local state and the supplied global checkpoint;public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;return,a,link,seq,no,stats,object,using,local,state,and,the,supplied,global,checkpoint;public,abstract,seq,no,stats,get,seq,no,stats,long,global,checkpoint
Engine -> public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;1528762805;@return a {@link SeqNoStats} object, using local state and the supplied global checkpoint;public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;return,a,link,seq,no,stats,object,using,local,state,and,the,supplied,global,checkpoint;public,abstract,seq,no,stats,get,seq,no,stats,long,global,checkpoint
Engine -> public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;1531910483;@return a {@link SeqNoStats} object, using local state and the supplied global checkpoint;public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;return,a,link,seq,no,stats,object,using,local,state,and,the,supplied,global,checkpoint;public,abstract,seq,no,stats,get,seq,no,stats,long,global,checkpoint
Engine -> public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;1532685069;@return a {@link SeqNoStats} object, using local state and the supplied global checkpoint;public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;return,a,link,seq,no,stats,object,using,local,state,and,the,supplied,global,checkpoint;public,abstract,seq,no,stats,get,seq,no,stats,long,global,checkpoint
Engine -> public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;1533295538;@return a {@link SeqNoStats} object, using local state and the supplied global checkpoint;public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;return,a,link,seq,no,stats,object,using,local,state,and,the,supplied,global,checkpoint;public,abstract,seq,no,stats,get,seq,no,stats,long,global,checkpoint
Engine -> public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;1535046779;@return a {@link SeqNoStats} object, using local state and the supplied global checkpoint;public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;return,a,link,seq,no,stats,object,using,local,state,and,the,supplied,global,checkpoint;public,abstract,seq,no,stats,get,seq,no,stats,long,global,checkpoint
Engine -> public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;1535723122;@return a {@link SeqNoStats} object, using local state and the supplied global checkpoint;public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;return,a,link,seq,no,stats,object,using,local,state,and,the,supplied,global,checkpoint;public,abstract,seq,no,stats,get,seq,no,stats,long,global,checkpoint
Engine -> public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;1535965276;@return a {@link SeqNoStats} object, using local state and the supplied global checkpoint;public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;return,a,link,seq,no,stats,object,using,local,state,and,the,supplied,global,checkpoint;public,abstract,seq,no,stats,get,seq,no,stats,long,global,checkpoint
Engine -> public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;1536314350;@return a {@link SeqNoStats} object, using local state and the supplied global checkpoint;public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;return,a,link,seq,no,stats,object,using,local,state,and,the,supplied,global,checkpoint;public,abstract,seq,no,stats,get,seq,no,stats,long,global,checkpoint
Engine -> public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;1536828374;@return a {@link SeqNoStats} object, using local state and the supplied global checkpoint;public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;return,a,link,seq,no,stats,object,using,local,state,and,the,supplied,global,checkpoint;public,abstract,seq,no,stats,get,seq,no,stats,long,global,checkpoint
Engine -> public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;1537371806;@return a {@link SeqNoStats} object, using local state and the supplied global checkpoint;public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;return,a,link,seq,no,stats,object,using,local,state,and,the,supplied,global,checkpoint;public,abstract,seq,no,stats,get,seq,no,stats,long,global,checkpoint
Engine -> public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;1537806831;@return a {@link SeqNoStats} object, using local state and the supplied global checkpoint;public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;return,a,link,seq,no,stats,object,using,local,state,and,the,supplied,global,checkpoint;public,abstract,seq,no,stats,get,seq,no,stats,long,global,checkpoint
Engine -> public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;1538067637;@return a {@link SeqNoStats} object, using local state and the supplied global checkpoint;public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;return,a,link,seq,no,stats,object,using,local,state,and,the,supplied,global,checkpoint;public,abstract,seq,no,stats,get,seq,no,stats,long,global,checkpoint
Engine -> public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;1538424609;@return a {@link SeqNoStats} object, using local state and the supplied global checkpoint;public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;return,a,link,seq,no,stats,object,using,local,state,and,the,supplied,global,checkpoint;public,abstract,seq,no,stats,get,seq,no,stats,long,global,checkpoint
Engine -> public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;1539723533;@return a {@link SeqNoStats} object, using local state and the supplied global checkpoint;public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;return,a,link,seq,no,stats,object,using,local,state,and,the,supplied,global,checkpoint;public,abstract,seq,no,stats,get,seq,no,stats,long,global,checkpoint
Engine -> public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;1541618615;@return a {@link SeqNoStats} object, using local state and the supplied global checkpoint;public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;return,a,link,seq,no,stats,object,using,local,state,and,the,supplied,global,checkpoint;public,abstract,seq,no,stats,get,seq,no,stats,long,global,checkpoint
Engine -> public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;1542697754;@return a {@link SeqNoStats} object, using local state and the supplied global checkpoint;public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;return,a,link,seq,no,stats,object,using,local,state,and,the,supplied,global,checkpoint;public,abstract,seq,no,stats,get,seq,no,stats,long,global,checkpoint
Engine -> public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;1543047942;@return a {@link SeqNoStats} object, using local state and the supplied global checkpoint;public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;return,a,link,seq,no,stats,object,using,local,state,and,the,supplied,global,checkpoint;public,abstract,seq,no,stats,get,seq,no,stats,long,global,checkpoint
Engine -> public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;1544545090;@return a {@link SeqNoStats} object, using local state and the supplied global checkpoint;public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;return,a,link,seq,no,stats,object,using,local,state,and,the,supplied,global,checkpoint;public,abstract,seq,no,stats,get,seq,no,stats,long,global,checkpoint
Engine -> public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;1544684920;@return a {@link SeqNoStats} object, using local state and the supplied global checkpoint;public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;return,a,link,seq,no,stats,object,using,local,state,and,the,supplied,global,checkpoint;public,abstract,seq,no,stats,get,seq,no,stats,long,global,checkpoint
Engine -> public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;1545140118;@return a {@link SeqNoStats} object, using local state and the supplied global checkpoint;public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;return,a,link,seq,no,stats,object,using,local,state,and,the,supplied,global,checkpoint;public,abstract,seq,no,stats,get,seq,no,stats,long,global,checkpoint
Engine -> public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;1545221705;@return a {@link SeqNoStats} object, using local state and the supplied global checkpoint;public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;return,a,link,seq,no,stats,object,using,local,state,and,the,supplied,global,checkpoint;public,abstract,seq,no,stats,get,seq,no,stats,long,global,checkpoint
Engine -> public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;1547332999;@return a {@link SeqNoStats} object, using local state and the supplied global checkpoint;public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;return,a,link,seq,no,stats,object,using,local,state,and,the,supplied,global,checkpoint;public,abstract,seq,no,stats,get,seq,no,stats,long,global,checkpoint
Engine -> public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;1548771485;@return a {@link SeqNoStats} object, using local state and the supplied global checkpoint;public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;return,a,link,seq,no,stats,object,using,local,state,and,the,supplied,global,checkpoint;public,abstract,seq,no,stats,get,seq,no,stats,long,global,checkpoint
Engine -> public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;1549891630;@return a {@link SeqNoStats} object, using local state and the supplied global checkpoint;public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;return,a,link,seq,no,stats,object,using,local,state,and,the,supplied,global,checkpoint;public,abstract,seq,no,stats,get,seq,no,stats,long,global,checkpoint
Engine -> public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;1549975032;@return a {@link SeqNoStats} object, using local state and the supplied global checkpoint;public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;return,a,link,seq,no,stats,object,using,local,state,and,the,supplied,global,checkpoint;public,abstract,seq,no,stats,get,seq,no,stats,long,global,checkpoint
Engine -> public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;1550220204;@return a {@link SeqNoStats} object, using local state and the supplied global checkpoint;public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;return,a,link,seq,no,stats,object,using,local,state,and,the,supplied,global,checkpoint;public,abstract,seq,no,stats,get,seq,no,stats,long,global,checkpoint
Engine -> public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;1550526771;@return a {@link SeqNoStats} object, using local state and the supplied global checkpoint;public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;return,a,link,seq,no,stats,object,using,local,state,and,the,supplied,global,checkpoint;public,abstract,seq,no,stats,get,seq,no,stats,long,global,checkpoint
Engine -> public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;1551110274;@return a {@link SeqNoStats} object, using local state and the supplied global checkpoint;public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;return,a,link,seq,no,stats,object,using,local,state,and,the,supplied,global,checkpoint;public,abstract,seq,no,stats,get,seq,no,stats,long,global,checkpoint
Engine -> public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;1551126708;@return a {@link SeqNoStats} object, using local state and the supplied global checkpoint;public abstract SeqNoStats getSeqNoStats(long globalCheckpoint)_;return,a,link,seq,no,stats,object,using,local,state,and,the,supplied,global,checkpoint;public,abstract,seq,no,stats,get,seq,no,stats,long,global,checkpoint
Engine -> public final void advanceMaxSeqNoOfUpdatesOrDeletes(long seqNo);1537806831;A replica shard receives a new max_seq_no_of_updates from its primary shard, then calls this method_to advance this marker to at least the given sequence number.;public final void advanceMaxSeqNoOfUpdatesOrDeletes(long seqNo) {_        maxSeqNoOfUpdatesOrDeletes.updateAndGet(curr -> Math.max(curr, seqNo))__        assert maxSeqNoOfUpdatesOrDeletes.get() >= seqNo : maxSeqNoOfUpdatesOrDeletes.get() + " < " + seqNo__    };a,replica,shard,receives,a,new,from,its,primary,shard,then,calls,this,method,to,advance,this,marker,to,at,least,the,given,sequence,number;public,final,void,advance,max,seq,no,of,updates,or,deletes,long,seq,no,max,seq,no,of,updates,or,deletes,update,and,get,curr,math,max,curr,seq,no,assert,max,seq,no,of,updates,or,deletes,get,seq,no,max,seq,no,of,updates,or,deletes,get,seq,no
Engine -> public final void advanceMaxSeqNoOfUpdatesOrDeletes(long seqNo);1538067637;A replica shard receives a new max_seq_no_of_updates from its primary shard, then calls this method_to advance this marker to at least the given sequence number.;public final void advanceMaxSeqNoOfUpdatesOrDeletes(long seqNo) {_        maxSeqNoOfUpdatesOrDeletes.updateAndGet(curr -> Math.max(curr, seqNo))__        assert maxSeqNoOfUpdatesOrDeletes.get() >= seqNo : maxSeqNoOfUpdatesOrDeletes.get() + " < " + seqNo__    };a,replica,shard,receives,a,new,from,its,primary,shard,then,calls,this,method,to,advance,this,marker,to,at,least,the,given,sequence,number;public,final,void,advance,max,seq,no,of,updates,or,deletes,long,seq,no,max,seq,no,of,updates,or,deletes,update,and,get,curr,math,max,curr,seq,no,assert,max,seq,no,of,updates,or,deletes,get,seq,no,max,seq,no,of,updates,or,deletes,get,seq,no
Engine -> public final void advanceMaxSeqNoOfUpdatesOrDeletes(long seqNo);1538424609;A replica shard receives a new max_seq_no_of_updates from its primary shard, then calls this method_to advance this marker to at least the given sequence number.;public final void advanceMaxSeqNoOfUpdatesOrDeletes(long seqNo) {_        maxSeqNoOfUpdatesOrDeletes.updateAndGet(curr -> Math.max(curr, seqNo))__        assert maxSeqNoOfUpdatesOrDeletes.get() >= seqNo : maxSeqNoOfUpdatesOrDeletes.get() + " < " + seqNo__    };a,replica,shard,receives,a,new,from,its,primary,shard,then,calls,this,method,to,advance,this,marker,to,at,least,the,given,sequence,number;public,final,void,advance,max,seq,no,of,updates,or,deletes,long,seq,no,max,seq,no,of,updates,or,deletes,update,and,get,curr,math,max,curr,seq,no,assert,max,seq,no,of,updates,or,deletes,get,seq,no,max,seq,no,of,updates,or,deletes,get,seq,no
Engine -> public final void advanceMaxSeqNoOfUpdatesOrDeletes(long seqNo);1539723533;A replica shard receives a new max_seq_no_of_updates from its primary shard, then calls this method_to advance this marker to at least the given sequence number.;public final void advanceMaxSeqNoOfUpdatesOrDeletes(long seqNo) {_        maxSeqNoOfUpdatesOrDeletes.updateAndGet(curr -> Math.max(curr, seqNo))__        assert maxSeqNoOfUpdatesOrDeletes.get() >= seqNo : maxSeqNoOfUpdatesOrDeletes.get() + " < " + seqNo__    };a,replica,shard,receives,a,new,from,its,primary,shard,then,calls,this,method,to,advance,this,marker,to,at,least,the,given,sequence,number;public,final,void,advance,max,seq,no,of,updates,or,deletes,long,seq,no,max,seq,no,of,updates,or,deletes,update,and,get,curr,math,max,curr,seq,no,assert,max,seq,no,of,updates,or,deletes,get,seq,no,max,seq,no,of,updates,or,deletes,get,seq,no
Engine -> public final void advanceMaxSeqNoOfUpdatesOrDeletes(long seqNo);1541618615;A replica shard receives a new max_seq_no_of_updates from its primary shard, then calls this method_to advance this marker to at least the given sequence number.;public final void advanceMaxSeqNoOfUpdatesOrDeletes(long seqNo) {_        maxSeqNoOfUpdatesOrDeletes.updateAndGet(curr -> Math.max(curr, seqNo))__        assert maxSeqNoOfUpdatesOrDeletes.get() >= seqNo : maxSeqNoOfUpdatesOrDeletes.get() + " < " + seqNo__    };a,replica,shard,receives,a,new,from,its,primary,shard,then,calls,this,method,to,advance,this,marker,to,at,least,the,given,sequence,number;public,final,void,advance,max,seq,no,of,updates,or,deletes,long,seq,no,max,seq,no,of,updates,or,deletes,update,and,get,curr,math,max,curr,seq,no,assert,max,seq,no,of,updates,or,deletes,get,seq,no,max,seq,no,of,updates,or,deletes,get,seq,no
Engine -> public final void advanceMaxSeqNoOfUpdatesOrDeletes(long seqNo);1542697754;A replica shard receives a new max_seq_no_of_updates from its primary shard, then calls this method_to advance this marker to at least the given sequence number.;public final void advanceMaxSeqNoOfUpdatesOrDeletes(long seqNo) {_        maxSeqNoOfUpdatesOrDeletes.updateAndGet(curr -> Math.max(curr, seqNo))__        assert maxSeqNoOfUpdatesOrDeletes.get() >= seqNo : maxSeqNoOfUpdatesOrDeletes.get() + " < " + seqNo__    };a,replica,shard,receives,a,new,from,its,primary,shard,then,calls,this,method,to,advance,this,marker,to,at,least,the,given,sequence,number;public,final,void,advance,max,seq,no,of,updates,or,deletes,long,seq,no,max,seq,no,of,updates,or,deletes,update,and,get,curr,math,max,curr,seq,no,assert,max,seq,no,of,updates,or,deletes,get,seq,no,max,seq,no,of,updates,or,deletes,get,seq,no
Engine -> public final void advanceMaxSeqNoOfUpdatesOrDeletes(long seqNo);1543047942;A replica shard receives a new max_seq_no_of_updates from its primary shard, then calls this method_to advance this marker to at least the given sequence number.;public final void advanceMaxSeqNoOfUpdatesOrDeletes(long seqNo) {_        maxSeqNoOfUpdatesOrDeletes.updateAndGet(curr -> Math.max(curr, seqNo))__        assert maxSeqNoOfUpdatesOrDeletes.get() >= seqNo : maxSeqNoOfUpdatesOrDeletes.get() + " < " + seqNo__    };a,replica,shard,receives,a,new,from,its,primary,shard,then,calls,this,method,to,advance,this,marker,to,at,least,the,given,sequence,number;public,final,void,advance,max,seq,no,of,updates,or,deletes,long,seq,no,max,seq,no,of,updates,or,deletes,update,and,get,curr,math,max,curr,seq,no,assert,max,seq,no,of,updates,or,deletes,get,seq,no,max,seq,no,of,updates,or,deletes,get,seq,no
Engine -> public final void advanceMaxSeqNoOfUpdatesOrDeletes(long seqNo);1544545090;A replica shard receives a new max_seq_no_of_updates from its primary shard, then calls this method_to advance this marker to at least the given sequence number.;public final void advanceMaxSeqNoOfUpdatesOrDeletes(long seqNo) {_        maxSeqNoOfUpdatesOrDeletes.updateAndGet(curr -> Math.max(curr, seqNo))__        assert maxSeqNoOfUpdatesOrDeletes.get() >= seqNo : maxSeqNoOfUpdatesOrDeletes.get() + " < " + seqNo__    };a,replica,shard,receives,a,new,from,its,primary,shard,then,calls,this,method,to,advance,this,marker,to,at,least,the,given,sequence,number;public,final,void,advance,max,seq,no,of,updates,or,deletes,long,seq,no,max,seq,no,of,updates,or,deletes,update,and,get,curr,math,max,curr,seq,no,assert,max,seq,no,of,updates,or,deletes,get,seq,no,max,seq,no,of,updates,or,deletes,get,seq,no
Engine -> public final void advanceMaxSeqNoOfUpdatesOrDeletes(long seqNo);1544684920;A replica shard receives a new max_seq_no_of_updates from its primary shard, then calls this method_to advance this marker to at least the given sequence number.;public final void advanceMaxSeqNoOfUpdatesOrDeletes(long seqNo) {_        maxSeqNoOfUpdatesOrDeletes.updateAndGet(curr -> Math.max(curr, seqNo))__        assert maxSeqNoOfUpdatesOrDeletes.get() >= seqNo : maxSeqNoOfUpdatesOrDeletes.get() + " < " + seqNo__    };a,replica,shard,receives,a,new,from,its,primary,shard,then,calls,this,method,to,advance,this,marker,to,at,least,the,given,sequence,number;public,final,void,advance,max,seq,no,of,updates,or,deletes,long,seq,no,max,seq,no,of,updates,or,deletes,update,and,get,curr,math,max,curr,seq,no,assert,max,seq,no,of,updates,or,deletes,get,seq,no,max,seq,no,of,updates,or,deletes,get,seq,no
Engine -> public final void advanceMaxSeqNoOfUpdatesOrDeletes(long seqNo);1545140118;A replica shard receives a new max_seq_no_of_updates from its primary shard, then calls this method_to advance this marker to at least the given sequence number.;public final void advanceMaxSeqNoOfUpdatesOrDeletes(long seqNo) {_        maxSeqNoOfUpdatesOrDeletes.updateAndGet(curr -> Math.max(curr, seqNo))__        assert maxSeqNoOfUpdatesOrDeletes.get() >= seqNo : maxSeqNoOfUpdatesOrDeletes.get() + " < " + seqNo__    };a,replica,shard,receives,a,new,from,its,primary,shard,then,calls,this,method,to,advance,this,marker,to,at,least,the,given,sequence,number;public,final,void,advance,max,seq,no,of,updates,or,deletes,long,seq,no,max,seq,no,of,updates,or,deletes,update,and,get,curr,math,max,curr,seq,no,assert,max,seq,no,of,updates,or,deletes,get,seq,no,max,seq,no,of,updates,or,deletes,get,seq,no
Engine -> public final void advanceMaxSeqNoOfUpdatesOrDeletes(long seqNo);1545221705;A replica shard receives a new max_seq_no_of_updates from its primary shard, then calls this method_to advance this marker to at least the given sequence number.;public final void advanceMaxSeqNoOfUpdatesOrDeletes(long seqNo) {_        maxSeqNoOfUpdatesOrDeletes.updateAndGet(curr -> Math.max(curr, seqNo))__        assert maxSeqNoOfUpdatesOrDeletes.get() >= seqNo : maxSeqNoOfUpdatesOrDeletes.get() + " < " + seqNo__    };a,replica,shard,receives,a,new,from,its,primary,shard,then,calls,this,method,to,advance,this,marker,to,at,least,the,given,sequence,number;public,final,void,advance,max,seq,no,of,updates,or,deletes,long,seq,no,max,seq,no,of,updates,or,deletes,update,and,get,curr,math,max,curr,seq,no,assert,max,seq,no,of,updates,or,deletes,get,seq,no,max,seq,no,of,updates,or,deletes,get,seq,no
Engine -> public final void advanceMaxSeqNoOfUpdatesOrDeletes(long seqNo);1547332999;A replica shard receives a new max_seq_no_of_updates from its primary shard, then calls this method_to advance this marker to at least the given sequence number.;public final void advanceMaxSeqNoOfUpdatesOrDeletes(long seqNo) {_        maxSeqNoOfUpdatesOrDeletes.updateAndGet(curr -> Math.max(curr, seqNo))__        assert maxSeqNoOfUpdatesOrDeletes.get() >= seqNo : maxSeqNoOfUpdatesOrDeletes.get() + " < " + seqNo__    };a,replica,shard,receives,a,new,from,its,primary,shard,then,calls,this,method,to,advance,this,marker,to,at,least,the,given,sequence,number;public,final,void,advance,max,seq,no,of,updates,or,deletes,long,seq,no,max,seq,no,of,updates,or,deletes,update,and,get,curr,math,max,curr,seq,no,assert,max,seq,no,of,updates,or,deletes,get,seq,no,max,seq,no,of,updates,or,deletes,get,seq,no
Engine -> public final void advanceMaxSeqNoOfUpdatesOrDeletes(long seqNo);1548771485;A replica shard receives a new max_seq_no_of_updates from its primary shard, then calls this method_to advance this marker to at least the given sequence number.;public final void advanceMaxSeqNoOfUpdatesOrDeletes(long seqNo) {_        maxSeqNoOfUpdatesOrDeletes.updateAndGet(curr -> Math.max(curr, seqNo))__        assert maxSeqNoOfUpdatesOrDeletes.get() >= seqNo : maxSeqNoOfUpdatesOrDeletes.get() + " < " + seqNo__    };a,replica,shard,receives,a,new,from,its,primary,shard,then,calls,this,method,to,advance,this,marker,to,at,least,the,given,sequence,number;public,final,void,advance,max,seq,no,of,updates,or,deletes,long,seq,no,max,seq,no,of,updates,or,deletes,update,and,get,curr,math,max,curr,seq,no,assert,max,seq,no,of,updates,or,deletes,get,seq,no,max,seq,no,of,updates,or,deletes,get,seq,no
Engine -> public final void advanceMaxSeqNoOfUpdatesOrDeletes(long seqNo);1549891630;A replica shard receives a new max_seq_no_of_updates from its primary shard, then calls this method_to advance this marker to at least the given sequence number.;public final void advanceMaxSeqNoOfUpdatesOrDeletes(long seqNo) {_        maxSeqNoOfUpdatesOrDeletes.updateAndGet(curr -> Math.max(curr, seqNo))__        assert maxSeqNoOfUpdatesOrDeletes.get() >= seqNo : maxSeqNoOfUpdatesOrDeletes.get() + " < " + seqNo__    };a,replica,shard,receives,a,new,from,its,primary,shard,then,calls,this,method,to,advance,this,marker,to,at,least,the,given,sequence,number;public,final,void,advance,max,seq,no,of,updates,or,deletes,long,seq,no,max,seq,no,of,updates,or,deletes,update,and,get,curr,math,max,curr,seq,no,assert,max,seq,no,of,updates,or,deletes,get,seq,no,max,seq,no,of,updates,or,deletes,get,seq,no
Engine -> public final void advanceMaxSeqNoOfUpdatesOrDeletes(long seqNo);1549975032;A replica shard receives a new max_seq_no_of_updates from its primary shard, then calls this method_to advance this marker to at least the given sequence number.;public final void advanceMaxSeqNoOfUpdatesOrDeletes(long seqNo) {_        maxSeqNoOfUpdatesOrDeletes.updateAndGet(curr -> Math.max(curr, seqNo))__        assert maxSeqNoOfUpdatesOrDeletes.get() >= seqNo : maxSeqNoOfUpdatesOrDeletes.get() + " < " + seqNo__    };a,replica,shard,receives,a,new,from,its,primary,shard,then,calls,this,method,to,advance,this,marker,to,at,least,the,given,sequence,number;public,final,void,advance,max,seq,no,of,updates,or,deletes,long,seq,no,max,seq,no,of,updates,or,deletes,update,and,get,curr,math,max,curr,seq,no,assert,max,seq,no,of,updates,or,deletes,get,seq,no,max,seq,no,of,updates,or,deletes,get,seq,no
Engine -> public final void advanceMaxSeqNoOfUpdatesOrDeletes(long seqNo);1550220204;A replica shard receives a new max_seq_no_of_updates from its primary shard, then calls this method_to advance this marker to at least the given sequence number.;public final void advanceMaxSeqNoOfUpdatesOrDeletes(long seqNo) {_        maxSeqNoOfUpdatesOrDeletes.updateAndGet(curr -> Math.max(curr, seqNo))__        assert maxSeqNoOfUpdatesOrDeletes.get() >= seqNo : maxSeqNoOfUpdatesOrDeletes.get() + " < " + seqNo__    };a,replica,shard,receives,a,new,from,its,primary,shard,then,calls,this,method,to,advance,this,marker,to,at,least,the,given,sequence,number;public,final,void,advance,max,seq,no,of,updates,or,deletes,long,seq,no,max,seq,no,of,updates,or,deletes,update,and,get,curr,math,max,curr,seq,no,assert,max,seq,no,of,updates,or,deletes,get,seq,no,max,seq,no,of,updates,or,deletes,get,seq,no
Engine -> public final void advanceMaxSeqNoOfUpdatesOrDeletes(long seqNo);1550526771;A replica shard receives a new max_seq_no_of_updates from its primary shard, then calls this method_to advance this marker to at least the given sequence number.;public final void advanceMaxSeqNoOfUpdatesOrDeletes(long seqNo) {_        maxSeqNoOfUpdatesOrDeletes.updateAndGet(curr -> Math.max(curr, seqNo))__        assert maxSeqNoOfUpdatesOrDeletes.get() >= seqNo : maxSeqNoOfUpdatesOrDeletes.get() + " < " + seqNo__    };a,replica,shard,receives,a,new,from,its,primary,shard,then,calls,this,method,to,advance,this,marker,to,at,least,the,given,sequence,number;public,final,void,advance,max,seq,no,of,updates,or,deletes,long,seq,no,max,seq,no,of,updates,or,deletes,update,and,get,curr,math,max,curr,seq,no,assert,max,seq,no,of,updates,or,deletes,get,seq,no,max,seq,no,of,updates,or,deletes,get,seq,no
Engine -> public final void advanceMaxSeqNoOfUpdatesOrDeletes(long seqNo);1551110274;A replica shard receives a new max_seq_no_of_updates from its primary shard, then calls this method_to advance this marker to at least the given sequence number.;public final void advanceMaxSeqNoOfUpdatesOrDeletes(long seqNo) {_        maxSeqNoOfUpdatesOrDeletes.updateAndGet(curr -> Math.max(curr, seqNo))__        assert maxSeqNoOfUpdatesOrDeletes.get() >= seqNo : maxSeqNoOfUpdatesOrDeletes.get() + " < " + seqNo__    };a,replica,shard,receives,a,new,from,its,primary,shard,then,calls,this,method,to,advance,this,marker,to,at,least,the,given,sequence,number;public,final,void,advance,max,seq,no,of,updates,or,deletes,long,seq,no,max,seq,no,of,updates,or,deletes,update,and,get,curr,math,max,curr,seq,no,assert,max,seq,no,of,updates,or,deletes,get,seq,no,max,seq,no,of,updates,or,deletes,get,seq,no
Engine -> public final void advanceMaxSeqNoOfUpdatesOrDeletes(long seqNo);1551126708;A replica shard receives a new max_seq_no_of_updates from its primary shard, then calls this method_to advance this marker to at least the given sequence number.;public final void advanceMaxSeqNoOfUpdatesOrDeletes(long seqNo) {_        maxSeqNoOfUpdatesOrDeletes.updateAndGet(curr -> Math.max(curr, seqNo))__        assert maxSeqNoOfUpdatesOrDeletes.get() >= seqNo : maxSeqNoOfUpdatesOrDeletes.get() + " < " + seqNo__    };a,replica,shard,receives,a,new,from,its,primary,shard,then,calls,this,method,to,advance,this,marker,to,at,least,the,given,sequence,number;public,final,void,advance,max,seq,no,of,updates,or,deletes,long,seq,no,max,seq,no,of,updates,or,deletes,update,and,get,curr,math,max,curr,seq,no,assert,max,seq,no,of,updates,or,deletes,get,seq,no,max,seq,no,of,updates,or,deletes,get,seq,no
Engine -> protected boolean maybeFailEngine(String source, Exception e);1524684173;Check whether the engine should be failed;protected boolean maybeFailEngine(String source, Exception e) {_        if (Lucene.isCorruptionException(e)) {_            failEngine("corrupt file (source: [" + source + "])", e)__            return true__        }_        return false__    };check,whether,the,engine,should,be,failed;protected,boolean,maybe,fail,engine,string,source,exception,e,if,lucene,is,corruption,exception,e,fail,engine,corrupt,file,source,source,e,return,true,return,false
Engine -> protected boolean maybeFailEngine(String source, Exception e);1525162917;Check whether the engine should be failed;protected boolean maybeFailEngine(String source, Exception e) {_        if (Lucene.isCorruptionException(e)) {_            failEngine("corrupt file (source: [" + source + "])", e)__            return true__        }_        return false__    };check,whether,the,engine,should,be,failed;protected,boolean,maybe,fail,engine,string,source,exception,e,if,lucene,is,corruption,exception,e,fail,engine,corrupt,file,source,source,e,return,true,return,false
Engine -> protected boolean maybeFailEngine(String source, Exception e);1525334055;Check whether the engine should be failed;protected boolean maybeFailEngine(String source, Exception e) {_        if (Lucene.isCorruptionException(e)) {_            failEngine("corrupt file (source: [" + source + "])", e)__            return true__        }_        return false__    };check,whether,the,engine,should,be,failed;protected,boolean,maybe,fail,engine,string,source,exception,e,if,lucene,is,corruption,exception,e,fail,engine,corrupt,file,source,source,e,return,true,return,false
Engine -> protected boolean maybeFailEngine(String source, Exception e);1527583663;Check whether the engine should be failed;protected boolean maybeFailEngine(String source, Exception e) {_        if (Lucene.isCorruptionException(e)) {_            failEngine("corrupt file (source: [" + source + "])", e)__            return true__        }_        return false__    };check,whether,the,engine,should,be,failed;protected,boolean,maybe,fail,engine,string,source,exception,e,if,lucene,is,corruption,exception,e,fail,engine,corrupt,file,source,source,e,return,true,return,false
Engine -> protected boolean maybeFailEngine(String source, Exception e);1528706846;Check whether the engine should be failed;protected boolean maybeFailEngine(String source, Exception e) {_        if (Lucene.isCorruptionException(e)) {_            failEngine("corrupt file (source: [" + source + "])", e)__            return true__        }_        return false__    };check,whether,the,engine,should,be,failed;protected,boolean,maybe,fail,engine,string,source,exception,e,if,lucene,is,corruption,exception,e,fail,engine,corrupt,file,source,source,e,return,true,return,false
Engine -> protected boolean maybeFailEngine(String source, Exception e);1528762805;Check whether the engine should be failed;protected boolean maybeFailEngine(String source, Exception e) {_        if (Lucene.isCorruptionException(e)) {_            failEngine("corrupt file (source: [" + source + "])", e)__            return true__        }_        return false__    };check,whether,the,engine,should,be,failed;protected,boolean,maybe,fail,engine,string,source,exception,e,if,lucene,is,corruption,exception,e,fail,engine,corrupt,file,source,source,e,return,true,return,false
Engine -> protected boolean maybeFailEngine(String source, Exception e);1531910483;Check whether the engine should be failed;protected boolean maybeFailEngine(String source, Exception e) {_        if (Lucene.isCorruptionException(e)) {_            failEngine("corrupt file (source: [" + source + "])", e)__            return true__        }_        return false__    };check,whether,the,engine,should,be,failed;protected,boolean,maybe,fail,engine,string,source,exception,e,if,lucene,is,corruption,exception,e,fail,engine,corrupt,file,source,source,e,return,true,return,false
Engine -> protected boolean maybeFailEngine(String source, Exception e);1532685069;Check whether the engine should be failed;protected boolean maybeFailEngine(String source, Exception e) {_        if (Lucene.isCorruptionException(e)) {_            failEngine("corrupt file (source: [" + source + "])", e)__            return true__        }_        return false__    };check,whether,the,engine,should,be,failed;protected,boolean,maybe,fail,engine,string,source,exception,e,if,lucene,is,corruption,exception,e,fail,engine,corrupt,file,source,source,e,return,true,return,false
Engine -> protected boolean maybeFailEngine(String source, Exception e);1533295538;Check whether the engine should be failed;protected boolean maybeFailEngine(String source, Exception e) {_        if (Lucene.isCorruptionException(e)) {_            failEngine("corrupt file (source: [" + source + "])", e)__            return true__        }_        return false__    };check,whether,the,engine,should,be,failed;protected,boolean,maybe,fail,engine,string,source,exception,e,if,lucene,is,corruption,exception,e,fail,engine,corrupt,file,source,source,e,return,true,return,false
Engine -> protected boolean maybeFailEngine(String source, Exception e);1535046779;Check whether the engine should be failed;protected boolean maybeFailEngine(String source, Exception e) {_        if (Lucene.isCorruptionException(e)) {_            failEngine("corrupt file (source: [" + source + "])", e)__            return true__        }_        return false__    };check,whether,the,engine,should,be,failed;protected,boolean,maybe,fail,engine,string,source,exception,e,if,lucene,is,corruption,exception,e,fail,engine,corrupt,file,source,source,e,return,true,return,false
Engine -> protected boolean maybeFailEngine(String source, Exception e);1535723122;Check whether the engine should be failed;protected boolean maybeFailEngine(String source, Exception e) {_        if (Lucene.isCorruptionException(e)) {_            failEngine("corrupt file (source: [" + source + "])", e)__            return true__        }_        return false__    };check,whether,the,engine,should,be,failed;protected,boolean,maybe,fail,engine,string,source,exception,e,if,lucene,is,corruption,exception,e,fail,engine,corrupt,file,source,source,e,return,true,return,false
Engine -> protected boolean maybeFailEngine(String source, Exception e);1535965276;Check whether the engine should be failed;protected boolean maybeFailEngine(String source, Exception e) {_        if (Lucene.isCorruptionException(e)) {_            failEngine("corrupt file (source: [" + source + "])", e)__            return true__        }_        return false__    };check,whether,the,engine,should,be,failed;protected,boolean,maybe,fail,engine,string,source,exception,e,if,lucene,is,corruption,exception,e,fail,engine,corrupt,file,source,source,e,return,true,return,false
Engine -> protected boolean maybeFailEngine(String source, Exception e);1536314350;Check whether the engine should be failed;protected boolean maybeFailEngine(String source, Exception e) {_        if (Lucene.isCorruptionException(e)) {_            failEngine("corrupt file (source: [" + source + "])", e)__            return true__        }_        return false__    };check,whether,the,engine,should,be,failed;protected,boolean,maybe,fail,engine,string,source,exception,e,if,lucene,is,corruption,exception,e,fail,engine,corrupt,file,source,source,e,return,true,return,false
Engine -> protected boolean maybeFailEngine(String source, Exception e);1536828374;Check whether the engine should be failed;protected boolean maybeFailEngine(String source, Exception e) {_        if (Lucene.isCorruptionException(e)) {_            failEngine("corrupt file (source: [" + source + "])", e)__            return true__        }_        return false__    };check,whether,the,engine,should,be,failed;protected,boolean,maybe,fail,engine,string,source,exception,e,if,lucene,is,corruption,exception,e,fail,engine,corrupt,file,source,source,e,return,true,return,false
Engine -> protected boolean maybeFailEngine(String source, Exception e);1537371806;Check whether the engine should be failed;protected boolean maybeFailEngine(String source, Exception e) {_        if (Lucene.isCorruptionException(e)) {_            failEngine("corrupt file (source: [" + source + "])", e)__            return true__        }_        return false__    };check,whether,the,engine,should,be,failed;protected,boolean,maybe,fail,engine,string,source,exception,e,if,lucene,is,corruption,exception,e,fail,engine,corrupt,file,source,source,e,return,true,return,false
Engine -> protected boolean maybeFailEngine(String source, Exception e);1537806831;Check whether the engine should be failed;protected boolean maybeFailEngine(String source, Exception e) {_        if (Lucene.isCorruptionException(e)) {_            failEngine("corrupt file (source: [" + source + "])", e)__            return true__        }_        return false__    };check,whether,the,engine,should,be,failed;protected,boolean,maybe,fail,engine,string,source,exception,e,if,lucene,is,corruption,exception,e,fail,engine,corrupt,file,source,source,e,return,true,return,false
Engine -> protected boolean maybeFailEngine(String source, Exception e);1538067637;Check whether the engine should be failed;protected boolean maybeFailEngine(String source, Exception e) {_        if (Lucene.isCorruptionException(e)) {_            failEngine("corrupt file (source: [" + source + "])", e)__            return true__        }_        return false__    };check,whether,the,engine,should,be,failed;protected,boolean,maybe,fail,engine,string,source,exception,e,if,lucene,is,corruption,exception,e,fail,engine,corrupt,file,source,source,e,return,true,return,false
Engine -> protected boolean maybeFailEngine(String source, Exception e);1538424609;Check whether the engine should be failed;protected boolean maybeFailEngine(String source, Exception e) {_        if (Lucene.isCorruptionException(e)) {_            failEngine("corrupt file (source: [" + source + "])", e)__            return true__        }_        return false__    };check,whether,the,engine,should,be,failed;protected,boolean,maybe,fail,engine,string,source,exception,e,if,lucene,is,corruption,exception,e,fail,engine,corrupt,file,source,source,e,return,true,return,false
Engine -> protected boolean maybeFailEngine(String source, Exception e);1539723533;Check whether the engine should be failed;protected boolean maybeFailEngine(String source, Exception e) {_        if (Lucene.isCorruptionException(e)) {_            failEngine("corrupt file (source: [" + source + "])", e)__            return true__        }_        return false__    };check,whether,the,engine,should,be,failed;protected,boolean,maybe,fail,engine,string,source,exception,e,if,lucene,is,corruption,exception,e,fail,engine,corrupt,file,source,source,e,return,true,return,false
Engine -> protected boolean maybeFailEngine(String source, Exception e);1541618615;Check whether the engine should be failed;protected boolean maybeFailEngine(String source, Exception e) {_        if (Lucene.isCorruptionException(e)) {_            failEngine("corrupt file (source: [" + source + "])", e)__            return true__        }_        return false__    };check,whether,the,engine,should,be,failed;protected,boolean,maybe,fail,engine,string,source,exception,e,if,lucene,is,corruption,exception,e,fail,engine,corrupt,file,source,source,e,return,true,return,false
Engine -> protected boolean maybeFailEngine(String source, Exception e);1542697754;Check whether the engine should be failed;protected boolean maybeFailEngine(String source, Exception e) {_        if (Lucene.isCorruptionException(e)) {_            failEngine("corrupt file (source: [" + source + "])", e)__            return true__        }_        return false__    };check,whether,the,engine,should,be,failed;protected,boolean,maybe,fail,engine,string,source,exception,e,if,lucene,is,corruption,exception,e,fail,engine,corrupt,file,source,source,e,return,true,return,false
Engine -> protected boolean maybeFailEngine(String source, Exception e);1543047942;Check whether the engine should be failed;protected boolean maybeFailEngine(String source, Exception e) {_        if (Lucene.isCorruptionException(e)) {_            failEngine("corrupt file (source: [" + source + "])", e)__            return true__        }_        return false__    };check,whether,the,engine,should,be,failed;protected,boolean,maybe,fail,engine,string,source,exception,e,if,lucene,is,corruption,exception,e,fail,engine,corrupt,file,source,source,e,return,true,return,false
Engine -> protected boolean maybeFailEngine(String source, Exception e);1544545090;Check whether the engine should be failed;protected boolean maybeFailEngine(String source, Exception e) {_        if (Lucene.isCorruptionException(e)) {_            failEngine("corrupt file (source: [" + source + "])", e)__            return true__        }_        return false__    };check,whether,the,engine,should,be,failed;protected,boolean,maybe,fail,engine,string,source,exception,e,if,lucene,is,corruption,exception,e,fail,engine,corrupt,file,source,source,e,return,true,return,false
Engine -> protected boolean maybeFailEngine(String source, Exception e);1544684920;Check whether the engine should be failed;protected boolean maybeFailEngine(String source, Exception e) {_        if (Lucene.isCorruptionException(e)) {_            failEngine("corrupt file (source: [" + source + "])", e)__            return true__        }_        return false__    };check,whether,the,engine,should,be,failed;protected,boolean,maybe,fail,engine,string,source,exception,e,if,lucene,is,corruption,exception,e,fail,engine,corrupt,file,source,source,e,return,true,return,false
Engine -> protected boolean maybeFailEngine(String source, Exception e);1545140118;Check whether the engine should be failed;protected boolean maybeFailEngine(String source, Exception e) {_        if (Lucene.isCorruptionException(e)) {_            failEngine("corrupt file (source: [" + source + "])", e)__            return true__        }_        return false__    };check,whether,the,engine,should,be,failed;protected,boolean,maybe,fail,engine,string,source,exception,e,if,lucene,is,corruption,exception,e,fail,engine,corrupt,file,source,source,e,return,true,return,false
Engine -> protected boolean maybeFailEngine(String source, Exception e);1545221705;Check whether the engine should be failed;protected boolean maybeFailEngine(String source, Exception e) {_        if (Lucene.isCorruptionException(e)) {_            failEngine("corrupt file (source: [" + source + "])", e)__            return true__        }_        return false__    };check,whether,the,engine,should,be,failed;protected,boolean,maybe,fail,engine,string,source,exception,e,if,lucene,is,corruption,exception,e,fail,engine,corrupt,file,source,source,e,return,true,return,false
Engine -> protected boolean maybeFailEngine(String source, Exception e);1547332999;Check whether the engine should be failed;protected boolean maybeFailEngine(String source, Exception e) {_        if (Lucene.isCorruptionException(e)) {_            failEngine("corrupt file (source: [" + source + "])", e)__            return true__        }_        return false__    };check,whether,the,engine,should,be,failed;protected,boolean,maybe,fail,engine,string,source,exception,e,if,lucene,is,corruption,exception,e,fail,engine,corrupt,file,source,source,e,return,true,return,false
Engine -> protected boolean maybeFailEngine(String source, Exception e);1548771485;Check whether the engine should be failed;protected boolean maybeFailEngine(String source, Exception e) {_        if (Lucene.isCorruptionException(e)) {_            failEngine("corrupt file (source: [" + source + "])", e)__            return true__        }_        return false__    };check,whether,the,engine,should,be,failed;protected,boolean,maybe,fail,engine,string,source,exception,e,if,lucene,is,corruption,exception,e,fail,engine,corrupt,file,source,source,e,return,true,return,false
Engine -> protected boolean maybeFailEngine(String source, Exception e);1549891630;Check whether the engine should be failed;protected boolean maybeFailEngine(String source, Exception e) {_        if (Lucene.isCorruptionException(e)) {_            failEngine("corrupt file (source: [" + source + "])", e)__            return true__        }_        return false__    };check,whether,the,engine,should,be,failed;protected,boolean,maybe,fail,engine,string,source,exception,e,if,lucene,is,corruption,exception,e,fail,engine,corrupt,file,source,source,e,return,true,return,false
Engine -> protected boolean maybeFailEngine(String source, Exception e);1549975032;Check whether the engine should be failed;protected boolean maybeFailEngine(String source, Exception e) {_        if (Lucene.isCorruptionException(e)) {_            failEngine("corrupt file (source: [" + source + "])", e)__            return true__        }_        return false__    };check,whether,the,engine,should,be,failed;protected,boolean,maybe,fail,engine,string,source,exception,e,if,lucene,is,corruption,exception,e,fail,engine,corrupt,file,source,source,e,return,true,return,false
Engine -> protected boolean maybeFailEngine(String source, Exception e);1550220204;Check whether the engine should be failed;protected boolean maybeFailEngine(String source, Exception e) {_        if (Lucene.isCorruptionException(e)) {_            failEngine("corrupt file (source: [" + source + "])", e)__            return true__        }_        return false__    };check,whether,the,engine,should,be,failed;protected,boolean,maybe,fail,engine,string,source,exception,e,if,lucene,is,corruption,exception,e,fail,engine,corrupt,file,source,source,e,return,true,return,false
Engine -> protected boolean maybeFailEngine(String source, Exception e);1550526771;Check whether the engine should be failed;protected boolean maybeFailEngine(String source, Exception e) {_        if (Lucene.isCorruptionException(e)) {_            failEngine("corrupt file (source: [" + source + "])", e)__            return true__        }_        return false__    };check,whether,the,engine,should,be,failed;protected,boolean,maybe,fail,engine,string,source,exception,e,if,lucene,is,corruption,exception,e,fail,engine,corrupt,file,source,source,e,return,true,return,false
Engine -> protected boolean maybeFailEngine(String source, Exception e);1551110274;Check whether the engine should be failed;protected boolean maybeFailEngine(String source, Exception e) {_        if (Lucene.isCorruptionException(e)) {_            failEngine("corrupt file (source: [" + source + "])", e)__            return true__        }_        return false__    };check,whether,the,engine,should,be,failed;protected,boolean,maybe,fail,engine,string,source,exception,e,if,lucene,is,corruption,exception,e,fail,engine,corrupt,file,source,source,e,return,true,return,false
Engine -> protected boolean maybeFailEngine(String source, Exception e);1551126708;Check whether the engine should be failed;protected boolean maybeFailEngine(String source, Exception e) {_        if (Lucene.isCorruptionException(e)) {_            failEngine("corrupt file (source: [" + source + "])", e)__            return true__        }_        return false__    };check,whether,the,engine,should,be,failed;protected,boolean,maybe,fail,engine,string,source,exception,e,if,lucene,is,corruption,exception,e,fail,engine,corrupt,file,source,source,e,return,true,return,false
Engine -> public final CommitId flush() throws EngineException;1536828374;Flushes the state of the engine including the transaction log, clearing memory and persisting_documents in the lucene index to disk including a potentially heavy and durable fsync operation._This operation is not going to block if another flush operation is currently running and won't write_a lucene commit if nothing needs to be committed.__@return the commit Id for the resulting commit;public final CommitId flush() throws EngineException {_        return flush(false, false)__    };flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,and,persisting,documents,in,the,lucene,index,to,disk,including,a,potentially,heavy,and,durable,fsync,operation,this,operation,is,not,going,to,block,if,another,flush,operation,is,currently,running,and,won,t,write,a,lucene,commit,if,nothing,needs,to,be,committed,return,the,commit,id,for,the,resulting,commit;public,final,commit,id,flush,throws,engine,exception,return,flush,false,false
Engine -> public final CommitId flush() throws EngineException;1537371806;Flushes the state of the engine including the transaction log, clearing memory and persisting_documents in the lucene index to disk including a potentially heavy and durable fsync operation._This operation is not going to block if another flush operation is currently running and won't write_a lucene commit if nothing needs to be committed.__@return the commit Id for the resulting commit;public final CommitId flush() throws EngineException {_        return flush(false, false)__    };flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,and,persisting,documents,in,the,lucene,index,to,disk,including,a,potentially,heavy,and,durable,fsync,operation,this,operation,is,not,going,to,block,if,another,flush,operation,is,currently,running,and,won,t,write,a,lucene,commit,if,nothing,needs,to,be,committed,return,the,commit,id,for,the,resulting,commit;public,final,commit,id,flush,throws,engine,exception,return,flush,false,false
Engine -> public final CommitId flush() throws EngineException;1537806831;Flushes the state of the engine including the transaction log, clearing memory and persisting_documents in the lucene index to disk including a potentially heavy and durable fsync operation._This operation is not going to block if another flush operation is currently running and won't write_a lucene commit if nothing needs to be committed.__@return the commit Id for the resulting commit;public final CommitId flush() throws EngineException {_        return flush(false, false)__    };flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,and,persisting,documents,in,the,lucene,index,to,disk,including,a,potentially,heavy,and,durable,fsync,operation,this,operation,is,not,going,to,block,if,another,flush,operation,is,currently,running,and,won,t,write,a,lucene,commit,if,nothing,needs,to,be,committed,return,the,commit,id,for,the,resulting,commit;public,final,commit,id,flush,throws,engine,exception,return,flush,false,false
Engine -> public final CommitId flush() throws EngineException;1538067637;Flushes the state of the engine including the transaction log, clearing memory and persisting_documents in the lucene index to disk including a potentially heavy and durable fsync operation._This operation is not going to block if another flush operation is currently running and won't write_a lucene commit if nothing needs to be committed.__@return the commit Id for the resulting commit;public final CommitId flush() throws EngineException {_        return flush(false, false)__    };flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,and,persisting,documents,in,the,lucene,index,to,disk,including,a,potentially,heavy,and,durable,fsync,operation,this,operation,is,not,going,to,block,if,another,flush,operation,is,currently,running,and,won,t,write,a,lucene,commit,if,nothing,needs,to,be,committed,return,the,commit,id,for,the,resulting,commit;public,final,commit,id,flush,throws,engine,exception,return,flush,false,false
Engine -> public final CommitId flush() throws EngineException;1538424609;Flushes the state of the engine including the transaction log, clearing memory and persisting_documents in the lucene index to disk including a potentially heavy and durable fsync operation._This operation is not going to block if another flush operation is currently running and won't write_a lucene commit if nothing needs to be committed.__@return the commit Id for the resulting commit;public final CommitId flush() throws EngineException {_        return flush(false, false)__    };flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,and,persisting,documents,in,the,lucene,index,to,disk,including,a,potentially,heavy,and,durable,fsync,operation,this,operation,is,not,going,to,block,if,another,flush,operation,is,currently,running,and,won,t,write,a,lucene,commit,if,nothing,needs,to,be,committed,return,the,commit,id,for,the,resulting,commit;public,final,commit,id,flush,throws,engine,exception,return,flush,false,false
Engine -> public final CommitId flush() throws EngineException;1539723533;Flushes the state of the engine including the transaction log, clearing memory and persisting_documents in the lucene index to disk including a potentially heavy and durable fsync operation._This operation is not going to block if another flush operation is currently running and won't write_a lucene commit if nothing needs to be committed.__@return the commit Id for the resulting commit;public final CommitId flush() throws EngineException {_        return flush(false, false)__    };flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,and,persisting,documents,in,the,lucene,index,to,disk,including,a,potentially,heavy,and,durable,fsync,operation,this,operation,is,not,going,to,block,if,another,flush,operation,is,currently,running,and,won,t,write,a,lucene,commit,if,nothing,needs,to,be,committed,return,the,commit,id,for,the,resulting,commit;public,final,commit,id,flush,throws,engine,exception,return,flush,false,false
Engine -> public final CommitId flush() throws EngineException;1541618615;Flushes the state of the engine including the transaction log, clearing memory and persisting_documents in the lucene index to disk including a potentially heavy and durable fsync operation._This operation is not going to block if another flush operation is currently running and won't write_a lucene commit if nothing needs to be committed.__@return the commit Id for the resulting commit;public final CommitId flush() throws EngineException {_        return flush(false, false)__    };flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,and,persisting,documents,in,the,lucene,index,to,disk,including,a,potentially,heavy,and,durable,fsync,operation,this,operation,is,not,going,to,block,if,another,flush,operation,is,currently,running,and,won,t,write,a,lucene,commit,if,nothing,needs,to,be,committed,return,the,commit,id,for,the,resulting,commit;public,final,commit,id,flush,throws,engine,exception,return,flush,false,false
Engine -> public final CommitId flush() throws EngineException;1542697754;Flushes the state of the engine including the transaction log, clearing memory and persisting_documents in the lucene index to disk including a potentially heavy and durable fsync operation._This operation is not going to block if another flush operation is currently running and won't write_a lucene commit if nothing needs to be committed.__@return the commit Id for the resulting commit;public final CommitId flush() throws EngineException {_        return flush(false, false)__    };flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,and,persisting,documents,in,the,lucene,index,to,disk,including,a,potentially,heavy,and,durable,fsync,operation,this,operation,is,not,going,to,block,if,another,flush,operation,is,currently,running,and,won,t,write,a,lucene,commit,if,nothing,needs,to,be,committed,return,the,commit,id,for,the,resulting,commit;public,final,commit,id,flush,throws,engine,exception,return,flush,false,false
Engine -> public final CommitId flush() throws EngineException;1543047942;Flushes the state of the engine including the transaction log, clearing memory and persisting_documents in the lucene index to disk including a potentially heavy and durable fsync operation._This operation is not going to block if another flush operation is currently running and won't write_a lucene commit if nothing needs to be committed.__@return the commit Id for the resulting commit;public final CommitId flush() throws EngineException {_        return flush(false, false)__    };flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,and,persisting,documents,in,the,lucene,index,to,disk,including,a,potentially,heavy,and,durable,fsync,operation,this,operation,is,not,going,to,block,if,another,flush,operation,is,currently,running,and,won,t,write,a,lucene,commit,if,nothing,needs,to,be,committed,return,the,commit,id,for,the,resulting,commit;public,final,commit,id,flush,throws,engine,exception,return,flush,false,false
Engine -> public final CommitId flush() throws EngineException;1544545090;Flushes the state of the engine including the transaction log, clearing memory and persisting_documents in the lucene index to disk including a potentially heavy and durable fsync operation._This operation is not going to block if another flush operation is currently running and won't write_a lucene commit if nothing needs to be committed.__@return the commit Id for the resulting commit;public final CommitId flush() throws EngineException {_        return flush(false, false)__    };flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,and,persisting,documents,in,the,lucene,index,to,disk,including,a,potentially,heavy,and,durable,fsync,operation,this,operation,is,not,going,to,block,if,another,flush,operation,is,currently,running,and,won,t,write,a,lucene,commit,if,nothing,needs,to,be,committed,return,the,commit,id,for,the,resulting,commit;public,final,commit,id,flush,throws,engine,exception,return,flush,false,false
Engine -> public final CommitId flush() throws EngineException;1544684920;Flushes the state of the engine including the transaction log, clearing memory and persisting_documents in the lucene index to disk including a potentially heavy and durable fsync operation._This operation is not going to block if another flush operation is currently running and won't write_a lucene commit if nothing needs to be committed.__@return the commit Id for the resulting commit;public final CommitId flush() throws EngineException {_        return flush(false, false)__    };flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,and,persisting,documents,in,the,lucene,index,to,disk,including,a,potentially,heavy,and,durable,fsync,operation,this,operation,is,not,going,to,block,if,another,flush,operation,is,currently,running,and,won,t,write,a,lucene,commit,if,nothing,needs,to,be,committed,return,the,commit,id,for,the,resulting,commit;public,final,commit,id,flush,throws,engine,exception,return,flush,false,false
Engine -> public final CommitId flush() throws EngineException;1545140118;Flushes the state of the engine including the transaction log, clearing memory and persisting_documents in the lucene index to disk including a potentially heavy and durable fsync operation._This operation is not going to block if another flush operation is currently running and won't write_a lucene commit if nothing needs to be committed.__@return the commit Id for the resulting commit;public final CommitId flush() throws EngineException {_        return flush(false, false)__    };flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,and,persisting,documents,in,the,lucene,index,to,disk,including,a,potentially,heavy,and,durable,fsync,operation,this,operation,is,not,going,to,block,if,another,flush,operation,is,currently,running,and,won,t,write,a,lucene,commit,if,nothing,needs,to,be,committed,return,the,commit,id,for,the,resulting,commit;public,final,commit,id,flush,throws,engine,exception,return,flush,false,false
Engine -> public final CommitId flush() throws EngineException;1545221705;Flushes the state of the engine including the transaction log, clearing memory and persisting_documents in the lucene index to disk including a potentially heavy and durable fsync operation._This operation is not going to block if another flush operation is currently running and won't write_a lucene commit if nothing needs to be committed.__@return the commit Id for the resulting commit;public final CommitId flush() throws EngineException {_        return flush(false, false)__    };flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,and,persisting,documents,in,the,lucene,index,to,disk,including,a,potentially,heavy,and,durable,fsync,operation,this,operation,is,not,going,to,block,if,another,flush,operation,is,currently,running,and,won,t,write,a,lucene,commit,if,nothing,needs,to,be,committed,return,the,commit,id,for,the,resulting,commit;public,final,commit,id,flush,throws,engine,exception,return,flush,false,false
Engine -> public final CommitId flush() throws EngineException;1547332999;Flushes the state of the engine including the transaction log, clearing memory and persisting_documents in the lucene index to disk including a potentially heavy and durable fsync operation._This operation is not going to block if another flush operation is currently running and won't write_a lucene commit if nothing needs to be committed.__@return the commit Id for the resulting commit;public final CommitId flush() throws EngineException {_        return flush(false, false)__    };flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,and,persisting,documents,in,the,lucene,index,to,disk,including,a,potentially,heavy,and,durable,fsync,operation,this,operation,is,not,going,to,block,if,another,flush,operation,is,currently,running,and,won,t,write,a,lucene,commit,if,nothing,needs,to,be,committed,return,the,commit,id,for,the,resulting,commit;public,final,commit,id,flush,throws,engine,exception,return,flush,false,false
Engine -> public final CommitId flush() throws EngineException;1548771485;Flushes the state of the engine including the transaction log, clearing memory and persisting_documents in the lucene index to disk including a potentially heavy and durable fsync operation._This operation is not going to block if another flush operation is currently running and won't write_a lucene commit if nothing needs to be committed.__@return the commit Id for the resulting commit;public final CommitId flush() throws EngineException {_        return flush(false, false)__    };flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,and,persisting,documents,in,the,lucene,index,to,disk,including,a,potentially,heavy,and,durable,fsync,operation,this,operation,is,not,going,to,block,if,another,flush,operation,is,currently,running,and,won,t,write,a,lucene,commit,if,nothing,needs,to,be,committed,return,the,commit,id,for,the,resulting,commit;public,final,commit,id,flush,throws,engine,exception,return,flush,false,false
Engine -> public final CommitId flush() throws EngineException;1549891630;Flushes the state of the engine including the transaction log, clearing memory and persisting_documents in the lucene index to disk including a potentially heavy and durable fsync operation._This operation is not going to block if another flush operation is currently running and won't write_a lucene commit if nothing needs to be committed.__@return the commit Id for the resulting commit;public final CommitId flush() throws EngineException {_        return flush(false, false)__    };flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,and,persisting,documents,in,the,lucene,index,to,disk,including,a,potentially,heavy,and,durable,fsync,operation,this,operation,is,not,going,to,block,if,another,flush,operation,is,currently,running,and,won,t,write,a,lucene,commit,if,nothing,needs,to,be,committed,return,the,commit,id,for,the,resulting,commit;public,final,commit,id,flush,throws,engine,exception,return,flush,false,false
Engine -> public final CommitId flush() throws EngineException;1549975032;Flushes the state of the engine including the transaction log, clearing memory and persisting_documents in the lucene index to disk including a potentially heavy and durable fsync operation._This operation is not going to block if another flush operation is currently running and won't write_a lucene commit if nothing needs to be committed.__@return the commit Id for the resulting commit;public final CommitId flush() throws EngineException {_        return flush(false, false)__    };flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,and,persisting,documents,in,the,lucene,index,to,disk,including,a,potentially,heavy,and,durable,fsync,operation,this,operation,is,not,going,to,block,if,another,flush,operation,is,currently,running,and,won,t,write,a,lucene,commit,if,nothing,needs,to,be,committed,return,the,commit,id,for,the,resulting,commit;public,final,commit,id,flush,throws,engine,exception,return,flush,false,false
Engine -> public final CommitId flush() throws EngineException;1550220204;Flushes the state of the engine including the transaction log, clearing memory and persisting_documents in the lucene index to disk including a potentially heavy and durable fsync operation._This operation is not going to block if another flush operation is currently running and won't write_a lucene commit if nothing needs to be committed.__@return the commit Id for the resulting commit;public final CommitId flush() throws EngineException {_        return flush(false, false)__    };flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,and,persisting,documents,in,the,lucene,index,to,disk,including,a,potentially,heavy,and,durable,fsync,operation,this,operation,is,not,going,to,block,if,another,flush,operation,is,currently,running,and,won,t,write,a,lucene,commit,if,nothing,needs,to,be,committed,return,the,commit,id,for,the,resulting,commit;public,final,commit,id,flush,throws,engine,exception,return,flush,false,false
Engine -> public final CommitId flush() throws EngineException;1550526771;Flushes the state of the engine including the transaction log, clearing memory and persisting_documents in the lucene index to disk including a potentially heavy and durable fsync operation._This operation is not going to block if another flush operation is currently running and won't write_a lucene commit if nothing needs to be committed.__@return the commit Id for the resulting commit;public final CommitId flush() throws EngineException {_        return flush(false, false)__    };flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,and,persisting,documents,in,the,lucene,index,to,disk,including,a,potentially,heavy,and,durable,fsync,operation,this,operation,is,not,going,to,block,if,another,flush,operation,is,currently,running,and,won,t,write,a,lucene,commit,if,nothing,needs,to,be,committed,return,the,commit,id,for,the,resulting,commit;public,final,commit,id,flush,throws,engine,exception,return,flush,false,false
Engine -> public final CommitId flush() throws EngineException;1551110274;Flushes the state of the engine including the transaction log, clearing memory and persisting_documents in the lucene index to disk including a potentially heavy and durable fsync operation._This operation is not going to block if another flush operation is currently running and won't write_a lucene commit if nothing needs to be committed.__@return the commit Id for the resulting commit;public final CommitId flush() throws EngineException {_        return flush(false, false)__    };flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,and,persisting,documents,in,the,lucene,index,to,disk,including,a,potentially,heavy,and,durable,fsync,operation,this,operation,is,not,going,to,block,if,another,flush,operation,is,currently,running,and,won,t,write,a,lucene,commit,if,nothing,needs,to,be,committed,return,the,commit,id,for,the,resulting,commit;public,final,commit,id,flush,throws,engine,exception,return,flush,false,false
Engine -> public final CommitId flush() throws EngineException;1551126708;Flushes the state of the engine including the transaction log, clearing memory and persisting_documents in the lucene index to disk including a potentially heavy and durable fsync operation._This operation is not going to block if another flush operation is currently running and won't write_a lucene commit if nothing needs to be committed.__@return the commit Id for the resulting commit;public final CommitId flush() throws EngineException {_        return flush(false, false)__    };flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,and,persisting,documents,in,the,lucene,index,to,disk,including,a,potentially,heavy,and,durable,fsync,operation,this,operation,is,not,going,to,block,if,another,flush,operation,is,currently,running,and,won,t,write,a,lucene,commit,if,nothing,needs,to,be,committed,return,the,commit,id,for,the,resulting,commit;public,final,commit,id,flush,throws,engine,exception,return,flush,false,false
Engine -> public long getLastWriteNanos();1524684173;Returns the timestamp of the last write in nanoseconds._Note: this time might not be absolutely accurate since the {@link Operation#startTime()} is used which might be_slightly inaccurate.__@see System#nanoTime()_@see Operation#startTime();public long getLastWriteNanos() {_        return this.lastWriteNanos__    };returns,the,timestamp,of,the,last,write,in,nanoseconds,note,this,time,might,not,be,absolutely,accurate,since,the,link,operation,start,time,is,used,which,might,be,slightly,inaccurate,see,system,nano,time,see,operation,start,time;public,long,get,last,write,nanos,return,this,last,write,nanos
Engine -> public long getLastWriteNanos();1525162917;Returns the timestamp of the last write in nanoseconds._Note: this time might not be absolutely accurate since the {@link Operation#startTime()} is used which might be_slightly inaccurate.__@see System#nanoTime()_@see Operation#startTime();public long getLastWriteNanos() {_        return this.lastWriteNanos__    };returns,the,timestamp,of,the,last,write,in,nanoseconds,note,this,time,might,not,be,absolutely,accurate,since,the,link,operation,start,time,is,used,which,might,be,slightly,inaccurate,see,system,nano,time,see,operation,start,time;public,long,get,last,write,nanos,return,this,last,write,nanos
Engine -> public long getLastWriteNanos();1525334055;Returns the timestamp of the last write in nanoseconds._Note: this time might not be absolutely accurate since the {@link Operation#startTime()} is used which might be_slightly inaccurate.__@see System#nanoTime()_@see Operation#startTime();public long getLastWriteNanos() {_        return this.lastWriteNanos__    };returns,the,timestamp,of,the,last,write,in,nanoseconds,note,this,time,might,not,be,absolutely,accurate,since,the,link,operation,start,time,is,used,which,might,be,slightly,inaccurate,see,system,nano,time,see,operation,start,time;public,long,get,last,write,nanos,return,this,last,write,nanos
Engine -> public long getLastWriteNanos();1527583663;Returns the timestamp of the last write in nanoseconds._Note: this time might not be absolutely accurate since the {@link Operation#startTime()} is used which might be_slightly inaccurate.__@see System#nanoTime()_@see Operation#startTime();public long getLastWriteNanos() {_        return this.lastWriteNanos__    };returns,the,timestamp,of,the,last,write,in,nanoseconds,note,this,time,might,not,be,absolutely,accurate,since,the,link,operation,start,time,is,used,which,might,be,slightly,inaccurate,see,system,nano,time,see,operation,start,time;public,long,get,last,write,nanos,return,this,last,write,nanos
Engine -> public long getLastWriteNanos();1528706846;Returns the timestamp of the last write in nanoseconds._Note: this time might not be absolutely accurate since the {@link Operation#startTime()} is used which might be_slightly inaccurate.__@see System#nanoTime()_@see Operation#startTime();public long getLastWriteNanos() {_        return this.lastWriteNanos__    };returns,the,timestamp,of,the,last,write,in,nanoseconds,note,this,time,might,not,be,absolutely,accurate,since,the,link,operation,start,time,is,used,which,might,be,slightly,inaccurate,see,system,nano,time,see,operation,start,time;public,long,get,last,write,nanos,return,this,last,write,nanos
Engine -> public long getLastWriteNanos();1528762805;Returns the timestamp of the last write in nanoseconds._Note: this time might not be absolutely accurate since the {@link Operation#startTime()} is used which might be_slightly inaccurate.__@see System#nanoTime()_@see Operation#startTime();public long getLastWriteNanos() {_        return this.lastWriteNanos__    };returns,the,timestamp,of,the,last,write,in,nanoseconds,note,this,time,might,not,be,absolutely,accurate,since,the,link,operation,start,time,is,used,which,might,be,slightly,inaccurate,see,system,nano,time,see,operation,start,time;public,long,get,last,write,nanos,return,this,last,write,nanos
Engine -> public long getLastWriteNanos();1531910483;Returns the timestamp of the last write in nanoseconds._Note: this time might not be absolutely accurate since the {@link Operation#startTime()} is used which might be_slightly inaccurate.__@see System#nanoTime()_@see Operation#startTime();public long getLastWriteNanos() {_        return this.lastWriteNanos__    };returns,the,timestamp,of,the,last,write,in,nanoseconds,note,this,time,might,not,be,absolutely,accurate,since,the,link,operation,start,time,is,used,which,might,be,slightly,inaccurate,see,system,nano,time,see,operation,start,time;public,long,get,last,write,nanos,return,this,last,write,nanos
Engine -> public long getLastWriteNanos();1532685069;Returns the timestamp of the last write in nanoseconds._Note: this time might not be absolutely accurate since the {@link Operation#startTime()} is used which might be_slightly inaccurate.__@see System#nanoTime()_@see Operation#startTime();public long getLastWriteNanos() {_        return this.lastWriteNanos__    };returns,the,timestamp,of,the,last,write,in,nanoseconds,note,this,time,might,not,be,absolutely,accurate,since,the,link,operation,start,time,is,used,which,might,be,slightly,inaccurate,see,system,nano,time,see,operation,start,time;public,long,get,last,write,nanos,return,this,last,write,nanos
Engine -> public long getLastWriteNanos();1533295538;Returns the timestamp of the last write in nanoseconds._Note: this time might not be absolutely accurate since the {@link Operation#startTime()} is used which might be_slightly inaccurate.__@see System#nanoTime()_@see Operation#startTime();public long getLastWriteNanos() {_        return this.lastWriteNanos__    };returns,the,timestamp,of,the,last,write,in,nanoseconds,note,this,time,might,not,be,absolutely,accurate,since,the,link,operation,start,time,is,used,which,might,be,slightly,inaccurate,see,system,nano,time,see,operation,start,time;public,long,get,last,write,nanos,return,this,last,write,nanos
Engine -> public long getLastWriteNanos();1535046779;Returns the timestamp of the last write in nanoseconds._Note: this time might not be absolutely accurate since the {@link Operation#startTime()} is used which might be_slightly inaccurate.__@see System#nanoTime()_@see Operation#startTime();public long getLastWriteNanos() {_        return this.lastWriteNanos__    };returns,the,timestamp,of,the,last,write,in,nanoseconds,note,this,time,might,not,be,absolutely,accurate,since,the,link,operation,start,time,is,used,which,might,be,slightly,inaccurate,see,system,nano,time,see,operation,start,time;public,long,get,last,write,nanos,return,this,last,write,nanos
Engine -> public long getLastWriteNanos();1535723122;Returns the timestamp of the last write in nanoseconds._Note: this time might not be absolutely accurate since the {@link Operation#startTime()} is used which might be_slightly inaccurate.__@see System#nanoTime()_@see Operation#startTime();public long getLastWriteNanos() {_        return this.lastWriteNanos__    };returns,the,timestamp,of,the,last,write,in,nanoseconds,note,this,time,might,not,be,absolutely,accurate,since,the,link,operation,start,time,is,used,which,might,be,slightly,inaccurate,see,system,nano,time,see,operation,start,time;public,long,get,last,write,nanos,return,this,last,write,nanos
Engine -> public long getLastWriteNanos();1535965276;Returns the timestamp of the last write in nanoseconds._Note: this time might not be absolutely accurate since the {@link Operation#startTime()} is used which might be_slightly inaccurate.__@see System#nanoTime()_@see Operation#startTime();public long getLastWriteNanos() {_        return this.lastWriteNanos__    };returns,the,timestamp,of,the,last,write,in,nanoseconds,note,this,time,might,not,be,absolutely,accurate,since,the,link,operation,start,time,is,used,which,might,be,slightly,inaccurate,see,system,nano,time,see,operation,start,time;public,long,get,last,write,nanos,return,this,last,write,nanos
Engine -> public long getLastWriteNanos();1536314350;Returns the timestamp of the last write in nanoseconds._Note: this time might not be absolutely accurate since the {@link Operation#startTime()} is used which might be_slightly inaccurate.__@see System#nanoTime()_@see Operation#startTime();public long getLastWriteNanos() {_        return this.lastWriteNanos__    };returns,the,timestamp,of,the,last,write,in,nanoseconds,note,this,time,might,not,be,absolutely,accurate,since,the,link,operation,start,time,is,used,which,might,be,slightly,inaccurate,see,system,nano,time,see,operation,start,time;public,long,get,last,write,nanos,return,this,last,write,nanos
Engine -> public long getLastWriteNanos();1536828374;Returns the timestamp of the last write in nanoseconds._Note: this time might not be absolutely accurate since the {@link Operation#startTime()} is used which might be_slightly inaccurate.__@see System#nanoTime()_@see Operation#startTime();public long getLastWriteNanos() {_        return this.lastWriteNanos__    };returns,the,timestamp,of,the,last,write,in,nanoseconds,note,this,time,might,not,be,absolutely,accurate,since,the,link,operation,start,time,is,used,which,might,be,slightly,inaccurate,see,system,nano,time,see,operation,start,time;public,long,get,last,write,nanos,return,this,last,write,nanos
Engine -> public long getLastWriteNanos();1537371806;Returns the timestamp of the last write in nanoseconds._Note: this time might not be absolutely accurate since the {@link Operation#startTime()} is used which might be_slightly inaccurate.__@see System#nanoTime()_@see Operation#startTime();public long getLastWriteNanos() {_        return this.lastWriteNanos__    };returns,the,timestamp,of,the,last,write,in,nanoseconds,note,this,time,might,not,be,absolutely,accurate,since,the,link,operation,start,time,is,used,which,might,be,slightly,inaccurate,see,system,nano,time,see,operation,start,time;public,long,get,last,write,nanos,return,this,last,write,nanos
Engine -> public long getLastWriteNanos();1537806831;Returns the timestamp of the last write in nanoseconds._Note: this time might not be absolutely accurate since the {@link Operation#startTime()} is used which might be_slightly inaccurate.__@see System#nanoTime()_@see Operation#startTime();public long getLastWriteNanos() {_        return this.lastWriteNanos__    };returns,the,timestamp,of,the,last,write,in,nanoseconds,note,this,time,might,not,be,absolutely,accurate,since,the,link,operation,start,time,is,used,which,might,be,slightly,inaccurate,see,system,nano,time,see,operation,start,time;public,long,get,last,write,nanos,return,this,last,write,nanos
Engine -> public long getLastWriteNanos();1538067637;Returns the timestamp of the last write in nanoseconds._Note: this time might not be absolutely accurate since the {@link Operation#startTime()} is used which might be_slightly inaccurate.__@see System#nanoTime()_@see Operation#startTime();public long getLastWriteNanos() {_        return this.lastWriteNanos__    };returns,the,timestamp,of,the,last,write,in,nanoseconds,note,this,time,might,not,be,absolutely,accurate,since,the,link,operation,start,time,is,used,which,might,be,slightly,inaccurate,see,system,nano,time,see,operation,start,time;public,long,get,last,write,nanos,return,this,last,write,nanos
Engine -> public long getLastWriteNanos();1538424609;Returns the timestamp of the last write in nanoseconds._Note: this time might not be absolutely accurate since the {@link Operation#startTime()} is used which might be_slightly inaccurate.__@see System#nanoTime()_@see Operation#startTime();public long getLastWriteNanos() {_        return this.lastWriteNanos__    };returns,the,timestamp,of,the,last,write,in,nanoseconds,note,this,time,might,not,be,absolutely,accurate,since,the,link,operation,start,time,is,used,which,might,be,slightly,inaccurate,see,system,nano,time,see,operation,start,time;public,long,get,last,write,nanos,return,this,last,write,nanos
Engine -> public long getLastWriteNanos();1539723533;Returns the timestamp of the last write in nanoseconds._Note: this time might not be absolutely accurate since the {@link Operation#startTime()} is used which might be_slightly inaccurate.__@see System#nanoTime()_@see Operation#startTime();public long getLastWriteNanos() {_        return this.lastWriteNanos__    };returns,the,timestamp,of,the,last,write,in,nanoseconds,note,this,time,might,not,be,absolutely,accurate,since,the,link,operation,start,time,is,used,which,might,be,slightly,inaccurate,see,system,nano,time,see,operation,start,time;public,long,get,last,write,nanos,return,this,last,write,nanos
Engine -> public long getLastWriteNanos();1541618615;Returns the timestamp of the last write in nanoseconds._Note: this time might not be absolutely accurate since the {@link Operation#startTime()} is used which might be_slightly inaccurate.__@see System#nanoTime()_@see Operation#startTime();public long getLastWriteNanos() {_        return this.lastWriteNanos__    };returns,the,timestamp,of,the,last,write,in,nanoseconds,note,this,time,might,not,be,absolutely,accurate,since,the,link,operation,start,time,is,used,which,might,be,slightly,inaccurate,see,system,nano,time,see,operation,start,time;public,long,get,last,write,nanos,return,this,last,write,nanos
Engine -> public long getLastWriteNanos();1542697754;Returns the timestamp of the last write in nanoseconds._Note: this time might not be absolutely accurate since the {@link Operation#startTime()} is used which might be_slightly inaccurate.__@see System#nanoTime()_@see Operation#startTime();public long getLastWriteNanos() {_        return this.lastWriteNanos__    };returns,the,timestamp,of,the,last,write,in,nanoseconds,note,this,time,might,not,be,absolutely,accurate,since,the,link,operation,start,time,is,used,which,might,be,slightly,inaccurate,see,system,nano,time,see,operation,start,time;public,long,get,last,write,nanos,return,this,last,write,nanos
Engine -> public long getLastWriteNanos();1543047942;Returns the timestamp of the last write in nanoseconds._Note: this time might not be absolutely accurate since the {@link Operation#startTime()} is used which might be_slightly inaccurate.__@see System#nanoTime()_@see Operation#startTime();public long getLastWriteNanos() {_        return this.lastWriteNanos__    };returns,the,timestamp,of,the,last,write,in,nanoseconds,note,this,time,might,not,be,absolutely,accurate,since,the,link,operation,start,time,is,used,which,might,be,slightly,inaccurate,see,system,nano,time,see,operation,start,time;public,long,get,last,write,nanos,return,this,last,write,nanos
Engine -> public long getLastWriteNanos();1544545090;Returns the timestamp of the last write in nanoseconds._Note: this time might not be absolutely accurate since the {@link Operation#startTime()} is used which might be_slightly inaccurate.__@see System#nanoTime()_@see Operation#startTime();public long getLastWriteNanos() {_        return this.lastWriteNanos__    };returns,the,timestamp,of,the,last,write,in,nanoseconds,note,this,time,might,not,be,absolutely,accurate,since,the,link,operation,start,time,is,used,which,might,be,slightly,inaccurate,see,system,nano,time,see,operation,start,time;public,long,get,last,write,nanos,return,this,last,write,nanos
Engine -> public long getLastWriteNanos();1544684920;Returns the timestamp of the last write in nanoseconds._Note: this time might not be absolutely accurate since the {@link Operation#startTime()} is used which might be_slightly inaccurate.__@see System#nanoTime()_@see Operation#startTime();public long getLastWriteNanos() {_        return this.lastWriteNanos__    };returns,the,timestamp,of,the,last,write,in,nanoseconds,note,this,time,might,not,be,absolutely,accurate,since,the,link,operation,start,time,is,used,which,might,be,slightly,inaccurate,see,system,nano,time,see,operation,start,time;public,long,get,last,write,nanos,return,this,last,write,nanos
Engine -> public long getLastWriteNanos();1545140118;Returns the timestamp of the last write in nanoseconds._Note: this time might not be absolutely accurate since the {@link Operation#startTime()} is used which might be_slightly inaccurate.__@see System#nanoTime()_@see Operation#startTime();public long getLastWriteNanos() {_        return this.lastWriteNanos__    };returns,the,timestamp,of,the,last,write,in,nanoseconds,note,this,time,might,not,be,absolutely,accurate,since,the,link,operation,start,time,is,used,which,might,be,slightly,inaccurate,see,system,nano,time,see,operation,start,time;public,long,get,last,write,nanos,return,this,last,write,nanos
Engine -> public long getLastWriteNanos();1545221705;Returns the timestamp of the last write in nanoseconds._Note: this time might not be absolutely accurate since the {@link Operation#startTime()} is used which might be_slightly inaccurate.__@see System#nanoTime()_@see Operation#startTime();public long getLastWriteNanos() {_        return this.lastWriteNanos__    };returns,the,timestamp,of,the,last,write,in,nanoseconds,note,this,time,might,not,be,absolutely,accurate,since,the,link,operation,start,time,is,used,which,might,be,slightly,inaccurate,see,system,nano,time,see,operation,start,time;public,long,get,last,write,nanos,return,this,last,write,nanos
Engine -> public long getLastWriteNanos();1547332999;Returns the timestamp of the last write in nanoseconds._Note: this time might not be absolutely accurate since the {@link Operation#startTime()} is used which might be_slightly inaccurate.__@see System#nanoTime()_@see Operation#startTime();public long getLastWriteNanos() {_        return this.lastWriteNanos__    };returns,the,timestamp,of,the,last,write,in,nanoseconds,note,this,time,might,not,be,absolutely,accurate,since,the,link,operation,start,time,is,used,which,might,be,slightly,inaccurate,see,system,nano,time,see,operation,start,time;public,long,get,last,write,nanos,return,this,last,write,nanos
Engine -> public long getLastWriteNanos();1548771485;Returns the timestamp of the last write in nanoseconds._Note: this time might not be absolutely accurate since the {@link Operation#startTime()} is used which might be_slightly inaccurate.__@see System#nanoTime()_@see Operation#startTime();public long getLastWriteNanos() {_        return this.lastWriteNanos__    };returns,the,timestamp,of,the,last,write,in,nanoseconds,note,this,time,might,not,be,absolutely,accurate,since,the,link,operation,start,time,is,used,which,might,be,slightly,inaccurate,see,system,nano,time,see,operation,start,time;public,long,get,last,write,nanos,return,this,last,write,nanos
Engine -> public long getLastWriteNanos();1549891630;Returns the timestamp of the last write in nanoseconds._Note: this time might not be absolutely accurate since the {@link Operation#startTime()} is used which might be_slightly inaccurate.__@see System#nanoTime()_@see Operation#startTime();public long getLastWriteNanos() {_        return this.lastWriteNanos__    };returns,the,timestamp,of,the,last,write,in,nanoseconds,note,this,time,might,not,be,absolutely,accurate,since,the,link,operation,start,time,is,used,which,might,be,slightly,inaccurate,see,system,nano,time,see,operation,start,time;public,long,get,last,write,nanos,return,this,last,write,nanos
Engine -> public long getLastWriteNanos();1549975032;Returns the timestamp of the last write in nanoseconds._Note: this time might not be absolutely accurate since the {@link Operation#startTime()} is used which might be_slightly inaccurate.__@see System#nanoTime()_@see Operation#startTime();public long getLastWriteNanos() {_        return this.lastWriteNanos__    };returns,the,timestamp,of,the,last,write,in,nanoseconds,note,this,time,might,not,be,absolutely,accurate,since,the,link,operation,start,time,is,used,which,might,be,slightly,inaccurate,see,system,nano,time,see,operation,start,time;public,long,get,last,write,nanos,return,this,last,write,nanos
Engine -> public long getLastWriteNanos();1550220204;Returns the timestamp of the last write in nanoseconds._Note: this time might not be absolutely accurate since the {@link Operation#startTime()} is used which might be_slightly inaccurate.__@see System#nanoTime()_@see Operation#startTime();public long getLastWriteNanos() {_        return this.lastWriteNanos__    };returns,the,timestamp,of,the,last,write,in,nanoseconds,note,this,time,might,not,be,absolutely,accurate,since,the,link,operation,start,time,is,used,which,might,be,slightly,inaccurate,see,system,nano,time,see,operation,start,time;public,long,get,last,write,nanos,return,this,last,write,nanos
Engine -> public long getLastWriteNanos();1550526771;Returns the timestamp of the last write in nanoseconds._Note: this time might not be absolutely accurate since the {@link Operation#startTime()} is used which might be_slightly inaccurate.__@see System#nanoTime()_@see Operation#startTime();public long getLastWriteNanos() {_        return this.lastWriteNanos__    };returns,the,timestamp,of,the,last,write,in,nanoseconds,note,this,time,might,not,be,absolutely,accurate,since,the,link,operation,start,time,is,used,which,might,be,slightly,inaccurate,see,system,nano,time,see,operation,start,time;public,long,get,last,write,nanos,return,this,last,write,nanos
Engine -> public long getLastWriteNanos();1551110274;Returns the timestamp of the last write in nanoseconds._Note: this time might not be absolutely accurate since the {@link Operation#startTime()} is used which might be_slightly inaccurate.__@see System#nanoTime()_@see Operation#startTime();public long getLastWriteNanos() {_        return this.lastWriteNanos__    };returns,the,timestamp,of,the,last,write,in,nanoseconds,note,this,time,might,not,be,absolutely,accurate,since,the,link,operation,start,time,is,used,which,might,be,slightly,inaccurate,see,system,nano,time,see,operation,start,time;public,long,get,last,write,nanos,return,this,last,write,nanos
Engine -> public long getLastWriteNanos();1551126708;Returns the timestamp of the last write in nanoseconds._Note: this time might not be absolutely accurate since the {@link Operation#startTime()} is used which might be_slightly inaccurate.__@see System#nanoTime()_@see Operation#startTime();public long getLastWriteNanos() {_        return this.lastWriteNanos__    };returns,the,timestamp,of,the,last,write,in,nanoseconds,note,this,time,might,not,be,absolutely,accurate,since,the,link,operation,start,time,is,used,which,might,be,slightly,inaccurate,see,system,nano,time,see,operation,start,time;public,long,get,last,write,nanos,return,this,last,write,nanos
Engine -> public void failEngine(String reason, @Nullable Exception failure);1524684173;fail engine due to some error. the engine will also be closed._The underlying store is marked corrupted iff failure is caused by index corruption;public void failEngine(String reason, @Nullable Exception failure) {_        if (failure != null) {_            maybeDie(reason, failure)__        }_        if (failEngineLock.tryLock()) {_            store.incRef()__            try {_                if (failedEngine.get() != null) {_                    logger.warn(() -> new ParameterizedMessage("tried to fail engine but engine is already failed. ignoring. [{}]", reason), failure)__                    return__                }_                _                _                failedEngine.set((failure != null) ? failure : new IllegalStateException(reason))__                try {_                    _                    closeNoLock("engine failed on: [" + reason + "]", closedLatch)__                } finally {_                    logger.warn(() -> new ParameterizedMessage("failed engine [{}]", reason), failure)__                    _                    _                    _                    _                    _                    if (Lucene.isCorruptionException(failure)) {_                        try {_                            store.markStoreCorrupted(new IOException("failed engine (reason: [" + reason + "])", ExceptionsHelper.unwrapCorruption(failure)))__                        } catch (IOException e) {_                            logger.warn("Couldn't mark store corrupted", e)__                        }_                    }_                    eventListener.onFailedEngine(reason, failure)__                }_            } catch (Exception inner) {_                if (failure != null) inner.addSuppressed(failure)__                _                logger.warn("failEngine threw exception", inner)__            } finally {_                store.decRef()__            }_        } else {_            logger.debug(() -> new ParameterizedMessage("tried to fail engine but could not acquire lock - engine should be failed by now [{}]", reason), failure)__        }_    };fail,engine,due,to,some,error,the,engine,will,also,be,closed,the,underlying,store,is,marked,corrupted,iff,failure,is,caused,by,index,corruption;public,void,fail,engine,string,reason,nullable,exception,failure,if,failure,null,maybe,die,reason,failure,if,fail,engine,lock,try,lock,store,inc,ref,try,if,failed,engine,get,null,logger,warn,new,parameterized,message,tried,to,fail,engine,but,engine,is,already,failed,ignoring,reason,failure,return,failed,engine,set,failure,null,failure,new,illegal,state,exception,reason,try,close,no,lock,engine,failed,on,reason,closed,latch,finally,logger,warn,new,parameterized,message,failed,engine,reason,failure,if,lucene,is,corruption,exception,failure,try,store,mark,store,corrupted,new,ioexception,failed,engine,reason,reason,exceptions,helper,unwrap,corruption,failure,catch,ioexception,e,logger,warn,couldn,t,mark,store,corrupted,e,event,listener,on,failed,engine,reason,failure,catch,exception,inner,if,failure,null,inner,add,suppressed,failure,logger,warn,fail,engine,threw,exception,inner,finally,store,dec,ref,else,logger,debug,new,parameterized,message,tried,to,fail,engine,but,could,not,acquire,lock,engine,should,be,failed,by,now,reason,failure
Engine -> public void failEngine(String reason, @Nullable Exception failure);1525162917;fail engine due to some error. the engine will also be closed._The underlying store is marked corrupted iff failure is caused by index corruption;public void failEngine(String reason, @Nullable Exception failure) {_        if (failure != null) {_            maybeDie(reason, failure)__        }_        if (failEngineLock.tryLock()) {_            store.incRef()__            try {_                if (failedEngine.get() != null) {_                    logger.warn(() -> new ParameterizedMessage("tried to fail engine but engine is already failed. ignoring. [{}]", reason), failure)__                    return__                }_                _                _                failedEngine.set((failure != null) ? failure : new IllegalStateException(reason))__                try {_                    _                    closeNoLock("engine failed on: [" + reason + "]", closedLatch)__                } finally {_                    logger.warn(() -> new ParameterizedMessage("failed engine [{}]", reason), failure)__                    _                    _                    _                    _                    _                    if (Lucene.isCorruptionException(failure)) {_                        try {_                            store.markStoreCorrupted(new IOException("failed engine (reason: [" + reason + "])", ExceptionsHelper.unwrapCorruption(failure)))__                        } catch (IOException e) {_                            logger.warn("Couldn't mark store corrupted", e)__                        }_                    }_                    eventListener.onFailedEngine(reason, failure)__                }_            } catch (Exception inner) {_                if (failure != null) inner.addSuppressed(failure)__                _                logger.warn("failEngine threw exception", inner)__            } finally {_                store.decRef()__            }_        } else {_            logger.debug(() -> new ParameterizedMessage("tried to fail engine but could not acquire lock - engine should be failed by now [{}]", reason), failure)__        }_    };fail,engine,due,to,some,error,the,engine,will,also,be,closed,the,underlying,store,is,marked,corrupted,iff,failure,is,caused,by,index,corruption;public,void,fail,engine,string,reason,nullable,exception,failure,if,failure,null,maybe,die,reason,failure,if,fail,engine,lock,try,lock,store,inc,ref,try,if,failed,engine,get,null,logger,warn,new,parameterized,message,tried,to,fail,engine,but,engine,is,already,failed,ignoring,reason,failure,return,failed,engine,set,failure,null,failure,new,illegal,state,exception,reason,try,close,no,lock,engine,failed,on,reason,closed,latch,finally,logger,warn,new,parameterized,message,failed,engine,reason,failure,if,lucene,is,corruption,exception,failure,try,store,mark,store,corrupted,new,ioexception,failed,engine,reason,reason,exceptions,helper,unwrap,corruption,failure,catch,ioexception,e,logger,warn,couldn,t,mark,store,corrupted,e,event,listener,on,failed,engine,reason,failure,catch,exception,inner,if,failure,null,inner,add,suppressed,failure,logger,warn,fail,engine,threw,exception,inner,finally,store,dec,ref,else,logger,debug,new,parameterized,message,tried,to,fail,engine,but,could,not,acquire,lock,engine,should,be,failed,by,now,reason,failure
Engine -> public void failEngine(String reason, @Nullable Exception failure);1525334055;fail engine due to some error. the engine will also be closed._The underlying store is marked corrupted iff failure is caused by index corruption;public void failEngine(String reason, @Nullable Exception failure) {_        if (failure != null) {_            maybeDie(reason, failure)__        }_        if (failEngineLock.tryLock()) {_            store.incRef()__            try {_                if (failedEngine.get() != null) {_                    logger.warn(() -> new ParameterizedMessage("tried to fail engine but engine is already failed. ignoring. [{}]", reason), failure)__                    return__                }_                _                _                failedEngine.set((failure != null) ? failure : new IllegalStateException(reason))__                try {_                    _                    closeNoLock("engine failed on: [" + reason + "]", closedLatch)__                } finally {_                    logger.warn(() -> new ParameterizedMessage("failed engine [{}]", reason), failure)__                    _                    _                    _                    _                    _                    if (Lucene.isCorruptionException(failure)) {_                        try {_                            store.markStoreCorrupted(new IOException("failed engine (reason: [" + reason + "])", ExceptionsHelper.unwrapCorruption(failure)))__                        } catch (IOException e) {_                            logger.warn("Couldn't mark store corrupted", e)__                        }_                    }_                    eventListener.onFailedEngine(reason, failure)__                }_            } catch (Exception inner) {_                if (failure != null) inner.addSuppressed(failure)__                _                logger.warn("failEngine threw exception", inner)__            } finally {_                store.decRef()__            }_        } else {_            logger.debug(() -> new ParameterizedMessage("tried to fail engine but could not acquire lock - engine should be failed by now [{}]", reason), failure)__        }_    };fail,engine,due,to,some,error,the,engine,will,also,be,closed,the,underlying,store,is,marked,corrupted,iff,failure,is,caused,by,index,corruption;public,void,fail,engine,string,reason,nullable,exception,failure,if,failure,null,maybe,die,reason,failure,if,fail,engine,lock,try,lock,store,inc,ref,try,if,failed,engine,get,null,logger,warn,new,parameterized,message,tried,to,fail,engine,but,engine,is,already,failed,ignoring,reason,failure,return,failed,engine,set,failure,null,failure,new,illegal,state,exception,reason,try,close,no,lock,engine,failed,on,reason,closed,latch,finally,logger,warn,new,parameterized,message,failed,engine,reason,failure,if,lucene,is,corruption,exception,failure,try,store,mark,store,corrupted,new,ioexception,failed,engine,reason,reason,exceptions,helper,unwrap,corruption,failure,catch,ioexception,e,logger,warn,couldn,t,mark,store,corrupted,e,event,listener,on,failed,engine,reason,failure,catch,exception,inner,if,failure,null,inner,add,suppressed,failure,logger,warn,fail,engine,threw,exception,inner,finally,store,dec,ref,else,logger,debug,new,parameterized,message,tried,to,fail,engine,but,could,not,acquire,lock,engine,should,be,failed,by,now,reason,failure
Engine -> public void failEngine(String reason, @Nullable Exception failure);1527583663;fail engine due to some error. the engine will also be closed._The underlying store is marked corrupted iff failure is caused by index corruption;public void failEngine(String reason, @Nullable Exception failure) {_        if (failure != null) {_            maybeDie(reason, failure)__        }_        if (failEngineLock.tryLock()) {_            store.incRef()__            try {_                if (failedEngine.get() != null) {_                    logger.warn(() -> new ParameterizedMessage("tried to fail engine but engine is already failed. ignoring. [{}]", reason), failure)__                    return__                }_                _                _                failedEngine.set((failure != null) ? failure : new IllegalStateException(reason))__                try {_                    _                    closeNoLock("engine failed on: [" + reason + "]", closedLatch)__                } finally {_                    logger.warn(() -> new ParameterizedMessage("failed engine [{}]", reason), failure)__                    _                    _                    _                    _                    _                    if (Lucene.isCorruptionException(failure)) {_                        try {_                            store.markStoreCorrupted(new IOException("failed engine (reason: [" + reason + "])", ExceptionsHelper.unwrapCorruption(failure)))__                        } catch (IOException e) {_                            logger.warn("Couldn't mark store corrupted", e)__                        }_                    }_                    eventListener.onFailedEngine(reason, failure)__                }_            } catch (Exception inner) {_                if (failure != null) inner.addSuppressed(failure)__                _                logger.warn("failEngine threw exception", inner)__            } finally {_                store.decRef()__            }_        } else {_            logger.debug(() -> new ParameterizedMessage("tried to fail engine but could not acquire lock - engine should be failed by now [{}]", reason), failure)__        }_    };fail,engine,due,to,some,error,the,engine,will,also,be,closed,the,underlying,store,is,marked,corrupted,iff,failure,is,caused,by,index,corruption;public,void,fail,engine,string,reason,nullable,exception,failure,if,failure,null,maybe,die,reason,failure,if,fail,engine,lock,try,lock,store,inc,ref,try,if,failed,engine,get,null,logger,warn,new,parameterized,message,tried,to,fail,engine,but,engine,is,already,failed,ignoring,reason,failure,return,failed,engine,set,failure,null,failure,new,illegal,state,exception,reason,try,close,no,lock,engine,failed,on,reason,closed,latch,finally,logger,warn,new,parameterized,message,failed,engine,reason,failure,if,lucene,is,corruption,exception,failure,try,store,mark,store,corrupted,new,ioexception,failed,engine,reason,reason,exceptions,helper,unwrap,corruption,failure,catch,ioexception,e,logger,warn,couldn,t,mark,store,corrupted,e,event,listener,on,failed,engine,reason,failure,catch,exception,inner,if,failure,null,inner,add,suppressed,failure,logger,warn,fail,engine,threw,exception,inner,finally,store,dec,ref,else,logger,debug,new,parameterized,message,tried,to,fail,engine,but,could,not,acquire,lock,engine,should,be,failed,by,now,reason,failure
Engine -> public void failEngine(String reason, @Nullable Exception failure);1528706846;fail engine due to some error. the engine will also be closed._The underlying store is marked corrupted iff failure is caused by index corruption;public void failEngine(String reason, @Nullable Exception failure) {_        if (failure != null) {_            maybeDie(reason, failure)__        }_        if (failEngineLock.tryLock()) {_            store.incRef()__            try {_                if (failedEngine.get() != null) {_                    logger.warn(() -> new ParameterizedMessage("tried to fail engine but engine is already failed. ignoring. [{}]", reason), failure)__                    return__                }_                _                _                failedEngine.set((failure != null) ? failure : new IllegalStateException(reason))__                try {_                    _                    closeNoLock("engine failed on: [" + reason + "]", closedLatch)__                } finally {_                    logger.warn(() -> new ParameterizedMessage("failed engine [{}]", reason), failure)__                    _                    _                    _                    _                    _                    if (Lucene.isCorruptionException(failure)) {_                        try {_                            store.markStoreCorrupted(new IOException("failed engine (reason: [" + reason + "])", ExceptionsHelper.unwrapCorruption(failure)))__                        } catch (IOException e) {_                            logger.warn("Couldn't mark store corrupted", e)__                        }_                    }_                    eventListener.onFailedEngine(reason, failure)__                }_            } catch (Exception inner) {_                if (failure != null) inner.addSuppressed(failure)__                _                logger.warn("failEngine threw exception", inner)__            } finally {_                store.decRef()__            }_        } else {_            logger.debug(() -> new ParameterizedMessage("tried to fail engine but could not acquire lock - engine should be failed by now [{}]", reason), failure)__        }_    };fail,engine,due,to,some,error,the,engine,will,also,be,closed,the,underlying,store,is,marked,corrupted,iff,failure,is,caused,by,index,corruption;public,void,fail,engine,string,reason,nullable,exception,failure,if,failure,null,maybe,die,reason,failure,if,fail,engine,lock,try,lock,store,inc,ref,try,if,failed,engine,get,null,logger,warn,new,parameterized,message,tried,to,fail,engine,but,engine,is,already,failed,ignoring,reason,failure,return,failed,engine,set,failure,null,failure,new,illegal,state,exception,reason,try,close,no,lock,engine,failed,on,reason,closed,latch,finally,logger,warn,new,parameterized,message,failed,engine,reason,failure,if,lucene,is,corruption,exception,failure,try,store,mark,store,corrupted,new,ioexception,failed,engine,reason,reason,exceptions,helper,unwrap,corruption,failure,catch,ioexception,e,logger,warn,couldn,t,mark,store,corrupted,e,event,listener,on,failed,engine,reason,failure,catch,exception,inner,if,failure,null,inner,add,suppressed,failure,logger,warn,fail,engine,threw,exception,inner,finally,store,dec,ref,else,logger,debug,new,parameterized,message,tried,to,fail,engine,but,could,not,acquire,lock,engine,should,be,failed,by,now,reason,failure
Engine -> public void failEngine(String reason, @Nullable Exception failure);1528762805;fail engine due to some error. the engine will also be closed._The underlying store is marked corrupted iff failure is caused by index corruption;public void failEngine(String reason, @Nullable Exception failure) {_        if (failure != null) {_            maybeDie(reason, failure)__        }_        if (failEngineLock.tryLock()) {_            store.incRef()__            try {_                if (failedEngine.get() != null) {_                    logger.warn(() -> new ParameterizedMessage("tried to fail engine but engine is already failed. ignoring. [{}]", reason), failure)__                    return__                }_                _                _                failedEngine.set((failure != null) ? failure : new IllegalStateException(reason))__                try {_                    _                    closeNoLock("engine failed on: [" + reason + "]", closedLatch)__                } finally {_                    logger.warn(() -> new ParameterizedMessage("failed engine [{}]", reason), failure)__                    _                    _                    _                    _                    _                    if (Lucene.isCorruptionException(failure)) {_                        try {_                            store.markStoreCorrupted(new IOException("failed engine (reason: [" + reason + "])", ExceptionsHelper.unwrapCorruption(failure)))__                        } catch (IOException e) {_                            logger.warn("Couldn't mark store corrupted", e)__                        }_                    }_                    eventListener.onFailedEngine(reason, failure)__                }_            } catch (Exception inner) {_                if (failure != null) inner.addSuppressed(failure)__                _                logger.warn("failEngine threw exception", inner)__            } finally {_                store.decRef()__            }_        } else {_            logger.debug(() -> new ParameterizedMessage("tried to fail engine but could not acquire lock - engine should be failed by now [{}]", reason), failure)__        }_    };fail,engine,due,to,some,error,the,engine,will,also,be,closed,the,underlying,store,is,marked,corrupted,iff,failure,is,caused,by,index,corruption;public,void,fail,engine,string,reason,nullable,exception,failure,if,failure,null,maybe,die,reason,failure,if,fail,engine,lock,try,lock,store,inc,ref,try,if,failed,engine,get,null,logger,warn,new,parameterized,message,tried,to,fail,engine,but,engine,is,already,failed,ignoring,reason,failure,return,failed,engine,set,failure,null,failure,new,illegal,state,exception,reason,try,close,no,lock,engine,failed,on,reason,closed,latch,finally,logger,warn,new,parameterized,message,failed,engine,reason,failure,if,lucene,is,corruption,exception,failure,try,store,mark,store,corrupted,new,ioexception,failed,engine,reason,reason,exceptions,helper,unwrap,corruption,failure,catch,ioexception,e,logger,warn,couldn,t,mark,store,corrupted,e,event,listener,on,failed,engine,reason,failure,catch,exception,inner,if,failure,null,inner,add,suppressed,failure,logger,warn,fail,engine,threw,exception,inner,finally,store,dec,ref,else,logger,debug,new,parameterized,message,tried,to,fail,engine,but,could,not,acquire,lock,engine,should,be,failed,by,now,reason,failure
Engine -> public void failEngine(String reason, @Nullable Exception failure);1531910483;fail engine due to some error. the engine will also be closed._The underlying store is marked corrupted iff failure is caused by index corruption;public void failEngine(String reason, @Nullable Exception failure) {_        if (failure != null) {_            maybeDie(reason, failure)__        }_        if (failEngineLock.tryLock()) {_            store.incRef()__            try {_                if (failedEngine.get() != null) {_                    logger.warn(() -> new ParameterizedMessage("tried to fail engine but engine is already failed. ignoring. [{}]", reason), failure)__                    return__                }_                _                _                failedEngine.set((failure != null) ? failure : new IllegalStateException(reason))__                try {_                    _                    closeNoLock("engine failed on: [" + reason + "]", closedLatch)__                } finally {_                    logger.warn(() -> new ParameterizedMessage("failed engine [{}]", reason), failure)__                    _                    _                    _                    _                    _                    if (Lucene.isCorruptionException(failure)) {_                        try {_                            store.markStoreCorrupted(new IOException("failed engine (reason: [" + reason + "])", ExceptionsHelper.unwrapCorruption(failure)))__                        } catch (IOException e) {_                            logger.warn("Couldn't mark store corrupted", e)__                        }_                    }_                    eventListener.onFailedEngine(reason, failure)__                }_            } catch (Exception inner) {_                if (failure != null) inner.addSuppressed(failure)__                _                logger.warn("failEngine threw exception", inner)__            } finally {_                store.decRef()__            }_        } else {_            logger.debug(() -> new ParameterizedMessage("tried to fail engine but could not acquire lock - engine should be failed by now [{}]", reason), failure)__        }_    };fail,engine,due,to,some,error,the,engine,will,also,be,closed,the,underlying,store,is,marked,corrupted,iff,failure,is,caused,by,index,corruption;public,void,fail,engine,string,reason,nullable,exception,failure,if,failure,null,maybe,die,reason,failure,if,fail,engine,lock,try,lock,store,inc,ref,try,if,failed,engine,get,null,logger,warn,new,parameterized,message,tried,to,fail,engine,but,engine,is,already,failed,ignoring,reason,failure,return,failed,engine,set,failure,null,failure,new,illegal,state,exception,reason,try,close,no,lock,engine,failed,on,reason,closed,latch,finally,logger,warn,new,parameterized,message,failed,engine,reason,failure,if,lucene,is,corruption,exception,failure,try,store,mark,store,corrupted,new,ioexception,failed,engine,reason,reason,exceptions,helper,unwrap,corruption,failure,catch,ioexception,e,logger,warn,couldn,t,mark,store,corrupted,e,event,listener,on,failed,engine,reason,failure,catch,exception,inner,if,failure,null,inner,add,suppressed,failure,logger,warn,fail,engine,threw,exception,inner,finally,store,dec,ref,else,logger,debug,new,parameterized,message,tried,to,fail,engine,but,could,not,acquire,lock,engine,should,be,failed,by,now,reason,failure
Engine -> public void failEngine(String reason, @Nullable Exception failure);1532685069;fail engine due to some error. the engine will also be closed._The underlying store is marked corrupted iff failure is caused by index corruption;public void failEngine(String reason, @Nullable Exception failure) {_        if (failure != null) {_            maybeDie(reason, failure)__        }_        if (failEngineLock.tryLock()) {_            store.incRef()__            try {_                if (failedEngine.get() != null) {_                    logger.warn(() -> new ParameterizedMessage("tried to fail engine but engine is already failed. ignoring. [{}]", reason), failure)__                    return__                }_                _                _                failedEngine.set((failure != null) ? failure : new IllegalStateException(reason))__                try {_                    _                    closeNoLock("engine failed on: [" + reason + "]", closedLatch)__                } finally {_                    logger.warn(() -> new ParameterizedMessage("failed engine [{}]", reason), failure)__                    _                    _                    _                    _                    _                    if (Lucene.isCorruptionException(failure)) {_                        try {_                            store.markStoreCorrupted(new IOException("failed engine (reason: [" + reason + "])", ExceptionsHelper.unwrapCorruption(failure)))__                        } catch (IOException e) {_                            logger.warn("Couldn't mark store corrupted", e)__                        }_                    }_                    eventListener.onFailedEngine(reason, failure)__                }_            } catch (Exception inner) {_                if (failure != null) inner.addSuppressed(failure)__                _                logger.warn("failEngine threw exception", inner)__            } finally {_                store.decRef()__            }_        } else {_            logger.debug(() -> new ParameterizedMessage("tried to fail engine but could not acquire lock - engine should be failed by now [{}]", reason), failure)__        }_    };fail,engine,due,to,some,error,the,engine,will,also,be,closed,the,underlying,store,is,marked,corrupted,iff,failure,is,caused,by,index,corruption;public,void,fail,engine,string,reason,nullable,exception,failure,if,failure,null,maybe,die,reason,failure,if,fail,engine,lock,try,lock,store,inc,ref,try,if,failed,engine,get,null,logger,warn,new,parameterized,message,tried,to,fail,engine,but,engine,is,already,failed,ignoring,reason,failure,return,failed,engine,set,failure,null,failure,new,illegal,state,exception,reason,try,close,no,lock,engine,failed,on,reason,closed,latch,finally,logger,warn,new,parameterized,message,failed,engine,reason,failure,if,lucene,is,corruption,exception,failure,try,store,mark,store,corrupted,new,ioexception,failed,engine,reason,reason,exceptions,helper,unwrap,corruption,failure,catch,ioexception,e,logger,warn,couldn,t,mark,store,corrupted,e,event,listener,on,failed,engine,reason,failure,catch,exception,inner,if,failure,null,inner,add,suppressed,failure,logger,warn,fail,engine,threw,exception,inner,finally,store,dec,ref,else,logger,debug,new,parameterized,message,tried,to,fail,engine,but,could,not,acquire,lock,engine,should,be,failed,by,now,reason,failure
Engine -> public void failEngine(String reason, @Nullable Exception failure);1533295538;fail engine due to some error. the engine will also be closed._The underlying store is marked corrupted iff failure is caused by index corruption;public void failEngine(String reason, @Nullable Exception failure) {_        if (failure != null) {_            maybeDie(reason, failure)__        }_        if (failEngineLock.tryLock()) {_            store.incRef()__            try {_                if (failedEngine.get() != null) {_                    logger.warn(() -> new ParameterizedMessage("tried to fail engine but engine is already failed. ignoring. [{}]", reason), failure)__                    return__                }_                _                _                failedEngine.set((failure != null) ? failure : new IllegalStateException(reason))__                try {_                    _                    closeNoLock("engine failed on: [" + reason + "]", closedLatch)__                } finally {_                    logger.warn(() -> new ParameterizedMessage("failed engine [{}]", reason), failure)__                    _                    _                    _                    _                    _                    if (Lucene.isCorruptionException(failure)) {_                        try {_                            store.markStoreCorrupted(new IOException("failed engine (reason: [" + reason + "])", ExceptionsHelper.unwrapCorruption(failure)))__                        } catch (IOException e) {_                            logger.warn("Couldn't mark store corrupted", e)__                        }_                    }_                    eventListener.onFailedEngine(reason, failure)__                }_            } catch (Exception inner) {_                if (failure != null) inner.addSuppressed(failure)__                _                logger.warn("failEngine threw exception", inner)__            } finally {_                store.decRef()__            }_        } else {_            logger.debug(() -> new ParameterizedMessage("tried to fail engine but could not acquire lock - engine should be failed by now [{}]", reason), failure)__        }_    };fail,engine,due,to,some,error,the,engine,will,also,be,closed,the,underlying,store,is,marked,corrupted,iff,failure,is,caused,by,index,corruption;public,void,fail,engine,string,reason,nullable,exception,failure,if,failure,null,maybe,die,reason,failure,if,fail,engine,lock,try,lock,store,inc,ref,try,if,failed,engine,get,null,logger,warn,new,parameterized,message,tried,to,fail,engine,but,engine,is,already,failed,ignoring,reason,failure,return,failed,engine,set,failure,null,failure,new,illegal,state,exception,reason,try,close,no,lock,engine,failed,on,reason,closed,latch,finally,logger,warn,new,parameterized,message,failed,engine,reason,failure,if,lucene,is,corruption,exception,failure,try,store,mark,store,corrupted,new,ioexception,failed,engine,reason,reason,exceptions,helper,unwrap,corruption,failure,catch,ioexception,e,logger,warn,couldn,t,mark,store,corrupted,e,event,listener,on,failed,engine,reason,failure,catch,exception,inner,if,failure,null,inner,add,suppressed,failure,logger,warn,fail,engine,threw,exception,inner,finally,store,dec,ref,else,logger,debug,new,parameterized,message,tried,to,fail,engine,but,could,not,acquire,lock,engine,should,be,failed,by,now,reason,failure
Engine -> public void failEngine(String reason, @Nullable Exception failure);1535046779;fail engine due to some error. the engine will also be closed._The underlying store is marked corrupted iff failure is caused by index corruption;public void failEngine(String reason, @Nullable Exception failure) {_        if (failure != null) {_            maybeDie(reason, failure)__        }_        if (failEngineLock.tryLock()) {_            store.incRef()__            try {_                if (failedEngine.get() != null) {_                    logger.warn(() -> new ParameterizedMessage("tried to fail engine but engine is already failed. ignoring. [{}]", reason), failure)__                    return__                }_                _                _                failedEngine.set((failure != null) ? failure : new IllegalStateException(reason))__                try {_                    _                    closeNoLock("engine failed on: [" + reason + "]", closedLatch)__                } finally {_                    logger.warn(() -> new ParameterizedMessage("failed engine [{}]", reason), failure)__                    _                    _                    _                    _                    _                    if (Lucene.isCorruptionException(failure)) {_                        try {_                            store.markStoreCorrupted(new IOException("failed engine (reason: [" + reason + "])", ExceptionsHelper.unwrapCorruption(failure)))__                        } catch (IOException e) {_                            logger.warn("Couldn't mark store corrupted", e)__                        }_                    }_                    eventListener.onFailedEngine(reason, failure)__                }_            } catch (Exception inner) {_                if (failure != null) inner.addSuppressed(failure)__                _                logger.warn("failEngine threw exception", inner)__            } finally {_                store.decRef()__            }_        } else {_            logger.debug(() -> new ParameterizedMessage("tried to fail engine but could not acquire lock - engine should be failed by now [{}]", reason), failure)__        }_    };fail,engine,due,to,some,error,the,engine,will,also,be,closed,the,underlying,store,is,marked,corrupted,iff,failure,is,caused,by,index,corruption;public,void,fail,engine,string,reason,nullable,exception,failure,if,failure,null,maybe,die,reason,failure,if,fail,engine,lock,try,lock,store,inc,ref,try,if,failed,engine,get,null,logger,warn,new,parameterized,message,tried,to,fail,engine,but,engine,is,already,failed,ignoring,reason,failure,return,failed,engine,set,failure,null,failure,new,illegal,state,exception,reason,try,close,no,lock,engine,failed,on,reason,closed,latch,finally,logger,warn,new,parameterized,message,failed,engine,reason,failure,if,lucene,is,corruption,exception,failure,try,store,mark,store,corrupted,new,ioexception,failed,engine,reason,reason,exceptions,helper,unwrap,corruption,failure,catch,ioexception,e,logger,warn,couldn,t,mark,store,corrupted,e,event,listener,on,failed,engine,reason,failure,catch,exception,inner,if,failure,null,inner,add,suppressed,failure,logger,warn,fail,engine,threw,exception,inner,finally,store,dec,ref,else,logger,debug,new,parameterized,message,tried,to,fail,engine,but,could,not,acquire,lock,engine,should,be,failed,by,now,reason,failure
Engine -> public void failEngine(String reason, @Nullable Exception failure);1535723122;fail engine due to some error. the engine will also be closed._The underlying store is marked corrupted iff failure is caused by index corruption;public void failEngine(String reason, @Nullable Exception failure) {_        if (failure != null) {_            maybeDie(reason, failure)__        }_        if (failEngineLock.tryLock()) {_            store.incRef()__            try {_                if (failedEngine.get() != null) {_                    logger.warn(() -> new ParameterizedMessage("tried to fail engine but engine is already failed. ignoring. [{}]", reason), failure)__                    return__                }_                _                _                failedEngine.set((failure != null) ? failure : new IllegalStateException(reason))__                try {_                    _                    closeNoLock("engine failed on: [" + reason + "]", closedLatch)__                } finally {_                    logger.warn(() -> new ParameterizedMessage("failed engine [{}]", reason), failure)__                    _                    _                    _                    _                    _                    if (Lucene.isCorruptionException(failure)) {_                        try {_                            store.markStoreCorrupted(new IOException("failed engine (reason: [" + reason + "])", ExceptionsHelper.unwrapCorruption(failure)))__                        } catch (IOException e) {_                            logger.warn("Couldn't mark store corrupted", e)__                        }_                    }_                    eventListener.onFailedEngine(reason, failure)__                }_            } catch (Exception inner) {_                if (failure != null) inner.addSuppressed(failure)__                _                logger.warn("failEngine threw exception", inner)__            } finally {_                store.decRef()__            }_        } else {_            logger.debug(() -> new ParameterizedMessage("tried to fail engine but could not acquire lock - engine should be failed by now [{}]", reason), failure)__        }_    };fail,engine,due,to,some,error,the,engine,will,also,be,closed,the,underlying,store,is,marked,corrupted,iff,failure,is,caused,by,index,corruption;public,void,fail,engine,string,reason,nullable,exception,failure,if,failure,null,maybe,die,reason,failure,if,fail,engine,lock,try,lock,store,inc,ref,try,if,failed,engine,get,null,logger,warn,new,parameterized,message,tried,to,fail,engine,but,engine,is,already,failed,ignoring,reason,failure,return,failed,engine,set,failure,null,failure,new,illegal,state,exception,reason,try,close,no,lock,engine,failed,on,reason,closed,latch,finally,logger,warn,new,parameterized,message,failed,engine,reason,failure,if,lucene,is,corruption,exception,failure,try,store,mark,store,corrupted,new,ioexception,failed,engine,reason,reason,exceptions,helper,unwrap,corruption,failure,catch,ioexception,e,logger,warn,couldn,t,mark,store,corrupted,e,event,listener,on,failed,engine,reason,failure,catch,exception,inner,if,failure,null,inner,add,suppressed,failure,logger,warn,fail,engine,threw,exception,inner,finally,store,dec,ref,else,logger,debug,new,parameterized,message,tried,to,fail,engine,but,could,not,acquire,lock,engine,should,be,failed,by,now,reason,failure
Engine -> public void failEngine(String reason, @Nullable Exception failure);1535965276;fail engine due to some error. the engine will also be closed._The underlying store is marked corrupted iff failure is caused by index corruption;public void failEngine(String reason, @Nullable Exception failure) {_        if (failure != null) {_            maybeDie(reason, failure)__        }_        if (failEngineLock.tryLock()) {_            store.incRef()__            try {_                if (failedEngine.get() != null) {_                    logger.warn(() -> new ParameterizedMessage("tried to fail engine but engine is already failed. ignoring. [{}]", reason), failure)__                    return__                }_                _                _                failedEngine.set((failure != null) ? failure : new IllegalStateException(reason))__                try {_                    _                    closeNoLock("engine failed on: [" + reason + "]", closedLatch)__                } finally {_                    logger.warn(() -> new ParameterizedMessage("failed engine [{}]", reason), failure)__                    _                    _                    _                    _                    _                    if (Lucene.isCorruptionException(failure)) {_                        try {_                            store.markStoreCorrupted(new IOException("failed engine (reason: [" + reason + "])", ExceptionsHelper.unwrapCorruption(failure)))__                        } catch (IOException e) {_                            logger.warn("Couldn't mark store corrupted", e)__                        }_                    }_                    eventListener.onFailedEngine(reason, failure)__                }_            } catch (Exception inner) {_                if (failure != null) inner.addSuppressed(failure)__                _                logger.warn("failEngine threw exception", inner)__            } finally {_                store.decRef()__            }_        } else {_            logger.debug(() -> new ParameterizedMessage("tried to fail engine but could not acquire lock - engine should be failed by now [{}]", reason), failure)__        }_    };fail,engine,due,to,some,error,the,engine,will,also,be,closed,the,underlying,store,is,marked,corrupted,iff,failure,is,caused,by,index,corruption;public,void,fail,engine,string,reason,nullable,exception,failure,if,failure,null,maybe,die,reason,failure,if,fail,engine,lock,try,lock,store,inc,ref,try,if,failed,engine,get,null,logger,warn,new,parameterized,message,tried,to,fail,engine,but,engine,is,already,failed,ignoring,reason,failure,return,failed,engine,set,failure,null,failure,new,illegal,state,exception,reason,try,close,no,lock,engine,failed,on,reason,closed,latch,finally,logger,warn,new,parameterized,message,failed,engine,reason,failure,if,lucene,is,corruption,exception,failure,try,store,mark,store,corrupted,new,ioexception,failed,engine,reason,reason,exceptions,helper,unwrap,corruption,failure,catch,ioexception,e,logger,warn,couldn,t,mark,store,corrupted,e,event,listener,on,failed,engine,reason,failure,catch,exception,inner,if,failure,null,inner,add,suppressed,failure,logger,warn,fail,engine,threw,exception,inner,finally,store,dec,ref,else,logger,debug,new,parameterized,message,tried,to,fail,engine,but,could,not,acquire,lock,engine,should,be,failed,by,now,reason,failure
Engine -> public void failEngine(String reason, @Nullable Exception failure);1536314350;fail engine due to some error. the engine will also be closed._The underlying store is marked corrupted iff failure is caused by index corruption;public void failEngine(String reason, @Nullable Exception failure) {_        if (failure != null) {_            maybeDie(reason, failure)__        }_        if (failEngineLock.tryLock()) {_            store.incRef()__            try {_                if (failedEngine.get() != null) {_                    logger.warn(() -> new ParameterizedMessage("tried to fail engine but engine is already failed. ignoring. [{}]", reason), failure)__                    return__                }_                _                _                failedEngine.set((failure != null) ? failure : new IllegalStateException(reason))__                try {_                    _                    closeNoLock("engine failed on: [" + reason + "]", closedLatch)__                } finally {_                    logger.warn(() -> new ParameterizedMessage("failed engine [{}]", reason), failure)__                    _                    _                    _                    _                    _                    if (Lucene.isCorruptionException(failure)) {_                        try {_                            store.markStoreCorrupted(new IOException("failed engine (reason: [" + reason + "])", ExceptionsHelper.unwrapCorruption(failure)))__                        } catch (IOException e) {_                            logger.warn("Couldn't mark store corrupted", e)__                        }_                    }_                    eventListener.onFailedEngine(reason, failure)__                }_            } catch (Exception inner) {_                if (failure != null) inner.addSuppressed(failure)__                _                logger.warn("failEngine threw exception", inner)__            } finally {_                store.decRef()__            }_        } else {_            logger.debug(() -> new ParameterizedMessage("tried to fail engine but could not acquire lock - engine should be failed by now [{}]", reason), failure)__        }_    };fail,engine,due,to,some,error,the,engine,will,also,be,closed,the,underlying,store,is,marked,corrupted,iff,failure,is,caused,by,index,corruption;public,void,fail,engine,string,reason,nullable,exception,failure,if,failure,null,maybe,die,reason,failure,if,fail,engine,lock,try,lock,store,inc,ref,try,if,failed,engine,get,null,logger,warn,new,parameterized,message,tried,to,fail,engine,but,engine,is,already,failed,ignoring,reason,failure,return,failed,engine,set,failure,null,failure,new,illegal,state,exception,reason,try,close,no,lock,engine,failed,on,reason,closed,latch,finally,logger,warn,new,parameterized,message,failed,engine,reason,failure,if,lucene,is,corruption,exception,failure,try,store,mark,store,corrupted,new,ioexception,failed,engine,reason,reason,exceptions,helper,unwrap,corruption,failure,catch,ioexception,e,logger,warn,couldn,t,mark,store,corrupted,e,event,listener,on,failed,engine,reason,failure,catch,exception,inner,if,failure,null,inner,add,suppressed,failure,logger,warn,fail,engine,threw,exception,inner,finally,store,dec,ref,else,logger,debug,new,parameterized,message,tried,to,fail,engine,but,could,not,acquire,lock,engine,should,be,failed,by,now,reason,failure
Engine -> public void failEngine(String reason, @Nullable Exception failure);1536828374;fail engine due to some error. the engine will also be closed._The underlying store is marked corrupted iff failure is caused by index corruption;public void failEngine(String reason, @Nullable Exception failure) {_        if (failure != null) {_            maybeDie(reason, failure)__        }_        if (failEngineLock.tryLock()) {_            store.incRef()__            try {_                if (failedEngine.get() != null) {_                    logger.warn(() -> new ParameterizedMessage("tried to fail engine but engine is already failed. ignoring. [{}]", reason), failure)__                    return__                }_                _                _                failedEngine.set((failure != null) ? failure : new IllegalStateException(reason))__                try {_                    _                    closeNoLock("engine failed on: [" + reason + "]", closedLatch)__                } finally {_                    logger.warn(() -> new ParameterizedMessage("failed engine [{}]", reason), failure)__                    _                    _                    _                    _                    _                    if (Lucene.isCorruptionException(failure)) {_                        try {_                            store.markStoreCorrupted(new IOException("failed engine (reason: [" + reason + "])", ExceptionsHelper.unwrapCorruption(failure)))__                        } catch (IOException e) {_                            logger.warn("Couldn't mark store corrupted", e)__                        }_                    }_                    eventListener.onFailedEngine(reason, failure)__                }_            } catch (Exception inner) {_                if (failure != null) inner.addSuppressed(failure)__                _                logger.warn("failEngine threw exception", inner)__            } finally {_                store.decRef()__            }_        } else {_            logger.debug(() -> new ParameterizedMessage("tried to fail engine but could not acquire lock - engine should be failed by now [{}]", reason), failure)__        }_    };fail,engine,due,to,some,error,the,engine,will,also,be,closed,the,underlying,store,is,marked,corrupted,iff,failure,is,caused,by,index,corruption;public,void,fail,engine,string,reason,nullable,exception,failure,if,failure,null,maybe,die,reason,failure,if,fail,engine,lock,try,lock,store,inc,ref,try,if,failed,engine,get,null,logger,warn,new,parameterized,message,tried,to,fail,engine,but,engine,is,already,failed,ignoring,reason,failure,return,failed,engine,set,failure,null,failure,new,illegal,state,exception,reason,try,close,no,lock,engine,failed,on,reason,closed,latch,finally,logger,warn,new,parameterized,message,failed,engine,reason,failure,if,lucene,is,corruption,exception,failure,try,store,mark,store,corrupted,new,ioexception,failed,engine,reason,reason,exceptions,helper,unwrap,corruption,failure,catch,ioexception,e,logger,warn,couldn,t,mark,store,corrupted,e,event,listener,on,failed,engine,reason,failure,catch,exception,inner,if,failure,null,inner,add,suppressed,failure,logger,warn,fail,engine,threw,exception,inner,finally,store,dec,ref,else,logger,debug,new,parameterized,message,tried,to,fail,engine,but,could,not,acquire,lock,engine,should,be,failed,by,now,reason,failure
Engine -> public void failEngine(String reason, @Nullable Exception failure);1537371806;fail engine due to some error. the engine will also be closed._The underlying store is marked corrupted iff failure is caused by index corruption;public void failEngine(String reason, @Nullable Exception failure) {_        if (failure != null) {_            maybeDie(reason, failure)__        }_        if (failEngineLock.tryLock()) {_            store.incRef()__            try {_                if (failedEngine.get() != null) {_                    logger.warn(() -> new ParameterizedMessage("tried to fail engine but engine is already failed. ignoring. [{}]", reason), failure)__                    return__                }_                _                _                failedEngine.set((failure != null) ? failure : new IllegalStateException(reason))__                try {_                    _                    closeNoLock("engine failed on: [" + reason + "]", closedLatch)__                } finally {_                    logger.warn(() -> new ParameterizedMessage("failed engine [{}]", reason), failure)__                    _                    _                    _                    _                    _                    if (Lucene.isCorruptionException(failure)) {_                        try {_                            store.markStoreCorrupted(new IOException("failed engine (reason: [" + reason + "])", ExceptionsHelper.unwrapCorruption(failure)))__                        } catch (IOException e) {_                            logger.warn("Couldn't mark store corrupted", e)__                        }_                    }_                    eventListener.onFailedEngine(reason, failure)__                }_            } catch (Exception inner) {_                if (failure != null) inner.addSuppressed(failure)__                _                logger.warn("failEngine threw exception", inner)__            } finally {_                store.decRef()__            }_        } else {_            logger.debug(() -> new ParameterizedMessage("tried to fail engine but could not acquire lock - engine should be failed by now [{}]", reason), failure)__        }_    };fail,engine,due,to,some,error,the,engine,will,also,be,closed,the,underlying,store,is,marked,corrupted,iff,failure,is,caused,by,index,corruption;public,void,fail,engine,string,reason,nullable,exception,failure,if,failure,null,maybe,die,reason,failure,if,fail,engine,lock,try,lock,store,inc,ref,try,if,failed,engine,get,null,logger,warn,new,parameterized,message,tried,to,fail,engine,but,engine,is,already,failed,ignoring,reason,failure,return,failed,engine,set,failure,null,failure,new,illegal,state,exception,reason,try,close,no,lock,engine,failed,on,reason,closed,latch,finally,logger,warn,new,parameterized,message,failed,engine,reason,failure,if,lucene,is,corruption,exception,failure,try,store,mark,store,corrupted,new,ioexception,failed,engine,reason,reason,exceptions,helper,unwrap,corruption,failure,catch,ioexception,e,logger,warn,couldn,t,mark,store,corrupted,e,event,listener,on,failed,engine,reason,failure,catch,exception,inner,if,failure,null,inner,add,suppressed,failure,logger,warn,fail,engine,threw,exception,inner,finally,store,dec,ref,else,logger,debug,new,parameterized,message,tried,to,fail,engine,but,could,not,acquire,lock,engine,should,be,failed,by,now,reason,failure
Engine -> public void failEngine(String reason, @Nullable Exception failure);1537806831;fail engine due to some error. the engine will also be closed._The underlying store is marked corrupted iff failure is caused by index corruption;public void failEngine(String reason, @Nullable Exception failure) {_        if (failure != null) {_            maybeDie(reason, failure)__        }_        if (failEngineLock.tryLock()) {_            store.incRef()__            try {_                if (failedEngine.get() != null) {_                    logger.warn(() -> new ParameterizedMessage("tried to fail engine but engine is already failed. ignoring. [{}]", reason), failure)__                    return__                }_                _                _                failedEngine.set((failure != null) ? failure : new IllegalStateException(reason))__                try {_                    _                    closeNoLock("engine failed on: [" + reason + "]", closedLatch)__                } finally {_                    logger.warn(() -> new ParameterizedMessage("failed engine [{}]", reason), failure)__                    _                    _                    _                    _                    _                    if (Lucene.isCorruptionException(failure)) {_                        try {_                            store.markStoreCorrupted(new IOException("failed engine (reason: [" + reason + "])", ExceptionsHelper.unwrapCorruption(failure)))__                        } catch (IOException e) {_                            logger.warn("Couldn't mark store corrupted", e)__                        }_                    }_                    eventListener.onFailedEngine(reason, failure)__                }_            } catch (Exception inner) {_                if (failure != null) inner.addSuppressed(failure)__                _                logger.warn("failEngine threw exception", inner)__            } finally {_                store.decRef()__            }_        } else {_            logger.debug(() -> new ParameterizedMessage("tried to fail engine but could not acquire lock - engine should be failed by now [{}]", reason), failure)__        }_    };fail,engine,due,to,some,error,the,engine,will,also,be,closed,the,underlying,store,is,marked,corrupted,iff,failure,is,caused,by,index,corruption;public,void,fail,engine,string,reason,nullable,exception,failure,if,failure,null,maybe,die,reason,failure,if,fail,engine,lock,try,lock,store,inc,ref,try,if,failed,engine,get,null,logger,warn,new,parameterized,message,tried,to,fail,engine,but,engine,is,already,failed,ignoring,reason,failure,return,failed,engine,set,failure,null,failure,new,illegal,state,exception,reason,try,close,no,lock,engine,failed,on,reason,closed,latch,finally,logger,warn,new,parameterized,message,failed,engine,reason,failure,if,lucene,is,corruption,exception,failure,try,store,mark,store,corrupted,new,ioexception,failed,engine,reason,reason,exceptions,helper,unwrap,corruption,failure,catch,ioexception,e,logger,warn,couldn,t,mark,store,corrupted,e,event,listener,on,failed,engine,reason,failure,catch,exception,inner,if,failure,null,inner,add,suppressed,failure,logger,warn,fail,engine,threw,exception,inner,finally,store,dec,ref,else,logger,debug,new,parameterized,message,tried,to,fail,engine,but,could,not,acquire,lock,engine,should,be,failed,by,now,reason,failure
Engine -> public void failEngine(String reason, @Nullable Exception failure);1538067637;fail engine due to some error. the engine will also be closed._The underlying store is marked corrupted iff failure is caused by index corruption;public void failEngine(String reason, @Nullable Exception failure) {_        if (failure != null) {_            maybeDie(reason, failure)__        }_        if (failEngineLock.tryLock()) {_            store.incRef()__            try {_                if (failedEngine.get() != null) {_                    logger.warn(() -> new ParameterizedMessage("tried to fail engine but engine is already failed. ignoring. [{}]", reason), failure)__                    return__                }_                _                _                failedEngine.set((failure != null) ? failure : new IllegalStateException(reason))__                try {_                    _                    closeNoLock("engine failed on: [" + reason + "]", closedLatch)__                } finally {_                    logger.warn(() -> new ParameterizedMessage("failed engine [{}]", reason), failure)__                    _                    _                    _                    _                    _                    if (Lucene.isCorruptionException(failure)) {_                        try {_                            store.markStoreCorrupted(new IOException("failed engine (reason: [" + reason + "])", ExceptionsHelper.unwrapCorruption(failure)))__                        } catch (IOException e) {_                            logger.warn("Couldn't mark store corrupted", e)__                        }_                    }_                    eventListener.onFailedEngine(reason, failure)__                }_            } catch (Exception inner) {_                if (failure != null) inner.addSuppressed(failure)__                _                logger.warn("failEngine threw exception", inner)__            } finally {_                store.decRef()__            }_        } else {_            logger.debug(() -> new ParameterizedMessage("tried to fail engine but could not acquire lock - engine should be failed by now [{}]", reason), failure)__        }_    };fail,engine,due,to,some,error,the,engine,will,also,be,closed,the,underlying,store,is,marked,corrupted,iff,failure,is,caused,by,index,corruption;public,void,fail,engine,string,reason,nullable,exception,failure,if,failure,null,maybe,die,reason,failure,if,fail,engine,lock,try,lock,store,inc,ref,try,if,failed,engine,get,null,logger,warn,new,parameterized,message,tried,to,fail,engine,but,engine,is,already,failed,ignoring,reason,failure,return,failed,engine,set,failure,null,failure,new,illegal,state,exception,reason,try,close,no,lock,engine,failed,on,reason,closed,latch,finally,logger,warn,new,parameterized,message,failed,engine,reason,failure,if,lucene,is,corruption,exception,failure,try,store,mark,store,corrupted,new,ioexception,failed,engine,reason,reason,exceptions,helper,unwrap,corruption,failure,catch,ioexception,e,logger,warn,couldn,t,mark,store,corrupted,e,event,listener,on,failed,engine,reason,failure,catch,exception,inner,if,failure,null,inner,add,suppressed,failure,logger,warn,fail,engine,threw,exception,inner,finally,store,dec,ref,else,logger,debug,new,parameterized,message,tried,to,fail,engine,but,could,not,acquire,lock,engine,should,be,failed,by,now,reason,failure
Engine -> public void failEngine(String reason, @Nullable Exception failure);1538424609;fail engine due to some error. the engine will also be closed._The underlying store is marked corrupted iff failure is caused by index corruption;public void failEngine(String reason, @Nullable Exception failure) {_        if (failure != null) {_            maybeDie(reason, failure)__        }_        if (failEngineLock.tryLock()) {_            store.incRef()__            try {_                if (failedEngine.get() != null) {_                    logger.warn(() -> new ParameterizedMessage("tried to fail engine but engine is already failed. ignoring. [{}]", reason), failure)__                    return__                }_                _                _                failedEngine.set((failure != null) ? failure : new IllegalStateException(reason))__                try {_                    _                    closeNoLock("engine failed on: [" + reason + "]", closedLatch)__                } finally {_                    logger.warn(() -> new ParameterizedMessage("failed engine [{}]", reason), failure)__                    _                    _                    _                    _                    _                    if (Lucene.isCorruptionException(failure)) {_                        try {_                            store.markStoreCorrupted(new IOException("failed engine (reason: [" + reason + "])", ExceptionsHelper.unwrapCorruption(failure)))__                        } catch (IOException e) {_                            logger.warn("Couldn't mark store corrupted", e)__                        }_                    }_                    eventListener.onFailedEngine(reason, failure)__                }_            } catch (Exception inner) {_                if (failure != null) inner.addSuppressed(failure)__                _                logger.warn("failEngine threw exception", inner)__            } finally {_                store.decRef()__            }_        } else {_            logger.debug(() -> new ParameterizedMessage("tried to fail engine but could not acquire lock - engine should be failed by now [{}]", reason), failure)__        }_    };fail,engine,due,to,some,error,the,engine,will,also,be,closed,the,underlying,store,is,marked,corrupted,iff,failure,is,caused,by,index,corruption;public,void,fail,engine,string,reason,nullable,exception,failure,if,failure,null,maybe,die,reason,failure,if,fail,engine,lock,try,lock,store,inc,ref,try,if,failed,engine,get,null,logger,warn,new,parameterized,message,tried,to,fail,engine,but,engine,is,already,failed,ignoring,reason,failure,return,failed,engine,set,failure,null,failure,new,illegal,state,exception,reason,try,close,no,lock,engine,failed,on,reason,closed,latch,finally,logger,warn,new,parameterized,message,failed,engine,reason,failure,if,lucene,is,corruption,exception,failure,try,store,mark,store,corrupted,new,ioexception,failed,engine,reason,reason,exceptions,helper,unwrap,corruption,failure,catch,ioexception,e,logger,warn,couldn,t,mark,store,corrupted,e,event,listener,on,failed,engine,reason,failure,catch,exception,inner,if,failure,null,inner,add,suppressed,failure,logger,warn,fail,engine,threw,exception,inner,finally,store,dec,ref,else,logger,debug,new,parameterized,message,tried,to,fail,engine,but,could,not,acquire,lock,engine,should,be,failed,by,now,reason,failure
Engine -> public void failEngine(String reason, @Nullable Exception failure);1539723533;fail engine due to some error. the engine will also be closed._The underlying store is marked corrupted iff failure is caused by index corruption;public void failEngine(String reason, @Nullable Exception failure) {_        if (failure != null) {_            maybeDie(reason, failure)__        }_        if (failEngineLock.tryLock()) {_            store.incRef()__            try {_                if (failedEngine.get() != null) {_                    logger.warn(() -> new ParameterizedMessage("tried to fail engine but engine is already failed. ignoring. [{}]", reason), failure)__                    return__                }_                _                _                failedEngine.set((failure != null) ? failure : new IllegalStateException(reason))__                try {_                    _                    closeNoLock("engine failed on: [" + reason + "]", closedLatch)__                } finally {_                    logger.warn(() -> new ParameterizedMessage("failed engine [{}]", reason), failure)__                    _                    _                    _                    _                    _                    if (Lucene.isCorruptionException(failure)) {_                        try {_                            store.markStoreCorrupted(new IOException("failed engine (reason: [" + reason + "])", ExceptionsHelper.unwrapCorruption(failure)))__                        } catch (IOException e) {_                            logger.warn("Couldn't mark store corrupted", e)__                        }_                    }_                    eventListener.onFailedEngine(reason, failure)__                }_            } catch (Exception inner) {_                if (failure != null) inner.addSuppressed(failure)__                _                logger.warn("failEngine threw exception", inner)__            } finally {_                store.decRef()__            }_        } else {_            logger.debug(() -> new ParameterizedMessage("tried to fail engine but could not acquire lock - engine should be failed by now [{}]", reason), failure)__        }_    };fail,engine,due,to,some,error,the,engine,will,also,be,closed,the,underlying,store,is,marked,corrupted,iff,failure,is,caused,by,index,corruption;public,void,fail,engine,string,reason,nullable,exception,failure,if,failure,null,maybe,die,reason,failure,if,fail,engine,lock,try,lock,store,inc,ref,try,if,failed,engine,get,null,logger,warn,new,parameterized,message,tried,to,fail,engine,but,engine,is,already,failed,ignoring,reason,failure,return,failed,engine,set,failure,null,failure,new,illegal,state,exception,reason,try,close,no,lock,engine,failed,on,reason,closed,latch,finally,logger,warn,new,parameterized,message,failed,engine,reason,failure,if,lucene,is,corruption,exception,failure,try,store,mark,store,corrupted,new,ioexception,failed,engine,reason,reason,exceptions,helper,unwrap,corruption,failure,catch,ioexception,e,logger,warn,couldn,t,mark,store,corrupted,e,event,listener,on,failed,engine,reason,failure,catch,exception,inner,if,failure,null,inner,add,suppressed,failure,logger,warn,fail,engine,threw,exception,inner,finally,store,dec,ref,else,logger,debug,new,parameterized,message,tried,to,fail,engine,but,could,not,acquire,lock,engine,should,be,failed,by,now,reason,failure
Engine -> public void failEngine(String reason, @Nullable Exception failure);1541618615;fail engine due to some error. the engine will also be closed._The underlying store is marked corrupted iff failure is caused by index corruption;public void failEngine(String reason, @Nullable Exception failure) {_        if (failure != null) {_            maybeDie(reason, failure)__        }_        if (failEngineLock.tryLock()) {_            store.incRef()__            try {_                if (failedEngine.get() != null) {_                    logger.warn(() -> new ParameterizedMessage("tried to fail engine but engine is already failed. ignoring. [{}]", reason), failure)__                    return__                }_                _                _                failedEngine.set((failure != null) ? failure : new IllegalStateException(reason))__                try {_                    _                    closeNoLock("engine failed on: [" + reason + "]", closedLatch)__                } finally {_                    logger.warn(() -> new ParameterizedMessage("failed engine [{}]", reason), failure)__                    _                    _                    _                    _                    _                    if (Lucene.isCorruptionException(failure)) {_                        try {_                            store.markStoreCorrupted(new IOException("failed engine (reason: [" + reason + "])", ExceptionsHelper.unwrapCorruption(failure)))__                        } catch (IOException e) {_                            logger.warn("Couldn't mark store corrupted", e)__                        }_                    }_                    eventListener.onFailedEngine(reason, failure)__                }_            } catch (Exception inner) {_                if (failure != null) inner.addSuppressed(failure)__                _                logger.warn("failEngine threw exception", inner)__            } finally {_                store.decRef()__            }_        } else {_            logger.debug(() -> new ParameterizedMessage("tried to fail engine but could not acquire lock - engine should be failed by now [{}]", reason), failure)__        }_    };fail,engine,due,to,some,error,the,engine,will,also,be,closed,the,underlying,store,is,marked,corrupted,iff,failure,is,caused,by,index,corruption;public,void,fail,engine,string,reason,nullable,exception,failure,if,failure,null,maybe,die,reason,failure,if,fail,engine,lock,try,lock,store,inc,ref,try,if,failed,engine,get,null,logger,warn,new,parameterized,message,tried,to,fail,engine,but,engine,is,already,failed,ignoring,reason,failure,return,failed,engine,set,failure,null,failure,new,illegal,state,exception,reason,try,close,no,lock,engine,failed,on,reason,closed,latch,finally,logger,warn,new,parameterized,message,failed,engine,reason,failure,if,lucene,is,corruption,exception,failure,try,store,mark,store,corrupted,new,ioexception,failed,engine,reason,reason,exceptions,helper,unwrap,corruption,failure,catch,ioexception,e,logger,warn,couldn,t,mark,store,corrupted,e,event,listener,on,failed,engine,reason,failure,catch,exception,inner,if,failure,null,inner,add,suppressed,failure,logger,warn,fail,engine,threw,exception,inner,finally,store,dec,ref,else,logger,debug,new,parameterized,message,tried,to,fail,engine,but,could,not,acquire,lock,engine,should,be,failed,by,now,reason,failure
Engine -> public void failEngine(String reason, @Nullable Exception failure);1542697754;fail engine due to some error. the engine will also be closed._The underlying store is marked corrupted iff failure is caused by index corruption;public void failEngine(String reason, @Nullable Exception failure) {_        if (failure != null) {_            maybeDie(reason, failure)__        }_        if (failEngineLock.tryLock()) {_            store.incRef()__            try {_                if (failedEngine.get() != null) {_                    logger.warn(() ->_                        new ParameterizedMessage("tried to fail engine but engine is already failed. ignoring. [{}]",_                            reason), failure)__                    return__                }_                _                _                failedEngine.set((failure != null) ? failure : new IllegalStateException(reason))__                try {_                    _                    closeNoLock("engine failed on: [" + reason + "]", closedLatch)__                } finally {_                    logger.warn(() -> new ParameterizedMessage("failed engine [{}]", reason), failure)__                    _                    _                    _                    _                    _                    if (Lucene.isCorruptionException(failure)) {_                        try {_                            store.markStoreCorrupted(new IOException("failed engine (reason: [" + reason + "])",_                                ExceptionsHelper.unwrapCorruption(failure)))__                        } catch (IOException e) {_                            logger.warn("Couldn't mark store corrupted", e)__                        }_                    }_                    eventListener.onFailedEngine(reason, failure)__                }_            } catch (Exception inner) {_                if (failure != null) inner.addSuppressed(failure)__                _                logger.warn("failEngine threw exception", inner)__            } finally {_                store.decRef()__            }_        } else {_            logger.debug(() -> new ParameterizedMessage("tried to fail engine but could not acquire lock - engine should " +_                "be failed by now [{}]", reason), failure)__        }_    };fail,engine,due,to,some,error,the,engine,will,also,be,closed,the,underlying,store,is,marked,corrupted,iff,failure,is,caused,by,index,corruption;public,void,fail,engine,string,reason,nullable,exception,failure,if,failure,null,maybe,die,reason,failure,if,fail,engine,lock,try,lock,store,inc,ref,try,if,failed,engine,get,null,logger,warn,new,parameterized,message,tried,to,fail,engine,but,engine,is,already,failed,ignoring,reason,failure,return,failed,engine,set,failure,null,failure,new,illegal,state,exception,reason,try,close,no,lock,engine,failed,on,reason,closed,latch,finally,logger,warn,new,parameterized,message,failed,engine,reason,failure,if,lucene,is,corruption,exception,failure,try,store,mark,store,corrupted,new,ioexception,failed,engine,reason,reason,exceptions,helper,unwrap,corruption,failure,catch,ioexception,e,logger,warn,couldn,t,mark,store,corrupted,e,event,listener,on,failed,engine,reason,failure,catch,exception,inner,if,failure,null,inner,add,suppressed,failure,logger,warn,fail,engine,threw,exception,inner,finally,store,dec,ref,else,logger,debug,new,parameterized,message,tried,to,fail,engine,but,could,not,acquire,lock,engine,should,be,failed,by,now,reason,failure
Engine -> public void failEngine(String reason, @Nullable Exception failure);1543047942;fail engine due to some error. the engine will also be closed._The underlying store is marked corrupted iff failure is caused by index corruption;public void failEngine(String reason, @Nullable Exception failure) {_        if (failure != null) {_            maybeDie(reason, failure)__        }_        if (failEngineLock.tryLock()) {_            store.incRef()__            try {_                if (failedEngine.get() != null) {_                    logger.warn(() ->_                        new ParameterizedMessage("tried to fail engine but engine is already failed. ignoring. [{}]",_                            reason), failure)__                    return__                }_                _                _                failedEngine.set((failure != null) ? failure : new IllegalStateException(reason))__                try {_                    _                    closeNoLock("engine failed on: [" + reason + "]", closedLatch)__                } finally {_                    logger.warn(() -> new ParameterizedMessage("failed engine [{}]", reason), failure)__                    _                    _                    _                    _                    _                    if (Lucene.isCorruptionException(failure)) {_                        try {_                            store.markStoreCorrupted(new IOException("failed engine (reason: [" + reason + "])",_                                ExceptionsHelper.unwrapCorruption(failure)))__                        } catch (IOException e) {_                            logger.warn("Couldn't mark store corrupted", e)__                        }_                    }_                    eventListener.onFailedEngine(reason, failure)__                }_            } catch (Exception inner) {_                if (failure != null) inner.addSuppressed(failure)__                _                logger.warn("failEngine threw exception", inner)__            } finally {_                store.decRef()__            }_        } else {_            logger.debug(() -> new ParameterizedMessage("tried to fail engine but could not acquire lock - engine should " +_                "be failed by now [{}]", reason), failure)__        }_    };fail,engine,due,to,some,error,the,engine,will,also,be,closed,the,underlying,store,is,marked,corrupted,iff,failure,is,caused,by,index,corruption;public,void,fail,engine,string,reason,nullable,exception,failure,if,failure,null,maybe,die,reason,failure,if,fail,engine,lock,try,lock,store,inc,ref,try,if,failed,engine,get,null,logger,warn,new,parameterized,message,tried,to,fail,engine,but,engine,is,already,failed,ignoring,reason,failure,return,failed,engine,set,failure,null,failure,new,illegal,state,exception,reason,try,close,no,lock,engine,failed,on,reason,closed,latch,finally,logger,warn,new,parameterized,message,failed,engine,reason,failure,if,lucene,is,corruption,exception,failure,try,store,mark,store,corrupted,new,ioexception,failed,engine,reason,reason,exceptions,helper,unwrap,corruption,failure,catch,ioexception,e,logger,warn,couldn,t,mark,store,corrupted,e,event,listener,on,failed,engine,reason,failure,catch,exception,inner,if,failure,null,inner,add,suppressed,failure,logger,warn,fail,engine,threw,exception,inner,finally,store,dec,ref,else,logger,debug,new,parameterized,message,tried,to,fail,engine,but,could,not,acquire,lock,engine,should,be,failed,by,now,reason,failure
Engine -> public void failEngine(String reason, @Nullable Exception failure);1544545090;fail engine due to some error. the engine will also be closed._The underlying store is marked corrupted iff failure is caused by index corruption;public void failEngine(String reason, @Nullable Exception failure) {_        if (failure != null) {_            maybeDie(reason, failure)__        }_        if (failEngineLock.tryLock()) {_            store.incRef()__            try {_                if (failedEngine.get() != null) {_                    logger.warn(() ->_                        new ParameterizedMessage("tried to fail engine but engine is already failed. ignoring. [{}]",_                            reason), failure)__                    return__                }_                _                _                failedEngine.set((failure != null) ? failure : new IllegalStateException(reason))__                try {_                    _                    closeNoLock("engine failed on: [" + reason + "]", closedLatch)__                } finally {_                    logger.warn(() -> new ParameterizedMessage("failed engine [{}]", reason), failure)__                    _                    _                    _                    _                    _                    if (Lucene.isCorruptionException(failure)) {_                        try {_                            store.markStoreCorrupted(new IOException("failed engine (reason: [" + reason + "])",_                                ExceptionsHelper.unwrapCorruption(failure)))__                        } catch (IOException e) {_                            logger.warn("Couldn't mark store corrupted", e)__                        }_                    }_                    eventListener.onFailedEngine(reason, failure)__                }_            } catch (Exception inner) {_                if (failure != null) inner.addSuppressed(failure)__                _                logger.warn("failEngine threw exception", inner)__            } finally {_                store.decRef()__            }_        } else {_            logger.debug(() -> new ParameterizedMessage("tried to fail engine but could not acquire lock - engine should " +_                "be failed by now [{}]", reason), failure)__        }_    };fail,engine,due,to,some,error,the,engine,will,also,be,closed,the,underlying,store,is,marked,corrupted,iff,failure,is,caused,by,index,corruption;public,void,fail,engine,string,reason,nullable,exception,failure,if,failure,null,maybe,die,reason,failure,if,fail,engine,lock,try,lock,store,inc,ref,try,if,failed,engine,get,null,logger,warn,new,parameterized,message,tried,to,fail,engine,but,engine,is,already,failed,ignoring,reason,failure,return,failed,engine,set,failure,null,failure,new,illegal,state,exception,reason,try,close,no,lock,engine,failed,on,reason,closed,latch,finally,logger,warn,new,parameterized,message,failed,engine,reason,failure,if,lucene,is,corruption,exception,failure,try,store,mark,store,corrupted,new,ioexception,failed,engine,reason,reason,exceptions,helper,unwrap,corruption,failure,catch,ioexception,e,logger,warn,couldn,t,mark,store,corrupted,e,event,listener,on,failed,engine,reason,failure,catch,exception,inner,if,failure,null,inner,add,suppressed,failure,logger,warn,fail,engine,threw,exception,inner,finally,store,dec,ref,else,logger,debug,new,parameterized,message,tried,to,fail,engine,but,could,not,acquire,lock,engine,should,be,failed,by,now,reason,failure
Engine -> public void failEngine(String reason, @Nullable Exception failure);1544684920;fail engine due to some error. the engine will also be closed._The underlying store is marked corrupted iff failure is caused by index corruption;public void failEngine(String reason, @Nullable Exception failure) {_        if (failure != null) {_            maybeDie(reason, failure)__        }_        if (failEngineLock.tryLock()) {_            store.incRef()__            try {_                if (failedEngine.get() != null) {_                    logger.warn(() ->_                        new ParameterizedMessage("tried to fail engine but engine is already failed. ignoring. [{}]",_                            reason), failure)__                    return__                }_                _                _                failedEngine.set((failure != null) ? failure : new IllegalStateException(reason))__                try {_                    _                    closeNoLock("engine failed on: [" + reason + "]", closedLatch)__                } finally {_                    logger.warn(() -> new ParameterizedMessage("failed engine [{}]", reason), failure)__                    _                    _                    _                    _                    _                    if (Lucene.isCorruptionException(failure)) {_                        try {_                            store.markStoreCorrupted(new IOException("failed engine (reason: [" + reason + "])",_                                ExceptionsHelper.unwrapCorruption(failure)))__                        } catch (IOException e) {_                            logger.warn("Couldn't mark store corrupted", e)__                        }_                    }_                    eventListener.onFailedEngine(reason, failure)__                }_            } catch (Exception inner) {_                if (failure != null) inner.addSuppressed(failure)__                _                logger.warn("failEngine threw exception", inner)__            } finally {_                store.decRef()__            }_        } else {_            logger.debug(() -> new ParameterizedMessage("tried to fail engine but could not acquire lock - engine should " +_                "be failed by now [{}]", reason), failure)__        }_    };fail,engine,due,to,some,error,the,engine,will,also,be,closed,the,underlying,store,is,marked,corrupted,iff,failure,is,caused,by,index,corruption;public,void,fail,engine,string,reason,nullable,exception,failure,if,failure,null,maybe,die,reason,failure,if,fail,engine,lock,try,lock,store,inc,ref,try,if,failed,engine,get,null,logger,warn,new,parameterized,message,tried,to,fail,engine,but,engine,is,already,failed,ignoring,reason,failure,return,failed,engine,set,failure,null,failure,new,illegal,state,exception,reason,try,close,no,lock,engine,failed,on,reason,closed,latch,finally,logger,warn,new,parameterized,message,failed,engine,reason,failure,if,lucene,is,corruption,exception,failure,try,store,mark,store,corrupted,new,ioexception,failed,engine,reason,reason,exceptions,helper,unwrap,corruption,failure,catch,ioexception,e,logger,warn,couldn,t,mark,store,corrupted,e,event,listener,on,failed,engine,reason,failure,catch,exception,inner,if,failure,null,inner,add,suppressed,failure,logger,warn,fail,engine,threw,exception,inner,finally,store,dec,ref,else,logger,debug,new,parameterized,message,tried,to,fail,engine,but,could,not,acquire,lock,engine,should,be,failed,by,now,reason,failure
Engine -> public void failEngine(String reason, @Nullable Exception failure);1545140118;fail engine due to some error. the engine will also be closed._The underlying store is marked corrupted iff failure is caused by index corruption;public void failEngine(String reason, @Nullable Exception failure) {_        if (failure != null) {_            maybeDie(reason, failure)__        }_        if (failEngineLock.tryLock()) {_            store.incRef()__            try {_                if (failedEngine.get() != null) {_                    logger.warn(() ->_                        new ParameterizedMessage("tried to fail engine but engine is already failed. ignoring. [{}]",_                            reason), failure)__                    return__                }_                _                _                failedEngine.set((failure != null) ? failure : new IllegalStateException(reason))__                try {_                    _                    closeNoLock("engine failed on: [" + reason + "]", closedLatch)__                } finally {_                    logger.warn(() -> new ParameterizedMessage("failed engine [{}]", reason), failure)__                    _                    _                    _                    _                    _                    if (Lucene.isCorruptionException(failure)) {_                        try {_                            store.markStoreCorrupted(new IOException("failed engine (reason: [" + reason + "])",_                                ExceptionsHelper.unwrapCorruption(failure)))__                        } catch (IOException e) {_                            logger.warn("Couldn't mark store corrupted", e)__                        }_                    }_                    eventListener.onFailedEngine(reason, failure)__                }_            } catch (Exception inner) {_                if (failure != null) inner.addSuppressed(failure)__                _                logger.warn("failEngine threw exception", inner)__            } finally {_                store.decRef()__            }_        } else {_            logger.debug(() -> new ParameterizedMessage("tried to fail engine but could not acquire lock - engine should " +_                "be failed by now [{}]", reason), failure)__        }_    };fail,engine,due,to,some,error,the,engine,will,also,be,closed,the,underlying,store,is,marked,corrupted,iff,failure,is,caused,by,index,corruption;public,void,fail,engine,string,reason,nullable,exception,failure,if,failure,null,maybe,die,reason,failure,if,fail,engine,lock,try,lock,store,inc,ref,try,if,failed,engine,get,null,logger,warn,new,parameterized,message,tried,to,fail,engine,but,engine,is,already,failed,ignoring,reason,failure,return,failed,engine,set,failure,null,failure,new,illegal,state,exception,reason,try,close,no,lock,engine,failed,on,reason,closed,latch,finally,logger,warn,new,parameterized,message,failed,engine,reason,failure,if,lucene,is,corruption,exception,failure,try,store,mark,store,corrupted,new,ioexception,failed,engine,reason,reason,exceptions,helper,unwrap,corruption,failure,catch,ioexception,e,logger,warn,couldn,t,mark,store,corrupted,e,event,listener,on,failed,engine,reason,failure,catch,exception,inner,if,failure,null,inner,add,suppressed,failure,logger,warn,fail,engine,threw,exception,inner,finally,store,dec,ref,else,logger,debug,new,parameterized,message,tried,to,fail,engine,but,could,not,acquire,lock,engine,should,be,failed,by,now,reason,failure
Engine -> public void failEngine(String reason, @Nullable Exception failure);1545221705;fail engine due to some error. the engine will also be closed._The underlying store is marked corrupted iff failure is caused by index corruption;public void failEngine(String reason, @Nullable Exception failure) {_        if (failure != null) {_            maybeDie(reason, failure)__        }_        if (failEngineLock.tryLock()) {_            store.incRef()__            try {_                if (failedEngine.get() != null) {_                    logger.warn(() ->_                        new ParameterizedMessage("tried to fail engine but engine is already failed. ignoring. [{}]",_                            reason), failure)__                    return__                }_                _                _                failedEngine.set((failure != null) ? failure : new IllegalStateException(reason))__                try {_                    _                    closeNoLock("engine failed on: [" + reason + "]", closedLatch)__                } finally {_                    logger.warn(() -> new ParameterizedMessage("failed engine [{}]", reason), failure)__                    _                    _                    _                    _                    _                    if (Lucene.isCorruptionException(failure)) {_                        try {_                            store.markStoreCorrupted(new IOException("failed engine (reason: [" + reason + "])",_                                ExceptionsHelper.unwrapCorruption(failure)))__                        } catch (IOException e) {_                            logger.warn("Couldn't mark store corrupted", e)__                        }_                    }_                    eventListener.onFailedEngine(reason, failure)__                }_            } catch (Exception inner) {_                if (failure != null) inner.addSuppressed(failure)__                _                logger.warn("failEngine threw exception", inner)__            } finally {_                store.decRef()__            }_        } else {_            logger.debug(() -> new ParameterizedMessage("tried to fail engine but could not acquire lock - engine should " +_                "be failed by now [{}]", reason), failure)__        }_    };fail,engine,due,to,some,error,the,engine,will,also,be,closed,the,underlying,store,is,marked,corrupted,iff,failure,is,caused,by,index,corruption;public,void,fail,engine,string,reason,nullable,exception,failure,if,failure,null,maybe,die,reason,failure,if,fail,engine,lock,try,lock,store,inc,ref,try,if,failed,engine,get,null,logger,warn,new,parameterized,message,tried,to,fail,engine,but,engine,is,already,failed,ignoring,reason,failure,return,failed,engine,set,failure,null,failure,new,illegal,state,exception,reason,try,close,no,lock,engine,failed,on,reason,closed,latch,finally,logger,warn,new,parameterized,message,failed,engine,reason,failure,if,lucene,is,corruption,exception,failure,try,store,mark,store,corrupted,new,ioexception,failed,engine,reason,reason,exceptions,helper,unwrap,corruption,failure,catch,ioexception,e,logger,warn,couldn,t,mark,store,corrupted,e,event,listener,on,failed,engine,reason,failure,catch,exception,inner,if,failure,null,inner,add,suppressed,failure,logger,warn,fail,engine,threw,exception,inner,finally,store,dec,ref,else,logger,debug,new,parameterized,message,tried,to,fail,engine,but,could,not,acquire,lock,engine,should,be,failed,by,now,reason,failure
Engine -> public void failEngine(String reason, @Nullable Exception failure);1547332999;fail engine due to some error. the engine will also be closed._The underlying store is marked corrupted iff failure is caused by index corruption;public void failEngine(String reason, @Nullable Exception failure) {_        if (failure != null) {_            maybeDie(reason, failure)__        }_        if (failEngineLock.tryLock()) {_            store.incRef()__            try {_                if (failedEngine.get() != null) {_                    logger.warn(() ->_                        new ParameterizedMessage("tried to fail engine but engine is already failed. ignoring. [{}]",_                            reason), failure)__                    return__                }_                _                _                failedEngine.set((failure != null) ? failure : new IllegalStateException(reason))__                try {_                    _                    closeNoLock("engine failed on: [" + reason + "]", closedLatch)__                } finally {_                    logger.warn(() -> new ParameterizedMessage("failed engine [{}]", reason), failure)__                    _                    _                    _                    _                    _                    if (Lucene.isCorruptionException(failure)) {_                        try {_                            store.markStoreCorrupted(new IOException("failed engine (reason: [" + reason + "])",_                                ExceptionsHelper.unwrapCorruption(failure)))__                        } catch (IOException e) {_                            logger.warn("Couldn't mark store corrupted", e)__                        }_                    }_                    eventListener.onFailedEngine(reason, failure)__                }_            } catch (Exception inner) {_                if (failure != null) inner.addSuppressed(failure)__                _                logger.warn("failEngine threw exception", inner)__            } finally {_                store.decRef()__            }_        } else {_            logger.debug(() -> new ParameterizedMessage("tried to fail engine but could not acquire lock - engine should " +_                "be failed by now [{}]", reason), failure)__        }_    };fail,engine,due,to,some,error,the,engine,will,also,be,closed,the,underlying,store,is,marked,corrupted,iff,failure,is,caused,by,index,corruption;public,void,fail,engine,string,reason,nullable,exception,failure,if,failure,null,maybe,die,reason,failure,if,fail,engine,lock,try,lock,store,inc,ref,try,if,failed,engine,get,null,logger,warn,new,parameterized,message,tried,to,fail,engine,but,engine,is,already,failed,ignoring,reason,failure,return,failed,engine,set,failure,null,failure,new,illegal,state,exception,reason,try,close,no,lock,engine,failed,on,reason,closed,latch,finally,logger,warn,new,parameterized,message,failed,engine,reason,failure,if,lucene,is,corruption,exception,failure,try,store,mark,store,corrupted,new,ioexception,failed,engine,reason,reason,exceptions,helper,unwrap,corruption,failure,catch,ioexception,e,logger,warn,couldn,t,mark,store,corrupted,e,event,listener,on,failed,engine,reason,failure,catch,exception,inner,if,failure,null,inner,add,suppressed,failure,logger,warn,fail,engine,threw,exception,inner,finally,store,dec,ref,else,logger,debug,new,parameterized,message,tried,to,fail,engine,but,could,not,acquire,lock,engine,should,be,failed,by,now,reason,failure
Engine -> public void failEngine(String reason, @Nullable Exception failure);1548771485;fail engine due to some error. the engine will also be closed._The underlying store is marked corrupted iff failure is caused by index corruption;public void failEngine(String reason, @Nullable Exception failure) {_        if (failure != null) {_            maybeDie(reason, failure)__        }_        if (failEngineLock.tryLock()) {_            store.incRef()__            try {_                if (failedEngine.get() != null) {_                    logger.warn(() ->_                        new ParameterizedMessage("tried to fail engine but engine is already failed. ignoring. [{}]",_                            reason), failure)__                    return__                }_                _                _                failedEngine.set((failure != null) ? failure : new IllegalStateException(reason))__                try {_                    _                    closeNoLock("engine failed on: [" + reason + "]", closedLatch)__                } finally {_                    logger.warn(() -> new ParameterizedMessage("failed engine [{}]", reason), failure)__                    _                    _                    _                    _                    _                    if (Lucene.isCorruptionException(failure)) {_                        try {_                            store.markStoreCorrupted(new IOException("failed engine (reason: [" + reason + "])",_                                ExceptionsHelper.unwrapCorruption(failure)))__                        } catch (IOException e) {_                            logger.warn("Couldn't mark store corrupted", e)__                        }_                    }_                    eventListener.onFailedEngine(reason, failure)__                }_            } catch (Exception inner) {_                if (failure != null) inner.addSuppressed(failure)__                _                logger.warn("failEngine threw exception", inner)__            } finally {_                store.decRef()__            }_        } else {_            logger.debug(() -> new ParameterizedMessage("tried to fail engine but could not acquire lock - engine should " +_                "be failed by now [{}]", reason), failure)__        }_    };fail,engine,due,to,some,error,the,engine,will,also,be,closed,the,underlying,store,is,marked,corrupted,iff,failure,is,caused,by,index,corruption;public,void,fail,engine,string,reason,nullable,exception,failure,if,failure,null,maybe,die,reason,failure,if,fail,engine,lock,try,lock,store,inc,ref,try,if,failed,engine,get,null,logger,warn,new,parameterized,message,tried,to,fail,engine,but,engine,is,already,failed,ignoring,reason,failure,return,failed,engine,set,failure,null,failure,new,illegal,state,exception,reason,try,close,no,lock,engine,failed,on,reason,closed,latch,finally,logger,warn,new,parameterized,message,failed,engine,reason,failure,if,lucene,is,corruption,exception,failure,try,store,mark,store,corrupted,new,ioexception,failed,engine,reason,reason,exceptions,helper,unwrap,corruption,failure,catch,ioexception,e,logger,warn,couldn,t,mark,store,corrupted,e,event,listener,on,failed,engine,reason,failure,catch,exception,inner,if,failure,null,inner,add,suppressed,failure,logger,warn,fail,engine,threw,exception,inner,finally,store,dec,ref,else,logger,debug,new,parameterized,message,tried,to,fail,engine,but,could,not,acquire,lock,engine,should,be,failed,by,now,reason,failure
Engine -> public void failEngine(String reason, @Nullable Exception failure);1549891630;fail engine due to some error. the engine will also be closed._The underlying store is marked corrupted iff failure is caused by index corruption;public void failEngine(String reason, @Nullable Exception failure) {_        if (failure != null) {_            maybeDie(reason, failure)__        }_        if (failEngineLock.tryLock()) {_            store.incRef()__            try {_                if (failedEngine.get() != null) {_                    logger.warn(() ->_                        new ParameterizedMessage("tried to fail engine but engine is already failed. ignoring. [{}]",_                            reason), failure)__                    return__                }_                _                _                failedEngine.set((failure != null) ? failure : new IllegalStateException(reason))__                try {_                    _                    closeNoLock("engine failed on: [" + reason + "]", closedLatch)__                } finally {_                    logger.warn(() -> new ParameterizedMessage("failed engine [{}]", reason), failure)__                    _                    _                    _                    _                    _                    if (Lucene.isCorruptionException(failure)) {_                        try {_                            store.markStoreCorrupted(new IOException("failed engine (reason: [" + reason + "])",_                                ExceptionsHelper.unwrapCorruption(failure)))__                        } catch (IOException e) {_                            logger.warn("Couldn't mark store corrupted", e)__                        }_                    }_                    eventListener.onFailedEngine(reason, failure)__                }_            } catch (Exception inner) {_                if (failure != null) inner.addSuppressed(failure)__                _                logger.warn("failEngine threw exception", inner)__            } finally {_                store.decRef()__            }_        } else {_            logger.debug(() -> new ParameterizedMessage("tried to fail engine but could not acquire lock - engine should " +_                "be failed by now [{}]", reason), failure)__        }_    };fail,engine,due,to,some,error,the,engine,will,also,be,closed,the,underlying,store,is,marked,corrupted,iff,failure,is,caused,by,index,corruption;public,void,fail,engine,string,reason,nullable,exception,failure,if,failure,null,maybe,die,reason,failure,if,fail,engine,lock,try,lock,store,inc,ref,try,if,failed,engine,get,null,logger,warn,new,parameterized,message,tried,to,fail,engine,but,engine,is,already,failed,ignoring,reason,failure,return,failed,engine,set,failure,null,failure,new,illegal,state,exception,reason,try,close,no,lock,engine,failed,on,reason,closed,latch,finally,logger,warn,new,parameterized,message,failed,engine,reason,failure,if,lucene,is,corruption,exception,failure,try,store,mark,store,corrupted,new,ioexception,failed,engine,reason,reason,exceptions,helper,unwrap,corruption,failure,catch,ioexception,e,logger,warn,couldn,t,mark,store,corrupted,e,event,listener,on,failed,engine,reason,failure,catch,exception,inner,if,failure,null,inner,add,suppressed,failure,logger,warn,fail,engine,threw,exception,inner,finally,store,dec,ref,else,logger,debug,new,parameterized,message,tried,to,fail,engine,but,could,not,acquire,lock,engine,should,be,failed,by,now,reason,failure
Engine -> public void failEngine(String reason, @Nullable Exception failure);1549975032;fail engine due to some error. the engine will also be closed._The underlying store is marked corrupted iff failure is caused by index corruption;public void failEngine(String reason, @Nullable Exception failure) {_        if (failure != null) {_            maybeDie(reason, failure)__        }_        if (failEngineLock.tryLock()) {_            store.incRef()__            try {_                if (failedEngine.get() != null) {_                    logger.warn(() ->_                        new ParameterizedMessage("tried to fail engine but engine is already failed. ignoring. [{}]",_                            reason), failure)__                    return__                }_                _                _                failedEngine.set((failure != null) ? failure : new IllegalStateException(reason))__                try {_                    _                    closeNoLock("engine failed on: [" + reason + "]", closedLatch)__                } finally {_                    logger.warn(() -> new ParameterizedMessage("failed engine [{}]", reason), failure)__                    _                    _                    _                    _                    _                    if (Lucene.isCorruptionException(failure)) {_                        try {_                            store.markStoreCorrupted(new IOException("failed engine (reason: [" + reason + "])",_                                ExceptionsHelper.unwrapCorruption(failure)))__                        } catch (IOException e) {_                            logger.warn("Couldn't mark store corrupted", e)__                        }_                    }_                    eventListener.onFailedEngine(reason, failure)__                }_            } catch (Exception inner) {_                if (failure != null) inner.addSuppressed(failure)__                _                logger.warn("failEngine threw exception", inner)__            } finally {_                store.decRef()__            }_        } else {_            logger.debug(() -> new ParameterizedMessage("tried to fail engine but could not acquire lock - engine should " +_                "be failed by now [{}]", reason), failure)__        }_    };fail,engine,due,to,some,error,the,engine,will,also,be,closed,the,underlying,store,is,marked,corrupted,iff,failure,is,caused,by,index,corruption;public,void,fail,engine,string,reason,nullable,exception,failure,if,failure,null,maybe,die,reason,failure,if,fail,engine,lock,try,lock,store,inc,ref,try,if,failed,engine,get,null,logger,warn,new,parameterized,message,tried,to,fail,engine,but,engine,is,already,failed,ignoring,reason,failure,return,failed,engine,set,failure,null,failure,new,illegal,state,exception,reason,try,close,no,lock,engine,failed,on,reason,closed,latch,finally,logger,warn,new,parameterized,message,failed,engine,reason,failure,if,lucene,is,corruption,exception,failure,try,store,mark,store,corrupted,new,ioexception,failed,engine,reason,reason,exceptions,helper,unwrap,corruption,failure,catch,ioexception,e,logger,warn,couldn,t,mark,store,corrupted,e,event,listener,on,failed,engine,reason,failure,catch,exception,inner,if,failure,null,inner,add,suppressed,failure,logger,warn,fail,engine,threw,exception,inner,finally,store,dec,ref,else,logger,debug,new,parameterized,message,tried,to,fail,engine,but,could,not,acquire,lock,engine,should,be,failed,by,now,reason,failure
Engine -> public void failEngine(String reason, @Nullable Exception failure);1550220204;fail engine due to some error. the engine will also be closed._The underlying store is marked corrupted iff failure is caused by index corruption;public void failEngine(String reason, @Nullable Exception failure) {_        if (failure != null) {_            maybeDie(reason, failure)__        }_        if (failEngineLock.tryLock()) {_            store.incRef()__            try {_                if (failedEngine.get() != null) {_                    logger.warn(() ->_                        new ParameterizedMessage("tried to fail engine but engine is already failed. ignoring. [{}]",_                            reason), failure)__                    return__                }_                _                _                failedEngine.set((failure != null) ? failure : new IllegalStateException(reason))__                try {_                    _                    closeNoLock("engine failed on: [" + reason + "]", closedLatch)__                } finally {_                    logger.warn(() -> new ParameterizedMessage("failed engine [{}]", reason), failure)__                    _                    _                    _                    _                    _                    if (Lucene.isCorruptionException(failure)) {_                        try {_                            store.markStoreCorrupted(new IOException("failed engine (reason: [" + reason + "])",_                                ExceptionsHelper.unwrapCorruption(failure)))__                        } catch (IOException e) {_                            logger.warn("Couldn't mark store corrupted", e)__                        }_                    }_                    eventListener.onFailedEngine(reason, failure)__                }_            } catch (Exception inner) {_                if (failure != null) inner.addSuppressed(failure)__                _                logger.warn("failEngine threw exception", inner)__            } finally {_                store.decRef()__            }_        } else {_            logger.debug(() -> new ParameterizedMessage("tried to fail engine but could not acquire lock - engine should " +_                "be failed by now [{}]", reason), failure)__        }_    };fail,engine,due,to,some,error,the,engine,will,also,be,closed,the,underlying,store,is,marked,corrupted,iff,failure,is,caused,by,index,corruption;public,void,fail,engine,string,reason,nullable,exception,failure,if,failure,null,maybe,die,reason,failure,if,fail,engine,lock,try,lock,store,inc,ref,try,if,failed,engine,get,null,logger,warn,new,parameterized,message,tried,to,fail,engine,but,engine,is,already,failed,ignoring,reason,failure,return,failed,engine,set,failure,null,failure,new,illegal,state,exception,reason,try,close,no,lock,engine,failed,on,reason,closed,latch,finally,logger,warn,new,parameterized,message,failed,engine,reason,failure,if,lucene,is,corruption,exception,failure,try,store,mark,store,corrupted,new,ioexception,failed,engine,reason,reason,exceptions,helper,unwrap,corruption,failure,catch,ioexception,e,logger,warn,couldn,t,mark,store,corrupted,e,event,listener,on,failed,engine,reason,failure,catch,exception,inner,if,failure,null,inner,add,suppressed,failure,logger,warn,fail,engine,threw,exception,inner,finally,store,dec,ref,else,logger,debug,new,parameterized,message,tried,to,fail,engine,but,could,not,acquire,lock,engine,should,be,failed,by,now,reason,failure
Engine -> public void failEngine(String reason, @Nullable Exception failure);1550526771;fail engine due to some error. the engine will also be closed._The underlying store is marked corrupted iff failure is caused by index corruption;public void failEngine(String reason, @Nullable Exception failure) {_        if (failure != null) {_            maybeDie(reason, failure)__        }_        if (failEngineLock.tryLock()) {_            store.incRef()__            try {_                if (failedEngine.get() != null) {_                    logger.warn(() ->_                        new ParameterizedMessage("tried to fail engine but engine is already failed. ignoring. [{}]",_                            reason), failure)__                    return__                }_                _                _                failedEngine.set((failure != null) ? failure : new IllegalStateException(reason))__                try {_                    _                    closeNoLock("engine failed on: [" + reason + "]", closedLatch)__                } finally {_                    logger.warn(() -> new ParameterizedMessage("failed engine [{}]", reason), failure)__                    _                    _                    _                    _                    _                    if (Lucene.isCorruptionException(failure)) {_                        try {_                            store.markStoreCorrupted(new IOException("failed engine (reason: [" + reason + "])",_                                ExceptionsHelper.unwrapCorruption(failure)))__                        } catch (IOException e) {_                            logger.warn("Couldn't mark store corrupted", e)__                        }_                    }_                    eventListener.onFailedEngine(reason, failure)__                }_            } catch (Exception inner) {_                if (failure != null) inner.addSuppressed(failure)__                _                logger.warn("failEngine threw exception", inner)__            } finally {_                store.decRef()__            }_        } else {_            logger.debug(() -> new ParameterizedMessage("tried to fail engine but could not acquire lock - engine should " +_                "be failed by now [{}]", reason), failure)__        }_    };fail,engine,due,to,some,error,the,engine,will,also,be,closed,the,underlying,store,is,marked,corrupted,iff,failure,is,caused,by,index,corruption;public,void,fail,engine,string,reason,nullable,exception,failure,if,failure,null,maybe,die,reason,failure,if,fail,engine,lock,try,lock,store,inc,ref,try,if,failed,engine,get,null,logger,warn,new,parameterized,message,tried,to,fail,engine,but,engine,is,already,failed,ignoring,reason,failure,return,failed,engine,set,failure,null,failure,new,illegal,state,exception,reason,try,close,no,lock,engine,failed,on,reason,closed,latch,finally,logger,warn,new,parameterized,message,failed,engine,reason,failure,if,lucene,is,corruption,exception,failure,try,store,mark,store,corrupted,new,ioexception,failed,engine,reason,reason,exceptions,helper,unwrap,corruption,failure,catch,ioexception,e,logger,warn,couldn,t,mark,store,corrupted,e,event,listener,on,failed,engine,reason,failure,catch,exception,inner,if,failure,null,inner,add,suppressed,failure,logger,warn,fail,engine,threw,exception,inner,finally,store,dec,ref,else,logger,debug,new,parameterized,message,tried,to,fail,engine,but,could,not,acquire,lock,engine,should,be,failed,by,now,reason,failure
Engine -> public void failEngine(String reason, @Nullable Exception failure);1551110274;fail engine due to some error. the engine will also be closed._The underlying store is marked corrupted iff failure is caused by index corruption;public void failEngine(String reason, @Nullable Exception failure) {_        if (failure != null) {_            maybeDie(reason, failure)__        }_        if (failEngineLock.tryLock()) {_            store.incRef()__            try {_                if (failedEngine.get() != null) {_                    logger.warn(() ->_                        new ParameterizedMessage("tried to fail engine but engine is already failed. ignoring. [{}]",_                            reason), failure)__                    return__                }_                _                _                failedEngine.set((failure != null) ? failure : new IllegalStateException(reason))__                try {_                    _                    closeNoLock("engine failed on: [" + reason + "]", closedLatch)__                } finally {_                    logger.warn(() -> new ParameterizedMessage("failed engine [{}]", reason), failure)__                    _                    _                    _                    _                    _                    if (Lucene.isCorruptionException(failure)) {_                        try {_                            store.markStoreCorrupted(new IOException("failed engine (reason: [" + reason + "])",_                                ExceptionsHelper.unwrapCorruption(failure)))__                        } catch (IOException e) {_                            logger.warn("Couldn't mark store corrupted", e)__                        }_                    }_                    eventListener.onFailedEngine(reason, failure)__                }_            } catch (Exception inner) {_                if (failure != null) inner.addSuppressed(failure)__                _                logger.warn("failEngine threw exception", inner)__            } finally {_                store.decRef()__            }_        } else {_            logger.debug(() -> new ParameterizedMessage("tried to fail engine but could not acquire lock - engine should " +_                "be failed by now [{}]", reason), failure)__        }_    };fail,engine,due,to,some,error,the,engine,will,also,be,closed,the,underlying,store,is,marked,corrupted,iff,failure,is,caused,by,index,corruption;public,void,fail,engine,string,reason,nullable,exception,failure,if,failure,null,maybe,die,reason,failure,if,fail,engine,lock,try,lock,store,inc,ref,try,if,failed,engine,get,null,logger,warn,new,parameterized,message,tried,to,fail,engine,but,engine,is,already,failed,ignoring,reason,failure,return,failed,engine,set,failure,null,failure,new,illegal,state,exception,reason,try,close,no,lock,engine,failed,on,reason,closed,latch,finally,logger,warn,new,parameterized,message,failed,engine,reason,failure,if,lucene,is,corruption,exception,failure,try,store,mark,store,corrupted,new,ioexception,failed,engine,reason,reason,exceptions,helper,unwrap,corruption,failure,catch,ioexception,e,logger,warn,couldn,t,mark,store,corrupted,e,event,listener,on,failed,engine,reason,failure,catch,exception,inner,if,failure,null,inner,add,suppressed,failure,logger,warn,fail,engine,threw,exception,inner,finally,store,dec,ref,else,logger,debug,new,parameterized,message,tried,to,fail,engine,but,could,not,acquire,lock,engine,should,be,failed,by,now,reason,failure
Engine -> public void failEngine(String reason, @Nullable Exception failure);1551126708;fail engine due to some error. the engine will also be closed._The underlying store is marked corrupted iff failure is caused by index corruption;public void failEngine(String reason, @Nullable Exception failure) {_        if (failure != null) {_            maybeDie(reason, failure)__        }_        if (failEngineLock.tryLock()) {_            store.incRef()__            try {_                if (failedEngine.get() != null) {_                    logger.warn(() ->_                        new ParameterizedMessage("tried to fail engine but engine is already failed. ignoring. [{}]",_                            reason), failure)__                    return__                }_                _                _                failedEngine.set((failure != null) ? failure : new IllegalStateException(reason))__                try {_                    _                    closeNoLock("engine failed on: [" + reason + "]", closedLatch)__                } finally {_                    logger.warn(() -> new ParameterizedMessage("failed engine [{}]", reason), failure)__                    _                    _                    _                    _                    _                    if (Lucene.isCorruptionException(failure)) {_                        try {_                            store.markStoreCorrupted(new IOException("failed engine (reason: [" + reason + "])",_                                ExceptionsHelper.unwrapCorruption(failure)))__                        } catch (IOException e) {_                            logger.warn("Couldn't mark store corrupted", e)__                        }_                    }_                    eventListener.onFailedEngine(reason, failure)__                }_            } catch (Exception inner) {_                if (failure != null) inner.addSuppressed(failure)__                _                logger.warn("failEngine threw exception", inner)__            } finally {_                store.decRef()__            }_        } else {_            logger.debug(() -> new ParameterizedMessage("tried to fail engine but could not acquire lock - engine should " +_                "be failed by now [{}]", reason), failure)__        }_    };fail,engine,due,to,some,error,the,engine,will,also,be,closed,the,underlying,store,is,marked,corrupted,iff,failure,is,caused,by,index,corruption;public,void,fail,engine,string,reason,nullable,exception,failure,if,failure,null,maybe,die,reason,failure,if,fail,engine,lock,try,lock,store,inc,ref,try,if,failed,engine,get,null,logger,warn,new,parameterized,message,tried,to,fail,engine,but,engine,is,already,failed,ignoring,reason,failure,return,failed,engine,set,failure,null,failure,new,illegal,state,exception,reason,try,close,no,lock,engine,failed,on,reason,closed,latch,finally,logger,warn,new,parameterized,message,failed,engine,reason,failure,if,lucene,is,corruption,exception,failure,try,store,mark,store,corrupted,new,ioexception,failed,engine,reason,reason,exceptions,helper,unwrap,corruption,failure,catch,ioexception,e,logger,warn,couldn,t,mark,store,corrupted,e,event,listener,on,failed,engine,reason,failure,catch,exception,inner,if,failure,null,inner,add,suppressed,failure,logger,warn,fail,engine,threw,exception,inner,finally,store,dec,ref,else,logger,debug,new,parameterized,message,tried,to,fail,engine,but,could,not,acquire,lock,engine,should,be,failed,by,now,reason,failure
Engine -> public abstract Closeable acquireRetentionLock()_;1549975032;Acquires a lock on the translog files and Lucene soft-deleted documents to prevent them from being trimmed;public abstract Closeable acquireRetentionLock()_;acquires,a,lock,on,the,translog,files,and,lucene,soft,deleted,documents,to,prevent,them,from,being,trimmed;public,abstract,closeable,acquire,retention,lock
Engine -> public abstract Closeable acquireRetentionLock()_;1550220204;Acquires a lock on the translog files and Lucene soft-deleted documents to prevent them from being trimmed;public abstract Closeable acquireRetentionLock()_;acquires,a,lock,on,the,translog,files,and,lucene,soft,deleted,documents,to,prevent,them,from,being,trimmed;public,abstract,closeable,acquire,retention,lock
Engine -> public abstract Closeable acquireRetentionLock()_;1550526771;Acquires a lock on the translog files and Lucene soft-deleted documents to prevent them from being trimmed;public abstract Closeable acquireRetentionLock()_;acquires,a,lock,on,the,translog,files,and,lucene,soft,deleted,documents,to,prevent,them,from,being,trimmed;public,abstract,closeable,acquire,retention,lock
Engine -> public abstract Closeable acquireRetentionLock()_;1551110274;Acquires a lock on the translog files and Lucene soft-deleted documents to prevent them from being trimmed;public abstract Closeable acquireRetentionLock()_;acquires,a,lock,on,the,translog,files,and,lucene,soft,deleted,documents,to,prevent,them,from,being,trimmed;public,abstract,closeable,acquire,retention,lock
Engine -> public abstract Closeable acquireRetentionLock()_;1551126708;Acquires a lock on the translog files and Lucene soft-deleted documents to prevent them from being trimmed;public abstract Closeable acquireRetentionLock()_;acquires,a,lock,on,the,translog,files,and,lucene,soft,deleted,documents,to,prevent,them,from,being,trimmed;public,abstract,closeable,acquire,retention,lock
Engine -> public Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException;1536314350;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire_@param scope the scope of this searcher ie. if the searcher will be used for get or search purposes__@see Searcher#close();public Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException {_        _        if (store.tryIncRef() == false) {_            throw new AlreadyClosedException(shardId + " store is closed", failedEngine.get())__        }_        Releasable releasable = store::decRef__        try {_            EngineSearcher engineSearcher = new EngineSearcher(source, getReferenceManager(scope), store, logger)__            releasable = null_ _            return engineSearcher__        } catch (AlreadyClosedException ex) {_            throw ex__        } catch (Exception ex) {_            maybeFailEngine("acquire_searcher", ex)__            ensureOpen(ex)_ _            logger.error(() -> new ParameterizedMessage("failed to acquire searcher, source {}", source), ex)__            throw new EngineException(shardId, "failed to acquire searcher, source " + source, ex)__        } finally {_            Releasables.close(releasable)__        }_    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,param,scope,the,scope,of,this,searcher,ie,if,the,searcher,will,be,used,for,get,or,search,purposes,see,searcher,close;public,searcher,acquire,searcher,string,source,searcher,scope,scope,throws,engine,exception,if,store,try,inc,ref,false,throw,new,already,closed,exception,shard,id,store,is,closed,failed,engine,get,releasable,releasable,store,dec,ref,try,engine,searcher,engine,searcher,new,engine,searcher,source,get,reference,manager,scope,store,logger,releasable,null,return,engine,searcher,catch,already,closed,exception,ex,throw,ex,catch,exception,ex,maybe,fail,engine,ex,ensure,open,ex,logger,error,new,parameterized,message,failed,to,acquire,searcher,source,source,ex,throw,new,engine,exception,shard,id,failed,to,acquire,searcher,source,source,ex,finally,releasables,close,releasable
Engine -> public Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException;1536828374;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire_@param scope the scope of this searcher ie. if the searcher will be used for get or search purposes__@see Searcher#close();public Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException {_        _        if (store.tryIncRef() == false) {_            throw new AlreadyClosedException(shardId + " store is closed", failedEngine.get())__        }_        Releasable releasable = store::decRef__        try {_            EngineSearcher engineSearcher = new EngineSearcher(source, getReferenceManager(scope), store, logger)__            releasable = null_ _            return engineSearcher__        } catch (AlreadyClosedException ex) {_            throw ex__        } catch (Exception ex) {_            maybeFailEngine("acquire_searcher", ex)__            ensureOpen(ex)_ _            logger.error(() -> new ParameterizedMessage("failed to acquire searcher, source {}", source), ex)__            throw new EngineException(shardId, "failed to acquire searcher, source " + source, ex)__        } finally {_            Releasables.close(releasable)__        }_    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,param,scope,the,scope,of,this,searcher,ie,if,the,searcher,will,be,used,for,get,or,search,purposes,see,searcher,close;public,searcher,acquire,searcher,string,source,searcher,scope,scope,throws,engine,exception,if,store,try,inc,ref,false,throw,new,already,closed,exception,shard,id,store,is,closed,failed,engine,get,releasable,releasable,store,dec,ref,try,engine,searcher,engine,searcher,new,engine,searcher,source,get,reference,manager,scope,store,logger,releasable,null,return,engine,searcher,catch,already,closed,exception,ex,throw,ex,catch,exception,ex,maybe,fail,engine,ex,ensure,open,ex,logger,error,new,parameterized,message,failed,to,acquire,searcher,source,source,ex,throw,new,engine,exception,shard,id,failed,to,acquire,searcher,source,source,ex,finally,releasables,close,releasable
Engine -> public Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException;1537371806;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire_@param scope the scope of this searcher ie. if the searcher will be used for get or search purposes__@see Searcher#close();public Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException {_        _        if (store.tryIncRef() == false) {_            throw new AlreadyClosedException(shardId + " store is closed", failedEngine.get())__        }_        Releasable releasable = store::decRef__        try {_            EngineSearcher engineSearcher = new EngineSearcher(source, getReferenceManager(scope), store, logger)__            releasable = null_ _            return engineSearcher__        } catch (AlreadyClosedException ex) {_            throw ex__        } catch (Exception ex) {_            maybeFailEngine("acquire_searcher", ex)__            ensureOpen(ex)_ _            logger.error(() -> new ParameterizedMessage("failed to acquire searcher, source {}", source), ex)__            throw new EngineException(shardId, "failed to acquire searcher, source " + source, ex)__        } finally {_            Releasables.close(releasable)__        }_    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,param,scope,the,scope,of,this,searcher,ie,if,the,searcher,will,be,used,for,get,or,search,purposes,see,searcher,close;public,searcher,acquire,searcher,string,source,searcher,scope,scope,throws,engine,exception,if,store,try,inc,ref,false,throw,new,already,closed,exception,shard,id,store,is,closed,failed,engine,get,releasable,releasable,store,dec,ref,try,engine,searcher,engine,searcher,new,engine,searcher,source,get,reference,manager,scope,store,logger,releasable,null,return,engine,searcher,catch,already,closed,exception,ex,throw,ex,catch,exception,ex,maybe,fail,engine,ex,ensure,open,ex,logger,error,new,parameterized,message,failed,to,acquire,searcher,source,source,ex,throw,new,engine,exception,shard,id,failed,to,acquire,searcher,source,source,ex,finally,releasables,close,releasable
Engine -> public Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException;1537806831;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire_@param scope the scope of this searcher ie. if the searcher will be used for get or search purposes__@see Searcher#close();public Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException {_        _        if (store.tryIncRef() == false) {_            throw new AlreadyClosedException(shardId + " store is closed", failedEngine.get())__        }_        Releasable releasable = store::decRef__        try {_            EngineSearcher engineSearcher = new EngineSearcher(source, getReferenceManager(scope), store, logger)__            releasable = null_ _            return engineSearcher__        } catch (AlreadyClosedException ex) {_            throw ex__        } catch (Exception ex) {_            maybeFailEngine("acquire_searcher", ex)__            ensureOpen(ex)_ _            logger.error(() -> new ParameterizedMessage("failed to acquire searcher, source {}", source), ex)__            throw new EngineException(shardId, "failed to acquire searcher, source " + source, ex)__        } finally {_            Releasables.close(releasable)__        }_    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,param,scope,the,scope,of,this,searcher,ie,if,the,searcher,will,be,used,for,get,or,search,purposes,see,searcher,close;public,searcher,acquire,searcher,string,source,searcher,scope,scope,throws,engine,exception,if,store,try,inc,ref,false,throw,new,already,closed,exception,shard,id,store,is,closed,failed,engine,get,releasable,releasable,store,dec,ref,try,engine,searcher,engine,searcher,new,engine,searcher,source,get,reference,manager,scope,store,logger,releasable,null,return,engine,searcher,catch,already,closed,exception,ex,throw,ex,catch,exception,ex,maybe,fail,engine,ex,ensure,open,ex,logger,error,new,parameterized,message,failed,to,acquire,searcher,source,source,ex,throw,new,engine,exception,shard,id,failed,to,acquire,searcher,source,source,ex,finally,releasables,close,releasable
Engine -> public Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException;1538067637;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire_@param scope the scope of this searcher ie. if the searcher will be used for get or search purposes__@see Searcher#close();public Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException {_        _        if (store.tryIncRef() == false) {_            throw new AlreadyClosedException(shardId + " store is closed", failedEngine.get())__        }_        Releasable releasable = store::decRef__        try {_            ReferenceManager<IndexSearcher> referenceManager = getReferenceManager(scope)__            Searcher engineSearcher = new Searcher(source, referenceManager.acquire(),_                s -> {_                  try {_                      referenceManager.release(s)__                  } finally {_                      store.decRef()__                  }_              }, logger)__            releasable = null_ _            return engineSearcher__        } catch (AlreadyClosedException ex) {_            throw ex__        } catch (Exception ex) {_            maybeFailEngine("acquire_searcher", ex)__            ensureOpen(ex)_ _            logger.error(() -> new ParameterizedMessage("failed to acquire searcher, source {}", source), ex)__            throw new EngineException(shardId, "failed to acquire searcher, source " + source, ex)__        } finally {_            Releasables.close(releasable)__        }_    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,param,scope,the,scope,of,this,searcher,ie,if,the,searcher,will,be,used,for,get,or,search,purposes,see,searcher,close;public,searcher,acquire,searcher,string,source,searcher,scope,scope,throws,engine,exception,if,store,try,inc,ref,false,throw,new,already,closed,exception,shard,id,store,is,closed,failed,engine,get,releasable,releasable,store,dec,ref,try,reference,manager,index,searcher,reference,manager,get,reference,manager,scope,searcher,engine,searcher,new,searcher,source,reference,manager,acquire,s,try,reference,manager,release,s,finally,store,dec,ref,logger,releasable,null,return,engine,searcher,catch,already,closed,exception,ex,throw,ex,catch,exception,ex,maybe,fail,engine,ex,ensure,open,ex,logger,error,new,parameterized,message,failed,to,acquire,searcher,source,source,ex,throw,new,engine,exception,shard,id,failed,to,acquire,searcher,source,source,ex,finally,releasables,close,releasable
Engine -> public Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException;1538424609;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire_@param scope the scope of this searcher ie. if the searcher will be used for get or search purposes__@see Searcher#close();public Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException {_        _        if (store.tryIncRef() == false) {_            throw new AlreadyClosedException(shardId + " store is closed", failedEngine.get())__        }_        Releasable releasable = store::decRef__        try {_            ReferenceManager<IndexSearcher> referenceManager = getReferenceManager(scope)__            Searcher engineSearcher = new Searcher(source, referenceManager.acquire(),_                s -> {_                  try {_                      referenceManager.release(s)__                  } finally {_                      store.decRef()__                  }_              }, logger)__            releasable = null_ _            return engineSearcher__        } catch (AlreadyClosedException ex) {_            throw ex__        } catch (Exception ex) {_            maybeFailEngine("acquire_searcher", ex)__            ensureOpen(ex)_ _            logger.error(() -> new ParameterizedMessage("failed to acquire searcher, source {}", source), ex)__            throw new EngineException(shardId, "failed to acquire searcher, source " + source, ex)__        } finally {_            Releasables.close(releasable)__        }_    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,param,scope,the,scope,of,this,searcher,ie,if,the,searcher,will,be,used,for,get,or,search,purposes,see,searcher,close;public,searcher,acquire,searcher,string,source,searcher,scope,scope,throws,engine,exception,if,store,try,inc,ref,false,throw,new,already,closed,exception,shard,id,store,is,closed,failed,engine,get,releasable,releasable,store,dec,ref,try,reference,manager,index,searcher,reference,manager,get,reference,manager,scope,searcher,engine,searcher,new,searcher,source,reference,manager,acquire,s,try,reference,manager,release,s,finally,store,dec,ref,logger,releasable,null,return,engine,searcher,catch,already,closed,exception,ex,throw,ex,catch,exception,ex,maybe,fail,engine,ex,ensure,open,ex,logger,error,new,parameterized,message,failed,to,acquire,searcher,source,source,ex,throw,new,engine,exception,shard,id,failed,to,acquire,searcher,source,source,ex,finally,releasables,close,releasable
Engine -> public Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException;1539723533;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire_@param scope the scope of this searcher ie. if the searcher will be used for get or search purposes__@see Searcher#close();public Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException {_        _        if (store.tryIncRef() == false) {_            throw new AlreadyClosedException(shardId + " store is closed", failedEngine.get())__        }_        Releasable releasable = store::decRef__        try {_            ReferenceManager<IndexSearcher> referenceManager = getReferenceManager(scope)__            IndexSearcher acquire = referenceManager.acquire()__            AtomicBoolean released = new AtomicBoolean(false)__            Searcher engineSearcher = new Searcher(source, acquire,_                () -> {_                if (released.compareAndSet(false, true)) {_                    try {_                        referenceManager.release(acquire)__                    } finally {_                        store.decRef()__                    }_                } else {_                    _                    logger.warn("Searcher was released twice", new IllegalStateException("Double release"))__                }_              })__            releasable = null_ _            return engineSearcher__        } catch (AlreadyClosedException ex) {_            throw ex__        } catch (Exception ex) {_            maybeFailEngine("acquire_searcher", ex)__            ensureOpen(ex)_ _            logger.error(() -> new ParameterizedMessage("failed to acquire searcher, source {}", source), ex)__            throw new EngineException(shardId, "failed to acquire searcher, source " + source, ex)__        } finally {_            Releasables.close(releasable)__        }_    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,param,scope,the,scope,of,this,searcher,ie,if,the,searcher,will,be,used,for,get,or,search,purposes,see,searcher,close;public,searcher,acquire,searcher,string,source,searcher,scope,scope,throws,engine,exception,if,store,try,inc,ref,false,throw,new,already,closed,exception,shard,id,store,is,closed,failed,engine,get,releasable,releasable,store,dec,ref,try,reference,manager,index,searcher,reference,manager,get,reference,manager,scope,index,searcher,acquire,reference,manager,acquire,atomic,boolean,released,new,atomic,boolean,false,searcher,engine,searcher,new,searcher,source,acquire,if,released,compare,and,set,false,true,try,reference,manager,release,acquire,finally,store,dec,ref,else,logger,warn,searcher,was,released,twice,new,illegal,state,exception,double,release,releasable,null,return,engine,searcher,catch,already,closed,exception,ex,throw,ex,catch,exception,ex,maybe,fail,engine,ex,ensure,open,ex,logger,error,new,parameterized,message,failed,to,acquire,searcher,source,source,ex,throw,new,engine,exception,shard,id,failed,to,acquire,searcher,source,source,ex,finally,releasables,close,releasable
Engine -> public Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException;1541618615;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire_@param scope the scope of this searcher ie. if the searcher will be used for get or search purposes__@see Searcher#close();public Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException {_        _        if (store.tryIncRef() == false) {_            throw new AlreadyClosedException(shardId + " store is closed", failedEngine.get())__        }_        Releasable releasable = store::decRef__        try {_            ReferenceManager<IndexSearcher> referenceManager = getReferenceManager(scope)__            IndexSearcher acquire = referenceManager.acquire()__            AtomicBoolean released = new AtomicBoolean(false)__            Searcher engineSearcher = new Searcher(source, acquire,_                () -> {_                if (released.compareAndSet(false, true)) {_                    try {_                        referenceManager.release(acquire)__                    } finally {_                        store.decRef()__                    }_                } else {_                    _                    logger.warn("Searcher was released twice", new IllegalStateException("Double release"))__                }_              })__            releasable = null_ _            return engineSearcher__        } catch (AlreadyClosedException ex) {_            throw ex__        } catch (Exception ex) {_            maybeFailEngine("acquire_searcher", ex)__            ensureOpen(ex)_ _            logger.error(() -> new ParameterizedMessage("failed to acquire searcher, source {}", source), ex)__            throw new EngineException(shardId, "failed to acquire searcher, source " + source, ex)__        } finally {_            Releasables.close(releasable)__        }_    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,param,scope,the,scope,of,this,searcher,ie,if,the,searcher,will,be,used,for,get,or,search,purposes,see,searcher,close;public,searcher,acquire,searcher,string,source,searcher,scope,scope,throws,engine,exception,if,store,try,inc,ref,false,throw,new,already,closed,exception,shard,id,store,is,closed,failed,engine,get,releasable,releasable,store,dec,ref,try,reference,manager,index,searcher,reference,manager,get,reference,manager,scope,index,searcher,acquire,reference,manager,acquire,atomic,boolean,released,new,atomic,boolean,false,searcher,engine,searcher,new,searcher,source,acquire,if,released,compare,and,set,false,true,try,reference,manager,release,acquire,finally,store,dec,ref,else,logger,warn,searcher,was,released,twice,new,illegal,state,exception,double,release,releasable,null,return,engine,searcher,catch,already,closed,exception,ex,throw,ex,catch,exception,ex,maybe,fail,engine,ex,ensure,open,ex,logger,error,new,parameterized,message,failed,to,acquire,searcher,source,source,ex,throw,new,engine,exception,shard,id,failed,to,acquire,searcher,source,source,ex,finally,releasables,close,releasable
Engine -> public Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException;1542697754;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire_@param scope the scope of this searcher ie. if the searcher will be used for get or search purposes__@see Searcher#close();public Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException {_        _        if (store.tryIncRef() == false) {_            throw new AlreadyClosedException(shardId + " store is closed", failedEngine.get())__        }_        Releasable releasable = store::decRef__        try {_            ReferenceManager<IndexSearcher> referenceManager = getReferenceManager(scope)__            IndexSearcher acquire = referenceManager.acquire()__            AtomicBoolean released = new AtomicBoolean(false)__            Searcher engineSearcher = new Searcher(source, acquire,_                () -> {_                if (released.compareAndSet(false, true)) {_                    try {_                        referenceManager.release(acquire)__                    } finally {_                        store.decRef()__                    }_                } else {_                    _                    logger.warn("Searcher was released twice", new IllegalStateException("Double release"))__                }_              })__            releasable = null_ _            return engineSearcher__        } catch (AlreadyClosedException ex) {_            throw ex__        } catch (Exception ex) {_            maybeFailEngine("acquire_searcher", ex)__            ensureOpen(ex)_ _            logger.error(() -> new ParameterizedMessage("failed to acquire searcher, source {}", source), ex)__            throw new EngineException(shardId, "failed to acquire searcher, source " + source, ex)__        } finally {_            Releasables.close(releasable)__        }_    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,param,scope,the,scope,of,this,searcher,ie,if,the,searcher,will,be,used,for,get,or,search,purposes,see,searcher,close;public,searcher,acquire,searcher,string,source,searcher,scope,scope,throws,engine,exception,if,store,try,inc,ref,false,throw,new,already,closed,exception,shard,id,store,is,closed,failed,engine,get,releasable,releasable,store,dec,ref,try,reference,manager,index,searcher,reference,manager,get,reference,manager,scope,index,searcher,acquire,reference,manager,acquire,atomic,boolean,released,new,atomic,boolean,false,searcher,engine,searcher,new,searcher,source,acquire,if,released,compare,and,set,false,true,try,reference,manager,release,acquire,finally,store,dec,ref,else,logger,warn,searcher,was,released,twice,new,illegal,state,exception,double,release,releasable,null,return,engine,searcher,catch,already,closed,exception,ex,throw,ex,catch,exception,ex,maybe,fail,engine,ex,ensure,open,ex,logger,error,new,parameterized,message,failed,to,acquire,searcher,source,source,ex,throw,new,engine,exception,shard,id,failed,to,acquire,searcher,source,source,ex,finally,releasables,close,releasable
Engine -> public Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException;1543047942;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire_@param scope the scope of this searcher ie. if the searcher will be used for get or search purposes__@see Searcher#close();public Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException {_        _        if (store.tryIncRef() == false) {_            throw new AlreadyClosedException(shardId + " store is closed", failedEngine.get())__        }_        Releasable releasable = store::decRef__        try {_            ReferenceManager<IndexSearcher> referenceManager = getReferenceManager(scope)__            IndexSearcher acquire = referenceManager.acquire()__            AtomicBoolean released = new AtomicBoolean(false)__            Searcher engineSearcher = new Searcher(source, acquire,_                () -> {_                if (released.compareAndSet(false, true)) {_                    try {_                        referenceManager.release(acquire)__                    } finally {_                        store.decRef()__                    }_                } else {_                    _                    logger.warn("Searcher was released twice", new IllegalStateException("Double release"))__                }_              })__            releasable = null_ _            return engineSearcher__        } catch (AlreadyClosedException ex) {_            throw ex__        } catch (Exception ex) {_            maybeFailEngine("acquire_searcher", ex)__            ensureOpen(ex)_ _            logger.error(() -> new ParameterizedMessage("failed to acquire searcher, source {}", source), ex)__            throw new EngineException(shardId, "failed to acquire searcher, source " + source, ex)__        } finally {_            Releasables.close(releasable)__        }_    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,param,scope,the,scope,of,this,searcher,ie,if,the,searcher,will,be,used,for,get,or,search,purposes,see,searcher,close;public,searcher,acquire,searcher,string,source,searcher,scope,scope,throws,engine,exception,if,store,try,inc,ref,false,throw,new,already,closed,exception,shard,id,store,is,closed,failed,engine,get,releasable,releasable,store,dec,ref,try,reference,manager,index,searcher,reference,manager,get,reference,manager,scope,index,searcher,acquire,reference,manager,acquire,atomic,boolean,released,new,atomic,boolean,false,searcher,engine,searcher,new,searcher,source,acquire,if,released,compare,and,set,false,true,try,reference,manager,release,acquire,finally,store,dec,ref,else,logger,warn,searcher,was,released,twice,new,illegal,state,exception,double,release,releasable,null,return,engine,searcher,catch,already,closed,exception,ex,throw,ex,catch,exception,ex,maybe,fail,engine,ex,ensure,open,ex,logger,error,new,parameterized,message,failed,to,acquire,searcher,source,source,ex,throw,new,engine,exception,shard,id,failed,to,acquire,searcher,source,source,ex,finally,releasables,close,releasable
Engine -> public Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException;1544545090;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire_@param scope the scope of this searcher ie. if the searcher will be used for get or search purposes__@see Searcher#close();public Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException {_        _        if (store.tryIncRef() == false) {_            throw new AlreadyClosedException(shardId + " store is closed", failedEngine.get())__        }_        Releasable releasable = store::decRef__        try {_            ReferenceManager<IndexSearcher> referenceManager = getReferenceManager(scope)__            IndexSearcher acquire = referenceManager.acquire()__            AtomicBoolean released = new AtomicBoolean(false)__            Searcher engineSearcher = new Searcher(source, acquire,_                () -> {_                if (released.compareAndSet(false, true)) {_                    try {_                        referenceManager.release(acquire)__                    } finally {_                        store.decRef()__                    }_                } else {_                    _                    logger.warn("Searcher was released twice", new IllegalStateException("Double release"))__                }_              })__            releasable = null_ _            return engineSearcher__        } catch (AlreadyClosedException ex) {_            throw ex__        } catch (Exception ex) {_            maybeFailEngine("acquire_searcher", ex)__            ensureOpen(ex)_ _            logger.error(() -> new ParameterizedMessage("failed to acquire searcher, source {}", source), ex)__            throw new EngineException(shardId, "failed to acquire searcher, source " + source, ex)__        } finally {_            Releasables.close(releasable)__        }_    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,param,scope,the,scope,of,this,searcher,ie,if,the,searcher,will,be,used,for,get,or,search,purposes,see,searcher,close;public,searcher,acquire,searcher,string,source,searcher,scope,scope,throws,engine,exception,if,store,try,inc,ref,false,throw,new,already,closed,exception,shard,id,store,is,closed,failed,engine,get,releasable,releasable,store,dec,ref,try,reference,manager,index,searcher,reference,manager,get,reference,manager,scope,index,searcher,acquire,reference,manager,acquire,atomic,boolean,released,new,atomic,boolean,false,searcher,engine,searcher,new,searcher,source,acquire,if,released,compare,and,set,false,true,try,reference,manager,release,acquire,finally,store,dec,ref,else,logger,warn,searcher,was,released,twice,new,illegal,state,exception,double,release,releasable,null,return,engine,searcher,catch,already,closed,exception,ex,throw,ex,catch,exception,ex,maybe,fail,engine,ex,ensure,open,ex,logger,error,new,parameterized,message,failed,to,acquire,searcher,source,source,ex,throw,new,engine,exception,shard,id,failed,to,acquire,searcher,source,source,ex,finally,releasables,close,releasable
Engine -> public Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException;1544684920;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire_@param scope the scope of this searcher ie. if the searcher will be used for get or search purposes__@see Searcher#close();public Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException {_        _        if (store.tryIncRef() == false) {_            throw new AlreadyClosedException(shardId + " store is closed", failedEngine.get())__        }_        Releasable releasable = store::decRef__        try {_            ReferenceManager<IndexSearcher> referenceManager = getReferenceManager(scope)__            IndexSearcher acquire = referenceManager.acquire()__            AtomicBoolean released = new AtomicBoolean(false)__            Searcher engineSearcher = new Searcher(source, acquire,_                () -> {_                if (released.compareAndSet(false, true)) {_                    try {_                        referenceManager.release(acquire)__                    } finally {_                        store.decRef()__                    }_                } else {_                    _                    logger.warn("Searcher was released twice", new IllegalStateException("Double release"))__                }_              })__            releasable = null_ _            return engineSearcher__        } catch (AlreadyClosedException ex) {_            throw ex__        } catch (Exception ex) {_            maybeFailEngine("acquire_searcher", ex)__            ensureOpen(ex)_ _            logger.error(() -> new ParameterizedMessage("failed to acquire searcher, source {}", source), ex)__            throw new EngineException(shardId, "failed to acquire searcher, source " + source, ex)__        } finally {_            Releasables.close(releasable)__        }_    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,param,scope,the,scope,of,this,searcher,ie,if,the,searcher,will,be,used,for,get,or,search,purposes,see,searcher,close;public,searcher,acquire,searcher,string,source,searcher,scope,scope,throws,engine,exception,if,store,try,inc,ref,false,throw,new,already,closed,exception,shard,id,store,is,closed,failed,engine,get,releasable,releasable,store,dec,ref,try,reference,manager,index,searcher,reference,manager,get,reference,manager,scope,index,searcher,acquire,reference,manager,acquire,atomic,boolean,released,new,atomic,boolean,false,searcher,engine,searcher,new,searcher,source,acquire,if,released,compare,and,set,false,true,try,reference,manager,release,acquire,finally,store,dec,ref,else,logger,warn,searcher,was,released,twice,new,illegal,state,exception,double,release,releasable,null,return,engine,searcher,catch,already,closed,exception,ex,throw,ex,catch,exception,ex,maybe,fail,engine,ex,ensure,open,ex,logger,error,new,parameterized,message,failed,to,acquire,searcher,source,source,ex,throw,new,engine,exception,shard,id,failed,to,acquire,searcher,source,source,ex,finally,releasables,close,releasable
Engine -> public Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException;1545140118;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire_@param scope the scope of this searcher ie. if the searcher will be used for get or search purposes__@see Searcher#close();public Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException {_        _        if (store.tryIncRef() == false) {_            throw new AlreadyClosedException(shardId + " store is closed", failedEngine.get())__        }_        Releasable releasable = store::decRef__        try {_            ReferenceManager<IndexSearcher> referenceManager = getReferenceManager(scope)__            IndexSearcher acquire = referenceManager.acquire()__            AtomicBoolean released = new AtomicBoolean(false)__            Searcher engineSearcher = new Searcher(source, acquire,_                () -> {_                if (released.compareAndSet(false, true)) {_                    try {_                        referenceManager.release(acquire)__                    } finally {_                        store.decRef()__                    }_                } else {_                    _                    logger.warn("Searcher was released twice", new IllegalStateException("Double release"))__                }_              })__            releasable = null_ _            return engineSearcher__        } catch (AlreadyClosedException ex) {_            throw ex__        } catch (Exception ex) {_            maybeFailEngine("acquire_searcher", ex)__            ensureOpen(ex)_ _            logger.error(() -> new ParameterizedMessage("failed to acquire searcher, source {}", source), ex)__            throw new EngineException(shardId, "failed to acquire searcher, source " + source, ex)__        } finally {_            Releasables.close(releasable)__        }_    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,param,scope,the,scope,of,this,searcher,ie,if,the,searcher,will,be,used,for,get,or,search,purposes,see,searcher,close;public,searcher,acquire,searcher,string,source,searcher,scope,scope,throws,engine,exception,if,store,try,inc,ref,false,throw,new,already,closed,exception,shard,id,store,is,closed,failed,engine,get,releasable,releasable,store,dec,ref,try,reference,manager,index,searcher,reference,manager,get,reference,manager,scope,index,searcher,acquire,reference,manager,acquire,atomic,boolean,released,new,atomic,boolean,false,searcher,engine,searcher,new,searcher,source,acquire,if,released,compare,and,set,false,true,try,reference,manager,release,acquire,finally,store,dec,ref,else,logger,warn,searcher,was,released,twice,new,illegal,state,exception,double,release,releasable,null,return,engine,searcher,catch,already,closed,exception,ex,throw,ex,catch,exception,ex,maybe,fail,engine,ex,ensure,open,ex,logger,error,new,parameterized,message,failed,to,acquire,searcher,source,source,ex,throw,new,engine,exception,shard,id,failed,to,acquire,searcher,source,source,ex,finally,releasables,close,releasable
Engine -> public Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException;1545221705;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire_@param scope the scope of this searcher ie. if the searcher will be used for get or search purposes__@see Searcher#close();public Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException {_        _        if (store.tryIncRef() == false) {_            throw new AlreadyClosedException(shardId + " store is closed", failedEngine.get())__        }_        Releasable releasable = store::decRef__        try {_            ReferenceManager<IndexSearcher> referenceManager = getReferenceManager(scope)__            IndexSearcher acquire = referenceManager.acquire()__            AtomicBoolean released = new AtomicBoolean(false)__            Searcher engineSearcher = new Searcher(source, acquire,_                () -> {_                if (released.compareAndSet(false, true)) {_                    try {_                        referenceManager.release(acquire)__                    } finally {_                        store.decRef()__                    }_                } else {_                    _                    logger.warn("Searcher was released twice", new IllegalStateException("Double release"))__                }_              })__            releasable = null_ _            return engineSearcher__        } catch (AlreadyClosedException ex) {_            throw ex__        } catch (Exception ex) {_            maybeFailEngine("acquire_searcher", ex)__            ensureOpen(ex)_ _            logger.error(() -> new ParameterizedMessage("failed to acquire searcher, source {}", source), ex)__            throw new EngineException(shardId, "failed to acquire searcher, source " + source, ex)__        } finally {_            Releasables.close(releasable)__        }_    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,param,scope,the,scope,of,this,searcher,ie,if,the,searcher,will,be,used,for,get,or,search,purposes,see,searcher,close;public,searcher,acquire,searcher,string,source,searcher,scope,scope,throws,engine,exception,if,store,try,inc,ref,false,throw,new,already,closed,exception,shard,id,store,is,closed,failed,engine,get,releasable,releasable,store,dec,ref,try,reference,manager,index,searcher,reference,manager,get,reference,manager,scope,index,searcher,acquire,reference,manager,acquire,atomic,boolean,released,new,atomic,boolean,false,searcher,engine,searcher,new,searcher,source,acquire,if,released,compare,and,set,false,true,try,reference,manager,release,acquire,finally,store,dec,ref,else,logger,warn,searcher,was,released,twice,new,illegal,state,exception,double,release,releasable,null,return,engine,searcher,catch,already,closed,exception,ex,throw,ex,catch,exception,ex,maybe,fail,engine,ex,ensure,open,ex,logger,error,new,parameterized,message,failed,to,acquire,searcher,source,source,ex,throw,new,engine,exception,shard,id,failed,to,acquire,searcher,source,source,ex,finally,releasables,close,releasable
Engine -> public Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException;1547332999;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire_@param scope the scope of this searcher ie. if the searcher will be used for get or search purposes__@see Searcher#close();public Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException {_        _        if (store.tryIncRef() == false) {_            throw new AlreadyClosedException(shardId + " store is closed", failedEngine.get())__        }_        Releasable releasable = store::decRef__        try {_            ReferenceManager<IndexSearcher> referenceManager = getReferenceManager(scope)__            IndexSearcher acquire = referenceManager.acquire()__            AtomicBoolean released = new AtomicBoolean(false)__            Searcher engineSearcher = new Searcher(source, acquire,_                () -> {_                if (released.compareAndSet(false, true)) {_                    try {_                        referenceManager.release(acquire)__                    } finally {_                        store.decRef()__                    }_                } else {_                    _                    logger.warn("Searcher was released twice", new IllegalStateException("Double release"))__                }_              })__            releasable = null_ _            return engineSearcher__        } catch (AlreadyClosedException ex) {_            throw ex__        } catch (Exception ex) {_            maybeFailEngine("acquire_searcher", ex)__            ensureOpen(ex)_ _            logger.error(() -> new ParameterizedMessage("failed to acquire searcher, source {}", source), ex)__            throw new EngineException(shardId, "failed to acquire searcher, source " + source, ex)__        } finally {_            Releasables.close(releasable)__        }_    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,param,scope,the,scope,of,this,searcher,ie,if,the,searcher,will,be,used,for,get,or,search,purposes,see,searcher,close;public,searcher,acquire,searcher,string,source,searcher,scope,scope,throws,engine,exception,if,store,try,inc,ref,false,throw,new,already,closed,exception,shard,id,store,is,closed,failed,engine,get,releasable,releasable,store,dec,ref,try,reference,manager,index,searcher,reference,manager,get,reference,manager,scope,index,searcher,acquire,reference,manager,acquire,atomic,boolean,released,new,atomic,boolean,false,searcher,engine,searcher,new,searcher,source,acquire,if,released,compare,and,set,false,true,try,reference,manager,release,acquire,finally,store,dec,ref,else,logger,warn,searcher,was,released,twice,new,illegal,state,exception,double,release,releasable,null,return,engine,searcher,catch,already,closed,exception,ex,throw,ex,catch,exception,ex,maybe,fail,engine,ex,ensure,open,ex,logger,error,new,parameterized,message,failed,to,acquire,searcher,source,source,ex,throw,new,engine,exception,shard,id,failed,to,acquire,searcher,source,source,ex,finally,releasables,close,releasable
Engine -> public Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException;1548771485;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire_@param scope the scope of this searcher ie. if the searcher will be used for get or search purposes__@see Searcher#close();public Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException {_        _        if (store.tryIncRef() == false) {_            throw new AlreadyClosedException(shardId + " store is closed", failedEngine.get())__        }_        Releasable releasable = store::decRef__        try {_            ReferenceManager<IndexSearcher> referenceManager = getReferenceManager(scope)__            IndexSearcher acquire = referenceManager.acquire()__            AtomicBoolean released = new AtomicBoolean(false)__            Searcher engineSearcher = new Searcher(source, acquire,_                () -> {_                if (released.compareAndSet(false, true)) {_                    try {_                        referenceManager.release(acquire)__                    } finally {_                        store.decRef()__                    }_                } else {_                    _                    logger.warn("Searcher was released twice", new IllegalStateException("Double release"))__                }_              })__            releasable = null_ _            return engineSearcher__        } catch (AlreadyClosedException ex) {_            throw ex__        } catch (Exception ex) {_            maybeFailEngine("acquire_searcher", ex)__            ensureOpen(ex)_ _            logger.error(() -> new ParameterizedMessage("failed to acquire searcher, source {}", source), ex)__            throw new EngineException(shardId, "failed to acquire searcher, source " + source, ex)__        } finally {_            Releasables.close(releasable)__        }_    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,param,scope,the,scope,of,this,searcher,ie,if,the,searcher,will,be,used,for,get,or,search,purposes,see,searcher,close;public,searcher,acquire,searcher,string,source,searcher,scope,scope,throws,engine,exception,if,store,try,inc,ref,false,throw,new,already,closed,exception,shard,id,store,is,closed,failed,engine,get,releasable,releasable,store,dec,ref,try,reference,manager,index,searcher,reference,manager,get,reference,manager,scope,index,searcher,acquire,reference,manager,acquire,atomic,boolean,released,new,atomic,boolean,false,searcher,engine,searcher,new,searcher,source,acquire,if,released,compare,and,set,false,true,try,reference,manager,release,acquire,finally,store,dec,ref,else,logger,warn,searcher,was,released,twice,new,illegal,state,exception,double,release,releasable,null,return,engine,searcher,catch,already,closed,exception,ex,throw,ex,catch,exception,ex,maybe,fail,engine,ex,ensure,open,ex,logger,error,new,parameterized,message,failed,to,acquire,searcher,source,source,ex,throw,new,engine,exception,shard,id,failed,to,acquire,searcher,source,source,ex,finally,releasables,close,releasable
Engine -> public Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException;1549891630;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire_@param scope the scope of this searcher ie. if the searcher will be used for get or search purposes__@see Searcher#close();public Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException {_        _        if (store.tryIncRef() == false) {_            throw new AlreadyClosedException(shardId + " store is closed", failedEngine.get())__        }_        Releasable releasable = store::decRef__        try {_            ReferenceManager<IndexSearcher> referenceManager = getReferenceManager(scope)__            IndexSearcher acquire = referenceManager.acquire()__            AtomicBoolean released = new AtomicBoolean(false)__            Searcher engineSearcher = new Searcher(source, acquire,_                () -> {_                if (released.compareAndSet(false, true)) {_                    try {_                        referenceManager.release(acquire)__                    } finally {_                        store.decRef()__                    }_                } else {_                    _                    logger.warn("Searcher was released twice", new IllegalStateException("Double release"))__                }_              })__            releasable = null_ _            return engineSearcher__        } catch (AlreadyClosedException ex) {_            throw ex__        } catch (Exception ex) {_            maybeFailEngine("acquire_searcher", ex)__            ensureOpen(ex)_ _            logger.error(() -> new ParameterizedMessage("failed to acquire searcher, source {}", source), ex)__            throw new EngineException(shardId, "failed to acquire searcher, source " + source, ex)__        } finally {_            Releasables.close(releasable)__        }_    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,param,scope,the,scope,of,this,searcher,ie,if,the,searcher,will,be,used,for,get,or,search,purposes,see,searcher,close;public,searcher,acquire,searcher,string,source,searcher,scope,scope,throws,engine,exception,if,store,try,inc,ref,false,throw,new,already,closed,exception,shard,id,store,is,closed,failed,engine,get,releasable,releasable,store,dec,ref,try,reference,manager,index,searcher,reference,manager,get,reference,manager,scope,index,searcher,acquire,reference,manager,acquire,atomic,boolean,released,new,atomic,boolean,false,searcher,engine,searcher,new,searcher,source,acquire,if,released,compare,and,set,false,true,try,reference,manager,release,acquire,finally,store,dec,ref,else,logger,warn,searcher,was,released,twice,new,illegal,state,exception,double,release,releasable,null,return,engine,searcher,catch,already,closed,exception,ex,throw,ex,catch,exception,ex,maybe,fail,engine,ex,ensure,open,ex,logger,error,new,parameterized,message,failed,to,acquire,searcher,source,source,ex,throw,new,engine,exception,shard,id,failed,to,acquire,searcher,source,source,ex,finally,releasables,close,releasable
Engine -> public Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException;1549975032;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire_@param scope the scope of this searcher ie. if the searcher will be used for get or search purposes__@see Searcher#close();public Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException {_        _        if (store.tryIncRef() == false) {_            throw new AlreadyClosedException(shardId + " store is closed", failedEngine.get())__        }_        Releasable releasable = store::decRef__        try {_            ReferenceManager<IndexSearcher> referenceManager = getReferenceManager(scope)__            IndexSearcher acquire = referenceManager.acquire()__            AtomicBoolean released = new AtomicBoolean(false)__            Searcher engineSearcher = new Searcher(source, acquire,_                () -> {_                if (released.compareAndSet(false, true)) {_                    try {_                        referenceManager.release(acquire)__                    } finally {_                        store.decRef()__                    }_                } else {_                    _                    logger.warn("Searcher was released twice", new IllegalStateException("Double release"))__                }_              })__            releasable = null_ _            return engineSearcher__        } catch (AlreadyClosedException ex) {_            throw ex__        } catch (Exception ex) {_            maybeFailEngine("acquire_searcher", ex)__            ensureOpen(ex)_ _            logger.error(() -> new ParameterizedMessage("failed to acquire searcher, source {}", source), ex)__            throw new EngineException(shardId, "failed to acquire searcher, source " + source, ex)__        } finally {_            Releasables.close(releasable)__        }_    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,param,scope,the,scope,of,this,searcher,ie,if,the,searcher,will,be,used,for,get,or,search,purposes,see,searcher,close;public,searcher,acquire,searcher,string,source,searcher,scope,scope,throws,engine,exception,if,store,try,inc,ref,false,throw,new,already,closed,exception,shard,id,store,is,closed,failed,engine,get,releasable,releasable,store,dec,ref,try,reference,manager,index,searcher,reference,manager,get,reference,manager,scope,index,searcher,acquire,reference,manager,acquire,atomic,boolean,released,new,atomic,boolean,false,searcher,engine,searcher,new,searcher,source,acquire,if,released,compare,and,set,false,true,try,reference,manager,release,acquire,finally,store,dec,ref,else,logger,warn,searcher,was,released,twice,new,illegal,state,exception,double,release,releasable,null,return,engine,searcher,catch,already,closed,exception,ex,throw,ex,catch,exception,ex,maybe,fail,engine,ex,ensure,open,ex,logger,error,new,parameterized,message,failed,to,acquire,searcher,source,source,ex,throw,new,engine,exception,shard,id,failed,to,acquire,searcher,source,source,ex,finally,releasables,close,releasable
Engine -> public Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException;1550220204;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire_@param scope the scope of this searcher ie. if the searcher will be used for get or search purposes__@see Searcher#close();public Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException {_        _        if (store.tryIncRef() == false) {_            throw new AlreadyClosedException(shardId + " store is closed", failedEngine.get())__        }_        Releasable releasable = store::decRef__        try {_            ReferenceManager<IndexSearcher> referenceManager = getReferenceManager(scope)__            IndexSearcher acquire = referenceManager.acquire()__            AtomicBoolean released = new AtomicBoolean(false)__            Searcher engineSearcher = new Searcher(source, acquire,_                () -> {_                if (released.compareAndSet(false, true)) {_                    try {_                        referenceManager.release(acquire)__                    } finally {_                        store.decRef()__                    }_                } else {_                    _                    logger.warn("Searcher was released twice", new IllegalStateException("Double release"))__                }_              })__            releasable = null_ _            return engineSearcher__        } catch (AlreadyClosedException ex) {_            throw ex__        } catch (Exception ex) {_            maybeFailEngine("acquire_searcher", ex)__            ensureOpen(ex)_ _            logger.error(() -> new ParameterizedMessage("failed to acquire searcher, source {}", source), ex)__            throw new EngineException(shardId, "failed to acquire searcher, source " + source, ex)__        } finally {_            Releasables.close(releasable)__        }_    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,param,scope,the,scope,of,this,searcher,ie,if,the,searcher,will,be,used,for,get,or,search,purposes,see,searcher,close;public,searcher,acquire,searcher,string,source,searcher,scope,scope,throws,engine,exception,if,store,try,inc,ref,false,throw,new,already,closed,exception,shard,id,store,is,closed,failed,engine,get,releasable,releasable,store,dec,ref,try,reference,manager,index,searcher,reference,manager,get,reference,manager,scope,index,searcher,acquire,reference,manager,acquire,atomic,boolean,released,new,atomic,boolean,false,searcher,engine,searcher,new,searcher,source,acquire,if,released,compare,and,set,false,true,try,reference,manager,release,acquire,finally,store,dec,ref,else,logger,warn,searcher,was,released,twice,new,illegal,state,exception,double,release,releasable,null,return,engine,searcher,catch,already,closed,exception,ex,throw,ex,catch,exception,ex,maybe,fail,engine,ex,ensure,open,ex,logger,error,new,parameterized,message,failed,to,acquire,searcher,source,source,ex,throw,new,engine,exception,shard,id,failed,to,acquire,searcher,source,source,ex,finally,releasables,close,releasable
Engine -> public Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException;1550526771;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire_@param scope the scope of this searcher ie. if the searcher will be used for get or search purposes__@see Searcher#close();public Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException {_        _        if (store.tryIncRef() == false) {_            throw new AlreadyClosedException(shardId + " store is closed", failedEngine.get())__        }_        Releasable releasable = store::decRef__        try {_            ReferenceManager<IndexSearcher> referenceManager = getReferenceManager(scope)__            IndexSearcher acquire = referenceManager.acquire()__            AtomicBoolean released = new AtomicBoolean(false)__            Searcher engineSearcher = new Searcher(source, acquire,_                () -> {_                if (released.compareAndSet(false, true)) {_                    try {_                        referenceManager.release(acquire)__                    } finally {_                        store.decRef()__                    }_                } else {_                    _                    logger.warn("Searcher was released twice", new IllegalStateException("Double release"))__                }_              })__            releasable = null_ _            return engineSearcher__        } catch (AlreadyClosedException ex) {_            throw ex__        } catch (Exception ex) {_            maybeFailEngine("acquire_searcher", ex)__            ensureOpen(ex)_ _            logger.error(() -> new ParameterizedMessage("failed to acquire searcher, source {}", source), ex)__            throw new EngineException(shardId, "failed to acquire searcher, source " + source, ex)__        } finally {_            Releasables.close(releasable)__        }_    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,param,scope,the,scope,of,this,searcher,ie,if,the,searcher,will,be,used,for,get,or,search,purposes,see,searcher,close;public,searcher,acquire,searcher,string,source,searcher,scope,scope,throws,engine,exception,if,store,try,inc,ref,false,throw,new,already,closed,exception,shard,id,store,is,closed,failed,engine,get,releasable,releasable,store,dec,ref,try,reference,manager,index,searcher,reference,manager,get,reference,manager,scope,index,searcher,acquire,reference,manager,acquire,atomic,boolean,released,new,atomic,boolean,false,searcher,engine,searcher,new,searcher,source,acquire,if,released,compare,and,set,false,true,try,reference,manager,release,acquire,finally,store,dec,ref,else,logger,warn,searcher,was,released,twice,new,illegal,state,exception,double,release,releasable,null,return,engine,searcher,catch,already,closed,exception,ex,throw,ex,catch,exception,ex,maybe,fail,engine,ex,ensure,open,ex,logger,error,new,parameterized,message,failed,to,acquire,searcher,source,source,ex,throw,new,engine,exception,shard,id,failed,to,acquire,searcher,source,source,ex,finally,releasables,close,releasable
Engine -> public Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException;1551110274;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire_@param scope the scope of this searcher ie. if the searcher will be used for get or search purposes__@see Searcher#close();public Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException {_        _        if (store.tryIncRef() == false) {_            throw new AlreadyClosedException(shardId + " store is closed", failedEngine.get())__        }_        Releasable releasable = store::decRef__        try {_            ReferenceManager<IndexSearcher> referenceManager = getReferenceManager(scope)__            IndexSearcher acquire = referenceManager.acquire()__            AtomicBoolean released = new AtomicBoolean(false)__            Searcher engineSearcher = new Searcher(source, acquire,_                () -> {_                if (released.compareAndSet(false, true)) {_                    try {_                        referenceManager.release(acquire)__                    } finally {_                        store.decRef()__                    }_                } else {_                    _                    logger.warn("Searcher was released twice", new IllegalStateException("Double release"))__                }_              })__            releasable = null_ _            return engineSearcher__        } catch (AlreadyClosedException ex) {_            throw ex__        } catch (Exception ex) {_            maybeFailEngine("acquire_searcher", ex)__            ensureOpen(ex)_ _            logger.error(() -> new ParameterizedMessage("failed to acquire searcher, source {}", source), ex)__            throw new EngineException(shardId, "failed to acquire searcher, source " + source, ex)__        } finally {_            Releasables.close(releasable)__        }_    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,param,scope,the,scope,of,this,searcher,ie,if,the,searcher,will,be,used,for,get,or,search,purposes,see,searcher,close;public,searcher,acquire,searcher,string,source,searcher,scope,scope,throws,engine,exception,if,store,try,inc,ref,false,throw,new,already,closed,exception,shard,id,store,is,closed,failed,engine,get,releasable,releasable,store,dec,ref,try,reference,manager,index,searcher,reference,manager,get,reference,manager,scope,index,searcher,acquire,reference,manager,acquire,atomic,boolean,released,new,atomic,boolean,false,searcher,engine,searcher,new,searcher,source,acquire,if,released,compare,and,set,false,true,try,reference,manager,release,acquire,finally,store,dec,ref,else,logger,warn,searcher,was,released,twice,new,illegal,state,exception,double,release,releasable,null,return,engine,searcher,catch,already,closed,exception,ex,throw,ex,catch,exception,ex,maybe,fail,engine,ex,ensure,open,ex,logger,error,new,parameterized,message,failed,to,acquire,searcher,source,source,ex,throw,new,engine,exception,shard,id,failed,to,acquire,searcher,source,source,ex,finally,releasables,close,releasable
Engine -> public Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException;1551126708;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire_@param scope the scope of this searcher ie. if the searcher will be used for get or search purposes__@see Searcher#close();public Searcher acquireSearcher(String source, SearcherScope scope) throws EngineException {_        _        if (store.tryIncRef() == false) {_            throw new AlreadyClosedException(shardId + " store is closed", failedEngine.get())__        }_        Releasable releasable = store::decRef__        try {_            ReferenceManager<IndexSearcher> referenceManager = getReferenceManager(scope)__            IndexSearcher acquire = referenceManager.acquire()__            AtomicBoolean released = new AtomicBoolean(false)__            Searcher engineSearcher = new Searcher(source, acquire,_                () -> {_                if (released.compareAndSet(false, true)) {_                    try {_                        referenceManager.release(acquire)__                    } finally {_                        store.decRef()__                    }_                } else {_                    _                    logger.warn("Searcher was released twice", new IllegalStateException("Double release"))__                }_              })__            releasable = null_ _            return engineSearcher__        } catch (AlreadyClosedException ex) {_            throw ex__        } catch (Exception ex) {_            maybeFailEngine("acquire_searcher", ex)__            ensureOpen(ex)_ _            logger.error(() -> new ParameterizedMessage("failed to acquire searcher, source {}", source), ex)__            throw new EngineException(shardId, "failed to acquire searcher, source " + source, ex)__        } finally {_            Releasables.close(releasable)__        }_    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,param,scope,the,scope,of,this,searcher,ie,if,the,searcher,will,be,used,for,get,or,search,purposes,see,searcher,close;public,searcher,acquire,searcher,string,source,searcher,scope,scope,throws,engine,exception,if,store,try,inc,ref,false,throw,new,already,closed,exception,shard,id,store,is,closed,failed,engine,get,releasable,releasable,store,dec,ref,try,reference,manager,index,searcher,reference,manager,get,reference,manager,scope,index,searcher,acquire,reference,manager,acquire,atomic,boolean,released,new,atomic,boolean,false,searcher,engine,searcher,new,searcher,source,acquire,if,released,compare,and,set,false,true,try,reference,manager,release,acquire,finally,store,dec,ref,else,logger,warn,searcher,was,released,twice,new,illegal,state,exception,double,release,releasable,null,return,engine,searcher,catch,already,closed,exception,ex,throw,ex,catch,exception,ex,maybe,fail,engine,ex,ensure,open,ex,logger,error,new,parameterized,message,failed,to,acquire,searcher,source,source,ex,throw,new,engine,exception,shard,id,failed,to,acquire,searcher,source,source,ex,finally,releasables,close,releasable
Engine -> public abstract void skipTranslogRecovery()_;1524684173;Do not replay translog operations, but make the engine be ready.;public abstract void skipTranslogRecovery()_;do,not,replay,translog,operations,but,make,the,engine,be,ready;public,abstract,void,skip,translog,recovery
Engine -> public abstract void skipTranslogRecovery()_;1525162917;Do not replay translog operations, but make the engine be ready.;public abstract void skipTranslogRecovery()_;do,not,replay,translog,operations,but,make,the,engine,be,ready;public,abstract,void,skip,translog,recovery
Engine -> public abstract void skipTranslogRecovery()_;1525334055;Do not replay translog operations, but make the engine be ready.;public abstract void skipTranslogRecovery()_;do,not,replay,translog,operations,but,make,the,engine,be,ready;public,abstract,void,skip,translog,recovery
Engine -> public abstract void skipTranslogRecovery()_;1527583663;Do not replay translog operations, but make the engine be ready.;public abstract void skipTranslogRecovery()_;do,not,replay,translog,operations,but,make,the,engine,be,ready;public,abstract,void,skip,translog,recovery
Engine -> public abstract void skipTranslogRecovery()_;1528706846;Do not replay translog operations, but make the engine be ready.;public abstract void skipTranslogRecovery()_;do,not,replay,translog,operations,but,make,the,engine,be,ready;public,abstract,void,skip,translog,recovery
Engine -> public abstract void skipTranslogRecovery()_;1528762805;Do not replay translog operations, but make the engine be ready.;public abstract void skipTranslogRecovery()_;do,not,replay,translog,operations,but,make,the,engine,be,ready;public,abstract,void,skip,translog,recovery
Engine -> public abstract void skipTranslogRecovery()_;1531910483;Do not replay translog operations, but make the engine be ready.;public abstract void skipTranslogRecovery()_;do,not,replay,translog,operations,but,make,the,engine,be,ready;public,abstract,void,skip,translog,recovery
Engine -> public abstract void skipTranslogRecovery()_;1532685069;Do not replay translog operations, but make the engine be ready.;public abstract void skipTranslogRecovery()_;do,not,replay,translog,operations,but,make,the,engine,be,ready;public,abstract,void,skip,translog,recovery
Engine -> public abstract void skipTranslogRecovery()_;1533295538;Do not replay translog operations, but make the engine be ready.;public abstract void skipTranslogRecovery()_;do,not,replay,translog,operations,but,make,the,engine,be,ready;public,abstract,void,skip,translog,recovery
Engine -> public abstract void skipTranslogRecovery()_;1535046779;Do not replay translog operations, but make the engine be ready.;public abstract void skipTranslogRecovery()_;do,not,replay,translog,operations,but,make,the,engine,be,ready;public,abstract,void,skip,translog,recovery
Engine -> public abstract void skipTranslogRecovery()_;1535723122;Do not replay translog operations, but make the engine be ready.;public abstract void skipTranslogRecovery()_;do,not,replay,translog,operations,but,make,the,engine,be,ready;public,abstract,void,skip,translog,recovery
Engine -> public abstract void skipTranslogRecovery()_;1535965276;Do not replay translog operations, but make the engine be ready.;public abstract void skipTranslogRecovery()_;do,not,replay,translog,operations,but,make,the,engine,be,ready;public,abstract,void,skip,translog,recovery
Engine -> public abstract void skipTranslogRecovery()_;1536314350;Do not replay translog operations, but make the engine be ready.;public abstract void skipTranslogRecovery()_;do,not,replay,translog,operations,but,make,the,engine,be,ready;public,abstract,void,skip,translog,recovery
Engine -> public abstract void skipTranslogRecovery()_;1536828374;Do not replay translog operations, but make the engine be ready.;public abstract void skipTranslogRecovery()_;do,not,replay,translog,operations,but,make,the,engine,be,ready;public,abstract,void,skip,translog,recovery
Engine -> public abstract void skipTranslogRecovery()_;1537371806;Do not replay translog operations, but make the engine be ready.;public abstract void skipTranslogRecovery()_;do,not,replay,translog,operations,but,make,the,engine,be,ready;public,abstract,void,skip,translog,recovery
Engine -> public abstract void skipTranslogRecovery()_;1537806831;Do not replay translog operations, but make the engine be ready.;public abstract void skipTranslogRecovery()_;do,not,replay,translog,operations,but,make,the,engine,be,ready;public,abstract,void,skip,translog,recovery
Engine -> public abstract void skipTranslogRecovery()_;1538067637;Do not replay translog operations, but make the engine be ready.;public abstract void skipTranslogRecovery()_;do,not,replay,translog,operations,but,make,the,engine,be,ready;public,abstract,void,skip,translog,recovery
Engine -> public abstract void skipTranslogRecovery()_;1538424609;Do not replay translog operations, but make the engine be ready.;public abstract void skipTranslogRecovery()_;do,not,replay,translog,operations,but,make,the,engine,be,ready;public,abstract,void,skip,translog,recovery
Engine -> public abstract void skipTranslogRecovery()_;1539723533;Do not replay translog operations, but make the engine be ready.;public abstract void skipTranslogRecovery()_;do,not,replay,translog,operations,but,make,the,engine,be,ready;public,abstract,void,skip,translog,recovery
Engine -> public abstract void skipTranslogRecovery()_;1541618615;Do not replay translog operations, but make the engine be ready.;public abstract void skipTranslogRecovery()_;do,not,replay,translog,operations,but,make,the,engine,be,ready;public,abstract,void,skip,translog,recovery
Engine -> public abstract void skipTranslogRecovery()_;1542697754;Do not replay translog operations, but make the engine be ready.;public abstract void skipTranslogRecovery()_;do,not,replay,translog,operations,but,make,the,engine,be,ready;public,abstract,void,skip,translog,recovery
Engine -> public abstract void skipTranslogRecovery()_;1543047942;Do not replay translog operations, but make the engine be ready.;public abstract void skipTranslogRecovery()_;do,not,replay,translog,operations,but,make,the,engine,be,ready;public,abstract,void,skip,translog,recovery
Engine -> public abstract void skipTranslogRecovery()_;1544545090;Do not replay translog operations, but make the engine be ready.;public abstract void skipTranslogRecovery()_;do,not,replay,translog,operations,but,make,the,engine,be,ready;public,abstract,void,skip,translog,recovery
Engine -> public abstract void skipTranslogRecovery()_;1544684920;Do not replay translog operations, but make the engine be ready.;public abstract void skipTranslogRecovery()_;do,not,replay,translog,operations,but,make,the,engine,be,ready;public,abstract,void,skip,translog,recovery
Engine -> public abstract void skipTranslogRecovery()_;1545140118;Do not replay translog operations, but make the engine be ready.;public abstract void skipTranslogRecovery()_;do,not,replay,translog,operations,but,make,the,engine,be,ready;public,abstract,void,skip,translog,recovery
Engine -> public abstract void skipTranslogRecovery()_;1545221705;Do not replay translog operations, but make the engine be ready.;public abstract void skipTranslogRecovery()_;do,not,replay,translog,operations,but,make,the,engine,be,ready;public,abstract,void,skip,translog,recovery
Engine -> public abstract void skipTranslogRecovery()_;1547332999;Do not replay translog operations, but make the engine be ready.;public abstract void skipTranslogRecovery()_;do,not,replay,translog,operations,but,make,the,engine,be,ready;public,abstract,void,skip,translog,recovery
Engine -> public abstract void skipTranslogRecovery()_;1548771485;Do not replay translog operations, but make the engine be ready.;public abstract void skipTranslogRecovery()_;do,not,replay,translog,operations,but,make,the,engine,be,ready;public,abstract,void,skip,translog,recovery
Engine -> public abstract void skipTranslogRecovery()_;1549891630;Do not replay translog operations, but make the engine be ready.;public abstract void skipTranslogRecovery()_;do,not,replay,translog,operations,but,make,the,engine,be,ready;public,abstract,void,skip,translog,recovery
Engine -> public abstract void skipTranslogRecovery()_;1549975032;Do not replay translog operations, but make the engine be ready.;public abstract void skipTranslogRecovery()_;do,not,replay,translog,operations,but,make,the,engine,be,ready;public,abstract,void,skip,translog,recovery
Engine -> public abstract void skipTranslogRecovery()_;1550220204;Do not replay translog operations, but make the engine be ready.;public abstract void skipTranslogRecovery()_;do,not,replay,translog,operations,but,make,the,engine,be,ready;public,abstract,void,skip,translog,recovery
Engine -> public abstract void skipTranslogRecovery()_;1550526771;Do not replay translog operations, but make the engine be ready.;public abstract void skipTranslogRecovery()_;do,not,replay,translog,operations,but,make,the,engine,be,ready;public,abstract,void,skip,translog,recovery
Engine -> public abstract void skipTranslogRecovery()_;1551110274;Do not replay translog operations, but make the engine be ready.;public abstract void skipTranslogRecovery()_;do,not,replay,translog,operations,but,make,the,engine,be,ready;public,abstract,void,skip,translog,recovery
Engine -> public abstract void skipTranslogRecovery()_;1551126708;Do not replay translog operations, but make the engine be ready.;public abstract void skipTranslogRecovery()_;do,not,replay,translog,operations,but,make,the,engine,be,ready;public,abstract,void,skip,translog,recovery
Engine -> public final long getMaxSeqNoOfUpdatesOrDeletes();1537806831;Returns the maximum sequence number of either update or delete operations have been processed in this engine_or the sequence number from {@link #advanceMaxSeqNoOfUpdatesOrDeletes(long)}. An index request is considered_as an update operation if it overwrites the existing documents in Lucene index with the same document id.__@see #initializeMaxSeqNoOfUpdatesOrDeletes()_@see #advanceMaxSeqNoOfUpdatesOrDeletes(long);public final long getMaxSeqNoOfUpdatesOrDeletes() {_        return maxSeqNoOfUpdatesOrDeletes.get()__    };returns,the,maximum,sequence,number,of,either,update,or,delete,operations,have,been,processed,in,this,engine,or,the,sequence,number,from,link,advance,max,seq,no,of,updates,or,deletes,long,an,index,request,is,considered,as,an,update,operation,if,it,overwrites,the,existing,documents,in,lucene,index,with,the,same,document,id,see,initialize,max,seq,no,of,updates,or,deletes,see,advance,max,seq,no,of,updates,or,deletes,long;public,final,long,get,max,seq,no,of,updates,or,deletes,return,max,seq,no,of,updates,or,deletes,get
Engine -> public final long getMaxSeqNoOfUpdatesOrDeletes();1538067637;Returns the maximum sequence number of either update or delete operations have been processed in this engine_or the sequence number from {@link #advanceMaxSeqNoOfUpdatesOrDeletes(long)}. An index request is considered_as an update operation if it overwrites the existing documents in Lucene index with the same document id.__@see #initializeMaxSeqNoOfUpdatesOrDeletes()_@see #advanceMaxSeqNoOfUpdatesOrDeletes(long);public final long getMaxSeqNoOfUpdatesOrDeletes() {_        return maxSeqNoOfUpdatesOrDeletes.get()__    };returns,the,maximum,sequence,number,of,either,update,or,delete,operations,have,been,processed,in,this,engine,or,the,sequence,number,from,link,advance,max,seq,no,of,updates,or,deletes,long,an,index,request,is,considered,as,an,update,operation,if,it,overwrites,the,existing,documents,in,lucene,index,with,the,same,document,id,see,initialize,max,seq,no,of,updates,or,deletes,see,advance,max,seq,no,of,updates,or,deletes,long;public,final,long,get,max,seq,no,of,updates,or,deletes,return,max,seq,no,of,updates,or,deletes,get
Engine -> public final long getMaxSeqNoOfUpdatesOrDeletes();1538424609;Returns the maximum sequence number of either update or delete operations have been processed in this engine_or the sequence number from {@link #advanceMaxSeqNoOfUpdatesOrDeletes(long)}. An index request is considered_as an update operation if it overwrites the existing documents in Lucene index with the same document id._<p>_A note on the optimization using max_seq_no_of_updates_or_deletes:_For each operation O, the key invariants are:_<ol>_<li> I1: There is no operation on docID(O) with seqno that is {@literal > MSU(O) and < seqno(O)} </li>_<li> I2: If {@literal MSU(O) < seqno(O)} then docID(O) did not exist when O was applied_ more precisely, if there is any O'_with {@literal seqno(O') < seqno(O) and docID(O') = docID(O)} then the one with the greatest seqno is a delete.</li>_</ol>_<p>_When a receiving shard (either a replica or a follower) receives an operation O, it must first ensure its own MSU at least MSU(O),_and then compares its MSU to its local checkpoint (LCP). If {@literal LCP < MSU} then there's a gap: there may be some operations_that act on docID(O) about which we do not yet know, so we cannot perform an add. Note this also covers the case where a future_operation O' with {@literal seqNo(O') > seqNo(O) and docId(O') = docID(O)} is processed before O. In that case MSU(O') is at least_seqno(O') and this means {@literal MSU >= seqNo(O') > seqNo(O) > LCP} (because O wasn't processed yet)._<p>_However, if {@literal MSU <= LCP} then there is no gap: we have processed every {@literal operation <= LCP}, and no operation O'_with {@literal seqno(O') > LCP and seqno(O') < seqno(O) also has docID(O') = docID(O)}, because such an operation would have_{@literal seqno(O') > LCP >= MSU >= MSU(O)} which contradicts the first invariant. Furthermore in this case we immediately know_that docID(O) has been deleted (or never existed) without needing to check Lucene for the following reason. If there's no earlier_operation on docID(O) then this is clear, so suppose instead that the preceding operation on docID(O) is O':_1. The first invariant above tells us that {@literal seqno(O') <= MSU(O) <= LCP} so we have already applied O' to Lucene._2. Also {@literal MSU(O) <= MSU <= LCP < seqno(O)} (we discard O if {@literal seqno(O) <= LCP}) so the second invariant applies,_meaning that the O' was a delete._<p>_Therefore, if {@literal MSU <= LCP < seqno(O)} we know that O can safely be optimized with and added to lucene with addDocument._Moreover, operations that are optimized using the MSU optimization must not be processed twice as this will create duplicates_in Lucene. To avoid this we check the local checkpoint tracker to see if an operation was already processed.__@see #initializeMaxSeqNoOfUpdatesOrDeletes()_@see #advanceMaxSeqNoOfUpdatesOrDeletes(long);public final long getMaxSeqNoOfUpdatesOrDeletes() {_        return maxSeqNoOfUpdatesOrDeletes.get()__    };returns,the,maximum,sequence,number,of,either,update,or,delete,operations,have,been,processed,in,this,engine,or,the,sequence,number,from,link,advance,max,seq,no,of,updates,or,deletes,long,an,index,request,is,considered,as,an,update,operation,if,it,overwrites,the,existing,documents,in,lucene,index,with,the,same,document,id,p,a,note,on,the,optimization,using,for,each,operation,o,the,key,invariants,are,ol,li,i1,there,is,no,operation,on,doc,id,o,with,seqno,that,is,literal,msu,o,and,seqno,o,li,li,i2,if,literal,msu,o,seqno,o,then,doc,id,o,did,not,exist,when,o,was,applied,more,precisely,if,there,is,any,o,with,literal,seqno,o,seqno,o,and,doc,id,o,doc,id,o,then,the,one,with,the,greatest,seqno,is,a,delete,li,ol,p,when,a,receiving,shard,either,a,replica,or,a,follower,receives,an,operation,o,it,must,first,ensure,its,own,msu,at,least,msu,o,and,then,compares,its,msu,to,its,local,checkpoint,lcp,if,literal,lcp,msu,then,there,s,a,gap,there,may,be,some,operations,that,act,on,doc,id,o,about,which,we,do,not,yet,know,so,we,cannot,perform,an,add,note,this,also,covers,the,case,where,a,future,operation,o,with,literal,seq,no,o,seq,no,o,and,doc,id,o,doc,id,o,is,processed,before,o,in,that,case,msu,o,is,at,least,seqno,o,and,this,means,literal,msu,seq,no,o,seq,no,o,lcp,because,o,wasn,t,processed,yet,p,however,if,literal,msu,lcp,then,there,is,no,gap,we,have,processed,every,literal,operation,lcp,and,no,operation,o,with,literal,seqno,o,lcp,and,seqno,o,seqno,o,also,has,doc,id,o,doc,id,o,because,such,an,operation,would,have,literal,seqno,o,lcp,msu,msu,o,which,contradicts,the,first,invariant,furthermore,in,this,case,we,immediately,know,that,doc,id,o,has,been,deleted,or,never,existed,without,needing,to,check,lucene,for,the,following,reason,if,there,s,no,earlier,operation,on,doc,id,o,then,this,is,clear,so,suppose,instead,that,the,preceding,operation,on,doc,id,o,is,o,1,the,first,invariant,above,tells,us,that,literal,seqno,o,msu,o,lcp,so,we,have,already,applied,o,to,lucene,2,also,literal,msu,o,msu,lcp,seqno,o,we,discard,o,if,literal,seqno,o,lcp,so,the,second,invariant,applies,meaning,that,the,o,was,a,delete,p,therefore,if,literal,msu,lcp,seqno,o,we,know,that,o,can,safely,be,optimized,with,and,added,to,lucene,with,add,document,moreover,operations,that,are,optimized,using,the,msu,optimization,must,not,be,processed,twice,as,this,will,create,duplicates,in,lucene,to,avoid,this,we,check,the,local,checkpoint,tracker,to,see,if,an,operation,was,already,processed,see,initialize,max,seq,no,of,updates,or,deletes,see,advance,max,seq,no,of,updates,or,deletes,long;public,final,long,get,max,seq,no,of,updates,or,deletes,return,max,seq,no,of,updates,or,deletes,get
Engine -> public final long getMaxSeqNoOfUpdatesOrDeletes();1539723533;Returns the maximum sequence number of either update or delete operations have been processed in this engine_or the sequence number from {@link #advanceMaxSeqNoOfUpdatesOrDeletes(long)}. An index request is considered_as an update operation if it overwrites the existing documents in Lucene index with the same document id._<p>_A note on the optimization using max_seq_no_of_updates_or_deletes:_For each operation O, the key invariants are:_<ol>_<li> I1: There is no operation on docID(O) with seqno that is {@literal > MSU(O) and < seqno(O)} </li>_<li> I2: If {@literal MSU(O) < seqno(O)} then docID(O) did not exist when O was applied_ more precisely, if there is any O'_with {@literal seqno(O') < seqno(O) and docID(O') = docID(O)} then the one with the greatest seqno is a delete.</li>_</ol>_<p>_When a receiving shard (either a replica or a follower) receives an operation O, it must first ensure its own MSU at least MSU(O),_and then compares its MSU to its local checkpoint (LCP). If {@literal LCP < MSU} then there's a gap: there may be some operations_that act on docID(O) about which we do not yet know, so we cannot perform an add. Note this also covers the case where a future_operation O' with {@literal seqNo(O') > seqNo(O) and docId(O') = docID(O)} is processed before O. In that case MSU(O') is at least_seqno(O') and this means {@literal MSU >= seqNo(O') > seqNo(O) > LCP} (because O wasn't processed yet)._<p>_However, if {@literal MSU <= LCP} then there is no gap: we have processed every {@literal operation <= LCP}, and no operation O'_with {@literal seqno(O') > LCP and seqno(O') < seqno(O) also has docID(O') = docID(O)}, because such an operation would have_{@literal seqno(O') > LCP >= MSU >= MSU(O)} which contradicts the first invariant. Furthermore in this case we immediately know_that docID(O) has been deleted (or never existed) without needing to check Lucene for the following reason. If there's no earlier_operation on docID(O) then this is clear, so suppose instead that the preceding operation on docID(O) is O':_1. The first invariant above tells us that {@literal seqno(O') <= MSU(O) <= LCP} so we have already applied O' to Lucene._2. Also {@literal MSU(O) <= MSU <= LCP < seqno(O)} (we discard O if {@literal seqno(O) <= LCP}) so the second invariant applies,_meaning that the O' was a delete._<p>_Therefore, if {@literal MSU <= LCP < seqno(O)} we know that O can safely be optimized with and added to lucene with addDocument._Moreover, operations that are optimized using the MSU optimization must not be processed twice as this will create duplicates_in Lucene. To avoid this we check the local checkpoint tracker to see if an operation was already processed.__@see #initializeMaxSeqNoOfUpdatesOrDeletes()_@see #advanceMaxSeqNoOfUpdatesOrDeletes(long);public final long getMaxSeqNoOfUpdatesOrDeletes() {_        return maxSeqNoOfUpdatesOrDeletes.get()__    };returns,the,maximum,sequence,number,of,either,update,or,delete,operations,have,been,processed,in,this,engine,or,the,sequence,number,from,link,advance,max,seq,no,of,updates,or,deletes,long,an,index,request,is,considered,as,an,update,operation,if,it,overwrites,the,existing,documents,in,lucene,index,with,the,same,document,id,p,a,note,on,the,optimization,using,for,each,operation,o,the,key,invariants,are,ol,li,i1,there,is,no,operation,on,doc,id,o,with,seqno,that,is,literal,msu,o,and,seqno,o,li,li,i2,if,literal,msu,o,seqno,o,then,doc,id,o,did,not,exist,when,o,was,applied,more,precisely,if,there,is,any,o,with,literal,seqno,o,seqno,o,and,doc,id,o,doc,id,o,then,the,one,with,the,greatest,seqno,is,a,delete,li,ol,p,when,a,receiving,shard,either,a,replica,or,a,follower,receives,an,operation,o,it,must,first,ensure,its,own,msu,at,least,msu,o,and,then,compares,its,msu,to,its,local,checkpoint,lcp,if,literal,lcp,msu,then,there,s,a,gap,there,may,be,some,operations,that,act,on,doc,id,o,about,which,we,do,not,yet,know,so,we,cannot,perform,an,add,note,this,also,covers,the,case,where,a,future,operation,o,with,literal,seq,no,o,seq,no,o,and,doc,id,o,doc,id,o,is,processed,before,o,in,that,case,msu,o,is,at,least,seqno,o,and,this,means,literal,msu,seq,no,o,seq,no,o,lcp,because,o,wasn,t,processed,yet,p,however,if,literal,msu,lcp,then,there,is,no,gap,we,have,processed,every,literal,operation,lcp,and,no,operation,o,with,literal,seqno,o,lcp,and,seqno,o,seqno,o,also,has,doc,id,o,doc,id,o,because,such,an,operation,would,have,literal,seqno,o,lcp,msu,msu,o,which,contradicts,the,first,invariant,furthermore,in,this,case,we,immediately,know,that,doc,id,o,has,been,deleted,or,never,existed,without,needing,to,check,lucene,for,the,following,reason,if,there,s,no,earlier,operation,on,doc,id,o,then,this,is,clear,so,suppose,instead,that,the,preceding,operation,on,doc,id,o,is,o,1,the,first,invariant,above,tells,us,that,literal,seqno,o,msu,o,lcp,so,we,have,already,applied,o,to,lucene,2,also,literal,msu,o,msu,lcp,seqno,o,we,discard,o,if,literal,seqno,o,lcp,so,the,second,invariant,applies,meaning,that,the,o,was,a,delete,p,therefore,if,literal,msu,lcp,seqno,o,we,know,that,o,can,safely,be,optimized,with,and,added,to,lucene,with,add,document,moreover,operations,that,are,optimized,using,the,msu,optimization,must,not,be,processed,twice,as,this,will,create,duplicates,in,lucene,to,avoid,this,we,check,the,local,checkpoint,tracker,to,see,if,an,operation,was,already,processed,see,initialize,max,seq,no,of,updates,or,deletes,see,advance,max,seq,no,of,updates,or,deletes,long;public,final,long,get,max,seq,no,of,updates,or,deletes,return,max,seq,no,of,updates,or,deletes,get
Engine -> public final long getMaxSeqNoOfUpdatesOrDeletes();1541618615;Returns the maximum sequence number of either update or delete operations have been processed in this engine_or the sequence number from {@link #advanceMaxSeqNoOfUpdatesOrDeletes(long)}. An index request is considered_as an update operation if it overwrites the existing documents in Lucene index with the same document id._<p>_A note on the optimization using max_seq_no_of_updates_or_deletes:_For each operation O, the key invariants are:_<ol>_<li> I1: There is no operation on docID(O) with seqno that is {@literal > MSU(O) and < seqno(O)} </li>_<li> I2: If {@literal MSU(O) < seqno(O)} then docID(O) did not exist when O was applied_ more precisely, if there is any O'_with {@literal seqno(O') < seqno(O) and docID(O') = docID(O)} then the one with the greatest seqno is a delete.</li>_</ol>_<p>_When a receiving shard (either a replica or a follower) receives an operation O, it must first ensure its own MSU at least MSU(O),_and then compares its MSU to its local checkpoint (LCP). If {@literal LCP < MSU} then there's a gap: there may be some operations_that act on docID(O) about which we do not yet know, so we cannot perform an add. Note this also covers the case where a future_operation O' with {@literal seqNo(O') > seqNo(O) and docId(O') = docID(O)} is processed before O. In that case MSU(O') is at least_seqno(O') and this means {@literal MSU >= seqNo(O') > seqNo(O) > LCP} (because O wasn't processed yet)._<p>_However, if {@literal MSU <= LCP} then there is no gap: we have processed every {@literal operation <= LCP}, and no operation O'_with {@literal seqno(O') > LCP and seqno(O') < seqno(O) also has docID(O') = docID(O)}, because such an operation would have_{@literal seqno(O') > LCP >= MSU >= MSU(O)} which contradicts the first invariant. Furthermore in this case we immediately know_that docID(O) has been deleted (or never existed) without needing to check Lucene for the following reason. If there's no earlier_operation on docID(O) then this is clear, so suppose instead that the preceding operation on docID(O) is O':_1. The first invariant above tells us that {@literal seqno(O') <= MSU(O) <= LCP} so we have already applied O' to Lucene._2. Also {@literal MSU(O) <= MSU <= LCP < seqno(O)} (we discard O if {@literal seqno(O) <= LCP}) so the second invariant applies,_meaning that the O' was a delete._<p>_Therefore, if {@literal MSU <= LCP < seqno(O)} we know that O can safely be optimized with and added to lucene with addDocument._Moreover, operations that are optimized using the MSU optimization must not be processed twice as this will create duplicates_in Lucene. To avoid this we check the local checkpoint tracker to see if an operation was already processed.__@see #initializeMaxSeqNoOfUpdatesOrDeletes()_@see #advanceMaxSeqNoOfUpdatesOrDeletes(long);public final long getMaxSeqNoOfUpdatesOrDeletes() {_        return maxSeqNoOfUpdatesOrDeletes.get()__    };returns,the,maximum,sequence,number,of,either,update,or,delete,operations,have,been,processed,in,this,engine,or,the,sequence,number,from,link,advance,max,seq,no,of,updates,or,deletes,long,an,index,request,is,considered,as,an,update,operation,if,it,overwrites,the,existing,documents,in,lucene,index,with,the,same,document,id,p,a,note,on,the,optimization,using,for,each,operation,o,the,key,invariants,are,ol,li,i1,there,is,no,operation,on,doc,id,o,with,seqno,that,is,literal,msu,o,and,seqno,o,li,li,i2,if,literal,msu,o,seqno,o,then,doc,id,o,did,not,exist,when,o,was,applied,more,precisely,if,there,is,any,o,with,literal,seqno,o,seqno,o,and,doc,id,o,doc,id,o,then,the,one,with,the,greatest,seqno,is,a,delete,li,ol,p,when,a,receiving,shard,either,a,replica,or,a,follower,receives,an,operation,o,it,must,first,ensure,its,own,msu,at,least,msu,o,and,then,compares,its,msu,to,its,local,checkpoint,lcp,if,literal,lcp,msu,then,there,s,a,gap,there,may,be,some,operations,that,act,on,doc,id,o,about,which,we,do,not,yet,know,so,we,cannot,perform,an,add,note,this,also,covers,the,case,where,a,future,operation,o,with,literal,seq,no,o,seq,no,o,and,doc,id,o,doc,id,o,is,processed,before,o,in,that,case,msu,o,is,at,least,seqno,o,and,this,means,literal,msu,seq,no,o,seq,no,o,lcp,because,o,wasn,t,processed,yet,p,however,if,literal,msu,lcp,then,there,is,no,gap,we,have,processed,every,literal,operation,lcp,and,no,operation,o,with,literal,seqno,o,lcp,and,seqno,o,seqno,o,also,has,doc,id,o,doc,id,o,because,such,an,operation,would,have,literal,seqno,o,lcp,msu,msu,o,which,contradicts,the,first,invariant,furthermore,in,this,case,we,immediately,know,that,doc,id,o,has,been,deleted,or,never,existed,without,needing,to,check,lucene,for,the,following,reason,if,there,s,no,earlier,operation,on,doc,id,o,then,this,is,clear,so,suppose,instead,that,the,preceding,operation,on,doc,id,o,is,o,1,the,first,invariant,above,tells,us,that,literal,seqno,o,msu,o,lcp,so,we,have,already,applied,o,to,lucene,2,also,literal,msu,o,msu,lcp,seqno,o,we,discard,o,if,literal,seqno,o,lcp,so,the,second,invariant,applies,meaning,that,the,o,was,a,delete,p,therefore,if,literal,msu,lcp,seqno,o,we,know,that,o,can,safely,be,optimized,with,and,added,to,lucene,with,add,document,moreover,operations,that,are,optimized,using,the,msu,optimization,must,not,be,processed,twice,as,this,will,create,duplicates,in,lucene,to,avoid,this,we,check,the,local,checkpoint,tracker,to,see,if,an,operation,was,already,processed,see,initialize,max,seq,no,of,updates,or,deletes,see,advance,max,seq,no,of,updates,or,deletes,long;public,final,long,get,max,seq,no,of,updates,or,deletes,return,max,seq,no,of,updates,or,deletes,get
Engine -> public final long getMaxSeqNoOfUpdatesOrDeletes();1542697754;Returns the maximum sequence number of either update or delete operations have been processed in this engine_or the sequence number from {@link #advanceMaxSeqNoOfUpdatesOrDeletes(long)}. An index request is considered_as an update operation if it overwrites the existing documents in Lucene index with the same document id._<p>_A note on the optimization using max_seq_no_of_updates_or_deletes:_For each operation O, the key invariants are:_<ol>_<li> I1: There is no operation on docID(O) with seqno that is {@literal > MSU(O) and < seqno(O)} </li>_<li> I2: If {@literal MSU(O) < seqno(O)} then docID(O) did not exist when O was applied_ more precisely, if there is any O'_with {@literal seqno(O') < seqno(O) and docID(O') = docID(O)} then the one with the greatest seqno is a delete.</li>_</ol>_<p>_When a receiving shard (either a replica or a follower) receives an operation O, it must first ensure its own MSU at least MSU(O),_and then compares its MSU to its local checkpoint (LCP). If {@literal LCP < MSU} then there's a gap: there may be some operations_that act on docID(O) about which we do not yet know, so we cannot perform an add. Note this also covers the case where a future_operation O' with {@literal seqNo(O') > seqNo(O) and docId(O') = docID(O)} is processed before O. In that case MSU(O') is at least_seqno(O') and this means {@literal MSU >= seqNo(O') > seqNo(O) > LCP} (because O wasn't processed yet)._<p>_However, if {@literal MSU <= LCP} then there is no gap: we have processed every {@literal operation <= LCP}, and no operation O'_with {@literal seqno(O') > LCP and seqno(O') < seqno(O) also has docID(O') = docID(O)}, because such an operation would have_{@literal seqno(O') > LCP >= MSU >= MSU(O)} which contradicts the first invariant. Furthermore in this case we immediately know_that docID(O) has been deleted (or never existed) without needing to check Lucene for the following reason. If there's no earlier_operation on docID(O) then this is clear, so suppose instead that the preceding operation on docID(O) is O':_1. The first invariant above tells us that {@literal seqno(O') <= MSU(O) <= LCP} so we have already applied O' to Lucene._2. Also {@literal MSU(O) <= MSU <= LCP < seqno(O)} (we discard O if {@literal seqno(O) <= LCP}) so the second invariant applies,_meaning that the O' was a delete._<p>_Therefore, if {@literal MSU <= LCP < seqno(O)} we know that O can safely be optimized with and added to lucene with addDocument._Moreover, operations that are optimized using the MSU optimization must not be processed twice as this will create duplicates_in Lucene. To avoid this we check the local checkpoint tracker to see if an operation was already processed.__@see #initializeMaxSeqNoOfUpdatesOrDeletes()_@see #advanceMaxSeqNoOfUpdatesOrDeletes(long);public final long getMaxSeqNoOfUpdatesOrDeletes() {_        return maxSeqNoOfUpdatesOrDeletes.get()__    };returns,the,maximum,sequence,number,of,either,update,or,delete,operations,have,been,processed,in,this,engine,or,the,sequence,number,from,link,advance,max,seq,no,of,updates,or,deletes,long,an,index,request,is,considered,as,an,update,operation,if,it,overwrites,the,existing,documents,in,lucene,index,with,the,same,document,id,p,a,note,on,the,optimization,using,for,each,operation,o,the,key,invariants,are,ol,li,i1,there,is,no,operation,on,doc,id,o,with,seqno,that,is,literal,msu,o,and,seqno,o,li,li,i2,if,literal,msu,o,seqno,o,then,doc,id,o,did,not,exist,when,o,was,applied,more,precisely,if,there,is,any,o,with,literal,seqno,o,seqno,o,and,doc,id,o,doc,id,o,then,the,one,with,the,greatest,seqno,is,a,delete,li,ol,p,when,a,receiving,shard,either,a,replica,or,a,follower,receives,an,operation,o,it,must,first,ensure,its,own,msu,at,least,msu,o,and,then,compares,its,msu,to,its,local,checkpoint,lcp,if,literal,lcp,msu,then,there,s,a,gap,there,may,be,some,operations,that,act,on,doc,id,o,about,which,we,do,not,yet,know,so,we,cannot,perform,an,add,note,this,also,covers,the,case,where,a,future,operation,o,with,literal,seq,no,o,seq,no,o,and,doc,id,o,doc,id,o,is,processed,before,o,in,that,case,msu,o,is,at,least,seqno,o,and,this,means,literal,msu,seq,no,o,seq,no,o,lcp,because,o,wasn,t,processed,yet,p,however,if,literal,msu,lcp,then,there,is,no,gap,we,have,processed,every,literal,operation,lcp,and,no,operation,o,with,literal,seqno,o,lcp,and,seqno,o,seqno,o,also,has,doc,id,o,doc,id,o,because,such,an,operation,would,have,literal,seqno,o,lcp,msu,msu,o,which,contradicts,the,first,invariant,furthermore,in,this,case,we,immediately,know,that,doc,id,o,has,been,deleted,or,never,existed,without,needing,to,check,lucene,for,the,following,reason,if,there,s,no,earlier,operation,on,doc,id,o,then,this,is,clear,so,suppose,instead,that,the,preceding,operation,on,doc,id,o,is,o,1,the,first,invariant,above,tells,us,that,literal,seqno,o,msu,o,lcp,so,we,have,already,applied,o,to,lucene,2,also,literal,msu,o,msu,lcp,seqno,o,we,discard,o,if,literal,seqno,o,lcp,so,the,second,invariant,applies,meaning,that,the,o,was,a,delete,p,therefore,if,literal,msu,lcp,seqno,o,we,know,that,o,can,safely,be,optimized,with,and,added,to,lucene,with,add,document,moreover,operations,that,are,optimized,using,the,msu,optimization,must,not,be,processed,twice,as,this,will,create,duplicates,in,lucene,to,avoid,this,we,check,the,local,checkpoint,tracker,to,see,if,an,operation,was,already,processed,see,initialize,max,seq,no,of,updates,or,deletes,see,advance,max,seq,no,of,updates,or,deletes,long;public,final,long,get,max,seq,no,of,updates,or,deletes,return,max,seq,no,of,updates,or,deletes,get
Engine -> public final long getMaxSeqNoOfUpdatesOrDeletes();1543047942;Returns the maximum sequence number of either update or delete operations have been processed in this engine_or the sequence number from {@link #advanceMaxSeqNoOfUpdatesOrDeletes(long)}. An index request is considered_as an update operation if it overwrites the existing documents in Lucene index with the same document id._<p>_A note on the optimization using max_seq_no_of_updates_or_deletes:_For each operation O, the key invariants are:_<ol>_<li> I1: There is no operation on docID(O) with seqno that is {@literal > MSU(O) and < seqno(O)} </li>_<li> I2: If {@literal MSU(O) < seqno(O)} then docID(O) did not exist when O was applied_ more precisely, if there is any O'_with {@literal seqno(O') < seqno(O) and docID(O') = docID(O)} then the one with the greatest seqno is a delete.</li>_</ol>_<p>_When a receiving shard (either a replica or a follower) receives an operation O, it must first ensure its own MSU at least MSU(O),_and then compares its MSU to its local checkpoint (LCP). If {@literal LCP < MSU} then there's a gap: there may be some operations_that act on docID(O) about which we do not yet know, so we cannot perform an add. Note this also covers the case where a future_operation O' with {@literal seqNo(O') > seqNo(O) and docId(O') = docID(O)} is processed before O. In that case MSU(O') is at least_seqno(O') and this means {@literal MSU >= seqNo(O') > seqNo(O) > LCP} (because O wasn't processed yet)._<p>_However, if {@literal MSU <= LCP} then there is no gap: we have processed every {@literal operation <= LCP}, and no operation O'_with {@literal seqno(O') > LCP and seqno(O') < seqno(O) also has docID(O') = docID(O)}, because such an operation would have_{@literal seqno(O') > LCP >= MSU >= MSU(O)} which contradicts the first invariant. Furthermore in this case we immediately know_that docID(O) has been deleted (or never existed) without needing to check Lucene for the following reason. If there's no earlier_operation on docID(O) then this is clear, so suppose instead that the preceding operation on docID(O) is O':_1. The first invariant above tells us that {@literal seqno(O') <= MSU(O) <= LCP} so we have already applied O' to Lucene._2. Also {@literal MSU(O) <= MSU <= LCP < seqno(O)} (we discard O if {@literal seqno(O) <= LCP}) so the second invariant applies,_meaning that the O' was a delete._<p>_Therefore, if {@literal MSU <= LCP < seqno(O)} we know that O can safely be optimized with and added to lucene with addDocument._Moreover, operations that are optimized using the MSU optimization must not be processed twice as this will create duplicates_in Lucene. To avoid this we check the local checkpoint tracker to see if an operation was already processed.__@see #initializeMaxSeqNoOfUpdatesOrDeletes()_@see #advanceMaxSeqNoOfUpdatesOrDeletes(long);public final long getMaxSeqNoOfUpdatesOrDeletes() {_        return maxSeqNoOfUpdatesOrDeletes.get()__    };returns,the,maximum,sequence,number,of,either,update,or,delete,operations,have,been,processed,in,this,engine,or,the,sequence,number,from,link,advance,max,seq,no,of,updates,or,deletes,long,an,index,request,is,considered,as,an,update,operation,if,it,overwrites,the,existing,documents,in,lucene,index,with,the,same,document,id,p,a,note,on,the,optimization,using,for,each,operation,o,the,key,invariants,are,ol,li,i1,there,is,no,operation,on,doc,id,o,with,seqno,that,is,literal,msu,o,and,seqno,o,li,li,i2,if,literal,msu,o,seqno,o,then,doc,id,o,did,not,exist,when,o,was,applied,more,precisely,if,there,is,any,o,with,literal,seqno,o,seqno,o,and,doc,id,o,doc,id,o,then,the,one,with,the,greatest,seqno,is,a,delete,li,ol,p,when,a,receiving,shard,either,a,replica,or,a,follower,receives,an,operation,o,it,must,first,ensure,its,own,msu,at,least,msu,o,and,then,compares,its,msu,to,its,local,checkpoint,lcp,if,literal,lcp,msu,then,there,s,a,gap,there,may,be,some,operations,that,act,on,doc,id,o,about,which,we,do,not,yet,know,so,we,cannot,perform,an,add,note,this,also,covers,the,case,where,a,future,operation,o,with,literal,seq,no,o,seq,no,o,and,doc,id,o,doc,id,o,is,processed,before,o,in,that,case,msu,o,is,at,least,seqno,o,and,this,means,literal,msu,seq,no,o,seq,no,o,lcp,because,o,wasn,t,processed,yet,p,however,if,literal,msu,lcp,then,there,is,no,gap,we,have,processed,every,literal,operation,lcp,and,no,operation,o,with,literal,seqno,o,lcp,and,seqno,o,seqno,o,also,has,doc,id,o,doc,id,o,because,such,an,operation,would,have,literal,seqno,o,lcp,msu,msu,o,which,contradicts,the,first,invariant,furthermore,in,this,case,we,immediately,know,that,doc,id,o,has,been,deleted,or,never,existed,without,needing,to,check,lucene,for,the,following,reason,if,there,s,no,earlier,operation,on,doc,id,o,then,this,is,clear,so,suppose,instead,that,the,preceding,operation,on,doc,id,o,is,o,1,the,first,invariant,above,tells,us,that,literal,seqno,o,msu,o,lcp,so,we,have,already,applied,o,to,lucene,2,also,literal,msu,o,msu,lcp,seqno,o,we,discard,o,if,literal,seqno,o,lcp,so,the,second,invariant,applies,meaning,that,the,o,was,a,delete,p,therefore,if,literal,msu,lcp,seqno,o,we,know,that,o,can,safely,be,optimized,with,and,added,to,lucene,with,add,document,moreover,operations,that,are,optimized,using,the,msu,optimization,must,not,be,processed,twice,as,this,will,create,duplicates,in,lucene,to,avoid,this,we,check,the,local,checkpoint,tracker,to,see,if,an,operation,was,already,processed,see,initialize,max,seq,no,of,updates,or,deletes,see,advance,max,seq,no,of,updates,or,deletes,long;public,final,long,get,max,seq,no,of,updates,or,deletes,return,max,seq,no,of,updates,or,deletes,get
Engine -> public final long getMaxSeqNoOfUpdatesOrDeletes();1544545090;Returns the maximum sequence number of either update or delete operations have been processed in this engine_or the sequence number from {@link #advanceMaxSeqNoOfUpdatesOrDeletes(long)}. An index request is considered_as an update operation if it overwrites the existing documents in Lucene index with the same document id._<p>_A note on the optimization using max_seq_no_of_updates_or_deletes:_For each operation O, the key invariants are:_<ol>_<li> I1: There is no operation on docID(O) with seqno that is {@literal > MSU(O) and < seqno(O)} </li>_<li> I2: If {@literal MSU(O) < seqno(O)} then docID(O) did not exist when O was applied_ more precisely, if there is any O'_with {@literal seqno(O') < seqno(O) and docID(O') = docID(O)} then the one with the greatest seqno is a delete.</li>_</ol>_<p>_When a receiving shard (either a replica or a follower) receives an operation O, it must first ensure its own MSU at least MSU(O),_and then compares its MSU to its local checkpoint (LCP). If {@literal LCP < MSU} then there's a gap: there may be some operations_that act on docID(O) about which we do not yet know, so we cannot perform an add. Note this also covers the case where a future_operation O' with {@literal seqNo(O') > seqNo(O) and docId(O') = docID(O)} is processed before O. In that case MSU(O') is at least_seqno(O') and this means {@literal MSU >= seqNo(O') > seqNo(O) > LCP} (because O wasn't processed yet)._<p>_However, if {@literal MSU <= LCP} then there is no gap: we have processed every {@literal operation <= LCP}, and no operation O'_with {@literal seqno(O') > LCP and seqno(O') < seqno(O) also has docID(O') = docID(O)}, because such an operation would have_{@literal seqno(O') > LCP >= MSU >= MSU(O)} which contradicts the first invariant. Furthermore in this case we immediately know_that docID(O) has been deleted (or never existed) without needing to check Lucene for the following reason. If there's no earlier_operation on docID(O) then this is clear, so suppose instead that the preceding operation on docID(O) is O':_1. The first invariant above tells us that {@literal seqno(O') <= MSU(O) <= LCP} so we have already applied O' to Lucene._2. Also {@literal MSU(O) <= MSU <= LCP < seqno(O)} (we discard O if {@literal seqno(O) <= LCP}) so the second invariant applies,_meaning that the O' was a delete._<p>_Therefore, if {@literal MSU <= LCP < seqno(O)} we know that O can safely be optimized with and added to lucene with addDocument._Moreover, operations that are optimized using the MSU optimization must not be processed twice as this will create duplicates_in Lucene. To avoid this we check the local checkpoint tracker to see if an operation was already processed.__@see #initializeMaxSeqNoOfUpdatesOrDeletes()_@see #advanceMaxSeqNoOfUpdatesOrDeletes(long);public final long getMaxSeqNoOfUpdatesOrDeletes() {_        return maxSeqNoOfUpdatesOrDeletes.get()__    };returns,the,maximum,sequence,number,of,either,update,or,delete,operations,have,been,processed,in,this,engine,or,the,sequence,number,from,link,advance,max,seq,no,of,updates,or,deletes,long,an,index,request,is,considered,as,an,update,operation,if,it,overwrites,the,existing,documents,in,lucene,index,with,the,same,document,id,p,a,note,on,the,optimization,using,for,each,operation,o,the,key,invariants,are,ol,li,i1,there,is,no,operation,on,doc,id,o,with,seqno,that,is,literal,msu,o,and,seqno,o,li,li,i2,if,literal,msu,o,seqno,o,then,doc,id,o,did,not,exist,when,o,was,applied,more,precisely,if,there,is,any,o,with,literal,seqno,o,seqno,o,and,doc,id,o,doc,id,o,then,the,one,with,the,greatest,seqno,is,a,delete,li,ol,p,when,a,receiving,shard,either,a,replica,or,a,follower,receives,an,operation,o,it,must,first,ensure,its,own,msu,at,least,msu,o,and,then,compares,its,msu,to,its,local,checkpoint,lcp,if,literal,lcp,msu,then,there,s,a,gap,there,may,be,some,operations,that,act,on,doc,id,o,about,which,we,do,not,yet,know,so,we,cannot,perform,an,add,note,this,also,covers,the,case,where,a,future,operation,o,with,literal,seq,no,o,seq,no,o,and,doc,id,o,doc,id,o,is,processed,before,o,in,that,case,msu,o,is,at,least,seqno,o,and,this,means,literal,msu,seq,no,o,seq,no,o,lcp,because,o,wasn,t,processed,yet,p,however,if,literal,msu,lcp,then,there,is,no,gap,we,have,processed,every,literal,operation,lcp,and,no,operation,o,with,literal,seqno,o,lcp,and,seqno,o,seqno,o,also,has,doc,id,o,doc,id,o,because,such,an,operation,would,have,literal,seqno,o,lcp,msu,msu,o,which,contradicts,the,first,invariant,furthermore,in,this,case,we,immediately,know,that,doc,id,o,has,been,deleted,or,never,existed,without,needing,to,check,lucene,for,the,following,reason,if,there,s,no,earlier,operation,on,doc,id,o,then,this,is,clear,so,suppose,instead,that,the,preceding,operation,on,doc,id,o,is,o,1,the,first,invariant,above,tells,us,that,literal,seqno,o,msu,o,lcp,so,we,have,already,applied,o,to,lucene,2,also,literal,msu,o,msu,lcp,seqno,o,we,discard,o,if,literal,seqno,o,lcp,so,the,second,invariant,applies,meaning,that,the,o,was,a,delete,p,therefore,if,literal,msu,lcp,seqno,o,we,know,that,o,can,safely,be,optimized,with,and,added,to,lucene,with,add,document,moreover,operations,that,are,optimized,using,the,msu,optimization,must,not,be,processed,twice,as,this,will,create,duplicates,in,lucene,to,avoid,this,we,check,the,local,checkpoint,tracker,to,see,if,an,operation,was,already,processed,see,initialize,max,seq,no,of,updates,or,deletes,see,advance,max,seq,no,of,updates,or,deletes,long;public,final,long,get,max,seq,no,of,updates,or,deletes,return,max,seq,no,of,updates,or,deletes,get
Engine -> public final long getMaxSeqNoOfUpdatesOrDeletes();1544684920;Returns the maximum sequence number of either update or delete operations have been processed in this engine_or the sequence number from {@link #advanceMaxSeqNoOfUpdatesOrDeletes(long)}. An index request is considered_as an update operation if it overwrites the existing documents in Lucene index with the same document id._<p>_A note on the optimization using max_seq_no_of_updates_or_deletes:_For each operation O, the key invariants are:_<ol>_<li> I1: There is no operation on docID(O) with seqno that is {@literal > MSU(O) and < seqno(O)} </li>_<li> I2: If {@literal MSU(O) < seqno(O)} then docID(O) did not exist when O was applied_ more precisely, if there is any O'_with {@literal seqno(O') < seqno(O) and docID(O') = docID(O)} then the one with the greatest seqno is a delete.</li>_</ol>_<p>_When a receiving shard (either a replica or a follower) receives an operation O, it must first ensure its own MSU at least MSU(O),_and then compares its MSU to its local checkpoint (LCP). If {@literal LCP < MSU} then there's a gap: there may be some operations_that act on docID(O) about which we do not yet know, so we cannot perform an add. Note this also covers the case where a future_operation O' with {@literal seqNo(O') > seqNo(O) and docId(O') = docID(O)} is processed before O. In that case MSU(O') is at least_seqno(O') and this means {@literal MSU >= seqNo(O') > seqNo(O) > LCP} (because O wasn't processed yet)._<p>_However, if {@literal MSU <= LCP} then there is no gap: we have processed every {@literal operation <= LCP}, and no operation O'_with {@literal seqno(O') > LCP and seqno(O') < seqno(O) also has docID(O') = docID(O)}, because such an operation would have_{@literal seqno(O') > LCP >= MSU >= MSU(O)} which contradicts the first invariant. Furthermore in this case we immediately know_that docID(O) has been deleted (or never existed) without needing to check Lucene for the following reason. If there's no earlier_operation on docID(O) then this is clear, so suppose instead that the preceding operation on docID(O) is O':_1. The first invariant above tells us that {@literal seqno(O') <= MSU(O) <= LCP} so we have already applied O' to Lucene._2. Also {@literal MSU(O) <= MSU <= LCP < seqno(O)} (we discard O if {@literal seqno(O) <= LCP}) so the second invariant applies,_meaning that the O' was a delete._<p>_Therefore, if {@literal MSU <= LCP < seqno(O)} we know that O can safely be optimized with and added to lucene with addDocument._Moreover, operations that are optimized using the MSU optimization must not be processed twice as this will create duplicates_in Lucene. To avoid this we check the local checkpoint tracker to see if an operation was already processed.__@see #initializeMaxSeqNoOfUpdatesOrDeletes()_@see #advanceMaxSeqNoOfUpdatesOrDeletes(long);public final long getMaxSeqNoOfUpdatesOrDeletes() {_        return maxSeqNoOfUpdatesOrDeletes.get()__    };returns,the,maximum,sequence,number,of,either,update,or,delete,operations,have,been,processed,in,this,engine,or,the,sequence,number,from,link,advance,max,seq,no,of,updates,or,deletes,long,an,index,request,is,considered,as,an,update,operation,if,it,overwrites,the,existing,documents,in,lucene,index,with,the,same,document,id,p,a,note,on,the,optimization,using,for,each,operation,o,the,key,invariants,are,ol,li,i1,there,is,no,operation,on,doc,id,o,with,seqno,that,is,literal,msu,o,and,seqno,o,li,li,i2,if,literal,msu,o,seqno,o,then,doc,id,o,did,not,exist,when,o,was,applied,more,precisely,if,there,is,any,o,with,literal,seqno,o,seqno,o,and,doc,id,o,doc,id,o,then,the,one,with,the,greatest,seqno,is,a,delete,li,ol,p,when,a,receiving,shard,either,a,replica,or,a,follower,receives,an,operation,o,it,must,first,ensure,its,own,msu,at,least,msu,o,and,then,compares,its,msu,to,its,local,checkpoint,lcp,if,literal,lcp,msu,then,there,s,a,gap,there,may,be,some,operations,that,act,on,doc,id,o,about,which,we,do,not,yet,know,so,we,cannot,perform,an,add,note,this,also,covers,the,case,where,a,future,operation,o,with,literal,seq,no,o,seq,no,o,and,doc,id,o,doc,id,o,is,processed,before,o,in,that,case,msu,o,is,at,least,seqno,o,and,this,means,literal,msu,seq,no,o,seq,no,o,lcp,because,o,wasn,t,processed,yet,p,however,if,literal,msu,lcp,then,there,is,no,gap,we,have,processed,every,literal,operation,lcp,and,no,operation,o,with,literal,seqno,o,lcp,and,seqno,o,seqno,o,also,has,doc,id,o,doc,id,o,because,such,an,operation,would,have,literal,seqno,o,lcp,msu,msu,o,which,contradicts,the,first,invariant,furthermore,in,this,case,we,immediately,know,that,doc,id,o,has,been,deleted,or,never,existed,without,needing,to,check,lucene,for,the,following,reason,if,there,s,no,earlier,operation,on,doc,id,o,then,this,is,clear,so,suppose,instead,that,the,preceding,operation,on,doc,id,o,is,o,1,the,first,invariant,above,tells,us,that,literal,seqno,o,msu,o,lcp,so,we,have,already,applied,o,to,lucene,2,also,literal,msu,o,msu,lcp,seqno,o,we,discard,o,if,literal,seqno,o,lcp,so,the,second,invariant,applies,meaning,that,the,o,was,a,delete,p,therefore,if,literal,msu,lcp,seqno,o,we,know,that,o,can,safely,be,optimized,with,and,added,to,lucene,with,add,document,moreover,operations,that,are,optimized,using,the,msu,optimization,must,not,be,processed,twice,as,this,will,create,duplicates,in,lucene,to,avoid,this,we,check,the,local,checkpoint,tracker,to,see,if,an,operation,was,already,processed,see,initialize,max,seq,no,of,updates,or,deletes,see,advance,max,seq,no,of,updates,or,deletes,long;public,final,long,get,max,seq,no,of,updates,or,deletes,return,max,seq,no,of,updates,or,deletes,get
Engine -> public final long getMaxSeqNoOfUpdatesOrDeletes();1545140118;Returns the maximum sequence number of either update or delete operations have been processed in this engine_or the sequence number from {@link #advanceMaxSeqNoOfUpdatesOrDeletes(long)}. An index request is considered_as an update operation if it overwrites the existing documents in Lucene index with the same document id._<p>_A note on the optimization using max_seq_no_of_updates_or_deletes:_For each operation O, the key invariants are:_<ol>_<li> I1: There is no operation on docID(O) with seqno that is {@literal > MSU(O) and < seqno(O)} </li>_<li> I2: If {@literal MSU(O) < seqno(O)} then docID(O) did not exist when O was applied_ more precisely, if there is any O'_with {@literal seqno(O') < seqno(O) and docID(O') = docID(O)} then the one with the greatest seqno is a delete.</li>_</ol>_<p>_When a receiving shard (either a replica or a follower) receives an operation O, it must first ensure its own MSU at least MSU(O),_and then compares its MSU to its local checkpoint (LCP). If {@literal LCP < MSU} then there's a gap: there may be some operations_that act on docID(O) about which we do not yet know, so we cannot perform an add. Note this also covers the case where a future_operation O' with {@literal seqNo(O') > seqNo(O) and docId(O') = docID(O)} is processed before O. In that case MSU(O') is at least_seqno(O') and this means {@literal MSU >= seqNo(O') > seqNo(O) > LCP} (because O wasn't processed yet)._<p>_However, if {@literal MSU <= LCP} then there is no gap: we have processed every {@literal operation <= LCP}, and no operation O'_with {@literal seqno(O') > LCP and seqno(O') < seqno(O) also has docID(O') = docID(O)}, because such an operation would have_{@literal seqno(O') > LCP >= MSU >= MSU(O)} which contradicts the first invariant. Furthermore in this case we immediately know_that docID(O) has been deleted (or never existed) without needing to check Lucene for the following reason. If there's no earlier_operation on docID(O) then this is clear, so suppose instead that the preceding operation on docID(O) is O':_1. The first invariant above tells us that {@literal seqno(O') <= MSU(O) <= LCP} so we have already applied O' to Lucene._2. Also {@literal MSU(O) <= MSU <= LCP < seqno(O)} (we discard O if {@literal seqno(O) <= LCP}) so the second invariant applies,_meaning that the O' was a delete._<p>_Therefore, if {@literal MSU <= LCP < seqno(O)} we know that O can safely be optimized with and added to lucene with addDocument._Moreover, operations that are optimized using the MSU optimization must not be processed twice as this will create duplicates_in Lucene. To avoid this we check the local checkpoint tracker to see if an operation was already processed.__@see #initializeMaxSeqNoOfUpdatesOrDeletes()_@see #advanceMaxSeqNoOfUpdatesOrDeletes(long);public final long getMaxSeqNoOfUpdatesOrDeletes() {_        return maxSeqNoOfUpdatesOrDeletes.get()__    };returns,the,maximum,sequence,number,of,either,update,or,delete,operations,have,been,processed,in,this,engine,or,the,sequence,number,from,link,advance,max,seq,no,of,updates,or,deletes,long,an,index,request,is,considered,as,an,update,operation,if,it,overwrites,the,existing,documents,in,lucene,index,with,the,same,document,id,p,a,note,on,the,optimization,using,for,each,operation,o,the,key,invariants,are,ol,li,i1,there,is,no,operation,on,doc,id,o,with,seqno,that,is,literal,msu,o,and,seqno,o,li,li,i2,if,literal,msu,o,seqno,o,then,doc,id,o,did,not,exist,when,o,was,applied,more,precisely,if,there,is,any,o,with,literal,seqno,o,seqno,o,and,doc,id,o,doc,id,o,then,the,one,with,the,greatest,seqno,is,a,delete,li,ol,p,when,a,receiving,shard,either,a,replica,or,a,follower,receives,an,operation,o,it,must,first,ensure,its,own,msu,at,least,msu,o,and,then,compares,its,msu,to,its,local,checkpoint,lcp,if,literal,lcp,msu,then,there,s,a,gap,there,may,be,some,operations,that,act,on,doc,id,o,about,which,we,do,not,yet,know,so,we,cannot,perform,an,add,note,this,also,covers,the,case,where,a,future,operation,o,with,literal,seq,no,o,seq,no,o,and,doc,id,o,doc,id,o,is,processed,before,o,in,that,case,msu,o,is,at,least,seqno,o,and,this,means,literal,msu,seq,no,o,seq,no,o,lcp,because,o,wasn,t,processed,yet,p,however,if,literal,msu,lcp,then,there,is,no,gap,we,have,processed,every,literal,operation,lcp,and,no,operation,o,with,literal,seqno,o,lcp,and,seqno,o,seqno,o,also,has,doc,id,o,doc,id,o,because,such,an,operation,would,have,literal,seqno,o,lcp,msu,msu,o,which,contradicts,the,first,invariant,furthermore,in,this,case,we,immediately,know,that,doc,id,o,has,been,deleted,or,never,existed,without,needing,to,check,lucene,for,the,following,reason,if,there,s,no,earlier,operation,on,doc,id,o,then,this,is,clear,so,suppose,instead,that,the,preceding,operation,on,doc,id,o,is,o,1,the,first,invariant,above,tells,us,that,literal,seqno,o,msu,o,lcp,so,we,have,already,applied,o,to,lucene,2,also,literal,msu,o,msu,lcp,seqno,o,we,discard,o,if,literal,seqno,o,lcp,so,the,second,invariant,applies,meaning,that,the,o,was,a,delete,p,therefore,if,literal,msu,lcp,seqno,o,we,know,that,o,can,safely,be,optimized,with,and,added,to,lucene,with,add,document,moreover,operations,that,are,optimized,using,the,msu,optimization,must,not,be,processed,twice,as,this,will,create,duplicates,in,lucene,to,avoid,this,we,check,the,local,checkpoint,tracker,to,see,if,an,operation,was,already,processed,see,initialize,max,seq,no,of,updates,or,deletes,see,advance,max,seq,no,of,updates,or,deletes,long;public,final,long,get,max,seq,no,of,updates,or,deletes,return,max,seq,no,of,updates,or,deletes,get
Engine -> public final long getMaxSeqNoOfUpdatesOrDeletes();1545221705;Returns the maximum sequence number of either update or delete operations have been processed in this engine_or the sequence number from {@link #advanceMaxSeqNoOfUpdatesOrDeletes(long)}. An index request is considered_as an update operation if it overwrites the existing documents in Lucene index with the same document id._<p>_A note on the optimization using max_seq_no_of_updates_or_deletes:_For each operation O, the key invariants are:_<ol>_<li> I1: There is no operation on docID(O) with seqno that is {@literal > MSU(O) and < seqno(O)} </li>_<li> I2: If {@literal MSU(O) < seqno(O)} then docID(O) did not exist when O was applied_ more precisely, if there is any O'_with {@literal seqno(O') < seqno(O) and docID(O') = docID(O)} then the one with the greatest seqno is a delete.</li>_</ol>_<p>_When a receiving shard (either a replica or a follower) receives an operation O, it must first ensure its own MSU at least MSU(O),_and then compares its MSU to its local checkpoint (LCP). If {@literal LCP < MSU} then there's a gap: there may be some operations_that act on docID(O) about which we do not yet know, so we cannot perform an add. Note this also covers the case where a future_operation O' with {@literal seqNo(O') > seqNo(O) and docId(O') = docID(O)} is processed before O. In that case MSU(O') is at least_seqno(O') and this means {@literal MSU >= seqNo(O') > seqNo(O) > LCP} (because O wasn't processed yet)._<p>_However, if {@literal MSU <= LCP} then there is no gap: we have processed every {@literal operation <= LCP}, and no operation O'_with {@literal seqno(O') > LCP and seqno(O') < seqno(O) also has docID(O') = docID(O)}, because such an operation would have_{@literal seqno(O') > LCP >= MSU >= MSU(O)} which contradicts the first invariant. Furthermore in this case we immediately know_that docID(O) has been deleted (or never existed) without needing to check Lucene for the following reason. If there's no earlier_operation on docID(O) then this is clear, so suppose instead that the preceding operation on docID(O) is O':_1. The first invariant above tells us that {@literal seqno(O') <= MSU(O) <= LCP} so we have already applied O' to Lucene._2. Also {@literal MSU(O) <= MSU <= LCP < seqno(O)} (we discard O if {@literal seqno(O) <= LCP}) so the second invariant applies,_meaning that the O' was a delete._<p>_Therefore, if {@literal MSU <= LCP < seqno(O)} we know that O can safely be optimized with and added to lucene with addDocument._Moreover, operations that are optimized using the MSU optimization must not be processed twice as this will create duplicates_in Lucene. To avoid this we check the local checkpoint tracker to see if an operation was already processed.__@see #initializeMaxSeqNoOfUpdatesOrDeletes()_@see #advanceMaxSeqNoOfUpdatesOrDeletes(long);public final long getMaxSeqNoOfUpdatesOrDeletes() {_        return maxSeqNoOfUpdatesOrDeletes.get()__    };returns,the,maximum,sequence,number,of,either,update,or,delete,operations,have,been,processed,in,this,engine,or,the,sequence,number,from,link,advance,max,seq,no,of,updates,or,deletes,long,an,index,request,is,considered,as,an,update,operation,if,it,overwrites,the,existing,documents,in,lucene,index,with,the,same,document,id,p,a,note,on,the,optimization,using,for,each,operation,o,the,key,invariants,are,ol,li,i1,there,is,no,operation,on,doc,id,o,with,seqno,that,is,literal,msu,o,and,seqno,o,li,li,i2,if,literal,msu,o,seqno,o,then,doc,id,o,did,not,exist,when,o,was,applied,more,precisely,if,there,is,any,o,with,literal,seqno,o,seqno,o,and,doc,id,o,doc,id,o,then,the,one,with,the,greatest,seqno,is,a,delete,li,ol,p,when,a,receiving,shard,either,a,replica,or,a,follower,receives,an,operation,o,it,must,first,ensure,its,own,msu,at,least,msu,o,and,then,compares,its,msu,to,its,local,checkpoint,lcp,if,literal,lcp,msu,then,there,s,a,gap,there,may,be,some,operations,that,act,on,doc,id,o,about,which,we,do,not,yet,know,so,we,cannot,perform,an,add,note,this,also,covers,the,case,where,a,future,operation,o,with,literal,seq,no,o,seq,no,o,and,doc,id,o,doc,id,o,is,processed,before,o,in,that,case,msu,o,is,at,least,seqno,o,and,this,means,literal,msu,seq,no,o,seq,no,o,lcp,because,o,wasn,t,processed,yet,p,however,if,literal,msu,lcp,then,there,is,no,gap,we,have,processed,every,literal,operation,lcp,and,no,operation,o,with,literal,seqno,o,lcp,and,seqno,o,seqno,o,also,has,doc,id,o,doc,id,o,because,such,an,operation,would,have,literal,seqno,o,lcp,msu,msu,o,which,contradicts,the,first,invariant,furthermore,in,this,case,we,immediately,know,that,doc,id,o,has,been,deleted,or,never,existed,without,needing,to,check,lucene,for,the,following,reason,if,there,s,no,earlier,operation,on,doc,id,o,then,this,is,clear,so,suppose,instead,that,the,preceding,operation,on,doc,id,o,is,o,1,the,first,invariant,above,tells,us,that,literal,seqno,o,msu,o,lcp,so,we,have,already,applied,o,to,lucene,2,also,literal,msu,o,msu,lcp,seqno,o,we,discard,o,if,literal,seqno,o,lcp,so,the,second,invariant,applies,meaning,that,the,o,was,a,delete,p,therefore,if,literal,msu,lcp,seqno,o,we,know,that,o,can,safely,be,optimized,with,and,added,to,lucene,with,add,document,moreover,operations,that,are,optimized,using,the,msu,optimization,must,not,be,processed,twice,as,this,will,create,duplicates,in,lucene,to,avoid,this,we,check,the,local,checkpoint,tracker,to,see,if,an,operation,was,already,processed,see,initialize,max,seq,no,of,updates,or,deletes,see,advance,max,seq,no,of,updates,or,deletes,long;public,final,long,get,max,seq,no,of,updates,or,deletes,return,max,seq,no,of,updates,or,deletes,get
Engine -> public final long getMaxSeqNoOfUpdatesOrDeletes();1547332999;Returns the maximum sequence number of either update or delete operations have been processed in this engine_or the sequence number from {@link #advanceMaxSeqNoOfUpdatesOrDeletes(long)}. An index request is considered_as an update operation if it overwrites the existing documents in Lucene index with the same document id._<p>_A note on the optimization using max_seq_no_of_updates_or_deletes:_For each operation O, the key invariants are:_<ol>_<li> I1: There is no operation on docID(O) with seqno that is {@literal > MSU(O) and < seqno(O)} </li>_<li> I2: If {@literal MSU(O) < seqno(O)} then docID(O) did not exist when O was applied_ more precisely, if there is any O'_with {@literal seqno(O') < seqno(O) and docID(O') = docID(O)} then the one with the greatest seqno is a delete.</li>_</ol>_<p>_When a receiving shard (either a replica or a follower) receives an operation O, it must first ensure its own MSU at least MSU(O),_and then compares its MSU to its local checkpoint (LCP). If {@literal LCP < MSU} then there's a gap: there may be some operations_that act on docID(O) about which we do not yet know, so we cannot perform an add. Note this also covers the case where a future_operation O' with {@literal seqNo(O') > seqNo(O) and docId(O') = docID(O)} is processed before O. In that case MSU(O') is at least_seqno(O') and this means {@literal MSU >= seqNo(O') > seqNo(O) > LCP} (because O wasn't processed yet)._<p>_However, if {@literal MSU <= LCP} then there is no gap: we have processed every {@literal operation <= LCP}, and no operation O'_with {@literal seqno(O') > LCP and seqno(O') < seqno(O) also has docID(O') = docID(O)}, because such an operation would have_{@literal seqno(O') > LCP >= MSU >= MSU(O)} which contradicts the first invariant. Furthermore in this case we immediately know_that docID(O) has been deleted (or never existed) without needing to check Lucene for the following reason. If there's no earlier_operation on docID(O) then this is clear, so suppose instead that the preceding operation on docID(O) is O':_1. The first invariant above tells us that {@literal seqno(O') <= MSU(O) <= LCP} so we have already applied O' to Lucene._2. Also {@literal MSU(O) <= MSU <= LCP < seqno(O)} (we discard O if {@literal seqno(O) <= LCP}) so the second invariant applies,_meaning that the O' was a delete._<p>_Therefore, if {@literal MSU <= LCP < seqno(O)} we know that O can safely be optimized with and added to lucene with addDocument._Moreover, operations that are optimized using the MSU optimization must not be processed twice as this will create duplicates_in Lucene. To avoid this we check the local checkpoint tracker to see if an operation was already processed.__@see #initializeMaxSeqNoOfUpdatesOrDeletes()_@see #advanceMaxSeqNoOfUpdatesOrDeletes(long);public final long getMaxSeqNoOfUpdatesOrDeletes() {_        return maxSeqNoOfUpdatesOrDeletes.get()__    };returns,the,maximum,sequence,number,of,either,update,or,delete,operations,have,been,processed,in,this,engine,or,the,sequence,number,from,link,advance,max,seq,no,of,updates,or,deletes,long,an,index,request,is,considered,as,an,update,operation,if,it,overwrites,the,existing,documents,in,lucene,index,with,the,same,document,id,p,a,note,on,the,optimization,using,for,each,operation,o,the,key,invariants,are,ol,li,i1,there,is,no,operation,on,doc,id,o,with,seqno,that,is,literal,msu,o,and,seqno,o,li,li,i2,if,literal,msu,o,seqno,o,then,doc,id,o,did,not,exist,when,o,was,applied,more,precisely,if,there,is,any,o,with,literal,seqno,o,seqno,o,and,doc,id,o,doc,id,o,then,the,one,with,the,greatest,seqno,is,a,delete,li,ol,p,when,a,receiving,shard,either,a,replica,or,a,follower,receives,an,operation,o,it,must,first,ensure,its,own,msu,at,least,msu,o,and,then,compares,its,msu,to,its,local,checkpoint,lcp,if,literal,lcp,msu,then,there,s,a,gap,there,may,be,some,operations,that,act,on,doc,id,o,about,which,we,do,not,yet,know,so,we,cannot,perform,an,add,note,this,also,covers,the,case,where,a,future,operation,o,with,literal,seq,no,o,seq,no,o,and,doc,id,o,doc,id,o,is,processed,before,o,in,that,case,msu,o,is,at,least,seqno,o,and,this,means,literal,msu,seq,no,o,seq,no,o,lcp,because,o,wasn,t,processed,yet,p,however,if,literal,msu,lcp,then,there,is,no,gap,we,have,processed,every,literal,operation,lcp,and,no,operation,o,with,literal,seqno,o,lcp,and,seqno,o,seqno,o,also,has,doc,id,o,doc,id,o,because,such,an,operation,would,have,literal,seqno,o,lcp,msu,msu,o,which,contradicts,the,first,invariant,furthermore,in,this,case,we,immediately,know,that,doc,id,o,has,been,deleted,or,never,existed,without,needing,to,check,lucene,for,the,following,reason,if,there,s,no,earlier,operation,on,doc,id,o,then,this,is,clear,so,suppose,instead,that,the,preceding,operation,on,doc,id,o,is,o,1,the,first,invariant,above,tells,us,that,literal,seqno,o,msu,o,lcp,so,we,have,already,applied,o,to,lucene,2,also,literal,msu,o,msu,lcp,seqno,o,we,discard,o,if,literal,seqno,o,lcp,so,the,second,invariant,applies,meaning,that,the,o,was,a,delete,p,therefore,if,literal,msu,lcp,seqno,o,we,know,that,o,can,safely,be,optimized,with,and,added,to,lucene,with,add,document,moreover,operations,that,are,optimized,using,the,msu,optimization,must,not,be,processed,twice,as,this,will,create,duplicates,in,lucene,to,avoid,this,we,check,the,local,checkpoint,tracker,to,see,if,an,operation,was,already,processed,see,initialize,max,seq,no,of,updates,or,deletes,see,advance,max,seq,no,of,updates,or,deletes,long;public,final,long,get,max,seq,no,of,updates,or,deletes,return,max,seq,no,of,updates,or,deletes,get
Engine -> public final long getMaxSeqNoOfUpdatesOrDeletes();1548771485;Returns the maximum sequence number of either update or delete operations have been processed in this engine_or the sequence number from {@link #advanceMaxSeqNoOfUpdatesOrDeletes(long)}. An index request is considered_as an update operation if it overwrites the existing documents in Lucene index with the same document id._<p>_A note on the optimization using max_seq_no_of_updates_or_deletes:_For each operation O, the key invariants are:_<ol>_<li> I1: There is no operation on docID(O) with seqno that is {@literal > MSU(O) and < seqno(O)} </li>_<li> I2: If {@literal MSU(O) < seqno(O)} then docID(O) did not exist when O was applied_ more precisely, if there is any O'_with {@literal seqno(O') < seqno(O) and docID(O') = docID(O)} then the one with the greatest seqno is a delete.</li>_</ol>_<p>_When a receiving shard (either a replica or a follower) receives an operation O, it must first ensure its own MSU at least MSU(O),_and then compares its MSU to its local checkpoint (LCP). If {@literal LCP < MSU} then there's a gap: there may be some operations_that act on docID(O) about which we do not yet know, so we cannot perform an add. Note this also covers the case where a future_operation O' with {@literal seqNo(O') > seqNo(O) and docId(O') = docID(O)} is processed before O. In that case MSU(O') is at least_seqno(O') and this means {@literal MSU >= seqNo(O') > seqNo(O) > LCP} (because O wasn't processed yet)._<p>_However, if {@literal MSU <= LCP} then there is no gap: we have processed every {@literal operation <= LCP}, and no operation O'_with {@literal seqno(O') > LCP and seqno(O') < seqno(O) also has docID(O') = docID(O)}, because such an operation would have_{@literal seqno(O') > LCP >= MSU >= MSU(O)} which contradicts the first invariant. Furthermore in this case we immediately know_that docID(O) has been deleted (or never existed) without needing to check Lucene for the following reason. If there's no earlier_operation on docID(O) then this is clear, so suppose instead that the preceding operation on docID(O) is O':_1. The first invariant above tells us that {@literal seqno(O') <= MSU(O) <= LCP} so we have already applied O' to Lucene._2. Also {@literal MSU(O) <= MSU <= LCP < seqno(O)} (we discard O if {@literal seqno(O) <= LCP}) so the second invariant applies,_meaning that the O' was a delete._<p>_Therefore, if {@literal MSU <= LCP < seqno(O)} we know that O can safely be optimized with and added to lucene with addDocument._Moreover, operations that are optimized using the MSU optimization must not be processed twice as this will create duplicates_in Lucene. To avoid this we check the local checkpoint tracker to see if an operation was already processed.__@see #initializeMaxSeqNoOfUpdatesOrDeletes()_@see #advanceMaxSeqNoOfUpdatesOrDeletes(long);public final long getMaxSeqNoOfUpdatesOrDeletes() {_        return maxSeqNoOfUpdatesOrDeletes.get()__    };returns,the,maximum,sequence,number,of,either,update,or,delete,operations,have,been,processed,in,this,engine,or,the,sequence,number,from,link,advance,max,seq,no,of,updates,or,deletes,long,an,index,request,is,considered,as,an,update,operation,if,it,overwrites,the,existing,documents,in,lucene,index,with,the,same,document,id,p,a,note,on,the,optimization,using,for,each,operation,o,the,key,invariants,are,ol,li,i1,there,is,no,operation,on,doc,id,o,with,seqno,that,is,literal,msu,o,and,seqno,o,li,li,i2,if,literal,msu,o,seqno,o,then,doc,id,o,did,not,exist,when,o,was,applied,more,precisely,if,there,is,any,o,with,literal,seqno,o,seqno,o,and,doc,id,o,doc,id,o,then,the,one,with,the,greatest,seqno,is,a,delete,li,ol,p,when,a,receiving,shard,either,a,replica,or,a,follower,receives,an,operation,o,it,must,first,ensure,its,own,msu,at,least,msu,o,and,then,compares,its,msu,to,its,local,checkpoint,lcp,if,literal,lcp,msu,then,there,s,a,gap,there,may,be,some,operations,that,act,on,doc,id,o,about,which,we,do,not,yet,know,so,we,cannot,perform,an,add,note,this,also,covers,the,case,where,a,future,operation,o,with,literal,seq,no,o,seq,no,o,and,doc,id,o,doc,id,o,is,processed,before,o,in,that,case,msu,o,is,at,least,seqno,o,and,this,means,literal,msu,seq,no,o,seq,no,o,lcp,because,o,wasn,t,processed,yet,p,however,if,literal,msu,lcp,then,there,is,no,gap,we,have,processed,every,literal,operation,lcp,and,no,operation,o,with,literal,seqno,o,lcp,and,seqno,o,seqno,o,also,has,doc,id,o,doc,id,o,because,such,an,operation,would,have,literal,seqno,o,lcp,msu,msu,o,which,contradicts,the,first,invariant,furthermore,in,this,case,we,immediately,know,that,doc,id,o,has,been,deleted,or,never,existed,without,needing,to,check,lucene,for,the,following,reason,if,there,s,no,earlier,operation,on,doc,id,o,then,this,is,clear,so,suppose,instead,that,the,preceding,operation,on,doc,id,o,is,o,1,the,first,invariant,above,tells,us,that,literal,seqno,o,msu,o,lcp,so,we,have,already,applied,o,to,lucene,2,also,literal,msu,o,msu,lcp,seqno,o,we,discard,o,if,literal,seqno,o,lcp,so,the,second,invariant,applies,meaning,that,the,o,was,a,delete,p,therefore,if,literal,msu,lcp,seqno,o,we,know,that,o,can,safely,be,optimized,with,and,added,to,lucene,with,add,document,moreover,operations,that,are,optimized,using,the,msu,optimization,must,not,be,processed,twice,as,this,will,create,duplicates,in,lucene,to,avoid,this,we,check,the,local,checkpoint,tracker,to,see,if,an,operation,was,already,processed,see,initialize,max,seq,no,of,updates,or,deletes,see,advance,max,seq,no,of,updates,or,deletes,long;public,final,long,get,max,seq,no,of,updates,or,deletes,return,max,seq,no,of,updates,or,deletes,get
Engine -> public final long getMaxSeqNoOfUpdatesOrDeletes();1549891630;Returns the maximum sequence number of either update or delete operations have been processed in this engine_or the sequence number from {@link #advanceMaxSeqNoOfUpdatesOrDeletes(long)}. An index request is considered_as an update operation if it overwrites the existing documents in Lucene index with the same document id._<p>_A note on the optimization using max_seq_no_of_updates_or_deletes:_For each operation O, the key invariants are:_<ol>_<li> I1: There is no operation on docID(O) with seqno that is {@literal > MSU(O) and < seqno(O)} </li>_<li> I2: If {@literal MSU(O) < seqno(O)} then docID(O) did not exist when O was applied_ more precisely, if there is any O'_with {@literal seqno(O') < seqno(O) and docID(O') = docID(O)} then the one with the greatest seqno is a delete.</li>_</ol>_<p>_When a receiving shard (either a replica or a follower) receives an operation O, it must first ensure its own MSU at least MSU(O),_and then compares its MSU to its local checkpoint (LCP). If {@literal LCP < MSU} then there's a gap: there may be some operations_that act on docID(O) about which we do not yet know, so we cannot perform an add. Note this also covers the case where a future_operation O' with {@literal seqNo(O') > seqNo(O) and docId(O') = docID(O)} is processed before O. In that case MSU(O') is at least_seqno(O') and this means {@literal MSU >= seqNo(O') > seqNo(O) > LCP} (because O wasn't processed yet)._<p>_However, if {@literal MSU <= LCP} then there is no gap: we have processed every {@literal operation <= LCP}, and no operation O'_with {@literal seqno(O') > LCP and seqno(O') < seqno(O) also has docID(O') = docID(O)}, because such an operation would have_{@literal seqno(O') > LCP >= MSU >= MSU(O)} which contradicts the first invariant. Furthermore in this case we immediately know_that docID(O) has been deleted (or never existed) without needing to check Lucene for the following reason. If there's no earlier_operation on docID(O) then this is clear, so suppose instead that the preceding operation on docID(O) is O':_1. The first invariant above tells us that {@literal seqno(O') <= MSU(O) <= LCP} so we have already applied O' to Lucene._2. Also {@literal MSU(O) <= MSU <= LCP < seqno(O)} (we discard O if {@literal seqno(O) <= LCP}) so the second invariant applies,_meaning that the O' was a delete._<p>_Therefore, if {@literal MSU <= LCP < seqno(O)} we know that O can safely be optimized with and added to lucene with addDocument._Moreover, operations that are optimized using the MSU optimization must not be processed twice as this will create duplicates_in Lucene. To avoid this we check the local checkpoint tracker to see if an operation was already processed.__@see #initializeMaxSeqNoOfUpdatesOrDeletes()_@see #advanceMaxSeqNoOfUpdatesOrDeletes(long);public final long getMaxSeqNoOfUpdatesOrDeletes() {_        return maxSeqNoOfUpdatesOrDeletes.get()__    };returns,the,maximum,sequence,number,of,either,update,or,delete,operations,have,been,processed,in,this,engine,or,the,sequence,number,from,link,advance,max,seq,no,of,updates,or,deletes,long,an,index,request,is,considered,as,an,update,operation,if,it,overwrites,the,existing,documents,in,lucene,index,with,the,same,document,id,p,a,note,on,the,optimization,using,for,each,operation,o,the,key,invariants,are,ol,li,i1,there,is,no,operation,on,doc,id,o,with,seqno,that,is,literal,msu,o,and,seqno,o,li,li,i2,if,literal,msu,o,seqno,o,then,doc,id,o,did,not,exist,when,o,was,applied,more,precisely,if,there,is,any,o,with,literal,seqno,o,seqno,o,and,doc,id,o,doc,id,o,then,the,one,with,the,greatest,seqno,is,a,delete,li,ol,p,when,a,receiving,shard,either,a,replica,or,a,follower,receives,an,operation,o,it,must,first,ensure,its,own,msu,at,least,msu,o,and,then,compares,its,msu,to,its,local,checkpoint,lcp,if,literal,lcp,msu,then,there,s,a,gap,there,may,be,some,operations,that,act,on,doc,id,o,about,which,we,do,not,yet,know,so,we,cannot,perform,an,add,note,this,also,covers,the,case,where,a,future,operation,o,with,literal,seq,no,o,seq,no,o,and,doc,id,o,doc,id,o,is,processed,before,o,in,that,case,msu,o,is,at,least,seqno,o,and,this,means,literal,msu,seq,no,o,seq,no,o,lcp,because,o,wasn,t,processed,yet,p,however,if,literal,msu,lcp,then,there,is,no,gap,we,have,processed,every,literal,operation,lcp,and,no,operation,o,with,literal,seqno,o,lcp,and,seqno,o,seqno,o,also,has,doc,id,o,doc,id,o,because,such,an,operation,would,have,literal,seqno,o,lcp,msu,msu,o,which,contradicts,the,first,invariant,furthermore,in,this,case,we,immediately,know,that,doc,id,o,has,been,deleted,or,never,existed,without,needing,to,check,lucene,for,the,following,reason,if,there,s,no,earlier,operation,on,doc,id,o,then,this,is,clear,so,suppose,instead,that,the,preceding,operation,on,doc,id,o,is,o,1,the,first,invariant,above,tells,us,that,literal,seqno,o,msu,o,lcp,so,we,have,already,applied,o,to,lucene,2,also,literal,msu,o,msu,lcp,seqno,o,we,discard,o,if,literal,seqno,o,lcp,so,the,second,invariant,applies,meaning,that,the,o,was,a,delete,p,therefore,if,literal,msu,lcp,seqno,o,we,know,that,o,can,safely,be,optimized,with,and,added,to,lucene,with,add,document,moreover,operations,that,are,optimized,using,the,msu,optimization,must,not,be,processed,twice,as,this,will,create,duplicates,in,lucene,to,avoid,this,we,check,the,local,checkpoint,tracker,to,see,if,an,operation,was,already,processed,see,initialize,max,seq,no,of,updates,or,deletes,see,advance,max,seq,no,of,updates,or,deletes,long;public,final,long,get,max,seq,no,of,updates,or,deletes,return,max,seq,no,of,updates,or,deletes,get
Engine -> public final long getMaxSeqNoOfUpdatesOrDeletes();1549975032;Returns the maximum sequence number of either update or delete operations have been processed in this engine_or the sequence number from {@link #advanceMaxSeqNoOfUpdatesOrDeletes(long)}. An index request is considered_as an update operation if it overwrites the existing documents in Lucene index with the same document id._<p>_A note on the optimization using max_seq_no_of_updates_or_deletes:_For each operation O, the key invariants are:_<ol>_<li> I1: There is no operation on docID(O) with seqno that is {@literal > MSU(O) and < seqno(O)} </li>_<li> I2: If {@literal MSU(O) < seqno(O)} then docID(O) did not exist when O was applied_ more precisely, if there is any O'_with {@literal seqno(O') < seqno(O) and docID(O') = docID(O)} then the one with the greatest seqno is a delete.</li>_</ol>_<p>_When a receiving shard (either a replica or a follower) receives an operation O, it must first ensure its own MSU at least MSU(O),_and then compares its MSU to its local checkpoint (LCP). If {@literal LCP < MSU} then there's a gap: there may be some operations_that act on docID(O) about which we do not yet know, so we cannot perform an add. Note this also covers the case where a future_operation O' with {@literal seqNo(O') > seqNo(O) and docId(O') = docID(O)} is processed before O. In that case MSU(O') is at least_seqno(O') and this means {@literal MSU >= seqNo(O') > seqNo(O) > LCP} (because O wasn't processed yet)._<p>_However, if {@literal MSU <= LCP} then there is no gap: we have processed every {@literal operation <= LCP}, and no operation O'_with {@literal seqno(O') > LCP and seqno(O') < seqno(O) also has docID(O') = docID(O)}, because such an operation would have_{@literal seqno(O') > LCP >= MSU >= MSU(O)} which contradicts the first invariant. Furthermore in this case we immediately know_that docID(O) has been deleted (or never existed) without needing to check Lucene for the following reason. If there's no earlier_operation on docID(O) then this is clear, so suppose instead that the preceding operation on docID(O) is O':_1. The first invariant above tells us that {@literal seqno(O') <= MSU(O) <= LCP} so we have already applied O' to Lucene._2. Also {@literal MSU(O) <= MSU <= LCP < seqno(O)} (we discard O if {@literal seqno(O) <= LCP}) so the second invariant applies,_meaning that the O' was a delete._<p>_Therefore, if {@literal MSU <= LCP < seqno(O)} we know that O can safely be optimized with and added to lucene with addDocument._Moreover, operations that are optimized using the MSU optimization must not be processed twice as this will create duplicates_in Lucene. To avoid this we check the local checkpoint tracker to see if an operation was already processed.__@see #initializeMaxSeqNoOfUpdatesOrDeletes()_@see #advanceMaxSeqNoOfUpdatesOrDeletes(long);public final long getMaxSeqNoOfUpdatesOrDeletes() {_        return maxSeqNoOfUpdatesOrDeletes.get()__    };returns,the,maximum,sequence,number,of,either,update,or,delete,operations,have,been,processed,in,this,engine,or,the,sequence,number,from,link,advance,max,seq,no,of,updates,or,deletes,long,an,index,request,is,considered,as,an,update,operation,if,it,overwrites,the,existing,documents,in,lucene,index,with,the,same,document,id,p,a,note,on,the,optimization,using,for,each,operation,o,the,key,invariants,are,ol,li,i1,there,is,no,operation,on,doc,id,o,with,seqno,that,is,literal,msu,o,and,seqno,o,li,li,i2,if,literal,msu,o,seqno,o,then,doc,id,o,did,not,exist,when,o,was,applied,more,precisely,if,there,is,any,o,with,literal,seqno,o,seqno,o,and,doc,id,o,doc,id,o,then,the,one,with,the,greatest,seqno,is,a,delete,li,ol,p,when,a,receiving,shard,either,a,replica,or,a,follower,receives,an,operation,o,it,must,first,ensure,its,own,msu,at,least,msu,o,and,then,compares,its,msu,to,its,local,checkpoint,lcp,if,literal,lcp,msu,then,there,s,a,gap,there,may,be,some,operations,that,act,on,doc,id,o,about,which,we,do,not,yet,know,so,we,cannot,perform,an,add,note,this,also,covers,the,case,where,a,future,operation,o,with,literal,seq,no,o,seq,no,o,and,doc,id,o,doc,id,o,is,processed,before,o,in,that,case,msu,o,is,at,least,seqno,o,and,this,means,literal,msu,seq,no,o,seq,no,o,lcp,because,o,wasn,t,processed,yet,p,however,if,literal,msu,lcp,then,there,is,no,gap,we,have,processed,every,literal,operation,lcp,and,no,operation,o,with,literal,seqno,o,lcp,and,seqno,o,seqno,o,also,has,doc,id,o,doc,id,o,because,such,an,operation,would,have,literal,seqno,o,lcp,msu,msu,o,which,contradicts,the,first,invariant,furthermore,in,this,case,we,immediately,know,that,doc,id,o,has,been,deleted,or,never,existed,without,needing,to,check,lucene,for,the,following,reason,if,there,s,no,earlier,operation,on,doc,id,o,then,this,is,clear,so,suppose,instead,that,the,preceding,operation,on,doc,id,o,is,o,1,the,first,invariant,above,tells,us,that,literal,seqno,o,msu,o,lcp,so,we,have,already,applied,o,to,lucene,2,also,literal,msu,o,msu,lcp,seqno,o,we,discard,o,if,literal,seqno,o,lcp,so,the,second,invariant,applies,meaning,that,the,o,was,a,delete,p,therefore,if,literal,msu,lcp,seqno,o,we,know,that,o,can,safely,be,optimized,with,and,added,to,lucene,with,add,document,moreover,operations,that,are,optimized,using,the,msu,optimization,must,not,be,processed,twice,as,this,will,create,duplicates,in,lucene,to,avoid,this,we,check,the,local,checkpoint,tracker,to,see,if,an,operation,was,already,processed,see,initialize,max,seq,no,of,updates,or,deletes,see,advance,max,seq,no,of,updates,or,deletes,long;public,final,long,get,max,seq,no,of,updates,or,deletes,return,max,seq,no,of,updates,or,deletes,get
Engine -> public final long getMaxSeqNoOfUpdatesOrDeletes();1550220204;Returns the maximum sequence number of either update or delete operations have been processed in this engine_or the sequence number from {@link #advanceMaxSeqNoOfUpdatesOrDeletes(long)}. An index request is considered_as an update operation if it overwrites the existing documents in Lucene index with the same document id._<p>_A note on the optimization using max_seq_no_of_updates_or_deletes:_For each operation O, the key invariants are:_<ol>_<li> I1: There is no operation on docID(O) with seqno that is {@literal > MSU(O) and < seqno(O)} </li>_<li> I2: If {@literal MSU(O) < seqno(O)} then docID(O) did not exist when O was applied_ more precisely, if there is any O'_with {@literal seqno(O') < seqno(O) and docID(O') = docID(O)} then the one with the greatest seqno is a delete.</li>_</ol>_<p>_When a receiving shard (either a replica or a follower) receives an operation O, it must first ensure its own MSU at least MSU(O),_and then compares its MSU to its local checkpoint (LCP). If {@literal LCP < MSU} then there's a gap: there may be some operations_that act on docID(O) about which we do not yet know, so we cannot perform an add. Note this also covers the case where a future_operation O' with {@literal seqNo(O') > seqNo(O) and docId(O') = docID(O)} is processed before O. In that case MSU(O') is at least_seqno(O') and this means {@literal MSU >= seqNo(O') > seqNo(O) > LCP} (because O wasn't processed yet)._<p>_However, if {@literal MSU <= LCP} then there is no gap: we have processed every {@literal operation <= LCP}, and no operation O'_with {@literal seqno(O') > LCP and seqno(O') < seqno(O) also has docID(O') = docID(O)}, because such an operation would have_{@literal seqno(O') > LCP >= MSU >= MSU(O)} which contradicts the first invariant. Furthermore in this case we immediately know_that docID(O) has been deleted (or never existed) without needing to check Lucene for the following reason. If there's no earlier_operation on docID(O) then this is clear, so suppose instead that the preceding operation on docID(O) is O':_1. The first invariant above tells us that {@literal seqno(O') <= MSU(O) <= LCP} so we have already applied O' to Lucene._2. Also {@literal MSU(O) <= MSU <= LCP < seqno(O)} (we discard O if {@literal seqno(O) <= LCP}) so the second invariant applies,_meaning that the O' was a delete._<p>_Therefore, if {@literal MSU <= LCP < seqno(O)} we know that O can safely be optimized with and added to lucene with addDocument._Moreover, operations that are optimized using the MSU optimization must not be processed twice as this will create duplicates_in Lucene. To avoid this we check the local checkpoint tracker to see if an operation was already processed.__@see #initializeMaxSeqNoOfUpdatesOrDeletes()_@see #advanceMaxSeqNoOfUpdatesOrDeletes(long);public final long getMaxSeqNoOfUpdatesOrDeletes() {_        return maxSeqNoOfUpdatesOrDeletes.get()__    };returns,the,maximum,sequence,number,of,either,update,or,delete,operations,have,been,processed,in,this,engine,or,the,sequence,number,from,link,advance,max,seq,no,of,updates,or,deletes,long,an,index,request,is,considered,as,an,update,operation,if,it,overwrites,the,existing,documents,in,lucene,index,with,the,same,document,id,p,a,note,on,the,optimization,using,for,each,operation,o,the,key,invariants,are,ol,li,i1,there,is,no,operation,on,doc,id,o,with,seqno,that,is,literal,msu,o,and,seqno,o,li,li,i2,if,literal,msu,o,seqno,o,then,doc,id,o,did,not,exist,when,o,was,applied,more,precisely,if,there,is,any,o,with,literal,seqno,o,seqno,o,and,doc,id,o,doc,id,o,then,the,one,with,the,greatest,seqno,is,a,delete,li,ol,p,when,a,receiving,shard,either,a,replica,or,a,follower,receives,an,operation,o,it,must,first,ensure,its,own,msu,at,least,msu,o,and,then,compares,its,msu,to,its,local,checkpoint,lcp,if,literal,lcp,msu,then,there,s,a,gap,there,may,be,some,operations,that,act,on,doc,id,o,about,which,we,do,not,yet,know,so,we,cannot,perform,an,add,note,this,also,covers,the,case,where,a,future,operation,o,with,literal,seq,no,o,seq,no,o,and,doc,id,o,doc,id,o,is,processed,before,o,in,that,case,msu,o,is,at,least,seqno,o,and,this,means,literal,msu,seq,no,o,seq,no,o,lcp,because,o,wasn,t,processed,yet,p,however,if,literal,msu,lcp,then,there,is,no,gap,we,have,processed,every,literal,operation,lcp,and,no,operation,o,with,literal,seqno,o,lcp,and,seqno,o,seqno,o,also,has,doc,id,o,doc,id,o,because,such,an,operation,would,have,literal,seqno,o,lcp,msu,msu,o,which,contradicts,the,first,invariant,furthermore,in,this,case,we,immediately,know,that,doc,id,o,has,been,deleted,or,never,existed,without,needing,to,check,lucene,for,the,following,reason,if,there,s,no,earlier,operation,on,doc,id,o,then,this,is,clear,so,suppose,instead,that,the,preceding,operation,on,doc,id,o,is,o,1,the,first,invariant,above,tells,us,that,literal,seqno,o,msu,o,lcp,so,we,have,already,applied,o,to,lucene,2,also,literal,msu,o,msu,lcp,seqno,o,we,discard,o,if,literal,seqno,o,lcp,so,the,second,invariant,applies,meaning,that,the,o,was,a,delete,p,therefore,if,literal,msu,lcp,seqno,o,we,know,that,o,can,safely,be,optimized,with,and,added,to,lucene,with,add,document,moreover,operations,that,are,optimized,using,the,msu,optimization,must,not,be,processed,twice,as,this,will,create,duplicates,in,lucene,to,avoid,this,we,check,the,local,checkpoint,tracker,to,see,if,an,operation,was,already,processed,see,initialize,max,seq,no,of,updates,or,deletes,see,advance,max,seq,no,of,updates,or,deletes,long;public,final,long,get,max,seq,no,of,updates,or,deletes,return,max,seq,no,of,updates,or,deletes,get
Engine -> public final long getMaxSeqNoOfUpdatesOrDeletes();1550526771;Returns the maximum sequence number of either update or delete operations have been processed in this engine_or the sequence number from {@link #advanceMaxSeqNoOfUpdatesOrDeletes(long)}. An index request is considered_as an update operation if it overwrites the existing documents in Lucene index with the same document id._<p>_A note on the optimization using max_seq_no_of_updates_or_deletes:_For each operation O, the key invariants are:_<ol>_<li> I1: There is no operation on docID(O) with seqno that is {@literal > MSU(O) and < seqno(O)} </li>_<li> I2: If {@literal MSU(O) < seqno(O)} then docID(O) did not exist when O was applied_ more precisely, if there is any O'_with {@literal seqno(O') < seqno(O) and docID(O') = docID(O)} then the one with the greatest seqno is a delete.</li>_</ol>_<p>_When a receiving shard (either a replica or a follower) receives an operation O, it must first ensure its own MSU at least MSU(O),_and then compares its MSU to its local checkpoint (LCP). If {@literal LCP < MSU} then there's a gap: there may be some operations_that act on docID(O) about which we do not yet know, so we cannot perform an add. Note this also covers the case where a future_operation O' with {@literal seqNo(O') > seqNo(O) and docId(O') = docID(O)} is processed before O. In that case MSU(O') is at least_seqno(O') and this means {@literal MSU >= seqNo(O') > seqNo(O) > LCP} (because O wasn't processed yet)._<p>_However, if {@literal MSU <= LCP} then there is no gap: we have processed every {@literal operation <= LCP}, and no operation O'_with {@literal seqno(O') > LCP and seqno(O') < seqno(O) also has docID(O') = docID(O)}, because such an operation would have_{@literal seqno(O') > LCP >= MSU >= MSU(O)} which contradicts the first invariant. Furthermore in this case we immediately know_that docID(O) has been deleted (or never existed) without needing to check Lucene for the following reason. If there's no earlier_operation on docID(O) then this is clear, so suppose instead that the preceding operation on docID(O) is O':_1. The first invariant above tells us that {@literal seqno(O') <= MSU(O) <= LCP} so we have already applied O' to Lucene._2. Also {@literal MSU(O) <= MSU <= LCP < seqno(O)} (we discard O if {@literal seqno(O) <= LCP}) so the second invariant applies,_meaning that the O' was a delete._<p>_Therefore, if {@literal MSU <= LCP < seqno(O)} we know that O can safely be optimized with and added to lucene with addDocument._Moreover, operations that are optimized using the MSU optimization must not be processed twice as this will create duplicates_in Lucene. To avoid this we check the local checkpoint tracker to see if an operation was already processed.__@see #initializeMaxSeqNoOfUpdatesOrDeletes()_@see #advanceMaxSeqNoOfUpdatesOrDeletes(long);public final long getMaxSeqNoOfUpdatesOrDeletes() {_        return maxSeqNoOfUpdatesOrDeletes.get()__    };returns,the,maximum,sequence,number,of,either,update,or,delete,operations,have,been,processed,in,this,engine,or,the,sequence,number,from,link,advance,max,seq,no,of,updates,or,deletes,long,an,index,request,is,considered,as,an,update,operation,if,it,overwrites,the,existing,documents,in,lucene,index,with,the,same,document,id,p,a,note,on,the,optimization,using,for,each,operation,o,the,key,invariants,are,ol,li,i1,there,is,no,operation,on,doc,id,o,with,seqno,that,is,literal,msu,o,and,seqno,o,li,li,i2,if,literal,msu,o,seqno,o,then,doc,id,o,did,not,exist,when,o,was,applied,more,precisely,if,there,is,any,o,with,literal,seqno,o,seqno,o,and,doc,id,o,doc,id,o,then,the,one,with,the,greatest,seqno,is,a,delete,li,ol,p,when,a,receiving,shard,either,a,replica,or,a,follower,receives,an,operation,o,it,must,first,ensure,its,own,msu,at,least,msu,o,and,then,compares,its,msu,to,its,local,checkpoint,lcp,if,literal,lcp,msu,then,there,s,a,gap,there,may,be,some,operations,that,act,on,doc,id,o,about,which,we,do,not,yet,know,so,we,cannot,perform,an,add,note,this,also,covers,the,case,where,a,future,operation,o,with,literal,seq,no,o,seq,no,o,and,doc,id,o,doc,id,o,is,processed,before,o,in,that,case,msu,o,is,at,least,seqno,o,and,this,means,literal,msu,seq,no,o,seq,no,o,lcp,because,o,wasn,t,processed,yet,p,however,if,literal,msu,lcp,then,there,is,no,gap,we,have,processed,every,literal,operation,lcp,and,no,operation,o,with,literal,seqno,o,lcp,and,seqno,o,seqno,o,also,has,doc,id,o,doc,id,o,because,such,an,operation,would,have,literal,seqno,o,lcp,msu,msu,o,which,contradicts,the,first,invariant,furthermore,in,this,case,we,immediately,know,that,doc,id,o,has,been,deleted,or,never,existed,without,needing,to,check,lucene,for,the,following,reason,if,there,s,no,earlier,operation,on,doc,id,o,then,this,is,clear,so,suppose,instead,that,the,preceding,operation,on,doc,id,o,is,o,1,the,first,invariant,above,tells,us,that,literal,seqno,o,msu,o,lcp,so,we,have,already,applied,o,to,lucene,2,also,literal,msu,o,msu,lcp,seqno,o,we,discard,o,if,literal,seqno,o,lcp,so,the,second,invariant,applies,meaning,that,the,o,was,a,delete,p,therefore,if,literal,msu,lcp,seqno,o,we,know,that,o,can,safely,be,optimized,with,and,added,to,lucene,with,add,document,moreover,operations,that,are,optimized,using,the,msu,optimization,must,not,be,processed,twice,as,this,will,create,duplicates,in,lucene,to,avoid,this,we,check,the,local,checkpoint,tracker,to,see,if,an,operation,was,already,processed,see,initialize,max,seq,no,of,updates,or,deletes,see,advance,max,seq,no,of,updates,or,deletes,long;public,final,long,get,max,seq,no,of,updates,or,deletes,return,max,seq,no,of,updates,or,deletes,get
Engine -> public final long getMaxSeqNoOfUpdatesOrDeletes();1551110274;Returns the maximum sequence number of either update or delete operations have been processed in this engine_or the sequence number from {@link #advanceMaxSeqNoOfUpdatesOrDeletes(long)}. An index request is considered_as an update operation if it overwrites the existing documents in Lucene index with the same document id._<p>_A note on the optimization using max_seq_no_of_updates_or_deletes:_For each operation O, the key invariants are:_<ol>_<li> I1: There is no operation on docID(O) with seqno that is {@literal > MSU(O) and < seqno(O)} </li>_<li> I2: If {@literal MSU(O) < seqno(O)} then docID(O) did not exist when O was applied_ more precisely, if there is any O'_with {@literal seqno(O') < seqno(O) and docID(O') = docID(O)} then the one with the greatest seqno is a delete.</li>_</ol>_<p>_When a receiving shard (either a replica or a follower) receives an operation O, it must first ensure its own MSU at least MSU(O),_and then compares its MSU to its local checkpoint (LCP). If {@literal LCP < MSU} then there's a gap: there may be some operations_that act on docID(O) about which we do not yet know, so we cannot perform an add. Note this also covers the case where a future_operation O' with {@literal seqNo(O') > seqNo(O) and docId(O') = docID(O)} is processed before O. In that case MSU(O') is at least_seqno(O') and this means {@literal MSU >= seqNo(O') > seqNo(O) > LCP} (because O wasn't processed yet)._<p>_However, if {@literal MSU <= LCP} then there is no gap: we have processed every {@literal operation <= LCP}, and no operation O'_with {@literal seqno(O') > LCP and seqno(O') < seqno(O) also has docID(O') = docID(O)}, because such an operation would have_{@literal seqno(O') > LCP >= MSU >= MSU(O)} which contradicts the first invariant. Furthermore in this case we immediately know_that docID(O) has been deleted (or never existed) without needing to check Lucene for the following reason. If there's no earlier_operation on docID(O) then this is clear, so suppose instead that the preceding operation on docID(O) is O':_1. The first invariant above tells us that {@literal seqno(O') <= MSU(O) <= LCP} so we have already applied O' to Lucene._2. Also {@literal MSU(O) <= MSU <= LCP < seqno(O)} (we discard O if {@literal seqno(O) <= LCP}) so the second invariant applies,_meaning that the O' was a delete._<p>_Therefore, if {@literal MSU <= LCP < seqno(O)} we know that O can safely be optimized with and added to lucene with addDocument._Moreover, operations that are optimized using the MSU optimization must not be processed twice as this will create duplicates_in Lucene. To avoid this we check the local checkpoint tracker to see if an operation was already processed.__@see #initializeMaxSeqNoOfUpdatesOrDeletes()_@see #advanceMaxSeqNoOfUpdatesOrDeletes(long);public final long getMaxSeqNoOfUpdatesOrDeletes() {_        return maxSeqNoOfUpdatesOrDeletes.get()__    };returns,the,maximum,sequence,number,of,either,update,or,delete,operations,have,been,processed,in,this,engine,or,the,sequence,number,from,link,advance,max,seq,no,of,updates,or,deletes,long,an,index,request,is,considered,as,an,update,operation,if,it,overwrites,the,existing,documents,in,lucene,index,with,the,same,document,id,p,a,note,on,the,optimization,using,for,each,operation,o,the,key,invariants,are,ol,li,i1,there,is,no,operation,on,doc,id,o,with,seqno,that,is,literal,msu,o,and,seqno,o,li,li,i2,if,literal,msu,o,seqno,o,then,doc,id,o,did,not,exist,when,o,was,applied,more,precisely,if,there,is,any,o,with,literal,seqno,o,seqno,o,and,doc,id,o,doc,id,o,then,the,one,with,the,greatest,seqno,is,a,delete,li,ol,p,when,a,receiving,shard,either,a,replica,or,a,follower,receives,an,operation,o,it,must,first,ensure,its,own,msu,at,least,msu,o,and,then,compares,its,msu,to,its,local,checkpoint,lcp,if,literal,lcp,msu,then,there,s,a,gap,there,may,be,some,operations,that,act,on,doc,id,o,about,which,we,do,not,yet,know,so,we,cannot,perform,an,add,note,this,also,covers,the,case,where,a,future,operation,o,with,literal,seq,no,o,seq,no,o,and,doc,id,o,doc,id,o,is,processed,before,o,in,that,case,msu,o,is,at,least,seqno,o,and,this,means,literal,msu,seq,no,o,seq,no,o,lcp,because,o,wasn,t,processed,yet,p,however,if,literal,msu,lcp,then,there,is,no,gap,we,have,processed,every,literal,operation,lcp,and,no,operation,o,with,literal,seqno,o,lcp,and,seqno,o,seqno,o,also,has,doc,id,o,doc,id,o,because,such,an,operation,would,have,literal,seqno,o,lcp,msu,msu,o,which,contradicts,the,first,invariant,furthermore,in,this,case,we,immediately,know,that,doc,id,o,has,been,deleted,or,never,existed,without,needing,to,check,lucene,for,the,following,reason,if,there,s,no,earlier,operation,on,doc,id,o,then,this,is,clear,so,suppose,instead,that,the,preceding,operation,on,doc,id,o,is,o,1,the,first,invariant,above,tells,us,that,literal,seqno,o,msu,o,lcp,so,we,have,already,applied,o,to,lucene,2,also,literal,msu,o,msu,lcp,seqno,o,we,discard,o,if,literal,seqno,o,lcp,so,the,second,invariant,applies,meaning,that,the,o,was,a,delete,p,therefore,if,literal,msu,lcp,seqno,o,we,know,that,o,can,safely,be,optimized,with,and,added,to,lucene,with,add,document,moreover,operations,that,are,optimized,using,the,msu,optimization,must,not,be,processed,twice,as,this,will,create,duplicates,in,lucene,to,avoid,this,we,check,the,local,checkpoint,tracker,to,see,if,an,operation,was,already,processed,see,initialize,max,seq,no,of,updates,or,deletes,see,advance,max,seq,no,of,updates,or,deletes,long;public,final,long,get,max,seq,no,of,updates,or,deletes,return,max,seq,no,of,updates,or,deletes,get
Engine -> public final long getMaxSeqNoOfUpdatesOrDeletes();1551126708;Returns the maximum sequence number of either update or delete operations have been processed in this engine_or the sequence number from {@link #advanceMaxSeqNoOfUpdatesOrDeletes(long)}. An index request is considered_as an update operation if it overwrites the existing documents in Lucene index with the same document id._<p>_A note on the optimization using max_seq_no_of_updates_or_deletes:_For each operation O, the key invariants are:_<ol>_<li> I1: There is no operation on docID(O) with seqno that is {@literal > MSU(O) and < seqno(O)} </li>_<li> I2: If {@literal MSU(O) < seqno(O)} then docID(O) did not exist when O was applied_ more precisely, if there is any O'_with {@literal seqno(O') < seqno(O) and docID(O') = docID(O)} then the one with the greatest seqno is a delete.</li>_</ol>_<p>_When a receiving shard (either a replica or a follower) receives an operation O, it must first ensure its own MSU at least MSU(O),_and then compares its MSU to its local checkpoint (LCP). If {@literal LCP < MSU} then there's a gap: there may be some operations_that act on docID(O) about which we do not yet know, so we cannot perform an add. Note this also covers the case where a future_operation O' with {@literal seqNo(O') > seqNo(O) and docId(O') = docID(O)} is processed before O. In that case MSU(O') is at least_seqno(O') and this means {@literal MSU >= seqNo(O') > seqNo(O) > LCP} (because O wasn't processed yet)._<p>_However, if {@literal MSU <= LCP} then there is no gap: we have processed every {@literal operation <= LCP}, and no operation O'_with {@literal seqno(O') > LCP and seqno(O') < seqno(O) also has docID(O') = docID(O)}, because such an operation would have_{@literal seqno(O') > LCP >= MSU >= MSU(O)} which contradicts the first invariant. Furthermore in this case we immediately know_that docID(O) has been deleted (or never existed) without needing to check Lucene for the following reason. If there's no earlier_operation on docID(O) then this is clear, so suppose instead that the preceding operation on docID(O) is O':_1. The first invariant above tells us that {@literal seqno(O') <= MSU(O) <= LCP} so we have already applied O' to Lucene._2. Also {@literal MSU(O) <= MSU <= LCP < seqno(O)} (we discard O if {@literal seqno(O) <= LCP}) so the second invariant applies,_meaning that the O' was a delete._<p>_Therefore, if {@literal MSU <= LCP < seqno(O)} we know that O can safely be optimized with and added to lucene with addDocument._Moreover, operations that are optimized using the MSU optimization must not be processed twice as this will create duplicates_in Lucene. To avoid this we check the local checkpoint tracker to see if an operation was already processed.__@see #initializeMaxSeqNoOfUpdatesOrDeletes()_@see #advanceMaxSeqNoOfUpdatesOrDeletes(long);public final long getMaxSeqNoOfUpdatesOrDeletes() {_        return maxSeqNoOfUpdatesOrDeletes.get()__    };returns,the,maximum,sequence,number,of,either,update,or,delete,operations,have,been,processed,in,this,engine,or,the,sequence,number,from,link,advance,max,seq,no,of,updates,or,deletes,long,an,index,request,is,considered,as,an,update,operation,if,it,overwrites,the,existing,documents,in,lucene,index,with,the,same,document,id,p,a,note,on,the,optimization,using,for,each,operation,o,the,key,invariants,are,ol,li,i1,there,is,no,operation,on,doc,id,o,with,seqno,that,is,literal,msu,o,and,seqno,o,li,li,i2,if,literal,msu,o,seqno,o,then,doc,id,o,did,not,exist,when,o,was,applied,more,precisely,if,there,is,any,o,with,literal,seqno,o,seqno,o,and,doc,id,o,doc,id,o,then,the,one,with,the,greatest,seqno,is,a,delete,li,ol,p,when,a,receiving,shard,either,a,replica,or,a,follower,receives,an,operation,o,it,must,first,ensure,its,own,msu,at,least,msu,o,and,then,compares,its,msu,to,its,local,checkpoint,lcp,if,literal,lcp,msu,then,there,s,a,gap,there,may,be,some,operations,that,act,on,doc,id,o,about,which,we,do,not,yet,know,so,we,cannot,perform,an,add,note,this,also,covers,the,case,where,a,future,operation,o,with,literal,seq,no,o,seq,no,o,and,doc,id,o,doc,id,o,is,processed,before,o,in,that,case,msu,o,is,at,least,seqno,o,and,this,means,literal,msu,seq,no,o,seq,no,o,lcp,because,o,wasn,t,processed,yet,p,however,if,literal,msu,lcp,then,there,is,no,gap,we,have,processed,every,literal,operation,lcp,and,no,operation,o,with,literal,seqno,o,lcp,and,seqno,o,seqno,o,also,has,doc,id,o,doc,id,o,because,such,an,operation,would,have,literal,seqno,o,lcp,msu,msu,o,which,contradicts,the,first,invariant,furthermore,in,this,case,we,immediately,know,that,doc,id,o,has,been,deleted,or,never,existed,without,needing,to,check,lucene,for,the,following,reason,if,there,s,no,earlier,operation,on,doc,id,o,then,this,is,clear,so,suppose,instead,that,the,preceding,operation,on,doc,id,o,is,o,1,the,first,invariant,above,tells,us,that,literal,seqno,o,msu,o,lcp,so,we,have,already,applied,o,to,lucene,2,also,literal,msu,o,msu,lcp,seqno,o,we,discard,o,if,literal,seqno,o,lcp,so,the,second,invariant,applies,meaning,that,the,o,was,a,delete,p,therefore,if,literal,msu,lcp,seqno,o,we,know,that,o,can,safely,be,optimized,with,and,added,to,lucene,with,add,document,moreover,operations,that,are,optimized,using,the,msu,optimization,must,not,be,processed,twice,as,this,will,create,duplicates,in,lucene,to,avoid,this,we,check,the,local,checkpoint,tracker,to,see,if,an,operation,was,already,processed,see,initialize,max,seq,no,of,updates,or,deletes,see,advance,max,seq,no,of,updates,or,deletes,long;public,final,long,get,max,seq,no,of,updates,or,deletes,return,max,seq,no,of,updates,or,deletes,get
Engine -> EventListener -> default void onFailedEngine(String reason, @Nullable Exception e);1524684173;Called when a fatal exception occurred;default void onFailedEngine(String reason, @Nullable Exception e) {_        };called,when,a,fatal,exception,occurred;default,void,on,failed,engine,string,reason,nullable,exception,e
Engine -> EventListener -> default void onFailedEngine(String reason, @Nullable Exception e);1525162917;Called when a fatal exception occurred;default void onFailedEngine(String reason, @Nullable Exception e) {_        };called,when,a,fatal,exception,occurred;default,void,on,failed,engine,string,reason,nullable,exception,e
Engine -> EventListener -> default void onFailedEngine(String reason, @Nullable Exception e);1525334055;Called when a fatal exception occurred;default void onFailedEngine(String reason, @Nullable Exception e) {_        };called,when,a,fatal,exception,occurred;default,void,on,failed,engine,string,reason,nullable,exception,e
Engine -> EventListener -> default void onFailedEngine(String reason, @Nullable Exception e);1527583663;Called when a fatal exception occurred;default void onFailedEngine(String reason, @Nullable Exception e) {_        };called,when,a,fatal,exception,occurred;default,void,on,failed,engine,string,reason,nullable,exception,e
Engine -> EventListener -> default void onFailedEngine(String reason, @Nullable Exception e);1528706846;Called when a fatal exception occurred;default void onFailedEngine(String reason, @Nullable Exception e) {_        };called,when,a,fatal,exception,occurred;default,void,on,failed,engine,string,reason,nullable,exception,e
Engine -> EventListener -> default void onFailedEngine(String reason, @Nullable Exception e);1528762805;Called when a fatal exception occurred;default void onFailedEngine(String reason, @Nullable Exception e) {_        };called,when,a,fatal,exception,occurred;default,void,on,failed,engine,string,reason,nullable,exception,e
Engine -> EventListener -> default void onFailedEngine(String reason, @Nullable Exception e);1531910483;Called when a fatal exception occurred;default void onFailedEngine(String reason, @Nullable Exception e) {_        };called,when,a,fatal,exception,occurred;default,void,on,failed,engine,string,reason,nullable,exception,e
Engine -> EventListener -> default void onFailedEngine(String reason, @Nullable Exception e);1532685069;Called when a fatal exception occurred;default void onFailedEngine(String reason, @Nullable Exception e) {_        };called,when,a,fatal,exception,occurred;default,void,on,failed,engine,string,reason,nullable,exception,e
Engine -> EventListener -> default void onFailedEngine(String reason, @Nullable Exception e);1533295538;Called when a fatal exception occurred;default void onFailedEngine(String reason, @Nullable Exception e) {_        };called,when,a,fatal,exception,occurred;default,void,on,failed,engine,string,reason,nullable,exception,e
Engine -> EventListener -> default void onFailedEngine(String reason, @Nullable Exception e);1535046779;Called when a fatal exception occurred;default void onFailedEngine(String reason, @Nullable Exception e) {_        };called,when,a,fatal,exception,occurred;default,void,on,failed,engine,string,reason,nullable,exception,e
Engine -> EventListener -> default void onFailedEngine(String reason, @Nullable Exception e);1535723122;Called when a fatal exception occurred;default void onFailedEngine(String reason, @Nullable Exception e) {_        };called,when,a,fatal,exception,occurred;default,void,on,failed,engine,string,reason,nullable,exception,e
Engine -> EventListener -> default void onFailedEngine(String reason, @Nullable Exception e);1535965276;Called when a fatal exception occurred;default void onFailedEngine(String reason, @Nullable Exception e) {_        };called,when,a,fatal,exception,occurred;default,void,on,failed,engine,string,reason,nullable,exception,e
Engine -> EventListener -> default void onFailedEngine(String reason, @Nullable Exception e);1536314350;Called when a fatal exception occurred;default void onFailedEngine(String reason, @Nullable Exception e) {_        };called,when,a,fatal,exception,occurred;default,void,on,failed,engine,string,reason,nullable,exception,e
Engine -> EventListener -> default void onFailedEngine(String reason, @Nullable Exception e);1536828374;Called when a fatal exception occurred;default void onFailedEngine(String reason, @Nullable Exception e) {_        };called,when,a,fatal,exception,occurred;default,void,on,failed,engine,string,reason,nullable,exception,e
Engine -> EventListener -> default void onFailedEngine(String reason, @Nullable Exception e);1537371806;Called when a fatal exception occurred;default void onFailedEngine(String reason, @Nullable Exception e) {_        };called,when,a,fatal,exception,occurred;default,void,on,failed,engine,string,reason,nullable,exception,e
Engine -> EventListener -> default void onFailedEngine(String reason, @Nullable Exception e);1537806831;Called when a fatal exception occurred;default void onFailedEngine(String reason, @Nullable Exception e) {_        };called,when,a,fatal,exception,occurred;default,void,on,failed,engine,string,reason,nullable,exception,e
Engine -> EventListener -> default void onFailedEngine(String reason, @Nullable Exception e);1538067637;Called when a fatal exception occurred;default void onFailedEngine(String reason, @Nullable Exception e) {_        };called,when,a,fatal,exception,occurred;default,void,on,failed,engine,string,reason,nullable,exception,e
Engine -> EventListener -> default void onFailedEngine(String reason, @Nullable Exception e);1538424609;Called when a fatal exception occurred;default void onFailedEngine(String reason, @Nullable Exception e) {_        };called,when,a,fatal,exception,occurred;default,void,on,failed,engine,string,reason,nullable,exception,e
Engine -> EventListener -> default void onFailedEngine(String reason, @Nullable Exception e);1539723533;Called when a fatal exception occurred;default void onFailedEngine(String reason, @Nullable Exception e) {_        };called,when,a,fatal,exception,occurred;default,void,on,failed,engine,string,reason,nullable,exception,e
Engine -> EventListener -> default void onFailedEngine(String reason, @Nullable Exception e);1541618615;Called when a fatal exception occurred;default void onFailedEngine(String reason, @Nullable Exception e) {_        };called,when,a,fatal,exception,occurred;default,void,on,failed,engine,string,reason,nullable,exception,e
Engine -> EventListener -> default void onFailedEngine(String reason, @Nullable Exception e);1542697754;Called when a fatal exception occurred;default void onFailedEngine(String reason, @Nullable Exception e) {_        };called,when,a,fatal,exception,occurred;default,void,on,failed,engine,string,reason,nullable,exception,e
Engine -> EventListener -> default void onFailedEngine(String reason, @Nullable Exception e);1543047942;Called when a fatal exception occurred;default void onFailedEngine(String reason, @Nullable Exception e) {_        };called,when,a,fatal,exception,occurred;default,void,on,failed,engine,string,reason,nullable,exception,e
Engine -> EventListener -> default void onFailedEngine(String reason, @Nullable Exception e);1544545090;Called when a fatal exception occurred;default void onFailedEngine(String reason, @Nullable Exception e) {_        };called,when,a,fatal,exception,occurred;default,void,on,failed,engine,string,reason,nullable,exception,e
Engine -> EventListener -> default void onFailedEngine(String reason, @Nullable Exception e);1544684920;Called when a fatal exception occurred;default void onFailedEngine(String reason, @Nullable Exception e) {_        };called,when,a,fatal,exception,occurred;default,void,on,failed,engine,string,reason,nullable,exception,e
Engine -> EventListener -> default void onFailedEngine(String reason, @Nullable Exception e);1545140118;Called when a fatal exception occurred;default void onFailedEngine(String reason, @Nullable Exception e) {_        };called,when,a,fatal,exception,occurred;default,void,on,failed,engine,string,reason,nullable,exception,e
Engine -> EventListener -> default void onFailedEngine(String reason, @Nullable Exception e);1545221705;Called when a fatal exception occurred;default void onFailedEngine(String reason, @Nullable Exception e) {_        };called,when,a,fatal,exception,occurred;default,void,on,failed,engine,string,reason,nullable,exception,e
Engine -> EventListener -> default void onFailedEngine(String reason, @Nullable Exception e);1547332999;Called when a fatal exception occurred;default void onFailedEngine(String reason, @Nullable Exception e) {_        };called,when,a,fatal,exception,occurred;default,void,on,failed,engine,string,reason,nullable,exception,e
Engine -> EventListener -> default void onFailedEngine(String reason, @Nullable Exception e);1548771485;Called when a fatal exception occurred;default void onFailedEngine(String reason, @Nullable Exception e) {_        };called,when,a,fatal,exception,occurred;default,void,on,failed,engine,string,reason,nullable,exception,e
Engine -> EventListener -> default void onFailedEngine(String reason, @Nullable Exception e);1549891630;Called when a fatal exception occurred;default void onFailedEngine(String reason, @Nullable Exception e) {_        };called,when,a,fatal,exception,occurred;default,void,on,failed,engine,string,reason,nullable,exception,e
Engine -> EventListener -> default void onFailedEngine(String reason, @Nullable Exception e);1549975032;Called when a fatal exception occurred;default void onFailedEngine(String reason, @Nullable Exception e) {_        };called,when,a,fatal,exception,occurred;default,void,on,failed,engine,string,reason,nullable,exception,e
Engine -> EventListener -> default void onFailedEngine(String reason, @Nullable Exception e);1550220204;Called when a fatal exception occurred;default void onFailedEngine(String reason, @Nullable Exception e) {_        };called,when,a,fatal,exception,occurred;default,void,on,failed,engine,string,reason,nullable,exception,e
Engine -> EventListener -> default void onFailedEngine(String reason, @Nullable Exception e);1550526771;Called when a fatal exception occurred;default void onFailedEngine(String reason, @Nullable Exception e) {_        };called,when,a,fatal,exception,occurred;default,void,on,failed,engine,string,reason,nullable,exception,e
Engine -> EventListener -> default void onFailedEngine(String reason, @Nullable Exception e);1551110274;Called when a fatal exception occurred;default void onFailedEngine(String reason, @Nullable Exception e) {_        };called,when,a,fatal,exception,occurred;default,void,on,failed,engine,string,reason,nullable,exception,e
Engine -> EventListener -> default void onFailedEngine(String reason, @Nullable Exception e);1551126708;Called when a fatal exception occurred;default void onFailedEngine(String reason, @Nullable Exception e) {_        };called,when,a,fatal,exception,occurred;default,void,on,failed,engine,string,reason,nullable,exception,e
Engine -> public abstract Translog.Snapshot newTranslogSnapshotFromMinSeqNo(long minSeqNo) throws IOException_;1528762805;Creates a new translog snapshot from this engine for reading translog operations whose seq# at least the provided seq#._The caller has to close the returned snapshot after finishing the reading.;public abstract Translog.Snapshot newTranslogSnapshotFromMinSeqNo(long minSeqNo) throws IOException_;creates,a,new,translog,snapshot,from,this,engine,for,reading,translog,operations,whose,seq,at,least,the,provided,seq,the,caller,has,to,close,the,returned,snapshot,after,finishing,the,reading;public,abstract,translog,snapshot,new,translog,snapshot,from,min,seq,no,long,min,seq,no,throws,ioexception
Engine -> public abstract Translog.Snapshot newTranslogSnapshotFromMinSeqNo(long minSeqNo) throws IOException_;1531910483;Creates a new translog snapshot from this engine for reading translog operations whose seq# at least the provided seq#._The caller has to close the returned snapshot after finishing the reading.;public abstract Translog.Snapshot newTranslogSnapshotFromMinSeqNo(long minSeqNo) throws IOException_;creates,a,new,translog,snapshot,from,this,engine,for,reading,translog,operations,whose,seq,at,least,the,provided,seq,the,caller,has,to,close,the,returned,snapshot,after,finishing,the,reading;public,abstract,translog,snapshot,new,translog,snapshot,from,min,seq,no,long,min,seq,no,throws,ioexception
Engine -> public abstract Translog.Snapshot newTranslogSnapshotFromMinSeqNo(long minSeqNo) throws IOException_;1532685069;Creates a new translog snapshot from this engine for reading translog operations whose seq# at least the provided seq#._The caller has to close the returned snapshot after finishing the reading.;public abstract Translog.Snapshot newTranslogSnapshotFromMinSeqNo(long minSeqNo) throws IOException_;creates,a,new,translog,snapshot,from,this,engine,for,reading,translog,operations,whose,seq,at,least,the,provided,seq,the,caller,has,to,close,the,returned,snapshot,after,finishing,the,reading;public,abstract,translog,snapshot,new,translog,snapshot,from,min,seq,no,long,min,seq,no,throws,ioexception
Engine -> public abstract Translog.Snapshot newTranslogSnapshotFromMinSeqNo(long minSeqNo) throws IOException_;1533295538;Creates a new translog snapshot from this engine for reading translog operations whose seq# at least the provided seq#._The caller has to close the returned snapshot after finishing the reading.;public abstract Translog.Snapshot newTranslogSnapshotFromMinSeqNo(long minSeqNo) throws IOException_;creates,a,new,translog,snapshot,from,this,engine,for,reading,translog,operations,whose,seq,at,least,the,provided,seq,the,caller,has,to,close,the,returned,snapshot,after,finishing,the,reading;public,abstract,translog,snapshot,new,translog,snapshot,from,min,seq,no,long,min,seq,no,throws,ioexception
Engine -> public abstract Translog.Snapshot newTranslogSnapshotFromMinSeqNo(long minSeqNo) throws IOException_;1535046779;Creates a new translog snapshot from this engine for reading translog operations whose seq# at least the provided seq#._The caller has to close the returned snapshot after finishing the reading.;public abstract Translog.Snapshot newTranslogSnapshotFromMinSeqNo(long minSeqNo) throws IOException_;creates,a,new,translog,snapshot,from,this,engine,for,reading,translog,operations,whose,seq,at,least,the,provided,seq,the,caller,has,to,close,the,returned,snapshot,after,finishing,the,reading;public,abstract,translog,snapshot,new,translog,snapshot,from,min,seq,no,long,min,seq,no,throws,ioexception
Engine -> Result -> public Mapping getRequiredMappingUpdate();1525162917;If the operation was aborted due to missing mappings, this method will return the mappings_that are required to complete the operation.;public Mapping getRequiredMappingUpdate() {_            return requiredMappingUpdate__        };if,the,operation,was,aborted,due,to,missing,mappings,this,method,will,return,the,mappings,that,are,required,to,complete,the,operation;public,mapping,get,required,mapping,update,return,required,mapping,update
Engine -> Result -> public Mapping getRequiredMappingUpdate();1525334055;If the operation was aborted due to missing mappings, this method will return the mappings_that are required to complete the operation.;public Mapping getRequiredMappingUpdate() {_            return requiredMappingUpdate__        };if,the,operation,was,aborted,due,to,missing,mappings,this,method,will,return,the,mappings,that,are,required,to,complete,the,operation;public,mapping,get,required,mapping,update,return,required,mapping,update
Engine -> Result -> public Mapping getRequiredMappingUpdate();1527583663;If the operation was aborted due to missing mappings, this method will return the mappings_that are required to complete the operation.;public Mapping getRequiredMappingUpdate() {_            return requiredMappingUpdate__        };if,the,operation,was,aborted,due,to,missing,mappings,this,method,will,return,the,mappings,that,are,required,to,complete,the,operation;public,mapping,get,required,mapping,update,return,required,mapping,update
Engine -> Result -> public Mapping getRequiredMappingUpdate();1528706846;If the operation was aborted due to missing mappings, this method will return the mappings_that are required to complete the operation.;public Mapping getRequiredMappingUpdate() {_            return requiredMappingUpdate__        };if,the,operation,was,aborted,due,to,missing,mappings,this,method,will,return,the,mappings,that,are,required,to,complete,the,operation;public,mapping,get,required,mapping,update,return,required,mapping,update
Engine -> Result -> public Mapping getRequiredMappingUpdate();1528762805;If the operation was aborted due to missing mappings, this method will return the mappings_that are required to complete the operation.;public Mapping getRequiredMappingUpdate() {_            return requiredMappingUpdate__        };if,the,operation,was,aborted,due,to,missing,mappings,this,method,will,return,the,mappings,that,are,required,to,complete,the,operation;public,mapping,get,required,mapping,update,return,required,mapping,update
Engine -> Result -> public Mapping getRequiredMappingUpdate();1531910483;If the operation was aborted due to missing mappings, this method will return the mappings_that are required to complete the operation.;public Mapping getRequiredMappingUpdate() {_            return requiredMappingUpdate__        };if,the,operation,was,aborted,due,to,missing,mappings,this,method,will,return,the,mappings,that,are,required,to,complete,the,operation;public,mapping,get,required,mapping,update,return,required,mapping,update
Engine -> Result -> public Mapping getRequiredMappingUpdate();1532685069;If the operation was aborted due to missing mappings, this method will return the mappings_that are required to complete the operation.;public Mapping getRequiredMappingUpdate() {_            return requiredMappingUpdate__        };if,the,operation,was,aborted,due,to,missing,mappings,this,method,will,return,the,mappings,that,are,required,to,complete,the,operation;public,mapping,get,required,mapping,update,return,required,mapping,update
Engine -> Result -> public Mapping getRequiredMappingUpdate();1533295538;If the operation was aborted due to missing mappings, this method will return the mappings_that are required to complete the operation.;public Mapping getRequiredMappingUpdate() {_            return requiredMappingUpdate__        };if,the,operation,was,aborted,due,to,missing,mappings,this,method,will,return,the,mappings,that,are,required,to,complete,the,operation;public,mapping,get,required,mapping,update,return,required,mapping,update
Engine -> Result -> public Mapping getRequiredMappingUpdate();1535046779;If the operation was aborted due to missing mappings, this method will return the mappings_that are required to complete the operation.;public Mapping getRequiredMappingUpdate() {_            return requiredMappingUpdate__        };if,the,operation,was,aborted,due,to,missing,mappings,this,method,will,return,the,mappings,that,are,required,to,complete,the,operation;public,mapping,get,required,mapping,update,return,required,mapping,update
Engine -> Result -> public Mapping getRequiredMappingUpdate();1535723122;If the operation was aborted due to missing mappings, this method will return the mappings_that are required to complete the operation.;public Mapping getRequiredMappingUpdate() {_            return requiredMappingUpdate__        };if,the,operation,was,aborted,due,to,missing,mappings,this,method,will,return,the,mappings,that,are,required,to,complete,the,operation;public,mapping,get,required,mapping,update,return,required,mapping,update
Engine -> Result -> public Mapping getRequiredMappingUpdate();1535965276;If the operation was aborted due to missing mappings, this method will return the mappings_that are required to complete the operation.;public Mapping getRequiredMappingUpdate() {_            return requiredMappingUpdate__        };if,the,operation,was,aborted,due,to,missing,mappings,this,method,will,return,the,mappings,that,are,required,to,complete,the,operation;public,mapping,get,required,mapping,update,return,required,mapping,update
Engine -> Result -> public Mapping getRequiredMappingUpdate();1536314350;If the operation was aborted due to missing mappings, this method will return the mappings_that are required to complete the operation.;public Mapping getRequiredMappingUpdate() {_            return requiredMappingUpdate__        };if,the,operation,was,aborted,due,to,missing,mappings,this,method,will,return,the,mappings,that,are,required,to,complete,the,operation;public,mapping,get,required,mapping,update,return,required,mapping,update
Engine -> Result -> public Mapping getRequiredMappingUpdate();1536828374;If the operation was aborted due to missing mappings, this method will return the mappings_that are required to complete the operation.;public Mapping getRequiredMappingUpdate() {_            return requiredMappingUpdate__        };if,the,operation,was,aborted,due,to,missing,mappings,this,method,will,return,the,mappings,that,are,required,to,complete,the,operation;public,mapping,get,required,mapping,update,return,required,mapping,update
Engine -> Result -> public Mapping getRequiredMappingUpdate();1537371806;If the operation was aborted due to missing mappings, this method will return the mappings_that are required to complete the operation.;public Mapping getRequiredMappingUpdate() {_            return requiredMappingUpdate__        };if,the,operation,was,aborted,due,to,missing,mappings,this,method,will,return,the,mappings,that,are,required,to,complete,the,operation;public,mapping,get,required,mapping,update,return,required,mapping,update
Engine -> Result -> public Mapping getRequiredMappingUpdate();1537806831;If the operation was aborted due to missing mappings, this method will return the mappings_that are required to complete the operation.;public Mapping getRequiredMappingUpdate() {_            return requiredMappingUpdate__        };if,the,operation,was,aborted,due,to,missing,mappings,this,method,will,return,the,mappings,that,are,required,to,complete,the,operation;public,mapping,get,required,mapping,update,return,required,mapping,update
Engine -> Result -> public Mapping getRequiredMappingUpdate();1538067637;If the operation was aborted due to missing mappings, this method will return the mappings_that are required to complete the operation.;public Mapping getRequiredMappingUpdate() {_            return requiredMappingUpdate__        };if,the,operation,was,aborted,due,to,missing,mappings,this,method,will,return,the,mappings,that,are,required,to,complete,the,operation;public,mapping,get,required,mapping,update,return,required,mapping,update
Engine -> Result -> public Mapping getRequiredMappingUpdate();1538424609;If the operation was aborted due to missing mappings, this method will return the mappings_that are required to complete the operation.;public Mapping getRequiredMappingUpdate() {_            return requiredMappingUpdate__        };if,the,operation,was,aborted,due,to,missing,mappings,this,method,will,return,the,mappings,that,are,required,to,complete,the,operation;public,mapping,get,required,mapping,update,return,required,mapping,update
Engine -> Result -> public Mapping getRequiredMappingUpdate();1539723533;If the operation was aborted due to missing mappings, this method will return the mappings_that are required to complete the operation.;public Mapping getRequiredMappingUpdate() {_            return requiredMappingUpdate__        };if,the,operation,was,aborted,due,to,missing,mappings,this,method,will,return,the,mappings,that,are,required,to,complete,the,operation;public,mapping,get,required,mapping,update,return,required,mapping,update
Engine -> Result -> public Mapping getRequiredMappingUpdate();1541618615;If the operation was aborted due to missing mappings, this method will return the mappings_that are required to complete the operation.;public Mapping getRequiredMappingUpdate() {_            return requiredMappingUpdate__        };if,the,operation,was,aborted,due,to,missing,mappings,this,method,will,return,the,mappings,that,are,required,to,complete,the,operation;public,mapping,get,required,mapping,update,return,required,mapping,update
Engine -> Result -> public Mapping getRequiredMappingUpdate();1542697754;If the operation was aborted due to missing mappings, this method will return the mappings_that are required to complete the operation.;public Mapping getRequiredMappingUpdate() {_            return requiredMappingUpdate__        };if,the,operation,was,aborted,due,to,missing,mappings,this,method,will,return,the,mappings,that,are,required,to,complete,the,operation;public,mapping,get,required,mapping,update,return,required,mapping,update
Engine -> Result -> public Mapping getRequiredMappingUpdate();1543047942;If the operation was aborted due to missing mappings, this method will return the mappings_that are required to complete the operation.;public Mapping getRequiredMappingUpdate() {_            return requiredMappingUpdate__        };if,the,operation,was,aborted,due,to,missing,mappings,this,method,will,return,the,mappings,that,are,required,to,complete,the,operation;public,mapping,get,required,mapping,update,return,required,mapping,update
Engine -> Result -> public Mapping getRequiredMappingUpdate();1544545090;If the operation was aborted due to missing mappings, this method will return the mappings_that are required to complete the operation.;public Mapping getRequiredMappingUpdate() {_            return requiredMappingUpdate__        };if,the,operation,was,aborted,due,to,missing,mappings,this,method,will,return,the,mappings,that,are,required,to,complete,the,operation;public,mapping,get,required,mapping,update,return,required,mapping,update
Engine -> Result -> public Mapping getRequiredMappingUpdate();1544684920;If the operation was aborted due to missing mappings, this method will return the mappings_that are required to complete the operation.;public Mapping getRequiredMappingUpdate() {_            return requiredMappingUpdate__        };if,the,operation,was,aborted,due,to,missing,mappings,this,method,will,return,the,mappings,that,are,required,to,complete,the,operation;public,mapping,get,required,mapping,update,return,required,mapping,update
Engine -> Result -> public Mapping getRequiredMappingUpdate();1545140118;If the operation was aborted due to missing mappings, this method will return the mappings_that are required to complete the operation.;public Mapping getRequiredMappingUpdate() {_            return requiredMappingUpdate__        };if,the,operation,was,aborted,due,to,missing,mappings,this,method,will,return,the,mappings,that,are,required,to,complete,the,operation;public,mapping,get,required,mapping,update,return,required,mapping,update
Engine -> Result -> public Mapping getRequiredMappingUpdate();1545221705;If the operation was aborted due to missing mappings, this method will return the mappings_that are required to complete the operation.;public Mapping getRequiredMappingUpdate() {_            return requiredMappingUpdate__        };if,the,operation,was,aborted,due,to,missing,mappings,this,method,will,return,the,mappings,that,are,required,to,complete,the,operation;public,mapping,get,required,mapping,update,return,required,mapping,update
Engine -> Result -> public Mapping getRequiredMappingUpdate();1547332999;If the operation was aborted due to missing mappings, this method will return the mappings_that are required to complete the operation.;public Mapping getRequiredMappingUpdate() {_            return requiredMappingUpdate__        };if,the,operation,was,aborted,due,to,missing,mappings,this,method,will,return,the,mappings,that,are,required,to,complete,the,operation;public,mapping,get,required,mapping,update,return,required,mapping,update
Engine -> Result -> public Mapping getRequiredMappingUpdate();1548771485;If the operation was aborted due to missing mappings, this method will return the mappings_that are required to complete the operation.;public Mapping getRequiredMappingUpdate() {_            return requiredMappingUpdate__        };if,the,operation,was,aborted,due,to,missing,mappings,this,method,will,return,the,mappings,that,are,required,to,complete,the,operation;public,mapping,get,required,mapping,update,return,required,mapping,update
Engine -> Result -> public Mapping getRequiredMappingUpdate();1549891630;If the operation was aborted due to missing mappings, this method will return the mappings_that are required to complete the operation.;public Mapping getRequiredMappingUpdate() {_            return requiredMappingUpdate__        };if,the,operation,was,aborted,due,to,missing,mappings,this,method,will,return,the,mappings,that,are,required,to,complete,the,operation;public,mapping,get,required,mapping,update,return,required,mapping,update
Engine -> Result -> public Mapping getRequiredMappingUpdate();1549975032;If the operation was aborted due to missing mappings, this method will return the mappings_that are required to complete the operation.;public Mapping getRequiredMappingUpdate() {_            return requiredMappingUpdate__        };if,the,operation,was,aborted,due,to,missing,mappings,this,method,will,return,the,mappings,that,are,required,to,complete,the,operation;public,mapping,get,required,mapping,update,return,required,mapping,update
Engine -> Result -> public Mapping getRequiredMappingUpdate();1550220204;If the operation was aborted due to missing mappings, this method will return the mappings_that are required to complete the operation.;public Mapping getRequiredMappingUpdate() {_            return requiredMappingUpdate__        };if,the,operation,was,aborted,due,to,missing,mappings,this,method,will,return,the,mappings,that,are,required,to,complete,the,operation;public,mapping,get,required,mapping,update,return,required,mapping,update
Engine -> Result -> public Mapping getRequiredMappingUpdate();1550526771;If the operation was aborted due to missing mappings, this method will return the mappings_that are required to complete the operation.;public Mapping getRequiredMappingUpdate() {_            return requiredMappingUpdate__        };if,the,operation,was,aborted,due,to,missing,mappings,this,method,will,return,the,mappings,that,are,required,to,complete,the,operation;public,mapping,get,required,mapping,update,return,required,mapping,update
Engine -> Result -> public Mapping getRequiredMappingUpdate();1551110274;If the operation was aborted due to missing mappings, this method will return the mappings_that are required to complete the operation.;public Mapping getRequiredMappingUpdate() {_            return requiredMappingUpdate__        };if,the,operation,was,aborted,due,to,missing,mappings,this,method,will,return,the,mappings,that,are,required,to,complete,the,operation;public,mapping,get,required,mapping,update,return,required,mapping,update
Engine -> Result -> public Mapping getRequiredMappingUpdate();1551126708;If the operation was aborted due to missing mappings, this method will return the mappings_that are required to complete the operation.;public Mapping getRequiredMappingUpdate() {_            return requiredMappingUpdate__        };if,the,operation,was,aborted,due,to,missing,mappings,this,method,will,return,the,mappings,that,are,required,to,complete,the,operation;public,mapping,get,required,mapping,update,return,required,mapping,update
Engine -> public abstract boolean hasCompleteOperationHistory(String source, MapperService mapperService, long startingSeqNo) throws IOException_;1535723122;Checks if this engine has every operations since  {@code startingSeqNo}(inclusive) in its history (either Lucene or translog);public abstract boolean hasCompleteOperationHistory(String source, MapperService mapperService, long startingSeqNo) throws IOException_;checks,if,this,engine,has,every,operations,since,code,starting,seq,no,inclusive,in,its,history,either,lucene,or,translog;public,abstract,boolean,has,complete,operation,history,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract boolean hasCompleteOperationHistory(String source, MapperService mapperService, long startingSeqNo) throws IOException_;1535965276;Checks if this engine has every operations since  {@code startingSeqNo}(inclusive) in its history (either Lucene or translog);public abstract boolean hasCompleteOperationHistory(String source, MapperService mapperService, long startingSeqNo) throws IOException_;checks,if,this,engine,has,every,operations,since,code,starting,seq,no,inclusive,in,its,history,either,lucene,or,translog;public,abstract,boolean,has,complete,operation,history,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract boolean hasCompleteOperationHistory(String source, MapperService mapperService, long startingSeqNo) throws IOException_;1536314350;Checks if this engine has every operations since  {@code startingSeqNo}(inclusive) in its history (either Lucene or translog);public abstract boolean hasCompleteOperationHistory(String source, MapperService mapperService, long startingSeqNo) throws IOException_;checks,if,this,engine,has,every,operations,since,code,starting,seq,no,inclusive,in,its,history,either,lucene,or,translog;public,abstract,boolean,has,complete,operation,history,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract boolean hasCompleteOperationHistory(String source, MapperService mapperService, long startingSeqNo) throws IOException_;1536828374;Checks if this engine has every operations since  {@code startingSeqNo}(inclusive) in its history (either Lucene or translog);public abstract boolean hasCompleteOperationHistory(String source, MapperService mapperService, long startingSeqNo) throws IOException_;checks,if,this,engine,has,every,operations,since,code,starting,seq,no,inclusive,in,its,history,either,lucene,or,translog;public,abstract,boolean,has,complete,operation,history,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract boolean hasCompleteOperationHistory(String source, MapperService mapperService, long startingSeqNo) throws IOException_;1537371806;Checks if this engine has every operations since  {@code startingSeqNo}(inclusive) in its history (either Lucene or translog);public abstract boolean hasCompleteOperationHistory(String source, MapperService mapperService, long startingSeqNo) throws IOException_;checks,if,this,engine,has,every,operations,since,code,starting,seq,no,inclusive,in,its,history,either,lucene,or,translog;public,abstract,boolean,has,complete,operation,history,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract boolean hasCompleteOperationHistory(String source, MapperService mapperService, long startingSeqNo) throws IOException_;1537806831;Checks if this engine has every operations since  {@code startingSeqNo}(inclusive) in its history (either Lucene or translog);public abstract boolean hasCompleteOperationHistory(String source, MapperService mapperService, long startingSeqNo) throws IOException_;checks,if,this,engine,has,every,operations,since,code,starting,seq,no,inclusive,in,its,history,either,lucene,or,translog;public,abstract,boolean,has,complete,operation,history,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract boolean hasCompleteOperationHistory(String source, MapperService mapperService, long startingSeqNo) throws IOException_;1538067637;Checks if this engine has every operations since  {@code startingSeqNo}(inclusive) in its history (either Lucene or translog);public abstract boolean hasCompleteOperationHistory(String source, MapperService mapperService, long startingSeqNo) throws IOException_;checks,if,this,engine,has,every,operations,since,code,starting,seq,no,inclusive,in,its,history,either,lucene,or,translog;public,abstract,boolean,has,complete,operation,history,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract boolean hasCompleteOperationHistory(String source, MapperService mapperService, long startingSeqNo) throws IOException_;1538424609;Checks if this engine has every operations since  {@code startingSeqNo}(inclusive) in its history (either Lucene or translog);public abstract boolean hasCompleteOperationHistory(String source, MapperService mapperService, long startingSeqNo) throws IOException_;checks,if,this,engine,has,every,operations,since,code,starting,seq,no,inclusive,in,its,history,either,lucene,or,translog;public,abstract,boolean,has,complete,operation,history,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract boolean hasCompleteOperationHistory(String source, MapperService mapperService, long startingSeqNo) throws IOException_;1539723533;Checks if this engine has every operations since  {@code startingSeqNo}(inclusive) in its history (either Lucene or translog);public abstract boolean hasCompleteOperationHistory(String source, MapperService mapperService, long startingSeqNo) throws IOException_;checks,if,this,engine,has,every,operations,since,code,starting,seq,no,inclusive,in,its,history,either,lucene,or,translog;public,abstract,boolean,has,complete,operation,history,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract boolean hasCompleteOperationHistory(String source, MapperService mapperService, long startingSeqNo) throws IOException_;1541618615;Checks if this engine has every operations since  {@code startingSeqNo}(inclusive) in its history (either Lucene or translog);public abstract boolean hasCompleteOperationHistory(String source, MapperService mapperService, long startingSeqNo) throws IOException_;checks,if,this,engine,has,every,operations,since,code,starting,seq,no,inclusive,in,its,history,either,lucene,or,translog;public,abstract,boolean,has,complete,operation,history,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract boolean hasCompleteOperationHistory(String source, MapperService mapperService, long startingSeqNo) throws IOException_;1542697754;Checks if this engine has every operations since  {@code startingSeqNo}(inclusive) in its history (either Lucene or translog);public abstract boolean hasCompleteOperationHistory(String source, MapperService mapperService, long startingSeqNo) throws IOException_;checks,if,this,engine,has,every,operations,since,code,starting,seq,no,inclusive,in,its,history,either,lucene,or,translog;public,abstract,boolean,has,complete,operation,history,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract boolean hasCompleteOperationHistory(String source, MapperService mapperService, long startingSeqNo) throws IOException_;1543047942;Checks if this engine has every operations since  {@code startingSeqNo}(inclusive) in its history (either Lucene or translog);public abstract boolean hasCompleteOperationHistory(String source, MapperService mapperService, long startingSeqNo) throws IOException_;checks,if,this,engine,has,every,operations,since,code,starting,seq,no,inclusive,in,its,history,either,lucene,or,translog;public,abstract,boolean,has,complete,operation,history,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract boolean hasCompleteOperationHistory(String source, MapperService mapperService, long startingSeqNo) throws IOException_;1544545090;Checks if this engine has every operations since  {@code startingSeqNo}(inclusive) in its history (either Lucene or translog);public abstract boolean hasCompleteOperationHistory(String source, MapperService mapperService, long startingSeqNo) throws IOException_;checks,if,this,engine,has,every,operations,since,code,starting,seq,no,inclusive,in,its,history,either,lucene,or,translog;public,abstract,boolean,has,complete,operation,history,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract boolean hasCompleteOperationHistory(String source, MapperService mapperService, long startingSeqNo) throws IOException_;1544684920;Checks if this engine has every operations since  {@code startingSeqNo}(inclusive) in its history (either Lucene or translog);public abstract boolean hasCompleteOperationHistory(String source, MapperService mapperService, long startingSeqNo) throws IOException_;checks,if,this,engine,has,every,operations,since,code,starting,seq,no,inclusive,in,its,history,either,lucene,or,translog;public,abstract,boolean,has,complete,operation,history,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract boolean hasCompleteOperationHistory(String source, MapperService mapperService, long startingSeqNo) throws IOException_;1545140118;Checks if this engine has every operations since  {@code startingSeqNo}(inclusive) in its history (either Lucene or translog);public abstract boolean hasCompleteOperationHistory(String source, MapperService mapperService, long startingSeqNo) throws IOException_;checks,if,this,engine,has,every,operations,since,code,starting,seq,no,inclusive,in,its,history,either,lucene,or,translog;public,abstract,boolean,has,complete,operation,history,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract boolean hasCompleteOperationHistory(String source, MapperService mapperService, long startingSeqNo) throws IOException_;1545221705;Checks if this engine has every operations since  {@code startingSeqNo}(inclusive) in its history (either Lucene or translog);public abstract boolean hasCompleteOperationHistory(String source, MapperService mapperService, long startingSeqNo) throws IOException_;checks,if,this,engine,has,every,operations,since,code,starting,seq,no,inclusive,in,its,history,either,lucene,or,translog;public,abstract,boolean,has,complete,operation,history,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract boolean hasCompleteOperationHistory(String source, MapperService mapperService, long startingSeqNo) throws IOException_;1547332999;Checks if this engine has every operations since  {@code startingSeqNo}(inclusive) in its history (either Lucene or translog);public abstract boolean hasCompleteOperationHistory(String source, MapperService mapperService, long startingSeqNo) throws IOException_;checks,if,this,engine,has,every,operations,since,code,starting,seq,no,inclusive,in,its,history,either,lucene,or,translog;public,abstract,boolean,has,complete,operation,history,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract boolean hasCompleteOperationHistory(String source, MapperService mapperService, long startingSeqNo) throws IOException_;1548771485;Checks if this engine has every operations since  {@code startingSeqNo}(inclusive) in its history (either Lucene or translog);public abstract boolean hasCompleteOperationHistory(String source, MapperService mapperService, long startingSeqNo) throws IOException_;checks,if,this,engine,has,every,operations,since,code,starting,seq,no,inclusive,in,its,history,either,lucene,or,translog;public,abstract,boolean,has,complete,operation,history,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract boolean hasCompleteOperationHistory(String source, MapperService mapperService, long startingSeqNo) throws IOException_;1549891630;Checks if this engine has every operations since  {@code startingSeqNo}(inclusive) in its history (either Lucene or translog);public abstract boolean hasCompleteOperationHistory(String source, MapperService mapperService, long startingSeqNo) throws IOException_;checks,if,this,engine,has,every,operations,since,code,starting,seq,no,inclusive,in,its,history,either,lucene,or,translog;public,abstract,boolean,has,complete,operation,history,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract boolean hasCompleteOperationHistory(String source, MapperService mapperService, long startingSeqNo) throws IOException_;1549975032;Checks if this engine has every operations since  {@code startingSeqNo}(inclusive) in its history (either Lucene or translog);public abstract boolean hasCompleteOperationHistory(String source, MapperService mapperService, long startingSeqNo) throws IOException_;checks,if,this,engine,has,every,operations,since,code,starting,seq,no,inclusive,in,its,history,either,lucene,or,translog;public,abstract,boolean,has,complete,operation,history,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract boolean hasCompleteOperationHistory(String source, MapperService mapperService, long startingSeqNo) throws IOException_;1550220204;Checks if this engine has every operations since  {@code startingSeqNo}(inclusive) in its translog;public abstract boolean hasCompleteOperationHistory(String source, MapperService mapperService, long startingSeqNo) throws IOException_;checks,if,this,engine,has,every,operations,since,code,starting,seq,no,inclusive,in,its,translog;public,abstract,boolean,has,complete,operation,history,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract boolean hasCompleteOperationHistory(String source, MapperService mapperService, long startingSeqNo) throws IOException_;1550526771;Checks if this engine has every operations since  {@code startingSeqNo}(inclusive) in its translog;public abstract boolean hasCompleteOperationHistory(String source, MapperService mapperService, long startingSeqNo) throws IOException_;checks,if,this,engine,has,every,operations,since,code,starting,seq,no,inclusive,in,its,translog;public,abstract,boolean,has,complete,operation,history,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract boolean hasCompleteOperationHistory(String source, MapperService mapperService, long startingSeqNo) throws IOException_;1551110274;Checks if this engine has every operations since  {@code startingSeqNo}(inclusive) in its translog;public abstract boolean hasCompleteOperationHistory(String source, MapperService mapperService, long startingSeqNo) throws IOException_;checks,if,this,engine,has,every,operations,since,code,starting,seq,no,inclusive,in,its,translog;public,abstract,boolean,has,complete,operation,history,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract boolean hasCompleteOperationHistory(String source, MapperService mapperService, long startingSeqNo) throws IOException_;1551126708;Checks if this engine has every operations since  {@code startingSeqNo}(inclusive) in its translog;public abstract boolean hasCompleteOperationHistory(String source, MapperService mapperService, long startingSeqNo) throws IOException_;checks,if,this,engine,has,every,operations,since,code,starting,seq,no,inclusive,in,its,translog;public,abstract,boolean,has,complete,operation,history,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract Translog.Location getTranslogLastWriteLocation()_;1528762805;Returns the last location that the translog of this engine has written into.;public abstract Translog.Location getTranslogLastWriteLocation()_;returns,the,last,location,that,the,translog,of,this,engine,has,written,into;public,abstract,translog,location,get,translog,last,write,location
Engine -> public abstract Translog.Location getTranslogLastWriteLocation()_;1531910483;Returns the last location that the translog of this engine has written into.;public abstract Translog.Location getTranslogLastWriteLocation()_;returns,the,last,location,that,the,translog,of,this,engine,has,written,into;public,abstract,translog,location,get,translog,last,write,location
Engine -> public abstract Translog.Location getTranslogLastWriteLocation()_;1532685069;Returns the last location that the translog of this engine has written into.;public abstract Translog.Location getTranslogLastWriteLocation()_;returns,the,last,location,that,the,translog,of,this,engine,has,written,into;public,abstract,translog,location,get,translog,last,write,location
Engine -> public abstract Translog.Location getTranslogLastWriteLocation()_;1533295538;Returns the last location that the translog of this engine has written into.;public abstract Translog.Location getTranslogLastWriteLocation()_;returns,the,last,location,that,the,translog,of,this,engine,has,written,into;public,abstract,translog,location,get,translog,last,write,location
Engine -> public abstract Translog.Location getTranslogLastWriteLocation()_;1535046779;Returns the last location that the translog of this engine has written into.;public abstract Translog.Location getTranslogLastWriteLocation()_;returns,the,last,location,that,the,translog,of,this,engine,has,written,into;public,abstract,translog,location,get,translog,last,write,location
Engine -> public abstract Translog.Location getTranslogLastWriteLocation()_;1535723122;Returns the last location that the translog of this engine has written into.;public abstract Translog.Location getTranslogLastWriteLocation()_;returns,the,last,location,that,the,translog,of,this,engine,has,written,into;public,abstract,translog,location,get,translog,last,write,location
Engine -> public abstract Translog.Location getTranslogLastWriteLocation()_;1535965276;Returns the last location that the translog of this engine has written into.;public abstract Translog.Location getTranslogLastWriteLocation()_;returns,the,last,location,that,the,translog,of,this,engine,has,written,into;public,abstract,translog,location,get,translog,last,write,location
Engine -> public abstract Translog.Location getTranslogLastWriteLocation()_;1536314350;Returns the last location that the translog of this engine has written into.;public abstract Translog.Location getTranslogLastWriteLocation()_;returns,the,last,location,that,the,translog,of,this,engine,has,written,into;public,abstract,translog,location,get,translog,last,write,location
Engine -> public abstract Translog.Location getTranslogLastWriteLocation()_;1536828374;Returns the last location that the translog of this engine has written into.;public abstract Translog.Location getTranslogLastWriteLocation()_;returns,the,last,location,that,the,translog,of,this,engine,has,written,into;public,abstract,translog,location,get,translog,last,write,location
Engine -> public abstract Translog.Location getTranslogLastWriteLocation()_;1537371806;Returns the last location that the translog of this engine has written into.;public abstract Translog.Location getTranslogLastWriteLocation()_;returns,the,last,location,that,the,translog,of,this,engine,has,written,into;public,abstract,translog,location,get,translog,last,write,location
Engine -> public abstract Translog.Location getTranslogLastWriteLocation()_;1537806831;Returns the last location that the translog of this engine has written into.;public abstract Translog.Location getTranslogLastWriteLocation()_;returns,the,last,location,that,the,translog,of,this,engine,has,written,into;public,abstract,translog,location,get,translog,last,write,location
Engine -> public abstract Translog.Location getTranslogLastWriteLocation()_;1538067637;Returns the last location that the translog of this engine has written into.;public abstract Translog.Location getTranslogLastWriteLocation()_;returns,the,last,location,that,the,translog,of,this,engine,has,written,into;public,abstract,translog,location,get,translog,last,write,location
Engine -> public abstract Translog.Location getTranslogLastWriteLocation()_;1538424609;Returns the last location that the translog of this engine has written into.;public abstract Translog.Location getTranslogLastWriteLocation()_;returns,the,last,location,that,the,translog,of,this,engine,has,written,into;public,abstract,translog,location,get,translog,last,write,location
Engine -> public abstract Translog.Location getTranslogLastWriteLocation()_;1539723533;Returns the last location that the translog of this engine has written into.;public abstract Translog.Location getTranslogLastWriteLocation()_;returns,the,last,location,that,the,translog,of,this,engine,has,written,into;public,abstract,translog,location,get,translog,last,write,location
Engine -> public abstract Translog.Location getTranslogLastWriteLocation()_;1541618615;Returns the last location that the translog of this engine has written into.;public abstract Translog.Location getTranslogLastWriteLocation()_;returns,the,last,location,that,the,translog,of,this,engine,has,written,into;public,abstract,translog,location,get,translog,last,write,location
Engine -> public abstract Translog.Location getTranslogLastWriteLocation()_;1542697754;Returns the last location that the translog of this engine has written into.;public abstract Translog.Location getTranslogLastWriteLocation()_;returns,the,last,location,that,the,translog,of,this,engine,has,written,into;public,abstract,translog,location,get,translog,last,write,location
Engine -> public abstract Translog.Location getTranslogLastWriteLocation()_;1543047942;Returns the last location that the translog of this engine has written into.;public abstract Translog.Location getTranslogLastWriteLocation()_;returns,the,last,location,that,the,translog,of,this,engine,has,written,into;public,abstract,translog,location,get,translog,last,write,location
Engine -> public abstract Translog.Location getTranslogLastWriteLocation()_;1544545090;Returns the last location that the translog of this engine has written into.;public abstract Translog.Location getTranslogLastWriteLocation()_;returns,the,last,location,that,the,translog,of,this,engine,has,written,into;public,abstract,translog,location,get,translog,last,write,location
Engine -> public abstract Translog.Location getTranslogLastWriteLocation()_;1544684920;Returns the last location that the translog of this engine has written into.;public abstract Translog.Location getTranslogLastWriteLocation()_;returns,the,last,location,that,the,translog,of,this,engine,has,written,into;public,abstract,translog,location,get,translog,last,write,location
Engine -> public abstract Translog.Location getTranslogLastWriteLocation()_;1545140118;Returns the last location that the translog of this engine has written into.;public abstract Translog.Location getTranslogLastWriteLocation()_;returns,the,last,location,that,the,translog,of,this,engine,has,written,into;public,abstract,translog,location,get,translog,last,write,location
Engine -> public abstract Translog.Location getTranslogLastWriteLocation()_;1545221705;Returns the last location that the translog of this engine has written into.;public abstract Translog.Location getTranslogLastWriteLocation()_;returns,the,last,location,that,the,translog,of,this,engine,has,written,into;public,abstract,translog,location,get,translog,last,write,location
Engine -> public abstract Translog.Location getTranslogLastWriteLocation()_;1547332999;Returns the last location that the translog of this engine has written into.;public abstract Translog.Location getTranslogLastWriteLocation()_;returns,the,last,location,that,the,translog,of,this,engine,has,written,into;public,abstract,translog,location,get,translog,last,write,location
Engine -> public abstract Translog.Location getTranslogLastWriteLocation()_;1548771485;Returns the last location that the translog of this engine has written into.;public abstract Translog.Location getTranslogLastWriteLocation()_;returns,the,last,location,that,the,translog,of,this,engine,has,written,into;public,abstract,translog,location,get,translog,last,write,location
Engine -> public abstract Translog.Location getTranslogLastWriteLocation()_;1549891630;Returns the last location that the translog of this engine has written into.;public abstract Translog.Location getTranslogLastWriteLocation()_;returns,the,last,location,that,the,translog,of,this,engine,has,written,into;public,abstract,translog,location,get,translog,last,write,location
Engine -> public abstract Translog.Location getTranslogLastWriteLocation()_;1549975032;Returns the last location that the translog of this engine has written into.;public abstract Translog.Location getTranslogLastWriteLocation()_;returns,the,last,location,that,the,translog,of,this,engine,has,written,into;public,abstract,translog,location,get,translog,last,write,location
Engine -> public abstract Translog.Location getTranslogLastWriteLocation()_;1550220204;Returns the last location that the translog of this engine has written into.;public abstract Translog.Location getTranslogLastWriteLocation()_;returns,the,last,location,that,the,translog,of,this,engine,has,written,into;public,abstract,translog,location,get,translog,last,write,location
Engine -> public abstract Translog.Location getTranslogLastWriteLocation()_;1550526771;Returns the last location that the translog of this engine has written into.;public abstract Translog.Location getTranslogLastWriteLocation()_;returns,the,last,location,that,the,translog,of,this,engine,has,written,into;public,abstract,translog,location,get,translog,last,write,location
Engine -> public abstract Translog.Location getTranslogLastWriteLocation()_;1551110274;Returns the last location that the translog of this engine has written into.;public abstract Translog.Location getTranslogLastWriteLocation()_;returns,the,last,location,that,the,translog,of,this,engine,has,written,into;public,abstract,translog,location,get,translog,last,write,location
Engine -> public abstract Translog.Location getTranslogLastWriteLocation()_;1551126708;Returns the last location that the translog of this engine has written into.;public abstract Translog.Location getTranslogLastWriteLocation()_;returns,the,last,location,that,the,translog,of,this,engine,has,written,into;public,abstract,translog,location,get,translog,last,write,location
Engine -> public abstract Engine recoverFromTranslog(long recoverUpToSeqNo) throws IOException_;1535046779;Performs recovery from the transaction log up to {@code recoverUpToSeqNo} (inclusive)._This operation will close the engine if the recovery fails.__@param recoverUpToSeqNo the upper bound, inclusive, of sequence number to be recovered;public abstract Engine recoverFromTranslog(long recoverUpToSeqNo) throws IOException_;performs,recovery,from,the,transaction,log,up,to,code,recover,up,to,seq,no,inclusive,this,operation,will,close,the,engine,if,the,recovery,fails,param,recover,up,to,seq,no,the,upper,bound,inclusive,of,sequence,number,to,be,recovered;public,abstract,engine,recover,from,translog,long,recover,up,to,seq,no,throws,ioexception
Engine -> public abstract Engine recoverFromTranslog(long recoverUpToSeqNo) throws IOException_;1535723122;Performs recovery from the transaction log up to {@code recoverUpToSeqNo} (inclusive)._This operation will close the engine if the recovery fails.__@param recoverUpToSeqNo the upper bound, inclusive, of sequence number to be recovered;public abstract Engine recoverFromTranslog(long recoverUpToSeqNo) throws IOException_;performs,recovery,from,the,transaction,log,up,to,code,recover,up,to,seq,no,inclusive,this,operation,will,close,the,engine,if,the,recovery,fails,param,recover,up,to,seq,no,the,upper,bound,inclusive,of,sequence,number,to,be,recovered;public,abstract,engine,recover,from,translog,long,recover,up,to,seq,no,throws,ioexception
Engine -> public abstract Engine recoverFromTranslog(long recoverUpToSeqNo) throws IOException_;1535965276;Performs recovery from the transaction log up to {@code recoverUpToSeqNo} (inclusive)._This operation will close the engine if the recovery fails.__@param recoverUpToSeqNo the upper bound, inclusive, of sequence number to be recovered;public abstract Engine recoverFromTranslog(long recoverUpToSeqNo) throws IOException_;performs,recovery,from,the,transaction,log,up,to,code,recover,up,to,seq,no,inclusive,this,operation,will,close,the,engine,if,the,recovery,fails,param,recover,up,to,seq,no,the,upper,bound,inclusive,of,sequence,number,to,be,recovered;public,abstract,engine,recover,from,translog,long,recover,up,to,seq,no,throws,ioexception
Engine -> public abstract Engine recoverFromTranslog() throws IOException_;1524684173;Performs recovery from the transaction log._This operation will close the engine if the recovery fails.;public abstract Engine recoverFromTranslog() throws IOException_;performs,recovery,from,the,transaction,log,this,operation,will,close,the,engine,if,the,recovery,fails;public,abstract,engine,recover,from,translog,throws,ioexception
Engine -> public abstract Engine recoverFromTranslog() throws IOException_;1525162917;Performs recovery from the transaction log._This operation will close the engine if the recovery fails.;public abstract Engine recoverFromTranslog() throws IOException_;performs,recovery,from,the,transaction,log,this,operation,will,close,the,engine,if,the,recovery,fails;public,abstract,engine,recover,from,translog,throws,ioexception
Engine -> public abstract Engine recoverFromTranslog() throws IOException_;1525334055;Performs recovery from the transaction log._This operation will close the engine if the recovery fails.;public abstract Engine recoverFromTranslog() throws IOException_;performs,recovery,from,the,transaction,log,this,operation,will,close,the,engine,if,the,recovery,fails;public,abstract,engine,recover,from,translog,throws,ioexception
Engine -> public abstract Engine recoverFromTranslog() throws IOException_;1527583663;Performs recovery from the transaction log._This operation will close the engine if the recovery fails.;public abstract Engine recoverFromTranslog() throws IOException_;performs,recovery,from,the,transaction,log,this,operation,will,close,the,engine,if,the,recovery,fails;public,abstract,engine,recover,from,translog,throws,ioexception
Engine -> public abstract Engine recoverFromTranslog() throws IOException_;1528706846;Performs recovery from the transaction log._This operation will close the engine if the recovery fails.;public abstract Engine recoverFromTranslog() throws IOException_;performs,recovery,from,the,transaction,log,this,operation,will,close,the,engine,if,the,recovery,fails;public,abstract,engine,recover,from,translog,throws,ioexception
Engine -> public abstract Engine recoverFromTranslog() throws IOException_;1528762805;Performs recovery from the transaction log._This operation will close the engine if the recovery fails.;public abstract Engine recoverFromTranslog() throws IOException_;performs,recovery,from,the,transaction,log,this,operation,will,close,the,engine,if,the,recovery,fails;public,abstract,engine,recover,from,translog,throws,ioexception
Engine -> public abstract Engine recoverFromTranslog() throws IOException_;1531910483;Performs recovery from the transaction log._This operation will close the engine if the recovery fails.;public abstract Engine recoverFromTranslog() throws IOException_;performs,recovery,from,the,transaction,log,this,operation,will,close,the,engine,if,the,recovery,fails;public,abstract,engine,recover,from,translog,throws,ioexception
Engine -> public abstract Engine recoverFromTranslog() throws IOException_;1532685069;Performs recovery from the transaction log._This operation will close the engine if the recovery fails.;public abstract Engine recoverFromTranslog() throws IOException_;performs,recovery,from,the,transaction,log,this,operation,will,close,the,engine,if,the,recovery,fails;public,abstract,engine,recover,from,translog,throws,ioexception
Engine -> public abstract Engine recoverFromTranslog() throws IOException_;1533295538;Performs recovery from the transaction log._This operation will close the engine if the recovery fails.;public abstract Engine recoverFromTranslog() throws IOException_;performs,recovery,from,the,transaction,log,this,operation,will,close,the,engine,if,the,recovery,fails;public,abstract,engine,recover,from,translog,throws,ioexception
Engine -> public abstract long getLastSyncedGlobalCheckpoint()_;1528762805;Returns the latest global checkpoint value that has been persisted in the underlying storage (i.e. translog's checkpoint);public abstract long getLastSyncedGlobalCheckpoint()_;returns,the,latest,global,checkpoint,value,that,has,been,persisted,in,the,underlying,storage,i,e,translog,s,checkpoint;public,abstract,long,get,last,synced,global,checkpoint
Engine -> public abstract long getLastSyncedGlobalCheckpoint()_;1531910483;Returns the latest global checkpoint value that has been persisted in the underlying storage (i.e. translog's checkpoint);public abstract long getLastSyncedGlobalCheckpoint()_;returns,the,latest,global,checkpoint,value,that,has,been,persisted,in,the,underlying,storage,i,e,translog,s,checkpoint;public,abstract,long,get,last,synced,global,checkpoint
Engine -> public abstract long getLastSyncedGlobalCheckpoint()_;1532685069;Returns the latest global checkpoint value that has been persisted in the underlying storage (i.e. translog's checkpoint);public abstract long getLastSyncedGlobalCheckpoint()_;returns,the,latest,global,checkpoint,value,that,has,been,persisted,in,the,underlying,storage,i,e,translog,s,checkpoint;public,abstract,long,get,last,synced,global,checkpoint
Engine -> public abstract long getLastSyncedGlobalCheckpoint()_;1533295538;Returns the latest global checkpoint value that has been persisted in the underlying storage (i.e. translog's checkpoint);public abstract long getLastSyncedGlobalCheckpoint()_;returns,the,latest,global,checkpoint,value,that,has,been,persisted,in,the,underlying,storage,i,e,translog,s,checkpoint;public,abstract,long,get,last,synced,global,checkpoint
Engine -> public abstract long getLastSyncedGlobalCheckpoint()_;1535046779;Returns the latest global checkpoint value that has been persisted in the underlying storage (i.e. translog's checkpoint);public abstract long getLastSyncedGlobalCheckpoint()_;returns,the,latest,global,checkpoint,value,that,has,been,persisted,in,the,underlying,storage,i,e,translog,s,checkpoint;public,abstract,long,get,last,synced,global,checkpoint
Engine -> public abstract long getLastSyncedGlobalCheckpoint()_;1535723122;Returns the latest global checkpoint value that has been persisted in the underlying storage (i.e. translog's checkpoint);public abstract long getLastSyncedGlobalCheckpoint()_;returns,the,latest,global,checkpoint,value,that,has,been,persisted,in,the,underlying,storage,i,e,translog,s,checkpoint;public,abstract,long,get,last,synced,global,checkpoint
Engine -> public abstract long getLastSyncedGlobalCheckpoint()_;1535965276;Returns the latest global checkpoint value that has been persisted in the underlying storage (i.e. translog's checkpoint);public abstract long getLastSyncedGlobalCheckpoint()_;returns,the,latest,global,checkpoint,value,that,has,been,persisted,in,the,underlying,storage,i,e,translog,s,checkpoint;public,abstract,long,get,last,synced,global,checkpoint
Engine -> public abstract long getLastSyncedGlobalCheckpoint()_;1536314350;Returns the latest global checkpoint value that has been persisted in the underlying storage (i.e. translog's checkpoint);public abstract long getLastSyncedGlobalCheckpoint()_;returns,the,latest,global,checkpoint,value,that,has,been,persisted,in,the,underlying,storage,i,e,translog,s,checkpoint;public,abstract,long,get,last,synced,global,checkpoint
Engine -> public abstract long getLastSyncedGlobalCheckpoint()_;1536828374;Returns the latest global checkpoint value that has been persisted in the underlying storage (i.e. translog's checkpoint);public abstract long getLastSyncedGlobalCheckpoint()_;returns,the,latest,global,checkpoint,value,that,has,been,persisted,in,the,underlying,storage,i,e,translog,s,checkpoint;public,abstract,long,get,last,synced,global,checkpoint
Engine -> public abstract long getLastSyncedGlobalCheckpoint()_;1537371806;Returns the latest global checkpoint value that has been persisted in the underlying storage (i.e. translog's checkpoint);public abstract long getLastSyncedGlobalCheckpoint()_;returns,the,latest,global,checkpoint,value,that,has,been,persisted,in,the,underlying,storage,i,e,translog,s,checkpoint;public,abstract,long,get,last,synced,global,checkpoint
Engine -> public abstract long getLastSyncedGlobalCheckpoint()_;1537806831;Returns the latest global checkpoint value that has been persisted in the underlying storage (i.e. translog's checkpoint);public abstract long getLastSyncedGlobalCheckpoint()_;returns,the,latest,global,checkpoint,value,that,has,been,persisted,in,the,underlying,storage,i,e,translog,s,checkpoint;public,abstract,long,get,last,synced,global,checkpoint
Engine -> public abstract long getLastSyncedGlobalCheckpoint()_;1538067637;Returns the latest global checkpoint value that has been persisted in the underlying storage (i.e. translog's checkpoint);public abstract long getLastSyncedGlobalCheckpoint()_;returns,the,latest,global,checkpoint,value,that,has,been,persisted,in,the,underlying,storage,i,e,translog,s,checkpoint;public,abstract,long,get,last,synced,global,checkpoint
Engine -> public abstract long getLastSyncedGlobalCheckpoint()_;1538424609;Returns the latest global checkpoint value that has been persisted in the underlying storage (i.e. translog's checkpoint);public abstract long getLastSyncedGlobalCheckpoint()_;returns,the,latest,global,checkpoint,value,that,has,been,persisted,in,the,underlying,storage,i,e,translog,s,checkpoint;public,abstract,long,get,last,synced,global,checkpoint
Engine -> public abstract long getLastSyncedGlobalCheckpoint()_;1539723533;Returns the latest global checkpoint value that has been persisted in the underlying storage (i.e. translog's checkpoint);public abstract long getLastSyncedGlobalCheckpoint()_;returns,the,latest,global,checkpoint,value,that,has,been,persisted,in,the,underlying,storage,i,e,translog,s,checkpoint;public,abstract,long,get,last,synced,global,checkpoint
Engine -> public abstract long getLastSyncedGlobalCheckpoint()_;1541618615;Returns the latest global checkpoint value that has been persisted in the underlying storage (i.e. translog's checkpoint);public abstract long getLastSyncedGlobalCheckpoint()_;returns,the,latest,global,checkpoint,value,that,has,been,persisted,in,the,underlying,storage,i,e,translog,s,checkpoint;public,abstract,long,get,last,synced,global,checkpoint
Engine -> public abstract long getLastSyncedGlobalCheckpoint()_;1542697754;Returns the latest global checkpoint value that has been persisted in the underlying storage (i.e. translog's checkpoint);public abstract long getLastSyncedGlobalCheckpoint()_;returns,the,latest,global,checkpoint,value,that,has,been,persisted,in,the,underlying,storage,i,e,translog,s,checkpoint;public,abstract,long,get,last,synced,global,checkpoint
Engine -> public abstract long getLastSyncedGlobalCheckpoint()_;1543047942;Returns the latest global checkpoint value that has been persisted in the underlying storage (i.e. translog's checkpoint);public abstract long getLastSyncedGlobalCheckpoint()_;returns,the,latest,global,checkpoint,value,that,has,been,persisted,in,the,underlying,storage,i,e,translog,s,checkpoint;public,abstract,long,get,last,synced,global,checkpoint
Engine -> public abstract long getLastSyncedGlobalCheckpoint()_;1544545090;Returns the latest global checkpoint value that has been persisted in the underlying storage (i.e. translog's checkpoint);public abstract long getLastSyncedGlobalCheckpoint()_;returns,the,latest,global,checkpoint,value,that,has,been,persisted,in,the,underlying,storage,i,e,translog,s,checkpoint;public,abstract,long,get,last,synced,global,checkpoint
Engine -> public abstract long getLastSyncedGlobalCheckpoint()_;1544684920;Returns the latest global checkpoint value that has been persisted in the underlying storage (i.e. translog's checkpoint);public abstract long getLastSyncedGlobalCheckpoint()_;returns,the,latest,global,checkpoint,value,that,has,been,persisted,in,the,underlying,storage,i,e,translog,s,checkpoint;public,abstract,long,get,last,synced,global,checkpoint
Engine -> public abstract long getLastSyncedGlobalCheckpoint()_;1545140118;Returns the latest global checkpoint value that has been persisted in the underlying storage (i.e. translog's checkpoint);public abstract long getLastSyncedGlobalCheckpoint()_;returns,the,latest,global,checkpoint,value,that,has,been,persisted,in,the,underlying,storage,i,e,translog,s,checkpoint;public,abstract,long,get,last,synced,global,checkpoint
Engine -> public abstract long getLastSyncedGlobalCheckpoint()_;1545221705;Returns the latest global checkpoint value that has been persisted in the underlying storage (i.e. translog's checkpoint);public abstract long getLastSyncedGlobalCheckpoint()_;returns,the,latest,global,checkpoint,value,that,has,been,persisted,in,the,underlying,storage,i,e,translog,s,checkpoint;public,abstract,long,get,last,synced,global,checkpoint
Engine -> public abstract long getLastSyncedGlobalCheckpoint()_;1547332999;Returns the latest global checkpoint value that has been persisted in the underlying storage (i.e. translog's checkpoint);public abstract long getLastSyncedGlobalCheckpoint()_;returns,the,latest,global,checkpoint,value,that,has,been,persisted,in,the,underlying,storage,i,e,translog,s,checkpoint;public,abstract,long,get,last,synced,global,checkpoint
Engine -> public abstract long getLastSyncedGlobalCheckpoint()_;1548771485;Returns the latest global checkpoint value that has been persisted in the underlying storage (i.e. translog's checkpoint);public abstract long getLastSyncedGlobalCheckpoint()_;returns,the,latest,global,checkpoint,value,that,has,been,persisted,in,the,underlying,storage,i,e,translog,s,checkpoint;public,abstract,long,get,last,synced,global,checkpoint
Engine -> public abstract long getLastSyncedGlobalCheckpoint()_;1549891630;Returns the latest global checkpoint value that has been persisted in the underlying storage (i.e. translog's checkpoint);public abstract long getLastSyncedGlobalCheckpoint()_;returns,the,latest,global,checkpoint,value,that,has,been,persisted,in,the,underlying,storage,i,e,translog,s,checkpoint;public,abstract,long,get,last,synced,global,checkpoint
Engine -> public abstract long getLastSyncedGlobalCheckpoint()_;1549975032;Returns the latest global checkpoint value that has been persisted in the underlying storage (i.e. translog's checkpoint);public abstract long getLastSyncedGlobalCheckpoint()_;returns,the,latest,global,checkpoint,value,that,has,been,persisted,in,the,underlying,storage,i,e,translog,s,checkpoint;public,abstract,long,get,last,synced,global,checkpoint
Engine -> public abstract long getLastSyncedGlobalCheckpoint()_;1550220204;Returns the latest global checkpoint value that has been persisted in the underlying storage (i.e. translog's checkpoint);public abstract long getLastSyncedGlobalCheckpoint()_;returns,the,latest,global,checkpoint,value,that,has,been,persisted,in,the,underlying,storage,i,e,translog,s,checkpoint;public,abstract,long,get,last,synced,global,checkpoint
Engine -> public abstract long getLastSyncedGlobalCheckpoint()_;1550526771;Returns the latest global checkpoint value that has been persisted in the underlying storage (i.e. translog's checkpoint);public abstract long getLastSyncedGlobalCheckpoint()_;returns,the,latest,global,checkpoint,value,that,has,been,persisted,in,the,underlying,storage,i,e,translog,s,checkpoint;public,abstract,long,get,last,synced,global,checkpoint
Engine -> public abstract long getLastSyncedGlobalCheckpoint()_;1551110274;Returns the latest global checkpoint value that has been persisted in the underlying storage (i.e. translog's checkpoint);public abstract long getLastSyncedGlobalCheckpoint()_;returns,the,latest,global,checkpoint,value,that,has,been,persisted,in,the,underlying,storage,i,e,translog,s,checkpoint;public,abstract,long,get,last,synced,global,checkpoint
Engine -> public abstract long getLastSyncedGlobalCheckpoint()_;1551126708;Returns the latest global checkpoint value that has been persisted in the underlying storage (i.e. translog's checkpoint);public abstract long getLastSyncedGlobalCheckpoint()_;returns,the,latest,global,checkpoint,value,that,has,been,persisted,in,the,underlying,storage,i,e,translog,s,checkpoint;public,abstract,long,get,last,synced,global,checkpoint
Engine -> public abstract long getLocalCheckpoint()_;1528706846;@return the local checkpoint for this Engine;public abstract long getLocalCheckpoint()_;return,the,local,checkpoint,for,this,engine;public,abstract,long,get,local,checkpoint
Engine -> public abstract long getLocalCheckpoint()_;1528762805;@return the local checkpoint for this Engine;public abstract long getLocalCheckpoint()_;return,the,local,checkpoint,for,this,engine;public,abstract,long,get,local,checkpoint
Engine -> public abstract long getLocalCheckpoint()_;1531910483;@return the local checkpoint for this Engine;public abstract long getLocalCheckpoint()_;return,the,local,checkpoint,for,this,engine;public,abstract,long,get,local,checkpoint
Engine -> public abstract long getLocalCheckpoint()_;1532685069;@return the local checkpoint for this Engine;public abstract long getLocalCheckpoint()_;return,the,local,checkpoint,for,this,engine;public,abstract,long,get,local,checkpoint
Engine -> public abstract long getLocalCheckpoint()_;1533295538;@return the local checkpoint for this Engine;public abstract long getLocalCheckpoint()_;return,the,local,checkpoint,for,this,engine;public,abstract,long,get,local,checkpoint
Engine -> public abstract long getLocalCheckpoint()_;1535046779;@return the local checkpoint for this Engine;public abstract long getLocalCheckpoint()_;return,the,local,checkpoint,for,this,engine;public,abstract,long,get,local,checkpoint
Engine -> public abstract long getLocalCheckpoint()_;1535723122;@return the local checkpoint for this Engine;public abstract long getLocalCheckpoint()_;return,the,local,checkpoint,for,this,engine;public,abstract,long,get,local,checkpoint
Engine -> public abstract long getLocalCheckpoint()_;1535965276;@return the local checkpoint for this Engine;public abstract long getLocalCheckpoint()_;return,the,local,checkpoint,for,this,engine;public,abstract,long,get,local,checkpoint
Engine -> public abstract long getLocalCheckpoint()_;1536314350;@return the local checkpoint for this Engine;public abstract long getLocalCheckpoint()_;return,the,local,checkpoint,for,this,engine;public,abstract,long,get,local,checkpoint
Engine -> public abstract long getLocalCheckpoint()_;1536828374;@return the local checkpoint for this Engine;public abstract long getLocalCheckpoint()_;return,the,local,checkpoint,for,this,engine;public,abstract,long,get,local,checkpoint
Engine -> public abstract long getLocalCheckpoint()_;1537371806;@return the local checkpoint for this Engine;public abstract long getLocalCheckpoint()_;return,the,local,checkpoint,for,this,engine;public,abstract,long,get,local,checkpoint
Engine -> public abstract long getLocalCheckpoint()_;1537806831;@return the local checkpoint for this Engine;public abstract long getLocalCheckpoint()_;return,the,local,checkpoint,for,this,engine;public,abstract,long,get,local,checkpoint
Engine -> public abstract long getLocalCheckpoint()_;1538067637;@return the local checkpoint for this Engine;public abstract long getLocalCheckpoint()_;return,the,local,checkpoint,for,this,engine;public,abstract,long,get,local,checkpoint
Engine -> public abstract long getLocalCheckpoint()_;1538424609;@return the local checkpoint for this Engine;public abstract long getLocalCheckpoint()_;return,the,local,checkpoint,for,this,engine;public,abstract,long,get,local,checkpoint
Engine -> public abstract long getLocalCheckpoint()_;1539723533;@return the local checkpoint for this Engine;public abstract long getLocalCheckpoint()_;return,the,local,checkpoint,for,this,engine;public,abstract,long,get,local,checkpoint
Engine -> public abstract long getLocalCheckpoint()_;1541618615;@return the local checkpoint for this Engine;public abstract long getLocalCheckpoint()_;return,the,local,checkpoint,for,this,engine;public,abstract,long,get,local,checkpoint
Engine -> public abstract long getLocalCheckpoint()_;1542697754;@return the local checkpoint for this Engine;public abstract long getLocalCheckpoint()_;return,the,local,checkpoint,for,this,engine;public,abstract,long,get,local,checkpoint
Engine -> public abstract long getLocalCheckpoint()_;1543047942;@return the local checkpoint for this Engine;public abstract long getLocalCheckpoint()_;return,the,local,checkpoint,for,this,engine;public,abstract,long,get,local,checkpoint
Engine -> public abstract long getLocalCheckpoint()_;1544545090;@return the local checkpoint for this Engine;public abstract long getLocalCheckpoint()_;return,the,local,checkpoint,for,this,engine;public,abstract,long,get,local,checkpoint
Engine -> public abstract long getLocalCheckpoint()_;1544684920;@return the local checkpoint for this Engine;public abstract long getLocalCheckpoint()_;return,the,local,checkpoint,for,this,engine;public,abstract,long,get,local,checkpoint
Engine -> public abstract long getLocalCheckpoint()_;1545140118;@return the local checkpoint for this Engine;public abstract long getLocalCheckpoint()_;return,the,local,checkpoint,for,this,engine;public,abstract,long,get,local,checkpoint
Engine -> public abstract long getLocalCheckpoint()_;1545221705;@return the local checkpoint for this Engine;public abstract long getLocalCheckpoint()_;return,the,local,checkpoint,for,this,engine;public,abstract,long,get,local,checkpoint
Engine -> public abstract long getLocalCheckpoint()_;1547332999;@return the local checkpoint for this Engine;public abstract long getLocalCheckpoint()_;return,the,local,checkpoint,for,this,engine;public,abstract,long,get,local,checkpoint
Engine -> public abstract long getLocalCheckpoint()_;1548771485;@return the local checkpoint for this Engine;public abstract long getLocalCheckpoint()_;return,the,local,checkpoint,for,this,engine;public,abstract,long,get,local,checkpoint
Engine -> public abstract long getLocalCheckpoint()_;1549891630;@return the local checkpoint for this Engine;public abstract long getLocalCheckpoint()_;return,the,local,checkpoint,for,this,engine;public,abstract,long,get,local,checkpoint
Engine -> public abstract long getLocalCheckpoint()_;1549975032;@return the local checkpoint for this Engine;public abstract long getLocalCheckpoint()_;return,the,local,checkpoint,for,this,engine;public,abstract,long,get,local,checkpoint
Engine -> public abstract long getLocalCheckpoint()_;1550220204;@return the local checkpoint for this Engine;public abstract long getLocalCheckpoint()_;return,the,local,checkpoint,for,this,engine;public,abstract,long,get,local,checkpoint
Engine -> public abstract long getLocalCheckpoint()_;1550526771;@return the local checkpoint for this Engine;public abstract long getLocalCheckpoint()_;return,the,local,checkpoint,for,this,engine;public,abstract,long,get,local,checkpoint
Engine -> public abstract long getLocalCheckpoint()_;1551110274;@return the local checkpoint for this Engine;public abstract long getLocalCheckpoint()_;return,the,local,checkpoint,for,this,engine;public,abstract,long,get,local,checkpoint
Engine -> public abstract long getLocalCheckpoint()_;1551126708;@return the local checkpoint for this Engine;public abstract long getLocalCheckpoint()_;return,the,local,checkpoint,for,this,engine;public,abstract,long,get,local,checkpoint
Engine -> public abstract int estimateTranslogOperationsFromMinSeq(long minSeqNo)_;1528762805;Returns the estimated number of translog operations in this engine whose seq# at least the provided seq#.;public abstract int estimateTranslogOperationsFromMinSeq(long minSeqNo)_;returns,the,estimated,number,of,translog,operations,in,this,engine,whose,seq,at,least,the,provided,seq;public,abstract,int,estimate,translog,operations,from,min,seq,long,min,seq,no
Engine -> public abstract int estimateTranslogOperationsFromMinSeq(long minSeqNo)_;1531910483;Returns the estimated number of translog operations in this engine whose seq# at least the provided seq#.;public abstract int estimateTranslogOperationsFromMinSeq(long minSeqNo)_;returns,the,estimated,number,of,translog,operations,in,this,engine,whose,seq,at,least,the,provided,seq;public,abstract,int,estimate,translog,operations,from,min,seq,long,min,seq,no
Engine -> public abstract int estimateTranslogOperationsFromMinSeq(long minSeqNo)_;1532685069;Returns the estimated number of translog operations in this engine whose seq# at least the provided seq#.;public abstract int estimateTranslogOperationsFromMinSeq(long minSeqNo)_;returns,the,estimated,number,of,translog,operations,in,this,engine,whose,seq,at,least,the,provided,seq;public,abstract,int,estimate,translog,operations,from,min,seq,long,min,seq,no
Engine -> public abstract int estimateTranslogOperationsFromMinSeq(long minSeqNo)_;1533295538;Returns the estimated number of translog operations in this engine whose seq# at least the provided seq#.;public abstract int estimateTranslogOperationsFromMinSeq(long minSeqNo)_;returns,the,estimated,number,of,translog,operations,in,this,engine,whose,seq,at,least,the,provided,seq;public,abstract,int,estimate,translog,operations,from,min,seq,long,min,seq,no
Engine -> public abstract int estimateTranslogOperationsFromMinSeq(long minSeqNo)_;1535046779;Returns the estimated number of translog operations in this engine whose seq# at least the provided seq#.;public abstract int estimateTranslogOperationsFromMinSeq(long minSeqNo)_;returns,the,estimated,number,of,translog,operations,in,this,engine,whose,seq,at,least,the,provided,seq;public,abstract,int,estimate,translog,operations,from,min,seq,long,min,seq,no
Engine -> public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes, boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;1524684173;Triggers a forced merge on this engine;public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes, boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;triggers,a,forced,merge,on,this,engine;public,abstract,void,force,merge,boolean,flush,int,max,num,segments,boolean,only,expunge,deletes,boolean,upgrade,boolean,upgrade,only,ancient,segments,throws,engine,exception,ioexception
Engine -> public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes, boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;1525162917;Triggers a forced merge on this engine;public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes, boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;triggers,a,forced,merge,on,this,engine;public,abstract,void,force,merge,boolean,flush,int,max,num,segments,boolean,only,expunge,deletes,boolean,upgrade,boolean,upgrade,only,ancient,segments,throws,engine,exception,ioexception
Engine -> public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes, boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;1525334055;Triggers a forced merge on this engine;public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes, boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;triggers,a,forced,merge,on,this,engine;public,abstract,void,force,merge,boolean,flush,int,max,num,segments,boolean,only,expunge,deletes,boolean,upgrade,boolean,upgrade,only,ancient,segments,throws,engine,exception,ioexception
Engine -> public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes, boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;1527583663;Triggers a forced merge on this engine;public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes, boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;triggers,a,forced,merge,on,this,engine;public,abstract,void,force,merge,boolean,flush,int,max,num,segments,boolean,only,expunge,deletes,boolean,upgrade,boolean,upgrade,only,ancient,segments,throws,engine,exception,ioexception
Engine -> public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes, boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;1528706846;Triggers a forced merge on this engine;public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes, boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;triggers,a,forced,merge,on,this,engine;public,abstract,void,force,merge,boolean,flush,int,max,num,segments,boolean,only,expunge,deletes,boolean,upgrade,boolean,upgrade,only,ancient,segments,throws,engine,exception,ioexception
Engine -> public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes, boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;1528762805;Triggers a forced merge on this engine;public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes, boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;triggers,a,forced,merge,on,this,engine;public,abstract,void,force,merge,boolean,flush,int,max,num,segments,boolean,only,expunge,deletes,boolean,upgrade,boolean,upgrade,only,ancient,segments,throws,engine,exception,ioexception
Engine -> public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes, boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;1531910483;Triggers a forced merge on this engine;public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes, boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;triggers,a,forced,merge,on,this,engine;public,abstract,void,force,merge,boolean,flush,int,max,num,segments,boolean,only,expunge,deletes,boolean,upgrade,boolean,upgrade,only,ancient,segments,throws,engine,exception,ioexception
Engine -> public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes, boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;1532685069;Triggers a forced merge on this engine;public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes, boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;triggers,a,forced,merge,on,this,engine;public,abstract,void,force,merge,boolean,flush,int,max,num,segments,boolean,only,expunge,deletes,boolean,upgrade,boolean,upgrade,only,ancient,segments,throws,engine,exception,ioexception
Engine -> public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes, boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;1533295538;Triggers a forced merge on this engine;public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes, boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;triggers,a,forced,merge,on,this,engine;public,abstract,void,force,merge,boolean,flush,int,max,num,segments,boolean,only,expunge,deletes,boolean,upgrade,boolean,upgrade,only,ancient,segments,throws,engine,exception,ioexception
Engine -> public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes, boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;1535046779;Triggers a forced merge on this engine;public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes, boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;triggers,a,forced,merge,on,this,engine;public,abstract,void,force,merge,boolean,flush,int,max,num,segments,boolean,only,expunge,deletes,boolean,upgrade,boolean,upgrade,only,ancient,segments,throws,engine,exception,ioexception
Engine -> public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes, boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;1535723122;Triggers a forced merge on this engine;public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes, boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;triggers,a,forced,merge,on,this,engine;public,abstract,void,force,merge,boolean,flush,int,max,num,segments,boolean,only,expunge,deletes,boolean,upgrade,boolean,upgrade,only,ancient,segments,throws,engine,exception,ioexception
Engine -> public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes, boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;1535965276;Triggers a forced merge on this engine;public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes, boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;triggers,a,forced,merge,on,this,engine;public,abstract,void,force,merge,boolean,flush,int,max,num,segments,boolean,only,expunge,deletes,boolean,upgrade,boolean,upgrade,only,ancient,segments,throws,engine,exception,ioexception
Engine -> public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes, boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;1536314350;Triggers a forced merge on this engine;public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes, boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;triggers,a,forced,merge,on,this,engine;public,abstract,void,force,merge,boolean,flush,int,max,num,segments,boolean,only,expunge,deletes,boolean,upgrade,boolean,upgrade,only,ancient,segments,throws,engine,exception,ioexception
Engine -> public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes, boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;1536828374;Triggers a forced merge on this engine;public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes, boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;triggers,a,forced,merge,on,this,engine;public,abstract,void,force,merge,boolean,flush,int,max,num,segments,boolean,only,expunge,deletes,boolean,upgrade,boolean,upgrade,only,ancient,segments,throws,engine,exception,ioexception
Engine -> public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes, boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;1537371806;Triggers a forced merge on this engine;public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes, boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;triggers,a,forced,merge,on,this,engine;public,abstract,void,force,merge,boolean,flush,int,max,num,segments,boolean,only,expunge,deletes,boolean,upgrade,boolean,upgrade,only,ancient,segments,throws,engine,exception,ioexception
Engine -> public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes, boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;1537806831;Triggers a forced merge on this engine;public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes, boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;triggers,a,forced,merge,on,this,engine;public,abstract,void,force,merge,boolean,flush,int,max,num,segments,boolean,only,expunge,deletes,boolean,upgrade,boolean,upgrade,only,ancient,segments,throws,engine,exception,ioexception
Engine -> public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes, boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;1538067637;Triggers a forced merge on this engine;public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes, boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;triggers,a,forced,merge,on,this,engine;public,abstract,void,force,merge,boolean,flush,int,max,num,segments,boolean,only,expunge,deletes,boolean,upgrade,boolean,upgrade,only,ancient,segments,throws,engine,exception,ioexception
Engine -> public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes, boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;1538424609;Triggers a forced merge on this engine;public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes, boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;triggers,a,forced,merge,on,this,engine;public,abstract,void,force,merge,boolean,flush,int,max,num,segments,boolean,only,expunge,deletes,boolean,upgrade,boolean,upgrade,only,ancient,segments,throws,engine,exception,ioexception
Engine -> public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes, boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;1539723533;Triggers a forced merge on this engine;public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes, boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;triggers,a,forced,merge,on,this,engine;public,abstract,void,force,merge,boolean,flush,int,max,num,segments,boolean,only,expunge,deletes,boolean,upgrade,boolean,upgrade,only,ancient,segments,throws,engine,exception,ioexception
Engine -> public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes, boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;1541618615;Triggers a forced merge on this engine;public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes, boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;triggers,a,forced,merge,on,this,engine;public,abstract,void,force,merge,boolean,flush,int,max,num,segments,boolean,only,expunge,deletes,boolean,upgrade,boolean,upgrade,only,ancient,segments,throws,engine,exception,ioexception
Engine -> public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;1524684173;Snapshots the most recent index and returns a handle to it. If needed will try and "commit" the_lucene index to make sure we have a "fresh" copy of the files to snapshot.__@param flushFirst indicates whether the engine should flush before returning the snapshot;public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;snapshots,the,most,recent,index,and,returns,a,handle,to,it,if,needed,will,try,and,commit,the,lucene,index,to,make,sure,we,have,a,fresh,copy,of,the,files,to,snapshot,param,flush,first,indicates,whether,the,engine,should,flush,before,returning,the,snapshot;public,abstract,index,commit,ref,acquire,last,index,commit,boolean,flush,first,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;1525162917;Snapshots the most recent index and returns a handle to it. If needed will try and "commit" the_lucene index to make sure we have a "fresh" copy of the files to snapshot.__@param flushFirst indicates whether the engine should flush before returning the snapshot;public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;snapshots,the,most,recent,index,and,returns,a,handle,to,it,if,needed,will,try,and,commit,the,lucene,index,to,make,sure,we,have,a,fresh,copy,of,the,files,to,snapshot,param,flush,first,indicates,whether,the,engine,should,flush,before,returning,the,snapshot;public,abstract,index,commit,ref,acquire,last,index,commit,boolean,flush,first,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;1525334055;Snapshots the most recent index and returns a handle to it. If needed will try and "commit" the_lucene index to make sure we have a "fresh" copy of the files to snapshot.__@param flushFirst indicates whether the engine should flush before returning the snapshot;public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;snapshots,the,most,recent,index,and,returns,a,handle,to,it,if,needed,will,try,and,commit,the,lucene,index,to,make,sure,we,have,a,fresh,copy,of,the,files,to,snapshot,param,flush,first,indicates,whether,the,engine,should,flush,before,returning,the,snapshot;public,abstract,index,commit,ref,acquire,last,index,commit,boolean,flush,first,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;1527583663;Snapshots the most recent index and returns a handle to it. If needed will try and "commit" the_lucene index to make sure we have a "fresh" copy of the files to snapshot.__@param flushFirst indicates whether the engine should flush before returning the snapshot;public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;snapshots,the,most,recent,index,and,returns,a,handle,to,it,if,needed,will,try,and,commit,the,lucene,index,to,make,sure,we,have,a,fresh,copy,of,the,files,to,snapshot,param,flush,first,indicates,whether,the,engine,should,flush,before,returning,the,snapshot;public,abstract,index,commit,ref,acquire,last,index,commit,boolean,flush,first,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;1528706846;Snapshots the most recent index and returns a handle to it. If needed will try and "commit" the_lucene index to make sure we have a "fresh" copy of the files to snapshot.__@param flushFirst indicates whether the engine should flush before returning the snapshot;public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;snapshots,the,most,recent,index,and,returns,a,handle,to,it,if,needed,will,try,and,commit,the,lucene,index,to,make,sure,we,have,a,fresh,copy,of,the,files,to,snapshot,param,flush,first,indicates,whether,the,engine,should,flush,before,returning,the,snapshot;public,abstract,index,commit,ref,acquire,last,index,commit,boolean,flush,first,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;1528762805;Snapshots the most recent index and returns a handle to it. If needed will try and "commit" the_lucene index to make sure we have a "fresh" copy of the files to snapshot.__@param flushFirst indicates whether the engine should flush before returning the snapshot;public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;snapshots,the,most,recent,index,and,returns,a,handle,to,it,if,needed,will,try,and,commit,the,lucene,index,to,make,sure,we,have,a,fresh,copy,of,the,files,to,snapshot,param,flush,first,indicates,whether,the,engine,should,flush,before,returning,the,snapshot;public,abstract,index,commit,ref,acquire,last,index,commit,boolean,flush,first,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;1531910483;Snapshots the most recent index and returns a handle to it. If needed will try and "commit" the_lucene index to make sure we have a "fresh" copy of the files to snapshot.__@param flushFirst indicates whether the engine should flush before returning the snapshot;public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;snapshots,the,most,recent,index,and,returns,a,handle,to,it,if,needed,will,try,and,commit,the,lucene,index,to,make,sure,we,have,a,fresh,copy,of,the,files,to,snapshot,param,flush,first,indicates,whether,the,engine,should,flush,before,returning,the,snapshot;public,abstract,index,commit,ref,acquire,last,index,commit,boolean,flush,first,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;1532685069;Snapshots the most recent index and returns a handle to it. If needed will try and "commit" the_lucene index to make sure we have a "fresh" copy of the files to snapshot.__@param flushFirst indicates whether the engine should flush before returning the snapshot;public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;snapshots,the,most,recent,index,and,returns,a,handle,to,it,if,needed,will,try,and,commit,the,lucene,index,to,make,sure,we,have,a,fresh,copy,of,the,files,to,snapshot,param,flush,first,indicates,whether,the,engine,should,flush,before,returning,the,snapshot;public,abstract,index,commit,ref,acquire,last,index,commit,boolean,flush,first,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;1533295538;Snapshots the most recent index and returns a handle to it. If needed will try and "commit" the_lucene index to make sure we have a "fresh" copy of the files to snapshot.__@param flushFirst indicates whether the engine should flush before returning the snapshot;public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;snapshots,the,most,recent,index,and,returns,a,handle,to,it,if,needed,will,try,and,commit,the,lucene,index,to,make,sure,we,have,a,fresh,copy,of,the,files,to,snapshot,param,flush,first,indicates,whether,the,engine,should,flush,before,returning,the,snapshot;public,abstract,index,commit,ref,acquire,last,index,commit,boolean,flush,first,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;1535046779;Snapshots the most recent index and returns a handle to it. If needed will try and "commit" the_lucene index to make sure we have a "fresh" copy of the files to snapshot.__@param flushFirst indicates whether the engine should flush before returning the snapshot;public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;snapshots,the,most,recent,index,and,returns,a,handle,to,it,if,needed,will,try,and,commit,the,lucene,index,to,make,sure,we,have,a,fresh,copy,of,the,files,to,snapshot,param,flush,first,indicates,whether,the,engine,should,flush,before,returning,the,snapshot;public,abstract,index,commit,ref,acquire,last,index,commit,boolean,flush,first,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;1535723122;Snapshots the most recent index and returns a handle to it. If needed will try and "commit" the_lucene index to make sure we have a "fresh" copy of the files to snapshot.__@param flushFirst indicates whether the engine should flush before returning the snapshot;public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;snapshots,the,most,recent,index,and,returns,a,handle,to,it,if,needed,will,try,and,commit,the,lucene,index,to,make,sure,we,have,a,fresh,copy,of,the,files,to,snapshot,param,flush,first,indicates,whether,the,engine,should,flush,before,returning,the,snapshot;public,abstract,index,commit,ref,acquire,last,index,commit,boolean,flush,first,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;1535965276;Snapshots the most recent index and returns a handle to it. If needed will try and "commit" the_lucene index to make sure we have a "fresh" copy of the files to snapshot.__@param flushFirst indicates whether the engine should flush before returning the snapshot;public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;snapshots,the,most,recent,index,and,returns,a,handle,to,it,if,needed,will,try,and,commit,the,lucene,index,to,make,sure,we,have,a,fresh,copy,of,the,files,to,snapshot,param,flush,first,indicates,whether,the,engine,should,flush,before,returning,the,snapshot;public,abstract,index,commit,ref,acquire,last,index,commit,boolean,flush,first,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;1536314350;Snapshots the most recent index and returns a handle to it. If needed will try and "commit" the_lucene index to make sure we have a "fresh" copy of the files to snapshot.__@param flushFirst indicates whether the engine should flush before returning the snapshot;public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;snapshots,the,most,recent,index,and,returns,a,handle,to,it,if,needed,will,try,and,commit,the,lucene,index,to,make,sure,we,have,a,fresh,copy,of,the,files,to,snapshot,param,flush,first,indicates,whether,the,engine,should,flush,before,returning,the,snapshot;public,abstract,index,commit,ref,acquire,last,index,commit,boolean,flush,first,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;1536828374;Snapshots the most recent index and returns a handle to it. If needed will try and "commit" the_lucene index to make sure we have a "fresh" copy of the files to snapshot.__@param flushFirst indicates whether the engine should flush before returning the snapshot;public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;snapshots,the,most,recent,index,and,returns,a,handle,to,it,if,needed,will,try,and,commit,the,lucene,index,to,make,sure,we,have,a,fresh,copy,of,the,files,to,snapshot,param,flush,first,indicates,whether,the,engine,should,flush,before,returning,the,snapshot;public,abstract,index,commit,ref,acquire,last,index,commit,boolean,flush,first,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;1537371806;Snapshots the most recent index and returns a handle to it. If needed will try and "commit" the_lucene index to make sure we have a "fresh" copy of the files to snapshot.__@param flushFirst indicates whether the engine should flush before returning the snapshot;public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;snapshots,the,most,recent,index,and,returns,a,handle,to,it,if,needed,will,try,and,commit,the,lucene,index,to,make,sure,we,have,a,fresh,copy,of,the,files,to,snapshot,param,flush,first,indicates,whether,the,engine,should,flush,before,returning,the,snapshot;public,abstract,index,commit,ref,acquire,last,index,commit,boolean,flush,first,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;1537806831;Snapshots the most recent index and returns a handle to it. If needed will try and "commit" the_lucene index to make sure we have a "fresh" copy of the files to snapshot.__@param flushFirst indicates whether the engine should flush before returning the snapshot;public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;snapshots,the,most,recent,index,and,returns,a,handle,to,it,if,needed,will,try,and,commit,the,lucene,index,to,make,sure,we,have,a,fresh,copy,of,the,files,to,snapshot,param,flush,first,indicates,whether,the,engine,should,flush,before,returning,the,snapshot;public,abstract,index,commit,ref,acquire,last,index,commit,boolean,flush,first,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;1538067637;Snapshots the most recent index and returns a handle to it. If needed will try and "commit" the_lucene index to make sure we have a "fresh" copy of the files to snapshot.__@param flushFirst indicates whether the engine should flush before returning the snapshot;public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;snapshots,the,most,recent,index,and,returns,a,handle,to,it,if,needed,will,try,and,commit,the,lucene,index,to,make,sure,we,have,a,fresh,copy,of,the,files,to,snapshot,param,flush,first,indicates,whether,the,engine,should,flush,before,returning,the,snapshot;public,abstract,index,commit,ref,acquire,last,index,commit,boolean,flush,first,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;1538424609;Snapshots the most recent index and returns a handle to it. If needed will try and "commit" the_lucene index to make sure we have a "fresh" copy of the files to snapshot.__@param flushFirst indicates whether the engine should flush before returning the snapshot;public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;snapshots,the,most,recent,index,and,returns,a,handle,to,it,if,needed,will,try,and,commit,the,lucene,index,to,make,sure,we,have,a,fresh,copy,of,the,files,to,snapshot,param,flush,first,indicates,whether,the,engine,should,flush,before,returning,the,snapshot;public,abstract,index,commit,ref,acquire,last,index,commit,boolean,flush,first,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;1539723533;Snapshots the most recent index and returns a handle to it. If needed will try and "commit" the_lucene index to make sure we have a "fresh" copy of the files to snapshot.__@param flushFirst indicates whether the engine should flush before returning the snapshot;public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;snapshots,the,most,recent,index,and,returns,a,handle,to,it,if,needed,will,try,and,commit,the,lucene,index,to,make,sure,we,have,a,fresh,copy,of,the,files,to,snapshot,param,flush,first,indicates,whether,the,engine,should,flush,before,returning,the,snapshot;public,abstract,index,commit,ref,acquire,last,index,commit,boolean,flush,first,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;1541618615;Snapshots the most recent index and returns a handle to it. If needed will try and "commit" the_lucene index to make sure we have a "fresh" copy of the files to snapshot.__@param flushFirst indicates whether the engine should flush before returning the snapshot;public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;snapshots,the,most,recent,index,and,returns,a,handle,to,it,if,needed,will,try,and,commit,the,lucene,index,to,make,sure,we,have,a,fresh,copy,of,the,files,to,snapshot,param,flush,first,indicates,whether,the,engine,should,flush,before,returning,the,snapshot;public,abstract,index,commit,ref,acquire,last,index,commit,boolean,flush,first,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;1542697754;Snapshots the most recent index and returns a handle to it. If needed will try and "commit" the_lucene index to make sure we have a "fresh" copy of the files to snapshot.__@param flushFirst indicates whether the engine should flush before returning the snapshot;public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;snapshots,the,most,recent,index,and,returns,a,handle,to,it,if,needed,will,try,and,commit,the,lucene,index,to,make,sure,we,have,a,fresh,copy,of,the,files,to,snapshot,param,flush,first,indicates,whether,the,engine,should,flush,before,returning,the,snapshot;public,abstract,index,commit,ref,acquire,last,index,commit,boolean,flush,first,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;1543047942;Snapshots the most recent index and returns a handle to it. If needed will try and "commit" the_lucene index to make sure we have a "fresh" copy of the files to snapshot.__@param flushFirst indicates whether the engine should flush before returning the snapshot;public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;snapshots,the,most,recent,index,and,returns,a,handle,to,it,if,needed,will,try,and,commit,the,lucene,index,to,make,sure,we,have,a,fresh,copy,of,the,files,to,snapshot,param,flush,first,indicates,whether,the,engine,should,flush,before,returning,the,snapshot;public,abstract,index,commit,ref,acquire,last,index,commit,boolean,flush,first,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;1544545090;Snapshots the most recent index and returns a handle to it. If needed will try and "commit" the_lucene index to make sure we have a "fresh" copy of the files to snapshot.__@param flushFirst indicates whether the engine should flush before returning the snapshot;public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;snapshots,the,most,recent,index,and,returns,a,handle,to,it,if,needed,will,try,and,commit,the,lucene,index,to,make,sure,we,have,a,fresh,copy,of,the,files,to,snapshot,param,flush,first,indicates,whether,the,engine,should,flush,before,returning,the,snapshot;public,abstract,index,commit,ref,acquire,last,index,commit,boolean,flush,first,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;1544684920;Snapshots the most recent index and returns a handle to it. If needed will try and "commit" the_lucene index to make sure we have a "fresh" copy of the files to snapshot.__@param flushFirst indicates whether the engine should flush before returning the snapshot;public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;snapshots,the,most,recent,index,and,returns,a,handle,to,it,if,needed,will,try,and,commit,the,lucene,index,to,make,sure,we,have,a,fresh,copy,of,the,files,to,snapshot,param,flush,first,indicates,whether,the,engine,should,flush,before,returning,the,snapshot;public,abstract,index,commit,ref,acquire,last,index,commit,boolean,flush,first,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;1545140118;Snapshots the most recent index and returns a handle to it. If needed will try and "commit" the_lucene index to make sure we have a "fresh" copy of the files to snapshot.__@param flushFirst indicates whether the engine should flush before returning the snapshot;public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;snapshots,the,most,recent,index,and,returns,a,handle,to,it,if,needed,will,try,and,commit,the,lucene,index,to,make,sure,we,have,a,fresh,copy,of,the,files,to,snapshot,param,flush,first,indicates,whether,the,engine,should,flush,before,returning,the,snapshot;public,abstract,index,commit,ref,acquire,last,index,commit,boolean,flush,first,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;1545221705;Snapshots the most recent index and returns a handle to it. If needed will try and "commit" the_lucene index to make sure we have a "fresh" copy of the files to snapshot.__@param flushFirst indicates whether the engine should flush before returning the snapshot;public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;snapshots,the,most,recent,index,and,returns,a,handle,to,it,if,needed,will,try,and,commit,the,lucene,index,to,make,sure,we,have,a,fresh,copy,of,the,files,to,snapshot,param,flush,first,indicates,whether,the,engine,should,flush,before,returning,the,snapshot;public,abstract,index,commit,ref,acquire,last,index,commit,boolean,flush,first,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;1547332999;Snapshots the most recent index and returns a handle to it. If needed will try and "commit" the_lucene index to make sure we have a "fresh" copy of the files to snapshot.__@param flushFirst indicates whether the engine should flush before returning the snapshot;public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;snapshots,the,most,recent,index,and,returns,a,handle,to,it,if,needed,will,try,and,commit,the,lucene,index,to,make,sure,we,have,a,fresh,copy,of,the,files,to,snapshot,param,flush,first,indicates,whether,the,engine,should,flush,before,returning,the,snapshot;public,abstract,index,commit,ref,acquire,last,index,commit,boolean,flush,first,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;1548771485;Snapshots the most recent index and returns a handle to it. If needed will try and "commit" the_lucene index to make sure we have a "fresh" copy of the files to snapshot.__@param flushFirst indicates whether the engine should flush before returning the snapshot;public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;snapshots,the,most,recent,index,and,returns,a,handle,to,it,if,needed,will,try,and,commit,the,lucene,index,to,make,sure,we,have,a,fresh,copy,of,the,files,to,snapshot,param,flush,first,indicates,whether,the,engine,should,flush,before,returning,the,snapshot;public,abstract,index,commit,ref,acquire,last,index,commit,boolean,flush,first,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;1549891630;Snapshots the most recent index and returns a handle to it. If needed will try and "commit" the_lucene index to make sure we have a "fresh" copy of the files to snapshot.__@param flushFirst indicates whether the engine should flush before returning the snapshot;public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;snapshots,the,most,recent,index,and,returns,a,handle,to,it,if,needed,will,try,and,commit,the,lucene,index,to,make,sure,we,have,a,fresh,copy,of,the,files,to,snapshot,param,flush,first,indicates,whether,the,engine,should,flush,before,returning,the,snapshot;public,abstract,index,commit,ref,acquire,last,index,commit,boolean,flush,first,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;1549975032;Snapshots the most recent index and returns a handle to it. If needed will try and "commit" the_lucene index to make sure we have a "fresh" copy of the files to snapshot.__@param flushFirst indicates whether the engine should flush before returning the snapshot;public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;snapshots,the,most,recent,index,and,returns,a,handle,to,it,if,needed,will,try,and,commit,the,lucene,index,to,make,sure,we,have,a,fresh,copy,of,the,files,to,snapshot,param,flush,first,indicates,whether,the,engine,should,flush,before,returning,the,snapshot;public,abstract,index,commit,ref,acquire,last,index,commit,boolean,flush,first,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;1550220204;Snapshots the most recent index and returns a handle to it. If needed will try and "commit" the_lucene index to make sure we have a "fresh" copy of the files to snapshot.__@param flushFirst indicates whether the engine should flush before returning the snapshot;public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;snapshots,the,most,recent,index,and,returns,a,handle,to,it,if,needed,will,try,and,commit,the,lucene,index,to,make,sure,we,have,a,fresh,copy,of,the,files,to,snapshot,param,flush,first,indicates,whether,the,engine,should,flush,before,returning,the,snapshot;public,abstract,index,commit,ref,acquire,last,index,commit,boolean,flush,first,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;1550526771;Snapshots the most recent index and returns a handle to it. If needed will try and "commit" the_lucene index to make sure we have a "fresh" copy of the files to snapshot.__@param flushFirst indicates whether the engine should flush before returning the snapshot;public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;snapshots,the,most,recent,index,and,returns,a,handle,to,it,if,needed,will,try,and,commit,the,lucene,index,to,make,sure,we,have,a,fresh,copy,of,the,files,to,snapshot,param,flush,first,indicates,whether,the,engine,should,flush,before,returning,the,snapshot;public,abstract,index,commit,ref,acquire,last,index,commit,boolean,flush,first,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;1551110274;Snapshots the most recent index and returns a handle to it. If needed will try and "commit" the_lucene index to make sure we have a "fresh" copy of the files to snapshot.__@param flushFirst indicates whether the engine should flush before returning the snapshot;public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;snapshots,the,most,recent,index,and,returns,a,handle,to,it,if,needed,will,try,and,commit,the,lucene,index,to,make,sure,we,have,a,fresh,copy,of,the,files,to,snapshot,param,flush,first,indicates,whether,the,engine,should,flush,before,returning,the,snapshot;public,abstract,index,commit,ref,acquire,last,index,commit,boolean,flush,first,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;1551126708;Snapshots the most recent index and returns a handle to it. If needed will try and "commit" the_lucene index to make sure we have a "fresh" copy of the files to snapshot.__@param flushFirst indicates whether the engine should flush before returning the snapshot;public abstract IndexCommitRef acquireLastIndexCommit(boolean flushFirst) throws EngineException_;snapshots,the,most,recent,index,and,returns,a,handle,to,it,if,needed,will,try,and,commit,the,lucene,index,to,make,sure,we,have,a,fresh,copy,of,the,files,to,snapshot,param,flush,first,indicates,whether,the,engine,should,flush,before,returning,the,snapshot;public,abstract,index,commit,ref,acquire,last,index,commit,boolean,flush,first,throws,engine,exception
Engine -> public abstract IndexResult index(Index index) throws IOException_;1524684173;Perform document index operation on the engine_@param index operation to perform_@return {@link IndexResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract IndexResult index(Index index) throws IOException_;perform,document,index,operation,on,the,engine,param,index,operation,to,perform,return,link,index,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,index,result,index,index,index,throws,ioexception
Engine -> public abstract IndexResult index(Index index) throws IOException_;1525162917;Perform document index operation on the engine_@param index operation to perform_@return {@link IndexResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract IndexResult index(Index index) throws IOException_;perform,document,index,operation,on,the,engine,param,index,operation,to,perform,return,link,index,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,index,result,index,index,index,throws,ioexception
Engine -> public abstract IndexResult index(Index index) throws IOException_;1525334055;Perform document index operation on the engine_@param index operation to perform_@return {@link IndexResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract IndexResult index(Index index) throws IOException_;perform,document,index,operation,on,the,engine,param,index,operation,to,perform,return,link,index,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,index,result,index,index,index,throws,ioexception
Engine -> public abstract IndexResult index(Index index) throws IOException_;1527583663;Perform document index operation on the engine_@param index operation to perform_@return {@link IndexResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract IndexResult index(Index index) throws IOException_;perform,document,index,operation,on,the,engine,param,index,operation,to,perform,return,link,index,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,index,result,index,index,index,throws,ioexception
Engine -> public abstract IndexResult index(Index index) throws IOException_;1528706846;Perform document index operation on the engine_@param index operation to perform_@return {@link IndexResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract IndexResult index(Index index) throws IOException_;perform,document,index,operation,on,the,engine,param,index,operation,to,perform,return,link,index,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,index,result,index,index,index,throws,ioexception
Engine -> public abstract IndexResult index(Index index) throws IOException_;1528762805;Perform document index operation on the engine_@param index operation to perform_@return {@link IndexResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract IndexResult index(Index index) throws IOException_;perform,document,index,operation,on,the,engine,param,index,operation,to,perform,return,link,index,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,index,result,index,index,index,throws,ioexception
Engine -> public abstract IndexResult index(Index index) throws IOException_;1531910483;Perform document index operation on the engine_@param index operation to perform_@return {@link IndexResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract IndexResult index(Index index) throws IOException_;perform,document,index,operation,on,the,engine,param,index,operation,to,perform,return,link,index,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,index,result,index,index,index,throws,ioexception
Engine -> public abstract IndexResult index(Index index) throws IOException_;1532685069;Perform document index operation on the engine_@param index operation to perform_@return {@link IndexResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract IndexResult index(Index index) throws IOException_;perform,document,index,operation,on,the,engine,param,index,operation,to,perform,return,link,index,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,index,result,index,index,index,throws,ioexception
Engine -> public abstract IndexResult index(Index index) throws IOException_;1533295538;Perform document index operation on the engine_@param index operation to perform_@return {@link IndexResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract IndexResult index(Index index) throws IOException_;perform,document,index,operation,on,the,engine,param,index,operation,to,perform,return,link,index,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,index,result,index,index,index,throws,ioexception
Engine -> public abstract IndexResult index(Index index) throws IOException_;1535046779;Perform document index operation on the engine_@param index operation to perform_@return {@link IndexResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract IndexResult index(Index index) throws IOException_;perform,document,index,operation,on,the,engine,param,index,operation,to,perform,return,link,index,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,index,result,index,index,index,throws,ioexception
Engine -> public abstract IndexResult index(Index index) throws IOException_;1535723122;Perform document index operation on the engine_@param index operation to perform_@return {@link IndexResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract IndexResult index(Index index) throws IOException_;perform,document,index,operation,on,the,engine,param,index,operation,to,perform,return,link,index,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,index,result,index,index,index,throws,ioexception
Engine -> public abstract IndexResult index(Index index) throws IOException_;1535965276;Perform document index operation on the engine_@param index operation to perform_@return {@link IndexResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract IndexResult index(Index index) throws IOException_;perform,document,index,operation,on,the,engine,param,index,operation,to,perform,return,link,index,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,index,result,index,index,index,throws,ioexception
Engine -> public abstract IndexResult index(Index index) throws IOException_;1536314350;Perform document index operation on the engine_@param index operation to perform_@return {@link IndexResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract IndexResult index(Index index) throws IOException_;perform,document,index,operation,on,the,engine,param,index,operation,to,perform,return,link,index,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,index,result,index,index,index,throws,ioexception
Engine -> public abstract IndexResult index(Index index) throws IOException_;1536828374;Perform document index operation on the engine_@param index operation to perform_@return {@link IndexResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract IndexResult index(Index index) throws IOException_;perform,document,index,operation,on,the,engine,param,index,operation,to,perform,return,link,index,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,index,result,index,index,index,throws,ioexception
Engine -> public abstract IndexResult index(Index index) throws IOException_;1537371806;Perform document index operation on the engine_@param index operation to perform_@return {@link IndexResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract IndexResult index(Index index) throws IOException_;perform,document,index,operation,on,the,engine,param,index,operation,to,perform,return,link,index,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,index,result,index,index,index,throws,ioexception
Engine -> public abstract IndexResult index(Index index) throws IOException_;1537806831;Perform document index operation on the engine_@param index operation to perform_@return {@link IndexResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract IndexResult index(Index index) throws IOException_;perform,document,index,operation,on,the,engine,param,index,operation,to,perform,return,link,index,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,index,result,index,index,index,throws,ioexception
Engine -> public abstract IndexResult index(Index index) throws IOException_;1538067637;Perform document index operation on the engine_@param index operation to perform_@return {@link IndexResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract IndexResult index(Index index) throws IOException_;perform,document,index,operation,on,the,engine,param,index,operation,to,perform,return,link,index,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,index,result,index,index,index,throws,ioexception
Engine -> public abstract IndexResult index(Index index) throws IOException_;1538424609;Perform document index operation on the engine_@param index operation to perform_@return {@link IndexResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract IndexResult index(Index index) throws IOException_;perform,document,index,operation,on,the,engine,param,index,operation,to,perform,return,link,index,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,index,result,index,index,index,throws,ioexception
Engine -> public abstract IndexResult index(Index index) throws IOException_;1539723533;Perform document index operation on the engine_@param index operation to perform_@return {@link IndexResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract IndexResult index(Index index) throws IOException_;perform,document,index,operation,on,the,engine,param,index,operation,to,perform,return,link,index,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,index,result,index,index,index,throws,ioexception
Engine -> public abstract IndexResult index(Index index) throws IOException_;1541618615;Perform document index operation on the engine_@param index operation to perform_@return {@link IndexResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract IndexResult index(Index index) throws IOException_;perform,document,index,operation,on,the,engine,param,index,operation,to,perform,return,link,index,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,index,result,index,index,index,throws,ioexception
Engine -> public abstract IndexResult index(Index index) throws IOException_;1542697754;Perform document index operation on the engine_@param index operation to perform_@return {@link IndexResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract IndexResult index(Index index) throws IOException_;perform,document,index,operation,on,the,engine,param,index,operation,to,perform,return,link,index,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,index,result,index,index,index,throws,ioexception
Engine -> public abstract IndexResult index(Index index) throws IOException_;1543047942;Perform document index operation on the engine_@param index operation to perform_@return {@link IndexResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract IndexResult index(Index index) throws IOException_;perform,document,index,operation,on,the,engine,param,index,operation,to,perform,return,link,index,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,index,result,index,index,index,throws,ioexception
Engine -> public abstract IndexResult index(Index index) throws IOException_;1544545090;Perform document index operation on the engine_@param index operation to perform_@return {@link IndexResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract IndexResult index(Index index) throws IOException_;perform,document,index,operation,on,the,engine,param,index,operation,to,perform,return,link,index,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,index,result,index,index,index,throws,ioexception
Engine -> public abstract IndexResult index(Index index) throws IOException_;1544684920;Perform document index operation on the engine_@param index operation to perform_@return {@link IndexResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract IndexResult index(Index index) throws IOException_;perform,document,index,operation,on,the,engine,param,index,operation,to,perform,return,link,index,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,index,result,index,index,index,throws,ioexception
Engine -> public abstract IndexResult index(Index index) throws IOException_;1545140118;Perform document index operation on the engine_@param index operation to perform_@return {@link IndexResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract IndexResult index(Index index) throws IOException_;perform,document,index,operation,on,the,engine,param,index,operation,to,perform,return,link,index,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,index,result,index,index,index,throws,ioexception
Engine -> public abstract IndexResult index(Index index) throws IOException_;1545221705;Perform document index operation on the engine_@param index operation to perform_@return {@link IndexResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract IndexResult index(Index index) throws IOException_;perform,document,index,operation,on,the,engine,param,index,operation,to,perform,return,link,index,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,index,result,index,index,index,throws,ioexception
Engine -> public abstract IndexResult index(Index index) throws IOException_;1547332999;Perform document index operation on the engine_@param index operation to perform_@return {@link IndexResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract IndexResult index(Index index) throws IOException_;perform,document,index,operation,on,the,engine,param,index,operation,to,perform,return,link,index,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,index,result,index,index,index,throws,ioexception
Engine -> public abstract IndexResult index(Index index) throws IOException_;1548771485;Perform document index operation on the engine_@param index operation to perform_@return {@link IndexResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract IndexResult index(Index index) throws IOException_;perform,document,index,operation,on,the,engine,param,index,operation,to,perform,return,link,index,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,index,result,index,index,index,throws,ioexception
Engine -> public abstract IndexResult index(Index index) throws IOException_;1549891630;Perform document index operation on the engine_@param index operation to perform_@return {@link IndexResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract IndexResult index(Index index) throws IOException_;perform,document,index,operation,on,the,engine,param,index,operation,to,perform,return,link,index,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,index,result,index,index,index,throws,ioexception
Engine -> public abstract IndexResult index(Index index) throws IOException_;1549975032;Perform document index operation on the engine_@param index operation to perform_@return {@link IndexResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract IndexResult index(Index index) throws IOException_;perform,document,index,operation,on,the,engine,param,index,operation,to,perform,return,link,index,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,index,result,index,index,index,throws,ioexception
Engine -> public abstract IndexResult index(Index index) throws IOException_;1550220204;Perform document index operation on the engine_@param index operation to perform_@return {@link IndexResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract IndexResult index(Index index) throws IOException_;perform,document,index,operation,on,the,engine,param,index,operation,to,perform,return,link,index,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,index,result,index,index,index,throws,ioexception
Engine -> public abstract IndexResult index(Index index) throws IOException_;1550526771;Perform document index operation on the engine_@param index operation to perform_@return {@link IndexResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract IndexResult index(Index index) throws IOException_;perform,document,index,operation,on,the,engine,param,index,operation,to,perform,return,link,index,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,index,result,index,index,index,throws,ioexception
Engine -> public abstract IndexResult index(Index index) throws IOException_;1551110274;Perform document index operation on the engine_@param index operation to perform_@return {@link IndexResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract IndexResult index(Index index) throws IOException_;perform,document,index,operation,on,the,engine,param,index,operation,to,perform,return,link,index,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,index,result,index,index,index,throws,ioexception
Engine -> public abstract IndexResult index(Index index) throws IOException_;1551126708;Perform document index operation on the engine_@param index operation to perform_@return {@link IndexResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract IndexResult index(Index index) throws IOException_;perform,document,index,operation,on,the,engine,param,index,operation,to,perform,return,link,index,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,index,result,index,index,index,throws,ioexception
Engine -> public abstract long getIndexThrottleTimeInMillis()_;1524684173;Returns the number of milliseconds this engine was under index throttling.;public abstract long getIndexThrottleTimeInMillis()_;returns,the,number,of,milliseconds,this,engine,was,under,index,throttling;public,abstract,long,get,index,throttle,time,in,millis
Engine -> public abstract long getIndexThrottleTimeInMillis()_;1525162917;Returns the number of milliseconds this engine was under index throttling.;public abstract long getIndexThrottleTimeInMillis()_;returns,the,number,of,milliseconds,this,engine,was,under,index,throttling;public,abstract,long,get,index,throttle,time,in,millis
Engine -> public abstract long getIndexThrottleTimeInMillis()_;1525334055;Returns the number of milliseconds this engine was under index throttling.;public abstract long getIndexThrottleTimeInMillis()_;returns,the,number,of,milliseconds,this,engine,was,under,index,throttling;public,abstract,long,get,index,throttle,time,in,millis
Engine -> public abstract long getIndexThrottleTimeInMillis()_;1527583663;Returns the number of milliseconds this engine was under index throttling.;public abstract long getIndexThrottleTimeInMillis()_;returns,the,number,of,milliseconds,this,engine,was,under,index,throttling;public,abstract,long,get,index,throttle,time,in,millis
Engine -> public abstract long getIndexThrottleTimeInMillis()_;1528706846;Returns the number of milliseconds this engine was under index throttling.;public abstract long getIndexThrottleTimeInMillis()_;returns,the,number,of,milliseconds,this,engine,was,under,index,throttling;public,abstract,long,get,index,throttle,time,in,millis
Engine -> public abstract long getIndexThrottleTimeInMillis()_;1528762805;Returns the number of milliseconds this engine was under index throttling.;public abstract long getIndexThrottleTimeInMillis()_;returns,the,number,of,milliseconds,this,engine,was,under,index,throttling;public,abstract,long,get,index,throttle,time,in,millis
Engine -> public abstract long getIndexThrottleTimeInMillis()_;1531910483;Returns the number of milliseconds this engine was under index throttling.;public abstract long getIndexThrottleTimeInMillis()_;returns,the,number,of,milliseconds,this,engine,was,under,index,throttling;public,abstract,long,get,index,throttle,time,in,millis
Engine -> public abstract long getIndexThrottleTimeInMillis()_;1532685069;Returns the number of milliseconds this engine was under index throttling.;public abstract long getIndexThrottleTimeInMillis()_;returns,the,number,of,milliseconds,this,engine,was,under,index,throttling;public,abstract,long,get,index,throttle,time,in,millis
Engine -> public abstract long getIndexThrottleTimeInMillis()_;1533295538;Returns the number of milliseconds this engine was under index throttling.;public abstract long getIndexThrottleTimeInMillis()_;returns,the,number,of,milliseconds,this,engine,was,under,index,throttling;public,abstract,long,get,index,throttle,time,in,millis
Engine -> public abstract long getIndexThrottleTimeInMillis()_;1535046779;Returns the number of milliseconds this engine was under index throttling.;public abstract long getIndexThrottleTimeInMillis()_;returns,the,number,of,milliseconds,this,engine,was,under,index,throttling;public,abstract,long,get,index,throttle,time,in,millis
Engine -> public abstract long getIndexThrottleTimeInMillis()_;1535723122;Returns the number of milliseconds this engine was under index throttling.;public abstract long getIndexThrottleTimeInMillis()_;returns,the,number,of,milliseconds,this,engine,was,under,index,throttling;public,abstract,long,get,index,throttle,time,in,millis
Engine -> public abstract long getIndexThrottleTimeInMillis()_;1535965276;Returns the number of milliseconds this engine was under index throttling.;public abstract long getIndexThrottleTimeInMillis()_;returns,the,number,of,milliseconds,this,engine,was,under,index,throttling;public,abstract,long,get,index,throttle,time,in,millis
Engine -> public abstract long getIndexThrottleTimeInMillis()_;1536314350;Returns the number of milliseconds this engine was under index throttling.;public abstract long getIndexThrottleTimeInMillis()_;returns,the,number,of,milliseconds,this,engine,was,under,index,throttling;public,abstract,long,get,index,throttle,time,in,millis
Engine -> public abstract long getIndexThrottleTimeInMillis()_;1536828374;Returns the number of milliseconds this engine was under index throttling.;public abstract long getIndexThrottleTimeInMillis()_;returns,the,number,of,milliseconds,this,engine,was,under,index,throttling;public,abstract,long,get,index,throttle,time,in,millis
Engine -> public abstract long getIndexThrottleTimeInMillis()_;1537371806;Returns the number of milliseconds this engine was under index throttling.;public abstract long getIndexThrottleTimeInMillis()_;returns,the,number,of,milliseconds,this,engine,was,under,index,throttling;public,abstract,long,get,index,throttle,time,in,millis
Engine -> public abstract long getIndexThrottleTimeInMillis()_;1537806831;Returns the number of milliseconds this engine was under index throttling.;public abstract long getIndexThrottleTimeInMillis()_;returns,the,number,of,milliseconds,this,engine,was,under,index,throttling;public,abstract,long,get,index,throttle,time,in,millis
Engine -> public abstract long getIndexThrottleTimeInMillis()_;1538067637;Returns the number of milliseconds this engine was under index throttling.;public abstract long getIndexThrottleTimeInMillis()_;returns,the,number,of,milliseconds,this,engine,was,under,index,throttling;public,abstract,long,get,index,throttle,time,in,millis
Engine -> public abstract long getIndexThrottleTimeInMillis()_;1538424609;Returns the number of milliseconds this engine was under index throttling.;public abstract long getIndexThrottleTimeInMillis()_;returns,the,number,of,milliseconds,this,engine,was,under,index,throttling;public,abstract,long,get,index,throttle,time,in,millis
Engine -> public abstract long getIndexThrottleTimeInMillis()_;1539723533;Returns the number of milliseconds this engine was under index throttling.;public abstract long getIndexThrottleTimeInMillis()_;returns,the,number,of,milliseconds,this,engine,was,under,index,throttling;public,abstract,long,get,index,throttle,time,in,millis
Engine -> public abstract long getIndexThrottleTimeInMillis()_;1541618615;Returns the number of milliseconds this engine was under index throttling.;public abstract long getIndexThrottleTimeInMillis()_;returns,the,number,of,milliseconds,this,engine,was,under,index,throttling;public,abstract,long,get,index,throttle,time,in,millis
Engine -> public abstract long getIndexThrottleTimeInMillis()_;1542697754;Returns the number of milliseconds this engine was under index throttling.;public abstract long getIndexThrottleTimeInMillis()_;returns,the,number,of,milliseconds,this,engine,was,under,index,throttling;public,abstract,long,get,index,throttle,time,in,millis
Engine -> public abstract long getIndexThrottleTimeInMillis()_;1543047942;Returns the number of milliseconds this engine was under index throttling.;public abstract long getIndexThrottleTimeInMillis()_;returns,the,number,of,milliseconds,this,engine,was,under,index,throttling;public,abstract,long,get,index,throttle,time,in,millis
Engine -> public abstract long getIndexThrottleTimeInMillis()_;1544545090;Returns the number of milliseconds this engine was under index throttling.;public abstract long getIndexThrottleTimeInMillis()_;returns,the,number,of,milliseconds,this,engine,was,under,index,throttling;public,abstract,long,get,index,throttle,time,in,millis
Engine -> public abstract long getIndexThrottleTimeInMillis()_;1544684920;Returns the number of milliseconds this engine was under index throttling.;public abstract long getIndexThrottleTimeInMillis()_;returns,the,number,of,milliseconds,this,engine,was,under,index,throttling;public,abstract,long,get,index,throttle,time,in,millis
Engine -> public abstract long getIndexThrottleTimeInMillis()_;1545140118;Returns the number of milliseconds this engine was under index throttling.;public abstract long getIndexThrottleTimeInMillis()_;returns,the,number,of,milliseconds,this,engine,was,under,index,throttling;public,abstract,long,get,index,throttle,time,in,millis
Engine -> public abstract long getIndexThrottleTimeInMillis()_;1545221705;Returns the number of milliseconds this engine was under index throttling.;public abstract long getIndexThrottleTimeInMillis()_;returns,the,number,of,milliseconds,this,engine,was,under,index,throttling;public,abstract,long,get,index,throttle,time,in,millis
Engine -> public abstract long getIndexThrottleTimeInMillis()_;1547332999;Returns the number of milliseconds this engine was under index throttling.;public abstract long getIndexThrottleTimeInMillis()_;returns,the,number,of,milliseconds,this,engine,was,under,index,throttling;public,abstract,long,get,index,throttle,time,in,millis
Engine -> public abstract long getIndexThrottleTimeInMillis()_;1548771485;Returns the number of milliseconds this engine was under index throttling.;public abstract long getIndexThrottleTimeInMillis()_;returns,the,number,of,milliseconds,this,engine,was,under,index,throttling;public,abstract,long,get,index,throttle,time,in,millis
Engine -> public abstract long getIndexThrottleTimeInMillis()_;1549891630;Returns the number of milliseconds this engine was under index throttling.;public abstract long getIndexThrottleTimeInMillis()_;returns,the,number,of,milliseconds,this,engine,was,under,index,throttling;public,abstract,long,get,index,throttle,time,in,millis
Engine -> public abstract long getIndexThrottleTimeInMillis()_;1549975032;Returns the number of milliseconds this engine was under index throttling.;public abstract long getIndexThrottleTimeInMillis()_;returns,the,number,of,milliseconds,this,engine,was,under,index,throttling;public,abstract,long,get,index,throttle,time,in,millis
Engine -> public abstract long getIndexThrottleTimeInMillis()_;1550220204;Returns the number of milliseconds this engine was under index throttling.;public abstract long getIndexThrottleTimeInMillis()_;returns,the,number,of,milliseconds,this,engine,was,under,index,throttling;public,abstract,long,get,index,throttle,time,in,millis
Engine -> public abstract long getIndexThrottleTimeInMillis()_;1550526771;Returns the number of milliseconds this engine was under index throttling.;public abstract long getIndexThrottleTimeInMillis()_;returns,the,number,of,milliseconds,this,engine,was,under,index,throttling;public,abstract,long,get,index,throttle,time,in,millis
Engine -> public abstract long getIndexThrottleTimeInMillis()_;1551110274;Returns the number of milliseconds this engine was under index throttling.;public abstract long getIndexThrottleTimeInMillis()_;returns,the,number,of,milliseconds,this,engine,was,under,index,throttling;public,abstract,long,get,index,throttle,time,in,millis
Engine -> public abstract long getIndexThrottleTimeInMillis()_;1551126708;Returns the number of milliseconds this engine was under index throttling.;public abstract long getIndexThrottleTimeInMillis()_;returns,the,number,of,milliseconds,this,engine,was,under,index,throttling;public,abstract,long,get,index,throttle,time,in,millis
Engine -> public abstract void resetLocalCheckpoint(long localCheckpoint)_;1528706846;Reset the local checkpoint in the tracker to the given local checkpoint_@param localCheckpoint the new checkpoint to be set;public abstract void resetLocalCheckpoint(long localCheckpoint)_;reset,the,local,checkpoint,in,the,tracker,to,the,given,local,checkpoint,param,local,checkpoint,the,new,checkpoint,to,be,set;public,abstract,void,reset,local,checkpoint,long,local,checkpoint
Engine -> public abstract void resetLocalCheckpoint(long localCheckpoint)_;1528762805;Reset the local checkpoint in the tracker to the given local checkpoint_@param localCheckpoint the new checkpoint to be set;public abstract void resetLocalCheckpoint(long localCheckpoint)_;reset,the,local,checkpoint,in,the,tracker,to,the,given,local,checkpoint,param,local,checkpoint,the,new,checkpoint,to,be,set;public,abstract,void,reset,local,checkpoint,long,local,checkpoint
Engine -> public abstract void resetLocalCheckpoint(long localCheckpoint)_;1531910483;Reset the local checkpoint in the tracker to the given local checkpoint_@param localCheckpoint the new checkpoint to be set;public abstract void resetLocalCheckpoint(long localCheckpoint)_;reset,the,local,checkpoint,in,the,tracker,to,the,given,local,checkpoint,param,local,checkpoint,the,new,checkpoint,to,be,set;public,abstract,void,reset,local,checkpoint,long,local,checkpoint
Engine -> public abstract void resetLocalCheckpoint(long localCheckpoint)_;1532685069;Reset the local checkpoint in the tracker to the given local checkpoint_@param localCheckpoint the new checkpoint to be set;public abstract void resetLocalCheckpoint(long localCheckpoint)_;reset,the,local,checkpoint,in,the,tracker,to,the,given,local,checkpoint,param,local,checkpoint,the,new,checkpoint,to,be,set;public,abstract,void,reset,local,checkpoint,long,local,checkpoint
Engine -> public abstract void resetLocalCheckpoint(long localCheckpoint)_;1533295538;Reset the local checkpoint in the tracker to the given local checkpoint_@param localCheckpoint the new checkpoint to be set;public abstract void resetLocalCheckpoint(long localCheckpoint)_;reset,the,local,checkpoint,in,the,tracker,to,the,given,local,checkpoint,param,local,checkpoint,the,new,checkpoint,to,be,set;public,abstract,void,reset,local,checkpoint,long,local,checkpoint
Engine -> public abstract void resetLocalCheckpoint(long localCheckpoint)_;1535046779;Reset the local checkpoint in the tracker to the given local checkpoint_@param localCheckpoint the new checkpoint to be set;public abstract void resetLocalCheckpoint(long localCheckpoint)_;reset,the,local,checkpoint,in,the,tracker,to,the,given,local,checkpoint,param,local,checkpoint,the,new,checkpoint,to,be,set;public,abstract,void,reset,local,checkpoint,long,local,checkpoint
Engine -> public abstract void resetLocalCheckpoint(long localCheckpoint)_;1535723122;Reset the local checkpoint in the tracker to the given local checkpoint_@param localCheckpoint the new checkpoint to be set;public abstract void resetLocalCheckpoint(long localCheckpoint)_;reset,the,local,checkpoint,in,the,tracker,to,the,given,local,checkpoint,param,local,checkpoint,the,new,checkpoint,to,be,set;public,abstract,void,reset,local,checkpoint,long,local,checkpoint
Engine -> public abstract void resetLocalCheckpoint(long localCheckpoint)_;1535965276;Reset the local checkpoint in the tracker to the given local checkpoint_@param localCheckpoint the new checkpoint to be set;public abstract void resetLocalCheckpoint(long localCheckpoint)_;reset,the,local,checkpoint,in,the,tracker,to,the,given,local,checkpoint,param,local,checkpoint,the,new,checkpoint,to,be,set;public,abstract,void,reset,local,checkpoint,long,local,checkpoint
Engine -> public abstract void resetLocalCheckpoint(long localCheckpoint)_;1536314350;Reset the local checkpoint in the tracker to the given local checkpoint_@param localCheckpoint the new checkpoint to be set;public abstract void resetLocalCheckpoint(long localCheckpoint)_;reset,the,local,checkpoint,in,the,tracker,to,the,given,local,checkpoint,param,local,checkpoint,the,new,checkpoint,to,be,set;public,abstract,void,reset,local,checkpoint,long,local,checkpoint
Engine -> public long getMaxSeenAutoIdTimestamp();1537806831;Returns the maximum auto_id_timestamp of all append-only index requests have been processed by this engine_or the auto_id_timestamp received from its primary shard via {@link #updateMaxUnsafeAutoIdTimestamp(long)}._Notes this method returns the auto_id_timestamp of all append-only requests, not max_unsafe_auto_id_timestamp.;public long getMaxSeenAutoIdTimestamp() {_        return IndexRequest.UNSET_AUTO_GENERATED_TIMESTAMP__    };returns,the,maximum,of,all,append,only,index,requests,have,been,processed,by,this,engine,or,the,received,from,its,primary,shard,via,link,update,max,unsafe,auto,id,timestamp,long,notes,this,method,returns,the,of,all,append,only,requests,not;public,long,get,max,seen,auto,id,timestamp,return,index,request
Engine -> public long getMaxSeenAutoIdTimestamp();1538067637;Returns the maximum auto_id_timestamp of all append-only index requests have been processed by this engine_or the auto_id_timestamp received from its primary shard via {@link #updateMaxUnsafeAutoIdTimestamp(long)}._Notes this method returns the auto_id_timestamp of all append-only requests, not max_unsafe_auto_id_timestamp.;public long getMaxSeenAutoIdTimestamp() {_        return IndexRequest.UNSET_AUTO_GENERATED_TIMESTAMP__    };returns,the,maximum,of,all,append,only,index,requests,have,been,processed,by,this,engine,or,the,received,from,its,primary,shard,via,link,update,max,unsafe,auto,id,timestamp,long,notes,this,method,returns,the,of,all,append,only,requests,not;public,long,get,max,seen,auto,id,timestamp,return,index,request
Engine -> public long getMaxSeenAutoIdTimestamp();1538424609;Returns the maximum auto_id_timestamp of all append-only index requests have been processed by this engine_or the auto_id_timestamp received from its primary shard via {@link #updateMaxUnsafeAutoIdTimestamp(long)}._Notes this method returns the auto_id_timestamp of all append-only requests, not max_unsafe_auto_id_timestamp.;public long getMaxSeenAutoIdTimestamp() {_        return IndexRequest.UNSET_AUTO_GENERATED_TIMESTAMP__    };returns,the,maximum,of,all,append,only,index,requests,have,been,processed,by,this,engine,or,the,received,from,its,primary,shard,via,link,update,max,unsafe,auto,id,timestamp,long,notes,this,method,returns,the,of,all,append,only,requests,not;public,long,get,max,seen,auto,id,timestamp,return,index,request
Engine -> public long getMaxSeenAutoIdTimestamp();1539723533;Returns the maximum auto_id_timestamp of all append-only index requests have been processed by this engine_or the auto_id_timestamp received from its primary shard via {@link #updateMaxUnsafeAutoIdTimestamp(long)}._Notes this method returns the auto_id_timestamp of all append-only requests, not max_unsafe_auto_id_timestamp.;public long getMaxSeenAutoIdTimestamp() {_        return IndexRequest.UNSET_AUTO_GENERATED_TIMESTAMP__    };returns,the,maximum,of,all,append,only,index,requests,have,been,processed,by,this,engine,or,the,received,from,its,primary,shard,via,link,update,max,unsafe,auto,id,timestamp,long,notes,this,method,returns,the,of,all,append,only,requests,not;public,long,get,max,seen,auto,id,timestamp,return,index,request
Engine -> public long getMaxSeenAutoIdTimestamp();1541618615;Returns the maximum auto_id_timestamp of all append-only index requests have been processed by this engine_or the auto_id_timestamp received from its primary shard via {@link #updateMaxUnsafeAutoIdTimestamp(long)}._Notes this method returns the auto_id_timestamp of all append-only requests, not max_unsafe_auto_id_timestamp.;public long getMaxSeenAutoIdTimestamp() {_        return IndexRequest.UNSET_AUTO_GENERATED_TIMESTAMP__    };returns,the,maximum,of,all,append,only,index,requests,have,been,processed,by,this,engine,or,the,received,from,its,primary,shard,via,link,update,max,unsafe,auto,id,timestamp,long,notes,this,method,returns,the,of,all,append,only,requests,not;public,long,get,max,seen,auto,id,timestamp,return,index,request
Engine -> public long getMaxSeenAutoIdTimestamp();1542697754;Returns the maximum auto_id_timestamp of all append-only index requests have been processed by this engine_or the auto_id_timestamp received from its primary shard via {@link #updateMaxUnsafeAutoIdTimestamp(long)}._Notes this method returns the auto_id_timestamp of all append-only requests, not max_unsafe_auto_id_timestamp.;public long getMaxSeenAutoIdTimestamp() {_        return IndexRequest.UNSET_AUTO_GENERATED_TIMESTAMP__    };returns,the,maximum,of,all,append,only,index,requests,have,been,processed,by,this,engine,or,the,received,from,its,primary,shard,via,link,update,max,unsafe,auto,id,timestamp,long,notes,this,method,returns,the,of,all,append,only,requests,not;public,long,get,max,seen,auto,id,timestamp,return,index,request
Engine -> public long getMaxSeenAutoIdTimestamp();1543047942;Returns the maximum auto_id_timestamp of all append-only index requests have been processed by this engine_or the auto_id_timestamp received from its primary shard via {@link #updateMaxUnsafeAutoIdTimestamp(long)}._Notes this method returns the auto_id_timestamp of all append-only requests, not max_unsafe_auto_id_timestamp.;public long getMaxSeenAutoIdTimestamp() {_        return IndexRequest.UNSET_AUTO_GENERATED_TIMESTAMP__    };returns,the,maximum,of,all,append,only,index,requests,have,been,processed,by,this,engine,or,the,received,from,its,primary,shard,via,link,update,max,unsafe,auto,id,timestamp,long,notes,this,method,returns,the,of,all,append,only,requests,not;public,long,get,max,seen,auto,id,timestamp,return,index,request
Engine -> public long getMaxSeenAutoIdTimestamp();1544545090;Returns the maximum auto_id_timestamp of all append-only index requests have been processed by this engine_or the auto_id_timestamp received from its primary shard via {@link #updateMaxUnsafeAutoIdTimestamp(long)}._Notes this method returns the auto_id_timestamp of all append-only requests, not max_unsafe_auto_id_timestamp.;public long getMaxSeenAutoIdTimestamp() {_        return IndexRequest.UNSET_AUTO_GENERATED_TIMESTAMP__    };returns,the,maximum,of,all,append,only,index,requests,have,been,processed,by,this,engine,or,the,received,from,its,primary,shard,via,link,update,max,unsafe,auto,id,timestamp,long,notes,this,method,returns,the,of,all,append,only,requests,not;public,long,get,max,seen,auto,id,timestamp,return,index,request
Engine -> public long getMaxSeenAutoIdTimestamp();1544684920;Returns the maximum auto_id_timestamp of all append-only index requests have been processed by this engine_or the auto_id_timestamp received from its primary shard via {@link #updateMaxUnsafeAutoIdTimestamp(long)}._Notes this method returns the auto_id_timestamp of all append-only requests, not max_unsafe_auto_id_timestamp.;public long getMaxSeenAutoIdTimestamp() {_        return IndexRequest.UNSET_AUTO_GENERATED_TIMESTAMP__    };returns,the,maximum,of,all,append,only,index,requests,have,been,processed,by,this,engine,or,the,received,from,its,primary,shard,via,link,update,max,unsafe,auto,id,timestamp,long,notes,this,method,returns,the,of,all,append,only,requests,not;public,long,get,max,seen,auto,id,timestamp,return,index,request
Engine -> public long getMaxSeenAutoIdTimestamp();1545140118;Returns the maximum auto_id_timestamp of all append-only index requests have been processed by this engine_or the auto_id_timestamp received from its primary shard via {@link #updateMaxUnsafeAutoIdTimestamp(long)}._Notes this method returns the auto_id_timestamp of all append-only requests, not max_unsafe_auto_id_timestamp.;public long getMaxSeenAutoIdTimestamp() {_        return IndexRequest.UNSET_AUTO_GENERATED_TIMESTAMP__    };returns,the,maximum,of,all,append,only,index,requests,have,been,processed,by,this,engine,or,the,received,from,its,primary,shard,via,link,update,max,unsafe,auto,id,timestamp,long,notes,this,method,returns,the,of,all,append,only,requests,not;public,long,get,max,seen,auto,id,timestamp,return,index,request
Engine -> public long getMaxSeenAutoIdTimestamp();1545221705;Returns the maximum auto_id_timestamp of all append-only index requests have been processed by this engine_or the auto_id_timestamp received from its primary shard via {@link #updateMaxUnsafeAutoIdTimestamp(long)}._Notes this method returns the auto_id_timestamp of all append-only requests, not max_unsafe_auto_id_timestamp.;public long getMaxSeenAutoIdTimestamp() {_        return IndexRequest.UNSET_AUTO_GENERATED_TIMESTAMP__    };returns,the,maximum,of,all,append,only,index,requests,have,been,processed,by,this,engine,or,the,received,from,its,primary,shard,via,link,update,max,unsafe,auto,id,timestamp,long,notes,this,method,returns,the,of,all,append,only,requests,not;public,long,get,max,seen,auto,id,timestamp,return,index,request
Engine -> public long getMaxSeenAutoIdTimestamp();1547332999;Returns the maximum auto_id_timestamp of all append-only index requests have been processed by this engine_or the auto_id_timestamp received from its primary shard via {@link #updateMaxUnsafeAutoIdTimestamp(long)}._Notes this method returns the auto_id_timestamp of all append-only requests, not max_unsafe_auto_id_timestamp.;public long getMaxSeenAutoIdTimestamp() {_        return IndexRequest.UNSET_AUTO_GENERATED_TIMESTAMP__    };returns,the,maximum,of,all,append,only,index,requests,have,been,processed,by,this,engine,or,the,received,from,its,primary,shard,via,link,update,max,unsafe,auto,id,timestamp,long,notes,this,method,returns,the,of,all,append,only,requests,not;public,long,get,max,seen,auto,id,timestamp,return,index,request
Engine -> public long getMaxSeenAutoIdTimestamp();1548771485;Returns the maximum auto_id_timestamp of all append-only index requests have been processed by this engine_or the auto_id_timestamp received from its primary shard via {@link #updateMaxUnsafeAutoIdTimestamp(long)}._Notes this method returns the auto_id_timestamp of all append-only requests, not max_unsafe_auto_id_timestamp.;public long getMaxSeenAutoIdTimestamp() {_        return IndexRequest.UNSET_AUTO_GENERATED_TIMESTAMP__    };returns,the,maximum,of,all,append,only,index,requests,have,been,processed,by,this,engine,or,the,received,from,its,primary,shard,via,link,update,max,unsafe,auto,id,timestamp,long,notes,this,method,returns,the,of,all,append,only,requests,not;public,long,get,max,seen,auto,id,timestamp,return,index,request
Engine -> public long getMaxSeenAutoIdTimestamp();1549891630;Returns the maximum auto_id_timestamp of all append-only index requests have been processed by this engine_or the auto_id_timestamp received from its primary shard via {@link #updateMaxUnsafeAutoIdTimestamp(long)}._Notes this method returns the auto_id_timestamp of all append-only requests, not max_unsafe_auto_id_timestamp.;public long getMaxSeenAutoIdTimestamp() {_        return IndexRequest.UNSET_AUTO_GENERATED_TIMESTAMP__    };returns,the,maximum,of,all,append,only,index,requests,have,been,processed,by,this,engine,or,the,received,from,its,primary,shard,via,link,update,max,unsafe,auto,id,timestamp,long,notes,this,method,returns,the,of,all,append,only,requests,not;public,long,get,max,seen,auto,id,timestamp,return,index,request
Engine -> public long getMaxSeenAutoIdTimestamp();1549975032;Returns the maximum auto_id_timestamp of all append-only index requests have been processed by this engine_or the auto_id_timestamp received from its primary shard via {@link #updateMaxUnsafeAutoIdTimestamp(long)}._Notes this method returns the auto_id_timestamp of all append-only requests, not max_unsafe_auto_id_timestamp.;public long getMaxSeenAutoIdTimestamp() {_        return IndexRequest.UNSET_AUTO_GENERATED_TIMESTAMP__    };returns,the,maximum,of,all,append,only,index,requests,have,been,processed,by,this,engine,or,the,received,from,its,primary,shard,via,link,update,max,unsafe,auto,id,timestamp,long,notes,this,method,returns,the,of,all,append,only,requests,not;public,long,get,max,seen,auto,id,timestamp,return,index,request
Engine -> public long getMaxSeenAutoIdTimestamp();1550220204;Returns the maximum auto_id_timestamp of all append-only index requests have been processed by this engine_or the auto_id_timestamp received from its primary shard via {@link #updateMaxUnsafeAutoIdTimestamp(long)}._Notes this method returns the auto_id_timestamp of all append-only requests, not max_unsafe_auto_id_timestamp.;public long getMaxSeenAutoIdTimestamp() {_        return IndexRequest.UNSET_AUTO_GENERATED_TIMESTAMP__    };returns,the,maximum,of,all,append,only,index,requests,have,been,processed,by,this,engine,or,the,received,from,its,primary,shard,via,link,update,max,unsafe,auto,id,timestamp,long,notes,this,method,returns,the,of,all,append,only,requests,not;public,long,get,max,seen,auto,id,timestamp,return,index,request
Engine -> public long getMaxSeenAutoIdTimestamp();1550526771;Returns the maximum auto_id_timestamp of all append-only index requests have been processed by this engine_or the auto_id_timestamp received from its primary shard via {@link #updateMaxUnsafeAutoIdTimestamp(long)}._Notes this method returns the auto_id_timestamp of all append-only requests, not max_unsafe_auto_id_timestamp.;public long getMaxSeenAutoIdTimestamp() {_        return IndexRequest.UNSET_AUTO_GENERATED_TIMESTAMP__    };returns,the,maximum,of,all,append,only,index,requests,have,been,processed,by,this,engine,or,the,received,from,its,primary,shard,via,link,update,max,unsafe,auto,id,timestamp,long,notes,this,method,returns,the,of,all,append,only,requests,not;public,long,get,max,seen,auto,id,timestamp,return,index,request
Engine -> public long getMaxSeenAutoIdTimestamp();1551110274;Returns the maximum auto_id_timestamp of all append-only index requests have been processed by this engine_or the auto_id_timestamp received from its primary shard via {@link #updateMaxUnsafeAutoIdTimestamp(long)}._Notes this method returns the auto_id_timestamp of all append-only requests, not max_unsafe_auto_id_timestamp.;public long getMaxSeenAutoIdTimestamp() {_        return IndexRequest.UNSET_AUTO_GENERATED_TIMESTAMP__    };returns,the,maximum,of,all,append,only,index,requests,have,been,processed,by,this,engine,or,the,received,from,its,primary,shard,via,link,update,max,unsafe,auto,id,timestamp,long,notes,this,method,returns,the,of,all,append,only,requests,not;public,long,get,max,seen,auto,id,timestamp,return,index,request
Engine -> public long getMaxSeenAutoIdTimestamp();1551126708;Returns the maximum auto_id_timestamp of all append-only index requests have been processed by this engine_or the auto_id_timestamp received from its primary shard via {@link #updateMaxUnsafeAutoIdTimestamp(long)}._Notes this method returns the auto_id_timestamp of all append-only requests, not max_unsafe_auto_id_timestamp.;public long getMaxSeenAutoIdTimestamp() {_        return IndexRequest.UNSET_AUTO_GENERATED_TIMESTAMP__    };returns,the,maximum,of,all,append,only,index,requests,have,been,processed,by,this,engine,or,the,received,from,its,primary,shard,via,link,update,max,unsafe,auto,id,timestamp,long,notes,this,method,returns,the,of,all,append,only,requests,not;public,long,get,max,seen,auto,id,timestamp,return,index,request
Engine -> Result -> public Exception getFailure();1524684173;get document failure while executing the operation {@code null} in case of no failure;public Exception getFailure() {_            return failure__        };get,document,failure,while,executing,the,operation,code,null,in,case,of,no,failure;public,exception,get,failure,return,failure
Engine -> Result -> public Exception getFailure();1525162917;get document failure while executing the operation {@code null} in case of no failure;public Exception getFailure() {_            return failure__        };get,document,failure,while,executing,the,operation,code,null,in,case,of,no,failure;public,exception,get,failure,return,failure
Engine -> Result -> public Exception getFailure();1525334055;get document failure while executing the operation {@code null} in case of no failure;public Exception getFailure() {_            return failure__        };get,document,failure,while,executing,the,operation,code,null,in,case,of,no,failure;public,exception,get,failure,return,failure
Engine -> Result -> public Exception getFailure();1527583663;get document failure while executing the operation {@code null} in case of no failure;public Exception getFailure() {_            return failure__        };get,document,failure,while,executing,the,operation,code,null,in,case,of,no,failure;public,exception,get,failure,return,failure
Engine -> Result -> public Exception getFailure();1528706846;get document failure while executing the operation {@code null} in case of no failure;public Exception getFailure() {_            return failure__        };get,document,failure,while,executing,the,operation,code,null,in,case,of,no,failure;public,exception,get,failure,return,failure
Engine -> Result -> public Exception getFailure();1528762805;get document failure while executing the operation {@code null} in case of no failure;public Exception getFailure() {_            return failure__        };get,document,failure,while,executing,the,operation,code,null,in,case,of,no,failure;public,exception,get,failure,return,failure
Engine -> Result -> public Exception getFailure();1531910483;get document failure while executing the operation {@code null} in case of no failure;public Exception getFailure() {_            return failure__        };get,document,failure,while,executing,the,operation,code,null,in,case,of,no,failure;public,exception,get,failure,return,failure
Engine -> Result -> public Exception getFailure();1532685069;get document failure while executing the operation {@code null} in case of no failure;public Exception getFailure() {_            return failure__        };get,document,failure,while,executing,the,operation,code,null,in,case,of,no,failure;public,exception,get,failure,return,failure
Engine -> Result -> public Exception getFailure();1533295538;get document failure while executing the operation {@code null} in case of no failure;public Exception getFailure() {_            return failure__        };get,document,failure,while,executing,the,operation,code,null,in,case,of,no,failure;public,exception,get,failure,return,failure
Engine -> Result -> public Exception getFailure();1535046779;get document failure while executing the operation {@code null} in case of no failure;public Exception getFailure() {_            return failure__        };get,document,failure,while,executing,the,operation,code,null,in,case,of,no,failure;public,exception,get,failure,return,failure
Engine -> Result -> public Exception getFailure();1535723122;get document failure while executing the operation {@code null} in case of no failure;public Exception getFailure() {_            return failure__        };get,document,failure,while,executing,the,operation,code,null,in,case,of,no,failure;public,exception,get,failure,return,failure
Engine -> Result -> public Exception getFailure();1535965276;get document failure while executing the operation {@code null} in case of no failure;public Exception getFailure() {_            return failure__        };get,document,failure,while,executing,the,operation,code,null,in,case,of,no,failure;public,exception,get,failure,return,failure
Engine -> Result -> public Exception getFailure();1536314350;get document failure while executing the operation {@code null} in case of no failure;public Exception getFailure() {_            return failure__        };get,document,failure,while,executing,the,operation,code,null,in,case,of,no,failure;public,exception,get,failure,return,failure
Engine -> Result -> public Exception getFailure();1536828374;get document failure while executing the operation {@code null} in case of no failure;public Exception getFailure() {_            return failure__        };get,document,failure,while,executing,the,operation,code,null,in,case,of,no,failure;public,exception,get,failure,return,failure
Engine -> Result -> public Exception getFailure();1537371806;get document failure while executing the operation {@code null} in case of no failure;public Exception getFailure() {_            return failure__        };get,document,failure,while,executing,the,operation,code,null,in,case,of,no,failure;public,exception,get,failure,return,failure
Engine -> Result -> public Exception getFailure();1537806831;get document failure while executing the operation {@code null} in case of no failure;public Exception getFailure() {_            return failure__        };get,document,failure,while,executing,the,operation,code,null,in,case,of,no,failure;public,exception,get,failure,return,failure
Engine -> Result -> public Exception getFailure();1538067637;get document failure while executing the operation {@code null} in case of no failure;public Exception getFailure() {_            return failure__        };get,document,failure,while,executing,the,operation,code,null,in,case,of,no,failure;public,exception,get,failure,return,failure
Engine -> Result -> public Exception getFailure();1538424609;get document failure while executing the operation {@code null} in case of no failure;public Exception getFailure() {_            return failure__        };get,document,failure,while,executing,the,operation,code,null,in,case,of,no,failure;public,exception,get,failure,return,failure
Engine -> Result -> public Exception getFailure();1539723533;get document failure while executing the operation {@code null} in case of no failure;public Exception getFailure() {_            return failure__        };get,document,failure,while,executing,the,operation,code,null,in,case,of,no,failure;public,exception,get,failure,return,failure
Engine -> Result -> public Exception getFailure();1541618615;get document failure while executing the operation {@code null} in case of no failure;public Exception getFailure() {_            return failure__        };get,document,failure,while,executing,the,operation,code,null,in,case,of,no,failure;public,exception,get,failure,return,failure
Engine -> Result -> public Exception getFailure();1542697754;get document failure while executing the operation {@code null} in case of no failure;public Exception getFailure() {_            return failure__        };get,document,failure,while,executing,the,operation,code,null,in,case,of,no,failure;public,exception,get,failure,return,failure
Engine -> Result -> public Exception getFailure();1543047942;get document failure while executing the operation {@code null} in case of no failure;public Exception getFailure() {_            return failure__        };get,document,failure,while,executing,the,operation,code,null,in,case,of,no,failure;public,exception,get,failure,return,failure
Engine -> Result -> public Exception getFailure();1544545090;get document failure while executing the operation {@code null} in case of no failure;public Exception getFailure() {_            return failure__        };get,document,failure,while,executing,the,operation,code,null,in,case,of,no,failure;public,exception,get,failure,return,failure
Engine -> Result -> public Exception getFailure();1544684920;get document failure while executing the operation {@code null} in case of no failure;public Exception getFailure() {_            return failure__        };get,document,failure,while,executing,the,operation,code,null,in,case,of,no,failure;public,exception,get,failure,return,failure
Engine -> Result -> public Exception getFailure();1545140118;get document failure while executing the operation {@code null} in case of no failure;public Exception getFailure() {_            return failure__        };get,document,failure,while,executing,the,operation,code,null,in,case,of,no,failure;public,exception,get,failure,return,failure
Engine -> Result -> public Exception getFailure();1545221705;get document failure while executing the operation {@code null} in case of no failure;public Exception getFailure() {_            return failure__        };get,document,failure,while,executing,the,operation,code,null,in,case,of,no,failure;public,exception,get,failure,return,failure
Engine -> Result -> public Exception getFailure();1547332999;get document failure while executing the operation {@code null} in case of no failure;public Exception getFailure() {_            return failure__        };get,document,failure,while,executing,the,operation,code,null,in,case,of,no,failure;public,exception,get,failure,return,failure
Engine -> Result -> public Exception getFailure();1548771485;get document failure while executing the operation {@code null} in case of no failure;public Exception getFailure() {_            return failure__        };get,document,failure,while,executing,the,operation,code,null,in,case,of,no,failure;public,exception,get,failure,return,failure
Engine -> Result -> public Exception getFailure();1549891630;get document failure while executing the operation {@code null} in case of no failure;public Exception getFailure() {_            return failure__        };get,document,failure,while,executing,the,operation,code,null,in,case,of,no,failure;public,exception,get,failure,return,failure
Engine -> Result -> public Exception getFailure();1549975032;get document failure while executing the operation {@code null} in case of no failure;public Exception getFailure() {_            return failure__        };get,document,failure,while,executing,the,operation,code,null,in,case,of,no,failure;public,exception,get,failure,return,failure
Engine -> Result -> public Exception getFailure();1550220204;get document failure while executing the operation {@code null} in case of no failure;public Exception getFailure() {_            return failure__        };get,document,failure,while,executing,the,operation,code,null,in,case,of,no,failure;public,exception,get,failure,return,failure
Engine -> Result -> public Exception getFailure();1550526771;get document failure while executing the operation {@code null} in case of no failure;public Exception getFailure() {_            return failure__        };get,document,failure,while,executing,the,operation,code,null,in,case,of,no,failure;public,exception,get,failure,return,failure
Engine -> Result -> public Exception getFailure();1551110274;get document failure while executing the operation {@code null} in case of no failure;public Exception getFailure() {_            return failure__        };get,document,failure,while,executing,the,operation,code,null,in,case,of,no,failure;public,exception,get,failure,return,failure
Engine -> Result -> public Exception getFailure();1551126708;get document failure while executing the operation {@code null} in case of no failure;public Exception getFailure() {_            return failure__        };get,document,failure,while,executing,the,operation,code,null,in,case,of,no,failure;public,exception,get,failure,return,failure
Engine -> public abstract void initializeMaxSeqNoOfUpdatesOrDeletes()_;1537806831;A primary shard calls this method once to initialize the max_seq_no_of_updates marker using the_max_seq_no from Lucene index and translog before replaying the local translog in its local recovery.;public abstract void initializeMaxSeqNoOfUpdatesOrDeletes()_;a,primary,shard,calls,this,method,once,to,initialize,the,marker,using,the,from,lucene,index,and,translog,before,replaying,the,local,translog,in,its,local,recovery;public,abstract,void,initialize,max,seq,no,of,updates,or,deletes
Engine -> public abstract void initializeMaxSeqNoOfUpdatesOrDeletes()_;1538067637;A primary shard calls this method once to initialize the max_seq_no_of_updates marker using the_max_seq_no from Lucene index and translog before replaying the local translog in its local recovery.;public abstract void initializeMaxSeqNoOfUpdatesOrDeletes()_;a,primary,shard,calls,this,method,once,to,initialize,the,marker,using,the,from,lucene,index,and,translog,before,replaying,the,local,translog,in,its,local,recovery;public,abstract,void,initialize,max,seq,no,of,updates,or,deletes
Engine -> public abstract void initializeMaxSeqNoOfUpdatesOrDeletes()_;1538424609;A primary shard calls this method once to initialize the max_seq_no_of_updates marker using the_max_seq_no from Lucene index and translog before replaying the local translog in its local recovery.;public abstract void initializeMaxSeqNoOfUpdatesOrDeletes()_;a,primary,shard,calls,this,method,once,to,initialize,the,marker,using,the,from,lucene,index,and,translog,before,replaying,the,local,translog,in,its,local,recovery;public,abstract,void,initialize,max,seq,no,of,updates,or,deletes
Engine -> public abstract void initializeMaxSeqNoOfUpdatesOrDeletes()_;1539723533;A primary shard calls this method once to initialize the max_seq_no_of_updates marker using the_max_seq_no from Lucene index and translog before replaying the local translog in its local recovery.;public abstract void initializeMaxSeqNoOfUpdatesOrDeletes()_;a,primary,shard,calls,this,method,once,to,initialize,the,marker,using,the,from,lucene,index,and,translog,before,replaying,the,local,translog,in,its,local,recovery;public,abstract,void,initialize,max,seq,no,of,updates,or,deletes
Engine -> public abstract void initializeMaxSeqNoOfUpdatesOrDeletes()_;1541618615;A primary shard calls this method once to initialize the max_seq_no_of_updates marker using the_max_seq_no from Lucene index and translog before replaying the local translog in its local recovery.;public abstract void initializeMaxSeqNoOfUpdatesOrDeletes()_;a,primary,shard,calls,this,method,once,to,initialize,the,marker,using,the,from,lucene,index,and,translog,before,replaying,the,local,translog,in,its,local,recovery;public,abstract,void,initialize,max,seq,no,of,updates,or,deletes
Engine -> public abstract void initializeMaxSeqNoOfUpdatesOrDeletes()_;1542697754;A primary shard calls this method once to initialize the max_seq_no_of_updates marker using the_max_seq_no from Lucene index and translog before replaying the local translog in its local recovery.;public abstract void initializeMaxSeqNoOfUpdatesOrDeletes()_;a,primary,shard,calls,this,method,once,to,initialize,the,marker,using,the,from,lucene,index,and,translog,before,replaying,the,local,translog,in,its,local,recovery;public,abstract,void,initialize,max,seq,no,of,updates,or,deletes
Engine -> public abstract void initializeMaxSeqNoOfUpdatesOrDeletes()_;1543047942;A primary shard calls this method once to initialize the max_seq_no_of_updates marker using the_max_seq_no from Lucene index and translog before replaying the local translog in its local recovery.;public abstract void initializeMaxSeqNoOfUpdatesOrDeletes()_;a,primary,shard,calls,this,method,once,to,initialize,the,marker,using,the,from,lucene,index,and,translog,before,replaying,the,local,translog,in,its,local,recovery;public,abstract,void,initialize,max,seq,no,of,updates,or,deletes
Engine -> public abstract void initializeMaxSeqNoOfUpdatesOrDeletes()_;1544545090;A primary shard calls this method once to initialize the max_seq_no_of_updates marker using the_max_seq_no from Lucene index and translog before replaying the local translog in its local recovery.;public abstract void initializeMaxSeqNoOfUpdatesOrDeletes()_;a,primary,shard,calls,this,method,once,to,initialize,the,marker,using,the,from,lucene,index,and,translog,before,replaying,the,local,translog,in,its,local,recovery;public,abstract,void,initialize,max,seq,no,of,updates,or,deletes
Engine -> public abstract void initializeMaxSeqNoOfUpdatesOrDeletes()_;1544684920;A primary shard calls this method once to initialize the max_seq_no_of_updates marker using the_max_seq_no from Lucene index and translog before replaying the local translog in its local recovery.;public abstract void initializeMaxSeqNoOfUpdatesOrDeletes()_;a,primary,shard,calls,this,method,once,to,initialize,the,marker,using,the,from,lucene,index,and,translog,before,replaying,the,local,translog,in,its,local,recovery;public,abstract,void,initialize,max,seq,no,of,updates,or,deletes
Engine -> public abstract void initializeMaxSeqNoOfUpdatesOrDeletes()_;1545140118;A primary shard calls this method once to initialize the max_seq_no_of_updates marker using the_max_seq_no from Lucene index and translog before replaying the local translog in its local recovery.;public abstract void initializeMaxSeqNoOfUpdatesOrDeletes()_;a,primary,shard,calls,this,method,once,to,initialize,the,marker,using,the,from,lucene,index,and,translog,before,replaying,the,local,translog,in,its,local,recovery;public,abstract,void,initialize,max,seq,no,of,updates,or,deletes
Engine -> public abstract void initializeMaxSeqNoOfUpdatesOrDeletes()_;1545221705;A primary shard calls this method once to initialize the max_seq_no_of_updates marker using the_max_seq_no from Lucene index and translog before replaying the local translog in its local recovery.;public abstract void initializeMaxSeqNoOfUpdatesOrDeletes()_;a,primary,shard,calls,this,method,once,to,initialize,the,marker,using,the,from,lucene,index,and,translog,before,replaying,the,local,translog,in,its,local,recovery;public,abstract,void,initialize,max,seq,no,of,updates,or,deletes
Engine -> public abstract void initializeMaxSeqNoOfUpdatesOrDeletes()_;1547332999;A primary shard calls this method once to initialize the max_seq_no_of_updates marker using the_max_seq_no from Lucene index and translog before replaying the local translog in its local recovery.;public abstract void initializeMaxSeqNoOfUpdatesOrDeletes()_;a,primary,shard,calls,this,method,once,to,initialize,the,marker,using,the,from,lucene,index,and,translog,before,replaying,the,local,translog,in,its,local,recovery;public,abstract,void,initialize,max,seq,no,of,updates,or,deletes
Engine -> public abstract void initializeMaxSeqNoOfUpdatesOrDeletes()_;1548771485;A primary shard calls this method once to initialize the max_seq_no_of_updates marker using the_max_seq_no from Lucene index and translog before replaying the local translog in its local recovery.;public abstract void initializeMaxSeqNoOfUpdatesOrDeletes()_;a,primary,shard,calls,this,method,once,to,initialize,the,marker,using,the,from,lucene,index,and,translog,before,replaying,the,local,translog,in,its,local,recovery;public,abstract,void,initialize,max,seq,no,of,updates,or,deletes
Engine -> public abstract void initializeMaxSeqNoOfUpdatesOrDeletes()_;1549891630;A primary shard calls this method once to initialize the max_seq_no_of_updates marker using the_max_seq_no from Lucene index and translog before replaying the local translog in its local recovery.;public abstract void initializeMaxSeqNoOfUpdatesOrDeletes()_;a,primary,shard,calls,this,method,once,to,initialize,the,marker,using,the,from,lucene,index,and,translog,before,replaying,the,local,translog,in,its,local,recovery;public,abstract,void,initialize,max,seq,no,of,updates,or,deletes
Engine -> public abstract void initializeMaxSeqNoOfUpdatesOrDeletes()_;1549975032;A primary shard calls this method once to initialize the max_seq_no_of_updates marker using the_max_seq_no from Lucene index and translog before replaying the local translog in its local recovery.;public abstract void initializeMaxSeqNoOfUpdatesOrDeletes()_;a,primary,shard,calls,this,method,once,to,initialize,the,marker,using,the,from,lucene,index,and,translog,before,replaying,the,local,translog,in,its,local,recovery;public,abstract,void,initialize,max,seq,no,of,updates,or,deletes
Engine -> public abstract void initializeMaxSeqNoOfUpdatesOrDeletes()_;1550220204;A primary shard calls this method once to initialize the max_seq_no_of_updates marker using the_max_seq_no from Lucene index and translog before replaying the local translog in its local recovery.;public abstract void initializeMaxSeqNoOfUpdatesOrDeletes()_;a,primary,shard,calls,this,method,once,to,initialize,the,marker,using,the,from,lucene,index,and,translog,before,replaying,the,local,translog,in,its,local,recovery;public,abstract,void,initialize,max,seq,no,of,updates,or,deletes
Engine -> public abstract void initializeMaxSeqNoOfUpdatesOrDeletes()_;1550526771;A primary shard calls this method once to initialize the max_seq_no_of_updates marker using the_max_seq_no from Lucene index and translog before replaying the local translog in its local recovery.;public abstract void initializeMaxSeqNoOfUpdatesOrDeletes()_;a,primary,shard,calls,this,method,once,to,initialize,the,marker,using,the,from,lucene,index,and,translog,before,replaying,the,local,translog,in,its,local,recovery;public,abstract,void,initialize,max,seq,no,of,updates,or,deletes
Engine -> public abstract void initializeMaxSeqNoOfUpdatesOrDeletes()_;1551110274;A primary shard calls this method once to initialize the max_seq_no_of_updates marker using the_max_seq_no from Lucene index and translog before replaying the local translog in its local recovery.;public abstract void initializeMaxSeqNoOfUpdatesOrDeletes()_;a,primary,shard,calls,this,method,once,to,initialize,the,marker,using,the,from,lucene,index,and,translog,before,replaying,the,local,translog,in,its,local,recovery;public,abstract,void,initialize,max,seq,no,of,updates,or,deletes
Engine -> public abstract void initializeMaxSeqNoOfUpdatesOrDeletes()_;1551126708;A primary shard calls this method once to initialize the max_seq_no_of_updates marker using the_max_seq_no from Lucene index and translog before replaying the local translog in its local recovery.;public abstract void initializeMaxSeqNoOfUpdatesOrDeletes()_;a,primary,shard,calls,this,method,once,to,initialize,the,marker,using,the,from,lucene,index,and,translog,before,replaying,the,local,translog,in,its,local,recovery;public,abstract,void,initialize,max,seq,no,of,updates,or,deletes
Engine -> public CompletionStats completionStats(String... fieldNamePatterns) throws IOException;1537806831;Returns the {@link CompletionStats} for this engine;public CompletionStats completionStats(String... fieldNamePatterns) throws IOException {_        try (Engine.Searcher currentSearcher = acquireSearcher("completion_stats", SearcherScope.INTERNAL)) {_            long sizeInBytes = 0__            ObjectLongHashMap<String> completionFields = null__            if (fieldNamePatterns != null && fieldNamePatterns.length > 0) {_                completionFields = new ObjectLongHashMap<>(fieldNamePatterns.length)__            }_            for (LeafReaderContext atomicReaderContext : currentSearcher.reader().leaves()) {_                LeafReader atomicReader = atomicReaderContext.reader()__                for (FieldInfo info : atomicReader.getFieldInfos()) {_                    Terms terms = atomicReader.terms(info.name)__                    if (terms instanceof CompletionTerms) {_                        _                        long fstSize = ((CompletionTerms) terms).suggester().ramBytesUsed()__                        if (Regex.simpleMatch(fieldNamePatterns, info.name)) {_                            completionFields.addTo(info.name, fstSize)__                        }_                        sizeInBytes += fstSize__                    }_                }_            }_            return new CompletionStats(sizeInBytes, completionFields == null ? null : new FieldMemoryStats(completionFields))__        }_    };returns,the,link,completion,stats,for,this,engine;public,completion,stats,completion,stats,string,field,name,patterns,throws,ioexception,try,engine,searcher,current,searcher,acquire,searcher,searcher,scope,internal,long,size,in,bytes,0,object,long,hash,map,string,completion,fields,null,if,field,name,patterns,null,field,name,patterns,length,0,completion,fields,new,object,long,hash,map,field,name,patterns,length,for,leaf,reader,context,atomic,reader,context,current,searcher,reader,leaves,leaf,reader,atomic,reader,atomic,reader,context,reader,for,field,info,info,atomic,reader,get,field,infos,terms,terms,atomic,reader,terms,info,name,if,terms,instanceof,completion,terms,long,fst,size,completion,terms,terms,suggester,ram,bytes,used,if,regex,simple,match,field,name,patterns,info,name,completion,fields,add,to,info,name,fst,size,size,in,bytes,fst,size,return,new,completion,stats,size,in,bytes,completion,fields,null,null,new,field,memory,stats,completion,fields
Engine -> public CompletionStats completionStats(String... fieldNamePatterns) throws IOException;1538067637;Returns the {@link CompletionStats} for this engine;public CompletionStats completionStats(String... fieldNamePatterns) throws IOException {_        try (Engine.Searcher currentSearcher = acquireSearcher("completion_stats", SearcherScope.INTERNAL)) {_            long sizeInBytes = 0__            ObjectLongHashMap<String> completionFields = null__            if (fieldNamePatterns != null && fieldNamePatterns.length > 0) {_                completionFields = new ObjectLongHashMap<>(fieldNamePatterns.length)__            }_            for (LeafReaderContext atomicReaderContext : currentSearcher.reader().leaves()) {_                LeafReader atomicReader = atomicReaderContext.reader()__                for (FieldInfo info : atomicReader.getFieldInfos()) {_                    Terms terms = atomicReader.terms(info.name)__                    if (terms instanceof CompletionTerms) {_                        _                        long fstSize = ((CompletionTerms) terms).suggester().ramBytesUsed()__                        if (Regex.simpleMatch(fieldNamePatterns, info.name)) {_                            completionFields.addTo(info.name, fstSize)__                        }_                        sizeInBytes += fstSize__                    }_                }_            }_            return new CompletionStats(sizeInBytes, completionFields == null ? null : new FieldMemoryStats(completionFields))__        }_    };returns,the,link,completion,stats,for,this,engine;public,completion,stats,completion,stats,string,field,name,patterns,throws,ioexception,try,engine,searcher,current,searcher,acquire,searcher,searcher,scope,internal,long,size,in,bytes,0,object,long,hash,map,string,completion,fields,null,if,field,name,patterns,null,field,name,patterns,length,0,completion,fields,new,object,long,hash,map,field,name,patterns,length,for,leaf,reader,context,atomic,reader,context,current,searcher,reader,leaves,leaf,reader,atomic,reader,atomic,reader,context,reader,for,field,info,info,atomic,reader,get,field,infos,terms,terms,atomic,reader,terms,info,name,if,terms,instanceof,completion,terms,long,fst,size,completion,terms,terms,suggester,ram,bytes,used,if,regex,simple,match,field,name,patterns,info,name,completion,fields,add,to,info,name,fst,size,size,in,bytes,fst,size,return,new,completion,stats,size,in,bytes,completion,fields,null,null,new,field,memory,stats,completion,fields
Engine -> public CompletionStats completionStats(String... fieldNamePatterns) throws IOException;1538424609;Returns the {@link CompletionStats} for this engine;public CompletionStats completionStats(String... fieldNamePatterns) throws IOException {_        try (Engine.Searcher currentSearcher = acquireSearcher("completion_stats", SearcherScope.INTERNAL)) {_            long sizeInBytes = 0__            ObjectLongHashMap<String> completionFields = null__            if (fieldNamePatterns != null && fieldNamePatterns.length > 0) {_                completionFields = new ObjectLongHashMap<>(fieldNamePatterns.length)__            }_            for (LeafReaderContext atomicReaderContext : currentSearcher.reader().leaves()) {_                LeafReader atomicReader = atomicReaderContext.reader()__                for (FieldInfo info : atomicReader.getFieldInfos()) {_                    Terms terms = atomicReader.terms(info.name)__                    if (terms instanceof CompletionTerms) {_                        _                        long fstSize = ((CompletionTerms) terms).suggester().ramBytesUsed()__                        if (Regex.simpleMatch(fieldNamePatterns, info.name)) {_                            completionFields.addTo(info.name, fstSize)__                        }_                        sizeInBytes += fstSize__                    }_                }_            }_            return new CompletionStats(sizeInBytes, completionFields == null ? null : new FieldMemoryStats(completionFields))__        }_    };returns,the,link,completion,stats,for,this,engine;public,completion,stats,completion,stats,string,field,name,patterns,throws,ioexception,try,engine,searcher,current,searcher,acquire,searcher,searcher,scope,internal,long,size,in,bytes,0,object,long,hash,map,string,completion,fields,null,if,field,name,patterns,null,field,name,patterns,length,0,completion,fields,new,object,long,hash,map,field,name,patterns,length,for,leaf,reader,context,atomic,reader,context,current,searcher,reader,leaves,leaf,reader,atomic,reader,atomic,reader,context,reader,for,field,info,info,atomic,reader,get,field,infos,terms,terms,atomic,reader,terms,info,name,if,terms,instanceof,completion,terms,long,fst,size,completion,terms,terms,suggester,ram,bytes,used,if,regex,simple,match,field,name,patterns,info,name,completion,fields,add,to,info,name,fst,size,size,in,bytes,fst,size,return,new,completion,stats,size,in,bytes,completion,fields,null,null,new,field,memory,stats,completion,fields
Engine -> public CompletionStats completionStats(String... fieldNamePatterns) throws IOException;1539723533;Returns the {@link CompletionStats} for this engine;public CompletionStats completionStats(String... fieldNamePatterns) throws IOException {_        try (Engine.Searcher currentSearcher = acquireSearcher("completion_stats", SearcherScope.INTERNAL)) {_            long sizeInBytes = 0__            ObjectLongHashMap<String> completionFields = null__            if (fieldNamePatterns != null && fieldNamePatterns.length > 0) {_                completionFields = new ObjectLongHashMap<>(fieldNamePatterns.length)__            }_            for (LeafReaderContext atomicReaderContext : currentSearcher.reader().leaves()) {_                LeafReader atomicReader = atomicReaderContext.reader()__                for (FieldInfo info : atomicReader.getFieldInfos()) {_                    Terms terms = atomicReader.terms(info.name)__                    if (terms instanceof CompletionTerms) {_                        _                        long fstSize = ((CompletionTerms) terms).suggester().ramBytesUsed()__                        if (Regex.simpleMatch(fieldNamePatterns, info.name)) {_                            completionFields.addTo(info.name, fstSize)__                        }_                        sizeInBytes += fstSize__                    }_                }_            }_            return new CompletionStats(sizeInBytes, completionFields == null ? null : new FieldMemoryStats(completionFields))__        }_    };returns,the,link,completion,stats,for,this,engine;public,completion,stats,completion,stats,string,field,name,patterns,throws,ioexception,try,engine,searcher,current,searcher,acquire,searcher,searcher,scope,internal,long,size,in,bytes,0,object,long,hash,map,string,completion,fields,null,if,field,name,patterns,null,field,name,patterns,length,0,completion,fields,new,object,long,hash,map,field,name,patterns,length,for,leaf,reader,context,atomic,reader,context,current,searcher,reader,leaves,leaf,reader,atomic,reader,atomic,reader,context,reader,for,field,info,info,atomic,reader,get,field,infos,terms,terms,atomic,reader,terms,info,name,if,terms,instanceof,completion,terms,long,fst,size,completion,terms,terms,suggester,ram,bytes,used,if,regex,simple,match,field,name,patterns,info,name,completion,fields,add,to,info,name,fst,size,size,in,bytes,fst,size,return,new,completion,stats,size,in,bytes,completion,fields,null,null,new,field,memory,stats,completion,fields
Engine -> public CompletionStats completionStats(String... fieldNamePatterns) throws IOException;1541618615;Returns the {@link CompletionStats} for this engine;public CompletionStats completionStats(String... fieldNamePatterns) throws IOException {_        try (Engine.Searcher currentSearcher = acquireSearcher("completion_stats", SearcherScope.INTERNAL)) {_            long sizeInBytes = 0__            ObjectLongHashMap<String> completionFields = null__            if (fieldNamePatterns != null && fieldNamePatterns.length > 0) {_                completionFields = new ObjectLongHashMap<>(fieldNamePatterns.length)__            }_            for (LeafReaderContext atomicReaderContext : currentSearcher.reader().leaves()) {_                LeafReader atomicReader = atomicReaderContext.reader()__                for (FieldInfo info : atomicReader.getFieldInfos()) {_                    Terms terms = atomicReader.terms(info.name)__                    if (terms instanceof CompletionTerms) {_                        _                        long fstSize = ((CompletionTerms) terms).suggester().ramBytesUsed()__                        if (Regex.simpleMatch(fieldNamePatterns, info.name)) {_                            completionFields.addTo(info.name, fstSize)__                        }_                        sizeInBytes += fstSize__                    }_                }_            }_            return new CompletionStats(sizeInBytes, completionFields == null ? null : new FieldMemoryStats(completionFields))__        }_    };returns,the,link,completion,stats,for,this,engine;public,completion,stats,completion,stats,string,field,name,patterns,throws,ioexception,try,engine,searcher,current,searcher,acquire,searcher,searcher,scope,internal,long,size,in,bytes,0,object,long,hash,map,string,completion,fields,null,if,field,name,patterns,null,field,name,patterns,length,0,completion,fields,new,object,long,hash,map,field,name,patterns,length,for,leaf,reader,context,atomic,reader,context,current,searcher,reader,leaves,leaf,reader,atomic,reader,atomic,reader,context,reader,for,field,info,info,atomic,reader,get,field,infos,terms,terms,atomic,reader,terms,info,name,if,terms,instanceof,completion,terms,long,fst,size,completion,terms,terms,suggester,ram,bytes,used,if,regex,simple,match,field,name,patterns,info,name,completion,fields,add,to,info,name,fst,size,size,in,bytes,fst,size,return,new,completion,stats,size,in,bytes,completion,fields,null,null,new,field,memory,stats,completion,fields
Engine -> public CompletionStats completionStats(String... fieldNamePatterns) throws IOException;1542697754;Returns the {@link CompletionStats} for this engine;public CompletionStats completionStats(String... fieldNamePatterns) throws IOException {_        try (Engine.Searcher currentSearcher = acquireSearcher("completion_stats", SearcherScope.INTERNAL)) {_            long sizeInBytes = 0__            ObjectLongHashMap<String> completionFields = null__            if (fieldNamePatterns != null && fieldNamePatterns.length > 0) {_                completionFields = new ObjectLongHashMap<>(fieldNamePatterns.length)__            }_            for (LeafReaderContext atomicReaderContext : currentSearcher.reader().leaves()) {_                LeafReader atomicReader = atomicReaderContext.reader()__                for (FieldInfo info : atomicReader.getFieldInfos()) {_                    Terms terms = atomicReader.terms(info.name)__                    if (terms instanceof CompletionTerms) {_                        _                        long fstSize = ((CompletionTerms) terms).suggester().ramBytesUsed()__                        if (Regex.simpleMatch(fieldNamePatterns, info.name)) {_                            completionFields.addTo(info.name, fstSize)__                        }_                        sizeInBytes += fstSize__                    }_                }_            }_            return new CompletionStats(sizeInBytes, completionFields == null ? null : new FieldMemoryStats(completionFields))__        }_    };returns,the,link,completion,stats,for,this,engine;public,completion,stats,completion,stats,string,field,name,patterns,throws,ioexception,try,engine,searcher,current,searcher,acquire,searcher,searcher,scope,internal,long,size,in,bytes,0,object,long,hash,map,string,completion,fields,null,if,field,name,patterns,null,field,name,patterns,length,0,completion,fields,new,object,long,hash,map,field,name,patterns,length,for,leaf,reader,context,atomic,reader,context,current,searcher,reader,leaves,leaf,reader,atomic,reader,atomic,reader,context,reader,for,field,info,info,atomic,reader,get,field,infos,terms,terms,atomic,reader,terms,info,name,if,terms,instanceof,completion,terms,long,fst,size,completion,terms,terms,suggester,ram,bytes,used,if,regex,simple,match,field,name,patterns,info,name,completion,fields,add,to,info,name,fst,size,size,in,bytes,fst,size,return,new,completion,stats,size,in,bytes,completion,fields,null,null,new,field,memory,stats,completion,fields
Engine -> public CompletionStats completionStats(String... fieldNamePatterns) throws IOException;1543047942;Returns the {@link CompletionStats} for this engine;public CompletionStats completionStats(String... fieldNamePatterns) throws IOException {_        try (Engine.Searcher currentSearcher = acquireSearcher("completion_stats", SearcherScope.INTERNAL)) {_            long sizeInBytes = 0__            ObjectLongHashMap<String> completionFields = null__            if (fieldNamePatterns != null && fieldNamePatterns.length > 0) {_                completionFields = new ObjectLongHashMap<>(fieldNamePatterns.length)__            }_            for (LeafReaderContext atomicReaderContext : currentSearcher.reader().leaves()) {_                LeafReader atomicReader = atomicReaderContext.reader()__                for (FieldInfo info : atomicReader.getFieldInfos()) {_                    Terms terms = atomicReader.terms(info.name)__                    if (terms instanceof CompletionTerms) {_                        _                        long fstSize = ((CompletionTerms) terms).suggester().ramBytesUsed()__                        if (Regex.simpleMatch(fieldNamePatterns, info.name)) {_                            completionFields.addTo(info.name, fstSize)__                        }_                        sizeInBytes += fstSize__                    }_                }_            }_            return new CompletionStats(sizeInBytes, completionFields == null ? null : new FieldMemoryStats(completionFields))__        }_    };returns,the,link,completion,stats,for,this,engine;public,completion,stats,completion,stats,string,field,name,patterns,throws,ioexception,try,engine,searcher,current,searcher,acquire,searcher,searcher,scope,internal,long,size,in,bytes,0,object,long,hash,map,string,completion,fields,null,if,field,name,patterns,null,field,name,patterns,length,0,completion,fields,new,object,long,hash,map,field,name,patterns,length,for,leaf,reader,context,atomic,reader,context,current,searcher,reader,leaves,leaf,reader,atomic,reader,atomic,reader,context,reader,for,field,info,info,atomic,reader,get,field,infos,terms,terms,atomic,reader,terms,info,name,if,terms,instanceof,completion,terms,long,fst,size,completion,terms,terms,suggester,ram,bytes,used,if,regex,simple,match,field,name,patterns,info,name,completion,fields,add,to,info,name,fst,size,size,in,bytes,fst,size,return,new,completion,stats,size,in,bytes,completion,fields,null,null,new,field,memory,stats,completion,fields
Engine -> public CompletionStats completionStats(String... fieldNamePatterns) throws IOException;1544545090;Returns the {@link CompletionStats} for this engine;public CompletionStats completionStats(String... fieldNamePatterns) throws IOException {_        try (Engine.Searcher currentSearcher = acquireSearcher("completion_stats", SearcherScope.INTERNAL)) {_            long sizeInBytes = 0__            ObjectLongHashMap<String> completionFields = null__            if (fieldNamePatterns != null && fieldNamePatterns.length > 0) {_                completionFields = new ObjectLongHashMap<>(fieldNamePatterns.length)__            }_            for (LeafReaderContext atomicReaderContext : currentSearcher.reader().leaves()) {_                LeafReader atomicReader = atomicReaderContext.reader()__                for (FieldInfo info : atomicReader.getFieldInfos()) {_                    Terms terms = atomicReader.terms(info.name)__                    if (terms instanceof CompletionTerms) {_                        _                        long fstSize = ((CompletionTerms) terms).suggester().ramBytesUsed()__                        if (Regex.simpleMatch(fieldNamePatterns, info.name)) {_                            completionFields.addTo(info.name, fstSize)__                        }_                        sizeInBytes += fstSize__                    }_                }_            }_            return new CompletionStats(sizeInBytes, completionFields == null ? null : new FieldMemoryStats(completionFields))__        }_    };returns,the,link,completion,stats,for,this,engine;public,completion,stats,completion,stats,string,field,name,patterns,throws,ioexception,try,engine,searcher,current,searcher,acquire,searcher,searcher,scope,internal,long,size,in,bytes,0,object,long,hash,map,string,completion,fields,null,if,field,name,patterns,null,field,name,patterns,length,0,completion,fields,new,object,long,hash,map,field,name,patterns,length,for,leaf,reader,context,atomic,reader,context,current,searcher,reader,leaves,leaf,reader,atomic,reader,atomic,reader,context,reader,for,field,info,info,atomic,reader,get,field,infos,terms,terms,atomic,reader,terms,info,name,if,terms,instanceof,completion,terms,long,fst,size,completion,terms,terms,suggester,ram,bytes,used,if,regex,simple,match,field,name,patterns,info,name,completion,fields,add,to,info,name,fst,size,size,in,bytes,fst,size,return,new,completion,stats,size,in,bytes,completion,fields,null,null,new,field,memory,stats,completion,fields
Engine -> public CompletionStats completionStats(String... fieldNamePatterns) throws IOException;1544684920;Returns the {@link CompletionStats} for this engine;public CompletionStats completionStats(String... fieldNamePatterns) throws IOException {_        try (Engine.Searcher currentSearcher = acquireSearcher("completion_stats", SearcherScope.INTERNAL)) {_            long sizeInBytes = 0__            ObjectLongHashMap<String> completionFields = null__            if (fieldNamePatterns != null && fieldNamePatterns.length > 0) {_                completionFields = new ObjectLongHashMap<>(fieldNamePatterns.length)__            }_            for (LeafReaderContext atomicReaderContext : currentSearcher.reader().leaves()) {_                LeafReader atomicReader = atomicReaderContext.reader()__                for (FieldInfo info : atomicReader.getFieldInfos()) {_                    Terms terms = atomicReader.terms(info.name)__                    if (terms instanceof CompletionTerms) {_                        _                        long fstSize = ((CompletionTerms) terms).suggester().ramBytesUsed()__                        if (Regex.simpleMatch(fieldNamePatterns, info.name)) {_                            completionFields.addTo(info.name, fstSize)__                        }_                        sizeInBytes += fstSize__                    }_                }_            }_            return new CompletionStats(sizeInBytes, completionFields == null ? null : new FieldMemoryStats(completionFields))__        }_    };returns,the,link,completion,stats,for,this,engine;public,completion,stats,completion,stats,string,field,name,patterns,throws,ioexception,try,engine,searcher,current,searcher,acquire,searcher,searcher,scope,internal,long,size,in,bytes,0,object,long,hash,map,string,completion,fields,null,if,field,name,patterns,null,field,name,patterns,length,0,completion,fields,new,object,long,hash,map,field,name,patterns,length,for,leaf,reader,context,atomic,reader,context,current,searcher,reader,leaves,leaf,reader,atomic,reader,atomic,reader,context,reader,for,field,info,info,atomic,reader,get,field,infos,terms,terms,atomic,reader,terms,info,name,if,terms,instanceof,completion,terms,long,fst,size,completion,terms,terms,suggester,ram,bytes,used,if,regex,simple,match,field,name,patterns,info,name,completion,fields,add,to,info,name,fst,size,size,in,bytes,fst,size,return,new,completion,stats,size,in,bytes,completion,fields,null,null,new,field,memory,stats,completion,fields
Engine -> public CompletionStats completionStats(String... fieldNamePatterns) throws IOException;1545140118;Returns the {@link CompletionStats} for this engine;public CompletionStats completionStats(String... fieldNamePatterns) throws IOException {_        try (Engine.Searcher currentSearcher = acquireSearcher("completion_stats", SearcherScope.INTERNAL)) {_            long sizeInBytes = 0__            ObjectLongHashMap<String> completionFields = null__            if (fieldNamePatterns != null && fieldNamePatterns.length > 0) {_                completionFields = new ObjectLongHashMap<>(fieldNamePatterns.length)__            }_            for (LeafReaderContext atomicReaderContext : currentSearcher.reader().leaves()) {_                LeafReader atomicReader = atomicReaderContext.reader()__                for (FieldInfo info : atomicReader.getFieldInfos()) {_                    Terms terms = atomicReader.terms(info.name)__                    if (terms instanceof CompletionTerms) {_                        _                        long fstSize = ((CompletionTerms) terms).suggester().ramBytesUsed()__                        if (Regex.simpleMatch(fieldNamePatterns, info.name)) {_                            completionFields.addTo(info.name, fstSize)__                        }_                        sizeInBytes += fstSize__                    }_                }_            }_            return new CompletionStats(sizeInBytes, completionFields == null ? null : new FieldMemoryStats(completionFields))__        }_    };returns,the,link,completion,stats,for,this,engine;public,completion,stats,completion,stats,string,field,name,patterns,throws,ioexception,try,engine,searcher,current,searcher,acquire,searcher,searcher,scope,internal,long,size,in,bytes,0,object,long,hash,map,string,completion,fields,null,if,field,name,patterns,null,field,name,patterns,length,0,completion,fields,new,object,long,hash,map,field,name,patterns,length,for,leaf,reader,context,atomic,reader,context,current,searcher,reader,leaves,leaf,reader,atomic,reader,atomic,reader,context,reader,for,field,info,info,atomic,reader,get,field,infos,terms,terms,atomic,reader,terms,info,name,if,terms,instanceof,completion,terms,long,fst,size,completion,terms,terms,suggester,ram,bytes,used,if,regex,simple,match,field,name,patterns,info,name,completion,fields,add,to,info,name,fst,size,size,in,bytes,fst,size,return,new,completion,stats,size,in,bytes,completion,fields,null,null,new,field,memory,stats,completion,fields
Engine -> public CompletionStats completionStats(String... fieldNamePatterns) throws IOException;1545221705;Returns the {@link CompletionStats} for this engine;public CompletionStats completionStats(String... fieldNamePatterns) throws IOException {_        try (Engine.Searcher currentSearcher = acquireSearcher("completion_stats", SearcherScope.INTERNAL)) {_            long sizeInBytes = 0__            ObjectLongHashMap<String> completionFields = null__            if (fieldNamePatterns != null && fieldNamePatterns.length > 0) {_                completionFields = new ObjectLongHashMap<>(fieldNamePatterns.length)__            }_            for (LeafReaderContext atomicReaderContext : currentSearcher.reader().leaves()) {_                LeafReader atomicReader = atomicReaderContext.reader()__                for (FieldInfo info : atomicReader.getFieldInfos()) {_                    Terms terms = atomicReader.terms(info.name)__                    if (terms instanceof CompletionTerms) {_                        _                        long fstSize = ((CompletionTerms) terms).suggester().ramBytesUsed()__                        if (Regex.simpleMatch(fieldNamePatterns, info.name)) {_                            completionFields.addTo(info.name, fstSize)__                        }_                        sizeInBytes += fstSize__                    }_                }_            }_            return new CompletionStats(sizeInBytes, completionFields == null ? null : new FieldMemoryStats(completionFields))__        }_    };returns,the,link,completion,stats,for,this,engine;public,completion,stats,completion,stats,string,field,name,patterns,throws,ioexception,try,engine,searcher,current,searcher,acquire,searcher,searcher,scope,internal,long,size,in,bytes,0,object,long,hash,map,string,completion,fields,null,if,field,name,patterns,null,field,name,patterns,length,0,completion,fields,new,object,long,hash,map,field,name,patterns,length,for,leaf,reader,context,atomic,reader,context,current,searcher,reader,leaves,leaf,reader,atomic,reader,atomic,reader,context,reader,for,field,info,info,atomic,reader,get,field,infos,terms,terms,atomic,reader,terms,info,name,if,terms,instanceof,completion,terms,long,fst,size,completion,terms,terms,suggester,ram,bytes,used,if,regex,simple,match,field,name,patterns,info,name,completion,fields,add,to,info,name,fst,size,size,in,bytes,fst,size,return,new,completion,stats,size,in,bytes,completion,fields,null,null,new,field,memory,stats,completion,fields
Engine -> public CompletionStats completionStats(String... fieldNamePatterns) throws IOException;1547332999;Returns the {@link CompletionStats} for this engine;public CompletionStats completionStats(String... fieldNamePatterns) throws IOException {_        try (Engine.Searcher currentSearcher = acquireSearcher("completion_stats", SearcherScope.INTERNAL)) {_            long sizeInBytes = 0__            ObjectLongHashMap<String> completionFields = null__            if (fieldNamePatterns != null && fieldNamePatterns.length > 0) {_                completionFields = new ObjectLongHashMap<>(fieldNamePatterns.length)__            }_            for (LeafReaderContext atomicReaderContext : currentSearcher.reader().leaves()) {_                LeafReader atomicReader = atomicReaderContext.reader()__                for (FieldInfo info : atomicReader.getFieldInfos()) {_                    Terms terms = atomicReader.terms(info.name)__                    if (terms instanceof CompletionTerms) {_                        _                        long fstSize = ((CompletionTerms) terms).suggester().ramBytesUsed()__                        if (Regex.simpleMatch(fieldNamePatterns, info.name)) {_                            completionFields.addTo(info.name, fstSize)__                        }_                        sizeInBytes += fstSize__                    }_                }_            }_            return new CompletionStats(sizeInBytes, completionFields == null ? null : new FieldMemoryStats(completionFields))__        }_    };returns,the,link,completion,stats,for,this,engine;public,completion,stats,completion,stats,string,field,name,patterns,throws,ioexception,try,engine,searcher,current,searcher,acquire,searcher,searcher,scope,internal,long,size,in,bytes,0,object,long,hash,map,string,completion,fields,null,if,field,name,patterns,null,field,name,patterns,length,0,completion,fields,new,object,long,hash,map,field,name,patterns,length,for,leaf,reader,context,atomic,reader,context,current,searcher,reader,leaves,leaf,reader,atomic,reader,atomic,reader,context,reader,for,field,info,info,atomic,reader,get,field,infos,terms,terms,atomic,reader,terms,info,name,if,terms,instanceof,completion,terms,long,fst,size,completion,terms,terms,suggester,ram,bytes,used,if,regex,simple,match,field,name,patterns,info,name,completion,fields,add,to,info,name,fst,size,size,in,bytes,fst,size,return,new,completion,stats,size,in,bytes,completion,fields,null,null,new,field,memory,stats,completion,fields
Engine -> public CompletionStats completionStats(String... fieldNamePatterns) throws IOException;1548771485;Returns the {@link CompletionStats} for this engine;public CompletionStats completionStats(String... fieldNamePatterns) throws IOException {_        try (Engine.Searcher currentSearcher = acquireSearcher("completion_stats", SearcherScope.INTERNAL)) {_            long sizeInBytes = 0__            ObjectLongHashMap<String> completionFields = null__            if (fieldNamePatterns != null && fieldNamePatterns.length > 0) {_                completionFields = new ObjectLongHashMap<>(fieldNamePatterns.length)__            }_            for (LeafReaderContext atomicReaderContext : currentSearcher.reader().leaves()) {_                LeafReader atomicReader = atomicReaderContext.reader()__                for (FieldInfo info : atomicReader.getFieldInfos()) {_                    Terms terms = atomicReader.terms(info.name)__                    if (terms instanceof CompletionTerms) {_                        _                        long fstSize = ((CompletionTerms) terms).suggester().ramBytesUsed()__                        if (Regex.simpleMatch(fieldNamePatterns, info.name)) {_                            completionFields.addTo(info.name, fstSize)__                        }_                        sizeInBytes += fstSize__                    }_                }_            }_            return new CompletionStats(sizeInBytes, completionFields == null ? null : new FieldMemoryStats(completionFields))__        }_    };returns,the,link,completion,stats,for,this,engine;public,completion,stats,completion,stats,string,field,name,patterns,throws,ioexception,try,engine,searcher,current,searcher,acquire,searcher,searcher,scope,internal,long,size,in,bytes,0,object,long,hash,map,string,completion,fields,null,if,field,name,patterns,null,field,name,patterns,length,0,completion,fields,new,object,long,hash,map,field,name,patterns,length,for,leaf,reader,context,atomic,reader,context,current,searcher,reader,leaves,leaf,reader,atomic,reader,atomic,reader,context,reader,for,field,info,info,atomic,reader,get,field,infos,terms,terms,atomic,reader,terms,info,name,if,terms,instanceof,completion,terms,long,fst,size,completion,terms,terms,suggester,ram,bytes,used,if,regex,simple,match,field,name,patterns,info,name,completion,fields,add,to,info,name,fst,size,size,in,bytes,fst,size,return,new,completion,stats,size,in,bytes,completion,fields,null,null,new,field,memory,stats,completion,fields
Engine -> public CompletionStats completionStats(String... fieldNamePatterns) throws IOException;1549891630;Returns the {@link CompletionStats} for this engine;public CompletionStats completionStats(String... fieldNamePatterns) throws IOException {_        try (Engine.Searcher currentSearcher = acquireSearcher("completion_stats", SearcherScope.INTERNAL)) {_            long sizeInBytes = 0__            ObjectLongHashMap<String> completionFields = null__            if (fieldNamePatterns != null && fieldNamePatterns.length > 0) {_                completionFields = new ObjectLongHashMap<>(fieldNamePatterns.length)__            }_            for (LeafReaderContext atomicReaderContext : currentSearcher.reader().leaves()) {_                LeafReader atomicReader = atomicReaderContext.reader()__                for (FieldInfo info : atomicReader.getFieldInfos()) {_                    Terms terms = atomicReader.terms(info.name)__                    if (terms instanceof CompletionTerms) {_                        _                        long fstSize = ((CompletionTerms) terms).suggester().ramBytesUsed()__                        if (Regex.simpleMatch(fieldNamePatterns, info.name)) {_                            completionFields.addTo(info.name, fstSize)__                        }_                        sizeInBytes += fstSize__                    }_                }_            }_            return new CompletionStats(sizeInBytes, completionFields == null ? null : new FieldMemoryStats(completionFields))__        }_    };returns,the,link,completion,stats,for,this,engine;public,completion,stats,completion,stats,string,field,name,patterns,throws,ioexception,try,engine,searcher,current,searcher,acquire,searcher,searcher,scope,internal,long,size,in,bytes,0,object,long,hash,map,string,completion,fields,null,if,field,name,patterns,null,field,name,patterns,length,0,completion,fields,new,object,long,hash,map,field,name,patterns,length,for,leaf,reader,context,atomic,reader,context,current,searcher,reader,leaves,leaf,reader,atomic,reader,atomic,reader,context,reader,for,field,info,info,atomic,reader,get,field,infos,terms,terms,atomic,reader,terms,info,name,if,terms,instanceof,completion,terms,long,fst,size,completion,terms,terms,suggester,ram,bytes,used,if,regex,simple,match,field,name,patterns,info,name,completion,fields,add,to,info,name,fst,size,size,in,bytes,fst,size,return,new,completion,stats,size,in,bytes,completion,fields,null,null,new,field,memory,stats,completion,fields
Engine -> public CompletionStats completionStats(String... fieldNamePatterns) throws IOException;1549975032;Returns the {@link CompletionStats} for this engine;public CompletionStats completionStats(String... fieldNamePatterns) throws IOException {_        try (Engine.Searcher currentSearcher = acquireSearcher("completion_stats", SearcherScope.INTERNAL)) {_            long sizeInBytes = 0__            ObjectLongHashMap<String> completionFields = null__            if (fieldNamePatterns != null && fieldNamePatterns.length > 0) {_                completionFields = new ObjectLongHashMap<>(fieldNamePatterns.length)__            }_            for (LeafReaderContext atomicReaderContext : currentSearcher.reader().leaves()) {_                LeafReader atomicReader = atomicReaderContext.reader()__                for (FieldInfo info : atomicReader.getFieldInfos()) {_                    Terms terms = atomicReader.terms(info.name)__                    if (terms instanceof CompletionTerms) {_                        _                        long fstSize = ((CompletionTerms) terms).suggester().ramBytesUsed()__                        if (Regex.simpleMatch(fieldNamePatterns, info.name)) {_                            completionFields.addTo(info.name, fstSize)__                        }_                        sizeInBytes += fstSize__                    }_                }_            }_            return new CompletionStats(sizeInBytes, completionFields == null ? null : new FieldMemoryStats(completionFields))__        }_    };returns,the,link,completion,stats,for,this,engine;public,completion,stats,completion,stats,string,field,name,patterns,throws,ioexception,try,engine,searcher,current,searcher,acquire,searcher,searcher,scope,internal,long,size,in,bytes,0,object,long,hash,map,string,completion,fields,null,if,field,name,patterns,null,field,name,patterns,length,0,completion,fields,new,object,long,hash,map,field,name,patterns,length,for,leaf,reader,context,atomic,reader,context,current,searcher,reader,leaves,leaf,reader,atomic,reader,atomic,reader,context,reader,for,field,info,info,atomic,reader,get,field,infos,terms,terms,atomic,reader,terms,info,name,if,terms,instanceof,completion,terms,long,fst,size,completion,terms,terms,suggester,ram,bytes,used,if,regex,simple,match,field,name,patterns,info,name,completion,fields,add,to,info,name,fst,size,size,in,bytes,fst,size,return,new,completion,stats,size,in,bytes,completion,fields,null,null,new,field,memory,stats,completion,fields
Engine -> public CompletionStats completionStats(String... fieldNamePatterns) throws IOException;1550220204;Returns the {@link CompletionStats} for this engine;public CompletionStats completionStats(String... fieldNamePatterns) throws IOException {_        try (Engine.Searcher currentSearcher = acquireSearcher("completion_stats", SearcherScope.INTERNAL)) {_            long sizeInBytes = 0__            ObjectLongHashMap<String> completionFields = null__            if (fieldNamePatterns != null && fieldNamePatterns.length > 0) {_                completionFields = new ObjectLongHashMap<>(fieldNamePatterns.length)__            }_            for (LeafReaderContext atomicReaderContext : currentSearcher.reader().leaves()) {_                LeafReader atomicReader = atomicReaderContext.reader()__                for (FieldInfo info : atomicReader.getFieldInfos()) {_                    Terms terms = atomicReader.terms(info.name)__                    if (terms instanceof CompletionTerms) {_                        _                        long fstSize = ((CompletionTerms) terms).suggester().ramBytesUsed()__                        if (Regex.simpleMatch(fieldNamePatterns, info.name)) {_                            completionFields.addTo(info.name, fstSize)__                        }_                        sizeInBytes += fstSize__                    }_                }_            }_            return new CompletionStats(sizeInBytes, completionFields == null ? null : new FieldMemoryStats(completionFields))__        }_    };returns,the,link,completion,stats,for,this,engine;public,completion,stats,completion,stats,string,field,name,patterns,throws,ioexception,try,engine,searcher,current,searcher,acquire,searcher,searcher,scope,internal,long,size,in,bytes,0,object,long,hash,map,string,completion,fields,null,if,field,name,patterns,null,field,name,patterns,length,0,completion,fields,new,object,long,hash,map,field,name,patterns,length,for,leaf,reader,context,atomic,reader,context,current,searcher,reader,leaves,leaf,reader,atomic,reader,atomic,reader,context,reader,for,field,info,info,atomic,reader,get,field,infos,terms,terms,atomic,reader,terms,info,name,if,terms,instanceof,completion,terms,long,fst,size,completion,terms,terms,suggester,ram,bytes,used,if,regex,simple,match,field,name,patterns,info,name,completion,fields,add,to,info,name,fst,size,size,in,bytes,fst,size,return,new,completion,stats,size,in,bytes,completion,fields,null,null,new,field,memory,stats,completion,fields
Engine -> public CompletionStats completionStats(String... fieldNamePatterns) throws IOException;1550526771;Returns the {@link CompletionStats} for this engine;public CompletionStats completionStats(String... fieldNamePatterns) throws IOException {_        try (Engine.Searcher currentSearcher = acquireSearcher("completion_stats", SearcherScope.INTERNAL)) {_            long sizeInBytes = 0__            ObjectLongHashMap<String> completionFields = null__            if (fieldNamePatterns != null && fieldNamePatterns.length > 0) {_                completionFields = new ObjectLongHashMap<>(fieldNamePatterns.length)__            }_            for (LeafReaderContext atomicReaderContext : currentSearcher.reader().leaves()) {_                LeafReader atomicReader = atomicReaderContext.reader()__                for (FieldInfo info : atomicReader.getFieldInfos()) {_                    Terms terms = atomicReader.terms(info.name)__                    if (terms instanceof CompletionTerms) {_                        _                        long fstSize = ((CompletionTerms) terms).suggester().ramBytesUsed()__                        if (Regex.simpleMatch(fieldNamePatterns, info.name)) {_                            completionFields.addTo(info.name, fstSize)__                        }_                        sizeInBytes += fstSize__                    }_                }_            }_            return new CompletionStats(sizeInBytes, completionFields == null ? null : new FieldMemoryStats(completionFields))__        }_    };returns,the,link,completion,stats,for,this,engine;public,completion,stats,completion,stats,string,field,name,patterns,throws,ioexception,try,engine,searcher,current,searcher,acquire,searcher,searcher,scope,internal,long,size,in,bytes,0,object,long,hash,map,string,completion,fields,null,if,field,name,patterns,null,field,name,patterns,length,0,completion,fields,new,object,long,hash,map,field,name,patterns,length,for,leaf,reader,context,atomic,reader,context,current,searcher,reader,leaves,leaf,reader,atomic,reader,atomic,reader,context,reader,for,field,info,info,atomic,reader,get,field,infos,terms,terms,atomic,reader,terms,info,name,if,terms,instanceof,completion,terms,long,fst,size,completion,terms,terms,suggester,ram,bytes,used,if,regex,simple,match,field,name,patterns,info,name,completion,fields,add,to,info,name,fst,size,size,in,bytes,fst,size,return,new,completion,stats,size,in,bytes,completion,fields,null,null,new,field,memory,stats,completion,fields
Engine -> public CompletionStats completionStats(String... fieldNamePatterns) throws IOException;1551110274;Returns the {@link CompletionStats} for this engine;public CompletionStats completionStats(String... fieldNamePatterns) throws IOException {_        try (Engine.Searcher currentSearcher = acquireSearcher("completion_stats", SearcherScope.INTERNAL)) {_            long sizeInBytes = 0__            ObjectLongHashMap<String> completionFields = null__            if (fieldNamePatterns != null && fieldNamePatterns.length > 0) {_                completionFields = new ObjectLongHashMap<>(fieldNamePatterns.length)__            }_            for (LeafReaderContext atomicReaderContext : currentSearcher.reader().leaves()) {_                LeafReader atomicReader = atomicReaderContext.reader()__                for (FieldInfo info : atomicReader.getFieldInfos()) {_                    Terms terms = atomicReader.terms(info.name)__                    if (terms instanceof CompletionTerms) {_                        _                        long fstSize = ((CompletionTerms) terms).suggester().ramBytesUsed()__                        if (Regex.simpleMatch(fieldNamePatterns, info.name)) {_                            completionFields.addTo(info.name, fstSize)__                        }_                        sizeInBytes += fstSize__                    }_                }_            }_            return new CompletionStats(sizeInBytes, completionFields == null ? null : new FieldMemoryStats(completionFields))__        }_    };returns,the,link,completion,stats,for,this,engine;public,completion,stats,completion,stats,string,field,name,patterns,throws,ioexception,try,engine,searcher,current,searcher,acquire,searcher,searcher,scope,internal,long,size,in,bytes,0,object,long,hash,map,string,completion,fields,null,if,field,name,patterns,null,field,name,patterns,length,0,completion,fields,new,object,long,hash,map,field,name,patterns,length,for,leaf,reader,context,atomic,reader,context,current,searcher,reader,leaves,leaf,reader,atomic,reader,atomic,reader,context,reader,for,field,info,info,atomic,reader,get,field,infos,terms,terms,atomic,reader,terms,info,name,if,terms,instanceof,completion,terms,long,fst,size,completion,terms,terms,suggester,ram,bytes,used,if,regex,simple,match,field,name,patterns,info,name,completion,fields,add,to,info,name,fst,size,size,in,bytes,fst,size,return,new,completion,stats,size,in,bytes,completion,fields,null,null,new,field,memory,stats,completion,fields
Engine -> public CompletionStats completionStats(String... fieldNamePatterns) throws IOException;1551126708;Returns the {@link CompletionStats} for this engine;public CompletionStats completionStats(String... fieldNamePatterns) throws IOException {_        try (Engine.Searcher currentSearcher = acquireSearcher("completion_stats", SearcherScope.INTERNAL)) {_            long sizeInBytes = 0__            ObjectLongHashMap<String> completionFields = null__            if (fieldNamePatterns != null && fieldNamePatterns.length > 0) {_                completionFields = new ObjectLongHashMap<>(fieldNamePatterns.length)__            }_            for (LeafReaderContext atomicReaderContext : currentSearcher.reader().leaves()) {_                LeafReader atomicReader = atomicReaderContext.reader()__                for (FieldInfo info : atomicReader.getFieldInfos()) {_                    Terms terms = atomicReader.terms(info.name)__                    if (terms instanceof CompletionTerms) {_                        _                        long fstSize = ((CompletionTerms) terms).suggester().ramBytesUsed()__                        if (Regex.simpleMatch(fieldNamePatterns, info.name)) {_                            completionFields.addTo(info.name, fstSize)__                        }_                        sizeInBytes += fstSize__                    }_                }_            }_            return new CompletionStats(sizeInBytes, completionFields == null ? null : new FieldMemoryStats(completionFields))__        }_    };returns,the,link,completion,stats,for,this,engine;public,completion,stats,completion,stats,string,field,name,patterns,throws,ioexception,try,engine,searcher,current,searcher,acquire,searcher,searcher,scope,internal,long,size,in,bytes,0,object,long,hash,map,string,completion,fields,null,if,field,name,patterns,null,field,name,patterns,length,0,completion,fields,new,object,long,hash,map,field,name,patterns,length,for,leaf,reader,context,atomic,reader,context,current,searcher,reader,leaves,leaf,reader,atomic,reader,atomic,reader,context,reader,for,field,info,info,atomic,reader,get,field,infos,terms,terms,atomic,reader,terms,info,name,if,terms,instanceof,completion,terms,long,fst,size,completion,terms,terms,suggester,ram,bytes,used,if,regex,simple,match,field,name,patterns,info,name,completion,fields,add,to,info,name,fst,size,size,in,bytes,fst,size,return,new,completion,stats,size,in,bytes,completion,fields,null,null,new,field,memory,stats,completion,fields
Engine -> public SegmentsStats segmentsStats(boolean includeSegmentFileSizes);1541618615;Global stats on segments.;public SegmentsStats segmentsStats(boolean includeSegmentFileSizes) {_        ensureOpen()__        Set<String> segmentName = new HashSet<>()__        SegmentsStats stats = new SegmentsStats()__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.INTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                segmentName.add(segmentReader.getSegmentName())__            }_        }__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.EXTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                if (segmentName.contains(segmentReader.getSegmentName()) == false) {_                    fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                }_            }_        }_        writerSegmentStats(stats)__        return stats__    };global,stats,on,segments;public,segments,stats,segments,stats,boolean,include,segment,file,sizes,ensure,open,set,string,segment,name,new,hash,set,segments,stats,stats,new,segments,stats,try,searcher,searcher,acquire,searcher,searcher,scope,internal,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,segment,name,add,segment,reader,get,segment,name,try,searcher,searcher,acquire,searcher,searcher,scope,external,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,if,segment,name,contains,segment,reader,get,segment,name,false,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,writer,segment,stats,stats,return,stats
Engine -> public SegmentsStats segmentsStats(boolean includeSegmentFileSizes);1542697754;Global stats on segments.;public SegmentsStats segmentsStats(boolean includeSegmentFileSizes) {_        ensureOpen()__        Set<String> segmentName = new HashSet<>()__        SegmentsStats stats = new SegmentsStats()__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.INTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                segmentName.add(segmentReader.getSegmentName())__            }_        }__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.EXTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                if (segmentName.contains(segmentReader.getSegmentName()) == false) {_                    fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                }_            }_        }_        writerSegmentStats(stats)__        return stats__    };global,stats,on,segments;public,segments,stats,segments,stats,boolean,include,segment,file,sizes,ensure,open,set,string,segment,name,new,hash,set,segments,stats,stats,new,segments,stats,try,searcher,searcher,acquire,searcher,searcher,scope,internal,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,segment,name,add,segment,reader,get,segment,name,try,searcher,searcher,acquire,searcher,searcher,scope,external,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,if,segment,name,contains,segment,reader,get,segment,name,false,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,writer,segment,stats,stats,return,stats
Engine -> public SegmentsStats segmentsStats(boolean includeSegmentFileSizes);1543047942;Global stats on segments.;public SegmentsStats segmentsStats(boolean includeSegmentFileSizes) {_        ensureOpen()__        Set<String> segmentName = new HashSet<>()__        SegmentsStats stats = new SegmentsStats()__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.INTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                segmentName.add(segmentReader.getSegmentName())__            }_        }__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.EXTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                if (segmentName.contains(segmentReader.getSegmentName()) == false) {_                    fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                }_            }_        }_        writerSegmentStats(stats)__        return stats__    };global,stats,on,segments;public,segments,stats,segments,stats,boolean,include,segment,file,sizes,ensure,open,set,string,segment,name,new,hash,set,segments,stats,stats,new,segments,stats,try,searcher,searcher,acquire,searcher,searcher,scope,internal,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,segment,name,add,segment,reader,get,segment,name,try,searcher,searcher,acquire,searcher,searcher,scope,external,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,if,segment,name,contains,segment,reader,get,segment,name,false,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,writer,segment,stats,stats,return,stats
Engine -> public SegmentsStats segmentsStats(boolean includeSegmentFileSizes);1544545090;Global stats on segments.;public SegmentsStats segmentsStats(boolean includeSegmentFileSizes) {_        ensureOpen()__        Set<String> segmentName = new HashSet<>()__        SegmentsStats stats = new SegmentsStats()__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.INTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                segmentName.add(segmentReader.getSegmentName())__            }_        }__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.EXTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                if (segmentName.contains(segmentReader.getSegmentName()) == false) {_                    fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                }_            }_        }_        writerSegmentStats(stats)__        return stats__    };global,stats,on,segments;public,segments,stats,segments,stats,boolean,include,segment,file,sizes,ensure,open,set,string,segment,name,new,hash,set,segments,stats,stats,new,segments,stats,try,searcher,searcher,acquire,searcher,searcher,scope,internal,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,segment,name,add,segment,reader,get,segment,name,try,searcher,searcher,acquire,searcher,searcher,scope,external,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,if,segment,name,contains,segment,reader,get,segment,name,false,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,writer,segment,stats,stats,return,stats
Engine -> public SegmentsStats segmentsStats(boolean includeSegmentFileSizes);1544684920;Global stats on segments.;public SegmentsStats segmentsStats(boolean includeSegmentFileSizes) {_        ensureOpen()__        Set<String> segmentName = new HashSet<>()__        SegmentsStats stats = new SegmentsStats()__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.INTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                segmentName.add(segmentReader.getSegmentName())__            }_        }__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.EXTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                if (segmentName.contains(segmentReader.getSegmentName()) == false) {_                    fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                }_            }_        }_        writerSegmentStats(stats)__        return stats__    };global,stats,on,segments;public,segments,stats,segments,stats,boolean,include,segment,file,sizes,ensure,open,set,string,segment,name,new,hash,set,segments,stats,stats,new,segments,stats,try,searcher,searcher,acquire,searcher,searcher,scope,internal,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,segment,name,add,segment,reader,get,segment,name,try,searcher,searcher,acquire,searcher,searcher,scope,external,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,if,segment,name,contains,segment,reader,get,segment,name,false,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,writer,segment,stats,stats,return,stats
Engine -> public SegmentsStats segmentsStats(boolean includeSegmentFileSizes);1545140118;Global stats on segments.;public SegmentsStats segmentsStats(boolean includeSegmentFileSizes) {_        ensureOpen()__        Set<String> segmentName = new HashSet<>()__        SegmentsStats stats = new SegmentsStats()__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.INTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                segmentName.add(segmentReader.getSegmentName())__            }_        }__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.EXTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                if (segmentName.contains(segmentReader.getSegmentName()) == false) {_                    fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                }_            }_        }_        writerSegmentStats(stats)__        return stats__    };global,stats,on,segments;public,segments,stats,segments,stats,boolean,include,segment,file,sizes,ensure,open,set,string,segment,name,new,hash,set,segments,stats,stats,new,segments,stats,try,searcher,searcher,acquire,searcher,searcher,scope,internal,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,segment,name,add,segment,reader,get,segment,name,try,searcher,searcher,acquire,searcher,searcher,scope,external,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,if,segment,name,contains,segment,reader,get,segment,name,false,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,writer,segment,stats,stats,return,stats
Engine -> public SegmentsStats segmentsStats(boolean includeSegmentFileSizes);1545221705;Global stats on segments.;public SegmentsStats segmentsStats(boolean includeSegmentFileSizes) {_        ensureOpen()__        Set<String> segmentName = new HashSet<>()__        SegmentsStats stats = new SegmentsStats()__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.INTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                segmentName.add(segmentReader.getSegmentName())__            }_        }__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.EXTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                if (segmentName.contains(segmentReader.getSegmentName()) == false) {_                    fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                }_            }_        }_        writerSegmentStats(stats)__        return stats__    };global,stats,on,segments;public,segments,stats,segments,stats,boolean,include,segment,file,sizes,ensure,open,set,string,segment,name,new,hash,set,segments,stats,stats,new,segments,stats,try,searcher,searcher,acquire,searcher,searcher,scope,internal,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,segment,name,add,segment,reader,get,segment,name,try,searcher,searcher,acquire,searcher,searcher,scope,external,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,if,segment,name,contains,segment,reader,get,segment,name,false,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,writer,segment,stats,stats,return,stats
Engine -> public SegmentsStats segmentsStats(boolean includeSegmentFileSizes);1547332999;Global stats on segments.;public SegmentsStats segmentsStats(boolean includeSegmentFileSizes) {_        ensureOpen()__        Set<String> segmentName = new HashSet<>()__        SegmentsStats stats = new SegmentsStats()__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.INTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                segmentName.add(segmentReader.getSegmentName())__            }_        }__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.EXTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                if (segmentName.contains(segmentReader.getSegmentName()) == false) {_                    fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                }_            }_        }_        writerSegmentStats(stats)__        return stats__    };global,stats,on,segments;public,segments,stats,segments,stats,boolean,include,segment,file,sizes,ensure,open,set,string,segment,name,new,hash,set,segments,stats,stats,new,segments,stats,try,searcher,searcher,acquire,searcher,searcher,scope,internal,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,segment,name,add,segment,reader,get,segment,name,try,searcher,searcher,acquire,searcher,searcher,scope,external,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,if,segment,name,contains,segment,reader,get,segment,name,false,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,writer,segment,stats,stats,return,stats
Engine -> public SegmentsStats segmentsStats(boolean includeSegmentFileSizes);1548771485;Global stats on segments.;public SegmentsStats segmentsStats(boolean includeSegmentFileSizes) {_        ensureOpen()__        Set<String> segmentName = new HashSet<>()__        SegmentsStats stats = new SegmentsStats()__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.INTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                segmentName.add(segmentReader.getSegmentName())__            }_        }__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.EXTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                if (segmentName.contains(segmentReader.getSegmentName()) == false) {_                    fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                }_            }_        }_        writerSegmentStats(stats)__        return stats__    };global,stats,on,segments;public,segments,stats,segments,stats,boolean,include,segment,file,sizes,ensure,open,set,string,segment,name,new,hash,set,segments,stats,stats,new,segments,stats,try,searcher,searcher,acquire,searcher,searcher,scope,internal,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,segment,name,add,segment,reader,get,segment,name,try,searcher,searcher,acquire,searcher,searcher,scope,external,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,if,segment,name,contains,segment,reader,get,segment,name,false,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,writer,segment,stats,stats,return,stats
Engine -> public SegmentsStats segmentsStats(boolean includeSegmentFileSizes);1549891630;Global stats on segments.;public SegmentsStats segmentsStats(boolean includeSegmentFileSizes) {_        ensureOpen()__        Set<String> segmentName = new HashSet<>()__        SegmentsStats stats = new SegmentsStats()__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.INTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                segmentName.add(segmentReader.getSegmentName())__            }_        }__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.EXTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                if (segmentName.contains(segmentReader.getSegmentName()) == false) {_                    fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                }_            }_        }_        writerSegmentStats(stats)__        return stats__    };global,stats,on,segments;public,segments,stats,segments,stats,boolean,include,segment,file,sizes,ensure,open,set,string,segment,name,new,hash,set,segments,stats,stats,new,segments,stats,try,searcher,searcher,acquire,searcher,searcher,scope,internal,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,segment,name,add,segment,reader,get,segment,name,try,searcher,searcher,acquire,searcher,searcher,scope,external,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,if,segment,name,contains,segment,reader,get,segment,name,false,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,writer,segment,stats,stats,return,stats
Engine -> public SegmentsStats segmentsStats(boolean includeSegmentFileSizes);1549975032;Global stats on segments.;public SegmentsStats segmentsStats(boolean includeSegmentFileSizes) {_        ensureOpen()__        Set<String> segmentName = new HashSet<>()__        SegmentsStats stats = new SegmentsStats()__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.INTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                segmentName.add(segmentReader.getSegmentName())__            }_        }__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.EXTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                if (segmentName.contains(segmentReader.getSegmentName()) == false) {_                    fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                }_            }_        }_        writerSegmentStats(stats)__        return stats__    };global,stats,on,segments;public,segments,stats,segments,stats,boolean,include,segment,file,sizes,ensure,open,set,string,segment,name,new,hash,set,segments,stats,stats,new,segments,stats,try,searcher,searcher,acquire,searcher,searcher,scope,internal,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,segment,name,add,segment,reader,get,segment,name,try,searcher,searcher,acquire,searcher,searcher,scope,external,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,if,segment,name,contains,segment,reader,get,segment,name,false,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,writer,segment,stats,stats,return,stats
Engine -> public SegmentsStats segmentsStats(boolean includeSegmentFileSizes);1550220204;Global stats on segments.;public SegmentsStats segmentsStats(boolean includeSegmentFileSizes) {_        ensureOpen()__        Set<String> segmentName = new HashSet<>()__        SegmentsStats stats = new SegmentsStats()__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.INTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                segmentName.add(segmentReader.getSegmentName())__            }_        }__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.EXTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                if (segmentName.contains(segmentReader.getSegmentName()) == false) {_                    fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                }_            }_        }_        writerSegmentStats(stats)__        return stats__    };global,stats,on,segments;public,segments,stats,segments,stats,boolean,include,segment,file,sizes,ensure,open,set,string,segment,name,new,hash,set,segments,stats,stats,new,segments,stats,try,searcher,searcher,acquire,searcher,searcher,scope,internal,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,segment,name,add,segment,reader,get,segment,name,try,searcher,searcher,acquire,searcher,searcher,scope,external,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,if,segment,name,contains,segment,reader,get,segment,name,false,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,writer,segment,stats,stats,return,stats
Engine -> public SegmentsStats segmentsStats(boolean includeSegmentFileSizes);1550526771;Global stats on segments.;public SegmentsStats segmentsStats(boolean includeSegmentFileSizes) {_        ensureOpen()__        Set<String> segmentName = new HashSet<>()__        SegmentsStats stats = new SegmentsStats()__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.INTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                segmentName.add(segmentReader.getSegmentName())__            }_        }__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.EXTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                if (segmentName.contains(segmentReader.getSegmentName()) == false) {_                    fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                }_            }_        }_        writerSegmentStats(stats)__        return stats__    };global,stats,on,segments;public,segments,stats,segments,stats,boolean,include,segment,file,sizes,ensure,open,set,string,segment,name,new,hash,set,segments,stats,stats,new,segments,stats,try,searcher,searcher,acquire,searcher,searcher,scope,internal,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,segment,name,add,segment,reader,get,segment,name,try,searcher,searcher,acquire,searcher,searcher,scope,external,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,if,segment,name,contains,segment,reader,get,segment,name,false,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,writer,segment,stats,stats,return,stats
Engine -> public SegmentsStats segmentsStats(boolean includeSegmentFileSizes);1551110274;Global stats on segments.;public SegmentsStats segmentsStats(boolean includeSegmentFileSizes) {_        ensureOpen()__        Set<String> segmentName = new HashSet<>()__        SegmentsStats stats = new SegmentsStats()__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.INTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                segmentName.add(segmentReader.getSegmentName())__            }_        }__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.EXTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                if (segmentName.contains(segmentReader.getSegmentName()) == false) {_                    fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                }_            }_        }_        writerSegmentStats(stats)__        return stats__    };global,stats,on,segments;public,segments,stats,segments,stats,boolean,include,segment,file,sizes,ensure,open,set,string,segment,name,new,hash,set,segments,stats,stats,new,segments,stats,try,searcher,searcher,acquire,searcher,searcher,scope,internal,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,segment,name,add,segment,reader,get,segment,name,try,searcher,searcher,acquire,searcher,searcher,scope,external,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,if,segment,name,contains,segment,reader,get,segment,name,false,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,writer,segment,stats,stats,return,stats
Engine -> public SegmentsStats segmentsStats(boolean includeSegmentFileSizes);1551126708;Global stats on segments.;public SegmentsStats segmentsStats(boolean includeSegmentFileSizes) {_        ensureOpen()__        Set<String> segmentName = new HashSet<>()__        SegmentsStats stats = new SegmentsStats()__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.INTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                segmentName.add(segmentReader.getSegmentName())__            }_        }__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.EXTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                if (segmentName.contains(segmentReader.getSegmentName()) == false) {_                    fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                }_            }_        }_        writerSegmentStats(stats)__        return stats__    };global,stats,on,segments;public,segments,stats,segments,stats,boolean,include,segment,file,sizes,ensure,open,set,string,segment,name,new,hash,set,segments,stats,stats,new,segments,stats,try,searcher,searcher,acquire,searcher,searcher,scope,internal,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,segment,name,add,segment,reader,get,segment,name,try,searcher,searcher,acquire,searcher,searcher,scope,external,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,if,segment,name,contains,segment,reader,get,segment,name,false,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,writer,segment,stats,stats,return,stats
Engine -> public void forceMerge(boolean flush) throws IOException;1524684173;Force merges to 1 segment;public void forceMerge(boolean flush) throws IOException {_        forceMerge(flush, 1, false, false, false)__    };force,merges,to,1,segment;public,void,force,merge,boolean,flush,throws,ioexception,force,merge,flush,1,false,false,false
Engine -> public void forceMerge(boolean flush) throws IOException;1525162917;Force merges to 1 segment;public void forceMerge(boolean flush) throws IOException {_        forceMerge(flush, 1, false, false, false)__    };force,merges,to,1,segment;public,void,force,merge,boolean,flush,throws,ioexception,force,merge,flush,1,false,false,false
Engine -> public void forceMerge(boolean flush) throws IOException;1525334055;Force merges to 1 segment;public void forceMerge(boolean flush) throws IOException {_        forceMerge(flush, 1, false, false, false)__    };force,merges,to,1,segment;public,void,force,merge,boolean,flush,throws,ioexception,force,merge,flush,1,false,false,false
Engine -> public void forceMerge(boolean flush) throws IOException;1527583663;Force merges to 1 segment;public void forceMerge(boolean flush) throws IOException {_        forceMerge(flush, 1, false, false, false)__    };force,merges,to,1,segment;public,void,force,merge,boolean,flush,throws,ioexception,force,merge,flush,1,false,false,false
Engine -> public void forceMerge(boolean flush) throws IOException;1528706846;Force merges to 1 segment;public void forceMerge(boolean flush) throws IOException {_        forceMerge(flush, 1, false, false, false)__    };force,merges,to,1,segment;public,void,force,merge,boolean,flush,throws,ioexception,force,merge,flush,1,false,false,false
Engine -> public void forceMerge(boolean flush) throws IOException;1528762805;Force merges to 1 segment;public void forceMerge(boolean flush) throws IOException {_        forceMerge(flush, 1, false, false, false)__    };force,merges,to,1,segment;public,void,force,merge,boolean,flush,throws,ioexception,force,merge,flush,1,false,false,false
Engine -> public void forceMerge(boolean flush) throws IOException;1531910483;Force merges to 1 segment;public void forceMerge(boolean flush) throws IOException {_        forceMerge(flush, 1, false, false, false)__    };force,merges,to,1,segment;public,void,force,merge,boolean,flush,throws,ioexception,force,merge,flush,1,false,false,false
Engine -> public void forceMerge(boolean flush) throws IOException;1532685069;Force merges to 1 segment;public void forceMerge(boolean flush) throws IOException {_        forceMerge(flush, 1, false, false, false)__    };force,merges,to,1,segment;public,void,force,merge,boolean,flush,throws,ioexception,force,merge,flush,1,false,false,false
Engine -> public void forceMerge(boolean flush) throws IOException;1533295538;Force merges to 1 segment;public void forceMerge(boolean flush) throws IOException {_        forceMerge(flush, 1, false, false, false)__    };force,merges,to,1,segment;public,void,force,merge,boolean,flush,throws,ioexception,force,merge,flush,1,false,false,false
Engine -> public void forceMerge(boolean flush) throws IOException;1535046779;Force merges to 1 segment;public void forceMerge(boolean flush) throws IOException {_        forceMerge(flush, 1, false, false, false)__    };force,merges,to,1,segment;public,void,force,merge,boolean,flush,throws,ioexception,force,merge,flush,1,false,false,false
Engine -> public void forceMerge(boolean flush) throws IOException;1535723122;Force merges to 1 segment;public void forceMerge(boolean flush) throws IOException {_        forceMerge(flush, 1, false, false, false)__    };force,merges,to,1,segment;public,void,force,merge,boolean,flush,throws,ioexception,force,merge,flush,1,false,false,false
Engine -> public void forceMerge(boolean flush) throws IOException;1535965276;Force merges to 1 segment;public void forceMerge(boolean flush) throws IOException {_        forceMerge(flush, 1, false, false, false)__    };force,merges,to,1,segment;public,void,force,merge,boolean,flush,throws,ioexception,force,merge,flush,1,false,false,false
Engine -> public void forceMerge(boolean flush) throws IOException;1536314350;Force merges to 1 segment;public void forceMerge(boolean flush) throws IOException {_        forceMerge(flush, 1, false, false, false)__    };force,merges,to,1,segment;public,void,force,merge,boolean,flush,throws,ioexception,force,merge,flush,1,false,false,false
Engine -> public void forceMerge(boolean flush) throws IOException;1536828374;Force merges to 1 segment;public void forceMerge(boolean flush) throws IOException {_        forceMerge(flush, 1, false, false, false)__    };force,merges,to,1,segment;public,void,force,merge,boolean,flush,throws,ioexception,force,merge,flush,1,false,false,false
Engine -> public void forceMerge(boolean flush) throws IOException;1537371806;Force merges to 1 segment;public void forceMerge(boolean flush) throws IOException {_        forceMerge(flush, 1, false, false, false)__    };force,merges,to,1,segment;public,void,force,merge,boolean,flush,throws,ioexception,force,merge,flush,1,false,false,false
Engine -> public void forceMerge(boolean flush) throws IOException;1537806831;Force merges to 1 segment;public void forceMerge(boolean flush) throws IOException {_        forceMerge(flush, 1, false, false, false)__    };force,merges,to,1,segment;public,void,force,merge,boolean,flush,throws,ioexception,force,merge,flush,1,false,false,false
Engine -> public void forceMerge(boolean flush) throws IOException;1538067637;Force merges to 1 segment;public void forceMerge(boolean flush) throws IOException {_        forceMerge(flush, 1, false, false, false)__    };force,merges,to,1,segment;public,void,force,merge,boolean,flush,throws,ioexception,force,merge,flush,1,false,false,false
Engine -> public void forceMerge(boolean flush) throws IOException;1538424609;Force merges to 1 segment;public void forceMerge(boolean flush) throws IOException {_        forceMerge(flush, 1, false, false, false)__    };force,merges,to,1,segment;public,void,force,merge,boolean,flush,throws,ioexception,force,merge,flush,1,false,false,false
Engine -> public void forceMerge(boolean flush) throws IOException;1539723533;Force merges to 1 segment;public void forceMerge(boolean flush) throws IOException {_        forceMerge(flush, 1, false, false, false)__    };force,merges,to,1,segment;public,void,force,merge,boolean,flush,throws,ioexception,force,merge,flush,1,false,false,false
Engine -> public void forceMerge(boolean flush) throws IOException;1541618615;Force merges to 1 segment;public void forceMerge(boolean flush) throws IOException {_        forceMerge(flush, 1, false, false, false)__    };force,merges,to,1,segment;public,void,force,merge,boolean,flush,throws,ioexception,force,merge,flush,1,false,false,false
Engine -> public void forceMerge(boolean flush) throws IOException;1542697754;Force merges to 1 segment;public void forceMerge(boolean flush) throws IOException {_        forceMerge(flush, 1, false, false, false)__    };force,merges,to,1,segment;public,void,force,merge,boolean,flush,throws,ioexception,force,merge,flush,1,false,false,false
Engine -> public void forceMerge(boolean flush) throws IOException;1543047942;Force merges to 1 segment;public void forceMerge(boolean flush) throws IOException {_        forceMerge(flush, 1, false, false, false)__    };force,merges,to,1,segment;public,void,force,merge,boolean,flush,throws,ioexception,force,merge,flush,1,false,false,false
Engine -> public void forceMerge(boolean flush) throws IOException;1544545090;Force merges to 1 segment;public void forceMerge(boolean flush) throws IOException {_        forceMerge(flush, 1, false, false, false)__    };force,merges,to,1,segment;public,void,force,merge,boolean,flush,throws,ioexception,force,merge,flush,1,false,false,false
Engine -> public void forceMerge(boolean flush) throws IOException;1544684920;Force merges to 1 segment;public void forceMerge(boolean flush) throws IOException {_        forceMerge(flush, 1, false, false, false)__    };force,merges,to,1,segment;public,void,force,merge,boolean,flush,throws,ioexception,force,merge,flush,1,false,false,false
Engine -> public void forceMerge(boolean flush) throws IOException;1545140118;Force merges to 1 segment;public void forceMerge(boolean flush) throws IOException {_        forceMerge(flush, 1, false, false, false)__    };force,merges,to,1,segment;public,void,force,merge,boolean,flush,throws,ioexception,force,merge,flush,1,false,false,false
Engine -> public void forceMerge(boolean flush) throws IOException;1545221705;Force merges to 1 segment;public void forceMerge(boolean flush) throws IOException {_        forceMerge(flush, 1, false, false, false)__    };force,merges,to,1,segment;public,void,force,merge,boolean,flush,throws,ioexception,force,merge,flush,1,false,false,false
Engine -> public void forceMerge(boolean flush) throws IOException;1547332999;Force merges to 1 segment;public void forceMerge(boolean flush) throws IOException {_        forceMerge(flush, 1, false, false, false)__    };force,merges,to,1,segment;public,void,force,merge,boolean,flush,throws,ioexception,force,merge,flush,1,false,false,false
Engine -> public void forceMerge(boolean flush) throws IOException;1548771485;Force merges to 1 segment;public void forceMerge(boolean flush) throws IOException {_        forceMerge(flush, 1, false, false, false)__    };force,merges,to,1,segment;public,void,force,merge,boolean,flush,throws,ioexception,force,merge,flush,1,false,false,false
Engine -> public void forceMerge(boolean flush) throws IOException;1549891630;Force merges to 1 segment;public void forceMerge(boolean flush) throws IOException {_        forceMerge(flush, 1, false, false, false)__    };force,merges,to,1,segment;public,void,force,merge,boolean,flush,throws,ioexception,force,merge,flush,1,false,false,false
Engine -> public void forceMerge(boolean flush) throws IOException;1549975032;Force merges to 1 segment;public void forceMerge(boolean flush) throws IOException {_        forceMerge(flush, 1, false, false, false)__    };force,merges,to,1,segment;public,void,force,merge,boolean,flush,throws,ioexception,force,merge,flush,1,false,false,false
Engine -> public void forceMerge(boolean flush) throws IOException;1550220204;Force merges to 1 segment;public void forceMerge(boolean flush) throws IOException {_        forceMerge(flush, 1, false, false, false)__    };force,merges,to,1,segment;public,void,force,merge,boolean,flush,throws,ioexception,force,merge,flush,1,false,false,false
Engine -> public void forceMerge(boolean flush) throws IOException;1550526771;Force merges to 1 segment;public void forceMerge(boolean flush) throws IOException {_        forceMerge(flush, 1, false, false, false)__    };force,merges,to,1,segment;public,void,force,merge,boolean,flush,throws,ioexception,force,merge,flush,1,false,false,false
Engine -> public void forceMerge(boolean flush) throws IOException;1551110274;Force merges to 1 segment;public void forceMerge(boolean flush) throws IOException {_        forceMerge(flush, 1, false, false, false)__    };force,merges,to,1,segment;public,void,force,merge,boolean,flush,throws,ioexception,force,merge,flush,1,false,false,false
Engine -> public void forceMerge(boolean flush) throws IOException;1551126708;Force merges to 1 segment;public void forceMerge(boolean flush) throws IOException {_        forceMerge(flush, 1, false, false, false)__    };force,merges,to,1,segment;public,void,force,merge,boolean,flush,throws,ioexception,force,merge,flush,1,false,false,false
Engine -> public CommitStats commitStats();1524684173;get commits stats for the last commit;public CommitStats commitStats() {_        return new CommitStats(getLastCommittedSegmentInfos())__    };get,commits,stats,for,the,last,commit;public,commit,stats,commit,stats,return,new,commit,stats,get,last,committed,segment,infos
Engine -> public CommitStats commitStats();1525162917;get commits stats for the last commit;public CommitStats commitStats() {_        return new CommitStats(getLastCommittedSegmentInfos())__    };get,commits,stats,for,the,last,commit;public,commit,stats,commit,stats,return,new,commit,stats,get,last,committed,segment,infos
Engine -> public CommitStats commitStats();1525334055;get commits stats for the last commit;public CommitStats commitStats() {_        return new CommitStats(getLastCommittedSegmentInfos())__    };get,commits,stats,for,the,last,commit;public,commit,stats,commit,stats,return,new,commit,stats,get,last,committed,segment,infos
Engine -> public CommitStats commitStats();1527583663;get commits stats for the last commit;public CommitStats commitStats() {_        return new CommitStats(getLastCommittedSegmentInfos())__    };get,commits,stats,for,the,last,commit;public,commit,stats,commit,stats,return,new,commit,stats,get,last,committed,segment,infos
Engine -> public CommitStats commitStats();1528706846;get commits stats for the last commit;public CommitStats commitStats() {_        return new CommitStats(getLastCommittedSegmentInfos())__    };get,commits,stats,for,the,last,commit;public,commit,stats,commit,stats,return,new,commit,stats,get,last,committed,segment,infos
Engine -> public CommitStats commitStats();1528762805;get commits stats for the last commit;public CommitStats commitStats() {_        return new CommitStats(getLastCommittedSegmentInfos())__    };get,commits,stats,for,the,last,commit;public,commit,stats,commit,stats,return,new,commit,stats,get,last,committed,segment,infos
Engine -> public CommitStats commitStats();1531910483;get commits stats for the last commit;public CommitStats commitStats() {_        return new CommitStats(getLastCommittedSegmentInfos())__    };get,commits,stats,for,the,last,commit;public,commit,stats,commit,stats,return,new,commit,stats,get,last,committed,segment,infos
Engine -> public CommitStats commitStats();1532685069;get commits stats for the last commit;public CommitStats commitStats() {_        return new CommitStats(getLastCommittedSegmentInfos())__    };get,commits,stats,for,the,last,commit;public,commit,stats,commit,stats,return,new,commit,stats,get,last,committed,segment,infos
Engine -> public CommitStats commitStats();1533295538;get commits stats for the last commit;public CommitStats commitStats() {_        return new CommitStats(getLastCommittedSegmentInfos())__    };get,commits,stats,for,the,last,commit;public,commit,stats,commit,stats,return,new,commit,stats,get,last,committed,segment,infos
Engine -> public CommitStats commitStats();1535046779;get commits stats for the last commit;public CommitStats commitStats() {_        return new CommitStats(getLastCommittedSegmentInfos())__    };get,commits,stats,for,the,last,commit;public,commit,stats,commit,stats,return,new,commit,stats,get,last,committed,segment,infos
Engine -> public CommitStats commitStats();1535723122;get commits stats for the last commit;public CommitStats commitStats() {_        return new CommitStats(getLastCommittedSegmentInfos())__    };get,commits,stats,for,the,last,commit;public,commit,stats,commit,stats,return,new,commit,stats,get,last,committed,segment,infos
Engine -> public CommitStats commitStats();1535965276;get commits stats for the last commit;public CommitStats commitStats() {_        return new CommitStats(getLastCommittedSegmentInfos())__    };get,commits,stats,for,the,last,commit;public,commit,stats,commit,stats,return,new,commit,stats,get,last,committed,segment,infos
Engine -> public CommitStats commitStats();1536314350;get commits stats for the last commit;public CommitStats commitStats() {_        return new CommitStats(getLastCommittedSegmentInfos())__    };get,commits,stats,for,the,last,commit;public,commit,stats,commit,stats,return,new,commit,stats,get,last,committed,segment,infos
Engine -> Warmer -> void warm(Engine.Searcher searcher)_;1524684173;Called once a new Searcher is opened on the top-level searcher.;void warm(Engine.Searcher searcher)_;called,once,a,new,searcher,is,opened,on,the,top,level,searcher;void,warm,engine,searcher,searcher
Engine -> Warmer -> void warm(Engine.Searcher searcher)_;1525162917;Called once a new Searcher is opened on the top-level searcher.;void warm(Engine.Searcher searcher)_;called,once,a,new,searcher,is,opened,on,the,top,level,searcher;void,warm,engine,searcher,searcher
Engine -> Warmer -> void warm(Engine.Searcher searcher)_;1525334055;Called once a new Searcher is opened on the top-level searcher.;void warm(Engine.Searcher searcher)_;called,once,a,new,searcher,is,opened,on,the,top,level,searcher;void,warm,engine,searcher,searcher
Engine -> Warmer -> void warm(Engine.Searcher searcher)_;1527583663;Called once a new Searcher is opened on the top-level searcher.;void warm(Engine.Searcher searcher)_;called,once,a,new,searcher,is,opened,on,the,top,level,searcher;void,warm,engine,searcher,searcher
Engine -> Warmer -> void warm(Engine.Searcher searcher)_;1528706846;Called once a new Searcher is opened on the top-level searcher.;void warm(Engine.Searcher searcher)_;called,once,a,new,searcher,is,opened,on,the,top,level,searcher;void,warm,engine,searcher,searcher
Engine -> Warmer -> void warm(Engine.Searcher searcher)_;1528762805;Called once a new Searcher is opened on the top-level searcher.;void warm(Engine.Searcher searcher)_;called,once,a,new,searcher,is,opened,on,the,top,level,searcher;void,warm,engine,searcher,searcher
Engine -> Warmer -> void warm(Engine.Searcher searcher)_;1531910483;Called once a new Searcher is opened on the top-level searcher.;void warm(Engine.Searcher searcher)_;called,once,a,new,searcher,is,opened,on,the,top,level,searcher;void,warm,engine,searcher,searcher
Engine -> Warmer -> void warm(Engine.Searcher searcher)_;1532685069;Called once a new Searcher is opened on the top-level searcher.;void warm(Engine.Searcher searcher)_;called,once,a,new,searcher,is,opened,on,the,top,level,searcher;void,warm,engine,searcher,searcher
Engine -> Warmer -> void warm(Engine.Searcher searcher)_;1533295538;Called once a new Searcher is opened on the top-level searcher.;void warm(Engine.Searcher searcher)_;called,once,a,new,searcher,is,opened,on,the,top,level,searcher;void,warm,engine,searcher,searcher
Engine -> Warmer -> void warm(Engine.Searcher searcher)_;1535046779;Called once a new Searcher is opened on the top-level searcher.;void warm(Engine.Searcher searcher)_;called,once,a,new,searcher,is,opened,on,the,top,level,searcher;void,warm,engine,searcher,searcher
Engine -> Warmer -> void warm(Engine.Searcher searcher)_;1535723122;Called once a new Searcher is opened on the top-level searcher.;void warm(Engine.Searcher searcher)_;called,once,a,new,searcher,is,opened,on,the,top,level,searcher;void,warm,engine,searcher,searcher
Engine -> Warmer -> void warm(Engine.Searcher searcher)_;1535965276;Called once a new Searcher is opened on the top-level searcher.;void warm(Engine.Searcher searcher)_;called,once,a,new,searcher,is,opened,on,the,top,level,searcher;void,warm,engine,searcher,searcher
Engine -> Warmer -> void warm(Engine.Searcher searcher)_;1536314350;Called once a new Searcher is opened on the top-level searcher.;void warm(Engine.Searcher searcher)_;called,once,a,new,searcher,is,opened,on,the,top,level,searcher;void,warm,engine,searcher,searcher
Engine -> Warmer -> void warm(Engine.Searcher searcher)_;1536828374;Called once a new Searcher is opened on the top-level searcher.;void warm(Engine.Searcher searcher)_;called,once,a,new,searcher,is,opened,on,the,top,level,searcher;void,warm,engine,searcher,searcher
Engine -> Warmer -> void warm(Engine.Searcher searcher)_;1537371806;Called once a new Searcher is opened on the top-level searcher.;void warm(Engine.Searcher searcher)_;called,once,a,new,searcher,is,opened,on,the,top,level,searcher;void,warm,engine,searcher,searcher
Engine -> Warmer -> void warm(Engine.Searcher searcher)_;1537806831;Called once a new Searcher is opened on the top-level searcher.;void warm(Engine.Searcher searcher)_;called,once,a,new,searcher,is,opened,on,the,top,level,searcher;void,warm,engine,searcher,searcher
Engine -> Warmer -> void warm(Engine.Searcher searcher)_;1538067637;Called once a new Searcher is opened on the top-level searcher.;void warm(Engine.Searcher searcher)_;called,once,a,new,searcher,is,opened,on,the,top,level,searcher;void,warm,engine,searcher,searcher
Engine -> Warmer -> void warm(Engine.Searcher searcher)_;1538424609;Called once a new Searcher is opened on the top-level searcher.;void warm(Engine.Searcher searcher)_;called,once,a,new,searcher,is,opened,on,the,top,level,searcher;void,warm,engine,searcher,searcher
Engine -> Warmer -> void warm(Engine.Searcher searcher)_;1539723533;Called once a new Searcher is opened on the top-level searcher.;void warm(Engine.Searcher searcher)_;called,once,a,new,searcher,is,opened,on,the,top,level,searcher;void,warm,engine,searcher,searcher
Engine -> Warmer -> void warm(Engine.Searcher searcher)_;1541618615;Called once a new Searcher is opened on the top-level searcher.;void warm(Engine.Searcher searcher)_;called,once,a,new,searcher,is,opened,on,the,top,level,searcher;void,warm,engine,searcher,searcher
Engine -> Warmer -> void warm(Engine.Searcher searcher)_;1542697754;Called once a new Searcher is opened on the top-level searcher.;void warm(Engine.Searcher searcher)_;called,once,a,new,searcher,is,opened,on,the,top,level,searcher;void,warm,engine,searcher,searcher
Engine -> Warmer -> void warm(Engine.Searcher searcher)_;1543047942;Called once a new Searcher is opened on the top-level searcher.;void warm(Engine.Searcher searcher)_;called,once,a,new,searcher,is,opened,on,the,top,level,searcher;void,warm,engine,searcher,searcher
Engine -> Warmer -> void warm(Engine.Searcher searcher)_;1544545090;Called once a new Searcher is opened on the top-level searcher.;void warm(Engine.Searcher searcher)_;called,once,a,new,searcher,is,opened,on,the,top,level,searcher;void,warm,engine,searcher,searcher
Engine -> Warmer -> void warm(Engine.Searcher searcher)_;1544684920;Called once a new Searcher is opened on the top-level searcher.;void warm(Engine.Searcher searcher)_;called,once,a,new,searcher,is,opened,on,the,top,level,searcher;void,warm,engine,searcher,searcher
Engine -> Warmer -> void warm(Engine.Searcher searcher)_;1545140118;Called once a new Searcher is opened on the top-level searcher.;void warm(Engine.Searcher searcher)_;called,once,a,new,searcher,is,opened,on,the,top,level,searcher;void,warm,engine,searcher,searcher
Engine -> Warmer -> void warm(Engine.Searcher searcher)_;1545221705;Called once a new Searcher is opened on the top-level searcher.;void warm(Engine.Searcher searcher)_;called,once,a,new,searcher,is,opened,on,the,top,level,searcher;void,warm,engine,searcher,searcher
Engine -> Warmer -> void warm(Engine.Searcher searcher)_;1547332999;Called once a new Searcher is opened on the top-level searcher.;void warm(Engine.Searcher searcher)_;called,once,a,new,searcher,is,opened,on,the,top,level,searcher;void,warm,engine,searcher,searcher
Engine -> Warmer -> void warm(Engine.Searcher searcher)_;1548771485;Called once a new Searcher is opened on the top-level searcher.;void warm(Engine.Searcher searcher)_;called,once,a,new,searcher,is,opened,on,the,top,level,searcher;void,warm,engine,searcher,searcher
Engine -> Warmer -> void warm(Engine.Searcher searcher)_;1549891630;Called once a new Searcher is opened on the top-level searcher.;void warm(Engine.Searcher searcher)_;called,once,a,new,searcher,is,opened,on,the,top,level,searcher;void,warm,engine,searcher,searcher
Engine -> Warmer -> void warm(Engine.Searcher searcher)_;1549975032;Called once a new Searcher is opened on the top-level searcher.;void warm(Engine.Searcher searcher)_;called,once,a,new,searcher,is,opened,on,the,top,level,searcher;void,warm,engine,searcher,searcher
Engine -> Warmer -> void warm(Engine.Searcher searcher)_;1550220204;Called once a new Searcher is opened on the top-level searcher.;void warm(Engine.Searcher searcher)_;called,once,a,new,searcher,is,opened,on,the,top,level,searcher;void,warm,engine,searcher,searcher
Engine -> Warmer -> void warm(Engine.Searcher searcher)_;1550526771;Called once a new Searcher is opened on the top-level searcher.;void warm(Engine.Searcher searcher)_;called,once,a,new,searcher,is,opened,on,the,top,level,searcher;void,warm,engine,searcher,searcher
Engine -> Warmer -> void warm(Engine.Searcher searcher)_;1551110274;Called once a new Searcher is opened on the top-level searcher.;void warm(Engine.Searcher searcher)_;called,once,a,new,searcher,is,opened,on,the,top,level,searcher;void,warm,engine,searcher,searcher
Engine -> Warmer -> void warm(Engine.Searcher searcher)_;1551126708;Called once a new Searcher is opened on the top-level searcher.;void warm(Engine.Searcher searcher)_;called,once,a,new,searcher,is,opened,on,the,top,level,searcher;void,warm,engine,searcher,searcher
Engine -> Result -> public Type getResultType();1525162917;whether the operation was successful, has failed or was aborted due to a mapping update;public Type getResultType() {_            return resultType__        };whether,the,operation,was,successful,has,failed,or,was,aborted,due,to,a,mapping,update;public,type,get,result,type,return,result,type
Engine -> Result -> public Type getResultType();1525334055;whether the operation was successful, has failed or was aborted due to a mapping update;public Type getResultType() {_            return resultType__        };whether,the,operation,was,successful,has,failed,or,was,aborted,due,to,a,mapping,update;public,type,get,result,type,return,result,type
Engine -> Result -> public Type getResultType();1527583663;whether the operation was successful, has failed or was aborted due to a mapping update;public Type getResultType() {_            return resultType__        };whether,the,operation,was,successful,has,failed,or,was,aborted,due,to,a,mapping,update;public,type,get,result,type,return,result,type
Engine -> Result -> public Type getResultType();1528706846;whether the operation was successful, has failed or was aborted due to a mapping update;public Type getResultType() {_            return resultType__        };whether,the,operation,was,successful,has,failed,or,was,aborted,due,to,a,mapping,update;public,type,get,result,type,return,result,type
Engine -> Result -> public Type getResultType();1528762805;whether the operation was successful, has failed or was aborted due to a mapping update;public Type getResultType() {_            return resultType__        };whether,the,operation,was,successful,has,failed,or,was,aborted,due,to,a,mapping,update;public,type,get,result,type,return,result,type
Engine -> Result -> public Type getResultType();1531910483;whether the operation was successful, has failed or was aborted due to a mapping update;public Type getResultType() {_            return resultType__        };whether,the,operation,was,successful,has,failed,or,was,aborted,due,to,a,mapping,update;public,type,get,result,type,return,result,type
Engine -> Result -> public Type getResultType();1532685069;whether the operation was successful, has failed or was aborted due to a mapping update;public Type getResultType() {_            return resultType__        };whether,the,operation,was,successful,has,failed,or,was,aborted,due,to,a,mapping,update;public,type,get,result,type,return,result,type
Engine -> Result -> public Type getResultType();1533295538;whether the operation was successful, has failed or was aborted due to a mapping update;public Type getResultType() {_            return resultType__        };whether,the,operation,was,successful,has,failed,or,was,aborted,due,to,a,mapping,update;public,type,get,result,type,return,result,type
Engine -> Result -> public Type getResultType();1535046779;whether the operation was successful, has failed or was aborted due to a mapping update;public Type getResultType() {_            return resultType__        };whether,the,operation,was,successful,has,failed,or,was,aborted,due,to,a,mapping,update;public,type,get,result,type,return,result,type
Engine -> Result -> public Type getResultType();1535723122;whether the operation was successful, has failed or was aborted due to a mapping update;public Type getResultType() {_            return resultType__        };whether,the,operation,was,successful,has,failed,or,was,aborted,due,to,a,mapping,update;public,type,get,result,type,return,result,type
Engine -> Result -> public Type getResultType();1535965276;whether the operation was successful, has failed or was aborted due to a mapping update;public Type getResultType() {_            return resultType__        };whether,the,operation,was,successful,has,failed,or,was,aborted,due,to,a,mapping,update;public,type,get,result,type,return,result,type
Engine -> Result -> public Type getResultType();1536314350;whether the operation was successful, has failed or was aborted due to a mapping update;public Type getResultType() {_            return resultType__        };whether,the,operation,was,successful,has,failed,or,was,aborted,due,to,a,mapping,update;public,type,get,result,type,return,result,type
Engine -> Result -> public Type getResultType();1536828374;whether the operation was successful, has failed or was aborted due to a mapping update;public Type getResultType() {_            return resultType__        };whether,the,operation,was,successful,has,failed,or,was,aborted,due,to,a,mapping,update;public,type,get,result,type,return,result,type
Engine -> Result -> public Type getResultType();1537371806;whether the operation was successful, has failed or was aborted due to a mapping update;public Type getResultType() {_            return resultType__        };whether,the,operation,was,successful,has,failed,or,was,aborted,due,to,a,mapping,update;public,type,get,result,type,return,result,type
Engine -> Result -> public Type getResultType();1537806831;whether the operation was successful, has failed or was aborted due to a mapping update;public Type getResultType() {_            return resultType__        };whether,the,operation,was,successful,has,failed,or,was,aborted,due,to,a,mapping,update;public,type,get,result,type,return,result,type
Engine -> Result -> public Type getResultType();1538067637;whether the operation was successful, has failed or was aborted due to a mapping update;public Type getResultType() {_            return resultType__        };whether,the,operation,was,successful,has,failed,or,was,aborted,due,to,a,mapping,update;public,type,get,result,type,return,result,type
Engine -> Result -> public Type getResultType();1538424609;whether the operation was successful, has failed or was aborted due to a mapping update;public Type getResultType() {_            return resultType__        };whether,the,operation,was,successful,has,failed,or,was,aborted,due,to,a,mapping,update;public,type,get,result,type,return,result,type
Engine -> Result -> public Type getResultType();1539723533;whether the operation was successful, has failed or was aborted due to a mapping update;public Type getResultType() {_            return resultType__        };whether,the,operation,was,successful,has,failed,or,was,aborted,due,to,a,mapping,update;public,type,get,result,type,return,result,type
Engine -> Result -> public Type getResultType();1541618615;whether the operation was successful, has failed or was aborted due to a mapping update;public Type getResultType() {_            return resultType__        };whether,the,operation,was,successful,has,failed,or,was,aborted,due,to,a,mapping,update;public,type,get,result,type,return,result,type
Engine -> Result -> public Type getResultType();1542697754;whether the operation was successful, has failed or was aborted due to a mapping update;public Type getResultType() {_            return resultType__        };whether,the,operation,was,successful,has,failed,or,was,aborted,due,to,a,mapping,update;public,type,get,result,type,return,result,type
Engine -> Result -> public Type getResultType();1543047942;whether the operation was successful, has failed or was aborted due to a mapping update;public Type getResultType() {_            return resultType__        };whether,the,operation,was,successful,has,failed,or,was,aborted,due,to,a,mapping,update;public,type,get,result,type,return,result,type
Engine -> Result -> public Type getResultType();1544545090;whether the operation was successful, has failed or was aborted due to a mapping update;public Type getResultType() {_            return resultType__        };whether,the,operation,was,successful,has,failed,or,was,aborted,due,to,a,mapping,update;public,type,get,result,type,return,result,type
Engine -> Result -> public Type getResultType();1544684920;whether the operation was successful, has failed or was aborted due to a mapping update;public Type getResultType() {_            return resultType__        };whether,the,operation,was,successful,has,failed,or,was,aborted,due,to,a,mapping,update;public,type,get,result,type,return,result,type
Engine -> Result -> public Type getResultType();1545140118;whether the operation was successful, has failed or was aborted due to a mapping update;public Type getResultType() {_            return resultType__        };whether,the,operation,was,successful,has,failed,or,was,aborted,due,to,a,mapping,update;public,type,get,result,type,return,result,type
Engine -> Result -> public Type getResultType();1545221705;whether the operation was successful, has failed or was aborted due to a mapping update;public Type getResultType() {_            return resultType__        };whether,the,operation,was,successful,has,failed,or,was,aborted,due,to,a,mapping,update;public,type,get,result,type,return,result,type
Engine -> Result -> public Type getResultType();1547332999;whether the operation was successful, has failed or was aborted due to a mapping update;public Type getResultType() {_            return resultType__        };whether,the,operation,was,successful,has,failed,or,was,aborted,due,to,a,mapping,update;public,type,get,result,type,return,result,type
Engine -> Result -> public Type getResultType();1548771485;whether the operation was successful, has failed or was aborted due to a mapping update;public Type getResultType() {_            return resultType__        };whether,the,operation,was,successful,has,failed,or,was,aborted,due,to,a,mapping,update;public,type,get,result,type,return,result,type
Engine -> Result -> public Type getResultType();1549891630;whether the operation was successful, has failed or was aborted due to a mapping update;public Type getResultType() {_            return resultType__        };whether,the,operation,was,successful,has,failed,or,was,aborted,due,to,a,mapping,update;public,type,get,result,type,return,result,type
Engine -> Result -> public Type getResultType();1549975032;whether the operation was successful, has failed or was aborted due to a mapping update;public Type getResultType() {_            return resultType__        };whether,the,operation,was,successful,has,failed,or,was,aborted,due,to,a,mapping,update;public,type,get,result,type,return,result,type
Engine -> Result -> public Type getResultType();1550220204;whether the operation was successful, has failed or was aborted due to a mapping update;public Type getResultType() {_            return resultType__        };whether,the,operation,was,successful,has,failed,or,was,aborted,due,to,a,mapping,update;public,type,get,result,type,return,result,type
Engine -> Result -> public Type getResultType();1550526771;whether the operation was successful, has failed or was aborted due to a mapping update;public Type getResultType() {_            return resultType__        };whether,the,operation,was,successful,has,failed,or,was,aborted,due,to,a,mapping,update;public,type,get,result,type,return,result,type
Engine -> Result -> public Type getResultType();1551110274;whether the operation was successful, has failed or was aborted due to a mapping update;public Type getResultType() {_            return resultType__        };whether,the,operation,was,successful,has,failed,or,was,aborted,due,to,a,mapping,update;public,type,get,result,type,return,result,type
Engine -> Result -> public Type getResultType();1551126708;whether the operation was successful, has failed or was aborted due to a mapping update;public Type getResultType() {_            return resultType__        };whether,the,operation,was,successful,has,failed,or,was,aborted,due,to,a,mapping,update;public,type,get,result,type,return,result,type
Engine -> CommitId -> public CommitId(StreamInput in) throws IOException;1524684173;Read from a stream.;public CommitId(StreamInput in) throws IOException {_            assert in != null__            this.id = in.readByteArray()__        };read,from,a,stream;public,commit,id,stream,input,in,throws,ioexception,assert,in,null,this,id,in,read,byte,array
Engine -> CommitId -> public CommitId(StreamInput in) throws IOException;1525162917;Read from a stream.;public CommitId(StreamInput in) throws IOException {_            assert in != null__            this.id = in.readByteArray()__        };read,from,a,stream;public,commit,id,stream,input,in,throws,ioexception,assert,in,null,this,id,in,read,byte,array
Engine -> CommitId -> public CommitId(StreamInput in) throws IOException;1525334055;Read from a stream.;public CommitId(StreamInput in) throws IOException {_            assert in != null__            this.id = in.readByteArray()__        };read,from,a,stream;public,commit,id,stream,input,in,throws,ioexception,assert,in,null,this,id,in,read,byte,array
Engine -> CommitId -> public CommitId(StreamInput in) throws IOException;1527583663;Read from a stream.;public CommitId(StreamInput in) throws IOException {_            assert in != null__            this.id = in.readByteArray()__        };read,from,a,stream;public,commit,id,stream,input,in,throws,ioexception,assert,in,null,this,id,in,read,byte,array
Engine -> CommitId -> public CommitId(StreamInput in) throws IOException;1528706846;Read from a stream.;public CommitId(StreamInput in) throws IOException {_            assert in != null__            this.id = in.readByteArray()__        };read,from,a,stream;public,commit,id,stream,input,in,throws,ioexception,assert,in,null,this,id,in,read,byte,array
Engine -> CommitId -> public CommitId(StreamInput in) throws IOException;1528762805;Read from a stream.;public CommitId(StreamInput in) throws IOException {_            assert in != null__            this.id = in.readByteArray()__        };read,from,a,stream;public,commit,id,stream,input,in,throws,ioexception,assert,in,null,this,id,in,read,byte,array
Engine -> CommitId -> public CommitId(StreamInput in) throws IOException;1531910483;Read from a stream.;public CommitId(StreamInput in) throws IOException {_            assert in != null__            this.id = in.readByteArray()__        };read,from,a,stream;public,commit,id,stream,input,in,throws,ioexception,assert,in,null,this,id,in,read,byte,array
Engine -> CommitId -> public CommitId(StreamInput in) throws IOException;1532685069;Read from a stream.;public CommitId(StreamInput in) throws IOException {_            assert in != null__            this.id = in.readByteArray()__        };read,from,a,stream;public,commit,id,stream,input,in,throws,ioexception,assert,in,null,this,id,in,read,byte,array
Engine -> CommitId -> public CommitId(StreamInput in) throws IOException;1533295538;Read from a stream.;public CommitId(StreamInput in) throws IOException {_            assert in != null__            this.id = in.readByteArray()__        };read,from,a,stream;public,commit,id,stream,input,in,throws,ioexception,assert,in,null,this,id,in,read,byte,array
Engine -> CommitId -> public CommitId(StreamInput in) throws IOException;1535046779;Read from a stream.;public CommitId(StreamInput in) throws IOException {_            assert in != null__            this.id = in.readByteArray()__        };read,from,a,stream;public,commit,id,stream,input,in,throws,ioexception,assert,in,null,this,id,in,read,byte,array
Engine -> CommitId -> public CommitId(StreamInput in) throws IOException;1535723122;Read from a stream.;public CommitId(StreamInput in) throws IOException {_            assert in != null__            this.id = in.readByteArray()__        };read,from,a,stream;public,commit,id,stream,input,in,throws,ioexception,assert,in,null,this,id,in,read,byte,array
Engine -> CommitId -> public CommitId(StreamInput in) throws IOException;1535965276;Read from a stream.;public CommitId(StreamInput in) throws IOException {_            assert in != null__            this.id = in.readByteArray()__        };read,from,a,stream;public,commit,id,stream,input,in,throws,ioexception,assert,in,null,this,id,in,read,byte,array
Engine -> CommitId -> public CommitId(StreamInput in) throws IOException;1536314350;Read from a stream.;public CommitId(StreamInput in) throws IOException {_            assert in != null__            this.id = in.readByteArray()__        };read,from,a,stream;public,commit,id,stream,input,in,throws,ioexception,assert,in,null,this,id,in,read,byte,array
Engine -> CommitId -> public CommitId(StreamInput in) throws IOException;1536828374;Read from a stream.;public CommitId(StreamInput in) throws IOException {_            assert in != null__            this.id = in.readByteArray()__        };read,from,a,stream;public,commit,id,stream,input,in,throws,ioexception,assert,in,null,this,id,in,read,byte,array
Engine -> CommitId -> public CommitId(StreamInput in) throws IOException;1537371806;Read from a stream.;public CommitId(StreamInput in) throws IOException {_            assert in != null__            this.id = in.readByteArray()__        };read,from,a,stream;public,commit,id,stream,input,in,throws,ioexception,assert,in,null,this,id,in,read,byte,array
Engine -> CommitId -> public CommitId(StreamInput in) throws IOException;1537806831;Read from a stream.;public CommitId(StreamInput in) throws IOException {_            assert in != null__            this.id = in.readByteArray()__        };read,from,a,stream;public,commit,id,stream,input,in,throws,ioexception,assert,in,null,this,id,in,read,byte,array
Engine -> CommitId -> public CommitId(StreamInput in) throws IOException;1538067637;Read from a stream.;public CommitId(StreamInput in) throws IOException {_            assert in != null__            this.id = in.readByteArray()__        };read,from,a,stream;public,commit,id,stream,input,in,throws,ioexception,assert,in,null,this,id,in,read,byte,array
Engine -> CommitId -> public CommitId(StreamInput in) throws IOException;1538424609;Read from a stream.;public CommitId(StreamInput in) throws IOException {_            assert in != null__            this.id = in.readByteArray()__        };read,from,a,stream;public,commit,id,stream,input,in,throws,ioexception,assert,in,null,this,id,in,read,byte,array
Engine -> CommitId -> public CommitId(StreamInput in) throws IOException;1539723533;Read from a stream.;public CommitId(StreamInput in) throws IOException {_            assert in != null__            this.id = in.readByteArray()__        };read,from,a,stream;public,commit,id,stream,input,in,throws,ioexception,assert,in,null,this,id,in,read,byte,array
Engine -> CommitId -> public CommitId(StreamInput in) throws IOException;1541618615;Read from a stream.;public CommitId(StreamInput in) throws IOException {_            assert in != null__            this.id = in.readByteArray()__        };read,from,a,stream;public,commit,id,stream,input,in,throws,ioexception,assert,in,null,this,id,in,read,byte,array
Engine -> CommitId -> public CommitId(StreamInput in) throws IOException;1542697754;Read from a stream.;public CommitId(StreamInput in) throws IOException {_            assert in != null__            this.id = in.readByteArray()__        };read,from,a,stream;public,commit,id,stream,input,in,throws,ioexception,assert,in,null,this,id,in,read,byte,array
Engine -> CommitId -> public CommitId(StreamInput in) throws IOException;1543047942;Read from a stream.;public CommitId(StreamInput in) throws IOException {_            assert in != null__            this.id = in.readByteArray()__        };read,from,a,stream;public,commit,id,stream,input,in,throws,ioexception,assert,in,null,this,id,in,read,byte,array
Engine -> CommitId -> public CommitId(StreamInput in) throws IOException;1544545090;Read from a stream.;public CommitId(StreamInput in) throws IOException {_            assert in != null__            this.id = in.readByteArray()__        };read,from,a,stream;public,commit,id,stream,input,in,throws,ioexception,assert,in,null,this,id,in,read,byte,array
Engine -> CommitId -> public CommitId(StreamInput in) throws IOException;1544684920;Read from a stream.;public CommitId(StreamInput in) throws IOException {_            assert in != null__            this.id = in.readByteArray()__        };read,from,a,stream;public,commit,id,stream,input,in,throws,ioexception,assert,in,null,this,id,in,read,byte,array
Engine -> CommitId -> public CommitId(StreamInput in) throws IOException;1545140118;Read from a stream.;public CommitId(StreamInput in) throws IOException {_            assert in != null__            this.id = in.readByteArray()__        };read,from,a,stream;public,commit,id,stream,input,in,throws,ioexception,assert,in,null,this,id,in,read,byte,array
Engine -> CommitId -> public CommitId(StreamInput in) throws IOException;1545221705;Read from a stream.;public CommitId(StreamInput in) throws IOException {_            assert in != null__            this.id = in.readByteArray()__        };read,from,a,stream;public,commit,id,stream,input,in,throws,ioexception,assert,in,null,this,id,in,read,byte,array
Engine -> CommitId -> public CommitId(StreamInput in) throws IOException;1547332999;Read from a stream.;public CommitId(StreamInput in) throws IOException {_            assert in != null__            this.id = in.readByteArray()__        };read,from,a,stream;public,commit,id,stream,input,in,throws,ioexception,assert,in,null,this,id,in,read,byte,array
Engine -> CommitId -> public CommitId(StreamInput in) throws IOException;1548771485;Read from a stream.;public CommitId(StreamInput in) throws IOException {_            assert in != null__            this.id = in.readByteArray()__        };read,from,a,stream;public,commit,id,stream,input,in,throws,ioexception,assert,in,null,this,id,in,read,byte,array
Engine -> CommitId -> public CommitId(StreamInput in) throws IOException;1549891630;Read from a stream.;public CommitId(StreamInput in) throws IOException {_            assert in != null__            this.id = in.readByteArray()__        };read,from,a,stream;public,commit,id,stream,input,in,throws,ioexception,assert,in,null,this,id,in,read,byte,array
Engine -> CommitId -> public CommitId(StreamInput in) throws IOException;1549975032;Read from a stream.;public CommitId(StreamInput in) throws IOException {_            assert in != null__            this.id = in.readByteArray()__        };read,from,a,stream;public,commit,id,stream,input,in,throws,ioexception,assert,in,null,this,id,in,read,byte,array
Engine -> CommitId -> public CommitId(StreamInput in) throws IOException;1550220204;Read from a stream.;public CommitId(StreamInput in) throws IOException {_            assert in != null__            this.id = in.readByteArray()__        };read,from,a,stream;public,commit,id,stream,input,in,throws,ioexception,assert,in,null,this,id,in,read,byte,array
Engine -> CommitId -> public CommitId(StreamInput in) throws IOException;1550526771;Read from a stream.;public CommitId(StreamInput in) throws IOException {_            assert in != null__            this.id = in.readByteArray()__        };read,from,a,stream;public,commit,id,stream,input,in,throws,ioexception,assert,in,null,this,id,in,read,byte,array
Engine -> CommitId -> public CommitId(StreamInput in) throws IOException;1551110274;Read from a stream.;public CommitId(StreamInput in) throws IOException {_            assert in != null__            this.id = in.readByteArray()__        };read,from,a,stream;public,commit,id,stream,input,in,throws,ioexception,assert,in,null,this,id,in,read,byte,array
Engine -> CommitId -> public CommitId(StreamInput in) throws IOException;1551126708;Read from a stream.;public CommitId(StreamInput in) throws IOException {_            assert in != null__            this.id = in.readByteArray()__        };read,from,a,stream;public,commit,id,stream,input,in,throws,ioexception,assert,in,null,this,id,in,read,byte,array
Engine -> public abstract List<Segment> segments(boolean verbose)_;1524684173;The list of segments in the engine.;public abstract List<Segment> segments(boolean verbose)_;the,list,of,segments,in,the,engine;public,abstract,list,segment,segments,boolean,verbose
Engine -> public abstract List<Segment> segments(boolean verbose)_;1525162917;The list of segments in the engine.;public abstract List<Segment> segments(boolean verbose)_;the,list,of,segments,in,the,engine;public,abstract,list,segment,segments,boolean,verbose
Engine -> public abstract List<Segment> segments(boolean verbose)_;1525334055;The list of segments in the engine.;public abstract List<Segment> segments(boolean verbose)_;the,list,of,segments,in,the,engine;public,abstract,list,segment,segments,boolean,verbose
Engine -> public abstract List<Segment> segments(boolean verbose)_;1527583663;The list of segments in the engine.;public abstract List<Segment> segments(boolean verbose)_;the,list,of,segments,in,the,engine;public,abstract,list,segment,segments,boolean,verbose
Engine -> public abstract List<Segment> segments(boolean verbose)_;1528706846;The list of segments in the engine.;public abstract List<Segment> segments(boolean verbose)_;the,list,of,segments,in,the,engine;public,abstract,list,segment,segments,boolean,verbose
Engine -> public abstract List<Segment> segments(boolean verbose)_;1528762805;The list of segments in the engine.;public abstract List<Segment> segments(boolean verbose)_;the,list,of,segments,in,the,engine;public,abstract,list,segment,segments,boolean,verbose
Engine -> public abstract List<Segment> segments(boolean verbose)_;1531910483;The list of segments in the engine.;public abstract List<Segment> segments(boolean verbose)_;the,list,of,segments,in,the,engine;public,abstract,list,segment,segments,boolean,verbose
Engine -> public abstract List<Segment> segments(boolean verbose)_;1532685069;The list of segments in the engine.;public abstract List<Segment> segments(boolean verbose)_;the,list,of,segments,in,the,engine;public,abstract,list,segment,segments,boolean,verbose
Engine -> public abstract List<Segment> segments(boolean verbose)_;1533295538;The list of segments in the engine.;public abstract List<Segment> segments(boolean verbose)_;the,list,of,segments,in,the,engine;public,abstract,list,segment,segments,boolean,verbose
Engine -> public abstract List<Segment> segments(boolean verbose)_;1535046779;The list of segments in the engine.;public abstract List<Segment> segments(boolean verbose)_;the,list,of,segments,in,the,engine;public,abstract,list,segment,segments,boolean,verbose
Engine -> public abstract List<Segment> segments(boolean verbose)_;1535723122;The list of segments in the engine.;public abstract List<Segment> segments(boolean verbose)_;the,list,of,segments,in,the,engine;public,abstract,list,segment,segments,boolean,verbose
Engine -> public abstract List<Segment> segments(boolean verbose)_;1535965276;The list of segments in the engine.;public abstract List<Segment> segments(boolean verbose)_;the,list,of,segments,in,the,engine;public,abstract,list,segment,segments,boolean,verbose
Engine -> public abstract List<Segment> segments(boolean verbose)_;1536314350;The list of segments in the engine.;public abstract List<Segment> segments(boolean verbose)_;the,list,of,segments,in,the,engine;public,abstract,list,segment,segments,boolean,verbose
Engine -> public abstract List<Segment> segments(boolean verbose)_;1536828374;The list of segments in the engine.;public abstract List<Segment> segments(boolean verbose)_;the,list,of,segments,in,the,engine;public,abstract,list,segment,segments,boolean,verbose
Engine -> public abstract List<Segment> segments(boolean verbose)_;1537371806;The list of segments in the engine.;public abstract List<Segment> segments(boolean verbose)_;the,list,of,segments,in,the,engine;public,abstract,list,segment,segments,boolean,verbose
Engine -> public abstract List<Segment> segments(boolean verbose)_;1537806831;The list of segments in the engine.;public abstract List<Segment> segments(boolean verbose)_;the,list,of,segments,in,the,engine;public,abstract,list,segment,segments,boolean,verbose
Engine -> public abstract List<Segment> segments(boolean verbose)_;1538067637;The list of segments in the engine.;public abstract List<Segment> segments(boolean verbose)_;the,list,of,segments,in,the,engine;public,abstract,list,segment,segments,boolean,verbose
Engine -> public abstract List<Segment> segments(boolean verbose)_;1538424609;The list of segments in the engine.;public abstract List<Segment> segments(boolean verbose)_;the,list,of,segments,in,the,engine;public,abstract,list,segment,segments,boolean,verbose
Engine -> public abstract List<Segment> segments(boolean verbose)_;1539723533;The list of segments in the engine.;public abstract List<Segment> segments(boolean verbose)_;the,list,of,segments,in,the,engine;public,abstract,list,segment,segments,boolean,verbose
Engine -> public abstract List<Segment> segments(boolean verbose)_;1541618615;The list of segments in the engine.;public abstract List<Segment> segments(boolean verbose)_;the,list,of,segments,in,the,engine;public,abstract,list,segment,segments,boolean,verbose
Engine -> public abstract List<Segment> segments(boolean verbose)_;1542697754;The list of segments in the engine.;public abstract List<Segment> segments(boolean verbose)_;the,list,of,segments,in,the,engine;public,abstract,list,segment,segments,boolean,verbose
Engine -> public abstract List<Segment> segments(boolean verbose)_;1543047942;The list of segments in the engine.;public abstract List<Segment> segments(boolean verbose)_;the,list,of,segments,in,the,engine;public,abstract,list,segment,segments,boolean,verbose
Engine -> public abstract List<Segment> segments(boolean verbose)_;1544545090;The list of segments in the engine.;public abstract List<Segment> segments(boolean verbose)_;the,list,of,segments,in,the,engine;public,abstract,list,segment,segments,boolean,verbose
Engine -> public abstract List<Segment> segments(boolean verbose)_;1544684920;The list of segments in the engine.;public abstract List<Segment> segments(boolean verbose)_;the,list,of,segments,in,the,engine;public,abstract,list,segment,segments,boolean,verbose
Engine -> public abstract List<Segment> segments(boolean verbose)_;1545140118;The list of segments in the engine.;public abstract List<Segment> segments(boolean verbose)_;the,list,of,segments,in,the,engine;public,abstract,list,segment,segments,boolean,verbose
Engine -> public abstract List<Segment> segments(boolean verbose)_;1545221705;The list of segments in the engine.;public abstract List<Segment> segments(boolean verbose)_;the,list,of,segments,in,the,engine;public,abstract,list,segment,segments,boolean,verbose
Engine -> public abstract List<Segment> segments(boolean verbose)_;1547332999;The list of segments in the engine.;public abstract List<Segment> segments(boolean verbose)_;the,list,of,segments,in,the,engine;public,abstract,list,segment,segments,boolean,verbose
Engine -> public abstract List<Segment> segments(boolean verbose)_;1548771485;The list of segments in the engine.;public abstract List<Segment> segments(boolean verbose)_;the,list,of,segments,in,the,engine;public,abstract,list,segment,segments,boolean,verbose
Engine -> public abstract List<Segment> segments(boolean verbose)_;1549891630;The list of segments in the engine.;public abstract List<Segment> segments(boolean verbose)_;the,list,of,segments,in,the,engine;public,abstract,list,segment,segments,boolean,verbose
Engine -> public abstract List<Segment> segments(boolean verbose)_;1549975032;The list of segments in the engine.;public abstract List<Segment> segments(boolean verbose)_;the,list,of,segments,in,the,engine;public,abstract,list,segment,segments,boolean,verbose
Engine -> public abstract List<Segment> segments(boolean verbose)_;1550220204;The list of segments in the engine.;public abstract List<Segment> segments(boolean verbose)_;the,list,of,segments,in,the,engine;public,abstract,list,segment,segments,boolean,verbose
Engine -> public abstract List<Segment> segments(boolean verbose)_;1550526771;The list of segments in the engine.;public abstract List<Segment> segments(boolean verbose)_;the,list,of,segments,in,the,engine;public,abstract,list,segment,segments,boolean,verbose
Engine -> public abstract List<Segment> segments(boolean verbose)_;1551110274;The list of segments in the engine.;public abstract List<Segment> segments(boolean verbose)_;the,list,of,segments,in,the,engine;public,abstract,list,segment,segments,boolean,verbose
Engine -> public abstract List<Segment> segments(boolean verbose)_;1551126708;The list of segments in the engine.;public abstract List<Segment> segments(boolean verbose)_;the,list,of,segments,in,the,engine;public,abstract,list,segment,segments,boolean,verbose
Engine -> Index -> public long getAutoGeneratedIdTimestamp();1524684173;Returns a positive timestamp if the ID of this document is auto-generated by elasticsearch._if this property is non-negative indexing code might optimize the addition of this document_due to it's append only nature.;public long getAutoGeneratedIdTimestamp() {_            return autoGeneratedIdTimestamp__        };returns,a,positive,timestamp,if,the,id,of,this,document,is,auto,generated,by,elasticsearch,if,this,property,is,non,negative,indexing,code,might,optimize,the,addition,of,this,document,due,to,it,s,append,only,nature;public,long,get,auto,generated,id,timestamp,return,auto,generated,id,timestamp
Engine -> Index -> public long getAutoGeneratedIdTimestamp();1525162917;Returns a positive timestamp if the ID of this document is auto-generated by elasticsearch._if this property is non-negative indexing code might optimize the addition of this document_due to it's append only nature.;public long getAutoGeneratedIdTimestamp() {_            return autoGeneratedIdTimestamp__        };returns,a,positive,timestamp,if,the,id,of,this,document,is,auto,generated,by,elasticsearch,if,this,property,is,non,negative,indexing,code,might,optimize,the,addition,of,this,document,due,to,it,s,append,only,nature;public,long,get,auto,generated,id,timestamp,return,auto,generated,id,timestamp
Engine -> Index -> public long getAutoGeneratedIdTimestamp();1525334055;Returns a positive timestamp if the ID of this document is auto-generated by elasticsearch._if this property is non-negative indexing code might optimize the addition of this document_due to it's append only nature.;public long getAutoGeneratedIdTimestamp() {_            return autoGeneratedIdTimestamp__        };returns,a,positive,timestamp,if,the,id,of,this,document,is,auto,generated,by,elasticsearch,if,this,property,is,non,negative,indexing,code,might,optimize,the,addition,of,this,document,due,to,it,s,append,only,nature;public,long,get,auto,generated,id,timestamp,return,auto,generated,id,timestamp
Engine -> Index -> public long getAutoGeneratedIdTimestamp();1527583663;Returns a positive timestamp if the ID of this document is auto-generated by elasticsearch._if this property is non-negative indexing code might optimize the addition of this document_due to it's append only nature.;public long getAutoGeneratedIdTimestamp() {_            return autoGeneratedIdTimestamp__        };returns,a,positive,timestamp,if,the,id,of,this,document,is,auto,generated,by,elasticsearch,if,this,property,is,non,negative,indexing,code,might,optimize,the,addition,of,this,document,due,to,it,s,append,only,nature;public,long,get,auto,generated,id,timestamp,return,auto,generated,id,timestamp
Engine -> Index -> public long getAutoGeneratedIdTimestamp();1528706846;Returns a positive timestamp if the ID of this document is auto-generated by elasticsearch._if this property is non-negative indexing code might optimize the addition of this document_due to it's append only nature.;public long getAutoGeneratedIdTimestamp() {_            return autoGeneratedIdTimestamp__        };returns,a,positive,timestamp,if,the,id,of,this,document,is,auto,generated,by,elasticsearch,if,this,property,is,non,negative,indexing,code,might,optimize,the,addition,of,this,document,due,to,it,s,append,only,nature;public,long,get,auto,generated,id,timestamp,return,auto,generated,id,timestamp
Engine -> Index -> public long getAutoGeneratedIdTimestamp();1528762805;Returns a positive timestamp if the ID of this document is auto-generated by elasticsearch._if this property is non-negative indexing code might optimize the addition of this document_due to it's append only nature.;public long getAutoGeneratedIdTimestamp() {_            return autoGeneratedIdTimestamp__        };returns,a,positive,timestamp,if,the,id,of,this,document,is,auto,generated,by,elasticsearch,if,this,property,is,non,negative,indexing,code,might,optimize,the,addition,of,this,document,due,to,it,s,append,only,nature;public,long,get,auto,generated,id,timestamp,return,auto,generated,id,timestamp
Engine -> Index -> public long getAutoGeneratedIdTimestamp();1531910483;Returns a positive timestamp if the ID of this document is auto-generated by elasticsearch._if this property is non-negative indexing code might optimize the addition of this document_due to it's append only nature.;public long getAutoGeneratedIdTimestamp() {_            return autoGeneratedIdTimestamp__        };returns,a,positive,timestamp,if,the,id,of,this,document,is,auto,generated,by,elasticsearch,if,this,property,is,non,negative,indexing,code,might,optimize,the,addition,of,this,document,due,to,it,s,append,only,nature;public,long,get,auto,generated,id,timestamp,return,auto,generated,id,timestamp
Engine -> Index -> public long getAutoGeneratedIdTimestamp();1532685069;Returns a positive timestamp if the ID of this document is auto-generated by elasticsearch._if this property is non-negative indexing code might optimize the addition of this document_due to it's append only nature.;public long getAutoGeneratedIdTimestamp() {_            return autoGeneratedIdTimestamp__        };returns,a,positive,timestamp,if,the,id,of,this,document,is,auto,generated,by,elasticsearch,if,this,property,is,non,negative,indexing,code,might,optimize,the,addition,of,this,document,due,to,it,s,append,only,nature;public,long,get,auto,generated,id,timestamp,return,auto,generated,id,timestamp
Engine -> Index -> public long getAutoGeneratedIdTimestamp();1533295538;Returns a positive timestamp if the ID of this document is auto-generated by elasticsearch._if this property is non-negative indexing code might optimize the addition of this document_due to it's append only nature.;public long getAutoGeneratedIdTimestamp() {_            return autoGeneratedIdTimestamp__        };returns,a,positive,timestamp,if,the,id,of,this,document,is,auto,generated,by,elasticsearch,if,this,property,is,non,negative,indexing,code,might,optimize,the,addition,of,this,document,due,to,it,s,append,only,nature;public,long,get,auto,generated,id,timestamp,return,auto,generated,id,timestamp
Engine -> Index -> public long getAutoGeneratedIdTimestamp();1535046779;Returns a positive timestamp if the ID of this document is auto-generated by elasticsearch._if this property is non-negative indexing code might optimize the addition of this document_due to it's append only nature.;public long getAutoGeneratedIdTimestamp() {_            return autoGeneratedIdTimestamp__        };returns,a,positive,timestamp,if,the,id,of,this,document,is,auto,generated,by,elasticsearch,if,this,property,is,non,negative,indexing,code,might,optimize,the,addition,of,this,document,due,to,it,s,append,only,nature;public,long,get,auto,generated,id,timestamp,return,auto,generated,id,timestamp
Engine -> Index -> public long getAutoGeneratedIdTimestamp();1535723122;Returns a positive timestamp if the ID of this document is auto-generated by elasticsearch._if this property is non-negative indexing code might optimize the addition of this document_due to it's append only nature.;public long getAutoGeneratedIdTimestamp() {_            return autoGeneratedIdTimestamp__        };returns,a,positive,timestamp,if,the,id,of,this,document,is,auto,generated,by,elasticsearch,if,this,property,is,non,negative,indexing,code,might,optimize,the,addition,of,this,document,due,to,it,s,append,only,nature;public,long,get,auto,generated,id,timestamp,return,auto,generated,id,timestamp
Engine -> Index -> public long getAutoGeneratedIdTimestamp();1535965276;Returns a positive timestamp if the ID of this document is auto-generated by elasticsearch._if this property is non-negative indexing code might optimize the addition of this document_due to it's append only nature.;public long getAutoGeneratedIdTimestamp() {_            return autoGeneratedIdTimestamp__        };returns,a,positive,timestamp,if,the,id,of,this,document,is,auto,generated,by,elasticsearch,if,this,property,is,non,negative,indexing,code,might,optimize,the,addition,of,this,document,due,to,it,s,append,only,nature;public,long,get,auto,generated,id,timestamp,return,auto,generated,id,timestamp
Engine -> Index -> public long getAutoGeneratedIdTimestamp();1536314350;Returns a positive timestamp if the ID of this document is auto-generated by elasticsearch._if this property is non-negative indexing code might optimize the addition of this document_due to it's append only nature.;public long getAutoGeneratedIdTimestamp() {_            return autoGeneratedIdTimestamp__        };returns,a,positive,timestamp,if,the,id,of,this,document,is,auto,generated,by,elasticsearch,if,this,property,is,non,negative,indexing,code,might,optimize,the,addition,of,this,document,due,to,it,s,append,only,nature;public,long,get,auto,generated,id,timestamp,return,auto,generated,id,timestamp
Engine -> Index -> public long getAutoGeneratedIdTimestamp();1536828374;Returns a positive timestamp if the ID of this document is auto-generated by elasticsearch._if this property is non-negative indexing code might optimize the addition of this document_due to it's append only nature.;public long getAutoGeneratedIdTimestamp() {_            return autoGeneratedIdTimestamp__        };returns,a,positive,timestamp,if,the,id,of,this,document,is,auto,generated,by,elasticsearch,if,this,property,is,non,negative,indexing,code,might,optimize,the,addition,of,this,document,due,to,it,s,append,only,nature;public,long,get,auto,generated,id,timestamp,return,auto,generated,id,timestamp
Engine -> Index -> public long getAutoGeneratedIdTimestamp();1537371806;Returns a positive timestamp if the ID of this document is auto-generated by elasticsearch._if this property is non-negative indexing code might optimize the addition of this document_due to it's append only nature.;public long getAutoGeneratedIdTimestamp() {_            return autoGeneratedIdTimestamp__        };returns,a,positive,timestamp,if,the,id,of,this,document,is,auto,generated,by,elasticsearch,if,this,property,is,non,negative,indexing,code,might,optimize,the,addition,of,this,document,due,to,it,s,append,only,nature;public,long,get,auto,generated,id,timestamp,return,auto,generated,id,timestamp
Engine -> Index -> public long getAutoGeneratedIdTimestamp();1537806831;Returns a positive timestamp if the ID of this document is auto-generated by elasticsearch._if this property is non-negative indexing code might optimize the addition of this document_due to it's append only nature.;public long getAutoGeneratedIdTimestamp() {_            return autoGeneratedIdTimestamp__        };returns,a,positive,timestamp,if,the,id,of,this,document,is,auto,generated,by,elasticsearch,if,this,property,is,non,negative,indexing,code,might,optimize,the,addition,of,this,document,due,to,it,s,append,only,nature;public,long,get,auto,generated,id,timestamp,return,auto,generated,id,timestamp
Engine -> Index -> public long getAutoGeneratedIdTimestamp();1538067637;Returns a positive timestamp if the ID of this document is auto-generated by elasticsearch._if this property is non-negative indexing code might optimize the addition of this document_due to it's append only nature.;public long getAutoGeneratedIdTimestamp() {_            return autoGeneratedIdTimestamp__        };returns,a,positive,timestamp,if,the,id,of,this,document,is,auto,generated,by,elasticsearch,if,this,property,is,non,negative,indexing,code,might,optimize,the,addition,of,this,document,due,to,it,s,append,only,nature;public,long,get,auto,generated,id,timestamp,return,auto,generated,id,timestamp
Engine -> Index -> public long getAutoGeneratedIdTimestamp();1538424609;Returns a positive timestamp if the ID of this document is auto-generated by elasticsearch._if this property is non-negative indexing code might optimize the addition of this document_due to it's append only nature.;public long getAutoGeneratedIdTimestamp() {_            return autoGeneratedIdTimestamp__        };returns,a,positive,timestamp,if,the,id,of,this,document,is,auto,generated,by,elasticsearch,if,this,property,is,non,negative,indexing,code,might,optimize,the,addition,of,this,document,due,to,it,s,append,only,nature;public,long,get,auto,generated,id,timestamp,return,auto,generated,id,timestamp
Engine -> Index -> public long getAutoGeneratedIdTimestamp();1539723533;Returns a positive timestamp if the ID of this document is auto-generated by elasticsearch._if this property is non-negative indexing code might optimize the addition of this document_due to it's append only nature.;public long getAutoGeneratedIdTimestamp() {_            return autoGeneratedIdTimestamp__        };returns,a,positive,timestamp,if,the,id,of,this,document,is,auto,generated,by,elasticsearch,if,this,property,is,non,negative,indexing,code,might,optimize,the,addition,of,this,document,due,to,it,s,append,only,nature;public,long,get,auto,generated,id,timestamp,return,auto,generated,id,timestamp
Engine -> Index -> public long getAutoGeneratedIdTimestamp();1541618615;Returns a positive timestamp if the ID of this document is auto-generated by elasticsearch._if this property is non-negative indexing code might optimize the addition of this document_due to it's append only nature.;public long getAutoGeneratedIdTimestamp() {_            return autoGeneratedIdTimestamp__        };returns,a,positive,timestamp,if,the,id,of,this,document,is,auto,generated,by,elasticsearch,if,this,property,is,non,negative,indexing,code,might,optimize,the,addition,of,this,document,due,to,it,s,append,only,nature;public,long,get,auto,generated,id,timestamp,return,auto,generated,id,timestamp
Engine -> Index -> public long getAutoGeneratedIdTimestamp();1542697754;Returns a positive timestamp if the ID of this document is auto-generated by elasticsearch._if this property is non-negative indexing code might optimize the addition of this document_due to it's append only nature.;public long getAutoGeneratedIdTimestamp() {_            return autoGeneratedIdTimestamp__        };returns,a,positive,timestamp,if,the,id,of,this,document,is,auto,generated,by,elasticsearch,if,this,property,is,non,negative,indexing,code,might,optimize,the,addition,of,this,document,due,to,it,s,append,only,nature;public,long,get,auto,generated,id,timestamp,return,auto,generated,id,timestamp
Engine -> Index -> public long getAutoGeneratedIdTimestamp();1543047942;Returns a positive timestamp if the ID of this document is auto-generated by elasticsearch._if this property is non-negative indexing code might optimize the addition of this document_due to it's append only nature.;public long getAutoGeneratedIdTimestamp() {_            return autoGeneratedIdTimestamp__        };returns,a,positive,timestamp,if,the,id,of,this,document,is,auto,generated,by,elasticsearch,if,this,property,is,non,negative,indexing,code,might,optimize,the,addition,of,this,document,due,to,it,s,append,only,nature;public,long,get,auto,generated,id,timestamp,return,auto,generated,id,timestamp
Engine -> Index -> public long getAutoGeneratedIdTimestamp();1544545090;Returns a positive timestamp if the ID of this document is auto-generated by elasticsearch._if this property is non-negative indexing code might optimize the addition of this document_due to it's append only nature.;public long getAutoGeneratedIdTimestamp() {_            return autoGeneratedIdTimestamp__        };returns,a,positive,timestamp,if,the,id,of,this,document,is,auto,generated,by,elasticsearch,if,this,property,is,non,negative,indexing,code,might,optimize,the,addition,of,this,document,due,to,it,s,append,only,nature;public,long,get,auto,generated,id,timestamp,return,auto,generated,id,timestamp
Engine -> Index -> public long getAutoGeneratedIdTimestamp();1544684920;Returns a positive timestamp if the ID of this document is auto-generated by elasticsearch._if this property is non-negative indexing code might optimize the addition of this document_due to it's append only nature.;public long getAutoGeneratedIdTimestamp() {_            return autoGeneratedIdTimestamp__        };returns,a,positive,timestamp,if,the,id,of,this,document,is,auto,generated,by,elasticsearch,if,this,property,is,non,negative,indexing,code,might,optimize,the,addition,of,this,document,due,to,it,s,append,only,nature;public,long,get,auto,generated,id,timestamp,return,auto,generated,id,timestamp
Engine -> Index -> public long getAutoGeneratedIdTimestamp();1545140118;Returns a positive timestamp if the ID of this document is auto-generated by elasticsearch._if this property is non-negative indexing code might optimize the addition of this document_due to it's append only nature.;public long getAutoGeneratedIdTimestamp() {_            return autoGeneratedIdTimestamp__        };returns,a,positive,timestamp,if,the,id,of,this,document,is,auto,generated,by,elasticsearch,if,this,property,is,non,negative,indexing,code,might,optimize,the,addition,of,this,document,due,to,it,s,append,only,nature;public,long,get,auto,generated,id,timestamp,return,auto,generated,id,timestamp
Engine -> Index -> public long getAutoGeneratedIdTimestamp();1545221705;Returns a positive timestamp if the ID of this document is auto-generated by elasticsearch._if this property is non-negative indexing code might optimize the addition of this document_due to it's append only nature.;public long getAutoGeneratedIdTimestamp() {_            return autoGeneratedIdTimestamp__        };returns,a,positive,timestamp,if,the,id,of,this,document,is,auto,generated,by,elasticsearch,if,this,property,is,non,negative,indexing,code,might,optimize,the,addition,of,this,document,due,to,it,s,append,only,nature;public,long,get,auto,generated,id,timestamp,return,auto,generated,id,timestamp
Engine -> Index -> public long getAutoGeneratedIdTimestamp();1547332999;Returns a positive timestamp if the ID of this document is auto-generated by elasticsearch._if this property is non-negative indexing code might optimize the addition of this document_due to it's append only nature.;public long getAutoGeneratedIdTimestamp() {_            return autoGeneratedIdTimestamp__        };returns,a,positive,timestamp,if,the,id,of,this,document,is,auto,generated,by,elasticsearch,if,this,property,is,non,negative,indexing,code,might,optimize,the,addition,of,this,document,due,to,it,s,append,only,nature;public,long,get,auto,generated,id,timestamp,return,auto,generated,id,timestamp
Engine -> Index -> public long getAutoGeneratedIdTimestamp();1548771485;Returns a positive timestamp if the ID of this document is auto-generated by elasticsearch._if this property is non-negative indexing code might optimize the addition of this document_due to it's append only nature.;public long getAutoGeneratedIdTimestamp() {_            return autoGeneratedIdTimestamp__        };returns,a,positive,timestamp,if,the,id,of,this,document,is,auto,generated,by,elasticsearch,if,this,property,is,non,negative,indexing,code,might,optimize,the,addition,of,this,document,due,to,it,s,append,only,nature;public,long,get,auto,generated,id,timestamp,return,auto,generated,id,timestamp
Engine -> Index -> public long getAutoGeneratedIdTimestamp();1549891630;Returns a positive timestamp if the ID of this document is auto-generated by elasticsearch._if this property is non-negative indexing code might optimize the addition of this document_due to it's append only nature.;public long getAutoGeneratedIdTimestamp() {_            return autoGeneratedIdTimestamp__        };returns,a,positive,timestamp,if,the,id,of,this,document,is,auto,generated,by,elasticsearch,if,this,property,is,non,negative,indexing,code,might,optimize,the,addition,of,this,document,due,to,it,s,append,only,nature;public,long,get,auto,generated,id,timestamp,return,auto,generated,id,timestamp
Engine -> Index -> public long getAutoGeneratedIdTimestamp();1549975032;Returns a positive timestamp if the ID of this document is auto-generated by elasticsearch._if this property is non-negative indexing code might optimize the addition of this document_due to it's append only nature.;public long getAutoGeneratedIdTimestamp() {_            return autoGeneratedIdTimestamp__        };returns,a,positive,timestamp,if,the,id,of,this,document,is,auto,generated,by,elasticsearch,if,this,property,is,non,negative,indexing,code,might,optimize,the,addition,of,this,document,due,to,it,s,append,only,nature;public,long,get,auto,generated,id,timestamp,return,auto,generated,id,timestamp
Engine -> Index -> public long getAutoGeneratedIdTimestamp();1550220204;Returns a positive timestamp if the ID of this document is auto-generated by elasticsearch._if this property is non-negative indexing code might optimize the addition of this document_due to it's append only nature.;public long getAutoGeneratedIdTimestamp() {_            return autoGeneratedIdTimestamp__        };returns,a,positive,timestamp,if,the,id,of,this,document,is,auto,generated,by,elasticsearch,if,this,property,is,non,negative,indexing,code,might,optimize,the,addition,of,this,document,due,to,it,s,append,only,nature;public,long,get,auto,generated,id,timestamp,return,auto,generated,id,timestamp
Engine -> Index -> public long getAutoGeneratedIdTimestamp();1550526771;Returns a positive timestamp if the ID of this document is auto-generated by elasticsearch._if this property is non-negative indexing code might optimize the addition of this document_due to it's append only nature.;public long getAutoGeneratedIdTimestamp() {_            return autoGeneratedIdTimestamp__        };returns,a,positive,timestamp,if,the,id,of,this,document,is,auto,generated,by,elasticsearch,if,this,property,is,non,negative,indexing,code,might,optimize,the,addition,of,this,document,due,to,it,s,append,only,nature;public,long,get,auto,generated,id,timestamp,return,auto,generated,id,timestamp
Engine -> Index -> public long getAutoGeneratedIdTimestamp();1551110274;Returns a positive timestamp if the ID of this document is auto-generated by elasticsearch._if this property is non-negative indexing code might optimize the addition of this document_due to it's append only nature.;public long getAutoGeneratedIdTimestamp() {_            return autoGeneratedIdTimestamp__        };returns,a,positive,timestamp,if,the,id,of,this,document,is,auto,generated,by,elasticsearch,if,this,property,is,non,negative,indexing,code,might,optimize,the,addition,of,this,document,due,to,it,s,append,only,nature;public,long,get,auto,generated,id,timestamp,return,auto,generated,id,timestamp
Engine -> Index -> public long getAutoGeneratedIdTimestamp();1551126708;Returns a positive timestamp if the ID of this document is auto-generated by elasticsearch._if this property is non-negative indexing code might optimize the addition of this document_due to it's append only nature.;public long getAutoGeneratedIdTimestamp() {_            return autoGeneratedIdTimestamp__        };returns,a,positive,timestamp,if,the,id,of,this,document,is,auto,generated,by,elasticsearch,if,this,property,is,non,negative,indexing,code,might,optimize,the,addition,of,this,document,due,to,it,s,append,only,nature;public,long,get,auto,generated,id,timestamp,return,auto,generated,id,timestamp
Engine -> Index -> public boolean isRetry();1524684173;Returns <code>true</code> if this index requests has been retried on the coordinating node and can therefor be delivered_multiple times. Note: this might also be set to true if an equivalent event occurred like the replay of the transaction log;public boolean isRetry() {_            return isRetry__        };returns,code,true,code,if,this,index,requests,has,been,retried,on,the,coordinating,node,and,can,therefor,be,delivered,multiple,times,note,this,might,also,be,set,to,true,if,an,equivalent,event,occurred,like,the,replay,of,the,transaction,log;public,boolean,is,retry,return,is,retry
Engine -> Index -> public boolean isRetry();1525162917;Returns <code>true</code> if this index requests has been retried on the coordinating node and can therefor be delivered_multiple times. Note: this might also be set to true if an equivalent event occurred like the replay of the transaction log;public boolean isRetry() {_            return isRetry__        };returns,code,true,code,if,this,index,requests,has,been,retried,on,the,coordinating,node,and,can,therefor,be,delivered,multiple,times,note,this,might,also,be,set,to,true,if,an,equivalent,event,occurred,like,the,replay,of,the,transaction,log;public,boolean,is,retry,return,is,retry
Engine -> Index -> public boolean isRetry();1525334055;Returns <code>true</code> if this index requests has been retried on the coordinating node and can therefor be delivered_multiple times. Note: this might also be set to true if an equivalent event occurred like the replay of the transaction log;public boolean isRetry() {_            return isRetry__        };returns,code,true,code,if,this,index,requests,has,been,retried,on,the,coordinating,node,and,can,therefor,be,delivered,multiple,times,note,this,might,also,be,set,to,true,if,an,equivalent,event,occurred,like,the,replay,of,the,transaction,log;public,boolean,is,retry,return,is,retry
Engine -> Index -> public boolean isRetry();1527583663;Returns <code>true</code> if this index requests has been retried on the coordinating node and can therefor be delivered_multiple times. Note: this might also be set to true if an equivalent event occurred like the replay of the transaction log;public boolean isRetry() {_            return isRetry__        };returns,code,true,code,if,this,index,requests,has,been,retried,on,the,coordinating,node,and,can,therefor,be,delivered,multiple,times,note,this,might,also,be,set,to,true,if,an,equivalent,event,occurred,like,the,replay,of,the,transaction,log;public,boolean,is,retry,return,is,retry
Engine -> Index -> public boolean isRetry();1528706846;Returns <code>true</code> if this index requests has been retried on the coordinating node and can therefor be delivered_multiple times. Note: this might also be set to true if an equivalent event occurred like the replay of the transaction log;public boolean isRetry() {_            return isRetry__        };returns,code,true,code,if,this,index,requests,has,been,retried,on,the,coordinating,node,and,can,therefor,be,delivered,multiple,times,note,this,might,also,be,set,to,true,if,an,equivalent,event,occurred,like,the,replay,of,the,transaction,log;public,boolean,is,retry,return,is,retry
Engine -> Index -> public boolean isRetry();1528762805;Returns <code>true</code> if this index requests has been retried on the coordinating node and can therefor be delivered_multiple times. Note: this might also be set to true if an equivalent event occurred like the replay of the transaction log;public boolean isRetry() {_            return isRetry__        };returns,code,true,code,if,this,index,requests,has,been,retried,on,the,coordinating,node,and,can,therefor,be,delivered,multiple,times,note,this,might,also,be,set,to,true,if,an,equivalent,event,occurred,like,the,replay,of,the,transaction,log;public,boolean,is,retry,return,is,retry
Engine -> Index -> public boolean isRetry();1531910483;Returns <code>true</code> if this index requests has been retried on the coordinating node and can therefor be delivered_multiple times. Note: this might also be set to true if an equivalent event occurred like the replay of the transaction log;public boolean isRetry() {_            return isRetry__        };returns,code,true,code,if,this,index,requests,has,been,retried,on,the,coordinating,node,and,can,therefor,be,delivered,multiple,times,note,this,might,also,be,set,to,true,if,an,equivalent,event,occurred,like,the,replay,of,the,transaction,log;public,boolean,is,retry,return,is,retry
Engine -> Index -> public boolean isRetry();1532685069;Returns <code>true</code> if this index requests has been retried on the coordinating node and can therefor be delivered_multiple times. Note: this might also be set to true if an equivalent event occurred like the replay of the transaction log;public boolean isRetry() {_            return isRetry__        };returns,code,true,code,if,this,index,requests,has,been,retried,on,the,coordinating,node,and,can,therefor,be,delivered,multiple,times,note,this,might,also,be,set,to,true,if,an,equivalent,event,occurred,like,the,replay,of,the,transaction,log;public,boolean,is,retry,return,is,retry
Engine -> Index -> public boolean isRetry();1533295538;Returns <code>true</code> if this index requests has been retried on the coordinating node and can therefor be delivered_multiple times. Note: this might also be set to true if an equivalent event occurred like the replay of the transaction log;public boolean isRetry() {_            return isRetry__        };returns,code,true,code,if,this,index,requests,has,been,retried,on,the,coordinating,node,and,can,therefor,be,delivered,multiple,times,note,this,might,also,be,set,to,true,if,an,equivalent,event,occurred,like,the,replay,of,the,transaction,log;public,boolean,is,retry,return,is,retry
Engine -> Index -> public boolean isRetry();1535046779;Returns <code>true</code> if this index requests has been retried on the coordinating node and can therefor be delivered_multiple times. Note: this might also be set to true if an equivalent event occurred like the replay of the transaction log;public boolean isRetry() {_            return isRetry__        };returns,code,true,code,if,this,index,requests,has,been,retried,on,the,coordinating,node,and,can,therefor,be,delivered,multiple,times,note,this,might,also,be,set,to,true,if,an,equivalent,event,occurred,like,the,replay,of,the,transaction,log;public,boolean,is,retry,return,is,retry
Engine -> Index -> public boolean isRetry();1535723122;Returns <code>true</code> if this index requests has been retried on the coordinating node and can therefor be delivered_multiple times. Note: this might also be set to true if an equivalent event occurred like the replay of the transaction log;public boolean isRetry() {_            return isRetry__        };returns,code,true,code,if,this,index,requests,has,been,retried,on,the,coordinating,node,and,can,therefor,be,delivered,multiple,times,note,this,might,also,be,set,to,true,if,an,equivalent,event,occurred,like,the,replay,of,the,transaction,log;public,boolean,is,retry,return,is,retry
Engine -> Index -> public boolean isRetry();1535965276;Returns <code>true</code> if this index requests has been retried on the coordinating node and can therefor be delivered_multiple times. Note: this might also be set to true if an equivalent event occurred like the replay of the transaction log;public boolean isRetry() {_            return isRetry__        };returns,code,true,code,if,this,index,requests,has,been,retried,on,the,coordinating,node,and,can,therefor,be,delivered,multiple,times,note,this,might,also,be,set,to,true,if,an,equivalent,event,occurred,like,the,replay,of,the,transaction,log;public,boolean,is,retry,return,is,retry
Engine -> Index -> public boolean isRetry();1536314350;Returns <code>true</code> if this index requests has been retried on the coordinating node and can therefor be delivered_multiple times. Note: this might also be set to true if an equivalent event occurred like the replay of the transaction log;public boolean isRetry() {_            return isRetry__        };returns,code,true,code,if,this,index,requests,has,been,retried,on,the,coordinating,node,and,can,therefor,be,delivered,multiple,times,note,this,might,also,be,set,to,true,if,an,equivalent,event,occurred,like,the,replay,of,the,transaction,log;public,boolean,is,retry,return,is,retry
Engine -> Index -> public boolean isRetry();1536828374;Returns <code>true</code> if this index requests has been retried on the coordinating node and can therefor be delivered_multiple times. Note: this might also be set to true if an equivalent event occurred like the replay of the transaction log;public boolean isRetry() {_            return isRetry__        };returns,code,true,code,if,this,index,requests,has,been,retried,on,the,coordinating,node,and,can,therefor,be,delivered,multiple,times,note,this,might,also,be,set,to,true,if,an,equivalent,event,occurred,like,the,replay,of,the,transaction,log;public,boolean,is,retry,return,is,retry
Engine -> Index -> public boolean isRetry();1537371806;Returns <code>true</code> if this index requests has been retried on the coordinating node and can therefor be delivered_multiple times. Note: this might also be set to true if an equivalent event occurred like the replay of the transaction log;public boolean isRetry() {_            return isRetry__        };returns,code,true,code,if,this,index,requests,has,been,retried,on,the,coordinating,node,and,can,therefor,be,delivered,multiple,times,note,this,might,also,be,set,to,true,if,an,equivalent,event,occurred,like,the,replay,of,the,transaction,log;public,boolean,is,retry,return,is,retry
Engine -> Index -> public boolean isRetry();1537806831;Returns <code>true</code> if this index requests has been retried on the coordinating node and can therefor be delivered_multiple times. Note: this might also be set to true if an equivalent event occurred like the replay of the transaction log;public boolean isRetry() {_            return isRetry__        };returns,code,true,code,if,this,index,requests,has,been,retried,on,the,coordinating,node,and,can,therefor,be,delivered,multiple,times,note,this,might,also,be,set,to,true,if,an,equivalent,event,occurred,like,the,replay,of,the,transaction,log;public,boolean,is,retry,return,is,retry
Engine -> Index -> public boolean isRetry();1538067637;Returns <code>true</code> if this index requests has been retried on the coordinating node and can therefor be delivered_multiple times. Note: this might also be set to true if an equivalent event occurred like the replay of the transaction log;public boolean isRetry() {_            return isRetry__        };returns,code,true,code,if,this,index,requests,has,been,retried,on,the,coordinating,node,and,can,therefor,be,delivered,multiple,times,note,this,might,also,be,set,to,true,if,an,equivalent,event,occurred,like,the,replay,of,the,transaction,log;public,boolean,is,retry,return,is,retry
Engine -> Index -> public boolean isRetry();1538424609;Returns <code>true</code> if this index requests has been retried on the coordinating node and can therefor be delivered_multiple times. Note: this might also be set to true if an equivalent event occurred like the replay of the transaction log;public boolean isRetry() {_            return isRetry__        };returns,code,true,code,if,this,index,requests,has,been,retried,on,the,coordinating,node,and,can,therefor,be,delivered,multiple,times,note,this,might,also,be,set,to,true,if,an,equivalent,event,occurred,like,the,replay,of,the,transaction,log;public,boolean,is,retry,return,is,retry
Engine -> Index -> public boolean isRetry();1539723533;Returns <code>true</code> if this index requests has been retried on the coordinating node and can therefor be delivered_multiple times. Note: this might also be set to true if an equivalent event occurred like the replay of the transaction log;public boolean isRetry() {_            return isRetry__        };returns,code,true,code,if,this,index,requests,has,been,retried,on,the,coordinating,node,and,can,therefor,be,delivered,multiple,times,note,this,might,also,be,set,to,true,if,an,equivalent,event,occurred,like,the,replay,of,the,transaction,log;public,boolean,is,retry,return,is,retry
Engine -> Index -> public boolean isRetry();1541618615;Returns <code>true</code> if this index requests has been retried on the coordinating node and can therefor be delivered_multiple times. Note: this might also be set to true if an equivalent event occurred like the replay of the transaction log;public boolean isRetry() {_            return isRetry__        };returns,code,true,code,if,this,index,requests,has,been,retried,on,the,coordinating,node,and,can,therefor,be,delivered,multiple,times,note,this,might,also,be,set,to,true,if,an,equivalent,event,occurred,like,the,replay,of,the,transaction,log;public,boolean,is,retry,return,is,retry
Engine -> Index -> public boolean isRetry();1542697754;Returns <code>true</code> if this index requests has been retried on the coordinating node and can therefor be delivered_multiple times. Note: this might also be set to true if an equivalent event occurred like the replay of the transaction log;public boolean isRetry() {_            return isRetry__        };returns,code,true,code,if,this,index,requests,has,been,retried,on,the,coordinating,node,and,can,therefor,be,delivered,multiple,times,note,this,might,also,be,set,to,true,if,an,equivalent,event,occurred,like,the,replay,of,the,transaction,log;public,boolean,is,retry,return,is,retry
Engine -> Index -> public boolean isRetry();1543047942;Returns <code>true</code> if this index requests has been retried on the coordinating node and can therefor be delivered_multiple times. Note: this might also be set to true if an equivalent event occurred like the replay of the transaction log;public boolean isRetry() {_            return isRetry__        };returns,code,true,code,if,this,index,requests,has,been,retried,on,the,coordinating,node,and,can,therefor,be,delivered,multiple,times,note,this,might,also,be,set,to,true,if,an,equivalent,event,occurred,like,the,replay,of,the,transaction,log;public,boolean,is,retry,return,is,retry
Engine -> Index -> public boolean isRetry();1544545090;Returns <code>true</code> if this index requests has been retried on the coordinating node and can therefor be delivered_multiple times. Note: this might also be set to true if an equivalent event occurred like the replay of the transaction log;public boolean isRetry() {_            return isRetry__        };returns,code,true,code,if,this,index,requests,has,been,retried,on,the,coordinating,node,and,can,therefor,be,delivered,multiple,times,note,this,might,also,be,set,to,true,if,an,equivalent,event,occurred,like,the,replay,of,the,transaction,log;public,boolean,is,retry,return,is,retry
Engine -> Index -> public boolean isRetry();1544684920;Returns <code>true</code> if this index requests has been retried on the coordinating node and can therefor be delivered_multiple times. Note: this might also be set to true if an equivalent event occurred like the replay of the transaction log;public boolean isRetry() {_            return isRetry__        };returns,code,true,code,if,this,index,requests,has,been,retried,on,the,coordinating,node,and,can,therefor,be,delivered,multiple,times,note,this,might,also,be,set,to,true,if,an,equivalent,event,occurred,like,the,replay,of,the,transaction,log;public,boolean,is,retry,return,is,retry
Engine -> Index -> public boolean isRetry();1545140118;Returns <code>true</code> if this index requests has been retried on the coordinating node and can therefor be delivered_multiple times. Note: this might also be set to true if an equivalent event occurred like the replay of the transaction log;public boolean isRetry() {_            return isRetry__        };returns,code,true,code,if,this,index,requests,has,been,retried,on,the,coordinating,node,and,can,therefor,be,delivered,multiple,times,note,this,might,also,be,set,to,true,if,an,equivalent,event,occurred,like,the,replay,of,the,transaction,log;public,boolean,is,retry,return,is,retry
Engine -> Index -> public boolean isRetry();1545221705;Returns <code>true</code> if this index requests has been retried on the coordinating node and can therefor be delivered_multiple times. Note: this might also be set to true if an equivalent event occurred like the replay of the transaction log;public boolean isRetry() {_            return isRetry__        };returns,code,true,code,if,this,index,requests,has,been,retried,on,the,coordinating,node,and,can,therefor,be,delivered,multiple,times,note,this,might,also,be,set,to,true,if,an,equivalent,event,occurred,like,the,replay,of,the,transaction,log;public,boolean,is,retry,return,is,retry
Engine -> Index -> public boolean isRetry();1547332999;Returns <code>true</code> if this index requests has been retried on the coordinating node and can therefor be delivered_multiple times. Note: this might also be set to true if an equivalent event occurred like the replay of the transaction log;public boolean isRetry() {_            return isRetry__        };returns,code,true,code,if,this,index,requests,has,been,retried,on,the,coordinating,node,and,can,therefor,be,delivered,multiple,times,note,this,might,also,be,set,to,true,if,an,equivalent,event,occurred,like,the,replay,of,the,transaction,log;public,boolean,is,retry,return,is,retry
Engine -> Index -> public boolean isRetry();1548771485;Returns <code>true</code> if this index requests has been retried on the coordinating node and can therefor be delivered_multiple times. Note: this might also be set to true if an equivalent event occurred like the replay of the transaction log;public boolean isRetry() {_            return isRetry__        };returns,code,true,code,if,this,index,requests,has,been,retried,on,the,coordinating,node,and,can,therefor,be,delivered,multiple,times,note,this,might,also,be,set,to,true,if,an,equivalent,event,occurred,like,the,replay,of,the,transaction,log;public,boolean,is,retry,return,is,retry
Engine -> Index -> public boolean isRetry();1549891630;Returns <code>true</code> if this index requests has been retried on the coordinating node and can therefor be delivered_multiple times. Note: this might also be set to true if an equivalent event occurred like the replay of the transaction log;public boolean isRetry() {_            return isRetry__        };returns,code,true,code,if,this,index,requests,has,been,retried,on,the,coordinating,node,and,can,therefor,be,delivered,multiple,times,note,this,might,also,be,set,to,true,if,an,equivalent,event,occurred,like,the,replay,of,the,transaction,log;public,boolean,is,retry,return,is,retry
Engine -> Index -> public boolean isRetry();1549975032;Returns <code>true</code> if this index requests has been retried on the coordinating node and can therefor be delivered_multiple times. Note: this might also be set to true if an equivalent event occurred like the replay of the transaction log;public boolean isRetry() {_            return isRetry__        };returns,code,true,code,if,this,index,requests,has,been,retried,on,the,coordinating,node,and,can,therefor,be,delivered,multiple,times,note,this,might,also,be,set,to,true,if,an,equivalent,event,occurred,like,the,replay,of,the,transaction,log;public,boolean,is,retry,return,is,retry
Engine -> Index -> public boolean isRetry();1550220204;Returns <code>true</code> if this index requests has been retried on the coordinating node and can therefor be delivered_multiple times. Note: this might also be set to true if an equivalent event occurred like the replay of the transaction log;public boolean isRetry() {_            return isRetry__        };returns,code,true,code,if,this,index,requests,has,been,retried,on,the,coordinating,node,and,can,therefor,be,delivered,multiple,times,note,this,might,also,be,set,to,true,if,an,equivalent,event,occurred,like,the,replay,of,the,transaction,log;public,boolean,is,retry,return,is,retry
Engine -> Index -> public boolean isRetry();1550526771;Returns <code>true</code> if this index requests has been retried on the coordinating node and can therefor be delivered_multiple times. Note: this might also be set to true if an equivalent event occurred like the replay of the transaction log;public boolean isRetry() {_            return isRetry__        };returns,code,true,code,if,this,index,requests,has,been,retried,on,the,coordinating,node,and,can,therefor,be,delivered,multiple,times,note,this,might,also,be,set,to,true,if,an,equivalent,event,occurred,like,the,replay,of,the,transaction,log;public,boolean,is,retry,return,is,retry
Engine -> Index -> public boolean isRetry();1551110274;Returns <code>true</code> if this index requests has been retried on the coordinating node and can therefor be delivered_multiple times. Note: this might also be set to true if an equivalent event occurred like the replay of the transaction log;public boolean isRetry() {_            return isRetry__        };returns,code,true,code,if,this,index,requests,has,been,retried,on,the,coordinating,node,and,can,therefor,be,delivered,multiple,times,note,this,might,also,be,set,to,true,if,an,equivalent,event,occurred,like,the,replay,of,the,transaction,log;public,boolean,is,retry,return,is,retry
Engine -> Index -> public boolean isRetry();1551126708;Returns <code>true</code> if this index requests has been retried on the coordinating node and can therefor be delivered_multiple times. Note: this might also be set to true if an equivalent event occurred like the replay of the transaction log;public boolean isRetry() {_            return isRetry__        };returns,code,true,code,if,this,index,requests,has,been,retried,on,the,coordinating,node,and,can,therefor,be,delivered,multiple,times,note,this,might,also,be,set,to,true,if,an,equivalent,event,occurred,like,the,replay,of,the,transaction,log;public,boolean,is,retry,return,is,retry
Engine -> @SuppressWarnings("finally")     private void maybeDie(final String maybeMessage, final Throwable maybeFatal);1524684173;If the specified throwable contains a fatal error in the throwable graph, such a fatal error will be thrown. Callers should ensure_that there are no catch statements that would catch an error in the stack as the fatal error here should go uncaught and be handled_by the uncaught exception handler that we install during bootstrap. If the specified throwable does indeed contain a fatal error, the_specified message will attempt to be logged before throwing the fatal error. If the specified throwable does not contain a fatal_error, this method is a no-op.__@param maybeMessage the message to maybe log_@param maybeFatal   the throwable that maybe contains a fatal error;@SuppressWarnings("finally")_    private void maybeDie(final String maybeMessage, final Throwable maybeFatal) {_        ExceptionsHelper.maybeError(maybeFatal, logger).ifPresent(error -> {_            try {_                logger.error(maybeMessage, error)__            } finally {_                throw error__            }_        })__    };if,the,specified,throwable,contains,a,fatal,error,in,the,throwable,graph,such,a,fatal,error,will,be,thrown,callers,should,ensure,that,there,are,no,catch,statements,that,would,catch,an,error,in,the,stack,as,the,fatal,error,here,should,go,uncaught,and,be,handled,by,the,uncaught,exception,handler,that,we,install,during,bootstrap,if,the,specified,throwable,does,indeed,contain,a,fatal,error,the,specified,message,will,attempt,to,be,logged,before,throwing,the,fatal,error,if,the,specified,throwable,does,not,contain,a,fatal,error,this,method,is,a,no,op,param,maybe,message,the,message,to,maybe,log,param,maybe,fatal,the,throwable,that,maybe,contains,a,fatal,error;suppress,warnings,finally,private,void,maybe,die,final,string,maybe,message,final,throwable,maybe,fatal,exceptions,helper,maybe,error,maybe,fatal,logger,if,present,error,try,logger,error,maybe,message,error,finally,throw,error
Engine -> @SuppressWarnings("finally")     private void maybeDie(final String maybeMessage, final Throwable maybeFatal);1525162917;If the specified throwable contains a fatal error in the throwable graph, such a fatal error will be thrown. Callers should ensure_that there are no catch statements that would catch an error in the stack as the fatal error here should go uncaught and be handled_by the uncaught exception handler that we install during bootstrap. If the specified throwable does indeed contain a fatal error, the_specified message will attempt to be logged before throwing the fatal error. If the specified throwable does not contain a fatal_error, this method is a no-op.__@param maybeMessage the message to maybe log_@param maybeFatal   the throwable that maybe contains a fatal error;@SuppressWarnings("finally")_    private void maybeDie(final String maybeMessage, final Throwable maybeFatal) {_        ExceptionsHelper.maybeError(maybeFatal, logger).ifPresent(error -> {_            try {_                logger.error(maybeMessage, error)__            } finally {_                throw error__            }_        })__    };if,the,specified,throwable,contains,a,fatal,error,in,the,throwable,graph,such,a,fatal,error,will,be,thrown,callers,should,ensure,that,there,are,no,catch,statements,that,would,catch,an,error,in,the,stack,as,the,fatal,error,here,should,go,uncaught,and,be,handled,by,the,uncaught,exception,handler,that,we,install,during,bootstrap,if,the,specified,throwable,does,indeed,contain,a,fatal,error,the,specified,message,will,attempt,to,be,logged,before,throwing,the,fatal,error,if,the,specified,throwable,does,not,contain,a,fatal,error,this,method,is,a,no,op,param,maybe,message,the,message,to,maybe,log,param,maybe,fatal,the,throwable,that,maybe,contains,a,fatal,error;suppress,warnings,finally,private,void,maybe,die,final,string,maybe,message,final,throwable,maybe,fatal,exceptions,helper,maybe,error,maybe,fatal,logger,if,present,error,try,logger,error,maybe,message,error,finally,throw,error
Engine -> @SuppressWarnings("finally")     private void maybeDie(final String maybeMessage, final Throwable maybeFatal);1525334055;If the specified throwable contains a fatal error in the throwable graph, such a fatal error will be thrown. Callers should ensure_that there are no catch statements that would catch an error in the stack as the fatal error here should go uncaught and be handled_by the uncaught exception handler that we install during bootstrap. If the specified throwable does indeed contain a fatal error, the_specified message will attempt to be logged before throwing the fatal error. If the specified throwable does not contain a fatal_error, this method is a no-op.__@param maybeMessage the message to maybe log_@param maybeFatal   the throwable that maybe contains a fatal error;@SuppressWarnings("finally")_    private void maybeDie(final String maybeMessage, final Throwable maybeFatal) {_        ExceptionsHelper.maybeError(maybeFatal, logger).ifPresent(error -> {_            try {_                logger.error(maybeMessage, error)__            } finally {_                throw error__            }_        })__    };if,the,specified,throwable,contains,a,fatal,error,in,the,throwable,graph,such,a,fatal,error,will,be,thrown,callers,should,ensure,that,there,are,no,catch,statements,that,would,catch,an,error,in,the,stack,as,the,fatal,error,here,should,go,uncaught,and,be,handled,by,the,uncaught,exception,handler,that,we,install,during,bootstrap,if,the,specified,throwable,does,indeed,contain,a,fatal,error,the,specified,message,will,attempt,to,be,logged,before,throwing,the,fatal,error,if,the,specified,throwable,does,not,contain,a,fatal,error,this,method,is,a,no,op,param,maybe,message,the,message,to,maybe,log,param,maybe,fatal,the,throwable,that,maybe,contains,a,fatal,error;suppress,warnings,finally,private,void,maybe,die,final,string,maybe,message,final,throwable,maybe,fatal,exceptions,helper,maybe,error,maybe,fatal,logger,if,present,error,try,logger,error,maybe,message,error,finally,throw,error
Engine -> @SuppressWarnings("finally")     private void maybeDie(final String maybeMessage, final Throwable maybeFatal);1527583663;If the specified throwable contains a fatal error in the throwable graph, such a fatal error will be thrown. Callers should ensure_that there are no catch statements that would catch an error in the stack as the fatal error here should go uncaught and be handled_by the uncaught exception handler that we install during bootstrap. If the specified throwable does indeed contain a fatal error, the_specified message will attempt to be logged before throwing the fatal error. If the specified throwable does not contain a fatal_error, this method is a no-op.__@param maybeMessage the message to maybe log_@param maybeFatal   the throwable that maybe contains a fatal error;@SuppressWarnings("finally")_    private void maybeDie(final String maybeMessage, final Throwable maybeFatal) {_        ExceptionsHelper.maybeError(maybeFatal, logger).ifPresent(error -> {_            try {_                logger.error(maybeMessage, error)__            } finally {_                throw error__            }_        })__    };if,the,specified,throwable,contains,a,fatal,error,in,the,throwable,graph,such,a,fatal,error,will,be,thrown,callers,should,ensure,that,there,are,no,catch,statements,that,would,catch,an,error,in,the,stack,as,the,fatal,error,here,should,go,uncaught,and,be,handled,by,the,uncaught,exception,handler,that,we,install,during,bootstrap,if,the,specified,throwable,does,indeed,contain,a,fatal,error,the,specified,message,will,attempt,to,be,logged,before,throwing,the,fatal,error,if,the,specified,throwable,does,not,contain,a,fatal,error,this,method,is,a,no,op,param,maybe,message,the,message,to,maybe,log,param,maybe,fatal,the,throwable,that,maybe,contains,a,fatal,error;suppress,warnings,finally,private,void,maybe,die,final,string,maybe,message,final,throwable,maybe,fatal,exceptions,helper,maybe,error,maybe,fatal,logger,if,present,error,try,logger,error,maybe,message,error,finally,throw,error
Engine -> @SuppressWarnings("finally")     private void maybeDie(final String maybeMessage, final Throwable maybeFatal);1528706846;If the specified throwable contains a fatal error in the throwable graph, such a fatal error will be thrown. Callers should ensure_that there are no catch statements that would catch an error in the stack as the fatal error here should go uncaught and be handled_by the uncaught exception handler that we install during bootstrap. If the specified throwable does indeed contain a fatal error, the_specified message will attempt to be logged before throwing the fatal error. If the specified throwable does not contain a fatal_error, this method is a no-op.__@param maybeMessage the message to maybe log_@param maybeFatal   the throwable that maybe contains a fatal error;@SuppressWarnings("finally")_    private void maybeDie(final String maybeMessage, final Throwable maybeFatal) {_        ExceptionsHelper.maybeError(maybeFatal, logger).ifPresent(error -> {_            try {_                logger.error(maybeMessage, error)__            } finally {_                throw error__            }_        })__    };if,the,specified,throwable,contains,a,fatal,error,in,the,throwable,graph,such,a,fatal,error,will,be,thrown,callers,should,ensure,that,there,are,no,catch,statements,that,would,catch,an,error,in,the,stack,as,the,fatal,error,here,should,go,uncaught,and,be,handled,by,the,uncaught,exception,handler,that,we,install,during,bootstrap,if,the,specified,throwable,does,indeed,contain,a,fatal,error,the,specified,message,will,attempt,to,be,logged,before,throwing,the,fatal,error,if,the,specified,throwable,does,not,contain,a,fatal,error,this,method,is,a,no,op,param,maybe,message,the,message,to,maybe,log,param,maybe,fatal,the,throwable,that,maybe,contains,a,fatal,error;suppress,warnings,finally,private,void,maybe,die,final,string,maybe,message,final,throwable,maybe,fatal,exceptions,helper,maybe,error,maybe,fatal,logger,if,present,error,try,logger,error,maybe,message,error,finally,throw,error
Engine -> @SuppressWarnings("finally")     private void maybeDie(final String maybeMessage, final Throwable maybeFatal);1528762805;If the specified throwable contains a fatal error in the throwable graph, such a fatal error will be thrown. Callers should ensure_that there are no catch statements that would catch an error in the stack as the fatal error here should go uncaught and be handled_by the uncaught exception handler that we install during bootstrap. If the specified throwable does indeed contain a fatal error, the_specified message will attempt to be logged before throwing the fatal error. If the specified throwable does not contain a fatal_error, this method is a no-op.__@param maybeMessage the message to maybe log_@param maybeFatal   the throwable that maybe contains a fatal error;@SuppressWarnings("finally")_    private void maybeDie(final String maybeMessage, final Throwable maybeFatal) {_        ExceptionsHelper.maybeError(maybeFatal, logger).ifPresent(error -> {_            try {_                logger.error(maybeMessage, error)__            } finally {_                throw error__            }_        })__    };if,the,specified,throwable,contains,a,fatal,error,in,the,throwable,graph,such,a,fatal,error,will,be,thrown,callers,should,ensure,that,there,are,no,catch,statements,that,would,catch,an,error,in,the,stack,as,the,fatal,error,here,should,go,uncaught,and,be,handled,by,the,uncaught,exception,handler,that,we,install,during,bootstrap,if,the,specified,throwable,does,indeed,contain,a,fatal,error,the,specified,message,will,attempt,to,be,logged,before,throwing,the,fatal,error,if,the,specified,throwable,does,not,contain,a,fatal,error,this,method,is,a,no,op,param,maybe,message,the,message,to,maybe,log,param,maybe,fatal,the,throwable,that,maybe,contains,a,fatal,error;suppress,warnings,finally,private,void,maybe,die,final,string,maybe,message,final,throwable,maybe,fatal,exceptions,helper,maybe,error,maybe,fatal,logger,if,present,error,try,logger,error,maybe,message,error,finally,throw,error
Engine -> @SuppressWarnings("finally")     private void maybeDie(final String maybeMessage, final Throwable maybeFatal);1531910483;If the specified throwable contains a fatal error in the throwable graph, such a fatal error will be thrown. Callers should ensure_that there are no catch statements that would catch an error in the stack as the fatal error here should go uncaught and be handled_by the uncaught exception handler that we install during bootstrap. If the specified throwable does indeed contain a fatal error, the_specified message will attempt to be logged before throwing the fatal error. If the specified throwable does not contain a fatal_error, this method is a no-op.__@param maybeMessage the message to maybe log_@param maybeFatal   the throwable that maybe contains a fatal error;@SuppressWarnings("finally")_    private void maybeDie(final String maybeMessage, final Throwable maybeFatal) {_        ExceptionsHelper.maybeError(maybeFatal, logger).ifPresent(error -> {_            try {_                logger.error(maybeMessage, error)__            } finally {_                throw error__            }_        })__    };if,the,specified,throwable,contains,a,fatal,error,in,the,throwable,graph,such,a,fatal,error,will,be,thrown,callers,should,ensure,that,there,are,no,catch,statements,that,would,catch,an,error,in,the,stack,as,the,fatal,error,here,should,go,uncaught,and,be,handled,by,the,uncaught,exception,handler,that,we,install,during,bootstrap,if,the,specified,throwable,does,indeed,contain,a,fatal,error,the,specified,message,will,attempt,to,be,logged,before,throwing,the,fatal,error,if,the,specified,throwable,does,not,contain,a,fatal,error,this,method,is,a,no,op,param,maybe,message,the,message,to,maybe,log,param,maybe,fatal,the,throwable,that,maybe,contains,a,fatal,error;suppress,warnings,finally,private,void,maybe,die,final,string,maybe,message,final,throwable,maybe,fatal,exceptions,helper,maybe,error,maybe,fatal,logger,if,present,error,try,logger,error,maybe,message,error,finally,throw,error
Engine -> @SuppressWarnings("finally")     private void maybeDie(final String maybeMessage, final Throwable maybeFatal);1532685069;If the specified throwable contains a fatal error in the throwable graph, such a fatal error will be thrown. Callers should ensure_that there are no catch statements that would catch an error in the stack as the fatal error here should go uncaught and be handled_by the uncaught exception handler that we install during bootstrap. If the specified throwable does indeed contain a fatal error, the_specified message will attempt to be logged before throwing the fatal error. If the specified throwable does not contain a fatal_error, this method is a no-op.__@param maybeMessage the message to maybe log_@param maybeFatal   the throwable that maybe contains a fatal error;@SuppressWarnings("finally")_    private void maybeDie(final String maybeMessage, final Throwable maybeFatal) {_        ExceptionsHelper.maybeError(maybeFatal, logger).ifPresent(error -> {_            try {_                logger.error(maybeMessage, error)__            } finally {_                throw error__            }_        })__    };if,the,specified,throwable,contains,a,fatal,error,in,the,throwable,graph,such,a,fatal,error,will,be,thrown,callers,should,ensure,that,there,are,no,catch,statements,that,would,catch,an,error,in,the,stack,as,the,fatal,error,here,should,go,uncaught,and,be,handled,by,the,uncaught,exception,handler,that,we,install,during,bootstrap,if,the,specified,throwable,does,indeed,contain,a,fatal,error,the,specified,message,will,attempt,to,be,logged,before,throwing,the,fatal,error,if,the,specified,throwable,does,not,contain,a,fatal,error,this,method,is,a,no,op,param,maybe,message,the,message,to,maybe,log,param,maybe,fatal,the,throwable,that,maybe,contains,a,fatal,error;suppress,warnings,finally,private,void,maybe,die,final,string,maybe,message,final,throwable,maybe,fatal,exceptions,helper,maybe,error,maybe,fatal,logger,if,present,error,try,logger,error,maybe,message,error,finally,throw,error
Engine -> @SuppressWarnings("finally")     private void maybeDie(final String maybeMessage, final Throwable maybeFatal);1533295538;If the specified throwable contains a fatal error in the throwable graph, such a fatal error will be thrown. Callers should ensure_that there are no catch statements that would catch an error in the stack as the fatal error here should go uncaught and be handled_by the uncaught exception handler that we install during bootstrap. If the specified throwable does indeed contain a fatal error, the_specified message will attempt to be logged before throwing the fatal error. If the specified throwable does not contain a fatal_error, this method is a no-op.__@param maybeMessage the message to maybe log_@param maybeFatal   the throwable that maybe contains a fatal error;@SuppressWarnings("finally")_    private void maybeDie(final String maybeMessage, final Throwable maybeFatal) {_        ExceptionsHelper.maybeError(maybeFatal, logger).ifPresent(error -> {_            try {_                logger.error(maybeMessage, error)__            } finally {_                throw error__            }_        })__    };if,the,specified,throwable,contains,a,fatal,error,in,the,throwable,graph,such,a,fatal,error,will,be,thrown,callers,should,ensure,that,there,are,no,catch,statements,that,would,catch,an,error,in,the,stack,as,the,fatal,error,here,should,go,uncaught,and,be,handled,by,the,uncaught,exception,handler,that,we,install,during,bootstrap,if,the,specified,throwable,does,indeed,contain,a,fatal,error,the,specified,message,will,attempt,to,be,logged,before,throwing,the,fatal,error,if,the,specified,throwable,does,not,contain,a,fatal,error,this,method,is,a,no,op,param,maybe,message,the,message,to,maybe,log,param,maybe,fatal,the,throwable,that,maybe,contains,a,fatal,error;suppress,warnings,finally,private,void,maybe,die,final,string,maybe,message,final,throwable,maybe,fatal,exceptions,helper,maybe,error,maybe,fatal,logger,if,present,error,try,logger,error,maybe,message,error,finally,throw,error
Engine -> @SuppressWarnings("finally")     private void maybeDie(final String maybeMessage, final Throwable maybeFatal);1535046779;If the specified throwable contains a fatal error in the throwable graph, such a fatal error will be thrown. Callers should ensure_that there are no catch statements that would catch an error in the stack as the fatal error here should go uncaught and be handled_by the uncaught exception handler that we install during bootstrap. If the specified throwable does indeed contain a fatal error, the_specified message will attempt to be logged before throwing the fatal error. If the specified throwable does not contain a fatal_error, this method is a no-op.__@param maybeMessage the message to maybe log_@param maybeFatal   the throwable that maybe contains a fatal error;@SuppressWarnings("finally")_    private void maybeDie(final String maybeMessage, final Throwable maybeFatal) {_        ExceptionsHelper.maybeError(maybeFatal, logger).ifPresent(error -> {_            try {_                logger.error(maybeMessage, error)__            } finally {_                throw error__            }_        })__    };if,the,specified,throwable,contains,a,fatal,error,in,the,throwable,graph,such,a,fatal,error,will,be,thrown,callers,should,ensure,that,there,are,no,catch,statements,that,would,catch,an,error,in,the,stack,as,the,fatal,error,here,should,go,uncaught,and,be,handled,by,the,uncaught,exception,handler,that,we,install,during,bootstrap,if,the,specified,throwable,does,indeed,contain,a,fatal,error,the,specified,message,will,attempt,to,be,logged,before,throwing,the,fatal,error,if,the,specified,throwable,does,not,contain,a,fatal,error,this,method,is,a,no,op,param,maybe,message,the,message,to,maybe,log,param,maybe,fatal,the,throwable,that,maybe,contains,a,fatal,error;suppress,warnings,finally,private,void,maybe,die,final,string,maybe,message,final,throwable,maybe,fatal,exceptions,helper,maybe,error,maybe,fatal,logger,if,present,error,try,logger,error,maybe,message,error,finally,throw,error
Engine -> @SuppressWarnings("finally")     private void maybeDie(final String maybeMessage, final Throwable maybeFatal);1535723122;If the specified throwable contains a fatal error in the throwable graph, such a fatal error will be thrown. Callers should ensure_that there are no catch statements that would catch an error in the stack as the fatal error here should go uncaught and be handled_by the uncaught exception handler that we install during bootstrap. If the specified throwable does indeed contain a fatal error, the_specified message will attempt to be logged before throwing the fatal error. If the specified throwable does not contain a fatal_error, this method is a no-op.__@param maybeMessage the message to maybe log_@param maybeFatal   the throwable that maybe contains a fatal error;@SuppressWarnings("finally")_    private void maybeDie(final String maybeMessage, final Throwable maybeFatal) {_        ExceptionsHelper.maybeError(maybeFatal, logger).ifPresent(error -> {_            try {_                logger.error(maybeMessage, error)__            } finally {_                throw error__            }_        })__    };if,the,specified,throwable,contains,a,fatal,error,in,the,throwable,graph,such,a,fatal,error,will,be,thrown,callers,should,ensure,that,there,are,no,catch,statements,that,would,catch,an,error,in,the,stack,as,the,fatal,error,here,should,go,uncaught,and,be,handled,by,the,uncaught,exception,handler,that,we,install,during,bootstrap,if,the,specified,throwable,does,indeed,contain,a,fatal,error,the,specified,message,will,attempt,to,be,logged,before,throwing,the,fatal,error,if,the,specified,throwable,does,not,contain,a,fatal,error,this,method,is,a,no,op,param,maybe,message,the,message,to,maybe,log,param,maybe,fatal,the,throwable,that,maybe,contains,a,fatal,error;suppress,warnings,finally,private,void,maybe,die,final,string,maybe,message,final,throwable,maybe,fatal,exceptions,helper,maybe,error,maybe,fatal,logger,if,present,error,try,logger,error,maybe,message,error,finally,throw,error
Engine -> @SuppressWarnings("finally")     private void maybeDie(final String maybeMessage, final Throwable maybeFatal);1535965276;If the specified throwable contains a fatal error in the throwable graph, such a fatal error will be thrown. Callers should ensure_that there are no catch statements that would catch an error in the stack as the fatal error here should go uncaught and be handled_by the uncaught exception handler that we install during bootstrap. If the specified throwable does indeed contain a fatal error, the_specified message will attempt to be logged before throwing the fatal error. If the specified throwable does not contain a fatal_error, this method is a no-op.__@param maybeMessage the message to maybe log_@param maybeFatal   the throwable that maybe contains a fatal error;@SuppressWarnings("finally")_    private void maybeDie(final String maybeMessage, final Throwable maybeFatal) {_        ExceptionsHelper.maybeError(maybeFatal, logger).ifPresent(error -> {_            try {_                logger.error(maybeMessage, error)__            } finally {_                throw error__            }_        })__    };if,the,specified,throwable,contains,a,fatal,error,in,the,throwable,graph,such,a,fatal,error,will,be,thrown,callers,should,ensure,that,there,are,no,catch,statements,that,would,catch,an,error,in,the,stack,as,the,fatal,error,here,should,go,uncaught,and,be,handled,by,the,uncaught,exception,handler,that,we,install,during,bootstrap,if,the,specified,throwable,does,indeed,contain,a,fatal,error,the,specified,message,will,attempt,to,be,logged,before,throwing,the,fatal,error,if,the,specified,throwable,does,not,contain,a,fatal,error,this,method,is,a,no,op,param,maybe,message,the,message,to,maybe,log,param,maybe,fatal,the,throwable,that,maybe,contains,a,fatal,error;suppress,warnings,finally,private,void,maybe,die,final,string,maybe,message,final,throwable,maybe,fatal,exceptions,helper,maybe,error,maybe,fatal,logger,if,present,error,try,logger,error,maybe,message,error,finally,throw,error
Engine -> @SuppressWarnings("finally")     private void maybeDie(final String maybeMessage, final Throwable maybeFatal);1536314350;If the specified throwable contains a fatal error in the throwable graph, such a fatal error will be thrown. Callers should ensure_that there are no catch statements that would catch an error in the stack as the fatal error here should go uncaught and be handled_by the uncaught exception handler that we install during bootstrap. If the specified throwable does indeed contain a fatal error, the_specified message will attempt to be logged before throwing the fatal error. If the specified throwable does not contain a fatal_error, this method is a no-op.__@param maybeMessage the message to maybe log_@param maybeFatal   the throwable that maybe contains a fatal error;@SuppressWarnings("finally")_    private void maybeDie(final String maybeMessage, final Throwable maybeFatal) {_        ExceptionsHelper.maybeError(maybeFatal, logger).ifPresent(error -> {_            try {_                logger.error(maybeMessage, error)__            } finally {_                throw error__            }_        })__    };if,the,specified,throwable,contains,a,fatal,error,in,the,throwable,graph,such,a,fatal,error,will,be,thrown,callers,should,ensure,that,there,are,no,catch,statements,that,would,catch,an,error,in,the,stack,as,the,fatal,error,here,should,go,uncaught,and,be,handled,by,the,uncaught,exception,handler,that,we,install,during,bootstrap,if,the,specified,throwable,does,indeed,contain,a,fatal,error,the,specified,message,will,attempt,to,be,logged,before,throwing,the,fatal,error,if,the,specified,throwable,does,not,contain,a,fatal,error,this,method,is,a,no,op,param,maybe,message,the,message,to,maybe,log,param,maybe,fatal,the,throwable,that,maybe,contains,a,fatal,error;suppress,warnings,finally,private,void,maybe,die,final,string,maybe,message,final,throwable,maybe,fatal,exceptions,helper,maybe,error,maybe,fatal,logger,if,present,error,try,logger,error,maybe,message,error,finally,throw,error
Engine -> @SuppressWarnings("finally")     private void maybeDie(final String maybeMessage, final Throwable maybeFatal);1536828374;If the specified throwable contains a fatal error in the throwable graph, such a fatal error will be thrown. Callers should ensure_that there are no catch statements that would catch an error in the stack as the fatal error here should go uncaught and be handled_by the uncaught exception handler that we install during bootstrap. If the specified throwable does indeed contain a fatal error, the_specified message will attempt to be logged before throwing the fatal error. If the specified throwable does not contain a fatal_error, this method is a no-op.__@param maybeMessage the message to maybe log_@param maybeFatal   the throwable that maybe contains a fatal error;@SuppressWarnings("finally")_    private void maybeDie(final String maybeMessage, final Throwable maybeFatal) {_        ExceptionsHelper.maybeError(maybeFatal, logger).ifPresent(error -> {_            try {_                logger.error(maybeMessage, error)__            } finally {_                throw error__            }_        })__    };if,the,specified,throwable,contains,a,fatal,error,in,the,throwable,graph,such,a,fatal,error,will,be,thrown,callers,should,ensure,that,there,are,no,catch,statements,that,would,catch,an,error,in,the,stack,as,the,fatal,error,here,should,go,uncaught,and,be,handled,by,the,uncaught,exception,handler,that,we,install,during,bootstrap,if,the,specified,throwable,does,indeed,contain,a,fatal,error,the,specified,message,will,attempt,to,be,logged,before,throwing,the,fatal,error,if,the,specified,throwable,does,not,contain,a,fatal,error,this,method,is,a,no,op,param,maybe,message,the,message,to,maybe,log,param,maybe,fatal,the,throwable,that,maybe,contains,a,fatal,error;suppress,warnings,finally,private,void,maybe,die,final,string,maybe,message,final,throwable,maybe,fatal,exceptions,helper,maybe,error,maybe,fatal,logger,if,present,error,try,logger,error,maybe,message,error,finally,throw,error
Engine -> @SuppressWarnings("finally")     private void maybeDie(final String maybeMessage, final Throwable maybeFatal);1537371806;If the specified throwable contains a fatal error in the throwable graph, such a fatal error will be thrown. Callers should ensure_that there are no catch statements that would catch an error in the stack as the fatal error here should go uncaught and be handled_by the uncaught exception handler that we install during bootstrap. If the specified throwable does indeed contain a fatal error, the_specified message will attempt to be logged before throwing the fatal error. If the specified throwable does not contain a fatal_error, this method is a no-op.__@param maybeMessage the message to maybe log_@param maybeFatal   the throwable that maybe contains a fatal error;@SuppressWarnings("finally")_    private void maybeDie(final String maybeMessage, final Throwable maybeFatal) {_        ExceptionsHelper.maybeError(maybeFatal, logger).ifPresent(error -> {_            try {_                logger.error(maybeMessage, error)__            } finally {_                throw error__            }_        })__    };if,the,specified,throwable,contains,a,fatal,error,in,the,throwable,graph,such,a,fatal,error,will,be,thrown,callers,should,ensure,that,there,are,no,catch,statements,that,would,catch,an,error,in,the,stack,as,the,fatal,error,here,should,go,uncaught,and,be,handled,by,the,uncaught,exception,handler,that,we,install,during,bootstrap,if,the,specified,throwable,does,indeed,contain,a,fatal,error,the,specified,message,will,attempt,to,be,logged,before,throwing,the,fatal,error,if,the,specified,throwable,does,not,contain,a,fatal,error,this,method,is,a,no,op,param,maybe,message,the,message,to,maybe,log,param,maybe,fatal,the,throwable,that,maybe,contains,a,fatal,error;suppress,warnings,finally,private,void,maybe,die,final,string,maybe,message,final,throwable,maybe,fatal,exceptions,helper,maybe,error,maybe,fatal,logger,if,present,error,try,logger,error,maybe,message,error,finally,throw,error
Engine -> @SuppressWarnings("finally")     private void maybeDie(final String maybeMessage, final Throwable maybeFatal);1537806831;If the specified throwable contains a fatal error in the throwable graph, such a fatal error will be thrown. Callers should ensure_that there are no catch statements that would catch an error in the stack as the fatal error here should go uncaught and be handled_by the uncaught exception handler that we install during bootstrap. If the specified throwable does indeed contain a fatal error, the_specified message will attempt to be logged before throwing the fatal error. If the specified throwable does not contain a fatal_error, this method is a no-op.__@param maybeMessage the message to maybe log_@param maybeFatal   the throwable that maybe contains a fatal error;@SuppressWarnings("finally")_    private void maybeDie(final String maybeMessage, final Throwable maybeFatal) {_        ExceptionsHelper.maybeError(maybeFatal, logger).ifPresent(error -> {_            try {_                logger.error(maybeMessage, error)__            } finally {_                throw error__            }_        })__    };if,the,specified,throwable,contains,a,fatal,error,in,the,throwable,graph,such,a,fatal,error,will,be,thrown,callers,should,ensure,that,there,are,no,catch,statements,that,would,catch,an,error,in,the,stack,as,the,fatal,error,here,should,go,uncaught,and,be,handled,by,the,uncaught,exception,handler,that,we,install,during,bootstrap,if,the,specified,throwable,does,indeed,contain,a,fatal,error,the,specified,message,will,attempt,to,be,logged,before,throwing,the,fatal,error,if,the,specified,throwable,does,not,contain,a,fatal,error,this,method,is,a,no,op,param,maybe,message,the,message,to,maybe,log,param,maybe,fatal,the,throwable,that,maybe,contains,a,fatal,error;suppress,warnings,finally,private,void,maybe,die,final,string,maybe,message,final,throwable,maybe,fatal,exceptions,helper,maybe,error,maybe,fatal,logger,if,present,error,try,logger,error,maybe,message,error,finally,throw,error
Engine -> @SuppressWarnings("finally")     private void maybeDie(final String maybeMessage, final Throwable maybeFatal);1538067637;If the specified throwable contains a fatal error in the throwable graph, such a fatal error will be thrown. Callers should ensure_that there are no catch statements that would catch an error in the stack as the fatal error here should go uncaught and be handled_by the uncaught exception handler that we install during bootstrap. If the specified throwable does indeed contain a fatal error, the_specified message will attempt to be logged before throwing the fatal error. If the specified throwable does not contain a fatal_error, this method is a no-op.__@param maybeMessage the message to maybe log_@param maybeFatal   the throwable that maybe contains a fatal error;@SuppressWarnings("finally")_    private void maybeDie(final String maybeMessage, final Throwable maybeFatal) {_        ExceptionsHelper.maybeError(maybeFatal, logger).ifPresent(error -> {_            try {_                logger.error(maybeMessage, error)__            } finally {_                throw error__            }_        })__    };if,the,specified,throwable,contains,a,fatal,error,in,the,throwable,graph,such,a,fatal,error,will,be,thrown,callers,should,ensure,that,there,are,no,catch,statements,that,would,catch,an,error,in,the,stack,as,the,fatal,error,here,should,go,uncaught,and,be,handled,by,the,uncaught,exception,handler,that,we,install,during,bootstrap,if,the,specified,throwable,does,indeed,contain,a,fatal,error,the,specified,message,will,attempt,to,be,logged,before,throwing,the,fatal,error,if,the,specified,throwable,does,not,contain,a,fatal,error,this,method,is,a,no,op,param,maybe,message,the,message,to,maybe,log,param,maybe,fatal,the,throwable,that,maybe,contains,a,fatal,error;suppress,warnings,finally,private,void,maybe,die,final,string,maybe,message,final,throwable,maybe,fatal,exceptions,helper,maybe,error,maybe,fatal,logger,if,present,error,try,logger,error,maybe,message,error,finally,throw,error
Engine -> @SuppressWarnings("finally")     private void maybeDie(final String maybeMessage, final Throwable maybeFatal);1538424609;If the specified throwable contains a fatal error in the throwable graph, such a fatal error will be thrown. Callers should ensure_that there are no catch statements that would catch an error in the stack as the fatal error here should go uncaught and be handled_by the uncaught exception handler that we install during bootstrap. If the specified throwable does indeed contain a fatal error, the_specified message will attempt to be logged before throwing the fatal error. If the specified throwable does not contain a fatal_error, this method is a no-op.__@param maybeMessage the message to maybe log_@param maybeFatal   the throwable that maybe contains a fatal error;@SuppressWarnings("finally")_    private void maybeDie(final String maybeMessage, final Throwable maybeFatal) {_        ExceptionsHelper.maybeError(maybeFatal, logger).ifPresent(error -> {_            try {_                logger.error(maybeMessage, error)__            } finally {_                throw error__            }_        })__    };if,the,specified,throwable,contains,a,fatal,error,in,the,throwable,graph,such,a,fatal,error,will,be,thrown,callers,should,ensure,that,there,are,no,catch,statements,that,would,catch,an,error,in,the,stack,as,the,fatal,error,here,should,go,uncaught,and,be,handled,by,the,uncaught,exception,handler,that,we,install,during,bootstrap,if,the,specified,throwable,does,indeed,contain,a,fatal,error,the,specified,message,will,attempt,to,be,logged,before,throwing,the,fatal,error,if,the,specified,throwable,does,not,contain,a,fatal,error,this,method,is,a,no,op,param,maybe,message,the,message,to,maybe,log,param,maybe,fatal,the,throwable,that,maybe,contains,a,fatal,error;suppress,warnings,finally,private,void,maybe,die,final,string,maybe,message,final,throwable,maybe,fatal,exceptions,helper,maybe,error,maybe,fatal,logger,if,present,error,try,logger,error,maybe,message,error,finally,throw,error
Engine -> @SuppressWarnings("finally")     private void maybeDie(final String maybeMessage, final Throwable maybeFatal);1539723533;If the specified throwable contains a fatal error in the throwable graph, such a fatal error will be thrown. Callers should ensure_that there are no catch statements that would catch an error in the stack as the fatal error here should go uncaught and be handled_by the uncaught exception handler that we install during bootstrap. If the specified throwable does indeed contain a fatal error, the_specified message will attempt to be logged before throwing the fatal error. If the specified throwable does not contain a fatal_error, this method is a no-op.__@param maybeMessage the message to maybe log_@param maybeFatal   the throwable that maybe contains a fatal error;@SuppressWarnings("finally")_    private void maybeDie(final String maybeMessage, final Throwable maybeFatal) {_        ExceptionsHelper.maybeError(maybeFatal, logger).ifPresent(error -> {_            try {_                logger.error(maybeMessage, error)__            } finally {_                throw error__            }_        })__    };if,the,specified,throwable,contains,a,fatal,error,in,the,throwable,graph,such,a,fatal,error,will,be,thrown,callers,should,ensure,that,there,are,no,catch,statements,that,would,catch,an,error,in,the,stack,as,the,fatal,error,here,should,go,uncaught,and,be,handled,by,the,uncaught,exception,handler,that,we,install,during,bootstrap,if,the,specified,throwable,does,indeed,contain,a,fatal,error,the,specified,message,will,attempt,to,be,logged,before,throwing,the,fatal,error,if,the,specified,throwable,does,not,contain,a,fatal,error,this,method,is,a,no,op,param,maybe,message,the,message,to,maybe,log,param,maybe,fatal,the,throwable,that,maybe,contains,a,fatal,error;suppress,warnings,finally,private,void,maybe,die,final,string,maybe,message,final,throwable,maybe,fatal,exceptions,helper,maybe,error,maybe,fatal,logger,if,present,error,try,logger,error,maybe,message,error,finally,throw,error
Engine -> @SuppressWarnings("finally")     private void maybeDie(final String maybeMessage, final Throwable maybeFatal);1541618615;If the specified throwable contains a fatal error in the throwable graph, such a fatal error will be thrown. Callers should ensure_that there are no catch statements that would catch an error in the stack as the fatal error here should go uncaught and be handled_by the uncaught exception handler that we install during bootstrap. If the specified throwable does indeed contain a fatal error, the_specified message will attempt to be logged before throwing the fatal error. If the specified throwable does not contain a fatal_error, this method is a no-op.__@param maybeMessage the message to maybe log_@param maybeFatal   the throwable that maybe contains a fatal error;@SuppressWarnings("finally")_    private void maybeDie(final String maybeMessage, final Throwable maybeFatal) {_        ExceptionsHelper.maybeError(maybeFatal, logger).ifPresent(error -> {_            try {_                logger.error(maybeMessage, error)__            } finally {_                throw error__            }_        })__    };if,the,specified,throwable,contains,a,fatal,error,in,the,throwable,graph,such,a,fatal,error,will,be,thrown,callers,should,ensure,that,there,are,no,catch,statements,that,would,catch,an,error,in,the,stack,as,the,fatal,error,here,should,go,uncaught,and,be,handled,by,the,uncaught,exception,handler,that,we,install,during,bootstrap,if,the,specified,throwable,does,indeed,contain,a,fatal,error,the,specified,message,will,attempt,to,be,logged,before,throwing,the,fatal,error,if,the,specified,throwable,does,not,contain,a,fatal,error,this,method,is,a,no,op,param,maybe,message,the,message,to,maybe,log,param,maybe,fatal,the,throwable,that,maybe,contains,a,fatal,error;suppress,warnings,finally,private,void,maybe,die,final,string,maybe,message,final,throwable,maybe,fatal,exceptions,helper,maybe,error,maybe,fatal,logger,if,present,error,try,logger,error,maybe,message,error,finally,throw,error
Engine -> @SuppressWarnings("finally")     private void maybeDie(final String maybeMessage, final Throwable maybeFatal);1542697754;If the specified throwable contains a fatal error in the throwable graph, such a fatal error will be thrown. Callers should ensure_that there are no catch statements that would catch an error in the stack as the fatal error here should go uncaught and be handled_by the uncaught exception handler that we install during bootstrap. If the specified throwable does indeed contain a fatal error,_the specified message will attempt to be logged before throwing the fatal error. If the specified throwable does not contain a fatal_error, this method is a no-op.__@param maybeMessage the message to maybe log_@param maybeFatal   the throwable that maybe contains a fatal error;@SuppressWarnings("finally")_    private void maybeDie(final String maybeMessage, final Throwable maybeFatal) {_        ExceptionsHelper.maybeError(maybeFatal, logger).ifPresent(error -> {_            try {_                logger.error(maybeMessage, error)__            } finally {_                throw error__            }_        })__    };if,the,specified,throwable,contains,a,fatal,error,in,the,throwable,graph,such,a,fatal,error,will,be,thrown,callers,should,ensure,that,there,are,no,catch,statements,that,would,catch,an,error,in,the,stack,as,the,fatal,error,here,should,go,uncaught,and,be,handled,by,the,uncaught,exception,handler,that,we,install,during,bootstrap,if,the,specified,throwable,does,indeed,contain,a,fatal,error,the,specified,message,will,attempt,to,be,logged,before,throwing,the,fatal,error,if,the,specified,throwable,does,not,contain,a,fatal,error,this,method,is,a,no,op,param,maybe,message,the,message,to,maybe,log,param,maybe,fatal,the,throwable,that,maybe,contains,a,fatal,error;suppress,warnings,finally,private,void,maybe,die,final,string,maybe,message,final,throwable,maybe,fatal,exceptions,helper,maybe,error,maybe,fatal,logger,if,present,error,try,logger,error,maybe,message,error,finally,throw,error
Engine -> @SuppressWarnings("finally")     private void maybeDie(final String maybeMessage, final Throwable maybeFatal);1543047942;If the specified throwable contains a fatal error in the throwable graph, such a fatal error will be thrown. Callers should ensure_that there are no catch statements that would catch an error in the stack as the fatal error here should go uncaught and be handled_by the uncaught exception handler that we install during bootstrap. If the specified throwable does indeed contain a fatal error,_the specified message will attempt to be logged before throwing the fatal error. If the specified throwable does not contain a fatal_error, this method is a no-op.__@param maybeMessage the message to maybe log_@param maybeFatal   the throwable that maybe contains a fatal error;@SuppressWarnings("finally")_    private void maybeDie(final String maybeMessage, final Throwable maybeFatal) {_        ExceptionsHelper.maybeError(maybeFatal, logger).ifPresent(error -> {_            try {_                logger.error(maybeMessage, error)__            } finally {_                throw error__            }_        })__    };if,the,specified,throwable,contains,a,fatal,error,in,the,throwable,graph,such,a,fatal,error,will,be,thrown,callers,should,ensure,that,there,are,no,catch,statements,that,would,catch,an,error,in,the,stack,as,the,fatal,error,here,should,go,uncaught,and,be,handled,by,the,uncaught,exception,handler,that,we,install,during,bootstrap,if,the,specified,throwable,does,indeed,contain,a,fatal,error,the,specified,message,will,attempt,to,be,logged,before,throwing,the,fatal,error,if,the,specified,throwable,does,not,contain,a,fatal,error,this,method,is,a,no,op,param,maybe,message,the,message,to,maybe,log,param,maybe,fatal,the,throwable,that,maybe,contains,a,fatal,error;suppress,warnings,finally,private,void,maybe,die,final,string,maybe,message,final,throwable,maybe,fatal,exceptions,helper,maybe,error,maybe,fatal,logger,if,present,error,try,logger,error,maybe,message,error,finally,throw,error
Engine -> @SuppressWarnings("finally")     private void maybeDie(final String maybeMessage, final Throwable maybeFatal);1544545090;If the specified throwable contains a fatal error in the throwable graph, such a fatal error will be thrown. Callers should ensure_that there are no catch statements that would catch an error in the stack as the fatal error here should go uncaught and be handled_by the uncaught exception handler that we install during bootstrap. If the specified throwable does indeed contain a fatal error,_the specified message will attempt to be logged before throwing the fatal error. If the specified throwable does not contain a fatal_error, this method is a no-op.__@param maybeMessage the message to maybe log_@param maybeFatal   the throwable that maybe contains a fatal error;@SuppressWarnings("finally")_    private void maybeDie(final String maybeMessage, final Throwable maybeFatal) {_        ExceptionsHelper.maybeError(maybeFatal, logger).ifPresent(error -> {_            try {_                logger.error(maybeMessage, error)__            } finally {_                throw error__            }_        })__    };if,the,specified,throwable,contains,a,fatal,error,in,the,throwable,graph,such,a,fatal,error,will,be,thrown,callers,should,ensure,that,there,are,no,catch,statements,that,would,catch,an,error,in,the,stack,as,the,fatal,error,here,should,go,uncaught,and,be,handled,by,the,uncaught,exception,handler,that,we,install,during,bootstrap,if,the,specified,throwable,does,indeed,contain,a,fatal,error,the,specified,message,will,attempt,to,be,logged,before,throwing,the,fatal,error,if,the,specified,throwable,does,not,contain,a,fatal,error,this,method,is,a,no,op,param,maybe,message,the,message,to,maybe,log,param,maybe,fatal,the,throwable,that,maybe,contains,a,fatal,error;suppress,warnings,finally,private,void,maybe,die,final,string,maybe,message,final,throwable,maybe,fatal,exceptions,helper,maybe,error,maybe,fatal,logger,if,present,error,try,logger,error,maybe,message,error,finally,throw,error
Engine -> @SuppressWarnings("finally")     private void maybeDie(final String maybeMessage, final Throwable maybeFatal);1544684920;If the specified throwable contains a fatal error in the throwable graph, such a fatal error will be thrown. Callers should ensure_that there are no catch statements that would catch an error in the stack as the fatal error here should go uncaught and be handled_by the uncaught exception handler that we install during bootstrap. If the specified throwable does indeed contain a fatal error,_the specified message will attempt to be logged before throwing the fatal error. If the specified throwable does not contain a fatal_error, this method is a no-op.__@param maybeMessage the message to maybe log_@param maybeFatal   the throwable that maybe contains a fatal error;@SuppressWarnings("finally")_    private void maybeDie(final String maybeMessage, final Throwable maybeFatal) {_        ExceptionsHelper.maybeError(maybeFatal, logger).ifPresent(error -> {_            try {_                logger.error(maybeMessage, error)__            } finally {_                throw error__            }_        })__    };if,the,specified,throwable,contains,a,fatal,error,in,the,throwable,graph,such,a,fatal,error,will,be,thrown,callers,should,ensure,that,there,are,no,catch,statements,that,would,catch,an,error,in,the,stack,as,the,fatal,error,here,should,go,uncaught,and,be,handled,by,the,uncaught,exception,handler,that,we,install,during,bootstrap,if,the,specified,throwable,does,indeed,contain,a,fatal,error,the,specified,message,will,attempt,to,be,logged,before,throwing,the,fatal,error,if,the,specified,throwable,does,not,contain,a,fatal,error,this,method,is,a,no,op,param,maybe,message,the,message,to,maybe,log,param,maybe,fatal,the,throwable,that,maybe,contains,a,fatal,error;suppress,warnings,finally,private,void,maybe,die,final,string,maybe,message,final,throwable,maybe,fatal,exceptions,helper,maybe,error,maybe,fatal,logger,if,present,error,try,logger,error,maybe,message,error,finally,throw,error
Engine -> @SuppressWarnings("finally")     private void maybeDie(final String maybeMessage, final Throwable maybeFatal);1545140118;If the specified throwable contains a fatal error in the throwable graph, such a fatal error will be thrown. Callers should ensure_that there are no catch statements that would catch an error in the stack as the fatal error here should go uncaught and be handled_by the uncaught exception handler that we install during bootstrap. If the specified throwable does indeed contain a fatal error,_the specified message will attempt to be logged before throwing the fatal error. If the specified throwable does not contain a fatal_error, this method is a no-op.__@param maybeMessage the message to maybe log_@param maybeFatal   the throwable that maybe contains a fatal error;@SuppressWarnings("finally")_    private void maybeDie(final String maybeMessage, final Throwable maybeFatal) {_        ExceptionsHelper.maybeError(maybeFatal, logger).ifPresent(error -> {_            try {_                logger.error(maybeMessage, error)__            } finally {_                throw error__            }_        })__    };if,the,specified,throwable,contains,a,fatal,error,in,the,throwable,graph,such,a,fatal,error,will,be,thrown,callers,should,ensure,that,there,are,no,catch,statements,that,would,catch,an,error,in,the,stack,as,the,fatal,error,here,should,go,uncaught,and,be,handled,by,the,uncaught,exception,handler,that,we,install,during,bootstrap,if,the,specified,throwable,does,indeed,contain,a,fatal,error,the,specified,message,will,attempt,to,be,logged,before,throwing,the,fatal,error,if,the,specified,throwable,does,not,contain,a,fatal,error,this,method,is,a,no,op,param,maybe,message,the,message,to,maybe,log,param,maybe,fatal,the,throwable,that,maybe,contains,a,fatal,error;suppress,warnings,finally,private,void,maybe,die,final,string,maybe,message,final,throwable,maybe,fatal,exceptions,helper,maybe,error,maybe,fatal,logger,if,present,error,try,logger,error,maybe,message,error,finally,throw,error
Engine -> @SuppressWarnings("finally")     private void maybeDie(final String maybeMessage, final Throwable maybeFatal);1545221705;If the specified throwable contains a fatal error in the throwable graph, such a fatal error will be thrown. Callers should ensure_that there are no catch statements that would catch an error in the stack as the fatal error here should go uncaught and be handled_by the uncaught exception handler that we install during bootstrap. If the specified throwable does indeed contain a fatal error,_the specified message will attempt to be logged before throwing the fatal error. If the specified throwable does not contain a fatal_error, this method is a no-op.__@param maybeMessage the message to maybe log_@param maybeFatal   the throwable that maybe contains a fatal error;@SuppressWarnings("finally")_    private void maybeDie(final String maybeMessage, final Throwable maybeFatal) {_        ExceptionsHelper.maybeError(maybeFatal, logger).ifPresent(error -> {_            try {_                logger.error(maybeMessage, error)__            } finally {_                throw error__            }_        })__    };if,the,specified,throwable,contains,a,fatal,error,in,the,throwable,graph,such,a,fatal,error,will,be,thrown,callers,should,ensure,that,there,are,no,catch,statements,that,would,catch,an,error,in,the,stack,as,the,fatal,error,here,should,go,uncaught,and,be,handled,by,the,uncaught,exception,handler,that,we,install,during,bootstrap,if,the,specified,throwable,does,indeed,contain,a,fatal,error,the,specified,message,will,attempt,to,be,logged,before,throwing,the,fatal,error,if,the,specified,throwable,does,not,contain,a,fatal,error,this,method,is,a,no,op,param,maybe,message,the,message,to,maybe,log,param,maybe,fatal,the,throwable,that,maybe,contains,a,fatal,error;suppress,warnings,finally,private,void,maybe,die,final,string,maybe,message,final,throwable,maybe,fatal,exceptions,helper,maybe,error,maybe,fatal,logger,if,present,error,try,logger,error,maybe,message,error,finally,throw,error
Engine -> @SuppressWarnings("finally")     private void maybeDie(final String maybeMessage, final Throwable maybeFatal);1547332999;If the specified throwable contains a fatal error in the throwable graph, such a fatal error will be thrown. Callers should ensure_that there are no catch statements that would catch an error in the stack as the fatal error here should go uncaught and be handled_by the uncaught exception handler that we install during bootstrap. If the specified throwable does indeed contain a fatal error,_the specified message will attempt to be logged before throwing the fatal error. If the specified throwable does not contain a fatal_error, this method is a no-op.__@param maybeMessage the message to maybe log_@param maybeFatal   the throwable that maybe contains a fatal error;@SuppressWarnings("finally")_    private void maybeDie(final String maybeMessage, final Throwable maybeFatal) {_        ExceptionsHelper.maybeError(maybeFatal, logger).ifPresent(error -> {_            try {_                logger.error(maybeMessage, error)__            } finally {_                throw error__            }_        })__    };if,the,specified,throwable,contains,a,fatal,error,in,the,throwable,graph,such,a,fatal,error,will,be,thrown,callers,should,ensure,that,there,are,no,catch,statements,that,would,catch,an,error,in,the,stack,as,the,fatal,error,here,should,go,uncaught,and,be,handled,by,the,uncaught,exception,handler,that,we,install,during,bootstrap,if,the,specified,throwable,does,indeed,contain,a,fatal,error,the,specified,message,will,attempt,to,be,logged,before,throwing,the,fatal,error,if,the,specified,throwable,does,not,contain,a,fatal,error,this,method,is,a,no,op,param,maybe,message,the,message,to,maybe,log,param,maybe,fatal,the,throwable,that,maybe,contains,a,fatal,error;suppress,warnings,finally,private,void,maybe,die,final,string,maybe,message,final,throwable,maybe,fatal,exceptions,helper,maybe,error,maybe,fatal,logger,if,present,error,try,logger,error,maybe,message,error,finally,throw,error
Engine -> @SuppressWarnings("finally")     private void maybeDie(final String maybeMessage, final Throwable maybeFatal);1548771485;If the specified throwable contains a fatal error in the throwable graph, such a fatal error will be thrown. Callers should ensure_that there are no catch statements that would catch an error in the stack as the fatal error here should go uncaught and be handled_by the uncaught exception handler that we install during bootstrap. If the specified throwable does indeed contain a fatal error,_the specified message will attempt to be logged before throwing the fatal error. If the specified throwable does not contain a fatal_error, this method is a no-op.__@param maybeMessage the message to maybe log_@param maybeFatal   the throwable that maybe contains a fatal error;@SuppressWarnings("finally")_    private void maybeDie(final String maybeMessage, final Throwable maybeFatal) {_        ExceptionsHelper.maybeError(maybeFatal, logger).ifPresent(error -> {_            try {_                logger.error(maybeMessage, error)__            } finally {_                throw error__            }_        })__    };if,the,specified,throwable,contains,a,fatal,error,in,the,throwable,graph,such,a,fatal,error,will,be,thrown,callers,should,ensure,that,there,are,no,catch,statements,that,would,catch,an,error,in,the,stack,as,the,fatal,error,here,should,go,uncaught,and,be,handled,by,the,uncaught,exception,handler,that,we,install,during,bootstrap,if,the,specified,throwable,does,indeed,contain,a,fatal,error,the,specified,message,will,attempt,to,be,logged,before,throwing,the,fatal,error,if,the,specified,throwable,does,not,contain,a,fatal,error,this,method,is,a,no,op,param,maybe,message,the,message,to,maybe,log,param,maybe,fatal,the,throwable,that,maybe,contains,a,fatal,error;suppress,warnings,finally,private,void,maybe,die,final,string,maybe,message,final,throwable,maybe,fatal,exceptions,helper,maybe,error,maybe,fatal,logger,if,present,error,try,logger,error,maybe,message,error,finally,throw,error
Engine -> @SuppressWarnings("finally")     private void maybeDie(final String maybeMessage, final Throwable maybeFatal);1549891630;If the specified throwable contains a fatal error in the throwable graph, such a fatal error will be thrown. Callers should ensure_that there are no catch statements that would catch an error in the stack as the fatal error here should go uncaught and be handled_by the uncaught exception handler that we install during bootstrap. If the specified throwable does indeed contain a fatal error,_the specified message will attempt to be logged before throwing the fatal error. If the specified throwable does not contain a fatal_error, this method is a no-op.__@param maybeMessage the message to maybe log_@param maybeFatal   the throwable that maybe contains a fatal error;@SuppressWarnings("finally")_    private void maybeDie(final String maybeMessage, final Throwable maybeFatal) {_        ExceptionsHelper.maybeError(maybeFatal, logger).ifPresent(error -> {_            try {_                logger.error(maybeMessage, error)__            } finally {_                throw error__            }_        })__    };if,the,specified,throwable,contains,a,fatal,error,in,the,throwable,graph,such,a,fatal,error,will,be,thrown,callers,should,ensure,that,there,are,no,catch,statements,that,would,catch,an,error,in,the,stack,as,the,fatal,error,here,should,go,uncaught,and,be,handled,by,the,uncaught,exception,handler,that,we,install,during,bootstrap,if,the,specified,throwable,does,indeed,contain,a,fatal,error,the,specified,message,will,attempt,to,be,logged,before,throwing,the,fatal,error,if,the,specified,throwable,does,not,contain,a,fatal,error,this,method,is,a,no,op,param,maybe,message,the,message,to,maybe,log,param,maybe,fatal,the,throwable,that,maybe,contains,a,fatal,error;suppress,warnings,finally,private,void,maybe,die,final,string,maybe,message,final,throwable,maybe,fatal,exceptions,helper,maybe,error,maybe,fatal,logger,if,present,error,try,logger,error,maybe,message,error,finally,throw,error
Engine -> @SuppressWarnings("finally")     private void maybeDie(final String maybeMessage, final Throwable maybeFatal);1549975032;If the specified throwable contains a fatal error in the throwable graph, such a fatal error will be thrown. Callers should ensure_that there are no catch statements that would catch an error in the stack as the fatal error here should go uncaught and be handled_by the uncaught exception handler that we install during bootstrap. If the specified throwable does indeed contain a fatal error,_the specified message will attempt to be logged before throwing the fatal error. If the specified throwable does not contain a fatal_error, this method is a no-op.__@param maybeMessage the message to maybe log_@param maybeFatal   the throwable that maybe contains a fatal error;@SuppressWarnings("finally")_    private void maybeDie(final String maybeMessage, final Throwable maybeFatal) {_        ExceptionsHelper.maybeError(maybeFatal, logger).ifPresent(error -> {_            try {_                logger.error(maybeMessage, error)__            } finally {_                throw error__            }_        })__    };if,the,specified,throwable,contains,a,fatal,error,in,the,throwable,graph,such,a,fatal,error,will,be,thrown,callers,should,ensure,that,there,are,no,catch,statements,that,would,catch,an,error,in,the,stack,as,the,fatal,error,here,should,go,uncaught,and,be,handled,by,the,uncaught,exception,handler,that,we,install,during,bootstrap,if,the,specified,throwable,does,indeed,contain,a,fatal,error,the,specified,message,will,attempt,to,be,logged,before,throwing,the,fatal,error,if,the,specified,throwable,does,not,contain,a,fatal,error,this,method,is,a,no,op,param,maybe,message,the,message,to,maybe,log,param,maybe,fatal,the,throwable,that,maybe,contains,a,fatal,error;suppress,warnings,finally,private,void,maybe,die,final,string,maybe,message,final,throwable,maybe,fatal,exceptions,helper,maybe,error,maybe,fatal,logger,if,present,error,try,logger,error,maybe,message,error,finally,throw,error
Engine -> @SuppressWarnings("finally")     private void maybeDie(final String maybeMessage, final Throwable maybeFatal);1550220204;If the specified throwable contains a fatal error in the throwable graph, such a fatal error will be thrown. Callers should ensure_that there are no catch statements that would catch an error in the stack as the fatal error here should go uncaught and be handled_by the uncaught exception handler that we install during bootstrap. If the specified throwable does indeed contain a fatal error,_the specified message will attempt to be logged before throwing the fatal error. If the specified throwable does not contain a fatal_error, this method is a no-op.__@param maybeMessage the message to maybe log_@param maybeFatal   the throwable that maybe contains a fatal error;@SuppressWarnings("finally")_    private void maybeDie(final String maybeMessage, final Throwable maybeFatal) {_        ExceptionsHelper.maybeError(maybeFatal, logger).ifPresent(error -> {_            try {_                logger.error(maybeMessage, error)__            } finally {_                throw error__            }_        })__    };if,the,specified,throwable,contains,a,fatal,error,in,the,throwable,graph,such,a,fatal,error,will,be,thrown,callers,should,ensure,that,there,are,no,catch,statements,that,would,catch,an,error,in,the,stack,as,the,fatal,error,here,should,go,uncaught,and,be,handled,by,the,uncaught,exception,handler,that,we,install,during,bootstrap,if,the,specified,throwable,does,indeed,contain,a,fatal,error,the,specified,message,will,attempt,to,be,logged,before,throwing,the,fatal,error,if,the,specified,throwable,does,not,contain,a,fatal,error,this,method,is,a,no,op,param,maybe,message,the,message,to,maybe,log,param,maybe,fatal,the,throwable,that,maybe,contains,a,fatal,error;suppress,warnings,finally,private,void,maybe,die,final,string,maybe,message,final,throwable,maybe,fatal,exceptions,helper,maybe,error,maybe,fatal,logger,if,present,error,try,logger,error,maybe,message,error,finally,throw,error
Engine -> @SuppressWarnings("finally")     private void maybeDie(final String maybeMessage, final Throwable maybeFatal);1550526771;If the specified throwable contains a fatal error in the throwable graph, such a fatal error will be thrown. Callers should ensure_that there are no catch statements that would catch an error in the stack as the fatal error here should go uncaught and be handled_by the uncaught exception handler that we install during bootstrap. If the specified throwable does indeed contain a fatal error,_the specified message will attempt to be logged before throwing the fatal error. If the specified throwable does not contain a fatal_error, this method is a no-op.__@param maybeMessage the message to maybe log_@param maybeFatal   the throwable that maybe contains a fatal error;@SuppressWarnings("finally")_    private void maybeDie(final String maybeMessage, final Throwable maybeFatal) {_        ExceptionsHelper.maybeError(maybeFatal, logger).ifPresent(error -> {_            try {_                logger.error(maybeMessage, error)__            } finally {_                throw error__            }_        })__    };if,the,specified,throwable,contains,a,fatal,error,in,the,throwable,graph,such,a,fatal,error,will,be,thrown,callers,should,ensure,that,there,are,no,catch,statements,that,would,catch,an,error,in,the,stack,as,the,fatal,error,here,should,go,uncaught,and,be,handled,by,the,uncaught,exception,handler,that,we,install,during,bootstrap,if,the,specified,throwable,does,indeed,contain,a,fatal,error,the,specified,message,will,attempt,to,be,logged,before,throwing,the,fatal,error,if,the,specified,throwable,does,not,contain,a,fatal,error,this,method,is,a,no,op,param,maybe,message,the,message,to,maybe,log,param,maybe,fatal,the,throwable,that,maybe,contains,a,fatal,error;suppress,warnings,finally,private,void,maybe,die,final,string,maybe,message,final,throwable,maybe,fatal,exceptions,helper,maybe,error,maybe,fatal,logger,if,present,error,try,logger,error,maybe,message,error,finally,throw,error
Engine -> @SuppressWarnings("finally")     private void maybeDie(final String maybeMessage, final Throwable maybeFatal);1551110274;If the specified throwable contains a fatal error in the throwable graph, such a fatal error will be thrown. Callers should ensure_that there are no catch statements that would catch an error in the stack as the fatal error here should go uncaught and be handled_by the uncaught exception handler that we install during bootstrap. If the specified throwable does indeed contain a fatal error,_the specified message will attempt to be logged before throwing the fatal error. If the specified throwable does not contain a fatal_error, this method is a no-op.__@param maybeMessage the message to maybe log_@param maybeFatal   the throwable that maybe contains a fatal error;@SuppressWarnings("finally")_    private void maybeDie(final String maybeMessage, final Throwable maybeFatal) {_        ExceptionsHelper.maybeError(maybeFatal, logger).ifPresent(error -> {_            try {_                logger.error(maybeMessage, error)__            } finally {_                throw error__            }_        })__    };if,the,specified,throwable,contains,a,fatal,error,in,the,throwable,graph,such,a,fatal,error,will,be,thrown,callers,should,ensure,that,there,are,no,catch,statements,that,would,catch,an,error,in,the,stack,as,the,fatal,error,here,should,go,uncaught,and,be,handled,by,the,uncaught,exception,handler,that,we,install,during,bootstrap,if,the,specified,throwable,does,indeed,contain,a,fatal,error,the,specified,message,will,attempt,to,be,logged,before,throwing,the,fatal,error,if,the,specified,throwable,does,not,contain,a,fatal,error,this,method,is,a,no,op,param,maybe,message,the,message,to,maybe,log,param,maybe,fatal,the,throwable,that,maybe,contains,a,fatal,error;suppress,warnings,finally,private,void,maybe,die,final,string,maybe,message,final,throwable,maybe,fatal,exceptions,helper,maybe,error,maybe,fatal,logger,if,present,error,try,logger,error,maybe,message,error,finally,throw,error
Engine -> @SuppressWarnings("finally")     private void maybeDie(final String maybeMessage, final Throwable maybeFatal);1551126708;If the specified throwable contains a fatal error in the throwable graph, such a fatal error will be thrown. Callers should ensure_that there are no catch statements that would catch an error in the stack as the fatal error here should go uncaught and be handled_by the uncaught exception handler that we install during bootstrap. If the specified throwable does indeed contain a fatal error,_the specified message will attempt to be logged before throwing the fatal error. If the specified throwable does not contain a fatal_error, this method is a no-op.__@param maybeMessage the message to maybe log_@param maybeFatal   the throwable that maybe contains a fatal error;@SuppressWarnings("finally")_    private void maybeDie(final String maybeMessage, final Throwable maybeFatal) {_        ExceptionsHelper.maybeError(maybeFatal, logger).ifPresent(error -> {_            try {_                logger.error(maybeMessage, error)__            } finally {_                throw error__            }_        })__    };if,the,specified,throwable,contains,a,fatal,error,in,the,throwable,graph,such,a,fatal,error,will,be,thrown,callers,should,ensure,that,there,are,no,catch,statements,that,would,catch,an,error,in,the,stack,as,the,fatal,error,here,should,go,uncaught,and,be,handled,by,the,uncaught,exception,handler,that,we,install,during,bootstrap,if,the,specified,throwable,does,indeed,contain,a,fatal,error,the,specified,message,will,attempt,to,be,logged,before,throwing,the,fatal,error,if,the,specified,throwable,does,not,contain,a,fatal,error,this,method,is,a,no,op,param,maybe,message,the,message,to,maybe,log,param,maybe,fatal,the,throwable,that,maybe,contains,a,fatal,error;suppress,warnings,finally,private,void,maybe,die,final,string,maybe,message,final,throwable,maybe,fatal,exceptions,helper,maybe,error,maybe,fatal,logger,if,present,error,try,logger,error,maybe,message,error,finally,throw,error
Engine -> public abstract String getHistoryUUID()_;1524684173;returns the history uuid for the engine;public abstract String getHistoryUUID()_;returns,the,history,uuid,for,the,engine;public,abstract,string,get,history,uuid
Engine -> public abstract String getHistoryUUID()_;1525162917;returns the history uuid for the engine;public abstract String getHistoryUUID()_;returns,the,history,uuid,for,the,engine;public,abstract,string,get,history,uuid
Engine -> public abstract String getHistoryUUID()_;1525334055;returns the history uuid for the engine;public abstract String getHistoryUUID()_;returns,the,history,uuid,for,the,engine;public,abstract,string,get,history,uuid
Engine -> public abstract String getHistoryUUID()_;1527583663;returns the history uuid for the engine;public abstract String getHistoryUUID()_;returns,the,history,uuid,for,the,engine;public,abstract,string,get,history,uuid
Engine -> public abstract String getHistoryUUID()_;1528706846;returns the history uuid for the engine;public abstract String getHistoryUUID()_;returns,the,history,uuid,for,the,engine;public,abstract,string,get,history,uuid
Engine -> public abstract String getHistoryUUID()_;1528762805;returns the history uuid for the engine;public abstract String getHistoryUUID()_;returns,the,history,uuid,for,the,engine;public,abstract,string,get,history,uuid
Engine -> public abstract String getHistoryUUID()_;1531910483;returns the history uuid for the engine;public abstract String getHistoryUUID()_;returns,the,history,uuid,for,the,engine;public,abstract,string,get,history,uuid
Engine -> public abstract String getHistoryUUID()_;1532685069;returns the history uuid for the engine;public abstract String getHistoryUUID()_;returns,the,history,uuid,for,the,engine;public,abstract,string,get,history,uuid
Engine -> public abstract String getHistoryUUID()_;1533295538;returns the history uuid for the engine;public abstract String getHistoryUUID()_;returns,the,history,uuid,for,the,engine;public,abstract,string,get,history,uuid
Engine -> public abstract String getHistoryUUID()_;1535046779;returns the history uuid for the engine;public abstract String getHistoryUUID()_;returns,the,history,uuid,for,the,engine;public,abstract,string,get,history,uuid
Engine -> public abstract String getHistoryUUID()_;1535723122;returns the history uuid for the engine;public abstract String getHistoryUUID()_;returns,the,history,uuid,for,the,engine;public,abstract,string,get,history,uuid
Engine -> public abstract String getHistoryUUID()_;1535965276;returns the history uuid for the engine;public abstract String getHistoryUUID()_;returns,the,history,uuid,for,the,engine;public,abstract,string,get,history,uuid
Engine -> public abstract String getHistoryUUID()_;1536314350;returns the history uuid for the engine;public abstract String getHistoryUUID()_;returns,the,history,uuid,for,the,engine;public,abstract,string,get,history,uuid
Engine -> public abstract String getHistoryUUID()_;1536828374;returns the history uuid for the engine;public abstract String getHistoryUUID()_;returns,the,history,uuid,for,the,engine;public,abstract,string,get,history,uuid
Engine -> public abstract String getHistoryUUID()_;1537371806;returns the history uuid for the engine;public abstract String getHistoryUUID()_;returns,the,history,uuid,for,the,engine;public,abstract,string,get,history,uuid
Engine -> public abstract String getHistoryUUID()_;1537806831;returns the history uuid for the engine;public abstract String getHistoryUUID()_;returns,the,history,uuid,for,the,engine;public,abstract,string,get,history,uuid
Engine -> public abstract String getHistoryUUID()_;1538067637;returns the history uuid for the engine;public abstract String getHistoryUUID()_;returns,the,history,uuid,for,the,engine;public,abstract,string,get,history,uuid
Engine -> public abstract String getHistoryUUID()_;1538424609;returns the history uuid for the engine;public abstract String getHistoryUUID()_;returns,the,history,uuid,for,the,engine;public,abstract,string,get,history,uuid
Engine -> public abstract String getHistoryUUID()_;1539723533;returns the history uuid for the engine;public abstract String getHistoryUUID()_;returns,the,history,uuid,for,the,engine;public,abstract,string,get,history,uuid
Engine -> public abstract String getHistoryUUID()_;1541618615;returns the history uuid for the engine;public abstract String getHistoryUUID()_;returns,the,history,uuid,for,the,engine;public,abstract,string,get,history,uuid
Engine -> public abstract String getHistoryUUID()_;1542697754;returns the history uuid for the engine;public abstract String getHistoryUUID()_;returns,the,history,uuid,for,the,engine;public,abstract,string,get,history,uuid
Engine -> public abstract String getHistoryUUID()_;1543047942;returns the history uuid for the engine;public abstract String getHistoryUUID()_;returns,the,history,uuid,for,the,engine;public,abstract,string,get,history,uuid
Engine -> public abstract String getHistoryUUID()_;1544545090;returns the history uuid for the engine;public abstract String getHistoryUUID()_;returns,the,history,uuid,for,the,engine;public,abstract,string,get,history,uuid
Engine -> public abstract String getHistoryUUID()_;1544684920;returns the history uuid for the engine;public abstract String getHistoryUUID()_;returns,the,history,uuid,for,the,engine;public,abstract,string,get,history,uuid
Engine -> public abstract String getHistoryUUID()_;1545140118;returns the history uuid for the engine;public abstract String getHistoryUUID()_;returns,the,history,uuid,for,the,engine;public,abstract,string,get,history,uuid
Engine -> public abstract String getHistoryUUID()_;1545221705;returns the history uuid for the engine;public abstract String getHistoryUUID()_;returns,the,history,uuid,for,the,engine;public,abstract,string,get,history,uuid
Engine -> public abstract String getHistoryUUID()_;1547332999;returns the history uuid for the engine;public abstract String getHistoryUUID()_;returns,the,history,uuid,for,the,engine;public,abstract,string,get,history,uuid
Engine -> public abstract String getHistoryUUID()_;1548771485;returns the history uuid for the engine;public abstract String getHistoryUUID()_;returns,the,history,uuid,for,the,engine;public,abstract,string,get,history,uuid
Engine -> public abstract String getHistoryUUID()_;1549891630;returns the history uuid for the engine;public abstract String getHistoryUUID()_;returns,the,history,uuid,for,the,engine;public,abstract,string,get,history,uuid
Engine -> public abstract String getHistoryUUID()_;1549975032;returns the history uuid for the engine;public abstract String getHistoryUUID()_;returns,the,history,uuid,for,the,engine;public,abstract,string,get,history,uuid
Engine -> public abstract String getHistoryUUID()_;1550220204;returns the history uuid for the engine;public abstract String getHistoryUUID()_;returns,the,history,uuid,for,the,engine;public,abstract,string,get,history,uuid
Engine -> public abstract String getHistoryUUID()_;1550526771;returns the history uuid for the engine;public abstract String getHistoryUUID()_;returns,the,history,uuid,for,the,engine;public,abstract,string,get,history,uuid
Engine -> public abstract String getHistoryUUID()_;1551110274;returns the history uuid for the engine;public abstract String getHistoryUUID()_;returns,the,history,uuid,for,the,engine;public,abstract,string,get,history,uuid
Engine -> public abstract String getHistoryUUID()_;1551126708;returns the history uuid for the engine;public abstract String getHistoryUUID()_;returns,the,history,uuid,for,the,engine;public,abstract,string,get,history,uuid
Engine -> DeleteResult -> public DeleteResult(Exception failure, long version);1525162917;use in case of the delete operation failed before getting to internal engine;public DeleteResult(Exception failure, long version) {_            this(failure, version, SequenceNumbers.UNASSIGNED_SEQ_NO, false)__        };use,in,case,of,the,delete,operation,failed,before,getting,to,internal,engine;public,delete,result,exception,failure,long,version,this,failure,version,sequence,numbers,false
Engine -> DeleteResult -> public DeleteResult(Exception failure, long version);1525334055;use in case of the delete operation failed before getting to internal engine;public DeleteResult(Exception failure, long version) {_            this(failure, version, SequenceNumbers.UNASSIGNED_SEQ_NO, false)__        };use,in,case,of,the,delete,operation,failed,before,getting,to,internal,engine;public,delete,result,exception,failure,long,version,this,failure,version,sequence,numbers,false
Engine -> DeleteResult -> public DeleteResult(Exception failure, long version);1527583663;use in case of the delete operation failed before getting to internal engine;public DeleteResult(Exception failure, long version) {_            this(failure, version, SequenceNumbers.UNASSIGNED_SEQ_NO, false)__        };use,in,case,of,the,delete,operation,failed,before,getting,to,internal,engine;public,delete,result,exception,failure,long,version,this,failure,version,sequence,numbers,false
Engine -> DeleteResult -> public DeleteResult(Exception failure, long version);1528706846;use in case of the delete operation failed before getting to internal engine;public DeleteResult(Exception failure, long version) {_            this(failure, version, SequenceNumbers.UNASSIGNED_SEQ_NO, false)__        };use,in,case,of,the,delete,operation,failed,before,getting,to,internal,engine;public,delete,result,exception,failure,long,version,this,failure,version,sequence,numbers,false
Engine -> DeleteResult -> public DeleteResult(Exception failure, long version);1528762805;use in case of the delete operation failed before getting to internal engine;public DeleteResult(Exception failure, long version) {_            this(failure, version, SequenceNumbers.UNASSIGNED_SEQ_NO, false)__        };use,in,case,of,the,delete,operation,failed,before,getting,to,internal,engine;public,delete,result,exception,failure,long,version,this,failure,version,sequence,numbers,false
Engine -> DeleteResult -> public DeleteResult(Exception failure, long version);1531910483;use in case of the delete operation failed before getting to internal engine;public DeleteResult(Exception failure, long version) {_            this(failure, version, SequenceNumbers.UNASSIGNED_SEQ_NO, false)__        };use,in,case,of,the,delete,operation,failed,before,getting,to,internal,engine;public,delete,result,exception,failure,long,version,this,failure,version,sequence,numbers,false
Engine -> DeleteResult -> public DeleteResult(Exception failure, long version);1532685069;use in case of the delete operation failed before getting to internal engine;public DeleteResult(Exception failure, long version) {_            this(failure, version, SequenceNumbers.UNASSIGNED_SEQ_NO, false)__        };use,in,case,of,the,delete,operation,failed,before,getting,to,internal,engine;public,delete,result,exception,failure,long,version,this,failure,version,sequence,numbers,false
Engine -> public abstract long getMinRetainedSeqNo()_;1549975032;Gets the minimum retained sequence number for this engine.__@return the minimum retained sequence number;public abstract long getMinRetainedSeqNo()_;gets,the,minimum,retained,sequence,number,for,this,engine,return,the,minimum,retained,sequence,number;public,abstract,long,get,min,retained,seq,no
Engine -> public abstract long getMinRetainedSeqNo()_;1550220204;Gets the minimum retained sequence number for this engine.__@return the minimum retained sequence number;public abstract long getMinRetainedSeqNo()_;gets,the,minimum,retained,sequence,number,for,this,engine,return,the,minimum,retained,sequence,number;public,abstract,long,get,min,retained,seq,no
Engine -> public abstract long getMinRetainedSeqNo()_;1550526771;Gets the minimum retained sequence number for this engine.__@return the minimum retained sequence number;public abstract long getMinRetainedSeqNo()_;gets,the,minimum,retained,sequence,number,for,this,engine,return,the,minimum,retained,sequence,number;public,abstract,long,get,min,retained,seq,no
Engine -> public abstract long getMinRetainedSeqNo()_;1551110274;Gets the minimum retained sequence number for this engine.__@return the minimum retained sequence number;public abstract long getMinRetainedSeqNo()_;gets,the,minimum,retained,sequence,number,for,this,engine,return,the,minimum,retained,sequence,number;public,abstract,long,get,min,retained,seq,no
Engine -> public abstract long getMinRetainedSeqNo()_;1551126708;Gets the minimum retained sequence number for this engine.__@return the minimum retained sequence number;public abstract long getMinRetainedSeqNo()_;gets,the,minimum,retained,sequence,number,for,this,engine,return,the,minimum,retained,sequence,number;public,abstract,long,get,min,retained,seq,no
Engine -> protected static long guardedRamBytesUsed(Accountable a);1524684173;Returns 0 in the case where accountable is null, otherwise returns {@code ramBytesUsed()};protected static long guardedRamBytesUsed(Accountable a) {_        if (a == null) {_            return 0__        }_        return a.ramBytesUsed()__    };returns,0,in,the,case,where,accountable,is,null,otherwise,returns,code,ram,bytes,used;protected,static,long,guarded,ram,bytes,used,accountable,a,if,a,null,return,0,return,a,ram,bytes,used
Engine -> protected static long guardedRamBytesUsed(Accountable a);1525162917;Returns 0 in the case where accountable is null, otherwise returns {@code ramBytesUsed()};protected static long guardedRamBytesUsed(Accountable a) {_        if (a == null) {_            return 0__        }_        return a.ramBytesUsed()__    };returns,0,in,the,case,where,accountable,is,null,otherwise,returns,code,ram,bytes,used;protected,static,long,guarded,ram,bytes,used,accountable,a,if,a,null,return,0,return,a,ram,bytes,used
Engine -> protected static long guardedRamBytesUsed(Accountable a);1525334055;Returns 0 in the case where accountable is null, otherwise returns {@code ramBytesUsed()};protected static long guardedRamBytesUsed(Accountable a) {_        if (a == null) {_            return 0__        }_        return a.ramBytesUsed()__    };returns,0,in,the,case,where,accountable,is,null,otherwise,returns,code,ram,bytes,used;protected,static,long,guarded,ram,bytes,used,accountable,a,if,a,null,return,0,return,a,ram,bytes,used
Engine -> protected static long guardedRamBytesUsed(Accountable a);1527583663;Returns 0 in the case where accountable is null, otherwise returns {@code ramBytesUsed()};protected static long guardedRamBytesUsed(Accountable a) {_        if (a == null) {_            return 0__        }_        return a.ramBytesUsed()__    };returns,0,in,the,case,where,accountable,is,null,otherwise,returns,code,ram,bytes,used;protected,static,long,guarded,ram,bytes,used,accountable,a,if,a,null,return,0,return,a,ram,bytes,used
Engine -> protected static long guardedRamBytesUsed(Accountable a);1528706846;Returns 0 in the case where accountable is null, otherwise returns {@code ramBytesUsed()};protected static long guardedRamBytesUsed(Accountable a) {_        if (a == null) {_            return 0__        }_        return a.ramBytesUsed()__    };returns,0,in,the,case,where,accountable,is,null,otherwise,returns,code,ram,bytes,used;protected,static,long,guarded,ram,bytes,used,accountable,a,if,a,null,return,0,return,a,ram,bytes,used
Engine -> protected static long guardedRamBytesUsed(Accountable a);1528762805;Returns 0 in the case where accountable is null, otherwise returns {@code ramBytesUsed()};protected static long guardedRamBytesUsed(Accountable a) {_        if (a == null) {_            return 0__        }_        return a.ramBytesUsed()__    };returns,0,in,the,case,where,accountable,is,null,otherwise,returns,code,ram,bytes,used;protected,static,long,guarded,ram,bytes,used,accountable,a,if,a,null,return,0,return,a,ram,bytes,used
Engine -> protected static long guardedRamBytesUsed(Accountable a);1531910483;Returns 0 in the case where accountable is null, otherwise returns {@code ramBytesUsed()};protected static long guardedRamBytesUsed(Accountable a) {_        if (a == null) {_            return 0__        }_        return a.ramBytesUsed()__    };returns,0,in,the,case,where,accountable,is,null,otherwise,returns,code,ram,bytes,used;protected,static,long,guarded,ram,bytes,used,accountable,a,if,a,null,return,0,return,a,ram,bytes,used
Engine -> protected static long guardedRamBytesUsed(Accountable a);1532685069;Returns 0 in the case where accountable is null, otherwise returns {@code ramBytesUsed()};protected static long guardedRamBytesUsed(Accountable a) {_        if (a == null) {_            return 0__        }_        return a.ramBytesUsed()__    };returns,0,in,the,case,where,accountable,is,null,otherwise,returns,code,ram,bytes,used;protected,static,long,guarded,ram,bytes,used,accountable,a,if,a,null,return,0,return,a,ram,bytes,used
Engine -> protected static long guardedRamBytesUsed(Accountable a);1533295538;Returns 0 in the case where accountable is null, otherwise returns {@code ramBytesUsed()};protected static long guardedRamBytesUsed(Accountable a) {_        if (a == null) {_            return 0__        }_        return a.ramBytesUsed()__    };returns,0,in,the,case,where,accountable,is,null,otherwise,returns,code,ram,bytes,used;protected,static,long,guarded,ram,bytes,used,accountable,a,if,a,null,return,0,return,a,ram,bytes,used
Engine -> protected static long guardedRamBytesUsed(Accountable a);1535046779;Returns 0 in the case where accountable is null, otherwise returns {@code ramBytesUsed()};protected static long guardedRamBytesUsed(Accountable a) {_        if (a == null) {_            return 0__        }_        return a.ramBytesUsed()__    };returns,0,in,the,case,where,accountable,is,null,otherwise,returns,code,ram,bytes,used;protected,static,long,guarded,ram,bytes,used,accountable,a,if,a,null,return,0,return,a,ram,bytes,used
Engine -> protected static long guardedRamBytesUsed(Accountable a);1535723122;Returns 0 in the case where accountable is null, otherwise returns {@code ramBytesUsed()};protected static long guardedRamBytesUsed(Accountable a) {_        if (a == null) {_            return 0__        }_        return a.ramBytesUsed()__    };returns,0,in,the,case,where,accountable,is,null,otherwise,returns,code,ram,bytes,used;protected,static,long,guarded,ram,bytes,used,accountable,a,if,a,null,return,0,return,a,ram,bytes,used
Engine -> protected static long guardedRamBytesUsed(Accountable a);1535965276;Returns 0 in the case where accountable is null, otherwise returns {@code ramBytesUsed()};protected static long guardedRamBytesUsed(Accountable a) {_        if (a == null) {_            return 0__        }_        return a.ramBytesUsed()__    };returns,0,in,the,case,where,accountable,is,null,otherwise,returns,code,ram,bytes,used;protected,static,long,guarded,ram,bytes,used,accountable,a,if,a,null,return,0,return,a,ram,bytes,used
Engine -> protected static long guardedRamBytesUsed(Accountable a);1536314350;Returns 0 in the case where accountable is null, otherwise returns {@code ramBytesUsed()};protected static long guardedRamBytesUsed(Accountable a) {_        if (a == null) {_            return 0__        }_        return a.ramBytesUsed()__    };returns,0,in,the,case,where,accountable,is,null,otherwise,returns,code,ram,bytes,used;protected,static,long,guarded,ram,bytes,used,accountable,a,if,a,null,return,0,return,a,ram,bytes,used
Engine -> protected static long guardedRamBytesUsed(Accountable a);1536828374;Returns 0 in the case where accountable is null, otherwise returns {@code ramBytesUsed()};protected static long guardedRamBytesUsed(Accountable a) {_        if (a == null) {_            return 0__        }_        return a.ramBytesUsed()__    };returns,0,in,the,case,where,accountable,is,null,otherwise,returns,code,ram,bytes,used;protected,static,long,guarded,ram,bytes,used,accountable,a,if,a,null,return,0,return,a,ram,bytes,used
Engine -> protected static long guardedRamBytesUsed(Accountable a);1537371806;Returns 0 in the case where accountable is null, otherwise returns {@code ramBytesUsed()};protected static long guardedRamBytesUsed(Accountable a) {_        if (a == null) {_            return 0__        }_        return a.ramBytesUsed()__    };returns,0,in,the,case,where,accountable,is,null,otherwise,returns,code,ram,bytes,used;protected,static,long,guarded,ram,bytes,used,accountable,a,if,a,null,return,0,return,a,ram,bytes,used
Engine -> protected static long guardedRamBytesUsed(Accountable a);1537806831;Returns 0 in the case where accountable is null, otherwise returns {@code ramBytesUsed()};protected static long guardedRamBytesUsed(Accountable a) {_        if (a == null) {_            return 0__        }_        return a.ramBytesUsed()__    };returns,0,in,the,case,where,accountable,is,null,otherwise,returns,code,ram,bytes,used;protected,static,long,guarded,ram,bytes,used,accountable,a,if,a,null,return,0,return,a,ram,bytes,used
Engine -> protected static long guardedRamBytesUsed(Accountable a);1538067637;Returns 0 in the case where accountable is null, otherwise returns {@code ramBytesUsed()};protected static long guardedRamBytesUsed(Accountable a) {_        if (a == null) {_            return 0__        }_        return a.ramBytesUsed()__    };returns,0,in,the,case,where,accountable,is,null,otherwise,returns,code,ram,bytes,used;protected,static,long,guarded,ram,bytes,used,accountable,a,if,a,null,return,0,return,a,ram,bytes,used
Engine -> protected static long guardedRamBytesUsed(Accountable a);1538424609;Returns 0 in the case where accountable is null, otherwise returns {@code ramBytesUsed()};protected static long guardedRamBytesUsed(Accountable a) {_        if (a == null) {_            return 0__        }_        return a.ramBytesUsed()__    };returns,0,in,the,case,where,accountable,is,null,otherwise,returns,code,ram,bytes,used;protected,static,long,guarded,ram,bytes,used,accountable,a,if,a,null,return,0,return,a,ram,bytes,used
Engine -> protected static long guardedRamBytesUsed(Accountable a);1539723533;Returns 0 in the case where accountable is null, otherwise returns {@code ramBytesUsed()};protected static long guardedRamBytesUsed(Accountable a) {_        if (a == null) {_            return 0__        }_        return a.ramBytesUsed()__    };returns,0,in,the,case,where,accountable,is,null,otherwise,returns,code,ram,bytes,used;protected,static,long,guarded,ram,bytes,used,accountable,a,if,a,null,return,0,return,a,ram,bytes,used
Engine -> protected static long guardedRamBytesUsed(Accountable a);1541618615;Returns 0 in the case where accountable is null, otherwise returns {@code ramBytesUsed()};protected static long guardedRamBytesUsed(Accountable a) {_        if (a == null) {_            return 0__        }_        return a.ramBytesUsed()__    };returns,0,in,the,case,where,accountable,is,null,otherwise,returns,code,ram,bytes,used;protected,static,long,guarded,ram,bytes,used,accountable,a,if,a,null,return,0,return,a,ram,bytes,used
Engine -> protected static long guardedRamBytesUsed(Accountable a);1542697754;Returns 0 in the case where accountable is null, otherwise returns {@code ramBytesUsed()};protected static long guardedRamBytesUsed(Accountable a) {_        if (a == null) {_            return 0__        }_        return a.ramBytesUsed()__    };returns,0,in,the,case,where,accountable,is,null,otherwise,returns,code,ram,bytes,used;protected,static,long,guarded,ram,bytes,used,accountable,a,if,a,null,return,0,return,a,ram,bytes,used
Engine -> protected static long guardedRamBytesUsed(Accountable a);1543047942;Returns 0 in the case where accountable is null, otherwise returns {@code ramBytesUsed()};protected static long guardedRamBytesUsed(Accountable a) {_        if (a == null) {_            return 0__        }_        return a.ramBytesUsed()__    };returns,0,in,the,case,where,accountable,is,null,otherwise,returns,code,ram,bytes,used;protected,static,long,guarded,ram,bytes,used,accountable,a,if,a,null,return,0,return,a,ram,bytes,used
Engine -> protected static long guardedRamBytesUsed(Accountable a);1544545090;Returns 0 in the case where accountable is null, otherwise returns {@code ramBytesUsed()};protected static long guardedRamBytesUsed(Accountable a) {_        if (a == null) {_            return 0__        }_        return a.ramBytesUsed()__    };returns,0,in,the,case,where,accountable,is,null,otherwise,returns,code,ram,bytes,used;protected,static,long,guarded,ram,bytes,used,accountable,a,if,a,null,return,0,return,a,ram,bytes,used
Engine -> protected static long guardedRamBytesUsed(Accountable a);1544684920;Returns 0 in the case where accountable is null, otherwise returns {@code ramBytesUsed()};protected static long guardedRamBytesUsed(Accountable a) {_        if (a == null) {_            return 0__        }_        return a.ramBytesUsed()__    };returns,0,in,the,case,where,accountable,is,null,otherwise,returns,code,ram,bytes,used;protected,static,long,guarded,ram,bytes,used,accountable,a,if,a,null,return,0,return,a,ram,bytes,used
Engine -> protected static long guardedRamBytesUsed(Accountable a);1545140118;Returns 0 in the case where accountable is null, otherwise returns {@code ramBytesUsed()};protected static long guardedRamBytesUsed(Accountable a) {_        if (a == null) {_            return 0__        }_        return a.ramBytesUsed()__    };returns,0,in,the,case,where,accountable,is,null,otherwise,returns,code,ram,bytes,used;protected,static,long,guarded,ram,bytes,used,accountable,a,if,a,null,return,0,return,a,ram,bytes,used
Engine -> protected static long guardedRamBytesUsed(Accountable a);1545221705;Returns 0 in the case where accountable is null, otherwise returns {@code ramBytesUsed()};protected static long guardedRamBytesUsed(Accountable a) {_        if (a == null) {_            return 0__        }_        return a.ramBytesUsed()__    };returns,0,in,the,case,where,accountable,is,null,otherwise,returns,code,ram,bytes,used;protected,static,long,guarded,ram,bytes,used,accountable,a,if,a,null,return,0,return,a,ram,bytes,used
Engine -> protected static long guardedRamBytesUsed(Accountable a);1547332999;Returns 0 in the case where accountable is null, otherwise returns {@code ramBytesUsed()};protected static long guardedRamBytesUsed(Accountable a) {_        if (a == null) {_            return 0__        }_        return a.ramBytesUsed()__    };returns,0,in,the,case,where,accountable,is,null,otherwise,returns,code,ram,bytes,used;protected,static,long,guarded,ram,bytes,used,accountable,a,if,a,null,return,0,return,a,ram,bytes,used
Engine -> protected static long guardedRamBytesUsed(Accountable a);1548771485;Returns 0 in the case where accountable is null, otherwise returns {@code ramBytesUsed()};protected static long guardedRamBytesUsed(Accountable a) {_        if (a == null) {_            return 0__        }_        return a.ramBytesUsed()__    };returns,0,in,the,case,where,accountable,is,null,otherwise,returns,code,ram,bytes,used;protected,static,long,guarded,ram,bytes,used,accountable,a,if,a,null,return,0,return,a,ram,bytes,used
Engine -> protected static long guardedRamBytesUsed(Accountable a);1549891630;Returns 0 in the case where accountable is null, otherwise returns {@code ramBytesUsed()};protected static long guardedRamBytesUsed(Accountable a) {_        if (a == null) {_            return 0__        }_        return a.ramBytesUsed()__    };returns,0,in,the,case,where,accountable,is,null,otherwise,returns,code,ram,bytes,used;protected,static,long,guarded,ram,bytes,used,accountable,a,if,a,null,return,0,return,a,ram,bytes,used
Engine -> protected static long guardedRamBytesUsed(Accountable a);1549975032;Returns 0 in the case where accountable is null, otherwise returns {@code ramBytesUsed()};protected static long guardedRamBytesUsed(Accountable a) {_        if (a == null) {_            return 0__        }_        return a.ramBytesUsed()__    };returns,0,in,the,case,where,accountable,is,null,otherwise,returns,code,ram,bytes,used;protected,static,long,guarded,ram,bytes,used,accountable,a,if,a,null,return,0,return,a,ram,bytes,used
Engine -> protected static long guardedRamBytesUsed(Accountable a);1550220204;Returns 0 in the case where accountable is null, otherwise returns {@code ramBytesUsed()};protected static long guardedRamBytesUsed(Accountable a) {_        if (a == null) {_            return 0__        }_        return a.ramBytesUsed()__    };returns,0,in,the,case,where,accountable,is,null,otherwise,returns,code,ram,bytes,used;protected,static,long,guarded,ram,bytes,used,accountable,a,if,a,null,return,0,return,a,ram,bytes,used
Engine -> protected static long guardedRamBytesUsed(Accountable a);1550526771;Returns 0 in the case where accountable is null, otherwise returns {@code ramBytesUsed()};protected static long guardedRamBytesUsed(Accountable a) {_        if (a == null) {_            return 0__        }_        return a.ramBytesUsed()__    };returns,0,in,the,case,where,accountable,is,null,otherwise,returns,code,ram,bytes,used;protected,static,long,guarded,ram,bytes,used,accountable,a,if,a,null,return,0,return,a,ram,bytes,used
Engine -> protected static long guardedRamBytesUsed(Accountable a);1551110274;Returns 0 in the case where accountable is null, otherwise returns {@code ramBytesUsed()};protected static long guardedRamBytesUsed(Accountable a) {_        if (a == null) {_            return 0__        }_        return a.ramBytesUsed()__    };returns,0,in,the,case,where,accountable,is,null,otherwise,returns,code,ram,bytes,used;protected,static,long,guarded,ram,bytes,used,accountable,a,if,a,null,return,0,return,a,ram,bytes,used
Engine -> protected static long guardedRamBytesUsed(Accountable a);1551126708;Returns 0 in the case where accountable is null, otherwise returns {@code ramBytesUsed()};protected static long guardedRamBytesUsed(Accountable a) {_        if (a == null) {_            return 0__        }_        return a.ramBytesUsed()__    };returns,0,in,the,case,where,accountable,is,null,otherwise,returns,code,ram,bytes,used;protected,static,long,guarded,ram,bytes,used,accountable,a,if,a,null,return,0,return,a,ram,bytes,used
Engine -> public abstract long getWritingBytes()_;1524684173;Returns how many bytes we are currently moving from heap to disk;public abstract long getWritingBytes()_;returns,how,many,bytes,we,are,currently,moving,from,heap,to,disk;public,abstract,long,get,writing,bytes
Engine -> public abstract long getWritingBytes()_;1525162917;Returns how many bytes we are currently moving from heap to disk;public abstract long getWritingBytes()_;returns,how,many,bytes,we,are,currently,moving,from,heap,to,disk;public,abstract,long,get,writing,bytes
Engine -> public abstract long getWritingBytes()_;1525334055;Returns how many bytes we are currently moving from heap to disk;public abstract long getWritingBytes()_;returns,how,many,bytes,we,are,currently,moving,from,heap,to,disk;public,abstract,long,get,writing,bytes
Engine -> public abstract long getWritingBytes()_;1527583663;Returns how many bytes we are currently moving from heap to disk;public abstract long getWritingBytes()_;returns,how,many,bytes,we,are,currently,moving,from,heap,to,disk;public,abstract,long,get,writing,bytes
Engine -> public abstract long getWritingBytes()_;1528706846;Returns how many bytes we are currently moving from heap to disk;public abstract long getWritingBytes()_;returns,how,many,bytes,we,are,currently,moving,from,heap,to,disk;public,abstract,long,get,writing,bytes
Engine -> public abstract long getWritingBytes()_;1528762805;Returns how many bytes we are currently moving from heap to disk;public abstract long getWritingBytes()_;returns,how,many,bytes,we,are,currently,moving,from,heap,to,disk;public,abstract,long,get,writing,bytes
Engine -> public abstract long getWritingBytes()_;1531910483;Returns how many bytes we are currently moving from heap to disk;public abstract long getWritingBytes()_;returns,how,many,bytes,we,are,currently,moving,from,heap,to,disk;public,abstract,long,get,writing,bytes
Engine -> public abstract long getWritingBytes()_;1532685069;Returns how many bytes we are currently moving from heap to disk;public abstract long getWritingBytes()_;returns,how,many,bytes,we,are,currently,moving,from,heap,to,disk;public,abstract,long,get,writing,bytes
Engine -> public abstract long getWritingBytes()_;1533295538;Returns how many bytes we are currently moving from heap to disk;public abstract long getWritingBytes()_;returns,how,many,bytes,we,are,currently,moving,from,heap,to,disk;public,abstract,long,get,writing,bytes
Engine -> public abstract long getWritingBytes()_;1535046779;Returns how many bytes we are currently moving from heap to disk;public abstract long getWritingBytes()_;returns,how,many,bytes,we,are,currently,moving,from,heap,to,disk;public,abstract,long,get,writing,bytes
Engine -> public abstract long getWritingBytes()_;1535723122;Returns how many bytes we are currently moving from heap to disk;public abstract long getWritingBytes()_;returns,how,many,bytes,we,are,currently,moving,from,heap,to,disk;public,abstract,long,get,writing,bytes
Engine -> public abstract long getWritingBytes()_;1535965276;Returns how many bytes we are currently moving from heap to disk;public abstract long getWritingBytes()_;returns,how,many,bytes,we,are,currently,moving,from,heap,to,disk;public,abstract,long,get,writing,bytes
Engine -> public abstract long getWritingBytes()_;1536314350;Returns how many bytes we are currently moving from heap to disk;public abstract long getWritingBytes()_;returns,how,many,bytes,we,are,currently,moving,from,heap,to,disk;public,abstract,long,get,writing,bytes
Engine -> public abstract long getWritingBytes()_;1536828374;Returns how many bytes we are currently moving from heap to disk;public abstract long getWritingBytes()_;returns,how,many,bytes,we,are,currently,moving,from,heap,to,disk;public,abstract,long,get,writing,bytes
Engine -> public abstract long getWritingBytes()_;1537371806;Returns how many bytes we are currently moving from heap to disk;public abstract long getWritingBytes()_;returns,how,many,bytes,we,are,currently,moving,from,heap,to,disk;public,abstract,long,get,writing,bytes
Engine -> public abstract long getWritingBytes()_;1537806831;Returns how many bytes we are currently moving from heap to disk;public abstract long getWritingBytes()_;returns,how,many,bytes,we,are,currently,moving,from,heap,to,disk;public,abstract,long,get,writing,bytes
Engine -> public abstract long getWritingBytes()_;1538067637;Returns how many bytes we are currently moving from heap to disk;public abstract long getWritingBytes()_;returns,how,many,bytes,we,are,currently,moving,from,heap,to,disk;public,abstract,long,get,writing,bytes
Engine -> public abstract long getWritingBytes()_;1538424609;Returns how many bytes we are currently moving from heap to disk;public abstract long getWritingBytes()_;returns,how,many,bytes,we,are,currently,moving,from,heap,to,disk;public,abstract,long,get,writing,bytes
Engine -> public abstract long getWritingBytes()_;1539723533;Returns how many bytes we are currently moving from heap to disk;public abstract long getWritingBytes()_;returns,how,many,bytes,we,are,currently,moving,from,heap,to,disk;public,abstract,long,get,writing,bytes
Engine -> public abstract long getWritingBytes()_;1541618615;Returns how many bytes we are currently moving from heap to disk;public abstract long getWritingBytes()_;returns,how,many,bytes,we,are,currently,moving,from,heap,to,disk;public,abstract,long,get,writing,bytes
Engine -> public abstract long getWritingBytes()_;1542697754;Returns how many bytes we are currently moving from heap to disk;public abstract long getWritingBytes()_;returns,how,many,bytes,we,are,currently,moving,from,heap,to,disk;public,abstract,long,get,writing,bytes
Engine -> public abstract long getWritingBytes()_;1543047942;Returns how many bytes we are currently moving from heap to disk;public abstract long getWritingBytes()_;returns,how,many,bytes,we,are,currently,moving,from,heap,to,disk;public,abstract,long,get,writing,bytes
Engine -> public abstract long getWritingBytes()_;1544545090;Returns how many bytes we are currently moving from heap to disk;public abstract long getWritingBytes()_;returns,how,many,bytes,we,are,currently,moving,from,heap,to,disk;public,abstract,long,get,writing,bytes
Engine -> public abstract long getWritingBytes()_;1544684920;Returns how many bytes we are currently moving from heap to disk;public abstract long getWritingBytes()_;returns,how,many,bytes,we,are,currently,moving,from,heap,to,disk;public,abstract,long,get,writing,bytes
Engine -> public abstract long getWritingBytes()_;1545140118;Returns how many bytes we are currently moving from heap to disk;public abstract long getWritingBytes()_;returns,how,many,bytes,we,are,currently,moving,from,heap,to,disk;public,abstract,long,get,writing,bytes
Engine -> public abstract long getWritingBytes()_;1545221705;Returns how many bytes we are currently moving from heap to disk;public abstract long getWritingBytes()_;returns,how,many,bytes,we,are,currently,moving,from,heap,to,disk;public,abstract,long,get,writing,bytes
Engine -> public abstract long getWritingBytes()_;1547332999;Returns how many bytes we are currently moving from heap to disk;public abstract long getWritingBytes()_;returns,how,many,bytes,we,are,currently,moving,from,heap,to,disk;public,abstract,long,get,writing,bytes
Engine -> public abstract long getWritingBytes()_;1548771485;Returns how many bytes we are currently moving from heap to disk;public abstract long getWritingBytes()_;returns,how,many,bytes,we,are,currently,moving,from,heap,to,disk;public,abstract,long,get,writing,bytes
Engine -> public abstract long getWritingBytes()_;1549891630;Returns how many bytes we are currently moving from heap to disk;public abstract long getWritingBytes()_;returns,how,many,bytes,we,are,currently,moving,from,heap,to,disk;public,abstract,long,get,writing,bytes
Engine -> public abstract long getWritingBytes()_;1549975032;Returns how many bytes we are currently moving from heap to disk;public abstract long getWritingBytes()_;returns,how,many,bytes,we,are,currently,moving,from,heap,to,disk;public,abstract,long,get,writing,bytes
Engine -> public abstract long getWritingBytes()_;1550220204;Returns how many bytes we are currently moving from heap to disk;public abstract long getWritingBytes()_;returns,how,many,bytes,we,are,currently,moving,from,heap,to,disk;public,abstract,long,get,writing,bytes
Engine -> public abstract long getWritingBytes()_;1550526771;Returns how many bytes we are currently moving from heap to disk;public abstract long getWritingBytes()_;returns,how,many,bytes,we,are,currently,moving,from,heap,to,disk;public,abstract,long,get,writing,bytes
Engine -> public abstract long getWritingBytes()_;1551110274;Returns how many bytes we are currently moving from heap to disk;public abstract long getWritingBytes()_;returns,how,many,bytes,we,are,currently,moving,from,heap,to,disk;public,abstract,long,get,writing,bytes
Engine -> public abstract long getWritingBytes()_;1551126708;Returns how many bytes we are currently moving from heap to disk;public abstract long getWritingBytes()_;returns,how,many,bytes,we,are,currently,moving,from,heap,to,disk;public,abstract,long,get,writing,bytes
Engine -> public abstract int estimateNumberOfHistoryOperations(String source,                                                                 MapperService mapperService, long startingSeqNo) throws IOException_;1542697754;Returns the estimated number of history operations whose seq# at least {@code startingSeqNo}(inclusive) in this engine.;public abstract int estimateNumberOfHistoryOperations(String source,_                                                                MapperService mapperService, long startingSeqNo) throws IOException_;returns,the,estimated,number,of,history,operations,whose,seq,at,least,code,starting,seq,no,inclusive,in,this,engine;public,abstract,int,estimate,number,of,history,operations,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract int estimateNumberOfHistoryOperations(String source,                                                                 MapperService mapperService, long startingSeqNo) throws IOException_;1543047942;Returns the estimated number of history operations whose seq# at least {@code startingSeqNo}(inclusive) in this engine.;public abstract int estimateNumberOfHistoryOperations(String source,_                                                                MapperService mapperService, long startingSeqNo) throws IOException_;returns,the,estimated,number,of,history,operations,whose,seq,at,least,code,starting,seq,no,inclusive,in,this,engine;public,abstract,int,estimate,number,of,history,operations,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract int estimateNumberOfHistoryOperations(String source,                                                                 MapperService mapperService, long startingSeqNo) throws IOException_;1544545090;Returns the estimated number of history operations whose seq# at least {@code startingSeqNo}(inclusive) in this engine.;public abstract int estimateNumberOfHistoryOperations(String source,_                                                                MapperService mapperService, long startingSeqNo) throws IOException_;returns,the,estimated,number,of,history,operations,whose,seq,at,least,code,starting,seq,no,inclusive,in,this,engine;public,abstract,int,estimate,number,of,history,operations,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract int estimateNumberOfHistoryOperations(String source,                                                                 MapperService mapperService, long startingSeqNo) throws IOException_;1544684920;Returns the estimated number of history operations whose seq# at least {@code startingSeqNo}(inclusive) in this engine.;public abstract int estimateNumberOfHistoryOperations(String source,_                                                                MapperService mapperService, long startingSeqNo) throws IOException_;returns,the,estimated,number,of,history,operations,whose,seq,at,least,code,starting,seq,no,inclusive,in,this,engine;public,abstract,int,estimate,number,of,history,operations,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract int estimateNumberOfHistoryOperations(String source,                                                                 MapperService mapperService, long startingSeqNo) throws IOException_;1545140118;Returns the estimated number of history operations whose seq# at least {@code startingSeqNo}(inclusive) in this engine.;public abstract int estimateNumberOfHistoryOperations(String source,_                                                                MapperService mapperService, long startingSeqNo) throws IOException_;returns,the,estimated,number,of,history,operations,whose,seq,at,least,code,starting,seq,no,inclusive,in,this,engine;public,abstract,int,estimate,number,of,history,operations,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract int estimateNumberOfHistoryOperations(String source,                                                                 MapperService mapperService, long startingSeqNo) throws IOException_;1545221705;Returns the estimated number of history operations whose seq# at least {@code startingSeqNo}(inclusive) in this engine.;public abstract int estimateNumberOfHistoryOperations(String source,_                                                                MapperService mapperService, long startingSeqNo) throws IOException_;returns,the,estimated,number,of,history,operations,whose,seq,at,least,code,starting,seq,no,inclusive,in,this,engine;public,abstract,int,estimate,number,of,history,operations,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract int estimateNumberOfHistoryOperations(String source,                                                                 MapperService mapperService, long startingSeqNo) throws IOException_;1547332999;Returns the estimated number of history operations whose seq# at least {@code startingSeqNo}(inclusive) in this engine.;public abstract int estimateNumberOfHistoryOperations(String source,_                                                                MapperService mapperService, long startingSeqNo) throws IOException_;returns,the,estimated,number,of,history,operations,whose,seq,at,least,code,starting,seq,no,inclusive,in,this,engine;public,abstract,int,estimate,number,of,history,operations,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract int estimateNumberOfHistoryOperations(String source,                                                                 MapperService mapperService, long startingSeqNo) throws IOException_;1548771485;Returns the estimated number of history operations whose seq# at least {@code startingSeqNo}(inclusive) in this engine.;public abstract int estimateNumberOfHistoryOperations(String source,_                                                                MapperService mapperService, long startingSeqNo) throws IOException_;returns,the,estimated,number,of,history,operations,whose,seq,at,least,code,starting,seq,no,inclusive,in,this,engine;public,abstract,int,estimate,number,of,history,operations,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract int estimateNumberOfHistoryOperations(String source,                                                                 MapperService mapperService, long startingSeqNo) throws IOException_;1549891630;Returns the estimated number of history operations whose seq# at least {@code startingSeqNo}(inclusive) in this engine.;public abstract int estimateNumberOfHistoryOperations(String source,_                                                                MapperService mapperService, long startingSeqNo) throws IOException_;returns,the,estimated,number,of,history,operations,whose,seq,at,least,code,starting,seq,no,inclusive,in,this,engine;public,abstract,int,estimate,number,of,history,operations,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract int estimateNumberOfHistoryOperations(String source,                                                                 MapperService mapperService, long startingSeqNo) throws IOException_;1549975032;Returns the estimated number of history operations whose seq# at least {@code startingSeqNo}(inclusive) in this engine.;public abstract int estimateNumberOfHistoryOperations(String source,_                                                                MapperService mapperService, long startingSeqNo) throws IOException_;returns,the,estimated,number,of,history,operations,whose,seq,at,least,code,starting,seq,no,inclusive,in,this,engine;public,abstract,int,estimate,number,of,history,operations,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract int estimateNumberOfHistoryOperations(String source,                                                                 MapperService mapperService, long startingSeqNo) throws IOException_;1550220204;Returns the estimated number of history operations whose seq# at least {@code startingSeqNo}(inclusive) in this engine.;public abstract int estimateNumberOfHistoryOperations(String source,_                                                                MapperService mapperService, long startingSeqNo) throws IOException_;returns,the,estimated,number,of,history,operations,whose,seq,at,least,code,starting,seq,no,inclusive,in,this,engine;public,abstract,int,estimate,number,of,history,operations,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract int estimateNumberOfHistoryOperations(String source,                                                                 MapperService mapperService, long startingSeqNo) throws IOException_;1550526771;Returns the estimated number of history operations whose seq# at least {@code startingSeqNo}(inclusive) in this engine.;public abstract int estimateNumberOfHistoryOperations(String source,_                                                                MapperService mapperService, long startingSeqNo) throws IOException_;returns,the,estimated,number,of,history,operations,whose,seq,at,least,code,starting,seq,no,inclusive,in,this,engine;public,abstract,int,estimate,number,of,history,operations,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract int estimateNumberOfHistoryOperations(String source,                                                                 MapperService mapperService, long startingSeqNo) throws IOException_;1551110274;Returns the estimated number of history operations whose seq# at least {@code startingSeqNo}(inclusive) in this engine.;public abstract int estimateNumberOfHistoryOperations(String source,_                                                                MapperService mapperService, long startingSeqNo) throws IOException_;returns,the,estimated,number,of,history,operations,whose,seq,at,least,code,starting,seq,no,inclusive,in,this,engine;public,abstract,int,estimate,number,of,history,operations,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract int estimateNumberOfHistoryOperations(String source,                                                                 MapperService mapperService, long startingSeqNo) throws IOException_;1551126708;Returns the estimated number of history operations whose seq# at least {@code startingSeqNo}(inclusive) in this engine.;public abstract int estimateNumberOfHistoryOperations(String source,_                                                                MapperService mapperService, long startingSeqNo) throws IOException_;returns,the,estimated,number,of,history,operations,whose,seq,at,least,code,starting,seq,no,inclusive,in,this,engine;public,abstract,int,estimate,number,of,history,operations,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract void trimTranslog() throws EngineException_;1524684173;checks and removes translog files that no longer need to be retained. See_{@link org.elasticsearch.index.translog.TranslogDeletionPolicy} for details;public abstract void trimTranslog() throws EngineException_;checks,and,removes,translog,files,that,no,longer,need,to,be,retained,see,link,org,elasticsearch,index,translog,translog,deletion,policy,for,details;public,abstract,void,trim,translog,throws,engine,exception
Engine -> public abstract void trimTranslog() throws EngineException_;1525162917;checks and removes translog files that no longer need to be retained. See_{@link org.elasticsearch.index.translog.TranslogDeletionPolicy} for details;public abstract void trimTranslog() throws EngineException_;checks,and,removes,translog,files,that,no,longer,need,to,be,retained,see,link,org,elasticsearch,index,translog,translog,deletion,policy,for,details;public,abstract,void,trim,translog,throws,engine,exception
Engine -> public abstract void trimTranslog() throws EngineException_;1525334055;checks and removes translog files that no longer need to be retained. See_{@link org.elasticsearch.index.translog.TranslogDeletionPolicy} for details;public abstract void trimTranslog() throws EngineException_;checks,and,removes,translog,files,that,no,longer,need,to,be,retained,see,link,org,elasticsearch,index,translog,translog,deletion,policy,for,details;public,abstract,void,trim,translog,throws,engine,exception
Engine -> public abstract void trimTranslog() throws EngineException_;1527583663;checks and removes translog files that no longer need to be retained. See_{@link org.elasticsearch.index.translog.TranslogDeletionPolicy} for details;public abstract void trimTranslog() throws EngineException_;checks,and,removes,translog,files,that,no,longer,need,to,be,retained,see,link,org,elasticsearch,index,translog,translog,deletion,policy,for,details;public,abstract,void,trim,translog,throws,engine,exception
Engine -> public abstract Engine recoverFromTranslog(TranslogRecoveryRunner translogRecoveryRunner, long recoverUpToSeqNo) throws IOException_;1536314350;Performs recovery from the transaction log up to {@code recoverUpToSeqNo} (inclusive)._This operation will close the engine if the recovery fails.__@param translogRecoveryRunner the translog recovery runner_@param recoverUpToSeqNo       the upper bound, inclusive, of sequence number to be recovered;public abstract Engine recoverFromTranslog(TranslogRecoveryRunner translogRecoveryRunner, long recoverUpToSeqNo) throws IOException_;performs,recovery,from,the,transaction,log,up,to,code,recover,up,to,seq,no,inclusive,this,operation,will,close,the,engine,if,the,recovery,fails,param,translog,recovery,runner,the,translog,recovery,runner,param,recover,up,to,seq,no,the,upper,bound,inclusive,of,sequence,number,to,be,recovered;public,abstract,engine,recover,from,translog,translog,recovery,runner,translog,recovery,runner,long,recover,up,to,seq,no,throws,ioexception
Engine -> public abstract Engine recoverFromTranslog(TranslogRecoveryRunner translogRecoveryRunner, long recoverUpToSeqNo) throws IOException_;1536828374;Performs recovery from the transaction log up to {@code recoverUpToSeqNo} (inclusive)._This operation will close the engine if the recovery fails.__@param translogRecoveryRunner the translog recovery runner_@param recoverUpToSeqNo       the upper bound, inclusive, of sequence number to be recovered;public abstract Engine recoverFromTranslog(TranslogRecoveryRunner translogRecoveryRunner, long recoverUpToSeqNo) throws IOException_;performs,recovery,from,the,transaction,log,up,to,code,recover,up,to,seq,no,inclusive,this,operation,will,close,the,engine,if,the,recovery,fails,param,translog,recovery,runner,the,translog,recovery,runner,param,recover,up,to,seq,no,the,upper,bound,inclusive,of,sequence,number,to,be,recovered;public,abstract,engine,recover,from,translog,translog,recovery,runner,translog,recovery,runner,long,recover,up,to,seq,no,throws,ioexception
Engine -> public abstract Engine recoverFromTranslog(TranslogRecoveryRunner translogRecoveryRunner, long recoverUpToSeqNo) throws IOException_;1537371806;Performs recovery from the transaction log up to {@code recoverUpToSeqNo} (inclusive)._This operation will close the engine if the recovery fails.__@param translogRecoveryRunner the translog recovery runner_@param recoverUpToSeqNo       the upper bound, inclusive, of sequence number to be recovered;public abstract Engine recoverFromTranslog(TranslogRecoveryRunner translogRecoveryRunner, long recoverUpToSeqNo) throws IOException_;performs,recovery,from,the,transaction,log,up,to,code,recover,up,to,seq,no,inclusive,this,operation,will,close,the,engine,if,the,recovery,fails,param,translog,recovery,runner,the,translog,recovery,runner,param,recover,up,to,seq,no,the,upper,bound,inclusive,of,sequence,number,to,be,recovered;public,abstract,engine,recover,from,translog,translog,recovery,runner,translog,recovery,runner,long,recover,up,to,seq,no,throws,ioexception
Engine -> public abstract Engine recoverFromTranslog(TranslogRecoveryRunner translogRecoveryRunner, long recoverUpToSeqNo) throws IOException_;1537806831;Performs recovery from the transaction log up to {@code recoverUpToSeqNo} (inclusive)._This operation will close the engine if the recovery fails.__@param translogRecoveryRunner the translog recovery runner_@param recoverUpToSeqNo       the upper bound, inclusive, of sequence number to be recovered;public abstract Engine recoverFromTranslog(TranslogRecoveryRunner translogRecoveryRunner, long recoverUpToSeqNo) throws IOException_;performs,recovery,from,the,transaction,log,up,to,code,recover,up,to,seq,no,inclusive,this,operation,will,close,the,engine,if,the,recovery,fails,param,translog,recovery,runner,the,translog,recovery,runner,param,recover,up,to,seq,no,the,upper,bound,inclusive,of,sequence,number,to,be,recovered;public,abstract,engine,recover,from,translog,translog,recovery,runner,translog,recovery,runner,long,recover,up,to,seq,no,throws,ioexception
Engine -> public abstract Engine recoverFromTranslog(TranslogRecoveryRunner translogRecoveryRunner, long recoverUpToSeqNo) throws IOException_;1538067637;Performs recovery from the transaction log up to {@code recoverUpToSeqNo} (inclusive)._This operation will close the engine if the recovery fails.__@param translogRecoveryRunner the translog recovery runner_@param recoverUpToSeqNo       the upper bound, inclusive, of sequence number to be recovered;public abstract Engine recoverFromTranslog(TranslogRecoveryRunner translogRecoveryRunner, long recoverUpToSeqNo) throws IOException_;performs,recovery,from,the,transaction,log,up,to,code,recover,up,to,seq,no,inclusive,this,operation,will,close,the,engine,if,the,recovery,fails,param,translog,recovery,runner,the,translog,recovery,runner,param,recover,up,to,seq,no,the,upper,bound,inclusive,of,sequence,number,to,be,recovered;public,abstract,engine,recover,from,translog,translog,recovery,runner,translog,recovery,runner,long,recover,up,to,seq,no,throws,ioexception
Engine -> public abstract Engine recoverFromTranslog(TranslogRecoveryRunner translogRecoveryRunner, long recoverUpToSeqNo) throws IOException_;1538424609;Performs recovery from the transaction log up to {@code recoverUpToSeqNo} (inclusive)._This operation will close the engine if the recovery fails.__@param translogRecoveryRunner the translog recovery runner_@param recoverUpToSeqNo       the upper bound, inclusive, of sequence number to be recovered;public abstract Engine recoverFromTranslog(TranslogRecoveryRunner translogRecoveryRunner, long recoverUpToSeqNo) throws IOException_;performs,recovery,from,the,transaction,log,up,to,code,recover,up,to,seq,no,inclusive,this,operation,will,close,the,engine,if,the,recovery,fails,param,translog,recovery,runner,the,translog,recovery,runner,param,recover,up,to,seq,no,the,upper,bound,inclusive,of,sequence,number,to,be,recovered;public,abstract,engine,recover,from,translog,translog,recovery,runner,translog,recovery,runner,long,recover,up,to,seq,no,throws,ioexception
Engine -> public abstract Engine recoverFromTranslog(TranslogRecoveryRunner translogRecoveryRunner, long recoverUpToSeqNo) throws IOException_;1539723533;Performs recovery from the transaction log up to {@code recoverUpToSeqNo} (inclusive)._This operation will close the engine if the recovery fails.__@param translogRecoveryRunner the translog recovery runner_@param recoverUpToSeqNo       the upper bound, inclusive, of sequence number to be recovered;public abstract Engine recoverFromTranslog(TranslogRecoveryRunner translogRecoveryRunner, long recoverUpToSeqNo) throws IOException_;performs,recovery,from,the,transaction,log,up,to,code,recover,up,to,seq,no,inclusive,this,operation,will,close,the,engine,if,the,recovery,fails,param,translog,recovery,runner,the,translog,recovery,runner,param,recover,up,to,seq,no,the,upper,bound,inclusive,of,sequence,number,to,be,recovered;public,abstract,engine,recover,from,translog,translog,recovery,runner,translog,recovery,runner,long,recover,up,to,seq,no,throws,ioexception
Engine -> public abstract Engine recoverFromTranslog(TranslogRecoveryRunner translogRecoveryRunner, long recoverUpToSeqNo) throws IOException_;1541618615;Performs recovery from the transaction log up to {@code recoverUpToSeqNo} (inclusive)._This operation will close the engine if the recovery fails.__@param translogRecoveryRunner the translog recovery runner_@param recoverUpToSeqNo       the upper bound, inclusive, of sequence number to be recovered;public abstract Engine recoverFromTranslog(TranslogRecoveryRunner translogRecoveryRunner, long recoverUpToSeqNo) throws IOException_;performs,recovery,from,the,transaction,log,up,to,code,recover,up,to,seq,no,inclusive,this,operation,will,close,the,engine,if,the,recovery,fails,param,translog,recovery,runner,the,translog,recovery,runner,param,recover,up,to,seq,no,the,upper,bound,inclusive,of,sequence,number,to,be,recovered;public,abstract,engine,recover,from,translog,translog,recovery,runner,translog,recovery,runner,long,recover,up,to,seq,no,throws,ioexception
Engine -> public abstract Engine recoverFromTranslog(TranslogRecoveryRunner translogRecoveryRunner, long recoverUpToSeqNo) throws IOException_;1542697754;Performs recovery from the transaction log up to {@code recoverUpToSeqNo} (inclusive)._This operation will close the engine if the recovery fails.__@param translogRecoveryRunner the translog recovery runner_@param recoverUpToSeqNo       the upper bound, inclusive, of sequence number to be recovered;public abstract Engine recoverFromTranslog(TranslogRecoveryRunner translogRecoveryRunner, long recoverUpToSeqNo) throws IOException_;performs,recovery,from,the,transaction,log,up,to,code,recover,up,to,seq,no,inclusive,this,operation,will,close,the,engine,if,the,recovery,fails,param,translog,recovery,runner,the,translog,recovery,runner,param,recover,up,to,seq,no,the,upper,bound,inclusive,of,sequence,number,to,be,recovered;public,abstract,engine,recover,from,translog,translog,recovery,runner,translog,recovery,runner,long,recover,up,to,seq,no,throws,ioexception
Engine -> public abstract Engine recoverFromTranslog(TranslogRecoveryRunner translogRecoveryRunner, long recoverUpToSeqNo) throws IOException_;1543047942;Performs recovery from the transaction log up to {@code recoverUpToSeqNo} (inclusive)._This operation will close the engine if the recovery fails.__@param translogRecoveryRunner the translog recovery runner_@param recoverUpToSeqNo       the upper bound, inclusive, of sequence number to be recovered;public abstract Engine recoverFromTranslog(TranslogRecoveryRunner translogRecoveryRunner, long recoverUpToSeqNo) throws IOException_;performs,recovery,from,the,transaction,log,up,to,code,recover,up,to,seq,no,inclusive,this,operation,will,close,the,engine,if,the,recovery,fails,param,translog,recovery,runner,the,translog,recovery,runner,param,recover,up,to,seq,no,the,upper,bound,inclusive,of,sequence,number,to,be,recovered;public,abstract,engine,recover,from,translog,translog,recovery,runner,translog,recovery,runner,long,recover,up,to,seq,no,throws,ioexception
Engine -> public abstract Engine recoverFromTranslog(TranslogRecoveryRunner translogRecoveryRunner, long recoverUpToSeqNo) throws IOException_;1544545090;Performs recovery from the transaction log up to {@code recoverUpToSeqNo} (inclusive)._This operation will close the engine if the recovery fails.__@param translogRecoveryRunner the translog recovery runner_@param recoverUpToSeqNo       the upper bound, inclusive, of sequence number to be recovered;public abstract Engine recoverFromTranslog(TranslogRecoveryRunner translogRecoveryRunner, long recoverUpToSeqNo) throws IOException_;performs,recovery,from,the,transaction,log,up,to,code,recover,up,to,seq,no,inclusive,this,operation,will,close,the,engine,if,the,recovery,fails,param,translog,recovery,runner,the,translog,recovery,runner,param,recover,up,to,seq,no,the,upper,bound,inclusive,of,sequence,number,to,be,recovered;public,abstract,engine,recover,from,translog,translog,recovery,runner,translog,recovery,runner,long,recover,up,to,seq,no,throws,ioexception
Engine -> public abstract Engine recoverFromTranslog(TranslogRecoveryRunner translogRecoveryRunner, long recoverUpToSeqNo) throws IOException_;1544684920;Performs recovery from the transaction log up to {@code recoverUpToSeqNo} (inclusive)._This operation will close the engine if the recovery fails.__@param translogRecoveryRunner the translog recovery runner_@param recoverUpToSeqNo       the upper bound, inclusive, of sequence number to be recovered;public abstract Engine recoverFromTranslog(TranslogRecoveryRunner translogRecoveryRunner, long recoverUpToSeqNo) throws IOException_;performs,recovery,from,the,transaction,log,up,to,code,recover,up,to,seq,no,inclusive,this,operation,will,close,the,engine,if,the,recovery,fails,param,translog,recovery,runner,the,translog,recovery,runner,param,recover,up,to,seq,no,the,upper,bound,inclusive,of,sequence,number,to,be,recovered;public,abstract,engine,recover,from,translog,translog,recovery,runner,translog,recovery,runner,long,recover,up,to,seq,no,throws,ioexception
Engine -> public abstract Engine recoverFromTranslog(TranslogRecoveryRunner translogRecoveryRunner, long recoverUpToSeqNo) throws IOException_;1545140118;Performs recovery from the transaction log up to {@code recoverUpToSeqNo} (inclusive)._This operation will close the engine if the recovery fails.__@param translogRecoveryRunner the translog recovery runner_@param recoverUpToSeqNo       the upper bound, inclusive, of sequence number to be recovered;public abstract Engine recoverFromTranslog(TranslogRecoveryRunner translogRecoveryRunner, long recoverUpToSeqNo) throws IOException_;performs,recovery,from,the,transaction,log,up,to,code,recover,up,to,seq,no,inclusive,this,operation,will,close,the,engine,if,the,recovery,fails,param,translog,recovery,runner,the,translog,recovery,runner,param,recover,up,to,seq,no,the,upper,bound,inclusive,of,sequence,number,to,be,recovered;public,abstract,engine,recover,from,translog,translog,recovery,runner,translog,recovery,runner,long,recover,up,to,seq,no,throws,ioexception
Engine -> public abstract Engine recoverFromTranslog(TranslogRecoveryRunner translogRecoveryRunner, long recoverUpToSeqNo) throws IOException_;1545221705;Performs recovery from the transaction log up to {@code recoverUpToSeqNo} (inclusive)._This operation will close the engine if the recovery fails.__@param translogRecoveryRunner the translog recovery runner_@param recoverUpToSeqNo       the upper bound, inclusive, of sequence number to be recovered;public abstract Engine recoverFromTranslog(TranslogRecoveryRunner translogRecoveryRunner, long recoverUpToSeqNo) throws IOException_;performs,recovery,from,the,transaction,log,up,to,code,recover,up,to,seq,no,inclusive,this,operation,will,close,the,engine,if,the,recovery,fails,param,translog,recovery,runner,the,translog,recovery,runner,param,recover,up,to,seq,no,the,upper,bound,inclusive,of,sequence,number,to,be,recovered;public,abstract,engine,recover,from,translog,translog,recovery,runner,translog,recovery,runner,long,recover,up,to,seq,no,throws,ioexception
Engine -> public abstract Engine recoverFromTranslog(TranslogRecoveryRunner translogRecoveryRunner, long recoverUpToSeqNo) throws IOException_;1547332999;Performs recovery from the transaction log up to {@code recoverUpToSeqNo} (inclusive)._This operation will close the engine if the recovery fails.__@param translogRecoveryRunner the translog recovery runner_@param recoverUpToSeqNo       the upper bound, inclusive, of sequence number to be recovered;public abstract Engine recoverFromTranslog(TranslogRecoveryRunner translogRecoveryRunner, long recoverUpToSeqNo) throws IOException_;performs,recovery,from,the,transaction,log,up,to,code,recover,up,to,seq,no,inclusive,this,operation,will,close,the,engine,if,the,recovery,fails,param,translog,recovery,runner,the,translog,recovery,runner,param,recover,up,to,seq,no,the,upper,bound,inclusive,of,sequence,number,to,be,recovered;public,abstract,engine,recover,from,translog,translog,recovery,runner,translog,recovery,runner,long,recover,up,to,seq,no,throws,ioexception
Engine -> public abstract Engine recoverFromTranslog(TranslogRecoveryRunner translogRecoveryRunner, long recoverUpToSeqNo) throws IOException_;1548771485;Performs recovery from the transaction log up to {@code recoverUpToSeqNo} (inclusive)._This operation will close the engine if the recovery fails.__@param translogRecoveryRunner the translog recovery runner_@param recoverUpToSeqNo       the upper bound, inclusive, of sequence number to be recovered;public abstract Engine recoverFromTranslog(TranslogRecoveryRunner translogRecoveryRunner, long recoverUpToSeqNo) throws IOException_;performs,recovery,from,the,transaction,log,up,to,code,recover,up,to,seq,no,inclusive,this,operation,will,close,the,engine,if,the,recovery,fails,param,translog,recovery,runner,the,translog,recovery,runner,param,recover,up,to,seq,no,the,upper,bound,inclusive,of,sequence,number,to,be,recovered;public,abstract,engine,recover,from,translog,translog,recovery,runner,translog,recovery,runner,long,recover,up,to,seq,no,throws,ioexception
Engine -> public abstract Engine recoverFromTranslog(TranslogRecoveryRunner translogRecoveryRunner, long recoverUpToSeqNo) throws IOException_;1549891630;Performs recovery from the transaction log up to {@code recoverUpToSeqNo} (inclusive)._This operation will close the engine if the recovery fails.__@param translogRecoveryRunner the translog recovery runner_@param recoverUpToSeqNo       the upper bound, inclusive, of sequence number to be recovered;public abstract Engine recoverFromTranslog(TranslogRecoveryRunner translogRecoveryRunner, long recoverUpToSeqNo) throws IOException_;performs,recovery,from,the,transaction,log,up,to,code,recover,up,to,seq,no,inclusive,this,operation,will,close,the,engine,if,the,recovery,fails,param,translog,recovery,runner,the,translog,recovery,runner,param,recover,up,to,seq,no,the,upper,bound,inclusive,of,sequence,number,to,be,recovered;public,abstract,engine,recover,from,translog,translog,recovery,runner,translog,recovery,runner,long,recover,up,to,seq,no,throws,ioexception
Engine -> public abstract Engine recoverFromTranslog(TranslogRecoveryRunner translogRecoveryRunner, long recoverUpToSeqNo) throws IOException_;1549975032;Performs recovery from the transaction log up to {@code recoverUpToSeqNo} (inclusive)._This operation will close the engine if the recovery fails.__@param translogRecoveryRunner the translog recovery runner_@param recoverUpToSeqNo       the upper bound, inclusive, of sequence number to be recovered;public abstract Engine recoverFromTranslog(TranslogRecoveryRunner translogRecoveryRunner, long recoverUpToSeqNo) throws IOException_;performs,recovery,from,the,transaction,log,up,to,code,recover,up,to,seq,no,inclusive,this,operation,will,close,the,engine,if,the,recovery,fails,param,translog,recovery,runner,the,translog,recovery,runner,param,recover,up,to,seq,no,the,upper,bound,inclusive,of,sequence,number,to,be,recovered;public,abstract,engine,recover,from,translog,translog,recovery,runner,translog,recovery,runner,long,recover,up,to,seq,no,throws,ioexception
Engine -> public abstract Engine recoverFromTranslog(TranslogRecoveryRunner translogRecoveryRunner, long recoverUpToSeqNo) throws IOException_;1550220204;Performs recovery from the transaction log up to {@code recoverUpToSeqNo} (inclusive)._This operation will close the engine if the recovery fails.__@param translogRecoveryRunner the translog recovery runner_@param recoverUpToSeqNo       the upper bound, inclusive, of sequence number to be recovered;public abstract Engine recoverFromTranslog(TranslogRecoveryRunner translogRecoveryRunner, long recoverUpToSeqNo) throws IOException_;performs,recovery,from,the,transaction,log,up,to,code,recover,up,to,seq,no,inclusive,this,operation,will,close,the,engine,if,the,recovery,fails,param,translog,recovery,runner,the,translog,recovery,runner,param,recover,up,to,seq,no,the,upper,bound,inclusive,of,sequence,number,to,be,recovered;public,abstract,engine,recover,from,translog,translog,recovery,runner,translog,recovery,runner,long,recover,up,to,seq,no,throws,ioexception
Engine -> public abstract Engine recoverFromTranslog(TranslogRecoveryRunner translogRecoveryRunner, long recoverUpToSeqNo) throws IOException_;1550526771;Performs recovery from the transaction log up to {@code recoverUpToSeqNo} (inclusive)._This operation will close the engine if the recovery fails.__@param translogRecoveryRunner the translog recovery runner_@param recoverUpToSeqNo       the upper bound, inclusive, of sequence number to be recovered;public abstract Engine recoverFromTranslog(TranslogRecoveryRunner translogRecoveryRunner, long recoverUpToSeqNo) throws IOException_;performs,recovery,from,the,transaction,log,up,to,code,recover,up,to,seq,no,inclusive,this,operation,will,close,the,engine,if,the,recovery,fails,param,translog,recovery,runner,the,translog,recovery,runner,param,recover,up,to,seq,no,the,upper,bound,inclusive,of,sequence,number,to,be,recovered;public,abstract,engine,recover,from,translog,translog,recovery,runner,translog,recovery,runner,long,recover,up,to,seq,no,throws,ioexception
Engine -> public abstract Engine recoverFromTranslog(TranslogRecoveryRunner translogRecoveryRunner, long recoverUpToSeqNo) throws IOException_;1551110274;Performs recovery from the transaction log up to {@code recoverUpToSeqNo} (inclusive)._This operation will close the engine if the recovery fails.__@param translogRecoveryRunner the translog recovery runner_@param recoverUpToSeqNo       the upper bound, inclusive, of sequence number to be recovered;public abstract Engine recoverFromTranslog(TranslogRecoveryRunner translogRecoveryRunner, long recoverUpToSeqNo) throws IOException_;performs,recovery,from,the,transaction,log,up,to,code,recover,up,to,seq,no,inclusive,this,operation,will,close,the,engine,if,the,recovery,fails,param,translog,recovery,runner,the,translog,recovery,runner,param,recover,up,to,seq,no,the,upper,bound,inclusive,of,sequence,number,to,be,recovered;public,abstract,engine,recover,from,translog,translog,recovery,runner,translog,recovery,runner,long,recover,up,to,seq,no,throws,ioexception
Engine -> public abstract Engine recoverFromTranslog(TranslogRecoveryRunner translogRecoveryRunner, long recoverUpToSeqNo) throws IOException_;1551126708;Performs recovery from the transaction log up to {@code recoverUpToSeqNo} (inclusive)._This operation will close the engine if the recovery fails.__@param translogRecoveryRunner the translog recovery runner_@param recoverUpToSeqNo       the upper bound, inclusive, of sequence number to be recovered;public abstract Engine recoverFromTranslog(TranslogRecoveryRunner translogRecoveryRunner, long recoverUpToSeqNo) throws IOException_;performs,recovery,from,the,transaction,log,up,to,code,recover,up,to,seq,no,inclusive,this,operation,will,close,the,engine,if,the,recovery,fails,param,translog,recovery,runner,the,translog,recovery,runner,param,recover,up,to,seq,no,the,upper,bound,inclusive,of,sequence,number,to,be,recovered;public,abstract,engine,recover,from,translog,translog,recovery,runner,translog,recovery,runner,long,recover,up,to,seq,no,throws,ioexception
Engine -> public abstract void rollTranslogGeneration() throws EngineException_;1524684173;Rolls the translog generation and cleans unneeded.;public abstract void rollTranslogGeneration() throws EngineException_;rolls,the,translog,generation,and,cleans,unneeded;public,abstract,void,roll,translog,generation,throws,engine,exception
Engine -> public abstract void rollTranslogGeneration() throws EngineException_;1525162917;Rolls the translog generation and cleans unneeded.;public abstract void rollTranslogGeneration() throws EngineException_;rolls,the,translog,generation,and,cleans,unneeded;public,abstract,void,roll,translog,generation,throws,engine,exception
Engine -> public abstract void rollTranslogGeneration() throws EngineException_;1525334055;Rolls the translog generation and cleans unneeded.;public abstract void rollTranslogGeneration() throws EngineException_;rolls,the,translog,generation,and,cleans,unneeded;public,abstract,void,roll,translog,generation,throws,engine,exception
Engine -> public abstract void rollTranslogGeneration() throws EngineException_;1527583663;Rolls the translog generation and cleans unneeded.;public abstract void rollTranslogGeneration() throws EngineException_;rolls,the,translog,generation,and,cleans,unneeded;public,abstract,void,roll,translog,generation,throws,engine,exception
Engine -> public abstract void rollTranslogGeneration() throws EngineException_;1528706846;Rolls the translog generation and cleans unneeded.;public abstract void rollTranslogGeneration() throws EngineException_;rolls,the,translog,generation,and,cleans,unneeded;public,abstract,void,roll,translog,generation,throws,engine,exception
Engine -> public abstract void rollTranslogGeneration() throws EngineException_;1528762805;Rolls the translog generation and cleans unneeded.;public abstract void rollTranslogGeneration() throws EngineException_;rolls,the,translog,generation,and,cleans,unneeded;public,abstract,void,roll,translog,generation,throws,engine,exception
Engine -> public abstract void rollTranslogGeneration() throws EngineException_;1531910483;Rolls the translog generation and cleans unneeded.;public abstract void rollTranslogGeneration() throws EngineException_;rolls,the,translog,generation,and,cleans,unneeded;public,abstract,void,roll,translog,generation,throws,engine,exception
Engine -> public abstract void rollTranslogGeneration() throws EngineException_;1532685069;Rolls the translog generation and cleans unneeded.;public abstract void rollTranslogGeneration() throws EngineException_;rolls,the,translog,generation,and,cleans,unneeded;public,abstract,void,roll,translog,generation,throws,engine,exception
Engine -> public abstract void rollTranslogGeneration() throws EngineException_;1533295538;Rolls the translog generation and cleans unneeded.;public abstract void rollTranslogGeneration() throws EngineException_;rolls,the,translog,generation,and,cleans,unneeded;public,abstract,void,roll,translog,generation,throws,engine,exception
Engine -> public abstract void rollTranslogGeneration() throws EngineException_;1535046779;Rolls the translog generation and cleans unneeded.;public abstract void rollTranslogGeneration() throws EngineException_;rolls,the,translog,generation,and,cleans,unneeded;public,abstract,void,roll,translog,generation,throws,engine,exception
Engine -> public abstract void rollTranslogGeneration() throws EngineException_;1535723122;Rolls the translog generation and cleans unneeded.;public abstract void rollTranslogGeneration() throws EngineException_;rolls,the,translog,generation,and,cleans,unneeded;public,abstract,void,roll,translog,generation,throws,engine,exception
Engine -> public abstract void rollTranslogGeneration() throws EngineException_;1535965276;Rolls the translog generation and cleans unneeded.;public abstract void rollTranslogGeneration() throws EngineException_;rolls,the,translog,generation,and,cleans,unneeded;public,abstract,void,roll,translog,generation,throws,engine,exception
Engine -> public abstract void rollTranslogGeneration() throws EngineException_;1536314350;Rolls the translog generation and cleans unneeded.;public abstract void rollTranslogGeneration() throws EngineException_;rolls,the,translog,generation,and,cleans,unneeded;public,abstract,void,roll,translog,generation,throws,engine,exception
Engine -> public abstract void rollTranslogGeneration() throws EngineException_;1536828374;Rolls the translog generation and cleans unneeded.;public abstract void rollTranslogGeneration() throws EngineException_;rolls,the,translog,generation,and,cleans,unneeded;public,abstract,void,roll,translog,generation,throws,engine,exception
Engine -> public abstract void rollTranslogGeneration() throws EngineException_;1537371806;Rolls the translog generation and cleans unneeded.;public abstract void rollTranslogGeneration() throws EngineException_;rolls,the,translog,generation,and,cleans,unneeded;public,abstract,void,roll,translog,generation,throws,engine,exception
Engine -> public abstract void rollTranslogGeneration() throws EngineException_;1537806831;Rolls the translog generation and cleans unneeded.;public abstract void rollTranslogGeneration() throws EngineException_;rolls,the,translog,generation,and,cleans,unneeded;public,abstract,void,roll,translog,generation,throws,engine,exception
Engine -> public abstract void rollTranslogGeneration() throws EngineException_;1538067637;Rolls the translog generation and cleans unneeded.;public abstract void rollTranslogGeneration() throws EngineException_;rolls,the,translog,generation,and,cleans,unneeded;public,abstract,void,roll,translog,generation,throws,engine,exception
Engine -> public abstract void rollTranslogGeneration() throws EngineException_;1538424609;Rolls the translog generation and cleans unneeded.;public abstract void rollTranslogGeneration() throws EngineException_;rolls,the,translog,generation,and,cleans,unneeded;public,abstract,void,roll,translog,generation,throws,engine,exception
Engine -> public abstract void rollTranslogGeneration() throws EngineException_;1539723533;Rolls the translog generation and cleans unneeded.;public abstract void rollTranslogGeneration() throws EngineException_;rolls,the,translog,generation,and,cleans,unneeded;public,abstract,void,roll,translog,generation,throws,engine,exception
Engine -> public abstract void rollTranslogGeneration() throws EngineException_;1541618615;Rolls the translog generation and cleans unneeded.;public abstract void rollTranslogGeneration() throws EngineException_;rolls,the,translog,generation,and,cleans,unneeded;public,abstract,void,roll,translog,generation,throws,engine,exception
Engine -> public abstract void rollTranslogGeneration() throws EngineException_;1542697754;Rolls the translog generation and cleans unneeded.;public abstract void rollTranslogGeneration() throws EngineException_;rolls,the,translog,generation,and,cleans,unneeded;public,abstract,void,roll,translog,generation,throws,engine,exception
Engine -> public abstract void rollTranslogGeneration() throws EngineException_;1543047942;Rolls the translog generation and cleans unneeded.;public abstract void rollTranslogGeneration() throws EngineException_;rolls,the,translog,generation,and,cleans,unneeded;public,abstract,void,roll,translog,generation,throws,engine,exception
Engine -> public abstract void rollTranslogGeneration() throws EngineException_;1544545090;Rolls the translog generation and cleans unneeded.;public abstract void rollTranslogGeneration() throws EngineException_;rolls,the,translog,generation,and,cleans,unneeded;public,abstract,void,roll,translog,generation,throws,engine,exception
Engine -> public abstract void rollTranslogGeneration() throws EngineException_;1544684920;Rolls the translog generation and cleans unneeded.;public abstract void rollTranslogGeneration() throws EngineException_;rolls,the,translog,generation,and,cleans,unneeded;public,abstract,void,roll,translog,generation,throws,engine,exception
Engine -> public abstract void rollTranslogGeneration() throws EngineException_;1545140118;Rolls the translog generation and cleans unneeded.;public abstract void rollTranslogGeneration() throws EngineException_;rolls,the,translog,generation,and,cleans,unneeded;public,abstract,void,roll,translog,generation,throws,engine,exception
Engine -> public abstract void rollTranslogGeneration() throws EngineException_;1545221705;Rolls the translog generation and cleans unneeded.;public abstract void rollTranslogGeneration() throws EngineException_;rolls,the,translog,generation,and,cleans,unneeded;public,abstract,void,roll,translog,generation,throws,engine,exception
Engine -> public abstract void rollTranslogGeneration() throws EngineException_;1547332999;Rolls the translog generation and cleans unneeded.;public abstract void rollTranslogGeneration() throws EngineException_;rolls,the,translog,generation,and,cleans,unneeded;public,abstract,void,roll,translog,generation,throws,engine,exception
Engine -> public abstract void rollTranslogGeneration() throws EngineException_;1548771485;Rolls the translog generation and cleans unneeded.;public abstract void rollTranslogGeneration() throws EngineException_;rolls,the,translog,generation,and,cleans,unneeded;public,abstract,void,roll,translog,generation,throws,engine,exception
Engine -> public abstract void rollTranslogGeneration() throws EngineException_;1549891630;Rolls the translog generation and cleans unneeded.;public abstract void rollTranslogGeneration() throws EngineException_;rolls,the,translog,generation,and,cleans,unneeded;public,abstract,void,roll,translog,generation,throws,engine,exception
Engine -> public abstract void rollTranslogGeneration() throws EngineException_;1549975032;Rolls the translog generation and cleans unneeded.;public abstract void rollTranslogGeneration() throws EngineException_;rolls,the,translog,generation,and,cleans,unneeded;public,abstract,void,roll,translog,generation,throws,engine,exception
Engine -> public abstract void rollTranslogGeneration() throws EngineException_;1550220204;Rolls the translog generation and cleans unneeded.;public abstract void rollTranslogGeneration() throws EngineException_;rolls,the,translog,generation,and,cleans,unneeded;public,abstract,void,roll,translog,generation,throws,engine,exception
Engine -> public abstract void rollTranslogGeneration() throws EngineException_;1550526771;Rolls the translog generation and cleans unneeded.;public abstract void rollTranslogGeneration() throws EngineException_;rolls,the,translog,generation,and,cleans,unneeded;public,abstract,void,roll,translog,generation,throws,engine,exception
Engine -> public abstract void rollTranslogGeneration() throws EngineException_;1551110274;Rolls the translog generation and cleans unneeded.;public abstract void rollTranslogGeneration() throws EngineException_;rolls,the,translog,generation,and,cleans,unneeded;public,abstract,void,roll,translog,generation,throws,engine,exception
Engine -> public abstract void rollTranslogGeneration() throws EngineException_;1551126708;Rolls the translog generation and cleans unneeded.;public abstract void rollTranslogGeneration() throws EngineException_;rolls,the,translog,generation,and,cleans,unneeded;public,abstract,void,roll,translog,generation,throws,engine,exception
Engine -> GetResult -> public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion);1524684173;Build a non-realtime get result from the searcher.;public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion) {_            this(true, docIdAndVersion.version, docIdAndVersion, searcher)__        };build,a,non,realtime,get,result,from,the,searcher;public,get,result,searcher,searcher,doc,id,and,version,doc,id,and,version,this,true,doc,id,and,version,version,doc,id,and,version,searcher
Engine -> GetResult -> public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion);1525162917;Build a non-realtime get result from the searcher.;public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion) {_            this(true, docIdAndVersion.version, docIdAndVersion, searcher)__        };build,a,non,realtime,get,result,from,the,searcher;public,get,result,searcher,searcher,doc,id,and,version,doc,id,and,version,this,true,doc,id,and,version,version,doc,id,and,version,searcher
Engine -> GetResult -> public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion);1525334055;Build a non-realtime get result from the searcher.;public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion) {_            this(true, docIdAndVersion.version, docIdAndVersion, searcher)__        };build,a,non,realtime,get,result,from,the,searcher;public,get,result,searcher,searcher,doc,id,and,version,doc,id,and,version,this,true,doc,id,and,version,version,doc,id,and,version,searcher
Engine -> GetResult -> public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion);1527583663;Build a non-realtime get result from the searcher.;public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion) {_            this(true, docIdAndVersion.version, docIdAndVersion, searcher)__        };build,a,non,realtime,get,result,from,the,searcher;public,get,result,searcher,searcher,doc,id,and,version,doc,id,and,version,this,true,doc,id,and,version,version,doc,id,and,version,searcher
Engine -> GetResult -> public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion);1528706846;Build a non-realtime get result from the searcher.;public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion) {_            this(true, docIdAndVersion.version, docIdAndVersion, searcher)__        };build,a,non,realtime,get,result,from,the,searcher;public,get,result,searcher,searcher,doc,id,and,version,doc,id,and,version,this,true,doc,id,and,version,version,doc,id,and,version,searcher
Engine -> GetResult -> public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion);1528762805;Build a non-realtime get result from the searcher.;public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion) {_            this(true, docIdAndVersion.version, docIdAndVersion, searcher)__        };build,a,non,realtime,get,result,from,the,searcher;public,get,result,searcher,searcher,doc,id,and,version,doc,id,and,version,this,true,doc,id,and,version,version,doc,id,and,version,searcher
Engine -> GetResult -> public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion);1531910483;Build a non-realtime get result from the searcher.;public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion) {_            this(true, docIdAndVersion.version, docIdAndVersion, searcher)__        };build,a,non,realtime,get,result,from,the,searcher;public,get,result,searcher,searcher,doc,id,and,version,doc,id,and,version,this,true,doc,id,and,version,version,doc,id,and,version,searcher
Engine -> GetResult -> public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion);1532685069;Build a non-realtime get result from the searcher.;public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion) {_            this(true, docIdAndVersion.version, docIdAndVersion, searcher)__        };build,a,non,realtime,get,result,from,the,searcher;public,get,result,searcher,searcher,doc,id,and,version,doc,id,and,version,this,true,doc,id,and,version,version,doc,id,and,version,searcher
Engine -> GetResult -> public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion);1533295538;Build a non-realtime get result from the searcher.;public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion) {_            this(true, docIdAndVersion.version, docIdAndVersion, searcher)__        };build,a,non,realtime,get,result,from,the,searcher;public,get,result,searcher,searcher,doc,id,and,version,doc,id,and,version,this,true,doc,id,and,version,version,doc,id,and,version,searcher
Engine -> GetResult -> public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion);1535046779;Build a non-realtime get result from the searcher.;public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion) {_            this(true, docIdAndVersion.version, docIdAndVersion, searcher)__        };build,a,non,realtime,get,result,from,the,searcher;public,get,result,searcher,searcher,doc,id,and,version,doc,id,and,version,this,true,doc,id,and,version,version,doc,id,and,version,searcher
Engine -> GetResult -> public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion);1535723122;Build a non-realtime get result from the searcher.;public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion) {_            this(true, docIdAndVersion.version, docIdAndVersion, searcher)__        };build,a,non,realtime,get,result,from,the,searcher;public,get,result,searcher,searcher,doc,id,and,version,doc,id,and,version,this,true,doc,id,and,version,version,doc,id,and,version,searcher
Engine -> GetResult -> public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion);1535965276;Build a non-realtime get result from the searcher.;public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion) {_            this(true, docIdAndVersion.version, docIdAndVersion, searcher)__        };build,a,non,realtime,get,result,from,the,searcher;public,get,result,searcher,searcher,doc,id,and,version,doc,id,and,version,this,true,doc,id,and,version,version,doc,id,and,version,searcher
Engine -> GetResult -> public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion);1536314350;Build a non-realtime get result from the searcher.;public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion) {_            this(true, docIdAndVersion.version, docIdAndVersion, searcher)__        };build,a,non,realtime,get,result,from,the,searcher;public,get,result,searcher,searcher,doc,id,and,version,doc,id,and,version,this,true,doc,id,and,version,version,doc,id,and,version,searcher
Engine -> GetResult -> public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion);1536828374;Build a non-realtime get result from the searcher.;public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion) {_            this(true, docIdAndVersion.version, docIdAndVersion, searcher)__        };build,a,non,realtime,get,result,from,the,searcher;public,get,result,searcher,searcher,doc,id,and,version,doc,id,and,version,this,true,doc,id,and,version,version,doc,id,and,version,searcher
Engine -> GetResult -> public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion);1537371806;Build a non-realtime get result from the searcher.;public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion) {_            this(true, docIdAndVersion.version, docIdAndVersion, searcher)__        };build,a,non,realtime,get,result,from,the,searcher;public,get,result,searcher,searcher,doc,id,and,version,doc,id,and,version,this,true,doc,id,and,version,version,doc,id,and,version,searcher
Engine -> GetResult -> public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion);1537806831;Build a non-realtime get result from the searcher.;public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion) {_            this(true, docIdAndVersion.version, docIdAndVersion, searcher)__        };build,a,non,realtime,get,result,from,the,searcher;public,get,result,searcher,searcher,doc,id,and,version,doc,id,and,version,this,true,doc,id,and,version,version,doc,id,and,version,searcher
Engine -> GetResult -> public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion);1538067637;Build a non-realtime get result from the searcher.;public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion) {_            this(true, docIdAndVersion.version, docIdAndVersion, searcher)__        };build,a,non,realtime,get,result,from,the,searcher;public,get,result,searcher,searcher,doc,id,and,version,doc,id,and,version,this,true,doc,id,and,version,version,doc,id,and,version,searcher
Engine -> GetResult -> public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion);1538424609;Build a non-realtime get result from the searcher.;public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion) {_            this(true, docIdAndVersion.version, docIdAndVersion, searcher)__        };build,a,non,realtime,get,result,from,the,searcher;public,get,result,searcher,searcher,doc,id,and,version,doc,id,and,version,this,true,doc,id,and,version,version,doc,id,and,version,searcher
Engine -> GetResult -> public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion);1539723533;Build a non-realtime get result from the searcher.;public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion) {_            this(true, docIdAndVersion.version, docIdAndVersion, searcher)__        };build,a,non,realtime,get,result,from,the,searcher;public,get,result,searcher,searcher,doc,id,and,version,doc,id,and,version,this,true,doc,id,and,version,version,doc,id,and,version,searcher
Engine -> GetResult -> public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion);1541618615;Build a non-realtime get result from the searcher.;public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion) {_            this(true, docIdAndVersion.version, docIdAndVersion, searcher)__        };build,a,non,realtime,get,result,from,the,searcher;public,get,result,searcher,searcher,doc,id,and,version,doc,id,and,version,this,true,doc,id,and,version,version,doc,id,and,version,searcher
Engine -> GetResult -> public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion);1542697754;Build a non-realtime get result from the searcher.;public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion) {_            this(true, docIdAndVersion.version, docIdAndVersion, searcher)__        };build,a,non,realtime,get,result,from,the,searcher;public,get,result,searcher,searcher,doc,id,and,version,doc,id,and,version,this,true,doc,id,and,version,version,doc,id,and,version,searcher
Engine -> GetResult -> public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion);1543047942;Build a non-realtime get result from the searcher.;public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion) {_            this(true, docIdAndVersion.version, docIdAndVersion, searcher)__        };build,a,non,realtime,get,result,from,the,searcher;public,get,result,searcher,searcher,doc,id,and,version,doc,id,and,version,this,true,doc,id,and,version,version,doc,id,and,version,searcher
Engine -> GetResult -> public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion);1544545090;Build a non-realtime get result from the searcher.;public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion) {_            this(true, docIdAndVersion.version, docIdAndVersion, searcher)__        };build,a,non,realtime,get,result,from,the,searcher;public,get,result,searcher,searcher,doc,id,and,version,doc,id,and,version,this,true,doc,id,and,version,version,doc,id,and,version,searcher
Engine -> GetResult -> public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion);1544684920;Build a non-realtime get result from the searcher.;public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion) {_            this(true, docIdAndVersion.version, docIdAndVersion, searcher)__        };build,a,non,realtime,get,result,from,the,searcher;public,get,result,searcher,searcher,doc,id,and,version,doc,id,and,version,this,true,doc,id,and,version,version,doc,id,and,version,searcher
Engine -> GetResult -> public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion);1545140118;Build a non-realtime get result from the searcher.;public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion) {_            this(true, docIdAndVersion.version, docIdAndVersion, searcher)__        };build,a,non,realtime,get,result,from,the,searcher;public,get,result,searcher,searcher,doc,id,and,version,doc,id,and,version,this,true,doc,id,and,version,version,doc,id,and,version,searcher
Engine -> GetResult -> public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion);1545221705;Build a non-realtime get result from the searcher.;public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion) {_            this(true, docIdAndVersion.version, docIdAndVersion, searcher)__        };build,a,non,realtime,get,result,from,the,searcher;public,get,result,searcher,searcher,doc,id,and,version,doc,id,and,version,this,true,doc,id,and,version,version,doc,id,and,version,searcher
Engine -> GetResult -> public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion);1547332999;Build a non-realtime get result from the searcher.;public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion) {_            this(true, docIdAndVersion.version, docIdAndVersion, searcher)__        };build,a,non,realtime,get,result,from,the,searcher;public,get,result,searcher,searcher,doc,id,and,version,doc,id,and,version,this,true,doc,id,and,version,version,doc,id,and,version,searcher
Engine -> GetResult -> public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion);1548771485;Build a non-realtime get result from the searcher.;public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion) {_            this(true, docIdAndVersion.version, docIdAndVersion, searcher)__        };build,a,non,realtime,get,result,from,the,searcher;public,get,result,searcher,searcher,doc,id,and,version,doc,id,and,version,this,true,doc,id,and,version,version,doc,id,and,version,searcher
Engine -> GetResult -> public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion);1549891630;Build a non-realtime get result from the searcher.;public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion) {_            this(true, docIdAndVersion.version, docIdAndVersion, searcher)__        };build,a,non,realtime,get,result,from,the,searcher;public,get,result,searcher,searcher,doc,id,and,version,doc,id,and,version,this,true,doc,id,and,version,version,doc,id,and,version,searcher
Engine -> GetResult -> public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion);1549975032;Build a non-realtime get result from the searcher.;public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion) {_            this(true, docIdAndVersion.version, docIdAndVersion, searcher)__        };build,a,non,realtime,get,result,from,the,searcher;public,get,result,searcher,searcher,doc,id,and,version,doc,id,and,version,this,true,doc,id,and,version,version,doc,id,and,version,searcher
Engine -> GetResult -> public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion);1550220204;Build a non-realtime get result from the searcher.;public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion) {_            this(true, docIdAndVersion.version, docIdAndVersion, searcher)__        };build,a,non,realtime,get,result,from,the,searcher;public,get,result,searcher,searcher,doc,id,and,version,doc,id,and,version,this,true,doc,id,and,version,version,doc,id,and,version,searcher
Engine -> GetResult -> public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion);1550526771;Build a non-realtime get result from the searcher.;public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion) {_            this(true, docIdAndVersion.version, docIdAndVersion, searcher)__        };build,a,non,realtime,get,result,from,the,searcher;public,get,result,searcher,searcher,doc,id,and,version,doc,id,and,version,this,true,doc,id,and,version,version,doc,id,and,version,searcher
Engine -> GetResult -> public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion);1551110274;Build a non-realtime get result from the searcher.;public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion) {_            this(true, docIdAndVersion.version, docIdAndVersion, searcher)__        };build,a,non,realtime,get,result,from,the,searcher;public,get,result,searcher,searcher,doc,id,and,version,doc,id,and,version,this,true,doc,id,and,version,version,doc,id,and,version,searcher
Engine -> GetResult -> public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion);1551126708;Build a non-realtime get result from the searcher.;public GetResult(Searcher searcher, DocIdAndVersion docIdAndVersion) {_            this(true, docIdAndVersion.version, docIdAndVersion, searcher)__        };build,a,non,realtime,get,result,from,the,searcher;public,get,result,searcher,searcher,doc,id,and,version,doc,id,and,version,this,true,doc,id,and,version,version,doc,id,and,version,searcher
Engine -> public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;1524684173;Attempts to do a special commit where the given syncID is put into the commit data. The attempt_succeeds if there are not pending writes in lucene and the current point is equal to the expected one.__@param syncId           id of this sync_@param expectedCommitId the expected value of_@return true if the sync commit was made, false o.w.;public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;attempts,to,do,a,special,commit,where,the,given,sync,id,is,put,into,the,commit,data,the,attempt,succeeds,if,there,are,not,pending,writes,in,lucene,and,the,current,point,is,equal,to,the,expected,one,param,sync,id,id,of,this,sync,param,expected,commit,id,the,expected,value,of,return,true,if,the,sync,commit,was,made,false,o,w;public,abstract,synced,flush,result,sync,flush,string,sync,id,commit,id,expected,commit,id,throws,engine,exception
Engine -> public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;1525162917;Attempts to do a special commit where the given syncID is put into the commit data. The attempt_succeeds if there are not pending writes in lucene and the current point is equal to the expected one.__@param syncId           id of this sync_@param expectedCommitId the expected value of_@return true if the sync commit was made, false o.w.;public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;attempts,to,do,a,special,commit,where,the,given,sync,id,is,put,into,the,commit,data,the,attempt,succeeds,if,there,are,not,pending,writes,in,lucene,and,the,current,point,is,equal,to,the,expected,one,param,sync,id,id,of,this,sync,param,expected,commit,id,the,expected,value,of,return,true,if,the,sync,commit,was,made,false,o,w;public,abstract,synced,flush,result,sync,flush,string,sync,id,commit,id,expected,commit,id,throws,engine,exception
Engine -> public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;1525334055;Attempts to do a special commit where the given syncID is put into the commit data. The attempt_succeeds if there are not pending writes in lucene and the current point is equal to the expected one.__@param syncId           id of this sync_@param expectedCommitId the expected value of_@return true if the sync commit was made, false o.w.;public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;attempts,to,do,a,special,commit,where,the,given,sync,id,is,put,into,the,commit,data,the,attempt,succeeds,if,there,are,not,pending,writes,in,lucene,and,the,current,point,is,equal,to,the,expected,one,param,sync,id,id,of,this,sync,param,expected,commit,id,the,expected,value,of,return,true,if,the,sync,commit,was,made,false,o,w;public,abstract,synced,flush,result,sync,flush,string,sync,id,commit,id,expected,commit,id,throws,engine,exception
Engine -> public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;1527583663;Attempts to do a special commit where the given syncID is put into the commit data. The attempt_succeeds if there are not pending writes in lucene and the current point is equal to the expected one.__@param syncId           id of this sync_@param expectedCommitId the expected value of_@return true if the sync commit was made, false o.w.;public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;attempts,to,do,a,special,commit,where,the,given,sync,id,is,put,into,the,commit,data,the,attempt,succeeds,if,there,are,not,pending,writes,in,lucene,and,the,current,point,is,equal,to,the,expected,one,param,sync,id,id,of,this,sync,param,expected,commit,id,the,expected,value,of,return,true,if,the,sync,commit,was,made,false,o,w;public,abstract,synced,flush,result,sync,flush,string,sync,id,commit,id,expected,commit,id,throws,engine,exception
Engine -> public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;1528706846;Attempts to do a special commit where the given syncID is put into the commit data. The attempt_succeeds if there are not pending writes in lucene and the current point is equal to the expected one.__@param syncId           id of this sync_@param expectedCommitId the expected value of_@return true if the sync commit was made, false o.w.;public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;attempts,to,do,a,special,commit,where,the,given,sync,id,is,put,into,the,commit,data,the,attempt,succeeds,if,there,are,not,pending,writes,in,lucene,and,the,current,point,is,equal,to,the,expected,one,param,sync,id,id,of,this,sync,param,expected,commit,id,the,expected,value,of,return,true,if,the,sync,commit,was,made,false,o,w;public,abstract,synced,flush,result,sync,flush,string,sync,id,commit,id,expected,commit,id,throws,engine,exception
Engine -> public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;1528762805;Attempts to do a special commit where the given syncID is put into the commit data. The attempt_succeeds if there are not pending writes in lucene and the current point is equal to the expected one.__@param syncId           id of this sync_@param expectedCommitId the expected value of_@return true if the sync commit was made, false o.w.;public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;attempts,to,do,a,special,commit,where,the,given,sync,id,is,put,into,the,commit,data,the,attempt,succeeds,if,there,are,not,pending,writes,in,lucene,and,the,current,point,is,equal,to,the,expected,one,param,sync,id,id,of,this,sync,param,expected,commit,id,the,expected,value,of,return,true,if,the,sync,commit,was,made,false,o,w;public,abstract,synced,flush,result,sync,flush,string,sync,id,commit,id,expected,commit,id,throws,engine,exception
Engine -> public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;1531910483;Attempts to do a special commit where the given syncID is put into the commit data. The attempt_succeeds if there are not pending writes in lucene and the current point is equal to the expected one.__@param syncId           id of this sync_@param expectedCommitId the expected value of_@return true if the sync commit was made, false o.w.;public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;attempts,to,do,a,special,commit,where,the,given,sync,id,is,put,into,the,commit,data,the,attempt,succeeds,if,there,are,not,pending,writes,in,lucene,and,the,current,point,is,equal,to,the,expected,one,param,sync,id,id,of,this,sync,param,expected,commit,id,the,expected,value,of,return,true,if,the,sync,commit,was,made,false,o,w;public,abstract,synced,flush,result,sync,flush,string,sync,id,commit,id,expected,commit,id,throws,engine,exception
Engine -> public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;1532685069;Attempts to do a special commit where the given syncID is put into the commit data. The attempt_succeeds if there are not pending writes in lucene and the current point is equal to the expected one.__@param syncId           id of this sync_@param expectedCommitId the expected value of_@return true if the sync commit was made, false o.w.;public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;attempts,to,do,a,special,commit,where,the,given,sync,id,is,put,into,the,commit,data,the,attempt,succeeds,if,there,are,not,pending,writes,in,lucene,and,the,current,point,is,equal,to,the,expected,one,param,sync,id,id,of,this,sync,param,expected,commit,id,the,expected,value,of,return,true,if,the,sync,commit,was,made,false,o,w;public,abstract,synced,flush,result,sync,flush,string,sync,id,commit,id,expected,commit,id,throws,engine,exception
Engine -> public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;1533295538;Attempts to do a special commit where the given syncID is put into the commit data. The attempt_succeeds if there are not pending writes in lucene and the current point is equal to the expected one.__@param syncId           id of this sync_@param expectedCommitId the expected value of_@return true if the sync commit was made, false o.w.;public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;attempts,to,do,a,special,commit,where,the,given,sync,id,is,put,into,the,commit,data,the,attempt,succeeds,if,there,are,not,pending,writes,in,lucene,and,the,current,point,is,equal,to,the,expected,one,param,sync,id,id,of,this,sync,param,expected,commit,id,the,expected,value,of,return,true,if,the,sync,commit,was,made,false,o,w;public,abstract,synced,flush,result,sync,flush,string,sync,id,commit,id,expected,commit,id,throws,engine,exception
Engine -> public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;1535046779;Attempts to do a special commit where the given syncID is put into the commit data. The attempt_succeeds if there are not pending writes in lucene and the current point is equal to the expected one.__@param syncId           id of this sync_@param expectedCommitId the expected value of_@return true if the sync commit was made, false o.w.;public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;attempts,to,do,a,special,commit,where,the,given,sync,id,is,put,into,the,commit,data,the,attempt,succeeds,if,there,are,not,pending,writes,in,lucene,and,the,current,point,is,equal,to,the,expected,one,param,sync,id,id,of,this,sync,param,expected,commit,id,the,expected,value,of,return,true,if,the,sync,commit,was,made,false,o,w;public,abstract,synced,flush,result,sync,flush,string,sync,id,commit,id,expected,commit,id,throws,engine,exception
Engine -> public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;1535723122;Attempts to do a special commit where the given syncID is put into the commit data. The attempt_succeeds if there are not pending writes in lucene and the current point is equal to the expected one.__@param syncId           id of this sync_@param expectedCommitId the expected value of_@return true if the sync commit was made, false o.w.;public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;attempts,to,do,a,special,commit,where,the,given,sync,id,is,put,into,the,commit,data,the,attempt,succeeds,if,there,are,not,pending,writes,in,lucene,and,the,current,point,is,equal,to,the,expected,one,param,sync,id,id,of,this,sync,param,expected,commit,id,the,expected,value,of,return,true,if,the,sync,commit,was,made,false,o,w;public,abstract,synced,flush,result,sync,flush,string,sync,id,commit,id,expected,commit,id,throws,engine,exception
Engine -> public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;1535965276;Attempts to do a special commit where the given syncID is put into the commit data. The attempt_succeeds if there are not pending writes in lucene and the current point is equal to the expected one.__@param syncId           id of this sync_@param expectedCommitId the expected value of_@return true if the sync commit was made, false o.w.;public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;attempts,to,do,a,special,commit,where,the,given,sync,id,is,put,into,the,commit,data,the,attempt,succeeds,if,there,are,not,pending,writes,in,lucene,and,the,current,point,is,equal,to,the,expected,one,param,sync,id,id,of,this,sync,param,expected,commit,id,the,expected,value,of,return,true,if,the,sync,commit,was,made,false,o,w;public,abstract,synced,flush,result,sync,flush,string,sync,id,commit,id,expected,commit,id,throws,engine,exception
Engine -> public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;1536314350;Attempts to do a special commit where the given syncID is put into the commit data. The attempt_succeeds if there are not pending writes in lucene and the current point is equal to the expected one.__@param syncId           id of this sync_@param expectedCommitId the expected value of_@return true if the sync commit was made, false o.w.;public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;attempts,to,do,a,special,commit,where,the,given,sync,id,is,put,into,the,commit,data,the,attempt,succeeds,if,there,are,not,pending,writes,in,lucene,and,the,current,point,is,equal,to,the,expected,one,param,sync,id,id,of,this,sync,param,expected,commit,id,the,expected,value,of,return,true,if,the,sync,commit,was,made,false,o,w;public,abstract,synced,flush,result,sync,flush,string,sync,id,commit,id,expected,commit,id,throws,engine,exception
Engine -> public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;1536828374;Attempts to do a special commit where the given syncID is put into the commit data. The attempt_succeeds if there are not pending writes in lucene and the current point is equal to the expected one.__@param syncId           id of this sync_@param expectedCommitId the expected value of_@return true if the sync commit was made, false o.w.;public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;attempts,to,do,a,special,commit,where,the,given,sync,id,is,put,into,the,commit,data,the,attempt,succeeds,if,there,are,not,pending,writes,in,lucene,and,the,current,point,is,equal,to,the,expected,one,param,sync,id,id,of,this,sync,param,expected,commit,id,the,expected,value,of,return,true,if,the,sync,commit,was,made,false,o,w;public,abstract,synced,flush,result,sync,flush,string,sync,id,commit,id,expected,commit,id,throws,engine,exception
Engine -> public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;1537371806;Attempts to do a special commit where the given syncID is put into the commit data. The attempt_succeeds if there are not pending writes in lucene and the current point is equal to the expected one.__@param syncId           id of this sync_@param expectedCommitId the expected value of_@return true if the sync commit was made, false o.w.;public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;attempts,to,do,a,special,commit,where,the,given,sync,id,is,put,into,the,commit,data,the,attempt,succeeds,if,there,are,not,pending,writes,in,lucene,and,the,current,point,is,equal,to,the,expected,one,param,sync,id,id,of,this,sync,param,expected,commit,id,the,expected,value,of,return,true,if,the,sync,commit,was,made,false,o,w;public,abstract,synced,flush,result,sync,flush,string,sync,id,commit,id,expected,commit,id,throws,engine,exception
Engine -> public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;1537806831;Attempts to do a special commit where the given syncID is put into the commit data. The attempt_succeeds if there are not pending writes in lucene and the current point is equal to the expected one.__@param syncId           id of this sync_@param expectedCommitId the expected value of_@return true if the sync commit was made, false o.w.;public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;attempts,to,do,a,special,commit,where,the,given,sync,id,is,put,into,the,commit,data,the,attempt,succeeds,if,there,are,not,pending,writes,in,lucene,and,the,current,point,is,equal,to,the,expected,one,param,sync,id,id,of,this,sync,param,expected,commit,id,the,expected,value,of,return,true,if,the,sync,commit,was,made,false,o,w;public,abstract,synced,flush,result,sync,flush,string,sync,id,commit,id,expected,commit,id,throws,engine,exception
Engine -> public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;1538067637;Attempts to do a special commit where the given syncID is put into the commit data. The attempt_succeeds if there are not pending writes in lucene and the current point is equal to the expected one.__@param syncId           id of this sync_@param expectedCommitId the expected value of_@return true if the sync commit was made, false o.w.;public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;attempts,to,do,a,special,commit,where,the,given,sync,id,is,put,into,the,commit,data,the,attempt,succeeds,if,there,are,not,pending,writes,in,lucene,and,the,current,point,is,equal,to,the,expected,one,param,sync,id,id,of,this,sync,param,expected,commit,id,the,expected,value,of,return,true,if,the,sync,commit,was,made,false,o,w;public,abstract,synced,flush,result,sync,flush,string,sync,id,commit,id,expected,commit,id,throws,engine,exception
Engine -> public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;1538424609;Attempts to do a special commit where the given syncID is put into the commit data. The attempt_succeeds if there are not pending writes in lucene and the current point is equal to the expected one.__@param syncId           id of this sync_@param expectedCommitId the expected value of_@return true if the sync commit was made, false o.w.;public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;attempts,to,do,a,special,commit,where,the,given,sync,id,is,put,into,the,commit,data,the,attempt,succeeds,if,there,are,not,pending,writes,in,lucene,and,the,current,point,is,equal,to,the,expected,one,param,sync,id,id,of,this,sync,param,expected,commit,id,the,expected,value,of,return,true,if,the,sync,commit,was,made,false,o,w;public,abstract,synced,flush,result,sync,flush,string,sync,id,commit,id,expected,commit,id,throws,engine,exception
Engine -> public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;1539723533;Attempts to do a special commit where the given syncID is put into the commit data. The attempt_succeeds if there are not pending writes in lucene and the current point is equal to the expected one.__@param syncId           id of this sync_@param expectedCommitId the expected value of_@return true if the sync commit was made, false o.w.;public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;attempts,to,do,a,special,commit,where,the,given,sync,id,is,put,into,the,commit,data,the,attempt,succeeds,if,there,are,not,pending,writes,in,lucene,and,the,current,point,is,equal,to,the,expected,one,param,sync,id,id,of,this,sync,param,expected,commit,id,the,expected,value,of,return,true,if,the,sync,commit,was,made,false,o,w;public,abstract,synced,flush,result,sync,flush,string,sync,id,commit,id,expected,commit,id,throws,engine,exception
Engine -> public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;1541618615;Attempts to do a special commit where the given syncID is put into the commit data. The attempt_succeeds if there are not pending writes in lucene and the current point is equal to the expected one.__@param syncId           id of this sync_@param expectedCommitId the expected value of_@return true if the sync commit was made, false o.w.;public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;attempts,to,do,a,special,commit,where,the,given,sync,id,is,put,into,the,commit,data,the,attempt,succeeds,if,there,are,not,pending,writes,in,lucene,and,the,current,point,is,equal,to,the,expected,one,param,sync,id,id,of,this,sync,param,expected,commit,id,the,expected,value,of,return,true,if,the,sync,commit,was,made,false,o,w;public,abstract,synced,flush,result,sync,flush,string,sync,id,commit,id,expected,commit,id,throws,engine,exception
Engine -> public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;1542697754;Attempts to do a special commit where the given syncID is put into the commit data. The attempt_succeeds if there are not pending writes in lucene and the current point is equal to the expected one.__@param syncId           id of this sync_@param expectedCommitId the expected value of_@return true if the sync commit was made, false o.w.;public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;attempts,to,do,a,special,commit,where,the,given,sync,id,is,put,into,the,commit,data,the,attempt,succeeds,if,there,are,not,pending,writes,in,lucene,and,the,current,point,is,equal,to,the,expected,one,param,sync,id,id,of,this,sync,param,expected,commit,id,the,expected,value,of,return,true,if,the,sync,commit,was,made,false,o,w;public,abstract,synced,flush,result,sync,flush,string,sync,id,commit,id,expected,commit,id,throws,engine,exception
Engine -> public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;1543047942;Attempts to do a special commit where the given syncID is put into the commit data. The attempt_succeeds if there are not pending writes in lucene and the current point is equal to the expected one.__@param syncId           id of this sync_@param expectedCommitId the expected value of_@return true if the sync commit was made, false o.w.;public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;attempts,to,do,a,special,commit,where,the,given,sync,id,is,put,into,the,commit,data,the,attempt,succeeds,if,there,are,not,pending,writes,in,lucene,and,the,current,point,is,equal,to,the,expected,one,param,sync,id,id,of,this,sync,param,expected,commit,id,the,expected,value,of,return,true,if,the,sync,commit,was,made,false,o,w;public,abstract,synced,flush,result,sync,flush,string,sync,id,commit,id,expected,commit,id,throws,engine,exception
Engine -> public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;1544545090;Attempts to do a special commit where the given syncID is put into the commit data. The attempt_succeeds if there are not pending writes in lucene and the current point is equal to the expected one.__@param syncId           id of this sync_@param expectedCommitId the expected value of_@return true if the sync commit was made, false o.w.;public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;attempts,to,do,a,special,commit,where,the,given,sync,id,is,put,into,the,commit,data,the,attempt,succeeds,if,there,are,not,pending,writes,in,lucene,and,the,current,point,is,equal,to,the,expected,one,param,sync,id,id,of,this,sync,param,expected,commit,id,the,expected,value,of,return,true,if,the,sync,commit,was,made,false,o,w;public,abstract,synced,flush,result,sync,flush,string,sync,id,commit,id,expected,commit,id,throws,engine,exception
Engine -> public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;1544684920;Attempts to do a special commit where the given syncID is put into the commit data. The attempt_succeeds if there are not pending writes in lucene and the current point is equal to the expected one.__@param syncId           id of this sync_@param expectedCommitId the expected value of_@return true if the sync commit was made, false o.w.;public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;attempts,to,do,a,special,commit,where,the,given,sync,id,is,put,into,the,commit,data,the,attempt,succeeds,if,there,are,not,pending,writes,in,lucene,and,the,current,point,is,equal,to,the,expected,one,param,sync,id,id,of,this,sync,param,expected,commit,id,the,expected,value,of,return,true,if,the,sync,commit,was,made,false,o,w;public,abstract,synced,flush,result,sync,flush,string,sync,id,commit,id,expected,commit,id,throws,engine,exception
Engine -> public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;1545140118;Attempts to do a special commit where the given syncID is put into the commit data. The attempt_succeeds if there are not pending writes in lucene and the current point is equal to the expected one.__@param syncId           id of this sync_@param expectedCommitId the expected value of_@return true if the sync commit was made, false o.w.;public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;attempts,to,do,a,special,commit,where,the,given,sync,id,is,put,into,the,commit,data,the,attempt,succeeds,if,there,are,not,pending,writes,in,lucene,and,the,current,point,is,equal,to,the,expected,one,param,sync,id,id,of,this,sync,param,expected,commit,id,the,expected,value,of,return,true,if,the,sync,commit,was,made,false,o,w;public,abstract,synced,flush,result,sync,flush,string,sync,id,commit,id,expected,commit,id,throws,engine,exception
Engine -> public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;1545221705;Attempts to do a special commit where the given syncID is put into the commit data. The attempt_succeeds if there are not pending writes in lucene and the current point is equal to the expected one.__@param syncId           id of this sync_@param expectedCommitId the expected value of_@return true if the sync commit was made, false o.w.;public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;attempts,to,do,a,special,commit,where,the,given,sync,id,is,put,into,the,commit,data,the,attempt,succeeds,if,there,are,not,pending,writes,in,lucene,and,the,current,point,is,equal,to,the,expected,one,param,sync,id,id,of,this,sync,param,expected,commit,id,the,expected,value,of,return,true,if,the,sync,commit,was,made,false,o,w;public,abstract,synced,flush,result,sync,flush,string,sync,id,commit,id,expected,commit,id,throws,engine,exception
Engine -> public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;1547332999;Attempts to do a special commit where the given syncID is put into the commit data. The attempt_succeeds if there are not pending writes in lucene and the current point is equal to the expected one.__@param syncId           id of this sync_@param expectedCommitId the expected value of_@return true if the sync commit was made, false o.w.;public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;attempts,to,do,a,special,commit,where,the,given,sync,id,is,put,into,the,commit,data,the,attempt,succeeds,if,there,are,not,pending,writes,in,lucene,and,the,current,point,is,equal,to,the,expected,one,param,sync,id,id,of,this,sync,param,expected,commit,id,the,expected,value,of,return,true,if,the,sync,commit,was,made,false,o,w;public,abstract,synced,flush,result,sync,flush,string,sync,id,commit,id,expected,commit,id,throws,engine,exception
Engine -> public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;1548771485;Attempts to do a special commit where the given syncID is put into the commit data. The attempt_succeeds if there are not pending writes in lucene and the current point is equal to the expected one.__@param syncId           id of this sync_@param expectedCommitId the expected value of_@return true if the sync commit was made, false o.w.;public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;attempts,to,do,a,special,commit,where,the,given,sync,id,is,put,into,the,commit,data,the,attempt,succeeds,if,there,are,not,pending,writes,in,lucene,and,the,current,point,is,equal,to,the,expected,one,param,sync,id,id,of,this,sync,param,expected,commit,id,the,expected,value,of,return,true,if,the,sync,commit,was,made,false,o,w;public,abstract,synced,flush,result,sync,flush,string,sync,id,commit,id,expected,commit,id,throws,engine,exception
Engine -> public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;1549891630;Attempts to do a special commit where the given syncID is put into the commit data. The attempt_succeeds if there are not pending writes in lucene and the current point is equal to the expected one.__@param syncId           id of this sync_@param expectedCommitId the expected value of_@return true if the sync commit was made, false o.w.;public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;attempts,to,do,a,special,commit,where,the,given,sync,id,is,put,into,the,commit,data,the,attempt,succeeds,if,there,are,not,pending,writes,in,lucene,and,the,current,point,is,equal,to,the,expected,one,param,sync,id,id,of,this,sync,param,expected,commit,id,the,expected,value,of,return,true,if,the,sync,commit,was,made,false,o,w;public,abstract,synced,flush,result,sync,flush,string,sync,id,commit,id,expected,commit,id,throws,engine,exception
Engine -> public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;1549975032;Attempts to do a special commit where the given syncID is put into the commit data. The attempt_succeeds if there are not pending writes in lucene and the current point is equal to the expected one.__@param syncId           id of this sync_@param expectedCommitId the expected value of_@return true if the sync commit was made, false o.w.;public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;attempts,to,do,a,special,commit,where,the,given,sync,id,is,put,into,the,commit,data,the,attempt,succeeds,if,there,are,not,pending,writes,in,lucene,and,the,current,point,is,equal,to,the,expected,one,param,sync,id,id,of,this,sync,param,expected,commit,id,the,expected,value,of,return,true,if,the,sync,commit,was,made,false,o,w;public,abstract,synced,flush,result,sync,flush,string,sync,id,commit,id,expected,commit,id,throws,engine,exception
Engine -> public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;1550220204;Attempts to do a special commit where the given syncID is put into the commit data. The attempt_succeeds if there are not pending writes in lucene and the current point is equal to the expected one.__@param syncId           id of this sync_@param expectedCommitId the expected value of_@return true if the sync commit was made, false o.w.;public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;attempts,to,do,a,special,commit,where,the,given,sync,id,is,put,into,the,commit,data,the,attempt,succeeds,if,there,are,not,pending,writes,in,lucene,and,the,current,point,is,equal,to,the,expected,one,param,sync,id,id,of,this,sync,param,expected,commit,id,the,expected,value,of,return,true,if,the,sync,commit,was,made,false,o,w;public,abstract,synced,flush,result,sync,flush,string,sync,id,commit,id,expected,commit,id,throws,engine,exception
Engine -> public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;1550526771;Attempts to do a special commit where the given syncID is put into the commit data. The attempt_succeeds if there are not pending writes in lucene and the current point is equal to the expected one.__@param syncId           id of this sync_@param expectedCommitId the expected value of_@return true if the sync commit was made, false o.w.;public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;attempts,to,do,a,special,commit,where,the,given,sync,id,is,put,into,the,commit,data,the,attempt,succeeds,if,there,are,not,pending,writes,in,lucene,and,the,current,point,is,equal,to,the,expected,one,param,sync,id,id,of,this,sync,param,expected,commit,id,the,expected,value,of,return,true,if,the,sync,commit,was,made,false,o,w;public,abstract,synced,flush,result,sync,flush,string,sync,id,commit,id,expected,commit,id,throws,engine,exception
Engine -> public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;1551110274;Attempts to do a special commit where the given syncID is put into the commit data. The attempt_succeeds if there are not pending writes in lucene and the current point is equal to the expected one.__@param syncId           id of this sync_@param expectedCommitId the expected value of_@return true if the sync commit was made, false o.w.;public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;attempts,to,do,a,special,commit,where,the,given,sync,id,is,put,into,the,commit,data,the,attempt,succeeds,if,there,are,not,pending,writes,in,lucene,and,the,current,point,is,equal,to,the,expected,one,param,sync,id,id,of,this,sync,param,expected,commit,id,the,expected,value,of,return,true,if,the,sync,commit,was,made,false,o,w;public,abstract,synced,flush,result,sync,flush,string,sync,id,commit,id,expected,commit,id,throws,engine,exception
Engine -> public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;1551126708;Attempts to do a special commit where the given syncID is put into the commit data. The attempt_succeeds if there are not pending writes in lucene and the current point is equal to the expected one.__@param syncId           id of this sync_@param expectedCommitId the expected value of_@return true if the sync commit was made, false o.w.;public abstract SyncedFlushResult syncFlush(String syncId, CommitId expectedCommitId) throws EngineException_;attempts,to,do,a,special,commit,where,the,given,sync,id,is,put,into,the,commit,data,the,attempt,succeeds,if,there,are,not,pending,writes,in,lucene,and,the,current,point,is,equal,to,the,expected,one,param,sync,id,id,of,this,sync,param,expected,commit,id,the,expected,value,of,return,true,if,the,sync,commit,was,made,false,o,w;public,abstract,synced,flush,result,sync,flush,string,sync,id,commit,id,expected,commit,id,throws,engine,exception
Engine -> public abstract boolean shouldPeriodicallyFlush()_;1524684173;Checks if this engine should be flushed periodically._This check is mainly based on the uncommitted translog size and the translog flush threshold setting.;public abstract boolean shouldPeriodicallyFlush()_;checks,if,this,engine,should,be,flushed,periodically,this,check,is,mainly,based,on,the,uncommitted,translog,size,and,the,translog,flush,threshold,setting;public,abstract,boolean,should,periodically,flush
Engine -> public abstract boolean shouldPeriodicallyFlush()_;1525162917;Checks if this engine should be flushed periodically._This check is mainly based on the uncommitted translog size and the translog flush threshold setting.;public abstract boolean shouldPeriodicallyFlush()_;checks,if,this,engine,should,be,flushed,periodically,this,check,is,mainly,based,on,the,uncommitted,translog,size,and,the,translog,flush,threshold,setting;public,abstract,boolean,should,periodically,flush
Engine -> public abstract boolean shouldPeriodicallyFlush()_;1525334055;Checks if this engine should be flushed periodically._This check is mainly based on the uncommitted translog size and the translog flush threshold setting.;public abstract boolean shouldPeriodicallyFlush()_;checks,if,this,engine,should,be,flushed,periodically,this,check,is,mainly,based,on,the,uncommitted,translog,size,and,the,translog,flush,threshold,setting;public,abstract,boolean,should,periodically,flush
Engine -> public abstract boolean shouldPeriodicallyFlush()_;1527583663;Checks if this engine should be flushed periodically._This check is mainly based on the uncommitted translog size and the translog flush threshold setting.;public abstract boolean shouldPeriodicallyFlush()_;checks,if,this,engine,should,be,flushed,periodically,this,check,is,mainly,based,on,the,uncommitted,translog,size,and,the,translog,flush,threshold,setting;public,abstract,boolean,should,periodically,flush
Engine -> public abstract boolean shouldPeriodicallyFlush()_;1528706846;Checks if this engine should be flushed periodically._This check is mainly based on the uncommitted translog size and the translog flush threshold setting.;public abstract boolean shouldPeriodicallyFlush()_;checks,if,this,engine,should,be,flushed,periodically,this,check,is,mainly,based,on,the,uncommitted,translog,size,and,the,translog,flush,threshold,setting;public,abstract,boolean,should,periodically,flush
Engine -> public abstract boolean shouldPeriodicallyFlush()_;1528762805;Checks if this engine should be flushed periodically._This check is mainly based on the uncommitted translog size and the translog flush threshold setting.;public abstract boolean shouldPeriodicallyFlush()_;checks,if,this,engine,should,be,flushed,periodically,this,check,is,mainly,based,on,the,uncommitted,translog,size,and,the,translog,flush,threshold,setting;public,abstract,boolean,should,periodically,flush
Engine -> public abstract boolean shouldPeriodicallyFlush()_;1531910483;Checks if this engine should be flushed periodically._This check is mainly based on the uncommitted translog size and the translog flush threshold setting.;public abstract boolean shouldPeriodicallyFlush()_;checks,if,this,engine,should,be,flushed,periodically,this,check,is,mainly,based,on,the,uncommitted,translog,size,and,the,translog,flush,threshold,setting;public,abstract,boolean,should,periodically,flush
Engine -> public abstract boolean shouldPeriodicallyFlush()_;1532685069;Checks if this engine should be flushed periodically._This check is mainly based on the uncommitted translog size and the translog flush threshold setting.;public abstract boolean shouldPeriodicallyFlush()_;checks,if,this,engine,should,be,flushed,periodically,this,check,is,mainly,based,on,the,uncommitted,translog,size,and,the,translog,flush,threshold,setting;public,abstract,boolean,should,periodically,flush
Engine -> public abstract boolean shouldPeriodicallyFlush()_;1533295538;Checks if this engine should be flushed periodically._This check is mainly based on the uncommitted translog size and the translog flush threshold setting.;public abstract boolean shouldPeriodicallyFlush()_;checks,if,this,engine,should,be,flushed,periodically,this,check,is,mainly,based,on,the,uncommitted,translog,size,and,the,translog,flush,threshold,setting;public,abstract,boolean,should,periodically,flush
Engine -> public abstract boolean shouldPeriodicallyFlush()_;1535046779;Checks if this engine should be flushed periodically._This check is mainly based on the uncommitted translog size and the translog flush threshold setting.;public abstract boolean shouldPeriodicallyFlush()_;checks,if,this,engine,should,be,flushed,periodically,this,check,is,mainly,based,on,the,uncommitted,translog,size,and,the,translog,flush,threshold,setting;public,abstract,boolean,should,periodically,flush
Engine -> public abstract boolean shouldPeriodicallyFlush()_;1535723122;Checks if this engine should be flushed periodically._This check is mainly based on the uncommitted translog size and the translog flush threshold setting.;public abstract boolean shouldPeriodicallyFlush()_;checks,if,this,engine,should,be,flushed,periodically,this,check,is,mainly,based,on,the,uncommitted,translog,size,and,the,translog,flush,threshold,setting;public,abstract,boolean,should,periodically,flush
Engine -> public abstract boolean shouldPeriodicallyFlush()_;1535965276;Checks if this engine should be flushed periodically._This check is mainly based on the uncommitted translog size and the translog flush threshold setting.;public abstract boolean shouldPeriodicallyFlush()_;checks,if,this,engine,should,be,flushed,periodically,this,check,is,mainly,based,on,the,uncommitted,translog,size,and,the,translog,flush,threshold,setting;public,abstract,boolean,should,periodically,flush
Engine -> public abstract boolean shouldPeriodicallyFlush()_;1536314350;Checks if this engine should be flushed periodically._This check is mainly based on the uncommitted translog size and the translog flush threshold setting.;public abstract boolean shouldPeriodicallyFlush()_;checks,if,this,engine,should,be,flushed,periodically,this,check,is,mainly,based,on,the,uncommitted,translog,size,and,the,translog,flush,threshold,setting;public,abstract,boolean,should,periodically,flush
Engine -> public abstract boolean shouldPeriodicallyFlush()_;1536828374;Checks if this engine should be flushed periodically._This check is mainly based on the uncommitted translog size and the translog flush threshold setting.;public abstract boolean shouldPeriodicallyFlush()_;checks,if,this,engine,should,be,flushed,periodically,this,check,is,mainly,based,on,the,uncommitted,translog,size,and,the,translog,flush,threshold,setting;public,abstract,boolean,should,periodically,flush
Engine -> public abstract boolean shouldPeriodicallyFlush()_;1537371806;Checks if this engine should be flushed periodically._This check is mainly based on the uncommitted translog size and the translog flush threshold setting.;public abstract boolean shouldPeriodicallyFlush()_;checks,if,this,engine,should,be,flushed,periodically,this,check,is,mainly,based,on,the,uncommitted,translog,size,and,the,translog,flush,threshold,setting;public,abstract,boolean,should,periodically,flush
Engine -> public abstract boolean shouldPeriodicallyFlush()_;1537806831;Checks if this engine should be flushed periodically._This check is mainly based on the uncommitted translog size and the translog flush threshold setting.;public abstract boolean shouldPeriodicallyFlush()_;checks,if,this,engine,should,be,flushed,periodically,this,check,is,mainly,based,on,the,uncommitted,translog,size,and,the,translog,flush,threshold,setting;public,abstract,boolean,should,periodically,flush
Engine -> public abstract boolean shouldPeriodicallyFlush()_;1538067637;Checks if this engine should be flushed periodically._This check is mainly based on the uncommitted translog size and the translog flush threshold setting.;public abstract boolean shouldPeriodicallyFlush()_;checks,if,this,engine,should,be,flushed,periodically,this,check,is,mainly,based,on,the,uncommitted,translog,size,and,the,translog,flush,threshold,setting;public,abstract,boolean,should,periodically,flush
Engine -> public abstract boolean shouldPeriodicallyFlush()_;1538424609;Checks if this engine should be flushed periodically._This check is mainly based on the uncommitted translog size and the translog flush threshold setting.;public abstract boolean shouldPeriodicallyFlush()_;checks,if,this,engine,should,be,flushed,periodically,this,check,is,mainly,based,on,the,uncommitted,translog,size,and,the,translog,flush,threshold,setting;public,abstract,boolean,should,periodically,flush
Engine -> public abstract boolean shouldPeriodicallyFlush()_;1539723533;Checks if this engine should be flushed periodically._This check is mainly based on the uncommitted translog size and the translog flush threshold setting.;public abstract boolean shouldPeriodicallyFlush()_;checks,if,this,engine,should,be,flushed,periodically,this,check,is,mainly,based,on,the,uncommitted,translog,size,and,the,translog,flush,threshold,setting;public,abstract,boolean,should,periodically,flush
Engine -> public abstract boolean shouldPeriodicallyFlush()_;1541618615;Checks if this engine should be flushed periodically._This check is mainly based on the uncommitted translog size and the translog flush threshold setting.;public abstract boolean shouldPeriodicallyFlush()_;checks,if,this,engine,should,be,flushed,periodically,this,check,is,mainly,based,on,the,uncommitted,translog,size,and,the,translog,flush,threshold,setting;public,abstract,boolean,should,periodically,flush
Engine -> public abstract boolean shouldPeriodicallyFlush()_;1542697754;Checks if this engine should be flushed periodically._This check is mainly based on the uncommitted translog size and the translog flush threshold setting.;public abstract boolean shouldPeriodicallyFlush()_;checks,if,this,engine,should,be,flushed,periodically,this,check,is,mainly,based,on,the,uncommitted,translog,size,and,the,translog,flush,threshold,setting;public,abstract,boolean,should,periodically,flush
Engine -> public abstract boolean shouldPeriodicallyFlush()_;1543047942;Checks if this engine should be flushed periodically._This check is mainly based on the uncommitted translog size and the translog flush threshold setting.;public abstract boolean shouldPeriodicallyFlush()_;checks,if,this,engine,should,be,flushed,periodically,this,check,is,mainly,based,on,the,uncommitted,translog,size,and,the,translog,flush,threshold,setting;public,abstract,boolean,should,periodically,flush
Engine -> public abstract boolean shouldPeriodicallyFlush()_;1544545090;Checks if this engine should be flushed periodically._This check is mainly based on the uncommitted translog size and the translog flush threshold setting.;public abstract boolean shouldPeriodicallyFlush()_;checks,if,this,engine,should,be,flushed,periodically,this,check,is,mainly,based,on,the,uncommitted,translog,size,and,the,translog,flush,threshold,setting;public,abstract,boolean,should,periodically,flush
Engine -> public abstract boolean shouldPeriodicallyFlush()_;1544684920;Checks if this engine should be flushed periodically._This check is mainly based on the uncommitted translog size and the translog flush threshold setting.;public abstract boolean shouldPeriodicallyFlush()_;checks,if,this,engine,should,be,flushed,periodically,this,check,is,mainly,based,on,the,uncommitted,translog,size,and,the,translog,flush,threshold,setting;public,abstract,boolean,should,periodically,flush
Engine -> public abstract boolean shouldPeriodicallyFlush()_;1545140118;Checks if this engine should be flushed periodically._This check is mainly based on the uncommitted translog size and the translog flush threshold setting.;public abstract boolean shouldPeriodicallyFlush()_;checks,if,this,engine,should,be,flushed,periodically,this,check,is,mainly,based,on,the,uncommitted,translog,size,and,the,translog,flush,threshold,setting;public,abstract,boolean,should,periodically,flush
Engine -> public abstract boolean shouldPeriodicallyFlush()_;1545221705;Checks if this engine should be flushed periodically._This check is mainly based on the uncommitted translog size and the translog flush threshold setting.;public abstract boolean shouldPeriodicallyFlush()_;checks,if,this,engine,should,be,flushed,periodically,this,check,is,mainly,based,on,the,uncommitted,translog,size,and,the,translog,flush,threshold,setting;public,abstract,boolean,should,periodically,flush
Engine -> public abstract boolean shouldPeriodicallyFlush()_;1547332999;Checks if this engine should be flushed periodically._This check is mainly based on the uncommitted translog size and the translog flush threshold setting.;public abstract boolean shouldPeriodicallyFlush()_;checks,if,this,engine,should,be,flushed,periodically,this,check,is,mainly,based,on,the,uncommitted,translog,size,and,the,translog,flush,threshold,setting;public,abstract,boolean,should,periodically,flush
Engine -> public abstract boolean shouldPeriodicallyFlush()_;1548771485;Checks if this engine should be flushed periodically._This check is mainly based on the uncommitted translog size and the translog flush threshold setting.;public abstract boolean shouldPeriodicallyFlush()_;checks,if,this,engine,should,be,flushed,periodically,this,check,is,mainly,based,on,the,uncommitted,translog,size,and,the,translog,flush,threshold,setting;public,abstract,boolean,should,periodically,flush
Engine -> public abstract boolean shouldPeriodicallyFlush()_;1549891630;Checks if this engine should be flushed periodically._This check is mainly based on the uncommitted translog size and the translog flush threshold setting.;public abstract boolean shouldPeriodicallyFlush()_;checks,if,this,engine,should,be,flushed,periodically,this,check,is,mainly,based,on,the,uncommitted,translog,size,and,the,translog,flush,threshold,setting;public,abstract,boolean,should,periodically,flush
Engine -> public abstract boolean shouldPeriodicallyFlush()_;1549975032;Checks if this engine should be flushed periodically._This check is mainly based on the uncommitted translog size and the translog flush threshold setting.;public abstract boolean shouldPeriodicallyFlush()_;checks,if,this,engine,should,be,flushed,periodically,this,check,is,mainly,based,on,the,uncommitted,translog,size,and,the,translog,flush,threshold,setting;public,abstract,boolean,should,periodically,flush
Engine -> public abstract boolean shouldPeriodicallyFlush()_;1550220204;Checks if this engine should be flushed periodically._This check is mainly based on the uncommitted translog size and the translog flush threshold setting.;public abstract boolean shouldPeriodicallyFlush()_;checks,if,this,engine,should,be,flushed,periodically,this,check,is,mainly,based,on,the,uncommitted,translog,size,and,the,translog,flush,threshold,setting;public,abstract,boolean,should,periodically,flush
Engine -> public abstract boolean shouldPeriodicallyFlush()_;1550526771;Checks if this engine should be flushed periodically._This check is mainly based on the uncommitted translog size and the translog flush threshold setting.;public abstract boolean shouldPeriodicallyFlush()_;checks,if,this,engine,should,be,flushed,periodically,this,check,is,mainly,based,on,the,uncommitted,translog,size,and,the,translog,flush,threshold,setting;public,abstract,boolean,should,periodically,flush
Engine -> public abstract boolean shouldPeriodicallyFlush()_;1551110274;Checks if this engine should be flushed periodically._This check is mainly based on the uncommitted translog size and the translog flush threshold setting.;public abstract boolean shouldPeriodicallyFlush()_;checks,if,this,engine,should,be,flushed,periodically,this,check,is,mainly,based,on,the,uncommitted,translog,size,and,the,translog,flush,threshold,setting;public,abstract,boolean,should,periodically,flush
Engine -> public abstract boolean shouldPeriodicallyFlush()_;1551126708;Checks if this engine should be flushed periodically._This check is mainly based on the uncommitted translog size and the translog flush threshold setting.;public abstract boolean shouldPeriodicallyFlush()_;checks,if,this,engine,should,be,flushed,periodically,this,check,is,mainly,based,on,the,uncommitted,translog,size,and,the,translog,flush,threshold,setting;public,abstract,boolean,should,periodically,flush
Engine -> Result -> public long getTook();1524684173;get total time in nanoseconds;public long getTook() {_            return took__        };get,total,time,in,nanoseconds;public,long,get,took,return,took
Engine -> Result -> public long getTook();1525162917;get total time in nanoseconds;public long getTook() {_            return took__        };get,total,time,in,nanoseconds;public,long,get,took,return,took
Engine -> Result -> public long getTook();1525334055;get total time in nanoseconds;public long getTook() {_            return took__        };get,total,time,in,nanoseconds;public,long,get,took,return,took
Engine -> Result -> public long getTook();1527583663;get total time in nanoseconds;public long getTook() {_            return took__        };get,total,time,in,nanoseconds;public,long,get,took,return,took
Engine -> Result -> public long getTook();1528706846;get total time in nanoseconds;public long getTook() {_            return took__        };get,total,time,in,nanoseconds;public,long,get,took,return,took
Engine -> Result -> public long getTook();1528762805;get total time in nanoseconds;public long getTook() {_            return took__        };get,total,time,in,nanoseconds;public,long,get,took,return,took
Engine -> Result -> public long getTook();1531910483;get total time in nanoseconds;public long getTook() {_            return took__        };get,total,time,in,nanoseconds;public,long,get,took,return,took
Engine -> Result -> public long getTook();1532685069;get total time in nanoseconds;public long getTook() {_            return took__        };get,total,time,in,nanoseconds;public,long,get,took,return,took
Engine -> Result -> public long getTook();1533295538;get total time in nanoseconds;public long getTook() {_            return took__        };get,total,time,in,nanoseconds;public,long,get,took,return,took
Engine -> Result -> public long getTook();1535046779;get total time in nanoseconds;public long getTook() {_            return took__        };get,total,time,in,nanoseconds;public,long,get,took,return,took
Engine -> Result -> public long getTook();1535723122;get total time in nanoseconds;public long getTook() {_            return took__        };get,total,time,in,nanoseconds;public,long,get,took,return,took
Engine -> Result -> public long getTook();1535965276;get total time in nanoseconds;public long getTook() {_            return took__        };get,total,time,in,nanoseconds;public,long,get,took,return,took
Engine -> Result -> public long getTook();1536314350;get total time in nanoseconds;public long getTook() {_            return took__        };get,total,time,in,nanoseconds;public,long,get,took,return,took
Engine -> Result -> public long getTook();1536828374;get total time in nanoseconds;public long getTook() {_            return took__        };get,total,time,in,nanoseconds;public,long,get,took,return,took
Engine -> Result -> public long getTook();1537371806;get total time in nanoseconds;public long getTook() {_            return took__        };get,total,time,in,nanoseconds;public,long,get,took,return,took
Engine -> Result -> public long getTook();1537806831;get total time in nanoseconds;public long getTook() {_            return took__        };get,total,time,in,nanoseconds;public,long,get,took,return,took
Engine -> Result -> public long getTook();1538067637;get total time in nanoseconds;public long getTook() {_            return took__        };get,total,time,in,nanoseconds;public,long,get,took,return,took
Engine -> Result -> public long getTook();1538424609;get total time in nanoseconds;public long getTook() {_            return took__        };get,total,time,in,nanoseconds;public,long,get,took,return,took
Engine -> Result -> public long getTook();1539723533;get total time in nanoseconds;public long getTook() {_            return took__        };get,total,time,in,nanoseconds;public,long,get,took,return,took
Engine -> Result -> public long getTook();1541618615;get total time in nanoseconds;public long getTook() {_            return took__        };get,total,time,in,nanoseconds;public,long,get,took,return,took
Engine -> Result -> public long getTook();1542697754;get total time in nanoseconds;public long getTook() {_            return took__        };get,total,time,in,nanoseconds;public,long,get,took,return,took
Engine -> Result -> public long getTook();1543047942;get total time in nanoseconds;public long getTook() {_            return took__        };get,total,time,in,nanoseconds;public,long,get,took,return,took
Engine -> Result -> public long getTook();1544545090;get total time in nanoseconds;public long getTook() {_            return took__        };get,total,time,in,nanoseconds;public,long,get,took,return,took
Engine -> Result -> public long getTook();1544684920;get total time in nanoseconds;public long getTook() {_            return took__        };get,total,time,in,nanoseconds;public,long,get,took,return,took
Engine -> Result -> public long getTook();1545140118;get total time in nanoseconds;public long getTook() {_            return took__        };get,total,time,in,nanoseconds;public,long,get,took,return,took
Engine -> Result -> public long getTook();1545221705;get total time in nanoseconds;public long getTook() {_            return took__        };get,total,time,in,nanoseconds;public,long,get,took,return,took
Engine -> Result -> public long getTook();1547332999;get total time in nanoseconds;public long getTook() {_            return took__        };get,total,time,in,nanoseconds;public,long,get,took,return,took
Engine -> Result -> public long getTook();1548771485;get total time in nanoseconds;public long getTook() {_            return took__        };get,total,time,in,nanoseconds;public,long,get,took,return,took
Engine -> Result -> public long getTook();1549891630;get total time in nanoseconds;public long getTook() {_            return took__        };get,total,time,in,nanoseconds;public,long,get,took,return,took
Engine -> Result -> public long getTook();1549975032;get total time in nanoseconds;public long getTook() {_            return took__        };get,total,time,in,nanoseconds;public,long,get,took,return,took
Engine -> Result -> public long getTook();1550220204;get total time in nanoseconds;public long getTook() {_            return took__        };get,total,time,in,nanoseconds;public,long,get,took,return,took
Engine -> Result -> public long getTook();1550526771;get total time in nanoseconds;public long getTook() {_            return took__        };get,total,time,in,nanoseconds;public,long,get,took,return,took
Engine -> Result -> public long getTook();1551110274;get total time in nanoseconds;public long getTook() {_            return took__        };get,total,time,in,nanoseconds;public,long,get,took,return,took
Engine -> Result -> public long getTook();1551126708;get total time in nanoseconds;public long getTook() {_            return took__        };get,total,time,in,nanoseconds;public,long,get,took,return,took
Engine -> public final Searcher acquireSearcher(String source) throws EngineException;1524684173;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire__@see Searcher#close();public final Searcher acquireSearcher(String source) throws EngineException {_        return acquireSearcher(source, SearcherScope.EXTERNAL)__    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,see,searcher,close;public,final,searcher,acquire,searcher,string,source,throws,engine,exception,return,acquire,searcher,source,searcher,scope,external
Engine -> public final Searcher acquireSearcher(String source) throws EngineException;1525162917;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire__@see Searcher#close();public final Searcher acquireSearcher(String source) throws EngineException {_        return acquireSearcher(source, SearcherScope.EXTERNAL)__    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,see,searcher,close;public,final,searcher,acquire,searcher,string,source,throws,engine,exception,return,acquire,searcher,source,searcher,scope,external
Engine -> public final Searcher acquireSearcher(String source) throws EngineException;1525334055;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire__@see Searcher#close();public final Searcher acquireSearcher(String source) throws EngineException {_        return acquireSearcher(source, SearcherScope.EXTERNAL)__    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,see,searcher,close;public,final,searcher,acquire,searcher,string,source,throws,engine,exception,return,acquire,searcher,source,searcher,scope,external
Engine -> public final Searcher acquireSearcher(String source) throws EngineException;1527583663;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire__@see Searcher#close();public final Searcher acquireSearcher(String source) throws EngineException {_        return acquireSearcher(source, SearcherScope.EXTERNAL)__    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,see,searcher,close;public,final,searcher,acquire,searcher,string,source,throws,engine,exception,return,acquire,searcher,source,searcher,scope,external
Engine -> public final Searcher acquireSearcher(String source) throws EngineException;1528706846;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire__@see Searcher#close();public final Searcher acquireSearcher(String source) throws EngineException {_        return acquireSearcher(source, SearcherScope.EXTERNAL)__    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,see,searcher,close;public,final,searcher,acquire,searcher,string,source,throws,engine,exception,return,acquire,searcher,source,searcher,scope,external
Engine -> public final Searcher acquireSearcher(String source) throws EngineException;1528762805;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire__@see Searcher#close();public final Searcher acquireSearcher(String source) throws EngineException {_        return acquireSearcher(source, SearcherScope.EXTERNAL)__    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,see,searcher,close;public,final,searcher,acquire,searcher,string,source,throws,engine,exception,return,acquire,searcher,source,searcher,scope,external
Engine -> public final Searcher acquireSearcher(String source) throws EngineException;1531910483;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire__@see Searcher#close();public final Searcher acquireSearcher(String source) throws EngineException {_        return acquireSearcher(source, SearcherScope.EXTERNAL)__    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,see,searcher,close;public,final,searcher,acquire,searcher,string,source,throws,engine,exception,return,acquire,searcher,source,searcher,scope,external
Engine -> public final Searcher acquireSearcher(String source) throws EngineException;1532685069;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire__@see Searcher#close();public final Searcher acquireSearcher(String source) throws EngineException {_        return acquireSearcher(source, SearcherScope.EXTERNAL)__    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,see,searcher,close;public,final,searcher,acquire,searcher,string,source,throws,engine,exception,return,acquire,searcher,source,searcher,scope,external
Engine -> public final Searcher acquireSearcher(String source) throws EngineException;1533295538;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire__@see Searcher#close();public final Searcher acquireSearcher(String source) throws EngineException {_        return acquireSearcher(source, SearcherScope.EXTERNAL)__    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,see,searcher,close;public,final,searcher,acquire,searcher,string,source,throws,engine,exception,return,acquire,searcher,source,searcher,scope,external
Engine -> public final Searcher acquireSearcher(String source) throws EngineException;1535046779;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire__@see Searcher#close();public final Searcher acquireSearcher(String source) throws EngineException {_        return acquireSearcher(source, SearcherScope.EXTERNAL)__    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,see,searcher,close;public,final,searcher,acquire,searcher,string,source,throws,engine,exception,return,acquire,searcher,source,searcher,scope,external
Engine -> public final Searcher acquireSearcher(String source) throws EngineException;1535723122;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire__@see Searcher#close();public final Searcher acquireSearcher(String source) throws EngineException {_        return acquireSearcher(source, SearcherScope.EXTERNAL)__    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,see,searcher,close;public,final,searcher,acquire,searcher,string,source,throws,engine,exception,return,acquire,searcher,source,searcher,scope,external
Engine -> public final Searcher acquireSearcher(String source) throws EngineException;1535965276;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire__@see Searcher#close();public final Searcher acquireSearcher(String source) throws EngineException {_        return acquireSearcher(source, SearcherScope.EXTERNAL)__    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,see,searcher,close;public,final,searcher,acquire,searcher,string,source,throws,engine,exception,return,acquire,searcher,source,searcher,scope,external
Engine -> public final Searcher acquireSearcher(String source) throws EngineException;1536314350;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire__@see Searcher#close();public final Searcher acquireSearcher(String source) throws EngineException {_        return acquireSearcher(source, SearcherScope.EXTERNAL)__    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,see,searcher,close;public,final,searcher,acquire,searcher,string,source,throws,engine,exception,return,acquire,searcher,source,searcher,scope,external
Engine -> public final Searcher acquireSearcher(String source) throws EngineException;1536828374;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire__@see Searcher#close();public final Searcher acquireSearcher(String source) throws EngineException {_        return acquireSearcher(source, SearcherScope.EXTERNAL)__    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,see,searcher,close;public,final,searcher,acquire,searcher,string,source,throws,engine,exception,return,acquire,searcher,source,searcher,scope,external
Engine -> public final Searcher acquireSearcher(String source) throws EngineException;1537371806;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire__@see Searcher#close();public final Searcher acquireSearcher(String source) throws EngineException {_        return acquireSearcher(source, SearcherScope.EXTERNAL)__    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,see,searcher,close;public,final,searcher,acquire,searcher,string,source,throws,engine,exception,return,acquire,searcher,source,searcher,scope,external
Engine -> public final Searcher acquireSearcher(String source) throws EngineException;1537806831;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire__@see Searcher#close();public final Searcher acquireSearcher(String source) throws EngineException {_        return acquireSearcher(source, SearcherScope.EXTERNAL)__    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,see,searcher,close;public,final,searcher,acquire,searcher,string,source,throws,engine,exception,return,acquire,searcher,source,searcher,scope,external
Engine -> public final Searcher acquireSearcher(String source) throws EngineException;1538067637;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire__@see Searcher#close();public final Searcher acquireSearcher(String source) throws EngineException {_        return acquireSearcher(source, SearcherScope.EXTERNAL)__    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,see,searcher,close;public,final,searcher,acquire,searcher,string,source,throws,engine,exception,return,acquire,searcher,source,searcher,scope,external
Engine -> public final Searcher acquireSearcher(String source) throws EngineException;1538424609;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire__@see Searcher#close();public final Searcher acquireSearcher(String source) throws EngineException {_        return acquireSearcher(source, SearcherScope.EXTERNAL)__    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,see,searcher,close;public,final,searcher,acquire,searcher,string,source,throws,engine,exception,return,acquire,searcher,source,searcher,scope,external
Engine -> public final Searcher acquireSearcher(String source) throws EngineException;1539723533;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire__@see Searcher#close();public final Searcher acquireSearcher(String source) throws EngineException {_        return acquireSearcher(source, SearcherScope.EXTERNAL)__    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,see,searcher,close;public,final,searcher,acquire,searcher,string,source,throws,engine,exception,return,acquire,searcher,source,searcher,scope,external
Engine -> public final Searcher acquireSearcher(String source) throws EngineException;1541618615;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire__@see Searcher#close();public final Searcher acquireSearcher(String source) throws EngineException {_        return acquireSearcher(source, SearcherScope.EXTERNAL)__    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,see,searcher,close;public,final,searcher,acquire,searcher,string,source,throws,engine,exception,return,acquire,searcher,source,searcher,scope,external
Engine -> public final Searcher acquireSearcher(String source) throws EngineException;1542697754;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire__@see Searcher#close();public final Searcher acquireSearcher(String source) throws EngineException {_        return acquireSearcher(source, SearcherScope.EXTERNAL)__    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,see,searcher,close;public,final,searcher,acquire,searcher,string,source,throws,engine,exception,return,acquire,searcher,source,searcher,scope,external
Engine -> public final Searcher acquireSearcher(String source) throws EngineException;1543047942;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire__@see Searcher#close();public final Searcher acquireSearcher(String source) throws EngineException {_        return acquireSearcher(source, SearcherScope.EXTERNAL)__    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,see,searcher,close;public,final,searcher,acquire,searcher,string,source,throws,engine,exception,return,acquire,searcher,source,searcher,scope,external
Engine -> public final Searcher acquireSearcher(String source) throws EngineException;1544545090;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire__@see Searcher#close();public final Searcher acquireSearcher(String source) throws EngineException {_        return acquireSearcher(source, SearcherScope.EXTERNAL)__    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,see,searcher,close;public,final,searcher,acquire,searcher,string,source,throws,engine,exception,return,acquire,searcher,source,searcher,scope,external
Engine -> public final Searcher acquireSearcher(String source) throws EngineException;1544684920;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire__@see Searcher#close();public final Searcher acquireSearcher(String source) throws EngineException {_        return acquireSearcher(source, SearcherScope.EXTERNAL)__    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,see,searcher,close;public,final,searcher,acquire,searcher,string,source,throws,engine,exception,return,acquire,searcher,source,searcher,scope,external
Engine -> public final Searcher acquireSearcher(String source) throws EngineException;1545140118;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire__@see Searcher#close();public final Searcher acquireSearcher(String source) throws EngineException {_        return acquireSearcher(source, SearcherScope.EXTERNAL)__    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,see,searcher,close;public,final,searcher,acquire,searcher,string,source,throws,engine,exception,return,acquire,searcher,source,searcher,scope,external
Engine -> public final Searcher acquireSearcher(String source) throws EngineException;1545221705;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire__@see Searcher#close();public final Searcher acquireSearcher(String source) throws EngineException {_        return acquireSearcher(source, SearcherScope.EXTERNAL)__    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,see,searcher,close;public,final,searcher,acquire,searcher,string,source,throws,engine,exception,return,acquire,searcher,source,searcher,scope,external
Engine -> public final Searcher acquireSearcher(String source) throws EngineException;1547332999;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire__@see Searcher#close();public final Searcher acquireSearcher(String source) throws EngineException {_        return acquireSearcher(source, SearcherScope.EXTERNAL)__    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,see,searcher,close;public,final,searcher,acquire,searcher,string,source,throws,engine,exception,return,acquire,searcher,source,searcher,scope,external
Engine -> public final Searcher acquireSearcher(String source) throws EngineException;1548771485;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire__@see Searcher#close();public final Searcher acquireSearcher(String source) throws EngineException {_        return acquireSearcher(source, SearcherScope.EXTERNAL)__    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,see,searcher,close;public,final,searcher,acquire,searcher,string,source,throws,engine,exception,return,acquire,searcher,source,searcher,scope,external
Engine -> public final Searcher acquireSearcher(String source) throws EngineException;1549891630;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire__@see Searcher#close();public final Searcher acquireSearcher(String source) throws EngineException {_        return acquireSearcher(source, SearcherScope.EXTERNAL)__    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,see,searcher,close;public,final,searcher,acquire,searcher,string,source,throws,engine,exception,return,acquire,searcher,source,searcher,scope,external
Engine -> public final Searcher acquireSearcher(String source) throws EngineException;1549975032;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire__@see Searcher#close();public final Searcher acquireSearcher(String source) throws EngineException {_        return acquireSearcher(source, SearcherScope.EXTERNAL)__    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,see,searcher,close;public,final,searcher,acquire,searcher,string,source,throws,engine,exception,return,acquire,searcher,source,searcher,scope,external
Engine -> public final Searcher acquireSearcher(String source) throws EngineException;1550220204;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire__@see Searcher#close();public final Searcher acquireSearcher(String source) throws EngineException {_        return acquireSearcher(source, SearcherScope.EXTERNAL)__    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,see,searcher,close;public,final,searcher,acquire,searcher,string,source,throws,engine,exception,return,acquire,searcher,source,searcher,scope,external
Engine -> public final Searcher acquireSearcher(String source) throws EngineException;1550526771;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire__@see Searcher#close();public final Searcher acquireSearcher(String source) throws EngineException {_        return acquireSearcher(source, SearcherScope.EXTERNAL)__    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,see,searcher,close;public,final,searcher,acquire,searcher,string,source,throws,engine,exception,return,acquire,searcher,source,searcher,scope,external
Engine -> public final Searcher acquireSearcher(String source) throws EngineException;1551110274;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire__@see Searcher#close();public final Searcher acquireSearcher(String source) throws EngineException {_        return acquireSearcher(source, SearcherScope.EXTERNAL)__    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,see,searcher,close;public,final,searcher,acquire,searcher,string,source,throws,engine,exception,return,acquire,searcher,source,searcher,scope,external
Engine -> public final Searcher acquireSearcher(String source) throws EngineException;1551126708;Returns a new searcher instance. The consumer of this_API is responsible for releasing the returned searcher in a_safe manner, preferably in a try/finally block.__@param source the source API or routing that triggers this searcher acquire__@see Searcher#close();public final Searcher acquireSearcher(String source) throws EngineException {_        return acquireSearcher(source, SearcherScope.EXTERNAL)__    };returns,a,new,searcher,instance,the,consumer,of,this,api,is,responsible,for,releasing,the,returned,searcher,in,a,safe,manner,preferably,in,a,try,finally,block,param,source,the,source,api,or,routing,that,triggers,this,searcher,acquire,see,searcher,close;public,final,searcher,acquire,searcher,string,source,throws,engine,exception,return,acquire,searcher,source,searcher,scope,external
Engine -> public boolean isTranslogSyncNeeded();1524684173;Checks if the underlying storage sync is required.;public boolean isTranslogSyncNeeded() {_        return getTranslog().syncNeeded()__    };checks,if,the,underlying,storage,sync,is,required;public,boolean,is,translog,sync,needed,return,get,translog,sync,needed
Engine -> public boolean isTranslogSyncNeeded();1525162917;Checks if the underlying storage sync is required.;public boolean isTranslogSyncNeeded() {_        return getTranslog().syncNeeded()__    };checks,if,the,underlying,storage,sync,is,required;public,boolean,is,translog,sync,needed,return,get,translog,sync,needed
Engine -> public boolean isTranslogSyncNeeded();1525334055;Checks if the underlying storage sync is required.;public boolean isTranslogSyncNeeded() {_        return getTranslog().syncNeeded()__    };checks,if,the,underlying,storage,sync,is,required;public,boolean,is,translog,sync,needed,return,get,translog,sync,needed
Engine -> public boolean isTranslogSyncNeeded();1527583663;Checks if the underlying storage sync is required.;public boolean isTranslogSyncNeeded() {_        return getTranslog().syncNeeded()__    };checks,if,the,underlying,storage,sync,is,required;public,boolean,is,translog,sync,needed,return,get,translog,sync,needed
Engine -> public boolean isTranslogSyncNeeded();1528706846;Checks if the underlying storage sync is required.;public boolean isTranslogSyncNeeded() {_        return getTranslog().syncNeeded()__    };checks,if,the,underlying,storage,sync,is,required;public,boolean,is,translog,sync,needed,return,get,translog,sync,needed
Engine -> public abstract int restoreLocalHistoryFromTranslog(TranslogRecoveryRunner translogRecoveryRunner) throws IOException_;1537806831;This method replays translog to restore the Lucene index which might be reverted previously._This ensures that all acknowledged writes are restored correctly when this engine is promoted.__@return the number of translog operations have been recovered;public abstract int restoreLocalHistoryFromTranslog(TranslogRecoveryRunner translogRecoveryRunner) throws IOException_;this,method,replays,translog,to,restore,the,lucene,index,which,might,be,reverted,previously,this,ensures,that,all,acknowledged,writes,are,restored,correctly,when,this,engine,is,promoted,return,the,number,of,translog,operations,have,been,recovered;public,abstract,int,restore,local,history,from,translog,translog,recovery,runner,translog,recovery,runner,throws,ioexception
Engine -> public abstract int restoreLocalHistoryFromTranslog(TranslogRecoveryRunner translogRecoveryRunner) throws IOException_;1538067637;This method replays translog to restore the Lucene index which might be reverted previously._This ensures that all acknowledged writes are restored correctly when this engine is promoted.__@return the number of translog operations have been recovered;public abstract int restoreLocalHistoryFromTranslog(TranslogRecoveryRunner translogRecoveryRunner) throws IOException_;this,method,replays,translog,to,restore,the,lucene,index,which,might,be,reverted,previously,this,ensures,that,all,acknowledged,writes,are,restored,correctly,when,this,engine,is,promoted,return,the,number,of,translog,operations,have,been,recovered;public,abstract,int,restore,local,history,from,translog,translog,recovery,runner,translog,recovery,runner,throws,ioexception
Engine -> public abstract int restoreLocalHistoryFromTranslog(TranslogRecoveryRunner translogRecoveryRunner) throws IOException_;1538424609;This method replays translog to restore the Lucene index which might be reverted previously._This ensures that all acknowledged writes are restored correctly when this engine is promoted.__@return the number of translog operations have been recovered;public abstract int restoreLocalHistoryFromTranslog(TranslogRecoveryRunner translogRecoveryRunner) throws IOException_;this,method,replays,translog,to,restore,the,lucene,index,which,might,be,reverted,previously,this,ensures,that,all,acknowledged,writes,are,restored,correctly,when,this,engine,is,promoted,return,the,number,of,translog,operations,have,been,recovered;public,abstract,int,restore,local,history,from,translog,translog,recovery,runner,translog,recovery,runner,throws,ioexception
Engine -> public abstract int restoreLocalHistoryFromTranslog(TranslogRecoveryRunner translogRecoveryRunner) throws IOException_;1539723533;This method replays translog to restore the Lucene index which might be reverted previously._This ensures that all acknowledged writes are restored correctly when this engine is promoted.__@return the number of translog operations have been recovered;public abstract int restoreLocalHistoryFromTranslog(TranslogRecoveryRunner translogRecoveryRunner) throws IOException_;this,method,replays,translog,to,restore,the,lucene,index,which,might,be,reverted,previously,this,ensures,that,all,acknowledged,writes,are,restored,correctly,when,this,engine,is,promoted,return,the,number,of,translog,operations,have,been,recovered;public,abstract,int,restore,local,history,from,translog,translog,recovery,runner,translog,recovery,runner,throws,ioexception
Engine -> public abstract int restoreLocalHistoryFromTranslog(TranslogRecoveryRunner translogRecoveryRunner) throws IOException_;1541618615;This method replays translog to restore the Lucene index which might be reverted previously._This ensures that all acknowledged writes are restored correctly when this engine is promoted.__@return the number of translog operations have been recovered;public abstract int restoreLocalHistoryFromTranslog(TranslogRecoveryRunner translogRecoveryRunner) throws IOException_;this,method,replays,translog,to,restore,the,lucene,index,which,might,be,reverted,previously,this,ensures,that,all,acknowledged,writes,are,restored,correctly,when,this,engine,is,promoted,return,the,number,of,translog,operations,have,been,recovered;public,abstract,int,restore,local,history,from,translog,translog,recovery,runner,translog,recovery,runner,throws,ioexception
Engine -> public abstract int restoreLocalHistoryFromTranslog(TranslogRecoveryRunner translogRecoveryRunner) throws IOException_;1542697754;This method replays translog to restore the Lucene index which might be reverted previously._This ensures that all acknowledged writes are restored correctly when this engine is promoted.__@return the number of translog operations have been recovered;public abstract int restoreLocalHistoryFromTranslog(TranslogRecoveryRunner translogRecoveryRunner) throws IOException_;this,method,replays,translog,to,restore,the,lucene,index,which,might,be,reverted,previously,this,ensures,that,all,acknowledged,writes,are,restored,correctly,when,this,engine,is,promoted,return,the,number,of,translog,operations,have,been,recovered;public,abstract,int,restore,local,history,from,translog,translog,recovery,runner,translog,recovery,runner,throws,ioexception
Engine -> public abstract int restoreLocalHistoryFromTranslog(TranslogRecoveryRunner translogRecoveryRunner) throws IOException_;1543047942;This method replays translog to restore the Lucene index which might be reverted previously._This ensures that all acknowledged writes are restored correctly when this engine is promoted.__@return the number of translog operations have been recovered;public abstract int restoreLocalHistoryFromTranslog(TranslogRecoveryRunner translogRecoveryRunner) throws IOException_;this,method,replays,translog,to,restore,the,lucene,index,which,might,be,reverted,previously,this,ensures,that,all,acknowledged,writes,are,restored,correctly,when,this,engine,is,promoted,return,the,number,of,translog,operations,have,been,recovered;public,abstract,int,restore,local,history,from,translog,translog,recovery,runner,translog,recovery,runner,throws,ioexception
Engine -> public abstract int restoreLocalHistoryFromTranslog(TranslogRecoveryRunner translogRecoveryRunner) throws IOException_;1544545090;This method replays translog to restore the Lucene index which might be reverted previously._This ensures that all acknowledged writes are restored correctly when this engine is promoted.__@return the number of translog operations have been recovered;public abstract int restoreLocalHistoryFromTranslog(TranslogRecoveryRunner translogRecoveryRunner) throws IOException_;this,method,replays,translog,to,restore,the,lucene,index,which,might,be,reverted,previously,this,ensures,that,all,acknowledged,writes,are,restored,correctly,when,this,engine,is,promoted,return,the,number,of,translog,operations,have,been,recovered;public,abstract,int,restore,local,history,from,translog,translog,recovery,runner,translog,recovery,runner,throws,ioexception
Engine -> public abstract int restoreLocalHistoryFromTranslog(TranslogRecoveryRunner translogRecoveryRunner) throws IOException_;1544684920;This method replays translog to restore the Lucene index which might be reverted previously._This ensures that all acknowledged writes are restored correctly when this engine is promoted.__@return the number of translog operations have been recovered;public abstract int restoreLocalHistoryFromTranslog(TranslogRecoveryRunner translogRecoveryRunner) throws IOException_;this,method,replays,translog,to,restore,the,lucene,index,which,might,be,reverted,previously,this,ensures,that,all,acknowledged,writes,are,restored,correctly,when,this,engine,is,promoted,return,the,number,of,translog,operations,have,been,recovered;public,abstract,int,restore,local,history,from,translog,translog,recovery,runner,translog,recovery,runner,throws,ioexception
Engine -> public abstract int restoreLocalHistoryFromTranslog(TranslogRecoveryRunner translogRecoveryRunner) throws IOException_;1545140118;This method replays translog to restore the Lucene index which might be reverted previously._This ensures that all acknowledged writes are restored correctly when this engine is promoted.__@return the number of translog operations have been recovered;public abstract int restoreLocalHistoryFromTranslog(TranslogRecoveryRunner translogRecoveryRunner) throws IOException_;this,method,replays,translog,to,restore,the,lucene,index,which,might,be,reverted,previously,this,ensures,that,all,acknowledged,writes,are,restored,correctly,when,this,engine,is,promoted,return,the,number,of,translog,operations,have,been,recovered;public,abstract,int,restore,local,history,from,translog,translog,recovery,runner,translog,recovery,runner,throws,ioexception
Engine -> public abstract int restoreLocalHistoryFromTranslog(TranslogRecoveryRunner translogRecoveryRunner) throws IOException_;1545221705;This method replays translog to restore the Lucene index which might be reverted previously._This ensures that all acknowledged writes are restored correctly when this engine is promoted.__@return the number of translog operations have been recovered;public abstract int restoreLocalHistoryFromTranslog(TranslogRecoveryRunner translogRecoveryRunner) throws IOException_;this,method,replays,translog,to,restore,the,lucene,index,which,might,be,reverted,previously,this,ensures,that,all,acknowledged,writes,are,restored,correctly,when,this,engine,is,promoted,return,the,number,of,translog,operations,have,been,recovered;public,abstract,int,restore,local,history,from,translog,translog,recovery,runner,translog,recovery,runner,throws,ioexception
Engine -> public abstract int restoreLocalHistoryFromTranslog(TranslogRecoveryRunner translogRecoveryRunner) throws IOException_;1547332999;This method replays translog to restore the Lucene index which might be reverted previously._This ensures that all acknowledged writes are restored correctly when this engine is promoted.__@return the number of translog operations have been recovered;public abstract int restoreLocalHistoryFromTranslog(TranslogRecoveryRunner translogRecoveryRunner) throws IOException_;this,method,replays,translog,to,restore,the,lucene,index,which,might,be,reverted,previously,this,ensures,that,all,acknowledged,writes,are,restored,correctly,when,this,engine,is,promoted,return,the,number,of,translog,operations,have,been,recovered;public,abstract,int,restore,local,history,from,translog,translog,recovery,runner,translog,recovery,runner,throws,ioexception
Engine -> public abstract int restoreLocalHistoryFromTranslog(TranslogRecoveryRunner translogRecoveryRunner) throws IOException_;1548771485;This method replays translog to restore the Lucene index which might be reverted previously._This ensures that all acknowledged writes are restored correctly when this engine is promoted.__@return the number of translog operations have been recovered;public abstract int restoreLocalHistoryFromTranslog(TranslogRecoveryRunner translogRecoveryRunner) throws IOException_;this,method,replays,translog,to,restore,the,lucene,index,which,might,be,reverted,previously,this,ensures,that,all,acknowledged,writes,are,restored,correctly,when,this,engine,is,promoted,return,the,number,of,translog,operations,have,been,recovered;public,abstract,int,restore,local,history,from,translog,translog,recovery,runner,translog,recovery,runner,throws,ioexception
Engine -> public abstract int restoreLocalHistoryFromTranslog(TranslogRecoveryRunner translogRecoveryRunner) throws IOException_;1549891630;This method replays translog to restore the Lucene index which might be reverted previously._This ensures that all acknowledged writes are restored correctly when this engine is promoted.__@return the number of translog operations have been recovered;public abstract int restoreLocalHistoryFromTranslog(TranslogRecoveryRunner translogRecoveryRunner) throws IOException_;this,method,replays,translog,to,restore,the,lucene,index,which,might,be,reverted,previously,this,ensures,that,all,acknowledged,writes,are,restored,correctly,when,this,engine,is,promoted,return,the,number,of,translog,operations,have,been,recovered;public,abstract,int,restore,local,history,from,translog,translog,recovery,runner,translog,recovery,runner,throws,ioexception
Engine -> public abstract int restoreLocalHistoryFromTranslog(TranslogRecoveryRunner translogRecoveryRunner) throws IOException_;1549975032;This method replays translog to restore the Lucene index which might be reverted previously._This ensures that all acknowledged writes are restored correctly when this engine is promoted.__@return the number of translog operations have been recovered;public abstract int restoreLocalHistoryFromTranslog(TranslogRecoveryRunner translogRecoveryRunner) throws IOException_;this,method,replays,translog,to,restore,the,lucene,index,which,might,be,reverted,previously,this,ensures,that,all,acknowledged,writes,are,restored,correctly,when,this,engine,is,promoted,return,the,number,of,translog,operations,have,been,recovered;public,abstract,int,restore,local,history,from,translog,translog,recovery,runner,translog,recovery,runner,throws,ioexception
Engine -> public abstract int restoreLocalHistoryFromTranslog(TranslogRecoveryRunner translogRecoveryRunner) throws IOException_;1550220204;This method replays translog to restore the Lucene index which might be reverted previously._This ensures that all acknowledged writes are restored correctly when this engine is promoted.__@return the number of translog operations have been recovered;public abstract int restoreLocalHistoryFromTranslog(TranslogRecoveryRunner translogRecoveryRunner) throws IOException_;this,method,replays,translog,to,restore,the,lucene,index,which,might,be,reverted,previously,this,ensures,that,all,acknowledged,writes,are,restored,correctly,when,this,engine,is,promoted,return,the,number,of,translog,operations,have,been,recovered;public,abstract,int,restore,local,history,from,translog,translog,recovery,runner,translog,recovery,runner,throws,ioexception
Engine -> public abstract int restoreLocalHistoryFromTranslog(TranslogRecoveryRunner translogRecoveryRunner) throws IOException_;1550526771;This method replays translog to restore the Lucene index which might be reverted previously._This ensures that all acknowledged writes are restored correctly when this engine is promoted.__@return the number of translog operations have been recovered;public abstract int restoreLocalHistoryFromTranslog(TranslogRecoveryRunner translogRecoveryRunner) throws IOException_;this,method,replays,translog,to,restore,the,lucene,index,which,might,be,reverted,previously,this,ensures,that,all,acknowledged,writes,are,restored,correctly,when,this,engine,is,promoted,return,the,number,of,translog,operations,have,been,recovered;public,abstract,int,restore,local,history,from,translog,translog,recovery,runner,translog,recovery,runner,throws,ioexception
Engine -> public abstract int restoreLocalHistoryFromTranslog(TranslogRecoveryRunner translogRecoveryRunner) throws IOException_;1551110274;This method replays translog to restore the Lucene index which might be reverted previously._This ensures that all acknowledged writes are restored correctly when this engine is promoted.__@return the number of translog operations have been recovered;public abstract int restoreLocalHistoryFromTranslog(TranslogRecoveryRunner translogRecoveryRunner) throws IOException_;this,method,replays,translog,to,restore,the,lucene,index,which,might,be,reverted,previously,this,ensures,that,all,acknowledged,writes,are,restored,correctly,when,this,engine,is,promoted,return,the,number,of,translog,operations,have,been,recovered;public,abstract,int,restore,local,history,from,translog,translog,recovery,runner,translog,recovery,runner,throws,ioexception
Engine -> public abstract int restoreLocalHistoryFromTranslog(TranslogRecoveryRunner translogRecoveryRunner) throws IOException_;1551126708;This method replays translog to restore the Lucene index which might be reverted previously._This ensures that all acknowledged writes are restored correctly when this engine is promoted.__@return the number of translog operations have been recovered;public abstract int restoreLocalHistoryFromTranslog(TranslogRecoveryRunner translogRecoveryRunner) throws IOException_;this,method,replays,translog,to,restore,the,lucene,index,which,might,be,reverted,previously,this,ensures,that,all,acknowledged,writes,are,restored,correctly,when,this,engine,is,promoted,return,the,number,of,translog,operations,have,been,recovered;public,abstract,int,restore,local,history,from,translog,translog,recovery,runner,translog,recovery,runner,throws,ioexception
Engine -> public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;1524684173;Snapshots the most recent safe index commit from the engine.;public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;snapshots,the,most,recent,safe,index,commit,from,the,engine;public,abstract,index,commit,ref,acquire,safe,index,commit,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;1525162917;Snapshots the most recent safe index commit from the engine.;public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;snapshots,the,most,recent,safe,index,commit,from,the,engine;public,abstract,index,commit,ref,acquire,safe,index,commit,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;1525334055;Snapshots the most recent safe index commit from the engine.;public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;snapshots,the,most,recent,safe,index,commit,from,the,engine;public,abstract,index,commit,ref,acquire,safe,index,commit,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;1527583663;Snapshots the most recent safe index commit from the engine.;public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;snapshots,the,most,recent,safe,index,commit,from,the,engine;public,abstract,index,commit,ref,acquire,safe,index,commit,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;1528706846;Snapshots the most recent safe index commit from the engine.;public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;snapshots,the,most,recent,safe,index,commit,from,the,engine;public,abstract,index,commit,ref,acquire,safe,index,commit,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;1528762805;Snapshots the most recent safe index commit from the engine.;public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;snapshots,the,most,recent,safe,index,commit,from,the,engine;public,abstract,index,commit,ref,acquire,safe,index,commit,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;1531910483;Snapshots the most recent safe index commit from the engine.;public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;snapshots,the,most,recent,safe,index,commit,from,the,engine;public,abstract,index,commit,ref,acquire,safe,index,commit,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;1532685069;Snapshots the most recent safe index commit from the engine.;public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;snapshots,the,most,recent,safe,index,commit,from,the,engine;public,abstract,index,commit,ref,acquire,safe,index,commit,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;1533295538;Snapshots the most recent safe index commit from the engine.;public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;snapshots,the,most,recent,safe,index,commit,from,the,engine;public,abstract,index,commit,ref,acquire,safe,index,commit,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;1535046779;Snapshots the most recent safe index commit from the engine.;public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;snapshots,the,most,recent,safe,index,commit,from,the,engine;public,abstract,index,commit,ref,acquire,safe,index,commit,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;1535723122;Snapshots the most recent safe index commit from the engine.;public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;snapshots,the,most,recent,safe,index,commit,from,the,engine;public,abstract,index,commit,ref,acquire,safe,index,commit,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;1535965276;Snapshots the most recent safe index commit from the engine.;public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;snapshots,the,most,recent,safe,index,commit,from,the,engine;public,abstract,index,commit,ref,acquire,safe,index,commit,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;1536314350;Snapshots the most recent safe index commit from the engine.;public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;snapshots,the,most,recent,safe,index,commit,from,the,engine;public,abstract,index,commit,ref,acquire,safe,index,commit,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;1536828374;Snapshots the most recent safe index commit from the engine.;public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;snapshots,the,most,recent,safe,index,commit,from,the,engine;public,abstract,index,commit,ref,acquire,safe,index,commit,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;1537371806;Snapshots the most recent safe index commit from the engine.;public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;snapshots,the,most,recent,safe,index,commit,from,the,engine;public,abstract,index,commit,ref,acquire,safe,index,commit,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;1537806831;Snapshots the most recent safe index commit from the engine.;public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;snapshots,the,most,recent,safe,index,commit,from,the,engine;public,abstract,index,commit,ref,acquire,safe,index,commit,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;1538067637;Snapshots the most recent safe index commit from the engine.;public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;snapshots,the,most,recent,safe,index,commit,from,the,engine;public,abstract,index,commit,ref,acquire,safe,index,commit,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;1538424609;Snapshots the most recent safe index commit from the engine.;public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;snapshots,the,most,recent,safe,index,commit,from,the,engine;public,abstract,index,commit,ref,acquire,safe,index,commit,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;1539723533;Snapshots the most recent safe index commit from the engine.;public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;snapshots,the,most,recent,safe,index,commit,from,the,engine;public,abstract,index,commit,ref,acquire,safe,index,commit,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;1541618615;Snapshots the most recent safe index commit from the engine.;public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;snapshots,the,most,recent,safe,index,commit,from,the,engine;public,abstract,index,commit,ref,acquire,safe,index,commit,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;1542697754;Snapshots the most recent safe index commit from the engine.;public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;snapshots,the,most,recent,safe,index,commit,from,the,engine;public,abstract,index,commit,ref,acquire,safe,index,commit,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;1543047942;Snapshots the most recent safe index commit from the engine.;public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;snapshots,the,most,recent,safe,index,commit,from,the,engine;public,abstract,index,commit,ref,acquire,safe,index,commit,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;1544545090;Snapshots the most recent safe index commit from the engine.;public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;snapshots,the,most,recent,safe,index,commit,from,the,engine;public,abstract,index,commit,ref,acquire,safe,index,commit,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;1544684920;Snapshots the most recent safe index commit from the engine.;public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;snapshots,the,most,recent,safe,index,commit,from,the,engine;public,abstract,index,commit,ref,acquire,safe,index,commit,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;1545140118;Snapshots the most recent safe index commit from the engine.;public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;snapshots,the,most,recent,safe,index,commit,from,the,engine;public,abstract,index,commit,ref,acquire,safe,index,commit,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;1545221705;Snapshots the most recent safe index commit from the engine.;public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;snapshots,the,most,recent,safe,index,commit,from,the,engine;public,abstract,index,commit,ref,acquire,safe,index,commit,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;1547332999;Snapshots the most recent safe index commit from the engine.;public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;snapshots,the,most,recent,safe,index,commit,from,the,engine;public,abstract,index,commit,ref,acquire,safe,index,commit,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;1548771485;Snapshots the most recent safe index commit from the engine.;public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;snapshots,the,most,recent,safe,index,commit,from,the,engine;public,abstract,index,commit,ref,acquire,safe,index,commit,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;1549891630;Snapshots the most recent safe index commit from the engine.;public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;snapshots,the,most,recent,safe,index,commit,from,the,engine;public,abstract,index,commit,ref,acquire,safe,index,commit,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;1549975032;Snapshots the most recent safe index commit from the engine.;public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;snapshots,the,most,recent,safe,index,commit,from,the,engine;public,abstract,index,commit,ref,acquire,safe,index,commit,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;1550220204;Snapshots the most recent safe index commit from the engine.;public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;snapshots,the,most,recent,safe,index,commit,from,the,engine;public,abstract,index,commit,ref,acquire,safe,index,commit,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;1550526771;Snapshots the most recent safe index commit from the engine.;public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;snapshots,the,most,recent,safe,index,commit,from,the,engine;public,abstract,index,commit,ref,acquire,safe,index,commit,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;1551110274;Snapshots the most recent safe index commit from the engine.;public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;snapshots,the,most,recent,safe,index,commit,from,the,engine;public,abstract,index,commit,ref,acquire,safe,index,commit,throws,engine,exception
Engine -> public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;1551126708;Snapshots the most recent safe index commit from the engine.;public abstract IndexCommitRef acquireSafeIndexCommit() throws EngineException_;snapshots,the,most,recent,safe,index,commit,from,the,engine;public,abstract,index,commit,ref,acquire,safe,index,commit,throws,engine,exception
Engine -> public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;1524684173;Fills up the local checkpoints history with no-ops until the local checkpoint_and the max seen sequence ID are identical._@param primaryTerm the shards primary term this engine was created for_@return the number of no-ops added;public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;fills,up,the,local,checkpoints,history,with,no,ops,until,the,local,checkpoint,and,the,max,seen,sequence,id,are,identical,param,primary,term,the,shards,primary,term,this,engine,was,created,for,return,the,number,of,no,ops,added;public,abstract,int,fill,seq,no,gaps,long,primary,term,throws,ioexception
Engine -> public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;1525162917;Fills up the local checkpoints history with no-ops until the local checkpoint_and the max seen sequence ID are identical._@param primaryTerm the shards primary term this engine was created for_@return the number of no-ops added;public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;fills,up,the,local,checkpoints,history,with,no,ops,until,the,local,checkpoint,and,the,max,seen,sequence,id,are,identical,param,primary,term,the,shards,primary,term,this,engine,was,created,for,return,the,number,of,no,ops,added;public,abstract,int,fill,seq,no,gaps,long,primary,term,throws,ioexception
Engine -> public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;1525334055;Fills up the local checkpoints history with no-ops until the local checkpoint_and the max seen sequence ID are identical._@param primaryTerm the shards primary term this engine was created for_@return the number of no-ops added;public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;fills,up,the,local,checkpoints,history,with,no,ops,until,the,local,checkpoint,and,the,max,seen,sequence,id,are,identical,param,primary,term,the,shards,primary,term,this,engine,was,created,for,return,the,number,of,no,ops,added;public,abstract,int,fill,seq,no,gaps,long,primary,term,throws,ioexception
Engine -> public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;1527583663;Fills up the local checkpoints history with no-ops until the local checkpoint_and the max seen sequence ID are identical._@param primaryTerm the shards primary term this engine was created for_@return the number of no-ops added;public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;fills,up,the,local,checkpoints,history,with,no,ops,until,the,local,checkpoint,and,the,max,seen,sequence,id,are,identical,param,primary,term,the,shards,primary,term,this,engine,was,created,for,return,the,number,of,no,ops,added;public,abstract,int,fill,seq,no,gaps,long,primary,term,throws,ioexception
Engine -> public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;1528706846;Fills up the local checkpoints history with no-ops until the local checkpoint_and the max seen sequence ID are identical._@param primaryTerm the shards primary term this engine was created for_@return the number of no-ops added;public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;fills,up,the,local,checkpoints,history,with,no,ops,until,the,local,checkpoint,and,the,max,seen,sequence,id,are,identical,param,primary,term,the,shards,primary,term,this,engine,was,created,for,return,the,number,of,no,ops,added;public,abstract,int,fill,seq,no,gaps,long,primary,term,throws,ioexception
Engine -> public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;1528762805;Fills up the local checkpoints history with no-ops until the local checkpoint_and the max seen sequence ID are identical._@param primaryTerm the shards primary term this engine was created for_@return the number of no-ops added;public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;fills,up,the,local,checkpoints,history,with,no,ops,until,the,local,checkpoint,and,the,max,seen,sequence,id,are,identical,param,primary,term,the,shards,primary,term,this,engine,was,created,for,return,the,number,of,no,ops,added;public,abstract,int,fill,seq,no,gaps,long,primary,term,throws,ioexception
Engine -> public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;1531910483;Fills up the local checkpoints history with no-ops until the local checkpoint_and the max seen sequence ID are identical._@param primaryTerm the shards primary term this engine was created for_@return the number of no-ops added;public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;fills,up,the,local,checkpoints,history,with,no,ops,until,the,local,checkpoint,and,the,max,seen,sequence,id,are,identical,param,primary,term,the,shards,primary,term,this,engine,was,created,for,return,the,number,of,no,ops,added;public,abstract,int,fill,seq,no,gaps,long,primary,term,throws,ioexception
Engine -> public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;1532685069;Fills up the local checkpoints history with no-ops until the local checkpoint_and the max seen sequence ID are identical._@param primaryTerm the shards primary term this engine was created for_@return the number of no-ops added;public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;fills,up,the,local,checkpoints,history,with,no,ops,until,the,local,checkpoint,and,the,max,seen,sequence,id,are,identical,param,primary,term,the,shards,primary,term,this,engine,was,created,for,return,the,number,of,no,ops,added;public,abstract,int,fill,seq,no,gaps,long,primary,term,throws,ioexception
Engine -> public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;1533295538;Fills up the local checkpoints history with no-ops until the local checkpoint_and the max seen sequence ID are identical._@param primaryTerm the shards primary term this engine was created for_@return the number of no-ops added;public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;fills,up,the,local,checkpoints,history,with,no,ops,until,the,local,checkpoint,and,the,max,seen,sequence,id,are,identical,param,primary,term,the,shards,primary,term,this,engine,was,created,for,return,the,number,of,no,ops,added;public,abstract,int,fill,seq,no,gaps,long,primary,term,throws,ioexception
Engine -> public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;1535046779;Fills up the local checkpoints history with no-ops until the local checkpoint_and the max seen sequence ID are identical._@param primaryTerm the shards primary term this engine was created for_@return the number of no-ops added;public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;fills,up,the,local,checkpoints,history,with,no,ops,until,the,local,checkpoint,and,the,max,seen,sequence,id,are,identical,param,primary,term,the,shards,primary,term,this,engine,was,created,for,return,the,number,of,no,ops,added;public,abstract,int,fill,seq,no,gaps,long,primary,term,throws,ioexception
Engine -> public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;1535723122;Fills up the local checkpoints history with no-ops until the local checkpoint_and the max seen sequence ID are identical._@param primaryTerm the shards primary term this engine was created for_@return the number of no-ops added;public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;fills,up,the,local,checkpoints,history,with,no,ops,until,the,local,checkpoint,and,the,max,seen,sequence,id,are,identical,param,primary,term,the,shards,primary,term,this,engine,was,created,for,return,the,number,of,no,ops,added;public,abstract,int,fill,seq,no,gaps,long,primary,term,throws,ioexception
Engine -> public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;1535965276;Fills up the local checkpoints history with no-ops until the local checkpoint_and the max seen sequence ID are identical._@param primaryTerm the shards primary term this engine was created for_@return the number of no-ops added;public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;fills,up,the,local,checkpoints,history,with,no,ops,until,the,local,checkpoint,and,the,max,seen,sequence,id,are,identical,param,primary,term,the,shards,primary,term,this,engine,was,created,for,return,the,number,of,no,ops,added;public,abstract,int,fill,seq,no,gaps,long,primary,term,throws,ioexception
Engine -> public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;1536314350;Fills up the local checkpoints history with no-ops until the local checkpoint_and the max seen sequence ID are identical._@param primaryTerm the shards primary term this engine was created for_@return the number of no-ops added;public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;fills,up,the,local,checkpoints,history,with,no,ops,until,the,local,checkpoint,and,the,max,seen,sequence,id,are,identical,param,primary,term,the,shards,primary,term,this,engine,was,created,for,return,the,number,of,no,ops,added;public,abstract,int,fill,seq,no,gaps,long,primary,term,throws,ioexception
Engine -> public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;1536828374;Fills up the local checkpoints history with no-ops until the local checkpoint_and the max seen sequence ID are identical._@param primaryTerm the shards primary term this engine was created for_@return the number of no-ops added;public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;fills,up,the,local,checkpoints,history,with,no,ops,until,the,local,checkpoint,and,the,max,seen,sequence,id,are,identical,param,primary,term,the,shards,primary,term,this,engine,was,created,for,return,the,number,of,no,ops,added;public,abstract,int,fill,seq,no,gaps,long,primary,term,throws,ioexception
Engine -> public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;1537371806;Fills up the local checkpoints history with no-ops until the local checkpoint_and the max seen sequence ID are identical._@param primaryTerm the shards primary term this engine was created for_@return the number of no-ops added;public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;fills,up,the,local,checkpoints,history,with,no,ops,until,the,local,checkpoint,and,the,max,seen,sequence,id,are,identical,param,primary,term,the,shards,primary,term,this,engine,was,created,for,return,the,number,of,no,ops,added;public,abstract,int,fill,seq,no,gaps,long,primary,term,throws,ioexception
Engine -> public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;1537806831;Fills up the local checkpoints history with no-ops until the local checkpoint_and the max seen sequence ID are identical._@param primaryTerm the shards primary term this engine was created for_@return the number of no-ops added;public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;fills,up,the,local,checkpoints,history,with,no,ops,until,the,local,checkpoint,and,the,max,seen,sequence,id,are,identical,param,primary,term,the,shards,primary,term,this,engine,was,created,for,return,the,number,of,no,ops,added;public,abstract,int,fill,seq,no,gaps,long,primary,term,throws,ioexception
Engine -> public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;1538067637;Fills up the local checkpoints history with no-ops until the local checkpoint_and the max seen sequence ID are identical._@param primaryTerm the shards primary term this engine was created for_@return the number of no-ops added;public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;fills,up,the,local,checkpoints,history,with,no,ops,until,the,local,checkpoint,and,the,max,seen,sequence,id,are,identical,param,primary,term,the,shards,primary,term,this,engine,was,created,for,return,the,number,of,no,ops,added;public,abstract,int,fill,seq,no,gaps,long,primary,term,throws,ioexception
Engine -> public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;1538424609;Fills up the local checkpoints history with no-ops until the local checkpoint_and the max seen sequence ID are identical._@param primaryTerm the shards primary term this engine was created for_@return the number of no-ops added;public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;fills,up,the,local,checkpoints,history,with,no,ops,until,the,local,checkpoint,and,the,max,seen,sequence,id,are,identical,param,primary,term,the,shards,primary,term,this,engine,was,created,for,return,the,number,of,no,ops,added;public,abstract,int,fill,seq,no,gaps,long,primary,term,throws,ioexception
Engine -> public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;1539723533;Fills up the local checkpoints history with no-ops until the local checkpoint_and the max seen sequence ID are identical._@param primaryTerm the shards primary term this engine was created for_@return the number of no-ops added;public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;fills,up,the,local,checkpoints,history,with,no,ops,until,the,local,checkpoint,and,the,max,seen,sequence,id,are,identical,param,primary,term,the,shards,primary,term,this,engine,was,created,for,return,the,number,of,no,ops,added;public,abstract,int,fill,seq,no,gaps,long,primary,term,throws,ioexception
Engine -> public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;1541618615;Fills up the local checkpoints history with no-ops until the local checkpoint_and the max seen sequence ID are identical._@param primaryTerm the shards primary term this engine was created for_@return the number of no-ops added;public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;fills,up,the,local,checkpoints,history,with,no,ops,until,the,local,checkpoint,and,the,max,seen,sequence,id,are,identical,param,primary,term,the,shards,primary,term,this,engine,was,created,for,return,the,number,of,no,ops,added;public,abstract,int,fill,seq,no,gaps,long,primary,term,throws,ioexception
Engine -> public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;1542697754;Fills up the local checkpoints history with no-ops until the local checkpoint_and the max seen sequence ID are identical._@param primaryTerm the shards primary term this engine was created for_@return the number of no-ops added;public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;fills,up,the,local,checkpoints,history,with,no,ops,until,the,local,checkpoint,and,the,max,seen,sequence,id,are,identical,param,primary,term,the,shards,primary,term,this,engine,was,created,for,return,the,number,of,no,ops,added;public,abstract,int,fill,seq,no,gaps,long,primary,term,throws,ioexception
Engine -> public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;1543047942;Fills up the local checkpoints history with no-ops until the local checkpoint_and the max seen sequence ID are identical._@param primaryTerm the shards primary term this engine was created for_@return the number of no-ops added;public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;fills,up,the,local,checkpoints,history,with,no,ops,until,the,local,checkpoint,and,the,max,seen,sequence,id,are,identical,param,primary,term,the,shards,primary,term,this,engine,was,created,for,return,the,number,of,no,ops,added;public,abstract,int,fill,seq,no,gaps,long,primary,term,throws,ioexception
Engine -> public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;1544545090;Fills up the local checkpoints history with no-ops until the local checkpoint_and the max seen sequence ID are identical._@param primaryTerm the shards primary term this engine was created for_@return the number of no-ops added;public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;fills,up,the,local,checkpoints,history,with,no,ops,until,the,local,checkpoint,and,the,max,seen,sequence,id,are,identical,param,primary,term,the,shards,primary,term,this,engine,was,created,for,return,the,number,of,no,ops,added;public,abstract,int,fill,seq,no,gaps,long,primary,term,throws,ioexception
Engine -> public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;1544684920;Fills up the local checkpoints history with no-ops until the local checkpoint_and the max seen sequence ID are identical._@param primaryTerm the shards primary term this engine was created for_@return the number of no-ops added;public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;fills,up,the,local,checkpoints,history,with,no,ops,until,the,local,checkpoint,and,the,max,seen,sequence,id,are,identical,param,primary,term,the,shards,primary,term,this,engine,was,created,for,return,the,number,of,no,ops,added;public,abstract,int,fill,seq,no,gaps,long,primary,term,throws,ioexception
Engine -> public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;1545140118;Fills up the local checkpoints history with no-ops until the local checkpoint_and the max seen sequence ID are identical._@param primaryTerm the shards primary term this engine was created for_@return the number of no-ops added;public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;fills,up,the,local,checkpoints,history,with,no,ops,until,the,local,checkpoint,and,the,max,seen,sequence,id,are,identical,param,primary,term,the,shards,primary,term,this,engine,was,created,for,return,the,number,of,no,ops,added;public,abstract,int,fill,seq,no,gaps,long,primary,term,throws,ioexception
Engine -> public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;1545221705;Fills up the local checkpoints history with no-ops until the local checkpoint_and the max seen sequence ID are identical._@param primaryTerm the shards primary term this engine was created for_@return the number of no-ops added;public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;fills,up,the,local,checkpoints,history,with,no,ops,until,the,local,checkpoint,and,the,max,seen,sequence,id,are,identical,param,primary,term,the,shards,primary,term,this,engine,was,created,for,return,the,number,of,no,ops,added;public,abstract,int,fill,seq,no,gaps,long,primary,term,throws,ioexception
Engine -> public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;1547332999;Fills up the local checkpoints history with no-ops until the local checkpoint_and the max seen sequence ID are identical._@param primaryTerm the shards primary term this engine was created for_@return the number of no-ops added;public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;fills,up,the,local,checkpoints,history,with,no,ops,until,the,local,checkpoint,and,the,max,seen,sequence,id,are,identical,param,primary,term,the,shards,primary,term,this,engine,was,created,for,return,the,number,of,no,ops,added;public,abstract,int,fill,seq,no,gaps,long,primary,term,throws,ioexception
Engine -> public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;1548771485;Fills up the local checkpoints history with no-ops until the local checkpoint_and the max seen sequence ID are identical._@param primaryTerm the shards primary term this engine was created for_@return the number of no-ops added;public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;fills,up,the,local,checkpoints,history,with,no,ops,until,the,local,checkpoint,and,the,max,seen,sequence,id,are,identical,param,primary,term,the,shards,primary,term,this,engine,was,created,for,return,the,number,of,no,ops,added;public,abstract,int,fill,seq,no,gaps,long,primary,term,throws,ioexception
Engine -> public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;1549891630;Fills up the local checkpoints history with no-ops until the local checkpoint_and the max seen sequence ID are identical._@param primaryTerm the shards primary term this engine was created for_@return the number of no-ops added;public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;fills,up,the,local,checkpoints,history,with,no,ops,until,the,local,checkpoint,and,the,max,seen,sequence,id,are,identical,param,primary,term,the,shards,primary,term,this,engine,was,created,for,return,the,number,of,no,ops,added;public,abstract,int,fill,seq,no,gaps,long,primary,term,throws,ioexception
Engine -> public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;1549975032;Fills up the local checkpoints history with no-ops until the local checkpoint_and the max seen sequence ID are identical._@param primaryTerm the shards primary term this engine was created for_@return the number of no-ops added;public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;fills,up,the,local,checkpoints,history,with,no,ops,until,the,local,checkpoint,and,the,max,seen,sequence,id,are,identical,param,primary,term,the,shards,primary,term,this,engine,was,created,for,return,the,number,of,no,ops,added;public,abstract,int,fill,seq,no,gaps,long,primary,term,throws,ioexception
Engine -> public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;1550220204;Fills up the local checkpoints history with no-ops until the local checkpoint_and the max seen sequence ID are identical._@param primaryTerm the shards primary term this engine was created for_@return the number of no-ops added;public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;fills,up,the,local,checkpoints,history,with,no,ops,until,the,local,checkpoint,and,the,max,seen,sequence,id,are,identical,param,primary,term,the,shards,primary,term,this,engine,was,created,for,return,the,number,of,no,ops,added;public,abstract,int,fill,seq,no,gaps,long,primary,term,throws,ioexception
Engine -> public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;1550526771;Fills up the local checkpoints history with no-ops until the local checkpoint_and the max seen sequence ID are identical._@param primaryTerm the shards primary term this engine was created for_@return the number of no-ops added;public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;fills,up,the,local,checkpoints,history,with,no,ops,until,the,local,checkpoint,and,the,max,seen,sequence,id,are,identical,param,primary,term,the,shards,primary,term,this,engine,was,created,for,return,the,number,of,no,ops,added;public,abstract,int,fill,seq,no,gaps,long,primary,term,throws,ioexception
Engine -> public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;1551110274;Fills up the local checkpoints history with no-ops until the local checkpoint_and the max seen sequence ID are identical._@param primaryTerm the shards primary term this engine was created for_@return the number of no-ops added;public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;fills,up,the,local,checkpoints,history,with,no,ops,until,the,local,checkpoint,and,the,max,seen,sequence,id,are,identical,param,primary,term,the,shards,primary,term,this,engine,was,created,for,return,the,number,of,no,ops,added;public,abstract,int,fill,seq,no,gaps,long,primary,term,throws,ioexception
Engine -> public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;1551126708;Fills up the local checkpoints history with no-ops until the local checkpoint_and the max seen sequence ID are identical._@param primaryTerm the shards primary term this engine was created for_@return the number of no-ops added;public abstract int fillSeqNoGaps(long primaryTerm) throws IOException_;fills,up,the,local,checkpoints,history,with,no,ops,until,the,local,checkpoint,and,the,max,seen,sequence,id,are,identical,param,primary,term,the,shards,primary,term,this,engine,was,created,for,return,the,number,of,no,ops,added;public,abstract,int,fill,seq,no,gaps,long,primary,term,throws,ioexception
Engine -> abstract Translog getTranslog()_;1524684173;Returns the translog associated with this engine._Prefer to keep the translog package-private, so that an engine can control all accesses to the translog.;abstract Translog getTranslog()_;returns,the,translog,associated,with,this,engine,prefer,to,keep,the,translog,package,private,so,that,an,engine,can,control,all,accesses,to,the,translog;abstract,translog,get,translog
Engine -> abstract Translog getTranslog()_;1525162917;Returns the translog associated with this engine._Prefer to keep the translog package-private, so that an engine can control all accesses to the translog.;abstract Translog getTranslog()_;returns,the,translog,associated,with,this,engine,prefer,to,keep,the,translog,package,private,so,that,an,engine,can,control,all,accesses,to,the,translog;abstract,translog,get,translog
Engine -> abstract Translog getTranslog()_;1525334055;Returns the translog associated with this engine._Prefer to keep the translog package-private, so that an engine can control all accesses to the translog.;abstract Translog getTranslog()_;returns,the,translog,associated,with,this,engine,prefer,to,keep,the,translog,package,private,so,that,an,engine,can,control,all,accesses,to,the,translog;abstract,translog,get,translog
Engine -> abstract Translog getTranslog()_;1527583663;Returns the translog associated with this engine._Prefer to keep the translog package-private, so that an engine can control all accesses to the translog.;abstract Translog getTranslog()_;returns,the,translog,associated,with,this,engine,prefer,to,keep,the,translog,package,private,so,that,an,engine,can,control,all,accesses,to,the,translog;abstract,translog,get,translog
Engine -> abstract Translog getTranslog()_;1528706846;Returns the translog associated with this engine._Prefer to keep the translog package-private, so that an engine can control all accesses to the translog.;abstract Translog getTranslog()_;returns,the,translog,associated,with,this,engine,prefer,to,keep,the,translog,package,private,so,that,an,engine,can,control,all,accesses,to,the,translog;abstract,translog,get,translog
Engine -> public abstract void restoreLocalCheckpointFromTranslog() throws IOException_;1524684173;Marks operations in the translog as completed. This is used to restore the state of the local checkpoint tracker on primary_promotion.__@throws IOException if an I/O exception occurred reading the translog;public abstract void restoreLocalCheckpointFromTranslog() throws IOException_;marks,operations,in,the,translog,as,completed,this,is,used,to,restore,the,state,of,the,local,checkpoint,tracker,on,primary,promotion,throws,ioexception,if,an,i,o,exception,occurred,reading,the,translog;public,abstract,void,restore,local,checkpoint,from,translog,throws,ioexception
Engine -> public abstract void restoreLocalCheckpointFromTranslog() throws IOException_;1525162917;Marks operations in the translog as completed. This is used to restore the state of the local checkpoint tracker on primary_promotion.__@throws IOException if an I/O exception occurred reading the translog;public abstract void restoreLocalCheckpointFromTranslog() throws IOException_;marks,operations,in,the,translog,as,completed,this,is,used,to,restore,the,state,of,the,local,checkpoint,tracker,on,primary,promotion,throws,ioexception,if,an,i,o,exception,occurred,reading,the,translog;public,abstract,void,restore,local,checkpoint,from,translog,throws,ioexception
Engine -> public abstract void restoreLocalCheckpointFromTranslog() throws IOException_;1525334055;Marks operations in the translog as completed. This is used to restore the state of the local checkpoint tracker on primary_promotion.__@throws IOException if an I/O exception occurred reading the translog;public abstract void restoreLocalCheckpointFromTranslog() throws IOException_;marks,operations,in,the,translog,as,completed,this,is,used,to,restore,the,state,of,the,local,checkpoint,tracker,on,primary,promotion,throws,ioexception,if,an,i,o,exception,occurred,reading,the,translog;public,abstract,void,restore,local,checkpoint,from,translog,throws,ioexception
Engine -> public abstract void restoreLocalCheckpointFromTranslog() throws IOException_;1527583663;Marks operations in the translog as completed. This is used to restore the state of the local checkpoint tracker on primary_promotion.__@throws IOException if an I/O exception occurred reading the translog;public abstract void restoreLocalCheckpointFromTranslog() throws IOException_;marks,operations,in,the,translog,as,completed,this,is,used,to,restore,the,state,of,the,local,checkpoint,tracker,on,primary,promotion,throws,ioexception,if,an,i,o,exception,occurred,reading,the,translog;public,abstract,void,restore,local,checkpoint,from,translog,throws,ioexception
Engine -> public abstract void restoreLocalCheckpointFromTranslog() throws IOException_;1528706846;Marks operations in the translog as completed. This is used to restore the state of the local checkpoint tracker on primary_promotion.__@throws IOException if an I/O exception occurred reading the translog;public abstract void restoreLocalCheckpointFromTranslog() throws IOException_;marks,operations,in,the,translog,as,completed,this,is,used,to,restore,the,state,of,the,local,checkpoint,tracker,on,primary,promotion,throws,ioexception,if,an,i,o,exception,occurred,reading,the,translog;public,abstract,void,restore,local,checkpoint,from,translog,throws,ioexception
Engine -> public abstract void restoreLocalCheckpointFromTranslog() throws IOException_;1528762805;Marks operations in the translog as completed. This is used to restore the state of the local checkpoint tracker on primary_promotion.__@throws IOException if an I/O exception occurred reading the translog;public abstract void restoreLocalCheckpointFromTranslog() throws IOException_;marks,operations,in,the,translog,as,completed,this,is,used,to,restore,the,state,of,the,local,checkpoint,tracker,on,primary,promotion,throws,ioexception,if,an,i,o,exception,occurred,reading,the,translog;public,abstract,void,restore,local,checkpoint,from,translog,throws,ioexception
Engine -> public abstract void restoreLocalCheckpointFromTranslog() throws IOException_;1531910483;Marks operations in the translog as completed. This is used to restore the state of the local checkpoint tracker on primary_promotion.__@throws IOException if an I/O exception occurred reading the translog;public abstract void restoreLocalCheckpointFromTranslog() throws IOException_;marks,operations,in,the,translog,as,completed,this,is,used,to,restore,the,state,of,the,local,checkpoint,tracker,on,primary,promotion,throws,ioexception,if,an,i,o,exception,occurred,reading,the,translog;public,abstract,void,restore,local,checkpoint,from,translog,throws,ioexception
Engine -> public abstract void restoreLocalCheckpointFromTranslog() throws IOException_;1532685069;Marks operations in the translog as completed. This is used to restore the state of the local checkpoint tracker on primary_promotion.__@throws IOException if an I/O exception occurred reading the translog;public abstract void restoreLocalCheckpointFromTranslog() throws IOException_;marks,operations,in,the,translog,as,completed,this,is,used,to,restore,the,state,of,the,local,checkpoint,tracker,on,primary,promotion,throws,ioexception,if,an,i,o,exception,occurred,reading,the,translog;public,abstract,void,restore,local,checkpoint,from,translog,throws,ioexception
Engine -> public abstract void restoreLocalCheckpointFromTranslog() throws IOException_;1533295538;Marks operations in the translog as completed. This is used to restore the state of the local checkpoint tracker on primary_promotion.__@throws IOException if an I/O exception occurred reading the translog;public abstract void restoreLocalCheckpointFromTranslog() throws IOException_;marks,operations,in,the,translog,as,completed,this,is,used,to,restore,the,state,of,the,local,checkpoint,tracker,on,primary,promotion,throws,ioexception,if,an,i,o,exception,occurred,reading,the,translog;public,abstract,void,restore,local,checkpoint,from,translog,throws,ioexception
Engine -> public abstract void restoreLocalCheckpointFromTranslog() throws IOException_;1535046779;Marks operations in the translog as completed. This is used to restore the state of the local checkpoint tracker on primary_promotion.__@throws IOException if an I/O exception occurred reading the translog;public abstract void restoreLocalCheckpointFromTranslog() throws IOException_;marks,operations,in,the,translog,as,completed,this,is,used,to,restore,the,state,of,the,local,checkpoint,tracker,on,primary,promotion,throws,ioexception,if,an,i,o,exception,occurred,reading,the,translog;public,abstract,void,restore,local,checkpoint,from,translog,throws,ioexception
Engine -> public abstract void restoreLocalCheckpointFromTranslog() throws IOException_;1535723122;Marks operations in the translog as completed. This is used to restore the state of the local checkpoint tracker on primary_promotion.__@throws IOException if an I/O exception occurred reading the translog;public abstract void restoreLocalCheckpointFromTranslog() throws IOException_;marks,operations,in,the,translog,as,completed,this,is,used,to,restore,the,state,of,the,local,checkpoint,tracker,on,primary,promotion,throws,ioexception,if,an,i,o,exception,occurred,reading,the,translog;public,abstract,void,restore,local,checkpoint,from,translog,throws,ioexception
Engine -> public abstract void restoreLocalCheckpointFromTranslog() throws IOException_;1535965276;Marks operations in the translog as completed. This is used to restore the state of the local checkpoint tracker on primary_promotion.__@throws IOException if an I/O exception occurred reading the translog;public abstract void restoreLocalCheckpointFromTranslog() throws IOException_;marks,operations,in,the,translog,as,completed,this,is,used,to,restore,the,state,of,the,local,checkpoint,tracker,on,primary,promotion,throws,ioexception,if,an,i,o,exception,occurred,reading,the,translog;public,abstract,void,restore,local,checkpoint,from,translog,throws,ioexception
Engine -> public abstract void restoreLocalCheckpointFromTranslog() throws IOException_;1536314350;Marks operations in the translog as completed. This is used to restore the state of the local checkpoint tracker on primary_promotion.__@throws IOException if an I/O exception occurred reading the translog;public abstract void restoreLocalCheckpointFromTranslog() throws IOException_;marks,operations,in,the,translog,as,completed,this,is,used,to,restore,the,state,of,the,local,checkpoint,tracker,on,primary,promotion,throws,ioexception,if,an,i,o,exception,occurred,reading,the,translog;public,abstract,void,restore,local,checkpoint,from,translog,throws,ioexception
Engine -> public abstract void restoreLocalCheckpointFromTranslog() throws IOException_;1536828374;Marks operations in the translog as completed. This is used to restore the state of the local checkpoint tracker on primary_promotion.__@throws IOException if an I/O exception occurred reading the translog;public abstract void restoreLocalCheckpointFromTranslog() throws IOException_;marks,operations,in,the,translog,as,completed,this,is,used,to,restore,the,state,of,the,local,checkpoint,tracker,on,primary,promotion,throws,ioexception,if,an,i,o,exception,occurred,reading,the,translog;public,abstract,void,restore,local,checkpoint,from,translog,throws,ioexception
Engine -> public abstract void restoreLocalCheckpointFromTranslog() throws IOException_;1537371806;Marks operations in the translog as completed. This is used to restore the state of the local checkpoint tracker on primary_promotion.__@throws IOException if an I/O exception occurred reading the translog;public abstract void restoreLocalCheckpointFromTranslog() throws IOException_;marks,operations,in,the,translog,as,completed,this,is,used,to,restore,the,state,of,the,local,checkpoint,tracker,on,primary,promotion,throws,ioexception,if,an,i,o,exception,occurred,reading,the,translog;public,abstract,void,restore,local,checkpoint,from,translog,throws,ioexception
Engine -> public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;1528706846;Trims translog for terms below <code>belowTerm</code> and seq# above <code>aboveSeqNo</code>_@see Translog#trimOperations(long, long);public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;trims,translog,for,terms,below,code,below,term,code,and,seq,above,code,above,seq,no,code,see,translog,trim,operations,long,long;public,abstract,void,trim,operations,from,translog,long,below,term,long,above,seq,no,throws,engine,exception
Engine -> public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;1528762805;Trims translog for terms below <code>belowTerm</code> and seq# above <code>aboveSeqNo</code>_@see Translog#trimOperations(long, long);public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;trims,translog,for,terms,below,code,below,term,code,and,seq,above,code,above,seq,no,code,see,translog,trim,operations,long,long;public,abstract,void,trim,operations,from,translog,long,below,term,long,above,seq,no,throws,engine,exception
Engine -> public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;1531910483;Trims translog for terms below <code>belowTerm</code> and seq# above <code>aboveSeqNo</code>_@see Translog#trimOperations(long, long);public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;trims,translog,for,terms,below,code,below,term,code,and,seq,above,code,above,seq,no,code,see,translog,trim,operations,long,long;public,abstract,void,trim,operations,from,translog,long,below,term,long,above,seq,no,throws,engine,exception
Engine -> public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;1532685069;Trims translog for terms below <code>belowTerm</code> and seq# above <code>aboveSeqNo</code>_@see Translog#trimOperations(long, long);public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;trims,translog,for,terms,below,code,below,term,code,and,seq,above,code,above,seq,no,code,see,translog,trim,operations,long,long;public,abstract,void,trim,operations,from,translog,long,below,term,long,above,seq,no,throws,engine,exception
Engine -> public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;1533295538;Trims translog for terms below <code>belowTerm</code> and seq# above <code>aboveSeqNo</code>_@see Translog#trimOperations(long, long);public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;trims,translog,for,terms,below,code,below,term,code,and,seq,above,code,above,seq,no,code,see,translog,trim,operations,long,long;public,abstract,void,trim,operations,from,translog,long,below,term,long,above,seq,no,throws,engine,exception
Engine -> public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;1535046779;Trims translog for terms below <code>belowTerm</code> and seq# above <code>aboveSeqNo</code>_@see Translog#trimOperations(long, long);public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;trims,translog,for,terms,below,code,below,term,code,and,seq,above,code,above,seq,no,code,see,translog,trim,operations,long,long;public,abstract,void,trim,operations,from,translog,long,below,term,long,above,seq,no,throws,engine,exception
Engine -> public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;1535723122;Trims translog for terms below <code>belowTerm</code> and seq# above <code>aboveSeqNo</code>_@see Translog#trimOperations(long, long);public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;trims,translog,for,terms,below,code,below,term,code,and,seq,above,code,above,seq,no,code,see,translog,trim,operations,long,long;public,abstract,void,trim,operations,from,translog,long,below,term,long,above,seq,no,throws,engine,exception
Engine -> public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;1535965276;Trims translog for terms below <code>belowTerm</code> and seq# above <code>aboveSeqNo</code>_@see Translog#trimOperations(long, long);public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;trims,translog,for,terms,below,code,below,term,code,and,seq,above,code,above,seq,no,code,see,translog,trim,operations,long,long;public,abstract,void,trim,operations,from,translog,long,below,term,long,above,seq,no,throws,engine,exception
Engine -> public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;1536314350;Trims translog for terms below <code>belowTerm</code> and seq# above <code>aboveSeqNo</code>_@see Translog#trimOperations(long, long);public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;trims,translog,for,terms,below,code,below,term,code,and,seq,above,code,above,seq,no,code,see,translog,trim,operations,long,long;public,abstract,void,trim,operations,from,translog,long,below,term,long,above,seq,no,throws,engine,exception
Engine -> public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;1536828374;Trims translog for terms below <code>belowTerm</code> and seq# above <code>aboveSeqNo</code>_@see Translog#trimOperations(long, long);public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;trims,translog,for,terms,below,code,below,term,code,and,seq,above,code,above,seq,no,code,see,translog,trim,operations,long,long;public,abstract,void,trim,operations,from,translog,long,below,term,long,above,seq,no,throws,engine,exception
Engine -> public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;1537371806;Trims translog for terms below <code>belowTerm</code> and seq# above <code>aboveSeqNo</code>_@see Translog#trimOperations(long, long);public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;trims,translog,for,terms,below,code,below,term,code,and,seq,above,code,above,seq,no,code,see,translog,trim,operations,long,long;public,abstract,void,trim,operations,from,translog,long,below,term,long,above,seq,no,throws,engine,exception
Engine -> public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;1537806831;Trims translog for terms below <code>belowTerm</code> and seq# above <code>aboveSeqNo</code>_@see Translog#trimOperations(long, long);public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;trims,translog,for,terms,below,code,below,term,code,and,seq,above,code,above,seq,no,code,see,translog,trim,operations,long,long;public,abstract,void,trim,operations,from,translog,long,below,term,long,above,seq,no,throws,engine,exception
Engine -> public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;1538067637;Trims translog for terms below <code>belowTerm</code> and seq# above <code>aboveSeqNo</code>_@see Translog#trimOperations(long, long);public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;trims,translog,for,terms,below,code,below,term,code,and,seq,above,code,above,seq,no,code,see,translog,trim,operations,long,long;public,abstract,void,trim,operations,from,translog,long,below,term,long,above,seq,no,throws,engine,exception
Engine -> public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;1538424609;Trims translog for terms below <code>belowTerm</code> and seq# above <code>aboveSeqNo</code>_@see Translog#trimOperations(long, long);public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;trims,translog,for,terms,below,code,below,term,code,and,seq,above,code,above,seq,no,code,see,translog,trim,operations,long,long;public,abstract,void,trim,operations,from,translog,long,below,term,long,above,seq,no,throws,engine,exception
Engine -> public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;1539723533;Trims translog for terms below <code>belowTerm</code> and seq# above <code>aboveSeqNo</code>_@see Translog#trimOperations(long, long);public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;trims,translog,for,terms,below,code,below,term,code,and,seq,above,code,above,seq,no,code,see,translog,trim,operations,long,long;public,abstract,void,trim,operations,from,translog,long,below,term,long,above,seq,no,throws,engine,exception
Engine -> public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;1541618615;Trims translog for terms below <code>belowTerm</code> and seq# above <code>aboveSeqNo</code>_@see Translog#trimOperations(long, long);public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;trims,translog,for,terms,below,code,below,term,code,and,seq,above,code,above,seq,no,code,see,translog,trim,operations,long,long;public,abstract,void,trim,operations,from,translog,long,below,term,long,above,seq,no,throws,engine,exception
Engine -> public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;1542697754;Trims translog for terms below <code>belowTerm</code> and seq# above <code>aboveSeqNo</code>_@see Translog#trimOperations(long, long);public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;trims,translog,for,terms,below,code,below,term,code,and,seq,above,code,above,seq,no,code,see,translog,trim,operations,long,long;public,abstract,void,trim,operations,from,translog,long,below,term,long,above,seq,no,throws,engine,exception
Engine -> public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;1543047942;Trims translog for terms below <code>belowTerm</code> and seq# above <code>aboveSeqNo</code>_@see Translog#trimOperations(long, long);public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;trims,translog,for,terms,below,code,below,term,code,and,seq,above,code,above,seq,no,code,see,translog,trim,operations,long,long;public,abstract,void,trim,operations,from,translog,long,below,term,long,above,seq,no,throws,engine,exception
Engine -> public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;1544545090;Trims translog for terms below <code>belowTerm</code> and seq# above <code>aboveSeqNo</code>_@see Translog#trimOperations(long, long);public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;trims,translog,for,terms,below,code,below,term,code,and,seq,above,code,above,seq,no,code,see,translog,trim,operations,long,long;public,abstract,void,trim,operations,from,translog,long,below,term,long,above,seq,no,throws,engine,exception
Engine -> public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;1544684920;Trims translog for terms below <code>belowTerm</code> and seq# above <code>aboveSeqNo</code>_@see Translog#trimOperations(long, long);public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;trims,translog,for,terms,below,code,below,term,code,and,seq,above,code,above,seq,no,code,see,translog,trim,operations,long,long;public,abstract,void,trim,operations,from,translog,long,below,term,long,above,seq,no,throws,engine,exception
Engine -> public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;1545140118;Trims translog for terms below <code>belowTerm</code> and seq# above <code>aboveSeqNo</code>_@see Translog#trimOperations(long, long);public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;trims,translog,for,terms,below,code,below,term,code,and,seq,above,code,above,seq,no,code,see,translog,trim,operations,long,long;public,abstract,void,trim,operations,from,translog,long,below,term,long,above,seq,no,throws,engine,exception
Engine -> public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;1545221705;Trims translog for terms below <code>belowTerm</code> and seq# above <code>aboveSeqNo</code>_@see Translog#trimOperations(long, long);public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;trims,translog,for,terms,below,code,below,term,code,and,seq,above,code,above,seq,no,code,see,translog,trim,operations,long,long;public,abstract,void,trim,operations,from,translog,long,below,term,long,above,seq,no,throws,engine,exception
Engine -> public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;1547332999;Trims translog for terms below <code>belowTerm</code> and seq# above <code>aboveSeqNo</code>_@see Translog#trimOperations(long, long);public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;trims,translog,for,terms,below,code,below,term,code,and,seq,above,code,above,seq,no,code,see,translog,trim,operations,long,long;public,abstract,void,trim,operations,from,translog,long,below,term,long,above,seq,no,throws,engine,exception
Engine -> public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;1548771485;Trims translog for terms below <code>belowTerm</code> and seq# above <code>aboveSeqNo</code>_@see Translog#trimOperations(long, long);public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;trims,translog,for,terms,below,code,below,term,code,and,seq,above,code,above,seq,no,code,see,translog,trim,operations,long,long;public,abstract,void,trim,operations,from,translog,long,below,term,long,above,seq,no,throws,engine,exception
Engine -> public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;1549891630;Trims translog for terms below <code>belowTerm</code> and seq# above <code>aboveSeqNo</code>_@see Translog#trimOperations(long, long);public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;trims,translog,for,terms,below,code,below,term,code,and,seq,above,code,above,seq,no,code,see,translog,trim,operations,long,long;public,abstract,void,trim,operations,from,translog,long,below,term,long,above,seq,no,throws,engine,exception
Engine -> public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;1549975032;Trims translog for terms below <code>belowTerm</code> and seq# above <code>aboveSeqNo</code>_@see Translog#trimOperations(long, long);public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;trims,translog,for,terms,below,code,below,term,code,and,seq,above,code,above,seq,no,code,see,translog,trim,operations,long,long;public,abstract,void,trim,operations,from,translog,long,below,term,long,above,seq,no,throws,engine,exception
Engine -> public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;1550220204;Trims translog for terms below <code>belowTerm</code> and seq# above <code>aboveSeqNo</code>_@see Translog#trimOperations(long, long);public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;trims,translog,for,terms,below,code,below,term,code,and,seq,above,code,above,seq,no,code,see,translog,trim,operations,long,long;public,abstract,void,trim,operations,from,translog,long,below,term,long,above,seq,no,throws,engine,exception
Engine -> public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;1550526771;Trims translog for terms below <code>belowTerm</code> and seq# above <code>aboveSeqNo</code>_@see Translog#trimOperations(long, long);public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;trims,translog,for,terms,below,code,below,term,code,and,seq,above,code,above,seq,no,code,see,translog,trim,operations,long,long;public,abstract,void,trim,operations,from,translog,long,below,term,long,above,seq,no,throws,engine,exception
Engine -> public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;1551110274;Trims translog for terms below <code>belowTerm</code> and seq# above <code>aboveSeqNo</code>_@see Translog#trimOperations(long, long);public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;trims,translog,for,terms,below,code,below,term,code,and,seq,above,code,above,seq,no,code,see,translog,trim,operations,long,long;public,abstract,void,trim,operations,from,translog,long,below,term,long,above,seq,no,throws,engine,exception
Engine -> public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;1551126708;Trims translog for terms below <code>belowTerm</code> and seq# above <code>aboveSeqNo</code>_@see Translog#trimOperations(long, long);public abstract void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws EngineException_;trims,translog,for,terms,below,code,below,term,code,and,seq,above,code,above,seq,no,code,see,translog,trim,operations,long,long;public,abstract,void,trim,operations,from,translog,long,below,term,long,above,seq,no,throws,engine,exception
Engine -> public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes,                                         boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;1542697754;Triggers a forced merge on this engine;public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes,_                                        boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;triggers,a,forced,merge,on,this,engine;public,abstract,void,force,merge,boolean,flush,int,max,num,segments,boolean,only,expunge,deletes,boolean,upgrade,boolean,upgrade,only,ancient,segments,throws,engine,exception,ioexception
Engine -> public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes,                                         boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;1543047942;Triggers a forced merge on this engine;public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes,_                                        boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;triggers,a,forced,merge,on,this,engine;public,abstract,void,force,merge,boolean,flush,int,max,num,segments,boolean,only,expunge,deletes,boolean,upgrade,boolean,upgrade,only,ancient,segments,throws,engine,exception,ioexception
Engine -> public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes,                                         boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;1544545090;Triggers a forced merge on this engine;public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes,_                                        boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;triggers,a,forced,merge,on,this,engine;public,abstract,void,force,merge,boolean,flush,int,max,num,segments,boolean,only,expunge,deletes,boolean,upgrade,boolean,upgrade,only,ancient,segments,throws,engine,exception,ioexception
Engine -> public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes,                                         boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;1544684920;Triggers a forced merge on this engine;public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes,_                                        boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;triggers,a,forced,merge,on,this,engine;public,abstract,void,force,merge,boolean,flush,int,max,num,segments,boolean,only,expunge,deletes,boolean,upgrade,boolean,upgrade,only,ancient,segments,throws,engine,exception,ioexception
Engine -> public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes,                                         boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;1545140118;Triggers a forced merge on this engine;public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes,_                                        boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;triggers,a,forced,merge,on,this,engine;public,abstract,void,force,merge,boolean,flush,int,max,num,segments,boolean,only,expunge,deletes,boolean,upgrade,boolean,upgrade,only,ancient,segments,throws,engine,exception,ioexception
Engine -> public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes,                                         boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;1545221705;Triggers a forced merge on this engine;public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes,_                                        boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;triggers,a,forced,merge,on,this,engine;public,abstract,void,force,merge,boolean,flush,int,max,num,segments,boolean,only,expunge,deletes,boolean,upgrade,boolean,upgrade,only,ancient,segments,throws,engine,exception,ioexception
Engine -> public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes,                                         boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;1547332999;Triggers a forced merge on this engine;public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes,_                                        boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;triggers,a,forced,merge,on,this,engine;public,abstract,void,force,merge,boolean,flush,int,max,num,segments,boolean,only,expunge,deletes,boolean,upgrade,boolean,upgrade,only,ancient,segments,throws,engine,exception,ioexception
Engine -> public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes,                                         boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;1548771485;Triggers a forced merge on this engine;public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes,_                                        boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;triggers,a,forced,merge,on,this,engine;public,abstract,void,force,merge,boolean,flush,int,max,num,segments,boolean,only,expunge,deletes,boolean,upgrade,boolean,upgrade,only,ancient,segments,throws,engine,exception,ioexception
Engine -> public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes,                                         boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;1549891630;Triggers a forced merge on this engine;public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes,_                                        boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;triggers,a,forced,merge,on,this,engine;public,abstract,void,force,merge,boolean,flush,int,max,num,segments,boolean,only,expunge,deletes,boolean,upgrade,boolean,upgrade,only,ancient,segments,throws,engine,exception,ioexception
Engine -> public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes,                                         boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;1549975032;Triggers a forced merge on this engine;public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes,_                                        boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;triggers,a,forced,merge,on,this,engine;public,abstract,void,force,merge,boolean,flush,int,max,num,segments,boolean,only,expunge,deletes,boolean,upgrade,boolean,upgrade,only,ancient,segments,throws,engine,exception,ioexception
Engine -> public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes,                                         boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;1550220204;Triggers a forced merge on this engine;public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes,_                                        boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;triggers,a,forced,merge,on,this,engine;public,abstract,void,force,merge,boolean,flush,int,max,num,segments,boolean,only,expunge,deletes,boolean,upgrade,boolean,upgrade,only,ancient,segments,throws,engine,exception,ioexception
Engine -> public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes,                                         boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;1550526771;Triggers a forced merge on this engine;public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes,_                                        boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;triggers,a,forced,merge,on,this,engine;public,abstract,void,force,merge,boolean,flush,int,max,num,segments,boolean,only,expunge,deletes,boolean,upgrade,boolean,upgrade,only,ancient,segments,throws,engine,exception,ioexception
Engine -> public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes,                                         boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;1551110274;Triggers a forced merge on this engine;public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes,_                                        boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;triggers,a,forced,merge,on,this,engine;public,abstract,void,force,merge,boolean,flush,int,max,num,segments,boolean,only,expunge,deletes,boolean,upgrade,boolean,upgrade,only,ancient,segments,throws,engine,exception,ioexception
Engine -> public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes,                                         boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;1551126708;Triggers a forced merge on this engine;public abstract void forceMerge(boolean flush, int maxNumSegments, boolean onlyExpungeDeletes,_                                        boolean upgrade, boolean upgradeOnlyAncientSegments) throws EngineException, IOException_;triggers,a,forced,merge,on,this,engine;public,abstract,void,force,merge,boolean,flush,int,max,num,segments,boolean,only,expunge,deletes,boolean,upgrade,boolean,upgrade,only,ancient,segments,throws,engine,exception,ioexception
Engine -> @Nullable     public abstract void refresh(String source) throws EngineException_;1524684173;Synchronously refreshes the engine for new search operations to reflect the latest_changes.;@Nullable_    public abstract void refresh(String source) throws EngineException_;synchronously,refreshes,the,engine,for,new,search,operations,to,reflect,the,latest,changes;nullable,public,abstract,void,refresh,string,source,throws,engine,exception
Engine -> @Nullable     public abstract void refresh(String source) throws EngineException_;1525162917;Synchronously refreshes the engine for new search operations to reflect the latest_changes.;@Nullable_    public abstract void refresh(String source) throws EngineException_;synchronously,refreshes,the,engine,for,new,search,operations,to,reflect,the,latest,changes;nullable,public,abstract,void,refresh,string,source,throws,engine,exception
Engine -> @Nullable     public abstract void refresh(String source) throws EngineException_;1525334055;Synchronously refreshes the engine for new search operations to reflect the latest_changes.;@Nullable_    public abstract void refresh(String source) throws EngineException_;synchronously,refreshes,the,engine,for,new,search,operations,to,reflect,the,latest,changes;nullable,public,abstract,void,refresh,string,source,throws,engine,exception
Engine -> @Nullable     public abstract void refresh(String source) throws EngineException_;1527583663;Synchronously refreshes the engine for new search operations to reflect the latest_changes.;@Nullable_    public abstract void refresh(String source) throws EngineException_;synchronously,refreshes,the,engine,for,new,search,operations,to,reflect,the,latest,changes;nullable,public,abstract,void,refresh,string,source,throws,engine,exception
Engine -> @Nullable     public abstract void refresh(String source) throws EngineException_;1528706846;Synchronously refreshes the engine for new search operations to reflect the latest_changes.;@Nullable_    public abstract void refresh(String source) throws EngineException_;synchronously,refreshes,the,engine,for,new,search,operations,to,reflect,the,latest,changes;nullable,public,abstract,void,refresh,string,source,throws,engine,exception
Engine -> @Nullable     public abstract void refresh(String source) throws EngineException_;1528762805;Synchronously refreshes the engine for new search operations to reflect the latest_changes.;@Nullable_    public abstract void refresh(String source) throws EngineException_;synchronously,refreshes,the,engine,for,new,search,operations,to,reflect,the,latest,changes;nullable,public,abstract,void,refresh,string,source,throws,engine,exception
Engine -> @Nullable     public abstract void refresh(String source) throws EngineException_;1531910483;Synchronously refreshes the engine for new search operations to reflect the latest_changes.;@Nullable_    public abstract void refresh(String source) throws EngineException_;synchronously,refreshes,the,engine,for,new,search,operations,to,reflect,the,latest,changes;nullable,public,abstract,void,refresh,string,source,throws,engine,exception
Engine -> @Nullable     public abstract void refresh(String source) throws EngineException_;1532685069;Synchronously refreshes the engine for new search operations to reflect the latest_changes.;@Nullable_    public abstract void refresh(String source) throws EngineException_;synchronously,refreshes,the,engine,for,new,search,operations,to,reflect,the,latest,changes;nullable,public,abstract,void,refresh,string,source,throws,engine,exception
Engine -> @Nullable     public abstract void refresh(String source) throws EngineException_;1533295538;Synchronously refreshes the engine for new search operations to reflect the latest_changes.;@Nullable_    public abstract void refresh(String source) throws EngineException_;synchronously,refreshes,the,engine,for,new,search,operations,to,reflect,the,latest,changes;nullable,public,abstract,void,refresh,string,source,throws,engine,exception
Engine -> @Nullable     public abstract void refresh(String source) throws EngineException_;1535046779;Synchronously refreshes the engine for new search operations to reflect the latest_changes.;@Nullable_    public abstract void refresh(String source) throws EngineException_;synchronously,refreshes,the,engine,for,new,search,operations,to,reflect,the,latest,changes;nullable,public,abstract,void,refresh,string,source,throws,engine,exception
Engine -> @Nullable     public abstract void refresh(String source) throws EngineException_;1535723122;Synchronously refreshes the engine for new search operations to reflect the latest_changes.;@Nullable_    public abstract void refresh(String source) throws EngineException_;synchronously,refreshes,the,engine,for,new,search,operations,to,reflect,the,latest,changes;nullable,public,abstract,void,refresh,string,source,throws,engine,exception
Engine -> @Nullable     public abstract void refresh(String source) throws EngineException_;1535965276;Synchronously refreshes the engine for new search operations to reflect the latest_changes.;@Nullable_    public abstract void refresh(String source) throws EngineException_;synchronously,refreshes,the,engine,for,new,search,operations,to,reflect,the,latest,changes;nullable,public,abstract,void,refresh,string,source,throws,engine,exception
Engine -> @Nullable     public abstract void refresh(String source) throws EngineException_;1536314350;Synchronously refreshes the engine for new search operations to reflect the latest_changes.;@Nullable_    public abstract void refresh(String source) throws EngineException_;synchronously,refreshes,the,engine,for,new,search,operations,to,reflect,the,latest,changes;nullable,public,abstract,void,refresh,string,source,throws,engine,exception
Engine -> @Nullable     public abstract void refresh(String source) throws EngineException_;1536828374;Synchronously refreshes the engine for new search operations to reflect the latest_changes.;@Nullable_    public abstract void refresh(String source) throws EngineException_;synchronously,refreshes,the,engine,for,new,search,operations,to,reflect,the,latest,changes;nullable,public,abstract,void,refresh,string,source,throws,engine,exception
Engine -> @Nullable     public abstract void refresh(String source) throws EngineException_;1537371806;Synchronously refreshes the engine for new search operations to reflect the latest_changes.;@Nullable_    public abstract void refresh(String source) throws EngineException_;synchronously,refreshes,the,engine,for,new,search,operations,to,reflect,the,latest,changes;nullable,public,abstract,void,refresh,string,source,throws,engine,exception
Engine -> @Nullable     public abstract void refresh(String source) throws EngineException_;1537806831;Synchronously refreshes the engine for new search operations to reflect the latest_changes.;@Nullable_    public abstract void refresh(String source) throws EngineException_;synchronously,refreshes,the,engine,for,new,search,operations,to,reflect,the,latest,changes;nullable,public,abstract,void,refresh,string,source,throws,engine,exception
Engine -> @Nullable     public abstract void refresh(String source) throws EngineException_;1538067637;Synchronously refreshes the engine for new search operations to reflect the latest_changes.;@Nullable_    public abstract void refresh(String source) throws EngineException_;synchronously,refreshes,the,engine,for,new,search,operations,to,reflect,the,latest,changes;nullable,public,abstract,void,refresh,string,source,throws,engine,exception
Engine -> @Nullable     public abstract void refresh(String source) throws EngineException_;1538424609;Synchronously refreshes the engine for new search operations to reflect the latest_changes.;@Nullable_    public abstract void refresh(String source) throws EngineException_;synchronously,refreshes,the,engine,for,new,search,operations,to,reflect,the,latest,changes;nullable,public,abstract,void,refresh,string,source,throws,engine,exception
Engine -> @Nullable     public abstract void refresh(String source) throws EngineException_;1539723533;Synchronously refreshes the engine for new search operations to reflect the latest_changes.;@Nullable_    public abstract void refresh(String source) throws EngineException_;synchronously,refreshes,the,engine,for,new,search,operations,to,reflect,the,latest,changes;nullable,public,abstract,void,refresh,string,source,throws,engine,exception
Engine -> @Nullable     public abstract void refresh(String source) throws EngineException_;1541618615;Synchronously refreshes the engine for new search operations to reflect the latest_changes.;@Nullable_    public abstract void refresh(String source) throws EngineException_;synchronously,refreshes,the,engine,for,new,search,operations,to,reflect,the,latest,changes;nullable,public,abstract,void,refresh,string,source,throws,engine,exception
Engine -> @Nullable     public abstract void refresh(String source) throws EngineException_;1542697754;Synchronously refreshes the engine for new search operations to reflect the latest_changes.;@Nullable_    public abstract void refresh(String source) throws EngineException_;synchronously,refreshes,the,engine,for,new,search,operations,to,reflect,the,latest,changes;nullable,public,abstract,void,refresh,string,source,throws,engine,exception
Engine -> @Nullable     public abstract void refresh(String source) throws EngineException_;1543047942;Synchronously refreshes the engine for new search operations to reflect the latest_changes.;@Nullable_    public abstract void refresh(String source) throws EngineException_;synchronously,refreshes,the,engine,for,new,search,operations,to,reflect,the,latest,changes;nullable,public,abstract,void,refresh,string,source,throws,engine,exception
Engine -> @Nullable     public abstract void refresh(String source) throws EngineException_;1544545090;Synchronously refreshes the engine for new search operations to reflect the latest_changes.;@Nullable_    public abstract void refresh(String source) throws EngineException_;synchronously,refreshes,the,engine,for,new,search,operations,to,reflect,the,latest,changes;nullable,public,abstract,void,refresh,string,source,throws,engine,exception
Engine -> @Nullable     public abstract void refresh(String source) throws EngineException_;1544684920;Synchronously refreshes the engine for new search operations to reflect the latest_changes.;@Nullable_    public abstract void refresh(String source) throws EngineException_;synchronously,refreshes,the,engine,for,new,search,operations,to,reflect,the,latest,changes;nullable,public,abstract,void,refresh,string,source,throws,engine,exception
Engine -> @Nullable     public abstract void refresh(String source) throws EngineException_;1545140118;Synchronously refreshes the engine for new search operations to reflect the latest_changes.;@Nullable_    public abstract void refresh(String source) throws EngineException_;synchronously,refreshes,the,engine,for,new,search,operations,to,reflect,the,latest,changes;nullable,public,abstract,void,refresh,string,source,throws,engine,exception
Engine -> @Nullable     public abstract void refresh(String source) throws EngineException_;1545221705;Synchronously refreshes the engine for new search operations to reflect the latest_changes.;@Nullable_    public abstract void refresh(String source) throws EngineException_;synchronously,refreshes,the,engine,for,new,search,operations,to,reflect,the,latest,changes;nullable,public,abstract,void,refresh,string,source,throws,engine,exception
Engine -> @Nullable     public abstract void refresh(String source) throws EngineException_;1547332999;Synchronously refreshes the engine for new search operations to reflect the latest_changes.;@Nullable_    public abstract void refresh(String source) throws EngineException_;synchronously,refreshes,the,engine,for,new,search,operations,to,reflect,the,latest,changes;nullable,public,abstract,void,refresh,string,source,throws,engine,exception
Engine -> @Nullable     public abstract void refresh(String source) throws EngineException_;1548771485;Synchronously refreshes the engine for new search operations to reflect the latest_changes.;@Nullable_    public abstract void refresh(String source) throws EngineException_;synchronously,refreshes,the,engine,for,new,search,operations,to,reflect,the,latest,changes;nullable,public,abstract,void,refresh,string,source,throws,engine,exception
Engine -> @Nullable     public abstract void refresh(String source) throws EngineException_;1549891630;Synchronously refreshes the engine for new search operations to reflect the latest_changes.;@Nullable_    public abstract void refresh(String source) throws EngineException_;synchronously,refreshes,the,engine,for,new,search,operations,to,reflect,the,latest,changes;nullable,public,abstract,void,refresh,string,source,throws,engine,exception
Engine -> @Nullable     public abstract void refresh(String source) throws EngineException_;1549975032;Synchronously refreshes the engine for new search operations to reflect the latest_changes.;@Nullable_    public abstract void refresh(String source) throws EngineException_;synchronously,refreshes,the,engine,for,new,search,operations,to,reflect,the,latest,changes;nullable,public,abstract,void,refresh,string,source,throws,engine,exception
Engine -> @Nullable     public abstract void refresh(String source) throws EngineException_;1550220204;Synchronously refreshes the engine for new search operations to reflect the latest_changes.;@Nullable_    public abstract void refresh(String source) throws EngineException_;synchronously,refreshes,the,engine,for,new,search,operations,to,reflect,the,latest,changes;nullable,public,abstract,void,refresh,string,source,throws,engine,exception
Engine -> @Nullable     public abstract void refresh(String source) throws EngineException_;1550526771;Synchronously refreshes the engine for new search operations to reflect the latest_changes.;@Nullable_    public abstract void refresh(String source) throws EngineException_;synchronously,refreshes,the,engine,for,new,search,operations,to,reflect,the,latest,changes;nullable,public,abstract,void,refresh,string,source,throws,engine,exception
Engine -> @Nullable     public abstract void refresh(String source) throws EngineException_;1551110274;Synchronously refreshes the engine for new search operations to reflect the latest_changes.;@Nullable_    public abstract void refresh(String source) throws EngineException_;synchronously,refreshes,the,engine,for,new,search,operations,to,reflect,the,latest,changes;nullable,public,abstract,void,refresh,string,source,throws,engine,exception
Engine -> @Nullable     public abstract void refresh(String source) throws EngineException_;1551126708;Synchronously refreshes the engine for new search operations to reflect the latest_changes.;@Nullable_    public abstract void refresh(String source) throws EngineException_;synchronously,refreshes,the,engine,for,new,search,operations,to,reflect,the,latest,changes;nullable,public,abstract,void,refresh,string,source,throws,engine,exception
Engine -> public abstract void maybePruneDeletes()_;1524684173;Tries to prune buffered deletes from the version map.;public abstract void maybePruneDeletes()_;tries,to,prune,buffered,deletes,from,the,version,map;public,abstract,void,maybe,prune,deletes
Engine -> public abstract void maybePruneDeletes()_;1525162917;Tries to prune buffered deletes from the version map.;public abstract void maybePruneDeletes()_;tries,to,prune,buffered,deletes,from,the,version,map;public,abstract,void,maybe,prune,deletes
Engine -> public abstract void maybePruneDeletes()_;1525334055;Tries to prune buffered deletes from the version map.;public abstract void maybePruneDeletes()_;tries,to,prune,buffered,deletes,from,the,version,map;public,abstract,void,maybe,prune,deletes
Engine -> public abstract void maybePruneDeletes()_;1527583663;Tries to prune buffered deletes from the version map.;public abstract void maybePruneDeletes()_;tries,to,prune,buffered,deletes,from,the,version,map;public,abstract,void,maybe,prune,deletes
Engine -> public abstract void maybePruneDeletes()_;1528706846;Tries to prune buffered deletes from the version map.;public abstract void maybePruneDeletes()_;tries,to,prune,buffered,deletes,from,the,version,map;public,abstract,void,maybe,prune,deletes
Engine -> public abstract void maybePruneDeletes()_;1528762805;Tries to prune buffered deletes from the version map.;public abstract void maybePruneDeletes()_;tries,to,prune,buffered,deletes,from,the,version,map;public,abstract,void,maybe,prune,deletes
Engine -> public abstract void maybePruneDeletes()_;1531910483;Tries to prune buffered deletes from the version map.;public abstract void maybePruneDeletes()_;tries,to,prune,buffered,deletes,from,the,version,map;public,abstract,void,maybe,prune,deletes
Engine -> public abstract void maybePruneDeletes()_;1532685069;Tries to prune buffered deletes from the version map.;public abstract void maybePruneDeletes()_;tries,to,prune,buffered,deletes,from,the,version,map;public,abstract,void,maybe,prune,deletes
Engine -> public abstract void maybePruneDeletes()_;1533295538;Tries to prune buffered deletes from the version map.;public abstract void maybePruneDeletes()_;tries,to,prune,buffered,deletes,from,the,version,map;public,abstract,void,maybe,prune,deletes
Engine -> public abstract void maybePruneDeletes()_;1535046779;Tries to prune buffered deletes from the version map.;public abstract void maybePruneDeletes()_;tries,to,prune,buffered,deletes,from,the,version,map;public,abstract,void,maybe,prune,deletes
Engine -> public abstract void maybePruneDeletes()_;1535723122;Tries to prune buffered deletes from the version map.;public abstract void maybePruneDeletes()_;tries,to,prune,buffered,deletes,from,the,version,map;public,abstract,void,maybe,prune,deletes
Engine -> public abstract void maybePruneDeletes()_;1535965276;Tries to prune buffered deletes from the version map.;public abstract void maybePruneDeletes()_;tries,to,prune,buffered,deletes,from,the,version,map;public,abstract,void,maybe,prune,deletes
Engine -> public abstract void maybePruneDeletes()_;1536314350;Tries to prune buffered deletes from the version map.;public abstract void maybePruneDeletes()_;tries,to,prune,buffered,deletes,from,the,version,map;public,abstract,void,maybe,prune,deletes
Engine -> public abstract void maybePruneDeletes()_;1536828374;Tries to prune buffered deletes from the version map.;public abstract void maybePruneDeletes()_;tries,to,prune,buffered,deletes,from,the,version,map;public,abstract,void,maybe,prune,deletes
Engine -> public abstract void maybePruneDeletes()_;1537371806;Tries to prune buffered deletes from the version map.;public abstract void maybePruneDeletes()_;tries,to,prune,buffered,deletes,from,the,version,map;public,abstract,void,maybe,prune,deletes
Engine -> public abstract void maybePruneDeletes()_;1537806831;Tries to prune buffered deletes from the version map.;public abstract void maybePruneDeletes()_;tries,to,prune,buffered,deletes,from,the,version,map;public,abstract,void,maybe,prune,deletes
Engine -> public abstract void maybePruneDeletes()_;1538067637;Tries to prune buffered deletes from the version map.;public abstract void maybePruneDeletes()_;tries,to,prune,buffered,deletes,from,the,version,map;public,abstract,void,maybe,prune,deletes
Engine -> public abstract void maybePruneDeletes()_;1538424609;Tries to prune buffered deletes from the version map.;public abstract void maybePruneDeletes()_;tries,to,prune,buffered,deletes,from,the,version,map;public,abstract,void,maybe,prune,deletes
Engine -> public abstract void maybePruneDeletes()_;1539723533;Tries to prune buffered deletes from the version map.;public abstract void maybePruneDeletes()_;tries,to,prune,buffered,deletes,from,the,version,map;public,abstract,void,maybe,prune,deletes
Engine -> public abstract void maybePruneDeletes()_;1541618615;Tries to prune buffered deletes from the version map.;public abstract void maybePruneDeletes()_;tries,to,prune,buffered,deletes,from,the,version,map;public,abstract,void,maybe,prune,deletes
Engine -> public abstract void maybePruneDeletes()_;1542697754;Tries to prune buffered deletes from the version map.;public abstract void maybePruneDeletes()_;tries,to,prune,buffered,deletes,from,the,version,map;public,abstract,void,maybe,prune,deletes
Engine -> public abstract void maybePruneDeletes()_;1543047942;Tries to prune buffered deletes from the version map.;public abstract void maybePruneDeletes()_;tries,to,prune,buffered,deletes,from,the,version,map;public,abstract,void,maybe,prune,deletes
Engine -> public abstract void maybePruneDeletes()_;1544545090;Tries to prune buffered deletes from the version map.;public abstract void maybePruneDeletes()_;tries,to,prune,buffered,deletes,from,the,version,map;public,abstract,void,maybe,prune,deletes
Engine -> public abstract void maybePruneDeletes()_;1544684920;Tries to prune buffered deletes from the version map.;public abstract void maybePruneDeletes()_;tries,to,prune,buffered,deletes,from,the,version,map;public,abstract,void,maybe,prune,deletes
Engine -> public abstract void maybePruneDeletes()_;1545140118;Tries to prune buffered deletes from the version map.;public abstract void maybePruneDeletes()_;tries,to,prune,buffered,deletes,from,the,version,map;public,abstract,void,maybe,prune,deletes
Engine -> public abstract void maybePruneDeletes()_;1545221705;Tries to prune buffered deletes from the version map.;public abstract void maybePruneDeletes()_;tries,to,prune,buffered,deletes,from,the,version,map;public,abstract,void,maybe,prune,deletes
Engine -> public abstract void maybePruneDeletes()_;1547332999;Tries to prune buffered deletes from the version map.;public abstract void maybePruneDeletes()_;tries,to,prune,buffered,deletes,from,the,version,map;public,abstract,void,maybe,prune,deletes
Engine -> public abstract void maybePruneDeletes()_;1548771485;Tries to prune buffered deletes from the version map.;public abstract void maybePruneDeletes()_;tries,to,prune,buffered,deletes,from,the,version,map;public,abstract,void,maybe,prune,deletes
Engine -> public abstract void maybePruneDeletes()_;1549891630;Tries to prune buffered deletes from the version map.;public abstract void maybePruneDeletes()_;tries,to,prune,buffered,deletes,from,the,version,map;public,abstract,void,maybe,prune,deletes
Engine -> public abstract void maybePruneDeletes()_;1549975032;Tries to prune buffered deletes from the version map.;public abstract void maybePruneDeletes()_;tries,to,prune,buffered,deletes,from,the,version,map;public,abstract,void,maybe,prune,deletes
Engine -> public abstract void maybePruneDeletes()_;1550220204;Tries to prune buffered deletes from the version map.;public abstract void maybePruneDeletes()_;tries,to,prune,buffered,deletes,from,the,version,map;public,abstract,void,maybe,prune,deletes
Engine -> public abstract void maybePruneDeletes()_;1550526771;Tries to prune buffered deletes from the version map.;public abstract void maybePruneDeletes()_;tries,to,prune,buffered,deletes,from,the,version,map;public,abstract,void,maybe,prune,deletes
Engine -> public abstract void maybePruneDeletes()_;1551110274;Tries to prune buffered deletes from the version map.;public abstract void maybePruneDeletes()_;tries,to,prune,buffered,deletes,from,the,version,map;public,abstract,void,maybe,prune,deletes
Engine -> public abstract void maybePruneDeletes()_;1551126708;Tries to prune buffered deletes from the version map.;public abstract void maybePruneDeletes()_;tries,to,prune,buffered,deletes,from,the,version,map;public,abstract,void,maybe,prune,deletes
Engine -> Searcher -> public String source();1524684173;The source that caused this searcher to be acquired.;public String source() {_            return source__        };the,source,that,caused,this,searcher,to,be,acquired;public,string,source,return,source
Engine -> Searcher -> public String source();1525162917;The source that caused this searcher to be acquired.;public String source() {_            return source__        };the,source,that,caused,this,searcher,to,be,acquired;public,string,source,return,source
Engine -> Searcher -> public String source();1525334055;The source that caused this searcher to be acquired.;public String source() {_            return source__        };the,source,that,caused,this,searcher,to,be,acquired;public,string,source,return,source
Engine -> Searcher -> public String source();1527583663;The source that caused this searcher to be acquired.;public String source() {_            return source__        };the,source,that,caused,this,searcher,to,be,acquired;public,string,source,return,source
Engine -> Searcher -> public String source();1528706846;The source that caused this searcher to be acquired.;public String source() {_            return source__        };the,source,that,caused,this,searcher,to,be,acquired;public,string,source,return,source
Engine -> Searcher -> public String source();1528762805;The source that caused this searcher to be acquired.;public String source() {_            return source__        };the,source,that,caused,this,searcher,to,be,acquired;public,string,source,return,source
Engine -> Searcher -> public String source();1531910483;The source that caused this searcher to be acquired.;public String source() {_            return source__        };the,source,that,caused,this,searcher,to,be,acquired;public,string,source,return,source
Engine -> Searcher -> public String source();1532685069;The source that caused this searcher to be acquired.;public String source() {_            return source__        };the,source,that,caused,this,searcher,to,be,acquired;public,string,source,return,source
Engine -> Searcher -> public String source();1533295538;The source that caused this searcher to be acquired.;public String source() {_            return source__        };the,source,that,caused,this,searcher,to,be,acquired;public,string,source,return,source
Engine -> Searcher -> public String source();1535046779;The source that caused this searcher to be acquired.;public String source() {_            return source__        };the,source,that,caused,this,searcher,to,be,acquired;public,string,source,return,source
Engine -> Searcher -> public String source();1535723122;The source that caused this searcher to be acquired.;public String source() {_            return source__        };the,source,that,caused,this,searcher,to,be,acquired;public,string,source,return,source
Engine -> Searcher -> public String source();1535965276;The source that caused this searcher to be acquired.;public String source() {_            return source__        };the,source,that,caused,this,searcher,to,be,acquired;public,string,source,return,source
Engine -> Searcher -> public String source();1536314350;The source that caused this searcher to be acquired.;public String source() {_            return source__        };the,source,that,caused,this,searcher,to,be,acquired;public,string,source,return,source
Engine -> Searcher -> public String source();1536828374;The source that caused this searcher to be acquired.;public String source() {_            return source__        };the,source,that,caused,this,searcher,to,be,acquired;public,string,source,return,source
Engine -> Searcher -> public String source();1537371806;The source that caused this searcher to be acquired.;public String source() {_            return source__        };the,source,that,caused,this,searcher,to,be,acquired;public,string,source,return,source
Engine -> Searcher -> public String source();1537806831;The source that caused this searcher to be acquired.;public String source() {_            return source__        };the,source,that,caused,this,searcher,to,be,acquired;public,string,source,return,source
Engine -> Searcher -> public String source();1539723533;The source that caused this searcher to be acquired.;public String source() {_            return source__        };the,source,that,caused,this,searcher,to,be,acquired;public,string,source,return,source
Engine -> Searcher -> public String source();1541618615;The source that caused this searcher to be acquired.;public String source() {_            return source__        };the,source,that,caused,this,searcher,to,be,acquired;public,string,source,return,source
Engine -> Searcher -> public String source();1542697754;The source that caused this searcher to be acquired.;public String source() {_            return source__        };the,source,that,caused,this,searcher,to,be,acquired;public,string,source,return,source
Engine -> Searcher -> public String source();1543047942;The source that caused this searcher to be acquired.;public String source() {_            return source__        };the,source,that,caused,this,searcher,to,be,acquired;public,string,source,return,source
Engine -> Searcher -> public String source();1544545090;The source that caused this searcher to be acquired.;public String source() {_            return source__        };the,source,that,caused,this,searcher,to,be,acquired;public,string,source,return,source
Engine -> Searcher -> public String source();1544684920;The source that caused this searcher to be acquired.;public String source() {_            return source__        };the,source,that,caused,this,searcher,to,be,acquired;public,string,source,return,source
Engine -> Searcher -> public String source();1545140118;The source that caused this searcher to be acquired.;public String source() {_            return source__        };the,source,that,caused,this,searcher,to,be,acquired;public,string,source,return,source
Engine -> Searcher -> public String source();1545221705;The source that caused this searcher to be acquired.;public String source() {_            return source__        };the,source,that,caused,this,searcher,to,be,acquired;public,string,source,return,source
Engine -> Searcher -> public String source();1547332999;The source that caused this searcher to be acquired.;public String source() {_            return source__        };the,source,that,caused,this,searcher,to,be,acquired;public,string,source,return,source
Engine -> Searcher -> public String source();1548771485;The source that caused this searcher to be acquired.;public String source() {_            return source__        };the,source,that,caused,this,searcher,to,be,acquired;public,string,source,return,source
Engine -> Searcher -> public String source();1549891630;The source that caused this searcher to be acquired.;public String source() {_            return source__        };the,source,that,caused,this,searcher,to,be,acquired;public,string,source,return,source
Engine -> Searcher -> public String source();1549975032;The source that caused this searcher to be acquired.;public String source() {_            return source__        };the,source,that,caused,this,searcher,to,be,acquired;public,string,source,return,source
Engine -> Searcher -> public String source();1550220204;The source that caused this searcher to be acquired.;public String source() {_            return source__        };the,source,that,caused,this,searcher,to,be,acquired;public,string,source,return,source
Engine -> Searcher -> public String source();1550526771;The source that caused this searcher to be acquired.;public String source() {_            return source__        };the,source,that,caused,this,searcher,to,be,acquired;public,string,source,return,source
Engine -> Searcher -> public String source();1551110274;The source that caused this searcher to be acquired.;public String source() {_            return source__        };the,source,that,caused,this,searcher,to,be,acquired;public,string,source,return,source
Engine -> Searcher -> public String source();1551126708;The source that caused this searcher to be acquired.;public String source() {_            return source__        };the,source,that,caused,this,searcher,to,be,acquired;public,string,source,return,source
Engine -> IndexThrottle -> public void deactivate();1524684173;Deactivate throttling, which switches the lock to be an always-acquirable NoOpLock;public void deactivate() {_            assert lock != NOOP_LOCK : "throttling deactivated but not active"__            lock = NOOP_LOCK___            assert startOfThrottleNS > 0 : "Bad state of startOfThrottleNS"__            long throttleTimeNS = System.nanoTime() - startOfThrottleNS__            if (throttleTimeNS >= 0) {_                _                throttleTimeMillisMetric.inc(TimeValue.nsecToMSec(throttleTimeNS))__            }_        };deactivate,throttling,which,switches,the,lock,to,be,an,always,acquirable,no,op,lock;public,void,deactivate,assert,lock,throttling,deactivated,but,not,active,lock,assert,start,of,throttle,ns,0,bad,state,of,start,of,throttle,ns,long,throttle,time,ns,system,nano,time,start,of,throttle,ns,if,throttle,time,ns,0,throttle,time,millis,metric,inc,time,value,nsec,to,msec,throttle,time,ns
Engine -> IndexThrottle -> public void deactivate();1525162917;Deactivate throttling, which switches the lock to be an always-acquirable NoOpLock;public void deactivate() {_            assert lock != NOOP_LOCK : "throttling deactivated but not active"__            lock = NOOP_LOCK___            assert startOfThrottleNS > 0 : "Bad state of startOfThrottleNS"__            long throttleTimeNS = System.nanoTime() - startOfThrottleNS__            if (throttleTimeNS >= 0) {_                _                throttleTimeMillisMetric.inc(TimeValue.nsecToMSec(throttleTimeNS))__            }_        };deactivate,throttling,which,switches,the,lock,to,be,an,always,acquirable,no,op,lock;public,void,deactivate,assert,lock,throttling,deactivated,but,not,active,lock,assert,start,of,throttle,ns,0,bad,state,of,start,of,throttle,ns,long,throttle,time,ns,system,nano,time,start,of,throttle,ns,if,throttle,time,ns,0,throttle,time,millis,metric,inc,time,value,nsec,to,msec,throttle,time,ns
Engine -> IndexThrottle -> public void deactivate();1525334055;Deactivate throttling, which switches the lock to be an always-acquirable NoOpLock;public void deactivate() {_            assert lock != NOOP_LOCK : "throttling deactivated but not active"__            lock = NOOP_LOCK___            assert startOfThrottleNS > 0 : "Bad state of startOfThrottleNS"__            long throttleTimeNS = System.nanoTime() - startOfThrottleNS__            if (throttleTimeNS >= 0) {_                _                throttleTimeMillisMetric.inc(TimeValue.nsecToMSec(throttleTimeNS))__            }_        };deactivate,throttling,which,switches,the,lock,to,be,an,always,acquirable,no,op,lock;public,void,deactivate,assert,lock,throttling,deactivated,but,not,active,lock,assert,start,of,throttle,ns,0,bad,state,of,start,of,throttle,ns,long,throttle,time,ns,system,nano,time,start,of,throttle,ns,if,throttle,time,ns,0,throttle,time,millis,metric,inc,time,value,nsec,to,msec,throttle,time,ns
Engine -> IndexThrottle -> public void deactivate();1527583663;Deactivate throttling, which switches the lock to be an always-acquirable NoOpLock;public void deactivate() {_            assert lock != NOOP_LOCK : "throttling deactivated but not active"__            lock = NOOP_LOCK___            assert startOfThrottleNS > 0 : "Bad state of startOfThrottleNS"__            long throttleTimeNS = System.nanoTime() - startOfThrottleNS__            if (throttleTimeNS >= 0) {_                _                throttleTimeMillisMetric.inc(TimeValue.nsecToMSec(throttleTimeNS))__            }_        };deactivate,throttling,which,switches,the,lock,to,be,an,always,acquirable,no,op,lock;public,void,deactivate,assert,lock,throttling,deactivated,but,not,active,lock,assert,start,of,throttle,ns,0,bad,state,of,start,of,throttle,ns,long,throttle,time,ns,system,nano,time,start,of,throttle,ns,if,throttle,time,ns,0,throttle,time,millis,metric,inc,time,value,nsec,to,msec,throttle,time,ns
Engine -> IndexThrottle -> public void deactivate();1528706846;Deactivate throttling, which switches the lock to be an always-acquirable NoOpLock;public void deactivate() {_            assert lock != NOOP_LOCK : "throttling deactivated but not active"__            lock = NOOP_LOCK___            assert startOfThrottleNS > 0 : "Bad state of startOfThrottleNS"__            long throttleTimeNS = System.nanoTime() - startOfThrottleNS__            if (throttleTimeNS >= 0) {_                _                throttleTimeMillisMetric.inc(TimeValue.nsecToMSec(throttleTimeNS))__            }_        };deactivate,throttling,which,switches,the,lock,to,be,an,always,acquirable,no,op,lock;public,void,deactivate,assert,lock,throttling,deactivated,but,not,active,lock,assert,start,of,throttle,ns,0,bad,state,of,start,of,throttle,ns,long,throttle,time,ns,system,nano,time,start,of,throttle,ns,if,throttle,time,ns,0,throttle,time,millis,metric,inc,time,value,nsec,to,msec,throttle,time,ns
Engine -> IndexThrottle -> public void deactivate();1528762805;Deactivate throttling, which switches the lock to be an always-acquirable NoOpLock;public void deactivate() {_            assert lock != NOOP_LOCK : "throttling deactivated but not active"__            lock = NOOP_LOCK___            assert startOfThrottleNS > 0 : "Bad state of startOfThrottleNS"__            long throttleTimeNS = System.nanoTime() - startOfThrottleNS__            if (throttleTimeNS >= 0) {_                _                throttleTimeMillisMetric.inc(TimeValue.nsecToMSec(throttleTimeNS))__            }_        };deactivate,throttling,which,switches,the,lock,to,be,an,always,acquirable,no,op,lock;public,void,deactivate,assert,lock,throttling,deactivated,but,not,active,lock,assert,start,of,throttle,ns,0,bad,state,of,start,of,throttle,ns,long,throttle,time,ns,system,nano,time,start,of,throttle,ns,if,throttle,time,ns,0,throttle,time,millis,metric,inc,time,value,nsec,to,msec,throttle,time,ns
Engine -> IndexThrottle -> public void deactivate();1531910483;Deactivate throttling, which switches the lock to be an always-acquirable NoOpLock;public void deactivate() {_            assert lock != NOOP_LOCK : "throttling deactivated but not active"__            lock = NOOP_LOCK___            assert startOfThrottleNS > 0 : "Bad state of startOfThrottleNS"__            long throttleTimeNS = System.nanoTime() - startOfThrottleNS__            if (throttleTimeNS >= 0) {_                _                throttleTimeMillisMetric.inc(TimeValue.nsecToMSec(throttleTimeNS))__            }_        };deactivate,throttling,which,switches,the,lock,to,be,an,always,acquirable,no,op,lock;public,void,deactivate,assert,lock,throttling,deactivated,but,not,active,lock,assert,start,of,throttle,ns,0,bad,state,of,start,of,throttle,ns,long,throttle,time,ns,system,nano,time,start,of,throttle,ns,if,throttle,time,ns,0,throttle,time,millis,metric,inc,time,value,nsec,to,msec,throttle,time,ns
Engine -> IndexThrottle -> public void deactivate();1532685069;Deactivate throttling, which switches the lock to be an always-acquirable NoOpLock;public void deactivate() {_            assert lock != NOOP_LOCK : "throttling deactivated but not active"__            lock = NOOP_LOCK___            assert startOfThrottleNS > 0 : "Bad state of startOfThrottleNS"__            long throttleTimeNS = System.nanoTime() - startOfThrottleNS__            if (throttleTimeNS >= 0) {_                _                throttleTimeMillisMetric.inc(TimeValue.nsecToMSec(throttleTimeNS))__            }_        };deactivate,throttling,which,switches,the,lock,to,be,an,always,acquirable,no,op,lock;public,void,deactivate,assert,lock,throttling,deactivated,but,not,active,lock,assert,start,of,throttle,ns,0,bad,state,of,start,of,throttle,ns,long,throttle,time,ns,system,nano,time,start,of,throttle,ns,if,throttle,time,ns,0,throttle,time,millis,metric,inc,time,value,nsec,to,msec,throttle,time,ns
Engine -> IndexThrottle -> public void deactivate();1533295538;Deactivate throttling, which switches the lock to be an always-acquirable NoOpLock;public void deactivate() {_            assert lock != NOOP_LOCK : "throttling deactivated but not active"__            lock = NOOP_LOCK___            assert startOfThrottleNS > 0 : "Bad state of startOfThrottleNS"__            long throttleTimeNS = System.nanoTime() - startOfThrottleNS__            if (throttleTimeNS >= 0) {_                _                throttleTimeMillisMetric.inc(TimeValue.nsecToMSec(throttleTimeNS))__            }_        };deactivate,throttling,which,switches,the,lock,to,be,an,always,acquirable,no,op,lock;public,void,deactivate,assert,lock,throttling,deactivated,but,not,active,lock,assert,start,of,throttle,ns,0,bad,state,of,start,of,throttle,ns,long,throttle,time,ns,system,nano,time,start,of,throttle,ns,if,throttle,time,ns,0,throttle,time,millis,metric,inc,time,value,nsec,to,msec,throttle,time,ns
Engine -> IndexThrottle -> public void deactivate();1535046779;Deactivate throttling, which switches the lock to be an always-acquirable NoOpLock;public void deactivate() {_            assert lock != NOOP_LOCK : "throttling deactivated but not active"__            lock = NOOP_LOCK___            assert startOfThrottleNS > 0 : "Bad state of startOfThrottleNS"__            long throttleTimeNS = System.nanoTime() - startOfThrottleNS__            if (throttleTimeNS >= 0) {_                _                throttleTimeMillisMetric.inc(TimeValue.nsecToMSec(throttleTimeNS))__            }_        };deactivate,throttling,which,switches,the,lock,to,be,an,always,acquirable,no,op,lock;public,void,deactivate,assert,lock,throttling,deactivated,but,not,active,lock,assert,start,of,throttle,ns,0,bad,state,of,start,of,throttle,ns,long,throttle,time,ns,system,nano,time,start,of,throttle,ns,if,throttle,time,ns,0,throttle,time,millis,metric,inc,time,value,nsec,to,msec,throttle,time,ns
Engine -> IndexThrottle -> public void deactivate();1535723122;Deactivate throttling, which switches the lock to be an always-acquirable NoOpLock;public void deactivate() {_            assert lock != NOOP_LOCK : "throttling deactivated but not active"__            lock = NOOP_LOCK___            assert startOfThrottleNS > 0 : "Bad state of startOfThrottleNS"__            long throttleTimeNS = System.nanoTime() - startOfThrottleNS__            if (throttleTimeNS >= 0) {_                _                throttleTimeMillisMetric.inc(TimeValue.nsecToMSec(throttleTimeNS))__            }_        };deactivate,throttling,which,switches,the,lock,to,be,an,always,acquirable,no,op,lock;public,void,deactivate,assert,lock,throttling,deactivated,but,not,active,lock,assert,start,of,throttle,ns,0,bad,state,of,start,of,throttle,ns,long,throttle,time,ns,system,nano,time,start,of,throttle,ns,if,throttle,time,ns,0,throttle,time,millis,metric,inc,time,value,nsec,to,msec,throttle,time,ns
Engine -> IndexThrottle -> public void deactivate();1535965276;Deactivate throttling, which switches the lock to be an always-acquirable NoOpLock;public void deactivate() {_            assert lock != NOOP_LOCK : "throttling deactivated but not active"__            lock = NOOP_LOCK___            assert startOfThrottleNS > 0 : "Bad state of startOfThrottleNS"__            long throttleTimeNS = System.nanoTime() - startOfThrottleNS__            if (throttleTimeNS >= 0) {_                _                throttleTimeMillisMetric.inc(TimeValue.nsecToMSec(throttleTimeNS))__            }_        };deactivate,throttling,which,switches,the,lock,to,be,an,always,acquirable,no,op,lock;public,void,deactivate,assert,lock,throttling,deactivated,but,not,active,lock,assert,start,of,throttle,ns,0,bad,state,of,start,of,throttle,ns,long,throttle,time,ns,system,nano,time,start,of,throttle,ns,if,throttle,time,ns,0,throttle,time,millis,metric,inc,time,value,nsec,to,msec,throttle,time,ns
Engine -> IndexThrottle -> public void deactivate();1536314350;Deactivate throttling, which switches the lock to be an always-acquirable NoOpLock;public void deactivate() {_            assert lock != NOOP_LOCK : "throttling deactivated but not active"__            lock = NOOP_LOCK___            assert startOfThrottleNS > 0 : "Bad state of startOfThrottleNS"__            long throttleTimeNS = System.nanoTime() - startOfThrottleNS__            if (throttleTimeNS >= 0) {_                _                throttleTimeMillisMetric.inc(TimeValue.nsecToMSec(throttleTimeNS))__            }_        };deactivate,throttling,which,switches,the,lock,to,be,an,always,acquirable,no,op,lock;public,void,deactivate,assert,lock,throttling,deactivated,but,not,active,lock,assert,start,of,throttle,ns,0,bad,state,of,start,of,throttle,ns,long,throttle,time,ns,system,nano,time,start,of,throttle,ns,if,throttle,time,ns,0,throttle,time,millis,metric,inc,time,value,nsec,to,msec,throttle,time,ns
Engine -> IndexThrottle -> public void deactivate();1536828374;Deactivate throttling, which switches the lock to be an always-acquirable NoOpLock;public void deactivate() {_            assert lock != NOOP_LOCK : "throttling deactivated but not active"__            lock = NOOP_LOCK___            assert startOfThrottleNS > 0 : "Bad state of startOfThrottleNS"__            long throttleTimeNS = System.nanoTime() - startOfThrottleNS__            if (throttleTimeNS >= 0) {_                _                throttleTimeMillisMetric.inc(TimeValue.nsecToMSec(throttleTimeNS))__            }_        };deactivate,throttling,which,switches,the,lock,to,be,an,always,acquirable,no,op,lock;public,void,deactivate,assert,lock,throttling,deactivated,but,not,active,lock,assert,start,of,throttle,ns,0,bad,state,of,start,of,throttle,ns,long,throttle,time,ns,system,nano,time,start,of,throttle,ns,if,throttle,time,ns,0,throttle,time,millis,metric,inc,time,value,nsec,to,msec,throttle,time,ns
Engine -> IndexThrottle -> public void deactivate();1537371806;Deactivate throttling, which switches the lock to be an always-acquirable NoOpLock;public void deactivate() {_            assert lock != NOOP_LOCK : "throttling deactivated but not active"__            lock = NOOP_LOCK___            assert startOfThrottleNS > 0 : "Bad state of startOfThrottleNS"__            long throttleTimeNS = System.nanoTime() - startOfThrottleNS__            if (throttleTimeNS >= 0) {_                _                throttleTimeMillisMetric.inc(TimeValue.nsecToMSec(throttleTimeNS))__            }_        };deactivate,throttling,which,switches,the,lock,to,be,an,always,acquirable,no,op,lock;public,void,deactivate,assert,lock,throttling,deactivated,but,not,active,lock,assert,start,of,throttle,ns,0,bad,state,of,start,of,throttle,ns,long,throttle,time,ns,system,nano,time,start,of,throttle,ns,if,throttle,time,ns,0,throttle,time,millis,metric,inc,time,value,nsec,to,msec,throttle,time,ns
Engine -> IndexThrottle -> public void deactivate();1537806831;Deactivate throttling, which switches the lock to be an always-acquirable NoOpLock;public void deactivate() {_            assert lock != NOOP_LOCK : "throttling deactivated but not active"__            lock = NOOP_LOCK___            assert startOfThrottleNS > 0 : "Bad state of startOfThrottleNS"__            long throttleTimeNS = System.nanoTime() - startOfThrottleNS__            if (throttleTimeNS >= 0) {_                _                throttleTimeMillisMetric.inc(TimeValue.nsecToMSec(throttleTimeNS))__            }_        };deactivate,throttling,which,switches,the,lock,to,be,an,always,acquirable,no,op,lock;public,void,deactivate,assert,lock,throttling,deactivated,but,not,active,lock,assert,start,of,throttle,ns,0,bad,state,of,start,of,throttle,ns,long,throttle,time,ns,system,nano,time,start,of,throttle,ns,if,throttle,time,ns,0,throttle,time,millis,metric,inc,time,value,nsec,to,msec,throttle,time,ns
Engine -> IndexThrottle -> public void deactivate();1538067637;Deactivate throttling, which switches the lock to be an always-acquirable NoOpLock;public void deactivate() {_            assert lock != NOOP_LOCK : "throttling deactivated but not active"__            lock = NOOP_LOCK___            assert startOfThrottleNS > 0 : "Bad state of startOfThrottleNS"__            long throttleTimeNS = System.nanoTime() - startOfThrottleNS__            if (throttleTimeNS >= 0) {_                _                throttleTimeMillisMetric.inc(TimeValue.nsecToMSec(throttleTimeNS))__            }_        };deactivate,throttling,which,switches,the,lock,to,be,an,always,acquirable,no,op,lock;public,void,deactivate,assert,lock,throttling,deactivated,but,not,active,lock,assert,start,of,throttle,ns,0,bad,state,of,start,of,throttle,ns,long,throttle,time,ns,system,nano,time,start,of,throttle,ns,if,throttle,time,ns,0,throttle,time,millis,metric,inc,time,value,nsec,to,msec,throttle,time,ns
Engine -> IndexThrottle -> public void deactivate();1538424609;Deactivate throttling, which switches the lock to be an always-acquirable NoOpLock;public void deactivate() {_            assert lock != NOOP_LOCK : "throttling deactivated but not active"__            lock = NOOP_LOCK___            assert startOfThrottleNS > 0 : "Bad state of startOfThrottleNS"__            long throttleTimeNS = System.nanoTime() - startOfThrottleNS__            if (throttleTimeNS >= 0) {_                _                throttleTimeMillisMetric.inc(TimeValue.nsecToMSec(throttleTimeNS))__            }_        };deactivate,throttling,which,switches,the,lock,to,be,an,always,acquirable,no,op,lock;public,void,deactivate,assert,lock,throttling,deactivated,but,not,active,lock,assert,start,of,throttle,ns,0,bad,state,of,start,of,throttle,ns,long,throttle,time,ns,system,nano,time,start,of,throttle,ns,if,throttle,time,ns,0,throttle,time,millis,metric,inc,time,value,nsec,to,msec,throttle,time,ns
Engine -> IndexThrottle -> public void deactivate();1539723533;Deactivate throttling, which switches the lock to be an always-acquirable NoOpLock;public void deactivate() {_            assert lock != NOOP_LOCK : "throttling deactivated but not active"__            lock = NOOP_LOCK___            assert startOfThrottleNS > 0 : "Bad state of startOfThrottleNS"__            long throttleTimeNS = System.nanoTime() - startOfThrottleNS__            if (throttleTimeNS >= 0) {_                _                throttleTimeMillisMetric.inc(TimeValue.nsecToMSec(throttleTimeNS))__            }_        };deactivate,throttling,which,switches,the,lock,to,be,an,always,acquirable,no,op,lock;public,void,deactivate,assert,lock,throttling,deactivated,but,not,active,lock,assert,start,of,throttle,ns,0,bad,state,of,start,of,throttle,ns,long,throttle,time,ns,system,nano,time,start,of,throttle,ns,if,throttle,time,ns,0,throttle,time,millis,metric,inc,time,value,nsec,to,msec,throttle,time,ns
Engine -> IndexThrottle -> public void deactivate();1541618615;Deactivate throttling, which switches the lock to be an always-acquirable NoOpLock;public void deactivate() {_            assert lock != NOOP_LOCK : "throttling deactivated but not active"__            lock = NOOP_LOCK___            assert startOfThrottleNS > 0 : "Bad state of startOfThrottleNS"__            long throttleTimeNS = System.nanoTime() - startOfThrottleNS__            if (throttleTimeNS >= 0) {_                _                throttleTimeMillisMetric.inc(TimeValue.nsecToMSec(throttleTimeNS))__            }_        };deactivate,throttling,which,switches,the,lock,to,be,an,always,acquirable,no,op,lock;public,void,deactivate,assert,lock,throttling,deactivated,but,not,active,lock,assert,start,of,throttle,ns,0,bad,state,of,start,of,throttle,ns,long,throttle,time,ns,system,nano,time,start,of,throttle,ns,if,throttle,time,ns,0,throttle,time,millis,metric,inc,time,value,nsec,to,msec,throttle,time,ns
Engine -> IndexThrottle -> public void deactivate();1542697754;Deactivate throttling, which switches the lock to be an always-acquirable NoOpLock;public void deactivate() {_            assert lock != NOOP_LOCK : "throttling deactivated but not active"__            lock = NOOP_LOCK___            assert startOfThrottleNS > 0 : "Bad state of startOfThrottleNS"__            long throttleTimeNS = System.nanoTime() - startOfThrottleNS__            if (throttleTimeNS >= 0) {_                _                _                throttleTimeMillisMetric.inc(TimeValue.nsecToMSec(throttleTimeNS))__            }_        };deactivate,throttling,which,switches,the,lock,to,be,an,always,acquirable,no,op,lock;public,void,deactivate,assert,lock,throttling,deactivated,but,not,active,lock,assert,start,of,throttle,ns,0,bad,state,of,start,of,throttle,ns,long,throttle,time,ns,system,nano,time,start,of,throttle,ns,if,throttle,time,ns,0,throttle,time,millis,metric,inc,time,value,nsec,to,msec,throttle,time,ns
Engine -> IndexThrottle -> public void deactivate();1543047942;Deactivate throttling, which switches the lock to be an always-acquirable NoOpLock;public void deactivate() {_            assert lock != NOOP_LOCK : "throttling deactivated but not active"__            lock = NOOP_LOCK___            assert startOfThrottleNS > 0 : "Bad state of startOfThrottleNS"__            long throttleTimeNS = System.nanoTime() - startOfThrottleNS__            if (throttleTimeNS >= 0) {_                _                _                throttleTimeMillisMetric.inc(TimeValue.nsecToMSec(throttleTimeNS))__            }_        };deactivate,throttling,which,switches,the,lock,to,be,an,always,acquirable,no,op,lock;public,void,deactivate,assert,lock,throttling,deactivated,but,not,active,lock,assert,start,of,throttle,ns,0,bad,state,of,start,of,throttle,ns,long,throttle,time,ns,system,nano,time,start,of,throttle,ns,if,throttle,time,ns,0,throttle,time,millis,metric,inc,time,value,nsec,to,msec,throttle,time,ns
Engine -> IndexThrottle -> public void deactivate();1544545090;Deactivate throttling, which switches the lock to be an always-acquirable NoOpLock;public void deactivate() {_            assert lock != NOOP_LOCK : "throttling deactivated but not active"__            lock = NOOP_LOCK___            assert startOfThrottleNS > 0 : "Bad state of startOfThrottleNS"__            long throttleTimeNS = System.nanoTime() - startOfThrottleNS__            if (throttleTimeNS >= 0) {_                _                _                throttleTimeMillisMetric.inc(TimeValue.nsecToMSec(throttleTimeNS))__            }_        };deactivate,throttling,which,switches,the,lock,to,be,an,always,acquirable,no,op,lock;public,void,deactivate,assert,lock,throttling,deactivated,but,not,active,lock,assert,start,of,throttle,ns,0,bad,state,of,start,of,throttle,ns,long,throttle,time,ns,system,nano,time,start,of,throttle,ns,if,throttle,time,ns,0,throttle,time,millis,metric,inc,time,value,nsec,to,msec,throttle,time,ns
Engine -> IndexThrottle -> public void deactivate();1544684920;Deactivate throttling, which switches the lock to be an always-acquirable NoOpLock;public void deactivate() {_            assert lock != NOOP_LOCK : "throttling deactivated but not active"__            lock = NOOP_LOCK___            assert startOfThrottleNS > 0 : "Bad state of startOfThrottleNS"__            long throttleTimeNS = System.nanoTime() - startOfThrottleNS__            if (throttleTimeNS >= 0) {_                _                _                throttleTimeMillisMetric.inc(TimeValue.nsecToMSec(throttleTimeNS))__            }_        };deactivate,throttling,which,switches,the,lock,to,be,an,always,acquirable,no,op,lock;public,void,deactivate,assert,lock,throttling,deactivated,but,not,active,lock,assert,start,of,throttle,ns,0,bad,state,of,start,of,throttle,ns,long,throttle,time,ns,system,nano,time,start,of,throttle,ns,if,throttle,time,ns,0,throttle,time,millis,metric,inc,time,value,nsec,to,msec,throttle,time,ns
Engine -> IndexThrottle -> public void deactivate();1545140118;Deactivate throttling, which switches the lock to be an always-acquirable NoOpLock;public void deactivate() {_            assert lock != NOOP_LOCK : "throttling deactivated but not active"__            lock = NOOP_LOCK___            assert startOfThrottleNS > 0 : "Bad state of startOfThrottleNS"__            long throttleTimeNS = System.nanoTime() - startOfThrottleNS__            if (throttleTimeNS >= 0) {_                _                _                throttleTimeMillisMetric.inc(TimeValue.nsecToMSec(throttleTimeNS))__            }_        };deactivate,throttling,which,switches,the,lock,to,be,an,always,acquirable,no,op,lock;public,void,deactivate,assert,lock,throttling,deactivated,but,not,active,lock,assert,start,of,throttle,ns,0,bad,state,of,start,of,throttle,ns,long,throttle,time,ns,system,nano,time,start,of,throttle,ns,if,throttle,time,ns,0,throttle,time,millis,metric,inc,time,value,nsec,to,msec,throttle,time,ns
Engine -> IndexThrottle -> public void deactivate();1545221705;Deactivate throttling, which switches the lock to be an always-acquirable NoOpLock;public void deactivate() {_            assert lock != NOOP_LOCK : "throttling deactivated but not active"__            lock = NOOP_LOCK___            assert startOfThrottleNS > 0 : "Bad state of startOfThrottleNS"__            long throttleTimeNS = System.nanoTime() - startOfThrottleNS__            if (throttleTimeNS >= 0) {_                _                _                throttleTimeMillisMetric.inc(TimeValue.nsecToMSec(throttleTimeNS))__            }_        };deactivate,throttling,which,switches,the,lock,to,be,an,always,acquirable,no,op,lock;public,void,deactivate,assert,lock,throttling,deactivated,but,not,active,lock,assert,start,of,throttle,ns,0,bad,state,of,start,of,throttle,ns,long,throttle,time,ns,system,nano,time,start,of,throttle,ns,if,throttle,time,ns,0,throttle,time,millis,metric,inc,time,value,nsec,to,msec,throttle,time,ns
Engine -> IndexThrottle -> public void deactivate();1547332999;Deactivate throttling, which switches the lock to be an always-acquirable NoOpLock;public void deactivate() {_            assert lock != NOOP_LOCK : "throttling deactivated but not active"__            lock = NOOP_LOCK___            assert startOfThrottleNS > 0 : "Bad state of startOfThrottleNS"__            long throttleTimeNS = System.nanoTime() - startOfThrottleNS__            if (throttleTimeNS >= 0) {_                _                _                throttleTimeMillisMetric.inc(TimeValue.nsecToMSec(throttleTimeNS))__            }_        };deactivate,throttling,which,switches,the,lock,to,be,an,always,acquirable,no,op,lock;public,void,deactivate,assert,lock,throttling,deactivated,but,not,active,lock,assert,start,of,throttle,ns,0,bad,state,of,start,of,throttle,ns,long,throttle,time,ns,system,nano,time,start,of,throttle,ns,if,throttle,time,ns,0,throttle,time,millis,metric,inc,time,value,nsec,to,msec,throttle,time,ns
Engine -> IndexThrottle -> public void deactivate();1548771485;Deactivate throttling, which switches the lock to be an always-acquirable NoOpLock;public void deactivate() {_            assert lock != NOOP_LOCK : "throttling deactivated but not active"__            lock = NOOP_LOCK___            assert startOfThrottleNS > 0 : "Bad state of startOfThrottleNS"__            long throttleTimeNS = System.nanoTime() - startOfThrottleNS__            if (throttleTimeNS >= 0) {_                _                _                throttleTimeMillisMetric.inc(TimeValue.nsecToMSec(throttleTimeNS))__            }_        };deactivate,throttling,which,switches,the,lock,to,be,an,always,acquirable,no,op,lock;public,void,deactivate,assert,lock,throttling,deactivated,but,not,active,lock,assert,start,of,throttle,ns,0,bad,state,of,start,of,throttle,ns,long,throttle,time,ns,system,nano,time,start,of,throttle,ns,if,throttle,time,ns,0,throttle,time,millis,metric,inc,time,value,nsec,to,msec,throttle,time,ns
Engine -> IndexThrottle -> public void deactivate();1549891630;Deactivate throttling, which switches the lock to be an always-acquirable NoOpLock;public void deactivate() {_            assert lock != NOOP_LOCK : "throttling deactivated but not active"__            lock = NOOP_LOCK___            assert startOfThrottleNS > 0 : "Bad state of startOfThrottleNS"__            long throttleTimeNS = System.nanoTime() - startOfThrottleNS__            if (throttleTimeNS >= 0) {_                _                _                throttleTimeMillisMetric.inc(TimeValue.nsecToMSec(throttleTimeNS))__            }_        };deactivate,throttling,which,switches,the,lock,to,be,an,always,acquirable,no,op,lock;public,void,deactivate,assert,lock,throttling,deactivated,but,not,active,lock,assert,start,of,throttle,ns,0,bad,state,of,start,of,throttle,ns,long,throttle,time,ns,system,nano,time,start,of,throttle,ns,if,throttle,time,ns,0,throttle,time,millis,metric,inc,time,value,nsec,to,msec,throttle,time,ns
Engine -> IndexThrottle -> public void deactivate();1549975032;Deactivate throttling, which switches the lock to be an always-acquirable NoOpLock;public void deactivate() {_            assert lock != NOOP_LOCK : "throttling deactivated but not active"__            lock = NOOP_LOCK___            assert startOfThrottleNS > 0 : "Bad state of startOfThrottleNS"__            long throttleTimeNS = System.nanoTime() - startOfThrottleNS__            if (throttleTimeNS >= 0) {_                _                _                throttleTimeMillisMetric.inc(TimeValue.nsecToMSec(throttleTimeNS))__            }_        };deactivate,throttling,which,switches,the,lock,to,be,an,always,acquirable,no,op,lock;public,void,deactivate,assert,lock,throttling,deactivated,but,not,active,lock,assert,start,of,throttle,ns,0,bad,state,of,start,of,throttle,ns,long,throttle,time,ns,system,nano,time,start,of,throttle,ns,if,throttle,time,ns,0,throttle,time,millis,metric,inc,time,value,nsec,to,msec,throttle,time,ns
Engine -> IndexThrottle -> public void deactivate();1550220204;Deactivate throttling, which switches the lock to be an always-acquirable NoOpLock;public void deactivate() {_            assert lock != NOOP_LOCK : "throttling deactivated but not active"__            lock = NOOP_LOCK___            assert startOfThrottleNS > 0 : "Bad state of startOfThrottleNS"__            long throttleTimeNS = System.nanoTime() - startOfThrottleNS__            if (throttleTimeNS >= 0) {_                _                _                throttleTimeMillisMetric.inc(TimeValue.nsecToMSec(throttleTimeNS))__            }_        };deactivate,throttling,which,switches,the,lock,to,be,an,always,acquirable,no,op,lock;public,void,deactivate,assert,lock,throttling,deactivated,but,not,active,lock,assert,start,of,throttle,ns,0,bad,state,of,start,of,throttle,ns,long,throttle,time,ns,system,nano,time,start,of,throttle,ns,if,throttle,time,ns,0,throttle,time,millis,metric,inc,time,value,nsec,to,msec,throttle,time,ns
Engine -> IndexThrottle -> public void deactivate();1550526771;Deactivate throttling, which switches the lock to be an always-acquirable NoOpLock;public void deactivate() {_            assert lock != NOOP_LOCK : "throttling deactivated but not active"__            lock = NOOP_LOCK___            assert startOfThrottleNS > 0 : "Bad state of startOfThrottleNS"__            long throttleTimeNS = System.nanoTime() - startOfThrottleNS__            if (throttleTimeNS >= 0) {_                _                _                throttleTimeMillisMetric.inc(TimeValue.nsecToMSec(throttleTimeNS))__            }_        };deactivate,throttling,which,switches,the,lock,to,be,an,always,acquirable,no,op,lock;public,void,deactivate,assert,lock,throttling,deactivated,but,not,active,lock,assert,start,of,throttle,ns,0,bad,state,of,start,of,throttle,ns,long,throttle,time,ns,system,nano,time,start,of,throttle,ns,if,throttle,time,ns,0,throttle,time,millis,metric,inc,time,value,nsec,to,msec,throttle,time,ns
Engine -> IndexThrottle -> public void deactivate();1551110274;Deactivate throttling, which switches the lock to be an always-acquirable NoOpLock;public void deactivate() {_            assert lock != NOOP_LOCK : "throttling deactivated but not active"__            lock = NOOP_LOCK___            assert startOfThrottleNS > 0 : "Bad state of startOfThrottleNS"__            long throttleTimeNS = System.nanoTime() - startOfThrottleNS__            if (throttleTimeNS >= 0) {_                _                _                throttleTimeMillisMetric.inc(TimeValue.nsecToMSec(throttleTimeNS))__            }_        };deactivate,throttling,which,switches,the,lock,to,be,an,always,acquirable,no,op,lock;public,void,deactivate,assert,lock,throttling,deactivated,but,not,active,lock,assert,start,of,throttle,ns,0,bad,state,of,start,of,throttle,ns,long,throttle,time,ns,system,nano,time,start,of,throttle,ns,if,throttle,time,ns,0,throttle,time,millis,metric,inc,time,value,nsec,to,msec,throttle,time,ns
Engine -> IndexThrottle -> public void deactivate();1551126708;Deactivate throttling, which switches the lock to be an always-acquirable NoOpLock;public void deactivate() {_            assert lock != NOOP_LOCK : "throttling deactivated but not active"__            lock = NOOP_LOCK___            assert startOfThrottleNS > 0 : "Bad state of startOfThrottleNS"__            long throttleTimeNS = System.nanoTime() - startOfThrottleNS__            if (throttleTimeNS >= 0) {_                _                _                throttleTimeMillisMetric.inc(TimeValue.nsecToMSec(throttleTimeNS))__            }_        };deactivate,throttling,which,switches,the,lock,to,be,an,always,acquirable,no,op,lock;public,void,deactivate,assert,lock,throttling,deactivated,but,not,active,lock,assert,start,of,throttle,ns,0,bad,state,of,start,of,throttle,ns,long,throttle,time,ns,system,nano,time,start,of,throttle,ns,if,throttle,time,ns,0,throttle,time,millis,metric,inc,time,value,nsec,to,msec,throttle,time,ns
Engine -> Result -> public long getSeqNo();1524684173;Get the sequence number on the primary.__@return the sequence number;public long getSeqNo() {_            return seqNo__        };get,the,sequence,number,on,the,primary,return,the,sequence,number;public,long,get,seq,no,return,seq,no
Engine -> Result -> public long getSeqNo();1525162917;Get the sequence number on the primary.__@return the sequence number;public long getSeqNo() {_            return seqNo__        };get,the,sequence,number,on,the,primary,return,the,sequence,number;public,long,get,seq,no,return,seq,no
Engine -> Result -> public long getSeqNo();1525334055;Get the sequence number on the primary.__@return the sequence number;public long getSeqNo() {_            return seqNo__        };get,the,sequence,number,on,the,primary,return,the,sequence,number;public,long,get,seq,no,return,seq,no
Engine -> Result -> public long getSeqNo();1527583663;Get the sequence number on the primary.__@return the sequence number;public long getSeqNo() {_            return seqNo__        };get,the,sequence,number,on,the,primary,return,the,sequence,number;public,long,get,seq,no,return,seq,no
Engine -> Result -> public long getSeqNo();1528706846;Get the sequence number on the primary.__@return the sequence number;public long getSeqNo() {_            return seqNo__        };get,the,sequence,number,on,the,primary,return,the,sequence,number;public,long,get,seq,no,return,seq,no
Engine -> Result -> public long getSeqNo();1528762805;Get the sequence number on the primary.__@return the sequence number;public long getSeqNo() {_            return seqNo__        };get,the,sequence,number,on,the,primary,return,the,sequence,number;public,long,get,seq,no,return,seq,no
Engine -> Result -> public long getSeqNo();1531910483;Get the sequence number on the primary.__@return the sequence number;public long getSeqNo() {_            return seqNo__        };get,the,sequence,number,on,the,primary,return,the,sequence,number;public,long,get,seq,no,return,seq,no
Engine -> Result -> public long getSeqNo();1532685069;Get the sequence number on the primary.__@return the sequence number;public long getSeqNo() {_            return seqNo__        };get,the,sequence,number,on,the,primary,return,the,sequence,number;public,long,get,seq,no,return,seq,no
Engine -> Result -> public long getSeqNo();1533295538;Get the sequence number on the primary.__@return the sequence number;public long getSeqNo() {_            return seqNo__        };get,the,sequence,number,on,the,primary,return,the,sequence,number;public,long,get,seq,no,return,seq,no
Engine -> Result -> public long getSeqNo();1535046779;Get the sequence number on the primary.__@return the sequence number;public long getSeqNo() {_            return seqNo__        };get,the,sequence,number,on,the,primary,return,the,sequence,number;public,long,get,seq,no,return,seq,no
Engine -> Result -> public long getSeqNo();1535723122;Get the sequence number on the primary.__@return the sequence number;public long getSeqNo() {_            return seqNo__        };get,the,sequence,number,on,the,primary,return,the,sequence,number;public,long,get,seq,no,return,seq,no
Engine -> Result -> public long getSeqNo();1535965276;Get the sequence number on the primary.__@return the sequence number;public long getSeqNo() {_            return seqNo__        };get,the,sequence,number,on,the,primary,return,the,sequence,number;public,long,get,seq,no,return,seq,no
Engine -> Result -> public long getSeqNo();1536314350;Get the sequence number on the primary.__@return the sequence number;public long getSeqNo() {_            return seqNo__        };get,the,sequence,number,on,the,primary,return,the,sequence,number;public,long,get,seq,no,return,seq,no
Engine -> Result -> public long getSeqNo();1536828374;Get the sequence number on the primary.__@return the sequence number;public long getSeqNo() {_            return seqNo__        };get,the,sequence,number,on,the,primary,return,the,sequence,number;public,long,get,seq,no,return,seq,no
Engine -> Result -> public long getSeqNo();1537371806;Get the sequence number on the primary.__@return the sequence number;public long getSeqNo() {_            return seqNo__        };get,the,sequence,number,on,the,primary,return,the,sequence,number;public,long,get,seq,no,return,seq,no
Engine -> Result -> public long getSeqNo();1537806831;Get the sequence number on the primary.__@return the sequence number;public long getSeqNo() {_            return seqNo__        };get,the,sequence,number,on,the,primary,return,the,sequence,number;public,long,get,seq,no,return,seq,no
Engine -> Result -> public long getSeqNo();1538067637;Get the sequence number on the primary.__@return the sequence number;public long getSeqNo() {_            return seqNo__        };get,the,sequence,number,on,the,primary,return,the,sequence,number;public,long,get,seq,no,return,seq,no
Engine -> Result -> public long getSeqNo();1538424609;Get the sequence number on the primary.__@return the sequence number;public long getSeqNo() {_            return seqNo__        };get,the,sequence,number,on,the,primary,return,the,sequence,number;public,long,get,seq,no,return,seq,no
Engine -> Result -> public long getSeqNo();1539723533;Get the sequence number on the primary.__@return the sequence number;public long getSeqNo() {_            return seqNo__        };get,the,sequence,number,on,the,primary,return,the,sequence,number;public,long,get,seq,no,return,seq,no
Engine -> Result -> public long getSeqNo();1541618615;Get the sequence number on the primary.__@return the sequence number;public long getSeqNo() {_            return seqNo__        };get,the,sequence,number,on,the,primary,return,the,sequence,number;public,long,get,seq,no,return,seq,no
Engine -> Result -> public long getSeqNo();1542697754;Get the sequence number on the primary.__@return the sequence number;public long getSeqNo() {_            return seqNo__        };get,the,sequence,number,on,the,primary,return,the,sequence,number;public,long,get,seq,no,return,seq,no
Engine -> Result -> public long getSeqNo();1543047942;Get the sequence number on the primary.__@return the sequence number;public long getSeqNo() {_            return seqNo__        };get,the,sequence,number,on,the,primary,return,the,sequence,number;public,long,get,seq,no,return,seq,no
Engine -> Result -> public long getSeqNo();1544545090;Get the sequence number on the primary.__@return the sequence number;public long getSeqNo() {_            return seqNo__        };get,the,sequence,number,on,the,primary,return,the,sequence,number;public,long,get,seq,no,return,seq,no
Engine -> Result -> public long getSeqNo();1544684920;Get the sequence number on the primary.__@return the sequence number;public long getSeqNo() {_            return seqNo__        };get,the,sequence,number,on,the,primary,return,the,sequence,number;public,long,get,seq,no,return,seq,no
Engine -> Result -> public long getSeqNo();1545140118;Get the sequence number on the primary.__@return the sequence number;public long getSeqNo() {_            return seqNo__        };get,the,sequence,number,on,the,primary,return,the,sequence,number;public,long,get,seq,no,return,seq,no
Engine -> Result -> public long getSeqNo();1545221705;Get the sequence number on the primary.__@return the sequence number;public long getSeqNo() {_            return seqNo__        };get,the,sequence,number,on,the,primary,return,the,sequence,number;public,long,get,seq,no,return,seq,no
Engine -> Result -> public long getSeqNo();1547332999;Get the sequence number on the primary.__@return the sequence number;public long getSeqNo() {_            return seqNo__        };get,the,sequence,number,on,the,primary,return,the,sequence,number;public,long,get,seq,no,return,seq,no
Engine -> Result -> public long getSeqNo();1548771485;Get the sequence number on the primary.__@return the sequence number;public long getSeqNo() {_            return seqNo__        };get,the,sequence,number,on,the,primary,return,the,sequence,number;public,long,get,seq,no,return,seq,no
Engine -> Result -> public long getSeqNo();1549891630;Get the sequence number on the primary.__@return the sequence number;public long getSeqNo() {_            return seqNo__        };get,the,sequence,number,on,the,primary,return,the,sequence,number;public,long,get,seq,no,return,seq,no
Engine -> Result -> public long getSeqNo();1549975032;Get the sequence number on the primary.__@return the sequence number;public long getSeqNo() {_            return seqNo__        };get,the,sequence,number,on,the,primary,return,the,sequence,number;public,long,get,seq,no,return,seq,no
Engine -> Result -> public long getSeqNo();1550220204;Get the sequence number on the primary.__@return the sequence number;public long getSeqNo() {_            return seqNo__        };get,the,sequence,number,on,the,primary,return,the,sequence,number;public,long,get,seq,no,return,seq,no
Engine -> Result -> public long getSeqNo();1550526771;Get the sequence number on the primary.__@return the sequence number;public long getSeqNo() {_            return seqNo__        };get,the,sequence,number,on,the,primary,return,the,sequence,number;public,long,get,seq,no,return,seq,no
Engine -> Result -> public long getSeqNo();1551110274;Get the sequence number on the primary.__@return the sequence number;public long getSeqNo() {_            return seqNo__        };get,the,sequence,number,on,the,primary,return,the,sequence,number;public,long,get,seq,no,return,seq,no
Engine -> Result -> public long getSeqNo();1551126708;Get the sequence number on the primary.__@return the sequence number;public long getSeqNo() {_            return seqNo__        };get,the,sequence,number,on,the,primary,return,the,sequence,number;public,long,get,seq,no,return,seq,no
Engine -> public abstract void updateMaxUnsafeAutoIdTimestamp(long newTimestamp)_;1537806831;Forces this engine to advance its max_unsafe_auto_id_timestamp marker to at least the given timestamp._The engine will disable optimization for all append-only whose timestamp at most {@code newTimestamp}.;public abstract void updateMaxUnsafeAutoIdTimestamp(long newTimestamp)_;forces,this,engine,to,advance,its,marker,to,at,least,the,given,timestamp,the,engine,will,disable,optimization,for,all,append,only,whose,timestamp,at,most,code,new,timestamp;public,abstract,void,update,max,unsafe,auto,id,timestamp,long,new,timestamp
Engine -> public abstract void updateMaxUnsafeAutoIdTimestamp(long newTimestamp)_;1538067637;Forces this engine to advance its max_unsafe_auto_id_timestamp marker to at least the given timestamp._The engine will disable optimization for all append-only whose timestamp at most {@code newTimestamp}.;public abstract void updateMaxUnsafeAutoIdTimestamp(long newTimestamp)_;forces,this,engine,to,advance,its,marker,to,at,least,the,given,timestamp,the,engine,will,disable,optimization,for,all,append,only,whose,timestamp,at,most,code,new,timestamp;public,abstract,void,update,max,unsafe,auto,id,timestamp,long,new,timestamp
Engine -> public abstract void updateMaxUnsafeAutoIdTimestamp(long newTimestamp)_;1538424609;Forces this engine to advance its max_unsafe_auto_id_timestamp marker to at least the given timestamp._The engine will disable optimization for all append-only whose timestamp at most {@code newTimestamp}.;public abstract void updateMaxUnsafeAutoIdTimestamp(long newTimestamp)_;forces,this,engine,to,advance,its,marker,to,at,least,the,given,timestamp,the,engine,will,disable,optimization,for,all,append,only,whose,timestamp,at,most,code,new,timestamp;public,abstract,void,update,max,unsafe,auto,id,timestamp,long,new,timestamp
Engine -> public abstract void updateMaxUnsafeAutoIdTimestamp(long newTimestamp)_;1539723533;Forces this engine to advance its max_unsafe_auto_id_timestamp marker to at least the given timestamp._The engine will disable optimization for all append-only whose timestamp at most {@code newTimestamp}.;public abstract void updateMaxUnsafeAutoIdTimestamp(long newTimestamp)_;forces,this,engine,to,advance,its,marker,to,at,least,the,given,timestamp,the,engine,will,disable,optimization,for,all,append,only,whose,timestamp,at,most,code,new,timestamp;public,abstract,void,update,max,unsafe,auto,id,timestamp,long,new,timestamp
Engine -> public abstract void updateMaxUnsafeAutoIdTimestamp(long newTimestamp)_;1541618615;Forces this engine to advance its max_unsafe_auto_id_timestamp marker to at least the given timestamp._The engine will disable optimization for all append-only whose timestamp at most {@code newTimestamp}.;public abstract void updateMaxUnsafeAutoIdTimestamp(long newTimestamp)_;forces,this,engine,to,advance,its,marker,to,at,least,the,given,timestamp,the,engine,will,disable,optimization,for,all,append,only,whose,timestamp,at,most,code,new,timestamp;public,abstract,void,update,max,unsafe,auto,id,timestamp,long,new,timestamp
Engine -> public abstract void updateMaxUnsafeAutoIdTimestamp(long newTimestamp)_;1542697754;Forces this engine to advance its max_unsafe_auto_id_timestamp marker to at least the given timestamp._The engine will disable optimization for all append-only whose timestamp at most {@code newTimestamp}.;public abstract void updateMaxUnsafeAutoIdTimestamp(long newTimestamp)_;forces,this,engine,to,advance,its,marker,to,at,least,the,given,timestamp,the,engine,will,disable,optimization,for,all,append,only,whose,timestamp,at,most,code,new,timestamp;public,abstract,void,update,max,unsafe,auto,id,timestamp,long,new,timestamp
Engine -> public abstract void updateMaxUnsafeAutoIdTimestamp(long newTimestamp)_;1543047942;Forces this engine to advance its max_unsafe_auto_id_timestamp marker to at least the given timestamp._The engine will disable optimization for all append-only whose timestamp at most {@code newTimestamp}.;public abstract void updateMaxUnsafeAutoIdTimestamp(long newTimestamp)_;forces,this,engine,to,advance,its,marker,to,at,least,the,given,timestamp,the,engine,will,disable,optimization,for,all,append,only,whose,timestamp,at,most,code,new,timestamp;public,abstract,void,update,max,unsafe,auto,id,timestamp,long,new,timestamp
Engine -> public abstract void updateMaxUnsafeAutoIdTimestamp(long newTimestamp)_;1544545090;Forces this engine to advance its max_unsafe_auto_id_timestamp marker to at least the given timestamp._The engine will disable optimization for all append-only whose timestamp at most {@code newTimestamp}.;public abstract void updateMaxUnsafeAutoIdTimestamp(long newTimestamp)_;forces,this,engine,to,advance,its,marker,to,at,least,the,given,timestamp,the,engine,will,disable,optimization,for,all,append,only,whose,timestamp,at,most,code,new,timestamp;public,abstract,void,update,max,unsafe,auto,id,timestamp,long,new,timestamp
Engine -> public abstract void updateMaxUnsafeAutoIdTimestamp(long newTimestamp)_;1544684920;Forces this engine to advance its max_unsafe_auto_id_timestamp marker to at least the given timestamp._The engine will disable optimization for all append-only whose timestamp at most {@code newTimestamp}.;public abstract void updateMaxUnsafeAutoIdTimestamp(long newTimestamp)_;forces,this,engine,to,advance,its,marker,to,at,least,the,given,timestamp,the,engine,will,disable,optimization,for,all,append,only,whose,timestamp,at,most,code,new,timestamp;public,abstract,void,update,max,unsafe,auto,id,timestamp,long,new,timestamp
Engine -> public abstract void updateMaxUnsafeAutoIdTimestamp(long newTimestamp)_;1545140118;Forces this engine to advance its max_unsafe_auto_id_timestamp marker to at least the given timestamp._The engine will disable optimization for all append-only whose timestamp at most {@code newTimestamp}.;public abstract void updateMaxUnsafeAutoIdTimestamp(long newTimestamp)_;forces,this,engine,to,advance,its,marker,to,at,least,the,given,timestamp,the,engine,will,disable,optimization,for,all,append,only,whose,timestamp,at,most,code,new,timestamp;public,abstract,void,update,max,unsafe,auto,id,timestamp,long,new,timestamp
Engine -> public abstract void updateMaxUnsafeAutoIdTimestamp(long newTimestamp)_;1545221705;Forces this engine to advance its max_unsafe_auto_id_timestamp marker to at least the given timestamp._The engine will disable optimization for all append-only whose timestamp at most {@code newTimestamp}.;public abstract void updateMaxUnsafeAutoIdTimestamp(long newTimestamp)_;forces,this,engine,to,advance,its,marker,to,at,least,the,given,timestamp,the,engine,will,disable,optimization,for,all,append,only,whose,timestamp,at,most,code,new,timestamp;public,abstract,void,update,max,unsafe,auto,id,timestamp,long,new,timestamp
Engine -> public abstract void updateMaxUnsafeAutoIdTimestamp(long newTimestamp)_;1547332999;Forces this engine to advance its max_unsafe_auto_id_timestamp marker to at least the given timestamp._The engine will disable optimization for all append-only whose timestamp at most {@code newTimestamp}.;public abstract void updateMaxUnsafeAutoIdTimestamp(long newTimestamp)_;forces,this,engine,to,advance,its,marker,to,at,least,the,given,timestamp,the,engine,will,disable,optimization,for,all,append,only,whose,timestamp,at,most,code,new,timestamp;public,abstract,void,update,max,unsafe,auto,id,timestamp,long,new,timestamp
Engine -> public abstract void updateMaxUnsafeAutoIdTimestamp(long newTimestamp)_;1548771485;Forces this engine to advance its max_unsafe_auto_id_timestamp marker to at least the given timestamp._The engine will disable optimization for all append-only whose timestamp at most {@code newTimestamp}.;public abstract void updateMaxUnsafeAutoIdTimestamp(long newTimestamp)_;forces,this,engine,to,advance,its,marker,to,at,least,the,given,timestamp,the,engine,will,disable,optimization,for,all,append,only,whose,timestamp,at,most,code,new,timestamp;public,abstract,void,update,max,unsafe,auto,id,timestamp,long,new,timestamp
Engine -> public abstract void updateMaxUnsafeAutoIdTimestamp(long newTimestamp)_;1549891630;Forces this engine to advance its max_unsafe_auto_id_timestamp marker to at least the given timestamp._The engine will disable optimization for all append-only whose timestamp at most {@code newTimestamp}.;public abstract void updateMaxUnsafeAutoIdTimestamp(long newTimestamp)_;forces,this,engine,to,advance,its,marker,to,at,least,the,given,timestamp,the,engine,will,disable,optimization,for,all,append,only,whose,timestamp,at,most,code,new,timestamp;public,abstract,void,update,max,unsafe,auto,id,timestamp,long,new,timestamp
Engine -> public abstract void updateMaxUnsafeAutoIdTimestamp(long newTimestamp)_;1549975032;Forces this engine to advance its max_unsafe_auto_id_timestamp marker to at least the given timestamp._The engine will disable optimization for all append-only whose timestamp at most {@code newTimestamp}.;public abstract void updateMaxUnsafeAutoIdTimestamp(long newTimestamp)_;forces,this,engine,to,advance,its,marker,to,at,least,the,given,timestamp,the,engine,will,disable,optimization,for,all,append,only,whose,timestamp,at,most,code,new,timestamp;public,abstract,void,update,max,unsafe,auto,id,timestamp,long,new,timestamp
Engine -> public abstract void updateMaxUnsafeAutoIdTimestamp(long newTimestamp)_;1550220204;Forces this engine to advance its max_unsafe_auto_id_timestamp marker to at least the given timestamp._The engine will disable optimization for all append-only whose timestamp at most {@code newTimestamp}.;public abstract void updateMaxUnsafeAutoIdTimestamp(long newTimestamp)_;forces,this,engine,to,advance,its,marker,to,at,least,the,given,timestamp,the,engine,will,disable,optimization,for,all,append,only,whose,timestamp,at,most,code,new,timestamp;public,abstract,void,update,max,unsafe,auto,id,timestamp,long,new,timestamp
Engine -> public abstract void updateMaxUnsafeAutoIdTimestamp(long newTimestamp)_;1550526771;Forces this engine to advance its max_unsafe_auto_id_timestamp marker to at least the given timestamp._The engine will disable optimization for all append-only whose timestamp at most {@code newTimestamp}.;public abstract void updateMaxUnsafeAutoIdTimestamp(long newTimestamp)_;forces,this,engine,to,advance,its,marker,to,at,least,the,given,timestamp,the,engine,will,disable,optimization,for,all,append,only,whose,timestamp,at,most,code,new,timestamp;public,abstract,void,update,max,unsafe,auto,id,timestamp,long,new,timestamp
Engine -> public abstract void updateMaxUnsafeAutoIdTimestamp(long newTimestamp)_;1551110274;Forces this engine to advance its max_unsafe_auto_id_timestamp marker to at least the given timestamp._The engine will disable optimization for all append-only whose timestamp at most {@code newTimestamp}.;public abstract void updateMaxUnsafeAutoIdTimestamp(long newTimestamp)_;forces,this,engine,to,advance,its,marker,to,at,least,the,given,timestamp,the,engine,will,disable,optimization,for,all,append,only,whose,timestamp,at,most,code,new,timestamp;public,abstract,void,update,max,unsafe,auto,id,timestamp,long,new,timestamp
Engine -> public abstract void updateMaxUnsafeAutoIdTimestamp(long newTimestamp)_;1551126708;Forces this engine to advance its max_unsafe_auto_id_timestamp marker to at least the given timestamp._The engine will disable optimization for all append-only whose timestamp at most {@code newTimestamp}.;public abstract void updateMaxUnsafeAutoIdTimestamp(long newTimestamp)_;forces,this,engine,to,advance,its,marker,to,at,least,the,given,timestamp,the,engine,will,disable,optimization,for,all,append,only,whose,timestamp,at,most,code,new,timestamp;public,abstract,void,update,max,unsafe,auto,id,timestamp,long,new,timestamp
Engine -> public final SegmentsStats segmentsStats(boolean includeSegmentFileSizes);1524684173;Global stats on segments.;public final SegmentsStats segmentsStats(boolean includeSegmentFileSizes) {_        ensureOpen()__        Set<String> segmentName = new HashSet<>()__        SegmentsStats stats = new SegmentsStats()__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.INTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                segmentName.add(segmentReader.getSegmentName())__            }_        }__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.EXTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                if (segmentName.contains(segmentReader.getSegmentName()) == false) {_                    fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                }_            }_        }_        writerSegmentStats(stats)__        return stats__    };global,stats,on,segments;public,final,segments,stats,segments,stats,boolean,include,segment,file,sizes,ensure,open,set,string,segment,name,new,hash,set,segments,stats,stats,new,segments,stats,try,searcher,searcher,acquire,searcher,searcher,scope,internal,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,segment,name,add,segment,reader,get,segment,name,try,searcher,searcher,acquire,searcher,searcher,scope,external,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,if,segment,name,contains,segment,reader,get,segment,name,false,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,writer,segment,stats,stats,return,stats
Engine -> public final SegmentsStats segmentsStats(boolean includeSegmentFileSizes);1525162917;Global stats on segments.;public final SegmentsStats segmentsStats(boolean includeSegmentFileSizes) {_        ensureOpen()__        Set<String> segmentName = new HashSet<>()__        SegmentsStats stats = new SegmentsStats()__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.INTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                segmentName.add(segmentReader.getSegmentName())__            }_        }__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.EXTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                if (segmentName.contains(segmentReader.getSegmentName()) == false) {_                    fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                }_            }_        }_        writerSegmentStats(stats)__        return stats__    };global,stats,on,segments;public,final,segments,stats,segments,stats,boolean,include,segment,file,sizes,ensure,open,set,string,segment,name,new,hash,set,segments,stats,stats,new,segments,stats,try,searcher,searcher,acquire,searcher,searcher,scope,internal,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,segment,name,add,segment,reader,get,segment,name,try,searcher,searcher,acquire,searcher,searcher,scope,external,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,if,segment,name,contains,segment,reader,get,segment,name,false,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,writer,segment,stats,stats,return,stats
Engine -> public final SegmentsStats segmentsStats(boolean includeSegmentFileSizes);1525334055;Global stats on segments.;public final SegmentsStats segmentsStats(boolean includeSegmentFileSizes) {_        ensureOpen()__        Set<String> segmentName = new HashSet<>()__        SegmentsStats stats = new SegmentsStats()__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.INTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                segmentName.add(segmentReader.getSegmentName())__            }_        }__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.EXTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                if (segmentName.contains(segmentReader.getSegmentName()) == false) {_                    fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                }_            }_        }_        writerSegmentStats(stats)__        return stats__    };global,stats,on,segments;public,final,segments,stats,segments,stats,boolean,include,segment,file,sizes,ensure,open,set,string,segment,name,new,hash,set,segments,stats,stats,new,segments,stats,try,searcher,searcher,acquire,searcher,searcher,scope,internal,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,segment,name,add,segment,reader,get,segment,name,try,searcher,searcher,acquire,searcher,searcher,scope,external,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,if,segment,name,contains,segment,reader,get,segment,name,false,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,writer,segment,stats,stats,return,stats
Engine -> public final SegmentsStats segmentsStats(boolean includeSegmentFileSizes);1527583663;Global stats on segments.;public final SegmentsStats segmentsStats(boolean includeSegmentFileSizes) {_        ensureOpen()__        Set<String> segmentName = new HashSet<>()__        SegmentsStats stats = new SegmentsStats()__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.INTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                segmentName.add(segmentReader.getSegmentName())__            }_        }__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.EXTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                if (segmentName.contains(segmentReader.getSegmentName()) == false) {_                    fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                }_            }_        }_        writerSegmentStats(stats)__        return stats__    };global,stats,on,segments;public,final,segments,stats,segments,stats,boolean,include,segment,file,sizes,ensure,open,set,string,segment,name,new,hash,set,segments,stats,stats,new,segments,stats,try,searcher,searcher,acquire,searcher,searcher,scope,internal,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,segment,name,add,segment,reader,get,segment,name,try,searcher,searcher,acquire,searcher,searcher,scope,external,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,if,segment,name,contains,segment,reader,get,segment,name,false,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,writer,segment,stats,stats,return,stats
Engine -> public final SegmentsStats segmentsStats(boolean includeSegmentFileSizes);1528706846;Global stats on segments.;public final SegmentsStats segmentsStats(boolean includeSegmentFileSizes) {_        ensureOpen()__        Set<String> segmentName = new HashSet<>()__        SegmentsStats stats = new SegmentsStats()__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.INTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                segmentName.add(segmentReader.getSegmentName())__            }_        }__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.EXTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                if (segmentName.contains(segmentReader.getSegmentName()) == false) {_                    fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                }_            }_        }_        writerSegmentStats(stats)__        return stats__    };global,stats,on,segments;public,final,segments,stats,segments,stats,boolean,include,segment,file,sizes,ensure,open,set,string,segment,name,new,hash,set,segments,stats,stats,new,segments,stats,try,searcher,searcher,acquire,searcher,searcher,scope,internal,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,segment,name,add,segment,reader,get,segment,name,try,searcher,searcher,acquire,searcher,searcher,scope,external,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,if,segment,name,contains,segment,reader,get,segment,name,false,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,writer,segment,stats,stats,return,stats
Engine -> public final SegmentsStats segmentsStats(boolean includeSegmentFileSizes);1528762805;Global stats on segments.;public final SegmentsStats segmentsStats(boolean includeSegmentFileSizes) {_        ensureOpen()__        Set<String> segmentName = new HashSet<>()__        SegmentsStats stats = new SegmentsStats()__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.INTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                segmentName.add(segmentReader.getSegmentName())__            }_        }__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.EXTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                if (segmentName.contains(segmentReader.getSegmentName()) == false) {_                    fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                }_            }_        }_        writerSegmentStats(stats)__        return stats__    };global,stats,on,segments;public,final,segments,stats,segments,stats,boolean,include,segment,file,sizes,ensure,open,set,string,segment,name,new,hash,set,segments,stats,stats,new,segments,stats,try,searcher,searcher,acquire,searcher,searcher,scope,internal,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,segment,name,add,segment,reader,get,segment,name,try,searcher,searcher,acquire,searcher,searcher,scope,external,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,if,segment,name,contains,segment,reader,get,segment,name,false,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,writer,segment,stats,stats,return,stats
Engine -> public final SegmentsStats segmentsStats(boolean includeSegmentFileSizes);1531910483;Global stats on segments.;public final SegmentsStats segmentsStats(boolean includeSegmentFileSizes) {_        ensureOpen()__        Set<String> segmentName = new HashSet<>()__        SegmentsStats stats = new SegmentsStats()__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.INTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                segmentName.add(segmentReader.getSegmentName())__            }_        }__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.EXTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                if (segmentName.contains(segmentReader.getSegmentName()) == false) {_                    fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                }_            }_        }_        writerSegmentStats(stats)__        return stats__    };global,stats,on,segments;public,final,segments,stats,segments,stats,boolean,include,segment,file,sizes,ensure,open,set,string,segment,name,new,hash,set,segments,stats,stats,new,segments,stats,try,searcher,searcher,acquire,searcher,searcher,scope,internal,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,segment,name,add,segment,reader,get,segment,name,try,searcher,searcher,acquire,searcher,searcher,scope,external,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,if,segment,name,contains,segment,reader,get,segment,name,false,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,writer,segment,stats,stats,return,stats
Engine -> public final SegmentsStats segmentsStats(boolean includeSegmentFileSizes);1532685069;Global stats on segments.;public final SegmentsStats segmentsStats(boolean includeSegmentFileSizes) {_        ensureOpen()__        Set<String> segmentName = new HashSet<>()__        SegmentsStats stats = new SegmentsStats()__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.INTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                segmentName.add(segmentReader.getSegmentName())__            }_        }__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.EXTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                if (segmentName.contains(segmentReader.getSegmentName()) == false) {_                    fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                }_            }_        }_        writerSegmentStats(stats)__        return stats__    };global,stats,on,segments;public,final,segments,stats,segments,stats,boolean,include,segment,file,sizes,ensure,open,set,string,segment,name,new,hash,set,segments,stats,stats,new,segments,stats,try,searcher,searcher,acquire,searcher,searcher,scope,internal,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,segment,name,add,segment,reader,get,segment,name,try,searcher,searcher,acquire,searcher,searcher,scope,external,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,if,segment,name,contains,segment,reader,get,segment,name,false,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,writer,segment,stats,stats,return,stats
Engine -> public final SegmentsStats segmentsStats(boolean includeSegmentFileSizes);1533295538;Global stats on segments.;public final SegmentsStats segmentsStats(boolean includeSegmentFileSizes) {_        ensureOpen()__        Set<String> segmentName = new HashSet<>()__        SegmentsStats stats = new SegmentsStats()__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.INTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                segmentName.add(segmentReader.getSegmentName())__            }_        }__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.EXTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                if (segmentName.contains(segmentReader.getSegmentName()) == false) {_                    fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                }_            }_        }_        writerSegmentStats(stats)__        return stats__    };global,stats,on,segments;public,final,segments,stats,segments,stats,boolean,include,segment,file,sizes,ensure,open,set,string,segment,name,new,hash,set,segments,stats,stats,new,segments,stats,try,searcher,searcher,acquire,searcher,searcher,scope,internal,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,segment,name,add,segment,reader,get,segment,name,try,searcher,searcher,acquire,searcher,searcher,scope,external,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,if,segment,name,contains,segment,reader,get,segment,name,false,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,writer,segment,stats,stats,return,stats
Engine -> public final SegmentsStats segmentsStats(boolean includeSegmentFileSizes);1535046779;Global stats on segments.;public final SegmentsStats segmentsStats(boolean includeSegmentFileSizes) {_        ensureOpen()__        Set<String> segmentName = new HashSet<>()__        SegmentsStats stats = new SegmentsStats()__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.INTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                segmentName.add(segmentReader.getSegmentName())__            }_        }__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.EXTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                if (segmentName.contains(segmentReader.getSegmentName()) == false) {_                    fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                }_            }_        }_        writerSegmentStats(stats)__        return stats__    };global,stats,on,segments;public,final,segments,stats,segments,stats,boolean,include,segment,file,sizes,ensure,open,set,string,segment,name,new,hash,set,segments,stats,stats,new,segments,stats,try,searcher,searcher,acquire,searcher,searcher,scope,internal,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,segment,name,add,segment,reader,get,segment,name,try,searcher,searcher,acquire,searcher,searcher,scope,external,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,if,segment,name,contains,segment,reader,get,segment,name,false,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,writer,segment,stats,stats,return,stats
Engine -> public final SegmentsStats segmentsStats(boolean includeSegmentFileSizes);1535723122;Global stats on segments.;public final SegmentsStats segmentsStats(boolean includeSegmentFileSizes) {_        ensureOpen()__        Set<String> segmentName = new HashSet<>()__        SegmentsStats stats = new SegmentsStats()__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.INTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                segmentName.add(segmentReader.getSegmentName())__            }_        }__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.EXTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                if (segmentName.contains(segmentReader.getSegmentName()) == false) {_                    fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                }_            }_        }_        writerSegmentStats(stats)__        return stats__    };global,stats,on,segments;public,final,segments,stats,segments,stats,boolean,include,segment,file,sizes,ensure,open,set,string,segment,name,new,hash,set,segments,stats,stats,new,segments,stats,try,searcher,searcher,acquire,searcher,searcher,scope,internal,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,segment,name,add,segment,reader,get,segment,name,try,searcher,searcher,acquire,searcher,searcher,scope,external,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,if,segment,name,contains,segment,reader,get,segment,name,false,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,writer,segment,stats,stats,return,stats
Engine -> public final SegmentsStats segmentsStats(boolean includeSegmentFileSizes);1535965276;Global stats on segments.;public final SegmentsStats segmentsStats(boolean includeSegmentFileSizes) {_        ensureOpen()__        Set<String> segmentName = new HashSet<>()__        SegmentsStats stats = new SegmentsStats()__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.INTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                segmentName.add(segmentReader.getSegmentName())__            }_        }__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.EXTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                if (segmentName.contains(segmentReader.getSegmentName()) == false) {_                    fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                }_            }_        }_        writerSegmentStats(stats)__        return stats__    };global,stats,on,segments;public,final,segments,stats,segments,stats,boolean,include,segment,file,sizes,ensure,open,set,string,segment,name,new,hash,set,segments,stats,stats,new,segments,stats,try,searcher,searcher,acquire,searcher,searcher,scope,internal,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,segment,name,add,segment,reader,get,segment,name,try,searcher,searcher,acquire,searcher,searcher,scope,external,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,if,segment,name,contains,segment,reader,get,segment,name,false,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,writer,segment,stats,stats,return,stats
Engine -> public final SegmentsStats segmentsStats(boolean includeSegmentFileSizes);1536314350;Global stats on segments.;public final SegmentsStats segmentsStats(boolean includeSegmentFileSizes) {_        ensureOpen()__        Set<String> segmentName = new HashSet<>()__        SegmentsStats stats = new SegmentsStats()__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.INTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                segmentName.add(segmentReader.getSegmentName())__            }_        }__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.EXTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                if (segmentName.contains(segmentReader.getSegmentName()) == false) {_                    fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                }_            }_        }_        writerSegmentStats(stats)__        return stats__    };global,stats,on,segments;public,final,segments,stats,segments,stats,boolean,include,segment,file,sizes,ensure,open,set,string,segment,name,new,hash,set,segments,stats,stats,new,segments,stats,try,searcher,searcher,acquire,searcher,searcher,scope,internal,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,segment,name,add,segment,reader,get,segment,name,try,searcher,searcher,acquire,searcher,searcher,scope,external,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,if,segment,name,contains,segment,reader,get,segment,name,false,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,writer,segment,stats,stats,return,stats
Engine -> public final SegmentsStats segmentsStats(boolean includeSegmentFileSizes);1536828374;Global stats on segments.;public final SegmentsStats segmentsStats(boolean includeSegmentFileSizes) {_        ensureOpen()__        Set<String> segmentName = new HashSet<>()__        SegmentsStats stats = new SegmentsStats()__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.INTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                segmentName.add(segmentReader.getSegmentName())__            }_        }__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.EXTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                if (segmentName.contains(segmentReader.getSegmentName()) == false) {_                    fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                }_            }_        }_        writerSegmentStats(stats)__        return stats__    };global,stats,on,segments;public,final,segments,stats,segments,stats,boolean,include,segment,file,sizes,ensure,open,set,string,segment,name,new,hash,set,segments,stats,stats,new,segments,stats,try,searcher,searcher,acquire,searcher,searcher,scope,internal,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,segment,name,add,segment,reader,get,segment,name,try,searcher,searcher,acquire,searcher,searcher,scope,external,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,if,segment,name,contains,segment,reader,get,segment,name,false,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,writer,segment,stats,stats,return,stats
Engine -> public final SegmentsStats segmentsStats(boolean includeSegmentFileSizes);1537371806;Global stats on segments.;public final SegmentsStats segmentsStats(boolean includeSegmentFileSizes) {_        ensureOpen()__        Set<String> segmentName = new HashSet<>()__        SegmentsStats stats = new SegmentsStats()__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.INTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                segmentName.add(segmentReader.getSegmentName())__            }_        }__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.EXTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                if (segmentName.contains(segmentReader.getSegmentName()) == false) {_                    fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                }_            }_        }_        writerSegmentStats(stats)__        return stats__    };global,stats,on,segments;public,final,segments,stats,segments,stats,boolean,include,segment,file,sizes,ensure,open,set,string,segment,name,new,hash,set,segments,stats,stats,new,segments,stats,try,searcher,searcher,acquire,searcher,searcher,scope,internal,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,segment,name,add,segment,reader,get,segment,name,try,searcher,searcher,acquire,searcher,searcher,scope,external,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,if,segment,name,contains,segment,reader,get,segment,name,false,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,writer,segment,stats,stats,return,stats
Engine -> public final SegmentsStats segmentsStats(boolean includeSegmentFileSizes);1537806831;Global stats on segments.;public final SegmentsStats segmentsStats(boolean includeSegmentFileSizes) {_        ensureOpen()__        Set<String> segmentName = new HashSet<>()__        SegmentsStats stats = new SegmentsStats()__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.INTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                segmentName.add(segmentReader.getSegmentName())__            }_        }__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.EXTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                if (segmentName.contains(segmentReader.getSegmentName()) == false) {_                    fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                }_            }_        }_        writerSegmentStats(stats)__        return stats__    };global,stats,on,segments;public,final,segments,stats,segments,stats,boolean,include,segment,file,sizes,ensure,open,set,string,segment,name,new,hash,set,segments,stats,stats,new,segments,stats,try,searcher,searcher,acquire,searcher,searcher,scope,internal,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,segment,name,add,segment,reader,get,segment,name,try,searcher,searcher,acquire,searcher,searcher,scope,external,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,if,segment,name,contains,segment,reader,get,segment,name,false,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,writer,segment,stats,stats,return,stats
Engine -> public final SegmentsStats segmentsStats(boolean includeSegmentFileSizes);1538067637;Global stats on segments.;public final SegmentsStats segmentsStats(boolean includeSegmentFileSizes) {_        ensureOpen()__        Set<String> segmentName = new HashSet<>()__        SegmentsStats stats = new SegmentsStats()__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.INTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                segmentName.add(segmentReader.getSegmentName())__            }_        }__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.EXTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                if (segmentName.contains(segmentReader.getSegmentName()) == false) {_                    fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                }_            }_        }_        writerSegmentStats(stats)__        return stats__    };global,stats,on,segments;public,final,segments,stats,segments,stats,boolean,include,segment,file,sizes,ensure,open,set,string,segment,name,new,hash,set,segments,stats,stats,new,segments,stats,try,searcher,searcher,acquire,searcher,searcher,scope,internal,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,segment,name,add,segment,reader,get,segment,name,try,searcher,searcher,acquire,searcher,searcher,scope,external,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,if,segment,name,contains,segment,reader,get,segment,name,false,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,writer,segment,stats,stats,return,stats
Engine -> public final SegmentsStats segmentsStats(boolean includeSegmentFileSizes);1538424609;Global stats on segments.;public final SegmentsStats segmentsStats(boolean includeSegmentFileSizes) {_        ensureOpen()__        Set<String> segmentName = new HashSet<>()__        SegmentsStats stats = new SegmentsStats()__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.INTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                segmentName.add(segmentReader.getSegmentName())__            }_        }__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.EXTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                if (segmentName.contains(segmentReader.getSegmentName()) == false) {_                    fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                }_            }_        }_        writerSegmentStats(stats)__        return stats__    };global,stats,on,segments;public,final,segments,stats,segments,stats,boolean,include,segment,file,sizes,ensure,open,set,string,segment,name,new,hash,set,segments,stats,stats,new,segments,stats,try,searcher,searcher,acquire,searcher,searcher,scope,internal,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,segment,name,add,segment,reader,get,segment,name,try,searcher,searcher,acquire,searcher,searcher,scope,external,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,if,segment,name,contains,segment,reader,get,segment,name,false,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,writer,segment,stats,stats,return,stats
Engine -> public final SegmentsStats segmentsStats(boolean includeSegmentFileSizes);1539723533;Global stats on segments.;public final SegmentsStats segmentsStats(boolean includeSegmentFileSizes) {_        ensureOpen()__        Set<String> segmentName = new HashSet<>()__        SegmentsStats stats = new SegmentsStats()__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.INTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                segmentName.add(segmentReader.getSegmentName())__            }_        }__        try (Searcher searcher = acquireSearcher("segments_stats", SearcherScope.EXTERNAL)) {_            for (LeafReaderContext ctx : searcher.reader().getContext().leaves()) {_                SegmentReader segmentReader = Lucene.segmentReader(ctx.reader())__                if (segmentName.contains(segmentReader.getSegmentName()) == false) {_                    fillSegmentStats(segmentReader, includeSegmentFileSizes, stats)__                }_            }_        }_        writerSegmentStats(stats)__        return stats__    };global,stats,on,segments;public,final,segments,stats,segments,stats,boolean,include,segment,file,sizes,ensure,open,set,string,segment,name,new,hash,set,segments,stats,stats,new,segments,stats,try,searcher,searcher,acquire,searcher,searcher,scope,internal,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,segment,name,add,segment,reader,get,segment,name,try,searcher,searcher,acquire,searcher,searcher,scope,external,for,leaf,reader,context,ctx,searcher,reader,get,context,leaves,segment,reader,segment,reader,lucene,segment,reader,ctx,reader,if,segment,name,contains,segment,reader,get,segment,name,false,fill,segment,stats,segment,reader,include,segment,file,sizes,stats,writer,segment,stats,stats,return,stats
Engine -> IndexThrottle -> public void activate();1524684173;Activate throttling, which switches the lock to be a real lock;public void activate() {_            assert lock == NOOP_LOCK : "throttling activated while already active"__            startOfThrottleNS = System.nanoTime()__            lock = lockReference__        };activate,throttling,which,switches,the,lock,to,be,a,real,lock;public,void,activate,assert,lock,throttling,activated,while,already,active,start,of,throttle,ns,system,nano,time,lock,lock,reference
Engine -> IndexThrottle -> public void activate();1525162917;Activate throttling, which switches the lock to be a real lock;public void activate() {_            assert lock == NOOP_LOCK : "throttling activated while already active"__            startOfThrottleNS = System.nanoTime()__            lock = lockReference__        };activate,throttling,which,switches,the,lock,to,be,a,real,lock;public,void,activate,assert,lock,throttling,activated,while,already,active,start,of,throttle,ns,system,nano,time,lock,lock,reference
Engine -> IndexThrottle -> public void activate();1525334055;Activate throttling, which switches the lock to be a real lock;public void activate() {_            assert lock == NOOP_LOCK : "throttling activated while already active"__            startOfThrottleNS = System.nanoTime()__            lock = lockReference__        };activate,throttling,which,switches,the,lock,to,be,a,real,lock;public,void,activate,assert,lock,throttling,activated,while,already,active,start,of,throttle,ns,system,nano,time,lock,lock,reference
Engine -> IndexThrottle -> public void activate();1527583663;Activate throttling, which switches the lock to be a real lock;public void activate() {_            assert lock == NOOP_LOCK : "throttling activated while already active"__            startOfThrottleNS = System.nanoTime()__            lock = lockReference__        };activate,throttling,which,switches,the,lock,to,be,a,real,lock;public,void,activate,assert,lock,throttling,activated,while,already,active,start,of,throttle,ns,system,nano,time,lock,lock,reference
Engine -> IndexThrottle -> public void activate();1528706846;Activate throttling, which switches the lock to be a real lock;public void activate() {_            assert lock == NOOP_LOCK : "throttling activated while already active"__            startOfThrottleNS = System.nanoTime()__            lock = lockReference__        };activate,throttling,which,switches,the,lock,to,be,a,real,lock;public,void,activate,assert,lock,throttling,activated,while,already,active,start,of,throttle,ns,system,nano,time,lock,lock,reference
Engine -> IndexThrottle -> public void activate();1528762805;Activate throttling, which switches the lock to be a real lock;public void activate() {_            assert lock == NOOP_LOCK : "throttling activated while already active"__            startOfThrottleNS = System.nanoTime()__            lock = lockReference__        };activate,throttling,which,switches,the,lock,to,be,a,real,lock;public,void,activate,assert,lock,throttling,activated,while,already,active,start,of,throttle,ns,system,nano,time,lock,lock,reference
Engine -> IndexThrottle -> public void activate();1531910483;Activate throttling, which switches the lock to be a real lock;public void activate() {_            assert lock == NOOP_LOCK : "throttling activated while already active"__            startOfThrottleNS = System.nanoTime()__            lock = lockReference__        };activate,throttling,which,switches,the,lock,to,be,a,real,lock;public,void,activate,assert,lock,throttling,activated,while,already,active,start,of,throttle,ns,system,nano,time,lock,lock,reference
Engine -> IndexThrottle -> public void activate();1532685069;Activate throttling, which switches the lock to be a real lock;public void activate() {_            assert lock == NOOP_LOCK : "throttling activated while already active"__            startOfThrottleNS = System.nanoTime()__            lock = lockReference__        };activate,throttling,which,switches,the,lock,to,be,a,real,lock;public,void,activate,assert,lock,throttling,activated,while,already,active,start,of,throttle,ns,system,nano,time,lock,lock,reference
Engine -> IndexThrottle -> public void activate();1533295538;Activate throttling, which switches the lock to be a real lock;public void activate() {_            assert lock == NOOP_LOCK : "throttling activated while already active"__            startOfThrottleNS = System.nanoTime()__            lock = lockReference__        };activate,throttling,which,switches,the,lock,to,be,a,real,lock;public,void,activate,assert,lock,throttling,activated,while,already,active,start,of,throttle,ns,system,nano,time,lock,lock,reference
Engine -> IndexThrottle -> public void activate();1535046779;Activate throttling, which switches the lock to be a real lock;public void activate() {_            assert lock == NOOP_LOCK : "throttling activated while already active"__            startOfThrottleNS = System.nanoTime()__            lock = lockReference__        };activate,throttling,which,switches,the,lock,to,be,a,real,lock;public,void,activate,assert,lock,throttling,activated,while,already,active,start,of,throttle,ns,system,nano,time,lock,lock,reference
Engine -> IndexThrottle -> public void activate();1535723122;Activate throttling, which switches the lock to be a real lock;public void activate() {_            assert lock == NOOP_LOCK : "throttling activated while already active"__            startOfThrottleNS = System.nanoTime()__            lock = lockReference__        };activate,throttling,which,switches,the,lock,to,be,a,real,lock;public,void,activate,assert,lock,throttling,activated,while,already,active,start,of,throttle,ns,system,nano,time,lock,lock,reference
Engine -> IndexThrottle -> public void activate();1535965276;Activate throttling, which switches the lock to be a real lock;public void activate() {_            assert lock == NOOP_LOCK : "throttling activated while already active"__            startOfThrottleNS = System.nanoTime()__            lock = lockReference__        };activate,throttling,which,switches,the,lock,to,be,a,real,lock;public,void,activate,assert,lock,throttling,activated,while,already,active,start,of,throttle,ns,system,nano,time,lock,lock,reference
Engine -> IndexThrottle -> public void activate();1536314350;Activate throttling, which switches the lock to be a real lock;public void activate() {_            assert lock == NOOP_LOCK : "throttling activated while already active"__            startOfThrottleNS = System.nanoTime()__            lock = lockReference__        };activate,throttling,which,switches,the,lock,to,be,a,real,lock;public,void,activate,assert,lock,throttling,activated,while,already,active,start,of,throttle,ns,system,nano,time,lock,lock,reference
Engine -> IndexThrottle -> public void activate();1536828374;Activate throttling, which switches the lock to be a real lock;public void activate() {_            assert lock == NOOP_LOCK : "throttling activated while already active"__            startOfThrottleNS = System.nanoTime()__            lock = lockReference__        };activate,throttling,which,switches,the,lock,to,be,a,real,lock;public,void,activate,assert,lock,throttling,activated,while,already,active,start,of,throttle,ns,system,nano,time,lock,lock,reference
Engine -> IndexThrottle -> public void activate();1537371806;Activate throttling, which switches the lock to be a real lock;public void activate() {_            assert lock == NOOP_LOCK : "throttling activated while already active"__            startOfThrottleNS = System.nanoTime()__            lock = lockReference__        };activate,throttling,which,switches,the,lock,to,be,a,real,lock;public,void,activate,assert,lock,throttling,activated,while,already,active,start,of,throttle,ns,system,nano,time,lock,lock,reference
Engine -> IndexThrottle -> public void activate();1537806831;Activate throttling, which switches the lock to be a real lock;public void activate() {_            assert lock == NOOP_LOCK : "throttling activated while already active"__            startOfThrottleNS = System.nanoTime()__            lock = lockReference__        };activate,throttling,which,switches,the,lock,to,be,a,real,lock;public,void,activate,assert,lock,throttling,activated,while,already,active,start,of,throttle,ns,system,nano,time,lock,lock,reference
Engine -> IndexThrottle -> public void activate();1538067637;Activate throttling, which switches the lock to be a real lock;public void activate() {_            assert lock == NOOP_LOCK : "throttling activated while already active"__            startOfThrottleNS = System.nanoTime()__            lock = lockReference__        };activate,throttling,which,switches,the,lock,to,be,a,real,lock;public,void,activate,assert,lock,throttling,activated,while,already,active,start,of,throttle,ns,system,nano,time,lock,lock,reference
Engine -> IndexThrottle -> public void activate();1538424609;Activate throttling, which switches the lock to be a real lock;public void activate() {_            assert lock == NOOP_LOCK : "throttling activated while already active"__            startOfThrottleNS = System.nanoTime()__            lock = lockReference__        };activate,throttling,which,switches,the,lock,to,be,a,real,lock;public,void,activate,assert,lock,throttling,activated,while,already,active,start,of,throttle,ns,system,nano,time,lock,lock,reference
Engine -> IndexThrottle -> public void activate();1539723533;Activate throttling, which switches the lock to be a real lock;public void activate() {_            assert lock == NOOP_LOCK : "throttling activated while already active"__            startOfThrottleNS = System.nanoTime()__            lock = lockReference__        };activate,throttling,which,switches,the,lock,to,be,a,real,lock;public,void,activate,assert,lock,throttling,activated,while,already,active,start,of,throttle,ns,system,nano,time,lock,lock,reference
Engine -> IndexThrottle -> public void activate();1541618615;Activate throttling, which switches the lock to be a real lock;public void activate() {_            assert lock == NOOP_LOCK : "throttling activated while already active"__            startOfThrottleNS = System.nanoTime()__            lock = lockReference__        };activate,throttling,which,switches,the,lock,to,be,a,real,lock;public,void,activate,assert,lock,throttling,activated,while,already,active,start,of,throttle,ns,system,nano,time,lock,lock,reference
Engine -> IndexThrottle -> public void activate();1542697754;Activate throttling, which switches the lock to be a real lock;public void activate() {_            assert lock == NOOP_LOCK : "throttling activated while already active"__            startOfThrottleNS = System.nanoTime()__            lock = lockReference__        };activate,throttling,which,switches,the,lock,to,be,a,real,lock;public,void,activate,assert,lock,throttling,activated,while,already,active,start,of,throttle,ns,system,nano,time,lock,lock,reference
Engine -> IndexThrottle -> public void activate();1543047942;Activate throttling, which switches the lock to be a real lock;public void activate() {_            assert lock == NOOP_LOCK : "throttling activated while already active"__            startOfThrottleNS = System.nanoTime()__            lock = lockReference__        };activate,throttling,which,switches,the,lock,to,be,a,real,lock;public,void,activate,assert,lock,throttling,activated,while,already,active,start,of,throttle,ns,system,nano,time,lock,lock,reference
Engine -> IndexThrottle -> public void activate();1544545090;Activate throttling, which switches the lock to be a real lock;public void activate() {_            assert lock == NOOP_LOCK : "throttling activated while already active"__            startOfThrottleNS = System.nanoTime()__            lock = lockReference__        };activate,throttling,which,switches,the,lock,to,be,a,real,lock;public,void,activate,assert,lock,throttling,activated,while,already,active,start,of,throttle,ns,system,nano,time,lock,lock,reference
Engine -> IndexThrottle -> public void activate();1544684920;Activate throttling, which switches the lock to be a real lock;public void activate() {_            assert lock == NOOP_LOCK : "throttling activated while already active"__            startOfThrottleNS = System.nanoTime()__            lock = lockReference__        };activate,throttling,which,switches,the,lock,to,be,a,real,lock;public,void,activate,assert,lock,throttling,activated,while,already,active,start,of,throttle,ns,system,nano,time,lock,lock,reference
Engine -> IndexThrottle -> public void activate();1545140118;Activate throttling, which switches the lock to be a real lock;public void activate() {_            assert lock == NOOP_LOCK : "throttling activated while already active"__            startOfThrottleNS = System.nanoTime()__            lock = lockReference__        };activate,throttling,which,switches,the,lock,to,be,a,real,lock;public,void,activate,assert,lock,throttling,activated,while,already,active,start,of,throttle,ns,system,nano,time,lock,lock,reference
Engine -> IndexThrottle -> public void activate();1545221705;Activate throttling, which switches the lock to be a real lock;public void activate() {_            assert lock == NOOP_LOCK : "throttling activated while already active"__            startOfThrottleNS = System.nanoTime()__            lock = lockReference__        };activate,throttling,which,switches,the,lock,to,be,a,real,lock;public,void,activate,assert,lock,throttling,activated,while,already,active,start,of,throttle,ns,system,nano,time,lock,lock,reference
Engine -> IndexThrottle -> public void activate();1547332999;Activate throttling, which switches the lock to be a real lock;public void activate() {_            assert lock == NOOP_LOCK : "throttling activated while already active"__            startOfThrottleNS = System.nanoTime()__            lock = lockReference__        };activate,throttling,which,switches,the,lock,to,be,a,real,lock;public,void,activate,assert,lock,throttling,activated,while,already,active,start,of,throttle,ns,system,nano,time,lock,lock,reference
Engine -> IndexThrottle -> public void activate();1548771485;Activate throttling, which switches the lock to be a real lock;public void activate() {_            assert lock == NOOP_LOCK : "throttling activated while already active"__            startOfThrottleNS = System.nanoTime()__            lock = lockReference__        };activate,throttling,which,switches,the,lock,to,be,a,real,lock;public,void,activate,assert,lock,throttling,activated,while,already,active,start,of,throttle,ns,system,nano,time,lock,lock,reference
Engine -> IndexThrottle -> public void activate();1549891630;Activate throttling, which switches the lock to be a real lock;public void activate() {_            assert lock == NOOP_LOCK : "throttling activated while already active"__            startOfThrottleNS = System.nanoTime()__            lock = lockReference__        };activate,throttling,which,switches,the,lock,to,be,a,real,lock;public,void,activate,assert,lock,throttling,activated,while,already,active,start,of,throttle,ns,system,nano,time,lock,lock,reference
Engine -> IndexThrottle -> public void activate();1549975032;Activate throttling, which switches the lock to be a real lock;public void activate() {_            assert lock == NOOP_LOCK : "throttling activated while already active"__            startOfThrottleNS = System.nanoTime()__            lock = lockReference__        };activate,throttling,which,switches,the,lock,to,be,a,real,lock;public,void,activate,assert,lock,throttling,activated,while,already,active,start,of,throttle,ns,system,nano,time,lock,lock,reference
Engine -> IndexThrottle -> public void activate();1550220204;Activate throttling, which switches the lock to be a real lock;public void activate() {_            assert lock == NOOP_LOCK : "throttling activated while already active"__            startOfThrottleNS = System.nanoTime()__            lock = lockReference__        };activate,throttling,which,switches,the,lock,to,be,a,real,lock;public,void,activate,assert,lock,throttling,activated,while,already,active,start,of,throttle,ns,system,nano,time,lock,lock,reference
Engine -> IndexThrottle -> public void activate();1550526771;Activate throttling, which switches the lock to be a real lock;public void activate() {_            assert lock == NOOP_LOCK : "throttling activated while already active"__            startOfThrottleNS = System.nanoTime()__            lock = lockReference__        };activate,throttling,which,switches,the,lock,to,be,a,real,lock;public,void,activate,assert,lock,throttling,activated,while,already,active,start,of,throttle,ns,system,nano,time,lock,lock,reference
Engine -> IndexThrottle -> public void activate();1551110274;Activate throttling, which switches the lock to be a real lock;public void activate() {_            assert lock == NOOP_LOCK : "throttling activated while already active"__            startOfThrottleNS = System.nanoTime()__            lock = lockReference__        };activate,throttling,which,switches,the,lock,to,be,a,real,lock;public,void,activate,assert,lock,throttling,activated,while,already,active,start,of,throttle,ns,system,nano,time,lock,lock,reference
Engine -> IndexThrottle -> public void activate();1551126708;Activate throttling, which switches the lock to be a real lock;public void activate() {_            assert lock == NOOP_LOCK : "throttling activated while already active"__            startOfThrottleNS = System.nanoTime()__            lock = lockReference__        };activate,throttling,which,switches,the,lock,to,be,a,real,lock;public,void,activate,assert,lock,throttling,activated,while,already,active,start,of,throttle,ns,system,nano,time,lock,lock,reference
Engine -> public abstract Closeable acquireRetentionLockForPeerRecovery()_;1535723122;Acquires a lock on the translog files and Lucene soft-deleted documents to prevent them from being trimmed;public abstract Closeable acquireRetentionLockForPeerRecovery()_;acquires,a,lock,on,the,translog,files,and,lucene,soft,deleted,documents,to,prevent,them,from,being,trimmed;public,abstract,closeable,acquire,retention,lock,for,peer,recovery
Engine -> public abstract Closeable acquireRetentionLockForPeerRecovery()_;1535965276;Acquires a lock on the translog files and Lucene soft-deleted documents to prevent them from being trimmed;public abstract Closeable acquireRetentionLockForPeerRecovery()_;acquires,a,lock,on,the,translog,files,and,lucene,soft,deleted,documents,to,prevent,them,from,being,trimmed;public,abstract,closeable,acquire,retention,lock,for,peer,recovery
Engine -> public abstract Closeable acquireRetentionLockForPeerRecovery()_;1536314350;Acquires a lock on the translog files and Lucene soft-deleted documents to prevent them from being trimmed;public abstract Closeable acquireRetentionLockForPeerRecovery()_;acquires,a,lock,on,the,translog,files,and,lucene,soft,deleted,documents,to,prevent,them,from,being,trimmed;public,abstract,closeable,acquire,retention,lock,for,peer,recovery
Engine -> public abstract Closeable acquireRetentionLockForPeerRecovery()_;1536828374;Acquires a lock on the translog files and Lucene soft-deleted documents to prevent them from being trimmed;public abstract Closeable acquireRetentionLockForPeerRecovery()_;acquires,a,lock,on,the,translog,files,and,lucene,soft,deleted,documents,to,prevent,them,from,being,trimmed;public,abstract,closeable,acquire,retention,lock,for,peer,recovery
Engine -> public abstract Closeable acquireRetentionLockForPeerRecovery()_;1537371806;Acquires a lock on the translog files and Lucene soft-deleted documents to prevent them from being trimmed;public abstract Closeable acquireRetentionLockForPeerRecovery()_;acquires,a,lock,on,the,translog,files,and,lucene,soft,deleted,documents,to,prevent,them,from,being,trimmed;public,abstract,closeable,acquire,retention,lock,for,peer,recovery
Engine -> public abstract Closeable acquireRetentionLockForPeerRecovery()_;1537806831;Acquires a lock on the translog files and Lucene soft-deleted documents to prevent them from being trimmed;public abstract Closeable acquireRetentionLockForPeerRecovery()_;acquires,a,lock,on,the,translog,files,and,lucene,soft,deleted,documents,to,prevent,them,from,being,trimmed;public,abstract,closeable,acquire,retention,lock,for,peer,recovery
Engine -> public abstract Closeable acquireRetentionLockForPeerRecovery()_;1538067637;Acquires a lock on the translog files and Lucene soft-deleted documents to prevent them from being trimmed;public abstract Closeable acquireRetentionLockForPeerRecovery()_;acquires,a,lock,on,the,translog,files,and,lucene,soft,deleted,documents,to,prevent,them,from,being,trimmed;public,abstract,closeable,acquire,retention,lock,for,peer,recovery
Engine -> public abstract Closeable acquireRetentionLockForPeerRecovery()_;1538424609;Acquires a lock on the translog files and Lucene soft-deleted documents to prevent them from being trimmed;public abstract Closeable acquireRetentionLockForPeerRecovery()_;acquires,a,lock,on,the,translog,files,and,lucene,soft,deleted,documents,to,prevent,them,from,being,trimmed;public,abstract,closeable,acquire,retention,lock,for,peer,recovery
Engine -> public abstract Closeable acquireRetentionLockForPeerRecovery()_;1539723533;Acquires a lock on the translog files and Lucene soft-deleted documents to prevent them from being trimmed;public abstract Closeable acquireRetentionLockForPeerRecovery()_;acquires,a,lock,on,the,translog,files,and,lucene,soft,deleted,documents,to,prevent,them,from,being,trimmed;public,abstract,closeable,acquire,retention,lock,for,peer,recovery
Engine -> public abstract Closeable acquireRetentionLockForPeerRecovery()_;1541618615;Acquires a lock on the translog files and Lucene soft-deleted documents to prevent them from being trimmed;public abstract Closeable acquireRetentionLockForPeerRecovery()_;acquires,a,lock,on,the,translog,files,and,lucene,soft,deleted,documents,to,prevent,them,from,being,trimmed;public,abstract,closeable,acquire,retention,lock,for,peer,recovery
Engine -> public abstract Closeable acquireRetentionLockForPeerRecovery()_;1542697754;Acquires a lock on the translog files and Lucene soft-deleted documents to prevent them from being trimmed;public abstract Closeable acquireRetentionLockForPeerRecovery()_;acquires,a,lock,on,the,translog,files,and,lucene,soft,deleted,documents,to,prevent,them,from,being,trimmed;public,abstract,closeable,acquire,retention,lock,for,peer,recovery
Engine -> public abstract Closeable acquireRetentionLockForPeerRecovery()_;1543047942;Acquires a lock on the translog files and Lucene soft-deleted documents to prevent them from being trimmed;public abstract Closeable acquireRetentionLockForPeerRecovery()_;acquires,a,lock,on,the,translog,files,and,lucene,soft,deleted,documents,to,prevent,them,from,being,trimmed;public,abstract,closeable,acquire,retention,lock,for,peer,recovery
Engine -> public abstract Closeable acquireRetentionLockForPeerRecovery()_;1544545090;Acquires a lock on the translog files and Lucene soft-deleted documents to prevent them from being trimmed;public abstract Closeable acquireRetentionLockForPeerRecovery()_;acquires,a,lock,on,the,translog,files,and,lucene,soft,deleted,documents,to,prevent,them,from,being,trimmed;public,abstract,closeable,acquire,retention,lock,for,peer,recovery
Engine -> public abstract Closeable acquireRetentionLockForPeerRecovery()_;1544684920;Acquires a lock on the translog files and Lucene soft-deleted documents to prevent them from being trimmed;public abstract Closeable acquireRetentionLockForPeerRecovery()_;acquires,a,lock,on,the,translog,files,and,lucene,soft,deleted,documents,to,prevent,them,from,being,trimmed;public,abstract,closeable,acquire,retention,lock,for,peer,recovery
Engine -> public abstract Closeable acquireRetentionLockForPeerRecovery()_;1545140118;Acquires a lock on the translog files and Lucene soft-deleted documents to prevent them from being trimmed;public abstract Closeable acquireRetentionLockForPeerRecovery()_;acquires,a,lock,on,the,translog,files,and,lucene,soft,deleted,documents,to,prevent,them,from,being,trimmed;public,abstract,closeable,acquire,retention,lock,for,peer,recovery
Engine -> public abstract Closeable acquireRetentionLockForPeerRecovery()_;1545221705;Acquires a lock on the translog files and Lucene soft-deleted documents to prevent them from being trimmed;public abstract Closeable acquireRetentionLockForPeerRecovery()_;acquires,a,lock,on,the,translog,files,and,lucene,soft,deleted,documents,to,prevent,them,from,being,trimmed;public,abstract,closeable,acquire,retention,lock,for,peer,recovery
Engine -> public abstract Closeable acquireRetentionLockForPeerRecovery()_;1547332999;Acquires a lock on the translog files and Lucene soft-deleted documents to prevent them from being trimmed;public abstract Closeable acquireRetentionLockForPeerRecovery()_;acquires,a,lock,on,the,translog,files,and,lucene,soft,deleted,documents,to,prevent,them,from,being,trimmed;public,abstract,closeable,acquire,retention,lock,for,peer,recovery
Engine -> public abstract Closeable acquireRetentionLockForPeerRecovery()_;1548771485;Acquires a lock on the translog files and Lucene soft-deleted documents to prevent them from being trimmed;public abstract Closeable acquireRetentionLockForPeerRecovery()_;acquires,a,lock,on,the,translog,files,and,lucene,soft,deleted,documents,to,prevent,them,from,being,trimmed;public,abstract,closeable,acquire,retention,lock,for,peer,recovery
Engine -> public abstract Closeable acquireRetentionLockForPeerRecovery()_;1549891630;Acquires a lock on the translog files and Lucene soft-deleted documents to prevent them from being trimmed;public abstract Closeable acquireRetentionLockForPeerRecovery()_;acquires,a,lock,on,the,translog,files,and,lucene,soft,deleted,documents,to,prevent,them,from,being,trimmed;public,abstract,closeable,acquire,retention,lock,for,peer,recovery
Engine -> public abstract void writeIndexingBuffer() throws EngineException_;1524684173;Called when our engine is using too much heap and should move buffered indexed/deleted documents to disk.;public abstract void writeIndexingBuffer() throws EngineException_;called,when,our,engine,is,using,too,much,heap,and,should,move,buffered,indexed,deleted,documents,to,disk;public,abstract,void,write,indexing,buffer,throws,engine,exception
Engine -> public abstract void writeIndexingBuffer() throws EngineException_;1525162917;Called when our engine is using too much heap and should move buffered indexed/deleted documents to disk.;public abstract void writeIndexingBuffer() throws EngineException_;called,when,our,engine,is,using,too,much,heap,and,should,move,buffered,indexed,deleted,documents,to,disk;public,abstract,void,write,indexing,buffer,throws,engine,exception
Engine -> public abstract void writeIndexingBuffer() throws EngineException_;1525334055;Called when our engine is using too much heap and should move buffered indexed/deleted documents to disk.;public abstract void writeIndexingBuffer() throws EngineException_;called,when,our,engine,is,using,too,much,heap,and,should,move,buffered,indexed,deleted,documents,to,disk;public,abstract,void,write,indexing,buffer,throws,engine,exception
Engine -> public abstract void writeIndexingBuffer() throws EngineException_;1527583663;Called when our engine is using too much heap and should move buffered indexed/deleted documents to disk.;public abstract void writeIndexingBuffer() throws EngineException_;called,when,our,engine,is,using,too,much,heap,and,should,move,buffered,indexed,deleted,documents,to,disk;public,abstract,void,write,indexing,buffer,throws,engine,exception
Engine -> public abstract void writeIndexingBuffer() throws EngineException_;1528706846;Called when our engine is using too much heap and should move buffered indexed/deleted documents to disk.;public abstract void writeIndexingBuffer() throws EngineException_;called,when,our,engine,is,using,too,much,heap,and,should,move,buffered,indexed,deleted,documents,to,disk;public,abstract,void,write,indexing,buffer,throws,engine,exception
Engine -> public abstract void writeIndexingBuffer() throws EngineException_;1528762805;Called when our engine is using too much heap and should move buffered indexed/deleted documents to disk.;public abstract void writeIndexingBuffer() throws EngineException_;called,when,our,engine,is,using,too,much,heap,and,should,move,buffered,indexed,deleted,documents,to,disk;public,abstract,void,write,indexing,buffer,throws,engine,exception
Engine -> public abstract void writeIndexingBuffer() throws EngineException_;1531910483;Called when our engine is using too much heap and should move buffered indexed/deleted documents to disk.;public abstract void writeIndexingBuffer() throws EngineException_;called,when,our,engine,is,using,too,much,heap,and,should,move,buffered,indexed,deleted,documents,to,disk;public,abstract,void,write,indexing,buffer,throws,engine,exception
Engine -> public abstract void writeIndexingBuffer() throws EngineException_;1532685069;Called when our engine is using too much heap and should move buffered indexed/deleted documents to disk.;public abstract void writeIndexingBuffer() throws EngineException_;called,when,our,engine,is,using,too,much,heap,and,should,move,buffered,indexed,deleted,documents,to,disk;public,abstract,void,write,indexing,buffer,throws,engine,exception
Engine -> public abstract void writeIndexingBuffer() throws EngineException_;1533295538;Called when our engine is using too much heap and should move buffered indexed/deleted documents to disk.;public abstract void writeIndexingBuffer() throws EngineException_;called,when,our,engine,is,using,too,much,heap,and,should,move,buffered,indexed,deleted,documents,to,disk;public,abstract,void,write,indexing,buffer,throws,engine,exception
Engine -> public abstract void writeIndexingBuffer() throws EngineException_;1535046779;Called when our engine is using too much heap and should move buffered indexed/deleted documents to disk.;public abstract void writeIndexingBuffer() throws EngineException_;called,when,our,engine,is,using,too,much,heap,and,should,move,buffered,indexed,deleted,documents,to,disk;public,abstract,void,write,indexing,buffer,throws,engine,exception
Engine -> public abstract void writeIndexingBuffer() throws EngineException_;1535723122;Called when our engine is using too much heap and should move buffered indexed/deleted documents to disk.;public abstract void writeIndexingBuffer() throws EngineException_;called,when,our,engine,is,using,too,much,heap,and,should,move,buffered,indexed,deleted,documents,to,disk;public,abstract,void,write,indexing,buffer,throws,engine,exception
Engine -> public abstract void writeIndexingBuffer() throws EngineException_;1535965276;Called when our engine is using too much heap and should move buffered indexed/deleted documents to disk.;public abstract void writeIndexingBuffer() throws EngineException_;called,when,our,engine,is,using,too,much,heap,and,should,move,buffered,indexed,deleted,documents,to,disk;public,abstract,void,write,indexing,buffer,throws,engine,exception
Engine -> public abstract void writeIndexingBuffer() throws EngineException_;1536314350;Called when our engine is using too much heap and should move buffered indexed/deleted documents to disk.;public abstract void writeIndexingBuffer() throws EngineException_;called,when,our,engine,is,using,too,much,heap,and,should,move,buffered,indexed,deleted,documents,to,disk;public,abstract,void,write,indexing,buffer,throws,engine,exception
Engine -> public abstract void writeIndexingBuffer() throws EngineException_;1536828374;Called when our engine is using too much heap and should move buffered indexed/deleted documents to disk.;public abstract void writeIndexingBuffer() throws EngineException_;called,when,our,engine,is,using,too,much,heap,and,should,move,buffered,indexed,deleted,documents,to,disk;public,abstract,void,write,indexing,buffer,throws,engine,exception
Engine -> public abstract void writeIndexingBuffer() throws EngineException_;1537371806;Called when our engine is using too much heap and should move buffered indexed/deleted documents to disk.;public abstract void writeIndexingBuffer() throws EngineException_;called,when,our,engine,is,using,too,much,heap,and,should,move,buffered,indexed,deleted,documents,to,disk;public,abstract,void,write,indexing,buffer,throws,engine,exception
Engine -> public abstract void writeIndexingBuffer() throws EngineException_;1537806831;Called when our engine is using too much heap and should move buffered indexed/deleted documents to disk.;public abstract void writeIndexingBuffer() throws EngineException_;called,when,our,engine,is,using,too,much,heap,and,should,move,buffered,indexed,deleted,documents,to,disk;public,abstract,void,write,indexing,buffer,throws,engine,exception
Engine -> public abstract void writeIndexingBuffer() throws EngineException_;1538067637;Called when our engine is using too much heap and should move buffered indexed/deleted documents to disk.;public abstract void writeIndexingBuffer() throws EngineException_;called,when,our,engine,is,using,too,much,heap,and,should,move,buffered,indexed,deleted,documents,to,disk;public,abstract,void,write,indexing,buffer,throws,engine,exception
Engine -> public abstract void writeIndexingBuffer() throws EngineException_;1538424609;Called when our engine is using too much heap and should move buffered indexed/deleted documents to disk.;public abstract void writeIndexingBuffer() throws EngineException_;called,when,our,engine,is,using,too,much,heap,and,should,move,buffered,indexed,deleted,documents,to,disk;public,abstract,void,write,indexing,buffer,throws,engine,exception
Engine -> public abstract void writeIndexingBuffer() throws EngineException_;1539723533;Called when our engine is using too much heap and should move buffered indexed/deleted documents to disk.;public abstract void writeIndexingBuffer() throws EngineException_;called,when,our,engine,is,using,too,much,heap,and,should,move,buffered,indexed,deleted,documents,to,disk;public,abstract,void,write,indexing,buffer,throws,engine,exception
Engine -> public abstract void writeIndexingBuffer() throws EngineException_;1541618615;Called when our engine is using too much heap and should move buffered indexed/deleted documents to disk.;public abstract void writeIndexingBuffer() throws EngineException_;called,when,our,engine,is,using,too,much,heap,and,should,move,buffered,indexed,deleted,documents,to,disk;public,abstract,void,write,indexing,buffer,throws,engine,exception
Engine -> public abstract void writeIndexingBuffer() throws EngineException_;1542697754;Called when our engine is using too much heap and should move buffered indexed/deleted documents to disk.;public abstract void writeIndexingBuffer() throws EngineException_;called,when,our,engine,is,using,too,much,heap,and,should,move,buffered,indexed,deleted,documents,to,disk;public,abstract,void,write,indexing,buffer,throws,engine,exception
Engine -> public abstract void writeIndexingBuffer() throws EngineException_;1543047942;Called when our engine is using too much heap and should move buffered indexed/deleted documents to disk.;public abstract void writeIndexingBuffer() throws EngineException_;called,when,our,engine,is,using,too,much,heap,and,should,move,buffered,indexed,deleted,documents,to,disk;public,abstract,void,write,indexing,buffer,throws,engine,exception
Engine -> public abstract void writeIndexingBuffer() throws EngineException_;1544545090;Called when our engine is using too much heap and should move buffered indexed/deleted documents to disk.;public abstract void writeIndexingBuffer() throws EngineException_;called,when,our,engine,is,using,too,much,heap,and,should,move,buffered,indexed,deleted,documents,to,disk;public,abstract,void,write,indexing,buffer,throws,engine,exception
Engine -> public abstract void writeIndexingBuffer() throws EngineException_;1544684920;Called when our engine is using too much heap and should move buffered indexed/deleted documents to disk.;public abstract void writeIndexingBuffer() throws EngineException_;called,when,our,engine,is,using,too,much,heap,and,should,move,buffered,indexed,deleted,documents,to,disk;public,abstract,void,write,indexing,buffer,throws,engine,exception
Engine -> public abstract void writeIndexingBuffer() throws EngineException_;1545140118;Called when our engine is using too much heap and should move buffered indexed/deleted documents to disk.;public abstract void writeIndexingBuffer() throws EngineException_;called,when,our,engine,is,using,too,much,heap,and,should,move,buffered,indexed,deleted,documents,to,disk;public,abstract,void,write,indexing,buffer,throws,engine,exception
Engine -> public abstract void writeIndexingBuffer() throws EngineException_;1545221705;Called when our engine is using too much heap and should move buffered indexed/deleted documents to disk.;public abstract void writeIndexingBuffer() throws EngineException_;called,when,our,engine,is,using,too,much,heap,and,should,move,buffered,indexed,deleted,documents,to,disk;public,abstract,void,write,indexing,buffer,throws,engine,exception
Engine -> public abstract void writeIndexingBuffer() throws EngineException_;1547332999;Called when our engine is using too much heap and should move buffered indexed/deleted documents to disk.;public abstract void writeIndexingBuffer() throws EngineException_;called,when,our,engine,is,using,too,much,heap,and,should,move,buffered,indexed,deleted,documents,to,disk;public,abstract,void,write,indexing,buffer,throws,engine,exception
Engine -> public abstract void writeIndexingBuffer() throws EngineException_;1548771485;Called when our engine is using too much heap and should move buffered indexed/deleted documents to disk.;public abstract void writeIndexingBuffer() throws EngineException_;called,when,our,engine,is,using,too,much,heap,and,should,move,buffered,indexed,deleted,documents,to,disk;public,abstract,void,write,indexing,buffer,throws,engine,exception
Engine -> public abstract void writeIndexingBuffer() throws EngineException_;1549891630;Called when our engine is using too much heap and should move buffered indexed/deleted documents to disk.;public abstract void writeIndexingBuffer() throws EngineException_;called,when,our,engine,is,using,too,much,heap,and,should,move,buffered,indexed,deleted,documents,to,disk;public,abstract,void,write,indexing,buffer,throws,engine,exception
Engine -> public abstract void writeIndexingBuffer() throws EngineException_;1549975032;Called when our engine is using too much heap and should move buffered indexed/deleted documents to disk.;public abstract void writeIndexingBuffer() throws EngineException_;called,when,our,engine,is,using,too,much,heap,and,should,move,buffered,indexed,deleted,documents,to,disk;public,abstract,void,write,indexing,buffer,throws,engine,exception
Engine -> public abstract void writeIndexingBuffer() throws EngineException_;1550220204;Called when our engine is using too much heap and should move buffered indexed/deleted documents to disk.;public abstract void writeIndexingBuffer() throws EngineException_;called,when,our,engine,is,using,too,much,heap,and,should,move,buffered,indexed,deleted,documents,to,disk;public,abstract,void,write,indexing,buffer,throws,engine,exception
Engine -> public abstract void writeIndexingBuffer() throws EngineException_;1550526771;Called when our engine is using too much heap and should move buffered indexed/deleted documents to disk.;public abstract void writeIndexingBuffer() throws EngineException_;called,when,our,engine,is,using,too,much,heap,and,should,move,buffered,indexed,deleted,documents,to,disk;public,abstract,void,write,indexing,buffer,throws,engine,exception
Engine -> public abstract void writeIndexingBuffer() throws EngineException_;1551110274;Called when our engine is using too much heap and should move buffered indexed/deleted documents to disk.;public abstract void writeIndexingBuffer() throws EngineException_;called,when,our,engine,is,using,too,much,heap,and,should,move,buffered,indexed,deleted,documents,to,disk;public,abstract,void,write,indexing,buffer,throws,engine,exception
Engine -> public abstract void writeIndexingBuffer() throws EngineException_;1551126708;Called when our engine is using too much heap and should move buffered indexed/deleted documents to disk.;public abstract void writeIndexingBuffer() throws EngineException_;called,when,our,engine,is,using,too,much,heap,and,should,move,buffered,indexed,deleted,documents,to,disk;public,abstract,void,write,indexing,buffer,throws,engine,exception
Engine -> public long getLastSyncedGlobalCheckpoint();1524684173;Returns the latest global checkpoint value that has been persisted in the underlying storage (i.e. translog's checkpoint);public long getLastSyncedGlobalCheckpoint() {_        return getTranslog().getLastSyncedGlobalCheckpoint()__    };returns,the,latest,global,checkpoint,value,that,has,been,persisted,in,the,underlying,storage,i,e,translog,s,checkpoint;public,long,get,last,synced,global,checkpoint,return,get,translog,get,last,synced,global,checkpoint
Engine -> public long getLastSyncedGlobalCheckpoint();1525162917;Returns the latest global checkpoint value that has been persisted in the underlying storage (i.e. translog's checkpoint);public long getLastSyncedGlobalCheckpoint() {_        return getTranslog().getLastSyncedGlobalCheckpoint()__    };returns,the,latest,global,checkpoint,value,that,has,been,persisted,in,the,underlying,storage,i,e,translog,s,checkpoint;public,long,get,last,synced,global,checkpoint,return,get,translog,get,last,synced,global,checkpoint
Engine -> public long getLastSyncedGlobalCheckpoint();1525334055;Returns the latest global checkpoint value that has been persisted in the underlying storage (i.e. translog's checkpoint);public long getLastSyncedGlobalCheckpoint() {_        return getTranslog().getLastSyncedGlobalCheckpoint()__    };returns,the,latest,global,checkpoint,value,that,has,been,persisted,in,the,underlying,storage,i,e,translog,s,checkpoint;public,long,get,last,synced,global,checkpoint,return,get,translog,get,last,synced,global,checkpoint
Engine -> public long getLastSyncedGlobalCheckpoint();1527583663;Returns the latest global checkpoint value that has been persisted in the underlying storage (i.e. translog's checkpoint);public long getLastSyncedGlobalCheckpoint() {_        return getTranslog().getLastSyncedGlobalCheckpoint()__    };returns,the,latest,global,checkpoint,value,that,has,been,persisted,in,the,underlying,storage,i,e,translog,s,checkpoint;public,long,get,last,synced,global,checkpoint,return,get,translog,get,last,synced,global,checkpoint
Engine -> public long getLastSyncedGlobalCheckpoint();1528706846;Returns the latest global checkpoint value that has been persisted in the underlying storage (i.e. translog's checkpoint);public long getLastSyncedGlobalCheckpoint() {_        return getTranslog().getLastSyncedGlobalCheckpoint()__    };returns,the,latest,global,checkpoint,value,that,has,been,persisted,in,the,underlying,storage,i,e,translog,s,checkpoint;public,long,get,last,synced,global,checkpoint,return,get,translog,get,last,synced,global,checkpoint
Engine -> public abstract Translog.Snapshot readHistoryOperations(String source,                                                                 MapperService mapperService, long startingSeqNo) throws IOException_;1542697754;Creates a new history snapshot for reading operations since {@code startingSeqNo} (inclusive)._The returned snapshot can be retrieved from either Lucene index or translog files.;public abstract Translog.Snapshot readHistoryOperations(String source,_                                                                MapperService mapperService, long startingSeqNo) throws IOException_;creates,a,new,history,snapshot,for,reading,operations,since,code,starting,seq,no,inclusive,the,returned,snapshot,can,be,retrieved,from,either,lucene,index,or,translog,files;public,abstract,translog,snapshot,read,history,operations,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract Translog.Snapshot readHistoryOperations(String source,                                                                 MapperService mapperService, long startingSeqNo) throws IOException_;1543047942;Creates a new history snapshot for reading operations since {@code startingSeqNo} (inclusive)._The returned snapshot can be retrieved from either Lucene index or translog files.;public abstract Translog.Snapshot readHistoryOperations(String source,_                                                                MapperService mapperService, long startingSeqNo) throws IOException_;creates,a,new,history,snapshot,for,reading,operations,since,code,starting,seq,no,inclusive,the,returned,snapshot,can,be,retrieved,from,either,lucene,index,or,translog,files;public,abstract,translog,snapshot,read,history,operations,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract Translog.Snapshot readHistoryOperations(String source,                                                                 MapperService mapperService, long startingSeqNo) throws IOException_;1544545090;Creates a new history snapshot for reading operations since {@code startingSeqNo} (inclusive)._The returned snapshot can be retrieved from either Lucene index or translog files.;public abstract Translog.Snapshot readHistoryOperations(String source,_                                                                MapperService mapperService, long startingSeqNo) throws IOException_;creates,a,new,history,snapshot,for,reading,operations,since,code,starting,seq,no,inclusive,the,returned,snapshot,can,be,retrieved,from,either,lucene,index,or,translog,files;public,abstract,translog,snapshot,read,history,operations,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract Translog.Snapshot readHistoryOperations(String source,                                                                 MapperService mapperService, long startingSeqNo) throws IOException_;1544684920;Creates a new history snapshot for reading operations since {@code startingSeqNo} (inclusive)._The returned snapshot can be retrieved from either Lucene index or translog files.;public abstract Translog.Snapshot readHistoryOperations(String source,_                                                                MapperService mapperService, long startingSeqNo) throws IOException_;creates,a,new,history,snapshot,for,reading,operations,since,code,starting,seq,no,inclusive,the,returned,snapshot,can,be,retrieved,from,either,lucene,index,or,translog,files;public,abstract,translog,snapshot,read,history,operations,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract Translog.Snapshot readHistoryOperations(String source,                                                                 MapperService mapperService, long startingSeqNo) throws IOException_;1545140118;Creates a new history snapshot for reading operations since {@code startingSeqNo} (inclusive)._The returned snapshot can be retrieved from either Lucene index or translog files.;public abstract Translog.Snapshot readHistoryOperations(String source,_                                                                MapperService mapperService, long startingSeqNo) throws IOException_;creates,a,new,history,snapshot,for,reading,operations,since,code,starting,seq,no,inclusive,the,returned,snapshot,can,be,retrieved,from,either,lucene,index,or,translog,files;public,abstract,translog,snapshot,read,history,operations,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract Translog.Snapshot readHistoryOperations(String source,                                                                 MapperService mapperService, long startingSeqNo) throws IOException_;1545221705;Creates a new history snapshot for reading operations since {@code startingSeqNo} (inclusive)._The returned snapshot can be retrieved from either Lucene index or translog files.;public abstract Translog.Snapshot readHistoryOperations(String source,_                                                                MapperService mapperService, long startingSeqNo) throws IOException_;creates,a,new,history,snapshot,for,reading,operations,since,code,starting,seq,no,inclusive,the,returned,snapshot,can,be,retrieved,from,either,lucene,index,or,translog,files;public,abstract,translog,snapshot,read,history,operations,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract Translog.Snapshot readHistoryOperations(String source,                                                                 MapperService mapperService, long startingSeqNo) throws IOException_;1547332999;Creates a new history snapshot for reading operations since {@code startingSeqNo} (inclusive)._The returned snapshot can be retrieved from either Lucene index or translog files.;public abstract Translog.Snapshot readHistoryOperations(String source,_                                                                MapperService mapperService, long startingSeqNo) throws IOException_;creates,a,new,history,snapshot,for,reading,operations,since,code,starting,seq,no,inclusive,the,returned,snapshot,can,be,retrieved,from,either,lucene,index,or,translog,files;public,abstract,translog,snapshot,read,history,operations,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract Translog.Snapshot readHistoryOperations(String source,                                                                 MapperService mapperService, long startingSeqNo) throws IOException_;1548771485;Creates a new history snapshot for reading operations since {@code startingSeqNo} (inclusive)._The returned snapshot can be retrieved from either Lucene index or translog files.;public abstract Translog.Snapshot readHistoryOperations(String source,_                                                                MapperService mapperService, long startingSeqNo) throws IOException_;creates,a,new,history,snapshot,for,reading,operations,since,code,starting,seq,no,inclusive,the,returned,snapshot,can,be,retrieved,from,either,lucene,index,or,translog,files;public,abstract,translog,snapshot,read,history,operations,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract Translog.Snapshot readHistoryOperations(String source,                                                                 MapperService mapperService, long startingSeqNo) throws IOException_;1549891630;Creates a new history snapshot for reading operations since {@code startingSeqNo} (inclusive)._The returned snapshot can be retrieved from either Lucene index or translog files.;public abstract Translog.Snapshot readHistoryOperations(String source,_                                                                MapperService mapperService, long startingSeqNo) throws IOException_;creates,a,new,history,snapshot,for,reading,operations,since,code,starting,seq,no,inclusive,the,returned,snapshot,can,be,retrieved,from,either,lucene,index,or,translog,files;public,abstract,translog,snapshot,read,history,operations,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract Translog.Snapshot readHistoryOperations(String source,                                                                 MapperService mapperService, long startingSeqNo) throws IOException_;1549975032;Creates a new history snapshot for reading operations since {@code startingSeqNo} (inclusive)._The returned snapshot can be retrieved from either Lucene index or translog files.;public abstract Translog.Snapshot readHistoryOperations(String source,_                                                                MapperService mapperService, long startingSeqNo) throws IOException_;creates,a,new,history,snapshot,for,reading,operations,since,code,starting,seq,no,inclusive,the,returned,snapshot,can,be,retrieved,from,either,lucene,index,or,translog,files;public,abstract,translog,snapshot,read,history,operations,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract Translog.Snapshot readHistoryOperations(String source,                                                                 MapperService mapperService, long startingSeqNo) throws IOException_;1550220204;Creates a new history snapshot for reading operations since {@code startingSeqNo} (inclusive)._The returned snapshot can be retrieved from either Lucene index or translog files.;public abstract Translog.Snapshot readHistoryOperations(String source,_                                                                MapperService mapperService, long startingSeqNo) throws IOException_;creates,a,new,history,snapshot,for,reading,operations,since,code,starting,seq,no,inclusive,the,returned,snapshot,can,be,retrieved,from,either,lucene,index,or,translog,files;public,abstract,translog,snapshot,read,history,operations,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract Translog.Snapshot readHistoryOperations(String source,                                                                 MapperService mapperService, long startingSeqNo) throws IOException_;1550526771;Creates a new history snapshot for reading operations since {@code startingSeqNo} (inclusive)._The returned snapshot can be retrieved from either Lucene index or translog files.;public abstract Translog.Snapshot readHistoryOperations(String source,_                                                                MapperService mapperService, long startingSeqNo) throws IOException_;creates,a,new,history,snapshot,for,reading,operations,since,code,starting,seq,no,inclusive,the,returned,snapshot,can,be,retrieved,from,either,lucene,index,or,translog,files;public,abstract,translog,snapshot,read,history,operations,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract Translog.Snapshot readHistoryOperations(String source,                                                                 MapperService mapperService, long startingSeqNo) throws IOException_;1551110274;Creates a new history snapshot for reading operations since {@code startingSeqNo} (inclusive)._The returned snapshot can be retrieved from either Lucene index or translog files.;public abstract Translog.Snapshot readHistoryOperations(String source,_                                                                MapperService mapperService, long startingSeqNo) throws IOException_;creates,a,new,history,snapshot,for,reading,operations,since,code,starting,seq,no,inclusive,the,returned,snapshot,can,be,retrieved,from,either,lucene,index,or,translog,files;public,abstract,translog,snapshot,read,history,operations,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract Translog.Snapshot readHistoryOperations(String source,                                                                 MapperService mapperService, long startingSeqNo) throws IOException_;1551126708;Creates a new history snapshot for reading operations since {@code startingSeqNo} (inclusive)._The returned snapshot can be retrieved from either Lucene index or translog files.;public abstract Translog.Snapshot readHistoryOperations(String source,_                                                                MapperService mapperService, long startingSeqNo) throws IOException_;creates,a,new,history,snapshot,for,reading,operations,since,code,starting,seq,no,inclusive,the,returned,snapshot,can,be,retrieved,from,either,lucene,index,or,translog,files;public,abstract,translog,snapshot,read,history,operations,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> Operation -> public long startTime();1524684173;Returns operation start time in nanoseconds.;public long startTime() {_            return this.startTime__        };returns,operation,start,time,in,nanoseconds;public,long,start,time,return,this,start,time
Engine -> Operation -> public long startTime();1525162917;Returns operation start time in nanoseconds.;public long startTime() {_            return this.startTime__        };returns,operation,start,time,in,nanoseconds;public,long,start,time,return,this,start,time
Engine -> Operation -> public long startTime();1525334055;Returns operation start time in nanoseconds.;public long startTime() {_            return this.startTime__        };returns,operation,start,time,in,nanoseconds;public,long,start,time,return,this,start,time
Engine -> Operation -> public long startTime();1527583663;Returns operation start time in nanoseconds.;public long startTime() {_            return this.startTime__        };returns,operation,start,time,in,nanoseconds;public,long,start,time,return,this,start,time
Engine -> Operation -> public long startTime();1528706846;Returns operation start time in nanoseconds.;public long startTime() {_            return this.startTime__        };returns,operation,start,time,in,nanoseconds;public,long,start,time,return,this,start,time
Engine -> Operation -> public long startTime();1528762805;Returns operation start time in nanoseconds.;public long startTime() {_            return this.startTime__        };returns,operation,start,time,in,nanoseconds;public,long,start,time,return,this,start,time
Engine -> Operation -> public long startTime();1531910483;Returns operation start time in nanoseconds.;public long startTime() {_            return this.startTime__        };returns,operation,start,time,in,nanoseconds;public,long,start,time,return,this,start,time
Engine -> Operation -> public long startTime();1532685069;Returns operation start time in nanoseconds.;public long startTime() {_            return this.startTime__        };returns,operation,start,time,in,nanoseconds;public,long,start,time,return,this,start,time
Engine -> Operation -> public long startTime();1533295538;Returns operation start time in nanoseconds.;public long startTime() {_            return this.startTime__        };returns,operation,start,time,in,nanoseconds;public,long,start,time,return,this,start,time
Engine -> Operation -> public long startTime();1535046779;Returns operation start time in nanoseconds.;public long startTime() {_            return this.startTime__        };returns,operation,start,time,in,nanoseconds;public,long,start,time,return,this,start,time
Engine -> Operation -> public long startTime();1535723122;Returns operation start time in nanoseconds.;public long startTime() {_            return this.startTime__        };returns,operation,start,time,in,nanoseconds;public,long,start,time,return,this,start,time
Engine -> Operation -> public long startTime();1535965276;Returns operation start time in nanoseconds.;public long startTime() {_            return this.startTime__        };returns,operation,start,time,in,nanoseconds;public,long,start,time,return,this,start,time
Engine -> Operation -> public long startTime();1536314350;Returns operation start time in nanoseconds.;public long startTime() {_            return this.startTime__        };returns,operation,start,time,in,nanoseconds;public,long,start,time,return,this,start,time
Engine -> Operation -> public long startTime();1536828374;Returns operation start time in nanoseconds.;public long startTime() {_            return this.startTime__        };returns,operation,start,time,in,nanoseconds;public,long,start,time,return,this,start,time
Engine -> Operation -> public long startTime();1537371806;Returns operation start time in nanoseconds.;public long startTime() {_            return this.startTime__        };returns,operation,start,time,in,nanoseconds;public,long,start,time,return,this,start,time
Engine -> Operation -> public long startTime();1537806831;Returns operation start time in nanoseconds.;public long startTime() {_            return this.startTime__        };returns,operation,start,time,in,nanoseconds;public,long,start,time,return,this,start,time
Engine -> Operation -> public long startTime();1538067637;Returns operation start time in nanoseconds.;public long startTime() {_            return this.startTime__        };returns,operation,start,time,in,nanoseconds;public,long,start,time,return,this,start,time
Engine -> Operation -> public long startTime();1538424609;Returns operation start time in nanoseconds.;public long startTime() {_            return this.startTime__        };returns,operation,start,time,in,nanoseconds;public,long,start,time,return,this,start,time
Engine -> Operation -> public long startTime();1539723533;Returns operation start time in nanoseconds.;public long startTime() {_            return this.startTime__        };returns,operation,start,time,in,nanoseconds;public,long,start,time,return,this,start,time
Engine -> Operation -> public long startTime();1541618615;Returns operation start time in nanoseconds.;public long startTime() {_            return this.startTime__        };returns,operation,start,time,in,nanoseconds;public,long,start,time,return,this,start,time
Engine -> Operation -> public long startTime();1542697754;Returns operation start time in nanoseconds.;public long startTime() {_            return this.startTime__        };returns,operation,start,time,in,nanoseconds;public,long,start,time,return,this,start,time
Engine -> Operation -> public long startTime();1543047942;Returns operation start time in nanoseconds.;public long startTime() {_            return this.startTime__        };returns,operation,start,time,in,nanoseconds;public,long,start,time,return,this,start,time
Engine -> Operation -> public long startTime();1544545090;Returns operation start time in nanoseconds.;public long startTime() {_            return this.startTime__        };returns,operation,start,time,in,nanoseconds;public,long,start,time,return,this,start,time
Engine -> Operation -> public long startTime();1544684920;Returns operation start time in nanoseconds.;public long startTime() {_            return this.startTime__        };returns,operation,start,time,in,nanoseconds;public,long,start,time,return,this,start,time
Engine -> Operation -> public long startTime();1545140118;Returns operation start time in nanoseconds.;public long startTime() {_            return this.startTime__        };returns,operation,start,time,in,nanoseconds;public,long,start,time,return,this,start,time
Engine -> Operation -> public long startTime();1545221705;Returns operation start time in nanoseconds.;public long startTime() {_            return this.startTime__        };returns,operation,start,time,in,nanoseconds;public,long,start,time,return,this,start,time
Engine -> Operation -> public long startTime();1547332999;Returns operation start time in nanoseconds.;public long startTime() {_            return this.startTime__        };returns,operation,start,time,in,nanoseconds;public,long,start,time,return,this,start,time
Engine -> Operation -> public long startTime();1548771485;Returns operation start time in nanoseconds.;public long startTime() {_            return this.startTime__        };returns,operation,start,time,in,nanoseconds;public,long,start,time,return,this,start,time
Engine -> Operation -> public long startTime();1549891630;Returns operation start time in nanoseconds.;public long startTime() {_            return this.startTime__        };returns,operation,start,time,in,nanoseconds;public,long,start,time,return,this,start,time
Engine -> Operation -> public long startTime();1549975032;Returns operation start time in nanoseconds.;public long startTime() {_            return this.startTime__        };returns,operation,start,time,in,nanoseconds;public,long,start,time,return,this,start,time
Engine -> Operation -> public long startTime();1550220204;Returns operation start time in nanoseconds.;public long startTime() {_            return this.startTime__        };returns,operation,start,time,in,nanoseconds;public,long,start,time,return,this,start,time
Engine -> Operation -> public long startTime();1550526771;Returns operation start time in nanoseconds.;public long startTime() {_            return this.startTime__        };returns,operation,start,time,in,nanoseconds;public,long,start,time,return,this,start,time
Engine -> Operation -> public long startTime();1551110274;Returns operation start time in nanoseconds.;public long startTime() {_            return this.startTime__        };returns,operation,start,time,in,nanoseconds;public,long,start,time,return,this,start,time
Engine -> Operation -> public long startTime();1551126708;Returns operation start time in nanoseconds.;public long startTime() {_            return this.startTime__        };returns,operation,start,time,in,nanoseconds;public,long,start,time,return,this,start,time
Engine -> public abstract void activateThrottling()_;1524684173;Request that this engine throttle incoming indexing requests to one thread.  Must be matched by a later call to {@link #deactivateThrottling()}.;public abstract void activateThrottling()_;request,that,this,engine,throttle,incoming,indexing,requests,to,one,thread,must,be,matched,by,a,later,call,to,link,deactivate,throttling;public,abstract,void,activate,throttling
Engine -> public abstract void activateThrottling()_;1525162917;Request that this engine throttle incoming indexing requests to one thread.  Must be matched by a later call to {@link #deactivateThrottling()}.;public abstract void activateThrottling()_;request,that,this,engine,throttle,incoming,indexing,requests,to,one,thread,must,be,matched,by,a,later,call,to,link,deactivate,throttling;public,abstract,void,activate,throttling
Engine -> public abstract void activateThrottling()_;1525334055;Request that this engine throttle incoming indexing requests to one thread.  Must be matched by a later call to {@link #deactivateThrottling()}.;public abstract void activateThrottling()_;request,that,this,engine,throttle,incoming,indexing,requests,to,one,thread,must,be,matched,by,a,later,call,to,link,deactivate,throttling;public,abstract,void,activate,throttling
Engine -> public abstract void activateThrottling()_;1527583663;Request that this engine throttle incoming indexing requests to one thread.  Must be matched by a later call to {@link #deactivateThrottling()}.;public abstract void activateThrottling()_;request,that,this,engine,throttle,incoming,indexing,requests,to,one,thread,must,be,matched,by,a,later,call,to,link,deactivate,throttling;public,abstract,void,activate,throttling
Engine -> public abstract void activateThrottling()_;1528706846;Request that this engine throttle incoming indexing requests to one thread.  Must be matched by a later call to {@link #deactivateThrottling()}.;public abstract void activateThrottling()_;request,that,this,engine,throttle,incoming,indexing,requests,to,one,thread,must,be,matched,by,a,later,call,to,link,deactivate,throttling;public,abstract,void,activate,throttling
Engine -> public abstract void activateThrottling()_;1528762805;Request that this engine throttle incoming indexing requests to one thread.  Must be matched by a later call to {@link #deactivateThrottling()}.;public abstract void activateThrottling()_;request,that,this,engine,throttle,incoming,indexing,requests,to,one,thread,must,be,matched,by,a,later,call,to,link,deactivate,throttling;public,abstract,void,activate,throttling
Engine -> public abstract void activateThrottling()_;1531910483;Request that this engine throttle incoming indexing requests to one thread.  Must be matched by a later call to {@link #deactivateThrottling()}.;public abstract void activateThrottling()_;request,that,this,engine,throttle,incoming,indexing,requests,to,one,thread,must,be,matched,by,a,later,call,to,link,deactivate,throttling;public,abstract,void,activate,throttling
Engine -> public abstract void activateThrottling()_;1532685069;Request that this engine throttle incoming indexing requests to one thread.  Must be matched by a later call to {@link #deactivateThrottling()}.;public abstract void activateThrottling()_;request,that,this,engine,throttle,incoming,indexing,requests,to,one,thread,must,be,matched,by,a,later,call,to,link,deactivate,throttling;public,abstract,void,activate,throttling
Engine -> public abstract void activateThrottling()_;1533295538;Request that this engine throttle incoming indexing requests to one thread.  Must be matched by a later call to {@link #deactivateThrottling()}.;public abstract void activateThrottling()_;request,that,this,engine,throttle,incoming,indexing,requests,to,one,thread,must,be,matched,by,a,later,call,to,link,deactivate,throttling;public,abstract,void,activate,throttling
Engine -> public abstract void activateThrottling()_;1535046779;Request that this engine throttle incoming indexing requests to one thread.  Must be matched by a later call to {@link #deactivateThrottling()}.;public abstract void activateThrottling()_;request,that,this,engine,throttle,incoming,indexing,requests,to,one,thread,must,be,matched,by,a,later,call,to,link,deactivate,throttling;public,abstract,void,activate,throttling
Engine -> public abstract void activateThrottling()_;1535723122;Request that this engine throttle incoming indexing requests to one thread.  Must be matched by a later call to {@link #deactivateThrottling()}.;public abstract void activateThrottling()_;request,that,this,engine,throttle,incoming,indexing,requests,to,one,thread,must,be,matched,by,a,later,call,to,link,deactivate,throttling;public,abstract,void,activate,throttling
Engine -> public abstract void activateThrottling()_;1535965276;Request that this engine throttle incoming indexing requests to one thread.  Must be matched by a later call to {@link #deactivateThrottling()}.;public abstract void activateThrottling()_;request,that,this,engine,throttle,incoming,indexing,requests,to,one,thread,must,be,matched,by,a,later,call,to,link,deactivate,throttling;public,abstract,void,activate,throttling
Engine -> public abstract void activateThrottling()_;1536314350;Request that this engine throttle incoming indexing requests to one thread.  Must be matched by a later call to {@link #deactivateThrottling()}.;public abstract void activateThrottling()_;request,that,this,engine,throttle,incoming,indexing,requests,to,one,thread,must,be,matched,by,a,later,call,to,link,deactivate,throttling;public,abstract,void,activate,throttling
Engine -> public abstract void activateThrottling()_;1536828374;Request that this engine throttle incoming indexing requests to one thread.  Must be matched by a later call to {@link #deactivateThrottling()}.;public abstract void activateThrottling()_;request,that,this,engine,throttle,incoming,indexing,requests,to,one,thread,must,be,matched,by,a,later,call,to,link,deactivate,throttling;public,abstract,void,activate,throttling
Engine -> public abstract void activateThrottling()_;1537371806;Request that this engine throttle incoming indexing requests to one thread.  Must be matched by a later call to {@link #deactivateThrottling()}.;public abstract void activateThrottling()_;request,that,this,engine,throttle,incoming,indexing,requests,to,one,thread,must,be,matched,by,a,later,call,to,link,deactivate,throttling;public,abstract,void,activate,throttling
Engine -> public abstract void activateThrottling()_;1537806831;Request that this engine throttle incoming indexing requests to one thread.  Must be matched by a later call to {@link #deactivateThrottling()}.;public abstract void activateThrottling()_;request,that,this,engine,throttle,incoming,indexing,requests,to,one,thread,must,be,matched,by,a,later,call,to,link,deactivate,throttling;public,abstract,void,activate,throttling
Engine -> public abstract void activateThrottling()_;1538067637;Request that this engine throttle incoming indexing requests to one thread.  Must be matched by a later call to {@link #deactivateThrottling()}.;public abstract void activateThrottling()_;request,that,this,engine,throttle,incoming,indexing,requests,to,one,thread,must,be,matched,by,a,later,call,to,link,deactivate,throttling;public,abstract,void,activate,throttling
Engine -> public abstract void activateThrottling()_;1538424609;Request that this engine throttle incoming indexing requests to one thread.  Must be matched by a later call to {@link #deactivateThrottling()}.;public abstract void activateThrottling()_;request,that,this,engine,throttle,incoming,indexing,requests,to,one,thread,must,be,matched,by,a,later,call,to,link,deactivate,throttling;public,abstract,void,activate,throttling
Engine -> public abstract void activateThrottling()_;1539723533;Request that this engine throttle incoming indexing requests to one thread.  Must be matched by a later call to {@link #deactivateThrottling()}.;public abstract void activateThrottling()_;request,that,this,engine,throttle,incoming,indexing,requests,to,one,thread,must,be,matched,by,a,later,call,to,link,deactivate,throttling;public,abstract,void,activate,throttling
Engine -> public abstract void activateThrottling()_;1541618615;Request that this engine throttle incoming indexing requests to one thread.  Must be matched by a later call to {@link #deactivateThrottling()}.;public abstract void activateThrottling()_;request,that,this,engine,throttle,incoming,indexing,requests,to,one,thread,must,be,matched,by,a,later,call,to,link,deactivate,throttling;public,abstract,void,activate,throttling
Engine -> public abstract void activateThrottling()_;1542697754;Request that this engine throttle incoming indexing requests to one thread._Must be matched by a later call to {@link #deactivateThrottling()}.;public abstract void activateThrottling()_;request,that,this,engine,throttle,incoming,indexing,requests,to,one,thread,must,be,matched,by,a,later,call,to,link,deactivate,throttling;public,abstract,void,activate,throttling
Engine -> public abstract void activateThrottling()_;1543047942;Request that this engine throttle incoming indexing requests to one thread._Must be matched by a later call to {@link #deactivateThrottling()}.;public abstract void activateThrottling()_;request,that,this,engine,throttle,incoming,indexing,requests,to,one,thread,must,be,matched,by,a,later,call,to,link,deactivate,throttling;public,abstract,void,activate,throttling
Engine -> public abstract void activateThrottling()_;1544545090;Request that this engine throttle incoming indexing requests to one thread._Must be matched by a later call to {@link #deactivateThrottling()}.;public abstract void activateThrottling()_;request,that,this,engine,throttle,incoming,indexing,requests,to,one,thread,must,be,matched,by,a,later,call,to,link,deactivate,throttling;public,abstract,void,activate,throttling
Engine -> public abstract void activateThrottling()_;1544684920;Request that this engine throttle incoming indexing requests to one thread._Must be matched by a later call to {@link #deactivateThrottling()}.;public abstract void activateThrottling()_;request,that,this,engine,throttle,incoming,indexing,requests,to,one,thread,must,be,matched,by,a,later,call,to,link,deactivate,throttling;public,abstract,void,activate,throttling
Engine -> public abstract void activateThrottling()_;1545140118;Request that this engine throttle incoming indexing requests to one thread._Must be matched by a later call to {@link #deactivateThrottling()}.;public abstract void activateThrottling()_;request,that,this,engine,throttle,incoming,indexing,requests,to,one,thread,must,be,matched,by,a,later,call,to,link,deactivate,throttling;public,abstract,void,activate,throttling
Engine -> public abstract void activateThrottling()_;1545221705;Request that this engine throttle incoming indexing requests to one thread._Must be matched by a later call to {@link #deactivateThrottling()}.;public abstract void activateThrottling()_;request,that,this,engine,throttle,incoming,indexing,requests,to,one,thread,must,be,matched,by,a,later,call,to,link,deactivate,throttling;public,abstract,void,activate,throttling
Engine -> public abstract void activateThrottling()_;1547332999;Request that this engine throttle incoming indexing requests to one thread._Must be matched by a later call to {@link #deactivateThrottling()}.;public abstract void activateThrottling()_;request,that,this,engine,throttle,incoming,indexing,requests,to,one,thread,must,be,matched,by,a,later,call,to,link,deactivate,throttling;public,abstract,void,activate,throttling
Engine -> public abstract void activateThrottling()_;1548771485;Request that this engine throttle incoming indexing requests to one thread._Must be matched by a later call to {@link #deactivateThrottling()}.;public abstract void activateThrottling()_;request,that,this,engine,throttle,incoming,indexing,requests,to,one,thread,must,be,matched,by,a,later,call,to,link,deactivate,throttling;public,abstract,void,activate,throttling
Engine -> public abstract void activateThrottling()_;1549891630;Request that this engine throttle incoming indexing requests to one thread._Must be matched by a later call to {@link #deactivateThrottling()}.;public abstract void activateThrottling()_;request,that,this,engine,throttle,incoming,indexing,requests,to,one,thread,must,be,matched,by,a,later,call,to,link,deactivate,throttling;public,abstract,void,activate,throttling
Engine -> public abstract void activateThrottling()_;1549975032;Request that this engine throttle incoming indexing requests to one thread._Must be matched by a later call to {@link #deactivateThrottling()}.;public abstract void activateThrottling()_;request,that,this,engine,throttle,incoming,indexing,requests,to,one,thread,must,be,matched,by,a,later,call,to,link,deactivate,throttling;public,abstract,void,activate,throttling
Engine -> public abstract void activateThrottling()_;1550220204;Request that this engine throttle incoming indexing requests to one thread._Must be matched by a later call to {@link #deactivateThrottling()}.;public abstract void activateThrottling()_;request,that,this,engine,throttle,incoming,indexing,requests,to,one,thread,must,be,matched,by,a,later,call,to,link,deactivate,throttling;public,abstract,void,activate,throttling
Engine -> public abstract void activateThrottling()_;1550526771;Request that this engine throttle incoming indexing requests to one thread._Must be matched by a later call to {@link #deactivateThrottling()}.;public abstract void activateThrottling()_;request,that,this,engine,throttle,incoming,indexing,requests,to,one,thread,must,be,matched,by,a,later,call,to,link,deactivate,throttling;public,abstract,void,activate,throttling
Engine -> public abstract void activateThrottling()_;1551110274;Request that this engine throttle incoming indexing requests to one thread._Must be matched by a later call to {@link #deactivateThrottling()}.;public abstract void activateThrottling()_;request,that,this,engine,throttle,incoming,indexing,requests,to,one,thread,must,be,matched,by,a,later,call,to,link,deactivate,throttling;public,abstract,void,activate,throttling
Engine -> public abstract void activateThrottling()_;1551126708;Request that this engine throttle incoming indexing requests to one thread._Must be matched by a later call to {@link #deactivateThrottling()}.;public abstract void activateThrottling()_;request,that,this,engine,throttle,incoming,indexing,requests,to,one,thread,must,be,matched,by,a,later,call,to,link,deactivate,throttling;public,abstract,void,activate,throttling
Engine -> public abstract void trimUnreferencedTranslogFiles() throws EngineException_;1528706846;checks and removes translog files that no longer need to be retained. See_{@link org.elasticsearch.index.translog.TranslogDeletionPolicy} for details;public abstract void trimUnreferencedTranslogFiles() throws EngineException_;checks,and,removes,translog,files,that,no,longer,need,to,be,retained,see,link,org,elasticsearch,index,translog,translog,deletion,policy,for,details;public,abstract,void,trim,unreferenced,translog,files,throws,engine,exception
Engine -> public abstract void trimUnreferencedTranslogFiles() throws EngineException_;1528762805;checks and removes translog files that no longer need to be retained. See_{@link org.elasticsearch.index.translog.TranslogDeletionPolicy} for details;public abstract void trimUnreferencedTranslogFiles() throws EngineException_;checks,and,removes,translog,files,that,no,longer,need,to,be,retained,see,link,org,elasticsearch,index,translog,translog,deletion,policy,for,details;public,abstract,void,trim,unreferenced,translog,files,throws,engine,exception
Engine -> public abstract void trimUnreferencedTranslogFiles() throws EngineException_;1531910483;checks and removes translog files that no longer need to be retained. See_{@link org.elasticsearch.index.translog.TranslogDeletionPolicy} for details;public abstract void trimUnreferencedTranslogFiles() throws EngineException_;checks,and,removes,translog,files,that,no,longer,need,to,be,retained,see,link,org,elasticsearch,index,translog,translog,deletion,policy,for,details;public,abstract,void,trim,unreferenced,translog,files,throws,engine,exception
Engine -> public abstract void trimUnreferencedTranslogFiles() throws EngineException_;1532685069;checks and removes translog files that no longer need to be retained. See_{@link org.elasticsearch.index.translog.TranslogDeletionPolicy} for details;public abstract void trimUnreferencedTranslogFiles() throws EngineException_;checks,and,removes,translog,files,that,no,longer,need,to,be,retained,see,link,org,elasticsearch,index,translog,translog,deletion,policy,for,details;public,abstract,void,trim,unreferenced,translog,files,throws,engine,exception
Engine -> public abstract void trimUnreferencedTranslogFiles() throws EngineException_;1533295538;checks and removes translog files that no longer need to be retained. See_{@link org.elasticsearch.index.translog.TranslogDeletionPolicy} for details;public abstract void trimUnreferencedTranslogFiles() throws EngineException_;checks,and,removes,translog,files,that,no,longer,need,to,be,retained,see,link,org,elasticsearch,index,translog,translog,deletion,policy,for,details;public,abstract,void,trim,unreferenced,translog,files,throws,engine,exception
Engine -> public abstract void trimUnreferencedTranslogFiles() throws EngineException_;1535046779;checks and removes translog files that no longer need to be retained. See_{@link org.elasticsearch.index.translog.TranslogDeletionPolicy} for details;public abstract void trimUnreferencedTranslogFiles() throws EngineException_;checks,and,removes,translog,files,that,no,longer,need,to,be,retained,see,link,org,elasticsearch,index,translog,translog,deletion,policy,for,details;public,abstract,void,trim,unreferenced,translog,files,throws,engine,exception
Engine -> public abstract void trimUnreferencedTranslogFiles() throws EngineException_;1535723122;checks and removes translog files that no longer need to be retained. See_{@link org.elasticsearch.index.translog.TranslogDeletionPolicy} for details;public abstract void trimUnreferencedTranslogFiles() throws EngineException_;checks,and,removes,translog,files,that,no,longer,need,to,be,retained,see,link,org,elasticsearch,index,translog,translog,deletion,policy,for,details;public,abstract,void,trim,unreferenced,translog,files,throws,engine,exception
Engine -> public abstract void trimUnreferencedTranslogFiles() throws EngineException_;1535965276;checks and removes translog files that no longer need to be retained. See_{@link org.elasticsearch.index.translog.TranslogDeletionPolicy} for details;public abstract void trimUnreferencedTranslogFiles() throws EngineException_;checks,and,removes,translog,files,that,no,longer,need,to,be,retained,see,link,org,elasticsearch,index,translog,translog,deletion,policy,for,details;public,abstract,void,trim,unreferenced,translog,files,throws,engine,exception
Engine -> public abstract void trimUnreferencedTranslogFiles() throws EngineException_;1536314350;checks and removes translog files that no longer need to be retained. See_{@link org.elasticsearch.index.translog.TranslogDeletionPolicy} for details;public abstract void trimUnreferencedTranslogFiles() throws EngineException_;checks,and,removes,translog,files,that,no,longer,need,to,be,retained,see,link,org,elasticsearch,index,translog,translog,deletion,policy,for,details;public,abstract,void,trim,unreferenced,translog,files,throws,engine,exception
Engine -> public abstract void trimUnreferencedTranslogFiles() throws EngineException_;1536828374;checks and removes translog files that no longer need to be retained. See_{@link org.elasticsearch.index.translog.TranslogDeletionPolicy} for details;public abstract void trimUnreferencedTranslogFiles() throws EngineException_;checks,and,removes,translog,files,that,no,longer,need,to,be,retained,see,link,org,elasticsearch,index,translog,translog,deletion,policy,for,details;public,abstract,void,trim,unreferenced,translog,files,throws,engine,exception
Engine -> public abstract void trimUnreferencedTranslogFiles() throws EngineException_;1537371806;checks and removes translog files that no longer need to be retained. See_{@link org.elasticsearch.index.translog.TranslogDeletionPolicy} for details;public abstract void trimUnreferencedTranslogFiles() throws EngineException_;checks,and,removes,translog,files,that,no,longer,need,to,be,retained,see,link,org,elasticsearch,index,translog,translog,deletion,policy,for,details;public,abstract,void,trim,unreferenced,translog,files,throws,engine,exception
Engine -> public abstract void trimUnreferencedTranslogFiles() throws EngineException_;1537806831;checks and removes translog files that no longer need to be retained. See_{@link org.elasticsearch.index.translog.TranslogDeletionPolicy} for details;public abstract void trimUnreferencedTranslogFiles() throws EngineException_;checks,and,removes,translog,files,that,no,longer,need,to,be,retained,see,link,org,elasticsearch,index,translog,translog,deletion,policy,for,details;public,abstract,void,trim,unreferenced,translog,files,throws,engine,exception
Engine -> public abstract void trimUnreferencedTranslogFiles() throws EngineException_;1538067637;checks and removes translog files that no longer need to be retained. See_{@link org.elasticsearch.index.translog.TranslogDeletionPolicy} for details;public abstract void trimUnreferencedTranslogFiles() throws EngineException_;checks,and,removes,translog,files,that,no,longer,need,to,be,retained,see,link,org,elasticsearch,index,translog,translog,deletion,policy,for,details;public,abstract,void,trim,unreferenced,translog,files,throws,engine,exception
Engine -> public abstract void trimUnreferencedTranslogFiles() throws EngineException_;1538424609;checks and removes translog files that no longer need to be retained. See_{@link org.elasticsearch.index.translog.TranslogDeletionPolicy} for details;public abstract void trimUnreferencedTranslogFiles() throws EngineException_;checks,and,removes,translog,files,that,no,longer,need,to,be,retained,see,link,org,elasticsearch,index,translog,translog,deletion,policy,for,details;public,abstract,void,trim,unreferenced,translog,files,throws,engine,exception
Engine -> public abstract void trimUnreferencedTranslogFiles() throws EngineException_;1539723533;checks and removes translog files that no longer need to be retained. See_{@link org.elasticsearch.index.translog.TranslogDeletionPolicy} for details;public abstract void trimUnreferencedTranslogFiles() throws EngineException_;checks,and,removes,translog,files,that,no,longer,need,to,be,retained,see,link,org,elasticsearch,index,translog,translog,deletion,policy,for,details;public,abstract,void,trim,unreferenced,translog,files,throws,engine,exception
Engine -> public abstract void trimUnreferencedTranslogFiles() throws EngineException_;1541618615;checks and removes translog files that no longer need to be retained. See_{@link org.elasticsearch.index.translog.TranslogDeletionPolicy} for details;public abstract void trimUnreferencedTranslogFiles() throws EngineException_;checks,and,removes,translog,files,that,no,longer,need,to,be,retained,see,link,org,elasticsearch,index,translog,translog,deletion,policy,for,details;public,abstract,void,trim,unreferenced,translog,files,throws,engine,exception
Engine -> public abstract void trimUnreferencedTranslogFiles() throws EngineException_;1542697754;checks and removes translog files that no longer need to be retained. See_{@link org.elasticsearch.index.translog.TranslogDeletionPolicy} for details;public abstract void trimUnreferencedTranslogFiles() throws EngineException_;checks,and,removes,translog,files,that,no,longer,need,to,be,retained,see,link,org,elasticsearch,index,translog,translog,deletion,policy,for,details;public,abstract,void,trim,unreferenced,translog,files,throws,engine,exception
Engine -> public abstract void trimUnreferencedTranslogFiles() throws EngineException_;1543047942;checks and removes translog files that no longer need to be retained. See_{@link org.elasticsearch.index.translog.TranslogDeletionPolicy} for details;public abstract void trimUnreferencedTranslogFiles() throws EngineException_;checks,and,removes,translog,files,that,no,longer,need,to,be,retained,see,link,org,elasticsearch,index,translog,translog,deletion,policy,for,details;public,abstract,void,trim,unreferenced,translog,files,throws,engine,exception
Engine -> public abstract void trimUnreferencedTranslogFiles() throws EngineException_;1544545090;checks and removes translog files that no longer need to be retained. See_{@link org.elasticsearch.index.translog.TranslogDeletionPolicy} for details;public abstract void trimUnreferencedTranslogFiles() throws EngineException_;checks,and,removes,translog,files,that,no,longer,need,to,be,retained,see,link,org,elasticsearch,index,translog,translog,deletion,policy,for,details;public,abstract,void,trim,unreferenced,translog,files,throws,engine,exception
Engine -> public abstract void trimUnreferencedTranslogFiles() throws EngineException_;1544684920;checks and removes translog files that no longer need to be retained. See_{@link org.elasticsearch.index.translog.TranslogDeletionPolicy} for details;public abstract void trimUnreferencedTranslogFiles() throws EngineException_;checks,and,removes,translog,files,that,no,longer,need,to,be,retained,see,link,org,elasticsearch,index,translog,translog,deletion,policy,for,details;public,abstract,void,trim,unreferenced,translog,files,throws,engine,exception
Engine -> public abstract void trimUnreferencedTranslogFiles() throws EngineException_;1545140118;checks and removes translog files that no longer need to be retained. See_{@link org.elasticsearch.index.translog.TranslogDeletionPolicy} for details;public abstract void trimUnreferencedTranslogFiles() throws EngineException_;checks,and,removes,translog,files,that,no,longer,need,to,be,retained,see,link,org,elasticsearch,index,translog,translog,deletion,policy,for,details;public,abstract,void,trim,unreferenced,translog,files,throws,engine,exception
Engine -> public abstract void trimUnreferencedTranslogFiles() throws EngineException_;1545221705;checks and removes translog files that no longer need to be retained. See_{@link org.elasticsearch.index.translog.TranslogDeletionPolicy} for details;public abstract void trimUnreferencedTranslogFiles() throws EngineException_;checks,and,removes,translog,files,that,no,longer,need,to,be,retained,see,link,org,elasticsearch,index,translog,translog,deletion,policy,for,details;public,abstract,void,trim,unreferenced,translog,files,throws,engine,exception
Engine -> public abstract void trimUnreferencedTranslogFiles() throws EngineException_;1547332999;checks and removes translog files that no longer need to be retained. See_{@link org.elasticsearch.index.translog.TranslogDeletionPolicy} for details;public abstract void trimUnreferencedTranslogFiles() throws EngineException_;checks,and,removes,translog,files,that,no,longer,need,to,be,retained,see,link,org,elasticsearch,index,translog,translog,deletion,policy,for,details;public,abstract,void,trim,unreferenced,translog,files,throws,engine,exception
Engine -> public abstract void trimUnreferencedTranslogFiles() throws EngineException_;1548771485;checks and removes translog files that no longer need to be retained. See_{@link org.elasticsearch.index.translog.TranslogDeletionPolicy} for details;public abstract void trimUnreferencedTranslogFiles() throws EngineException_;checks,and,removes,translog,files,that,no,longer,need,to,be,retained,see,link,org,elasticsearch,index,translog,translog,deletion,policy,for,details;public,abstract,void,trim,unreferenced,translog,files,throws,engine,exception
Engine -> public abstract void trimUnreferencedTranslogFiles() throws EngineException_;1549891630;checks and removes translog files that no longer need to be retained. See_{@link org.elasticsearch.index.translog.TranslogDeletionPolicy} for details;public abstract void trimUnreferencedTranslogFiles() throws EngineException_;checks,and,removes,translog,files,that,no,longer,need,to,be,retained,see,link,org,elasticsearch,index,translog,translog,deletion,policy,for,details;public,abstract,void,trim,unreferenced,translog,files,throws,engine,exception
Engine -> public abstract void trimUnreferencedTranslogFiles() throws EngineException_;1549975032;checks and removes translog files that no longer need to be retained. See_{@link org.elasticsearch.index.translog.TranslogDeletionPolicy} for details;public abstract void trimUnreferencedTranslogFiles() throws EngineException_;checks,and,removes,translog,files,that,no,longer,need,to,be,retained,see,link,org,elasticsearch,index,translog,translog,deletion,policy,for,details;public,abstract,void,trim,unreferenced,translog,files,throws,engine,exception
Engine -> public abstract void trimUnreferencedTranslogFiles() throws EngineException_;1550220204;checks and removes translog files that no longer need to be retained. See_{@link org.elasticsearch.index.translog.TranslogDeletionPolicy} for details;public abstract void trimUnreferencedTranslogFiles() throws EngineException_;checks,and,removes,translog,files,that,no,longer,need,to,be,retained,see,link,org,elasticsearch,index,translog,translog,deletion,policy,for,details;public,abstract,void,trim,unreferenced,translog,files,throws,engine,exception
Engine -> public abstract void trimUnreferencedTranslogFiles() throws EngineException_;1550526771;checks and removes translog files that no longer need to be retained. See_{@link org.elasticsearch.index.translog.TranslogDeletionPolicy} for details;public abstract void trimUnreferencedTranslogFiles() throws EngineException_;checks,and,removes,translog,files,that,no,longer,need,to,be,retained,see,link,org,elasticsearch,index,translog,translog,deletion,policy,for,details;public,abstract,void,trim,unreferenced,translog,files,throws,engine,exception
Engine -> public abstract void trimUnreferencedTranslogFiles() throws EngineException_;1551110274;checks and removes translog files that no longer need to be retained. See_{@link org.elasticsearch.index.translog.TranslogDeletionPolicy} for details;public abstract void trimUnreferencedTranslogFiles() throws EngineException_;checks,and,removes,translog,files,that,no,longer,need,to,be,retained,see,link,org,elasticsearch,index,translog,translog,deletion,policy,for,details;public,abstract,void,trim,unreferenced,translog,files,throws,engine,exception
Engine -> public abstract void trimUnreferencedTranslogFiles() throws EngineException_;1551126708;checks and removes translog files that no longer need to be retained. See_{@link org.elasticsearch.index.translog.TranslogDeletionPolicy} for details;public abstract void trimUnreferencedTranslogFiles() throws EngineException_;checks,and,removes,translog,files,that,no,longer,need,to,be,retained,see,link,org,elasticsearch,index,translog,translog,deletion,policy,for,details;public,abstract,void,trim,unreferenced,translog,files,throws,engine,exception
Engine -> public abstract boolean shouldRollTranslogGeneration()_;1528762805;Tests whether or not the translog generation should be rolled to a new generation._This test is based on the size of the current generation compared to the configured generation threshold size.__@return {@code true} if the current generation should be rolled to a new generation;public abstract boolean shouldRollTranslogGeneration()_;tests,whether,or,not,the,translog,generation,should,be,rolled,to,a,new,generation,this,test,is,based,on,the,size,of,the,current,generation,compared,to,the,configured,generation,threshold,size,return,code,true,if,the,current,generation,should,be,rolled,to,a,new,generation;public,abstract,boolean,should,roll,translog,generation
Engine -> public abstract boolean shouldRollTranslogGeneration()_;1531910483;Tests whether or not the translog generation should be rolled to a new generation._This test is based on the size of the current generation compared to the configured generation threshold size.__@return {@code true} if the current generation should be rolled to a new generation;public abstract boolean shouldRollTranslogGeneration()_;tests,whether,or,not,the,translog,generation,should,be,rolled,to,a,new,generation,this,test,is,based,on,the,size,of,the,current,generation,compared,to,the,configured,generation,threshold,size,return,code,true,if,the,current,generation,should,be,rolled,to,a,new,generation;public,abstract,boolean,should,roll,translog,generation
Engine -> public abstract boolean shouldRollTranslogGeneration()_;1532685069;Tests whether or not the translog generation should be rolled to a new generation._This test is based on the size of the current generation compared to the configured generation threshold size.__@return {@code true} if the current generation should be rolled to a new generation;public abstract boolean shouldRollTranslogGeneration()_;tests,whether,or,not,the,translog,generation,should,be,rolled,to,a,new,generation,this,test,is,based,on,the,size,of,the,current,generation,compared,to,the,configured,generation,threshold,size,return,code,true,if,the,current,generation,should,be,rolled,to,a,new,generation;public,abstract,boolean,should,roll,translog,generation
Engine -> public abstract boolean shouldRollTranslogGeneration()_;1533295538;Tests whether or not the translog generation should be rolled to a new generation._This test is based on the size of the current generation compared to the configured generation threshold size.__@return {@code true} if the current generation should be rolled to a new generation;public abstract boolean shouldRollTranslogGeneration()_;tests,whether,or,not,the,translog,generation,should,be,rolled,to,a,new,generation,this,test,is,based,on,the,size,of,the,current,generation,compared,to,the,configured,generation,threshold,size,return,code,true,if,the,current,generation,should,be,rolled,to,a,new,generation;public,abstract,boolean,should,roll,translog,generation
Engine -> public abstract boolean shouldRollTranslogGeneration()_;1535046779;Tests whether or not the translog generation should be rolled to a new generation._This test is based on the size of the current generation compared to the configured generation threshold size.__@return {@code true} if the current generation should be rolled to a new generation;public abstract boolean shouldRollTranslogGeneration()_;tests,whether,or,not,the,translog,generation,should,be,rolled,to,a,new,generation,this,test,is,based,on,the,size,of,the,current,generation,compared,to,the,configured,generation,threshold,size,return,code,true,if,the,current,generation,should,be,rolled,to,a,new,generation;public,abstract,boolean,should,roll,translog,generation
Engine -> public abstract boolean shouldRollTranslogGeneration()_;1535723122;Tests whether or not the translog generation should be rolled to a new generation._This test is based on the size of the current generation compared to the configured generation threshold size.__@return {@code true} if the current generation should be rolled to a new generation;public abstract boolean shouldRollTranslogGeneration()_;tests,whether,or,not,the,translog,generation,should,be,rolled,to,a,new,generation,this,test,is,based,on,the,size,of,the,current,generation,compared,to,the,configured,generation,threshold,size,return,code,true,if,the,current,generation,should,be,rolled,to,a,new,generation;public,abstract,boolean,should,roll,translog,generation
Engine -> public abstract boolean shouldRollTranslogGeneration()_;1535965276;Tests whether or not the translog generation should be rolled to a new generation._This test is based on the size of the current generation compared to the configured generation threshold size.__@return {@code true} if the current generation should be rolled to a new generation;public abstract boolean shouldRollTranslogGeneration()_;tests,whether,or,not,the,translog,generation,should,be,rolled,to,a,new,generation,this,test,is,based,on,the,size,of,the,current,generation,compared,to,the,configured,generation,threshold,size,return,code,true,if,the,current,generation,should,be,rolled,to,a,new,generation;public,abstract,boolean,should,roll,translog,generation
Engine -> public abstract boolean shouldRollTranslogGeneration()_;1536314350;Tests whether or not the translog generation should be rolled to a new generation._This test is based on the size of the current generation compared to the configured generation threshold size.__@return {@code true} if the current generation should be rolled to a new generation;public abstract boolean shouldRollTranslogGeneration()_;tests,whether,or,not,the,translog,generation,should,be,rolled,to,a,new,generation,this,test,is,based,on,the,size,of,the,current,generation,compared,to,the,configured,generation,threshold,size,return,code,true,if,the,current,generation,should,be,rolled,to,a,new,generation;public,abstract,boolean,should,roll,translog,generation
Engine -> public abstract boolean shouldRollTranslogGeneration()_;1536828374;Tests whether or not the translog generation should be rolled to a new generation._This test is based on the size of the current generation compared to the configured generation threshold size.__@return {@code true} if the current generation should be rolled to a new generation;public abstract boolean shouldRollTranslogGeneration()_;tests,whether,or,not,the,translog,generation,should,be,rolled,to,a,new,generation,this,test,is,based,on,the,size,of,the,current,generation,compared,to,the,configured,generation,threshold,size,return,code,true,if,the,current,generation,should,be,rolled,to,a,new,generation;public,abstract,boolean,should,roll,translog,generation
Engine -> public abstract boolean shouldRollTranslogGeneration()_;1537371806;Tests whether or not the translog generation should be rolled to a new generation._This test is based on the size of the current generation compared to the configured generation threshold size.__@return {@code true} if the current generation should be rolled to a new generation;public abstract boolean shouldRollTranslogGeneration()_;tests,whether,or,not,the,translog,generation,should,be,rolled,to,a,new,generation,this,test,is,based,on,the,size,of,the,current,generation,compared,to,the,configured,generation,threshold,size,return,code,true,if,the,current,generation,should,be,rolled,to,a,new,generation;public,abstract,boolean,should,roll,translog,generation
Engine -> public abstract boolean shouldRollTranslogGeneration()_;1537806831;Tests whether or not the translog generation should be rolled to a new generation._This test is based on the size of the current generation compared to the configured generation threshold size.__@return {@code true} if the current generation should be rolled to a new generation;public abstract boolean shouldRollTranslogGeneration()_;tests,whether,or,not,the,translog,generation,should,be,rolled,to,a,new,generation,this,test,is,based,on,the,size,of,the,current,generation,compared,to,the,configured,generation,threshold,size,return,code,true,if,the,current,generation,should,be,rolled,to,a,new,generation;public,abstract,boolean,should,roll,translog,generation
Engine -> public abstract boolean shouldRollTranslogGeneration()_;1538067637;Tests whether or not the translog generation should be rolled to a new generation._This test is based on the size of the current generation compared to the configured generation threshold size.__@return {@code true} if the current generation should be rolled to a new generation;public abstract boolean shouldRollTranslogGeneration()_;tests,whether,or,not,the,translog,generation,should,be,rolled,to,a,new,generation,this,test,is,based,on,the,size,of,the,current,generation,compared,to,the,configured,generation,threshold,size,return,code,true,if,the,current,generation,should,be,rolled,to,a,new,generation;public,abstract,boolean,should,roll,translog,generation
Engine -> public abstract boolean shouldRollTranslogGeneration()_;1538424609;Tests whether or not the translog generation should be rolled to a new generation._This test is based on the size of the current generation compared to the configured generation threshold size.__@return {@code true} if the current generation should be rolled to a new generation;public abstract boolean shouldRollTranslogGeneration()_;tests,whether,or,not,the,translog,generation,should,be,rolled,to,a,new,generation,this,test,is,based,on,the,size,of,the,current,generation,compared,to,the,configured,generation,threshold,size,return,code,true,if,the,current,generation,should,be,rolled,to,a,new,generation;public,abstract,boolean,should,roll,translog,generation
Engine -> public abstract boolean shouldRollTranslogGeneration()_;1539723533;Tests whether or not the translog generation should be rolled to a new generation._This test is based on the size of the current generation compared to the configured generation threshold size.__@return {@code true} if the current generation should be rolled to a new generation;public abstract boolean shouldRollTranslogGeneration()_;tests,whether,or,not,the,translog,generation,should,be,rolled,to,a,new,generation,this,test,is,based,on,the,size,of,the,current,generation,compared,to,the,configured,generation,threshold,size,return,code,true,if,the,current,generation,should,be,rolled,to,a,new,generation;public,abstract,boolean,should,roll,translog,generation
Engine -> public abstract boolean shouldRollTranslogGeneration()_;1541618615;Tests whether or not the translog generation should be rolled to a new generation._This test is based on the size of the current generation compared to the configured generation threshold size.__@return {@code true} if the current generation should be rolled to a new generation;public abstract boolean shouldRollTranslogGeneration()_;tests,whether,or,not,the,translog,generation,should,be,rolled,to,a,new,generation,this,test,is,based,on,the,size,of,the,current,generation,compared,to,the,configured,generation,threshold,size,return,code,true,if,the,current,generation,should,be,rolled,to,a,new,generation;public,abstract,boolean,should,roll,translog,generation
Engine -> public abstract boolean shouldRollTranslogGeneration()_;1542697754;Tests whether or not the translog generation should be rolled to a new generation._This test is based on the size of the current generation compared to the configured generation threshold size.__@return {@code true} if the current generation should be rolled to a new generation;public abstract boolean shouldRollTranslogGeneration()_;tests,whether,or,not,the,translog,generation,should,be,rolled,to,a,new,generation,this,test,is,based,on,the,size,of,the,current,generation,compared,to,the,configured,generation,threshold,size,return,code,true,if,the,current,generation,should,be,rolled,to,a,new,generation;public,abstract,boolean,should,roll,translog,generation
Engine -> public abstract boolean shouldRollTranslogGeneration()_;1543047942;Tests whether or not the translog generation should be rolled to a new generation._This test is based on the size of the current generation compared to the configured generation threshold size.__@return {@code true} if the current generation should be rolled to a new generation;public abstract boolean shouldRollTranslogGeneration()_;tests,whether,or,not,the,translog,generation,should,be,rolled,to,a,new,generation,this,test,is,based,on,the,size,of,the,current,generation,compared,to,the,configured,generation,threshold,size,return,code,true,if,the,current,generation,should,be,rolled,to,a,new,generation;public,abstract,boolean,should,roll,translog,generation
Engine -> public abstract boolean shouldRollTranslogGeneration()_;1544545090;Tests whether or not the translog generation should be rolled to a new generation._This test is based on the size of the current generation compared to the configured generation threshold size.__@return {@code true} if the current generation should be rolled to a new generation;public abstract boolean shouldRollTranslogGeneration()_;tests,whether,or,not,the,translog,generation,should,be,rolled,to,a,new,generation,this,test,is,based,on,the,size,of,the,current,generation,compared,to,the,configured,generation,threshold,size,return,code,true,if,the,current,generation,should,be,rolled,to,a,new,generation;public,abstract,boolean,should,roll,translog,generation
Engine -> public abstract boolean shouldRollTranslogGeneration()_;1544684920;Tests whether or not the translog generation should be rolled to a new generation._This test is based on the size of the current generation compared to the configured generation threshold size.__@return {@code true} if the current generation should be rolled to a new generation;public abstract boolean shouldRollTranslogGeneration()_;tests,whether,or,not,the,translog,generation,should,be,rolled,to,a,new,generation,this,test,is,based,on,the,size,of,the,current,generation,compared,to,the,configured,generation,threshold,size,return,code,true,if,the,current,generation,should,be,rolled,to,a,new,generation;public,abstract,boolean,should,roll,translog,generation
Engine -> public abstract boolean shouldRollTranslogGeneration()_;1545140118;Tests whether or not the translog generation should be rolled to a new generation._This test is based on the size of the current generation compared to the configured generation threshold size.__@return {@code true} if the current generation should be rolled to a new generation;public abstract boolean shouldRollTranslogGeneration()_;tests,whether,or,not,the,translog,generation,should,be,rolled,to,a,new,generation,this,test,is,based,on,the,size,of,the,current,generation,compared,to,the,configured,generation,threshold,size,return,code,true,if,the,current,generation,should,be,rolled,to,a,new,generation;public,abstract,boolean,should,roll,translog,generation
Engine -> public abstract boolean shouldRollTranslogGeneration()_;1545221705;Tests whether or not the translog generation should be rolled to a new generation._This test is based on the size of the current generation compared to the configured generation threshold size.__@return {@code true} if the current generation should be rolled to a new generation;public abstract boolean shouldRollTranslogGeneration()_;tests,whether,or,not,the,translog,generation,should,be,rolled,to,a,new,generation,this,test,is,based,on,the,size,of,the,current,generation,compared,to,the,configured,generation,threshold,size,return,code,true,if,the,current,generation,should,be,rolled,to,a,new,generation;public,abstract,boolean,should,roll,translog,generation
Engine -> public abstract boolean shouldRollTranslogGeneration()_;1547332999;Tests whether or not the translog generation should be rolled to a new generation._This test is based on the size of the current generation compared to the configured generation threshold size.__@return {@code true} if the current generation should be rolled to a new generation;public abstract boolean shouldRollTranslogGeneration()_;tests,whether,or,not,the,translog,generation,should,be,rolled,to,a,new,generation,this,test,is,based,on,the,size,of,the,current,generation,compared,to,the,configured,generation,threshold,size,return,code,true,if,the,current,generation,should,be,rolled,to,a,new,generation;public,abstract,boolean,should,roll,translog,generation
Engine -> public abstract boolean shouldRollTranslogGeneration()_;1548771485;Tests whether or not the translog generation should be rolled to a new generation._This test is based on the size of the current generation compared to the configured generation threshold size.__@return {@code true} if the current generation should be rolled to a new generation;public abstract boolean shouldRollTranslogGeneration()_;tests,whether,or,not,the,translog,generation,should,be,rolled,to,a,new,generation,this,test,is,based,on,the,size,of,the,current,generation,compared,to,the,configured,generation,threshold,size,return,code,true,if,the,current,generation,should,be,rolled,to,a,new,generation;public,abstract,boolean,should,roll,translog,generation
Engine -> public abstract boolean shouldRollTranslogGeneration()_;1549891630;Tests whether or not the translog generation should be rolled to a new generation._This test is based on the size of the current generation compared to the configured generation threshold size.__@return {@code true} if the current generation should be rolled to a new generation;public abstract boolean shouldRollTranslogGeneration()_;tests,whether,or,not,the,translog,generation,should,be,rolled,to,a,new,generation,this,test,is,based,on,the,size,of,the,current,generation,compared,to,the,configured,generation,threshold,size,return,code,true,if,the,current,generation,should,be,rolled,to,a,new,generation;public,abstract,boolean,should,roll,translog,generation
Engine -> public abstract boolean shouldRollTranslogGeneration()_;1549975032;Tests whether or not the translog generation should be rolled to a new generation._This test is based on the size of the current generation compared to the configured generation threshold size.__@return {@code true} if the current generation should be rolled to a new generation;public abstract boolean shouldRollTranslogGeneration()_;tests,whether,or,not,the,translog,generation,should,be,rolled,to,a,new,generation,this,test,is,based,on,the,size,of,the,current,generation,compared,to,the,configured,generation,threshold,size,return,code,true,if,the,current,generation,should,be,rolled,to,a,new,generation;public,abstract,boolean,should,roll,translog,generation
Engine -> public abstract boolean shouldRollTranslogGeneration()_;1550220204;Tests whether or not the translog generation should be rolled to a new generation._This test is based on the size of the current generation compared to the configured generation threshold size.__@return {@code true} if the current generation should be rolled to a new generation;public abstract boolean shouldRollTranslogGeneration()_;tests,whether,or,not,the,translog,generation,should,be,rolled,to,a,new,generation,this,test,is,based,on,the,size,of,the,current,generation,compared,to,the,configured,generation,threshold,size,return,code,true,if,the,current,generation,should,be,rolled,to,a,new,generation;public,abstract,boolean,should,roll,translog,generation
Engine -> public abstract boolean shouldRollTranslogGeneration()_;1550526771;Tests whether or not the translog generation should be rolled to a new generation._This test is based on the size of the current generation compared to the configured generation threshold size.__@return {@code true} if the current generation should be rolled to a new generation;public abstract boolean shouldRollTranslogGeneration()_;tests,whether,or,not,the,translog,generation,should,be,rolled,to,a,new,generation,this,test,is,based,on,the,size,of,the,current,generation,compared,to,the,configured,generation,threshold,size,return,code,true,if,the,current,generation,should,be,rolled,to,a,new,generation;public,abstract,boolean,should,roll,translog,generation
Engine -> public abstract boolean shouldRollTranslogGeneration()_;1551110274;Tests whether or not the translog generation should be rolled to a new generation._This test is based on the size of the current generation compared to the configured generation threshold size.__@return {@code true} if the current generation should be rolled to a new generation;public abstract boolean shouldRollTranslogGeneration()_;tests,whether,or,not,the,translog,generation,should,be,rolled,to,a,new,generation,this,test,is,based,on,the,size,of,the,current,generation,compared,to,the,configured,generation,threshold,size,return,code,true,if,the,current,generation,should,be,rolled,to,a,new,generation;public,abstract,boolean,should,roll,translog,generation
Engine -> public abstract boolean shouldRollTranslogGeneration()_;1551126708;Tests whether or not the translog generation should be rolled to a new generation._This test is based on the size of the current generation compared to the configured generation threshold size.__@return {@code true} if the current generation should be rolled to a new generation;public abstract boolean shouldRollTranslogGeneration()_;tests,whether,or,not,the,translog,generation,should,be,rolled,to,a,new,generation,this,test,is,based,on,the,size,of,the,current,generation,compared,to,the,configured,generation,threshold,size,return,code,true,if,the,current,generation,should,be,rolled,to,a,new,generation;public,abstract,boolean,should,roll,translog,generation
Engine -> protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;1524684173;Method to close the engine while the write lock is held._Must decrement the supplied when closing work is done and resources are_freed.;protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;method,to,close,the,engine,while,the,write,lock,is,held,must,decrement,the,supplied,when,closing,work,is,done,and,resources,are,freed;protected,abstract,void,close,no,lock,string,reason,count,down,latch,closed,latch
Engine -> protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;1525162917;Method to close the engine while the write lock is held._Must decrement the supplied when closing work is done and resources are_freed.;protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;method,to,close,the,engine,while,the,write,lock,is,held,must,decrement,the,supplied,when,closing,work,is,done,and,resources,are,freed;protected,abstract,void,close,no,lock,string,reason,count,down,latch,closed,latch
Engine -> protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;1525334055;Method to close the engine while the write lock is held._Must decrement the supplied when closing work is done and resources are_freed.;protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;method,to,close,the,engine,while,the,write,lock,is,held,must,decrement,the,supplied,when,closing,work,is,done,and,resources,are,freed;protected,abstract,void,close,no,lock,string,reason,count,down,latch,closed,latch
Engine -> protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;1527583663;Method to close the engine while the write lock is held._Must decrement the supplied when closing work is done and resources are_freed.;protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;method,to,close,the,engine,while,the,write,lock,is,held,must,decrement,the,supplied,when,closing,work,is,done,and,resources,are,freed;protected,abstract,void,close,no,lock,string,reason,count,down,latch,closed,latch
Engine -> protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;1528706846;Method to close the engine while the write lock is held._Must decrement the supplied when closing work is done and resources are_freed.;protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;method,to,close,the,engine,while,the,write,lock,is,held,must,decrement,the,supplied,when,closing,work,is,done,and,resources,are,freed;protected,abstract,void,close,no,lock,string,reason,count,down,latch,closed,latch
Engine -> protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;1528762805;Method to close the engine while the write lock is held._Must decrement the supplied when closing work is done and resources are_freed.;protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;method,to,close,the,engine,while,the,write,lock,is,held,must,decrement,the,supplied,when,closing,work,is,done,and,resources,are,freed;protected,abstract,void,close,no,lock,string,reason,count,down,latch,closed,latch
Engine -> protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;1531910483;Method to close the engine while the write lock is held._Must decrement the supplied when closing work is done and resources are_freed.;protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;method,to,close,the,engine,while,the,write,lock,is,held,must,decrement,the,supplied,when,closing,work,is,done,and,resources,are,freed;protected,abstract,void,close,no,lock,string,reason,count,down,latch,closed,latch
Engine -> protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;1532685069;Method to close the engine while the write lock is held._Must decrement the supplied when closing work is done and resources are_freed.;protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;method,to,close,the,engine,while,the,write,lock,is,held,must,decrement,the,supplied,when,closing,work,is,done,and,resources,are,freed;protected,abstract,void,close,no,lock,string,reason,count,down,latch,closed,latch
Engine -> protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;1533295538;Method to close the engine while the write lock is held._Must decrement the supplied when closing work is done and resources are_freed.;protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;method,to,close,the,engine,while,the,write,lock,is,held,must,decrement,the,supplied,when,closing,work,is,done,and,resources,are,freed;protected,abstract,void,close,no,lock,string,reason,count,down,latch,closed,latch
Engine -> protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;1535046779;Method to close the engine while the write lock is held._Must decrement the supplied when closing work is done and resources are_freed.;protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;method,to,close,the,engine,while,the,write,lock,is,held,must,decrement,the,supplied,when,closing,work,is,done,and,resources,are,freed;protected,abstract,void,close,no,lock,string,reason,count,down,latch,closed,latch
Engine -> protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;1535723122;Method to close the engine while the write lock is held._Must decrement the supplied when closing work is done and resources are_freed.;protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;method,to,close,the,engine,while,the,write,lock,is,held,must,decrement,the,supplied,when,closing,work,is,done,and,resources,are,freed;protected,abstract,void,close,no,lock,string,reason,count,down,latch,closed,latch
Engine -> protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;1535965276;Method to close the engine while the write lock is held._Must decrement the supplied when closing work is done and resources are_freed.;protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;method,to,close,the,engine,while,the,write,lock,is,held,must,decrement,the,supplied,when,closing,work,is,done,and,resources,are,freed;protected,abstract,void,close,no,lock,string,reason,count,down,latch,closed,latch
Engine -> protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;1536314350;Method to close the engine while the write lock is held._Must decrement the supplied when closing work is done and resources are_freed.;protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;method,to,close,the,engine,while,the,write,lock,is,held,must,decrement,the,supplied,when,closing,work,is,done,and,resources,are,freed;protected,abstract,void,close,no,lock,string,reason,count,down,latch,closed,latch
Engine -> protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;1536828374;Method to close the engine while the write lock is held._Must decrement the supplied when closing work is done and resources are_freed.;protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;method,to,close,the,engine,while,the,write,lock,is,held,must,decrement,the,supplied,when,closing,work,is,done,and,resources,are,freed;protected,abstract,void,close,no,lock,string,reason,count,down,latch,closed,latch
Engine -> protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;1537371806;Method to close the engine while the write lock is held._Must decrement the supplied when closing work is done and resources are_freed.;protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;method,to,close,the,engine,while,the,write,lock,is,held,must,decrement,the,supplied,when,closing,work,is,done,and,resources,are,freed;protected,abstract,void,close,no,lock,string,reason,count,down,latch,closed,latch
Engine -> protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;1537806831;Method to close the engine while the write lock is held._Must decrement the supplied when closing work is done and resources are_freed.;protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;method,to,close,the,engine,while,the,write,lock,is,held,must,decrement,the,supplied,when,closing,work,is,done,and,resources,are,freed;protected,abstract,void,close,no,lock,string,reason,count,down,latch,closed,latch
Engine -> protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;1538067637;Method to close the engine while the write lock is held._Must decrement the supplied when closing work is done and resources are_freed.;protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;method,to,close,the,engine,while,the,write,lock,is,held,must,decrement,the,supplied,when,closing,work,is,done,and,resources,are,freed;protected,abstract,void,close,no,lock,string,reason,count,down,latch,closed,latch
Engine -> protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;1538424609;Method to close the engine while the write lock is held._Must decrement the supplied when closing work is done and resources are_freed.;protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;method,to,close,the,engine,while,the,write,lock,is,held,must,decrement,the,supplied,when,closing,work,is,done,and,resources,are,freed;protected,abstract,void,close,no,lock,string,reason,count,down,latch,closed,latch
Engine -> protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;1539723533;Method to close the engine while the write lock is held._Must decrement the supplied when closing work is done and resources are_freed.;protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;method,to,close,the,engine,while,the,write,lock,is,held,must,decrement,the,supplied,when,closing,work,is,done,and,resources,are,freed;protected,abstract,void,close,no,lock,string,reason,count,down,latch,closed,latch
Engine -> protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;1541618615;Method to close the engine while the write lock is held._Must decrement the supplied when closing work is done and resources are_freed.;protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;method,to,close,the,engine,while,the,write,lock,is,held,must,decrement,the,supplied,when,closing,work,is,done,and,resources,are,freed;protected,abstract,void,close,no,lock,string,reason,count,down,latch,closed,latch
Engine -> protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;1542697754;Method to close the engine while the write lock is held._Must decrement the supplied when closing work is done and resources are_freed.;protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;method,to,close,the,engine,while,the,write,lock,is,held,must,decrement,the,supplied,when,closing,work,is,done,and,resources,are,freed;protected,abstract,void,close,no,lock,string,reason,count,down,latch,closed,latch
Engine -> protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;1543047942;Method to close the engine while the write lock is held._Must decrement the supplied when closing work is done and resources are_freed.;protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;method,to,close,the,engine,while,the,write,lock,is,held,must,decrement,the,supplied,when,closing,work,is,done,and,resources,are,freed;protected,abstract,void,close,no,lock,string,reason,count,down,latch,closed,latch
Engine -> protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;1544545090;Method to close the engine while the write lock is held._Must decrement the supplied when closing work is done and resources are_freed.;protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;method,to,close,the,engine,while,the,write,lock,is,held,must,decrement,the,supplied,when,closing,work,is,done,and,resources,are,freed;protected,abstract,void,close,no,lock,string,reason,count,down,latch,closed,latch
Engine -> protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;1544684920;Method to close the engine while the write lock is held._Must decrement the supplied when closing work is done and resources are_freed.;protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;method,to,close,the,engine,while,the,write,lock,is,held,must,decrement,the,supplied,when,closing,work,is,done,and,resources,are,freed;protected,abstract,void,close,no,lock,string,reason,count,down,latch,closed,latch
Engine -> protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;1545140118;Method to close the engine while the write lock is held._Must decrement the supplied when closing work is done and resources are_freed.;protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;method,to,close,the,engine,while,the,write,lock,is,held,must,decrement,the,supplied,when,closing,work,is,done,and,resources,are,freed;protected,abstract,void,close,no,lock,string,reason,count,down,latch,closed,latch
Engine -> protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;1545221705;Method to close the engine while the write lock is held._Must decrement the supplied when closing work is done and resources are_freed.;protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;method,to,close,the,engine,while,the,write,lock,is,held,must,decrement,the,supplied,when,closing,work,is,done,and,resources,are,freed;protected,abstract,void,close,no,lock,string,reason,count,down,latch,closed,latch
Engine -> protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;1547332999;Method to close the engine while the write lock is held._Must decrement the supplied when closing work is done and resources are_freed.;protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;method,to,close,the,engine,while,the,write,lock,is,held,must,decrement,the,supplied,when,closing,work,is,done,and,resources,are,freed;protected,abstract,void,close,no,lock,string,reason,count,down,latch,closed,latch
Engine -> protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;1548771485;Method to close the engine while the write lock is held._Must decrement the supplied when closing work is done and resources are_freed.;protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;method,to,close,the,engine,while,the,write,lock,is,held,must,decrement,the,supplied,when,closing,work,is,done,and,resources,are,freed;protected,abstract,void,close,no,lock,string,reason,count,down,latch,closed,latch
Engine -> protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;1549891630;Method to close the engine while the write lock is held._Must decrement the supplied when closing work is done and resources are_freed.;protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;method,to,close,the,engine,while,the,write,lock,is,held,must,decrement,the,supplied,when,closing,work,is,done,and,resources,are,freed;protected,abstract,void,close,no,lock,string,reason,count,down,latch,closed,latch
Engine -> protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;1549975032;Method to close the engine while the write lock is held._Must decrement the supplied when closing work is done and resources are_freed.;protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;method,to,close,the,engine,while,the,write,lock,is,held,must,decrement,the,supplied,when,closing,work,is,done,and,resources,are,freed;protected,abstract,void,close,no,lock,string,reason,count,down,latch,closed,latch
Engine -> protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;1550220204;Method to close the engine while the write lock is held._Must decrement the supplied when closing work is done and resources are_freed.;protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;method,to,close,the,engine,while,the,write,lock,is,held,must,decrement,the,supplied,when,closing,work,is,done,and,resources,are,freed;protected,abstract,void,close,no,lock,string,reason,count,down,latch,closed,latch
Engine -> protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;1550526771;Method to close the engine while the write lock is held._Must decrement the supplied when closing work is done and resources are_freed.;protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;method,to,close,the,engine,while,the,write,lock,is,held,must,decrement,the,supplied,when,closing,work,is,done,and,resources,are,freed;protected,abstract,void,close,no,lock,string,reason,count,down,latch,closed,latch
Engine -> protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;1551110274;Method to close the engine while the write lock is held._Must decrement the supplied when closing work is done and resources are_freed.;protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;method,to,close,the,engine,while,the,write,lock,is,held,must,decrement,the,supplied,when,closing,work,is,done,and,resources,are,freed;protected,abstract,void,close,no,lock,string,reason,count,down,latch,closed,latch
Engine -> protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;1551126708;Method to close the engine while the write lock is held._Must decrement the supplied when closing work is done and resources are_freed.;protected abstract void closeNoLock(String reason, CountDownLatch closedLatch)_;method,to,close,the,engine,while,the,write,lock,is,held,must,decrement,the,supplied,when,closing,work,is,done,and,resources,are,freed;protected,abstract,void,close,no,lock,string,reason,count,down,latch,closed,latch
Engine -> public abstract Translog.Snapshot readHistoryOperations(String source, MapperService mapperService, long startingSeqNo) throws IOException_;1535723122;Creates a new history snapshot for reading operations since {@code startingSeqNo} (inclusive)._The returned snapshot can be retrieved from either Lucene index or translog files.;public abstract Translog.Snapshot readHistoryOperations(String source, MapperService mapperService, long startingSeqNo) throws IOException_;creates,a,new,history,snapshot,for,reading,operations,since,code,starting,seq,no,inclusive,the,returned,snapshot,can,be,retrieved,from,either,lucene,index,or,translog,files;public,abstract,translog,snapshot,read,history,operations,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract Translog.Snapshot readHistoryOperations(String source, MapperService mapperService, long startingSeqNo) throws IOException_;1535965276;Creates a new history snapshot for reading operations since {@code startingSeqNo} (inclusive)._The returned snapshot can be retrieved from either Lucene index or translog files.;public abstract Translog.Snapshot readHistoryOperations(String source, MapperService mapperService, long startingSeqNo) throws IOException_;creates,a,new,history,snapshot,for,reading,operations,since,code,starting,seq,no,inclusive,the,returned,snapshot,can,be,retrieved,from,either,lucene,index,or,translog,files;public,abstract,translog,snapshot,read,history,operations,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract Translog.Snapshot readHistoryOperations(String source, MapperService mapperService, long startingSeqNo) throws IOException_;1536314350;Creates a new history snapshot for reading operations since {@code startingSeqNo} (inclusive)._The returned snapshot can be retrieved from either Lucene index or translog files.;public abstract Translog.Snapshot readHistoryOperations(String source, MapperService mapperService, long startingSeqNo) throws IOException_;creates,a,new,history,snapshot,for,reading,operations,since,code,starting,seq,no,inclusive,the,returned,snapshot,can,be,retrieved,from,either,lucene,index,or,translog,files;public,abstract,translog,snapshot,read,history,operations,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract Translog.Snapshot readHistoryOperations(String source, MapperService mapperService, long startingSeqNo) throws IOException_;1536828374;Creates a new history snapshot for reading operations since {@code startingSeqNo} (inclusive)._The returned snapshot can be retrieved from either Lucene index or translog files.;public abstract Translog.Snapshot readHistoryOperations(String source, MapperService mapperService, long startingSeqNo) throws IOException_;creates,a,new,history,snapshot,for,reading,operations,since,code,starting,seq,no,inclusive,the,returned,snapshot,can,be,retrieved,from,either,lucene,index,or,translog,files;public,abstract,translog,snapshot,read,history,operations,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract Translog.Snapshot readHistoryOperations(String source, MapperService mapperService, long startingSeqNo) throws IOException_;1537371806;Creates a new history snapshot for reading operations since {@code startingSeqNo} (inclusive)._The returned snapshot can be retrieved from either Lucene index or translog files.;public abstract Translog.Snapshot readHistoryOperations(String source, MapperService mapperService, long startingSeqNo) throws IOException_;creates,a,new,history,snapshot,for,reading,operations,since,code,starting,seq,no,inclusive,the,returned,snapshot,can,be,retrieved,from,either,lucene,index,or,translog,files;public,abstract,translog,snapshot,read,history,operations,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract Translog.Snapshot readHistoryOperations(String source, MapperService mapperService, long startingSeqNo) throws IOException_;1537806831;Creates a new history snapshot for reading operations since {@code startingSeqNo} (inclusive)._The returned snapshot can be retrieved from either Lucene index or translog files.;public abstract Translog.Snapshot readHistoryOperations(String source, MapperService mapperService, long startingSeqNo) throws IOException_;creates,a,new,history,snapshot,for,reading,operations,since,code,starting,seq,no,inclusive,the,returned,snapshot,can,be,retrieved,from,either,lucene,index,or,translog,files;public,abstract,translog,snapshot,read,history,operations,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract Translog.Snapshot readHistoryOperations(String source, MapperService mapperService, long startingSeqNo) throws IOException_;1538067637;Creates a new history snapshot for reading operations since {@code startingSeqNo} (inclusive)._The returned snapshot can be retrieved from either Lucene index or translog files.;public abstract Translog.Snapshot readHistoryOperations(String source, MapperService mapperService, long startingSeqNo) throws IOException_;creates,a,new,history,snapshot,for,reading,operations,since,code,starting,seq,no,inclusive,the,returned,snapshot,can,be,retrieved,from,either,lucene,index,or,translog,files;public,abstract,translog,snapshot,read,history,operations,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract Translog.Snapshot readHistoryOperations(String source, MapperService mapperService, long startingSeqNo) throws IOException_;1538424609;Creates a new history snapshot for reading operations since {@code startingSeqNo} (inclusive)._The returned snapshot can be retrieved from either Lucene index or translog files.;public abstract Translog.Snapshot readHistoryOperations(String source, MapperService mapperService, long startingSeqNo) throws IOException_;creates,a,new,history,snapshot,for,reading,operations,since,code,starting,seq,no,inclusive,the,returned,snapshot,can,be,retrieved,from,either,lucene,index,or,translog,files;public,abstract,translog,snapshot,read,history,operations,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract Translog.Snapshot readHistoryOperations(String source, MapperService mapperService, long startingSeqNo) throws IOException_;1539723533;Creates a new history snapshot for reading operations since {@code startingSeqNo} (inclusive)._The returned snapshot can be retrieved from either Lucene index or translog files.;public abstract Translog.Snapshot readHistoryOperations(String source, MapperService mapperService, long startingSeqNo) throws IOException_;creates,a,new,history,snapshot,for,reading,operations,since,code,starting,seq,no,inclusive,the,returned,snapshot,can,be,retrieved,from,either,lucene,index,or,translog,files;public,abstract,translog,snapshot,read,history,operations,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract Translog.Snapshot readHistoryOperations(String source, MapperService mapperService, long startingSeqNo) throws IOException_;1541618615;Creates a new history snapshot for reading operations since {@code startingSeqNo} (inclusive)._The returned snapshot can be retrieved from either Lucene index or translog files.;public abstract Translog.Snapshot readHistoryOperations(String source, MapperService mapperService, long startingSeqNo) throws IOException_;creates,a,new,history,snapshot,for,reading,operations,since,code,starting,seq,no,inclusive,the,returned,snapshot,can,be,retrieved,from,either,lucene,index,or,translog,files;public,abstract,translog,snapshot,read,history,operations,string,source,mapper,service,mapper,service,long,starting,seq,no,throws,ioexception
Engine -> public abstract long getIndexBufferRAMBytesUsed()_;1524684173;How much heap is used that would be freed by a refresh.  Note that this may throw {@link AlreadyClosedException}.;public abstract long getIndexBufferRAMBytesUsed()_;how,much,heap,is,used,that,would,be,freed,by,a,refresh,note,that,this,may,throw,link,already,closed,exception;public,abstract,long,get,index,buffer,rambytes,used
Engine -> public abstract long getIndexBufferRAMBytesUsed()_;1525162917;How much heap is used that would be freed by a refresh.  Note that this may throw {@link AlreadyClosedException}.;public abstract long getIndexBufferRAMBytesUsed()_;how,much,heap,is,used,that,would,be,freed,by,a,refresh,note,that,this,may,throw,link,already,closed,exception;public,abstract,long,get,index,buffer,rambytes,used
Engine -> public abstract long getIndexBufferRAMBytesUsed()_;1525334055;How much heap is used that would be freed by a refresh.  Note that this may throw {@link AlreadyClosedException}.;public abstract long getIndexBufferRAMBytesUsed()_;how,much,heap,is,used,that,would,be,freed,by,a,refresh,note,that,this,may,throw,link,already,closed,exception;public,abstract,long,get,index,buffer,rambytes,used
Engine -> public abstract long getIndexBufferRAMBytesUsed()_;1527583663;How much heap is used that would be freed by a refresh.  Note that this may throw {@link AlreadyClosedException}.;public abstract long getIndexBufferRAMBytesUsed()_;how,much,heap,is,used,that,would,be,freed,by,a,refresh,note,that,this,may,throw,link,already,closed,exception;public,abstract,long,get,index,buffer,rambytes,used
Engine -> public abstract long getIndexBufferRAMBytesUsed()_;1528706846;How much heap is used that would be freed by a refresh.  Note that this may throw {@link AlreadyClosedException}.;public abstract long getIndexBufferRAMBytesUsed()_;how,much,heap,is,used,that,would,be,freed,by,a,refresh,note,that,this,may,throw,link,already,closed,exception;public,abstract,long,get,index,buffer,rambytes,used
Engine -> public abstract long getIndexBufferRAMBytesUsed()_;1528762805;How much heap is used that would be freed by a refresh.  Note that this may throw {@link AlreadyClosedException}.;public abstract long getIndexBufferRAMBytesUsed()_;how,much,heap,is,used,that,would,be,freed,by,a,refresh,note,that,this,may,throw,link,already,closed,exception;public,abstract,long,get,index,buffer,rambytes,used
Engine -> public abstract long getIndexBufferRAMBytesUsed()_;1531910483;How much heap is used that would be freed by a refresh.  Note that this may throw {@link AlreadyClosedException}.;public abstract long getIndexBufferRAMBytesUsed()_;how,much,heap,is,used,that,would,be,freed,by,a,refresh,note,that,this,may,throw,link,already,closed,exception;public,abstract,long,get,index,buffer,rambytes,used
Engine -> public abstract long getIndexBufferRAMBytesUsed()_;1532685069;How much heap is used that would be freed by a refresh.  Note that this may throw {@link AlreadyClosedException}.;public abstract long getIndexBufferRAMBytesUsed()_;how,much,heap,is,used,that,would,be,freed,by,a,refresh,note,that,this,may,throw,link,already,closed,exception;public,abstract,long,get,index,buffer,rambytes,used
Engine -> public abstract long getIndexBufferRAMBytesUsed()_;1533295538;How much heap is used that would be freed by a refresh.  Note that this may throw {@link AlreadyClosedException}.;public abstract long getIndexBufferRAMBytesUsed()_;how,much,heap,is,used,that,would,be,freed,by,a,refresh,note,that,this,may,throw,link,already,closed,exception;public,abstract,long,get,index,buffer,rambytes,used
Engine -> public abstract long getIndexBufferRAMBytesUsed()_;1535046779;How much heap is used that would be freed by a refresh.  Note that this may throw {@link AlreadyClosedException}.;public abstract long getIndexBufferRAMBytesUsed()_;how,much,heap,is,used,that,would,be,freed,by,a,refresh,note,that,this,may,throw,link,already,closed,exception;public,abstract,long,get,index,buffer,rambytes,used
Engine -> public abstract long getIndexBufferRAMBytesUsed()_;1535723122;How much heap is used that would be freed by a refresh.  Note that this may throw {@link AlreadyClosedException}.;public abstract long getIndexBufferRAMBytesUsed()_;how,much,heap,is,used,that,would,be,freed,by,a,refresh,note,that,this,may,throw,link,already,closed,exception;public,abstract,long,get,index,buffer,rambytes,used
Engine -> public abstract long getIndexBufferRAMBytesUsed()_;1535965276;How much heap is used that would be freed by a refresh.  Note that this may throw {@link AlreadyClosedException}.;public abstract long getIndexBufferRAMBytesUsed()_;how,much,heap,is,used,that,would,be,freed,by,a,refresh,note,that,this,may,throw,link,already,closed,exception;public,abstract,long,get,index,buffer,rambytes,used
Engine -> public abstract long getIndexBufferRAMBytesUsed()_;1536314350;How much heap is used that would be freed by a refresh.  Note that this may throw {@link AlreadyClosedException}.;public abstract long getIndexBufferRAMBytesUsed()_;how,much,heap,is,used,that,would,be,freed,by,a,refresh,note,that,this,may,throw,link,already,closed,exception;public,abstract,long,get,index,buffer,rambytes,used
Engine -> public abstract long getIndexBufferRAMBytesUsed()_;1536828374;How much heap is used that would be freed by a refresh.  Note that this may throw {@link AlreadyClosedException}.;public abstract long getIndexBufferRAMBytesUsed()_;how,much,heap,is,used,that,would,be,freed,by,a,refresh,note,that,this,may,throw,link,already,closed,exception;public,abstract,long,get,index,buffer,rambytes,used
Engine -> public abstract long getIndexBufferRAMBytesUsed()_;1537371806;How much heap is used that would be freed by a refresh.  Note that this may throw {@link AlreadyClosedException}.;public abstract long getIndexBufferRAMBytesUsed()_;how,much,heap,is,used,that,would,be,freed,by,a,refresh,note,that,this,may,throw,link,already,closed,exception;public,abstract,long,get,index,buffer,rambytes,used
Engine -> public abstract long getIndexBufferRAMBytesUsed()_;1537806831;How much heap is used that would be freed by a refresh.  Note that this may throw {@link AlreadyClosedException}.;public abstract long getIndexBufferRAMBytesUsed()_;how,much,heap,is,used,that,would,be,freed,by,a,refresh,note,that,this,may,throw,link,already,closed,exception;public,abstract,long,get,index,buffer,rambytes,used
Engine -> public abstract long getIndexBufferRAMBytesUsed()_;1538067637;How much heap is used that would be freed by a refresh.  Note that this may throw {@link AlreadyClosedException}.;public abstract long getIndexBufferRAMBytesUsed()_;how,much,heap,is,used,that,would,be,freed,by,a,refresh,note,that,this,may,throw,link,already,closed,exception;public,abstract,long,get,index,buffer,rambytes,used
Engine -> public abstract long getIndexBufferRAMBytesUsed()_;1538424609;How much heap is used that would be freed by a refresh.  Note that this may throw {@link AlreadyClosedException}.;public abstract long getIndexBufferRAMBytesUsed()_;how,much,heap,is,used,that,would,be,freed,by,a,refresh,note,that,this,may,throw,link,already,closed,exception;public,abstract,long,get,index,buffer,rambytes,used
Engine -> public abstract long getIndexBufferRAMBytesUsed()_;1539723533;How much heap is used that would be freed by a refresh.  Note that this may throw {@link AlreadyClosedException}.;public abstract long getIndexBufferRAMBytesUsed()_;how,much,heap,is,used,that,would,be,freed,by,a,refresh,note,that,this,may,throw,link,already,closed,exception;public,abstract,long,get,index,buffer,rambytes,used
Engine -> public abstract long getIndexBufferRAMBytesUsed()_;1541618615;How much heap is used that would be freed by a refresh.  Note that this may throw {@link AlreadyClosedException}.;public abstract long getIndexBufferRAMBytesUsed()_;how,much,heap,is,used,that,would,be,freed,by,a,refresh,note,that,this,may,throw,link,already,closed,exception;public,abstract,long,get,index,buffer,rambytes,used
Engine -> public abstract long getIndexBufferRAMBytesUsed()_;1542697754;How much heap is used that would be freed by a refresh.  Note that this may throw {@link AlreadyClosedException}.;public abstract long getIndexBufferRAMBytesUsed()_;how,much,heap,is,used,that,would,be,freed,by,a,refresh,note,that,this,may,throw,link,already,closed,exception;public,abstract,long,get,index,buffer,rambytes,used
Engine -> public abstract long getIndexBufferRAMBytesUsed()_;1543047942;How much heap is used that would be freed by a refresh.  Note that this may throw {@link AlreadyClosedException}.;public abstract long getIndexBufferRAMBytesUsed()_;how,much,heap,is,used,that,would,be,freed,by,a,refresh,note,that,this,may,throw,link,already,closed,exception;public,abstract,long,get,index,buffer,rambytes,used
Engine -> public abstract long getIndexBufferRAMBytesUsed()_;1544545090;How much heap is used that would be freed by a refresh.  Note that this may throw {@link AlreadyClosedException}.;public abstract long getIndexBufferRAMBytesUsed()_;how,much,heap,is,used,that,would,be,freed,by,a,refresh,note,that,this,may,throw,link,already,closed,exception;public,abstract,long,get,index,buffer,rambytes,used
Engine -> public abstract long getIndexBufferRAMBytesUsed()_;1544684920;How much heap is used that would be freed by a refresh.  Note that this may throw {@link AlreadyClosedException}.;public abstract long getIndexBufferRAMBytesUsed()_;how,much,heap,is,used,that,would,be,freed,by,a,refresh,note,that,this,may,throw,link,already,closed,exception;public,abstract,long,get,index,buffer,rambytes,used
Engine -> public abstract long getIndexBufferRAMBytesUsed()_;1545140118;How much heap is used that would be freed by a refresh.  Note that this may throw {@link AlreadyClosedException}.;public abstract long getIndexBufferRAMBytesUsed()_;how,much,heap,is,used,that,would,be,freed,by,a,refresh,note,that,this,may,throw,link,already,closed,exception;public,abstract,long,get,index,buffer,rambytes,used
Engine -> public abstract long getIndexBufferRAMBytesUsed()_;1545221705;How much heap is used that would be freed by a refresh.  Note that this may throw {@link AlreadyClosedException}.;public abstract long getIndexBufferRAMBytesUsed()_;how,much,heap,is,used,that,would,be,freed,by,a,refresh,note,that,this,may,throw,link,already,closed,exception;public,abstract,long,get,index,buffer,rambytes,used
Engine -> public abstract long getIndexBufferRAMBytesUsed()_;1547332999;How much heap is used that would be freed by a refresh.  Note that this may throw {@link AlreadyClosedException}.;public abstract long getIndexBufferRAMBytesUsed()_;how,much,heap,is,used,that,would,be,freed,by,a,refresh,note,that,this,may,throw,link,already,closed,exception;public,abstract,long,get,index,buffer,rambytes,used
Engine -> public abstract long getIndexBufferRAMBytesUsed()_;1548771485;How much heap is used that would be freed by a refresh.  Note that this may throw {@link AlreadyClosedException}.;public abstract long getIndexBufferRAMBytesUsed()_;how,much,heap,is,used,that,would,be,freed,by,a,refresh,note,that,this,may,throw,link,already,closed,exception;public,abstract,long,get,index,buffer,rambytes,used
Engine -> public abstract long getIndexBufferRAMBytesUsed()_;1549891630;How much heap is used that would be freed by a refresh.  Note that this may throw {@link AlreadyClosedException}.;public abstract long getIndexBufferRAMBytesUsed()_;how,much,heap,is,used,that,would,be,freed,by,a,refresh,note,that,this,may,throw,link,already,closed,exception;public,abstract,long,get,index,buffer,rambytes,used
Engine -> public abstract long getIndexBufferRAMBytesUsed()_;1549975032;How much heap is used that would be freed by a refresh.  Note that this may throw {@link AlreadyClosedException}.;public abstract long getIndexBufferRAMBytesUsed()_;how,much,heap,is,used,that,would,be,freed,by,a,refresh,note,that,this,may,throw,link,already,closed,exception;public,abstract,long,get,index,buffer,rambytes,used
Engine -> public abstract long getIndexBufferRAMBytesUsed()_;1550220204;How much heap is used that would be freed by a refresh.  Note that this may throw {@link AlreadyClosedException}.;public abstract long getIndexBufferRAMBytesUsed()_;how,much,heap,is,used,that,would,be,freed,by,a,refresh,note,that,this,may,throw,link,already,closed,exception;public,abstract,long,get,index,buffer,rambytes,used
Engine -> public abstract long getIndexBufferRAMBytesUsed()_;1550526771;How much heap is used that would be freed by a refresh.  Note that this may throw {@link AlreadyClosedException}.;public abstract long getIndexBufferRAMBytesUsed()_;how,much,heap,is,used,that,would,be,freed,by,a,refresh,note,that,this,may,throw,link,already,closed,exception;public,abstract,long,get,index,buffer,rambytes,used
Engine -> public abstract long getIndexBufferRAMBytesUsed()_;1551110274;How much heap is used that would be freed by a refresh.  Note that this may throw {@link AlreadyClosedException}.;public abstract long getIndexBufferRAMBytesUsed()_;how,much,heap,is,used,that,would,be,freed,by,a,refresh,note,that,this,may,throw,link,already,closed,exception;public,abstract,long,get,index,buffer,rambytes,used
Engine -> public abstract long getIndexBufferRAMBytesUsed()_;1551126708;How much heap is used that would be freed by a refresh.  Note that this may throw {@link AlreadyClosedException}.;public abstract long getIndexBufferRAMBytesUsed()_;how,much,heap,is,used,that,would,be,freed,by,a,refresh,note,that,this,may,throw,link,already,closed,exception;public,abstract,long,get,index,buffer,rambytes,used
Engine -> public abstract CommitId flush() throws EngineException_;1524684173;Flushes the state of the engine including the transaction log, clearing memory and persisting_documents in the lucene index to disk including a potentially heavy and durable fsync operation._This operation is not going to block if another flush operation is currently running and won't write_a lucene commit if nothing needs to be committed.__@return the commit Id for the resulting commit;public abstract CommitId flush() throws EngineException_;flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,and,persisting,documents,in,the,lucene,index,to,disk,including,a,potentially,heavy,and,durable,fsync,operation,this,operation,is,not,going,to,block,if,another,flush,operation,is,currently,running,and,won,t,write,a,lucene,commit,if,nothing,needs,to,be,committed,return,the,commit,id,for,the,resulting,commit;public,abstract,commit,id,flush,throws,engine,exception
Engine -> public abstract CommitId flush() throws EngineException_;1525162917;Flushes the state of the engine including the transaction log, clearing memory and persisting_documents in the lucene index to disk including a potentially heavy and durable fsync operation._This operation is not going to block if another flush operation is currently running and won't write_a lucene commit if nothing needs to be committed.__@return the commit Id for the resulting commit;public abstract CommitId flush() throws EngineException_;flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,and,persisting,documents,in,the,lucene,index,to,disk,including,a,potentially,heavy,and,durable,fsync,operation,this,operation,is,not,going,to,block,if,another,flush,operation,is,currently,running,and,won,t,write,a,lucene,commit,if,nothing,needs,to,be,committed,return,the,commit,id,for,the,resulting,commit;public,abstract,commit,id,flush,throws,engine,exception
Engine -> public abstract CommitId flush() throws EngineException_;1525334055;Flushes the state of the engine including the transaction log, clearing memory and persisting_documents in the lucene index to disk including a potentially heavy and durable fsync operation._This operation is not going to block if another flush operation is currently running and won't write_a lucene commit if nothing needs to be committed.__@return the commit Id for the resulting commit;public abstract CommitId flush() throws EngineException_;flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,and,persisting,documents,in,the,lucene,index,to,disk,including,a,potentially,heavy,and,durable,fsync,operation,this,operation,is,not,going,to,block,if,another,flush,operation,is,currently,running,and,won,t,write,a,lucene,commit,if,nothing,needs,to,be,committed,return,the,commit,id,for,the,resulting,commit;public,abstract,commit,id,flush,throws,engine,exception
Engine -> public abstract CommitId flush() throws EngineException_;1527583663;Flushes the state of the engine including the transaction log, clearing memory and persisting_documents in the lucene index to disk including a potentially heavy and durable fsync operation._This operation is not going to block if another flush operation is currently running and won't write_a lucene commit if nothing needs to be committed.__@return the commit Id for the resulting commit;public abstract CommitId flush() throws EngineException_;flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,and,persisting,documents,in,the,lucene,index,to,disk,including,a,potentially,heavy,and,durable,fsync,operation,this,operation,is,not,going,to,block,if,another,flush,operation,is,currently,running,and,won,t,write,a,lucene,commit,if,nothing,needs,to,be,committed,return,the,commit,id,for,the,resulting,commit;public,abstract,commit,id,flush,throws,engine,exception
Engine -> public abstract CommitId flush() throws EngineException_;1528706846;Flushes the state of the engine including the transaction log, clearing memory and persisting_documents in the lucene index to disk including a potentially heavy and durable fsync operation._This operation is not going to block if another flush operation is currently running and won't write_a lucene commit if nothing needs to be committed.__@return the commit Id for the resulting commit;public abstract CommitId flush() throws EngineException_;flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,and,persisting,documents,in,the,lucene,index,to,disk,including,a,potentially,heavy,and,durable,fsync,operation,this,operation,is,not,going,to,block,if,another,flush,operation,is,currently,running,and,won,t,write,a,lucene,commit,if,nothing,needs,to,be,committed,return,the,commit,id,for,the,resulting,commit;public,abstract,commit,id,flush,throws,engine,exception
Engine -> public abstract CommitId flush() throws EngineException_;1528762805;Flushes the state of the engine including the transaction log, clearing memory and persisting_documents in the lucene index to disk including a potentially heavy and durable fsync operation._This operation is not going to block if another flush operation is currently running and won't write_a lucene commit if nothing needs to be committed.__@return the commit Id for the resulting commit;public abstract CommitId flush() throws EngineException_;flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,and,persisting,documents,in,the,lucene,index,to,disk,including,a,potentially,heavy,and,durable,fsync,operation,this,operation,is,not,going,to,block,if,another,flush,operation,is,currently,running,and,won,t,write,a,lucene,commit,if,nothing,needs,to,be,committed,return,the,commit,id,for,the,resulting,commit;public,abstract,commit,id,flush,throws,engine,exception
Engine -> public abstract CommitId flush() throws EngineException_;1531910483;Flushes the state of the engine including the transaction log, clearing memory and persisting_documents in the lucene index to disk including a potentially heavy and durable fsync operation._This operation is not going to block if another flush operation is currently running and won't write_a lucene commit if nothing needs to be committed.__@return the commit Id for the resulting commit;public abstract CommitId flush() throws EngineException_;flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,and,persisting,documents,in,the,lucene,index,to,disk,including,a,potentially,heavy,and,durable,fsync,operation,this,operation,is,not,going,to,block,if,another,flush,operation,is,currently,running,and,won,t,write,a,lucene,commit,if,nothing,needs,to,be,committed,return,the,commit,id,for,the,resulting,commit;public,abstract,commit,id,flush,throws,engine,exception
Engine -> public abstract CommitId flush() throws EngineException_;1532685069;Flushes the state of the engine including the transaction log, clearing memory and persisting_documents in the lucene index to disk including a potentially heavy and durable fsync operation._This operation is not going to block if another flush operation is currently running and won't write_a lucene commit if nothing needs to be committed.__@return the commit Id for the resulting commit;public abstract CommitId flush() throws EngineException_;flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,and,persisting,documents,in,the,lucene,index,to,disk,including,a,potentially,heavy,and,durable,fsync,operation,this,operation,is,not,going,to,block,if,another,flush,operation,is,currently,running,and,won,t,write,a,lucene,commit,if,nothing,needs,to,be,committed,return,the,commit,id,for,the,resulting,commit;public,abstract,commit,id,flush,throws,engine,exception
Engine -> public abstract CommitId flush() throws EngineException_;1533295538;Flushes the state of the engine including the transaction log, clearing memory and persisting_documents in the lucene index to disk including a potentially heavy and durable fsync operation._This operation is not going to block if another flush operation is currently running and won't write_a lucene commit if nothing needs to be committed.__@return the commit Id for the resulting commit;public abstract CommitId flush() throws EngineException_;flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,and,persisting,documents,in,the,lucene,index,to,disk,including,a,potentially,heavy,and,durable,fsync,operation,this,operation,is,not,going,to,block,if,another,flush,operation,is,currently,running,and,won,t,write,a,lucene,commit,if,nothing,needs,to,be,committed,return,the,commit,id,for,the,resulting,commit;public,abstract,commit,id,flush,throws,engine,exception
Engine -> public abstract CommitId flush() throws EngineException_;1535046779;Flushes the state of the engine including the transaction log, clearing memory and persisting_documents in the lucene index to disk including a potentially heavy and durable fsync operation._This operation is not going to block if another flush operation is currently running and won't write_a lucene commit if nothing needs to be committed.__@return the commit Id for the resulting commit;public abstract CommitId flush() throws EngineException_;flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,and,persisting,documents,in,the,lucene,index,to,disk,including,a,potentially,heavy,and,durable,fsync,operation,this,operation,is,not,going,to,block,if,another,flush,operation,is,currently,running,and,won,t,write,a,lucene,commit,if,nothing,needs,to,be,committed,return,the,commit,id,for,the,resulting,commit;public,abstract,commit,id,flush,throws,engine,exception
Engine -> public abstract CommitId flush() throws EngineException_;1535723122;Flushes the state of the engine including the transaction log, clearing memory and persisting_documents in the lucene index to disk including a potentially heavy and durable fsync operation._This operation is not going to block if another flush operation is currently running and won't write_a lucene commit if nothing needs to be committed.__@return the commit Id for the resulting commit;public abstract CommitId flush() throws EngineException_;flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,and,persisting,documents,in,the,lucene,index,to,disk,including,a,potentially,heavy,and,durable,fsync,operation,this,operation,is,not,going,to,block,if,another,flush,operation,is,currently,running,and,won,t,write,a,lucene,commit,if,nothing,needs,to,be,committed,return,the,commit,id,for,the,resulting,commit;public,abstract,commit,id,flush,throws,engine,exception
Engine -> public abstract CommitId flush() throws EngineException_;1535965276;Flushes the state of the engine including the transaction log, clearing memory and persisting_documents in the lucene index to disk including a potentially heavy and durable fsync operation._This operation is not going to block if another flush operation is currently running and won't write_a lucene commit if nothing needs to be committed.__@return the commit Id for the resulting commit;public abstract CommitId flush() throws EngineException_;flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,and,persisting,documents,in,the,lucene,index,to,disk,including,a,potentially,heavy,and,durable,fsync,operation,this,operation,is,not,going,to,block,if,another,flush,operation,is,currently,running,and,won,t,write,a,lucene,commit,if,nothing,needs,to,be,committed,return,the,commit,id,for,the,resulting,commit;public,abstract,commit,id,flush,throws,engine,exception
Engine -> public abstract CommitId flush() throws EngineException_;1536314350;Flushes the state of the engine including the transaction log, clearing memory and persisting_documents in the lucene index to disk including a potentially heavy and durable fsync operation._This operation is not going to block if another flush operation is currently running and won't write_a lucene commit if nothing needs to be committed.__@return the commit Id for the resulting commit;public abstract CommitId flush() throws EngineException_;flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,and,persisting,documents,in,the,lucene,index,to,disk,including,a,potentially,heavy,and,durable,fsync,operation,this,operation,is,not,going,to,block,if,another,flush,operation,is,currently,running,and,won,t,write,a,lucene,commit,if,nothing,needs,to,be,committed,return,the,commit,id,for,the,resulting,commit;public,abstract,commit,id,flush,throws,engine,exception
Engine -> public abstract DeleteResult delete(Delete delete) throws IOException_;1524684173;Perform document delete operation on the engine_@param delete operation to perform_@return {@link DeleteResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract DeleteResult delete(Delete delete) throws IOException_;perform,document,delete,operation,on,the,engine,param,delete,operation,to,perform,return,link,delete,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,delete,result,delete,delete,delete,throws,ioexception
Engine -> public abstract DeleteResult delete(Delete delete) throws IOException_;1525162917;Perform document delete operation on the engine_@param delete operation to perform_@return {@link DeleteResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract DeleteResult delete(Delete delete) throws IOException_;perform,document,delete,operation,on,the,engine,param,delete,operation,to,perform,return,link,delete,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,delete,result,delete,delete,delete,throws,ioexception
Engine -> public abstract DeleteResult delete(Delete delete) throws IOException_;1525334055;Perform document delete operation on the engine_@param delete operation to perform_@return {@link DeleteResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract DeleteResult delete(Delete delete) throws IOException_;perform,document,delete,operation,on,the,engine,param,delete,operation,to,perform,return,link,delete,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,delete,result,delete,delete,delete,throws,ioexception
Engine -> public abstract DeleteResult delete(Delete delete) throws IOException_;1527583663;Perform document delete operation on the engine_@param delete operation to perform_@return {@link DeleteResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract DeleteResult delete(Delete delete) throws IOException_;perform,document,delete,operation,on,the,engine,param,delete,operation,to,perform,return,link,delete,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,delete,result,delete,delete,delete,throws,ioexception
Engine -> public abstract DeleteResult delete(Delete delete) throws IOException_;1528706846;Perform document delete operation on the engine_@param delete operation to perform_@return {@link DeleteResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract DeleteResult delete(Delete delete) throws IOException_;perform,document,delete,operation,on,the,engine,param,delete,operation,to,perform,return,link,delete,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,delete,result,delete,delete,delete,throws,ioexception
Engine -> public abstract DeleteResult delete(Delete delete) throws IOException_;1528762805;Perform document delete operation on the engine_@param delete operation to perform_@return {@link DeleteResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract DeleteResult delete(Delete delete) throws IOException_;perform,document,delete,operation,on,the,engine,param,delete,operation,to,perform,return,link,delete,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,delete,result,delete,delete,delete,throws,ioexception
Engine -> public abstract DeleteResult delete(Delete delete) throws IOException_;1531910483;Perform document delete operation on the engine_@param delete operation to perform_@return {@link DeleteResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract DeleteResult delete(Delete delete) throws IOException_;perform,document,delete,operation,on,the,engine,param,delete,operation,to,perform,return,link,delete,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,delete,result,delete,delete,delete,throws,ioexception
Engine -> public abstract DeleteResult delete(Delete delete) throws IOException_;1532685069;Perform document delete operation on the engine_@param delete operation to perform_@return {@link DeleteResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract DeleteResult delete(Delete delete) throws IOException_;perform,document,delete,operation,on,the,engine,param,delete,operation,to,perform,return,link,delete,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,delete,result,delete,delete,delete,throws,ioexception
Engine -> public abstract DeleteResult delete(Delete delete) throws IOException_;1533295538;Perform document delete operation on the engine_@param delete operation to perform_@return {@link DeleteResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract DeleteResult delete(Delete delete) throws IOException_;perform,document,delete,operation,on,the,engine,param,delete,operation,to,perform,return,link,delete,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,delete,result,delete,delete,delete,throws,ioexception
Engine -> public abstract DeleteResult delete(Delete delete) throws IOException_;1535046779;Perform document delete operation on the engine_@param delete operation to perform_@return {@link DeleteResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract DeleteResult delete(Delete delete) throws IOException_;perform,document,delete,operation,on,the,engine,param,delete,operation,to,perform,return,link,delete,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,delete,result,delete,delete,delete,throws,ioexception
Engine -> public abstract DeleteResult delete(Delete delete) throws IOException_;1535723122;Perform document delete operation on the engine_@param delete operation to perform_@return {@link DeleteResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract DeleteResult delete(Delete delete) throws IOException_;perform,document,delete,operation,on,the,engine,param,delete,operation,to,perform,return,link,delete,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,delete,result,delete,delete,delete,throws,ioexception
Engine -> public abstract DeleteResult delete(Delete delete) throws IOException_;1535965276;Perform document delete operation on the engine_@param delete operation to perform_@return {@link DeleteResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract DeleteResult delete(Delete delete) throws IOException_;perform,document,delete,operation,on,the,engine,param,delete,operation,to,perform,return,link,delete,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,delete,result,delete,delete,delete,throws,ioexception
Engine -> public abstract DeleteResult delete(Delete delete) throws IOException_;1536314350;Perform document delete operation on the engine_@param delete operation to perform_@return {@link DeleteResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract DeleteResult delete(Delete delete) throws IOException_;perform,document,delete,operation,on,the,engine,param,delete,operation,to,perform,return,link,delete,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,delete,result,delete,delete,delete,throws,ioexception
Engine -> public abstract DeleteResult delete(Delete delete) throws IOException_;1536828374;Perform document delete operation on the engine_@param delete operation to perform_@return {@link DeleteResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract DeleteResult delete(Delete delete) throws IOException_;perform,document,delete,operation,on,the,engine,param,delete,operation,to,perform,return,link,delete,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,delete,result,delete,delete,delete,throws,ioexception
Engine -> public abstract DeleteResult delete(Delete delete) throws IOException_;1537371806;Perform document delete operation on the engine_@param delete operation to perform_@return {@link DeleteResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract DeleteResult delete(Delete delete) throws IOException_;perform,document,delete,operation,on,the,engine,param,delete,operation,to,perform,return,link,delete,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,delete,result,delete,delete,delete,throws,ioexception
Engine -> public abstract DeleteResult delete(Delete delete) throws IOException_;1537806831;Perform document delete operation on the engine_@param delete operation to perform_@return {@link DeleteResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract DeleteResult delete(Delete delete) throws IOException_;perform,document,delete,operation,on,the,engine,param,delete,operation,to,perform,return,link,delete,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,delete,result,delete,delete,delete,throws,ioexception
Engine -> public abstract DeleteResult delete(Delete delete) throws IOException_;1538067637;Perform document delete operation on the engine_@param delete operation to perform_@return {@link DeleteResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract DeleteResult delete(Delete delete) throws IOException_;perform,document,delete,operation,on,the,engine,param,delete,operation,to,perform,return,link,delete,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,delete,result,delete,delete,delete,throws,ioexception
Engine -> public abstract DeleteResult delete(Delete delete) throws IOException_;1538424609;Perform document delete operation on the engine_@param delete operation to perform_@return {@link DeleteResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract DeleteResult delete(Delete delete) throws IOException_;perform,document,delete,operation,on,the,engine,param,delete,operation,to,perform,return,link,delete,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,delete,result,delete,delete,delete,throws,ioexception
Engine -> public abstract DeleteResult delete(Delete delete) throws IOException_;1539723533;Perform document delete operation on the engine_@param delete operation to perform_@return {@link DeleteResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract DeleteResult delete(Delete delete) throws IOException_;perform,document,delete,operation,on,the,engine,param,delete,operation,to,perform,return,link,delete,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,delete,result,delete,delete,delete,throws,ioexception
Engine -> public abstract DeleteResult delete(Delete delete) throws IOException_;1541618615;Perform document delete operation on the engine_@param delete operation to perform_@return {@link DeleteResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract DeleteResult delete(Delete delete) throws IOException_;perform,document,delete,operation,on,the,engine,param,delete,operation,to,perform,return,link,delete,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,delete,result,delete,delete,delete,throws,ioexception
Engine -> public abstract DeleteResult delete(Delete delete) throws IOException_;1542697754;Perform document delete operation on the engine_@param delete operation to perform_@return {@link DeleteResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract DeleteResult delete(Delete delete) throws IOException_;perform,document,delete,operation,on,the,engine,param,delete,operation,to,perform,return,link,delete,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,delete,result,delete,delete,delete,throws,ioexception
Engine -> public abstract DeleteResult delete(Delete delete) throws IOException_;1543047942;Perform document delete operation on the engine_@param delete operation to perform_@return {@link DeleteResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract DeleteResult delete(Delete delete) throws IOException_;perform,document,delete,operation,on,the,engine,param,delete,operation,to,perform,return,link,delete,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,delete,result,delete,delete,delete,throws,ioexception
Engine -> public abstract DeleteResult delete(Delete delete) throws IOException_;1544545090;Perform document delete operation on the engine_@param delete operation to perform_@return {@link DeleteResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract DeleteResult delete(Delete delete) throws IOException_;perform,document,delete,operation,on,the,engine,param,delete,operation,to,perform,return,link,delete,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,delete,result,delete,delete,delete,throws,ioexception
Engine -> public abstract DeleteResult delete(Delete delete) throws IOException_;1544684920;Perform document delete operation on the engine_@param delete operation to perform_@return {@link DeleteResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract DeleteResult delete(Delete delete) throws IOException_;perform,document,delete,operation,on,the,engine,param,delete,operation,to,perform,return,link,delete,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,delete,result,delete,delete,delete,throws,ioexception
Engine -> public abstract DeleteResult delete(Delete delete) throws IOException_;1545140118;Perform document delete operation on the engine_@param delete operation to perform_@return {@link DeleteResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract DeleteResult delete(Delete delete) throws IOException_;perform,document,delete,operation,on,the,engine,param,delete,operation,to,perform,return,link,delete,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,delete,result,delete,delete,delete,throws,ioexception
Engine -> public abstract DeleteResult delete(Delete delete) throws IOException_;1545221705;Perform document delete operation on the engine_@param delete operation to perform_@return {@link DeleteResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract DeleteResult delete(Delete delete) throws IOException_;perform,document,delete,operation,on,the,engine,param,delete,operation,to,perform,return,link,delete,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,delete,result,delete,delete,delete,throws,ioexception
Engine -> public abstract DeleteResult delete(Delete delete) throws IOException_;1547332999;Perform document delete operation on the engine_@param delete operation to perform_@return {@link DeleteResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract DeleteResult delete(Delete delete) throws IOException_;perform,document,delete,operation,on,the,engine,param,delete,operation,to,perform,return,link,delete,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,delete,result,delete,delete,delete,throws,ioexception
Engine -> public abstract DeleteResult delete(Delete delete) throws IOException_;1548771485;Perform document delete operation on the engine_@param delete operation to perform_@return {@link DeleteResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract DeleteResult delete(Delete delete) throws IOException_;perform,document,delete,operation,on,the,engine,param,delete,operation,to,perform,return,link,delete,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,delete,result,delete,delete,delete,throws,ioexception
Engine -> public abstract DeleteResult delete(Delete delete) throws IOException_;1549891630;Perform document delete operation on the engine_@param delete operation to perform_@return {@link DeleteResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract DeleteResult delete(Delete delete) throws IOException_;perform,document,delete,operation,on,the,engine,param,delete,operation,to,perform,return,link,delete,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,delete,result,delete,delete,delete,throws,ioexception
Engine -> public abstract DeleteResult delete(Delete delete) throws IOException_;1549975032;Perform document delete operation on the engine_@param delete operation to perform_@return {@link DeleteResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract DeleteResult delete(Delete delete) throws IOException_;perform,document,delete,operation,on,the,engine,param,delete,operation,to,perform,return,link,delete,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,delete,result,delete,delete,delete,throws,ioexception
Engine -> public abstract DeleteResult delete(Delete delete) throws IOException_;1550220204;Perform document delete operation on the engine_@param delete operation to perform_@return {@link DeleteResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract DeleteResult delete(Delete delete) throws IOException_;perform,document,delete,operation,on,the,engine,param,delete,operation,to,perform,return,link,delete,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,delete,result,delete,delete,delete,throws,ioexception
Engine -> public abstract DeleteResult delete(Delete delete) throws IOException_;1550526771;Perform document delete operation on the engine_@param delete operation to perform_@return {@link DeleteResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract DeleteResult delete(Delete delete) throws IOException_;perform,document,delete,operation,on,the,engine,param,delete,operation,to,perform,return,link,delete,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,delete,result,delete,delete,delete,throws,ioexception
Engine -> public abstract DeleteResult delete(Delete delete) throws IOException_;1551110274;Perform document delete operation on the engine_@param delete operation to perform_@return {@link DeleteResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract DeleteResult delete(Delete delete) throws IOException_;perform,document,delete,operation,on,the,engine,param,delete,operation,to,perform,return,link,delete,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,delete,result,delete,delete,delete,throws,ioexception
Engine -> public abstract DeleteResult delete(Delete delete) throws IOException_;1551126708;Perform document delete operation on the engine_@param delete operation to perform_@return {@link DeleteResult} containing updated translog location, version and_document specific failures__Note: engine level failures (i.e. persistent engine failures) are thrown;public abstract DeleteResult delete(Delete delete) throws IOException_;perform,document,delete,operation,on,the,engine,param,delete,operation,to,perform,return,link,delete,result,containing,updated,translog,location,version,and,document,specific,failures,note,engine,level,failures,i,e,persistent,engine,failures,are,thrown;public,abstract,delete,result,delete,delete,delete,throws,ioexception
Engine -> public boolean shouldRollTranslogGeneration();1524684173;Tests whether or not the translog generation should be rolled to a new generation._This test is based on the size of the current generation compared to the configured generation threshold size.__@return {@code true} if the current generation should be rolled to a new generation;public boolean shouldRollTranslogGeneration() {_        return getTranslog().shouldRollGeneration()__    };tests,whether,or,not,the,translog,generation,should,be,rolled,to,a,new,generation,this,test,is,based,on,the,size,of,the,current,generation,compared,to,the,configured,generation,threshold,size,return,code,true,if,the,current,generation,should,be,rolled,to,a,new,generation;public,boolean,should,roll,translog,generation,return,get,translog,should,roll,generation
Engine -> public boolean shouldRollTranslogGeneration();1525162917;Tests whether or not the translog generation should be rolled to a new generation._This test is based on the size of the current generation compared to the configured generation threshold size.__@return {@code true} if the current generation should be rolled to a new generation;public boolean shouldRollTranslogGeneration() {_        return getTranslog().shouldRollGeneration()__    };tests,whether,or,not,the,translog,generation,should,be,rolled,to,a,new,generation,this,test,is,based,on,the,size,of,the,current,generation,compared,to,the,configured,generation,threshold,size,return,code,true,if,the,current,generation,should,be,rolled,to,a,new,generation;public,boolean,should,roll,translog,generation,return,get,translog,should,roll,generation
Engine -> public boolean shouldRollTranslogGeneration();1525334055;Tests whether or not the translog generation should be rolled to a new generation._This test is based on the size of the current generation compared to the configured generation threshold size.__@return {@code true} if the current generation should be rolled to a new generation;public boolean shouldRollTranslogGeneration() {_        return getTranslog().shouldRollGeneration()__    };tests,whether,or,not,the,translog,generation,should,be,rolled,to,a,new,generation,this,test,is,based,on,the,size,of,the,current,generation,compared,to,the,configured,generation,threshold,size,return,code,true,if,the,current,generation,should,be,rolled,to,a,new,generation;public,boolean,should,roll,translog,generation,return,get,translog,should,roll,generation
Engine -> public boolean shouldRollTranslogGeneration();1527583663;Tests whether or not the translog generation should be rolled to a new generation._This test is based on the size of the current generation compared to the configured generation threshold size.__@return {@code true} if the current generation should be rolled to a new generation;public boolean shouldRollTranslogGeneration() {_        return getTranslog().shouldRollGeneration()__    };tests,whether,or,not,the,translog,generation,should,be,rolled,to,a,new,generation,this,test,is,based,on,the,size,of,the,current,generation,compared,to,the,configured,generation,threshold,size,return,code,true,if,the,current,generation,should,be,rolled,to,a,new,generation;public,boolean,should,roll,translog,generation,return,get,translog,should,roll,generation
Engine -> public boolean shouldRollTranslogGeneration();1528706846;Tests whether or not the translog generation should be rolled to a new generation._This test is based on the size of the current generation compared to the configured generation threshold size.__@return {@code true} if the current generation should be rolled to a new generation;public boolean shouldRollTranslogGeneration() {_        return getTranslog().shouldRollGeneration()__    };tests,whether,or,not,the,translog,generation,should,be,rolled,to,a,new,generation,this,test,is,based,on,the,size,of,the,current,generation,compared,to,the,configured,generation,threshold,size,return,code,true,if,the,current,generation,should,be,rolled,to,a,new,generation;public,boolean,should,roll,translog,generation,return,get,translog,should,roll,generation
Engine -> public abstract void deactivateThrottling()_;1524684173;Reverses a previous {@link #activateThrottling} call.;public abstract void deactivateThrottling()_;reverses,a,previous,link,activate,throttling,call;public,abstract,void,deactivate,throttling
Engine -> public abstract void deactivateThrottling()_;1525162917;Reverses a previous {@link #activateThrottling} call.;public abstract void deactivateThrottling()_;reverses,a,previous,link,activate,throttling,call;public,abstract,void,deactivate,throttling
Engine -> public abstract void deactivateThrottling()_;1525334055;Reverses a previous {@link #activateThrottling} call.;public abstract void deactivateThrottling()_;reverses,a,previous,link,activate,throttling,call;public,abstract,void,deactivate,throttling
Engine -> public abstract void deactivateThrottling()_;1527583663;Reverses a previous {@link #activateThrottling} call.;public abstract void deactivateThrottling()_;reverses,a,previous,link,activate,throttling,call;public,abstract,void,deactivate,throttling
Engine -> public abstract void deactivateThrottling()_;1528706846;Reverses a previous {@link #activateThrottling} call.;public abstract void deactivateThrottling()_;reverses,a,previous,link,activate,throttling,call;public,abstract,void,deactivate,throttling
Engine -> public abstract void deactivateThrottling()_;1528762805;Reverses a previous {@link #activateThrottling} call.;public abstract void deactivateThrottling()_;reverses,a,previous,link,activate,throttling,call;public,abstract,void,deactivate,throttling
Engine -> public abstract void deactivateThrottling()_;1531910483;Reverses a previous {@link #activateThrottling} call.;public abstract void deactivateThrottling()_;reverses,a,previous,link,activate,throttling,call;public,abstract,void,deactivate,throttling
Engine -> public abstract void deactivateThrottling()_;1532685069;Reverses a previous {@link #activateThrottling} call.;public abstract void deactivateThrottling()_;reverses,a,previous,link,activate,throttling,call;public,abstract,void,deactivate,throttling
Engine -> public abstract void deactivateThrottling()_;1533295538;Reverses a previous {@link #activateThrottling} call.;public abstract void deactivateThrottling()_;reverses,a,previous,link,activate,throttling,call;public,abstract,void,deactivate,throttling
Engine -> public abstract void deactivateThrottling()_;1535046779;Reverses a previous {@link #activateThrottling} call.;public abstract void deactivateThrottling()_;reverses,a,previous,link,activate,throttling,call;public,abstract,void,deactivate,throttling
Engine -> public abstract void deactivateThrottling()_;1535723122;Reverses a previous {@link #activateThrottling} call.;public abstract void deactivateThrottling()_;reverses,a,previous,link,activate,throttling,call;public,abstract,void,deactivate,throttling
Engine -> public abstract void deactivateThrottling()_;1535965276;Reverses a previous {@link #activateThrottling} call.;public abstract void deactivateThrottling()_;reverses,a,previous,link,activate,throttling,call;public,abstract,void,deactivate,throttling
Engine -> public abstract void deactivateThrottling()_;1536314350;Reverses a previous {@link #activateThrottling} call.;public abstract void deactivateThrottling()_;reverses,a,previous,link,activate,throttling,call;public,abstract,void,deactivate,throttling
Engine -> public abstract void deactivateThrottling()_;1536828374;Reverses a previous {@link #activateThrottling} call.;public abstract void deactivateThrottling()_;reverses,a,previous,link,activate,throttling,call;public,abstract,void,deactivate,throttling
Engine -> public abstract void deactivateThrottling()_;1537371806;Reverses a previous {@link #activateThrottling} call.;public abstract void deactivateThrottling()_;reverses,a,previous,link,activate,throttling,call;public,abstract,void,deactivate,throttling
Engine -> public abstract void deactivateThrottling()_;1537806831;Reverses a previous {@link #activateThrottling} call.;public abstract void deactivateThrottling()_;reverses,a,previous,link,activate,throttling,call;public,abstract,void,deactivate,throttling
Engine -> public abstract void deactivateThrottling()_;1538067637;Reverses a previous {@link #activateThrottling} call.;public abstract void deactivateThrottling()_;reverses,a,previous,link,activate,throttling,call;public,abstract,void,deactivate,throttling
Engine -> public abstract void deactivateThrottling()_;1538424609;Reverses a previous {@link #activateThrottling} call.;public abstract void deactivateThrottling()_;reverses,a,previous,link,activate,throttling,call;public,abstract,void,deactivate,throttling
Engine -> public abstract void deactivateThrottling()_;1539723533;Reverses a previous {@link #activateThrottling} call.;public abstract void deactivateThrottling()_;reverses,a,previous,link,activate,throttling,call;public,abstract,void,deactivate,throttling
Engine -> public abstract void deactivateThrottling()_;1541618615;Reverses a previous {@link #activateThrottling} call.;public abstract void deactivateThrottling()_;reverses,a,previous,link,activate,throttling,call;public,abstract,void,deactivate,throttling
Engine -> public abstract void deactivateThrottling()_;1542697754;Reverses a previous {@link #activateThrottling} call.;public abstract void deactivateThrottling()_;reverses,a,previous,link,activate,throttling,call;public,abstract,void,deactivate,throttling
Engine -> public abstract void deactivateThrottling()_;1543047942;Reverses a previous {@link #activateThrottling} call.;public abstract void deactivateThrottling()_;reverses,a,previous,link,activate,throttling,call;public,abstract,void,deactivate,throttling
Engine -> public abstract void deactivateThrottling()_;1544545090;Reverses a previous {@link #activateThrottling} call.;public abstract void deactivateThrottling()_;reverses,a,previous,link,activate,throttling,call;public,abstract,void,deactivate,throttling
Engine -> public abstract void deactivateThrottling()_;1544684920;Reverses a previous {@link #activateThrottling} call.;public abstract void deactivateThrottling()_;reverses,a,previous,link,activate,throttling,call;public,abstract,void,deactivate,throttling
Engine -> public abstract void deactivateThrottling()_;1545140118;Reverses a previous {@link #activateThrottling} call.;public abstract void deactivateThrottling()_;reverses,a,previous,link,activate,throttling,call;public,abstract,void,deactivate,throttling
Engine -> public abstract void deactivateThrottling()_;1545221705;Reverses a previous {@link #activateThrottling} call.;public abstract void deactivateThrottling()_;reverses,a,previous,link,activate,throttling,call;public,abstract,void,deactivate,throttling
Engine -> public abstract void deactivateThrottling()_;1547332999;Reverses a previous {@link #activateThrottling} call.;public abstract void deactivateThrottling()_;reverses,a,previous,link,activate,throttling,call;public,abstract,void,deactivate,throttling
Engine -> public abstract void deactivateThrottling()_;1548771485;Reverses a previous {@link #activateThrottling} call.;public abstract void deactivateThrottling()_;reverses,a,previous,link,activate,throttling,call;public,abstract,void,deactivate,throttling
Engine -> public abstract void deactivateThrottling()_;1549891630;Reverses a previous {@link #activateThrottling} call.;public abstract void deactivateThrottling()_;reverses,a,previous,link,activate,throttling,call;public,abstract,void,deactivate,throttling
Engine -> public abstract void deactivateThrottling()_;1549975032;Reverses a previous {@link #activateThrottling} call.;public abstract void deactivateThrottling()_;reverses,a,previous,link,activate,throttling,call;public,abstract,void,deactivate,throttling
Engine -> public abstract void deactivateThrottling()_;1550220204;Reverses a previous {@link #activateThrottling} call.;public abstract void deactivateThrottling()_;reverses,a,previous,link,activate,throttling,call;public,abstract,void,deactivate,throttling
Engine -> public abstract void deactivateThrottling()_;1550526771;Reverses a previous {@link #activateThrottling} call.;public abstract void deactivateThrottling()_;reverses,a,previous,link,activate,throttling,call;public,abstract,void,deactivate,throttling
Engine -> public abstract void deactivateThrottling()_;1551110274;Reverses a previous {@link #activateThrottling} call.;public abstract void deactivateThrottling()_;reverses,a,previous,link,activate,throttling,call;public,abstract,void,deactivate,throttling
Engine -> public abstract void deactivateThrottling()_;1551126708;Reverses a previous {@link #activateThrottling} call.;public abstract void deactivateThrottling()_;reverses,a,previous,link,activate,throttling,call;public,abstract,void,deactivate,throttling
Engine -> public abstract boolean isThrottled()_;1524684173;Returns the <code>true</code> iff this engine is currently under index throttling._@see #getIndexThrottleTimeInMillis();public abstract boolean isThrottled()_;returns,the,code,true,code,iff,this,engine,is,currently,under,index,throttling,see,get,index,throttle,time,in,millis;public,abstract,boolean,is,throttled
Engine -> public abstract boolean isThrottled()_;1525162917;Returns the <code>true</code> iff this engine is currently under index throttling._@see #getIndexThrottleTimeInMillis();public abstract boolean isThrottled()_;returns,the,code,true,code,iff,this,engine,is,currently,under,index,throttling,see,get,index,throttle,time,in,millis;public,abstract,boolean,is,throttled
Engine -> public abstract boolean isThrottled()_;1525334055;Returns the <code>true</code> iff this engine is currently under index throttling._@see #getIndexThrottleTimeInMillis();public abstract boolean isThrottled()_;returns,the,code,true,code,iff,this,engine,is,currently,under,index,throttling,see,get,index,throttle,time,in,millis;public,abstract,boolean,is,throttled
Engine -> public abstract boolean isThrottled()_;1527583663;Returns the <code>true</code> iff this engine is currently under index throttling._@see #getIndexThrottleTimeInMillis();public abstract boolean isThrottled()_;returns,the,code,true,code,iff,this,engine,is,currently,under,index,throttling,see,get,index,throttle,time,in,millis;public,abstract,boolean,is,throttled
Engine -> public abstract boolean isThrottled()_;1528706846;Returns the <code>true</code> iff this engine is currently under index throttling._@see #getIndexThrottleTimeInMillis();public abstract boolean isThrottled()_;returns,the,code,true,code,iff,this,engine,is,currently,under,index,throttling,see,get,index,throttle,time,in,millis;public,abstract,boolean,is,throttled
Engine -> public abstract boolean isThrottled()_;1528762805;Returns the <code>true</code> iff this engine is currently under index throttling._@see #getIndexThrottleTimeInMillis();public abstract boolean isThrottled()_;returns,the,code,true,code,iff,this,engine,is,currently,under,index,throttling,see,get,index,throttle,time,in,millis;public,abstract,boolean,is,throttled
Engine -> public abstract boolean isThrottled()_;1531910483;Returns the <code>true</code> iff this engine is currently under index throttling._@see #getIndexThrottleTimeInMillis();public abstract boolean isThrottled()_;returns,the,code,true,code,iff,this,engine,is,currently,under,index,throttling,see,get,index,throttle,time,in,millis;public,abstract,boolean,is,throttled
Engine -> public abstract boolean isThrottled()_;1532685069;Returns the <code>true</code> iff this engine is currently under index throttling._@see #getIndexThrottleTimeInMillis();public abstract boolean isThrottled()_;returns,the,code,true,code,iff,this,engine,is,currently,under,index,throttling,see,get,index,throttle,time,in,millis;public,abstract,boolean,is,throttled
Engine -> public abstract boolean isThrottled()_;1533295538;Returns the <code>true</code> iff this engine is currently under index throttling._@see #getIndexThrottleTimeInMillis();public abstract boolean isThrottled()_;returns,the,code,true,code,iff,this,engine,is,currently,under,index,throttling,see,get,index,throttle,time,in,millis;public,abstract,boolean,is,throttled
Engine -> public abstract boolean isThrottled()_;1535046779;Returns the <code>true</code> iff this engine is currently under index throttling._@see #getIndexThrottleTimeInMillis();public abstract boolean isThrottled()_;returns,the,code,true,code,iff,this,engine,is,currently,under,index,throttling,see,get,index,throttle,time,in,millis;public,abstract,boolean,is,throttled
Engine -> public abstract boolean isThrottled()_;1535723122;Returns the <code>true</code> iff this engine is currently under index throttling._@see #getIndexThrottleTimeInMillis();public abstract boolean isThrottled()_;returns,the,code,true,code,iff,this,engine,is,currently,under,index,throttling,see,get,index,throttle,time,in,millis;public,abstract,boolean,is,throttled
Engine -> public abstract boolean isThrottled()_;1535965276;Returns the <code>true</code> iff this engine is currently under index throttling._@see #getIndexThrottleTimeInMillis();public abstract boolean isThrottled()_;returns,the,code,true,code,iff,this,engine,is,currently,under,index,throttling,see,get,index,throttle,time,in,millis;public,abstract,boolean,is,throttled
Engine -> public abstract boolean isThrottled()_;1536314350;Returns the <code>true</code> iff this engine is currently under index throttling._@see #getIndexThrottleTimeInMillis();public abstract boolean isThrottled()_;returns,the,code,true,code,iff,this,engine,is,currently,under,index,throttling,see,get,index,throttle,time,in,millis;public,abstract,boolean,is,throttled
Engine -> public abstract boolean isThrottled()_;1536828374;Returns the <code>true</code> iff this engine is currently under index throttling._@see #getIndexThrottleTimeInMillis();public abstract boolean isThrottled()_;returns,the,code,true,code,iff,this,engine,is,currently,under,index,throttling,see,get,index,throttle,time,in,millis;public,abstract,boolean,is,throttled
Engine -> public abstract boolean isThrottled()_;1537371806;Returns the <code>true</code> iff this engine is currently under index throttling._@see #getIndexThrottleTimeInMillis();public abstract boolean isThrottled()_;returns,the,code,true,code,iff,this,engine,is,currently,under,index,throttling,see,get,index,throttle,time,in,millis;public,abstract,boolean,is,throttled
Engine -> public abstract boolean isThrottled()_;1537806831;Returns the <code>true</code> iff this engine is currently under index throttling._@see #getIndexThrottleTimeInMillis();public abstract boolean isThrottled()_;returns,the,code,true,code,iff,this,engine,is,currently,under,index,throttling,see,get,index,throttle,time,in,millis;public,abstract,boolean,is,throttled
Engine -> public abstract boolean isThrottled()_;1538067637;Returns the <code>true</code> iff this engine is currently under index throttling._@see #getIndexThrottleTimeInMillis();public abstract boolean isThrottled()_;returns,the,code,true,code,iff,this,engine,is,currently,under,index,throttling,see,get,index,throttle,time,in,millis;public,abstract,boolean,is,throttled
Engine -> public abstract boolean isThrottled()_;1538424609;Returns the <code>true</code> iff this engine is currently under index throttling._@see #getIndexThrottleTimeInMillis();public abstract boolean isThrottled()_;returns,the,code,true,code,iff,this,engine,is,currently,under,index,throttling,see,get,index,throttle,time,in,millis;public,abstract,boolean,is,throttled
Engine -> public abstract boolean isThrottled()_;1539723533;Returns the <code>true</code> iff this engine is currently under index throttling._@see #getIndexThrottleTimeInMillis();public abstract boolean isThrottled()_;returns,the,code,true,code,iff,this,engine,is,currently,under,index,throttling,see,get,index,throttle,time,in,millis;public,abstract,boolean,is,throttled
Engine -> public abstract boolean isThrottled()_;1541618615;Returns the <code>true</code> iff this engine is currently under index throttling._@see #getIndexThrottleTimeInMillis();public abstract boolean isThrottled()_;returns,the,code,true,code,iff,this,engine,is,currently,under,index,throttling,see,get,index,throttle,time,in,millis;public,abstract,boolean,is,throttled
Engine -> public abstract boolean isThrottled()_;1542697754;Returns the <code>true</code> iff this engine is currently under index throttling._@see #getIndexThrottleTimeInMillis();public abstract boolean isThrottled()_;returns,the,code,true,code,iff,this,engine,is,currently,under,index,throttling,see,get,index,throttle,time,in,millis;public,abstract,boolean,is,throttled
Engine -> public abstract boolean isThrottled()_;1543047942;Returns the <code>true</code> iff this engine is currently under index throttling._@see #getIndexThrottleTimeInMillis();public abstract boolean isThrottled()_;returns,the,code,true,code,iff,this,engine,is,currently,under,index,throttling,see,get,index,throttle,time,in,millis;public,abstract,boolean,is,throttled
Engine -> public abstract boolean isThrottled()_;1544545090;Returns the <code>true</code> iff this engine is currently under index throttling._@see #getIndexThrottleTimeInMillis();public abstract boolean isThrottled()_;returns,the,code,true,code,iff,this,engine,is,currently,under,index,throttling,see,get,index,throttle,time,in,millis;public,abstract,boolean,is,throttled
Engine -> public abstract boolean isThrottled()_;1544684920;Returns the <code>true</code> iff this engine is currently under index throttling._@see #getIndexThrottleTimeInMillis();public abstract boolean isThrottled()_;returns,the,code,true,code,iff,this,engine,is,currently,under,index,throttling,see,get,index,throttle,time,in,millis;public,abstract,boolean,is,throttled
Engine -> public abstract boolean isThrottled()_;1545140118;Returns the <code>true</code> iff this engine is currently under index throttling._@see #getIndexThrottleTimeInMillis();public abstract boolean isThrottled()_;returns,the,code,true,code,iff,this,engine,is,currently,under,index,throttling,see,get,index,throttle,time,in,millis;public,abstract,boolean,is,throttled
Engine -> public abstract boolean isThrottled()_;1545221705;Returns the <code>true</code> iff this engine is currently under index throttling._@see #getIndexThrottleTimeInMillis();public abstract boolean isThrottled()_;returns,the,code,true,code,iff,this,engine,is,currently,under,index,throttling,see,get,index,throttle,time,in,millis;public,abstract,boolean,is,throttled
Engine -> public abstract boolean isThrottled()_;1547332999;Returns the <code>true</code> iff this engine is currently under index throttling._@see #getIndexThrottleTimeInMillis();public abstract boolean isThrottled()_;returns,the,code,true,code,iff,this,engine,is,currently,under,index,throttling,see,get,index,throttle,time,in,millis;public,abstract,boolean,is,throttled
Engine -> public abstract boolean isThrottled()_;1548771485;Returns the <code>true</code> iff this engine is currently under index throttling._@see #getIndexThrottleTimeInMillis();public abstract boolean isThrottled()_;returns,the,code,true,code,iff,this,engine,is,currently,under,index,throttling,see,get,index,throttle,time,in,millis;public,abstract,boolean,is,throttled
Engine -> public abstract boolean isThrottled()_;1549891630;Returns the <code>true</code> iff this engine is currently under index throttling._@see #getIndexThrottleTimeInMillis();public abstract boolean isThrottled()_;returns,the,code,true,code,iff,this,engine,is,currently,under,index,throttling,see,get,index,throttle,time,in,millis;public,abstract,boolean,is,throttled
Engine -> public abstract boolean isThrottled()_;1549975032;Returns the <code>true</code> iff this engine is currently under index throttling._@see #getIndexThrottleTimeInMillis();public abstract boolean isThrottled()_;returns,the,code,true,code,iff,this,engine,is,currently,under,index,throttling,see,get,index,throttle,time,in,millis;public,abstract,boolean,is,throttled
Engine -> public abstract boolean isThrottled()_;1550220204;Returns the <code>true</code> iff this engine is currently under index throttling._@see #getIndexThrottleTimeInMillis();public abstract boolean isThrottled()_;returns,the,code,true,code,iff,this,engine,is,currently,under,index,throttling,see,get,index,throttle,time,in,millis;public,abstract,boolean,is,throttled
Engine -> public abstract boolean isThrottled()_;1550526771;Returns the <code>true</code> iff this engine is currently under index throttling._@see #getIndexThrottleTimeInMillis();public abstract boolean isThrottled()_;returns,the,code,true,code,iff,this,engine,is,currently,under,index,throttling,see,get,index,throttle,time,in,millis;public,abstract,boolean,is,throttled
Engine -> public abstract boolean isThrottled()_;1551110274;Returns the <code>true</code> iff this engine is currently under index throttling._@see #getIndexThrottleTimeInMillis();public abstract boolean isThrottled()_;returns,the,code,true,code,iff,this,engine,is,currently,under,index,throttling,see,get,index,throttle,time,in,millis;public,abstract,boolean,is,throttled
Engine -> public abstract boolean isThrottled()_;1551126708;Returns the <code>true</code> iff this engine is currently under index throttling._@see #getIndexThrottleTimeInMillis();public abstract boolean isThrottled()_;returns,the,code,true,code,iff,this,engine,is,currently,under,index,throttling,see,get,index,throttle,time,in,millis;public,abstract,boolean,is,throttled
Engine -> public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;1524684173;Flushes the state of the engine including the transaction log, clearing memory.__@param force         if <code>true</code> a lucene commit is executed even if no changes need to be committed._@param waitIfOngoing if <code>true</code> this call will block until all currently running flushes have finished._Otherwise this call will return without blocking._@return the commit Id for the resulting commit;public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,param,force,if,code,true,code,a,lucene,commit,is,executed,even,if,no,changes,need,to,be,committed,param,wait,if,ongoing,if,code,true,code,this,call,will,block,until,all,currently,running,flushes,have,finished,otherwise,this,call,will,return,without,blocking,return,the,commit,id,for,the,resulting,commit;public,abstract,commit,id,flush,boolean,force,boolean,wait,if,ongoing,throws,engine,exception
Engine -> public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;1525162917;Flushes the state of the engine including the transaction log, clearing memory.__@param force         if <code>true</code> a lucene commit is executed even if no changes need to be committed._@param waitIfOngoing if <code>true</code> this call will block until all currently running flushes have finished._Otherwise this call will return without blocking._@return the commit Id for the resulting commit;public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,param,force,if,code,true,code,a,lucene,commit,is,executed,even,if,no,changes,need,to,be,committed,param,wait,if,ongoing,if,code,true,code,this,call,will,block,until,all,currently,running,flushes,have,finished,otherwise,this,call,will,return,without,blocking,return,the,commit,id,for,the,resulting,commit;public,abstract,commit,id,flush,boolean,force,boolean,wait,if,ongoing,throws,engine,exception
Engine -> public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;1525334055;Flushes the state of the engine including the transaction log, clearing memory.__@param force         if <code>true</code> a lucene commit is executed even if no changes need to be committed._@param waitIfOngoing if <code>true</code> this call will block until all currently running flushes have finished._Otherwise this call will return without blocking._@return the commit Id for the resulting commit;public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,param,force,if,code,true,code,a,lucene,commit,is,executed,even,if,no,changes,need,to,be,committed,param,wait,if,ongoing,if,code,true,code,this,call,will,block,until,all,currently,running,flushes,have,finished,otherwise,this,call,will,return,without,blocking,return,the,commit,id,for,the,resulting,commit;public,abstract,commit,id,flush,boolean,force,boolean,wait,if,ongoing,throws,engine,exception
Engine -> public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;1527583663;Flushes the state of the engine including the transaction log, clearing memory.__@param force         if <code>true</code> a lucene commit is executed even if no changes need to be committed._@param waitIfOngoing if <code>true</code> this call will block until all currently running flushes have finished._Otherwise this call will return without blocking._@return the commit Id for the resulting commit;public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,param,force,if,code,true,code,a,lucene,commit,is,executed,even,if,no,changes,need,to,be,committed,param,wait,if,ongoing,if,code,true,code,this,call,will,block,until,all,currently,running,flushes,have,finished,otherwise,this,call,will,return,without,blocking,return,the,commit,id,for,the,resulting,commit;public,abstract,commit,id,flush,boolean,force,boolean,wait,if,ongoing,throws,engine,exception
Engine -> public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;1528706846;Flushes the state of the engine including the transaction log, clearing memory.__@param force         if <code>true</code> a lucene commit is executed even if no changes need to be committed._@param waitIfOngoing if <code>true</code> this call will block until all currently running flushes have finished._Otherwise this call will return without blocking._@return the commit Id for the resulting commit;public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,param,force,if,code,true,code,a,lucene,commit,is,executed,even,if,no,changes,need,to,be,committed,param,wait,if,ongoing,if,code,true,code,this,call,will,block,until,all,currently,running,flushes,have,finished,otherwise,this,call,will,return,without,blocking,return,the,commit,id,for,the,resulting,commit;public,abstract,commit,id,flush,boolean,force,boolean,wait,if,ongoing,throws,engine,exception
Engine -> public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;1528762805;Flushes the state of the engine including the transaction log, clearing memory.__@param force         if <code>true</code> a lucene commit is executed even if no changes need to be committed._@param waitIfOngoing if <code>true</code> this call will block until all currently running flushes have finished._Otherwise this call will return without blocking._@return the commit Id for the resulting commit;public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,param,force,if,code,true,code,a,lucene,commit,is,executed,even,if,no,changes,need,to,be,committed,param,wait,if,ongoing,if,code,true,code,this,call,will,block,until,all,currently,running,flushes,have,finished,otherwise,this,call,will,return,without,blocking,return,the,commit,id,for,the,resulting,commit;public,abstract,commit,id,flush,boolean,force,boolean,wait,if,ongoing,throws,engine,exception
Engine -> public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;1531910483;Flushes the state of the engine including the transaction log, clearing memory.__@param force         if <code>true</code> a lucene commit is executed even if no changes need to be committed._@param waitIfOngoing if <code>true</code> this call will block until all currently running flushes have finished._Otherwise this call will return without blocking._@return the commit Id for the resulting commit;public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,param,force,if,code,true,code,a,lucene,commit,is,executed,even,if,no,changes,need,to,be,committed,param,wait,if,ongoing,if,code,true,code,this,call,will,block,until,all,currently,running,flushes,have,finished,otherwise,this,call,will,return,without,blocking,return,the,commit,id,for,the,resulting,commit;public,abstract,commit,id,flush,boolean,force,boolean,wait,if,ongoing,throws,engine,exception
Engine -> public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;1532685069;Flushes the state of the engine including the transaction log, clearing memory.__@param force         if <code>true</code> a lucene commit is executed even if no changes need to be committed._@param waitIfOngoing if <code>true</code> this call will block until all currently running flushes have finished._Otherwise this call will return without blocking._@return the commit Id for the resulting commit;public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,param,force,if,code,true,code,a,lucene,commit,is,executed,even,if,no,changes,need,to,be,committed,param,wait,if,ongoing,if,code,true,code,this,call,will,block,until,all,currently,running,flushes,have,finished,otherwise,this,call,will,return,without,blocking,return,the,commit,id,for,the,resulting,commit;public,abstract,commit,id,flush,boolean,force,boolean,wait,if,ongoing,throws,engine,exception
Engine -> public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;1533295538;Flushes the state of the engine including the transaction log, clearing memory.__@param force         if <code>true</code> a lucene commit is executed even if no changes need to be committed._@param waitIfOngoing if <code>true</code> this call will block until all currently running flushes have finished._Otherwise this call will return without blocking._@return the commit Id for the resulting commit;public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,param,force,if,code,true,code,a,lucene,commit,is,executed,even,if,no,changes,need,to,be,committed,param,wait,if,ongoing,if,code,true,code,this,call,will,block,until,all,currently,running,flushes,have,finished,otherwise,this,call,will,return,without,blocking,return,the,commit,id,for,the,resulting,commit;public,abstract,commit,id,flush,boolean,force,boolean,wait,if,ongoing,throws,engine,exception
Engine -> public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;1535046779;Flushes the state of the engine including the transaction log, clearing memory.__@param force         if <code>true</code> a lucene commit is executed even if no changes need to be committed._@param waitIfOngoing if <code>true</code> this call will block until all currently running flushes have finished._Otherwise this call will return without blocking._@return the commit Id for the resulting commit;public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,param,force,if,code,true,code,a,lucene,commit,is,executed,even,if,no,changes,need,to,be,committed,param,wait,if,ongoing,if,code,true,code,this,call,will,block,until,all,currently,running,flushes,have,finished,otherwise,this,call,will,return,without,blocking,return,the,commit,id,for,the,resulting,commit;public,abstract,commit,id,flush,boolean,force,boolean,wait,if,ongoing,throws,engine,exception
Engine -> public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;1535723122;Flushes the state of the engine including the transaction log, clearing memory.__@param force         if <code>true</code> a lucene commit is executed even if no changes need to be committed._@param waitIfOngoing if <code>true</code> this call will block until all currently running flushes have finished._Otherwise this call will return without blocking._@return the commit Id for the resulting commit;public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,param,force,if,code,true,code,a,lucene,commit,is,executed,even,if,no,changes,need,to,be,committed,param,wait,if,ongoing,if,code,true,code,this,call,will,block,until,all,currently,running,flushes,have,finished,otherwise,this,call,will,return,without,blocking,return,the,commit,id,for,the,resulting,commit;public,abstract,commit,id,flush,boolean,force,boolean,wait,if,ongoing,throws,engine,exception
Engine -> public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;1535965276;Flushes the state of the engine including the transaction log, clearing memory.__@param force         if <code>true</code> a lucene commit is executed even if no changes need to be committed._@param waitIfOngoing if <code>true</code> this call will block until all currently running flushes have finished._Otherwise this call will return without blocking._@return the commit Id for the resulting commit;public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,param,force,if,code,true,code,a,lucene,commit,is,executed,even,if,no,changes,need,to,be,committed,param,wait,if,ongoing,if,code,true,code,this,call,will,block,until,all,currently,running,flushes,have,finished,otherwise,this,call,will,return,without,blocking,return,the,commit,id,for,the,resulting,commit;public,abstract,commit,id,flush,boolean,force,boolean,wait,if,ongoing,throws,engine,exception
Engine -> public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;1536314350;Flushes the state of the engine including the transaction log, clearing memory.__@param force         if <code>true</code> a lucene commit is executed even if no changes need to be committed._@param waitIfOngoing if <code>true</code> this call will block until all currently running flushes have finished._Otherwise this call will return without blocking._@return the commit Id for the resulting commit;public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,param,force,if,code,true,code,a,lucene,commit,is,executed,even,if,no,changes,need,to,be,committed,param,wait,if,ongoing,if,code,true,code,this,call,will,block,until,all,currently,running,flushes,have,finished,otherwise,this,call,will,return,without,blocking,return,the,commit,id,for,the,resulting,commit;public,abstract,commit,id,flush,boolean,force,boolean,wait,if,ongoing,throws,engine,exception
Engine -> public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;1536828374;Flushes the state of the engine including the transaction log, clearing memory.__@param force         if <code>true</code> a lucene commit is executed even if no changes need to be committed._@param waitIfOngoing if <code>true</code> this call will block until all currently running flushes have finished._Otherwise this call will return without blocking._@return the commit Id for the resulting commit;public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,param,force,if,code,true,code,a,lucene,commit,is,executed,even,if,no,changes,need,to,be,committed,param,wait,if,ongoing,if,code,true,code,this,call,will,block,until,all,currently,running,flushes,have,finished,otherwise,this,call,will,return,without,blocking,return,the,commit,id,for,the,resulting,commit;public,abstract,commit,id,flush,boolean,force,boolean,wait,if,ongoing,throws,engine,exception
Engine -> public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;1537371806;Flushes the state of the engine including the transaction log, clearing memory.__@param force         if <code>true</code> a lucene commit is executed even if no changes need to be committed._@param waitIfOngoing if <code>true</code> this call will block until all currently running flushes have finished._Otherwise this call will return without blocking._@return the commit Id for the resulting commit;public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,param,force,if,code,true,code,a,lucene,commit,is,executed,even,if,no,changes,need,to,be,committed,param,wait,if,ongoing,if,code,true,code,this,call,will,block,until,all,currently,running,flushes,have,finished,otherwise,this,call,will,return,without,blocking,return,the,commit,id,for,the,resulting,commit;public,abstract,commit,id,flush,boolean,force,boolean,wait,if,ongoing,throws,engine,exception
Engine -> public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;1537806831;Flushes the state of the engine including the transaction log, clearing memory.__@param force         if <code>true</code> a lucene commit is executed even if no changes need to be committed._@param waitIfOngoing if <code>true</code> this call will block until all currently running flushes have finished._Otherwise this call will return without blocking._@return the commit Id for the resulting commit;public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,param,force,if,code,true,code,a,lucene,commit,is,executed,even,if,no,changes,need,to,be,committed,param,wait,if,ongoing,if,code,true,code,this,call,will,block,until,all,currently,running,flushes,have,finished,otherwise,this,call,will,return,without,blocking,return,the,commit,id,for,the,resulting,commit;public,abstract,commit,id,flush,boolean,force,boolean,wait,if,ongoing,throws,engine,exception
Engine -> public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;1538067637;Flushes the state of the engine including the transaction log, clearing memory.__@param force         if <code>true</code> a lucene commit is executed even if no changes need to be committed._@param waitIfOngoing if <code>true</code> this call will block until all currently running flushes have finished._Otherwise this call will return without blocking._@return the commit Id for the resulting commit;public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,param,force,if,code,true,code,a,lucene,commit,is,executed,even,if,no,changes,need,to,be,committed,param,wait,if,ongoing,if,code,true,code,this,call,will,block,until,all,currently,running,flushes,have,finished,otherwise,this,call,will,return,without,blocking,return,the,commit,id,for,the,resulting,commit;public,abstract,commit,id,flush,boolean,force,boolean,wait,if,ongoing,throws,engine,exception
Engine -> public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;1538424609;Flushes the state of the engine including the transaction log, clearing memory.__@param force         if <code>true</code> a lucene commit is executed even if no changes need to be committed._@param waitIfOngoing if <code>true</code> this call will block until all currently running flushes have finished._Otherwise this call will return without blocking._@return the commit Id for the resulting commit;public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,param,force,if,code,true,code,a,lucene,commit,is,executed,even,if,no,changes,need,to,be,committed,param,wait,if,ongoing,if,code,true,code,this,call,will,block,until,all,currently,running,flushes,have,finished,otherwise,this,call,will,return,without,blocking,return,the,commit,id,for,the,resulting,commit;public,abstract,commit,id,flush,boolean,force,boolean,wait,if,ongoing,throws,engine,exception
Engine -> public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;1539723533;Flushes the state of the engine including the transaction log, clearing memory.__@param force         if <code>true</code> a lucene commit is executed even if no changes need to be committed._@param waitIfOngoing if <code>true</code> this call will block until all currently running flushes have finished._Otherwise this call will return without blocking._@return the commit Id for the resulting commit;public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,param,force,if,code,true,code,a,lucene,commit,is,executed,even,if,no,changes,need,to,be,committed,param,wait,if,ongoing,if,code,true,code,this,call,will,block,until,all,currently,running,flushes,have,finished,otherwise,this,call,will,return,without,blocking,return,the,commit,id,for,the,resulting,commit;public,abstract,commit,id,flush,boolean,force,boolean,wait,if,ongoing,throws,engine,exception
Engine -> public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;1541618615;Flushes the state of the engine including the transaction log, clearing memory.__@param force         if <code>true</code> a lucene commit is executed even if no changes need to be committed._@param waitIfOngoing if <code>true</code> this call will block until all currently running flushes have finished._Otherwise this call will return without blocking._@return the commit Id for the resulting commit;public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,param,force,if,code,true,code,a,lucene,commit,is,executed,even,if,no,changes,need,to,be,committed,param,wait,if,ongoing,if,code,true,code,this,call,will,block,until,all,currently,running,flushes,have,finished,otherwise,this,call,will,return,without,blocking,return,the,commit,id,for,the,resulting,commit;public,abstract,commit,id,flush,boolean,force,boolean,wait,if,ongoing,throws,engine,exception
Engine -> public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;1542697754;Flushes the state of the engine including the transaction log, clearing memory.__@param force         if <code>true</code> a lucene commit is executed even if no changes need to be committed._@param waitIfOngoing if <code>true</code> this call will block until all currently running flushes have finished._Otherwise this call will return without blocking._@return the commit Id for the resulting commit;public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,param,force,if,code,true,code,a,lucene,commit,is,executed,even,if,no,changes,need,to,be,committed,param,wait,if,ongoing,if,code,true,code,this,call,will,block,until,all,currently,running,flushes,have,finished,otherwise,this,call,will,return,without,blocking,return,the,commit,id,for,the,resulting,commit;public,abstract,commit,id,flush,boolean,force,boolean,wait,if,ongoing,throws,engine,exception
Engine -> public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;1543047942;Flushes the state of the engine including the transaction log, clearing memory.__@param force         if <code>true</code> a lucene commit is executed even if no changes need to be committed._@param waitIfOngoing if <code>true</code> this call will block until all currently running flushes have finished._Otherwise this call will return without blocking._@return the commit Id for the resulting commit;public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,param,force,if,code,true,code,a,lucene,commit,is,executed,even,if,no,changes,need,to,be,committed,param,wait,if,ongoing,if,code,true,code,this,call,will,block,until,all,currently,running,flushes,have,finished,otherwise,this,call,will,return,without,blocking,return,the,commit,id,for,the,resulting,commit;public,abstract,commit,id,flush,boolean,force,boolean,wait,if,ongoing,throws,engine,exception
Engine -> public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;1544545090;Flushes the state of the engine including the transaction log, clearing memory.__@param force         if <code>true</code> a lucene commit is executed even if no changes need to be committed._@param waitIfOngoing if <code>true</code> this call will block until all currently running flushes have finished._Otherwise this call will return without blocking._@return the commit Id for the resulting commit;public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,param,force,if,code,true,code,a,lucene,commit,is,executed,even,if,no,changes,need,to,be,committed,param,wait,if,ongoing,if,code,true,code,this,call,will,block,until,all,currently,running,flushes,have,finished,otherwise,this,call,will,return,without,blocking,return,the,commit,id,for,the,resulting,commit;public,abstract,commit,id,flush,boolean,force,boolean,wait,if,ongoing,throws,engine,exception
Engine -> public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;1544684920;Flushes the state of the engine including the transaction log, clearing memory.__@param force         if <code>true</code> a lucene commit is executed even if no changes need to be committed._@param waitIfOngoing if <code>true</code> this call will block until all currently running flushes have finished._Otherwise this call will return without blocking._@return the commit Id for the resulting commit;public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,param,force,if,code,true,code,a,lucene,commit,is,executed,even,if,no,changes,need,to,be,committed,param,wait,if,ongoing,if,code,true,code,this,call,will,block,until,all,currently,running,flushes,have,finished,otherwise,this,call,will,return,without,blocking,return,the,commit,id,for,the,resulting,commit;public,abstract,commit,id,flush,boolean,force,boolean,wait,if,ongoing,throws,engine,exception
Engine -> public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;1545140118;Flushes the state of the engine including the transaction log, clearing memory.__@param force         if <code>true</code> a lucene commit is executed even if no changes need to be committed._@param waitIfOngoing if <code>true</code> this call will block until all currently running flushes have finished._Otherwise this call will return without blocking._@return the commit Id for the resulting commit;public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,param,force,if,code,true,code,a,lucene,commit,is,executed,even,if,no,changes,need,to,be,committed,param,wait,if,ongoing,if,code,true,code,this,call,will,block,until,all,currently,running,flushes,have,finished,otherwise,this,call,will,return,without,blocking,return,the,commit,id,for,the,resulting,commit;public,abstract,commit,id,flush,boolean,force,boolean,wait,if,ongoing,throws,engine,exception
Engine -> public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;1545221705;Flushes the state of the engine including the transaction log, clearing memory.__@param force         if <code>true</code> a lucene commit is executed even if no changes need to be committed._@param waitIfOngoing if <code>true</code> this call will block until all currently running flushes have finished._Otherwise this call will return without blocking._@return the commit Id for the resulting commit;public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,param,force,if,code,true,code,a,lucene,commit,is,executed,even,if,no,changes,need,to,be,committed,param,wait,if,ongoing,if,code,true,code,this,call,will,block,until,all,currently,running,flushes,have,finished,otherwise,this,call,will,return,without,blocking,return,the,commit,id,for,the,resulting,commit;public,abstract,commit,id,flush,boolean,force,boolean,wait,if,ongoing,throws,engine,exception
Engine -> public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;1547332999;Flushes the state of the engine including the transaction log, clearing memory.__@param force         if <code>true</code> a lucene commit is executed even if no changes need to be committed._@param waitIfOngoing if <code>true</code> this call will block until all currently running flushes have finished._Otherwise this call will return without blocking._@return the commit Id for the resulting commit;public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,param,force,if,code,true,code,a,lucene,commit,is,executed,even,if,no,changes,need,to,be,committed,param,wait,if,ongoing,if,code,true,code,this,call,will,block,until,all,currently,running,flushes,have,finished,otherwise,this,call,will,return,without,blocking,return,the,commit,id,for,the,resulting,commit;public,abstract,commit,id,flush,boolean,force,boolean,wait,if,ongoing,throws,engine,exception
Engine -> public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;1548771485;Flushes the state of the engine including the transaction log, clearing memory.__@param force         if <code>true</code> a lucene commit is executed even if no changes need to be committed._@param waitIfOngoing if <code>true</code> this call will block until all currently running flushes have finished._Otherwise this call will return without blocking._@return the commit Id for the resulting commit;public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,param,force,if,code,true,code,a,lucene,commit,is,executed,even,if,no,changes,need,to,be,committed,param,wait,if,ongoing,if,code,true,code,this,call,will,block,until,all,currently,running,flushes,have,finished,otherwise,this,call,will,return,without,blocking,return,the,commit,id,for,the,resulting,commit;public,abstract,commit,id,flush,boolean,force,boolean,wait,if,ongoing,throws,engine,exception
Engine -> public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;1549891630;Flushes the state of the engine including the transaction log, clearing memory.__@param force         if <code>true</code> a lucene commit is executed even if no changes need to be committed._@param waitIfOngoing if <code>true</code> this call will block until all currently running flushes have finished._Otherwise this call will return without blocking._@return the commit Id for the resulting commit;public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,param,force,if,code,true,code,a,lucene,commit,is,executed,even,if,no,changes,need,to,be,committed,param,wait,if,ongoing,if,code,true,code,this,call,will,block,until,all,currently,running,flushes,have,finished,otherwise,this,call,will,return,without,blocking,return,the,commit,id,for,the,resulting,commit;public,abstract,commit,id,flush,boolean,force,boolean,wait,if,ongoing,throws,engine,exception
Engine -> public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;1549975032;Flushes the state of the engine including the transaction log, clearing memory.__@param force         if <code>true</code> a lucene commit is executed even if no changes need to be committed._@param waitIfOngoing if <code>true</code> this call will block until all currently running flushes have finished._Otherwise this call will return without blocking._@return the commit Id for the resulting commit;public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,param,force,if,code,true,code,a,lucene,commit,is,executed,even,if,no,changes,need,to,be,committed,param,wait,if,ongoing,if,code,true,code,this,call,will,block,until,all,currently,running,flushes,have,finished,otherwise,this,call,will,return,without,blocking,return,the,commit,id,for,the,resulting,commit;public,abstract,commit,id,flush,boolean,force,boolean,wait,if,ongoing,throws,engine,exception
Engine -> public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;1550220204;Flushes the state of the engine including the transaction log, clearing memory.__@param force         if <code>true</code> a lucene commit is executed even if no changes need to be committed._@param waitIfOngoing if <code>true</code> this call will block until all currently running flushes have finished._Otherwise this call will return without blocking._@return the commit Id for the resulting commit;public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,param,force,if,code,true,code,a,lucene,commit,is,executed,even,if,no,changes,need,to,be,committed,param,wait,if,ongoing,if,code,true,code,this,call,will,block,until,all,currently,running,flushes,have,finished,otherwise,this,call,will,return,without,blocking,return,the,commit,id,for,the,resulting,commit;public,abstract,commit,id,flush,boolean,force,boolean,wait,if,ongoing,throws,engine,exception
Engine -> public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;1550526771;Flushes the state of the engine including the transaction log, clearing memory.__@param force         if <code>true</code> a lucene commit is executed even if no changes need to be committed._@param waitIfOngoing if <code>true</code> this call will block until all currently running flushes have finished._Otherwise this call will return without blocking._@return the commit Id for the resulting commit;public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,param,force,if,code,true,code,a,lucene,commit,is,executed,even,if,no,changes,need,to,be,committed,param,wait,if,ongoing,if,code,true,code,this,call,will,block,until,all,currently,running,flushes,have,finished,otherwise,this,call,will,return,without,blocking,return,the,commit,id,for,the,resulting,commit;public,abstract,commit,id,flush,boolean,force,boolean,wait,if,ongoing,throws,engine,exception
Engine -> public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;1551110274;Flushes the state of the engine including the transaction log, clearing memory.__@param force         if <code>true</code> a lucene commit is executed even if no changes need to be committed._@param waitIfOngoing if <code>true</code> this call will block until all currently running flushes have finished._Otherwise this call will return without blocking._@return the commit Id for the resulting commit;public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,param,force,if,code,true,code,a,lucene,commit,is,executed,even,if,no,changes,need,to,be,committed,param,wait,if,ongoing,if,code,true,code,this,call,will,block,until,all,currently,running,flushes,have,finished,otherwise,this,call,will,return,without,blocking,return,the,commit,id,for,the,resulting,commit;public,abstract,commit,id,flush,boolean,force,boolean,wait,if,ongoing,throws,engine,exception
Engine -> public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;1551126708;Flushes the state of the engine including the transaction log, clearing memory.__@param force         if <code>true</code> a lucene commit is executed even if no changes need to be committed._@param waitIfOngoing if <code>true</code> this call will block until all currently running flushes have finished._Otherwise this call will return without blocking._@return the commit Id for the resulting commit;public abstract CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException_;flushes,the,state,of,the,engine,including,the,transaction,log,clearing,memory,param,force,if,code,true,code,a,lucene,commit,is,executed,even,if,no,changes,need,to,be,committed,param,wait,if,ongoing,if,code,true,code,this,call,will,block,until,all,currently,running,flushes,have,finished,otherwise,this,call,will,return,without,blocking,return,the,commit,id,for,the,resulting,commit;public,abstract,commit,id,flush,boolean,force,boolean,wait,if,ongoing,throws,engine,exception
Engine -> public boolean isRecovering();1524684173;Returns <code>true</code> iff this engine is currently recovering from translog.;public boolean isRecovering() {_        return false__    };returns,code,true,code,iff,this,engine,is,currently,recovering,from,translog;public,boolean,is,recovering,return,false
Engine -> public boolean isRecovering();1525162917;Returns <code>true</code> iff this engine is currently recovering from translog.;public boolean isRecovering() {_        return false__    };returns,code,true,code,iff,this,engine,is,currently,recovering,from,translog;public,boolean,is,recovering,return,false
Engine -> public boolean isRecovering();1525334055;Returns <code>true</code> iff this engine is currently recovering from translog.;public boolean isRecovering() {_        return false__    };returns,code,true,code,iff,this,engine,is,currently,recovering,from,translog;public,boolean,is,recovering,return,false
Engine -> public boolean isRecovering();1527583663;Returns <code>true</code> iff this engine is currently recovering from translog.;public boolean isRecovering() {_        return false__    };returns,code,true,code,iff,this,engine,is,currently,recovering,from,translog;public,boolean,is,recovering,return,false
Engine -> public boolean isRecovering();1528706846;Returns <code>true</code> iff this engine is currently recovering from translog.;public boolean isRecovering() {_        return false__    };returns,code,true,code,iff,this,engine,is,currently,recovering,from,translog;public,boolean,is,recovering,return,false
Engine -> public boolean isRecovering();1528762805;Returns <code>true</code> iff this engine is currently recovering from translog.;public boolean isRecovering() {_        return false__    };returns,code,true,code,iff,this,engine,is,currently,recovering,from,translog;public,boolean,is,recovering,return,false
Engine -> public boolean isRecovering();1531910483;Returns <code>true</code> iff this engine is currently recovering from translog.;public boolean isRecovering() {_        return false__    };returns,code,true,code,iff,this,engine,is,currently,recovering,from,translog;public,boolean,is,recovering,return,false
Engine -> public boolean isRecovering();1532685069;Returns <code>true</code> iff this engine is currently recovering from translog.;public boolean isRecovering() {_        return false__    };returns,code,true,code,iff,this,engine,is,currently,recovering,from,translog;public,boolean,is,recovering,return,false
Engine -> public boolean isRecovering();1533295538;Returns <code>true</code> iff this engine is currently recovering from translog.;public boolean isRecovering() {_        return false__    };returns,code,true,code,iff,this,engine,is,currently,recovering,from,translog;public,boolean,is,recovering,return,false
Engine -> public boolean isRecovering();1535046779;Returns <code>true</code> iff this engine is currently recovering from translog.;public boolean isRecovering() {_        return false__    };returns,code,true,code,iff,this,engine,is,currently,recovering,from,translog;public,boolean,is,recovering,return,false
Engine -> public boolean isRecovering();1535723122;Returns <code>true</code> iff this engine is currently recovering from translog.;public boolean isRecovering() {_        return false__    };returns,code,true,code,iff,this,engine,is,currently,recovering,from,translog;public,boolean,is,recovering,return,false
Engine -> public boolean isRecovering();1535965276;Returns <code>true</code> iff this engine is currently recovering from translog.;public boolean isRecovering() {_        return false__    };returns,code,true,code,iff,this,engine,is,currently,recovering,from,translog;public,boolean,is,recovering,return,false
Engine -> public boolean isRecovering();1536314350;Returns <code>true</code> iff this engine is currently recovering from translog.;public boolean isRecovering() {_        return false__    };returns,code,true,code,iff,this,engine,is,currently,recovering,from,translog;public,boolean,is,recovering,return,false
Engine -> public boolean isRecovering();1536828374;Returns <code>true</code> iff this engine is currently recovering from translog.;public boolean isRecovering() {_        return false__    };returns,code,true,code,iff,this,engine,is,currently,recovering,from,translog;public,boolean,is,recovering,return,false
Engine -> public boolean isRecovering();1537371806;Returns <code>true</code> iff this engine is currently recovering from translog.;public boolean isRecovering() {_        return false__    };returns,code,true,code,iff,this,engine,is,currently,recovering,from,translog;public,boolean,is,recovering,return,false
Engine -> public boolean isRecovering();1537806831;Returns <code>true</code> iff this engine is currently recovering from translog.;public boolean isRecovering() {_        return false__    };returns,code,true,code,iff,this,engine,is,currently,recovering,from,translog;public,boolean,is,recovering,return,false
Engine -> public boolean isRecovering();1538067637;Returns <code>true</code> iff this engine is currently recovering from translog.;public boolean isRecovering() {_        return false__    };returns,code,true,code,iff,this,engine,is,currently,recovering,from,translog;public,boolean,is,recovering,return,false
Engine -> public boolean isRecovering();1538424609;Returns <code>true</code> iff this engine is currently recovering from translog.;public boolean isRecovering() {_        return false__    };returns,code,true,code,iff,this,engine,is,currently,recovering,from,translog;public,boolean,is,recovering,return,false
Engine -> public boolean isRecovering();1539723533;Returns <code>true</code> iff this engine is currently recovering from translog.;public boolean isRecovering() {_        return false__    };returns,code,true,code,iff,this,engine,is,currently,recovering,from,translog;public,boolean,is,recovering,return,false
Engine -> public boolean isRecovering();1541618615;Returns <code>true</code> iff this engine is currently recovering from translog.;public boolean isRecovering() {_        return false__    };returns,code,true,code,iff,this,engine,is,currently,recovering,from,translog;public,boolean,is,recovering,return,false
Engine -> public boolean isRecovering();1542697754;Returns <code>true</code> iff this engine is currently recovering from translog.;public boolean isRecovering() {_        return false__    };returns,code,true,code,iff,this,engine,is,currently,recovering,from,translog;public,boolean,is,recovering,return,false
Engine -> public boolean isRecovering();1543047942;Returns <code>true</code> iff this engine is currently recovering from translog.;public boolean isRecovering() {_        return false__    };returns,code,true,code,iff,this,engine,is,currently,recovering,from,translog;public,boolean,is,recovering,return,false
Engine -> public boolean isRecovering();1544545090;Returns <code>true</code> iff this engine is currently recovering from translog.;public boolean isRecovering() {_        return false__    };returns,code,true,code,iff,this,engine,is,currently,recovering,from,translog;public,boolean,is,recovering,return,false
Engine -> public boolean isRecovering();1544684920;Returns <code>true</code> iff this engine is currently recovering from translog.;public boolean isRecovering() {_        return false__    };returns,code,true,code,iff,this,engine,is,currently,recovering,from,translog;public,boolean,is,recovering,return,false
Engine -> public boolean isRecovering();1545140118;Returns <code>true</code> iff this engine is currently recovering from translog.;public boolean isRecovering() {_        return false__    };returns,code,true,code,iff,this,engine,is,currently,recovering,from,translog;public,boolean,is,recovering,return,false
Engine -> public boolean isRecovering();1545221705;Returns <code>true</code> iff this engine is currently recovering from translog.;public boolean isRecovering() {_        return false__    };returns,code,true,code,iff,this,engine,is,currently,recovering,from,translog;public,boolean,is,recovering,return,false
Engine -> public boolean isRecovering();1547332999;Returns <code>true</code> iff this engine is currently recovering from translog.;public boolean isRecovering() {_        return false__    };returns,code,true,code,iff,this,engine,is,currently,recovering,from,translog;public,boolean,is,recovering,return,false
Engine -> public boolean isRecovering();1548771485;Returns <code>true</code> iff this engine is currently recovering from translog.;public boolean isRecovering() {_        return false__    };returns,code,true,code,iff,this,engine,is,currently,recovering,from,translog;public,boolean,is,recovering,return,false
Engine -> public boolean isRecovering();1549891630;Returns <code>true</code> iff this engine is currently recovering from translog.;public boolean isRecovering() {_        return false__    };returns,code,true,code,iff,this,engine,is,currently,recovering,from,translog;public,boolean,is,recovering,return,false
Engine -> public boolean isRecovering();1549975032;Returns <code>true</code> iff this engine is currently recovering from translog.;public boolean isRecovering() {_        return false__    };returns,code,true,code,iff,this,engine,is,currently,recovering,from,translog;public,boolean,is,recovering,return,false
Engine -> public boolean isRecovering();1550220204;Returns <code>true</code> iff this engine is currently recovering from translog.;public boolean isRecovering() {_        return false__    };returns,code,true,code,iff,this,engine,is,currently,recovering,from,translog;public,boolean,is,recovering,return,false
Engine -> public boolean isRecovering();1550526771;Returns <code>true</code> iff this engine is currently recovering from translog.;public boolean isRecovering() {_        return false__    };returns,code,true,code,iff,this,engine,is,currently,recovering,from,translog;public,boolean,is,recovering,return,false
Engine -> public boolean isRecovering();1551110274;Returns <code>true</code> iff this engine is currently recovering from translog.;public boolean isRecovering() {_        return false__    };returns,code,true,code,iff,this,engine,is,currently,recovering,from,translog;public,boolean,is,recovering,return,false
Engine -> public boolean isRecovering();1551126708;Returns <code>true</code> iff this engine is currently recovering from translog.;public boolean isRecovering() {_        return false__    };returns,code,true,code,iff,this,engine,is,currently,recovering,from,translog;public,boolean,is,recovering,return,false
Engine -> public abstract Translog.Snapshot newChangesSnapshot(String source, MapperService mapperService,                                                          long fromSeqNo, long toSeqNo, boolean requiredFullRange) throws IOException_;1535723122;Creates a new history snapshot from Lucene for reading operations whose seqno in the requesting seqno range (both inclusive);public abstract Translog.Snapshot newChangesSnapshot(String source, MapperService mapperService,_                                                         long fromSeqNo, long toSeqNo, boolean requiredFullRange) throws IOException_;creates,a,new,history,snapshot,from,lucene,for,reading,operations,whose,seqno,in,the,requesting,seqno,range,both,inclusive;public,abstract,translog,snapshot,new,changes,snapshot,string,source,mapper,service,mapper,service,long,from,seq,no,long,to,seq,no,boolean,required,full,range,throws,ioexception
Engine -> public abstract Translog.Snapshot newChangesSnapshot(String source, MapperService mapperService,                                                          long fromSeqNo, long toSeqNo, boolean requiredFullRange) throws IOException_;1535965276;Creates a new history snapshot from Lucene for reading operations whose seqno in the requesting seqno range (both inclusive);public abstract Translog.Snapshot newChangesSnapshot(String source, MapperService mapperService,_                                                         long fromSeqNo, long toSeqNo, boolean requiredFullRange) throws IOException_;creates,a,new,history,snapshot,from,lucene,for,reading,operations,whose,seqno,in,the,requesting,seqno,range,both,inclusive;public,abstract,translog,snapshot,new,changes,snapshot,string,source,mapper,service,mapper,service,long,from,seq,no,long,to,seq,no,boolean,required,full,range,throws,ioexception
Engine -> public abstract Translog.Snapshot newChangesSnapshot(String source, MapperService mapperService,                                                          long fromSeqNo, long toSeqNo, boolean requiredFullRange) throws IOException_;1536314350;Creates a new history snapshot from Lucene for reading operations whose seqno in the requesting seqno range (both inclusive);public abstract Translog.Snapshot newChangesSnapshot(String source, MapperService mapperService,_                                                         long fromSeqNo, long toSeqNo, boolean requiredFullRange) throws IOException_;creates,a,new,history,snapshot,from,lucene,for,reading,operations,whose,seqno,in,the,requesting,seqno,range,both,inclusive;public,abstract,translog,snapshot,new,changes,snapshot,string,source,mapper,service,mapper,service,long,from,seq,no,long,to,seq,no,boolean,required,full,range,throws,ioexception
Engine -> public abstract Translog.Snapshot newChangesSnapshot(String source, MapperService mapperService,                                                          long fromSeqNo, long toSeqNo, boolean requiredFullRange) throws IOException_;1536828374;Creates a new history snapshot from Lucene for reading operations whose seqno in the requesting seqno range (both inclusive);public abstract Translog.Snapshot newChangesSnapshot(String source, MapperService mapperService,_                                                         long fromSeqNo, long toSeqNo, boolean requiredFullRange) throws IOException_;creates,a,new,history,snapshot,from,lucene,for,reading,operations,whose,seqno,in,the,requesting,seqno,range,both,inclusive;public,abstract,translog,snapshot,new,changes,snapshot,string,source,mapper,service,mapper,service,long,from,seq,no,long,to,seq,no,boolean,required,full,range,throws,ioexception
Engine -> public abstract Translog.Snapshot newChangesSnapshot(String source, MapperService mapperService,                                                          long fromSeqNo, long toSeqNo, boolean requiredFullRange) throws IOException_;1537371806;Creates a new history snapshot from Lucene for reading operations whose seqno in the requesting seqno range (both inclusive);public abstract Translog.Snapshot newChangesSnapshot(String source, MapperService mapperService,_                                                         long fromSeqNo, long toSeqNo, boolean requiredFullRange) throws IOException_;creates,a,new,history,snapshot,from,lucene,for,reading,operations,whose,seqno,in,the,requesting,seqno,range,both,inclusive;public,abstract,translog,snapshot,new,changes,snapshot,string,source,mapper,service,mapper,service,long,from,seq,no,long,to,seq,no,boolean,required,full,range,throws,ioexception
Engine -> public abstract Translog.Snapshot newChangesSnapshot(String source, MapperService mapperService,                                                          long fromSeqNo, long toSeqNo, boolean requiredFullRange) throws IOException_;1537806831;Creates a new history snapshot from Lucene for reading operations whose seqno in the requesting seqno range (both inclusive);public abstract Translog.Snapshot newChangesSnapshot(String source, MapperService mapperService,_                                                         long fromSeqNo, long toSeqNo, boolean requiredFullRange) throws IOException_;creates,a,new,history,snapshot,from,lucene,for,reading,operations,whose,seqno,in,the,requesting,seqno,range,both,inclusive;public,abstract,translog,snapshot,new,changes,snapshot,string,source,mapper,service,mapper,service,long,from,seq,no,long,to,seq,no,boolean,required,full,range,throws,ioexception
Engine -> public abstract Translog.Snapshot newChangesSnapshot(String source, MapperService mapperService,                                                          long fromSeqNo, long toSeqNo, boolean requiredFullRange) throws IOException_;1538067637;Creates a new history snapshot from Lucene for reading operations whose seqno in the requesting seqno range (both inclusive);public abstract Translog.Snapshot newChangesSnapshot(String source, MapperService mapperService,_                                                         long fromSeqNo, long toSeqNo, boolean requiredFullRange) throws IOException_;creates,a,new,history,snapshot,from,lucene,for,reading,operations,whose,seqno,in,the,requesting,seqno,range,both,inclusive;public,abstract,translog,snapshot,new,changes,snapshot,string,source,mapper,service,mapper,service,long,from,seq,no,long,to,seq,no,boolean,required,full,range,throws,ioexception
Engine -> public abstract Translog.Snapshot newChangesSnapshot(String source, MapperService mapperService,                                                          long fromSeqNo, long toSeqNo, boolean requiredFullRange) throws IOException_;1538424609;Creates a new history snapshot from Lucene for reading operations whose seqno in the requesting seqno range (both inclusive);public abstract Translog.Snapshot newChangesSnapshot(String source, MapperService mapperService,_                                                         long fromSeqNo, long toSeqNo, boolean requiredFullRange) throws IOException_;creates,a,new,history,snapshot,from,lucene,for,reading,operations,whose,seqno,in,the,requesting,seqno,range,both,inclusive;public,abstract,translog,snapshot,new,changes,snapshot,string,source,mapper,service,mapper,service,long,from,seq,no,long,to,seq,no,boolean,required,full,range,throws,ioexception
Engine -> public abstract Translog.Snapshot newChangesSnapshot(String source, MapperService mapperService,                                                          long fromSeqNo, long toSeqNo, boolean requiredFullRange) throws IOException_;1539723533;Creates a new history snapshot from Lucene for reading operations whose seqno in the requesting seqno range (both inclusive);public abstract Translog.Snapshot newChangesSnapshot(String source, MapperService mapperService,_                                                         long fromSeqNo, long toSeqNo, boolean requiredFullRange) throws IOException_;creates,a,new,history,snapshot,from,lucene,for,reading,operations,whose,seqno,in,the,requesting,seqno,range,both,inclusive;public,abstract,translog,snapshot,new,changes,snapshot,string,source,mapper,service,mapper,service,long,from,seq,no,long,to,seq,no,boolean,required,full,range,throws,ioexception
Engine -> public abstract Translog.Snapshot newChangesSnapshot(String source, MapperService mapperService,                                                          long fromSeqNo, long toSeqNo, boolean requiredFullRange) throws IOException_;1541618615;Creates a new history snapshot from Lucene for reading operations whose seqno in the requesting seqno range (both inclusive);public abstract Translog.Snapshot newChangesSnapshot(String source, MapperService mapperService,_                                                         long fromSeqNo, long toSeqNo, boolean requiredFullRange) throws IOException_;creates,a,new,history,snapshot,from,lucene,for,reading,operations,whose,seqno,in,the,requesting,seqno,range,both,inclusive;public,abstract,translog,snapshot,new,changes,snapshot,string,source,mapper,service,mapper,service,long,from,seq,no,long,to,seq,no,boolean,required,full,range,throws,ioexception
Engine -> public abstract Translog.Snapshot newChangesSnapshot(String source, MapperService mapperService,                                                          long fromSeqNo, long toSeqNo, boolean requiredFullRange) throws IOException_;1542697754;Creates a new history snapshot from Lucene for reading operations whose seqno in the requesting seqno range (both inclusive);public abstract Translog.Snapshot newChangesSnapshot(String source, MapperService mapperService,_                                                         long fromSeqNo, long toSeqNo, boolean requiredFullRange) throws IOException_;creates,a,new,history,snapshot,from,lucene,for,reading,operations,whose,seqno,in,the,requesting,seqno,range,both,inclusive;public,abstract,translog,snapshot,new,changes,snapshot,string,source,mapper,service,mapper,service,long,from,seq,no,long,to,seq,no,boolean,required,full,range,throws,ioexception
Engine -> public abstract Translog.Snapshot newChangesSnapshot(String source, MapperService mapperService,                                                          long fromSeqNo, long toSeqNo, boolean requiredFullRange) throws IOException_;1543047942;Creates a new history snapshot from Lucene for reading operations whose seqno in the requesting seqno range (both inclusive);public abstract Translog.Snapshot newChangesSnapshot(String source, MapperService mapperService,_                                                         long fromSeqNo, long toSeqNo, boolean requiredFullRange) throws IOException_;creates,a,new,history,snapshot,from,lucene,for,reading,operations,whose,seqno,in,the,requesting,seqno,range,both,inclusive;public,abstract,translog,snapshot,new,changes,snapshot,string,source,mapper,service,mapper,service,long,from,seq,no,long,to,seq,no,boolean,required,full,range,throws,ioexception
Engine -> public abstract Translog.Snapshot newChangesSnapshot(String source, MapperService mapperService,                                                          long fromSeqNo, long toSeqNo, boolean requiredFullRange) throws IOException_;1544545090;Creates a new history snapshot from Lucene for reading operations whose seqno in the requesting seqno range (both inclusive)._This feature requires soft-deletes enabled. If soft-deletes are disabled, this method will throw an {@link IllegalStateException}.;public abstract Translog.Snapshot newChangesSnapshot(String source, MapperService mapperService,_                                                         long fromSeqNo, long toSeqNo, boolean requiredFullRange) throws IOException_;creates,a,new,history,snapshot,from,lucene,for,reading,operations,whose,seqno,in,the,requesting,seqno,range,both,inclusive,this,feature,requires,soft,deletes,enabled,if,soft,deletes,are,disabled,this,method,will,throw,an,link,illegal,state,exception;public,abstract,translog,snapshot,new,changes,snapshot,string,source,mapper,service,mapper,service,long,from,seq,no,long,to,seq,no,boolean,required,full,range,throws,ioexception
Engine -> public abstract Translog.Snapshot newChangesSnapshot(String source, MapperService mapperService,                                                          long fromSeqNo, long toSeqNo, boolean requiredFullRange) throws IOException_;1544684920;Creates a new history snapshot from Lucene for reading operations whose seqno in the requesting seqno range (both inclusive)._This feature requires soft-deletes enabled. If soft-deletes are disabled, this method will throw an {@link IllegalStateException}.;public abstract Translog.Snapshot newChangesSnapshot(String source, MapperService mapperService,_                                                         long fromSeqNo, long toSeqNo, boolean requiredFullRange) throws IOException_;creates,a,new,history,snapshot,from,lucene,for,reading,operations,whose,seqno,in,the,requesting,seqno,range,both,inclusive,this,feature,requires,soft,deletes,enabled,if,soft,deletes,are,disabled,this,method,will,throw,an,link,illegal,state,exception;public,abstract,translog,snapshot,new,changes,snapshot,string,source,mapper,service,mapper,service,long,from,seq,no,long,to,seq,no,boolean,required,full,range,throws,ioexception
Engine -> public abstract Translog.Snapshot newChangesSnapshot(String source, MapperService mapperService,                                                          long fromSeqNo, long toSeqNo, boolean requiredFullRange) throws IOException_;1545140118;Creates a new history snapshot from Lucene for reading operations whose seqno in the requesting seqno range (both inclusive)._This feature requires soft-deletes enabled. If soft-deletes are disabled, this method will throw an {@link IllegalStateException}.;public abstract Translog.Snapshot newChangesSnapshot(String source, MapperService mapperService,_                                                         long fromSeqNo, long toSeqNo, boolean requiredFullRange) throws IOException_;creates,a,new,history,snapshot,from,lucene,for,reading,operations,whose,seqno,in,the,requesting,seqno,range,both,inclusive,this,feature,requires,soft,deletes,enabled,if,soft,deletes,are,disabled,this,method,will,throw,an,link,illegal,state,exception;public,abstract,translog,snapshot,new,changes,snapshot,string,source,mapper,service,mapper,service,long,from,seq,no,long,to,seq,no,boolean,required,full,range,throws,ioexception
Engine -> public abstract Translog.Snapshot newChangesSnapshot(String source, MapperService mapperService,                                                          long fromSeqNo, long toSeqNo, boolean requiredFullRange) throws IOException_;1545221705;Creates a new history snapshot from Lucene for reading operations whose seqno in the requesting seqno range (both inclusive)._This feature requires soft-deletes enabled. If soft-deletes are disabled, this method will throw an {@link IllegalStateException}.;public abstract Translog.Snapshot newChangesSnapshot(String source, MapperService mapperService,_                                                         long fromSeqNo, long toSeqNo, boolean requiredFullRange) throws IOException_;creates,a,new,history,snapshot,from,lucene,for,reading,operations,whose,seqno,in,the,requesting,seqno,range,both,inclusive,this,feature,requires,soft,deletes,enabled,if,soft,deletes,are,disabled,this,method,will,throw,an,link,illegal,state,exception;public,abstract,translog,snapshot,new,changes,snapshot,string,source,mapper,service,mapper,service,long,from,seq,no,long,to,seq,no,boolean,required,full,range,throws,ioexception
Engine -> public abstract Translog.Snapshot newChangesSnapshot(String source, MapperService mapperService,                                                          long fromSeqNo, long toSeqNo, boolean requiredFullRange) throws IOException_;1547332999;Creates a new history snapshot from Lucene for reading operations whose seqno in the requesting seqno range (both inclusive)._This feature requires soft-deletes enabled. If soft-deletes are disabled, this method will throw an {@link IllegalStateException}.;public abstract Translog.Snapshot newChangesSnapshot(String source, MapperService mapperService,_                                                         long fromSeqNo, long toSeqNo, boolean requiredFullRange) throws IOException_;creates,a,new,history,snapshot,from,lucene,for,reading,operations,whose,seqno,in,the,requesting,seqno,range,both,inclusive,this,feature,requires,soft,deletes,enabled,if,soft,deletes,are,disabled,this,method,will,throw,an,link,illegal,state,exception;public,abstract,translog,snapshot,new,changes,snapshot,string,source,mapper,service,mapper,service,long,from,seq,no,long,to,seq,no,boolean,required,full,range,throws,ioexception
Engine -> public abstract Translog.Snapshot newChangesSnapshot(String source, MapperService mapperService,                                                          long fromSeqNo, long toSeqNo, boolean requiredFullRange) throws IOException_;1548771485;Creates a new history snapshot from Lucene for reading operations whose seqno in the requesting seqno range (both inclusive)._This feature requires soft-deletes enabled. If soft-deletes are disabled, this method will throw an {@link IllegalStateException}.;public abstract Translog.Snapshot newChangesSnapshot(String source, MapperService mapperService,_                                                         long fromSeqNo, long toSeqNo, boolean requiredFullRange) throws IOException_;creates,a,new,history,snapshot,from,lucene,for,reading,operations,whose,seqno,in,the,requesting,seqno,range,both,inclusive,this,feature,requires,soft,deletes,enabled,if,soft,deletes,are,disabled,this,method,will,throw,an,link,illegal,state,exception;public,abstract,translog,snapshot,new,changes,snapshot,string,source,mapper,service,mapper,service,long,from,seq,no,long,to,seq,no,boolean,required,full,range,throws,ioexception
Engine -> public abstract Translog.Snapshot newChangesSnapshot(String source, MapperService mapperService,                                                          long fromSeqNo, long toSeqNo, boolean requiredFullRange) throws IOException_;1549891630;Creates a new history snapshot from Lucene for reading operations whose seqno in the requesting seqno range (both inclusive)._This feature requires soft-deletes enabled. If soft-deletes are disabled, this method will throw an {@link IllegalStateException}.;public abstract Translog.Snapshot newChangesSnapshot(String source, MapperService mapperService,_                                                         long fromSeqNo, long toSeqNo, boolean requiredFullRange) throws IOException_;creates,a,new,history,snapshot,from,lucene,for,reading,operations,whose,seqno,in,the,requesting,seqno,range,both,inclusive,this,feature,requires,soft,deletes,enabled,if,soft,deletes,are,disabled,this,method,will,throw,an,link,illegal,state,exception;public,abstract,translog,snapshot,new,changes,snapshot,string,source,mapper,service,mapper,service,long,from,seq,no,long,to,seq,no,boolean,required,full,range,throws,ioexception
Engine -> public abstract Translog.Snapshot newChangesSnapshot(String source, MapperService mapperService,                                                          long fromSeqNo, long toSeqNo, boolean requiredFullRange) throws IOException_;1549975032;Creates a new history snapshot from Lucene for reading operations whose seqno in the requesting seqno range (both inclusive)._This feature requires soft-deletes enabled. If soft-deletes are disabled, this method will throw an {@link IllegalStateException}.;public abstract Translog.Snapshot newChangesSnapshot(String source, MapperService mapperService,_                                                         long fromSeqNo, long toSeqNo, boolean requiredFullRange) throws IOException_;creates,a,new,history,snapshot,from,lucene,for,reading,operations,whose,seqno,in,the,requesting,seqno,range,both,inclusive,this,feature,requires,soft,deletes,enabled,if,soft,deletes,are,disabled,this,method,will,throw,an,link,illegal,state,exception;public,abstract,translog,snapshot,new,changes,snapshot,string,source,mapper,service,mapper,service,long,from,seq,no,long,to,seq,no,boolean,required,full,range,throws,ioexception
Engine -> public abstract Translog.Snapshot newChangesSnapshot(String source, MapperService mapperService,                                                          long fromSeqNo, long toSeqNo, boolean requiredFullRange) throws IOException_;1550220204;Creates a new history snapshot from Lucene for reading operations whose seqno in the requesting seqno range (both inclusive)._This feature requires soft-deletes enabled. If soft-deletes are disabled, this method will throw an {@link IllegalStateException}.;public abstract Translog.Snapshot newChangesSnapshot(String source, MapperService mapperService,_                                                         long fromSeqNo, long toSeqNo, boolean requiredFullRange) throws IOException_;creates,a,new,history,snapshot,from,lucene,for,reading,operations,whose,seqno,in,the,requesting,seqno,range,both,inclusive,this,feature,requires,soft,deletes,enabled,if,soft,deletes,are,disabled,this,method,will,throw,an,link,illegal,state,exception;public,abstract,translog,snapshot,new,changes,snapshot,string,source,mapper,service,mapper,service,long,from,seq,no,long,to,seq,no,boolean,required,full,range,throws,ioexception
Engine -> public abstract Translog.Snapshot newChangesSnapshot(String source, MapperService mapperService,                                                          long fromSeqNo, long toSeqNo, boolean requiredFullRange) throws IOException_;1550526771;Creates a new history snapshot from Lucene for reading operations whose seqno in the requesting seqno range (both inclusive)._This feature requires soft-deletes enabled. If soft-deletes are disabled, this method will throw an {@link IllegalStateException}.;public abstract Translog.Snapshot newChangesSnapshot(String source, MapperService mapperService,_                                                         long fromSeqNo, long toSeqNo, boolean requiredFullRange) throws IOException_;creates,a,new,history,snapshot,from,lucene,for,reading,operations,whose,seqno,in,the,requesting,seqno,range,both,inclusive,this,feature,requires,soft,deletes,enabled,if,soft,deletes,are,disabled,this,method,will,throw,an,link,illegal,state,exception;public,abstract,translog,snapshot,new,changes,snapshot,string,source,mapper,service,mapper,service,long,from,seq,no,long,to,seq,no,boolean,required,full,range,throws,ioexception
Engine -> public abstract Translog.Snapshot newChangesSnapshot(String source, MapperService mapperService,                                                          long fromSeqNo, long toSeqNo, boolean requiredFullRange) throws IOException_;1551110274;Creates a new history snapshot from Lucene for reading operations whose seqno in the requesting seqno range (both inclusive)._This feature requires soft-deletes enabled. If soft-deletes are disabled, this method will throw an {@link IllegalStateException}.;public abstract Translog.Snapshot newChangesSnapshot(String source, MapperService mapperService,_                                                         long fromSeqNo, long toSeqNo, boolean requiredFullRange) throws IOException_;creates,a,new,history,snapshot,from,lucene,for,reading,operations,whose,seqno,in,the,requesting,seqno,range,both,inclusive,this,feature,requires,soft,deletes,enabled,if,soft,deletes,are,disabled,this,method,will,throw,an,link,illegal,state,exception;public,abstract,translog,snapshot,new,changes,snapshot,string,source,mapper,service,mapper,service,long,from,seq,no,long,to,seq,no,boolean,required,full,range,throws,ioexception
Engine -> public abstract Translog.Snapshot newChangesSnapshot(String source, MapperService mapperService,                                                          long fromSeqNo, long toSeqNo, boolean requiredFullRange) throws IOException_;1551126708;Creates a new history snapshot from Lucene for reading operations whose seqno in the requesting seqno range (both inclusive)._This feature requires soft-deletes enabled. If soft-deletes are disabled, this method will throw an {@link IllegalStateException}.;public abstract Translog.Snapshot newChangesSnapshot(String source, MapperService mapperService,_                                                         long fromSeqNo, long toSeqNo, boolean requiredFullRange) throws IOException_;creates,a,new,history,snapshot,from,lucene,for,reading,operations,whose,seqno,in,the,requesting,seqno,range,both,inclusive,this,feature,requires,soft,deletes,enabled,if,soft,deletes,are,disabled,this,method,will,throw,an,link,illegal,state,exception;public,abstract,translog,snapshot,new,changes,snapshot,string,source,mapper,service,mapper,service,long,from,seq,no,long,to,seq,no,boolean,required,full,range,throws,ioexception
