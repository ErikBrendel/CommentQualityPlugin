# id;timestamp;commentText;codeText;commentWords;codeWords
SearchShardIterator -> public SearchShardIterator(@Nullable String clusterAlias, ShardId shardId, List<ShardRouting> shards, OriginalIndices originalIndices);1545997405;Creates a {@link PlainShardIterator} instance that iterates over a subset of the given shards_this the a given <code>shardId</code>.__@param clusterAlias the alias of the cluster where the shard is located_@param shardId shard id of the group_@param shards  shards to iterate_@param originalIndices the indices that the search request originally related to (before any rewriting happened);public SearchShardIterator(@Nullable String clusterAlias, ShardId shardId, List<ShardRouting> shards, OriginalIndices originalIndices) {_        super(shardId, shards)__        this.originalIndices = originalIndices__        this.clusterAlias = clusterAlias__    };creates,a,link,plain,shard,iterator,instance,that,iterates,over,a,subset,of,the,given,shards,this,the,a,given,code,shard,id,code,param,cluster,alias,the,alias,of,the,cluster,where,the,shard,is,located,param,shard,id,shard,id,of,the,group,param,shards,shards,to,iterate,param,original,indices,the,indices,that,the,search,request,originally,related,to,before,any,rewriting,happened;public,search,shard,iterator,nullable,string,cluster,alias,shard,id,shard,id,list,shard,routing,shards,original,indices,original,indices,super,shard,id,shards,this,original,indices,original,indices,this,cluster,alias,cluster,alias
SearchShardIterator -> public SearchShardIterator(@Nullable String clusterAlias, ShardId shardId, List<ShardRouting> shards, OriginalIndices originalIndices);1550234695;Creates a {@link PlainShardIterator} instance that iterates over a subset of the given shards_this the a given <code>shardId</code>.__@param clusterAlias the alias of the cluster where the shard is located_@param shardId shard id of the group_@param shards  shards to iterate_@param originalIndices the indices that the search request originally related to (before any rewriting happened);public SearchShardIterator(@Nullable String clusterAlias, ShardId shardId, List<ShardRouting> shards, OriginalIndices originalIndices) {_        super(shardId, shards)__        this.originalIndices = originalIndices__        this.clusterAlias = clusterAlias__    };creates,a,link,plain,shard,iterator,instance,that,iterates,over,a,subset,of,the,given,shards,this,the,a,given,code,shard,id,code,param,cluster,alias,the,alias,of,the,cluster,where,the,shard,is,located,param,shard,id,shard,id,of,the,group,param,shards,shards,to,iterate,param,original,indices,the,indices,that,the,search,request,originally,related,to,before,any,rewriting,happened;public,search,shard,iterator,nullable,string,cluster,alias,shard,id,shard,id,list,shard,routing,shards,original,indices,original,indices,super,shard,id,shards,this,original,indices,original,indices,this,cluster,alias,cluster,alias
SearchShardIterator -> public OriginalIndices getOriginalIndices();1524684173;Returns the original indices associated with this shard iterator, specifically with the cluster that this shard belongs to.;public OriginalIndices getOriginalIndices() {_        return originalIndices__    };returns,the,original,indices,associated,with,this,shard,iterator,specifically,with,the,cluster,that,this,shard,belongs,to;public,original,indices,get,original,indices,return,original,indices
SearchShardIterator -> public OriginalIndices getOriginalIndices();1545997405;Returns the original indices associated with this shard iterator, specifically with the cluster that this shard belongs to.;public OriginalIndices getOriginalIndices() {_        return originalIndices__    };returns,the,original,indices,associated,with,this,shard,iterator,specifically,with,the,cluster,that,this,shard,belongs,to;public,original,indices,get,original,indices,return,original,indices
SearchShardIterator -> public OriginalIndices getOriginalIndices();1550234695;Returns the original indices associated with this shard iterator, specifically with the cluster that this shard belongs to.;public OriginalIndices getOriginalIndices() {_        return originalIndices__    };returns,the,original,indices,associated,with,this,shard,iterator,specifically,with,the,cluster,that,this,shard,belongs,to;public,original,indices,get,original,indices,return,original,indices
SearchShardIterator -> SearchShardTarget newSearchShardTarget(String nodeId);1545997405;Creates a new shard target from this iterator, pointing at the node identified by the provided identifier._@see SearchShardTarget;SearchShardTarget newSearchShardTarget(String nodeId) {_        return new SearchShardTarget(nodeId, shardId(), clusterAlias, originalIndices)__    };creates,a,new,shard,target,from,this,iterator,pointing,at,the,node,identified,by,the,provided,identifier,see,search,shard,target;search,shard,target,new,search,shard,target,string,node,id,return,new,search,shard,target,node,id,shard,id,cluster,alias,original,indices
SearchShardIterator -> SearchShardTarget newSearchShardTarget(String nodeId);1550234695;Creates a new shard target from this iterator, pointing at the node identified by the provided identifier._@see SearchShardTarget;SearchShardTarget newSearchShardTarget(String nodeId) {_        return new SearchShardTarget(nodeId, shardId(), clusterAlias, originalIndices)__    };creates,a,new,shard,target,from,this,iterator,pointing,at,the,node,identified,by,the,provided,identifier,see,search,shard,target;search,shard,target,new,search,shard,target,string,node,id,return,new,search,shard,target,node,id,shard,id,cluster,alias,original,indices
SearchShardIterator -> boolean skip();1524684173;Returns <code>true</code> if the search execution should skip this shard since it can not match any documents given the query.;boolean skip() {_        return skip__    };returns,code,true,code,if,the,search,execution,should,skip,this,shard,since,it,can,not,match,any,documents,given,the,query;boolean,skip,return,skip
SearchShardIterator -> boolean skip();1545997405;Returns <code>true</code> if the search execution should skip this shard since it can not match any documents given the query.;boolean skip() {_        return skip__    };returns,code,true,code,if,the,search,execution,should,skip,this,shard,since,it,can,not,match,any,documents,given,the,query;boolean,skip,return,skip
SearchShardIterator -> boolean skip();1550234695;Returns <code>true</code> if the search execution should skip this shard since it can not match any documents given the query.;boolean skip() {_        return skip__    };returns,code,true,code,if,the,search,execution,should,skip,this,shard,since,it,can,not,match,any,documents,given,the,query;boolean,skip,return,skip
SearchShardIterator -> void resetAndSkip();1524684173;Reset the iterator and mark it as skippable_@see #skip();void resetAndSkip() {_        reset()__        skip = true__    };reset,the,iterator,and,mark,it,as,skippable,see,skip;void,reset,and,skip,reset,skip,true
SearchShardIterator -> void resetAndSkip();1545997405;Reset the iterator and mark it as skippable_@see #skip();void resetAndSkip() {_        reset()__        skip = true__    };reset,the,iterator,and,mark,it,as,skippable,see,skip;void,reset,and,skip,reset,skip,true
SearchShardIterator -> void resetAndSkip();1550234695;Reset the iterator and mark it as skippable_@see #skip();void resetAndSkip() {_        reset()__        skip = true__    };reset,the,iterator,and,mark,it,as,skippable,see,skip;void,reset,and,skip,reset,skip,true
SearchShardIterator -> @Nullable     public String getClusterAlias();1545997405;Returns the alias of the cluster where the shard is located.;@Nullable_    public String getClusterAlias() {_        return clusterAlias__    };returns,the,alias,of,the,cluster,where,the,shard,is,located;nullable,public,string,get,cluster,alias,return,cluster,alias
SearchShardIterator -> @Nullable     public String getClusterAlias();1550234695;Returns the alias of the cluster where the shard is located.;@Nullable_    public String getClusterAlias() {_        return clusterAlias__    };returns,the,alias,of,the,cluster,where,the,shard,is,located;nullable,public,string,get,cluster,alias,return,cluster,alias
