# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractQueryBuilder -> @Override     public final float boost();1524684173;Returns the boost for this query.;@Override_    public final float boost() {_        return this.boost__    };returns,the,boost,for,this,query;override,public,final,float,boost,return,this,boost
AbstractQueryBuilder -> @Override     public final float boost();1525334055;Returns the boost for this query.;@Override_    public final float boost() {_        return this.boost__    };returns,the,boost,for,this,query;override,public,final,float,boost,return,this,boost
AbstractQueryBuilder -> @Override     public final float boost();1539723533;Returns the boost for this query.;@Override_    public final float boost() {_        return this.boost__    };returns,the,boost,for,this,query;override,public,final,float,boost,return,this,boost
AbstractQueryBuilder -> @Override     public final float boost();1543834151;Returns the boost for this query.;@Override_    public final float boost() {_        return this.boost__    };returns,the,boost,for,this,query;override,public,final,float,boost,return,this,boost
AbstractQueryBuilder -> @Override     public final float boost();1549017700;Returns the boost for this query.;@Override_    public final float boost() {_        return this.boost__    };returns,the,boost,for,this,query;override,public,final,float,boost,return,this,boost
AbstractQueryBuilder -> protected void extractInnerHitBuilders(Map<String, InnerHitContextBuilder> innerHits);1524684173;For internal usage only!__Extracts the inner hits from the query tree._While it extracts inner hits, child inner hits are inlined into the inner hit builder they belong to.;protected void extractInnerHitBuilders(Map<String, InnerHitContextBuilder> innerHits) {_    };for,internal,usage,only,extracts,the,inner,hits,from,the,query,tree,while,it,extracts,inner,hits,child,inner,hits,are,inlined,into,the,inner,hit,builder,they,belong,to;protected,void,extract,inner,hit,builders,map,string,inner,hit,context,builder,inner,hits
AbstractQueryBuilder -> protected void extractInnerHitBuilders(Map<String, InnerHitContextBuilder> innerHits);1525334055;For internal usage only!__Extracts the inner hits from the query tree._While it extracts inner hits, child inner hits are inlined into the inner hit builder they belong to.;protected void extractInnerHitBuilders(Map<String, InnerHitContextBuilder> innerHits) {_    };for,internal,usage,only,extracts,the,inner,hits,from,the,query,tree,while,it,extracts,inner,hits,child,inner,hits,are,inlined,into,the,inner,hit,builder,they,belong,to;protected,void,extract,inner,hit,builders,map,string,inner,hit,context,builder,inner,hits
AbstractQueryBuilder -> protected void extractInnerHitBuilders(Map<String, InnerHitContextBuilder> innerHits);1539723533;For internal usage only!__Extracts the inner hits from the query tree._While it extracts inner hits, child inner hits are inlined into the inner hit builder they belong to.;protected void extractInnerHitBuilders(Map<String, InnerHitContextBuilder> innerHits) {_    };for,internal,usage,only,extracts,the,inner,hits,from,the,query,tree,while,it,extracts,inner,hits,child,inner,hits,are,inlined,into,the,inner,hit,builder,they,belong,to;protected,void,extract,inner,hit,builders,map,string,inner,hit,context,builder,inner,hits
AbstractQueryBuilder -> protected void extractInnerHitBuilders(Map<String, InnerHitContextBuilder> innerHits);1543834151;For internal usage only!__Extracts the inner hits from the query tree._While it extracts inner hits, child inner hits are inlined into the inner hit builder they belong to.;protected void extractInnerHitBuilders(Map<String, InnerHitContextBuilder> innerHits) {_    };for,internal,usage,only,extracts,the,inner,hits,from,the,query,tree,while,it,extracts,inner,hits,child,inner,hits,are,inlined,into,the,inner,hit,builder,they,belong,to;protected,void,extract,inner,hit,builders,map,string,inner,hit,context,builder,inner,hits
AbstractQueryBuilder -> protected void extractInnerHitBuilders(Map<String, InnerHitContextBuilder> innerHits);1549017700;For internal usage only!__Extracts the inner hits from the query tree._While it extracts inner hits, child inner hits are inlined into the inner hit builder they belong to.;protected void extractInnerHitBuilders(Map<String, InnerHitContextBuilder> innerHits) {_    };for,internal,usage,only,extracts,the,inner,hits,from,the,query,tree,while,it,extracts,inner,hits,child,inner,hits,are,inlined,into,the,inner,hit,builder,they,belong,to;protected,void,extract,inner,hit,builders,map,string,inner,hit,context,builder,inner,hits
AbstractQueryBuilder -> static Object maybeConvertToBytesRef(Object obj);1524684173;This helper method checks if the object passed in is a string or {@link CharBuffer},_if so it converts it to a {@link BytesRef}._@param obj the input object_@return the same input object or a {@link BytesRef} representation if input was of type string;static Object maybeConvertToBytesRef(Object obj) {_        if (obj instanceof String) {_            return BytesRefs.toBytesRef(obj)__        } else if (obj instanceof CharBuffer) {_            return new BytesRef((CharBuffer) obj)__        }_        return obj__    };this,helper,method,checks,if,the,object,passed,in,is,a,string,or,link,char,buffer,if,so,it,converts,it,to,a,link,bytes,ref,param,obj,the,input,object,return,the,same,input,object,or,a,link,bytes,ref,representation,if,input,was,of,type,string;static,object,maybe,convert,to,bytes,ref,object,obj,if,obj,instanceof,string,return,bytes,refs,to,bytes,ref,obj,else,if,obj,instanceof,char,buffer,return,new,bytes,ref,char,buffer,obj,return,obj
AbstractQueryBuilder -> static Object maybeConvertToBytesRef(Object obj);1525334055;This helper method checks if the object passed in is a string or {@link CharBuffer},_if so it converts it to a {@link BytesRef}._@param obj the input object_@return the same input object or a {@link BytesRef} representation if input was of type string;static Object maybeConvertToBytesRef(Object obj) {_        if (obj instanceof String) {_            return BytesRefs.toBytesRef(obj)__        } else if (obj instanceof CharBuffer) {_            return new BytesRef((CharBuffer) obj)__        }_        return obj__    };this,helper,method,checks,if,the,object,passed,in,is,a,string,or,link,char,buffer,if,so,it,converts,it,to,a,link,bytes,ref,param,obj,the,input,object,return,the,same,input,object,or,a,link,bytes,ref,representation,if,input,was,of,type,string;static,object,maybe,convert,to,bytes,ref,object,obj,if,obj,instanceof,string,return,bytes,refs,to,bytes,ref,obj,else,if,obj,instanceof,char,buffer,return,new,bytes,ref,char,buffer,obj,return,obj
AbstractQueryBuilder -> static Object maybeConvertToBytesRef(Object obj);1539723533;This helper method checks if the object passed in is a string or {@link CharBuffer},_if so it converts it to a {@link BytesRef}._@param obj the input object_@return the same input object or a {@link BytesRef} representation if input was of type string;static Object maybeConvertToBytesRef(Object obj) {_        if (obj instanceof String) {_            return BytesRefs.toBytesRef(obj)__        } else if (obj instanceof CharBuffer) {_            return new BytesRef((CharBuffer) obj)__        }_        return obj__    };this,helper,method,checks,if,the,object,passed,in,is,a,string,or,link,char,buffer,if,so,it,converts,it,to,a,link,bytes,ref,param,obj,the,input,object,return,the,same,input,object,or,a,link,bytes,ref,representation,if,input,was,of,type,string;static,object,maybe,convert,to,bytes,ref,object,obj,if,obj,instanceof,string,return,bytes,refs,to,bytes,ref,obj,else,if,obj,instanceof,char,buffer,return,new,bytes,ref,char,buffer,obj,return,obj
AbstractQueryBuilder -> static Object maybeConvertToBytesRef(Object obj);1543834151;This helper method checks if the object passed in is a string or {@link CharBuffer},_if so it converts it to a {@link BytesRef}._@param obj the input object_@return the same input object or a {@link BytesRef} representation if input was of type string;static Object maybeConvertToBytesRef(Object obj) {_        if (obj instanceof String) {_            return BytesRefs.toBytesRef(obj)__        } else if (obj instanceof CharBuffer) {_            return new BytesRef((CharBuffer) obj)__        }_        return obj__    };this,helper,method,checks,if,the,object,passed,in,is,a,string,or,link,char,buffer,if,so,it,converts,it,to,a,link,bytes,ref,param,obj,the,input,object,return,the,same,input,object,or,a,link,bytes,ref,representation,if,input,was,of,type,string;static,object,maybe,convert,to,bytes,ref,object,obj,if,obj,instanceof,string,return,bytes,refs,to,bytes,ref,obj,else,if,obj,instanceof,char,buffer,return,new,bytes,ref,char,buffer,obj,return,obj
AbstractQueryBuilder -> static Object maybeConvertToBytesRef(Object obj);1549017700;This helper method checks if the object passed in is a string or {@link CharBuffer},_if so it converts it to a {@link BytesRef}._@param obj the input object_@return the same input object or a {@link BytesRef} representation if input was of type string;static Object maybeConvertToBytesRef(Object obj) {_        if (obj instanceof String) {_            return BytesRefs.toBytesRef(obj)__        } else if (obj instanceof CharBuffer) {_            return new BytesRef((CharBuffer) obj)__        }_        return obj__    };this,helper,method,checks,if,the,object,passed,in,is,a,string,or,link,char,buffer,if,so,it,converts,it,to,a,link,bytes,ref,param,obj,the,input,object,return,the,same,input,object,or,a,link,bytes,ref,representation,if,input,was,of,type,string;static,object,maybe,convert,to,bytes,ref,object,obj,if,obj,instanceof,string,return,bytes,refs,to,bytes,ref,obj,else,if,obj,instanceof,char,buffer,return,new,bytes,ref,char,buffer,obj,return,obj
AbstractQueryBuilder -> public static QueryBuilder parseInnerQueryBuilder(XContentParser parser) throws IOException;1524684173;Parses a query excluding the query element that wraps it;public static QueryBuilder parseInnerQueryBuilder(XContentParser parser) throws IOException {_        if (parser.currentToken() != XContentParser.Token.START_OBJECT) {_            if (parser.nextToken() != XContentParser.Token.START_OBJECT) {_                throw new ParsingException(parser.getTokenLocation(), "[_na] query malformed, must start with start_object")__            }_        }_        if (parser.nextToken() == XContentParser.Token.END_OBJECT) {_            _            throw new IllegalArgumentException("query malformed, empty clause found at [" + parser.getTokenLocation() +"]")__        }_        if (parser.currentToken() != XContentParser.Token.FIELD_NAME) {_            throw new ParsingException(parser.getTokenLocation(), "[_na] query malformed, no field after start_object")__        }_        String queryName = parser.currentName()__        _        if (parser.nextToken() != XContentParser.Token.START_OBJECT) {_            throw new ParsingException(parser.getTokenLocation(), "[" + queryName + "] query malformed, no start_object after query name")__        }_        QueryBuilder result__        try {_            result = parser.namedObject(QueryBuilder.class, queryName, null)__        } catch (NamedObjectNotFoundException e) {_            _            _            throw new ParsingException(new XContentLocation(e.getLineNumber(), e.getColumnNumber()),_                    "no [query] registered for [" + queryName + "]")__        }_        _        if (parser.currentToken() != XContentParser.Token.END_OBJECT) {_            throw new ParsingException(parser.getTokenLocation(),_                    "[" + queryName + "] malformed query, expected [END_OBJECT] but found [" + parser.currentToken() + "]")__        }_        _        if (parser.nextToken() != XContentParser.Token.END_OBJECT) {_            throw new ParsingException(parser.getTokenLocation(),_                    "[" + queryName + "] malformed query, expected [END_OBJECT] but found [" + parser.currentToken() + "]")__        }_        return result__    };parses,a,query,excluding,the,query,element,that,wraps,it;public,static,query,builder,parse,inner,query,builder,xcontent,parser,parser,throws,ioexception,if,parser,current,token,xcontent,parser,token,if,parser,next,token,xcontent,parser,token,throw,new,parsing,exception,parser,get,token,location,query,malformed,must,start,with,if,parser,next,token,xcontent,parser,token,throw,new,illegal,argument,exception,query,malformed,empty,clause,found,at,parser,get,token,location,if,parser,current,token,xcontent,parser,token,throw,new,parsing,exception,parser,get,token,location,query,malformed,no,field,after,string,query,name,parser,current,name,if,parser,next,token,xcontent,parser,token,throw,new,parsing,exception,parser,get,token,location,query,name,query,malformed,no,after,query,name,query,builder,result,try,result,parser,named,object,query,builder,class,query,name,null,catch,named,object,not,found,exception,e,throw,new,parsing,exception,new,xcontent,location,e,get,line,number,e,get,column,number,no,query,registered,for,query,name,if,parser,current,token,xcontent,parser,token,throw,new,parsing,exception,parser,get,token,location,query,name,malformed,query,expected,but,found,parser,current,token,if,parser,next,token,xcontent,parser,token,throw,new,parsing,exception,parser,get,token,location,query,name,malformed,query,expected,but,found,parser,current,token,return,result
AbstractQueryBuilder -> public static QueryBuilder parseInnerQueryBuilder(XContentParser parser) throws IOException;1525334055;Parses a query excluding the query element that wraps it;public static QueryBuilder parseInnerQueryBuilder(XContentParser parser) throws IOException {_        if (parser.currentToken() != XContentParser.Token.START_OBJECT) {_            if (parser.nextToken() != XContentParser.Token.START_OBJECT) {_                throw new ParsingException(parser.getTokenLocation(), "[_na] query malformed, must start with start_object")__            }_        }_        if (parser.nextToken() == XContentParser.Token.END_OBJECT) {_            _            throw new IllegalArgumentException("query malformed, empty clause found at [" + parser.getTokenLocation() +"]")__        }_        if (parser.currentToken() != XContentParser.Token.FIELD_NAME) {_            throw new ParsingException(parser.getTokenLocation(), "[_na] query malformed, no field after start_object")__        }_        String queryName = parser.currentName()__        _        if (parser.nextToken() != XContentParser.Token.START_OBJECT) {_            throw new ParsingException(parser.getTokenLocation(), "[" + queryName + "] query malformed, no start_object after query name")__        }_        QueryBuilder result__        try {_            result = parser.namedObject(QueryBuilder.class, queryName, null)__        } catch (NamedObjectNotFoundException e) {_            _            _            throw new ParsingException(new XContentLocation(e.getLineNumber(), e.getColumnNumber()),_                    "no [query] registered for [" + queryName + "]")__        }_        _        if (parser.currentToken() != XContentParser.Token.END_OBJECT) {_            throw new ParsingException(parser.getTokenLocation(),_                    "[" + queryName + "] malformed query, expected [END_OBJECT] but found [" + parser.currentToken() + "]")__        }_        _        if (parser.nextToken() != XContentParser.Token.END_OBJECT) {_            throw new ParsingException(parser.getTokenLocation(),_                    "[" + queryName + "] malformed query, expected [END_OBJECT] but found [" + parser.currentToken() + "]")__        }_        return result__    };parses,a,query,excluding,the,query,element,that,wraps,it;public,static,query,builder,parse,inner,query,builder,xcontent,parser,parser,throws,ioexception,if,parser,current,token,xcontent,parser,token,if,parser,next,token,xcontent,parser,token,throw,new,parsing,exception,parser,get,token,location,query,malformed,must,start,with,if,parser,next,token,xcontent,parser,token,throw,new,illegal,argument,exception,query,malformed,empty,clause,found,at,parser,get,token,location,if,parser,current,token,xcontent,parser,token,throw,new,parsing,exception,parser,get,token,location,query,malformed,no,field,after,string,query,name,parser,current,name,if,parser,next,token,xcontent,parser,token,throw,new,parsing,exception,parser,get,token,location,query,name,query,malformed,no,after,query,name,query,builder,result,try,result,parser,named,object,query,builder,class,query,name,null,catch,named,object,not,found,exception,e,throw,new,parsing,exception,new,xcontent,location,e,get,line,number,e,get,column,number,no,query,registered,for,query,name,if,parser,current,token,xcontent,parser,token,throw,new,parsing,exception,parser,get,token,location,query,name,malformed,query,expected,but,found,parser,current,token,if,parser,next,token,xcontent,parser,token,throw,new,parsing,exception,parser,get,token,location,query,name,malformed,query,expected,but,found,parser,current,token,return,result
AbstractQueryBuilder -> public static QueryBuilder parseInnerQueryBuilder(XContentParser parser) throws IOException;1539723533;Parses a query excluding the query element that wraps it;public static QueryBuilder parseInnerQueryBuilder(XContentParser parser) throws IOException {_        if (parser.currentToken() != XContentParser.Token.START_OBJECT) {_            if (parser.nextToken() != XContentParser.Token.START_OBJECT) {_                throw new ParsingException(parser.getTokenLocation(), "[_na] query malformed, must start with start_object")__            }_        }_        if (parser.nextToken() == XContentParser.Token.END_OBJECT) {_            _            throw new IllegalArgumentException("query malformed, empty clause found at [" + parser.getTokenLocation() +"]")__        }_        if (parser.currentToken() != XContentParser.Token.FIELD_NAME) {_            throw new ParsingException(parser.getTokenLocation(), "[_na] query malformed, no field after start_object")__        }_        String queryName = parser.currentName()__        _        if (parser.nextToken() != XContentParser.Token.START_OBJECT) {_            throw new ParsingException(parser.getTokenLocation(), "[" + queryName + "] query malformed, no start_object after query name")__        }_        QueryBuilder result__        try {_            result = parser.namedObject(QueryBuilder.class, queryName, null)__        } catch (NamedObjectNotFoundException e) {_            _            _            throw new ParsingException(new XContentLocation(e.getLineNumber(), e.getColumnNumber()),_                    "no [query] registered for [" + queryName + "]")__        }_        _        if (parser.currentToken() != XContentParser.Token.END_OBJECT) {_            throw new ParsingException(parser.getTokenLocation(),_                    "[" + queryName + "] malformed query, expected [END_OBJECT] but found [" + parser.currentToken() + "]")__        }_        _        if (parser.nextToken() != XContentParser.Token.END_OBJECT) {_            throw new ParsingException(parser.getTokenLocation(),_                    "[" + queryName + "] malformed query, expected [END_OBJECT] but found [" + parser.currentToken() + "]")__        }_        return result__    };parses,a,query,excluding,the,query,element,that,wraps,it;public,static,query,builder,parse,inner,query,builder,xcontent,parser,parser,throws,ioexception,if,parser,current,token,xcontent,parser,token,if,parser,next,token,xcontent,parser,token,throw,new,parsing,exception,parser,get,token,location,query,malformed,must,start,with,if,parser,next,token,xcontent,parser,token,throw,new,illegal,argument,exception,query,malformed,empty,clause,found,at,parser,get,token,location,if,parser,current,token,xcontent,parser,token,throw,new,parsing,exception,parser,get,token,location,query,malformed,no,field,after,string,query,name,parser,current,name,if,parser,next,token,xcontent,parser,token,throw,new,parsing,exception,parser,get,token,location,query,name,query,malformed,no,after,query,name,query,builder,result,try,result,parser,named,object,query,builder,class,query,name,null,catch,named,object,not,found,exception,e,throw,new,parsing,exception,new,xcontent,location,e,get,line,number,e,get,column,number,no,query,registered,for,query,name,if,parser,current,token,xcontent,parser,token,throw,new,parsing,exception,parser,get,token,location,query,name,malformed,query,expected,but,found,parser,current,token,if,parser,next,token,xcontent,parser,token,throw,new,parsing,exception,parser,get,token,location,query,name,malformed,query,expected,but,found,parser,current,token,return,result
AbstractQueryBuilder -> public static QueryBuilder parseInnerQueryBuilder(XContentParser parser) throws IOException;1543834151;Parses a query excluding the query element that wraps it;public static QueryBuilder parseInnerQueryBuilder(XContentParser parser) throws IOException {_        if (parser.currentToken() != XContentParser.Token.START_OBJECT) {_            if (parser.nextToken() != XContentParser.Token.START_OBJECT) {_                throw new ParsingException(parser.getTokenLocation(), "[_na] query malformed, must start with start_object")__            }_        }_        if (parser.nextToken() == XContentParser.Token.END_OBJECT) {_            _            throw new IllegalArgumentException("query malformed, empty clause found at [" + parser.getTokenLocation() +"]")__        }_        if (parser.currentToken() != XContentParser.Token.FIELD_NAME) {_            throw new ParsingException(parser.getTokenLocation(), "[_na] query malformed, no field after start_object")__        }_        String queryName = parser.currentName()__        _        if (parser.nextToken() != XContentParser.Token.START_OBJECT) {_            throw new ParsingException(parser.getTokenLocation(), "[" + queryName + "] query malformed, no start_object after query name")__        }_        QueryBuilder result__        try {_            result = parser.namedObject(QueryBuilder.class, queryName, null)__        } catch (NamedObjectNotFoundException e) {_            _            _            throw new ParsingException(new XContentLocation(e.getLineNumber(), e.getColumnNumber()),_                    "no [query] registered for [" + queryName + "]")__        }_        _        if (parser.currentToken() != XContentParser.Token.END_OBJECT) {_            throw new ParsingException(parser.getTokenLocation(),_                    "[" + queryName + "] malformed query, expected [END_OBJECT] but found [" + parser.currentToken() + "]")__        }_        _        if (parser.nextToken() != XContentParser.Token.END_OBJECT) {_            throw new ParsingException(parser.getTokenLocation(),_                    "[" + queryName + "] malformed query, expected [END_OBJECT] but found [" + parser.currentToken() + "]")__        }_        return result__    };parses,a,query,excluding,the,query,element,that,wraps,it;public,static,query,builder,parse,inner,query,builder,xcontent,parser,parser,throws,ioexception,if,parser,current,token,xcontent,parser,token,if,parser,next,token,xcontent,parser,token,throw,new,parsing,exception,parser,get,token,location,query,malformed,must,start,with,if,parser,next,token,xcontent,parser,token,throw,new,illegal,argument,exception,query,malformed,empty,clause,found,at,parser,get,token,location,if,parser,current,token,xcontent,parser,token,throw,new,parsing,exception,parser,get,token,location,query,malformed,no,field,after,string,query,name,parser,current,name,if,parser,next,token,xcontent,parser,token,throw,new,parsing,exception,parser,get,token,location,query,name,query,malformed,no,after,query,name,query,builder,result,try,result,parser,named,object,query,builder,class,query,name,null,catch,named,object,not,found,exception,e,throw,new,parsing,exception,new,xcontent,location,e,get,line,number,e,get,column,number,no,query,registered,for,query,name,if,parser,current,token,xcontent,parser,token,throw,new,parsing,exception,parser,get,token,location,query,name,malformed,query,expected,but,found,parser,current,token,if,parser,next,token,xcontent,parser,token,throw,new,parsing,exception,parser,get,token,location,query,name,malformed,query,expected,but,found,parser,current,token,return,result
AbstractQueryBuilder -> public static QueryBuilder parseInnerQueryBuilder(XContentParser parser) throws IOException;1549017700;Parses a query excluding the query element that wraps it;public static QueryBuilder parseInnerQueryBuilder(XContentParser parser) throws IOException {_        if (parser.currentToken() != XContentParser.Token.START_OBJECT) {_            if (parser.nextToken() != XContentParser.Token.START_OBJECT) {_                throw new ParsingException(parser.getTokenLocation(), "[_na] query malformed, must start with start_object")__            }_        }_        if (parser.nextToken() == XContentParser.Token.END_OBJECT) {_            _            throw new IllegalArgumentException("query malformed, empty clause found at [" + parser.getTokenLocation() +"]")__        }_        if (parser.currentToken() != XContentParser.Token.FIELD_NAME) {_            throw new ParsingException(parser.getTokenLocation(), "[_na] query malformed, no field after start_object")__        }_        String queryName = parser.currentName()__        _        if (parser.nextToken() != XContentParser.Token.START_OBJECT) {_            throw new ParsingException(parser.getTokenLocation(), "[" + queryName + "] query malformed, no start_object after query name")__        }_        QueryBuilder result__        try {_            result = parser.namedObject(QueryBuilder.class, queryName, null)__        } catch (NamedObjectNotFoundException e) {_            _            _            throw new ParsingException(new XContentLocation(e.getLineNumber(), e.getColumnNumber()),_                    "no [query] registered for [" + queryName + "]")__        }_        _        if (parser.currentToken() != XContentParser.Token.END_OBJECT) {_            throw new ParsingException(parser.getTokenLocation(),_                    "[" + queryName + "] malformed query, expected [END_OBJECT] but found [" + parser.currentToken() + "]")__        }_        _        if (parser.nextToken() != XContentParser.Token.END_OBJECT) {_            throw new ParsingException(parser.getTokenLocation(),_                    "[" + queryName + "] malformed query, expected [END_OBJECT] but found [" + parser.currentToken() + "]")__        }_        return result__    };parses,a,query,excluding,the,query,element,that,wraps,it;public,static,query,builder,parse,inner,query,builder,xcontent,parser,parser,throws,ioexception,if,parser,current,token,xcontent,parser,token,if,parser,next,token,xcontent,parser,token,throw,new,parsing,exception,parser,get,token,location,query,malformed,must,start,with,if,parser,next,token,xcontent,parser,token,throw,new,illegal,argument,exception,query,malformed,empty,clause,found,at,parser,get,token,location,if,parser,current,token,xcontent,parser,token,throw,new,parsing,exception,parser,get,token,location,query,malformed,no,field,after,string,query,name,parser,current,name,if,parser,next,token,xcontent,parser,token,throw,new,parsing,exception,parser,get,token,location,query,name,query,malformed,no,after,query,name,query,builder,result,try,result,parser,named,object,query,builder,class,query,name,null,catch,named,object,not,found,exception,e,throw,new,parsing,exception,new,xcontent,location,e,get,line,number,e,get,column,number,no,query,registered,for,query,name,if,parser,current,token,xcontent,parser,token,throw,new,parsing,exception,parser,get,token,location,query,name,malformed,query,expected,but,found,parser,current,token,if,parser,next,token,xcontent,parser,token,throw,new,parsing,exception,parser,get,token,location,query,name,malformed,query,expected,but,found,parser,current,token,return,result
AbstractQueryBuilder -> protected static void declareStandardFields(AbstractObjectParser<? extends QueryBuilder, ?> parser);1524684173;Adds {@code boost} and {@code query_name} parsing to the_{@link AbstractObjectParser} passed in. All query builders except_{@link MatchAllQueryBuilder} and {@link MatchNoneQueryBuilder} support these fields so they_should use this method.;protected static void declareStandardFields(AbstractObjectParser<? extends QueryBuilder, ?> parser) {_        parser.declareFloat(QueryBuilder::boost, AbstractQueryBuilder.BOOST_FIELD)__        parser.declareString(QueryBuilder::queryName, AbstractQueryBuilder.NAME_FIELD)__    };adds,code,boost,and,code,parsing,to,the,link,abstract,object,parser,passed,in,all,query,builders,except,link,match,all,query,builder,and,link,match,none,query,builder,support,these,fields,so,they,should,use,this,method;protected,static,void,declare,standard,fields,abstract,object,parser,extends,query,builder,parser,parser,declare,float,query,builder,boost,abstract,query,builder,parser,declare,string,query,builder,query,name,abstract,query,builder
AbstractQueryBuilder -> protected static void declareStandardFields(AbstractObjectParser<? extends QueryBuilder, ?> parser);1525334055;Adds {@code boost} and {@code query_name} parsing to the_{@link AbstractObjectParser} passed in. All query builders except_{@link MatchAllQueryBuilder} and {@link MatchNoneQueryBuilder} support these fields so they_should use this method.;protected static void declareStandardFields(AbstractObjectParser<? extends QueryBuilder, ?> parser) {_        parser.declareFloat(QueryBuilder::boost, AbstractQueryBuilder.BOOST_FIELD)__        parser.declareString(QueryBuilder::queryName, AbstractQueryBuilder.NAME_FIELD)__    };adds,code,boost,and,code,parsing,to,the,link,abstract,object,parser,passed,in,all,query,builders,except,link,match,all,query,builder,and,link,match,none,query,builder,support,these,fields,so,they,should,use,this,method;protected,static,void,declare,standard,fields,abstract,object,parser,extends,query,builder,parser,parser,declare,float,query,builder,boost,abstract,query,builder,parser,declare,string,query,builder,query,name,abstract,query,builder
AbstractQueryBuilder -> protected static void declareStandardFields(AbstractObjectParser<? extends QueryBuilder, ?> parser);1539723533;Adds {@code boost} and {@code query_name} parsing to the_{@link AbstractObjectParser} passed in. All query builders except_{@link MatchAllQueryBuilder} and {@link MatchNoneQueryBuilder} support these fields so they_should use this method.;protected static void declareStandardFields(AbstractObjectParser<? extends QueryBuilder, ?> parser) {_        parser.declareFloat(QueryBuilder::boost, AbstractQueryBuilder.BOOST_FIELD)__        parser.declareString(QueryBuilder::queryName, AbstractQueryBuilder.NAME_FIELD)__    };adds,code,boost,and,code,parsing,to,the,link,abstract,object,parser,passed,in,all,query,builders,except,link,match,all,query,builder,and,link,match,none,query,builder,support,these,fields,so,they,should,use,this,method;protected,static,void,declare,standard,fields,abstract,object,parser,extends,query,builder,parser,parser,declare,float,query,builder,boost,abstract,query,builder,parser,declare,string,query,builder,query,name,abstract,query,builder
AbstractQueryBuilder -> protected static void declareStandardFields(AbstractObjectParser<? extends QueryBuilder, ?> parser);1543834151;Adds {@code boost} and {@code query_name} parsing to the_{@link AbstractObjectParser} passed in. All query builders except_{@link MatchAllQueryBuilder} and {@link MatchNoneQueryBuilder} support these fields so they_should use this method.;protected static void declareStandardFields(AbstractObjectParser<? extends QueryBuilder, ?> parser) {_        parser.declareFloat(QueryBuilder::boost, AbstractQueryBuilder.BOOST_FIELD)__        parser.declareString(QueryBuilder::queryName, AbstractQueryBuilder.NAME_FIELD)__    };adds,code,boost,and,code,parsing,to,the,link,abstract,object,parser,passed,in,all,query,builders,except,link,match,all,query,builder,and,link,match,none,query,builder,support,these,fields,so,they,should,use,this,method;protected,static,void,declare,standard,fields,abstract,object,parser,extends,query,builder,parser,parser,declare,float,query,builder,boost,abstract,query,builder,parser,declare,string,query,builder,query,name,abstract,query,builder
AbstractQueryBuilder -> protected static void declareStandardFields(AbstractObjectParser<? extends QueryBuilder, ?> parser);1549017700;Adds {@code boost} and {@code query_name} parsing to the_{@link AbstractObjectParser} passed in. All query builders except_{@link MatchAllQueryBuilder} and {@link MatchNoneQueryBuilder} support these fields so they_should use this method.;protected static void declareStandardFields(AbstractObjectParser<? extends QueryBuilder, ?> parser) {_        parser.declareFloat(QueryBuilder::boost, AbstractQueryBuilder.BOOST_FIELD)__        parser.declareString(QueryBuilder::queryName, AbstractQueryBuilder.NAME_FIELD)__    };adds,code,boost,and,code,parsing,to,the,link,abstract,object,parser,passed,in,all,query,builders,except,link,match,all,query,builder,and,link,match,none,query,builder,support,these,fields,so,they,should,use,this,method;protected,static,void,declare,standard,fields,abstract,object,parser,extends,query,builder,parser,parser,declare,float,query,builder,boost,abstract,query,builder,parser,declare,string,query,builder,query,name,abstract,query,builder
AbstractQueryBuilder -> @SuppressWarnings("unchecked")     @Override     public final QB queryName(String queryName);1524684173;Sets the query name for the query.;@SuppressWarnings("unchecked")_    @Override_    public final QB queryName(String queryName) {_        this.queryName = queryName__        return (QB) this__    };sets,the,query,name,for,the,query;suppress,warnings,unchecked,override,public,final,qb,query,name,string,query,name,this,query,name,query,name,return,qb,this
AbstractQueryBuilder -> @SuppressWarnings("unchecked")     @Override     public final QB queryName(String queryName);1525334055;Sets the query name for the query.;@SuppressWarnings("unchecked")_    @Override_    public final QB queryName(String queryName) {_        this.queryName = queryName__        return (QB) this__    };sets,the,query,name,for,the,query;suppress,warnings,unchecked,override,public,final,qb,query,name,string,query,name,this,query,name,query,name,return,qb,this
AbstractQueryBuilder -> @SuppressWarnings("unchecked")     @Override     public final QB queryName(String queryName);1539723533;Sets the query name for the query.;@SuppressWarnings("unchecked")_    @Override_    public final QB queryName(String queryName) {_        this.queryName = queryName__        return (QB) this__    };sets,the,query,name,for,the,query;suppress,warnings,unchecked,override,public,final,qb,query,name,string,query,name,this,query,name,query,name,return,qb,this
AbstractQueryBuilder -> @SuppressWarnings("unchecked")     @Override     public final QB queryName(String queryName);1543834151;Sets the query name for the query.;@SuppressWarnings("unchecked")_    @Override_    public final QB queryName(String queryName) {_        this.queryName = queryName__        return (QB) this__    };sets,the,query,name,for,the,query;suppress,warnings,unchecked,override,public,final,qb,query,name,string,query,name,this,query,name,query,name,return,qb,this
AbstractQueryBuilder -> @SuppressWarnings("unchecked")     @Override     public final QB queryName(String queryName);1549017700;Sets the query name for the query.;@SuppressWarnings("unchecked")_    @Override_    public final QB queryName(String queryName) {_        this.queryName = queryName__        return (QB) this__    };sets,the,query,name,for,the,query;suppress,warnings,unchecked,override,public,final,qb,query,name,string,query,name,this,query,name,query,name,return,qb,this
AbstractQueryBuilder -> static Object maybeConvertToString(Object obj);1524684173;This helper method checks if the object passed in is a {@link BytesRef} or {@link CharBuffer},_if so it converts it to a utf8 string._@param obj the input object_@return the same input object or a utf8 string if input was of type {@link BytesRef} or {@link CharBuffer};static Object maybeConvertToString(Object obj) {_        if (obj instanceof BytesRef) {_            return ((BytesRef) obj).utf8ToString()__        } else if (obj instanceof CharBuffer) {_            return new BytesRef((CharBuffer) obj).utf8ToString()__        }_        return obj__    };this,helper,method,checks,if,the,object,passed,in,is,a,link,bytes,ref,or,link,char,buffer,if,so,it,converts,it,to,a,utf8,string,param,obj,the,input,object,return,the,same,input,object,or,a,utf8,string,if,input,was,of,type,link,bytes,ref,or,link,char,buffer;static,object,maybe,convert,to,string,object,obj,if,obj,instanceof,bytes,ref,return,bytes,ref,obj,utf8to,string,else,if,obj,instanceof,char,buffer,return,new,bytes,ref,char,buffer,obj,utf8to,string,return,obj
AbstractQueryBuilder -> static Object maybeConvertToString(Object obj);1525334055;This helper method checks if the object passed in is a {@link BytesRef} or {@link CharBuffer},_if so it converts it to a utf8 string._@param obj the input object_@return the same input object or a utf8 string if input was of type {@link BytesRef} or {@link CharBuffer};static Object maybeConvertToString(Object obj) {_        if (obj instanceof BytesRef) {_            return ((BytesRef) obj).utf8ToString()__        } else if (obj instanceof CharBuffer) {_            return new BytesRef((CharBuffer) obj).utf8ToString()__        }_        return obj__    };this,helper,method,checks,if,the,object,passed,in,is,a,link,bytes,ref,or,link,char,buffer,if,so,it,converts,it,to,a,utf8,string,param,obj,the,input,object,return,the,same,input,object,or,a,utf8,string,if,input,was,of,type,link,bytes,ref,or,link,char,buffer;static,object,maybe,convert,to,string,object,obj,if,obj,instanceof,bytes,ref,return,bytes,ref,obj,utf8to,string,else,if,obj,instanceof,char,buffer,return,new,bytes,ref,char,buffer,obj,utf8to,string,return,obj
AbstractQueryBuilder -> static Object maybeConvertToString(Object obj);1539723533;This helper method checks if the object passed in is a {@link BytesRef} or {@link CharBuffer},_if so it converts it to a utf8 string._@param obj the input object_@return the same input object or a utf8 string if input was of type {@link BytesRef} or {@link CharBuffer};static Object maybeConvertToString(Object obj) {_        if (obj instanceof BytesRef) {_            return ((BytesRef) obj).utf8ToString()__        } else if (obj instanceof CharBuffer) {_            return new BytesRef((CharBuffer) obj).utf8ToString()__        }_        return obj__    };this,helper,method,checks,if,the,object,passed,in,is,a,link,bytes,ref,or,link,char,buffer,if,so,it,converts,it,to,a,utf8,string,param,obj,the,input,object,return,the,same,input,object,or,a,utf8,string,if,input,was,of,type,link,bytes,ref,or,link,char,buffer;static,object,maybe,convert,to,string,object,obj,if,obj,instanceof,bytes,ref,return,bytes,ref,obj,utf8to,string,else,if,obj,instanceof,char,buffer,return,new,bytes,ref,char,buffer,obj,utf8to,string,return,obj
AbstractQueryBuilder -> static Object maybeConvertToString(Object obj);1543834151;This helper method checks if the object passed in is a {@link BytesRef} or {@link CharBuffer},_if so it converts it to a utf8 string._@param obj the input object_@return the same input object or a utf8 string if input was of type {@link BytesRef} or {@link CharBuffer};static Object maybeConvertToString(Object obj) {_        if (obj instanceof BytesRef) {_            return ((BytesRef) obj).utf8ToString()__        } else if (obj instanceof CharBuffer) {_            return new BytesRef((CharBuffer) obj).utf8ToString()__        }_        return obj__    };this,helper,method,checks,if,the,object,passed,in,is,a,link,bytes,ref,or,link,char,buffer,if,so,it,converts,it,to,a,utf8,string,param,obj,the,input,object,return,the,same,input,object,or,a,utf8,string,if,input,was,of,type,link,bytes,ref,or,link,char,buffer;static,object,maybe,convert,to,string,object,obj,if,obj,instanceof,bytes,ref,return,bytes,ref,obj,utf8to,string,else,if,obj,instanceof,char,buffer,return,new,bytes,ref,char,buffer,obj,utf8to,string,return,obj
AbstractQueryBuilder -> static Object maybeConvertToString(Object obj);1549017700;This helper method checks if the object passed in is a {@link BytesRef} or {@link CharBuffer},_if so it converts it to a utf8 string._@param obj the input object_@return the same input object or a utf8 string if input was of type {@link BytesRef} or {@link CharBuffer};static Object maybeConvertToString(Object obj) {_        if (obj instanceof BytesRef) {_            return ((BytesRef) obj).utf8ToString()__        } else if (obj instanceof CharBuffer) {_            return new BytesRef((CharBuffer) obj).utf8ToString()__        }_        return obj__    };this,helper,method,checks,if,the,object,passed,in,is,a,link,bytes,ref,or,link,char,buffer,if,so,it,converts,it,to,a,utf8,string,param,obj,the,input,object,return,the,same,input,object,or,a,utf8,string,if,input,was,of,type,link,bytes,ref,or,link,char,buffer;static,object,maybe,convert,to,string,object,obj,if,obj,instanceof,bytes,ref,return,bytes,ref,obj,utf8to,string,else,if,obj,instanceof,char,buffer,return,new,bytes,ref,char,buffer,obj,utf8to,string,return,obj
AbstractQueryBuilder -> @Override     public final String queryName();1524684173;Returns the query name for the query.;@Override_    public final String queryName() {_        return queryName__    };returns,the,query,name,for,the,query;override,public,final,string,query,name,return,query,name
AbstractQueryBuilder -> @Override     public final String queryName();1525334055;Returns the query name for the query.;@Override_    public final String queryName() {_        return queryName__    };returns,the,query,name,for,the,query;override,public,final,string,query,name,return,query,name
AbstractQueryBuilder -> @Override     public final String queryName();1539723533;Returns the query name for the query.;@Override_    public final String queryName() {_        return queryName__    };returns,the,query,name,for,the,query;override,public,final,string,query,name,return,query,name
AbstractQueryBuilder -> @Override     public final String queryName();1543834151;Returns the query name for the query.;@Override_    public final String queryName() {_        return queryName__    };returns,the,query,name,for,the,query;override,public,final,string,query,name,return,query,name
AbstractQueryBuilder -> @Override     public final String queryName();1549017700;Returns the query name for the query.;@Override_    public final String queryName() {_        return queryName__    };returns,the,query,name,for,the,query;override,public,final,string,query,name,return,query,name
AbstractQueryBuilder -> @SuppressWarnings("unchecked")     @Override     public final QB boost(float boost);1524684173;Sets the boost for this query.  Documents matching this query will (in addition to the normal_weightings) have their score multiplied by the boost provided.;@SuppressWarnings("unchecked")_    @Override_    public final QB boost(float boost) {_        this.boost = boost__        return (QB) this__    };sets,the,boost,for,this,query,documents,matching,this,query,will,in,addition,to,the,normal,weightings,have,their,score,multiplied,by,the,boost,provided;suppress,warnings,unchecked,override,public,final,qb,boost,float,boost,this,boost,boost,return,qb,this
AbstractQueryBuilder -> @SuppressWarnings("unchecked")     @Override     public final QB boost(float boost);1525334055;Sets the boost for this query.  Documents matching this query will (in addition to the normal_weightings) have their score multiplied by the boost provided.;@SuppressWarnings("unchecked")_    @Override_    public final QB boost(float boost) {_        this.boost = boost__        return (QB) this__    };sets,the,boost,for,this,query,documents,matching,this,query,will,in,addition,to,the,normal,weightings,have,their,score,multiplied,by,the,boost,provided;suppress,warnings,unchecked,override,public,final,qb,boost,float,boost,this,boost,boost,return,qb,this
AbstractQueryBuilder -> @SuppressWarnings("unchecked")     @Override     public final QB boost(float boost);1539723533;Sets the boost for this query.  Documents matching this query will (in addition to the normal_weightings) have their score multiplied by the boost provided.;@SuppressWarnings("unchecked")_    @Override_    public final QB boost(float boost) {_        if (Float.compare(boost, 0f) < 0) {_            throw new IllegalArgumentException("negative [boost] are not allowed in [" + toString() + "], " +_                "use a value between 0 and 1 to deboost")__        }_        this.boost = boost__        return (QB) this__    };sets,the,boost,for,this,query,documents,matching,this,query,will,in,addition,to,the,normal,weightings,have,their,score,multiplied,by,the,boost,provided;suppress,warnings,unchecked,override,public,final,qb,boost,float,boost,if,float,compare,boost,0f,0,throw,new,illegal,argument,exception,negative,boost,are,not,allowed,in,to,string,use,a,value,between,0,and,1,to,deboost,this,boost,boost,return,qb,this
AbstractQueryBuilder -> @SuppressWarnings("unchecked")     @Override     public final QB boost(float boost);1543834151;Sets the boost for this query.  Documents matching this query will (in addition to the normal_weightings) have their score multiplied by the boost provided.;@SuppressWarnings("unchecked")_    @Override_    public final QB boost(float boost) {_        if (Float.compare(boost, 0f) < 0) {_            throw new IllegalArgumentException("negative [boost] are not allowed in [" + toString() + "], " +_                "use a value between 0 and 1 to deboost")__        }_        this.boost = boost__        return (QB) this__    };sets,the,boost,for,this,query,documents,matching,this,query,will,in,addition,to,the,normal,weightings,have,their,score,multiplied,by,the,boost,provided;suppress,warnings,unchecked,override,public,final,qb,boost,float,boost,if,float,compare,boost,0f,0,throw,new,illegal,argument,exception,negative,boost,are,not,allowed,in,to,string,use,a,value,between,0,and,1,to,deboost,this,boost,boost,return,qb,this
AbstractQueryBuilder -> @SuppressWarnings("unchecked")     @Override     public final QB boost(float boost);1549017700;Sets the boost for this query.  Documents matching this query will (in addition to the normal_weightings) have their score multiplied by the boost provided.;@SuppressWarnings("unchecked")_    @Override_    public final QB boost(float boost) {_        checkNegativeBoost(boost)__        this.boost = boost__        return (QB) this__    };sets,the,boost,for,this,query,documents,matching,this,query,will,in,addition,to,the,normal,weightings,have,their,score,multiplied,by,the,boost,provided;suppress,warnings,unchecked,override,public,final,qb,boost,float,boost,check,negative,boost,boost,this,boost,boost,return,qb,this
AbstractQueryBuilder -> protected abstract boolean doEquals(QB other)_;1524684173;Indicates whether some other {@link QueryBuilder} object of the same type is "equal to" this one.;protected abstract boolean doEquals(QB other)_;indicates,whether,some,other,link,query,builder,object,of,the,same,type,is,equal,to,this,one;protected,abstract,boolean,do,equals,qb,other
AbstractQueryBuilder -> protected abstract boolean doEquals(QB other)_;1525334055;Indicates whether some other {@link QueryBuilder} object of the same type is "equal to" this one.;protected abstract boolean doEquals(QB other)_;indicates,whether,some,other,link,query,builder,object,of,the,same,type,is,equal,to,this,one;protected,abstract,boolean,do,equals,qb,other
AbstractQueryBuilder -> protected abstract boolean doEquals(QB other)_;1539723533;Indicates whether some other {@link QueryBuilder} object of the same type is "equal to" this one.;protected abstract boolean doEquals(QB other)_;indicates,whether,some,other,link,query,builder,object,of,the,same,type,is,equal,to,this,one;protected,abstract,boolean,do,equals,qb,other
AbstractQueryBuilder -> protected abstract boolean doEquals(QB other)_;1543834151;Indicates whether some other {@link QueryBuilder} object of the same type is "equal to" this one.;protected abstract boolean doEquals(QB other)_;indicates,whether,some,other,link,query,builder,object,of,the,same,type,is,equal,to,this,one;protected,abstract,boolean,do,equals,qb,other
AbstractQueryBuilder -> protected abstract boolean doEquals(QB other)_;1549017700;Indicates whether some other {@link QueryBuilder} object of the same type is "equal to" this one.;protected abstract boolean doEquals(QB other)_;indicates,whether,some,other,link,query,builder,object,of,the,same,type,is,equal,to,this,one;protected,abstract,boolean,do,equals,qb,other
AbstractQueryBuilder -> static Collection<Query> toQueries(Collection<QueryBuilder> queryBuilders, QueryShardContext context) throws QueryShardException,             IOException;1524684173;Helper method to convert collection of {@link QueryBuilder} instances to lucene_{@link Query} instances. {@link QueryBuilder} that return <tt>null</tt> calling_their {@link QueryBuilder#toQuery(QueryShardContext)} method are not added to the_resulting collection.;static Collection<Query> toQueries(Collection<QueryBuilder> queryBuilders, QueryShardContext context) throws QueryShardException,_            IOException {_        List<Query> queries = new ArrayList<>(queryBuilders.size())__        for (QueryBuilder queryBuilder : queryBuilders) {_            Query query = queryBuilder.toQuery(context)__            if (query != null) {_                queries.add(query)__            }_        }_        return queries__    };helper,method,to,convert,collection,of,link,query,builder,instances,to,lucene,link,query,instances,link,query,builder,that,return,tt,null,tt,calling,their,link,query,builder,to,query,query,shard,context,method,are,not,added,to,the,resulting,collection;static,collection,query,to,queries,collection,query,builder,query,builders,query,shard,context,context,throws,query,shard,exception,ioexception,list,query,queries,new,array,list,query,builders,size,for,query,builder,query,builder,query,builders,query,query,query,builder,to,query,context,if,query,null,queries,add,query,return,queries
AbstractQueryBuilder -> static Collection<Query> toQueries(Collection<QueryBuilder> queryBuilders, QueryShardContext context) throws QueryShardException,             IOException;1525334055;Helper method to convert collection of {@link QueryBuilder} instances to lucene_{@link Query} instances. {@link QueryBuilder} that return {@code null} calling_their {@link QueryBuilder#toQuery(QueryShardContext)} method are not added to the_resulting collection.;static Collection<Query> toQueries(Collection<QueryBuilder> queryBuilders, QueryShardContext context) throws QueryShardException,_            IOException {_        List<Query> queries = new ArrayList<>(queryBuilders.size())__        for (QueryBuilder queryBuilder : queryBuilders) {_            Query query = queryBuilder.toQuery(context)__            if (query != null) {_                queries.add(query)__            }_        }_        return queries__    };helper,method,to,convert,collection,of,link,query,builder,instances,to,lucene,link,query,instances,link,query,builder,that,return,code,null,calling,their,link,query,builder,to,query,query,shard,context,method,are,not,added,to,the,resulting,collection;static,collection,query,to,queries,collection,query,builder,query,builders,query,shard,context,context,throws,query,shard,exception,ioexception,list,query,queries,new,array,list,query,builders,size,for,query,builder,query,builder,query,builders,query,query,query,builder,to,query,context,if,query,null,queries,add,query,return,queries
AbstractQueryBuilder -> static Collection<Query> toQueries(Collection<QueryBuilder> queryBuilders, QueryShardContext context) throws QueryShardException,             IOException;1539723533;Helper method to convert collection of {@link QueryBuilder} instances to lucene_{@link Query} instances. {@link QueryBuilder} that return {@code null} calling_their {@link QueryBuilder#toQuery(QueryShardContext)} method are not added to the_resulting collection.;static Collection<Query> toQueries(Collection<QueryBuilder> queryBuilders, QueryShardContext context) throws QueryShardException,_            IOException {_        List<Query> queries = new ArrayList<>(queryBuilders.size())__        for (QueryBuilder queryBuilder : queryBuilders) {_            Query query = queryBuilder.toQuery(context)__            if (query != null) {_                queries.add(query)__            }_        }_        return queries__    };helper,method,to,convert,collection,of,link,query,builder,instances,to,lucene,link,query,instances,link,query,builder,that,return,code,null,calling,their,link,query,builder,to,query,query,shard,context,method,are,not,added,to,the,resulting,collection;static,collection,query,to,queries,collection,query,builder,query,builders,query,shard,context,context,throws,query,shard,exception,ioexception,list,query,queries,new,array,list,query,builders,size,for,query,builder,query,builder,query,builders,query,query,query,builder,to,query,context,if,query,null,queries,add,query,return,queries
AbstractQueryBuilder -> static Collection<Query> toQueries(Collection<QueryBuilder> queryBuilders, QueryShardContext context) throws QueryShardException,             IOException;1543834151;Helper method to convert collection of {@link QueryBuilder} instances to lucene_{@link Query} instances. {@link QueryBuilder} that return {@code null} calling_their {@link QueryBuilder#toQuery(QueryShardContext)} method are not added to the_resulting collection.;static Collection<Query> toQueries(Collection<QueryBuilder> queryBuilders, QueryShardContext context) throws QueryShardException,_            IOException {_        List<Query> queries = new ArrayList<>(queryBuilders.size())__        for (QueryBuilder queryBuilder : queryBuilders) {_            Query query = queryBuilder.toQuery(context)__            if (query != null) {_                queries.add(query)__            }_        }_        return queries__    };helper,method,to,convert,collection,of,link,query,builder,instances,to,lucene,link,query,instances,link,query,builder,that,return,code,null,calling,their,link,query,builder,to,query,query,shard,context,method,are,not,added,to,the,resulting,collection;static,collection,query,to,queries,collection,query,builder,query,builders,query,shard,context,context,throws,query,shard,exception,ioexception,list,query,queries,new,array,list,query,builders,size,for,query,builder,query,builder,query,builders,query,query,query,builder,to,query,context,if,query,null,queries,add,query,return,queries
AbstractQueryBuilder -> static Collection<Query> toQueries(Collection<QueryBuilder> queryBuilders, QueryShardContext context) throws QueryShardException,             IOException;1549017700;Helper method to convert collection of {@link QueryBuilder} instances to lucene_{@link Query} instances. {@link QueryBuilder} that return {@code null} calling_their {@link QueryBuilder#toQuery(QueryShardContext)} method are not added to the_resulting collection.;static Collection<Query> toQueries(Collection<QueryBuilder> queryBuilders, QueryShardContext context) throws QueryShardException,_            IOException {_        List<Query> queries = new ArrayList<>(queryBuilders.size())__        for (QueryBuilder queryBuilder : queryBuilders) {_            Query query = queryBuilder.toQuery(context)__            if (query != null) {_                queries.add(query)__            }_        }_        return queries__    };helper,method,to,convert,collection,of,link,query,builder,instances,to,lucene,link,query,instances,link,query,builder,that,return,code,null,calling,their,link,query,builder,to,query,query,shard,context,method,are,not,added,to,the,resulting,collection;static,collection,query,to,queries,collection,query,builder,query,builders,query,shard,context,context,throws,query,shard,exception,ioexception,list,query,queries,new,array,list,query,builders,size,for,query,builder,query,builder,query,builders,query,query,query,builder,to,query,context,if,query,null,queries,add,query,return,queries
