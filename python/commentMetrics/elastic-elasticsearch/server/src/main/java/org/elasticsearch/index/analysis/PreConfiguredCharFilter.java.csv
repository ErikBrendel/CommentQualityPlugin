# id;timestamp;commentText;codeText;commentWords;codeWords
PreConfiguredCharFilter -> public static PreConfiguredCharFilter singleton(String name, boolean useFilterForMultitermQueries, Function<Reader, Reader> create);1524684173;Create a pre-configured char filter that may not vary at all.;public static PreConfiguredCharFilter singleton(String name, boolean useFilterForMultitermQueries, Function<Reader, Reader> create) {_        return new PreConfiguredCharFilter(name, CachingStrategy.ONE, useFilterForMultitermQueries,_                (reader, version) -> create.apply(reader))__    };create,a,pre,configured,char,filter,that,may,not,vary,at,all;public,static,pre,configured,char,filter,singleton,string,name,boolean,use,filter,for,multiterm,queries,function,reader,reader,create,return,new,pre,configured,char,filter,name,caching,strategy,one,use,filter,for,multiterm,queries,reader,version,create,apply,reader
PreConfiguredCharFilter -> public static PreConfiguredCharFilter singleton(String name, boolean useFilterForMultitermQueries, Function<Reader, Reader> create);1539615817;Create a pre-configured char filter that may not vary at all.;public static PreConfiguredCharFilter singleton(String name, boolean useFilterForMultitermQueries, Function<Reader, Reader> create) {_        return new PreConfiguredCharFilter(name, CachingStrategy.ONE, useFilterForMultitermQueries,_                (reader, version) -> create.apply(reader))__    };create,a,pre,configured,char,filter,that,may,not,vary,at,all;public,static,pre,configured,char,filter,singleton,string,name,boolean,use,filter,for,multiterm,queries,function,reader,reader,create,return,new,pre,configured,char,filter,name,caching,strategy,one,use,filter,for,multiterm,queries,reader,version,create,apply,reader
PreConfiguredCharFilter -> public static PreConfiguredCharFilter singleton(String name, boolean useFilterForMultitermQueries, Function<Reader, Reader> create);1542897779;Create a pre-configured char filter that may not vary at all.;public static PreConfiguredCharFilter singleton(String name, boolean useFilterForMultitermQueries, Function<Reader, Reader> create) {_        return new PreConfiguredCharFilter(name, CachingStrategy.ONE, useFilterForMultitermQueries,_                (reader, version) -> create.apply(reader))__    };create,a,pre,configured,char,filter,that,may,not,vary,at,all;public,static,pre,configured,char,filter,singleton,string,name,boolean,use,filter,for,multiterm,queries,function,reader,reader,create,return,new,pre,configured,char,filter,name,caching,strategy,one,use,filter,for,multiterm,queries,reader,version,create,apply,reader
PreConfiguredCharFilter -> public static PreConfiguredCharFilter luceneVersion(String name, boolean useFilterForMultitermQueries,             BiFunction<Reader, org.apache.lucene.util.Version, Reader> create);1524684173;Create a pre-configured token filter that may vary based on the Lucene version.;public static PreConfiguredCharFilter luceneVersion(String name, boolean useFilterForMultitermQueries,_            BiFunction<Reader, org.apache.lucene.util.Version, Reader> create) {_        return new PreConfiguredCharFilter(name, CachingStrategy.LUCENE, useFilterForMultitermQueries,_                (reader, version) -> create.apply(reader, version.luceneVersion))__    };create,a,pre,configured,token,filter,that,may,vary,based,on,the,lucene,version;public,static,pre,configured,char,filter,lucene,version,string,name,boolean,use,filter,for,multiterm,queries,bi,function,reader,org,apache,lucene,util,version,reader,create,return,new,pre,configured,char,filter,name,caching,strategy,lucene,use,filter,for,multiterm,queries,reader,version,create,apply,reader,version,lucene,version
PreConfiguredCharFilter -> public static PreConfiguredCharFilter luceneVersion(String name, boolean useFilterForMultitermQueries,             BiFunction<Reader, org.apache.lucene.util.Version, Reader> create);1539615817;Create a pre-configured token filter that may vary based on the Lucene version.;public static PreConfiguredCharFilter luceneVersion(String name, boolean useFilterForMultitermQueries,_            BiFunction<Reader, org.apache.lucene.util.Version, Reader> create) {_        return new PreConfiguredCharFilter(name, CachingStrategy.LUCENE, useFilterForMultitermQueries,_                (reader, version) -> create.apply(reader, version.luceneVersion))__    };create,a,pre,configured,token,filter,that,may,vary,based,on,the,lucene,version;public,static,pre,configured,char,filter,lucene,version,string,name,boolean,use,filter,for,multiterm,queries,bi,function,reader,org,apache,lucene,util,version,reader,create,return,new,pre,configured,char,filter,name,caching,strategy,lucene,use,filter,for,multiterm,queries,reader,version,create,apply,reader,version,lucene,version
PreConfiguredCharFilter -> public static PreConfiguredCharFilter luceneVersion(String name, boolean useFilterForMultitermQueries,             BiFunction<Reader, org.apache.lucene.util.Version, Reader> create);1542897779;Create a pre-configured token filter that may vary based on the Lucene version.;public static PreConfiguredCharFilter luceneVersion(String name, boolean useFilterForMultitermQueries,_            BiFunction<Reader, org.apache.lucene.util.Version, Reader> create) {_        return new PreConfiguredCharFilter(name, CachingStrategy.LUCENE, useFilterForMultitermQueries,_                (reader, version) -> create.apply(reader, version.luceneVersion))__    };create,a,pre,configured,token,filter,that,may,vary,based,on,the,lucene,version;public,static,pre,configured,char,filter,lucene,version,string,name,boolean,use,filter,for,multiterm,queries,bi,function,reader,org,apache,lucene,util,version,reader,create,return,new,pre,configured,char,filter,name,caching,strategy,lucene,use,filter,for,multiterm,queries,reader,version,create,apply,reader,version,lucene,version
PreConfiguredCharFilter -> public static PreConfiguredCharFilter elasticsearchVersion(String name, boolean useFilterForMultitermQueries,             BiFunction<Reader, org.elasticsearch.Version, Reader> create);1524684173;Create a pre-configured token filter that may vary based on the Elasticsearch version.;public static PreConfiguredCharFilter elasticsearchVersion(String name, boolean useFilterForMultitermQueries,_            BiFunction<Reader, org.elasticsearch.Version, Reader> create) {_        return new PreConfiguredCharFilter(name, CachingStrategy.ELASTICSEARCH, useFilterForMultitermQueries, create)__    };create,a,pre,configured,token,filter,that,may,vary,based,on,the,elasticsearch,version;public,static,pre,configured,char,filter,elasticsearch,version,string,name,boolean,use,filter,for,multiterm,queries,bi,function,reader,org,elasticsearch,version,reader,create,return,new,pre,configured,char,filter,name,caching,strategy,elasticsearch,use,filter,for,multiterm,queries,create
PreConfiguredCharFilter -> public static PreConfiguredCharFilter elasticsearchVersion(String name, boolean useFilterForMultitermQueries,             BiFunction<Reader, org.elasticsearch.Version, Reader> create);1539615817;Create a pre-configured token filter that may vary based on the Elasticsearch version.;public static PreConfiguredCharFilter elasticsearchVersion(String name, boolean useFilterForMultitermQueries,_            BiFunction<Reader, org.elasticsearch.Version, Reader> create) {_        return new PreConfiguredCharFilter(name, CachingStrategy.ELASTICSEARCH, useFilterForMultitermQueries, create)__    };create,a,pre,configured,token,filter,that,may,vary,based,on,the,elasticsearch,version;public,static,pre,configured,char,filter,elasticsearch,version,string,name,boolean,use,filter,for,multiterm,queries,bi,function,reader,org,elasticsearch,version,reader,create,return,new,pre,configured,char,filter,name,caching,strategy,elasticsearch,use,filter,for,multiterm,queries,create
PreConfiguredCharFilter -> public static PreConfiguredCharFilter elasticsearchVersion(String name, boolean useFilterForMultitermQueries,             BiFunction<Reader, org.elasticsearch.Version, Reader> create);1542897779;Create a pre-configured token filter that may vary based on the Elasticsearch version.;public static PreConfiguredCharFilter elasticsearchVersion(String name, boolean useFilterForMultitermQueries,_            BiFunction<Reader, org.elasticsearch.Version, Reader> create) {_        return new PreConfiguredCharFilter(name, CachingStrategy.ELASTICSEARCH, useFilterForMultitermQueries, create)__    };create,a,pre,configured,token,filter,that,may,vary,based,on,the,elasticsearch,version;public,static,pre,configured,char,filter,elasticsearch,version,string,name,boolean,use,filter,for,multiterm,queries,bi,function,reader,org,elasticsearch,version,reader,create,return,new,pre,configured,char,filter,name,caching,strategy,elasticsearch,use,filter,for,multiterm,queries,create
PreConfiguredCharFilter -> public static PreConfiguredCharFilter singletonWithVersion(String name, boolean useFilterForMultitermQueries,             BiFunction<Reader, org.elasticsearch.Version, Reader> create);1524684173;Create a pre-configured char filter that may not vary at all, provide access to the elasticsearch verison;public static PreConfiguredCharFilter singletonWithVersion(String name, boolean useFilterForMultitermQueries,_            BiFunction<Reader, org.elasticsearch.Version, Reader> create) {_        return new PreConfiguredCharFilter(name, CachingStrategy.ONE, useFilterForMultitermQueries,_                (reader, version) -> create.apply(reader, version))__    };create,a,pre,configured,char,filter,that,may,not,vary,at,all,provide,access,to,the,elasticsearch,verison;public,static,pre,configured,char,filter,singleton,with,version,string,name,boolean,use,filter,for,multiterm,queries,bi,function,reader,org,elasticsearch,version,reader,create,return,new,pre,configured,char,filter,name,caching,strategy,one,use,filter,for,multiterm,queries,reader,version,create,apply,reader,version
PreConfiguredCharFilter -> public static PreConfiguredCharFilter singletonWithVersion(String name, boolean useFilterForMultitermQueries,             BiFunction<Reader, org.elasticsearch.Version, Reader> create);1539615817;Create a pre-configured char filter that may not vary at all, provide access to the elasticsearch version;public static PreConfiguredCharFilter singletonWithVersion(String name, boolean useFilterForMultitermQueries,_            BiFunction<Reader, org.elasticsearch.Version, Reader> create) {_        return new PreConfiguredCharFilter(name, CachingStrategy.ONE, useFilterForMultitermQueries,_                (reader, version) -> create.apply(reader, version))__    };create,a,pre,configured,char,filter,that,may,not,vary,at,all,provide,access,to,the,elasticsearch,version;public,static,pre,configured,char,filter,singleton,with,version,string,name,boolean,use,filter,for,multiterm,queries,bi,function,reader,org,elasticsearch,version,reader,create,return,new,pre,configured,char,filter,name,caching,strategy,one,use,filter,for,multiterm,queries,reader,version,create,apply,reader,version
PreConfiguredCharFilter -> public static PreConfiguredCharFilter singletonWithVersion(String name, boolean useFilterForMultitermQueries,             BiFunction<Reader, org.elasticsearch.Version, Reader> create);1542897779;Create a pre-configured char filter that may not vary at all, provide access to the elasticsearch version;public static PreConfiguredCharFilter singletonWithVersion(String name, boolean useFilterForMultitermQueries,_            BiFunction<Reader, org.elasticsearch.Version, Reader> create) {_        return new PreConfiguredCharFilter(name, CachingStrategy.ONE, useFilterForMultitermQueries,_                (reader, version) -> create.apply(reader, version))__    };create,a,pre,configured,char,filter,that,may,not,vary,at,all,provide,access,to,the,elasticsearch,version;public,static,pre,configured,char,filter,singleton,with,version,string,name,boolean,use,filter,for,multiterm,queries,bi,function,reader,org,elasticsearch,version,reader,create,return,new,pre,configured,char,filter,name,caching,strategy,one,use,filter,for,multiterm,queries,reader,version,create,apply,reader,version
PreConfiguredCharFilter -> public boolean shouldUseFilterForMultitermQueries();1524684173;Can this {@link TokenFilter} be used in multi-term queries?;public boolean shouldUseFilterForMultitermQueries() {_        return useFilterForMultitermQueries__    };can,this,link,token,filter,be,used,in,multi,term,queries;public,boolean,should,use,filter,for,multiterm,queries,return,use,filter,for,multiterm,queries
PreConfiguredCharFilter -> public boolean shouldUseFilterForMultitermQueries();1539615817;Can this {@link TokenFilter} be used in multi-term queries?;public boolean shouldUseFilterForMultitermQueries() {_        return useFilterForMultitermQueries__    };can,this,link,token,filter,be,used,in,multi,term,queries;public,boolean,should,use,filter,for,multiterm,queries,return,use,filter,for,multiterm,queries
PreConfiguredCharFilter -> public boolean shouldUseFilterForMultitermQueries();1542897779;Can this {@link TokenFilter} be used in multi-term queries?;public boolean shouldUseFilterForMultitermQueries() {_        return useFilterForMultitermQueries__    };can,this,link,token,filter,be,used,in,multi,term,queries;public,boolean,should,use,filter,for,multiterm,queries,return,use,filter,for,multiterm,queries
