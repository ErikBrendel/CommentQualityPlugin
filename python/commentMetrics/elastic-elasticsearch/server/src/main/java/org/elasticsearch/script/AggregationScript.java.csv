commented;modifiers;parameterAmount;loc;comment;code
true;public;0;3;/**  * Return the parameters for this script.  */ ;/**  * Return the parameters for this script.  */ public Map<String, Object> getParams() {     return params. }
true;public;0;3;/**  * The doc lookup for the Lucene segment this script was created for.  */ ;/**  * The doc lookup for the Lucene segment this script was created for.  */ public Map<String, ScriptDocValues<?>> getDoc() {     return leafLookup.doc(). }
true;public;1;3;/**  * Set the current document to run the script on next.  */ ;/**  * Set the current document to run the script on next.  */ public void setDocument(int docid) {     leafLookup.setDocument(docid). }
false;public;1;4;;@Override public void setScorer(Scorable scorer) {     this.scorer = scorer. }
true;public;1;3;/**  * Sets per-document aggregation {@code _value}.  * <p>  * The default implementation just calls {@code setNextVar("_value", value)} but  * some engines might want to handle this differently for better performance.  * <p>  * @param value per-document value, typically a String, Long, or Double  */ ;/**  * Sets per-document aggregation {@code _value}.  * <p>  * The default implementation just calls {@code setNextVar("_value", value)} but  * some engines might want to handle this differently for better performance.  * <p>  * @param value per-document value, typically a String, Long, or Double  */ public void setNextAggregationValue(Object value) {     this.value = value. }
false;public;0;7;;public Number get_score() {     try {         return scorer == null ? 0.0 : scorer.score().     } catch (IOException e) {         throw new ElasticsearchException("couldn't lookup score", e).     } }
false;public;0;3;;public Object get_value() {     return value. }
true;public;0;3;/**  * Return the result as a long. This is used by aggregation scripts over long fields.  */ ;/**  * Return the result as a long. This is used by aggregation scripts over long fields.  */ public long runAsLong() {     return ((Number) execute()).longValue(). }
false;public;0;3;;public double runAsDouble() {     return ((Number) execute()).doubleValue(). }
false;public,abstract;0;1;;public abstract Object execute().
false;;1;1;;AggregationScript newInstance(LeafReaderContext ctx) throws IOException.
true;;0;1;/**  * Return {@code true} if the script needs {@code _score} calculated, or {@code false} otherwise.  */ ;/**  * Return {@code true} if the script needs {@code _score} calculated, or {@code false} otherwise.  */ boolean needs_score().
false;;2;1;;LeafFactory newFactory(Map<String, Object> params, SearchLookup lookup).
