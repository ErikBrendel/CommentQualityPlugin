commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected String executor() {     return ThreadPool.Names.SAME. }
false;protected;2;4;;@Override protected ClusterBlockException checkBlock(GetIndexTemplatesRequest request, ClusterState state) {     return state.blocks().globalBlockedException(ClusterBlockLevel.METADATA_READ). }
false;protected;0;4;;@Override protected GetIndexTemplatesResponse newResponse() {     return new GetIndexTemplatesResponse(). }
false;protected;3;26;;@Override protected void masterOperation(GetIndexTemplatesRequest request, ClusterState state, ActionListener<GetIndexTemplatesResponse> listener) {     List<IndexTemplateMetaData> results.     // If we did not ask for a specific name, then we return all templates     if (request.names().length == 0) {         results = Arrays.asList(state.metaData().templates().values().toArray(IndexTemplateMetaData.class)).     } else {         results = new ArrayList<>().     }     for (String name : request.names()) {         if (Regex.isSimpleMatchPattern(name)) {             for (ObjectObjectCursor<String, IndexTemplateMetaData> entry : state.metaData().templates()) {                 if (Regex.simpleMatch(name, entry.key)) {                     results.add(entry.value).                 }             }         } else if (state.metaData().templates().containsKey(name)) {             results.add(state.metaData().templates().get(name)).         }     }     listener.onResponse(new GetIndexTemplatesResponse(results)). }
