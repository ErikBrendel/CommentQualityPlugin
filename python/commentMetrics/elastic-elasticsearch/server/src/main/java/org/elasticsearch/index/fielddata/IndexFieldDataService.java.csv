# id;timestamp;commentText;codeText;commentWords;codeWords
IndexFieldDataService -> public void setListener(IndexFieldDataCache.Listener listener);1524684173;Sets a {@link org.elasticsearch.index.fielddata.IndexFieldDataCache.Listener} passed to each {@link IndexFieldData}_creation to capture onCache and onRemoval events. Setting a listener on this method will override any previously_set listeners._@throws IllegalStateException if the listener is set more than once;public void setListener(IndexFieldDataCache.Listener listener) {_        if (listener == null) {_            throw new IllegalArgumentException("listener must not be null")__        }_        if (this.listener != DEFAULT_NOOP_LISTENER) {_            throw new IllegalStateException("can't set listener more than once")__        }_        this.listener = listener__    };sets,a,link,org,elasticsearch,index,fielddata,index,field,data,cache,listener,passed,to,each,link,index,field,data,creation,to,capture,on,cache,and,on,removal,events,setting,a,listener,on,this,method,will,override,any,previously,set,listeners,throws,illegal,state,exception,if,the,listener,is,set,more,than,once;public,void,set,listener,index,field,data,cache,listener,listener,if,listener,null,throw,new,illegal,argument,exception,listener,must,not,be,null,if,this,listener,throw,new,illegal,state,exception,can,t,set,listener,more,than,once,this,listener,listener
IndexFieldDataService -> public void setListener(IndexFieldDataCache.Listener listener);1537806831;Sets a {@link org.elasticsearch.index.fielddata.IndexFieldDataCache.Listener} passed to each {@link IndexFieldData}_creation to capture onCache and onRemoval events. Setting a listener on this method will override any previously_set listeners._@throws IllegalStateException if the listener is set more than once;public void setListener(IndexFieldDataCache.Listener listener) {_        if (listener == null) {_            throw new IllegalArgumentException("listener must not be null")__        }_        if (this.listener != DEFAULT_NOOP_LISTENER) {_            throw new IllegalStateException("can't set listener more than once")__        }_        this.listener = listener__    };sets,a,link,org,elasticsearch,index,fielddata,index,field,data,cache,listener,passed,to,each,link,index,field,data,creation,to,capture,on,cache,and,on,removal,events,setting,a,listener,on,this,method,will,override,any,previously,set,listeners,throws,illegal,state,exception,if,the,listener,is,set,more,than,once;public,void,set,listener,index,field,data,cache,listener,listener,if,listener,null,throw,new,illegal,argument,exception,listener,must,not,be,null,if,this,listener,throw,new,illegal,state,exception,can,t,set,listener,more,than,once,this,listener,listener
IndexFieldDataService -> public void setListener(IndexFieldDataCache.Listener listener);1540583181;Sets a {@link org.elasticsearch.index.fielddata.IndexFieldDataCache.Listener} passed to each {@link IndexFieldData}_creation to capture onCache and onRemoval events. Setting a listener on this method will override any previously_set listeners._@throws IllegalStateException if the listener is set more than once;public void setListener(IndexFieldDataCache.Listener listener) {_        if (listener == null) {_            throw new IllegalArgumentException("listener must not be null")__        }_        if (this.listener != DEFAULT_NOOP_LISTENER) {_            throw new IllegalStateException("can't set listener more than once")__        }_        this.listener = listener__    };sets,a,link,org,elasticsearch,index,fielddata,index,field,data,cache,listener,passed,to,each,link,index,field,data,creation,to,capture,on,cache,and,on,removal,events,setting,a,listener,on,this,method,will,override,any,previously,set,listeners,throws,illegal,state,exception,if,the,listener,is,set,more,than,once;public,void,set,listener,index,field,data,cache,listener,listener,if,listener,null,throw,new,illegal,argument,exception,listener,must,not,be,null,if,this,listener,throw,new,illegal,state,exception,can,t,set,listener,more,than,once,this,listener,listener
