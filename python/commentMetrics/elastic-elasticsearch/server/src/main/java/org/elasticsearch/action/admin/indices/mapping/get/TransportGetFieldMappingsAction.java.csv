commented;modifiers;parameterAmount;loc;comment;code
false;public;1;7;;@Override public void onResponse(GetFieldMappingsResponse result) {     indexResponses.set(indexCounter.getAndIncrement(), result).     if (completionCounter.decrementAndGet() == 0) {         listener.onResponse(merge(indexResponses)).     } }
false;public;1;8;;@Override public void onFailure(Exception e) {     int index = indexCounter.getAndIncrement().     indexResponses.set(index, e).     if (completionCounter.decrementAndGet() == 0) {         listener.onResponse(merge(indexResponses)).     } }
false;protected;3;35;;@Override protected void doExecute(Task task, GetFieldMappingsRequest request, final ActionListener<GetFieldMappingsResponse> listener) {     ClusterState clusterState = clusterService.state().     String[] concreteIndices = indexNameExpressionResolver.concreteIndexNames(clusterState, request).     final AtomicInteger indexCounter = new AtomicInteger().     final AtomicInteger completionCounter = new AtomicInteger(concreteIndices.length).     final AtomicReferenceArray<Object> indexResponses = new AtomicReferenceArray<>(concreteIndices.length).     if (concreteIndices.length == 0) {         listener.onResponse(new GetFieldMappingsResponse()).     } else {         boolean probablySingleFieldRequest = concreteIndices.length == 1 && request.types().length == 1 && request.fields().length == 1.         for (final String index : concreteIndices) {             GetFieldMappingsIndexRequest shardRequest = new GetFieldMappingsIndexRequest(request, index, probablySingleFieldRequest).             shardAction.execute(shardRequest, new ActionListener<GetFieldMappingsResponse>() {                  @Override                 public void onResponse(GetFieldMappingsResponse result) {                     indexResponses.set(indexCounter.getAndIncrement(), result).                     if (completionCounter.decrementAndGet() == 0) {                         listener.onResponse(merge(indexResponses)).                     }                 }                  @Override                 public void onFailure(Exception e) {                     int index = indexCounter.getAndIncrement().                     indexResponses.set(index, e).                     if (completionCounter.decrementAndGet() == 0) {                         listener.onResponse(merge(indexResponses)).                     }                 }             }).         }     } }
false;private;1;11;;private GetFieldMappingsResponse merge(AtomicReferenceArray<Object> indexResponses) {     Map<String, Map<String, Map<String, GetFieldMappingsResponse.FieldMappingMetaData>>> mergedResponses = new HashMap<>().     for (int i = 0. i < indexResponses.length(). i++) {         Object element = indexResponses.get(i).         if (element instanceof GetFieldMappingsResponse) {             GetFieldMappingsResponse response = (GetFieldMappingsResponse) element.             mergedResponses.putAll(response.mappings()).         }     }     return new GetFieldMappingsResponse(unmodifiableMap(mergedResponses)). }
