commented;modifiers;parameterAmount;loc;comment;code
true;;0;1;/**  * The language name used in the script APIs to refer to this scripting backend.  */ ;/**  * The language name used in the script APIs to refer to this scripting backend.  */ String getType().
true;;4;1;/**  * Compiles a script.  * @param name the name of the script. {@code null} if it is anonymous (inline). For a stored script, its the identifier.  * @param code actual source of the script  * @param context the context this script will be used for  * @param params compile-time parameters (such as flags to the compiler)  * @return A compiled script of the FactoryType from {@link ScriptContext}  */ ;/**  * Compiles a script.  * @param name the name of the script. {@code null} if it is anonymous (inline). For a stored script, its the identifier.  * @param code actual source of the script  * @param context the context this script will be used for  * @param params compile-time parameters (such as flags to the compiler)  * @return A compiled script of the FactoryType from {@link ScriptContext}  */ <FactoryType> FactoryType compile(String name, String code, ScriptContext<FactoryType> context, Map<String, String> params).
false;default;0;2;;@Override default void close() throws IOException { }
