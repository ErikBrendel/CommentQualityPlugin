commented;modifiers;parameterAmount;loc;comment;code
false;public;2;7;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.startObject(getWriteableName()).     innerToXContent(builder, params).     builder.endObject().     return builder. }
false;public,final;1;11;;@Override public final boolean equals(Object obj) {     if (this == obj) {         return true.     }     if (obj == null || getClass() != obj.getClass()) {         return false.     }     SmoothingModel other = (SmoothingModel) obj.     return doEquals(other). }
false;public,final;0;10;;@Override public final int hashCode() {     /*          * Override hashCode here and forward to an abstract method to force          * extensions of this class to override hashCode in the same way that we          * force them to override equals. This also prevents false positives in          * CheckStyle's EqualsHashCode check.          */     return doHashCode(). }
false;protected,abstract;0;1;;protected abstract int doHashCode().
false;public,static;1;24;;public static SmoothingModel fromXContent(XContentParser parser) throws IOException {     XContentParser.Token token.     String fieldName = null.     SmoothingModel model = null.     while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {         if (token == XContentParser.Token.FIELD_NAME) {             fieldName = parser.currentName().         } else if (token == XContentParser.Token.START_OBJECT) {             if (LinearInterpolation.PARSE_FIELD.match(fieldName, parser.getDeprecationHandler())) {                 model = LinearInterpolation.fromXContent(parser).             } else if (Laplace.PARSE_FIELD.match(fieldName, parser.getDeprecationHandler())) {                 model = Laplace.fromXContent(parser).             } else if (StupidBackoff.PARSE_FIELD.match(fieldName, parser.getDeprecationHandler())) {                 model = StupidBackoff.fromXContent(parser).             } else {                 throw new IllegalArgumentException("suggester[phrase] doesn't support object field [" + fieldName + "]").             }         } else {             throw new ParsingException(parser.getTokenLocation(), "[smoothing] unknown token [" + token + "] after [" + fieldName + "]").         }     }     return model. }
false;public,abstract;0;1;;public abstract WordScorerFactory buildWordScorerFactory().
true;protected,abstract;1;1;/**  * subtype specific implementation of "equals".  */ ;/**  * subtype specific implementation of "equals".  */ protected abstract boolean doEquals(SmoothingModel other).
false;protected,abstract;2;1;;protected abstract XContentBuilder innerToXContent(XContentBuilder builder, Params params) throws IOException.
