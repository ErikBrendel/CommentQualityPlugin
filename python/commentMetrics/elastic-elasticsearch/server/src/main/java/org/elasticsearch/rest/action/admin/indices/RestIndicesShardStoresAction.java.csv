commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String getName() {     return "indices_shard_stores_action". }
false;public;2;9;;@Override public RestResponse buildResponse(IndicesShardStoresResponse response, XContentBuilder builder) throws Exception {     builder.startObject().     response.toXContent(builder, request).     builder.endObject().     return new BytesRestResponse(OK, builder). }
false;public;2;23;;@Override public RestChannelConsumer prepareRequest(final RestRequest request, final NodeClient client) throws IOException {     IndicesShardStoresRequest indicesShardStoresRequest = new IndicesShardStoresRequest(Strings.splitStringByCommaToArray(request.param("index"))).     if (request.hasParam("status")) {         indicesShardStoresRequest.shardStatuses(Strings.splitStringByCommaToArray(request.param("status"))).     }     indicesShardStoresRequest.indicesOptions(IndicesOptions.fromRequest(request, indicesShardStoresRequest.indicesOptions())).     return channel -> client.admin().indices().shardStores(indicesShardStoresRequest, new RestBuilderListener<IndicesShardStoresResponse>(channel) {          @Override         public RestResponse buildResponse(IndicesShardStoresResponse response, XContentBuilder builder) throws Exception {             builder.startObject().             response.toXContent(builder, request).             builder.endObject().             return new BytesRestResponse(OK, builder).         }     }). }
