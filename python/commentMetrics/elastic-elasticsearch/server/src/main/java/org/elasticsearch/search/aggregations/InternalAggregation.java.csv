# id;timestamp;commentText;codeText;commentWords;codeWords
InternalAggregation -> protected InternalAggregation(String name, List<PipelineAggregator> pipelineAggregators, Map<String, Object> metaData);1524684173;Constructs an get with a given name.__@param name The name of the get.;protected InternalAggregation(String name, List<PipelineAggregator> pipelineAggregators, Map<String, Object> metaData) {_        this.name = name__        this.pipelineAggregators = pipelineAggregators__        this.metaData = metaData__    };constructs,an,get,with,a,given,name,param,name,the,name,of,the,get;protected,internal,aggregation,string,name,list,pipeline,aggregator,pipeline,aggregators,map,string,object,meta,data,this,name,name,this,pipeline,aggregators,pipeline,aggregators,this,meta,data,meta,data
InternalAggregation -> protected InternalAggregation(String name, List<PipelineAggregator> pipelineAggregators, Map<String, Object> metaData);1525334055;Constructs an get with a given name.__@param name The name of the get.;protected InternalAggregation(String name, List<PipelineAggregator> pipelineAggregators, Map<String, Object> metaData) {_        this.name = name__        this.pipelineAggregators = pipelineAggregators__        this.metaData = metaData__    };constructs,an,get,with,a,given,name,param,name,the,name,of,the,get;protected,internal,aggregation,string,name,list,pipeline,aggregator,pipeline,aggregators,map,string,object,meta,data,this,name,name,this,pipeline,aggregators,pipeline,aggregators,this,meta,data,meta,data
InternalAggregation -> protected InternalAggregation(String name, List<PipelineAggregator> pipelineAggregators, Map<String, Object> metaData);1528762805;Constructs an get with a given name.__@param name The name of the get.;protected InternalAggregation(String name, List<PipelineAggregator> pipelineAggregators, Map<String, Object> metaData) {_        this.name = name__        this.pipelineAggregators = pipelineAggregators__        this.metaData = metaData__    };constructs,an,get,with,a,given,name,param,name,the,name,of,the,get;protected,internal,aggregation,string,name,list,pipeline,aggregator,pipeline,aggregators,map,string,object,meta,data,this,name,name,this,pipeline,aggregators,pipeline,aggregators,this,meta,data,meta,data
InternalAggregation -> protected InternalAggregation(String name, List<PipelineAggregator> pipelineAggregators, Map<String, Object> metaData);1538067637;Constructs an get with a given name.__@param name The name of the get.;protected InternalAggregation(String name, List<PipelineAggregator> pipelineAggregators, Map<String, Object> metaData) {_        this.name = name__        this.pipelineAggregators = pipelineAggregators__        this.metaData = metaData__    };constructs,an,get,with,a,given,name,param,name,the,name,of,the,get;protected,internal,aggregation,string,name,list,pipeline,aggregator,pipeline,aggregators,map,string,object,meta,data,this,name,name,this,pipeline,aggregators,pipeline,aggregators,this,meta,data,meta,data
InternalAggregation -> ReduceContext -> public boolean isFinalReduce();1524684173;Returns <code>true</code> iff the current reduce phase is the final reduce phase. This indicates if operations like_pipeline aggregations should be applied or if specific features like <tt>minDocCount</tt> should be taken into account._Operations that are potentially loosing information can only be applied during the final reduce phase.;public boolean isFinalReduce() {_            return isFinalReduce__        };returns,code,true,code,iff,the,current,reduce,phase,is,the,final,reduce,phase,this,indicates,if,operations,like,pipeline,aggregations,should,be,applied,or,if,specific,features,like,tt,min,doc,count,tt,should,be,taken,into,account,operations,that,are,potentially,loosing,information,can,only,be,applied,during,the,final,reduce,phase;public,boolean,is,final,reduce,return,is,final,reduce
InternalAggregation -> ReduceContext -> public boolean isFinalReduce();1525334055;Returns <code>true</code> iff the current reduce phase is the final reduce phase. This indicates if operations like_pipeline aggregations should be applied or if specific features like {@code minDocCount} should be taken into account._Operations that are potentially loosing information can only be applied during the final reduce phase.;public boolean isFinalReduce() {_            return isFinalReduce__        };returns,code,true,code,iff,the,current,reduce,phase,is,the,final,reduce,phase,this,indicates,if,operations,like,pipeline,aggregations,should,be,applied,or,if,specific,features,like,code,min,doc,count,should,be,taken,into,account,operations,that,are,potentially,loosing,information,can,only,be,applied,during,the,final,reduce,phase;public,boolean,is,final,reduce,return,is,final,reduce
InternalAggregation -> ReduceContext -> public boolean isFinalReduce();1528762805;Returns <code>true</code> iff the current reduce phase is the final reduce phase. This indicates if operations like_pipeline aggregations should be applied or if specific features like {@code minDocCount} should be taken into account._Operations that are potentially loosing information can only be applied during the final reduce phase.;public boolean isFinalReduce() {_            return isFinalReduce__        };returns,code,true,code,iff,the,current,reduce,phase,is,the,final,reduce,phase,this,indicates,if,operations,like,pipeline,aggregations,should,be,applied,or,if,specific,features,like,code,min,doc,count,should,be,taken,into,account,operations,that,are,potentially,loosing,information,can,only,be,applied,during,the,final,reduce,phase;public,boolean,is,final,reduce,return,is,final,reduce
InternalAggregation -> ReduceContext -> public boolean isFinalReduce();1538067637;Returns <code>true</code> iff the current reduce phase is the final reduce phase. This indicates if operations like_pipeline aggregations should be applied or if specific features like {@code minDocCount} should be taken into account._Operations that are potentially loosing information can only be applied during the final reduce phase.;public boolean isFinalReduce() {_            return isFinalReduce__        };returns,code,true,code,iff,the,current,reduce,phase,is,the,final,reduce,phase,this,indicates,if,operations,like,pipeline,aggregations,should,be,applied,or,if,specific,features,like,code,min,doc,count,should,be,taken,into,account,operations,that,are,potentially,loosing,information,can,only,be,applied,during,the,final,reduce,phase;public,boolean,is,final,reduce,return,is,final,reduce
InternalAggregation -> public Object getProperty(String path);1524684173;Get the value of specified path in the aggregation.__@param path_the path to the property in the aggregation tree_@return the value of the property;public Object getProperty(String path) {_        AggregationPath aggPath = AggregationPath.parse(path)__        return getProperty(aggPath.getPathElementsAsStringList())__    };get,the,value,of,specified,path,in,the,aggregation,param,path,the,path,to,the,property,in,the,aggregation,tree,return,the,value,of,the,property;public,object,get,property,string,path,aggregation,path,agg,path,aggregation,path,parse,path,return,get,property,agg,path,get,path,elements,as,string,list
InternalAggregation -> public Object getProperty(String path);1525334055;Get the value of specified path in the aggregation.__@param path_the path to the property in the aggregation tree_@return the value of the property;public Object getProperty(String path) {_        AggregationPath aggPath = AggregationPath.parse(path)__        return getProperty(aggPath.getPathElementsAsStringList())__    };get,the,value,of,specified,path,in,the,aggregation,param,path,the,path,to,the,property,in,the,aggregation,tree,return,the,value,of,the,property;public,object,get,property,string,path,aggregation,path,agg,path,aggregation,path,parse,path,return,get,property,agg,path,get,path,elements,as,string,list
InternalAggregation -> public Object getProperty(String path);1528762805;Get the value of specified path in the aggregation.__@param path_the path to the property in the aggregation tree_@return the value of the property;public Object getProperty(String path) {_        AggregationPath aggPath = AggregationPath.parse(path)__        return getProperty(aggPath.getPathElementsAsStringList())__    };get,the,value,of,specified,path,in,the,aggregation,param,path,the,path,to,the,property,in,the,aggregation,tree,return,the,value,of,the,property;public,object,get,property,string,path,aggregation,path,agg,path,aggregation,path,parse,path,return,get,property,agg,path,get,path,elements,as,string,list
InternalAggregation -> public Object getProperty(String path);1538067637;Get the value of specified path in the aggregation.__@param path_the path to the property in the aggregation tree_@return the value of the property;public Object getProperty(String path) {_        AggregationPath aggPath = AggregationPath.parse(path)__        return getProperty(aggPath.getPathElementsAsStringList())__    };get,the,value,of,specified,path,in,the,aggregation,param,path,the,path,to,the,property,in,the,aggregation,tree,return,the,value,of,the,property;public,object,get,property,string,path,aggregation,path,agg,path,aggregation,path,parse,path,return,get,property,agg,path,get,path,elements,as,string,list
InternalAggregation -> ReduceContext -> public void consumeBucketsAndMaybeBreak(int size);1524684173;Adds <tt>count</tt> buckets to the global count for the request and fails if this number is greater than_the maximum number of buckets allowed in a response;public void consumeBucketsAndMaybeBreak(int size) {_            multiBucketConsumer.accept(size)__        };adds,tt,count,tt,buckets,to,the,global,count,for,the,request,and,fails,if,this,number,is,greater,than,the,maximum,number,of,buckets,allowed,in,a,response;public,void,consume,buckets,and,maybe,break,int,size,multi,bucket,consumer,accept,size
InternalAggregation -> ReduceContext -> public void consumeBucketsAndMaybeBreak(int size);1525334055;Adds {@code count} buckets to the global count for the request and fails if this number is greater than_the maximum number of buckets allowed in a response;public void consumeBucketsAndMaybeBreak(int size) {_            multiBucketConsumer.accept(size)__        };adds,code,count,buckets,to,the,global,count,for,the,request,and,fails,if,this,number,is,greater,than,the,maximum,number,of,buckets,allowed,in,a,response;public,void,consume,buckets,and,maybe,break,int,size,multi,bucket,consumer,accept,size
InternalAggregation -> ReduceContext -> public void consumeBucketsAndMaybeBreak(int size);1528762805;Adds {@code count} buckets to the global count for the request and fails if this number is greater than_the maximum number of buckets allowed in a response;public void consumeBucketsAndMaybeBreak(int size) {_            multiBucketConsumer.accept(size)__        };adds,code,count,buckets,to,the,global,count,for,the,request,and,fails,if,this,number,is,greater,than,the,maximum,number,of,buckets,allowed,in,a,response;public,void,consume,buckets,and,maybe,break,int,size,multi,bucket,consumer,accept,size
InternalAggregation -> ReduceContext -> public void consumeBucketsAndMaybeBreak(int size);1538067637;Adds {@code count} buckets to the global count for the request and fails if this number is greater than_the maximum number of buckets allowed in a response;public void consumeBucketsAndMaybeBreak(int size) {_            multiBucketConsumer.accept(size)__        };adds,code,count,buckets,to,the,global,count,for,the,request,and,fails,if,this,number,is,greater,than,the,maximum,number,of,buckets,allowed,in,a,response;public,void,consume,buckets,and,maybe,break,int,size,multi,bucket,consumer,accept,size
InternalAggregation -> public final InternalAggregation reduce(List<InternalAggregation> aggregations, ReduceContext reduceContext);1524684173;Reduces the given aggregations to a single one and returns it. In <b>most</b> cases, the assumption will be the all given_aggregations are of the same type (the same type as this aggregation). For best efficiency, when implementing,_try reusing an existing instance (typically the first in the given list) to save on redundant object_construction.;public final InternalAggregation reduce(List<InternalAggregation> aggregations, ReduceContext reduceContext) {_        InternalAggregation aggResult = doReduce(aggregations, reduceContext)__        if (reduceContext.isFinalReduce()) {_            for (PipelineAggregator pipelineAggregator : pipelineAggregators) {_                aggResult = pipelineAggregator.reduce(aggResult, reduceContext)__            }_        }_        return aggResult__    };reduces,the,given,aggregations,to,a,single,one,and,returns,it,in,b,most,b,cases,the,assumption,will,be,the,all,given,aggregations,are,of,the,same,type,the,same,type,as,this,aggregation,for,best,efficiency,when,implementing,try,reusing,an,existing,instance,typically,the,first,in,the,given,list,to,save,on,redundant,object,construction;public,final,internal,aggregation,reduce,list,internal,aggregation,aggregations,reduce,context,reduce,context,internal,aggregation,agg,result,do,reduce,aggregations,reduce,context,if,reduce,context,is,final,reduce,for,pipeline,aggregator,pipeline,aggregator,pipeline,aggregators,agg,result,pipeline,aggregator,reduce,agg,result,reduce,context,return,agg,result
InternalAggregation -> public final InternalAggregation reduce(List<InternalAggregation> aggregations, ReduceContext reduceContext);1525334055;Reduces the given aggregations to a single one and returns it. In <b>most</b> cases, the assumption will be the all given_aggregations are of the same type (the same type as this aggregation). For best efficiency, when implementing,_try reusing an existing instance (typically the first in the given list) to save on redundant object_construction.;public final InternalAggregation reduce(List<InternalAggregation> aggregations, ReduceContext reduceContext) {_        InternalAggregation aggResult = doReduce(aggregations, reduceContext)__        if (reduceContext.isFinalReduce()) {_            for (PipelineAggregator pipelineAggregator : pipelineAggregators) {_                aggResult = pipelineAggregator.reduce(aggResult, reduceContext)__            }_        }_        return aggResult__    };reduces,the,given,aggregations,to,a,single,one,and,returns,it,in,b,most,b,cases,the,assumption,will,be,the,all,given,aggregations,are,of,the,same,type,the,same,type,as,this,aggregation,for,best,efficiency,when,implementing,try,reusing,an,existing,instance,typically,the,first,in,the,given,list,to,save,on,redundant,object,construction;public,final,internal,aggregation,reduce,list,internal,aggregation,aggregations,reduce,context,reduce,context,internal,aggregation,agg,result,do,reduce,aggregations,reduce,context,if,reduce,context,is,final,reduce,for,pipeline,aggregator,pipeline,aggregator,pipeline,aggregators,agg,result,pipeline,aggregator,reduce,agg,result,reduce,context,return,agg,result
InternalAggregation -> public final InternalAggregation reduce(List<InternalAggregation> aggregations, ReduceContext reduceContext);1528762805;Reduces the given aggregations to a single one and returns it. In <b>most</b> cases, the assumption will be the all given_aggregations are of the same type (the same type as this aggregation). For best efficiency, when implementing,_try reusing an existing instance (typically the first in the given list) to save on redundant object_construction.;public final InternalAggregation reduce(List<InternalAggregation> aggregations, ReduceContext reduceContext) {_        InternalAggregation aggResult = doReduce(aggregations, reduceContext)__        if (reduceContext.isFinalReduce()) {_            for (PipelineAggregator pipelineAggregator : pipelineAggregators) {_                aggResult = pipelineAggregator.reduce(aggResult, reduceContext)__            }_        }_        return aggResult__    };reduces,the,given,aggregations,to,a,single,one,and,returns,it,in,b,most,b,cases,the,assumption,will,be,the,all,given,aggregations,are,of,the,same,type,the,same,type,as,this,aggregation,for,best,efficiency,when,implementing,try,reusing,an,existing,instance,typically,the,first,in,the,given,list,to,save,on,redundant,object,construction;public,final,internal,aggregation,reduce,list,internal,aggregation,aggregations,reduce,context,reduce,context,internal,aggregation,agg,result,do,reduce,aggregations,reduce,context,if,reduce,context,is,final,reduce,for,pipeline,aggregator,pipeline,aggregator,pipeline,aggregators,agg,result,pipeline,aggregator,reduce,agg,result,reduce,context,return,agg,result
InternalAggregation -> public final InternalAggregation reduce(List<InternalAggregation> aggregations, ReduceContext reduceContext);1538067637;Reduces the given aggregations to a single one and returns it. In <b>most</b> cases, the assumption will be the all given_aggregations are of the same type (the same type as this aggregation). For best efficiency, when implementing,_try reusing an existing instance (typically the first in the given list) to save on redundant object_construction.;public final InternalAggregation reduce(List<InternalAggregation> aggregations, ReduceContext reduceContext) {_        InternalAggregation aggResult = doReduce(aggregations, reduceContext)__        if (reduceContext.isFinalReduce()) {_            for (PipelineAggregator pipelineAggregator : pipelineAggregators) {_                aggResult = pipelineAggregator.reduce(aggResult, reduceContext)__            }_        }_        return aggResult__    };reduces,the,given,aggregations,to,a,single,one,and,returns,it,in,b,most,b,cases,the,assumption,will,be,the,all,given,aggregations,are,of,the,same,type,the,same,type,as,this,aggregation,for,best,efficiency,when,implementing,try,reusing,an,existing,instance,typically,the,first,in,the,given,list,to,save,on,redundant,object,construction;public,final,internal,aggregation,reduce,list,internal,aggregation,aggregations,reduce,context,reduce,context,internal,aggregation,agg,result,do,reduce,aggregations,reduce,context,if,reduce,context,is,final,reduce,for,pipeline,aggregator,pipeline,aggregator,pipeline,aggregators,agg,result,pipeline,aggregator,reduce,agg,result,reduce,context,return,agg,result
InternalAggregation -> protected abstract int doHashCode()_;1524684173;Opportunity for subclasses to the {@link #hashCode()} for this_class.;protected abstract int doHashCode()_;opportunity,for,subclasses,to,the,link,hash,code,for,this,class;protected,abstract,int,do,hash,code
InternalAggregation -> protected abstract int doHashCode()_;1525334055;Opportunity for subclasses to the {@link #hashCode()} for this_class.;protected abstract int doHashCode()_;opportunity,for,subclasses,to,the,link,hash,code,for,this,class;protected,abstract,int,do,hash,code
InternalAggregation -> protected abstract int doHashCode()_;1528762805;Opportunity for subclasses to the {@link #hashCode()} for this_class.;protected abstract int doHashCode()_;opportunity,for,subclasses,to,the,link,hash,code,for,this,class;protected,abstract,int,do,hash,code
InternalAggregation -> protected abstract int doHashCode()_;1538067637;Opportunity for subclasses to the {@link #hashCode()} for this_class.;protected abstract int doHashCode()_;opportunity,for,subclasses,to,the,link,hash,code,for,this,class;protected,abstract,int,do,hash,code
InternalAggregation -> protected abstract boolean doEquals(Object obj)_;1524684173;Opportunity for subclasses to add criteria to the {@link #equals(Object)}_method for this class.__This method can safely cast <code>obj</code> to the subclass since the_{@link #equals(Object)} method checks that <code>obj</code> is the same_class as <code>this</code>;protected abstract boolean doEquals(Object obj)_;opportunity,for,subclasses,to,add,criteria,to,the,link,equals,object,method,for,this,class,this,method,can,safely,cast,code,obj,code,to,the,subclass,since,the,link,equals,object,method,checks,that,code,obj,code,is,the,same,class,as,code,this,code;protected,abstract,boolean,do,equals,object,obj
InternalAggregation -> protected abstract boolean doEquals(Object obj)_;1525334055;Opportunity for subclasses to add criteria to the {@link #equals(Object)}_method for this class.__This method can safely cast <code>obj</code> to the subclass since the_{@link #equals(Object)} method checks that <code>obj</code> is the same_class as <code>this</code>;protected abstract boolean doEquals(Object obj)_;opportunity,for,subclasses,to,add,criteria,to,the,link,equals,object,method,for,this,class,this,method,can,safely,cast,code,obj,code,to,the,subclass,since,the,link,equals,object,method,checks,that,code,obj,code,is,the,same,class,as,code,this,code;protected,abstract,boolean,do,equals,object,obj
InternalAggregation -> protected abstract boolean doEquals(Object obj)_;1528762805;Opportunity for subclasses to add criteria to the {@link #equals(Object)}_method for this class.__This method can safely cast <code>obj</code> to the subclass since the_{@link #equals(Object)} method checks that <code>obj</code> is the same_class as <code>this</code>;protected abstract boolean doEquals(Object obj)_;opportunity,for,subclasses,to,add,criteria,to,the,link,equals,object,method,for,this,class,this,method,can,safely,cast,code,obj,code,to,the,subclass,since,the,link,equals,object,method,checks,that,code,obj,code,is,the,same,class,as,code,this,code;protected,abstract,boolean,do,equals,object,obj
InternalAggregation -> protected abstract boolean doEquals(Object obj)_;1538067637;Opportunity for subclasses to add criteria to the {@link #equals(Object)}_method for this class.__This method can safely cast <code>obj</code> to the subclass since the_{@link #equals(Object)} method checks that <code>obj</code> is the same_class as <code>this</code>;protected abstract boolean doEquals(Object obj)_;opportunity,for,subclasses,to,add,criteria,to,the,link,equals,object,method,for,this,class,this,method,can,safely,cast,code,obj,code,to,the,subclass,since,the,link,equals,object,method,checks,that,code,obj,code,is,the,same,class,as,code,this,code;protected,abstract,boolean,do,equals,object,obj
InternalAggregation -> protected InternalAggregation(StreamInput in) throws IOException;1524684173;Read from a stream.;protected InternalAggregation(StreamInput in) throws IOException {_        name = in.readString()__        metaData = in.readMap()__        pipelineAggregators = in.readNamedWriteableList(PipelineAggregator.class)__    };read,from,a,stream;protected,internal,aggregation,stream,input,in,throws,ioexception,name,in,read,string,meta,data,in,read,map,pipeline,aggregators,in,read,named,writeable,list,pipeline,aggregator,class
InternalAggregation -> protected InternalAggregation(StreamInput in) throws IOException;1525334055;Read from a stream.;protected InternalAggregation(StreamInput in) throws IOException {_        name = in.readString()__        metaData = in.readMap()__        pipelineAggregators = in.readNamedWriteableList(PipelineAggregator.class)__    };read,from,a,stream;protected,internal,aggregation,stream,input,in,throws,ioexception,name,in,read,string,meta,data,in,read,map,pipeline,aggregators,in,read,named,writeable,list,pipeline,aggregator,class
InternalAggregation -> protected InternalAggregation(StreamInput in) throws IOException;1528762805;Read from a stream.;protected InternalAggregation(StreamInput in) throws IOException {_        name = in.readString()__        metaData = in.readMap()__        pipelineAggregators = in.readNamedWriteableList(PipelineAggregator.class)__    };read,from,a,stream;protected,internal,aggregation,stream,input,in,throws,ioexception,name,in,read,string,meta,data,in,read,map,pipeline,aggregators,in,read,named,writeable,list,pipeline,aggregator,class
InternalAggregation -> protected InternalAggregation(StreamInput in) throws IOException;1538067637;Read from a stream.;protected InternalAggregation(StreamInput in) throws IOException {_        name = in.readString()__        metaData = in.readMap()__        pipelineAggregators = in.readNamedWriteableList(PipelineAggregator.class)__    };read,from,a,stream;protected,internal,aggregation,stream,input,in,throws,ioexception,name,in,read,string,meta,data,in,read,map,pipeline,aggregators,in,read,named,writeable,list,pipeline,aggregator,class
InternalAggregation -> protected static void writeSize(int size, StreamOutput out) throws IOException;1524684173;Write a size under the assumption that a value of 0 means unlimited.;protected static void writeSize(int size, StreamOutput out) throws IOException {_        if (size == Integer.MAX_VALUE) {_            size = 0__        }_        out.writeVInt(size)__    };write,a,size,under,the,assumption,that,a,value,of,0,means,unlimited;protected,static,void,write,size,int,size,stream,output,out,throws,ioexception,if,size,integer,size,0,out,write,vint,size
InternalAggregation -> protected static void writeSize(int size, StreamOutput out) throws IOException;1525334055;Write a size under the assumption that a value of 0 means unlimited.;protected static void writeSize(int size, StreamOutput out) throws IOException {_        if (size == Integer.MAX_VALUE) {_            size = 0__        }_        out.writeVInt(size)__    };write,a,size,under,the,assumption,that,a,value,of,0,means,unlimited;protected,static,void,write,size,int,size,stream,output,out,throws,ioexception,if,size,integer,size,0,out,write,vint,size
InternalAggregation -> protected static void writeSize(int size, StreamOutput out) throws IOException;1528762805;Write a size under the assumption that a value of 0 means unlimited.;protected static void writeSize(int size, StreamOutput out) throws IOException {_        if (size == Integer.MAX_VALUE) {_            size = 0__        }_        out.writeVInt(size)__    };write,a,size,under,the,assumption,that,a,value,of,0,means,unlimited;protected,static,void,write,size,int,size,stream,output,out,throws,ioexception,if,size,integer,size,0,out,write,vint,size
InternalAggregation -> protected static void writeSize(int size, StreamOutput out) throws IOException;1538067637;Write a size under the assumption that a value of 0 means unlimited.;protected static void writeSize(int size, StreamOutput out) throws IOException {_        if (size == Integer.MAX_VALUE) {_            size = 0__        }_        out.writeVInt(size)__    };write,a,size,under,the,assumption,that,a,value,of,0,means,unlimited;protected,static,void,write,size,int,size,stream,output,out,throws,ioexception,if,size,integer,size,0,out,write,vint,size
InternalAggregation -> protected static int readSize(StreamInput in) throws IOException;1524684173;Read a size under the assumption that a value of 0 means unlimited.;protected static int readSize(StreamInput in) throws IOException {_        final int size = in.readVInt()__        return size == 0 ? Integer.MAX_VALUE : size__    };read,a,size,under,the,assumption,that,a,value,of,0,means,unlimited;protected,static,int,read,size,stream,input,in,throws,ioexception,final,int,size,in,read,vint,return,size,0,integer,size
InternalAggregation -> protected static int readSize(StreamInput in) throws IOException;1525334055;Read a size under the assumption that a value of 0 means unlimited.;protected static int readSize(StreamInput in) throws IOException {_        final int size = in.readVInt()__        return size == 0 ? Integer.MAX_VALUE : size__    };read,a,size,under,the,assumption,that,a,value,of,0,means,unlimited;protected,static,int,read,size,stream,input,in,throws,ioexception,final,int,size,in,read,vint,return,size,0,integer,size
InternalAggregation -> protected static int readSize(StreamInput in) throws IOException;1528762805;Read a size under the assumption that a value of 0 means unlimited.;protected static int readSize(StreamInput in) throws IOException {_        final int size = in.readVInt()__        return size == 0 ? Integer.MAX_VALUE : size__    };read,a,size,under,the,assumption,that,a,value,of,0,means,unlimited;protected,static,int,read,size,stream,input,in,throws,ioexception,final,int,size,in,read,vint,return,size,0,integer,size
InternalAggregation -> protected static int readSize(StreamInput in) throws IOException;1538067637;Read a size under the assumption that a value of 0 means unlimited.;protected static int readSize(StreamInput in) throws IOException {_        final int size = in.readVInt()__        return size == 0 ? Integer.MAX_VALUE : size__    };read,a,size,under,the,assumption,that,a,value,of,0,means,unlimited;protected,static,int,read,size,stream,input,in,throws,ioexception,final,int,size,in,read,vint,return,size,0,integer,size
