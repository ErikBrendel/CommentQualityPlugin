commented;modifiers;parameterAmount;loc;comment;code
true;;1;1;/**  * Visit a instance binding. The same instance is returned for every injection. This target is  * found in both module and injector bindings.  */ ;/**  * Visit a instance binding. The same instance is returned for every injection. This target is  * found in both module and injector bindings.  */ V visit(InstanceBinding<? extends T> binding).
true;;1;1;/**  * Visit a provider instance binding. The provider's {@code get} method is invoked to resolve  * injections. This target is found in both module and injector bindings.  */ ;/**  * Visit a provider instance binding. The provider's {@code get} method is invoked to resolve  * injections. This target is found in both module and injector bindings.  */ V visit(ProviderInstanceBinding<? extends T> binding).
true;;1;1;/**  * Visit a provider key binding. To resolve injections, the provider key is first resolved, then  * that provider's {@code get} method is invoked. This target is found in both module and injector  * bindings.  */ ;/**  * Visit a provider key binding. To resolve injections, the provider key is first resolved, then  * that provider's {@code get} method is invoked. This target is found in both module and injector  * bindings.  */ V visit(ProviderKeyBinding<? extends T> binding).
true;;1;1;/**  * Visit a linked key binding. The other key's binding is used to resolve injections. This  * target is found in both module and injector bindings.  */ ;/**  * Visit a linked key binding. The other key's binding is used to resolve injections. This  * target is found in both module and injector bindings.  */ V visit(LinkedKeyBinding<? extends T> binding).
true;;1;1;/**  * Visit a binding to a key exposed from an enclosed private environment. This target is only  * found in injector bindings.  */ ;/**  * Visit a binding to a key exposed from an enclosed private environment. This target is only  * found in injector bindings.  */ V visit(ExposedBinding<? extends T> binding).
true;;1;1;/**  * Visit an untargetted binding. This target is found only on module bindings. It indicates  * that the injector should use its implicit binding strategies to resolve injections.  */ ;/**  * Visit an untargetted binding. This target is found only on module bindings. It indicates  * that the injector should use its implicit binding strategies to resolve injections.  */ V visit(UntargettedBinding<? extends T> binding).
true;;1;1;/**  * Visit a constructor binding. To resolve injections, an instance is instantiated by invoking  * {@code constructor}. This target is found only on injector bindings.  */ ;/**  * Visit a constructor binding. To resolve injections, an instance is instantiated by invoking  * {@code constructor}. This target is found only on injector bindings.  */ V visit(ConstructorBinding<? extends T> binding).
true;;1;1;/**  * Visit a binding created from converting a bound instance to a new type. The source binding  * has the same binding annotation but a different type. This target is found only on injector  * bindings.  */ ;/**  * Visit a binding created from converting a bound instance to a new type. The source binding  * has the same binding annotation but a different type. This target is found only on injector  * bindings.  */ V visit(ConvertedConstantBinding<? extends T> binding).
true;;1;1;/**  * Visit a binding to a {@link org.elasticsearch.common.inject.Provider} that delegates to the binding for the  * provided type. This target is found only on injector bindings.  */ ;/**  * Visit a binding to a {@link org.elasticsearch.common.inject.Provider} that delegates to the binding for the  * provided type. This target is found only on injector bindings.  */ V visit(ProviderBinding<? extends T> binding).
