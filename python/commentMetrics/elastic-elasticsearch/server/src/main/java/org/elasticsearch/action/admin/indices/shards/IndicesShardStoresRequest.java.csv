commented;modifiers;parameterAmount;loc;comment;code
false;public;1;10;;@Override public void writeTo(StreamOutput out) throws IOException {     super.writeTo(out).     out.writeStringArrayNullable(indices).     out.writeVInt(statuses.size()).     for (ClusterHealthStatus status : statuses) {         out.writeByte(status.value()).     }     indicesOptions.writeIndicesOptions(out). }
true;public;1;11;/**  * Set statuses to filter shards to get stores info on.  * see {@link ClusterHealthStatus} for details.  * Defaults to "yellow" and "red" status  * @param shardStatuses acceptable values are "green", "yellow", "red" and "all"  */ ;/**  * Set statuses to filter shards to get stores info on.  * see {@link ClusterHealthStatus} for details.  * Defaults to "yellow" and "red" status  * @param shardStatuses acceptable values are "green", "yellow", "red" and "all"  */ public IndicesShardStoresRequest shardStatuses(String... shardStatuses) {     statuses = EnumSet.noneOf(ClusterHealthStatus.class).     for (String statusString : shardStatuses) {         if ("all".equalsIgnoreCase(statusString)) {             statuses = EnumSet.allOf(ClusterHealthStatus.class).             return this.         }         statuses.add(ClusterHealthStatus.fromString(statusString)).     }     return this. }
true;public;1;4;/**  * Specifies what type of requested indices to ignore and wildcard indices expressions  * By default, expands wildcards to both open and closed indices  */ ;/**  * Specifies what type of requested indices to ignore and wildcard indices expressions  * By default, expands wildcards to both open and closed indices  */ public IndicesShardStoresRequest indicesOptions(IndicesOptions indicesOptions) {     this.indicesOptions = indicesOptions.     return this. }
true;public;1;5;/**  * Sets the indices for the shard stores request  */ ;/**  * Sets the indices for the shard stores request  */ @Override public IndicesShardStoresRequest indices(String... indices) {     this.indices = indices.     return this. }
true;public;0;3;/**  * Returns the shard criteria to get store information on  */ ;/**  * Returns the shard criteria to get store information on  */ public EnumSet<ClusterHealthStatus> shardStatuses() {     return statuses. }
false;public;0;4;;@Override public String[] indices() {     return indices. }
false;public;0;4;;@Override public IndicesOptions indicesOptions() {     return indicesOptions. }
false;public;0;4;;@Override public ActionRequestValidationException validate() {     return null. }
false;public;1;4;;@Override public void readFrom(StreamInput in) throws IOException {     throw new UnsupportedOperationException("usage of Streamable is to be replaced by Writeable"). }
