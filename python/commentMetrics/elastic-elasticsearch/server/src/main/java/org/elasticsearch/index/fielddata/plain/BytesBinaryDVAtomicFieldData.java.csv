commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public long ramBytesUsed() {     // not exposed by Lucene     return 0. }
false;public;0;4;;@Override public Collection<Accountable> getChildResources() {     return Collections.emptyList(). }
false;public;1;13;;@Override public boolean advanceExact(int doc) throws IOException {     if (values.advanceExact(doc)) {         final BytesRef bytes = values.binaryValue().         assert bytes.length > 0.         in.reset(bytes.bytes, bytes.offset, bytes.length).         count = in.readVInt().         scratch.bytes = bytes.bytes.         return true.     } else {         return false.     } }
false;public;0;4;;@Override public int docValueCount() {     return count. }
false;public;0;7;;@Override public BytesRef nextValue() throws IOException {     scratch.length = in.readVInt().     scratch.offset = in.getPosition().     in.setPosition(scratch.offset + scratch.length).     return scratch. }
false;public;0;37;;@Override public SortedBinaryDocValues getBytesValues() {     return new SortedBinaryDocValues() {          int count.          final ByteArrayDataInput in = new ByteArrayDataInput().          final BytesRef scratch = new BytesRef().          @Override         public boolean advanceExact(int doc) throws IOException {             if (values.advanceExact(doc)) {                 final BytesRef bytes = values.binaryValue().                 assert bytes.length > 0.                 in.reset(bytes.bytes, bytes.offset, bytes.length).                 count = in.readVInt().                 scratch.bytes = bytes.bytes.                 return true.             } else {                 return false.             }         }          @Override         public int docValueCount() {             return count.         }          @Override         public BytesRef nextValue() throws IOException {             scratch.length = in.readVInt().             scratch.offset = in.getPosition().             in.setPosition(scratch.offset + scratch.length).             return scratch.         }     }. }
false;public;0;4;;@Override public ScriptDocValues<BytesRef> getScriptValues() {     return new ScriptDocValues.BytesRefs(getBytesValues()). }
false;public;0;4;;@Override public void close() { // no-op }
