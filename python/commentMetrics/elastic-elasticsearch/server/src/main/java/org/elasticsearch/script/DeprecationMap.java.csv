commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public int size() {     return delegate.size(). }
false;public;0;4;;@Override public boolean isEmpty() {     return delegate.isEmpty(). }
false;public;1;4;;@Override public boolean containsKey(final Object key) {     return delegate.containsKey(key). }
false;public;1;4;;@Override public boolean containsValue(final Object value) {     return delegate.containsValue(value). }
false;public;1;8;;@Override public Object get(final Object key) {     String deprecationMessage = deprecations.get(key).     if (deprecationMessage != null) {         deprecationLogger.deprecatedAndMaybeLog(logKeyPrefix + "_" + key, deprecationMessage).     }     return delegate.get(key). }
false;public;2;4;;@Override public Object put(final String key, final Object value) {     return delegate.put(key, value). }
false;public;1;4;;@Override public Object remove(final Object key) {     return delegate.remove(key). }
false;public;1;4;;@Override public void putAll(final Map<? extends String, ?> m) {     delegate.putAll(m). }
false;public;0;4;;@Override public void clear() {     delegate.clear(). }
false;public;0;4;;@Override public Set<String> keySet() {     return delegate.keySet(). }
false;public;0;4;;@Override public Collection<Object> values() {     return delegate.values(). }
false;public;0;4;;@Override public Set<Entry<String, Object>> entrySet() {     return delegate.entrySet(). }
