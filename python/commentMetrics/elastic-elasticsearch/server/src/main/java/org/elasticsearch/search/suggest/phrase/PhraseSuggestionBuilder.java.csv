# id;timestamp;commentText;codeText;commentWords;codeWords
PhraseSuggestionBuilder -> public PhraseSuggestionBuilder collatePrune(boolean collatePrune);1524684173;Sets whether to prune suggestions after collation;public PhraseSuggestionBuilder collatePrune(boolean collatePrune) {_        this.collatePrune = collatePrune__        return this__    };sets,whether,to,prune,suggestions,after,collation;public,phrase,suggestion,builder,collate,prune,boolean,collate,prune,this,collate,prune,collate,prune,return,this
PhraseSuggestionBuilder -> public PhraseSuggestionBuilder collatePrune(boolean collatePrune);1525334055;Sets whether to prune suggestions after collation;public PhraseSuggestionBuilder collatePrune(boolean collatePrune) {_        this.collatePrune = collatePrune__        return this__    };sets,whether,to,prune,suggestions,after,collation;public,phrase,suggestion,builder,collate,prune,boolean,collate,prune,this,collate,prune,collate,prune,return,this
PhraseSuggestionBuilder -> public PhraseSuggestionBuilder collatePrune(boolean collatePrune);1533738061;Sets whether to prune suggestions after collation;public PhraseSuggestionBuilder collatePrune(boolean collatePrune) {_        this.collatePrune = collatePrune__        return this__    };sets,whether,to,prune,suggestions,after,collation;public,phrase,suggestion,builder,collate,prune,boolean,collate,prune,this,collate,prune,collate,prune,return,this
PhraseSuggestionBuilder -> public PhraseSuggestionBuilder forceUnigrams(boolean forceUnigrams);1524684173;If set to <code>true</code> the phrase suggester will fail if the analyzer only_produces ngrams. the default it <code>true</code>.;public PhraseSuggestionBuilder forceUnigrams(boolean forceUnigrams) {_        this.forceUnigrams = forceUnigrams__        return this__    };if,set,to,code,true,code,the,phrase,suggester,will,fail,if,the,analyzer,only,produces,ngrams,the,default,it,code,true,code;public,phrase,suggestion,builder,force,unigrams,boolean,force,unigrams,this,force,unigrams,force,unigrams,return,this
PhraseSuggestionBuilder -> public PhraseSuggestionBuilder forceUnigrams(boolean forceUnigrams);1525334055;If set to <code>true</code> the phrase suggester will fail if the analyzer only_produces ngrams. the default it <code>true</code>.;public PhraseSuggestionBuilder forceUnigrams(boolean forceUnigrams) {_        this.forceUnigrams = forceUnigrams__        return this__    };if,set,to,code,true,code,the,phrase,suggester,will,fail,if,the,analyzer,only,produces,ngrams,the,default,it,code,true,code;public,phrase,suggestion,builder,force,unigrams,boolean,force,unigrams,this,force,unigrams,force,unigrams,return,this
PhraseSuggestionBuilder -> public PhraseSuggestionBuilder forceUnigrams(boolean forceUnigrams);1533738061;If set to <code>true</code> the phrase suggester will fail if the analyzer only_produces ngrams. the default it <code>true</code>.;public PhraseSuggestionBuilder forceUnigrams(boolean forceUnigrams) {_        this.forceUnigrams = forceUnigrams__        return this__    };if,set,to,code,true,code,the,phrase,suggester,will,fail,if,the,analyzer,only,produces,ngrams,the,default,it,code,true,code;public,phrase,suggestion,builder,force,unigrams,boolean,force,unigrams,this,force,unigrams,force,unigrams,return,this
PhraseSuggestionBuilder -> public String postTag();1524684173;get the post-tag for the highlighter set with {@link #highlight(String, String)};public String postTag() {_        return this.postTag__    };get,the,post,tag,for,the,highlighter,set,with,link,highlight,string,string;public,string,post,tag,return,this,post,tag
PhraseSuggestionBuilder -> public String postTag();1525334055;get the post-tag for the highlighter set with {@link #highlight(String, String)};public String postTag() {_        return this.postTag__    };get,the,post,tag,for,the,highlighter,set,with,link,highlight,string,string;public,string,post,tag,return,this,post,tag
PhraseSuggestionBuilder -> public String postTag();1533738061;get the post-tag for the highlighter set with {@link #highlight(String, String)};public String postTag() {_        return this.postTag__    };get,the,post,tag,for,the,highlighter,set,with,link,highlight,string,string;public,string,post,tag,return,this,post,tag
PhraseSuggestionBuilder -> public PhraseSuggestionBuilder highlight(String preTag, String postTag);1524684173;Setup highlighting for suggestions.  If this is called a highlight field_is returned with suggestions wrapping changed tokens with preTag and postTag.;public PhraseSuggestionBuilder highlight(String preTag, String postTag) {_        if ((preTag == null) != (postTag == null)) {_            throw new IllegalArgumentException("Pre and post tag must both be null or both not be null.")__        }_        this.preTag = preTag__        this.postTag = postTag__        return this__    };setup,highlighting,for,suggestions,if,this,is,called,a,highlight,field,is,returned,with,suggestions,wrapping,changed,tokens,with,pre,tag,and,post,tag;public,phrase,suggestion,builder,highlight,string,pre,tag,string,post,tag,if,pre,tag,null,post,tag,null,throw,new,illegal,argument,exception,pre,and,post,tag,must,both,be,null,or,both,not,be,null,this,pre,tag,pre,tag,this,post,tag,post,tag,return,this
PhraseSuggestionBuilder -> public PhraseSuggestionBuilder highlight(String preTag, String postTag);1525334055;Setup highlighting for suggestions.  If this is called a highlight field_is returned with suggestions wrapping changed tokens with preTag and postTag.;public PhraseSuggestionBuilder highlight(String preTag, String postTag) {_        if ((preTag == null) != (postTag == null)) {_            throw new IllegalArgumentException("Pre and post tag must both be null or both not be null.")__        }_        this.preTag = preTag__        this.postTag = postTag__        return this__    };setup,highlighting,for,suggestions,if,this,is,called,a,highlight,field,is,returned,with,suggestions,wrapping,changed,tokens,with,pre,tag,and,post,tag;public,phrase,suggestion,builder,highlight,string,pre,tag,string,post,tag,if,pre,tag,null,post,tag,null,throw,new,illegal,argument,exception,pre,and,post,tag,must,both,be,null,or,both,not,be,null,this,pre,tag,pre,tag,this,post,tag,post,tag,return,this
PhraseSuggestionBuilder -> public PhraseSuggestionBuilder highlight(String preTag, String postTag);1533738061;Setup highlighting for suggestions.  If this is called a highlight field_is returned with suggestions wrapping changed tokens with preTag and postTag.;public PhraseSuggestionBuilder highlight(String preTag, String postTag) {_        if ((preTag == null) != (postTag == null)) {_            throw new IllegalArgumentException("Pre and post tag must both be null or both not be null.")__        }_        this.preTag = preTag__        this.postTag = postTag__        return this__    };setup,highlighting,for,suggestions,if,this,is,called,a,highlight,field,is,returned,with,suggestions,wrapping,changed,tokens,with,pre,tag,and,post,tag;public,phrase,suggestion,builder,highlight,string,pre,tag,string,post,tag,if,pre,tag,null,post,tag,null,throw,new,illegal,argument,exception,pre,and,post,tag,must,both,be,null,or,both,not,be,null,this,pre,tag,pre,tag,this,post,tag,post,tag,return,this
PhraseSuggestionBuilder -> public Boolean collatePrune();1524684173;Gets whether to prune suggestions after collation;public Boolean collatePrune() {_        return this.collatePrune__    };gets,whether,to,prune,suggestions,after,collation;public,boolean,collate,prune,return,this,collate,prune
PhraseSuggestionBuilder -> public Boolean collatePrune();1525334055;Gets whether to prune suggestions after collation;public Boolean collatePrune() {_        return this.collatePrune__    };gets,whether,to,prune,suggestions,after,collation;public,boolean,collate,prune,return,this,collate,prune
PhraseSuggestionBuilder -> public Boolean collatePrune();1533738061;Gets whether to prune suggestions after collation;public Boolean collatePrune() {_        return this.collatePrune__    };gets,whether,to,prune,suggestions,after,collation;public,boolean,collate,prune,return,this,collate,prune
PhraseSuggestionBuilder -> public Integer tokenLimit();1524684173;get the {@link #tokenLimit(int)} parameter;public Integer tokenLimit() {_        return this.tokenLimit__    };get,the,link,token,limit,int,parameter;public,integer,token,limit,return,this,token,limit
PhraseSuggestionBuilder -> public Integer tokenLimit();1525334055;get the {@link #tokenLimit(int)} parameter;public Integer tokenLimit() {_        return this.tokenLimit__    };get,the,link,token,limit,int,parameter;public,integer,token,limit,return,this,token,limit
PhraseSuggestionBuilder -> public Integer tokenLimit();1533738061;get the {@link #tokenLimit(int)} parameter;public Integer tokenLimit() {_        return this.tokenLimit__    };get,the,link,token,limit,int,parameter;public,integer,token,limit,return,this,token,limit
PhraseSuggestionBuilder -> public Float confidence();1524684173;get the {@link #confidence()} parameter;public Float confidence() {_        return this.confidence__    };get,the,link,confidence,parameter;public,float,confidence,return,this,confidence
PhraseSuggestionBuilder -> public Float confidence();1525334055;get the {@link #confidence()} parameter;public Float confidence() {_        return this.confidence__    };get,the,link,confidence,parameter;public,float,confidence,return,this,confidence
PhraseSuggestionBuilder -> public Float confidence();1533738061;get the {@link #confidence()} parameter;public Float confidence() {_        return this.confidence__    };get,the,link,confidence,parameter;public,float,confidence,return,this,confidence
PhraseSuggestionBuilder -> public Float maxErrors();1524684173;get the maxErrors setting;public Float maxErrors() {_        return this.maxErrors__    };get,the,max,errors,setting;public,float,max,errors,return,this,max,errors
PhraseSuggestionBuilder -> public Float maxErrors();1525334055;get the maxErrors setting;public Float maxErrors() {_        return this.maxErrors__    };get,the,max,errors,setting;public,float,max,errors,return,this,max,errors
PhraseSuggestionBuilder -> public Float maxErrors();1533738061;get the maxErrors setting;public Float maxErrors() {_        return this.maxErrors__    };get,the,max,errors,setting;public,float,max,errors,return,this,max,errors
PhraseSuggestionBuilder -> public PhraseSuggestionBuilder smoothingModel(SmoothingModel model);1524684173;Sets an explicit smoothing model used for this suggester. The default is_{@link StupidBackoff}.;public PhraseSuggestionBuilder smoothingModel(SmoothingModel model) {_        this.model = model__        return this__    };sets,an,explicit,smoothing,model,used,for,this,suggester,the,default,is,link,stupid,backoff;public,phrase,suggestion,builder,smoothing,model,smoothing,model,model,this,model,model,return,this
PhraseSuggestionBuilder -> public PhraseSuggestionBuilder smoothingModel(SmoothingModel model);1525334055;Sets an explicit smoothing model used for this suggester. The default is_{@link StupidBackoff}.;public PhraseSuggestionBuilder smoothingModel(SmoothingModel model) {_        this.model = model__        return this__    };sets,an,explicit,smoothing,model,used,for,this,suggester,the,default,is,link,stupid,backoff;public,phrase,suggestion,builder,smoothing,model,smoothing,model,model,this,model,model,return,this
PhraseSuggestionBuilder -> public PhraseSuggestionBuilder smoothingModel(SmoothingModel model);1533738061;Sets an explicit smoothing model used for this suggester. The default is_{@link StupidBackoff}.;public PhraseSuggestionBuilder smoothingModel(SmoothingModel model) {_        this.model = model__        return this__    };sets,an,explicit,smoothing,model,used,for,this,suggester,the,default,is,link,stupid,backoff;public,phrase,suggestion,builder,smoothing,model,smoothing,model,model,this,model,model,return,this
PhraseSuggestionBuilder -> public PhraseSuggestionBuilder(StreamInput in) throws IOException;1524684173;Read from a stream.;public PhraseSuggestionBuilder(StreamInput in) throws IOException {_        super(in)__        maxErrors = in.readFloat()__        realWordErrorLikelihood = in.readFloat()__        confidence = in.readFloat()__        gramSize = in.readOptionalVInt()__        model = in.readOptionalNamedWriteable(SmoothingModel.class)__        forceUnigrams = in.readBoolean()__        tokenLimit = in.readVInt()__        preTag = in.readOptionalString()__        postTag = in.readOptionalString()__        separator = in.readString()__        if (in.readBoolean()) {_            collateQuery = new Script(in)__        }_        collateParams = in.readMap()__        collatePrune = in.readOptionalBoolean()__        int generatorsEntries = in.readVInt()__        for (int i = 0_ i < generatorsEntries_ i++) {_            String type = in.readString()__            int numberOfGenerators = in.readVInt()__            List<CandidateGenerator> generatorsList = new ArrayList<>(numberOfGenerators)__            for (int g = 0_ g < numberOfGenerators_ g++) {_                DirectCandidateGeneratorBuilder generator = new DirectCandidateGeneratorBuilder(in)__                generatorsList.add(generator)__            }_            generators.put(type, generatorsList)__        }_    };read,from,a,stream;public,phrase,suggestion,builder,stream,input,in,throws,ioexception,super,in,max,errors,in,read,float,real,word,error,likelihood,in,read,float,confidence,in,read,float,gram,size,in,read,optional,vint,model,in,read,optional,named,writeable,smoothing,model,class,force,unigrams,in,read,boolean,token,limit,in,read,vint,pre,tag,in,read,optional,string,post,tag,in,read,optional,string,separator,in,read,string,if,in,read,boolean,collate,query,new,script,in,collate,params,in,read,map,collate,prune,in,read,optional,boolean,int,generators,entries,in,read,vint,for,int,i,0,i,generators,entries,i,string,type,in,read,string,int,number,of,generators,in,read,vint,list,candidate,generator,generators,list,new,array,list,number,of,generators,for,int,g,0,g,number,of,generators,g,direct,candidate,generator,builder,generator,new,direct,candidate,generator,builder,in,generators,list,add,generator,generators,put,type,generators,list
PhraseSuggestionBuilder -> public PhraseSuggestionBuilder(StreamInput in) throws IOException;1525334055;Read from a stream.;public PhraseSuggestionBuilder(StreamInput in) throws IOException {_        super(in)__        maxErrors = in.readFloat()__        realWordErrorLikelihood = in.readFloat()__        confidence = in.readFloat()__        gramSize = in.readOptionalVInt()__        model = in.readOptionalNamedWriteable(SmoothingModel.class)__        forceUnigrams = in.readBoolean()__        tokenLimit = in.readVInt()__        preTag = in.readOptionalString()__        postTag = in.readOptionalString()__        separator = in.readString()__        if (in.readBoolean()) {_            collateQuery = new Script(in)__        }_        collateParams = in.readMap()__        collatePrune = in.readOptionalBoolean()__        int generatorsEntries = in.readVInt()__        for (int i = 0_ i < generatorsEntries_ i++) {_            String type = in.readString()__            int numberOfGenerators = in.readVInt()__            List<CandidateGenerator> generatorsList = new ArrayList<>(numberOfGenerators)__            for (int g = 0_ g < numberOfGenerators_ g++) {_                DirectCandidateGeneratorBuilder generator = new DirectCandidateGeneratorBuilder(in)__                generatorsList.add(generator)__            }_            generators.put(type, generatorsList)__        }_    };read,from,a,stream;public,phrase,suggestion,builder,stream,input,in,throws,ioexception,super,in,max,errors,in,read,float,real,word,error,likelihood,in,read,float,confidence,in,read,float,gram,size,in,read,optional,vint,model,in,read,optional,named,writeable,smoothing,model,class,force,unigrams,in,read,boolean,token,limit,in,read,vint,pre,tag,in,read,optional,string,post,tag,in,read,optional,string,separator,in,read,string,if,in,read,boolean,collate,query,new,script,in,collate,params,in,read,map,collate,prune,in,read,optional,boolean,int,generators,entries,in,read,vint,for,int,i,0,i,generators,entries,i,string,type,in,read,string,int,number,of,generators,in,read,vint,list,candidate,generator,generators,list,new,array,list,number,of,generators,for,int,g,0,g,number,of,generators,g,direct,candidate,generator,builder,generator,new,direct,candidate,generator,builder,in,generators,list,add,generator,generators,put,type,generators,list
PhraseSuggestionBuilder -> public PhraseSuggestionBuilder(StreamInput in) throws IOException;1533738061;Read from a stream.;public PhraseSuggestionBuilder(StreamInput in) throws IOException {_        super(in)__        maxErrors = in.readFloat()__        realWordErrorLikelihood = in.readFloat()__        confidence = in.readFloat()__        gramSize = in.readOptionalVInt()__        model = in.readOptionalNamedWriteable(SmoothingModel.class)__        forceUnigrams = in.readBoolean()__        tokenLimit = in.readVInt()__        preTag = in.readOptionalString()__        postTag = in.readOptionalString()__        separator = in.readString()__        if (in.readBoolean()) {_            collateQuery = new Script(in)__        }_        collateParams = in.readMap()__        collatePrune = in.readOptionalBoolean()__        int generatorsEntries = in.readVInt()__        for (int i = 0_ i < generatorsEntries_ i++) {_            String type = in.readString()__            int numberOfGenerators = in.readVInt()__            List<CandidateGenerator> generatorsList = new ArrayList<>(numberOfGenerators)__            for (int g = 0_ g < numberOfGenerators_ g++) {_                DirectCandidateGeneratorBuilder generator = new DirectCandidateGeneratorBuilder(in)__                generatorsList.add(generator)__            }_            generators.put(type, generatorsList)__        }_    };read,from,a,stream;public,phrase,suggestion,builder,stream,input,in,throws,ioexception,super,in,max,errors,in,read,float,real,word,error,likelihood,in,read,float,confidence,in,read,float,gram,size,in,read,optional,vint,model,in,read,optional,named,writeable,smoothing,model,class,force,unigrams,in,read,boolean,token,limit,in,read,vint,pre,tag,in,read,optional,string,post,tag,in,read,optional,string,separator,in,read,string,if,in,read,boolean,collate,query,new,script,in,collate,params,in,read,map,collate,prune,in,read,optional,boolean,int,generators,entries,in,read,vint,for,int,i,0,i,generators,entries,i,string,type,in,read,string,int,number,of,generators,in,read,vint,list,candidate,generator,generators,list,new,array,list,number,of,generators,for,int,g,0,g,number,of,generators,g,direct,candidate,generator,builder,generator,new,direct,candidate,generator,builder,in,generators,list,add,generator,generators,put,type,generators,list
PhraseSuggestionBuilder -> public Map<String, Object> collateParams();1524684173;gets additional params for collate script;public Map<String, Object> collateParams() {_        return this.collateParams__    };gets,additional,params,for,collate,script;public,map,string,object,collate,params,return,this,collate,params
PhraseSuggestionBuilder -> public Map<String, Object> collateParams();1525334055;gets additional params for collate script;public Map<String, Object> collateParams() {_        return this.collateParams__    };gets,additional,params,for,collate,script;public,map,string,object,collate,params,return,this,collate,params
PhraseSuggestionBuilder -> public Map<String, Object> collateParams();1533738061;gets additional params for collate script;public Map<String, Object> collateParams() {_        return this.collateParams__    };gets,additional,params,for,collate,script;public,map,string,object,collate,params,return,this,collate,params
PhraseSuggestionBuilder -> public String separator();1524684173;get the separator that is used to separate terms in the bigram field.;public String separator() {_        return this.separator__    };get,the,separator,that,is,used,to,separate,terms,in,the,bigram,field;public,string,separator,return,this,separator
PhraseSuggestionBuilder -> public String separator();1525334055;get the separator that is used to separate terms in the bigram field.;public String separator() {_        return this.separator__    };get,the,separator,that,is,used,to,separate,terms,in,the,bigram,field;public,string,separator,return,this,separator
PhraseSuggestionBuilder -> public String separator();1533738061;get the separator that is used to separate terms in the bigram field.;public String separator() {_        return this.separator__    };get,the,separator,that,is,used,to,separate,terms,in,the,bigram,field;public,string,separator,return,this,separator
PhraseSuggestionBuilder -> public SmoothingModel smoothingModel();1524684173;Gets the {@link SmoothingModel};public SmoothingModel smoothingModel() {_        return this.model__    };gets,the,link,smoothing,model;public,smoothing,model,smoothing,model,return,this,model
PhraseSuggestionBuilder -> public SmoothingModel smoothingModel();1525334055;Gets the {@link SmoothingModel};public SmoothingModel smoothingModel() {_        return this.model__    };gets,the,link,smoothing,model;public,smoothing,model,smoothing,model,return,this,model
PhraseSuggestionBuilder -> public SmoothingModel smoothingModel();1533738061;Gets the {@link SmoothingModel};public SmoothingModel smoothingModel() {_        return this.model__    };gets,the,link,smoothing,model;public,smoothing,model,smoothing,model,return,this,model
PhraseSuggestionBuilder -> public PhraseSuggestionBuilder collateQuery(Script collateQueryTemplate);1524684173;Sets a query used for filtering out suggested phrases (collation).;public PhraseSuggestionBuilder collateQuery(Script collateQueryTemplate) {_        this.collateQuery = collateQueryTemplate__        return this__    };sets,a,query,used,for,filtering,out,suggested,phrases,collation;public,phrase,suggestion,builder,collate,query,script,collate,query,template,this,collate,query,collate,query,template,return,this
PhraseSuggestionBuilder -> public PhraseSuggestionBuilder collateQuery(Script collateQueryTemplate);1525334055;Sets a query used for filtering out suggested phrases (collation).;public PhraseSuggestionBuilder collateQuery(Script collateQueryTemplate) {_        this.collateQuery = collateQueryTemplate__        return this__    };sets,a,query,used,for,filtering,out,suggested,phrases,collation;public,phrase,suggestion,builder,collate,query,script,collate,query,template,this,collate,query,collate,query,template,return,this
PhraseSuggestionBuilder -> public PhraseSuggestionBuilder collateQuery(Script collateQueryTemplate);1533738061;Sets a query used for filtering out suggested phrases (collation).;public PhraseSuggestionBuilder collateQuery(Script collateQueryTemplate) {_        this.collateQuery = collateQueryTemplate__        return this__    };sets,a,query,used,for,filtering,out,suggested,phrases,collation;public,phrase,suggestion,builder,collate,query,script,collate,query,template,this,collate,query,collate,query,template,return,this
PhraseSuggestionBuilder -> private PhraseSuggestionBuilder(String fieldname, PhraseSuggestionBuilder in);1524684173;internal copy constructor that copies over all class fields except for the field which is_set to the one provided in the first argument;private PhraseSuggestionBuilder(String fieldname, PhraseSuggestionBuilder in) {_        super(fieldname, in)__        maxErrors = in.maxErrors__        separator = in.separator__        realWordErrorLikelihood = in.realWordErrorLikelihood__        confidence = in.confidence__        gramSize = in.gramSize__        forceUnigrams = in.forceUnigrams__        tokenLimit = in.tokenLimit__        preTag = in.preTag__        postTag = in.postTag__        collateQuery = in.collateQuery__        collateParams = in.collateParams__        collatePrune = in.collatePrune__        model = in.model__        generators.putAll(in.generators)__    };internal,copy,constructor,that,copies,over,all,class,fields,except,for,the,field,which,is,set,to,the,one,provided,in,the,first,argument;private,phrase,suggestion,builder,string,fieldname,phrase,suggestion,builder,in,super,fieldname,in,max,errors,in,max,errors,separator,in,separator,real,word,error,likelihood,in,real,word,error,likelihood,confidence,in,confidence,gram,size,in,gram,size,force,unigrams,in,force,unigrams,token,limit,in,token,limit,pre,tag,in,pre,tag,post,tag,in,post,tag,collate,query,in,collate,query,collate,params,in,collate,params,collate,prune,in,collate,prune,model,in,model,generators,put,all,in,generators
PhraseSuggestionBuilder -> private PhraseSuggestionBuilder(String fieldname, PhraseSuggestionBuilder in);1525334055;internal copy constructor that copies over all class fields except for the field which is_set to the one provided in the first argument;private PhraseSuggestionBuilder(String fieldname, PhraseSuggestionBuilder in) {_        super(fieldname, in)__        maxErrors = in.maxErrors__        separator = in.separator__        realWordErrorLikelihood = in.realWordErrorLikelihood__        confidence = in.confidence__        gramSize = in.gramSize__        forceUnigrams = in.forceUnigrams__        tokenLimit = in.tokenLimit__        preTag = in.preTag__        postTag = in.postTag__        collateQuery = in.collateQuery__        collateParams = in.collateParams__        collatePrune = in.collatePrune__        model = in.model__        generators.putAll(in.generators)__    };internal,copy,constructor,that,copies,over,all,class,fields,except,for,the,field,which,is,set,to,the,one,provided,in,the,first,argument;private,phrase,suggestion,builder,string,fieldname,phrase,suggestion,builder,in,super,fieldname,in,max,errors,in,max,errors,separator,in,separator,real,word,error,likelihood,in,real,word,error,likelihood,confidence,in,confidence,gram,size,in,gram,size,force,unigrams,in,force,unigrams,token,limit,in,token,limit,pre,tag,in,pre,tag,post,tag,in,post,tag,collate,query,in,collate,query,collate,params,in,collate,params,collate,prune,in,collate,prune,model,in,model,generators,put,all,in,generators
PhraseSuggestionBuilder -> private PhraseSuggestionBuilder(String fieldname, PhraseSuggestionBuilder in);1533738061;internal copy constructor that copies over all class fields except for the field which is_set to the one provided in the first argument;private PhraseSuggestionBuilder(String fieldname, PhraseSuggestionBuilder in) {_        super(fieldname, in)__        maxErrors = in.maxErrors__        separator = in.separator__        realWordErrorLikelihood = in.realWordErrorLikelihood__        confidence = in.confidence__        gramSize = in.gramSize__        forceUnigrams = in.forceUnigrams__        tokenLimit = in.tokenLimit__        preTag = in.preTag__        postTag = in.postTag__        collateQuery = in.collateQuery__        collateParams = in.collateParams__        collatePrune = in.collatePrune__        model = in.model__        generators.putAll(in.generators)__    };internal,copy,constructor,that,copies,over,all,class,fields,except,for,the,field,which,is,set,to,the,one,provided,in,the,first,argument;private,phrase,suggestion,builder,string,fieldname,phrase,suggestion,builder,in,super,fieldname,in,max,errors,in,max,errors,separator,in,separator,real,word,error,likelihood,in,real,word,error,likelihood,confidence,in,confidence,gram,size,in,gram,size,force,unigrams,in,force,unigrams,token,limit,in,token,limit,pre,tag,in,pre,tag,post,tag,in,post,tag,collate,query,in,collate,query,collate,params,in,collate,params,collate,prune,in,collate,prune,model,in,model,generators,put,all,in,generators
PhraseSuggestionBuilder -> public PhraseSuggestionBuilder confidence(float confidence);1524684173;Sets the confidence level for this suggester. The confidence level_defines a factor applied to the input phrases score which is used as a_threshold for other suggest candidates. Only candidates that score higher_than the threshold will be included in the result. For instance a_confidence level of <tt>1.0</tt> will only return suggestions that score_higher than the input phrase. If set to <tt>0.0</tt> the top N candidates_are returned. The default is <tt>1.0</tt>;public PhraseSuggestionBuilder confidence(float confidence) {_        if (confidence < 0.0) {_            throw new IllegalArgumentException("confidence must be >= 0.0")__        }_        this.confidence = confidence__        return this__    };sets,the,confidence,level,for,this,suggester,the,confidence,level,defines,a,factor,applied,to,the,input,phrases,score,which,is,used,as,a,threshold,for,other,suggest,candidates,only,candidates,that,score,higher,than,the,threshold,will,be,included,in,the,result,for,instance,a,confidence,level,of,tt,1,0,tt,will,only,return,suggestions,that,score,higher,than,the,input,phrase,if,set,to,tt,0,0,tt,the,top,n,candidates,are,returned,the,default,is,tt,1,0,tt;public,phrase,suggestion,builder,confidence,float,confidence,if,confidence,0,0,throw,new,illegal,argument,exception,confidence,must,be,0,0,this,confidence,confidence,return,this
PhraseSuggestionBuilder -> public PhraseSuggestionBuilder confidence(float confidence);1525334055;Sets the confidence level for this suggester. The confidence level_defines a factor applied to the input phrases score which is used as a_threshold for other suggest candidates. Only candidates that score higher_than the threshold will be included in the result. For instance a_confidence level of {@code 1.0} will only return suggestions that score_higher than the input phrase. If set to {@code 0.0} the top N candidates_are returned. The default is {@code 1.0};public PhraseSuggestionBuilder confidence(float confidence) {_        if (confidence < 0.0) {_            throw new IllegalArgumentException("confidence must be >= 0.0")__        }_        this.confidence = confidence__        return this__    };sets,the,confidence,level,for,this,suggester,the,confidence,level,defines,a,factor,applied,to,the,input,phrases,score,which,is,used,as,a,threshold,for,other,suggest,candidates,only,candidates,that,score,higher,than,the,threshold,will,be,included,in,the,result,for,instance,a,confidence,level,of,code,1,0,will,only,return,suggestions,that,score,higher,than,the,input,phrase,if,set,to,code,0,0,the,top,n,candidates,are,returned,the,default,is,code,1,0;public,phrase,suggestion,builder,confidence,float,confidence,if,confidence,0,0,throw,new,illegal,argument,exception,confidence,must,be,0,0,this,confidence,confidence,return,this
PhraseSuggestionBuilder -> public PhraseSuggestionBuilder confidence(float confidence);1533738061;Sets the confidence level for this suggester. The confidence level_defines a factor applied to the input phrases score which is used as a_threshold for other suggest candidates. Only candidates that score higher_than the threshold will be included in the result. For instance a_confidence level of {@code 1.0} will only return suggestions that score_higher than the input phrase. If set to {@code 0.0} the top N candidates_are returned. The default is {@code 1.0};public PhraseSuggestionBuilder confidence(float confidence) {_        if (confidence < 0.0) {_            throw new IllegalArgumentException("confidence must be >= 0.0")__        }_        this.confidence = confidence__        return this__    };sets,the,confidence,level,for,this,suggester,the,confidence,level,defines,a,factor,applied,to,the,input,phrases,score,which,is,used,as,a,threshold,for,other,suggest,candidates,only,candidates,that,score,higher,than,the,threshold,will,be,included,in,the,result,for,instance,a,confidence,level,of,code,1,0,will,only,return,suggestions,that,score,higher,than,the,input,phrase,if,set,to,code,0,0,the,top,n,candidates,are,returned,the,default,is,code,1,0;public,phrase,suggestion,builder,confidence,float,confidence,if,confidence,0,0,throw,new,illegal,argument,exception,confidence,must,be,0,0,this,confidence,confidence,return,this
PhraseSuggestionBuilder -> Map<String, List<CandidateGenerator>> getCandidateGenerators();1524684173;get the candidate generators.;Map<String, List<CandidateGenerator>> getCandidateGenerators() {_        return this.generators__    };get,the,candidate,generators;map,string,list,candidate,generator,get,candidate,generators,return,this,generators
PhraseSuggestionBuilder -> Map<String, List<CandidateGenerator>> getCandidateGenerators();1525334055;get the candidate generators.;Map<String, List<CandidateGenerator>> getCandidateGenerators() {_        return this.generators__    };get,the,candidate,generators;map,string,list,candidate,generator,get,candidate,generators,return,this,generators
PhraseSuggestionBuilder -> Map<String, List<CandidateGenerator>> getCandidateGenerators();1533738061;get the candidate generators.;Map<String, List<CandidateGenerator>> getCandidateGenerators() {_        return this.generators__    };get,the,candidate,generators;map,string,list,candidate,generator,get,candidate,generators,return,this,generators
PhraseSuggestionBuilder -> public String preTag();1524684173;get the pre-tag for the highlighter set with {@link #highlight(String, String)};public String preTag() {_        return this.preTag__    };get,the,pre,tag,for,the,highlighter,set,with,link,highlight,string,string;public,string,pre,tag,return,this,pre,tag
PhraseSuggestionBuilder -> public String preTag();1525334055;get the pre-tag for the highlighter set with {@link #highlight(String, String)};public String preTag() {_        return this.preTag__    };get,the,pre,tag,for,the,highlighter,set,with,link,highlight,string,string;public,string,pre,tag,return,this,pre,tag
PhraseSuggestionBuilder -> public String preTag();1533738061;get the pre-tag for the highlighter set with {@link #highlight(String, String)};public String preTag() {_        return this.preTag__    };get,the,pre,tag,for,the,highlighter,set,with,link,highlight,string,string;public,string,pre,tag,return,this,pre,tag
PhraseSuggestionBuilder -> public Script collateQuery();1524684173;gets the query used for filtering out suggested phrases (collation).;public Script collateQuery() {_        return this.collateQuery__    };gets,the,query,used,for,filtering,out,suggested,phrases,collation;public,script,collate,query,return,this,collate,query
PhraseSuggestionBuilder -> public Script collateQuery();1525334055;gets the query used for filtering out suggested phrases (collation).;public Script collateQuery() {_        return this.collateQuery__    };gets,the,query,used,for,filtering,out,suggested,phrases,collation;public,script,collate,query,return,this,collate,query
PhraseSuggestionBuilder -> public Script collateQuery();1533738061;gets the query used for filtering out suggested phrases (collation).;public Script collateQuery() {_        return this.collateQuery__    };gets,the,query,used,for,filtering,out,suggested,phrases,collation;public,script,collate,query,return,this,collate,query
PhraseSuggestionBuilder -> public PhraseSuggestionBuilder gramSize(int gramSize);1524684173;Sets the gram size for the n-gram model used for this suggester. The_default value is <tt>1</tt> corresponding to <tt>unigrams</tt>. Use_<tt>2</tt> for <tt>bigrams</tt> and <tt>3</tt> for <tt>trigrams</tt>.;public PhraseSuggestionBuilder gramSize(int gramSize) {_        if (gramSize < 1) {_            throw new IllegalArgumentException("gramSize must be >= 1")__        }_        this.gramSize = gramSize__        return this__    };sets,the,gram,size,for,the,n,gram,model,used,for,this,suggester,the,default,value,is,tt,1,tt,corresponding,to,tt,unigrams,tt,use,tt,2,tt,for,tt,bigrams,tt,and,tt,3,tt,for,tt,trigrams,tt;public,phrase,suggestion,builder,gram,size,int,gram,size,if,gram,size,1,throw,new,illegal,argument,exception,gram,size,must,be,1,this,gram,size,gram,size,return,this
PhraseSuggestionBuilder -> public PhraseSuggestionBuilder gramSize(int gramSize);1525334055;Sets the gram size for the n-gram model used for this suggester. The_default value is {@code 1} corresponding to {@code unigrams}. Use_{@code 2} for {@code bigrams} and {@code 3} for {@code trigrams}.;public PhraseSuggestionBuilder gramSize(int gramSize) {_        if (gramSize < 1) {_            throw new IllegalArgumentException("gramSize must be >= 1")__        }_        this.gramSize = gramSize__        return this__    };sets,the,gram,size,for,the,n,gram,model,used,for,this,suggester,the,default,value,is,code,1,corresponding,to,code,unigrams,use,code,2,for,code,bigrams,and,code,3,for,code,trigrams;public,phrase,suggestion,builder,gram,size,int,gram,size,if,gram,size,1,throw,new,illegal,argument,exception,gram,size,must,be,1,this,gram,size,gram,size,return,this
PhraseSuggestionBuilder -> public PhraseSuggestionBuilder gramSize(int gramSize);1533738061;Sets the gram size for the n-gram model used for this suggester. The_default value is {@code 1} corresponding to {@code unigrams}. Use_{@code 2} for {@code bigrams} and {@code 3} for {@code trigrams}.;public PhraseSuggestionBuilder gramSize(int gramSize) {_        if (gramSize < 1) {_            throw new IllegalArgumentException("gramSize must be >= 1")__        }_        this.gramSize = gramSize__        return this__    };sets,the,gram,size,for,the,n,gram,model,used,for,this,suggester,the,default,value,is,code,1,corresponding,to,code,unigrams,use,code,2,for,code,bigrams,and,code,3,for,code,trigrams;public,phrase,suggestion,builder,gram,size,int,gram,size,if,gram,size,1,throw,new,illegal,argument,exception,gram,size,must,be,1,this,gram,size,gram,size,return,this
PhraseSuggestionBuilder -> public PhraseSuggestionBuilder realWordErrorLikelihood(float realWordErrorLikelihood);1524684173;Sets the likelihood of a term being a misspelled even if the term exists_in the dictionary. The default it <tt>0.95</tt> corresponding to 5% or_the real words are misspelled.;public PhraseSuggestionBuilder realWordErrorLikelihood(float realWordErrorLikelihood) {_        if (realWordErrorLikelihood <= 0.0) {_            throw new IllegalArgumentException("real_word_error_likelihood must be > 0.0")__        }_        this.realWordErrorLikelihood = realWordErrorLikelihood__        return this__    };sets,the,likelihood,of,a,term,being,a,misspelled,even,if,the,term,exists,in,the,dictionary,the,default,it,tt,0,95,tt,corresponding,to,5,or,the,real,words,are,misspelled;public,phrase,suggestion,builder,real,word,error,likelihood,float,real,word,error,likelihood,if,real,word,error,likelihood,0,0,throw,new,illegal,argument,exception,must,be,0,0,this,real,word,error,likelihood,real,word,error,likelihood,return,this
PhraseSuggestionBuilder -> public PhraseSuggestionBuilder realWordErrorLikelihood(float realWordErrorLikelihood);1525334055;Sets the likelihood of a term being a misspelled even if the term exists_in the dictionary. The default it {@code 0.95} corresponding to 5% or_the real words are misspelled.;public PhraseSuggestionBuilder realWordErrorLikelihood(float realWordErrorLikelihood) {_        if (realWordErrorLikelihood <= 0.0) {_            throw new IllegalArgumentException("real_word_error_likelihood must be > 0.0")__        }_        this.realWordErrorLikelihood = realWordErrorLikelihood__        return this__    };sets,the,likelihood,of,a,term,being,a,misspelled,even,if,the,term,exists,in,the,dictionary,the,default,it,code,0,95,corresponding,to,5,or,the,real,words,are,misspelled;public,phrase,suggestion,builder,real,word,error,likelihood,float,real,word,error,likelihood,if,real,word,error,likelihood,0,0,throw,new,illegal,argument,exception,must,be,0,0,this,real,word,error,likelihood,real,word,error,likelihood,return,this
PhraseSuggestionBuilder -> public PhraseSuggestionBuilder realWordErrorLikelihood(float realWordErrorLikelihood);1533738061;Sets the likelihood of a term being a misspelled even if the term exists_in the dictionary. The default it {@code 0.95} corresponding to 5% or_the real words are misspelled.;public PhraseSuggestionBuilder realWordErrorLikelihood(float realWordErrorLikelihood) {_        if (realWordErrorLikelihood <= 0.0) {_            throw new IllegalArgumentException("real_word_error_likelihood must be > 0.0")__        }_        this.realWordErrorLikelihood = realWordErrorLikelihood__        return this__    };sets,the,likelihood,of,a,term,being,a,misspelled,even,if,the,term,exists,in,the,dictionary,the,default,it,code,0,95,corresponding,to,5,or,the,real,words,are,misspelled;public,phrase,suggestion,builder,real,word,error,likelihood,float,real,word,error,likelihood,if,real,word,error,likelihood,0,0,throw,new,illegal,argument,exception,must,be,0,0,this,real,word,error,likelihood,real,word,error,likelihood,return,this
PhraseSuggestionBuilder -> public PhraseSuggestionBuilder collateQuery(String collateQuery);1524684173;Sets a query used for filtering out suggested phrases (collation).;public PhraseSuggestionBuilder collateQuery(String collateQuery) {_        this.collateQuery = new Script(ScriptType.INLINE, "mustache", collateQuery, Collections.emptyMap())__        return this__    };sets,a,query,used,for,filtering,out,suggested,phrases,collation;public,phrase,suggestion,builder,collate,query,string,collate,query,this,collate,query,new,script,script,type,inline,mustache,collate,query,collections,empty,map,return,this
PhraseSuggestionBuilder -> public PhraseSuggestionBuilder collateQuery(String collateQuery);1525334055;Sets a query used for filtering out suggested phrases (collation).;public PhraseSuggestionBuilder collateQuery(String collateQuery) {_        this.collateQuery = new Script(ScriptType.INLINE, "mustache", collateQuery, Collections.emptyMap())__        return this__    };sets,a,query,used,for,filtering,out,suggested,phrases,collation;public,phrase,suggestion,builder,collate,query,string,collate,query,this,collate,query,new,script,script,type,inline,mustache,collate,query,collections,empty,map,return,this
PhraseSuggestionBuilder -> public PhraseSuggestionBuilder collateQuery(String collateQuery);1533738061;Sets a query used for filtering out suggested phrases (collation).;public PhraseSuggestionBuilder collateQuery(String collateQuery) {_        this.collateQuery = new Script(ScriptType.INLINE, "mustache", collateQuery, Collections.emptyMap())__        return this__    };sets,a,query,used,for,filtering,out,suggested,phrases,collation;public,phrase,suggestion,builder,collate,query,string,collate,query,this,collate,query,new,script,script,type,inline,mustache,collate,query,collections,empty,map,return,this
PhraseSuggestionBuilder -> public Boolean forceUnigrams();1524684173;get the setting for {@link #forceUnigrams()};public Boolean forceUnigrams() {_        return this.forceUnigrams__    };get,the,setting,for,link,force,unigrams;public,boolean,force,unigrams,return,this,force,unigrams
PhraseSuggestionBuilder -> public Boolean forceUnigrams();1525334055;get the setting for {@link #forceUnigrams()};public Boolean forceUnigrams() {_        return this.forceUnigrams__    };get,the,setting,for,link,force,unigrams;public,boolean,force,unigrams,return,this,force,unigrams
PhraseSuggestionBuilder -> public Boolean forceUnigrams();1533738061;get the setting for {@link #forceUnigrams()};public Boolean forceUnigrams() {_        return this.forceUnigrams__    };get,the,setting,for,link,force,unigrams;public,boolean,force,unigrams,return,this,force,unigrams
PhraseSuggestionBuilder -> public PhraseSuggestionBuilder addCandidateGenerator(CandidateGenerator generator);1524684173;Adds a {@link CandidateGenerator} to this suggester. The_{@link CandidateGenerator} is used to draw candidates for each individual_phrase term before the candidates are scored.;public PhraseSuggestionBuilder addCandidateGenerator(CandidateGenerator generator) {_        List<CandidateGenerator> list = this.generators.get(generator.getType())__        if (list == null) {_            list = new ArrayList<>()__            this.generators.put(generator.getType(), list)__        }_        list.add(generator)__        return this__    };adds,a,link,candidate,generator,to,this,suggester,the,link,candidate,generator,is,used,to,draw,candidates,for,each,individual,phrase,term,before,the,candidates,are,scored;public,phrase,suggestion,builder,add,candidate,generator,candidate,generator,generator,list,candidate,generator,list,this,generators,get,generator,get,type,if,list,null,list,new,array,list,this,generators,put,generator,get,type,list,list,add,generator,return,this
PhraseSuggestionBuilder -> public PhraseSuggestionBuilder addCandidateGenerator(CandidateGenerator generator);1525334055;Adds a {@link CandidateGenerator} to this suggester. The_{@link CandidateGenerator} is used to draw candidates for each individual_phrase term before the candidates are scored.;public PhraseSuggestionBuilder addCandidateGenerator(CandidateGenerator generator) {_        List<CandidateGenerator> list = this.generators.get(generator.getType())__        if (list == null) {_            list = new ArrayList<>()__            this.generators.put(generator.getType(), list)__        }_        list.add(generator)__        return this__    };adds,a,link,candidate,generator,to,this,suggester,the,link,candidate,generator,is,used,to,draw,candidates,for,each,individual,phrase,term,before,the,candidates,are,scored;public,phrase,suggestion,builder,add,candidate,generator,candidate,generator,generator,list,candidate,generator,list,this,generators,get,generator,get,type,if,list,null,list,new,array,list,this,generators,put,generator,get,type,list,list,add,generator,return,this
PhraseSuggestionBuilder -> public PhraseSuggestionBuilder addCandidateGenerator(CandidateGenerator generator);1533738061;Adds a {@link CandidateGenerator} to this suggester. The_{@link CandidateGenerator} is used to draw candidates for each individual_phrase term before the candidates are scored.;public PhraseSuggestionBuilder addCandidateGenerator(CandidateGenerator generator) {_        List<CandidateGenerator> list = this.generators.get(generator.getType())__        if (list == null) {_            list = new ArrayList<>()__            this.generators.put(generator.getType(), list)__        }_        list.add(generator)__        return this__    };adds,a,link,candidate,generator,to,this,suggester,the,link,candidate,generator,is,used,to,draw,candidates,for,each,individual,phrase,term,before,the,candidates,are,scored;public,phrase,suggestion,builder,add,candidate,generator,candidate,generator,generator,list,candidate,generator,list,this,generators,get,generator,get,type,if,list,null,list,new,array,list,this,generators,put,generator,get,type,list,list,add,generator,return,this
PhraseSuggestionBuilder -> public PhraseSuggestionBuilder maxErrors(float maxErrors);1524684173;Sets the maximum percentage of the terms that at most considered to be_misspellings in order to form a correction. This method accepts a float_value in the range [0..1) as a fraction of the actual query terms a_number <tt>&gt_=1</tt> as an absolute number of query terms.__The default is set to <tt>1.0</tt> which corresponds to that only_corrections with at most 1 misspelled term are returned.;public PhraseSuggestionBuilder maxErrors(float maxErrors) {_        if (maxErrors <= 0.0) {_            throw new IllegalArgumentException("max_error must be > 0.0")__        }_        this.maxErrors = maxErrors__        return this__    };sets,the,maximum,percentage,of,the,terms,that,at,most,considered,to,be,misspellings,in,order,to,form,a,correction,this,method,accepts,a,float,value,in,the,range,0,1,as,a,fraction,of,the,actual,query,terms,a,number,tt,gt,1,tt,as,an,absolute,number,of,query,terms,the,default,is,set,to,tt,1,0,tt,which,corresponds,to,that,only,corrections,with,at,most,1,misspelled,term,are,returned;public,phrase,suggestion,builder,max,errors,float,max,errors,if,max,errors,0,0,throw,new,illegal,argument,exception,must,be,0,0,this,max,errors,max,errors,return,this
PhraseSuggestionBuilder -> public PhraseSuggestionBuilder maxErrors(float maxErrors);1525334055;Sets the maximum percentage of the terms that at most considered to be_misspellings in order to form a correction. This method accepts a float_value in the range [0..1) as a fraction of the actual query terms a_number {@code &gt_=1} as an absolute number of query terms.__The default is set to {@code 1.0} which corresponds to that only_corrections with at most 1 misspelled term are returned.;public PhraseSuggestionBuilder maxErrors(float maxErrors) {_        if (maxErrors <= 0.0) {_            throw new IllegalArgumentException("max_error must be > 0.0")__        }_        this.maxErrors = maxErrors__        return this__    };sets,the,maximum,percentage,of,the,terms,that,at,most,considered,to,be,misspellings,in,order,to,form,a,correction,this,method,accepts,a,float,value,in,the,range,0,1,as,a,fraction,of,the,actual,query,terms,a,number,code,gt,1,as,an,absolute,number,of,query,terms,the,default,is,set,to,code,1,0,which,corresponds,to,that,only,corrections,with,at,most,1,misspelled,term,are,returned;public,phrase,suggestion,builder,max,errors,float,max,errors,if,max,errors,0,0,throw,new,illegal,argument,exception,must,be,0,0,this,max,errors,max,errors,return,this
PhraseSuggestionBuilder -> public PhraseSuggestionBuilder maxErrors(float maxErrors);1533738061;Sets the maximum percentage of the terms that at most considered to be_misspellings in order to form a correction. This method accepts a float_value in the range [0..1) as a fraction of the actual query terms a_number {@code &gt_=1} as an absolute number of query terms.__The default is set to {@code 1.0} which corresponds to that only_corrections with at most 1 misspelled term are returned.;public PhraseSuggestionBuilder maxErrors(float maxErrors) {_        if (maxErrors <= 0.0) {_            throw new IllegalArgumentException("max_error must be > 0.0")__        }_        this.maxErrors = maxErrors__        return this__    };sets,the,maximum,percentage,of,the,terms,that,at,most,considered,to,be,misspellings,in,order,to,form,a,correction,this,method,accepts,a,float,value,in,the,range,0,1,as,a,fraction,of,the,actual,query,terms,a,number,code,gt,1,as,an,absolute,number,of,query,terms,the,default,is,set,to,code,1,0,which,corresponds,to,that,only,corrections,with,at,most,1,misspelled,term,are,returned;public,phrase,suggestion,builder,max,errors,float,max,errors,if,max,errors,0,0,throw,new,illegal,argument,exception,must,be,0,0,this,max,errors,max,errors,return,this
PhraseSuggestionBuilder -> public PhraseSuggestionBuilder separator(String separator);1524684173;Sets the separator that is used to separate terms in the bigram field. If_not set the whitespace character is used as a separator.;public PhraseSuggestionBuilder separator(String separator) {_        Objects.requireNonNull(separator, "separator cannot be set to null")__        this.separator = separator__        return this__    };sets,the,separator,that,is,used,to,separate,terms,in,the,bigram,field,if,not,set,the,whitespace,character,is,used,as,a,separator;public,phrase,suggestion,builder,separator,string,separator,objects,require,non,null,separator,separator,cannot,be,set,to,null,this,separator,separator,return,this
PhraseSuggestionBuilder -> public PhraseSuggestionBuilder separator(String separator);1525334055;Sets the separator that is used to separate terms in the bigram field. If_not set the whitespace character is used as a separator.;public PhraseSuggestionBuilder separator(String separator) {_        Objects.requireNonNull(separator, "separator cannot be set to null")__        this.separator = separator__        return this__    };sets,the,separator,that,is,used,to,separate,terms,in,the,bigram,field,if,not,set,the,whitespace,character,is,used,as,a,separator;public,phrase,suggestion,builder,separator,string,separator,objects,require,non,null,separator,separator,cannot,be,set,to,null,this,separator,separator,return,this
PhraseSuggestionBuilder -> public PhraseSuggestionBuilder separator(String separator);1533738061;Sets the separator that is used to separate terms in the bigram field. If_not set the whitespace character is used as a separator.;public PhraseSuggestionBuilder separator(String separator) {_        Objects.requireNonNull(separator, "separator cannot be set to null")__        this.separator = separator__        return this__    };sets,the,separator,that,is,used,to,separate,terms,in,the,bigram,field,if,not,set,the,whitespace,character,is,used,as,a,separator;public,phrase,suggestion,builder,separator,string,separator,objects,require,non,null,separator,separator,cannot,be,set,to,null,this,separator,separator,return,this
PhraseSuggestionBuilder -> public PhraseSuggestionBuilder clearCandidateGenerators();1524684173;Clear the candidate generators.;public PhraseSuggestionBuilder clearCandidateGenerators() {_        this.generators.clear()__        return this__    };clear,the,candidate,generators;public,phrase,suggestion,builder,clear,candidate,generators,this,generators,clear,return,this
PhraseSuggestionBuilder -> public PhraseSuggestionBuilder clearCandidateGenerators();1525334055;Clear the candidate generators.;public PhraseSuggestionBuilder clearCandidateGenerators() {_        this.generators.clear()__        return this__    };clear,the,candidate,generators;public,phrase,suggestion,builder,clear,candidate,generators,this,generators,clear,return,this
PhraseSuggestionBuilder -> public PhraseSuggestionBuilder clearCandidateGenerators();1533738061;Clear the candidate generators.;public PhraseSuggestionBuilder clearCandidateGenerators() {_        this.generators.clear()__        return this__    };clear,the,candidate,generators;public,phrase,suggestion,builder,clear,candidate,generators,this,generators,clear,return,this
PhraseSuggestionBuilder -> public Integer gramSize();1524684173;get the {@link #gramSize(int)} parameter;public Integer gramSize() {_        return this.gramSize__    };get,the,link,gram,size,int,parameter;public,integer,gram,size,return,this,gram,size
PhraseSuggestionBuilder -> public Integer gramSize();1525334055;get the {@link #gramSize(int)} parameter;public Integer gramSize() {_        return this.gramSize__    };get,the,link,gram,size,int,parameter;public,integer,gram,size,return,this,gram,size
PhraseSuggestionBuilder -> public Integer gramSize();1533738061;get the {@link #gramSize(int)} parameter;public Integer gramSize() {_        return this.gramSize__    };get,the,link,gram,size,int,parameter;public,integer,gram,size,return,this,gram,size
PhraseSuggestionBuilder -> public PhraseSuggestionBuilder collateParams(Map<String, Object> collateParams);1524684173;Adds additional parameters for collate scripts. Previously added parameters on the_same builder will be overwritten.;public PhraseSuggestionBuilder collateParams(Map<String, Object> collateParams) {_        Objects.requireNonNull(collateParams, "collate parameters cannot be null.")__        this.collateParams = new HashMap<>(collateParams)__        return this__    };adds,additional,parameters,for,collate,scripts,previously,added,parameters,on,the,same,builder,will,be,overwritten;public,phrase,suggestion,builder,collate,params,map,string,object,collate,params,objects,require,non,null,collate,params,collate,parameters,cannot,be,null,this,collate,params,new,hash,map,collate,params,return,this
PhraseSuggestionBuilder -> public PhraseSuggestionBuilder collateParams(Map<String, Object> collateParams);1525334055;Adds additional parameters for collate scripts. Previously added parameters on the_same builder will be overwritten.;public PhraseSuggestionBuilder collateParams(Map<String, Object> collateParams) {_        Objects.requireNonNull(collateParams, "collate parameters cannot be null.")__        this.collateParams = new HashMap<>(collateParams)__        return this__    };adds,additional,parameters,for,collate,scripts,previously,added,parameters,on,the,same,builder,will,be,overwritten;public,phrase,suggestion,builder,collate,params,map,string,object,collate,params,objects,require,non,null,collate,params,collate,parameters,cannot,be,null,this,collate,params,new,hash,map,collate,params,return,this
PhraseSuggestionBuilder -> public PhraseSuggestionBuilder collateParams(Map<String, Object> collateParams);1533738061;Adds additional parameters for collate scripts. Previously added parameters on the_same builder will be overwritten.;public PhraseSuggestionBuilder collateParams(Map<String, Object> collateParams) {_        Objects.requireNonNull(collateParams, "collate parameters cannot be null.")__        this.collateParams = new HashMap<>(collateParams)__        return this__    };adds,additional,parameters,for,collate,scripts,previously,added,parameters,on,the,same,builder,will,be,overwritten;public,phrase,suggestion,builder,collate,params,map,string,object,collate,params,objects,require,non,null,collate,params,collate,parameters,cannot,be,null,this,collate,params,new,hash,map,collate,params,return,this
PhraseSuggestionBuilder -> public Float realWordErrorLikelihood();1524684173;get the {@link #realWordErrorLikelihood(float)} parameter;public Float realWordErrorLikelihood() {_        return this.realWordErrorLikelihood__    };get,the,link,real,word,error,likelihood,float,parameter;public,float,real,word,error,likelihood,return,this,real,word,error,likelihood
PhraseSuggestionBuilder -> public Float realWordErrorLikelihood();1525334055;get the {@link #realWordErrorLikelihood(float)} parameter;public Float realWordErrorLikelihood() {_        return this.realWordErrorLikelihood__    };get,the,link,real,word,error,likelihood,float,parameter;public,float,real,word,error,likelihood,return,this,real,word,error,likelihood
PhraseSuggestionBuilder -> public Float realWordErrorLikelihood();1533738061;get the {@link #realWordErrorLikelihood(float)} parameter;public Float realWordErrorLikelihood() {_        return this.realWordErrorLikelihood__    };get,the,link,real,word,error,likelihood,float,parameter;public,float,real,word,error,likelihood,return,this,real,word,error,likelihood
