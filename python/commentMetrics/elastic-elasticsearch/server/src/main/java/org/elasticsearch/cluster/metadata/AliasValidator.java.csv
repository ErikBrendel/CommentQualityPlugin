# id;timestamp;commentText;codeText;commentWords;codeWords
AliasValidator -> public void validateAlias(Alias alias, String index, MetaData metaData);1524684173;Allows to validate an {@link org.elasticsearch.action.admin.indices.alias.Alias} and make sure_it's valid before it gets added to the index metadata. Doesn't validate the alias filter._@throws IllegalArgumentException if the alias is not valid;public void validateAlias(Alias alias, String index, MetaData metaData) {_        validateAlias(alias.name(), index, alias.indexRouting(), name -> metaData.index(name))__    };allows,to,validate,an,link,org,elasticsearch,action,admin,indices,alias,alias,and,make,sure,it,s,valid,before,it,gets,added,to,the,index,metadata,doesn,t,validate,the,alias,filter,throws,illegal,argument,exception,if,the,alias,is,not,valid;public,void,validate,alias,alias,alias,string,index,meta,data,meta,data,validate,alias,alias,name,index,alias,index,routing,name,meta,data,index,name
AliasValidator -> public void validateAlias(Alias alias, String index, MetaData metaData);1529082965;Allows to validate an {@link org.elasticsearch.action.admin.indices.alias.Alias} and make sure_it's valid before it gets added to the index metadata. Doesn't validate the alias filter._@throws IllegalArgumentException if the alias is not valid;public void validateAlias(Alias alias, String index, MetaData metaData) {_        validateAlias(alias.name(), index, alias.indexRouting(), metaData::index)__    };allows,to,validate,an,link,org,elasticsearch,action,admin,indices,alias,alias,and,make,sure,it,s,valid,before,it,gets,added,to,the,index,metadata,doesn,t,validate,the,alias,filter,throws,illegal,argument,exception,if,the,alias,is,not,valid;public,void,validate,alias,alias,alias,string,index,meta,data,meta,data,validate,alias,alias,name,index,alias,index,routing,meta,data,index
AliasValidator -> public void validateAlias(Alias alias, String index, MetaData metaData);1536137328;Allows to validate an {@link org.elasticsearch.action.admin.indices.alias.Alias} and make sure_it's valid before it gets added to the index metadata. Doesn't validate the alias filter._@throws IllegalArgumentException if the alias is not valid;public void validateAlias(Alias alias, String index, MetaData metaData) {_        validateAlias(alias.name(), index, alias.indexRouting(), metaData::index)__    };allows,to,validate,an,link,org,elasticsearch,action,admin,indices,alias,alias,and,make,sure,it,s,valid,before,it,gets,added,to,the,index,metadata,doesn,t,validate,the,alias,filter,throws,illegal,argument,exception,if,the,alias,is,not,valid;public,void,validate,alias,alias,alias,string,index,meta,data,meta,data,validate,alias,alias,name,index,alias,index,routing,meta,data,index
AliasValidator -> public void validateAlias(Alias alias, String index, MetaData metaData);1541092382;Allows to validate an {@link org.elasticsearch.action.admin.indices.alias.Alias} and make sure_it's valid before it gets added to the index metadata. Doesn't validate the alias filter._@throws IllegalArgumentException if the alias is not valid;public void validateAlias(Alias alias, String index, MetaData metaData) {_        validateAlias(alias.name(), index, alias.indexRouting(), metaData::index)__    };allows,to,validate,an,link,org,elasticsearch,action,admin,indices,alias,alias,and,make,sure,it,s,valid,before,it,gets,added,to,the,index,metadata,doesn,t,validate,the,alias,filter,throws,illegal,argument,exception,if,the,alias,is,not,valid;public,void,validate,alias,alias,alias,string,index,meta,data,meta,data,validate,alias,alias,name,index,alias,index,routing,meta,data,index
AliasValidator -> public void validateAlias(Alias alias, String index, MetaData metaData);1543834151;Allows to validate an {@link org.elasticsearch.action.admin.indices.alias.Alias} and make sure_it's valid before it gets added to the index metadata. Doesn't validate the alias filter._@throws IllegalArgumentException if the alias is not valid;public void validateAlias(Alias alias, String index, MetaData metaData) {_        validateAlias(alias.name(), index, alias.indexRouting(), metaData::index)__    };allows,to,validate,an,link,org,elasticsearch,action,admin,indices,alias,alias,and,make,sure,it,s,valid,before,it,gets,added,to,the,index,metadata,doesn,t,validate,the,alias,filter,throws,illegal,argument,exception,if,the,alias,is,not,valid;public,void,validate,alias,alias,alias,string,index,meta,data,meta,data,validate,alias,alias,name,index,alias,index,routing,meta,data,index
AliasValidator -> public void validateAlias(String alias, String index, @Nullable String indexRouting, Function<String, IndexMetaData> indexLookup);1524684173;Validate a proposed alias.;public void validateAlias(String alias, String index, @Nullable String indexRouting, Function<String, IndexMetaData> indexLookup) {_        validateAliasStandalone(alias, indexRouting)___        if (!Strings.hasText(index)) {_            throw new IllegalArgumentException("index name is required")__        }__        IndexMetaData indexNamedSameAsAlias = indexLookup.apply(alias)__        if (indexNamedSameAsAlias != null) {_            throw new InvalidAliasNameException(indexNamedSameAsAlias.getIndex(), alias, "an index exists with the same name as the alias")__        }_    };validate,a,proposed,alias;public,void,validate,alias,string,alias,string,index,nullable,string,index,routing,function,string,index,meta,data,index,lookup,validate,alias,standalone,alias,index,routing,if,strings,has,text,index,throw,new,illegal,argument,exception,index,name,is,required,index,meta,data,index,named,same,as,alias,index,lookup,apply,alias,if,index,named,same,as,alias,null,throw,new,invalid,alias,name,exception,index,named,same,as,alias,get,index,alias,an,index,exists,with,the,same,name,as,the,alias
AliasValidator -> public void validateAlias(String alias, String index, @Nullable String indexRouting, Function<String, IndexMetaData> indexLookup);1529082965;Validate a proposed alias.;public void validateAlias(String alias, String index, @Nullable String indexRouting, Function<String, IndexMetaData> indexLookup) {_        validateAliasStandalone(alias, indexRouting)___        if (!Strings.hasText(index)) {_            throw new IllegalArgumentException("index name is required")__        }__        IndexMetaData indexNamedSameAsAlias = indexLookup.apply(alias)__        if (indexNamedSameAsAlias != null) {_            throw new InvalidAliasNameException(indexNamedSameAsAlias.getIndex(), alias, "an index exists with the same name as the alias")__        }_    };validate,a,proposed,alias;public,void,validate,alias,string,alias,string,index,nullable,string,index,routing,function,string,index,meta,data,index,lookup,validate,alias,standalone,alias,index,routing,if,strings,has,text,index,throw,new,illegal,argument,exception,index,name,is,required,index,meta,data,index,named,same,as,alias,index,lookup,apply,alias,if,index,named,same,as,alias,null,throw,new,invalid,alias,name,exception,index,named,same,as,alias,get,index,alias,an,index,exists,with,the,same,name,as,the,alias
AliasValidator -> public void validateAlias(String alias, String index, @Nullable String indexRouting, Function<String, IndexMetaData> indexLookup);1536137328;Validate a proposed alias.;public void validateAlias(String alias, String index, @Nullable String indexRouting, Function<String, IndexMetaData> indexLookup) {_        validateAliasStandalone(alias, indexRouting)___        if (!Strings.hasText(index)) {_            throw new IllegalArgumentException("index name is required")__        }__        IndexMetaData indexNamedSameAsAlias = indexLookup.apply(alias)__        if (indexNamedSameAsAlias != null) {_            throw new InvalidAliasNameException(indexNamedSameAsAlias.getIndex(), alias, "an index exists with the same name as the alias")__        }_    };validate,a,proposed,alias;public,void,validate,alias,string,alias,string,index,nullable,string,index,routing,function,string,index,meta,data,index,lookup,validate,alias,standalone,alias,index,routing,if,strings,has,text,index,throw,new,illegal,argument,exception,index,name,is,required,index,meta,data,index,named,same,as,alias,index,lookup,apply,alias,if,index,named,same,as,alias,null,throw,new,invalid,alias,name,exception,index,named,same,as,alias,get,index,alias,an,index,exists,with,the,same,name,as,the,alias
AliasValidator -> public void validateAlias(String alias, String index, @Nullable String indexRouting, Function<String, IndexMetaData> indexLookup);1541092382;Validate a proposed alias.;public void validateAlias(String alias, String index, @Nullable String indexRouting, Function<String, IndexMetaData> indexLookup) {_        validateAliasStandalone(alias, indexRouting)___        if (!Strings.hasText(index)) {_            throw new IllegalArgumentException("index name is required")__        }__        IndexMetaData indexNamedSameAsAlias = indexLookup.apply(alias)__        if (indexNamedSameAsAlias != null) {_            throw new InvalidAliasNameException(indexNamedSameAsAlias.getIndex(), alias, "an index exists with the same name as the alias")__        }_    };validate,a,proposed,alias;public,void,validate,alias,string,alias,string,index,nullable,string,index,routing,function,string,index,meta,data,index,lookup,validate,alias,standalone,alias,index,routing,if,strings,has,text,index,throw,new,illegal,argument,exception,index,name,is,required,index,meta,data,index,named,same,as,alias,index,lookup,apply,alias,if,index,named,same,as,alias,null,throw,new,invalid,alias,name,exception,index,named,same,as,alias,get,index,alias,an,index,exists,with,the,same,name,as,the,alias
AliasValidator -> public void validateAlias(String alias, String index, @Nullable String indexRouting, Function<String, IndexMetaData> indexLookup);1543834151;Validate a proposed alias.;public void validateAlias(String alias, String index, @Nullable String indexRouting, Function<String, IndexMetaData> indexLookup) {_        validateAliasStandalone(alias, indexRouting)___        if (!Strings.hasText(index)) {_            throw new IllegalArgumentException("index name is required")__        }__        IndexMetaData indexNamedSameAsAlias = indexLookup.apply(alias)__        if (indexNamedSameAsAlias != null) {_            throw new InvalidAliasNameException(indexNamedSameAsAlias.getIndex(), alias, "an index exists with the same name as the alias")__        }_    };validate,a,proposed,alias;public,void,validate,alias,string,alias,string,index,nullable,string,index,routing,function,string,index,meta,data,index,lookup,validate,alias,standalone,alias,index,routing,if,strings,has,text,index,throw,new,illegal,argument,exception,index,name,is,required,index,meta,data,index,named,same,as,alias,index,lookup,apply,alias,if,index,named,same,as,alias,null,throw,new,invalid,alias,name,exception,index,named,same,as,alias,get,index,alias,an,index,exists,with,the,same,name,as,the,alias
AliasValidator -> public void validateAliasFilter(String alias, String filter, QueryShardContext queryShardContext,             NamedXContentRegistry xContentRegistry);1524684173;Validates an alias filter by parsing it using the_provided {@link org.elasticsearch.index.query.QueryShardContext}_@throws IllegalArgumentException if the filter is not valid;public void validateAliasFilter(String alias, String filter, QueryShardContext queryShardContext,_            NamedXContentRegistry xContentRegistry) {_        assert queryShardContext != null__        try (XContentParser parser = XContentFactory.xContent(filter)_            .createParser(xContentRegistry, LoggingDeprecationHandler.INSTANCE, filter)) {_            validateAliasFilter(parser, queryShardContext)__        } catch (Exception e) {_            throw new IllegalArgumentException("failed to parse filter for alias [" + alias + "]", e)__        }_    };validates,an,alias,filter,by,parsing,it,using,the,provided,link,org,elasticsearch,index,query,query,shard,context,throws,illegal,argument,exception,if,the,filter,is,not,valid;public,void,validate,alias,filter,string,alias,string,filter,query,shard,context,query,shard,context,named,xcontent,registry,x,content,registry,assert,query,shard,context,null,try,xcontent,parser,parser,xcontent,factory,x,content,filter,create,parser,x,content,registry,logging,deprecation,handler,instance,filter,validate,alias,filter,parser,query,shard,context,catch,exception,e,throw,new,illegal,argument,exception,failed,to,parse,filter,for,alias,alias,e
AliasValidator -> public void validateAliasFilter(String alias, String filter, QueryShardContext queryShardContext,             NamedXContentRegistry xContentRegistry);1529082965;Validates an alias filter by parsing it using the_provided {@link org.elasticsearch.index.query.QueryShardContext}_@throws IllegalArgumentException if the filter is not valid;public void validateAliasFilter(String alias, String filter, QueryShardContext queryShardContext,_            NamedXContentRegistry xContentRegistry) {_        assert queryShardContext != null__        try (XContentParser parser = XContentFactory.xContent(filter)_            .createParser(xContentRegistry, LoggingDeprecationHandler.INSTANCE, filter)) {_            validateAliasFilter(parser, queryShardContext)__        } catch (Exception e) {_            throw new IllegalArgumentException("failed to parse filter for alias [" + alias + "]", e)__        }_    };validates,an,alias,filter,by,parsing,it,using,the,provided,link,org,elasticsearch,index,query,query,shard,context,throws,illegal,argument,exception,if,the,filter,is,not,valid;public,void,validate,alias,filter,string,alias,string,filter,query,shard,context,query,shard,context,named,xcontent,registry,x,content,registry,assert,query,shard,context,null,try,xcontent,parser,parser,xcontent,factory,x,content,filter,create,parser,x,content,registry,logging,deprecation,handler,instance,filter,validate,alias,filter,parser,query,shard,context,catch,exception,e,throw,new,illegal,argument,exception,failed,to,parse,filter,for,alias,alias,e
AliasValidator -> public void validateAliasFilter(String alias, String filter, QueryShardContext queryShardContext,             NamedXContentRegistry xContentRegistry);1536137328;Validates an alias filter by parsing it using the_provided {@link org.elasticsearch.index.query.QueryShardContext}_@throws IllegalArgumentException if the filter is not valid;public void validateAliasFilter(String alias, String filter, QueryShardContext queryShardContext,_            NamedXContentRegistry xContentRegistry) {_        assert queryShardContext != null__        try (XContentParser parser = XContentFactory.xContent(filter)_            .createParser(xContentRegistry, LoggingDeprecationHandler.INSTANCE, filter)) {_            validateAliasFilter(parser, queryShardContext)__        } catch (Exception e) {_            throw new IllegalArgumentException("failed to parse filter for alias [" + alias + "]", e)__        }_    };validates,an,alias,filter,by,parsing,it,using,the,provided,link,org,elasticsearch,index,query,query,shard,context,throws,illegal,argument,exception,if,the,filter,is,not,valid;public,void,validate,alias,filter,string,alias,string,filter,query,shard,context,query,shard,context,named,xcontent,registry,x,content,registry,assert,query,shard,context,null,try,xcontent,parser,parser,xcontent,factory,x,content,filter,create,parser,x,content,registry,logging,deprecation,handler,instance,filter,validate,alias,filter,parser,query,shard,context,catch,exception,e,throw,new,illegal,argument,exception,failed,to,parse,filter,for,alias,alias,e
AliasValidator -> public void validateAliasFilter(String alias, String filter, QueryShardContext queryShardContext,             NamedXContentRegistry xContentRegistry);1541092382;Validates an alias filter by parsing it using the_provided {@link org.elasticsearch.index.query.QueryShardContext}_@throws IllegalArgumentException if the filter is not valid;public void validateAliasFilter(String alias, String filter, QueryShardContext queryShardContext,_            NamedXContentRegistry xContentRegistry) {_        assert queryShardContext != null__        try (XContentParser parser = XContentFactory.xContent(filter)_            .createParser(xContentRegistry, LoggingDeprecationHandler.INSTANCE, filter)) {_            validateAliasFilter(parser, queryShardContext)__        } catch (Exception e) {_            throw new IllegalArgumentException("failed to parse filter for alias [" + alias + "]", e)__        }_    };validates,an,alias,filter,by,parsing,it,using,the,provided,link,org,elasticsearch,index,query,query,shard,context,throws,illegal,argument,exception,if,the,filter,is,not,valid;public,void,validate,alias,filter,string,alias,string,filter,query,shard,context,query,shard,context,named,xcontent,registry,x,content,registry,assert,query,shard,context,null,try,xcontent,parser,parser,xcontent,factory,x,content,filter,create,parser,x,content,registry,logging,deprecation,handler,instance,filter,validate,alias,filter,parser,query,shard,context,catch,exception,e,throw,new,illegal,argument,exception,failed,to,parse,filter,for,alias,alias,e
AliasValidator -> public void validateAliasFilter(String alias, String filter, QueryShardContext queryShardContext,             NamedXContentRegistry xContentRegistry);1543834151;Validates an alias filter by parsing it using the_provided {@link org.elasticsearch.index.query.QueryShardContext}_@throws IllegalArgumentException if the filter is not valid;public void validateAliasFilter(String alias, String filter, QueryShardContext queryShardContext,_            NamedXContentRegistry xContentRegistry) {_        assert queryShardContext != null__        try (XContentParser parser = XContentFactory.xContent(filter)_            .createParser(xContentRegistry, LoggingDeprecationHandler.INSTANCE, filter)) {_            validateAliasFilter(parser, queryShardContext)__        } catch (Exception e) {_            throw new IllegalArgumentException("failed to parse filter for alias [" + alias + "]", e)__        }_    };validates,an,alias,filter,by,parsing,it,using,the,provided,link,org,elasticsearch,index,query,query,shard,context,throws,illegal,argument,exception,if,the,filter,is,not,valid;public,void,validate,alias,filter,string,alias,string,filter,query,shard,context,query,shard,context,named,xcontent,registry,x,content,registry,assert,query,shard,context,null,try,xcontent,parser,parser,xcontent,factory,x,content,filter,create,parser,x,content,registry,logging,deprecation,handler,instance,filter,validate,alias,filter,parser,query,shard,context,catch,exception,e,throw,new,illegal,argument,exception,failed,to,parse,filter,for,alias,alias,e
AliasValidator -> public void validateAliasStandalone(Alias alias);1524684173;Allows to partially validate an alias, without knowing which index it'll get applied to._Useful with index templates containing aliases. Checks also that it is possible to parse_the alias filter via {@link org.elasticsearch.common.xcontent.XContentParser},_without validating it as a filter though._@throws IllegalArgumentException if the alias is not valid;public void validateAliasStandalone(Alias alias) {_        validateAliasStandalone(alias.name(), alias.indexRouting())__        if (Strings.hasLength(alias.filter())) {_            try {_                XContentHelper.convertToMap(XContentFactory.xContent(alias.filter()), alias.filter(), false)__            } catch (Exception e) {_                throw new IllegalArgumentException("failed to parse filter for alias [" + alias.name() + "]", e)__            }_        }_    };allows,to,partially,validate,an,alias,without,knowing,which,index,it,ll,get,applied,to,useful,with,index,templates,containing,aliases,checks,also,that,it,is,possible,to,parse,the,alias,filter,via,link,org,elasticsearch,common,xcontent,xcontent,parser,without,validating,it,as,a,filter,though,throws,illegal,argument,exception,if,the,alias,is,not,valid;public,void,validate,alias,standalone,alias,alias,validate,alias,standalone,alias,name,alias,index,routing,if,strings,has,length,alias,filter,try,xcontent,helper,convert,to,map,xcontent,factory,x,content,alias,filter,alias,filter,false,catch,exception,e,throw,new,illegal,argument,exception,failed,to,parse,filter,for,alias,alias,name,e
AliasValidator -> public void validateAliasStandalone(Alias alias);1529082965;Allows to partially validate an alias, without knowing which index it'll get applied to._Useful with index templates containing aliases. Checks also that it is possible to parse_the alias filter via {@link org.elasticsearch.common.xcontent.XContentParser},_without validating it as a filter though._@throws IllegalArgumentException if the alias is not valid;public void validateAliasStandalone(Alias alias) {_        validateAliasStandalone(alias.name(), alias.indexRouting())__        if (Strings.hasLength(alias.filter())) {_            try {_                XContentHelper.convertToMap(XContentFactory.xContent(alias.filter()), alias.filter(), false)__            } catch (Exception e) {_                throw new IllegalArgumentException("failed to parse filter for alias [" + alias.name() + "]", e)__            }_        }_    };allows,to,partially,validate,an,alias,without,knowing,which,index,it,ll,get,applied,to,useful,with,index,templates,containing,aliases,checks,also,that,it,is,possible,to,parse,the,alias,filter,via,link,org,elasticsearch,common,xcontent,xcontent,parser,without,validating,it,as,a,filter,though,throws,illegal,argument,exception,if,the,alias,is,not,valid;public,void,validate,alias,standalone,alias,alias,validate,alias,standalone,alias,name,alias,index,routing,if,strings,has,length,alias,filter,try,xcontent,helper,convert,to,map,xcontent,factory,x,content,alias,filter,alias,filter,false,catch,exception,e,throw,new,illegal,argument,exception,failed,to,parse,filter,for,alias,alias,name,e
AliasValidator -> public void validateAliasStandalone(Alias alias);1536137328;Allows to partially validate an alias, without knowing which index it'll get applied to._Useful with index templates containing aliases. Checks also that it is possible to parse_the alias filter via {@link org.elasticsearch.common.xcontent.XContentParser},_without validating it as a filter though._@throws IllegalArgumentException if the alias is not valid;public void validateAliasStandalone(Alias alias) {_        validateAliasStandalone(alias.name(), alias.indexRouting())__        if (Strings.hasLength(alias.filter())) {_            try {_                XContentHelper.convertToMap(XContentFactory.xContent(alias.filter()), alias.filter(), false)__            } catch (Exception e) {_                throw new IllegalArgumentException("failed to parse filter for alias [" + alias.name() + "]", e)__            }_        }_    };allows,to,partially,validate,an,alias,without,knowing,which,index,it,ll,get,applied,to,useful,with,index,templates,containing,aliases,checks,also,that,it,is,possible,to,parse,the,alias,filter,via,link,org,elasticsearch,common,xcontent,xcontent,parser,without,validating,it,as,a,filter,though,throws,illegal,argument,exception,if,the,alias,is,not,valid;public,void,validate,alias,standalone,alias,alias,validate,alias,standalone,alias,name,alias,index,routing,if,strings,has,length,alias,filter,try,xcontent,helper,convert,to,map,xcontent,factory,x,content,alias,filter,alias,filter,false,catch,exception,e,throw,new,illegal,argument,exception,failed,to,parse,filter,for,alias,alias,name,e
AliasValidator -> public void validateAliasStandalone(Alias alias);1541092382;Allows to partially validate an alias, without knowing which index it'll get applied to._Useful with index templates containing aliases. Checks also that it is possible to parse_the alias filter via {@link org.elasticsearch.common.xcontent.XContentParser},_without validating it as a filter though._@throws IllegalArgumentException if the alias is not valid;public void validateAliasStandalone(Alias alias) {_        validateAliasStandalone(alias.name(), alias.indexRouting())__        if (Strings.hasLength(alias.filter())) {_            try {_                XContentHelper.convertToMap(XContentFactory.xContent(alias.filter()), alias.filter(), false)__            } catch (Exception e) {_                throw new IllegalArgumentException("failed to parse filter for alias [" + alias.name() + "]", e)__            }_        }_    };allows,to,partially,validate,an,alias,without,knowing,which,index,it,ll,get,applied,to,useful,with,index,templates,containing,aliases,checks,also,that,it,is,possible,to,parse,the,alias,filter,via,link,org,elasticsearch,common,xcontent,xcontent,parser,without,validating,it,as,a,filter,though,throws,illegal,argument,exception,if,the,alias,is,not,valid;public,void,validate,alias,standalone,alias,alias,validate,alias,standalone,alias,name,alias,index,routing,if,strings,has,length,alias,filter,try,xcontent,helper,convert,to,map,xcontent,factory,x,content,alias,filter,alias,filter,false,catch,exception,e,throw,new,illegal,argument,exception,failed,to,parse,filter,for,alias,alias,name,e
AliasValidator -> public void validateAliasStandalone(Alias alias);1543834151;Allows to partially validate an alias, without knowing which index it'll get applied to._Useful with index templates containing aliases. Checks also that it is possible to parse_the alias filter via {@link org.elasticsearch.common.xcontent.XContentParser},_without validating it as a filter though._@throws IllegalArgumentException if the alias is not valid;public void validateAliasStandalone(Alias alias) {_        validateAliasStandalone(alias.name(), alias.indexRouting())__        if (Strings.hasLength(alias.filter())) {_            try {_                XContentHelper.convertToMap(XContentFactory.xContent(alias.filter()), alias.filter(), false)__            } catch (Exception e) {_                throw new IllegalArgumentException("failed to parse filter for alias [" + alias.name() + "]", e)__            }_        }_    };allows,to,partially,validate,an,alias,without,knowing,which,index,it,ll,get,applied,to,useful,with,index,templates,containing,aliases,checks,also,that,it,is,possible,to,parse,the,alias,filter,via,link,org,elasticsearch,common,xcontent,xcontent,parser,without,validating,it,as,a,filter,though,throws,illegal,argument,exception,if,the,alias,is,not,valid;public,void,validate,alias,standalone,alias,alias,validate,alias,standalone,alias,name,alias,index,routing,if,strings,has,length,alias,filter,try,xcontent,helper,convert,to,map,xcontent,factory,x,content,alias,filter,alias,filter,false,catch,exception,e,throw,new,illegal,argument,exception,failed,to,parse,filter,for,alias,alias,name,e
AliasValidator -> public void validateAliasMetaData(AliasMetaData aliasMetaData, String index, MetaData metaData);1524684173;Allows to validate an {@link org.elasticsearch.cluster.metadata.AliasMetaData} and make sure_it's valid before it gets added to the index metadata. Doesn't validate the alias filter._@throws IllegalArgumentException if the alias is not valid;public void validateAliasMetaData(AliasMetaData aliasMetaData, String index, MetaData metaData) {_        validateAlias(aliasMetaData.alias(), index, aliasMetaData.indexRouting(), name -> metaData.index(name))__    };allows,to,validate,an,link,org,elasticsearch,cluster,metadata,alias,meta,data,and,make,sure,it,s,valid,before,it,gets,added,to,the,index,metadata,doesn,t,validate,the,alias,filter,throws,illegal,argument,exception,if,the,alias,is,not,valid;public,void,validate,alias,meta,data,alias,meta,data,alias,meta,data,string,index,meta,data,meta,data,validate,alias,alias,meta,data,alias,index,alias,meta,data,index,routing,name,meta,data,index,name
AliasValidator -> public void validateAliasMetaData(AliasMetaData aliasMetaData, String index, MetaData metaData);1529082965;Allows to validate an {@link org.elasticsearch.cluster.metadata.AliasMetaData} and make sure_it's valid before it gets added to the index metadata. Doesn't validate the alias filter._@throws IllegalArgumentException if the alias is not valid;public void validateAliasMetaData(AliasMetaData aliasMetaData, String index, MetaData metaData) {_        validateAlias(aliasMetaData.alias(), index, aliasMetaData.indexRouting(), metaData::index)__    };allows,to,validate,an,link,org,elasticsearch,cluster,metadata,alias,meta,data,and,make,sure,it,s,valid,before,it,gets,added,to,the,index,metadata,doesn,t,validate,the,alias,filter,throws,illegal,argument,exception,if,the,alias,is,not,valid;public,void,validate,alias,meta,data,alias,meta,data,alias,meta,data,string,index,meta,data,meta,data,validate,alias,alias,meta,data,alias,index,alias,meta,data,index,routing,meta,data,index
AliasValidator -> public void validateAliasMetaData(AliasMetaData aliasMetaData, String index, MetaData metaData);1536137328;Allows to validate an {@link org.elasticsearch.cluster.metadata.AliasMetaData} and make sure_it's valid before it gets added to the index metadata. Doesn't validate the alias filter._@throws IllegalArgumentException if the alias is not valid;public void validateAliasMetaData(AliasMetaData aliasMetaData, String index, MetaData metaData) {_        validateAlias(aliasMetaData.alias(), index, aliasMetaData.indexRouting(), metaData::index)__    };allows,to,validate,an,link,org,elasticsearch,cluster,metadata,alias,meta,data,and,make,sure,it,s,valid,before,it,gets,added,to,the,index,metadata,doesn,t,validate,the,alias,filter,throws,illegal,argument,exception,if,the,alias,is,not,valid;public,void,validate,alias,meta,data,alias,meta,data,alias,meta,data,string,index,meta,data,meta,data,validate,alias,alias,meta,data,alias,index,alias,meta,data,index,routing,meta,data,index
AliasValidator -> public void validateAliasMetaData(AliasMetaData aliasMetaData, String index, MetaData metaData);1541092382;Allows to validate an {@link org.elasticsearch.cluster.metadata.AliasMetaData} and make sure_it's valid before it gets added to the index metadata. Doesn't validate the alias filter._@throws IllegalArgumentException if the alias is not valid;public void validateAliasMetaData(AliasMetaData aliasMetaData, String index, MetaData metaData) {_        validateAlias(aliasMetaData.alias(), index, aliasMetaData.indexRouting(), metaData::index)__    };allows,to,validate,an,link,org,elasticsearch,cluster,metadata,alias,meta,data,and,make,sure,it,s,valid,before,it,gets,added,to,the,index,metadata,doesn,t,validate,the,alias,filter,throws,illegal,argument,exception,if,the,alias,is,not,valid;public,void,validate,alias,meta,data,alias,meta,data,alias,meta,data,string,index,meta,data,meta,data,validate,alias,alias,meta,data,alias,index,alias,meta,data,index,routing,meta,data,index
AliasValidator -> public void validateAliasMetaData(AliasMetaData aliasMetaData, String index, MetaData metaData);1543834151;Allows to validate an {@link org.elasticsearch.cluster.metadata.AliasMetaData} and make sure_it's valid before it gets added to the index metadata. Doesn't validate the alias filter._@throws IllegalArgumentException if the alias is not valid;public void validateAliasMetaData(AliasMetaData aliasMetaData, String index, MetaData metaData) {_        validateAlias(aliasMetaData.alias(), index, aliasMetaData.indexRouting(), metaData::index)__    };allows,to,validate,an,link,org,elasticsearch,cluster,metadata,alias,meta,data,and,make,sure,it,s,valid,before,it,gets,added,to,the,index,metadata,doesn,t,validate,the,alias,filter,throws,illegal,argument,exception,if,the,alias,is,not,valid;public,void,validate,alias,meta,data,alias,meta,data,alias,meta,data,string,index,meta,data,meta,data,validate,alias,alias,meta,data,alias,index,alias,meta,data,index,routing,meta,data,index
AliasValidator -> public void validateAliasFilter(String alias, byte[] filter, QueryShardContext queryShardContext,             NamedXContentRegistry xContentRegistry);1524684173;Validates an alias filter by parsing it using the_provided {@link org.elasticsearch.index.query.QueryShardContext}_@throws IllegalArgumentException if the filter is not valid;public void validateAliasFilter(String alias, byte[] filter, QueryShardContext queryShardContext,_            NamedXContentRegistry xContentRegistry) {_        assert queryShardContext != null__        try (XContentParser parser = XContentFactory.xContent(filter)_                .createParser(xContentRegistry, LoggingDeprecationHandler.INSTANCE, filter)) {_            validateAliasFilter(parser, queryShardContext)__        } catch (Exception e) {_            throw new IllegalArgumentException("failed to parse filter for alias [" + alias + "]", e)__        }_    };validates,an,alias,filter,by,parsing,it,using,the,provided,link,org,elasticsearch,index,query,query,shard,context,throws,illegal,argument,exception,if,the,filter,is,not,valid;public,void,validate,alias,filter,string,alias,byte,filter,query,shard,context,query,shard,context,named,xcontent,registry,x,content,registry,assert,query,shard,context,null,try,xcontent,parser,parser,xcontent,factory,x,content,filter,create,parser,x,content,registry,logging,deprecation,handler,instance,filter,validate,alias,filter,parser,query,shard,context,catch,exception,e,throw,new,illegal,argument,exception,failed,to,parse,filter,for,alias,alias,e
AliasValidator -> public void validateAliasFilter(String alias, byte[] filter, QueryShardContext queryShardContext,             NamedXContentRegistry xContentRegistry);1529082965;Validates an alias filter by parsing it using the_provided {@link org.elasticsearch.index.query.QueryShardContext}_@throws IllegalArgumentException if the filter is not valid;public void validateAliasFilter(String alias, byte[] filter, QueryShardContext queryShardContext,_            NamedXContentRegistry xContentRegistry) {_        assert queryShardContext != null__        try (XContentParser parser = XContentFactory.xContent(filter)_                .createParser(xContentRegistry, LoggingDeprecationHandler.INSTANCE, filter)) {_            validateAliasFilter(parser, queryShardContext)__        } catch (Exception e) {_            throw new IllegalArgumentException("failed to parse filter for alias [" + alias + "]", e)__        }_    };validates,an,alias,filter,by,parsing,it,using,the,provided,link,org,elasticsearch,index,query,query,shard,context,throws,illegal,argument,exception,if,the,filter,is,not,valid;public,void,validate,alias,filter,string,alias,byte,filter,query,shard,context,query,shard,context,named,xcontent,registry,x,content,registry,assert,query,shard,context,null,try,xcontent,parser,parser,xcontent,factory,x,content,filter,create,parser,x,content,registry,logging,deprecation,handler,instance,filter,validate,alias,filter,parser,query,shard,context,catch,exception,e,throw,new,illegal,argument,exception,failed,to,parse,filter,for,alias,alias,e
AliasValidator -> public void validateAliasFilter(String alias, byte[] filter, QueryShardContext queryShardContext,             NamedXContentRegistry xContentRegistry);1536137328;Validates an alias filter by parsing it using the_provided {@link org.elasticsearch.index.query.QueryShardContext}_@throws IllegalArgumentException if the filter is not valid;public void validateAliasFilter(String alias, byte[] filter, QueryShardContext queryShardContext,_            NamedXContentRegistry xContentRegistry) {_        assert queryShardContext != null__        try (XContentParser parser = XContentFactory.xContent(filter)_                .createParser(xContentRegistry, LoggingDeprecationHandler.INSTANCE, filter)) {_            validateAliasFilter(parser, queryShardContext)__        } catch (Exception e) {_            throw new IllegalArgumentException("failed to parse filter for alias [" + alias + "]", e)__        }_    };validates,an,alias,filter,by,parsing,it,using,the,provided,link,org,elasticsearch,index,query,query,shard,context,throws,illegal,argument,exception,if,the,filter,is,not,valid;public,void,validate,alias,filter,string,alias,byte,filter,query,shard,context,query,shard,context,named,xcontent,registry,x,content,registry,assert,query,shard,context,null,try,xcontent,parser,parser,xcontent,factory,x,content,filter,create,parser,x,content,registry,logging,deprecation,handler,instance,filter,validate,alias,filter,parser,query,shard,context,catch,exception,e,throw,new,illegal,argument,exception,failed,to,parse,filter,for,alias,alias,e
AliasValidator -> public void validateAliasFilter(String alias, byte[] filter, QueryShardContext queryShardContext,             NamedXContentRegistry xContentRegistry);1541092382;Validates an alias filter by parsing it using the_provided {@link org.elasticsearch.index.query.QueryShardContext}_@throws IllegalArgumentException if the filter is not valid;public void validateAliasFilter(String alias, byte[] filter, QueryShardContext queryShardContext,_            NamedXContentRegistry xContentRegistry) {_        assert queryShardContext != null__        try (XContentParser parser = XContentFactory.xContent(filter)_                .createParser(xContentRegistry, LoggingDeprecationHandler.INSTANCE, filter)) {_            validateAliasFilter(parser, queryShardContext)__        } catch (Exception e) {_            throw new IllegalArgumentException("failed to parse filter for alias [" + alias + "]", e)__        }_    };validates,an,alias,filter,by,parsing,it,using,the,provided,link,org,elasticsearch,index,query,query,shard,context,throws,illegal,argument,exception,if,the,filter,is,not,valid;public,void,validate,alias,filter,string,alias,byte,filter,query,shard,context,query,shard,context,named,xcontent,registry,x,content,registry,assert,query,shard,context,null,try,xcontent,parser,parser,xcontent,factory,x,content,filter,create,parser,x,content,registry,logging,deprecation,handler,instance,filter,validate,alias,filter,parser,query,shard,context,catch,exception,e,throw,new,illegal,argument,exception,failed,to,parse,filter,for,alias,alias,e
AliasValidator -> public void validateAliasFilter(String alias, byte[] filter, QueryShardContext queryShardContext,             NamedXContentRegistry xContentRegistry);1543834151;Validates an alias filter by parsing it using the_provided {@link org.elasticsearch.index.query.QueryShardContext}_@throws IllegalArgumentException if the filter is not valid;public void validateAliasFilter(String alias, byte[] filter, QueryShardContext queryShardContext,_            NamedXContentRegistry xContentRegistry) {_        assert queryShardContext != null__        try (XContentParser parser = XContentFactory.xContent(filter)_                .createParser(xContentRegistry, LoggingDeprecationHandler.INSTANCE, filter)) {_            validateAliasFilter(parser, queryShardContext)__        } catch (Exception e) {_            throw new IllegalArgumentException("failed to parse filter for alias [" + alias + "]", e)__        }_    };validates,an,alias,filter,by,parsing,it,using,the,provided,link,org,elasticsearch,index,query,query,shard,context,throws,illegal,argument,exception,if,the,filter,is,not,valid;public,void,validate,alias,filter,string,alias,byte,filter,query,shard,context,query,shard,context,named,xcontent,registry,x,content,registry,assert,query,shard,context,null,try,xcontent,parser,parser,xcontent,factory,x,content,filter,create,parser,x,content,registry,logging,deprecation,handler,instance,filter,validate,alias,filter,parser,query,shard,context,catch,exception,e,throw,new,illegal,argument,exception,failed,to,parse,filter,for,alias,alias,e
