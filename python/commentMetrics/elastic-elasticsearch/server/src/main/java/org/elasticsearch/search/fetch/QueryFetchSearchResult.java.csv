commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public long getRequestId() {     return queryResult.getRequestId(). }
false;public;0;4;;@Override public SearchShardTarget getSearchShardTarget() {     return queryResult.getSearchShardTarget(). }
false;public;1;6;;@Override public void setSearchShardTarget(SearchShardTarget shardTarget) {     super.setSearchShardTarget(shardTarget).     queryResult.setSearchShardTarget(shardTarget).     fetchResult.setSearchShardTarget(shardTarget). }
false;public;1;6;;@Override public void setShardIndex(int requestIndex) {     super.setShardIndex(requestIndex).     queryResult.setShardIndex(requestIndex).     fetchResult.setShardIndex(requestIndex). }
false;public;0;4;;@Override public QuerySearchResult queryResult() {     return queryResult. }
false;public;0;4;;@Override public FetchSearchResult fetchResult() {     return fetchResult. }
false;public,static;1;5;;public static QueryFetchSearchResult readQueryFetchSearchResult(StreamInput in) throws IOException {     QueryFetchSearchResult result = new QueryFetchSearchResult().     result.readFrom(in).     return result. }
false;public;1;6;;@Override public void readFrom(StreamInput in) throws IOException {     super.readFrom(in).     queryResult = readQuerySearchResult(in).     fetchResult = readFetchSearchResult(in). }
false;public;1;6;;@Override public void writeTo(StreamOutput out) throws IOException {     super.writeTo(out).     queryResult.writeTo(out).     fetchResult.writeTo(out). }
