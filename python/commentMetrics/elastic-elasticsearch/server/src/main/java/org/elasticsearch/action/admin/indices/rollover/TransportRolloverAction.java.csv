# id;timestamp;commentText;codeText;commentWords;codeWords
TransportRolloverAction -> static void checkNoDuplicatedAliasInIndexTemplate(MetaData metaData, String rolloverIndexName, String rolloverRequestAlias);1524684173;If the newly created index matches with an index template whose aliases contains the rollover alias,_the rollover alias will point to multiple indices. This causes indexing requests to be rejected._To avoid this, we make sure that there is no duplicated alias in index templates before creating a new index.;static void checkNoDuplicatedAliasInIndexTemplate(MetaData metaData, String rolloverIndexName, String rolloverRequestAlias) {_        final List<IndexTemplateMetaData> matchedTemplates = MetaDataIndexTemplateService.findTemplates(metaData, rolloverIndexName)__        for (IndexTemplateMetaData template : matchedTemplates) {_            if (template.aliases().containsKey(rolloverRequestAlias)) {_                throw new IllegalArgumentException(String.format(Locale.ROOT,_                    "Rollover alias [%s] can point to multiple indices, found duplicated alias [%s] in index template [%s]",_                    rolloverRequestAlias, template.aliases().keys(), template.name()))__            }_        }_    };if,the,newly,created,index,matches,with,an,index,template,whose,aliases,contains,the,rollover,alias,the,rollover,alias,will,point,to,multiple,indices,this,causes,indexing,requests,to,be,rejected,to,avoid,this,we,make,sure,that,there,is,no,duplicated,alias,in,index,templates,before,creating,a,new,index;static,void,check,no,duplicated,alias,in,index,template,meta,data,meta,data,string,rollover,index,name,string,rollover,request,alias,final,list,index,template,meta,data,matched,templates,meta,data,index,template,service,find,templates,meta,data,rollover,index,name,for,index,template,meta,data,template,matched,templates,if,template,aliases,contains,key,rollover,request,alias,throw,new,illegal,argument,exception,string,format,locale,root,rollover,alias,s,can,point,to,multiple,indices,found,duplicated,alias,s,in,index,template,s,rollover,request,alias,template,aliases,keys,template,name
TransportRolloverAction -> static void checkNoDuplicatedAliasInIndexTemplate(MetaData metaData, String rolloverIndexName, String rolloverRequestAlias);1529082965;If the newly created index matches with an index template whose aliases contains the rollover alias,_the rollover alias will point to multiple indices. This causes indexing requests to be rejected._To avoid this, we make sure that there is no duplicated alias in index templates before creating a new index.;static void checkNoDuplicatedAliasInIndexTemplate(MetaData metaData, String rolloverIndexName, String rolloverRequestAlias) {_        final List<IndexTemplateMetaData> matchedTemplates = MetaDataIndexTemplateService.findTemplates(metaData, rolloverIndexName)__        for (IndexTemplateMetaData template : matchedTemplates) {_            if (template.aliases().containsKey(rolloverRequestAlias)) {_                throw new IllegalArgumentException(String.format(Locale.ROOT,_                    "Rollover alias [%s] can point to multiple indices, found duplicated alias [%s] in index template [%s]",_                    rolloverRequestAlias, template.aliases().keys(), template.name()))__            }_        }_    };if,the,newly,created,index,matches,with,an,index,template,whose,aliases,contains,the,rollover,alias,the,rollover,alias,will,point,to,multiple,indices,this,causes,indexing,requests,to,be,rejected,to,avoid,this,we,make,sure,that,there,is,no,duplicated,alias,in,index,templates,before,creating,a,new,index;static,void,check,no,duplicated,alias,in,index,template,meta,data,meta,data,string,rollover,index,name,string,rollover,request,alias,final,list,index,template,meta,data,matched,templates,meta,data,index,template,service,find,templates,meta,data,rollover,index,name,for,index,template,meta,data,template,matched,templates,if,template,aliases,contains,key,rollover,request,alias,throw,new,illegal,argument,exception,string,format,locale,root,rollover,alias,s,can,point,to,multiple,indices,found,duplicated,alias,s,in,index,template,s,rollover,request,alias,template,aliases,keys,template,name
TransportRolloverAction -> static void checkNoDuplicatedAliasInIndexTemplate(MetaData metaData, String rolloverIndexName, String rolloverRequestAlias);1531179852;If the newly created index matches with an index template whose aliases contains the rollover alias,_the rollover alias will point to multiple indices. This causes indexing requests to be rejected._To avoid this, we make sure that there is no duplicated alias in index templates before creating a new index.;static void checkNoDuplicatedAliasInIndexTemplate(MetaData metaData, String rolloverIndexName, String rolloverRequestAlias) {_        final List<IndexTemplateMetaData> matchedTemplates = MetaDataIndexTemplateService.findTemplates(metaData, rolloverIndexName)__        for (IndexTemplateMetaData template : matchedTemplates) {_            if (template.aliases().containsKey(rolloverRequestAlias)) {_                throw new IllegalArgumentException(String.format(Locale.ROOT,_                    "Rollover alias [%s] can point to multiple indices, found duplicated alias [%s] in index template [%s]",_                    rolloverRequestAlias, template.aliases().keys(), template.name()))__            }_        }_    };if,the,newly,created,index,matches,with,an,index,template,whose,aliases,contains,the,rollover,alias,the,rollover,alias,will,point,to,multiple,indices,this,causes,indexing,requests,to,be,rejected,to,avoid,this,we,make,sure,that,there,is,no,duplicated,alias,in,index,templates,before,creating,a,new,index;static,void,check,no,duplicated,alias,in,index,template,meta,data,meta,data,string,rollover,index,name,string,rollover,request,alias,final,list,index,template,meta,data,matched,templates,meta,data,index,template,service,find,templates,meta,data,rollover,index,name,for,index,template,meta,data,template,matched,templates,if,template,aliases,contains,key,rollover,request,alias,throw,new,illegal,argument,exception,string,format,locale,root,rollover,alias,s,can,point,to,multiple,indices,found,duplicated,alias,s,in,index,template,s,rollover,request,alias,template,aliases,keys,template,name
TransportRolloverAction -> static void checkNoDuplicatedAliasInIndexTemplate(MetaData metaData, String rolloverIndexName, String rolloverRequestAlias);1533063033;If the newly created index matches with an index template whose aliases contains the rollover alias,_the rollover alias will point to multiple indices. This causes indexing requests to be rejected._To avoid this, we make sure that there is no duplicated alias in index templates before creating a new index.;static void checkNoDuplicatedAliasInIndexTemplate(MetaData metaData, String rolloverIndexName, String rolloverRequestAlias) {_        final List<IndexTemplateMetaData> matchedTemplates = MetaDataIndexTemplateService.findTemplates(metaData, rolloverIndexName)__        for (IndexTemplateMetaData template : matchedTemplates) {_            if (template.aliases().containsKey(rolloverRequestAlias)) {_                throw new IllegalArgumentException(String.format(Locale.ROOT,_                    "Rollover alias [%s] can point to multiple indices, found duplicated alias [%s] in index template [%s]",_                    rolloverRequestAlias, template.aliases().keys(), template.name()))__            }_        }_    };if,the,newly,created,index,matches,with,an,index,template,whose,aliases,contains,the,rollover,alias,the,rollover,alias,will,point,to,multiple,indices,this,causes,indexing,requests,to,be,rejected,to,avoid,this,we,make,sure,that,there,is,no,duplicated,alias,in,index,templates,before,creating,a,new,index;static,void,check,no,duplicated,alias,in,index,template,meta,data,meta,data,string,rollover,index,name,string,rollover,request,alias,final,list,index,template,meta,data,matched,templates,meta,data,index,template,service,find,templates,meta,data,rollover,index,name,for,index,template,meta,data,template,matched,templates,if,template,aliases,contains,key,rollover,request,alias,throw,new,illegal,argument,exception,string,format,locale,root,rollover,alias,s,can,point,to,multiple,indices,found,duplicated,alias,s,in,index,template,s,rollover,request,alias,template,aliases,keys,template,name
TransportRolloverAction -> static void checkNoDuplicatedAliasInIndexTemplate(MetaData metaData, String rolloverIndexName, String rolloverRequestAlias);1541092382;If the newly created index matches with an index template whose aliases contains the rollover alias,_the rollover alias will point to multiple indices. This causes indexing requests to be rejected._To avoid this, we make sure that there is no duplicated alias in index templates before creating a new index.;static void checkNoDuplicatedAliasInIndexTemplate(MetaData metaData, String rolloverIndexName, String rolloverRequestAlias) {_        final List<IndexTemplateMetaData> matchedTemplates = MetaDataIndexTemplateService.findTemplates(metaData, rolloverIndexName)__        for (IndexTemplateMetaData template : matchedTemplates) {_            if (template.aliases().containsKey(rolloverRequestAlias)) {_                throw new IllegalArgumentException(String.format(Locale.ROOT,_                    "Rollover alias [%s] can point to multiple indices, found duplicated alias [%s] in index template [%s]",_                    rolloverRequestAlias, template.aliases().keys(), template.name()))__            }_        }_    };if,the,newly,created,index,matches,with,an,index,template,whose,aliases,contains,the,rollover,alias,the,rollover,alias,will,point,to,multiple,indices,this,causes,indexing,requests,to,be,rejected,to,avoid,this,we,make,sure,that,there,is,no,duplicated,alias,in,index,templates,before,creating,a,new,index;static,void,check,no,duplicated,alias,in,index,template,meta,data,meta,data,string,rollover,index,name,string,rollover,request,alias,final,list,index,template,meta,data,matched,templates,meta,data,index,template,service,find,templates,meta,data,rollover,index,name,for,index,template,meta,data,template,matched,templates,if,template,aliases,contains,key,rollover,request,alias,throw,new,illegal,argument,exception,string,format,locale,root,rollover,alias,s,can,point,to,multiple,indices,found,duplicated,alias,s,in,index,template,s,rollover,request,alias,template,aliases,keys,template,name
TransportRolloverAction -> static void checkNoDuplicatedAliasInIndexTemplate(MetaData metaData, String rolloverIndexName, String rolloverRequestAlias);1541419698;If the newly created index matches with an index template whose aliases contains the rollover alias,_the rollover alias will point to multiple indices. This causes indexing requests to be rejected._To avoid this, we make sure that there is no duplicated alias in index templates before creating a new index.;static void checkNoDuplicatedAliasInIndexTemplate(MetaData metaData, String rolloverIndexName, String rolloverRequestAlias) {_        final List<IndexTemplateMetaData> matchedTemplates = MetaDataIndexTemplateService.findTemplates(metaData, rolloverIndexName)__        for (IndexTemplateMetaData template : matchedTemplates) {_            if (template.aliases().containsKey(rolloverRequestAlias)) {_                throw new IllegalArgumentException(String.format(Locale.ROOT,_                    "Rollover alias [%s] can point to multiple indices, found duplicated alias [%s] in index template [%s]",_                    rolloverRequestAlias, template.aliases().keys(), template.name()))__            }_        }_    };if,the,newly,created,index,matches,with,an,index,template,whose,aliases,contains,the,rollover,alias,the,rollover,alias,will,point,to,multiple,indices,this,causes,indexing,requests,to,be,rejected,to,avoid,this,we,make,sure,that,there,is,no,duplicated,alias,in,index,templates,before,creating,a,new,index;static,void,check,no,duplicated,alias,in,index,template,meta,data,meta,data,string,rollover,index,name,string,rollover,request,alias,final,list,index,template,meta,data,matched,templates,meta,data,index,template,service,find,templates,meta,data,rollover,index,name,for,index,template,meta,data,template,matched,templates,if,template,aliases,contains,key,rollover,request,alias,throw,new,illegal,argument,exception,string,format,locale,root,rollover,alias,s,can,point,to,multiple,indices,found,duplicated,alias,s,in,index,template,s,rollover,request,alias,template,aliases,keys,template,name
