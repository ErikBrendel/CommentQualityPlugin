# id;timestamp;commentText;codeText;commentWords;codeWords
CustomUnifiedHighlighter -> private Collection<Query> rewriteCustomQuery(Query query);1524684173;Translate custom queries in queries that are supported by the unified highlighter.;private Collection<Query> rewriteCustomQuery(Query query) {_        if (query instanceof MultiPhrasePrefixQuery) {_            MultiPhrasePrefixQuery mpq = (MultiPhrasePrefixQuery) query__            Term[][] terms = mpq.getTerms()__            int[] positions = mpq.getPositions()__            SpanQuery[] positionSpanQueries = new SpanQuery[positions.length]__            int sizeMinus1 = terms.length - 1__            for (int i = 0_ i < positions.length_ i++) {_                SpanQuery[] innerQueries = new SpanQuery[terms[i].length]__                for (int j = 0_ j < terms[i].length_ j++) {_                    if (i == sizeMinus1) {_                        innerQueries[j] = new SpanMultiTermQueryWrapper(new PrefixQuery(terms[i][j]))__                    } else {_                        innerQueries[j] = new SpanTermQuery(terms[i][j])__                    }_                }_                if (innerQueries.length > 1) {_                    positionSpanQueries[i] = new SpanOrQuery(innerQueries)__                } else {_                    positionSpanQueries[i] = innerQueries[0]__                }_            }__            if (positionSpanQueries.length == 1) {_                return Collections.singletonList(positionSpanQueries[0])__            }_            _            int positionGaps = 0__            if (positions.length >= 2) {_                _                positionGaps = Math.max(0, positions[positions.length - 1] - positions[0] - positions.length + 1)__            }_            _            boolean inorder = (mpq.getSlop() == 0)__            return Collections.singletonList(new SpanNearQuery(positionSpanQueries,_                mpq.getSlop() + positionGaps, inorder))__        } else if (query instanceof CommonTermsQuery) {_            CommonTermsQuery ctq = (CommonTermsQuery) query__            List<Query> tqs = new ArrayList<> ()__            for (Term term : ctq.getTerms()) {_                tqs.add(new TermQuery(term))__            }_            return tqs__        } else if (query instanceof FunctionScoreQuery) {_            return Collections.singletonList(((FunctionScoreQuery) query).getSubQuery())__        } else if (query instanceof ESToParentBlockJoinQuery) {_            return Collections.singletonList(((ESToParentBlockJoinQuery) query).getChildQuery())__        } else {_            return null__        }_    };translate,custom,queries,in,queries,that,are,supported,by,the,unified,highlighter;private,collection,query,rewrite,custom,query,query,query,if,query,instanceof,multi,phrase,prefix,query,multi,phrase,prefix,query,mpq,multi,phrase,prefix,query,query,term,terms,mpq,get,terms,int,positions,mpq,get,positions,span,query,position,span,queries,new,span,query,positions,length,int,size,minus1,terms,length,1,for,int,i,0,i,positions,length,i,span,query,inner,queries,new,span,query,terms,i,length,for,int,j,0,j,terms,i,length,j,if,i,size,minus1,inner,queries,j,new,span,multi,term,query,wrapper,new,prefix,query,terms,i,j,else,inner,queries,j,new,span,term,query,terms,i,j,if,inner,queries,length,1,position,span,queries,i,new,span,or,query,inner,queries,else,position,span,queries,i,inner,queries,0,if,position,span,queries,length,1,return,collections,singleton,list,position,span,queries,0,int,position,gaps,0,if,positions,length,2,position,gaps,math,max,0,positions,positions,length,1,positions,0,positions,length,1,boolean,inorder,mpq,get,slop,0,return,collections,singleton,list,new,span,near,query,position,span,queries,mpq,get,slop,position,gaps,inorder,else,if,query,instanceof,common,terms,query,common,terms,query,ctq,common,terms,query,query,list,query,tqs,new,array,list,for,term,term,ctq,get,terms,tqs,add,new,term,query,term,return,tqs,else,if,query,instanceof,function,score,query,return,collections,singleton,list,function,score,query,query,get,sub,query,else,if,query,instanceof,esto,parent,block,join,query,return,collections,singleton,list,esto,parent,block,join,query,query,get,child,query,else,return,null
CustomUnifiedHighlighter -> private Collection<Query> rewriteCustomQuery(Query query);1531179852;Translate custom queries in queries that are supported by the unified highlighter.;private Collection<Query> rewriteCustomQuery(Query query) {_        if (query instanceof MultiPhrasePrefixQuery) {_            MultiPhrasePrefixQuery mpq = (MultiPhrasePrefixQuery) query__            Term[][] terms = mpq.getTerms()__            int[] positions = mpq.getPositions()__            SpanQuery[] positionSpanQueries = new SpanQuery[positions.length]__            int sizeMinus1 = terms.length - 1__            for (int i = 0_ i < positions.length_ i++) {_                SpanQuery[] innerQueries = new SpanQuery[terms[i].length]__                for (int j = 0_ j < terms[i].length_ j++) {_                    if (i == sizeMinus1) {_                        innerQueries[j] = new SpanMultiTermQueryWrapper<PrefixQuery>(new PrefixQuery(terms[i][j]))__                    } else {_                        innerQueries[j] = new SpanTermQuery(terms[i][j])__                    }_                }_                if (innerQueries.length > 1) {_                    positionSpanQueries[i] = new SpanOrQuery(innerQueries)__                } else {_                    positionSpanQueries[i] = innerQueries[0]__                }_            }__            if (positionSpanQueries.length == 1) {_                return Collections.singletonList(positionSpanQueries[0])__            }_            _            int positionGaps = 0__            if (positions.length >= 2) {_                _                positionGaps = Math.max(0, positions[positions.length - 1] - positions[0] - positions.length + 1)__            }_            _            boolean inorder = (mpq.getSlop() == 0)__            return Collections.singletonList(new SpanNearQuery(positionSpanQueries,_                mpq.getSlop() + positionGaps, inorder))__        } else if (query instanceof CommonTermsQuery) {_            CommonTermsQuery ctq = (CommonTermsQuery) query__            List<Query> tqs = new ArrayList<> ()__            for (Term term : ctq.getTerms()) {_                tqs.add(new TermQuery(term))__            }_            return tqs__        } else if (query instanceof FunctionScoreQuery) {_            return Collections.singletonList(((FunctionScoreQuery) query).getSubQuery())__        } else if (query instanceof ESToParentBlockJoinQuery) {_            return Collections.singletonList(((ESToParentBlockJoinQuery) query).getChildQuery())__        } else {_            return null__        }_    };translate,custom,queries,in,queries,that,are,supported,by,the,unified,highlighter;private,collection,query,rewrite,custom,query,query,query,if,query,instanceof,multi,phrase,prefix,query,multi,phrase,prefix,query,mpq,multi,phrase,prefix,query,query,term,terms,mpq,get,terms,int,positions,mpq,get,positions,span,query,position,span,queries,new,span,query,positions,length,int,size,minus1,terms,length,1,for,int,i,0,i,positions,length,i,span,query,inner,queries,new,span,query,terms,i,length,for,int,j,0,j,terms,i,length,j,if,i,size,minus1,inner,queries,j,new,span,multi,term,query,wrapper,prefix,query,new,prefix,query,terms,i,j,else,inner,queries,j,new,span,term,query,terms,i,j,if,inner,queries,length,1,position,span,queries,i,new,span,or,query,inner,queries,else,position,span,queries,i,inner,queries,0,if,position,span,queries,length,1,return,collections,singleton,list,position,span,queries,0,int,position,gaps,0,if,positions,length,2,position,gaps,math,max,0,positions,positions,length,1,positions,0,positions,length,1,boolean,inorder,mpq,get,slop,0,return,collections,singleton,list,new,span,near,query,position,span,queries,mpq,get,slop,position,gaps,inorder,else,if,query,instanceof,common,terms,query,common,terms,query,ctq,common,terms,query,query,list,query,tqs,new,array,list,for,term,term,ctq,get,terms,tqs,add,new,term,query,term,return,tqs,else,if,query,instanceof,function,score,query,return,collections,singleton,list,function,score,query,query,get,sub,query,else,if,query,instanceof,esto,parent,block,join,query,return,collections,singleton,list,esto,parent,block,join,query,query,get,child,query,else,return,null
CustomUnifiedHighlighter -> private Collection<Query> rewriteCustomQuery(Query query);1536314350;Translate custom queries in queries that are supported by the unified highlighter.;private Collection<Query> rewriteCustomQuery(Query query) {_        if (query instanceof MultiPhrasePrefixQuery) {_            MultiPhrasePrefixQuery mpq = (MultiPhrasePrefixQuery) query__            Term[][] terms = mpq.getTerms()__            int[] positions = mpq.getPositions()__            SpanQuery[] positionSpanQueries = new SpanQuery[positions.length]__            int sizeMinus1 = terms.length - 1__            for (int i = 0_ i < positions.length_ i++) {_                SpanQuery[] innerQueries = new SpanQuery[terms[i].length]__                for (int j = 0_ j < terms[i].length_ j++) {_                    if (i == sizeMinus1) {_                        innerQueries[j] = new SpanMultiTermQueryWrapper<PrefixQuery>(new PrefixQuery(terms[i][j]))__                    } else {_                        innerQueries[j] = new SpanTermQuery(terms[i][j])__                    }_                }_                if (innerQueries.length > 1) {_                    positionSpanQueries[i] = new SpanOrQuery(innerQueries)__                } else {_                    positionSpanQueries[i] = innerQueries[0]__                }_            }__            if (positionSpanQueries.length == 1) {_                return Collections.singletonList(positionSpanQueries[0])__            }_            _            int positionGaps = 0__            if (positions.length >= 2) {_                _                positionGaps = Math.max(0, positions[positions.length - 1] - positions[0] - positions.length + 1)__            }_            _            boolean inorder = (mpq.getSlop() == 0)__            return Collections.singletonList(new SpanNearQuery(positionSpanQueries,_                mpq.getSlop() + positionGaps, inorder))__        } else if (query instanceof CommonTermsQuery) {_            CommonTermsQuery ctq = (CommonTermsQuery) query__            List<Query> tqs = new ArrayList<> ()__            for (Term term : ctq.getTerms()) {_                tqs.add(new TermQuery(term))__            }_            return tqs__        } else if (query instanceof FunctionScoreQuery) {_            return Collections.singletonList(((FunctionScoreQuery) query).getSubQuery())__        } else if (query instanceof ESToParentBlockJoinQuery) {_            return Collections.singletonList(((ESToParentBlockJoinQuery) query).getChildQuery())__        } else {_            return null__        }_    };translate,custom,queries,in,queries,that,are,supported,by,the,unified,highlighter;private,collection,query,rewrite,custom,query,query,query,if,query,instanceof,multi,phrase,prefix,query,multi,phrase,prefix,query,mpq,multi,phrase,prefix,query,query,term,terms,mpq,get,terms,int,positions,mpq,get,positions,span,query,position,span,queries,new,span,query,positions,length,int,size,minus1,terms,length,1,for,int,i,0,i,positions,length,i,span,query,inner,queries,new,span,query,terms,i,length,for,int,j,0,j,terms,i,length,j,if,i,size,minus1,inner,queries,j,new,span,multi,term,query,wrapper,prefix,query,new,prefix,query,terms,i,j,else,inner,queries,j,new,span,term,query,terms,i,j,if,inner,queries,length,1,position,span,queries,i,new,span,or,query,inner,queries,else,position,span,queries,i,inner,queries,0,if,position,span,queries,length,1,return,collections,singleton,list,position,span,queries,0,int,position,gaps,0,if,positions,length,2,position,gaps,math,max,0,positions,positions,length,1,positions,0,positions,length,1,boolean,inorder,mpq,get,slop,0,return,collections,singleton,list,new,span,near,query,position,span,queries,mpq,get,slop,position,gaps,inorder,else,if,query,instanceof,common,terms,query,common,terms,query,ctq,common,terms,query,query,list,query,tqs,new,array,list,for,term,term,ctq,get,terms,tqs,add,new,term,query,term,return,tqs,else,if,query,instanceof,function,score,query,return,collections,singleton,list,function,score,query,query,get,sub,query,else,if,query,instanceof,esto,parent,block,join,query,return,collections,singleton,list,esto,parent,block,join,query,query,get,child,query,else,return,null
CustomUnifiedHighlighter -> public CustomUnifiedHighlighter(IndexSearcher searcher,                                     Analyzer analyzer,                                     OffsetSource offsetSource,                                     PassageFormatter passageFormatter,                                     @Nullable Locale breakIteratorLocale,                                     @Nullable BreakIterator breakIterator,                                     String fieldValue,                                     int noMatchSize);1524684173;Creates a new instance of {@link CustomUnifiedHighlighter}__@param analyzer the analyzer used for the field at index time, used for multi term queries internally._@param passageFormatter our own {@link CustomPassageFormatter}_which generates snippets in forms of {@link Snippet} objects._@param offsetSource the {@link OffsetSource} to used for offsets retrieval._@param breakIteratorLocale the {@link Locale} to use for dividing text into passages._If null {@link Locale#ROOT} is used._@param breakIterator the {@link BreakIterator} to use for dividing text into passages._If null {@link BreakIterator#getSentenceInstance(Locale)} is used._@param fieldValue the original field values delimited by MULTIVAL_SEP_CHAR._@param noMatchSize The size of the text that should be returned when no highlighting can be performed.;public CustomUnifiedHighlighter(IndexSearcher searcher,_                                    Analyzer analyzer,_                                    OffsetSource offsetSource,_                                    PassageFormatter passageFormatter,_                                    @Nullable Locale breakIteratorLocale,_                                    @Nullable BreakIterator breakIterator,_                                    String fieldValue,_                                    int noMatchSize) {_        super(searcher, analyzer)__        this.offsetSource = offsetSource__        this.breakIterator = breakIterator__        this.breakIteratorLocale = breakIteratorLocale == null ? Locale.ROOT : breakIteratorLocale__        this.passageFormatter = passageFormatter__        this.fieldValue = fieldValue__        this.noMatchSize = noMatchSize__    };creates,a,new,instance,of,link,custom,unified,highlighter,param,analyzer,the,analyzer,used,for,the,field,at,index,time,used,for,multi,term,queries,internally,param,passage,formatter,our,own,link,custom,passage,formatter,which,generates,snippets,in,forms,of,link,snippet,objects,param,offset,source,the,link,offset,source,to,used,for,offsets,retrieval,param,break,iterator,locale,the,link,locale,to,use,for,dividing,text,into,passages,if,null,link,locale,root,is,used,param,break,iterator,the,link,break,iterator,to,use,for,dividing,text,into,passages,if,null,link,break,iterator,get,sentence,instance,locale,is,used,param,field,value,the,original,field,values,delimited,by,param,no,match,size,the,size,of,the,text,that,should,be,returned,when,no,highlighting,can,be,performed;public,custom,unified,highlighter,index,searcher,searcher,analyzer,analyzer,offset,source,offset,source,passage,formatter,passage,formatter,nullable,locale,break,iterator,locale,nullable,break,iterator,break,iterator,string,field,value,int,no,match,size,super,searcher,analyzer,this,offset,source,offset,source,this,break,iterator,break,iterator,this,break,iterator,locale,break,iterator,locale,null,locale,root,break,iterator,locale,this,passage,formatter,passage,formatter,this,field,value,field,value,this,no,match,size,no,match,size
CustomUnifiedHighlighter -> public CustomUnifiedHighlighter(IndexSearcher searcher,                                     Analyzer analyzer,                                     OffsetSource offsetSource,                                     PassageFormatter passageFormatter,                                     @Nullable Locale breakIteratorLocale,                                     @Nullable BreakIterator breakIterator,                                     String fieldValue,                                     int noMatchSize);1531179852;Creates a new instance of {@link CustomUnifiedHighlighter}__@param analyzer the analyzer used for the field at index time, used for multi term queries internally._@param passageFormatter our own {@link CustomPassageFormatter}_which generates snippets in forms of {@link Snippet} objects._@param offsetSource the {@link OffsetSource} to used for offsets retrieval._@param breakIteratorLocale the {@link Locale} to use for dividing text into passages._If null {@link Locale#ROOT} is used._@param breakIterator the {@link BreakIterator} to use for dividing text into passages._If null {@link BreakIterator#getSentenceInstance(Locale)} is used._@param fieldValue the original field values delimited by MULTIVAL_SEP_CHAR._@param noMatchSize The size of the text that should be returned when no highlighting can be performed.;public CustomUnifiedHighlighter(IndexSearcher searcher,_                                    Analyzer analyzer,_                                    OffsetSource offsetSource,_                                    PassageFormatter passageFormatter,_                                    @Nullable Locale breakIteratorLocale,_                                    @Nullable BreakIterator breakIterator,_                                    String fieldValue,_                                    int noMatchSize) {_        super(searcher, analyzer)__        this.offsetSource = offsetSource__        this.breakIterator = breakIterator__        this.breakIteratorLocale = breakIteratorLocale == null ? Locale.ROOT : breakIteratorLocale__        this.passageFormatter = passageFormatter__        this.fieldValue = fieldValue__        this.noMatchSize = noMatchSize__    };creates,a,new,instance,of,link,custom,unified,highlighter,param,analyzer,the,analyzer,used,for,the,field,at,index,time,used,for,multi,term,queries,internally,param,passage,formatter,our,own,link,custom,passage,formatter,which,generates,snippets,in,forms,of,link,snippet,objects,param,offset,source,the,link,offset,source,to,used,for,offsets,retrieval,param,break,iterator,locale,the,link,locale,to,use,for,dividing,text,into,passages,if,null,link,locale,root,is,used,param,break,iterator,the,link,break,iterator,to,use,for,dividing,text,into,passages,if,null,link,break,iterator,get,sentence,instance,locale,is,used,param,field,value,the,original,field,values,delimited,by,param,no,match,size,the,size,of,the,text,that,should,be,returned,when,no,highlighting,can,be,performed;public,custom,unified,highlighter,index,searcher,searcher,analyzer,analyzer,offset,source,offset,source,passage,formatter,passage,formatter,nullable,locale,break,iterator,locale,nullable,break,iterator,break,iterator,string,field,value,int,no,match,size,super,searcher,analyzer,this,offset,source,offset,source,this,break,iterator,break,iterator,this,break,iterator,locale,break,iterator,locale,null,locale,root,break,iterator,locale,this,passage,formatter,passage,formatter,this,field,value,field,value,this,no,match,size,no,match,size
CustomUnifiedHighlighter -> public CustomUnifiedHighlighter(IndexSearcher searcher,                                     Analyzer analyzer,                                     OffsetSource offsetSource,                                     PassageFormatter passageFormatter,                                     @Nullable Locale breakIteratorLocale,                                     @Nullable BreakIterator breakIterator,                                     String fieldValue,                                     int noMatchSize);1536314350;Creates a new instance of {@link CustomUnifiedHighlighter}__@param analyzer the analyzer used for the field at index time, used for multi term queries internally._@param passageFormatter our own {@link CustomPassageFormatter}_which generates snippets in forms of {@link Snippet} objects._@param offsetSource the {@link OffsetSource} to used for offsets retrieval._@param breakIteratorLocale the {@link Locale} to use for dividing text into passages._If null {@link Locale#ROOT} is used._@param breakIterator the {@link BreakIterator} to use for dividing text into passages._If null {@link BreakIterator#getSentenceInstance(Locale)} is used._@param fieldValue the original field values delimited by MULTIVAL_SEP_CHAR._@param noMatchSize The size of the text that should be returned when no highlighting can be performed.;public CustomUnifiedHighlighter(IndexSearcher searcher,_                                    Analyzer analyzer,_                                    OffsetSource offsetSource,_                                    PassageFormatter passageFormatter,_                                    @Nullable Locale breakIteratorLocale,_                                    @Nullable BreakIterator breakIterator,_                                    String fieldValue,_                                    int noMatchSize) {_        super(searcher, analyzer)__        this.offsetSource = offsetSource__        this.breakIterator = breakIterator__        this.breakIteratorLocale = breakIteratorLocale == null ? Locale.ROOT : breakIteratorLocale__        this.passageFormatter = passageFormatter__        this.fieldValue = fieldValue__        this.noMatchSize = noMatchSize__    };creates,a,new,instance,of,link,custom,unified,highlighter,param,analyzer,the,analyzer,used,for,the,field,at,index,time,used,for,multi,term,queries,internally,param,passage,formatter,our,own,link,custom,passage,formatter,which,generates,snippets,in,forms,of,link,snippet,objects,param,offset,source,the,link,offset,source,to,used,for,offsets,retrieval,param,break,iterator,locale,the,link,locale,to,use,for,dividing,text,into,passages,if,null,link,locale,root,is,used,param,break,iterator,the,link,break,iterator,to,use,for,dividing,text,into,passages,if,null,link,break,iterator,get,sentence,instance,locale,is,used,param,field,value,the,original,field,values,delimited,by,param,no,match,size,the,size,of,the,text,that,should,be,returned,when,no,highlighting,can,be,performed;public,custom,unified,highlighter,index,searcher,searcher,analyzer,analyzer,offset,source,offset,source,passage,formatter,passage,formatter,nullable,locale,break,iterator,locale,nullable,break,iterator,break,iterator,string,field,value,int,no,match,size,super,searcher,analyzer,this,offset,source,offset,source,this,break,iterator,break,iterator,this,break,iterator,locale,break,iterator,locale,null,locale,root,break,iterator,locale,this,passage,formatter,passage,formatter,this,field,value,field,value,this,no,match,size,no,match,size
CustomUnifiedHighlighter -> public Snippet[] highlightField(String field, Query query, int docId, int maxPassages) throws IOException;1524684173;Highlights terms extracted from the provided query within the content of the provided field name;public Snippet[] highlightField(String field, Query query, int docId, int maxPassages) throws IOException {_        Map<String, Object[]> fieldsAsObjects = super.highlightFieldsAsObjects(new String[]{field}, query,_            new int[]{docId}, new int[]{maxPassages})__        Object[] snippetObjects = fieldsAsObjects.get(field)__        if (snippetObjects != null) {_            _            assert snippetObjects.length == 1__            Object snippetObject = snippetObjects[0]__            if (snippetObject != null && snippetObject instanceof Snippet[]) {_                return (Snippet[]) snippetObject__            }_        }_        return EMPTY_SNIPPET__    };highlights,terms,extracted,from,the,provided,query,within,the,content,of,the,provided,field,name;public,snippet,highlight,field,string,field,query,query,int,doc,id,int,max,passages,throws,ioexception,map,string,object,fields,as,objects,super,highlight,fields,as,objects,new,string,field,query,new,int,doc,id,new,int,max,passages,object,snippet,objects,fields,as,objects,get,field,if,snippet,objects,null,assert,snippet,objects,length,1,object,snippet,object,snippet,objects,0,if,snippet,object,null,snippet,object,instanceof,snippet,return,snippet,snippet,object,return
CustomUnifiedHighlighter -> public Snippet[] highlightField(String field, Query query, int docId, int maxPassages) throws IOException;1531179852;Highlights terms extracted from the provided query within the content of the provided field name;public Snippet[] highlightField(String field, Query query, int docId, int maxPassages) throws IOException {_        Map<String, Object[]> fieldsAsObjects = super.highlightFieldsAsObjects(new String[]{field}, query,_            new int[]{docId}, new int[]{maxPassages})__        Object[] snippetObjects = fieldsAsObjects.get(field)__        if (snippetObjects != null) {_            _            assert snippetObjects.length == 1__            Object snippetObject = snippetObjects[0]__            if (snippetObject != null && snippetObject instanceof Snippet[]) {_                return (Snippet[]) snippetObject__            }_        }_        return EMPTY_SNIPPET__    };highlights,terms,extracted,from,the,provided,query,within,the,content,of,the,provided,field,name;public,snippet,highlight,field,string,field,query,query,int,doc,id,int,max,passages,throws,ioexception,map,string,object,fields,as,objects,super,highlight,fields,as,objects,new,string,field,query,new,int,doc,id,new,int,max,passages,object,snippet,objects,fields,as,objects,get,field,if,snippet,objects,null,assert,snippet,objects,length,1,object,snippet,object,snippet,objects,0,if,snippet,object,null,snippet,object,instanceof,snippet,return,snippet,snippet,object,return
CustomUnifiedHighlighter -> public Snippet[] highlightField(String field, Query query, int docId, int maxPassages) throws IOException;1536314350;Highlights terms extracted from the provided query within the content of the provided field name;public Snippet[] highlightField(String field, Query query, int docId, int maxPassages) throws IOException {_        Map<String, Object[]> fieldsAsObjects = super.highlightFieldsAsObjects(new String[]{field}, query,_            new int[]{docId}, new int[]{maxPassages})__        Object[] snippetObjects = fieldsAsObjects.get(field)__        if (snippetObjects != null) {_            _            assert snippetObjects.length == 1__            Object snippetObject = snippetObjects[0]__            if (snippetObject != null && snippetObject instanceof Snippet[]) {_                return (Snippet[]) snippetObject__            }_        }_        return EMPTY_SNIPPET__    };highlights,terms,extracted,from,the,provided,query,within,the,content,of,the,provided,field,name;public,snippet,highlight,field,string,field,query,query,int,doc,id,int,max,passages,throws,ioexception,map,string,object,fields,as,objects,super,highlight,fields,as,objects,new,string,field,query,new,int,doc,id,new,int,max,passages,object,snippet,objects,fields,as,objects,get,field,if,snippet,objects,null,assert,snippet,objects,length,1,object,snippet,object,snippet,objects,0,if,snippet,object,null,snippet,object,instanceof,snippet,return,snippet,snippet,object,return
CustomUnifiedHighlighter -> @Override     protected OffsetSource getOffsetSource(String field);1524684173;Forces the offset source for this highlighter;@Override_    protected OffsetSource getOffsetSource(String field) {_        if (offsetSource == null) {_            return super.getOffsetSource(field)__        }_        return offsetSource__    };forces,the,offset,source,for,this,highlighter;override,protected,offset,source,get,offset,source,string,field,if,offset,source,null,return,super,get,offset,source,field,return,offset,source
CustomUnifiedHighlighter -> @Override     protected OffsetSource getOffsetSource(String field);1531179852;Forces the offset source for this highlighter;@Override_    protected OffsetSource getOffsetSource(String field) {_        if (offsetSource == null) {_            return super.getOffsetSource(field)__        }_        return offsetSource__    };forces,the,offset,source,for,this,highlighter;override,protected,offset,source,get,offset,source,string,field,if,offset,source,null,return,super,get,offset,source,field,return,offset,source
CustomUnifiedHighlighter -> @Override     protected OffsetSource getOffsetSource(String field);1536314350;Forces the offset source for this highlighter;@Override_    protected OffsetSource getOffsetSource(String field) {_        if (offsetSource == null) {_            return super.getOffsetSource(field)__        }_        return offsetSource__    };forces,the,offset,source,for,this,highlighter;override,protected,offset,source,get,offset,source,string,field,if,offset,source,null,return,super,get,offset,source,field,return,offset,source
