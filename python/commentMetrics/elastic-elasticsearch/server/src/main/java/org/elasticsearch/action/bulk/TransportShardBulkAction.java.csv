# id;timestamp;commentText;codeText;commentWords;codeWords
TransportShardBulkAction -> static BulkItemResultHolder processUpdateResponse(final UpdateRequest updateRequest, final String concreteIndex,                                                       final Engine.Result result, final UpdateHelper.Result translate,                                                       final IndexShard primary, final int bulkReqId);1525162917;Creates a new bulk item result from the given requests and result of performing the update operation on the shard.;static BulkItemResultHolder processUpdateResponse(final UpdateRequest updateRequest, final String concreteIndex,_                                                      final Engine.Result result, final UpdateHelper.Result translate,_                                                      final IndexShard primary, final int bulkReqId) {_        assert result.getSeqNo() != SequenceNumbers.UNASSIGNED_SEQ_NO : "failed result should not have a sequence number"___        Engine.Operation.TYPE opType = result.getOperationType()___        final UpdateResponse updateResponse__        final BulkItemRequest replicaRequest___        _        if (opType == Engine.Operation.TYPE.INDEX) {_            assert result instanceof Engine.IndexResult : result.getClass()__            final IndexRequest updateIndexRequest = translate.action()__            final IndexResponse indexResponse = new IndexResponse(primary.shardId(), updateIndexRequest.type(), updateIndexRequest.id(),_                    result.getSeqNo(), primary.getPrimaryTerm(), result.getVersion(), ((Engine.IndexResult) result).isCreated())__            updateResponse = new UpdateResponse(indexResponse.getShardInfo(), indexResponse.getShardId(), indexResponse.getType(),_                    indexResponse.getId(), indexResponse.getSeqNo(), indexResponse.getPrimaryTerm(), indexResponse.getVersion(),_                    indexResponse.getResult())___            if (updateRequest.fetchSource() != null && updateRequest.fetchSource().fetchSource()) {_                final BytesReference indexSourceAsBytes = updateIndexRequest.source()__                final Tuple<XContentType, Map<String, Object>> sourceAndContent =_                        XContentHelper.convertToMap(indexSourceAsBytes, true, updateIndexRequest.getContentType())__                updateResponse.setGetResult(UpdateHelper.extractGetResult(updateRequest, concreteIndex,_                                indexResponse.getVersion(), sourceAndContent.v2(), sourceAndContent.v1(), indexSourceAsBytes))__            }_            _            replicaRequest = new BulkItemRequest(bulkReqId, updateIndexRequest)___        } else if (opType == Engine.Operation.TYPE.DELETE) {_            assert result instanceof Engine.DeleteResult : result.getClass()__            final DeleteRequest updateDeleteRequest = translate.action()___            final DeleteResponse deleteResponse = new DeleteResponse(primary.shardId(), updateDeleteRequest.type(), updateDeleteRequest.id(),_                    result.getSeqNo(), primary.getPrimaryTerm(), result.getVersion(), ((Engine.DeleteResult) result).isFound())___            updateResponse = new UpdateResponse(deleteResponse.getShardInfo(), deleteResponse.getShardId(),_                    deleteResponse.getType(), deleteResponse.getId(), deleteResponse.getSeqNo(), deleteResponse.getPrimaryTerm(),_                    deleteResponse.getVersion(), deleteResponse.getResult())___            final GetResult getResult = UpdateHelper.extractGetResult(updateRequest, concreteIndex, deleteResponse.getVersion(),_                    translate.updatedSourceAsMap(), translate.updateSourceContentType(), null)___            updateResponse.setGetResult(getResult)__            _            replicaRequest = new BulkItemRequest(bulkReqId, updateDeleteRequest)___        } else {_            throw new IllegalArgumentException("unknown operation type: " + opType)__        }__        return new BulkItemResultHolder(updateResponse, result, replicaRequest)__    };creates,a,new,bulk,item,result,from,the,given,requests,and,result,of,performing,the,update,operation,on,the,shard;static,bulk,item,result,holder,process,update,response,final,update,request,update,request,final,string,concrete,index,final,engine,result,result,final,update,helper,result,translate,final,index,shard,primary,final,int,bulk,req,id,assert,result,get,seq,no,sequence,numbers,failed,result,should,not,have,a,sequence,number,engine,operation,type,op,type,result,get,operation,type,final,update,response,update,response,final,bulk,item,request,replica,request,if,op,type,engine,operation,type,index,assert,result,instanceof,engine,index,result,result,get,class,final,index,request,update,index,request,translate,action,final,index,response,index,response,new,index,response,primary,shard,id,update,index,request,type,update,index,request,id,result,get,seq,no,primary,get,primary,term,result,get,version,engine,index,result,result,is,created,update,response,new,update,response,index,response,get,shard,info,index,response,get,shard,id,index,response,get,type,index,response,get,id,index,response,get,seq,no,index,response,get,primary,term,index,response,get,version,index,response,get,result,if,update,request,fetch,source,null,update,request,fetch,source,fetch,source,final,bytes,reference,index,source,as,bytes,update,index,request,source,final,tuple,xcontent,type,map,string,object,source,and,content,xcontent,helper,convert,to,map,index,source,as,bytes,true,update,index,request,get,content,type,update,response,set,get,result,update,helper,extract,get,result,update,request,concrete,index,index,response,get,version,source,and,content,v2,source,and,content,v1,index,source,as,bytes,replica,request,new,bulk,item,request,bulk,req,id,update,index,request,else,if,op,type,engine,operation,type,delete,assert,result,instanceof,engine,delete,result,result,get,class,final,delete,request,update,delete,request,translate,action,final,delete,response,delete,response,new,delete,response,primary,shard,id,update,delete,request,type,update,delete,request,id,result,get,seq,no,primary,get,primary,term,result,get,version,engine,delete,result,result,is,found,update,response,new,update,response,delete,response,get,shard,info,delete,response,get,shard,id,delete,response,get,type,delete,response,get,id,delete,response,get,seq,no,delete,response,get,primary,term,delete,response,get,version,delete,response,get,result,final,get,result,get,result,update,helper,extract,get,result,update,request,concrete,index,delete,response,get,version,translate,updated,source,as,map,translate,update,source,content,type,null,update,response,set,get,result,get,result,replica,request,new,bulk,item,request,bulk,req,id,update,delete,request,else,throw,new,illegal,argument,exception,unknown,operation,type,op,type,return,new,bulk,item,result,holder,update,response,result,replica,request
TransportShardBulkAction -> static BulkItemResultHolder processUpdateResponse(final UpdateRequest updateRequest, final String concreteIndex,                                                       final Engine.Result result, final UpdateHelper.Result translate,                                                       final IndexShard primary, final int bulkReqId);1526029249;Creates a new bulk item result from the given requests and result of performing the update operation on the shard.;static BulkItemResultHolder processUpdateResponse(final UpdateRequest updateRequest, final String concreteIndex,_                                                      final Engine.Result result, final UpdateHelper.Result translate,_                                                      final IndexShard primary, final int bulkReqId) {_        assert result.getSeqNo() != SequenceNumbers.UNASSIGNED_SEQ_NO : "failed result should not have a sequence number"___        Engine.Operation.TYPE opType = result.getOperationType()___        final UpdateResponse updateResponse__        final BulkItemRequest replicaRequest___        _        if (opType == Engine.Operation.TYPE.INDEX) {_            assert result instanceof Engine.IndexResult : result.getClass()__            final IndexRequest updateIndexRequest = translate.action()__            final IndexResponse indexResponse = new IndexResponse(primary.shardId(), updateIndexRequest.type(), updateIndexRequest.id(),_                    result.getSeqNo(), primary.getPrimaryTerm(), result.getVersion(), ((Engine.IndexResult) result).isCreated())__            updateResponse = new UpdateResponse(indexResponse.getShardInfo(), indexResponse.getShardId(), indexResponse.getType(),_                    indexResponse.getId(), indexResponse.getSeqNo(), indexResponse.getPrimaryTerm(), indexResponse.getVersion(),_                    indexResponse.getResult())___            if (updateRequest.fetchSource() != null && updateRequest.fetchSource().fetchSource()) {_                final BytesReference indexSourceAsBytes = updateIndexRequest.source()__                final Tuple<XContentType, Map<String, Object>> sourceAndContent =_                        XContentHelper.convertToMap(indexSourceAsBytes, true, updateIndexRequest.getContentType())__                updateResponse.setGetResult(UpdateHelper.extractGetResult(updateRequest, concreteIndex,_                                indexResponse.getVersion(), sourceAndContent.v2(), sourceAndContent.v1(), indexSourceAsBytes))__            }_            _            replicaRequest = new BulkItemRequest(bulkReqId, updateIndexRequest)___        } else if (opType == Engine.Operation.TYPE.DELETE) {_            assert result instanceof Engine.DeleteResult : result.getClass()__            final DeleteRequest updateDeleteRequest = translate.action()___            final DeleteResponse deleteResponse = new DeleteResponse(primary.shardId(), updateDeleteRequest.type(), updateDeleteRequest.id(),_                    result.getSeqNo(), primary.getPrimaryTerm(), result.getVersion(), ((Engine.DeleteResult) result).isFound())___            updateResponse = new UpdateResponse(deleteResponse.getShardInfo(), deleteResponse.getShardId(),_                    deleteResponse.getType(), deleteResponse.getId(), deleteResponse.getSeqNo(), deleteResponse.getPrimaryTerm(),_                    deleteResponse.getVersion(), deleteResponse.getResult())___            final GetResult getResult = UpdateHelper.extractGetResult(updateRequest, concreteIndex, deleteResponse.getVersion(),_                    translate.updatedSourceAsMap(), translate.updateSourceContentType(), null)___            updateResponse.setGetResult(getResult)__            _            replicaRequest = new BulkItemRequest(bulkReqId, updateDeleteRequest)___        } else {_            throw new IllegalArgumentException("unknown operation type: " + opType)__        }__        return new BulkItemResultHolder(updateResponse, result, replicaRequest)__    };creates,a,new,bulk,item,result,from,the,given,requests,and,result,of,performing,the,update,operation,on,the,shard;static,bulk,item,result,holder,process,update,response,final,update,request,update,request,final,string,concrete,index,final,engine,result,result,final,update,helper,result,translate,final,index,shard,primary,final,int,bulk,req,id,assert,result,get,seq,no,sequence,numbers,failed,result,should,not,have,a,sequence,number,engine,operation,type,op,type,result,get,operation,type,final,update,response,update,response,final,bulk,item,request,replica,request,if,op,type,engine,operation,type,index,assert,result,instanceof,engine,index,result,result,get,class,final,index,request,update,index,request,translate,action,final,index,response,index,response,new,index,response,primary,shard,id,update,index,request,type,update,index,request,id,result,get,seq,no,primary,get,primary,term,result,get,version,engine,index,result,result,is,created,update,response,new,update,response,index,response,get,shard,info,index,response,get,shard,id,index,response,get,type,index,response,get,id,index,response,get,seq,no,index,response,get,primary,term,index,response,get,version,index,response,get,result,if,update,request,fetch,source,null,update,request,fetch,source,fetch,source,final,bytes,reference,index,source,as,bytes,update,index,request,source,final,tuple,xcontent,type,map,string,object,source,and,content,xcontent,helper,convert,to,map,index,source,as,bytes,true,update,index,request,get,content,type,update,response,set,get,result,update,helper,extract,get,result,update,request,concrete,index,index,response,get,version,source,and,content,v2,source,and,content,v1,index,source,as,bytes,replica,request,new,bulk,item,request,bulk,req,id,update,index,request,else,if,op,type,engine,operation,type,delete,assert,result,instanceof,engine,delete,result,result,get,class,final,delete,request,update,delete,request,translate,action,final,delete,response,delete,response,new,delete,response,primary,shard,id,update,delete,request,type,update,delete,request,id,result,get,seq,no,primary,get,primary,term,result,get,version,engine,delete,result,result,is,found,update,response,new,update,response,delete,response,get,shard,info,delete,response,get,shard,id,delete,response,get,type,delete,response,get,id,delete,response,get,seq,no,delete,response,get,primary,term,delete,response,get,version,delete,response,get,result,final,get,result,get,result,update,helper,extract,get,result,update,request,concrete,index,delete,response,get,version,translate,updated,source,as,map,translate,update,source,content,type,null,update,response,set,get,result,get,result,replica,request,new,bulk,item,request,bulk,req,id,update,delete,request,else,throw,new,illegal,argument,exception,unknown,operation,type,op,type,return,new,bulk,item,result,holder,update,response,result,replica,request
TransportShardBulkAction -> static BulkItemResultHolder processUpdateResponse(final UpdateRequest updateRequest, final String concreteIndex,                                                       final Engine.Result result, final UpdateHelper.Result translate,                                                       final IndexShard primary, final int bulkReqId);1528706846;Creates a new bulk item result from the given requests and result of performing the update operation on the shard.;static BulkItemResultHolder processUpdateResponse(final UpdateRequest updateRequest, final String concreteIndex,_                                                      final Engine.Result result, final UpdateHelper.Result translate,_                                                      final IndexShard primary, final int bulkReqId) {_        assert result.getSeqNo() != SequenceNumbers.UNASSIGNED_SEQ_NO : "failed result should not have a sequence number"___        Engine.Operation.TYPE opType = result.getOperationType()___        final UpdateResponse updateResponse__        final BulkItemRequest replicaRequest___        _        if (opType == Engine.Operation.TYPE.INDEX) {_            assert result instanceof Engine.IndexResult : result.getClass()__            final IndexRequest updateIndexRequest = translate.action()__            final IndexResponse indexResponse = new IndexResponse(primary.shardId(), updateIndexRequest.type(), updateIndexRequest.id(),_                    result.getSeqNo(), primary.getPrimaryTerm(), result.getVersion(), ((Engine.IndexResult) result).isCreated())__            updateResponse = new UpdateResponse(indexResponse.getShardInfo(), indexResponse.getShardId(), indexResponse.getType(),_                    indexResponse.getId(), indexResponse.getSeqNo(), indexResponse.getPrimaryTerm(), indexResponse.getVersion(),_                    indexResponse.getResult())___            if (updateRequest.fetchSource() != null && updateRequest.fetchSource().fetchSource()) {_                final BytesReference indexSourceAsBytes = updateIndexRequest.source()__                final Tuple<XContentType, Map<String, Object>> sourceAndContent =_                        XContentHelper.convertToMap(indexSourceAsBytes, true, updateIndexRequest.getContentType())__                updateResponse.setGetResult(UpdateHelper.extractGetResult(updateRequest, concreteIndex,_                                indexResponse.getVersion(), sourceAndContent.v2(), sourceAndContent.v1(), indexSourceAsBytes))__            }_            _            replicaRequest = new BulkItemRequest(bulkReqId, updateIndexRequest)___        } else if (opType == Engine.Operation.TYPE.DELETE) {_            assert result instanceof Engine.DeleteResult : result.getClass()__            final DeleteRequest updateDeleteRequest = translate.action()___            final DeleteResponse deleteResponse = new DeleteResponse(primary.shardId(), updateDeleteRequest.type(), updateDeleteRequest.id(),_                    result.getSeqNo(), primary.getPrimaryTerm(), result.getVersion(), ((Engine.DeleteResult) result).isFound())___            updateResponse = new UpdateResponse(deleteResponse.getShardInfo(), deleteResponse.getShardId(),_                    deleteResponse.getType(), deleteResponse.getId(), deleteResponse.getSeqNo(), deleteResponse.getPrimaryTerm(),_                    deleteResponse.getVersion(), deleteResponse.getResult())___            final GetResult getResult = UpdateHelper.extractGetResult(updateRequest, concreteIndex, deleteResponse.getVersion(),_                    translate.updatedSourceAsMap(), translate.updateSourceContentType(), null)___            updateResponse.setGetResult(getResult)__            _            replicaRequest = new BulkItemRequest(bulkReqId, updateDeleteRequest)___        } else {_            throw new IllegalArgumentException("unknown operation type: " + opType)__        }__        return new BulkItemResultHolder(updateResponse, result, replicaRequest)__    };creates,a,new,bulk,item,result,from,the,given,requests,and,result,of,performing,the,update,operation,on,the,shard;static,bulk,item,result,holder,process,update,response,final,update,request,update,request,final,string,concrete,index,final,engine,result,result,final,update,helper,result,translate,final,index,shard,primary,final,int,bulk,req,id,assert,result,get,seq,no,sequence,numbers,failed,result,should,not,have,a,sequence,number,engine,operation,type,op,type,result,get,operation,type,final,update,response,update,response,final,bulk,item,request,replica,request,if,op,type,engine,operation,type,index,assert,result,instanceof,engine,index,result,result,get,class,final,index,request,update,index,request,translate,action,final,index,response,index,response,new,index,response,primary,shard,id,update,index,request,type,update,index,request,id,result,get,seq,no,primary,get,primary,term,result,get,version,engine,index,result,result,is,created,update,response,new,update,response,index,response,get,shard,info,index,response,get,shard,id,index,response,get,type,index,response,get,id,index,response,get,seq,no,index,response,get,primary,term,index,response,get,version,index,response,get,result,if,update,request,fetch,source,null,update,request,fetch,source,fetch,source,final,bytes,reference,index,source,as,bytes,update,index,request,source,final,tuple,xcontent,type,map,string,object,source,and,content,xcontent,helper,convert,to,map,index,source,as,bytes,true,update,index,request,get,content,type,update,response,set,get,result,update,helper,extract,get,result,update,request,concrete,index,index,response,get,version,source,and,content,v2,source,and,content,v1,index,source,as,bytes,replica,request,new,bulk,item,request,bulk,req,id,update,index,request,else,if,op,type,engine,operation,type,delete,assert,result,instanceof,engine,delete,result,result,get,class,final,delete,request,update,delete,request,translate,action,final,delete,response,delete,response,new,delete,response,primary,shard,id,update,delete,request,type,update,delete,request,id,result,get,seq,no,primary,get,primary,term,result,get,version,engine,delete,result,result,is,found,update,response,new,update,response,delete,response,get,shard,info,delete,response,get,shard,id,delete,response,get,type,delete,response,get,id,delete,response,get,seq,no,delete,response,get,primary,term,delete,response,get,version,delete,response,get,result,final,get,result,get,result,update,helper,extract,get,result,update,request,concrete,index,delete,response,get,version,translate,updated,source,as,map,translate,update,source,content,type,null,update,response,set,get,result,get,result,replica,request,new,bulk,item,request,bulk,req,id,update,delete,request,else,throw,new,illegal,argument,exception,unknown,operation,type,op,type,return,new,bulk,item,result,holder,update,response,result,replica,request
TransportShardBulkAction -> static BulkItemResultHolder processUpdateResponse(final UpdateRequest updateRequest, final String concreteIndex,                                                       final Engine.Result result, final UpdateHelper.Result translate,                                                       final IndexShard primary, final int bulkReqId);1528977744;Creates a new bulk item result from the given requests and result of performing the update operation on the shard.;static BulkItemResultHolder processUpdateResponse(final UpdateRequest updateRequest, final String concreteIndex,_                                                      final Engine.Result result, final UpdateHelper.Result translate,_                                                      final IndexShard primary, final int bulkReqId) {_        assert result.getSeqNo() != SequenceNumbers.UNASSIGNED_SEQ_NO : "failed result should not have a sequence number"___        Engine.Operation.TYPE opType = result.getOperationType()___        final UpdateResponse updateResponse__        final BulkItemRequest replicaRequest___        _        if (opType == Engine.Operation.TYPE.INDEX) {_            assert result instanceof Engine.IndexResult : result.getClass()__            final IndexRequest updateIndexRequest = translate.action()__            final IndexResponse indexResponse = new IndexResponse(primary.shardId(), updateIndexRequest.type(), updateIndexRequest.id(),_                    result.getSeqNo(), primary.getPrimaryTerm(), result.getVersion(), ((Engine.IndexResult) result).isCreated())__            updateResponse = new UpdateResponse(indexResponse.getShardInfo(), indexResponse.getShardId(), indexResponse.getType(),_                    indexResponse.getId(), indexResponse.getSeqNo(), indexResponse.getPrimaryTerm(), indexResponse.getVersion(),_                    indexResponse.getResult())___            if (updateRequest.fetchSource() != null && updateRequest.fetchSource().fetchSource()) {_                final BytesReference indexSourceAsBytes = updateIndexRequest.source()__                final Tuple<XContentType, Map<String, Object>> sourceAndContent =_                        XContentHelper.convertToMap(indexSourceAsBytes, true, updateIndexRequest.getContentType())__                updateResponse.setGetResult(UpdateHelper.extractGetResult(updateRequest, concreteIndex,_                                indexResponse.getVersion(), sourceAndContent.v2(), sourceAndContent.v1(), indexSourceAsBytes))__            }_            _            replicaRequest = new BulkItemRequest(bulkReqId, updateIndexRequest)___        } else if (opType == Engine.Operation.TYPE.DELETE) {_            assert result instanceof Engine.DeleteResult : result.getClass()__            final DeleteRequest updateDeleteRequest = translate.action()___            final DeleteResponse deleteResponse = new DeleteResponse(primary.shardId(), updateDeleteRequest.type(), updateDeleteRequest.id(),_                    result.getSeqNo(), primary.getPrimaryTerm(), result.getVersion(), ((Engine.DeleteResult) result).isFound())___            updateResponse = new UpdateResponse(deleteResponse.getShardInfo(), deleteResponse.getShardId(),_                    deleteResponse.getType(), deleteResponse.getId(), deleteResponse.getSeqNo(), deleteResponse.getPrimaryTerm(),_                    deleteResponse.getVersion(), deleteResponse.getResult())___            final GetResult getResult = UpdateHelper.extractGetResult(updateRequest, concreteIndex, deleteResponse.getVersion(),_                    translate.updatedSourceAsMap(), translate.updateSourceContentType(), null)___            updateResponse.setGetResult(getResult)__            _            replicaRequest = new BulkItemRequest(bulkReqId, updateDeleteRequest)___        } else {_            throw new IllegalArgumentException("unknown operation type: " + opType)__        }__        return new BulkItemResultHolder(updateResponse, result, replicaRequest)__    };creates,a,new,bulk,item,result,from,the,given,requests,and,result,of,performing,the,update,operation,on,the,shard;static,bulk,item,result,holder,process,update,response,final,update,request,update,request,final,string,concrete,index,final,engine,result,result,final,update,helper,result,translate,final,index,shard,primary,final,int,bulk,req,id,assert,result,get,seq,no,sequence,numbers,failed,result,should,not,have,a,sequence,number,engine,operation,type,op,type,result,get,operation,type,final,update,response,update,response,final,bulk,item,request,replica,request,if,op,type,engine,operation,type,index,assert,result,instanceof,engine,index,result,result,get,class,final,index,request,update,index,request,translate,action,final,index,response,index,response,new,index,response,primary,shard,id,update,index,request,type,update,index,request,id,result,get,seq,no,primary,get,primary,term,result,get,version,engine,index,result,result,is,created,update,response,new,update,response,index,response,get,shard,info,index,response,get,shard,id,index,response,get,type,index,response,get,id,index,response,get,seq,no,index,response,get,primary,term,index,response,get,version,index,response,get,result,if,update,request,fetch,source,null,update,request,fetch,source,fetch,source,final,bytes,reference,index,source,as,bytes,update,index,request,source,final,tuple,xcontent,type,map,string,object,source,and,content,xcontent,helper,convert,to,map,index,source,as,bytes,true,update,index,request,get,content,type,update,response,set,get,result,update,helper,extract,get,result,update,request,concrete,index,index,response,get,version,source,and,content,v2,source,and,content,v1,index,source,as,bytes,replica,request,new,bulk,item,request,bulk,req,id,update,index,request,else,if,op,type,engine,operation,type,delete,assert,result,instanceof,engine,delete,result,result,get,class,final,delete,request,update,delete,request,translate,action,final,delete,response,delete,response,new,delete,response,primary,shard,id,update,delete,request,type,update,delete,request,id,result,get,seq,no,primary,get,primary,term,result,get,version,engine,delete,result,result,is,found,update,response,new,update,response,delete,response,get,shard,info,delete,response,get,shard,id,delete,response,get,type,delete,response,get,id,delete,response,get,seq,no,delete,response,get,primary,term,delete,response,get,version,delete,response,get,result,final,get,result,get,result,update,helper,extract,get,result,update,request,concrete,index,delete,response,get,version,translate,updated,source,as,map,translate,update,source,content,type,null,update,response,set,get,result,get,result,replica,request,new,bulk,item,request,bulk,req,id,update,delete,request,else,throw,new,illegal,argument,exception,unknown,operation,type,op,type,return,new,bulk,item,result,holder,update,response,result,replica,request
TransportShardBulkAction -> static BulkItemResultHolder processUpdateResponse(final UpdateRequest updateRequest, final String concreteIndex,                                                       final Engine.Result result, final UpdateHelper.Result translate,                                                       final IndexShard primary, final int bulkReqId);1529658035;Creates a new bulk item result from the given requests and result of performing the update operation on the shard.;static BulkItemResultHolder processUpdateResponse(final UpdateRequest updateRequest, final String concreteIndex,_                                                      final Engine.Result result, final UpdateHelper.Result translate,_                                                      final IndexShard primary, final int bulkReqId) {_        assert result.getSeqNo() != SequenceNumbers.UNASSIGNED_SEQ_NO : "failed result should not have a sequence number"___        Engine.Operation.TYPE opType = result.getOperationType()___        final UpdateResponse updateResponse__        final BulkItemRequest replicaRequest___        _        if (opType == Engine.Operation.TYPE.INDEX) {_            assert result instanceof Engine.IndexResult : result.getClass()__            final IndexRequest updateIndexRequest = translate.action()__            final IndexResponse indexResponse = new IndexResponse(primary.shardId(), updateIndexRequest.type(), updateIndexRequest.id(),_                    result.getSeqNo(), primary.getPrimaryTerm(), result.getVersion(), ((Engine.IndexResult) result).isCreated())__            updateResponse = new UpdateResponse(indexResponse.getShardInfo(), indexResponse.getShardId(), indexResponse.getType(),_                    indexResponse.getId(), indexResponse.getSeqNo(), indexResponse.getPrimaryTerm(), indexResponse.getVersion(),_                    indexResponse.getResult())___            if (updateRequest.fetchSource() != null && updateRequest.fetchSource().fetchSource()) {_                final BytesReference indexSourceAsBytes = updateIndexRequest.source()__                final Tuple<XContentType, Map<String, Object>> sourceAndContent =_                        XContentHelper.convertToMap(indexSourceAsBytes, true, updateIndexRequest.getContentType())__                updateResponse.setGetResult(UpdateHelper.extractGetResult(updateRequest, concreteIndex,_                                indexResponse.getVersion(), sourceAndContent.v2(), sourceAndContent.v1(), indexSourceAsBytes))__            }_            _            replicaRequest = new BulkItemRequest(bulkReqId, updateIndexRequest)___        } else if (opType == Engine.Operation.TYPE.DELETE) {_            assert result instanceof Engine.DeleteResult : result.getClass()__            final DeleteRequest updateDeleteRequest = translate.action()___            final DeleteResponse deleteResponse = new DeleteResponse(primary.shardId(), updateDeleteRequest.type(), updateDeleteRequest.id(),_                    result.getSeqNo(), primary.getPrimaryTerm(), result.getVersion(), ((Engine.DeleteResult) result).isFound())___            updateResponse = new UpdateResponse(deleteResponse.getShardInfo(), deleteResponse.getShardId(),_                    deleteResponse.getType(), deleteResponse.getId(), deleteResponse.getSeqNo(), deleteResponse.getPrimaryTerm(),_                    deleteResponse.getVersion(), deleteResponse.getResult())___            final GetResult getResult = UpdateHelper.extractGetResult(updateRequest, concreteIndex, deleteResponse.getVersion(),_                    translate.updatedSourceAsMap(), translate.updateSourceContentType(), null)___            updateResponse.setGetResult(getResult)__            _            replicaRequest = new BulkItemRequest(bulkReqId, updateDeleteRequest)___        } else {_            throw new IllegalArgumentException("unknown operation type: " + opType)__        }__        return new BulkItemResultHolder(updateResponse, result, replicaRequest)__    };creates,a,new,bulk,item,result,from,the,given,requests,and,result,of,performing,the,update,operation,on,the,shard;static,bulk,item,result,holder,process,update,response,final,update,request,update,request,final,string,concrete,index,final,engine,result,result,final,update,helper,result,translate,final,index,shard,primary,final,int,bulk,req,id,assert,result,get,seq,no,sequence,numbers,failed,result,should,not,have,a,sequence,number,engine,operation,type,op,type,result,get,operation,type,final,update,response,update,response,final,bulk,item,request,replica,request,if,op,type,engine,operation,type,index,assert,result,instanceof,engine,index,result,result,get,class,final,index,request,update,index,request,translate,action,final,index,response,index,response,new,index,response,primary,shard,id,update,index,request,type,update,index,request,id,result,get,seq,no,primary,get,primary,term,result,get,version,engine,index,result,result,is,created,update,response,new,update,response,index,response,get,shard,info,index,response,get,shard,id,index,response,get,type,index,response,get,id,index,response,get,seq,no,index,response,get,primary,term,index,response,get,version,index,response,get,result,if,update,request,fetch,source,null,update,request,fetch,source,fetch,source,final,bytes,reference,index,source,as,bytes,update,index,request,source,final,tuple,xcontent,type,map,string,object,source,and,content,xcontent,helper,convert,to,map,index,source,as,bytes,true,update,index,request,get,content,type,update,response,set,get,result,update,helper,extract,get,result,update,request,concrete,index,index,response,get,version,source,and,content,v2,source,and,content,v1,index,source,as,bytes,replica,request,new,bulk,item,request,bulk,req,id,update,index,request,else,if,op,type,engine,operation,type,delete,assert,result,instanceof,engine,delete,result,result,get,class,final,delete,request,update,delete,request,translate,action,final,delete,response,delete,response,new,delete,response,primary,shard,id,update,delete,request,type,update,delete,request,id,result,get,seq,no,primary,get,primary,term,result,get,version,engine,delete,result,result,is,found,update,response,new,update,response,delete,response,get,shard,info,delete,response,get,shard,id,delete,response,get,type,delete,response,get,id,delete,response,get,seq,no,delete,response,get,primary,term,delete,response,get,version,delete,response,get,result,final,get,result,get,result,update,helper,extract,get,result,update,request,concrete,index,delete,response,get,version,translate,updated,source,as,map,translate,update,source,content,type,null,update,response,set,get,result,get,result,replica,request,new,bulk,item,request,bulk,req,id,update,delete,request,else,throw,new,illegal,argument,exception,unknown,operation,type,op,type,return,new,bulk,item,result,holder,update,response,result,replica,request
TransportShardBulkAction -> static BulkItemResultHolder processUpdateResponse(final UpdateRequest updateRequest, final String concreteIndex,                                                       final Engine.Result result, final UpdateHelper.Result translate,                                                       final IndexShard primary, final int bulkReqId);1531179852;Creates a new bulk item result from the given requests and result of performing the update operation on the shard.;static BulkItemResultHolder processUpdateResponse(final UpdateRequest updateRequest, final String concreteIndex,_                                                      final Engine.Result result, final UpdateHelper.Result translate,_                                                      final IndexShard primary, final int bulkReqId) {_        assert result.getSeqNo() != SequenceNumbers.UNASSIGNED_SEQ_NO : "failed result should not have a sequence number"___        Engine.Operation.TYPE opType = result.getOperationType()___        final UpdateResponse updateResponse__        final BulkItemRequest replicaRequest___        _        if (opType == Engine.Operation.TYPE.INDEX) {_            assert result instanceof Engine.IndexResult : result.getClass()__            final IndexRequest updateIndexRequest = translate.action()__            final IndexResponse indexResponse = new IndexResponse(primary.shardId(), updateIndexRequest.type(), updateIndexRequest.id(),_                    result.getSeqNo(), primary.getPrimaryTerm(), result.getVersion(), ((Engine.IndexResult) result).isCreated())__            updateResponse = new UpdateResponse(indexResponse.getShardInfo(), indexResponse.getShardId(), indexResponse.getType(),_                    indexResponse.getId(), indexResponse.getSeqNo(), indexResponse.getPrimaryTerm(), indexResponse.getVersion(),_                    indexResponse.getResult())___            if (updateRequest.fetchSource() != null && updateRequest.fetchSource().fetchSource()) {_                final BytesReference indexSourceAsBytes = updateIndexRequest.source()__                final Tuple<XContentType, Map<String, Object>> sourceAndContent =_                        XContentHelper.convertToMap(indexSourceAsBytes, true, updateIndexRequest.getContentType())__                updateResponse.setGetResult(UpdateHelper.extractGetResult(updateRequest, concreteIndex,_                                indexResponse.getVersion(), sourceAndContent.v2(), sourceAndContent.v1(), indexSourceAsBytes))__            }_            _            replicaRequest = new BulkItemRequest(bulkReqId, updateIndexRequest)___        } else if (opType == Engine.Operation.TYPE.DELETE) {_            assert result instanceof Engine.DeleteResult : result.getClass()__            final DeleteRequest updateDeleteRequest = translate.action()___            final DeleteResponse deleteResponse = new DeleteResponse(primary.shardId(), updateDeleteRequest.type(), updateDeleteRequest.id(),_                    result.getSeqNo(), primary.getPrimaryTerm(), result.getVersion(), ((Engine.DeleteResult) result).isFound())___            updateResponse = new UpdateResponse(deleteResponse.getShardInfo(), deleteResponse.getShardId(),_                    deleteResponse.getType(), deleteResponse.getId(), deleteResponse.getSeqNo(), deleteResponse.getPrimaryTerm(),_                    deleteResponse.getVersion(), deleteResponse.getResult())___            final GetResult getResult = UpdateHelper.extractGetResult(updateRequest, concreteIndex, deleteResponse.getVersion(),_                    translate.updatedSourceAsMap(), translate.updateSourceContentType(), null)___            updateResponse.setGetResult(getResult)__            _            replicaRequest = new BulkItemRequest(bulkReqId, updateDeleteRequest)___        } else {_            throw new IllegalArgumentException("unknown operation type: " + opType)__        }__        return new BulkItemResultHolder(updateResponse, result, replicaRequest)__    };creates,a,new,bulk,item,result,from,the,given,requests,and,result,of,performing,the,update,operation,on,the,shard;static,bulk,item,result,holder,process,update,response,final,update,request,update,request,final,string,concrete,index,final,engine,result,result,final,update,helper,result,translate,final,index,shard,primary,final,int,bulk,req,id,assert,result,get,seq,no,sequence,numbers,failed,result,should,not,have,a,sequence,number,engine,operation,type,op,type,result,get,operation,type,final,update,response,update,response,final,bulk,item,request,replica,request,if,op,type,engine,operation,type,index,assert,result,instanceof,engine,index,result,result,get,class,final,index,request,update,index,request,translate,action,final,index,response,index,response,new,index,response,primary,shard,id,update,index,request,type,update,index,request,id,result,get,seq,no,primary,get,primary,term,result,get,version,engine,index,result,result,is,created,update,response,new,update,response,index,response,get,shard,info,index,response,get,shard,id,index,response,get,type,index,response,get,id,index,response,get,seq,no,index,response,get,primary,term,index,response,get,version,index,response,get,result,if,update,request,fetch,source,null,update,request,fetch,source,fetch,source,final,bytes,reference,index,source,as,bytes,update,index,request,source,final,tuple,xcontent,type,map,string,object,source,and,content,xcontent,helper,convert,to,map,index,source,as,bytes,true,update,index,request,get,content,type,update,response,set,get,result,update,helper,extract,get,result,update,request,concrete,index,index,response,get,version,source,and,content,v2,source,and,content,v1,index,source,as,bytes,replica,request,new,bulk,item,request,bulk,req,id,update,index,request,else,if,op,type,engine,operation,type,delete,assert,result,instanceof,engine,delete,result,result,get,class,final,delete,request,update,delete,request,translate,action,final,delete,response,delete,response,new,delete,response,primary,shard,id,update,delete,request,type,update,delete,request,id,result,get,seq,no,primary,get,primary,term,result,get,version,engine,delete,result,result,is,found,update,response,new,update,response,delete,response,get,shard,info,delete,response,get,shard,id,delete,response,get,type,delete,response,get,id,delete,response,get,seq,no,delete,response,get,primary,term,delete,response,get,version,delete,response,get,result,final,get,result,get,result,update,helper,extract,get,result,update,request,concrete,index,delete,response,get,version,translate,updated,source,as,map,translate,update,source,content,type,null,update,response,set,get,result,get,result,replica,request,new,bulk,item,request,bulk,req,id,update,delete,request,else,throw,new,illegal,argument,exception,unknown,operation,type,op,type,return,new,bulk,item,result,holder,update,response,result,replica,request
TransportShardBulkAction -> static BulkItemResultHolder processUpdateResponse(final UpdateRequest updateRequest, final String concreteIndex,                                                       final Engine.Result result, final UpdateHelper.Result translate,                                                       final IndexShard primary, final int bulkReqId);1531910483;Creates a new bulk item result from the given requests and result of performing the update operation on the shard.;static BulkItemResultHolder processUpdateResponse(final UpdateRequest updateRequest, final String concreteIndex,_                                                      final Engine.Result result, final UpdateHelper.Result translate,_                                                      final IndexShard primary, final int bulkReqId) {_        assert result.getSeqNo() != SequenceNumbers.UNASSIGNED_SEQ_NO : "failed result should not have a sequence number"___        Engine.Operation.TYPE opType = result.getOperationType()___        final UpdateResponse updateResponse__        final BulkItemRequest replicaRequest___        _        if (opType == Engine.Operation.TYPE.INDEX) {_            assert result instanceof Engine.IndexResult : result.getClass()__            final IndexRequest updateIndexRequest = translate.action()__            final IndexResponse indexResponse = new IndexResponse(primary.shardId(), updateIndexRequest.type(), updateIndexRequest.id(),_                    result.getSeqNo(), primary.getPrimaryTerm(), result.getVersion(), ((Engine.IndexResult) result).isCreated())__            updateResponse = new UpdateResponse(indexResponse.getShardInfo(), indexResponse.getShardId(), indexResponse.getType(),_                    indexResponse.getId(), indexResponse.getSeqNo(), indexResponse.getPrimaryTerm(), indexResponse.getVersion(),_                    indexResponse.getResult())___            if (updateRequest.fetchSource() != null && updateRequest.fetchSource().fetchSource()) {_                final BytesReference indexSourceAsBytes = updateIndexRequest.source()__                final Tuple<XContentType, Map<String, Object>> sourceAndContent =_                        XContentHelper.convertToMap(indexSourceAsBytes, true, updateIndexRequest.getContentType())__                updateResponse.setGetResult(UpdateHelper.extractGetResult(updateRequest, concreteIndex,_                                indexResponse.getVersion(), sourceAndContent.v2(), sourceAndContent.v1(), indexSourceAsBytes))__            }_            _            replicaRequest = new BulkItemRequest(bulkReqId, updateIndexRequest)___        } else if (opType == Engine.Operation.TYPE.DELETE) {_            assert result instanceof Engine.DeleteResult : result.getClass()__            final DeleteRequest updateDeleteRequest = translate.action()___            final DeleteResponse deleteResponse = new DeleteResponse(primary.shardId(), updateDeleteRequest.type(), updateDeleteRequest.id(),_                    result.getSeqNo(), primary.getPrimaryTerm(), result.getVersion(), ((Engine.DeleteResult) result).isFound())___            updateResponse = new UpdateResponse(deleteResponse.getShardInfo(), deleteResponse.getShardId(),_                    deleteResponse.getType(), deleteResponse.getId(), deleteResponse.getSeqNo(), deleteResponse.getPrimaryTerm(),_                    deleteResponse.getVersion(), deleteResponse.getResult())___            final GetResult getResult = UpdateHelper.extractGetResult(updateRequest, concreteIndex, deleteResponse.getVersion(),_                    translate.updatedSourceAsMap(), translate.updateSourceContentType(), null)___            updateResponse.setGetResult(getResult)__            _            replicaRequest = new BulkItemRequest(bulkReqId, updateDeleteRequest)___        } else {_            throw new IllegalArgumentException("unknown operation type: " + opType)__        }__        return new BulkItemResultHolder(updateResponse, result, replicaRequest)__    };creates,a,new,bulk,item,result,from,the,given,requests,and,result,of,performing,the,update,operation,on,the,shard;static,bulk,item,result,holder,process,update,response,final,update,request,update,request,final,string,concrete,index,final,engine,result,result,final,update,helper,result,translate,final,index,shard,primary,final,int,bulk,req,id,assert,result,get,seq,no,sequence,numbers,failed,result,should,not,have,a,sequence,number,engine,operation,type,op,type,result,get,operation,type,final,update,response,update,response,final,bulk,item,request,replica,request,if,op,type,engine,operation,type,index,assert,result,instanceof,engine,index,result,result,get,class,final,index,request,update,index,request,translate,action,final,index,response,index,response,new,index,response,primary,shard,id,update,index,request,type,update,index,request,id,result,get,seq,no,primary,get,primary,term,result,get,version,engine,index,result,result,is,created,update,response,new,update,response,index,response,get,shard,info,index,response,get,shard,id,index,response,get,type,index,response,get,id,index,response,get,seq,no,index,response,get,primary,term,index,response,get,version,index,response,get,result,if,update,request,fetch,source,null,update,request,fetch,source,fetch,source,final,bytes,reference,index,source,as,bytes,update,index,request,source,final,tuple,xcontent,type,map,string,object,source,and,content,xcontent,helper,convert,to,map,index,source,as,bytes,true,update,index,request,get,content,type,update,response,set,get,result,update,helper,extract,get,result,update,request,concrete,index,index,response,get,version,source,and,content,v2,source,and,content,v1,index,source,as,bytes,replica,request,new,bulk,item,request,bulk,req,id,update,index,request,else,if,op,type,engine,operation,type,delete,assert,result,instanceof,engine,delete,result,result,get,class,final,delete,request,update,delete,request,translate,action,final,delete,response,delete,response,new,delete,response,primary,shard,id,update,delete,request,type,update,delete,request,id,result,get,seq,no,primary,get,primary,term,result,get,version,engine,delete,result,result,is,found,update,response,new,update,response,delete,response,get,shard,info,delete,response,get,shard,id,delete,response,get,type,delete,response,get,id,delete,response,get,seq,no,delete,response,get,primary,term,delete,response,get,version,delete,response,get,result,final,get,result,get,result,update,helper,extract,get,result,update,request,concrete,index,delete,response,get,version,translate,updated,source,as,map,translate,update,source,content,type,null,update,response,set,get,result,get,result,replica,request,new,bulk,item,request,bulk,req,id,update,delete,request,else,throw,new,illegal,argument,exception,unknown,operation,type,op,type,return,new,bulk,item,result,holder,update,response,result,replica,request
TransportShardBulkAction -> static BulkItemResultHolder processUpdateResponse(final UpdateRequest updateRequest, final String concreteIndex,                                                       final Engine.Result result, final UpdateHelper.Result translate,                                                       final IndexShard primary, final int bulkReqId);1533295538;Creates a new bulk item result from the given requests and result of performing the update operation on the shard.;static BulkItemResultHolder processUpdateResponse(final UpdateRequest updateRequest, final String concreteIndex,_                                                      final Engine.Result result, final UpdateHelper.Result translate,_                                                      final IndexShard primary, final int bulkReqId) {_        assert result.getSeqNo() != SequenceNumbers.UNASSIGNED_SEQ_NO : "failed result should not have a sequence number"___        Engine.Operation.TYPE opType = result.getOperationType()___        final UpdateResponse updateResponse__        final BulkItemRequest replicaRequest___        _        if (opType == Engine.Operation.TYPE.INDEX) {_            assert result instanceof Engine.IndexResult : result.getClass()__            final IndexRequest updateIndexRequest = translate.action()__            final IndexResponse indexResponse = new IndexResponse(primary.shardId(), updateIndexRequest.type(), updateIndexRequest.id(),_                    result.getSeqNo(), result.getTerm(), result.getVersion(), ((Engine.IndexResult) result).isCreated())__            updateResponse = new UpdateResponse(indexResponse.getShardInfo(), indexResponse.getShardId(), indexResponse.getType(),_                    indexResponse.getId(), indexResponse.getSeqNo(), indexResponse.getPrimaryTerm(), indexResponse.getVersion(),_                    indexResponse.getResult())___            if (updateRequest.fetchSource() != null && updateRequest.fetchSource().fetchSource()) {_                final BytesReference indexSourceAsBytes = updateIndexRequest.source()__                final Tuple<XContentType, Map<String, Object>> sourceAndContent =_                        XContentHelper.convertToMap(indexSourceAsBytes, true, updateIndexRequest.getContentType())__                updateResponse.setGetResult(UpdateHelper.extractGetResult(updateRequest, concreteIndex,_                                indexResponse.getVersion(), sourceAndContent.v2(), sourceAndContent.v1(), indexSourceAsBytes))__            }_            _            replicaRequest = new BulkItemRequest(bulkReqId, updateIndexRequest)___        } else if (opType == Engine.Operation.TYPE.DELETE) {_            assert result instanceof Engine.DeleteResult : result.getClass()__            final DeleteRequest updateDeleteRequest = translate.action()___            final DeleteResponse deleteResponse = new DeleteResponse(primary.shardId(), updateDeleteRequest.type(), updateDeleteRequest.id(),_                    result.getSeqNo(), result.getTerm(), result.getVersion(), ((Engine.DeleteResult) result).isFound())___            updateResponse = new UpdateResponse(deleteResponse.getShardInfo(), deleteResponse.getShardId(),_                    deleteResponse.getType(), deleteResponse.getId(), deleteResponse.getSeqNo(), deleteResponse.getPrimaryTerm(),_                    deleteResponse.getVersion(), deleteResponse.getResult())___            final GetResult getResult = UpdateHelper.extractGetResult(updateRequest, concreteIndex, deleteResponse.getVersion(),_                    translate.updatedSourceAsMap(), translate.updateSourceContentType(), null)___            updateResponse.setGetResult(getResult)__            _            replicaRequest = new BulkItemRequest(bulkReqId, updateDeleteRequest)___        } else {_            throw new IllegalArgumentException("unknown operation type: " + opType)__        }__        return new BulkItemResultHolder(updateResponse, result, replicaRequest)__    };creates,a,new,bulk,item,result,from,the,given,requests,and,result,of,performing,the,update,operation,on,the,shard;static,bulk,item,result,holder,process,update,response,final,update,request,update,request,final,string,concrete,index,final,engine,result,result,final,update,helper,result,translate,final,index,shard,primary,final,int,bulk,req,id,assert,result,get,seq,no,sequence,numbers,failed,result,should,not,have,a,sequence,number,engine,operation,type,op,type,result,get,operation,type,final,update,response,update,response,final,bulk,item,request,replica,request,if,op,type,engine,operation,type,index,assert,result,instanceof,engine,index,result,result,get,class,final,index,request,update,index,request,translate,action,final,index,response,index,response,new,index,response,primary,shard,id,update,index,request,type,update,index,request,id,result,get,seq,no,result,get,term,result,get,version,engine,index,result,result,is,created,update,response,new,update,response,index,response,get,shard,info,index,response,get,shard,id,index,response,get,type,index,response,get,id,index,response,get,seq,no,index,response,get,primary,term,index,response,get,version,index,response,get,result,if,update,request,fetch,source,null,update,request,fetch,source,fetch,source,final,bytes,reference,index,source,as,bytes,update,index,request,source,final,tuple,xcontent,type,map,string,object,source,and,content,xcontent,helper,convert,to,map,index,source,as,bytes,true,update,index,request,get,content,type,update,response,set,get,result,update,helper,extract,get,result,update,request,concrete,index,index,response,get,version,source,and,content,v2,source,and,content,v1,index,source,as,bytes,replica,request,new,bulk,item,request,bulk,req,id,update,index,request,else,if,op,type,engine,operation,type,delete,assert,result,instanceof,engine,delete,result,result,get,class,final,delete,request,update,delete,request,translate,action,final,delete,response,delete,response,new,delete,response,primary,shard,id,update,delete,request,type,update,delete,request,id,result,get,seq,no,result,get,term,result,get,version,engine,delete,result,result,is,found,update,response,new,update,response,delete,response,get,shard,info,delete,response,get,shard,id,delete,response,get,type,delete,response,get,id,delete,response,get,seq,no,delete,response,get,primary,term,delete,response,get,version,delete,response,get,result,final,get,result,get,result,update,helper,extract,get,result,update,request,concrete,index,delete,response,get,version,translate,updated,source,as,map,translate,update,source,content,type,null,update,response,set,get,result,get,result,replica,request,new,bulk,item,request,bulk,req,id,update,delete,request,else,throw,new,illegal,argument,exception,unknown,operation,type,op,type,return,new,bulk,item,result,holder,update,response,result,replica,request
TransportShardBulkAction -> static BulkItemResponse createPrimaryResponse(BulkItemResultHolder bulkItemResult,                                                   final DocWriteRequest.OpType opType,                                                   BulkShardRequest request);1524684173;Creates a BulkItemResponse for the primary operation and returns it. If no bulk response is_needed (because one already exists and the operation failed), then return null.;static BulkItemResponse createPrimaryResponse(BulkItemResultHolder bulkItemResult,_                                                  final DocWriteRequest.OpType opType,_                                                  BulkShardRequest request) {_        final Engine.Result operationResult = bulkItemResult.operationResult__        final DocWriteResponse response = bulkItemResult.response__        final BulkItemRequest replicaRequest = bulkItemResult.replicaRequest___        if (operationResult == null) { _            assert response.getResult() == DocWriteResponse.Result.NOOP : "only noop updates can have a null operation"__            return new BulkItemResponse(replicaRequest.id(), opType, response)___        } else if (operationResult.hasFailure() == false) {_            BulkItemResponse primaryResponse = new BulkItemResponse(replicaRequest.id(), opType, response)__            _            primaryResponse.getResponse().setShardInfo(new ShardInfo())__            return primaryResponse___        } else {_            DocWriteRequest docWriteRequest = replicaRequest.request()__            Exception failure = operationResult.getFailure()__            if (isConflictException(failure)) {_                logger.trace(() -> new ParameterizedMessage("{} failed to execute bulk item ({}) {}",_                    request.shardId(), docWriteRequest.opType().getLowercase(), request), failure)__            } else {_                logger.debug(() -> new ParameterizedMessage("{} failed to execute bulk item ({}) {}",_                    request.shardId(), docWriteRequest.opType().getLowercase(), request), failure)__            }__            _            _            _            if (replicaRequest.getPrimaryResponse() == null || isConflictException(failure) == false) {_                return new BulkItemResponse(replicaRequest.id(), docWriteRequest.opType(),_                        _                        _                        _                        new BulkItemResponse.Failure(request.index(), docWriteRequest.type(), docWriteRequest.id(),_                                failure, operationResult.getSeqNo()))__            } else {_                assert replicaRequest.getPrimaryResponse() != null : "replica request must have a primary response"__                return null__            }_        }_    };creates,a,bulk,item,response,for,the,primary,operation,and,returns,it,if,no,bulk,response,is,needed,because,one,already,exists,and,the,operation,failed,then,return,null;static,bulk,item,response,create,primary,response,bulk,item,result,holder,bulk,item,result,final,doc,write,request,op,type,op,type,bulk,shard,request,request,final,engine,result,operation,result,bulk,item,result,operation,result,final,doc,write,response,response,bulk,item,result,response,final,bulk,item,request,replica,request,bulk,item,result,replica,request,if,operation,result,null,assert,response,get,result,doc,write,response,result,noop,only,noop,updates,can,have,a,null,operation,return,new,bulk,item,response,replica,request,id,op,type,response,else,if,operation,result,has,failure,false,bulk,item,response,primary,response,new,bulk,item,response,replica,request,id,op,type,response,primary,response,get,response,set,shard,info,new,shard,info,return,primary,response,else,doc,write,request,doc,write,request,replica,request,request,exception,failure,operation,result,get,failure,if,is,conflict,exception,failure,logger,trace,new,parameterized,message,failed,to,execute,bulk,item,request,shard,id,doc,write,request,op,type,get,lowercase,request,failure,else,logger,debug,new,parameterized,message,failed,to,execute,bulk,item,request,shard,id,doc,write,request,op,type,get,lowercase,request,failure,if,replica,request,get,primary,response,null,is,conflict,exception,failure,false,return,new,bulk,item,response,replica,request,id,doc,write,request,op,type,new,bulk,item,response,failure,request,index,doc,write,request,type,doc,write,request,id,failure,operation,result,get,seq,no,else,assert,replica,request,get,primary,response,null,replica,request,must,have,a,primary,response,return,null
TransportShardBulkAction -> static BulkItemResponse createPrimaryResponse(BulkItemResultHolder bulkItemResult,                                                   final DocWriteRequest.OpType opType,                                                   BulkShardRequest request);1525162917;Creates a BulkItemResponse for the primary operation and returns it. If no bulk response is_needed (because one already exists and the operation failed), then return null.;static BulkItemResponse createPrimaryResponse(BulkItemResultHolder bulkItemResult,_                                                  final DocWriteRequest.OpType opType,_                                                  BulkShardRequest request) {_        final Engine.Result operationResult = bulkItemResult.operationResult__        final DocWriteResponse response = bulkItemResult.response__        final BulkItemRequest replicaRequest = bulkItemResult.replicaRequest___        if (operationResult == null) { _            assert response.getResult() == DocWriteResponse.Result.NOOP : "only noop updates can have a null operation"__            return new BulkItemResponse(replicaRequest.id(), opType, response)___        } else if (operationResult.getResultType() == Engine.Result.Type.SUCCESS) {_            BulkItemResponse primaryResponse = new BulkItemResponse(replicaRequest.id(), opType, response)__            _            primaryResponse.getResponse().setShardInfo(new ShardInfo())__            return primaryResponse___        } else if (operationResult.getResultType() == Engine.Result.Type.FAILURE) {_            DocWriteRequest docWriteRequest = replicaRequest.request()__            Exception failure = operationResult.getFailure()__            if (isConflictException(failure)) {_                logger.trace(() -> new ParameterizedMessage("{} failed to execute bulk item ({}) {}",_                    request.shardId(), docWriteRequest.opType().getLowercase(), request), failure)__            } else {_                logger.debug(() -> new ParameterizedMessage("{} failed to execute bulk item ({}) {}",_                    request.shardId(), docWriteRequest.opType().getLowercase(), request), failure)__            }__            _            _            _            if (replicaRequest.getPrimaryResponse() == null || isConflictException(failure) == false) {_                return new BulkItemResponse(replicaRequest.id(), docWriteRequest.opType(),_                        _                        _                        _                        new BulkItemResponse.Failure(request.index(), docWriteRequest.type(), docWriteRequest.id(),_                                failure, operationResult.getSeqNo()))__            } else {_                assert replicaRequest.getPrimaryResponse() != null : "replica request must have a primary response"__                return null__            }_        } else {_            throw new AssertionError("unknown result type for " + request + ": " + operationResult.getResultType())__        }_    };creates,a,bulk,item,response,for,the,primary,operation,and,returns,it,if,no,bulk,response,is,needed,because,one,already,exists,and,the,operation,failed,then,return,null;static,bulk,item,response,create,primary,response,bulk,item,result,holder,bulk,item,result,final,doc,write,request,op,type,op,type,bulk,shard,request,request,final,engine,result,operation,result,bulk,item,result,operation,result,final,doc,write,response,response,bulk,item,result,response,final,bulk,item,request,replica,request,bulk,item,result,replica,request,if,operation,result,null,assert,response,get,result,doc,write,response,result,noop,only,noop,updates,can,have,a,null,operation,return,new,bulk,item,response,replica,request,id,op,type,response,else,if,operation,result,get,result,type,engine,result,type,success,bulk,item,response,primary,response,new,bulk,item,response,replica,request,id,op,type,response,primary,response,get,response,set,shard,info,new,shard,info,return,primary,response,else,if,operation,result,get,result,type,engine,result,type,failure,doc,write,request,doc,write,request,replica,request,request,exception,failure,operation,result,get,failure,if,is,conflict,exception,failure,logger,trace,new,parameterized,message,failed,to,execute,bulk,item,request,shard,id,doc,write,request,op,type,get,lowercase,request,failure,else,logger,debug,new,parameterized,message,failed,to,execute,bulk,item,request,shard,id,doc,write,request,op,type,get,lowercase,request,failure,if,replica,request,get,primary,response,null,is,conflict,exception,failure,false,return,new,bulk,item,response,replica,request,id,doc,write,request,op,type,new,bulk,item,response,failure,request,index,doc,write,request,type,doc,write,request,id,failure,operation,result,get,seq,no,else,assert,replica,request,get,primary,response,null,replica,request,must,have,a,primary,response,return,null,else,throw,new,assertion,error,unknown,result,type,for,request,operation,result,get,result,type
TransportShardBulkAction -> static BulkItemResponse createPrimaryResponse(BulkItemResultHolder bulkItemResult,                                                   final DocWriteRequest.OpType opType,                                                   BulkShardRequest request);1526029249;Creates a BulkItemResponse for the primary operation and returns it. If no bulk response is_needed (because one already exists and the operation failed), then return null.;static BulkItemResponse createPrimaryResponse(BulkItemResultHolder bulkItemResult,_                                                  final DocWriteRequest.OpType opType,_                                                  BulkShardRequest request) {_        final Engine.Result operationResult = bulkItemResult.operationResult__        final DocWriteResponse response = bulkItemResult.response__        final BulkItemRequest replicaRequest = bulkItemResult.replicaRequest___        if (operationResult == null) { _            assert response.getResult() == DocWriteResponse.Result.NOOP : "only noop updates can have a null operation"__            return new BulkItemResponse(replicaRequest.id(), opType, response)___        } else if (operationResult.getResultType() == Engine.Result.Type.SUCCESS) {_            BulkItemResponse primaryResponse = new BulkItemResponse(replicaRequest.id(), opType, response)__            _            primaryResponse.getResponse().setShardInfo(new ShardInfo())__            return primaryResponse___        } else if (operationResult.getResultType() == Engine.Result.Type.FAILURE) {_            DocWriteRequest docWriteRequest = replicaRequest.request()__            Exception failure = operationResult.getFailure()__            if (isConflictException(failure)) {_                logger.trace(() -> new ParameterizedMessage("{} failed to execute bulk item ({}) {}",_                    request.shardId(), docWriteRequest.opType().getLowercase(), request), failure)__            } else {_                logger.debug(() -> new ParameterizedMessage("{} failed to execute bulk item ({}) {}",_                    request.shardId(), docWriteRequest.opType().getLowercase(), request), failure)__            }__            _            _            _            if (replicaRequest.getPrimaryResponse() == null || isConflictException(failure) == false) {_                return new BulkItemResponse(replicaRequest.id(), docWriteRequest.opType(),_                        _                        _                        _                        new BulkItemResponse.Failure(request.index(), docWriteRequest.type(), docWriteRequest.id(),_                                failure, operationResult.getSeqNo()))__            } else {_                assert replicaRequest.getPrimaryResponse() != null : "replica request must have a primary response"__                return null__            }_        } else {_            throw new AssertionError("unknown result type for " + request + ": " + operationResult.getResultType())__        }_    };creates,a,bulk,item,response,for,the,primary,operation,and,returns,it,if,no,bulk,response,is,needed,because,one,already,exists,and,the,operation,failed,then,return,null;static,bulk,item,response,create,primary,response,bulk,item,result,holder,bulk,item,result,final,doc,write,request,op,type,op,type,bulk,shard,request,request,final,engine,result,operation,result,bulk,item,result,operation,result,final,doc,write,response,response,bulk,item,result,response,final,bulk,item,request,replica,request,bulk,item,result,replica,request,if,operation,result,null,assert,response,get,result,doc,write,response,result,noop,only,noop,updates,can,have,a,null,operation,return,new,bulk,item,response,replica,request,id,op,type,response,else,if,operation,result,get,result,type,engine,result,type,success,bulk,item,response,primary,response,new,bulk,item,response,replica,request,id,op,type,response,primary,response,get,response,set,shard,info,new,shard,info,return,primary,response,else,if,operation,result,get,result,type,engine,result,type,failure,doc,write,request,doc,write,request,replica,request,request,exception,failure,operation,result,get,failure,if,is,conflict,exception,failure,logger,trace,new,parameterized,message,failed,to,execute,bulk,item,request,shard,id,doc,write,request,op,type,get,lowercase,request,failure,else,logger,debug,new,parameterized,message,failed,to,execute,bulk,item,request,shard,id,doc,write,request,op,type,get,lowercase,request,failure,if,replica,request,get,primary,response,null,is,conflict,exception,failure,false,return,new,bulk,item,response,replica,request,id,doc,write,request,op,type,new,bulk,item,response,failure,request,index,doc,write,request,type,doc,write,request,id,failure,operation,result,get,seq,no,else,assert,replica,request,get,primary,response,null,replica,request,must,have,a,primary,response,return,null,else,throw,new,assertion,error,unknown,result,type,for,request,operation,result,get,result,type
TransportShardBulkAction -> static BulkItemResponse createPrimaryResponse(BulkItemResultHolder bulkItemResult,                                                   final DocWriteRequest.OpType opType,                                                   BulkShardRequest request);1528706846;Creates a BulkItemResponse for the primary operation and returns it. If no bulk response is_needed (because one already exists and the operation failed), then return null.;static BulkItemResponse createPrimaryResponse(BulkItemResultHolder bulkItemResult,_                                                  final DocWriteRequest.OpType opType,_                                                  BulkShardRequest request) {_        final Engine.Result operationResult = bulkItemResult.operationResult__        final DocWriteResponse response = bulkItemResult.response__        final BulkItemRequest replicaRequest = bulkItemResult.replicaRequest___        if (operationResult == null) { _            assert response.getResult() == DocWriteResponse.Result.NOOP : "only noop updates can have a null operation"__            return new BulkItemResponse(replicaRequest.id(), opType, response)___        } else if (operationResult.getResultType() == Engine.Result.Type.SUCCESS) {_            BulkItemResponse primaryResponse = new BulkItemResponse(replicaRequest.id(), opType, response)__            _            primaryResponse.getResponse().setShardInfo(new ShardInfo())__            return primaryResponse___        } else if (operationResult.getResultType() == Engine.Result.Type.FAILURE) {_            DocWriteRequest docWriteRequest = replicaRequest.request()__            Exception failure = operationResult.getFailure()__            if (isConflictException(failure)) {_                logger.trace(() -> new ParameterizedMessage("{} failed to execute bulk item ({}) {}",_                    request.shardId(), docWriteRequest.opType().getLowercase(), request), failure)__            } else {_                logger.debug(() -> new ParameterizedMessage("{} failed to execute bulk item ({}) {}",_                    request.shardId(), docWriteRequest.opType().getLowercase(), request), failure)__            }__            _            _            _            if (replicaRequest.getPrimaryResponse() == null || isConflictException(failure) == false) {_                return new BulkItemResponse(replicaRequest.id(), docWriteRequest.opType(),_                        _                        _                        _                        new BulkItemResponse.Failure(request.index(), docWriteRequest.type(), docWriteRequest.id(),_                                failure, operationResult.getSeqNo()))__            } else {_                assert replicaRequest.getPrimaryResponse() != null : "replica request must have a primary response"__                return null__            }_        } else {_            throw new AssertionError("unknown result type for " + request + ": " + operationResult.getResultType())__        }_    };creates,a,bulk,item,response,for,the,primary,operation,and,returns,it,if,no,bulk,response,is,needed,because,one,already,exists,and,the,operation,failed,then,return,null;static,bulk,item,response,create,primary,response,bulk,item,result,holder,bulk,item,result,final,doc,write,request,op,type,op,type,bulk,shard,request,request,final,engine,result,operation,result,bulk,item,result,operation,result,final,doc,write,response,response,bulk,item,result,response,final,bulk,item,request,replica,request,bulk,item,result,replica,request,if,operation,result,null,assert,response,get,result,doc,write,response,result,noop,only,noop,updates,can,have,a,null,operation,return,new,bulk,item,response,replica,request,id,op,type,response,else,if,operation,result,get,result,type,engine,result,type,success,bulk,item,response,primary,response,new,bulk,item,response,replica,request,id,op,type,response,primary,response,get,response,set,shard,info,new,shard,info,return,primary,response,else,if,operation,result,get,result,type,engine,result,type,failure,doc,write,request,doc,write,request,replica,request,request,exception,failure,operation,result,get,failure,if,is,conflict,exception,failure,logger,trace,new,parameterized,message,failed,to,execute,bulk,item,request,shard,id,doc,write,request,op,type,get,lowercase,request,failure,else,logger,debug,new,parameterized,message,failed,to,execute,bulk,item,request,shard,id,doc,write,request,op,type,get,lowercase,request,failure,if,replica,request,get,primary,response,null,is,conflict,exception,failure,false,return,new,bulk,item,response,replica,request,id,doc,write,request,op,type,new,bulk,item,response,failure,request,index,doc,write,request,type,doc,write,request,id,failure,operation,result,get,seq,no,else,assert,replica,request,get,primary,response,null,replica,request,must,have,a,primary,response,return,null,else,throw,new,assertion,error,unknown,result,type,for,request,operation,result,get,result,type
TransportShardBulkAction -> static BulkItemResponse createPrimaryResponse(BulkItemResultHolder bulkItemResult,                                                   final DocWriteRequest.OpType opType,                                                   BulkShardRequest request);1528977744;Creates a BulkItemResponse for the primary operation and returns it. If no bulk response is_needed (because one already exists and the operation failed), then return null.;static BulkItemResponse createPrimaryResponse(BulkItemResultHolder bulkItemResult,_                                                  final DocWriteRequest.OpType opType,_                                                  BulkShardRequest request) {_        final Engine.Result operationResult = bulkItemResult.operationResult__        final DocWriteResponse response = bulkItemResult.response__        final BulkItemRequest replicaRequest = bulkItemResult.replicaRequest___        if (operationResult == null) { _            assert response.getResult() == DocWriteResponse.Result.NOOP : "only noop updates can have a null operation"__            return new BulkItemResponse(replicaRequest.id(), opType, response)___        } else if (operationResult.getResultType() == Engine.Result.Type.SUCCESS) {_            BulkItemResponse primaryResponse = new BulkItemResponse(replicaRequest.id(), opType, response)__            _            primaryResponse.getResponse().setShardInfo(new ShardInfo())__            return primaryResponse___        } else if (operationResult.getResultType() == Engine.Result.Type.FAILURE) {_            DocWriteRequest docWriteRequest = replicaRequest.request()__            Exception failure = operationResult.getFailure()__            if (isConflictException(failure)) {_                logger.trace(() -> new ParameterizedMessage("{} failed to execute bulk item ({}) {}",_                    request.shardId(), docWriteRequest.opType().getLowercase(), request), failure)__            } else {_                logger.debug(() -> new ParameterizedMessage("{} failed to execute bulk item ({}) {}",_                    request.shardId(), docWriteRequest.opType().getLowercase(), request), failure)__            }__            _            _            _            if (replicaRequest.getPrimaryResponse() == null || isConflictException(failure) == false) {_                return new BulkItemResponse(replicaRequest.id(), docWriteRequest.opType(),_                        _                        _                        _                        new BulkItemResponse.Failure(request.index(), docWriteRequest.type(), docWriteRequest.id(),_                                failure, operationResult.getSeqNo()))__            } else {_                assert replicaRequest.getPrimaryResponse() != null : "replica request must have a primary response"__                return null__            }_        } else {_            throw new AssertionError("unknown result type for " + request + ": " + operationResult.getResultType())__        }_    };creates,a,bulk,item,response,for,the,primary,operation,and,returns,it,if,no,bulk,response,is,needed,because,one,already,exists,and,the,operation,failed,then,return,null;static,bulk,item,response,create,primary,response,bulk,item,result,holder,bulk,item,result,final,doc,write,request,op,type,op,type,bulk,shard,request,request,final,engine,result,operation,result,bulk,item,result,operation,result,final,doc,write,response,response,bulk,item,result,response,final,bulk,item,request,replica,request,bulk,item,result,replica,request,if,operation,result,null,assert,response,get,result,doc,write,response,result,noop,only,noop,updates,can,have,a,null,operation,return,new,bulk,item,response,replica,request,id,op,type,response,else,if,operation,result,get,result,type,engine,result,type,success,bulk,item,response,primary,response,new,bulk,item,response,replica,request,id,op,type,response,primary,response,get,response,set,shard,info,new,shard,info,return,primary,response,else,if,operation,result,get,result,type,engine,result,type,failure,doc,write,request,doc,write,request,replica,request,request,exception,failure,operation,result,get,failure,if,is,conflict,exception,failure,logger,trace,new,parameterized,message,failed,to,execute,bulk,item,request,shard,id,doc,write,request,op,type,get,lowercase,request,failure,else,logger,debug,new,parameterized,message,failed,to,execute,bulk,item,request,shard,id,doc,write,request,op,type,get,lowercase,request,failure,if,replica,request,get,primary,response,null,is,conflict,exception,failure,false,return,new,bulk,item,response,replica,request,id,doc,write,request,op,type,new,bulk,item,response,failure,request,index,doc,write,request,type,doc,write,request,id,failure,operation,result,get,seq,no,else,assert,replica,request,get,primary,response,null,replica,request,must,have,a,primary,response,return,null,else,throw,new,assertion,error,unknown,result,type,for,request,operation,result,get,result,type
TransportShardBulkAction -> static BulkItemResponse createPrimaryResponse(BulkItemResultHolder bulkItemResult,                                                   final DocWriteRequest.OpType opType,                                                   BulkShardRequest request);1529658035;Creates a BulkItemResponse for the primary operation and returns it. If no bulk response is_needed (because one already exists and the operation failed), then return null.;static BulkItemResponse createPrimaryResponse(BulkItemResultHolder bulkItemResult,_                                                  final DocWriteRequest.OpType opType,_                                                  BulkShardRequest request) {_        final Engine.Result operationResult = bulkItemResult.operationResult__        final DocWriteResponse response = bulkItemResult.response__        final BulkItemRequest replicaRequest = bulkItemResult.replicaRequest___        if (operationResult == null) { _            assert response.getResult() == DocWriteResponse.Result.NOOP : "only noop updates can have a null operation"__            return new BulkItemResponse(replicaRequest.id(), opType, response)___        } else if (operationResult.getResultType() == Engine.Result.Type.SUCCESS) {_            BulkItemResponse primaryResponse = new BulkItemResponse(replicaRequest.id(), opType, response)__            _            primaryResponse.getResponse().setShardInfo(new ShardInfo())__            return primaryResponse___        } else if (operationResult.getResultType() == Engine.Result.Type.FAILURE) {_            DocWriteRequest docWriteRequest = replicaRequest.request()__            Exception failure = operationResult.getFailure()__            if (isConflictException(failure)) {_                logger.trace(() -> new ParameterizedMessage("{} failed to execute bulk item ({}) {}",_                    request.shardId(), docWriteRequest.opType().getLowercase(), request), failure)__            } else {_                logger.debug(() -> new ParameterizedMessage("{} failed to execute bulk item ({}) {}",_                    request.shardId(), docWriteRequest.opType().getLowercase(), request), failure)__            }__            _            _            _            if (replicaRequest.getPrimaryResponse() == null || isConflictException(failure) == false) {_                return new BulkItemResponse(replicaRequest.id(), docWriteRequest.opType(),_                        _                        _                        _                        new BulkItemResponse.Failure(request.index(), docWriteRequest.type(), docWriteRequest.id(),_                                failure, operationResult.getSeqNo()))__            } else {_                assert replicaRequest.getPrimaryResponse() != null : "replica request must have a primary response"__                return null__            }_        } else {_            throw new AssertionError("unknown result type for " + request + ": " + operationResult.getResultType())__        }_    };creates,a,bulk,item,response,for,the,primary,operation,and,returns,it,if,no,bulk,response,is,needed,because,one,already,exists,and,the,operation,failed,then,return,null;static,bulk,item,response,create,primary,response,bulk,item,result,holder,bulk,item,result,final,doc,write,request,op,type,op,type,bulk,shard,request,request,final,engine,result,operation,result,bulk,item,result,operation,result,final,doc,write,response,response,bulk,item,result,response,final,bulk,item,request,replica,request,bulk,item,result,replica,request,if,operation,result,null,assert,response,get,result,doc,write,response,result,noop,only,noop,updates,can,have,a,null,operation,return,new,bulk,item,response,replica,request,id,op,type,response,else,if,operation,result,get,result,type,engine,result,type,success,bulk,item,response,primary,response,new,bulk,item,response,replica,request,id,op,type,response,primary,response,get,response,set,shard,info,new,shard,info,return,primary,response,else,if,operation,result,get,result,type,engine,result,type,failure,doc,write,request,doc,write,request,replica,request,request,exception,failure,operation,result,get,failure,if,is,conflict,exception,failure,logger,trace,new,parameterized,message,failed,to,execute,bulk,item,request,shard,id,doc,write,request,op,type,get,lowercase,request,failure,else,logger,debug,new,parameterized,message,failed,to,execute,bulk,item,request,shard,id,doc,write,request,op,type,get,lowercase,request,failure,if,replica,request,get,primary,response,null,is,conflict,exception,failure,false,return,new,bulk,item,response,replica,request,id,doc,write,request,op,type,new,bulk,item,response,failure,request,index,doc,write,request,type,doc,write,request,id,failure,operation,result,get,seq,no,else,assert,replica,request,get,primary,response,null,replica,request,must,have,a,primary,response,return,null,else,throw,new,assertion,error,unknown,result,type,for,request,operation,result,get,result,type
TransportShardBulkAction -> static BulkItemResponse createPrimaryResponse(BulkItemResultHolder bulkItemResult,                                                   final DocWriteRequest.OpType opType,                                                   BulkShardRequest request);1531179852;Creates a BulkItemResponse for the primary operation and returns it. If no bulk response is_needed (because one already exists and the operation failed), then return null.;static BulkItemResponse createPrimaryResponse(BulkItemResultHolder bulkItemResult,_                                                  final DocWriteRequest.OpType opType,_                                                  BulkShardRequest request) {_        final Engine.Result operationResult = bulkItemResult.operationResult__        final DocWriteResponse response = bulkItemResult.response__        final BulkItemRequest replicaRequest = bulkItemResult.replicaRequest___        if (operationResult == null) { _            assert response.getResult() == DocWriteResponse.Result.NOOP : "only noop updates can have a null operation"__            return new BulkItemResponse(replicaRequest.id(), opType, response)___        } else if (operationResult.getResultType() == Engine.Result.Type.SUCCESS) {_            BulkItemResponse primaryResponse = new BulkItemResponse(replicaRequest.id(), opType, response)__            _            primaryResponse.getResponse().setShardInfo(new ShardInfo())__            return primaryResponse___        } else if (operationResult.getResultType() == Engine.Result.Type.FAILURE) {_            DocWriteRequest<?> docWriteRequest = replicaRequest.request()__            Exception failure = operationResult.getFailure()__            if (isConflictException(failure)) {_                logger.trace(() -> new ParameterizedMessage("{} failed to execute bulk item ({}) {}",_                    request.shardId(), docWriteRequest.opType().getLowercase(), request), failure)__            } else {_                logger.debug(() -> new ParameterizedMessage("{} failed to execute bulk item ({}) {}",_                    request.shardId(), docWriteRequest.opType().getLowercase(), request), failure)__            }__            _            _            _            if (replicaRequest.getPrimaryResponse() == null || isConflictException(failure) == false) {_                return new BulkItemResponse(replicaRequest.id(), docWriteRequest.opType(),_                        _                        _                        _                        new BulkItemResponse.Failure(request.index(), docWriteRequest.type(), docWriteRequest.id(),_                                failure, operationResult.getSeqNo()))__            } else {_                assert replicaRequest.getPrimaryResponse() != null : "replica request must have a primary response"__                return null__            }_        } else {_            throw new AssertionError("unknown result type for " + request + ": " + operationResult.getResultType())__        }_    };creates,a,bulk,item,response,for,the,primary,operation,and,returns,it,if,no,bulk,response,is,needed,because,one,already,exists,and,the,operation,failed,then,return,null;static,bulk,item,response,create,primary,response,bulk,item,result,holder,bulk,item,result,final,doc,write,request,op,type,op,type,bulk,shard,request,request,final,engine,result,operation,result,bulk,item,result,operation,result,final,doc,write,response,response,bulk,item,result,response,final,bulk,item,request,replica,request,bulk,item,result,replica,request,if,operation,result,null,assert,response,get,result,doc,write,response,result,noop,only,noop,updates,can,have,a,null,operation,return,new,bulk,item,response,replica,request,id,op,type,response,else,if,operation,result,get,result,type,engine,result,type,success,bulk,item,response,primary,response,new,bulk,item,response,replica,request,id,op,type,response,primary,response,get,response,set,shard,info,new,shard,info,return,primary,response,else,if,operation,result,get,result,type,engine,result,type,failure,doc,write,request,doc,write,request,replica,request,request,exception,failure,operation,result,get,failure,if,is,conflict,exception,failure,logger,trace,new,parameterized,message,failed,to,execute,bulk,item,request,shard,id,doc,write,request,op,type,get,lowercase,request,failure,else,logger,debug,new,parameterized,message,failed,to,execute,bulk,item,request,shard,id,doc,write,request,op,type,get,lowercase,request,failure,if,replica,request,get,primary,response,null,is,conflict,exception,failure,false,return,new,bulk,item,response,replica,request,id,doc,write,request,op,type,new,bulk,item,response,failure,request,index,doc,write,request,type,doc,write,request,id,failure,operation,result,get,seq,no,else,assert,replica,request,get,primary,response,null,replica,request,must,have,a,primary,response,return,null,else,throw,new,assertion,error,unknown,result,type,for,request,operation,result,get,result,type
TransportShardBulkAction -> static BulkItemResponse createPrimaryResponse(BulkItemResultHolder bulkItemResult,                                                   final DocWriteRequest.OpType opType,                                                   BulkShardRequest request);1531910483;Creates a BulkItemResponse for the primary operation and returns it. If no bulk response is_needed (because one already exists and the operation failed), then return null.;static BulkItemResponse createPrimaryResponse(BulkItemResultHolder bulkItemResult,_                                                  final DocWriteRequest.OpType opType,_                                                  BulkShardRequest request) {_        final Engine.Result operationResult = bulkItemResult.operationResult__        final DocWriteResponse response = bulkItemResult.response__        final BulkItemRequest replicaRequest = bulkItemResult.replicaRequest___        if (operationResult == null) { _            assert response.getResult() == DocWriteResponse.Result.NOOP : "only noop updates can have a null operation"__            return new BulkItemResponse(replicaRequest.id(), opType, response)___        } else if (operationResult.getResultType() == Engine.Result.Type.SUCCESS) {_            BulkItemResponse primaryResponse = new BulkItemResponse(replicaRequest.id(), opType, response)__            _            primaryResponse.getResponse().setShardInfo(new ShardInfo())__            return primaryResponse___        } else if (operationResult.getResultType() == Engine.Result.Type.FAILURE) {_            DocWriteRequest<?> docWriteRequest = replicaRequest.request()__            Exception failure = operationResult.getFailure()__            if (isConflictException(failure)) {_                logger.trace(() -> new ParameterizedMessage("{} failed to execute bulk item ({}) {}",_                    request.shardId(), docWriteRequest.opType().getLowercase(), request), failure)__            } else {_                logger.debug(() -> new ParameterizedMessage("{} failed to execute bulk item ({}) {}",_                    request.shardId(), docWriteRequest.opType().getLowercase(), request), failure)__            }__            _            _            _            if (replicaRequest.getPrimaryResponse() == null || isConflictException(failure) == false) {_                return new BulkItemResponse(replicaRequest.id(), docWriteRequest.opType(),_                        _                        _                        _                        new BulkItemResponse.Failure(request.index(), docWriteRequest.type(), docWriteRequest.id(),_                                failure, operationResult.getSeqNo()))__            } else {_                assert replicaRequest.getPrimaryResponse() != null : "replica request must have a primary response"__                return null__            }_        } else {_            throw new AssertionError("unknown result type for " + request + ": " + operationResult.getResultType())__        }_    };creates,a,bulk,item,response,for,the,primary,operation,and,returns,it,if,no,bulk,response,is,needed,because,one,already,exists,and,the,operation,failed,then,return,null;static,bulk,item,response,create,primary,response,bulk,item,result,holder,bulk,item,result,final,doc,write,request,op,type,op,type,bulk,shard,request,request,final,engine,result,operation,result,bulk,item,result,operation,result,final,doc,write,response,response,bulk,item,result,response,final,bulk,item,request,replica,request,bulk,item,result,replica,request,if,operation,result,null,assert,response,get,result,doc,write,response,result,noop,only,noop,updates,can,have,a,null,operation,return,new,bulk,item,response,replica,request,id,op,type,response,else,if,operation,result,get,result,type,engine,result,type,success,bulk,item,response,primary,response,new,bulk,item,response,replica,request,id,op,type,response,primary,response,get,response,set,shard,info,new,shard,info,return,primary,response,else,if,operation,result,get,result,type,engine,result,type,failure,doc,write,request,doc,write,request,replica,request,request,exception,failure,operation,result,get,failure,if,is,conflict,exception,failure,logger,trace,new,parameterized,message,failed,to,execute,bulk,item,request,shard,id,doc,write,request,op,type,get,lowercase,request,failure,else,logger,debug,new,parameterized,message,failed,to,execute,bulk,item,request,shard,id,doc,write,request,op,type,get,lowercase,request,failure,if,replica,request,get,primary,response,null,is,conflict,exception,failure,false,return,new,bulk,item,response,replica,request,id,doc,write,request,op,type,new,bulk,item,response,failure,request,index,doc,write,request,type,doc,write,request,id,failure,operation,result,get,seq,no,else,assert,replica,request,get,primary,response,null,replica,request,must,have,a,primary,response,return,null,else,throw,new,assertion,error,unknown,result,type,for,request,operation,result,get,result,type
TransportShardBulkAction -> static BulkItemResponse createPrimaryResponse(BulkItemResultHolder bulkItemResult,                                                   final DocWriteRequest.OpType opType,                                                   BulkShardRequest request);1533295538;Creates a BulkItemResponse for the primary operation and returns it. If no bulk response is_needed (because one already exists and the operation failed), then return null.;static BulkItemResponse createPrimaryResponse(BulkItemResultHolder bulkItemResult,_                                                  final DocWriteRequest.OpType opType,_                                                  BulkShardRequest request) {_        final Engine.Result operationResult = bulkItemResult.operationResult__        final DocWriteResponse response = bulkItemResult.response__        final BulkItemRequest replicaRequest = bulkItemResult.replicaRequest___        if (operationResult == null) { _            assert response.getResult() == DocWriteResponse.Result.NOOP : "only noop updates can have a null operation"__            return new BulkItemResponse(replicaRequest.id(), opType, response)___        } else if (operationResult.getResultType() == Engine.Result.Type.SUCCESS) {_            BulkItemResponse primaryResponse = new BulkItemResponse(replicaRequest.id(), opType, response)__            _            primaryResponse.getResponse().setShardInfo(new ShardInfo())__            return primaryResponse___        } else if (operationResult.getResultType() == Engine.Result.Type.FAILURE) {_            DocWriteRequest<?> docWriteRequest = replicaRequest.request()__            Exception failure = operationResult.getFailure()__            if (isConflictException(failure)) {_                logger.trace(() -> new ParameterizedMessage("{} failed to execute bulk item ({}) {}",_                    request.shardId(), docWriteRequest.opType().getLowercase(), request), failure)__            } else {_                logger.debug(() -> new ParameterizedMessage("{} failed to execute bulk item ({}) {}",_                    request.shardId(), docWriteRequest.opType().getLowercase(), request), failure)__            }__            _            _            _            if (replicaRequest.getPrimaryResponse() == null || isConflictException(failure) == false) {_                return new BulkItemResponse(replicaRequest.id(), docWriteRequest.opType(),_                        _                        _                        _                        new BulkItemResponse.Failure(request.index(), docWriteRequest.type(), docWriteRequest.id(),_                                failure, operationResult.getSeqNo()))__            } else {_                assert replicaRequest.getPrimaryResponse() != null : "replica request must have a primary response"__                return null__            }_        } else {_            throw new AssertionError("unknown result type for " + request + ": " + operationResult.getResultType())__        }_    };creates,a,bulk,item,response,for,the,primary,operation,and,returns,it,if,no,bulk,response,is,needed,because,one,already,exists,and,the,operation,failed,then,return,null;static,bulk,item,response,create,primary,response,bulk,item,result,holder,bulk,item,result,final,doc,write,request,op,type,op,type,bulk,shard,request,request,final,engine,result,operation,result,bulk,item,result,operation,result,final,doc,write,response,response,bulk,item,result,response,final,bulk,item,request,replica,request,bulk,item,result,replica,request,if,operation,result,null,assert,response,get,result,doc,write,response,result,noop,only,noop,updates,can,have,a,null,operation,return,new,bulk,item,response,replica,request,id,op,type,response,else,if,operation,result,get,result,type,engine,result,type,success,bulk,item,response,primary,response,new,bulk,item,response,replica,request,id,op,type,response,primary,response,get,response,set,shard,info,new,shard,info,return,primary,response,else,if,operation,result,get,result,type,engine,result,type,failure,doc,write,request,doc,write,request,replica,request,request,exception,failure,operation,result,get,failure,if,is,conflict,exception,failure,logger,trace,new,parameterized,message,failed,to,execute,bulk,item,request,shard,id,doc,write,request,op,type,get,lowercase,request,failure,else,logger,debug,new,parameterized,message,failed,to,execute,bulk,item,request,shard,id,doc,write,request,op,type,get,lowercase,request,failure,if,replica,request,get,primary,response,null,is,conflict,exception,failure,false,return,new,bulk,item,response,replica,request,id,doc,write,request,op,type,new,bulk,item,response,failure,request,index,doc,write,request,type,doc,write,request,id,failure,operation,result,get,seq,no,else,assert,replica,request,get,primary,response,null,replica,request,must,have,a,primary,response,return,null,else,throw,new,assertion,error,unknown,result,type,for,request,operation,result,get,result,type
TransportShardBulkAction -> static BulkItemResultHolder executeUpdateRequestOnce(UpdateRequest updateRequest, IndexShard primary,                                                          IndexMetaData metaData, String concreteIndex,                                                          UpdateHelper updateHelper, LongSupplier nowInMillis,                                                          BulkItemRequest primaryItemRequest, int bulkReqId,                                                          final MappingUpdatePerformer mappingUpdater) throws Exception;1524684173;Executes update request once, delegating to a index or delete operation after translation._NOOP updates are indicated by returning a <code>null</code> operation in {@link BulkItemResultHolder};static BulkItemResultHolder executeUpdateRequestOnce(UpdateRequest updateRequest, IndexShard primary,_                                                         IndexMetaData metaData, String concreteIndex,_                                                         UpdateHelper updateHelper, LongSupplier nowInMillis,_                                                         BulkItemRequest primaryItemRequest, int bulkReqId,_                                                         final MappingUpdatePerformer mappingUpdater) throws Exception {_        final UpdateHelper.Result translate__        _        try {_            translate = updateHelper.prepare(updateRequest, primary, nowInMillis)__        } catch (Exception failure) {_            _            _            final Engine.Result result = new Engine.IndexResult(failure, updateRequest.version(), SequenceNumbers.UNASSIGNED_SEQ_NO)__            return new BulkItemResultHolder(null, result, primaryItemRequest)__        }__        final Engine.Result result__        _        switch (translate.getResponseResult()) {_            case CREATED:_            case UPDATED:_                IndexRequest indexRequest = translate.action()__                MappingMetaData mappingMd = metaData.mappingOrDefault(indexRequest.type())__                indexRequest.process(metaData.getCreationVersion(), mappingMd, concreteIndex)__                result = executeIndexRequestOnPrimary(indexRequest, primary, mappingUpdater)__                break__            case DELETED:_                DeleteRequest deleteRequest = translate.action()__                result = executeDeleteRequestOnPrimary(deleteRequest, primary, mappingUpdater)__                break__            case NOOP:_                primary.noopUpdate(updateRequest.type())__                result = null__                break__            default: throw new IllegalStateException("Illegal update operation " + translate.getResponseResult())__        }__        if (result == null) {_            _            final UpdateResponse updateResponse = translate.action()__            return new BulkItemResultHolder(updateResponse, result, primaryItemRequest)__        } else if (result.hasFailure()) {_            _            return new BulkItemResultHolder(null, result, primaryItemRequest)__        } else {_            _            return processUpdateResponse(updateRequest, concreteIndex, result, translate, primary, bulkReqId)__        }_    };executes,update,request,once,delegating,to,a,index,or,delete,operation,after,translation,noop,updates,are,indicated,by,returning,a,code,null,code,operation,in,link,bulk,item,result,holder;static,bulk,item,result,holder,execute,update,request,once,update,request,update,request,index,shard,primary,index,meta,data,meta,data,string,concrete,index,update,helper,update,helper,long,supplier,now,in,millis,bulk,item,request,primary,item,request,int,bulk,req,id,final,mapping,update,performer,mapping,updater,throws,exception,final,update,helper,result,translate,try,translate,update,helper,prepare,update,request,primary,now,in,millis,catch,exception,failure,final,engine,result,result,new,engine,index,result,failure,update,request,version,sequence,numbers,return,new,bulk,item,result,holder,null,result,primary,item,request,final,engine,result,result,switch,translate,get,response,result,case,created,case,updated,index,request,index,request,translate,action,mapping,meta,data,mapping,md,meta,data,mapping,or,default,index,request,type,index,request,process,meta,data,get,creation,version,mapping,md,concrete,index,result,execute,index,request,on,primary,index,request,primary,mapping,updater,break,case,deleted,delete,request,delete,request,translate,action,result,execute,delete,request,on,primary,delete,request,primary,mapping,updater,break,case,noop,primary,noop,update,update,request,type,result,null,break,default,throw,new,illegal,state,exception,illegal,update,operation,translate,get,response,result,if,result,null,final,update,response,update,response,translate,action,return,new,bulk,item,result,holder,update,response,result,primary,item,request,else,if,result,has,failure,return,new,bulk,item,result,holder,null,result,primary,item,request,else,return,process,update,response,update,request,concrete,index,result,translate,primary,bulk,req,id
TransportShardBulkAction -> static BulkItemResultHolder executeUpdateRequestOnce(UpdateRequest updateRequest, IndexShard primary,                                                          IndexMetaData metaData, String concreteIndex,                                                          UpdateHelper updateHelper, LongSupplier nowInMillis,                                                          BulkItemRequest primaryItemRequest, int bulkReqId,                                                          final MappingUpdatePerformer mappingUpdater) throws Exception;1525162917;Executes update request once, delegating to a index or delete operation after translation._NOOP updates are indicated by returning a <code>null</code> operation in {@link BulkItemResultHolder};static BulkItemResultHolder executeUpdateRequestOnce(UpdateRequest updateRequest, IndexShard primary,_                                                         IndexMetaData metaData, String concreteIndex,_                                                         UpdateHelper updateHelper, LongSupplier nowInMillis,_                                                         BulkItemRequest primaryItemRequest, int bulkReqId,_                                                         final MappingUpdatePerformer mappingUpdater) throws Exception {_        final UpdateHelper.Result translate__        _        try {_            translate = updateHelper.prepare(updateRequest, primary, nowInMillis)__        } catch (Exception failure) {_            _            _            final Engine.Result result = new Engine.IndexResult(failure, updateRequest.version(), SequenceNumbers.UNASSIGNED_SEQ_NO)__            return new BulkItemResultHolder(null, result, primaryItemRequest)__        }__        final Engine.Result result__        _        switch (translate.getResponseResult()) {_            case CREATED:_            case UPDATED:_                IndexRequest indexRequest = translate.action()__                MappingMetaData mappingMd = metaData.mappingOrDefault(indexRequest.type())__                indexRequest.process(metaData.getCreationVersion(), mappingMd, concreteIndex)__                result = executeIndexRequestOnPrimary(indexRequest, primary, mappingUpdater)__                break__            case DELETED:_                DeleteRequest deleteRequest = translate.action()__                result = executeDeleteRequestOnPrimary(deleteRequest, primary, mappingUpdater)__                break__            case NOOP:_                primary.noopUpdate(updateRequest.type())__                result = null__                break__            default: throw new IllegalStateException("Illegal update operation " + translate.getResponseResult())__        }__        if (result == null) {_            _            final UpdateResponse updateResponse = translate.action()__            return new BulkItemResultHolder(updateResponse, result, primaryItemRequest)__        } else if (result.getResultType() == Engine.Result.Type.FAILURE) {_            _            return new BulkItemResultHolder(null, result, primaryItemRequest)__        } else if (result.getResultType() == Engine.Result.Type.SUCCESS) {_            _            return processUpdateResponse(updateRequest, concreteIndex, result, translate, primary, bulkReqId)__        } else {_            throw new AssertionError("unknown result type for " + updateRequest + ": " + result.getResultType())__        }_    };executes,update,request,once,delegating,to,a,index,or,delete,operation,after,translation,noop,updates,are,indicated,by,returning,a,code,null,code,operation,in,link,bulk,item,result,holder;static,bulk,item,result,holder,execute,update,request,once,update,request,update,request,index,shard,primary,index,meta,data,meta,data,string,concrete,index,update,helper,update,helper,long,supplier,now,in,millis,bulk,item,request,primary,item,request,int,bulk,req,id,final,mapping,update,performer,mapping,updater,throws,exception,final,update,helper,result,translate,try,translate,update,helper,prepare,update,request,primary,now,in,millis,catch,exception,failure,final,engine,result,result,new,engine,index,result,failure,update,request,version,sequence,numbers,return,new,bulk,item,result,holder,null,result,primary,item,request,final,engine,result,result,switch,translate,get,response,result,case,created,case,updated,index,request,index,request,translate,action,mapping,meta,data,mapping,md,meta,data,mapping,or,default,index,request,type,index,request,process,meta,data,get,creation,version,mapping,md,concrete,index,result,execute,index,request,on,primary,index,request,primary,mapping,updater,break,case,deleted,delete,request,delete,request,translate,action,result,execute,delete,request,on,primary,delete,request,primary,mapping,updater,break,case,noop,primary,noop,update,update,request,type,result,null,break,default,throw,new,illegal,state,exception,illegal,update,operation,translate,get,response,result,if,result,null,final,update,response,update,response,translate,action,return,new,bulk,item,result,holder,update,response,result,primary,item,request,else,if,result,get,result,type,engine,result,type,failure,return,new,bulk,item,result,holder,null,result,primary,item,request,else,if,result,get,result,type,engine,result,type,success,return,process,update,response,update,request,concrete,index,result,translate,primary,bulk,req,id,else,throw,new,assertion,error,unknown,result,type,for,update,request,result,get,result,type
TransportShardBulkAction -> static BulkItemResultHolder executeUpdateRequestOnce(UpdateRequest updateRequest, IndexShard primary,                                                          IndexMetaData metaData, String concreteIndex,                                                          UpdateHelper updateHelper, LongSupplier nowInMillis,                                                          BulkItemRequest primaryItemRequest, int bulkReqId,                                                          final MappingUpdatePerformer mappingUpdater) throws Exception;1526029249;Executes update request once, delegating to a index or delete operation after translation._NOOP updates are indicated by returning a <code>null</code> operation in {@link BulkItemResultHolder};static BulkItemResultHolder executeUpdateRequestOnce(UpdateRequest updateRequest, IndexShard primary,_                                                         IndexMetaData metaData, String concreteIndex,_                                                         UpdateHelper updateHelper, LongSupplier nowInMillis,_                                                         BulkItemRequest primaryItemRequest, int bulkReqId,_                                                         final MappingUpdatePerformer mappingUpdater) throws Exception {_        final UpdateHelper.Result translate__        _        try {_            translate = updateHelper.prepare(updateRequest, primary, nowInMillis)__        } catch (Exception failure) {_            _            _            final Engine.Result result = new Engine.IndexResult(failure, updateRequest.version(), SequenceNumbers.UNASSIGNED_SEQ_NO)__            return new BulkItemResultHolder(null, result, primaryItemRequest)__        }__        final Engine.Result result__        _        switch (translate.getResponseResult()) {_            case CREATED:_            case UPDATED:_                IndexRequest indexRequest = translate.action()__                MappingMetaData mappingMd = metaData.mappingOrDefault(indexRequest.type())__                indexRequest.process(metaData.getCreationVersion(), mappingMd, concreteIndex)__                result = executeIndexRequestOnPrimary(indexRequest, primary, mappingUpdater)__                break__            case DELETED:_                DeleteRequest deleteRequest = translate.action()__                result = executeDeleteRequestOnPrimary(deleteRequest, primary, mappingUpdater)__                break__            case NOOP:_                primary.noopUpdate(updateRequest.type())__                result = null__                break__            default: throw new IllegalStateException("Illegal update operation " + translate.getResponseResult())__        }__        if (result == null) {_            _            final UpdateResponse updateResponse = translate.action()__            return new BulkItemResultHolder(updateResponse, result, primaryItemRequest)__        } else if (result.getResultType() == Engine.Result.Type.FAILURE) {_            _            return new BulkItemResultHolder(null, result, primaryItemRequest)__        } else if (result.getResultType() == Engine.Result.Type.SUCCESS) {_            _            return processUpdateResponse(updateRequest, concreteIndex, result, translate, primary, bulkReqId)__        } else {_            throw new AssertionError("unknown result type for " + updateRequest + ": " + result.getResultType())__        }_    };executes,update,request,once,delegating,to,a,index,or,delete,operation,after,translation,noop,updates,are,indicated,by,returning,a,code,null,code,operation,in,link,bulk,item,result,holder;static,bulk,item,result,holder,execute,update,request,once,update,request,update,request,index,shard,primary,index,meta,data,meta,data,string,concrete,index,update,helper,update,helper,long,supplier,now,in,millis,bulk,item,request,primary,item,request,int,bulk,req,id,final,mapping,update,performer,mapping,updater,throws,exception,final,update,helper,result,translate,try,translate,update,helper,prepare,update,request,primary,now,in,millis,catch,exception,failure,final,engine,result,result,new,engine,index,result,failure,update,request,version,sequence,numbers,return,new,bulk,item,result,holder,null,result,primary,item,request,final,engine,result,result,switch,translate,get,response,result,case,created,case,updated,index,request,index,request,translate,action,mapping,meta,data,mapping,md,meta,data,mapping,or,default,index,request,type,index,request,process,meta,data,get,creation,version,mapping,md,concrete,index,result,execute,index,request,on,primary,index,request,primary,mapping,updater,break,case,deleted,delete,request,delete,request,translate,action,result,execute,delete,request,on,primary,delete,request,primary,mapping,updater,break,case,noop,primary,noop,update,update,request,type,result,null,break,default,throw,new,illegal,state,exception,illegal,update,operation,translate,get,response,result,if,result,null,final,update,response,update,response,translate,action,return,new,bulk,item,result,holder,update,response,result,primary,item,request,else,if,result,get,result,type,engine,result,type,failure,return,new,bulk,item,result,holder,null,result,primary,item,request,else,if,result,get,result,type,engine,result,type,success,return,process,update,response,update,request,concrete,index,result,translate,primary,bulk,req,id,else,throw,new,assertion,error,unknown,result,type,for,update,request,result,get,result,type
TransportShardBulkAction -> static BulkItemResultHolder executeUpdateRequestOnce(UpdateRequest updateRequest, IndexShard primary,                                                          IndexMetaData metaData, String concreteIndex,                                                          UpdateHelper updateHelper, LongSupplier nowInMillis,                                                          BulkItemRequest primaryItemRequest, int bulkReqId,                                                          final MappingUpdatePerformer mappingUpdater) throws Exception;1528706846;Executes update request once, delegating to a index or delete operation after translation._NOOP updates are indicated by returning a <code>null</code> operation in {@link BulkItemResultHolder};static BulkItemResultHolder executeUpdateRequestOnce(UpdateRequest updateRequest, IndexShard primary,_                                                         IndexMetaData metaData, String concreteIndex,_                                                         UpdateHelper updateHelper, LongSupplier nowInMillis,_                                                         BulkItemRequest primaryItemRequest, int bulkReqId,_                                                         final MappingUpdatePerformer mappingUpdater) throws Exception {_        final UpdateHelper.Result translate__        _        try {_            translate = updateHelper.prepare(updateRequest, primary, nowInMillis)__        } catch (Exception failure) {_            _            _            final Engine.Result result = new Engine.IndexResult(failure, updateRequest.version(), SequenceNumbers.UNASSIGNED_SEQ_NO)__            return new BulkItemResultHolder(null, result, primaryItemRequest)__        }__        final Engine.Result result__        _        switch (translate.getResponseResult()) {_            case CREATED:_            case UPDATED:_                IndexRequest indexRequest = translate.action()__                MappingMetaData mappingMd = metaData.mappingOrDefault(indexRequest.type())__                indexRequest.process(metaData.getCreationVersion(), mappingMd, concreteIndex)__                result = executeIndexRequestOnPrimary(indexRequest, primary, mappingUpdater)__                break__            case DELETED:_                DeleteRequest deleteRequest = translate.action()__                result = executeDeleteRequestOnPrimary(deleteRequest, primary, mappingUpdater)__                break__            case NOOP:_                primary.noopUpdate(updateRequest.type())__                result = null__                break__            default: throw new IllegalStateException("Illegal update operation " + translate.getResponseResult())__        }__        if (result == null) {_            _            final UpdateResponse updateResponse = translate.action()__            return new BulkItemResultHolder(updateResponse, result, primaryItemRequest)__        } else if (result.getResultType() == Engine.Result.Type.FAILURE) {_            _            return new BulkItemResultHolder(null, result, primaryItemRequest)__        } else if (result.getResultType() == Engine.Result.Type.SUCCESS) {_            _            return processUpdateResponse(updateRequest, concreteIndex, result, translate, primary, bulkReqId)__        } else {_            throw new AssertionError("unknown result type for " + updateRequest + ": " + result.getResultType())__        }_    };executes,update,request,once,delegating,to,a,index,or,delete,operation,after,translation,noop,updates,are,indicated,by,returning,a,code,null,code,operation,in,link,bulk,item,result,holder;static,bulk,item,result,holder,execute,update,request,once,update,request,update,request,index,shard,primary,index,meta,data,meta,data,string,concrete,index,update,helper,update,helper,long,supplier,now,in,millis,bulk,item,request,primary,item,request,int,bulk,req,id,final,mapping,update,performer,mapping,updater,throws,exception,final,update,helper,result,translate,try,translate,update,helper,prepare,update,request,primary,now,in,millis,catch,exception,failure,final,engine,result,result,new,engine,index,result,failure,update,request,version,sequence,numbers,return,new,bulk,item,result,holder,null,result,primary,item,request,final,engine,result,result,switch,translate,get,response,result,case,created,case,updated,index,request,index,request,translate,action,mapping,meta,data,mapping,md,meta,data,mapping,or,default,index,request,type,index,request,process,meta,data,get,creation,version,mapping,md,concrete,index,result,execute,index,request,on,primary,index,request,primary,mapping,updater,break,case,deleted,delete,request,delete,request,translate,action,result,execute,delete,request,on,primary,delete,request,primary,mapping,updater,break,case,noop,primary,noop,update,update,request,type,result,null,break,default,throw,new,illegal,state,exception,illegal,update,operation,translate,get,response,result,if,result,null,final,update,response,update,response,translate,action,return,new,bulk,item,result,holder,update,response,result,primary,item,request,else,if,result,get,result,type,engine,result,type,failure,return,new,bulk,item,result,holder,null,result,primary,item,request,else,if,result,get,result,type,engine,result,type,success,return,process,update,response,update,request,concrete,index,result,translate,primary,bulk,req,id,else,throw,new,assertion,error,unknown,result,type,for,update,request,result,get,result,type
TransportShardBulkAction -> static BulkItemResultHolder executeUpdateRequestOnce(UpdateRequest updateRequest, IndexShard primary,                                                          IndexMetaData metaData, String concreteIndex,                                                          UpdateHelper updateHelper, LongSupplier nowInMillis,                                                          BulkItemRequest primaryItemRequest, int bulkReqId,                                                          final MappingUpdatePerformer mappingUpdater) throws Exception;1528977744;Executes update request once, delegating to a index or delete operation after translation._NOOP updates are indicated by returning a <code>null</code> operation in {@link BulkItemResultHolder};static BulkItemResultHolder executeUpdateRequestOnce(UpdateRequest updateRequest, IndexShard primary,_                                                         IndexMetaData metaData, String concreteIndex,_                                                         UpdateHelper updateHelper, LongSupplier nowInMillis,_                                                         BulkItemRequest primaryItemRequest, int bulkReqId,_                                                         final MappingUpdatePerformer mappingUpdater) throws Exception {_        final UpdateHelper.Result translate__        _        try {_            translate = updateHelper.prepare(updateRequest, primary, nowInMillis)__        } catch (Exception failure) {_            _            _            final Engine.Result result = new Engine.IndexResult(failure, updateRequest.version(), SequenceNumbers.UNASSIGNED_SEQ_NO)__            return new BulkItemResultHolder(null, result, primaryItemRequest)__        }__        final Engine.Result result__        _        switch (translate.getResponseResult()) {_            case CREATED:_            case UPDATED:_                IndexRequest indexRequest = translate.action()__                MappingMetaData mappingMd = metaData.mappingOrDefault(indexRequest.type())__                indexRequest.process(metaData.getCreationVersion(), mappingMd, concreteIndex)__                result = executeIndexRequestOnPrimary(indexRequest, primary, mappingUpdater)__                break__            case DELETED:_                DeleteRequest deleteRequest = translate.action()__                result = executeDeleteRequestOnPrimary(deleteRequest, primary, mappingUpdater)__                break__            case NOOP:_                primary.noopUpdate(updateRequest.type())__                result = null__                break__            default: throw new IllegalStateException("Illegal update operation " + translate.getResponseResult())__        }__        if (result == null) {_            _            final UpdateResponse updateResponse = translate.action()__            return new BulkItemResultHolder(updateResponse, result, primaryItemRequest)__        } else if (result.getResultType() == Engine.Result.Type.FAILURE) {_            _            return new BulkItemResultHolder(null, result, primaryItemRequest)__        } else if (result.getResultType() == Engine.Result.Type.SUCCESS) {_            _            return processUpdateResponse(updateRequest, concreteIndex, result, translate, primary, bulkReqId)__        } else {_            throw new AssertionError("unknown result type for " + updateRequest + ": " + result.getResultType())__        }_    };executes,update,request,once,delegating,to,a,index,or,delete,operation,after,translation,noop,updates,are,indicated,by,returning,a,code,null,code,operation,in,link,bulk,item,result,holder;static,bulk,item,result,holder,execute,update,request,once,update,request,update,request,index,shard,primary,index,meta,data,meta,data,string,concrete,index,update,helper,update,helper,long,supplier,now,in,millis,bulk,item,request,primary,item,request,int,bulk,req,id,final,mapping,update,performer,mapping,updater,throws,exception,final,update,helper,result,translate,try,translate,update,helper,prepare,update,request,primary,now,in,millis,catch,exception,failure,final,engine,result,result,new,engine,index,result,failure,update,request,version,sequence,numbers,return,new,bulk,item,result,holder,null,result,primary,item,request,final,engine,result,result,switch,translate,get,response,result,case,created,case,updated,index,request,index,request,translate,action,mapping,meta,data,mapping,md,meta,data,mapping,or,default,index,request,type,index,request,process,meta,data,get,creation,version,mapping,md,concrete,index,result,execute,index,request,on,primary,index,request,primary,mapping,updater,break,case,deleted,delete,request,delete,request,translate,action,result,execute,delete,request,on,primary,delete,request,primary,mapping,updater,break,case,noop,primary,noop,update,update,request,type,result,null,break,default,throw,new,illegal,state,exception,illegal,update,operation,translate,get,response,result,if,result,null,final,update,response,update,response,translate,action,return,new,bulk,item,result,holder,update,response,result,primary,item,request,else,if,result,get,result,type,engine,result,type,failure,return,new,bulk,item,result,holder,null,result,primary,item,request,else,if,result,get,result,type,engine,result,type,success,return,process,update,response,update,request,concrete,index,result,translate,primary,bulk,req,id,else,throw,new,assertion,error,unknown,result,type,for,update,request,result,get,result,type
TransportShardBulkAction -> static BulkItemResultHolder executeUpdateRequestOnce(UpdateRequest updateRequest, IndexShard primary,                                                          IndexMetaData metaData, String concreteIndex,                                                          UpdateHelper updateHelper, LongSupplier nowInMillis,                                                          BulkItemRequest primaryItemRequest, int bulkReqId,                                                          final MappingUpdatePerformer mappingUpdater) throws Exception;1529658035;Executes update request once, delegating to a index or delete operation after translation._NOOP updates are indicated by returning a <code>null</code> operation in {@link BulkItemResultHolder};static BulkItemResultHolder executeUpdateRequestOnce(UpdateRequest updateRequest, IndexShard primary,_                                                         IndexMetaData metaData, String concreteIndex,_                                                         UpdateHelper updateHelper, LongSupplier nowInMillis,_                                                         BulkItemRequest primaryItemRequest, int bulkReqId,_                                                         final MappingUpdatePerformer mappingUpdater) throws Exception {_        final UpdateHelper.Result translate__        _        try {_            translate = updateHelper.prepare(updateRequest, primary, nowInMillis)__        } catch (Exception failure) {_            _            _            final Engine.Result result = new Engine.IndexResult(failure, updateRequest.version(), SequenceNumbers.UNASSIGNED_SEQ_NO)__            return new BulkItemResultHolder(null, result, primaryItemRequest)__        }__        final Engine.Result result__        _        switch (translate.getResponseResult()) {_            case CREATED:_            case UPDATED:_                IndexRequest indexRequest = translate.action()__                MappingMetaData mappingMd = metaData.mappingOrDefault(indexRequest.type())__                indexRequest.process(metaData.getCreationVersion(), mappingMd, concreteIndex)__                result = executeIndexRequestOnPrimary(indexRequest, primary, mappingUpdater)__                break__            case DELETED:_                DeleteRequest deleteRequest = translate.action()__                result = executeDeleteRequestOnPrimary(deleteRequest, primary, mappingUpdater)__                break__            case NOOP:_                primary.noopUpdate(updateRequest.type())__                result = null__                break__            default: throw new IllegalStateException("Illegal update operation " + translate.getResponseResult())__        }__        if (result == null) {_            _            final UpdateResponse updateResponse = translate.action()__            return new BulkItemResultHolder(updateResponse, result, primaryItemRequest)__        } else if (result.getResultType() == Engine.Result.Type.FAILURE) {_            _            return new BulkItemResultHolder(null, result, primaryItemRequest)__        } else if (result.getResultType() == Engine.Result.Type.SUCCESS) {_            _            return processUpdateResponse(updateRequest, concreteIndex, result, translate, primary, bulkReqId)__        } else {_            throw new AssertionError("unknown result type for " + updateRequest + ": " + result.getResultType())__        }_    };executes,update,request,once,delegating,to,a,index,or,delete,operation,after,translation,noop,updates,are,indicated,by,returning,a,code,null,code,operation,in,link,bulk,item,result,holder;static,bulk,item,result,holder,execute,update,request,once,update,request,update,request,index,shard,primary,index,meta,data,meta,data,string,concrete,index,update,helper,update,helper,long,supplier,now,in,millis,bulk,item,request,primary,item,request,int,bulk,req,id,final,mapping,update,performer,mapping,updater,throws,exception,final,update,helper,result,translate,try,translate,update,helper,prepare,update,request,primary,now,in,millis,catch,exception,failure,final,engine,result,result,new,engine,index,result,failure,update,request,version,sequence,numbers,return,new,bulk,item,result,holder,null,result,primary,item,request,final,engine,result,result,switch,translate,get,response,result,case,created,case,updated,index,request,index,request,translate,action,mapping,meta,data,mapping,md,meta,data,mapping,or,default,index,request,type,index,request,process,meta,data,get,creation,version,mapping,md,concrete,index,result,execute,index,request,on,primary,index,request,primary,mapping,updater,break,case,deleted,delete,request,delete,request,translate,action,result,execute,delete,request,on,primary,delete,request,primary,mapping,updater,break,case,noop,primary,noop,update,update,request,type,result,null,break,default,throw,new,illegal,state,exception,illegal,update,operation,translate,get,response,result,if,result,null,final,update,response,update,response,translate,action,return,new,bulk,item,result,holder,update,response,result,primary,item,request,else,if,result,get,result,type,engine,result,type,failure,return,new,bulk,item,result,holder,null,result,primary,item,request,else,if,result,get,result,type,engine,result,type,success,return,process,update,response,update,request,concrete,index,result,translate,primary,bulk,req,id,else,throw,new,assertion,error,unknown,result,type,for,update,request,result,get,result,type
TransportShardBulkAction -> static BulkItemResultHolder executeUpdateRequestOnce(UpdateRequest updateRequest, IndexShard primary,                                                          IndexMetaData metaData, String concreteIndex,                                                          UpdateHelper updateHelper, LongSupplier nowInMillis,                                                          BulkItemRequest primaryItemRequest, int bulkReqId,                                                          final MappingUpdatePerformer mappingUpdater) throws Exception;1531179852;Executes update request once, delegating to a index or delete operation after translation._NOOP updates are indicated by returning a <code>null</code> operation in {@link BulkItemResultHolder};static BulkItemResultHolder executeUpdateRequestOnce(UpdateRequest updateRequest, IndexShard primary,_                                                         IndexMetaData metaData, String concreteIndex,_                                                         UpdateHelper updateHelper, LongSupplier nowInMillis,_                                                         BulkItemRequest primaryItemRequest, int bulkReqId,_                                                         final MappingUpdatePerformer mappingUpdater) throws Exception {_        final UpdateHelper.Result translate__        _        try {_            translate = updateHelper.prepare(updateRequest, primary, nowInMillis)__        } catch (Exception failure) {_            _            _            final Engine.Result result = new Engine.IndexResult(failure, updateRequest.version(), SequenceNumbers.UNASSIGNED_SEQ_NO)__            return new BulkItemResultHolder(null, result, primaryItemRequest)__        }__        final Engine.Result result__        _        switch (translate.getResponseResult()) {_            case CREATED:_            case UPDATED:_                IndexRequest indexRequest = translate.action()__                MappingMetaData mappingMd = metaData.mappingOrDefault(indexRequest.type())__                indexRequest.process(metaData.getCreationVersion(), mappingMd, concreteIndex)__                result = executeIndexRequestOnPrimary(indexRequest, primary, mappingUpdater)__                break__            case DELETED:_                DeleteRequest deleteRequest = translate.action()__                result = executeDeleteRequestOnPrimary(deleteRequest, primary, mappingUpdater)__                break__            case NOOP:_                primary.noopUpdate(updateRequest.type())__                result = null__                break__            default: throw new IllegalStateException("Illegal update operation " + translate.getResponseResult())__        }__        if (result == null) {_            _            final UpdateResponse updateResponse = translate.action()__            return new BulkItemResultHolder(updateResponse, result, primaryItemRequest)__        } else if (result.getResultType() == Engine.Result.Type.FAILURE) {_            _            return new BulkItemResultHolder(null, result, primaryItemRequest)__        } else if (result.getResultType() == Engine.Result.Type.SUCCESS) {_            _            return processUpdateResponse(updateRequest, concreteIndex, result, translate, primary, bulkReqId)__        } else {_            throw new AssertionError("unknown result type for " + updateRequest + ": " + result.getResultType())__        }_    };executes,update,request,once,delegating,to,a,index,or,delete,operation,after,translation,noop,updates,are,indicated,by,returning,a,code,null,code,operation,in,link,bulk,item,result,holder;static,bulk,item,result,holder,execute,update,request,once,update,request,update,request,index,shard,primary,index,meta,data,meta,data,string,concrete,index,update,helper,update,helper,long,supplier,now,in,millis,bulk,item,request,primary,item,request,int,bulk,req,id,final,mapping,update,performer,mapping,updater,throws,exception,final,update,helper,result,translate,try,translate,update,helper,prepare,update,request,primary,now,in,millis,catch,exception,failure,final,engine,result,result,new,engine,index,result,failure,update,request,version,sequence,numbers,return,new,bulk,item,result,holder,null,result,primary,item,request,final,engine,result,result,switch,translate,get,response,result,case,created,case,updated,index,request,index,request,translate,action,mapping,meta,data,mapping,md,meta,data,mapping,or,default,index,request,type,index,request,process,meta,data,get,creation,version,mapping,md,concrete,index,result,execute,index,request,on,primary,index,request,primary,mapping,updater,break,case,deleted,delete,request,delete,request,translate,action,result,execute,delete,request,on,primary,delete,request,primary,mapping,updater,break,case,noop,primary,noop,update,update,request,type,result,null,break,default,throw,new,illegal,state,exception,illegal,update,operation,translate,get,response,result,if,result,null,final,update,response,update,response,translate,action,return,new,bulk,item,result,holder,update,response,result,primary,item,request,else,if,result,get,result,type,engine,result,type,failure,return,new,bulk,item,result,holder,null,result,primary,item,request,else,if,result,get,result,type,engine,result,type,success,return,process,update,response,update,request,concrete,index,result,translate,primary,bulk,req,id,else,throw,new,assertion,error,unknown,result,type,for,update,request,result,get,result,type
TransportShardBulkAction -> static BulkItemResultHolder executeUpdateRequestOnce(UpdateRequest updateRequest, IndexShard primary,                                                          IndexMetaData metaData, String concreteIndex,                                                          UpdateHelper updateHelper, LongSupplier nowInMillis,                                                          BulkItemRequest primaryItemRequest, int bulkReqId,                                                          final MappingUpdatePerformer mappingUpdater) throws Exception;1531910483;Executes update request once, delegating to a index or delete operation after translation._NOOP updates are indicated by returning a <code>null</code> operation in {@link BulkItemResultHolder};static BulkItemResultHolder executeUpdateRequestOnce(UpdateRequest updateRequest, IndexShard primary,_                                                         IndexMetaData metaData, String concreteIndex,_                                                         UpdateHelper updateHelper, LongSupplier nowInMillis,_                                                         BulkItemRequest primaryItemRequest, int bulkReqId,_                                                         final MappingUpdatePerformer mappingUpdater) throws Exception {_        final UpdateHelper.Result translate__        _        try {_            translate = updateHelper.prepare(updateRequest, primary, nowInMillis)__        } catch (Exception failure) {_            _            _            final Engine.Result result = new Engine.IndexResult(failure, updateRequest.version(), SequenceNumbers.UNASSIGNED_SEQ_NO)__            return new BulkItemResultHolder(null, result, primaryItemRequest)__        }__        final Engine.Result result__        _        switch (translate.getResponseResult()) {_            case CREATED:_            case UPDATED:_                IndexRequest indexRequest = translate.action()__                MappingMetaData mappingMd = metaData.mappingOrDefault(indexRequest.type())__                indexRequest.process(metaData.getCreationVersion(), mappingMd, concreteIndex)__                result = executeIndexRequestOnPrimary(indexRequest, primary, mappingUpdater)__                break__            case DELETED:_                DeleteRequest deleteRequest = translate.action()__                result = executeDeleteRequestOnPrimary(deleteRequest, primary, mappingUpdater)__                break__            case NOOP:_                primary.noopUpdate(updateRequest.type())__                result = null__                break__            default: throw new IllegalStateException("Illegal update operation " + translate.getResponseResult())__        }__        if (result == null) {_            _            final UpdateResponse updateResponse = translate.action()__            return new BulkItemResultHolder(updateResponse, result, primaryItemRequest)__        } else if (result.getResultType() == Engine.Result.Type.FAILURE) {_            _            return new BulkItemResultHolder(null, result, primaryItemRequest)__        } else if (result.getResultType() == Engine.Result.Type.SUCCESS) {_            _            return processUpdateResponse(updateRequest, concreteIndex, result, translate, primary, bulkReqId)__        } else {_            throw new AssertionError("unknown result type for " + updateRequest + ": " + result.getResultType())__        }_    };executes,update,request,once,delegating,to,a,index,or,delete,operation,after,translation,noop,updates,are,indicated,by,returning,a,code,null,code,operation,in,link,bulk,item,result,holder;static,bulk,item,result,holder,execute,update,request,once,update,request,update,request,index,shard,primary,index,meta,data,meta,data,string,concrete,index,update,helper,update,helper,long,supplier,now,in,millis,bulk,item,request,primary,item,request,int,bulk,req,id,final,mapping,update,performer,mapping,updater,throws,exception,final,update,helper,result,translate,try,translate,update,helper,prepare,update,request,primary,now,in,millis,catch,exception,failure,final,engine,result,result,new,engine,index,result,failure,update,request,version,sequence,numbers,return,new,bulk,item,result,holder,null,result,primary,item,request,final,engine,result,result,switch,translate,get,response,result,case,created,case,updated,index,request,index,request,translate,action,mapping,meta,data,mapping,md,meta,data,mapping,or,default,index,request,type,index,request,process,meta,data,get,creation,version,mapping,md,concrete,index,result,execute,index,request,on,primary,index,request,primary,mapping,updater,break,case,deleted,delete,request,delete,request,translate,action,result,execute,delete,request,on,primary,delete,request,primary,mapping,updater,break,case,noop,primary,noop,update,update,request,type,result,null,break,default,throw,new,illegal,state,exception,illegal,update,operation,translate,get,response,result,if,result,null,final,update,response,update,response,translate,action,return,new,bulk,item,result,holder,update,response,result,primary,item,request,else,if,result,get,result,type,engine,result,type,failure,return,new,bulk,item,result,holder,null,result,primary,item,request,else,if,result,get,result,type,engine,result,type,success,return,process,update,response,update,request,concrete,index,result,translate,primary,bulk,req,id,else,throw,new,assertion,error,unknown,result,type,for,update,request,result,get,result,type
TransportShardBulkAction -> static BulkItemResultHolder executeUpdateRequestOnce(UpdateRequest updateRequest, IndexShard primary,                                                          IndexMetaData metaData, String concreteIndex,                                                          UpdateHelper updateHelper, LongSupplier nowInMillis,                                                          BulkItemRequest primaryItemRequest, int bulkReqId,                                                          final MappingUpdatePerformer mappingUpdater) throws Exception;1533295538;Executes update request once, delegating to a index or delete operation after translation._NOOP updates are indicated by returning a <code>null</code> operation in {@link BulkItemResultHolder};static BulkItemResultHolder executeUpdateRequestOnce(UpdateRequest updateRequest, IndexShard primary,_                                                         IndexMetaData metaData, String concreteIndex,_                                                         UpdateHelper updateHelper, LongSupplier nowInMillis,_                                                         BulkItemRequest primaryItemRequest, int bulkReqId,_                                                         final MappingUpdatePerformer mappingUpdater) throws Exception {_        final UpdateHelper.Result translate__        _        try {_            translate = updateHelper.prepare(updateRequest, primary, nowInMillis)__        } catch (Exception failure) {_            _            _            final Engine.Result result = primary.getFailedIndexResult(failure, updateRequest.version())__            return new BulkItemResultHolder(null, result, primaryItemRequest)__        }__        final Engine.Result result__        _        switch (translate.getResponseResult()) {_            case CREATED:_            case UPDATED:_                IndexRequest indexRequest = translate.action()__                MappingMetaData mappingMd = metaData.mappingOrDefault(indexRequest.type())__                indexRequest.process(metaData.getCreationVersion(), mappingMd, concreteIndex)__                result = executeIndexRequestOnPrimary(indexRequest, primary, mappingUpdater)__                break__            case DELETED:_                DeleteRequest deleteRequest = translate.action()__                result = executeDeleteRequestOnPrimary(deleteRequest, primary, mappingUpdater)__                break__            case NOOP:_                primary.noopUpdate(updateRequest.type())__                result = null__                break__            default: throw new IllegalStateException("Illegal update operation " + translate.getResponseResult())__        }__        if (result == null) {_            _            final UpdateResponse updateResponse = translate.action()__            return new BulkItemResultHolder(updateResponse, result, primaryItemRequest)__        } else if (result.getResultType() == Engine.Result.Type.FAILURE) {_            _            return new BulkItemResultHolder(null, result, primaryItemRequest)__        } else if (result.getResultType() == Engine.Result.Type.SUCCESS) {_            _            return processUpdateResponse(updateRequest, concreteIndex, result, translate, primary, bulkReqId)__        } else {_            throw new AssertionError("unknown result type for " + updateRequest + ": " + result.getResultType())__        }_    };executes,update,request,once,delegating,to,a,index,or,delete,operation,after,translation,noop,updates,are,indicated,by,returning,a,code,null,code,operation,in,link,bulk,item,result,holder;static,bulk,item,result,holder,execute,update,request,once,update,request,update,request,index,shard,primary,index,meta,data,meta,data,string,concrete,index,update,helper,update,helper,long,supplier,now,in,millis,bulk,item,request,primary,item,request,int,bulk,req,id,final,mapping,update,performer,mapping,updater,throws,exception,final,update,helper,result,translate,try,translate,update,helper,prepare,update,request,primary,now,in,millis,catch,exception,failure,final,engine,result,result,primary,get,failed,index,result,failure,update,request,version,return,new,bulk,item,result,holder,null,result,primary,item,request,final,engine,result,result,switch,translate,get,response,result,case,created,case,updated,index,request,index,request,translate,action,mapping,meta,data,mapping,md,meta,data,mapping,or,default,index,request,type,index,request,process,meta,data,get,creation,version,mapping,md,concrete,index,result,execute,index,request,on,primary,index,request,primary,mapping,updater,break,case,deleted,delete,request,delete,request,translate,action,result,execute,delete,request,on,primary,delete,request,primary,mapping,updater,break,case,noop,primary,noop,update,update,request,type,result,null,break,default,throw,new,illegal,state,exception,illegal,update,operation,translate,get,response,result,if,result,null,final,update,response,update,response,translate,action,return,new,bulk,item,result,holder,update,response,result,primary,item,request,else,if,result,get,result,type,engine,result,type,failure,return,new,bulk,item,result,holder,null,result,primary,item,request,else,if,result,get,result,type,engine,result,type,success,return,process,update,response,update,request,concrete,index,result,translate,primary,bulk,req,id,else,throw,new,assertion,error,unknown,result,type,for,update,request,result,get,result,type
TransportShardBulkAction -> static Translog.Location executeBulkItemRequest(IndexMetaData metaData, IndexShard primary,                                                     BulkShardRequest request, Translog.Location location,                                                     int requestIndex, UpdateHelper updateHelper,                                                     LongSupplier nowInMillisSupplier,                                                     final MappingUpdatePerformer mappingUpdater) throws Exception;1524684173;Executes bulk item requests and handles request execution exceptions;static Translog.Location executeBulkItemRequest(IndexMetaData metaData, IndexShard primary,_                                                    BulkShardRequest request, Translog.Location location,_                                                    int requestIndex, UpdateHelper updateHelper,_                                                    LongSupplier nowInMillisSupplier,_                                                    final MappingUpdatePerformer mappingUpdater) throws Exception {_        final DocWriteRequest itemRequest = request.items()[requestIndex].request()__        final DocWriteRequest.OpType opType = itemRequest.opType()__        final BulkItemResultHolder responseHolder__        switch (itemRequest.opType()) {_            case CREATE:_            case INDEX:_                responseHolder = executeIndexRequest((IndexRequest) itemRequest,_                        request.items()[requestIndex], primary, mappingUpdater)__                break__            case UPDATE:_                responseHolder = executeUpdateRequest((UpdateRequest) itemRequest, primary, metaData, request,_                        requestIndex, updateHelper, nowInMillisSupplier, mappingUpdater)__                break__            case DELETE:_                responseHolder = executeDeleteRequest((DeleteRequest) itemRequest, request.items()[requestIndex], primary, mappingUpdater)__                break__            default: throw new IllegalStateException("unexpected opType [" + itemRequest.opType() + "] found")__        }__        final BulkItemRequest replicaRequest = responseHolder.replicaRequest___        _        request.items()[requestIndex] = replicaRequest___        _        BulkItemResponse primaryResponse = createPrimaryResponse(responseHolder, opType, request)__        if (primaryResponse != null) {_            replicaRequest.setPrimaryResponse(primaryResponse)__        }__        _        return calculateTranslogLocation(location, responseHolder)__    };executes,bulk,item,requests,and,handles,request,execution,exceptions;static,translog,location,execute,bulk,item,request,index,meta,data,meta,data,index,shard,primary,bulk,shard,request,request,translog,location,location,int,request,index,update,helper,update,helper,long,supplier,now,in,millis,supplier,final,mapping,update,performer,mapping,updater,throws,exception,final,doc,write,request,item,request,request,items,request,index,request,final,doc,write,request,op,type,op,type,item,request,op,type,final,bulk,item,result,holder,response,holder,switch,item,request,op,type,case,create,case,index,response,holder,execute,index,request,index,request,item,request,request,items,request,index,primary,mapping,updater,break,case,update,response,holder,execute,update,request,update,request,item,request,primary,meta,data,request,request,index,update,helper,now,in,millis,supplier,mapping,updater,break,case,delete,response,holder,execute,delete,request,delete,request,item,request,request,items,request,index,primary,mapping,updater,break,default,throw,new,illegal,state,exception,unexpected,op,type,item,request,op,type,found,final,bulk,item,request,replica,request,response,holder,replica,request,request,items,request,index,replica,request,bulk,item,response,primary,response,create,primary,response,response,holder,op,type,request,if,primary,response,null,replica,request,set,primary,response,primary,response,return,calculate,translog,location,location,response,holder
TransportShardBulkAction -> static Translog.Location executeBulkItemRequest(IndexMetaData metaData, IndexShard primary,                                                     BulkShardRequest request, Translog.Location location,                                                     int requestIndex, UpdateHelper updateHelper,                                                     LongSupplier nowInMillisSupplier,                                                     final MappingUpdatePerformer mappingUpdater) throws Exception;1525162917;Executes bulk item requests and handles request execution exceptions;static Translog.Location executeBulkItemRequest(IndexMetaData metaData, IndexShard primary,_                                                    BulkShardRequest request, Translog.Location location,_                                                    int requestIndex, UpdateHelper updateHelper,_                                                    LongSupplier nowInMillisSupplier,_                                                    final MappingUpdatePerformer mappingUpdater) throws Exception {_        final DocWriteRequest itemRequest = request.items()[requestIndex].request()__        final DocWriteRequest.OpType opType = itemRequest.opType()__        final BulkItemResultHolder responseHolder__        switch (itemRequest.opType()) {_            case CREATE:_            case INDEX:_                responseHolder = executeIndexRequest((IndexRequest) itemRequest,_                        request.items()[requestIndex], primary, mappingUpdater)__                break__            case UPDATE:_                responseHolder = executeUpdateRequest((UpdateRequest) itemRequest, primary, metaData, request,_                        requestIndex, updateHelper, nowInMillisSupplier, mappingUpdater)__                break__            case DELETE:_                responseHolder = executeDeleteRequest((DeleteRequest) itemRequest, request.items()[requestIndex], primary, mappingUpdater)__                break__            default: throw new IllegalStateException("unexpected opType [" + itemRequest.opType() + "] found")__        }__        final BulkItemRequest replicaRequest = responseHolder.replicaRequest___        _        request.items()[requestIndex] = replicaRequest___        _        BulkItemResponse primaryResponse = createPrimaryResponse(responseHolder, opType, request)__        if (primaryResponse != null) {_            replicaRequest.setPrimaryResponse(primaryResponse)__        }__        _        return calculateTranslogLocation(location, responseHolder)__    };executes,bulk,item,requests,and,handles,request,execution,exceptions;static,translog,location,execute,bulk,item,request,index,meta,data,meta,data,index,shard,primary,bulk,shard,request,request,translog,location,location,int,request,index,update,helper,update,helper,long,supplier,now,in,millis,supplier,final,mapping,update,performer,mapping,updater,throws,exception,final,doc,write,request,item,request,request,items,request,index,request,final,doc,write,request,op,type,op,type,item,request,op,type,final,bulk,item,result,holder,response,holder,switch,item,request,op,type,case,create,case,index,response,holder,execute,index,request,index,request,item,request,request,items,request,index,primary,mapping,updater,break,case,update,response,holder,execute,update,request,update,request,item,request,primary,meta,data,request,request,index,update,helper,now,in,millis,supplier,mapping,updater,break,case,delete,response,holder,execute,delete,request,delete,request,item,request,request,items,request,index,primary,mapping,updater,break,default,throw,new,illegal,state,exception,unexpected,op,type,item,request,op,type,found,final,bulk,item,request,replica,request,response,holder,replica,request,request,items,request,index,replica,request,bulk,item,response,primary,response,create,primary,response,response,holder,op,type,request,if,primary,response,null,replica,request,set,primary,response,primary,response,return,calculate,translog,location,location,response,holder
TransportShardBulkAction -> static Translog.Location executeBulkItemRequest(IndexMetaData metaData, IndexShard primary,                                                     BulkShardRequest request, Translog.Location location,                                                     int requestIndex, UpdateHelper updateHelper,                                                     LongSupplier nowInMillisSupplier,                                                     final MappingUpdatePerformer mappingUpdater) throws Exception;1526029249;Executes bulk item requests and handles request execution exceptions;static Translog.Location executeBulkItemRequest(IndexMetaData metaData, IndexShard primary,_                                                    BulkShardRequest request, Translog.Location location,_                                                    int requestIndex, UpdateHelper updateHelper,_                                                    LongSupplier nowInMillisSupplier,_                                                    final MappingUpdatePerformer mappingUpdater) throws Exception {_        final DocWriteRequest itemRequest = request.items()[requestIndex].request()__        final DocWriteRequest.OpType opType = itemRequest.opType()__        final BulkItemResultHolder responseHolder__        switch (itemRequest.opType()) {_            case CREATE:_            case INDEX:_                responseHolder = executeIndexRequest((IndexRequest) itemRequest,_                        request.items()[requestIndex], primary, mappingUpdater)__                break__            case UPDATE:_                responseHolder = executeUpdateRequest((UpdateRequest) itemRequest, primary, metaData, request,_                        requestIndex, updateHelper, nowInMillisSupplier, mappingUpdater)__                break__            case DELETE:_                responseHolder = executeDeleteRequest((DeleteRequest) itemRequest, request.items()[requestIndex], primary, mappingUpdater)__                break__            default: throw new IllegalStateException("unexpected opType [" + itemRequest.opType() + "] found")__        }__        final BulkItemRequest replicaRequest = responseHolder.replicaRequest___        _        request.items()[requestIndex] = replicaRequest___        _        BulkItemResponse primaryResponse = createPrimaryResponse(responseHolder, opType, request)__        if (primaryResponse != null) {_            replicaRequest.setPrimaryResponse(primaryResponse)__        }__        _        return calculateTranslogLocation(location, responseHolder)__    };executes,bulk,item,requests,and,handles,request,execution,exceptions;static,translog,location,execute,bulk,item,request,index,meta,data,meta,data,index,shard,primary,bulk,shard,request,request,translog,location,location,int,request,index,update,helper,update,helper,long,supplier,now,in,millis,supplier,final,mapping,update,performer,mapping,updater,throws,exception,final,doc,write,request,item,request,request,items,request,index,request,final,doc,write,request,op,type,op,type,item,request,op,type,final,bulk,item,result,holder,response,holder,switch,item,request,op,type,case,create,case,index,response,holder,execute,index,request,index,request,item,request,request,items,request,index,primary,mapping,updater,break,case,update,response,holder,execute,update,request,update,request,item,request,primary,meta,data,request,request,index,update,helper,now,in,millis,supplier,mapping,updater,break,case,delete,response,holder,execute,delete,request,delete,request,item,request,request,items,request,index,primary,mapping,updater,break,default,throw,new,illegal,state,exception,unexpected,op,type,item,request,op,type,found,final,bulk,item,request,replica,request,response,holder,replica,request,request,items,request,index,replica,request,bulk,item,response,primary,response,create,primary,response,response,holder,op,type,request,if,primary,response,null,replica,request,set,primary,response,primary,response,return,calculate,translog,location,location,response,holder
TransportShardBulkAction -> static Translog.Location executeBulkItemRequest(IndexMetaData metaData, IndexShard primary,                                                     BulkShardRequest request, Translog.Location location,                                                     int requestIndex, UpdateHelper updateHelper,                                                     LongSupplier nowInMillisSupplier,                                                     final MappingUpdatePerformer mappingUpdater) throws Exception;1528706846;Executes bulk item requests and handles request execution exceptions;static Translog.Location executeBulkItemRequest(IndexMetaData metaData, IndexShard primary,_                                                    BulkShardRequest request, Translog.Location location,_                                                    int requestIndex, UpdateHelper updateHelper,_                                                    LongSupplier nowInMillisSupplier,_                                                    final MappingUpdatePerformer mappingUpdater) throws Exception {_        final DocWriteRequest itemRequest = request.items()[requestIndex].request()__        final DocWriteRequest.OpType opType = itemRequest.opType()__        final BulkItemResultHolder responseHolder__        switch (itemRequest.opType()) {_            case CREATE:_            case INDEX:_                responseHolder = executeIndexRequest((IndexRequest) itemRequest,_                        request.items()[requestIndex], primary, mappingUpdater)__                break__            case UPDATE:_                responseHolder = executeUpdateRequest((UpdateRequest) itemRequest, primary, metaData, request,_                        requestIndex, updateHelper, nowInMillisSupplier, mappingUpdater)__                break__            case DELETE:_                responseHolder = executeDeleteRequest((DeleteRequest) itemRequest, request.items()[requestIndex], primary, mappingUpdater)__                break__            default: throw new IllegalStateException("unexpected opType [" + itemRequest.opType() + "] found")__        }__        final BulkItemRequest replicaRequest = responseHolder.replicaRequest___        _        request.items()[requestIndex] = replicaRequest___        _        BulkItemResponse primaryResponse = createPrimaryResponse(responseHolder, opType, request)__        if (primaryResponse != null) {_            replicaRequest.setPrimaryResponse(primaryResponse)__        }__        _        return calculateTranslogLocation(location, responseHolder)__    };executes,bulk,item,requests,and,handles,request,execution,exceptions;static,translog,location,execute,bulk,item,request,index,meta,data,meta,data,index,shard,primary,bulk,shard,request,request,translog,location,location,int,request,index,update,helper,update,helper,long,supplier,now,in,millis,supplier,final,mapping,update,performer,mapping,updater,throws,exception,final,doc,write,request,item,request,request,items,request,index,request,final,doc,write,request,op,type,op,type,item,request,op,type,final,bulk,item,result,holder,response,holder,switch,item,request,op,type,case,create,case,index,response,holder,execute,index,request,index,request,item,request,request,items,request,index,primary,mapping,updater,break,case,update,response,holder,execute,update,request,update,request,item,request,primary,meta,data,request,request,index,update,helper,now,in,millis,supplier,mapping,updater,break,case,delete,response,holder,execute,delete,request,delete,request,item,request,request,items,request,index,primary,mapping,updater,break,default,throw,new,illegal,state,exception,unexpected,op,type,item,request,op,type,found,final,bulk,item,request,replica,request,response,holder,replica,request,request,items,request,index,replica,request,bulk,item,response,primary,response,create,primary,response,response,holder,op,type,request,if,primary,response,null,replica,request,set,primary,response,primary,response,return,calculate,translog,location,location,response,holder
TransportShardBulkAction -> static Translog.Location executeBulkItemRequest(IndexMetaData metaData, IndexShard primary,                                                     BulkShardRequest request, Translog.Location location,                                                     int requestIndex, UpdateHelper updateHelper,                                                     LongSupplier nowInMillisSupplier,                                                     final MappingUpdatePerformer mappingUpdater) throws Exception;1528977744;Executes bulk item requests and handles request execution exceptions;static Translog.Location executeBulkItemRequest(IndexMetaData metaData, IndexShard primary,_                                                    BulkShardRequest request, Translog.Location location,_                                                    int requestIndex, UpdateHelper updateHelper,_                                                    LongSupplier nowInMillisSupplier,_                                                    final MappingUpdatePerformer mappingUpdater) throws Exception {_        final DocWriteRequest itemRequest = request.items()[requestIndex].request()__        final DocWriteRequest.OpType opType = itemRequest.opType()__        final BulkItemResultHolder responseHolder__        switch (itemRequest.opType()) {_            case CREATE:_            case INDEX:_                responseHolder = executeIndexRequest((IndexRequest) itemRequest,_                        request.items()[requestIndex], primary, mappingUpdater)__                break__            case UPDATE:_                responseHolder = executeUpdateRequest((UpdateRequest) itemRequest, primary, metaData, request,_                        requestIndex, updateHelper, nowInMillisSupplier, mappingUpdater)__                break__            case DELETE:_                responseHolder = executeDeleteRequest((DeleteRequest) itemRequest, request.items()[requestIndex], primary, mappingUpdater)__                break__            default: throw new IllegalStateException("unexpected opType [" + itemRequest.opType() + "] found")__        }__        final BulkItemRequest replicaRequest = responseHolder.replicaRequest___        _        request.items()[requestIndex] = replicaRequest___        _        BulkItemResponse primaryResponse = createPrimaryResponse(responseHolder, opType, request)__        if (primaryResponse != null) {_            replicaRequest.setPrimaryResponse(primaryResponse)__        }__        _        return calculateTranslogLocation(location, responseHolder)__    };executes,bulk,item,requests,and,handles,request,execution,exceptions;static,translog,location,execute,bulk,item,request,index,meta,data,meta,data,index,shard,primary,bulk,shard,request,request,translog,location,location,int,request,index,update,helper,update,helper,long,supplier,now,in,millis,supplier,final,mapping,update,performer,mapping,updater,throws,exception,final,doc,write,request,item,request,request,items,request,index,request,final,doc,write,request,op,type,op,type,item,request,op,type,final,bulk,item,result,holder,response,holder,switch,item,request,op,type,case,create,case,index,response,holder,execute,index,request,index,request,item,request,request,items,request,index,primary,mapping,updater,break,case,update,response,holder,execute,update,request,update,request,item,request,primary,meta,data,request,request,index,update,helper,now,in,millis,supplier,mapping,updater,break,case,delete,response,holder,execute,delete,request,delete,request,item,request,request,items,request,index,primary,mapping,updater,break,default,throw,new,illegal,state,exception,unexpected,op,type,item,request,op,type,found,final,bulk,item,request,replica,request,response,holder,replica,request,request,items,request,index,replica,request,bulk,item,response,primary,response,create,primary,response,response,holder,op,type,request,if,primary,response,null,replica,request,set,primary,response,primary,response,return,calculate,translog,location,location,response,holder
TransportShardBulkAction -> static Translog.Location executeBulkItemRequest(IndexMetaData metaData, IndexShard primary,                                                     BulkShardRequest request, Translog.Location location,                                                     int requestIndex, UpdateHelper updateHelper,                                                     LongSupplier nowInMillisSupplier,                                                     final MappingUpdatePerformer mappingUpdater) throws Exception;1529658035;Executes bulk item requests and handles request execution exceptions;static Translog.Location executeBulkItemRequest(IndexMetaData metaData, IndexShard primary,_                                                    BulkShardRequest request, Translog.Location location,_                                                    int requestIndex, UpdateHelper updateHelper,_                                                    LongSupplier nowInMillisSupplier,_                                                    final MappingUpdatePerformer mappingUpdater) throws Exception {_        final DocWriteRequest itemRequest = request.items()[requestIndex].request()__        final DocWriteRequest.OpType opType = itemRequest.opType()__        final BulkItemResultHolder responseHolder__        switch (itemRequest.opType()) {_            case CREATE:_            case INDEX:_                responseHolder = executeIndexRequest((IndexRequest) itemRequest,_                        request.items()[requestIndex], primary, mappingUpdater)__                break__            case UPDATE:_                responseHolder = executeUpdateRequest((UpdateRequest) itemRequest, primary, metaData, request,_                        requestIndex, updateHelper, nowInMillisSupplier, mappingUpdater)__                break__            case DELETE:_                responseHolder = executeDeleteRequest((DeleteRequest) itemRequest, request.items()[requestIndex], primary, mappingUpdater)__                break__            default: throw new IllegalStateException("unexpected opType [" + itemRequest.opType() + "] found")__        }__        final BulkItemRequest replicaRequest = responseHolder.replicaRequest___        _        request.items()[requestIndex] = replicaRequest___        _        BulkItemResponse primaryResponse = createPrimaryResponse(responseHolder, opType, request)__        if (primaryResponse != null) {_            replicaRequest.setPrimaryResponse(primaryResponse)__        }__        _        return calculateTranslogLocation(location, responseHolder)__    };executes,bulk,item,requests,and,handles,request,execution,exceptions;static,translog,location,execute,bulk,item,request,index,meta,data,meta,data,index,shard,primary,bulk,shard,request,request,translog,location,location,int,request,index,update,helper,update,helper,long,supplier,now,in,millis,supplier,final,mapping,update,performer,mapping,updater,throws,exception,final,doc,write,request,item,request,request,items,request,index,request,final,doc,write,request,op,type,op,type,item,request,op,type,final,bulk,item,result,holder,response,holder,switch,item,request,op,type,case,create,case,index,response,holder,execute,index,request,index,request,item,request,request,items,request,index,primary,mapping,updater,break,case,update,response,holder,execute,update,request,update,request,item,request,primary,meta,data,request,request,index,update,helper,now,in,millis,supplier,mapping,updater,break,case,delete,response,holder,execute,delete,request,delete,request,item,request,request,items,request,index,primary,mapping,updater,break,default,throw,new,illegal,state,exception,unexpected,op,type,item,request,op,type,found,final,bulk,item,request,replica,request,response,holder,replica,request,request,items,request,index,replica,request,bulk,item,response,primary,response,create,primary,response,response,holder,op,type,request,if,primary,response,null,replica,request,set,primary,response,primary,response,return,calculate,translog,location,location,response,holder
TransportShardBulkAction -> static Translog.Location executeBulkItemRequest(IndexMetaData metaData, IndexShard primary,                                                     BulkShardRequest request, Translog.Location location,                                                     int requestIndex, UpdateHelper updateHelper,                                                     LongSupplier nowInMillisSupplier,                                                     final MappingUpdatePerformer mappingUpdater) throws Exception;1531179852;Executes bulk item requests and handles request execution exceptions;static Translog.Location executeBulkItemRequest(IndexMetaData metaData, IndexShard primary,_                                                    BulkShardRequest request, Translog.Location location,_                                                    int requestIndex, UpdateHelper updateHelper,_                                                    LongSupplier nowInMillisSupplier,_                                                    final MappingUpdatePerformer mappingUpdater) throws Exception {_        final DocWriteRequest<?> itemRequest = request.items()[requestIndex].request()__        final DocWriteRequest.OpType opType = itemRequest.opType()__        final BulkItemResultHolder responseHolder__        switch (itemRequest.opType()) {_            case CREATE:_            case INDEX:_                responseHolder = executeIndexRequest((IndexRequest) itemRequest,_                        request.items()[requestIndex], primary, mappingUpdater)__                break__            case UPDATE:_                responseHolder = executeUpdateRequest((UpdateRequest) itemRequest, primary, metaData, request,_                        requestIndex, updateHelper, nowInMillisSupplier, mappingUpdater)__                break__            case DELETE:_                responseHolder = executeDeleteRequest((DeleteRequest) itemRequest, request.items()[requestIndex], primary, mappingUpdater)__                break__            default: throw new IllegalStateException("unexpected opType [" + itemRequest.opType() + "] found")__        }__        final BulkItemRequest replicaRequest = responseHolder.replicaRequest___        _        request.items()[requestIndex] = replicaRequest___        _        BulkItemResponse primaryResponse = createPrimaryResponse(responseHolder, opType, request)__        if (primaryResponse != null) {_            replicaRequest.setPrimaryResponse(primaryResponse)__        }__        _        return calculateTranslogLocation(location, responseHolder)__    };executes,bulk,item,requests,and,handles,request,execution,exceptions;static,translog,location,execute,bulk,item,request,index,meta,data,meta,data,index,shard,primary,bulk,shard,request,request,translog,location,location,int,request,index,update,helper,update,helper,long,supplier,now,in,millis,supplier,final,mapping,update,performer,mapping,updater,throws,exception,final,doc,write,request,item,request,request,items,request,index,request,final,doc,write,request,op,type,op,type,item,request,op,type,final,bulk,item,result,holder,response,holder,switch,item,request,op,type,case,create,case,index,response,holder,execute,index,request,index,request,item,request,request,items,request,index,primary,mapping,updater,break,case,update,response,holder,execute,update,request,update,request,item,request,primary,meta,data,request,request,index,update,helper,now,in,millis,supplier,mapping,updater,break,case,delete,response,holder,execute,delete,request,delete,request,item,request,request,items,request,index,primary,mapping,updater,break,default,throw,new,illegal,state,exception,unexpected,op,type,item,request,op,type,found,final,bulk,item,request,replica,request,response,holder,replica,request,request,items,request,index,replica,request,bulk,item,response,primary,response,create,primary,response,response,holder,op,type,request,if,primary,response,null,replica,request,set,primary,response,primary,response,return,calculate,translog,location,location,response,holder
TransportShardBulkAction -> static Translog.Location executeBulkItemRequest(IndexMetaData metaData, IndexShard primary,                                                     BulkShardRequest request, Translog.Location location,                                                     int requestIndex, UpdateHelper updateHelper,                                                     LongSupplier nowInMillisSupplier,                                                     final MappingUpdatePerformer mappingUpdater) throws Exception;1531910483;Executes bulk item requests and handles request execution exceptions;static Translog.Location executeBulkItemRequest(IndexMetaData metaData, IndexShard primary,_                                                    BulkShardRequest request, Translog.Location location,_                                                    int requestIndex, UpdateHelper updateHelper,_                                                    LongSupplier nowInMillisSupplier,_                                                    final MappingUpdatePerformer mappingUpdater) throws Exception {_        final DocWriteRequest<?> itemRequest = request.items()[requestIndex].request()__        final DocWriteRequest.OpType opType = itemRequest.opType()__        final BulkItemResultHolder responseHolder__        switch (itemRequest.opType()) {_            case CREATE:_            case INDEX:_                responseHolder = executeIndexRequest((IndexRequest) itemRequest,_                        request.items()[requestIndex], primary, mappingUpdater)__                break__            case UPDATE:_                responseHolder = executeUpdateRequest((UpdateRequest) itemRequest, primary, metaData, request,_                        requestIndex, updateHelper, nowInMillisSupplier, mappingUpdater)__                break__            case DELETE:_                responseHolder = executeDeleteRequest((DeleteRequest) itemRequest, request.items()[requestIndex], primary, mappingUpdater)__                break__            default: throw new IllegalStateException("unexpected opType [" + itemRequest.opType() + "] found")__        }__        final BulkItemRequest replicaRequest = responseHolder.replicaRequest___        _        request.items()[requestIndex] = replicaRequest___        _        BulkItemResponse primaryResponse = createPrimaryResponse(responseHolder, opType, request)__        if (primaryResponse != null) {_            replicaRequest.setPrimaryResponse(primaryResponse)__        }__        _        return calculateTranslogLocation(location, responseHolder)__    };executes,bulk,item,requests,and,handles,request,execution,exceptions;static,translog,location,execute,bulk,item,request,index,meta,data,meta,data,index,shard,primary,bulk,shard,request,request,translog,location,location,int,request,index,update,helper,update,helper,long,supplier,now,in,millis,supplier,final,mapping,update,performer,mapping,updater,throws,exception,final,doc,write,request,item,request,request,items,request,index,request,final,doc,write,request,op,type,op,type,item,request,op,type,final,bulk,item,result,holder,response,holder,switch,item,request,op,type,case,create,case,index,response,holder,execute,index,request,index,request,item,request,request,items,request,index,primary,mapping,updater,break,case,update,response,holder,execute,update,request,update,request,item,request,primary,meta,data,request,request,index,update,helper,now,in,millis,supplier,mapping,updater,break,case,delete,response,holder,execute,delete,request,delete,request,item,request,request,items,request,index,primary,mapping,updater,break,default,throw,new,illegal,state,exception,unexpected,op,type,item,request,op,type,found,final,bulk,item,request,replica,request,response,holder,replica,request,request,items,request,index,replica,request,bulk,item,response,primary,response,create,primary,response,response,holder,op,type,request,if,primary,response,null,replica,request,set,primary,response,primary,response,return,calculate,translog,location,location,response,holder
TransportShardBulkAction -> static Translog.Location executeBulkItemRequest(IndexMetaData metaData, IndexShard primary,                                                     BulkShardRequest request, Translog.Location location,                                                     int requestIndex, UpdateHelper updateHelper,                                                     LongSupplier nowInMillisSupplier,                                                     final MappingUpdatePerformer mappingUpdater) throws Exception;1533295538;Executes bulk item requests and handles request execution exceptions;static Translog.Location executeBulkItemRequest(IndexMetaData metaData, IndexShard primary,_                                                    BulkShardRequest request, Translog.Location location,_                                                    int requestIndex, UpdateHelper updateHelper,_                                                    LongSupplier nowInMillisSupplier,_                                                    final MappingUpdatePerformer mappingUpdater) throws Exception {_        final DocWriteRequest<?> itemRequest = request.items()[requestIndex].request()__        final DocWriteRequest.OpType opType = itemRequest.opType()__        final BulkItemResultHolder responseHolder__        switch (itemRequest.opType()) {_            case CREATE:_            case INDEX:_                responseHolder = executeIndexRequest((IndexRequest) itemRequest,_                        request.items()[requestIndex], primary, mappingUpdater)__                break__            case UPDATE:_                responseHolder = executeUpdateRequest((UpdateRequest) itemRequest, primary, metaData, request,_                        requestIndex, updateHelper, nowInMillisSupplier, mappingUpdater)__                break__            case DELETE:_                responseHolder = executeDeleteRequest((DeleteRequest) itemRequest, request.items()[requestIndex], primary, mappingUpdater)__                break__            default: throw new IllegalStateException("unexpected opType [" + itemRequest.opType() + "] found")__        }__        final BulkItemRequest replicaRequest = responseHolder.replicaRequest___        _        request.items()[requestIndex] = replicaRequest___        _        BulkItemResponse primaryResponse = createPrimaryResponse(responseHolder, opType, request)__        if (primaryResponse != null) {_            replicaRequest.setPrimaryResponse(primaryResponse)__        }__        _        return calculateTranslogLocation(location, responseHolder)__    };executes,bulk,item,requests,and,handles,request,execution,exceptions;static,translog,location,execute,bulk,item,request,index,meta,data,meta,data,index,shard,primary,bulk,shard,request,request,translog,location,location,int,request,index,update,helper,update,helper,long,supplier,now,in,millis,supplier,final,mapping,update,performer,mapping,updater,throws,exception,final,doc,write,request,item,request,request,items,request,index,request,final,doc,write,request,op,type,op,type,item,request,op,type,final,bulk,item,result,holder,response,holder,switch,item,request,op,type,case,create,case,index,response,holder,execute,index,request,index,request,item,request,request,items,request,index,primary,mapping,updater,break,case,update,response,holder,execute,update,request,update,request,item,request,primary,meta,data,request,request,index,update,helper,now,in,millis,supplier,mapping,updater,break,case,delete,response,holder,execute,delete,request,delete,request,item,request,request,items,request,index,primary,mapping,updater,break,default,throw,new,illegal,state,exception,unexpected,op,type,item,request,op,type,found,final,bulk,item,request,replica,request,response,holder,replica,request,request,items,request,index,replica,request,bulk,item,response,primary,response,create,primary,response,response,holder,op,type,request,if,primary,response,null,replica,request,set,primary,response,primary,response,return,calculate,translog,location,location,response,holder
TransportShardBulkAction -> static Engine.IndexResult executeIndexRequestOnPrimary(IndexRequest request, IndexShard primary,                                                            MappingUpdatePerformer mappingUpdater) throws Exception;1524684173;Executes index operation on primary shard after updates mapping if dynamic mappings are found;static Engine.IndexResult executeIndexRequestOnPrimary(IndexRequest request, IndexShard primary,_                                                           MappingUpdatePerformer mappingUpdater) throws Exception {_        final SourceToParse sourceToParse =_            SourceToParse.source(request.index(), request.type(), request.id(), request.source(), request.getContentType())_                .routing(request.routing())__        try {_            _            _            _            return primary.applyIndexOperationOnPrimary(request.version(), request.versionType(), sourceToParse,_                request.getAutoGeneratedTimestamp(), request.isRetry(), update -> {_                    mappingUpdater.updateMappings(update, primary.shardId(), sourceToParse.type())__                    throw new ReplicationOperation.RetryOnPrimaryException(primary.shardId(), "Mapping updated")__                })__        } catch (ReplicationOperation.RetryOnPrimaryException e) {_            return primary.applyIndexOperationOnPrimary(request.version(), request.versionType(), sourceToParse,_                request.getAutoGeneratedTimestamp(), request.isRetry(), update -> mappingUpdater.verifyMappings(update, primary.shardId()))__        }_    };executes,index,operation,on,primary,shard,after,updates,mapping,if,dynamic,mappings,are,found;static,engine,index,result,execute,index,request,on,primary,index,request,request,index,shard,primary,mapping,update,performer,mapping,updater,throws,exception,final,source,to,parse,source,to,parse,source,to,parse,source,request,index,request,type,request,id,request,source,request,get,content,type,routing,request,routing,try,return,primary,apply,index,operation,on,primary,request,version,request,version,type,source,to,parse,request,get,auto,generated,timestamp,request,is,retry,update,mapping,updater,update,mappings,update,primary,shard,id,source,to,parse,type,throw,new,replication,operation,retry,on,primary,exception,primary,shard,id,mapping,updated,catch,replication,operation,retry,on,primary,exception,e,return,primary,apply,index,operation,on,primary,request,version,request,version,type,source,to,parse,request,get,auto,generated,timestamp,request,is,retry,update,mapping,updater,verify,mappings,update,primary,shard,id
TransportShardBulkAction -> static Engine.IndexResult executeIndexRequestOnPrimary(IndexRequest request, IndexShard primary,                                                            MappingUpdatePerformer mappingUpdater) throws Exception;1525162917;Executes index operation on primary shard after updates mapping if dynamic mappings are found;static Engine.IndexResult executeIndexRequestOnPrimary(IndexRequest request, IndexShard primary,_                                                           MappingUpdatePerformer mappingUpdater) throws Exception {_        final SourceToParse sourceToParse =_            SourceToParse.source(request.index(), request.type(), request.id(), request.source(), request.getContentType())_                .routing(request.routing())__        return executeOnPrimaryWhileHandlingMappingUpdates(primary.shardId(), request.type(),_            () ->_                primary.applyIndexOperationOnPrimary(request.version(), request.versionType(), sourceToParse,_                    request.getAutoGeneratedTimestamp(), request.isRetry()),_            e -> new Engine.IndexResult(e, request.version()),_            mappingUpdater)__    };executes,index,operation,on,primary,shard,after,updates,mapping,if,dynamic,mappings,are,found;static,engine,index,result,execute,index,request,on,primary,index,request,request,index,shard,primary,mapping,update,performer,mapping,updater,throws,exception,final,source,to,parse,source,to,parse,source,to,parse,source,request,index,request,type,request,id,request,source,request,get,content,type,routing,request,routing,return,execute,on,primary,while,handling,mapping,updates,primary,shard,id,request,type,primary,apply,index,operation,on,primary,request,version,request,version,type,source,to,parse,request,get,auto,generated,timestamp,request,is,retry,e,new,engine,index,result,e,request,version,mapping,updater
TransportShardBulkAction -> static Engine.IndexResult executeIndexRequestOnPrimary(IndexRequest request, IndexShard primary,                                                            MappingUpdatePerformer mappingUpdater) throws Exception;1526029249;Executes index operation on primary shard after updates mapping if dynamic mappings are found;static Engine.IndexResult executeIndexRequestOnPrimary(IndexRequest request, IndexShard primary,_                                                           MappingUpdatePerformer mappingUpdater) throws Exception {_        final SourceToParse sourceToParse =_            SourceToParse.source(request.index(), request.type(), request.id(), request.source(), request.getContentType())_                .routing(request.routing())__        return executeOnPrimaryWhileHandlingMappingUpdates(primary.shardId(), request.type(),_            () ->_                primary.applyIndexOperationOnPrimary(request.version(), request.versionType(), sourceToParse,_                    request.getAutoGeneratedTimestamp(), request.isRetry()),_            e -> new Engine.IndexResult(e, request.version()),_            mappingUpdater)__    };executes,index,operation,on,primary,shard,after,updates,mapping,if,dynamic,mappings,are,found;static,engine,index,result,execute,index,request,on,primary,index,request,request,index,shard,primary,mapping,update,performer,mapping,updater,throws,exception,final,source,to,parse,source,to,parse,source,to,parse,source,request,index,request,type,request,id,request,source,request,get,content,type,routing,request,routing,return,execute,on,primary,while,handling,mapping,updates,primary,shard,id,request,type,primary,apply,index,operation,on,primary,request,version,request,version,type,source,to,parse,request,get,auto,generated,timestamp,request,is,retry,e,new,engine,index,result,e,request,version,mapping,updater
TransportShardBulkAction -> static Engine.IndexResult executeIndexRequestOnPrimary(IndexRequest request, IndexShard primary,                                                            MappingUpdatePerformer mappingUpdater) throws Exception;1528706846;Executes index operation on primary shard after updates mapping if dynamic mappings are found;static Engine.IndexResult executeIndexRequestOnPrimary(IndexRequest request, IndexShard primary,_                                                           MappingUpdatePerformer mappingUpdater) throws Exception {_        final SourceToParse sourceToParse =_            SourceToParse.source(request.index(), request.type(), request.id(), request.source(), request.getContentType())_                .routing(request.routing())__        return executeOnPrimaryWhileHandlingMappingUpdates(primary.shardId(), request.type(),_            () ->_                primary.applyIndexOperationOnPrimary(request.version(), request.versionType(), sourceToParse,_                    request.getAutoGeneratedTimestamp(), request.isRetry()),_            e -> new Engine.IndexResult(e, request.version()),_            mappingUpdater)__    };executes,index,operation,on,primary,shard,after,updates,mapping,if,dynamic,mappings,are,found;static,engine,index,result,execute,index,request,on,primary,index,request,request,index,shard,primary,mapping,update,performer,mapping,updater,throws,exception,final,source,to,parse,source,to,parse,source,to,parse,source,request,index,request,type,request,id,request,source,request,get,content,type,routing,request,routing,return,execute,on,primary,while,handling,mapping,updates,primary,shard,id,request,type,primary,apply,index,operation,on,primary,request,version,request,version,type,source,to,parse,request,get,auto,generated,timestamp,request,is,retry,e,new,engine,index,result,e,request,version,mapping,updater
TransportShardBulkAction -> static Engine.IndexResult executeIndexRequestOnPrimary(IndexRequest request, IndexShard primary,                                                            MappingUpdatePerformer mappingUpdater) throws Exception;1528977744;Executes index operation on primary shard after updates mapping if dynamic mappings are found;static Engine.IndexResult executeIndexRequestOnPrimary(IndexRequest request, IndexShard primary,_                                                           MappingUpdatePerformer mappingUpdater) throws Exception {_        final SourceToParse sourceToParse =_            SourceToParse.source(request.index(), request.type(), request.id(), request.source(), request.getContentType())_                .routing(request.routing())__        return executeOnPrimaryWhileHandlingMappingUpdates(primary.shardId(), request.type(),_            () ->_                primary.applyIndexOperationOnPrimary(request.version(), request.versionType(), sourceToParse,_                    request.getAutoGeneratedTimestamp(), request.isRetry()),_            e -> new Engine.IndexResult(e, request.version()),_            mappingUpdater)__    };executes,index,operation,on,primary,shard,after,updates,mapping,if,dynamic,mappings,are,found;static,engine,index,result,execute,index,request,on,primary,index,request,request,index,shard,primary,mapping,update,performer,mapping,updater,throws,exception,final,source,to,parse,source,to,parse,source,to,parse,source,request,index,request,type,request,id,request,source,request,get,content,type,routing,request,routing,return,execute,on,primary,while,handling,mapping,updates,primary,shard,id,request,type,primary,apply,index,operation,on,primary,request,version,request,version,type,source,to,parse,request,get,auto,generated,timestamp,request,is,retry,e,new,engine,index,result,e,request,version,mapping,updater
TransportShardBulkAction -> static Engine.IndexResult executeIndexRequestOnPrimary(IndexRequest request, IndexShard primary,                                                            MappingUpdatePerformer mappingUpdater) throws Exception;1529658035;Executes index operation on primary shard after updates mapping if dynamic mappings are found;static Engine.IndexResult executeIndexRequestOnPrimary(IndexRequest request, IndexShard primary,_                                                           MappingUpdatePerformer mappingUpdater) throws Exception {_        final SourceToParse sourceToParse =_            SourceToParse.source(request.index(), request.type(), request.id(), request.source(), request.getContentType())_                .routing(request.routing())__        return executeOnPrimaryWhileHandlingMappingUpdates(primary.shardId(), request.type(),_            () ->_                primary.applyIndexOperationOnPrimary(request.version(), request.versionType(), sourceToParse,_                    request.getAutoGeneratedTimestamp(), request.isRetry()),_            e -> new Engine.IndexResult(e, request.version()),_            mappingUpdater)__    };executes,index,operation,on,primary,shard,after,updates,mapping,if,dynamic,mappings,are,found;static,engine,index,result,execute,index,request,on,primary,index,request,request,index,shard,primary,mapping,update,performer,mapping,updater,throws,exception,final,source,to,parse,source,to,parse,source,to,parse,source,request,index,request,type,request,id,request,source,request,get,content,type,routing,request,routing,return,execute,on,primary,while,handling,mapping,updates,primary,shard,id,request,type,primary,apply,index,operation,on,primary,request,version,request,version,type,source,to,parse,request,get,auto,generated,timestamp,request,is,retry,e,new,engine,index,result,e,request,version,mapping,updater
TransportShardBulkAction -> static Engine.IndexResult executeIndexRequestOnPrimary(IndexRequest request, IndexShard primary,                                                            MappingUpdatePerformer mappingUpdater) throws Exception;1531179852;Executes index operation on primary shard after updates mapping if dynamic mappings are found;static Engine.IndexResult executeIndexRequestOnPrimary(IndexRequest request, IndexShard primary,_                                                           MappingUpdatePerformer mappingUpdater) throws Exception {_        final SourceToParse sourceToParse =_            SourceToParse.source(request.index(), request.type(), request.id(), request.source(), request.getContentType())_                .routing(request.routing())__        return executeOnPrimaryWhileHandlingMappingUpdates(primary.shardId(), request.type(),_            () ->_                primary.applyIndexOperationOnPrimary(request.version(), request.versionType(), sourceToParse,_                    request.getAutoGeneratedTimestamp(), request.isRetry()),_            e -> new Engine.IndexResult(e, request.version()),_            mappingUpdater)__    };executes,index,operation,on,primary,shard,after,updates,mapping,if,dynamic,mappings,are,found;static,engine,index,result,execute,index,request,on,primary,index,request,request,index,shard,primary,mapping,update,performer,mapping,updater,throws,exception,final,source,to,parse,source,to,parse,source,to,parse,source,request,index,request,type,request,id,request,source,request,get,content,type,routing,request,routing,return,execute,on,primary,while,handling,mapping,updates,primary,shard,id,request,type,primary,apply,index,operation,on,primary,request,version,request,version,type,source,to,parse,request,get,auto,generated,timestamp,request,is,retry,e,new,engine,index,result,e,request,version,mapping,updater
TransportShardBulkAction -> static Engine.IndexResult executeIndexRequestOnPrimary(IndexRequest request, IndexShard primary,                                                            MappingUpdatePerformer mappingUpdater) throws Exception;1531910483;Executes index operation on primary shard after updates mapping if dynamic mappings are found;static Engine.IndexResult executeIndexRequestOnPrimary(IndexRequest request, IndexShard primary,_                                                           MappingUpdatePerformer mappingUpdater) throws Exception {_        final SourceToParse sourceToParse =_            SourceToParse.source(request.index(), request.type(), request.id(), request.source(), request.getContentType())_                .routing(request.routing())__        return executeOnPrimaryWhileHandlingMappingUpdates(primary.shardId(), request.type(),_            () ->_                primary.applyIndexOperationOnPrimary(request.version(), request.versionType(), sourceToParse,_                    request.getAutoGeneratedTimestamp(), request.isRetry()),_            e -> new Engine.IndexResult(e, request.version()),_            mappingUpdater)__    };executes,index,operation,on,primary,shard,after,updates,mapping,if,dynamic,mappings,are,found;static,engine,index,result,execute,index,request,on,primary,index,request,request,index,shard,primary,mapping,update,performer,mapping,updater,throws,exception,final,source,to,parse,source,to,parse,source,to,parse,source,request,index,request,type,request,id,request,source,request,get,content,type,routing,request,routing,return,execute,on,primary,while,handling,mapping,updates,primary,shard,id,request,type,primary,apply,index,operation,on,primary,request,version,request,version,type,source,to,parse,request,get,auto,generated,timestamp,request,is,retry,e,new,engine,index,result,e,request,version,mapping,updater
TransportShardBulkAction -> static Engine.IndexResult executeIndexRequestOnPrimary(IndexRequest request, IndexShard primary,                                                            MappingUpdatePerformer mappingUpdater) throws Exception;1533295538;Executes index operation on primary shard after updates mapping if dynamic mappings are found;static Engine.IndexResult executeIndexRequestOnPrimary(IndexRequest request, IndexShard primary,_                                                           MappingUpdatePerformer mappingUpdater) throws Exception {_        final SourceToParse sourceToParse =_            SourceToParse.source(request.index(), request.type(), request.id(), request.source(), request.getContentType())_                .routing(request.routing())__        return executeOnPrimaryWhileHandlingMappingUpdates(primary.shardId(), request.type(),_            () ->_                primary.applyIndexOperationOnPrimary(request.version(), request.versionType(), sourceToParse,_                    request.getAutoGeneratedTimestamp(), request.isRetry()),_            e -> primary.getFailedIndexResult(e, request.version()),_            mappingUpdater)__    };executes,index,operation,on,primary,shard,after,updates,mapping,if,dynamic,mappings,are,found;static,engine,index,result,execute,index,request,on,primary,index,request,request,index,shard,primary,mapping,update,performer,mapping,updater,throws,exception,final,source,to,parse,source,to,parse,source,to,parse,source,request,index,request,type,request,id,request,source,request,get,content,type,routing,request,routing,return,execute,on,primary,while,handling,mapping,updates,primary,shard,id,request,type,primary,apply,index,operation,on,primary,request,version,request,version,type,source,to,parse,request,get,auto,generated,timestamp,request,is,retry,e,primary,get,failed,index,result,e,request,version,mapping,updater
TransportShardBulkAction -> static BulkItemResponse processUpdateResponse(final UpdateRequest updateRequest, final String concreteIndex,                                                   BulkItemResponse operationResponse,                                                   final UpdateHelper.Result translate);1533921794;Creates a new bulk item result from the given requests and result of performing the update operation on the shard.;static BulkItemResponse processUpdateResponse(final UpdateRequest updateRequest, final String concreteIndex,_                                                  BulkItemResponse operationResponse,_                                                  final UpdateHelper.Result translate) {__        final BulkItemResponse response__        DocWriteResponse.Result translatedResult = translate.getResponseResult()__        if (operationResponse.isFailed()) {_            response = new BulkItemResponse(operationResponse.getItemId(), DocWriteRequest.OpType.UPDATE, operationResponse.getFailure())__        } else {__            final UpdateResponse updateResponse__            if (translatedResult == DocWriteResponse.Result.CREATED || translatedResult == DocWriteResponse.Result.UPDATED) {_                final IndexRequest updateIndexRequest = translate.action()__                final IndexResponse indexResponse = operationResponse.getResponse()__                updateResponse = new UpdateResponse(indexResponse.getShardInfo(), indexResponse.getShardId(),_                    indexResponse.getType(), indexResponse.getId(), indexResponse.getSeqNo(), indexResponse.getPrimaryTerm(),_                    indexResponse.getVersion(), indexResponse.getResult())___                if (updateRequest.fetchSource() != null && updateRequest.fetchSource().fetchSource()) {_                    final BytesReference indexSourceAsBytes = updateIndexRequest.source()__                    final Tuple<XContentType, Map<String, Object>> sourceAndContent =_                        XContentHelper.convertToMap(indexSourceAsBytes, true, updateIndexRequest.getContentType())__                    updateResponse.setGetResult(UpdateHelper.extractGetResult(updateRequest, concreteIndex,_                        indexResponse.getVersion(), sourceAndContent.v2(), sourceAndContent.v1(), indexSourceAsBytes))__                }_            } else if (translatedResult == DocWriteResponse.Result.DELETED) {_                final DeleteResponse deleteResponse = operationResponse.getResponse()__                updateResponse = new UpdateResponse(deleteResponse.getShardInfo(), deleteResponse.getShardId(),_                    deleteResponse.getType(), deleteResponse.getId(), deleteResponse.getSeqNo(), deleteResponse.getPrimaryTerm(),_                    deleteResponse.getVersion(), deleteResponse.getResult())___                final GetResult getResult = UpdateHelper.extractGetResult(updateRequest, concreteIndex, deleteResponse.getVersion(),_                    translate.updatedSourceAsMap(), translate.updateSourceContentType(), null)___                updateResponse.setGetResult(getResult)__            } else {_                throw new IllegalArgumentException("unknown operation type: " + translatedResult)__            }_            response = new BulkItemResponse(operationResponse.getItemId(), DocWriteRequest.OpType.UPDATE, updateResponse)__        }_        return response__    };creates,a,new,bulk,item,result,from,the,given,requests,and,result,of,performing,the,update,operation,on,the,shard;static,bulk,item,response,process,update,response,final,update,request,update,request,final,string,concrete,index,bulk,item,response,operation,response,final,update,helper,result,translate,final,bulk,item,response,response,doc,write,response,result,translated,result,translate,get,response,result,if,operation,response,is,failed,response,new,bulk,item,response,operation,response,get,item,id,doc,write,request,op,type,update,operation,response,get,failure,else,final,update,response,update,response,if,translated,result,doc,write,response,result,created,translated,result,doc,write,response,result,updated,final,index,request,update,index,request,translate,action,final,index,response,index,response,operation,response,get,response,update,response,new,update,response,index,response,get,shard,info,index,response,get,shard,id,index,response,get,type,index,response,get,id,index,response,get,seq,no,index,response,get,primary,term,index,response,get,version,index,response,get,result,if,update,request,fetch,source,null,update,request,fetch,source,fetch,source,final,bytes,reference,index,source,as,bytes,update,index,request,source,final,tuple,xcontent,type,map,string,object,source,and,content,xcontent,helper,convert,to,map,index,source,as,bytes,true,update,index,request,get,content,type,update,response,set,get,result,update,helper,extract,get,result,update,request,concrete,index,index,response,get,version,source,and,content,v2,source,and,content,v1,index,source,as,bytes,else,if,translated,result,doc,write,response,result,deleted,final,delete,response,delete,response,operation,response,get,response,update,response,new,update,response,delete,response,get,shard,info,delete,response,get,shard,id,delete,response,get,type,delete,response,get,id,delete,response,get,seq,no,delete,response,get,primary,term,delete,response,get,version,delete,response,get,result,final,get,result,get,result,update,helper,extract,get,result,update,request,concrete,index,delete,response,get,version,translate,updated,source,as,map,translate,update,source,content,type,null,update,response,set,get,result,get,result,else,throw,new,illegal,argument,exception,unknown,operation,type,translated,result,response,new,bulk,item,response,operation,response,get,item,id,doc,write,request,op,type,update,update,response,return,response
TransportShardBulkAction -> static BulkItemResponse processUpdateResponse(final UpdateRequest updateRequest, final String concreteIndex,                                                   BulkItemResponse operationResponse,                                                   final UpdateHelper.Result translate);1539615817;Creates a new bulk item result from the given requests and result of performing the update operation on the shard.;static BulkItemResponse processUpdateResponse(final UpdateRequest updateRequest, final String concreteIndex,_                                                  BulkItemResponse operationResponse,_                                                  final UpdateHelper.Result translate) {__        final BulkItemResponse response__        DocWriteResponse.Result translatedResult = translate.getResponseResult()__        if (operationResponse.isFailed()) {_            response = new BulkItemResponse(operationResponse.getItemId(), DocWriteRequest.OpType.UPDATE, operationResponse.getFailure())__        } else {__            final UpdateResponse updateResponse__            if (translatedResult == DocWriteResponse.Result.CREATED || translatedResult == DocWriteResponse.Result.UPDATED) {_                final IndexRequest updateIndexRequest = translate.action()__                final IndexResponse indexResponse = operationResponse.getResponse()__                updateResponse = new UpdateResponse(indexResponse.getShardInfo(), indexResponse.getShardId(),_                    indexResponse.getType(), indexResponse.getId(), indexResponse.getSeqNo(), indexResponse.getPrimaryTerm(),_                    indexResponse.getVersion(), indexResponse.getResult())___                if (updateRequest.fetchSource() != null && updateRequest.fetchSource().fetchSource()) {_                    final BytesReference indexSourceAsBytes = updateIndexRequest.source()__                    final Tuple<XContentType, Map<String, Object>> sourceAndContent =_                        XContentHelper.convertToMap(indexSourceAsBytes, true, updateIndexRequest.getContentType())__                    updateResponse.setGetResult(UpdateHelper.extractGetResult(updateRequest, concreteIndex,_                        indexResponse.getVersion(), sourceAndContent.v2(), sourceAndContent.v1(), indexSourceAsBytes))__                }_            } else if (translatedResult == DocWriteResponse.Result.DELETED) {_                final DeleteResponse deleteResponse = operationResponse.getResponse()__                updateResponse = new UpdateResponse(deleteResponse.getShardInfo(), deleteResponse.getShardId(),_                    deleteResponse.getType(), deleteResponse.getId(), deleteResponse.getSeqNo(), deleteResponse.getPrimaryTerm(),_                    deleteResponse.getVersion(), deleteResponse.getResult())___                final GetResult getResult = UpdateHelper.extractGetResult(updateRequest, concreteIndex, deleteResponse.getVersion(),_                    translate.updatedSourceAsMap(), translate.updateSourceContentType(), null)___                updateResponse.setGetResult(getResult)__            } else {_                throw new IllegalArgumentException("unknown operation type: " + translatedResult)__            }_            response = new BulkItemResponse(operationResponse.getItemId(), DocWriteRequest.OpType.UPDATE, updateResponse)__        }_        return response__    };creates,a,new,bulk,item,result,from,the,given,requests,and,result,of,performing,the,update,operation,on,the,shard;static,bulk,item,response,process,update,response,final,update,request,update,request,final,string,concrete,index,bulk,item,response,operation,response,final,update,helper,result,translate,final,bulk,item,response,response,doc,write,response,result,translated,result,translate,get,response,result,if,operation,response,is,failed,response,new,bulk,item,response,operation,response,get,item,id,doc,write,request,op,type,update,operation,response,get,failure,else,final,update,response,update,response,if,translated,result,doc,write,response,result,created,translated,result,doc,write,response,result,updated,final,index,request,update,index,request,translate,action,final,index,response,index,response,operation,response,get,response,update,response,new,update,response,index,response,get,shard,info,index,response,get,shard,id,index,response,get,type,index,response,get,id,index,response,get,seq,no,index,response,get,primary,term,index,response,get,version,index,response,get,result,if,update,request,fetch,source,null,update,request,fetch,source,fetch,source,final,bytes,reference,index,source,as,bytes,update,index,request,source,final,tuple,xcontent,type,map,string,object,source,and,content,xcontent,helper,convert,to,map,index,source,as,bytes,true,update,index,request,get,content,type,update,response,set,get,result,update,helper,extract,get,result,update,request,concrete,index,index,response,get,version,source,and,content,v2,source,and,content,v1,index,source,as,bytes,else,if,translated,result,doc,write,response,result,deleted,final,delete,response,delete,response,operation,response,get,response,update,response,new,update,response,delete,response,get,shard,info,delete,response,get,shard,id,delete,response,get,type,delete,response,get,id,delete,response,get,seq,no,delete,response,get,primary,term,delete,response,get,version,delete,response,get,result,final,get,result,get,result,update,helper,extract,get,result,update,request,concrete,index,delete,response,get,version,translate,updated,source,as,map,translate,update,source,content,type,null,update,response,set,get,result,get,result,else,throw,new,illegal,argument,exception,unknown,operation,type,translated,result,response,new,bulk,item,response,operation,response,get,item,id,doc,write,request,op,type,update,update,response,return,response
TransportShardBulkAction -> static BulkItemResponse processUpdateResponse(final UpdateRequest updateRequest, final String concreteIndex,                                                   BulkItemResponse operationResponse,                                                   final UpdateHelper.Result translate);1541008027;Creates a new bulk item result from the given requests and result of performing the update operation on the shard.;static BulkItemResponse processUpdateResponse(final UpdateRequest updateRequest, final String concreteIndex,_                                                  BulkItemResponse operationResponse,_                                                  final UpdateHelper.Result translate) {__        final BulkItemResponse response__        DocWriteResponse.Result translatedResult = translate.getResponseResult()__        if (operationResponse.isFailed()) {_            response = new BulkItemResponse(operationResponse.getItemId(), DocWriteRequest.OpType.UPDATE, operationResponse.getFailure())__        } else {__            final UpdateResponse updateResponse__            if (translatedResult == DocWriteResponse.Result.CREATED || translatedResult == DocWriteResponse.Result.UPDATED) {_                final IndexRequest updateIndexRequest = translate.action()__                final IndexResponse indexResponse = operationResponse.getResponse()__                updateResponse = new UpdateResponse(indexResponse.getShardInfo(), indexResponse.getShardId(),_                    indexResponse.getType(), indexResponse.getId(), indexResponse.getSeqNo(), indexResponse.getPrimaryTerm(),_                    indexResponse.getVersion(), indexResponse.getResult())___                if (updateRequest.fetchSource() != null && updateRequest.fetchSource().fetchSource()) {_                    final BytesReference indexSourceAsBytes = updateIndexRequest.source()__                    final Tuple<XContentType, Map<String, Object>> sourceAndContent =_                        XContentHelper.convertToMap(indexSourceAsBytes, true, updateIndexRequest.getContentType())__                    updateResponse.setGetResult(UpdateHelper.extractGetResult(updateRequest, concreteIndex,_                        indexResponse.getVersion(), sourceAndContent.v2(), sourceAndContent.v1(), indexSourceAsBytes))__                }_            } else if (translatedResult == DocWriteResponse.Result.DELETED) {_                final DeleteResponse deleteResponse = operationResponse.getResponse()__                updateResponse = new UpdateResponse(deleteResponse.getShardInfo(), deleteResponse.getShardId(),_                    deleteResponse.getType(), deleteResponse.getId(), deleteResponse.getSeqNo(), deleteResponse.getPrimaryTerm(),_                    deleteResponse.getVersion(), deleteResponse.getResult())___                final GetResult getResult = UpdateHelper.extractGetResult(updateRequest, concreteIndex, deleteResponse.getVersion(),_                    translate.updatedSourceAsMap(), translate.updateSourceContentType(), null)___                updateResponse.setGetResult(getResult)__            } else {_                throw new IllegalArgumentException("unknown operation type: " + translatedResult)__            }_            response = new BulkItemResponse(operationResponse.getItemId(), DocWriteRequest.OpType.UPDATE, updateResponse)__        }_        return response__    };creates,a,new,bulk,item,result,from,the,given,requests,and,result,of,performing,the,update,operation,on,the,shard;static,bulk,item,response,process,update,response,final,update,request,update,request,final,string,concrete,index,bulk,item,response,operation,response,final,update,helper,result,translate,final,bulk,item,response,response,doc,write,response,result,translated,result,translate,get,response,result,if,operation,response,is,failed,response,new,bulk,item,response,operation,response,get,item,id,doc,write,request,op,type,update,operation,response,get,failure,else,final,update,response,update,response,if,translated,result,doc,write,response,result,created,translated,result,doc,write,response,result,updated,final,index,request,update,index,request,translate,action,final,index,response,index,response,operation,response,get,response,update,response,new,update,response,index,response,get,shard,info,index,response,get,shard,id,index,response,get,type,index,response,get,id,index,response,get,seq,no,index,response,get,primary,term,index,response,get,version,index,response,get,result,if,update,request,fetch,source,null,update,request,fetch,source,fetch,source,final,bytes,reference,index,source,as,bytes,update,index,request,source,final,tuple,xcontent,type,map,string,object,source,and,content,xcontent,helper,convert,to,map,index,source,as,bytes,true,update,index,request,get,content,type,update,response,set,get,result,update,helper,extract,get,result,update,request,concrete,index,index,response,get,version,source,and,content,v2,source,and,content,v1,index,source,as,bytes,else,if,translated,result,doc,write,response,result,deleted,final,delete,response,delete,response,operation,response,get,response,update,response,new,update,response,delete,response,get,shard,info,delete,response,get,shard,id,delete,response,get,type,delete,response,get,id,delete,response,get,seq,no,delete,response,get,primary,term,delete,response,get,version,delete,response,get,result,final,get,result,get,result,update,helper,extract,get,result,update,request,concrete,index,delete,response,get,version,translate,updated,source,as,map,translate,update,source,content,type,null,update,response,set,get,result,get,result,else,throw,new,illegal,argument,exception,unknown,operation,type,translated,result,response,new,bulk,item,response,operation,response,get,item,id,doc,write,request,op,type,update,update,response,return,response
TransportShardBulkAction -> static BulkItemResponse processUpdateResponse(final UpdateRequest updateRequest, final String concreteIndex,                                                   BulkItemResponse operationResponse,                                                   final UpdateHelper.Result translate);1544893197;Creates a new bulk item result from the given requests and result of performing the update operation on the shard.;static BulkItemResponse processUpdateResponse(final UpdateRequest updateRequest, final String concreteIndex,_                                                  BulkItemResponse operationResponse,_                                                  final UpdateHelper.Result translate) {__        final BulkItemResponse response__        DocWriteResponse.Result translatedResult = translate.getResponseResult()__        if (operationResponse.isFailed()) {_            response = new BulkItemResponse(operationResponse.getItemId(), DocWriteRequest.OpType.UPDATE, operationResponse.getFailure())__        } else {__            final UpdateResponse updateResponse__            if (translatedResult == DocWriteResponse.Result.CREATED || translatedResult == DocWriteResponse.Result.UPDATED) {_                final IndexRequest updateIndexRequest = translate.action()__                final IndexResponse indexResponse = operationResponse.getResponse()__                updateResponse = new UpdateResponse(indexResponse.getShardInfo(), indexResponse.getShardId(),_                    indexResponse.getType(), indexResponse.getId(), indexResponse.getSeqNo(), indexResponse.getPrimaryTerm(),_                    indexResponse.getVersion(), indexResponse.getResult())___                if (updateRequest.fetchSource() != null && updateRequest.fetchSource().fetchSource()) {_                    final BytesReference indexSourceAsBytes = updateIndexRequest.source()__                    final Tuple<XContentType, Map<String, Object>> sourceAndContent =_                        XContentHelper.convertToMap(indexSourceAsBytes, true, updateIndexRequest.getContentType())__                    updateResponse.setGetResult(UpdateHelper.extractGetResult(updateRequest, concreteIndex,_                        indexResponse.getVersion(), sourceAndContent.v2(), sourceAndContent.v1(), indexSourceAsBytes))__                }_            } else if (translatedResult == DocWriteResponse.Result.DELETED) {_                final DeleteResponse deleteResponse = operationResponse.getResponse()__                updateResponse = new UpdateResponse(deleteResponse.getShardInfo(), deleteResponse.getShardId(),_                    deleteResponse.getType(), deleteResponse.getId(), deleteResponse.getSeqNo(), deleteResponse.getPrimaryTerm(),_                    deleteResponse.getVersion(), deleteResponse.getResult())___                final GetResult getResult = UpdateHelper.extractGetResult(updateRequest, concreteIndex, deleteResponse.getVersion(),_                    translate.updatedSourceAsMap(), translate.updateSourceContentType(), null)___                updateResponse.setGetResult(getResult)__            } else {_                throw new IllegalArgumentException("unknown operation type: " + translatedResult)__            }_            response = new BulkItemResponse(operationResponse.getItemId(), DocWriteRequest.OpType.UPDATE, updateResponse)__        }_        return response__    };creates,a,new,bulk,item,result,from,the,given,requests,and,result,of,performing,the,update,operation,on,the,shard;static,bulk,item,response,process,update,response,final,update,request,update,request,final,string,concrete,index,bulk,item,response,operation,response,final,update,helper,result,translate,final,bulk,item,response,response,doc,write,response,result,translated,result,translate,get,response,result,if,operation,response,is,failed,response,new,bulk,item,response,operation,response,get,item,id,doc,write,request,op,type,update,operation,response,get,failure,else,final,update,response,update,response,if,translated,result,doc,write,response,result,created,translated,result,doc,write,response,result,updated,final,index,request,update,index,request,translate,action,final,index,response,index,response,operation,response,get,response,update,response,new,update,response,index,response,get,shard,info,index,response,get,shard,id,index,response,get,type,index,response,get,id,index,response,get,seq,no,index,response,get,primary,term,index,response,get,version,index,response,get,result,if,update,request,fetch,source,null,update,request,fetch,source,fetch,source,final,bytes,reference,index,source,as,bytes,update,index,request,source,final,tuple,xcontent,type,map,string,object,source,and,content,xcontent,helper,convert,to,map,index,source,as,bytes,true,update,index,request,get,content,type,update,response,set,get,result,update,helper,extract,get,result,update,request,concrete,index,index,response,get,version,source,and,content,v2,source,and,content,v1,index,source,as,bytes,else,if,translated,result,doc,write,response,result,deleted,final,delete,response,delete,response,operation,response,get,response,update,response,new,update,response,delete,response,get,shard,info,delete,response,get,shard,id,delete,response,get,type,delete,response,get,id,delete,response,get,seq,no,delete,response,get,primary,term,delete,response,get,version,delete,response,get,result,final,get,result,get,result,update,helper,extract,get,result,update,request,concrete,index,delete,response,get,version,translate,updated,source,as,map,translate,update,source,content,type,null,update,response,set,get,result,get,result,else,throw,new,illegal,argument,exception,unknown,operation,type,translated,result,response,new,bulk,item,response,operation,response,get,item,id,doc,write,request,op,type,update,update,response,return,response
TransportShardBulkAction -> static BulkItemResponse processUpdateResponse(final UpdateRequest updateRequest, final String concreteIndex,                                                   BulkItemResponse operationResponse,                                                   final UpdateHelper.Result translate);1545056533;Creates a new bulk item result from the given requests and result of performing the update operation on the shard.;static BulkItemResponse processUpdateResponse(final UpdateRequest updateRequest, final String concreteIndex,_                                                  BulkItemResponse operationResponse,_                                                  final UpdateHelper.Result translate) {__        final BulkItemResponse response__        DocWriteResponse.Result translatedResult = translate.getResponseResult()__        if (operationResponse.isFailed()) {_            response = new BulkItemResponse(operationResponse.getItemId(), DocWriteRequest.OpType.UPDATE, operationResponse.getFailure())__        } else {__            final UpdateResponse updateResponse__            if (translatedResult == DocWriteResponse.Result.CREATED || translatedResult == DocWriteResponse.Result.UPDATED) {_                final IndexRequest updateIndexRequest = translate.action()__                final IndexResponse indexResponse = operationResponse.getResponse()__                updateResponse = new UpdateResponse(indexResponse.getShardInfo(), indexResponse.getShardId(),_                    indexResponse.getType(), indexResponse.getId(), indexResponse.getSeqNo(), indexResponse.getPrimaryTerm(),_                    indexResponse.getVersion(), indexResponse.getResult())___                if (updateRequest.fetchSource() != null && updateRequest.fetchSource().fetchSource()) {_                    final BytesReference indexSourceAsBytes = updateIndexRequest.source()__                    final Tuple<XContentType, Map<String, Object>> sourceAndContent =_                        XContentHelper.convertToMap(indexSourceAsBytes, true, updateIndexRequest.getContentType())__                    updateResponse.setGetResult(UpdateHelper.extractGetResult(updateRequest, concreteIndex,_                        indexResponse.getSeqNo(), indexResponse.getPrimaryTerm(),_                        indexResponse.getVersion(), sourceAndContent.v2(), sourceAndContent.v1(), indexSourceAsBytes))__                }_            } else if (translatedResult == DocWriteResponse.Result.DELETED) {_                final DeleteResponse deleteResponse = operationResponse.getResponse()__                updateResponse = new UpdateResponse(deleteResponse.getShardInfo(), deleteResponse.getShardId(),_                    deleteResponse.getType(), deleteResponse.getId(), deleteResponse.getSeqNo(), deleteResponse.getPrimaryTerm(),_                    deleteResponse.getVersion(), deleteResponse.getResult())___                final GetResult getResult = UpdateHelper.extractGetResult(updateRequest, concreteIndex,_                    deleteResponse.getSeqNo(), deleteResponse.getPrimaryTerm(), deleteResponse.getVersion(),_                    translate.updatedSourceAsMap(), translate.updateSourceContentType(), null)___                updateResponse.setGetResult(getResult)__            } else {_                throw new IllegalArgumentException("unknown operation type: " + translatedResult)__            }_            response = new BulkItemResponse(operationResponse.getItemId(), DocWriteRequest.OpType.UPDATE, updateResponse)__        }_        return response__    };creates,a,new,bulk,item,result,from,the,given,requests,and,result,of,performing,the,update,operation,on,the,shard;static,bulk,item,response,process,update,response,final,update,request,update,request,final,string,concrete,index,bulk,item,response,operation,response,final,update,helper,result,translate,final,bulk,item,response,response,doc,write,response,result,translated,result,translate,get,response,result,if,operation,response,is,failed,response,new,bulk,item,response,operation,response,get,item,id,doc,write,request,op,type,update,operation,response,get,failure,else,final,update,response,update,response,if,translated,result,doc,write,response,result,created,translated,result,doc,write,response,result,updated,final,index,request,update,index,request,translate,action,final,index,response,index,response,operation,response,get,response,update,response,new,update,response,index,response,get,shard,info,index,response,get,shard,id,index,response,get,type,index,response,get,id,index,response,get,seq,no,index,response,get,primary,term,index,response,get,version,index,response,get,result,if,update,request,fetch,source,null,update,request,fetch,source,fetch,source,final,bytes,reference,index,source,as,bytes,update,index,request,source,final,tuple,xcontent,type,map,string,object,source,and,content,xcontent,helper,convert,to,map,index,source,as,bytes,true,update,index,request,get,content,type,update,response,set,get,result,update,helper,extract,get,result,update,request,concrete,index,index,response,get,seq,no,index,response,get,primary,term,index,response,get,version,source,and,content,v2,source,and,content,v1,index,source,as,bytes,else,if,translated,result,doc,write,response,result,deleted,final,delete,response,delete,response,operation,response,get,response,update,response,new,update,response,delete,response,get,shard,info,delete,response,get,shard,id,delete,response,get,type,delete,response,get,id,delete,response,get,seq,no,delete,response,get,primary,term,delete,response,get,version,delete,response,get,result,final,get,result,get,result,update,helper,extract,get,result,update,request,concrete,index,delete,response,get,seq,no,delete,response,get,primary,term,delete,response,get,version,translate,updated,source,as,map,translate,update,source,content,type,null,update,response,set,get,result,get,result,else,throw,new,illegal,argument,exception,unknown,operation,type,translated,result,response,new,bulk,item,response,operation,response,get,item,id,doc,write,request,op,type,update,update,response,return,response
TransportShardBulkAction -> static BulkItemResponse processUpdateResponse(final UpdateRequest updateRequest, final String concreteIndex,                                                   BulkItemResponse operationResponse,                                                   final UpdateHelper.Result translate);1545140118;Creates a new bulk item result from the given requests and result of performing the update operation on the shard.;static BulkItemResponse processUpdateResponse(final UpdateRequest updateRequest, final String concreteIndex,_                                                  BulkItemResponse operationResponse,_                                                  final UpdateHelper.Result translate) {__        final BulkItemResponse response__        DocWriteResponse.Result translatedResult = translate.getResponseResult()__        if (operationResponse.isFailed()) {_            response = new BulkItemResponse(operationResponse.getItemId(), DocWriteRequest.OpType.UPDATE, operationResponse.getFailure())__        } else {__            final UpdateResponse updateResponse__            if (translatedResult == DocWriteResponse.Result.CREATED || translatedResult == DocWriteResponse.Result.UPDATED) {_                final IndexRequest updateIndexRequest = translate.action()__                final IndexResponse indexResponse = operationResponse.getResponse()__                updateResponse = new UpdateResponse(indexResponse.getShardInfo(), indexResponse.getShardId(),_                    indexResponse.getType(), indexResponse.getId(), indexResponse.getSeqNo(), indexResponse.getPrimaryTerm(),_                    indexResponse.getVersion(), indexResponse.getResult())___                if (updateRequest.fetchSource() != null && updateRequest.fetchSource().fetchSource()) {_                    final BytesReference indexSourceAsBytes = updateIndexRequest.source()__                    final Tuple<XContentType, Map<String, Object>> sourceAndContent =_                        XContentHelper.convertToMap(indexSourceAsBytes, true, updateIndexRequest.getContentType())__                    updateResponse.setGetResult(UpdateHelper.extractGetResult(updateRequest, concreteIndex,_                        indexResponse.getSeqNo(), indexResponse.getPrimaryTerm(),_                        indexResponse.getVersion(), sourceAndContent.v2(), sourceAndContent.v1(), indexSourceAsBytes))__                }_            } else if (translatedResult == DocWriteResponse.Result.DELETED) {_                final DeleteResponse deleteResponse = operationResponse.getResponse()__                updateResponse = new UpdateResponse(deleteResponse.getShardInfo(), deleteResponse.getShardId(),_                    deleteResponse.getType(), deleteResponse.getId(), deleteResponse.getSeqNo(), deleteResponse.getPrimaryTerm(),_                    deleteResponse.getVersion(), deleteResponse.getResult())___                final GetResult getResult = UpdateHelper.extractGetResult(updateRequest, concreteIndex,_                    deleteResponse.getSeqNo(), deleteResponse.getPrimaryTerm(), deleteResponse.getVersion(),_                    translate.updatedSourceAsMap(), translate.updateSourceContentType(), null)___                updateResponse.setGetResult(getResult)__            } else {_                throw new IllegalArgumentException("unknown operation type: " + translatedResult)__            }_            response = new BulkItemResponse(operationResponse.getItemId(), DocWriteRequest.OpType.UPDATE, updateResponse)__        }_        return response__    };creates,a,new,bulk,item,result,from,the,given,requests,and,result,of,performing,the,update,operation,on,the,shard;static,bulk,item,response,process,update,response,final,update,request,update,request,final,string,concrete,index,bulk,item,response,operation,response,final,update,helper,result,translate,final,bulk,item,response,response,doc,write,response,result,translated,result,translate,get,response,result,if,operation,response,is,failed,response,new,bulk,item,response,operation,response,get,item,id,doc,write,request,op,type,update,operation,response,get,failure,else,final,update,response,update,response,if,translated,result,doc,write,response,result,created,translated,result,doc,write,response,result,updated,final,index,request,update,index,request,translate,action,final,index,response,index,response,operation,response,get,response,update,response,new,update,response,index,response,get,shard,info,index,response,get,shard,id,index,response,get,type,index,response,get,id,index,response,get,seq,no,index,response,get,primary,term,index,response,get,version,index,response,get,result,if,update,request,fetch,source,null,update,request,fetch,source,fetch,source,final,bytes,reference,index,source,as,bytes,update,index,request,source,final,tuple,xcontent,type,map,string,object,source,and,content,xcontent,helper,convert,to,map,index,source,as,bytes,true,update,index,request,get,content,type,update,response,set,get,result,update,helper,extract,get,result,update,request,concrete,index,index,response,get,seq,no,index,response,get,primary,term,index,response,get,version,source,and,content,v2,source,and,content,v1,index,source,as,bytes,else,if,translated,result,doc,write,response,result,deleted,final,delete,response,delete,response,operation,response,get,response,update,response,new,update,response,delete,response,get,shard,info,delete,response,get,shard,id,delete,response,get,type,delete,response,get,id,delete,response,get,seq,no,delete,response,get,primary,term,delete,response,get,version,delete,response,get,result,final,get,result,get,result,update,helper,extract,get,result,update,request,concrete,index,delete,response,get,seq,no,delete,response,get,primary,term,delete,response,get,version,translate,updated,source,as,map,translate,update,source,content,type,null,update,response,set,get,result,get,result,else,throw,new,illegal,argument,exception,unknown,operation,type,translated,result,response,new,bulk,item,response,operation,response,get,item,id,doc,write,request,op,type,update,update,response,return,response
TransportShardBulkAction -> static BulkItemResponse processUpdateResponse(final UpdateRequest updateRequest, final String concreteIndex,                                                   BulkItemResponse operationResponse,                                                   final UpdateHelper.Result translate);1545678410;Creates a new bulk item result from the given requests and result of performing the update operation on the shard.;static BulkItemResponse processUpdateResponse(final UpdateRequest updateRequest, final String concreteIndex,_                                                  BulkItemResponse operationResponse,_                                                  final UpdateHelper.Result translate) {__        final BulkItemResponse response__        DocWriteResponse.Result translatedResult = translate.getResponseResult()__        if (operationResponse.isFailed()) {_            response = new BulkItemResponse(operationResponse.getItemId(), DocWriteRequest.OpType.UPDATE, operationResponse.getFailure())__        } else {__            final UpdateResponse updateResponse__            if (translatedResult == DocWriteResponse.Result.CREATED || translatedResult == DocWriteResponse.Result.UPDATED) {_                final IndexRequest updateIndexRequest = translate.action()__                final IndexResponse indexResponse = operationResponse.getResponse()__                updateResponse = new UpdateResponse(indexResponse.getShardInfo(), indexResponse.getShardId(),_                    indexResponse.getType(), indexResponse.getId(), indexResponse.getSeqNo(), indexResponse.getPrimaryTerm(),_                    indexResponse.getVersion(), indexResponse.getResult())___                if (updateRequest.fetchSource() != null && updateRequest.fetchSource().fetchSource()) {_                    final BytesReference indexSourceAsBytes = updateIndexRequest.source()__                    final Tuple<XContentType, Map<String, Object>> sourceAndContent =_                        XContentHelper.convertToMap(indexSourceAsBytes, true, updateIndexRequest.getContentType())__                    updateResponse.setGetResult(UpdateHelper.extractGetResult(updateRequest, concreteIndex,_                        indexResponse.getSeqNo(), indexResponse.getPrimaryTerm(),_                        indexResponse.getVersion(), sourceAndContent.v2(), sourceAndContent.v1(), indexSourceAsBytes))__                }_            } else if (translatedResult == DocWriteResponse.Result.DELETED) {_                final DeleteResponse deleteResponse = operationResponse.getResponse()__                updateResponse = new UpdateResponse(deleteResponse.getShardInfo(), deleteResponse.getShardId(),_                    deleteResponse.getType(), deleteResponse.getId(), deleteResponse.getSeqNo(), deleteResponse.getPrimaryTerm(),_                    deleteResponse.getVersion(), deleteResponse.getResult())___                final GetResult getResult = UpdateHelper.extractGetResult(updateRequest, concreteIndex,_                    deleteResponse.getSeqNo(), deleteResponse.getPrimaryTerm(), deleteResponse.getVersion(),_                    translate.updatedSourceAsMap(), translate.updateSourceContentType(), null)___                updateResponse.setGetResult(getResult)__            } else {_                throw new IllegalArgumentException("unknown operation type: " + translatedResult)__            }_            response = new BulkItemResponse(operationResponse.getItemId(), DocWriteRequest.OpType.UPDATE, updateResponse)__        }_        return response__    };creates,a,new,bulk,item,result,from,the,given,requests,and,result,of,performing,the,update,operation,on,the,shard;static,bulk,item,response,process,update,response,final,update,request,update,request,final,string,concrete,index,bulk,item,response,operation,response,final,update,helper,result,translate,final,bulk,item,response,response,doc,write,response,result,translated,result,translate,get,response,result,if,operation,response,is,failed,response,new,bulk,item,response,operation,response,get,item,id,doc,write,request,op,type,update,operation,response,get,failure,else,final,update,response,update,response,if,translated,result,doc,write,response,result,created,translated,result,doc,write,response,result,updated,final,index,request,update,index,request,translate,action,final,index,response,index,response,operation,response,get,response,update,response,new,update,response,index,response,get,shard,info,index,response,get,shard,id,index,response,get,type,index,response,get,id,index,response,get,seq,no,index,response,get,primary,term,index,response,get,version,index,response,get,result,if,update,request,fetch,source,null,update,request,fetch,source,fetch,source,final,bytes,reference,index,source,as,bytes,update,index,request,source,final,tuple,xcontent,type,map,string,object,source,and,content,xcontent,helper,convert,to,map,index,source,as,bytes,true,update,index,request,get,content,type,update,response,set,get,result,update,helper,extract,get,result,update,request,concrete,index,index,response,get,seq,no,index,response,get,primary,term,index,response,get,version,source,and,content,v2,source,and,content,v1,index,source,as,bytes,else,if,translated,result,doc,write,response,result,deleted,final,delete,response,delete,response,operation,response,get,response,update,response,new,update,response,delete,response,get,shard,info,delete,response,get,shard,id,delete,response,get,type,delete,response,get,id,delete,response,get,seq,no,delete,response,get,primary,term,delete,response,get,version,delete,response,get,result,final,get,result,get,result,update,helper,extract,get,result,update,request,concrete,index,delete,response,get,seq,no,delete,response,get,primary,term,delete,response,get,version,translate,updated,source,as,map,translate,update,source,content,type,null,update,response,set,get,result,get,result,else,throw,new,illegal,argument,exception,unknown,operation,type,translated,result,response,new,bulk,item,response,operation,response,get,item,id,doc,write,request,op,type,update,update,response,return,response
TransportShardBulkAction -> static BulkItemResponse processUpdateResponse(final UpdateRequest updateRequest, final String concreteIndex,                                                   BulkItemResponse operationResponse,                                                   final UpdateHelper.Result translate);1547643669;Creates a new bulk item result from the given requests and result of performing the update operation on the shard.;static BulkItemResponse processUpdateResponse(final UpdateRequest updateRequest, final String concreteIndex,_                                                  BulkItemResponse operationResponse,_                                                  final UpdateHelper.Result translate) {__        final BulkItemResponse response__        DocWriteResponse.Result translatedResult = translate.getResponseResult()__        if (operationResponse.isFailed()) {_            response = new BulkItemResponse(operationResponse.getItemId(), DocWriteRequest.OpType.UPDATE, operationResponse.getFailure())__        } else {__            final UpdateResponse updateResponse__            if (translatedResult == DocWriteResponse.Result.CREATED || translatedResult == DocWriteResponse.Result.UPDATED) {_                final IndexRequest updateIndexRequest = translate.action()__                final IndexResponse indexResponse = operationResponse.getResponse()__                updateResponse = new UpdateResponse(indexResponse.getShardInfo(), indexResponse.getShardId(),_                    indexResponse.getType(), indexResponse.getId(), indexResponse.getSeqNo(), indexResponse.getPrimaryTerm(),_                    indexResponse.getVersion(), indexResponse.getResult())___                if (updateRequest.fetchSource() != null && updateRequest.fetchSource().fetchSource()) {_                    final BytesReference indexSourceAsBytes = updateIndexRequest.source()__                    final Tuple<XContentType, Map<String, Object>> sourceAndContent =_                        XContentHelper.convertToMap(indexSourceAsBytes, true, updateIndexRequest.getContentType())__                    updateResponse.setGetResult(UpdateHelper.extractGetResult(updateRequest, concreteIndex,_                        indexResponse.getSeqNo(), indexResponse.getPrimaryTerm(),_                        indexResponse.getVersion(), sourceAndContent.v2(), sourceAndContent.v1(), indexSourceAsBytes))__                }_            } else if (translatedResult == DocWriteResponse.Result.DELETED) {_                final DeleteResponse deleteResponse = operationResponse.getResponse()__                updateResponse = new UpdateResponse(deleteResponse.getShardInfo(), deleteResponse.getShardId(),_                    deleteResponse.getType(), deleteResponse.getId(), deleteResponse.getSeqNo(), deleteResponse.getPrimaryTerm(),_                    deleteResponse.getVersion(), deleteResponse.getResult())___                final GetResult getResult = UpdateHelper.extractGetResult(updateRequest, concreteIndex,_                    deleteResponse.getSeqNo(), deleteResponse.getPrimaryTerm(), deleteResponse.getVersion(),_                    translate.updatedSourceAsMap(), translate.updateSourceContentType(), null)___                updateResponse.setGetResult(getResult)__            } else {_                throw new IllegalArgumentException("unknown operation type: " + translatedResult)__            }_            response = new BulkItemResponse(operationResponse.getItemId(), DocWriteRequest.OpType.UPDATE, updateResponse)__        }_        return response__    };creates,a,new,bulk,item,result,from,the,given,requests,and,result,of,performing,the,update,operation,on,the,shard;static,bulk,item,response,process,update,response,final,update,request,update,request,final,string,concrete,index,bulk,item,response,operation,response,final,update,helper,result,translate,final,bulk,item,response,response,doc,write,response,result,translated,result,translate,get,response,result,if,operation,response,is,failed,response,new,bulk,item,response,operation,response,get,item,id,doc,write,request,op,type,update,operation,response,get,failure,else,final,update,response,update,response,if,translated,result,doc,write,response,result,created,translated,result,doc,write,response,result,updated,final,index,request,update,index,request,translate,action,final,index,response,index,response,operation,response,get,response,update,response,new,update,response,index,response,get,shard,info,index,response,get,shard,id,index,response,get,type,index,response,get,id,index,response,get,seq,no,index,response,get,primary,term,index,response,get,version,index,response,get,result,if,update,request,fetch,source,null,update,request,fetch,source,fetch,source,final,bytes,reference,index,source,as,bytes,update,index,request,source,final,tuple,xcontent,type,map,string,object,source,and,content,xcontent,helper,convert,to,map,index,source,as,bytes,true,update,index,request,get,content,type,update,response,set,get,result,update,helper,extract,get,result,update,request,concrete,index,index,response,get,seq,no,index,response,get,primary,term,index,response,get,version,source,and,content,v2,source,and,content,v1,index,source,as,bytes,else,if,translated,result,doc,write,response,result,deleted,final,delete,response,delete,response,operation,response,get,response,update,response,new,update,response,delete,response,get,shard,info,delete,response,get,shard,id,delete,response,get,type,delete,response,get,id,delete,response,get,seq,no,delete,response,get,primary,term,delete,response,get,version,delete,response,get,result,final,get,result,get,result,update,helper,extract,get,result,update,request,concrete,index,delete,response,get,seq,no,delete,response,get,primary,term,delete,response,get,version,translate,updated,source,as,map,translate,update,source,content,type,null,update,response,set,get,result,get,result,else,throw,new,illegal,argument,exception,unknown,operation,type,translated,result,response,new,bulk,item,response,operation,response,get,item,id,doc,write,request,op,type,update,update,response,return,response
TransportShardBulkAction -> static BulkItemResponse processUpdateResponse(final UpdateRequest updateRequest, final String concreteIndex,                                                   BulkItemResponse operationResponse,                                                   final UpdateHelper.Result translate);1550161840;Creates a new bulk item result from the given requests and result of performing the update operation on the shard.;static BulkItemResponse processUpdateResponse(final UpdateRequest updateRequest, final String concreteIndex,_                                                  BulkItemResponse operationResponse,_                                                  final UpdateHelper.Result translate) {__        final BulkItemResponse response__        DocWriteResponse.Result translatedResult = translate.getResponseResult()__        if (operationResponse.isFailed()) {_            response = new BulkItemResponse(operationResponse.getItemId(), DocWriteRequest.OpType.UPDATE, operationResponse.getFailure())__        } else {__            final UpdateResponse updateResponse__            if (translatedResult == DocWriteResponse.Result.CREATED || translatedResult == DocWriteResponse.Result.UPDATED) {_                final IndexRequest updateIndexRequest = translate.action()__                final IndexResponse indexResponse = operationResponse.getResponse()__                updateResponse = new UpdateResponse(indexResponse.getShardInfo(), indexResponse.getShardId(),_                    indexResponse.getType(), indexResponse.getId(), indexResponse.getSeqNo(), indexResponse.getPrimaryTerm(),_                    indexResponse.getVersion(), indexResponse.getResult())___                if (updateRequest.fetchSource() != null && updateRequest.fetchSource().fetchSource()) {_                    final BytesReference indexSourceAsBytes = updateIndexRequest.source()__                    final Tuple<XContentType, Map<String, Object>> sourceAndContent =_                        XContentHelper.convertToMap(indexSourceAsBytes, true, updateIndexRequest.getContentType())__                    updateResponse.setGetResult(UpdateHelper.extractGetResult(updateRequest, concreteIndex,_                        indexResponse.getSeqNo(), indexResponse.getPrimaryTerm(),_                        indexResponse.getVersion(), sourceAndContent.v2(), sourceAndContent.v1(), indexSourceAsBytes))__                }_            } else if (translatedResult == DocWriteResponse.Result.DELETED) {_                final DeleteResponse deleteResponse = operationResponse.getResponse()__                updateResponse = new UpdateResponse(deleteResponse.getShardInfo(), deleteResponse.getShardId(),_                    deleteResponse.getType(), deleteResponse.getId(), deleteResponse.getSeqNo(), deleteResponse.getPrimaryTerm(),_                    deleteResponse.getVersion(), deleteResponse.getResult())___                final GetResult getResult = UpdateHelper.extractGetResult(updateRequest, concreteIndex,_                    deleteResponse.getSeqNo(), deleteResponse.getPrimaryTerm(), deleteResponse.getVersion(),_                    translate.updatedSourceAsMap(), translate.updateSourceContentType(), null)___                updateResponse.setGetResult(getResult)__            } else {_                throw new IllegalArgumentException("unknown operation type: " + translatedResult)__            }_            response = new BulkItemResponse(operationResponse.getItemId(), DocWriteRequest.OpType.UPDATE, updateResponse)__        }_        return response__    };creates,a,new,bulk,item,result,from,the,given,requests,and,result,of,performing,the,update,operation,on,the,shard;static,bulk,item,response,process,update,response,final,update,request,update,request,final,string,concrete,index,bulk,item,response,operation,response,final,update,helper,result,translate,final,bulk,item,response,response,doc,write,response,result,translated,result,translate,get,response,result,if,operation,response,is,failed,response,new,bulk,item,response,operation,response,get,item,id,doc,write,request,op,type,update,operation,response,get,failure,else,final,update,response,update,response,if,translated,result,doc,write,response,result,created,translated,result,doc,write,response,result,updated,final,index,request,update,index,request,translate,action,final,index,response,index,response,operation,response,get,response,update,response,new,update,response,index,response,get,shard,info,index,response,get,shard,id,index,response,get,type,index,response,get,id,index,response,get,seq,no,index,response,get,primary,term,index,response,get,version,index,response,get,result,if,update,request,fetch,source,null,update,request,fetch,source,fetch,source,final,bytes,reference,index,source,as,bytes,update,index,request,source,final,tuple,xcontent,type,map,string,object,source,and,content,xcontent,helper,convert,to,map,index,source,as,bytes,true,update,index,request,get,content,type,update,response,set,get,result,update,helper,extract,get,result,update,request,concrete,index,index,response,get,seq,no,index,response,get,primary,term,index,response,get,version,source,and,content,v2,source,and,content,v1,index,source,as,bytes,else,if,translated,result,doc,write,response,result,deleted,final,delete,response,delete,response,operation,response,get,response,update,response,new,update,response,delete,response,get,shard,info,delete,response,get,shard,id,delete,response,get,type,delete,response,get,id,delete,response,get,seq,no,delete,response,get,primary,term,delete,response,get,version,delete,response,get,result,final,get,result,get,result,update,helper,extract,get,result,update,request,concrete,index,delete,response,get,seq,no,delete,response,get,primary,term,delete,response,get,version,translate,updated,source,as,map,translate,update,source,content,type,null,update,response,set,get,result,get,result,else,throw,new,illegal,argument,exception,unknown,operation,type,translated,result,response,new,bulk,item,response,operation,response,get,item,id,doc,write,request,op,type,update,update,response,return,response
TransportShardBulkAction -> static BulkItemResponse processUpdateResponse(final UpdateRequest updateRequest, final String concreteIndex,                                                   BulkItemResponse operationResponse,                                                   final UpdateHelper.Result translate);1550221827;Creates a new bulk item result from the given requests and result of performing the update operation on the shard.;static BulkItemResponse processUpdateResponse(final UpdateRequest updateRequest, final String concreteIndex,_                                                  BulkItemResponse operationResponse,_                                                  final UpdateHelper.Result translate) {__        final BulkItemResponse response__        DocWriteResponse.Result translatedResult = translate.getResponseResult()__        if (operationResponse.isFailed()) {_            response = new BulkItemResponse(operationResponse.getItemId(), DocWriteRequest.OpType.UPDATE, operationResponse.getFailure())__        } else {__            final UpdateResponse updateResponse__            if (translatedResult == DocWriteResponse.Result.CREATED || translatedResult == DocWriteResponse.Result.UPDATED) {_                final IndexRequest updateIndexRequest = translate.action()__                final IndexResponse indexResponse = operationResponse.getResponse()__                updateResponse = new UpdateResponse(indexResponse.getShardInfo(), indexResponse.getShardId(),_                    indexResponse.getType(), indexResponse.getId(), indexResponse.getSeqNo(), indexResponse.getPrimaryTerm(),_                    indexResponse.getVersion(), indexResponse.getResult())___                if (updateRequest.fetchSource() != null && updateRequest.fetchSource().fetchSource()) {_                    final BytesReference indexSourceAsBytes = updateIndexRequest.source()__                    final Tuple<XContentType, Map<String, Object>> sourceAndContent =_                        XContentHelper.convertToMap(indexSourceAsBytes, true, updateIndexRequest.getContentType())__                    updateResponse.setGetResult(UpdateHelper.extractGetResult(updateRequest, concreteIndex,_                        indexResponse.getSeqNo(), indexResponse.getPrimaryTerm(),_                        indexResponse.getVersion(), sourceAndContent.v2(), sourceAndContent.v1(), indexSourceAsBytes))__                }_            } else if (translatedResult == DocWriteResponse.Result.DELETED) {_                final DeleteResponse deleteResponse = operationResponse.getResponse()__                updateResponse = new UpdateResponse(deleteResponse.getShardInfo(), deleteResponse.getShardId(),_                    deleteResponse.getType(), deleteResponse.getId(), deleteResponse.getSeqNo(), deleteResponse.getPrimaryTerm(),_                    deleteResponse.getVersion(), deleteResponse.getResult())___                final GetResult getResult = UpdateHelper.extractGetResult(updateRequest, concreteIndex,_                    deleteResponse.getSeqNo(), deleteResponse.getPrimaryTerm(), deleteResponse.getVersion(),_                    translate.updatedSourceAsMap(), translate.updateSourceContentType(), null)___                updateResponse.setGetResult(getResult)__            } else {_                throw new IllegalArgumentException("unknown operation type: " + translatedResult)__            }_            response = new BulkItemResponse(operationResponse.getItemId(), DocWriteRequest.OpType.UPDATE, updateResponse)__        }_        return response__    };creates,a,new,bulk,item,result,from,the,given,requests,and,result,of,performing,the,update,operation,on,the,shard;static,bulk,item,response,process,update,response,final,update,request,update,request,final,string,concrete,index,bulk,item,response,operation,response,final,update,helper,result,translate,final,bulk,item,response,response,doc,write,response,result,translated,result,translate,get,response,result,if,operation,response,is,failed,response,new,bulk,item,response,operation,response,get,item,id,doc,write,request,op,type,update,operation,response,get,failure,else,final,update,response,update,response,if,translated,result,doc,write,response,result,created,translated,result,doc,write,response,result,updated,final,index,request,update,index,request,translate,action,final,index,response,index,response,operation,response,get,response,update,response,new,update,response,index,response,get,shard,info,index,response,get,shard,id,index,response,get,type,index,response,get,id,index,response,get,seq,no,index,response,get,primary,term,index,response,get,version,index,response,get,result,if,update,request,fetch,source,null,update,request,fetch,source,fetch,source,final,bytes,reference,index,source,as,bytes,update,index,request,source,final,tuple,xcontent,type,map,string,object,source,and,content,xcontent,helper,convert,to,map,index,source,as,bytes,true,update,index,request,get,content,type,update,response,set,get,result,update,helper,extract,get,result,update,request,concrete,index,index,response,get,seq,no,index,response,get,primary,term,index,response,get,version,source,and,content,v2,source,and,content,v1,index,source,as,bytes,else,if,translated,result,doc,write,response,result,deleted,final,delete,response,delete,response,operation,response,get,response,update,response,new,update,response,delete,response,get,shard,info,delete,response,get,shard,id,delete,response,get,type,delete,response,get,id,delete,response,get,seq,no,delete,response,get,primary,term,delete,response,get,version,delete,response,get,result,final,get,result,get,result,update,helper,extract,get,result,update,request,concrete,index,delete,response,get,seq,no,delete,response,get,primary,term,delete,response,get,version,translate,updated,source,as,map,translate,update,source,content,type,null,update,response,set,get,result,get,result,else,throw,new,illegal,argument,exception,unknown,operation,type,translated,result,response,new,bulk,item,response,operation,response,get,item,id,doc,write,request,op,type,update,update,response,return,response
TransportShardBulkAction -> static ReplicaItemExecutionMode replicaItemExecutionMode(final BulkItemRequest request, final int index);1524684173;Determines whether a bulk item request should be executed on the replica._@return {@link ReplicaItemExecutionMode#NORMAL} upon normal primary execution with no failures_{@link ReplicaItemExecutionMode#FAILURE} upon primary execution failure after sequence no generation_{@link ReplicaItemExecutionMode#NOOP} upon primary execution failure before sequence no generation or_when primary execution resulted in noop (only possible for write requests from pre-6.0 nodes);static ReplicaItemExecutionMode replicaItemExecutionMode(final BulkItemRequest request, final int index) {_        final BulkItemResponse primaryResponse = request.getPrimaryResponse()__        assert primaryResponse != null : "expected primary response to be set for item [" + index + "] request [" + request.request() + "]"__        if (primaryResponse.isFailed()) {_            return primaryResponse.getFailure().getSeqNo() != SequenceNumbers.UNASSIGNED_SEQ_NO_                    ? ReplicaItemExecutionMode.FAILURE _                    : ReplicaItemExecutionMode.NOOP_ _        } else {_            _            _            _            _            _            return primaryResponse.getResponse().getResult() != DocWriteResponse.Result.NOOP_                    ? ReplicaItemExecutionMode.NORMAL _                    : ReplicaItemExecutionMode.NOOP_ _        }_    };determines,whether,a,bulk,item,request,should,be,executed,on,the,replica,return,link,replica,item,execution,mode,normal,upon,normal,primary,execution,with,no,failures,link,replica,item,execution,mode,failure,upon,primary,execution,failure,after,sequence,no,generation,link,replica,item,execution,mode,noop,upon,primary,execution,failure,before,sequence,no,generation,or,when,primary,execution,resulted,in,noop,only,possible,for,write,requests,from,pre,6,0,nodes;static,replica,item,execution,mode,replica,item,execution,mode,final,bulk,item,request,request,final,int,index,final,bulk,item,response,primary,response,request,get,primary,response,assert,primary,response,null,expected,primary,response,to,be,set,for,item,index,request,request,request,if,primary,response,is,failed,return,primary,response,get,failure,get,seq,no,sequence,numbers,replica,item,execution,mode,failure,replica,item,execution,mode,noop,else,return,primary,response,get,response,get,result,doc,write,response,result,noop,replica,item,execution,mode,normal,replica,item,execution,mode,noop
TransportShardBulkAction -> static ReplicaItemExecutionMode replicaItemExecutionMode(final BulkItemRequest request, final int index);1525162917;Determines whether a bulk item request should be executed on the replica._@return {@link ReplicaItemExecutionMode#NORMAL} upon normal primary execution with no failures_{@link ReplicaItemExecutionMode#FAILURE} upon primary execution failure after sequence no generation_{@link ReplicaItemExecutionMode#NOOP} upon primary execution failure before sequence no generation or_when primary execution resulted in noop (only possible for write requests from pre-6.0 nodes);static ReplicaItemExecutionMode replicaItemExecutionMode(final BulkItemRequest request, final int index) {_        final BulkItemResponse primaryResponse = request.getPrimaryResponse()__        assert primaryResponse != null : "expected primary response to be set for item [" + index + "] request [" + request.request() + "]"__        if (primaryResponse.isFailed()) {_            return primaryResponse.getFailure().getSeqNo() != SequenceNumbers.UNASSIGNED_SEQ_NO_                    ? ReplicaItemExecutionMode.FAILURE _                    : ReplicaItemExecutionMode.NOOP_ _        } else {_            _            _            _            _            _            return primaryResponse.getResponse().getResult() != DocWriteResponse.Result.NOOP_                    ? ReplicaItemExecutionMode.NORMAL _                    : ReplicaItemExecutionMode.NOOP_ _        }_    };determines,whether,a,bulk,item,request,should,be,executed,on,the,replica,return,link,replica,item,execution,mode,normal,upon,normal,primary,execution,with,no,failures,link,replica,item,execution,mode,failure,upon,primary,execution,failure,after,sequence,no,generation,link,replica,item,execution,mode,noop,upon,primary,execution,failure,before,sequence,no,generation,or,when,primary,execution,resulted,in,noop,only,possible,for,write,requests,from,pre,6,0,nodes;static,replica,item,execution,mode,replica,item,execution,mode,final,bulk,item,request,request,final,int,index,final,bulk,item,response,primary,response,request,get,primary,response,assert,primary,response,null,expected,primary,response,to,be,set,for,item,index,request,request,request,if,primary,response,is,failed,return,primary,response,get,failure,get,seq,no,sequence,numbers,replica,item,execution,mode,failure,replica,item,execution,mode,noop,else,return,primary,response,get,response,get,result,doc,write,response,result,noop,replica,item,execution,mode,normal,replica,item,execution,mode,noop
TransportShardBulkAction -> static ReplicaItemExecutionMode replicaItemExecutionMode(final BulkItemRequest request, final int index);1526029249;Determines whether a bulk item request should be executed on the replica._@return {@link ReplicaItemExecutionMode#NORMAL} upon normal primary execution with no failures_{@link ReplicaItemExecutionMode#FAILURE} upon primary execution failure after sequence no generation_{@link ReplicaItemExecutionMode#NOOP} upon primary execution failure before sequence no generation or_when primary execution resulted in noop (only possible for write requests from pre-6.0 nodes);static ReplicaItemExecutionMode replicaItemExecutionMode(final BulkItemRequest request, final int index) {_        final BulkItemResponse primaryResponse = request.getPrimaryResponse()__        assert primaryResponse != null : "expected primary response to be set for item [" + index + "] request [" + request.request() + "]"__        if (primaryResponse.isFailed()) {_            return primaryResponse.getFailure().getSeqNo() != SequenceNumbers.UNASSIGNED_SEQ_NO_                    ? ReplicaItemExecutionMode.FAILURE _                    : ReplicaItemExecutionMode.NOOP_ _        } else {_            _            _            _            _            _            return primaryResponse.getResponse().getResult() != DocWriteResponse.Result.NOOP_                    ? ReplicaItemExecutionMode.NORMAL _                    : ReplicaItemExecutionMode.NOOP_ _        }_    };determines,whether,a,bulk,item,request,should,be,executed,on,the,replica,return,link,replica,item,execution,mode,normal,upon,normal,primary,execution,with,no,failures,link,replica,item,execution,mode,failure,upon,primary,execution,failure,after,sequence,no,generation,link,replica,item,execution,mode,noop,upon,primary,execution,failure,before,sequence,no,generation,or,when,primary,execution,resulted,in,noop,only,possible,for,write,requests,from,pre,6,0,nodes;static,replica,item,execution,mode,replica,item,execution,mode,final,bulk,item,request,request,final,int,index,final,bulk,item,response,primary,response,request,get,primary,response,assert,primary,response,null,expected,primary,response,to,be,set,for,item,index,request,request,request,if,primary,response,is,failed,return,primary,response,get,failure,get,seq,no,sequence,numbers,replica,item,execution,mode,failure,replica,item,execution,mode,noop,else,return,primary,response,get,response,get,result,doc,write,response,result,noop,replica,item,execution,mode,normal,replica,item,execution,mode,noop
TransportShardBulkAction -> static ReplicaItemExecutionMode replicaItemExecutionMode(final BulkItemRequest request, final int index);1528706846;Determines whether a bulk item request should be executed on the replica._@return {@link ReplicaItemExecutionMode#NORMAL} upon normal primary execution with no failures_{@link ReplicaItemExecutionMode#FAILURE} upon primary execution failure after sequence no generation_{@link ReplicaItemExecutionMode#NOOP} upon primary execution failure before sequence no generation or_when primary execution resulted in noop (only possible for write requests from pre-6.0 nodes);static ReplicaItemExecutionMode replicaItemExecutionMode(final BulkItemRequest request, final int index) {_        final BulkItemResponse primaryResponse = request.getPrimaryResponse()__        assert primaryResponse != null : "expected primary response to be set for item [" + index + "] request [" + request.request() + "]"__        if (primaryResponse.isFailed()) {_            return primaryResponse.getFailure().getSeqNo() != SequenceNumbers.UNASSIGNED_SEQ_NO_                    ? ReplicaItemExecutionMode.FAILURE _                    : ReplicaItemExecutionMode.NOOP_ _        } else {_            _            _            _            _            _            return primaryResponse.getResponse().getResult() != DocWriteResponse.Result.NOOP_                    ? ReplicaItemExecutionMode.NORMAL _                    : ReplicaItemExecutionMode.NOOP_ _        }_    };determines,whether,a,bulk,item,request,should,be,executed,on,the,replica,return,link,replica,item,execution,mode,normal,upon,normal,primary,execution,with,no,failures,link,replica,item,execution,mode,failure,upon,primary,execution,failure,after,sequence,no,generation,link,replica,item,execution,mode,noop,upon,primary,execution,failure,before,sequence,no,generation,or,when,primary,execution,resulted,in,noop,only,possible,for,write,requests,from,pre,6,0,nodes;static,replica,item,execution,mode,replica,item,execution,mode,final,bulk,item,request,request,final,int,index,final,bulk,item,response,primary,response,request,get,primary,response,assert,primary,response,null,expected,primary,response,to,be,set,for,item,index,request,request,request,if,primary,response,is,failed,return,primary,response,get,failure,get,seq,no,sequence,numbers,replica,item,execution,mode,failure,replica,item,execution,mode,noop,else,return,primary,response,get,response,get,result,doc,write,response,result,noop,replica,item,execution,mode,normal,replica,item,execution,mode,noop
TransportShardBulkAction -> static ReplicaItemExecutionMode replicaItemExecutionMode(final BulkItemRequest request, final int index);1528977744;Determines whether a bulk item request should be executed on the replica._@return {@link ReplicaItemExecutionMode#NORMAL} upon normal primary execution with no failures_{@link ReplicaItemExecutionMode#FAILURE} upon primary execution failure after sequence no generation_{@link ReplicaItemExecutionMode#NOOP} upon primary execution failure before sequence no generation or_when primary execution resulted in noop (only possible for write requests from pre-6.0 nodes);static ReplicaItemExecutionMode replicaItemExecutionMode(final BulkItemRequest request, final int index) {_        final BulkItemResponse primaryResponse = request.getPrimaryResponse()__        assert primaryResponse != null : "expected primary response to be set for item [" + index + "] request [" + request.request() + "]"__        if (primaryResponse.isFailed()) {_            return primaryResponse.getFailure().getSeqNo() != SequenceNumbers.UNASSIGNED_SEQ_NO_                    ? ReplicaItemExecutionMode.FAILURE _                    : ReplicaItemExecutionMode.NOOP_ _        } else {_            _            _            _            _            _            return primaryResponse.getResponse().getResult() != DocWriteResponse.Result.NOOP_                    ? ReplicaItemExecutionMode.NORMAL _                    : ReplicaItemExecutionMode.NOOP_ _        }_    };determines,whether,a,bulk,item,request,should,be,executed,on,the,replica,return,link,replica,item,execution,mode,normal,upon,normal,primary,execution,with,no,failures,link,replica,item,execution,mode,failure,upon,primary,execution,failure,after,sequence,no,generation,link,replica,item,execution,mode,noop,upon,primary,execution,failure,before,sequence,no,generation,or,when,primary,execution,resulted,in,noop,only,possible,for,write,requests,from,pre,6,0,nodes;static,replica,item,execution,mode,replica,item,execution,mode,final,bulk,item,request,request,final,int,index,final,bulk,item,response,primary,response,request,get,primary,response,assert,primary,response,null,expected,primary,response,to,be,set,for,item,index,request,request,request,if,primary,response,is,failed,return,primary,response,get,failure,get,seq,no,sequence,numbers,replica,item,execution,mode,failure,replica,item,execution,mode,noop,else,return,primary,response,get,response,get,result,doc,write,response,result,noop,replica,item,execution,mode,normal,replica,item,execution,mode,noop
TransportShardBulkAction -> static ReplicaItemExecutionMode replicaItemExecutionMode(final BulkItemRequest request, final int index);1529658035;Determines whether a bulk item request should be executed on the replica._@return {@link ReplicaItemExecutionMode#NORMAL} upon normal primary execution with no failures_{@link ReplicaItemExecutionMode#FAILURE} upon primary execution failure after sequence no generation_{@link ReplicaItemExecutionMode#NOOP} upon primary execution failure before sequence no generation or_when primary execution resulted in noop (only possible for write requests from pre-6.0 nodes);static ReplicaItemExecutionMode replicaItemExecutionMode(final BulkItemRequest request, final int index) {_        final BulkItemResponse primaryResponse = request.getPrimaryResponse()__        assert primaryResponse != null : "expected primary response to be set for item [" + index + "] request [" + request.request() + "]"__        if (primaryResponse.isFailed()) {_            return primaryResponse.getFailure().getSeqNo() != SequenceNumbers.UNASSIGNED_SEQ_NO_                    ? ReplicaItemExecutionMode.FAILURE _                    : ReplicaItemExecutionMode.NOOP_ _        } else {_            _            _            _            _            _            return primaryResponse.getResponse().getResult() != DocWriteResponse.Result.NOOP_                    ? ReplicaItemExecutionMode.NORMAL _                    : ReplicaItemExecutionMode.NOOP_ _        }_    };determines,whether,a,bulk,item,request,should,be,executed,on,the,replica,return,link,replica,item,execution,mode,normal,upon,normal,primary,execution,with,no,failures,link,replica,item,execution,mode,failure,upon,primary,execution,failure,after,sequence,no,generation,link,replica,item,execution,mode,noop,upon,primary,execution,failure,before,sequence,no,generation,or,when,primary,execution,resulted,in,noop,only,possible,for,write,requests,from,pre,6,0,nodes;static,replica,item,execution,mode,replica,item,execution,mode,final,bulk,item,request,request,final,int,index,final,bulk,item,response,primary,response,request,get,primary,response,assert,primary,response,null,expected,primary,response,to,be,set,for,item,index,request,request,request,if,primary,response,is,failed,return,primary,response,get,failure,get,seq,no,sequence,numbers,replica,item,execution,mode,failure,replica,item,execution,mode,noop,else,return,primary,response,get,response,get,result,doc,write,response,result,noop,replica,item,execution,mode,normal,replica,item,execution,mode,noop
TransportShardBulkAction -> static ReplicaItemExecutionMode replicaItemExecutionMode(final BulkItemRequest request, final int index);1531179852;Determines whether a bulk item request should be executed on the replica._@return {@link ReplicaItemExecutionMode#NORMAL} upon normal primary execution with no failures_{@link ReplicaItemExecutionMode#FAILURE} upon primary execution failure after sequence no generation_{@link ReplicaItemExecutionMode#NOOP} upon primary execution failure before sequence no generation or_when primary execution resulted in noop (only possible for write requests from pre-6.0 nodes);static ReplicaItemExecutionMode replicaItemExecutionMode(final BulkItemRequest request, final int index) {_        final BulkItemResponse primaryResponse = request.getPrimaryResponse()__        assert primaryResponse != null : "expected primary response to be set for item [" + index + "] request [" + request.request() + "]"__        if (primaryResponse.isFailed()) {_            return primaryResponse.getFailure().getSeqNo() != SequenceNumbers.UNASSIGNED_SEQ_NO_                    ? ReplicaItemExecutionMode.FAILURE _                    : ReplicaItemExecutionMode.NOOP_ _        } else {_            _            _            _            _            _            return primaryResponse.getResponse().getResult() != DocWriteResponse.Result.NOOP_                    ? ReplicaItemExecutionMode.NORMAL _                    : ReplicaItemExecutionMode.NOOP_ _        }_    };determines,whether,a,bulk,item,request,should,be,executed,on,the,replica,return,link,replica,item,execution,mode,normal,upon,normal,primary,execution,with,no,failures,link,replica,item,execution,mode,failure,upon,primary,execution,failure,after,sequence,no,generation,link,replica,item,execution,mode,noop,upon,primary,execution,failure,before,sequence,no,generation,or,when,primary,execution,resulted,in,noop,only,possible,for,write,requests,from,pre,6,0,nodes;static,replica,item,execution,mode,replica,item,execution,mode,final,bulk,item,request,request,final,int,index,final,bulk,item,response,primary,response,request,get,primary,response,assert,primary,response,null,expected,primary,response,to,be,set,for,item,index,request,request,request,if,primary,response,is,failed,return,primary,response,get,failure,get,seq,no,sequence,numbers,replica,item,execution,mode,failure,replica,item,execution,mode,noop,else,return,primary,response,get,response,get,result,doc,write,response,result,noop,replica,item,execution,mode,normal,replica,item,execution,mode,noop
TransportShardBulkAction -> static ReplicaItemExecutionMode replicaItemExecutionMode(final BulkItemRequest request, final int index);1531910483;Determines whether a bulk item request should be executed on the replica._@return {@link ReplicaItemExecutionMode#NORMAL} upon normal primary execution with no failures_{@link ReplicaItemExecutionMode#FAILURE} upon primary execution failure after sequence no generation_{@link ReplicaItemExecutionMode#NOOP} upon primary execution failure before sequence no generation or_when primary execution resulted in noop (only possible for write requests from pre-6.0 nodes);static ReplicaItemExecutionMode replicaItemExecutionMode(final BulkItemRequest request, final int index) {_        final BulkItemResponse primaryResponse = request.getPrimaryResponse()__        assert primaryResponse != null : "expected primary response to be set for item [" + index + "] request [" + request.request() + "]"__        if (primaryResponse.isFailed()) {_            return primaryResponse.getFailure().getSeqNo() != SequenceNumbers.UNASSIGNED_SEQ_NO_                    ? ReplicaItemExecutionMode.FAILURE _                    : ReplicaItemExecutionMode.NOOP_ _        } else {_            _            _            _            _            _            return primaryResponse.getResponse().getResult() != DocWriteResponse.Result.NOOP_                    ? ReplicaItemExecutionMode.NORMAL _                    : ReplicaItemExecutionMode.NOOP_ _        }_    };determines,whether,a,bulk,item,request,should,be,executed,on,the,replica,return,link,replica,item,execution,mode,normal,upon,normal,primary,execution,with,no,failures,link,replica,item,execution,mode,failure,upon,primary,execution,failure,after,sequence,no,generation,link,replica,item,execution,mode,noop,upon,primary,execution,failure,before,sequence,no,generation,or,when,primary,execution,resulted,in,noop,only,possible,for,write,requests,from,pre,6,0,nodes;static,replica,item,execution,mode,replica,item,execution,mode,final,bulk,item,request,request,final,int,index,final,bulk,item,response,primary,response,request,get,primary,response,assert,primary,response,null,expected,primary,response,to,be,set,for,item,index,request,request,request,if,primary,response,is,failed,return,primary,response,get,failure,get,seq,no,sequence,numbers,replica,item,execution,mode,failure,replica,item,execution,mode,noop,else,return,primary,response,get,response,get,result,doc,write,response,result,noop,replica,item,execution,mode,normal,replica,item,execution,mode,noop
TransportShardBulkAction -> static ReplicaItemExecutionMode replicaItemExecutionMode(final BulkItemRequest request, final int index);1533295538;Determines whether a bulk item request should be executed on the replica._@return {@link ReplicaItemExecutionMode#NORMAL} upon normal primary execution with no failures_{@link ReplicaItemExecutionMode#FAILURE} upon primary execution failure after sequence no generation_{@link ReplicaItemExecutionMode#NOOP} upon primary execution failure before sequence no generation or_when primary execution resulted in noop (only possible for write requests from pre-6.0 nodes);static ReplicaItemExecutionMode replicaItemExecutionMode(final BulkItemRequest request, final int index) {_        final BulkItemResponse primaryResponse = request.getPrimaryResponse()__        assert primaryResponse != null : "expected primary response to be set for item [" + index + "] request [" + request.request() + "]"__        if (primaryResponse.isFailed()) {_            return primaryResponse.getFailure().getSeqNo() != SequenceNumbers.UNASSIGNED_SEQ_NO_                    ? ReplicaItemExecutionMode.FAILURE _                    : ReplicaItemExecutionMode.NOOP_ _        } else {_            _            _            _            _            _            return primaryResponse.getResponse().getResult() != DocWriteResponse.Result.NOOP_                    ? ReplicaItemExecutionMode.NORMAL _                    : ReplicaItemExecutionMode.NOOP_ _        }_    };determines,whether,a,bulk,item,request,should,be,executed,on,the,replica,return,link,replica,item,execution,mode,normal,upon,normal,primary,execution,with,no,failures,link,replica,item,execution,mode,failure,upon,primary,execution,failure,after,sequence,no,generation,link,replica,item,execution,mode,noop,upon,primary,execution,failure,before,sequence,no,generation,or,when,primary,execution,resulted,in,noop,only,possible,for,write,requests,from,pre,6,0,nodes;static,replica,item,execution,mode,replica,item,execution,mode,final,bulk,item,request,request,final,int,index,final,bulk,item,response,primary,response,request,get,primary,response,assert,primary,response,null,expected,primary,response,to,be,set,for,item,index,request,request,request,if,primary,response,is,failed,return,primary,response,get,failure,get,seq,no,sequence,numbers,replica,item,execution,mode,failure,replica,item,execution,mode,noop,else,return,primary,response,get,response,get,result,doc,write,response,result,noop,replica,item,execution,mode,normal,replica,item,execution,mode,noop
TransportShardBulkAction -> static ReplicaItemExecutionMode replicaItemExecutionMode(final BulkItemRequest request, final int index);1533921794;Determines whether a bulk item request should be executed on the replica.__@return {@link ReplicaItemExecutionMode#NORMAL} upon normal primary execution with no failures_{@link ReplicaItemExecutionMode#FAILURE} upon primary execution failure after sequence no generation_{@link ReplicaItemExecutionMode#NOOP} upon primary execution failure before sequence no generation or_when primary execution resulted in noop (only possible for write requests from pre-6.0 nodes);static ReplicaItemExecutionMode replicaItemExecutionMode(final BulkItemRequest request, final int index) {_        final BulkItemResponse primaryResponse = request.getPrimaryResponse()__        assert primaryResponse != null : "expected primary response to be set for item [" + index + "] request [" + request.request() + "]"__        if (primaryResponse.isFailed()) {_            return primaryResponse.getFailure().getSeqNo() != SequenceNumbers.UNASSIGNED_SEQ_NO_                ? ReplicaItemExecutionMode.FAILURE _                : ReplicaItemExecutionMode.NOOP_ _        } else {_            _            _            _            _            _            return primaryResponse.getResponse().getResult() != DocWriteResponse.Result.NOOP_                ? ReplicaItemExecutionMode.NORMAL _                : ReplicaItemExecutionMode.NOOP_ _        }_    };determines,whether,a,bulk,item,request,should,be,executed,on,the,replica,return,link,replica,item,execution,mode,normal,upon,normal,primary,execution,with,no,failures,link,replica,item,execution,mode,failure,upon,primary,execution,failure,after,sequence,no,generation,link,replica,item,execution,mode,noop,upon,primary,execution,failure,before,sequence,no,generation,or,when,primary,execution,resulted,in,noop,only,possible,for,write,requests,from,pre,6,0,nodes;static,replica,item,execution,mode,replica,item,execution,mode,final,bulk,item,request,request,final,int,index,final,bulk,item,response,primary,response,request,get,primary,response,assert,primary,response,null,expected,primary,response,to,be,set,for,item,index,request,request,request,if,primary,response,is,failed,return,primary,response,get,failure,get,seq,no,sequence,numbers,replica,item,execution,mode,failure,replica,item,execution,mode,noop,else,return,primary,response,get,response,get,result,doc,write,response,result,noop,replica,item,execution,mode,normal,replica,item,execution,mode,noop
TransportShardBulkAction -> static ReplicaItemExecutionMode replicaItemExecutionMode(final BulkItemRequest request, final int index);1539615817;Determines whether a bulk item request should be executed on the replica.__@return {@link ReplicaItemExecutionMode#NORMAL} upon normal primary execution with no failures_{@link ReplicaItemExecutionMode#FAILURE} upon primary execution failure after sequence no generation_{@link ReplicaItemExecutionMode#NOOP} upon primary execution failure before sequence no generation or_when primary execution resulted in noop (only possible for write requests from pre-6.0 nodes);static ReplicaItemExecutionMode replicaItemExecutionMode(final BulkItemRequest request, final int index) {_        final BulkItemResponse primaryResponse = request.getPrimaryResponse()__        assert primaryResponse != null : "expected primary response to be set for item [" + index + "] request [" + request.request() + "]"__        if (primaryResponse.isFailed()) {_            return primaryResponse.getFailure().getSeqNo() != SequenceNumbers.UNASSIGNED_SEQ_NO_                ? ReplicaItemExecutionMode.FAILURE _                : ReplicaItemExecutionMode.NOOP_ _        } else {_            _            _            _            _            _            return primaryResponse.getResponse().getResult() != DocWriteResponse.Result.NOOP_                ? ReplicaItemExecutionMode.NORMAL _                : ReplicaItemExecutionMode.NOOP_ _        }_    };determines,whether,a,bulk,item,request,should,be,executed,on,the,replica,return,link,replica,item,execution,mode,normal,upon,normal,primary,execution,with,no,failures,link,replica,item,execution,mode,failure,upon,primary,execution,failure,after,sequence,no,generation,link,replica,item,execution,mode,noop,upon,primary,execution,failure,before,sequence,no,generation,or,when,primary,execution,resulted,in,noop,only,possible,for,write,requests,from,pre,6,0,nodes;static,replica,item,execution,mode,replica,item,execution,mode,final,bulk,item,request,request,final,int,index,final,bulk,item,response,primary,response,request,get,primary,response,assert,primary,response,null,expected,primary,response,to,be,set,for,item,index,request,request,request,if,primary,response,is,failed,return,primary,response,get,failure,get,seq,no,sequence,numbers,replica,item,execution,mode,failure,replica,item,execution,mode,noop,else,return,primary,response,get,response,get,result,doc,write,response,result,noop,replica,item,execution,mode,normal,replica,item,execution,mode,noop
TransportShardBulkAction -> static ReplicaItemExecutionMode replicaItemExecutionMode(final BulkItemRequest request, final int index);1541008027;Determines whether a bulk item request should be executed on the replica.__@return {@link ReplicaItemExecutionMode#NORMAL} upon normal primary execution with no failures_{@link ReplicaItemExecutionMode#FAILURE} upon primary execution failure after sequence no generation_{@link ReplicaItemExecutionMode#NOOP} upon primary execution failure before sequence no generation or_when primary execution resulted in noop (only possible for write requests from pre-6.0 nodes);static ReplicaItemExecutionMode replicaItemExecutionMode(final BulkItemRequest request, final int index) {_        final BulkItemResponse primaryResponse = request.getPrimaryResponse()__        assert primaryResponse != null : "expected primary response to be set for item [" + index + "] request [" + request.request() + "]"__        if (primaryResponse.isFailed()) {_            return primaryResponse.getFailure().getSeqNo() != SequenceNumbers.UNASSIGNED_SEQ_NO_                ? ReplicaItemExecutionMode.FAILURE _                : ReplicaItemExecutionMode.NOOP_ _        } else {_            _            _            _            _            _            return primaryResponse.getResponse().getResult() != DocWriteResponse.Result.NOOP_                ? ReplicaItemExecutionMode.NORMAL _                : ReplicaItemExecutionMode.NOOP_ _        }_    };determines,whether,a,bulk,item,request,should,be,executed,on,the,replica,return,link,replica,item,execution,mode,normal,upon,normal,primary,execution,with,no,failures,link,replica,item,execution,mode,failure,upon,primary,execution,failure,after,sequence,no,generation,link,replica,item,execution,mode,noop,upon,primary,execution,failure,before,sequence,no,generation,or,when,primary,execution,resulted,in,noop,only,possible,for,write,requests,from,pre,6,0,nodes;static,replica,item,execution,mode,replica,item,execution,mode,final,bulk,item,request,request,final,int,index,final,bulk,item,response,primary,response,request,get,primary,response,assert,primary,response,null,expected,primary,response,to,be,set,for,item,index,request,request,request,if,primary,response,is,failed,return,primary,response,get,failure,get,seq,no,sequence,numbers,replica,item,execution,mode,failure,replica,item,execution,mode,noop,else,return,primary,response,get,response,get,result,doc,write,response,result,noop,replica,item,execution,mode,normal,replica,item,execution,mode,noop
TransportShardBulkAction -> static ReplicaItemExecutionMode replicaItemExecutionMode(final BulkItemRequest request, final int index);1544893197;Determines whether a bulk item request should be executed on the replica.__@return {@link ReplicaItemExecutionMode#NORMAL} upon normal primary execution with no failures_{@link ReplicaItemExecutionMode#FAILURE} upon primary execution failure after sequence no generation_{@link ReplicaItemExecutionMode#NOOP} upon primary execution failure before sequence no generation or_when primary execution resulted in noop (only possible for write requests from pre-6.0 nodes);static ReplicaItemExecutionMode replicaItemExecutionMode(final BulkItemRequest request, final int index) {_        final BulkItemResponse primaryResponse = request.getPrimaryResponse()__        assert primaryResponse != null : "expected primary response to be set for item [" + index + "] request [" + request.request() + "]"__        if (primaryResponse.isFailed()) {_            return primaryResponse.getFailure().getSeqNo() != SequenceNumbers.UNASSIGNED_SEQ_NO_                ? ReplicaItemExecutionMode.FAILURE _                : ReplicaItemExecutionMode.NOOP_ _        } else {_            _            _            _            _            _            return primaryResponse.getResponse().getResult() != DocWriteResponse.Result.NOOP_                ? ReplicaItemExecutionMode.NORMAL _                : ReplicaItemExecutionMode.NOOP_ _        }_    };determines,whether,a,bulk,item,request,should,be,executed,on,the,replica,return,link,replica,item,execution,mode,normal,upon,normal,primary,execution,with,no,failures,link,replica,item,execution,mode,failure,upon,primary,execution,failure,after,sequence,no,generation,link,replica,item,execution,mode,noop,upon,primary,execution,failure,before,sequence,no,generation,or,when,primary,execution,resulted,in,noop,only,possible,for,write,requests,from,pre,6,0,nodes;static,replica,item,execution,mode,replica,item,execution,mode,final,bulk,item,request,request,final,int,index,final,bulk,item,response,primary,response,request,get,primary,response,assert,primary,response,null,expected,primary,response,to,be,set,for,item,index,request,request,request,if,primary,response,is,failed,return,primary,response,get,failure,get,seq,no,sequence,numbers,replica,item,execution,mode,failure,replica,item,execution,mode,noop,else,return,primary,response,get,response,get,result,doc,write,response,result,noop,replica,item,execution,mode,normal,replica,item,execution,mode,noop
TransportShardBulkAction -> static ReplicaItemExecutionMode replicaItemExecutionMode(final BulkItemRequest request, final int index);1545056533;Determines whether a bulk item request should be executed on the replica.__@return {@link ReplicaItemExecutionMode#NORMAL} upon normal primary execution with no failures_{@link ReplicaItemExecutionMode#FAILURE} upon primary execution failure after sequence no generation_{@link ReplicaItemExecutionMode#NOOP} upon primary execution failure before sequence no generation or_when primary execution resulted in noop (only possible for write requests from pre-6.0 nodes);static ReplicaItemExecutionMode replicaItemExecutionMode(final BulkItemRequest request, final int index) {_        final BulkItemResponse primaryResponse = request.getPrimaryResponse()__        assert primaryResponse != null : "expected primary response to be set for item [" + index + "] request [" + request.request() + "]"__        if (primaryResponse.isFailed()) {_            return primaryResponse.getFailure().getSeqNo() != SequenceNumbers.UNASSIGNED_SEQ_NO_                ? ReplicaItemExecutionMode.FAILURE _                : ReplicaItemExecutionMode.NOOP_ _        } else {_            _            _            _            _            _            return primaryResponse.getResponse().getResult() != DocWriteResponse.Result.NOOP_                ? ReplicaItemExecutionMode.NORMAL _                : ReplicaItemExecutionMode.NOOP_ _        }_    };determines,whether,a,bulk,item,request,should,be,executed,on,the,replica,return,link,replica,item,execution,mode,normal,upon,normal,primary,execution,with,no,failures,link,replica,item,execution,mode,failure,upon,primary,execution,failure,after,sequence,no,generation,link,replica,item,execution,mode,noop,upon,primary,execution,failure,before,sequence,no,generation,or,when,primary,execution,resulted,in,noop,only,possible,for,write,requests,from,pre,6,0,nodes;static,replica,item,execution,mode,replica,item,execution,mode,final,bulk,item,request,request,final,int,index,final,bulk,item,response,primary,response,request,get,primary,response,assert,primary,response,null,expected,primary,response,to,be,set,for,item,index,request,request,request,if,primary,response,is,failed,return,primary,response,get,failure,get,seq,no,sequence,numbers,replica,item,execution,mode,failure,replica,item,execution,mode,noop,else,return,primary,response,get,response,get,result,doc,write,response,result,noop,replica,item,execution,mode,normal,replica,item,execution,mode,noop
TransportShardBulkAction -> static ReplicaItemExecutionMode replicaItemExecutionMode(final BulkItemRequest request, final int index);1545140118;Determines whether a bulk item request should be executed on the replica.__@return {@link ReplicaItemExecutionMode#NORMAL} upon normal primary execution with no failures_{@link ReplicaItemExecutionMode#FAILURE} upon primary execution failure after sequence no generation_{@link ReplicaItemExecutionMode#NOOP} upon primary execution failure before sequence no generation or_when primary execution resulted in noop (only possible for write requests from pre-6.0 nodes);static ReplicaItemExecutionMode replicaItemExecutionMode(final BulkItemRequest request, final int index) {_        final BulkItemResponse primaryResponse = request.getPrimaryResponse()__        assert primaryResponse != null : "expected primary response to be set for item [" + index + "] request [" + request.request() + "]"__        if (primaryResponse.isFailed()) {_            return primaryResponse.getFailure().getSeqNo() != SequenceNumbers.UNASSIGNED_SEQ_NO_                ? ReplicaItemExecutionMode.FAILURE _                : ReplicaItemExecutionMode.NOOP_ _        } else {_            _            _            _            _            _            return primaryResponse.getResponse().getResult() != DocWriteResponse.Result.NOOP_                ? ReplicaItemExecutionMode.NORMAL _                : ReplicaItemExecutionMode.NOOP_ _        }_    };determines,whether,a,bulk,item,request,should,be,executed,on,the,replica,return,link,replica,item,execution,mode,normal,upon,normal,primary,execution,with,no,failures,link,replica,item,execution,mode,failure,upon,primary,execution,failure,after,sequence,no,generation,link,replica,item,execution,mode,noop,upon,primary,execution,failure,before,sequence,no,generation,or,when,primary,execution,resulted,in,noop,only,possible,for,write,requests,from,pre,6,0,nodes;static,replica,item,execution,mode,replica,item,execution,mode,final,bulk,item,request,request,final,int,index,final,bulk,item,response,primary,response,request,get,primary,response,assert,primary,response,null,expected,primary,response,to,be,set,for,item,index,request,request,request,if,primary,response,is,failed,return,primary,response,get,failure,get,seq,no,sequence,numbers,replica,item,execution,mode,failure,replica,item,execution,mode,noop,else,return,primary,response,get,response,get,result,doc,write,response,result,noop,replica,item,execution,mode,normal,replica,item,execution,mode,noop
TransportShardBulkAction -> static ReplicaItemExecutionMode replicaItemExecutionMode(final BulkItemRequest request, final int index);1545678410;Determines whether a bulk item request should be executed on the replica.__@return {@link ReplicaItemExecutionMode#NORMAL} upon normal primary execution with no failures_{@link ReplicaItemExecutionMode#FAILURE} upon primary execution failure after sequence no generation_{@link ReplicaItemExecutionMode#NOOP} upon primary execution failure before sequence no generation or_when primary execution resulted in noop (only possible for write requests from pre-6.0 nodes);static ReplicaItemExecutionMode replicaItemExecutionMode(final BulkItemRequest request, final int index) {_        final BulkItemResponse primaryResponse = request.getPrimaryResponse()__        assert primaryResponse != null : "expected primary response to be set for item [" + index + "] request [" + request.request() + "]"__        if (primaryResponse.isFailed()) {_            return primaryResponse.getFailure().getSeqNo() != SequenceNumbers.UNASSIGNED_SEQ_NO_                ? ReplicaItemExecutionMode.FAILURE _                : ReplicaItemExecutionMode.NOOP_ _        } else {_            _            _            _            _            _            return primaryResponse.getResponse().getResult() != DocWriteResponse.Result.NOOP_                ? ReplicaItemExecutionMode.NORMAL _                : ReplicaItemExecutionMode.NOOP_ _        }_    };determines,whether,a,bulk,item,request,should,be,executed,on,the,replica,return,link,replica,item,execution,mode,normal,upon,normal,primary,execution,with,no,failures,link,replica,item,execution,mode,failure,upon,primary,execution,failure,after,sequence,no,generation,link,replica,item,execution,mode,noop,upon,primary,execution,failure,before,sequence,no,generation,or,when,primary,execution,resulted,in,noop,only,possible,for,write,requests,from,pre,6,0,nodes;static,replica,item,execution,mode,replica,item,execution,mode,final,bulk,item,request,request,final,int,index,final,bulk,item,response,primary,response,request,get,primary,response,assert,primary,response,null,expected,primary,response,to,be,set,for,item,index,request,request,request,if,primary,response,is,failed,return,primary,response,get,failure,get,seq,no,sequence,numbers,replica,item,execution,mode,failure,replica,item,execution,mode,noop,else,return,primary,response,get,response,get,result,doc,write,response,result,noop,replica,item,execution,mode,normal,replica,item,execution,mode,noop
TransportShardBulkAction -> static ReplicaItemExecutionMode replicaItemExecutionMode(final BulkItemRequest request, final int index);1547643669;Determines whether a bulk item request should be executed on the replica.__@return {@link ReplicaItemExecutionMode#NORMAL} upon normal primary execution with no failures_{@link ReplicaItemExecutionMode#FAILURE} upon primary execution failure after sequence no generation_{@link ReplicaItemExecutionMode#NOOP} upon primary execution failure before sequence no generation or_when primary execution resulted in noop (only possible for write requests from pre-6.0 nodes);static ReplicaItemExecutionMode replicaItemExecutionMode(final BulkItemRequest request, final int index) {_        final BulkItemResponse primaryResponse = request.getPrimaryResponse()__        assert primaryResponse != null : "expected primary response to be set for item [" + index + "] request [" + request.request() + "]"__        if (primaryResponse.isFailed()) {_            return primaryResponse.getFailure().getSeqNo() != SequenceNumbers.UNASSIGNED_SEQ_NO_                ? ReplicaItemExecutionMode.FAILURE _                : ReplicaItemExecutionMode.NOOP_ _        } else {_            _            _            _            _            _            return primaryResponse.getResponse().getResult() != DocWriteResponse.Result.NOOP_                ? ReplicaItemExecutionMode.NORMAL _                : ReplicaItemExecutionMode.NOOP_ _        }_    };determines,whether,a,bulk,item,request,should,be,executed,on,the,replica,return,link,replica,item,execution,mode,normal,upon,normal,primary,execution,with,no,failures,link,replica,item,execution,mode,failure,upon,primary,execution,failure,after,sequence,no,generation,link,replica,item,execution,mode,noop,upon,primary,execution,failure,before,sequence,no,generation,or,when,primary,execution,resulted,in,noop,only,possible,for,write,requests,from,pre,6,0,nodes;static,replica,item,execution,mode,replica,item,execution,mode,final,bulk,item,request,request,final,int,index,final,bulk,item,response,primary,response,request,get,primary,response,assert,primary,response,null,expected,primary,response,to,be,set,for,item,index,request,request,request,if,primary,response,is,failed,return,primary,response,get,failure,get,seq,no,sequence,numbers,replica,item,execution,mode,failure,replica,item,execution,mode,noop,else,return,primary,response,get,response,get,result,doc,write,response,result,noop,replica,item,execution,mode,normal,replica,item,execution,mode,noop
TransportShardBulkAction -> static ReplicaItemExecutionMode replicaItemExecutionMode(final BulkItemRequest request, final int index);1550161840;Determines whether a bulk item request should be executed on the replica.__@return {@link ReplicaItemExecutionMode#NORMAL} upon normal primary execution with no failures_{@link ReplicaItemExecutionMode#FAILURE} upon primary execution failure after sequence no generation_{@link ReplicaItemExecutionMode#NOOP} upon primary execution failure before sequence no generation or_when primary execution resulted in noop (only possible for write requests from pre-6.0 nodes);static ReplicaItemExecutionMode replicaItemExecutionMode(final BulkItemRequest request, final int index) {_        final BulkItemResponse primaryResponse = request.getPrimaryResponse()__        assert primaryResponse != null : "expected primary response to be set for item [" + index + "] request [" + request.request() + "]"__        if (primaryResponse.isFailed()) {_            return primaryResponse.getFailure().getSeqNo() != SequenceNumbers.UNASSIGNED_SEQ_NO_                ? ReplicaItemExecutionMode.FAILURE _                : ReplicaItemExecutionMode.NOOP_ _        } else {_            _            _            _            _            _            return primaryResponse.getResponse().getResult() != DocWriteResponse.Result.NOOP_                ? ReplicaItemExecutionMode.NORMAL _                : ReplicaItemExecutionMode.NOOP_ _        }_    };determines,whether,a,bulk,item,request,should,be,executed,on,the,replica,return,link,replica,item,execution,mode,normal,upon,normal,primary,execution,with,no,failures,link,replica,item,execution,mode,failure,upon,primary,execution,failure,after,sequence,no,generation,link,replica,item,execution,mode,noop,upon,primary,execution,failure,before,sequence,no,generation,or,when,primary,execution,resulted,in,noop,only,possible,for,write,requests,from,pre,6,0,nodes;static,replica,item,execution,mode,replica,item,execution,mode,final,bulk,item,request,request,final,int,index,final,bulk,item,response,primary,response,request,get,primary,response,assert,primary,response,null,expected,primary,response,to,be,set,for,item,index,request,request,request,if,primary,response,is,failed,return,primary,response,get,failure,get,seq,no,sequence,numbers,replica,item,execution,mode,failure,replica,item,execution,mode,noop,else,return,primary,response,get,response,get,result,doc,write,response,result,noop,replica,item,execution,mode,normal,replica,item,execution,mode,noop
TransportShardBulkAction -> static ReplicaItemExecutionMode replicaItemExecutionMode(final BulkItemRequest request, final int index);1550221827;Determines whether a bulk item request should be executed on the replica.__@return {@link ReplicaItemExecutionMode#NORMAL} upon normal primary execution with no failures_{@link ReplicaItemExecutionMode#FAILURE} upon primary execution failure after sequence no generation_{@link ReplicaItemExecutionMode#NOOP} upon primary execution failure before sequence no generation or_when primary execution resulted in noop (only possible for write requests from pre-6.0 nodes);static ReplicaItemExecutionMode replicaItemExecutionMode(final BulkItemRequest request, final int index) {_        final BulkItemResponse primaryResponse = request.getPrimaryResponse()__        assert primaryResponse != null : "expected primary response to be set for item [" + index + "] request [" + request.request() + "]"__        if (primaryResponse.isFailed()) {_            return primaryResponse.getFailure().getSeqNo() != SequenceNumbers.UNASSIGNED_SEQ_NO_                ? ReplicaItemExecutionMode.FAILURE _                : ReplicaItemExecutionMode.NOOP_ _        } else {_            _            _            _            _            _            return primaryResponse.getResponse().getResult() != DocWriteResponse.Result.NOOP_                ? ReplicaItemExecutionMode.NORMAL _                : ReplicaItemExecutionMode.NOOP_ _        }_    };determines,whether,a,bulk,item,request,should,be,executed,on,the,replica,return,link,replica,item,execution,mode,normal,upon,normal,primary,execution,with,no,failures,link,replica,item,execution,mode,failure,upon,primary,execution,failure,after,sequence,no,generation,link,replica,item,execution,mode,noop,upon,primary,execution,failure,before,sequence,no,generation,or,when,primary,execution,resulted,in,noop,only,possible,for,write,requests,from,pre,6,0,nodes;static,replica,item,execution,mode,replica,item,execution,mode,final,bulk,item,request,request,final,int,index,final,bulk,item,response,primary,response,request,get,primary,response,assert,primary,response,null,expected,primary,response,to,be,set,for,item,index,request,request,request,if,primary,response,is,failed,return,primary,response,get,failure,get,seq,no,sequence,numbers,replica,item,execution,mode,failure,replica,item,execution,mode,noop,else,return,primary,response,get,response,get,result,doc,write,response,result,noop,replica,item,execution,mode,normal,replica,item,execution,mode,noop
TransportShardBulkAction -> static void executeBulkItemRequest(BulkPrimaryExecutionContext context, UpdateHelper updateHelper, LongSupplier nowInMillisSupplier,                                        MappingUpdatePerformer mappingUpdater, CheckedRunnable<Exception> waitForMappingUpdate)         throws Exception;1533921794;Executes bulk item requests and handles request execution exceptions;static void executeBulkItemRequest(BulkPrimaryExecutionContext context, UpdateHelper updateHelper, LongSupplier nowInMillisSupplier,_                                       MappingUpdatePerformer mappingUpdater, CheckedRunnable<Exception> waitForMappingUpdate)_        throws Exception {_        final DocWriteRequest.OpType opType = context.getCurrent().opType()___        final UpdateHelper.Result updateResult__        if (opType == DocWriteRequest.OpType.UPDATE) {_            final UpdateRequest updateRequest = (UpdateRequest) context.getCurrent()__            try {_                updateResult = updateHelper.prepare(updateRequest, context.getPrimary(), nowInMillisSupplier)__            } catch (Exception failure) {_                _                _                final Engine.Result result = new Engine.IndexResult(failure, updateRequest.version(), SequenceNumbers.UNASSIGNED_SEQ_NO)__                context.setRequestToExecute(updateRequest)__                context.markOperationAsExecuted(result)__                context.markAsCompleted(context.getExecutionResult())__                return__            }_            _            switch (updateResult.getResponseResult()) {_                case CREATED:_                case UPDATED:_                    IndexRequest indexRequest = updateResult.action()__                    IndexMetaData metaData = context.getPrimary().indexSettings().getIndexMetaData()__                    MappingMetaData mappingMd = metaData.mappingOrDefault(indexRequest.type())__                    indexRequest.process(metaData.getCreationVersion(), mappingMd, updateRequest.concreteIndex())__                    context.setRequestToExecute(indexRequest)__                    break__                case DELETED:_                    context.setRequestToExecute(updateResult.action())__                    break__                case NOOP:_                    context.markOperationAsNoOp(updateResult.action())__                    context.markAsCompleted(context.getExecutionResult())__                    return__                default:_                    throw new IllegalStateException("Illegal update operation " + updateResult.getResponseResult())__            }_        } else {_            context.setRequestToExecute(context.getCurrent())__            updateResult = null__        }__        assert context.getRequestToExecute() != null_ __        if (context.getRequestToExecute().opType() == DocWriteRequest.OpType.DELETE) {_            executeDeleteRequestOnPrimary(context, mappingUpdater)__        } else {_            executeIndexRequestOnPrimary(context, mappingUpdater)__        }__        if (context.requiresWaitingForMappingUpdate()) {_            try {_                waitForMappingUpdate.run()__                context.resetForExecutionForRetry()__            } catch (Exception e) {_                context.failOnMappingUpdate(e)__            }_            return__        }__        assert context.isOperationExecuted()___        if (opType == DocWriteRequest.OpType.UPDATE &&_            context.getExecutionResult().isFailed() &&_            isConflictException(context.getExecutionResult().getFailure().getCause())) {_            final UpdateRequest updateRequest = (UpdateRequest) context.getCurrent()__            if (context.getRetryCounter() < updateRequest.retryOnConflict()) {_                context.resetForExecutionForRetry()__                return__            }_        }__        finalizePrimaryOperationOnCompletion(context, opType, updateResult)__    };executes,bulk,item,requests,and,handles,request,execution,exceptions;static,void,execute,bulk,item,request,bulk,primary,execution,context,context,update,helper,update,helper,long,supplier,now,in,millis,supplier,mapping,update,performer,mapping,updater,checked,runnable,exception,wait,for,mapping,update,throws,exception,final,doc,write,request,op,type,op,type,context,get,current,op,type,final,update,helper,result,update,result,if,op,type,doc,write,request,op,type,update,final,update,request,update,request,update,request,context,get,current,try,update,result,update,helper,prepare,update,request,context,get,primary,now,in,millis,supplier,catch,exception,failure,final,engine,result,result,new,engine,index,result,failure,update,request,version,sequence,numbers,context,set,request,to,execute,update,request,context,mark,operation,as,executed,result,context,mark,as,completed,context,get,execution,result,return,switch,update,result,get,response,result,case,created,case,updated,index,request,index,request,update,result,action,index,meta,data,meta,data,context,get,primary,index,settings,get,index,meta,data,mapping,meta,data,mapping,md,meta,data,mapping,or,default,index,request,type,index,request,process,meta,data,get,creation,version,mapping,md,update,request,concrete,index,context,set,request,to,execute,index,request,break,case,deleted,context,set,request,to,execute,update,result,action,break,case,noop,context,mark,operation,as,no,op,update,result,action,context,mark,as,completed,context,get,execution,result,return,default,throw,new,illegal,state,exception,illegal,update,operation,update,result,get,response,result,else,context,set,request,to,execute,context,get,current,update,result,null,assert,context,get,request,to,execute,null,if,context,get,request,to,execute,op,type,doc,write,request,op,type,delete,execute,delete,request,on,primary,context,mapping,updater,else,execute,index,request,on,primary,context,mapping,updater,if,context,requires,waiting,for,mapping,update,try,wait,for,mapping,update,run,context,reset,for,execution,for,retry,catch,exception,e,context,fail,on,mapping,update,e,return,assert,context,is,operation,executed,if,op,type,doc,write,request,op,type,update,context,get,execution,result,is,failed,is,conflict,exception,context,get,execution,result,get,failure,get,cause,final,update,request,update,request,update,request,context,get,current,if,context,get,retry,counter,update,request,retry,on,conflict,context,reset,for,execution,for,retry,return,finalize,primary,operation,on,completion,context,op,type,update,result
TransportShardBulkAction -> static void executeBulkItemRequest(BulkPrimaryExecutionContext context, UpdateHelper updateHelper, LongSupplier nowInMillisSupplier,                                        MappingUpdatePerformer mappingUpdater, CheckedRunnable<Exception> waitForMappingUpdate)         throws Exception;1539615817;Executes bulk item requests and handles request execution exceptions;static void executeBulkItemRequest(BulkPrimaryExecutionContext context, UpdateHelper updateHelper, LongSupplier nowInMillisSupplier,_                                       MappingUpdatePerformer mappingUpdater, CheckedRunnable<Exception> waitForMappingUpdate)_        throws Exception {_        final DocWriteRequest.OpType opType = context.getCurrent().opType()___        final UpdateHelper.Result updateResult__        if (opType == DocWriteRequest.OpType.UPDATE) {_            final UpdateRequest updateRequest = (UpdateRequest) context.getCurrent()__            try {_                updateResult = updateHelper.prepare(updateRequest, context.getPrimary(), nowInMillisSupplier)__            } catch (Exception failure) {_                _                _                final Engine.Result result = new Engine.IndexResult(failure, updateRequest.version(), SequenceNumbers.UNASSIGNED_SEQ_NO)__                context.setRequestToExecute(updateRequest)__                context.markOperationAsExecuted(result)__                context.markAsCompleted(context.getExecutionResult())__                return__            }_            _            switch (updateResult.getResponseResult()) {_                case CREATED:_                case UPDATED:_                    IndexRequest indexRequest = updateResult.action()__                    IndexMetaData metaData = context.getPrimary().indexSettings().getIndexMetaData()__                    MappingMetaData mappingMd = metaData.mappingOrDefault(indexRequest.type())__                    indexRequest.process(metaData.getCreationVersion(), mappingMd, updateRequest.concreteIndex())__                    context.setRequestToExecute(indexRequest)__                    break__                case DELETED:_                    context.setRequestToExecute(updateResult.action())__                    break__                case NOOP:_                    context.markOperationAsNoOp(updateResult.action())__                    context.markAsCompleted(context.getExecutionResult())__                    return__                default:_                    throw new IllegalStateException("Illegal update operation " + updateResult.getResponseResult())__            }_        } else {_            context.setRequestToExecute(context.getCurrent())__            updateResult = null__        }__        assert context.getRequestToExecute() != null_ __        if (context.getRequestToExecute().opType() == DocWriteRequest.OpType.DELETE) {_            executeDeleteRequestOnPrimary(context, mappingUpdater)__        } else {_            executeIndexRequestOnPrimary(context, mappingUpdater)__        }__        if (context.requiresWaitingForMappingUpdate()) {_            try {_                waitForMappingUpdate.run()__                context.resetForExecutionForRetry()__            } catch (Exception e) {_                context.failOnMappingUpdate(e)__            }_            return__        }__        assert context.isOperationExecuted()___        if (opType == DocWriteRequest.OpType.UPDATE &&_            context.getExecutionResult().isFailed() &&_            isConflictException(context.getExecutionResult().getFailure().getCause())) {_            final UpdateRequest updateRequest = (UpdateRequest) context.getCurrent()__            if (context.getRetryCounter() < updateRequest.retryOnConflict()) {_                context.resetForExecutionForRetry()__                return__            }_        }__        finalizePrimaryOperationOnCompletion(context, opType, updateResult)__    };executes,bulk,item,requests,and,handles,request,execution,exceptions;static,void,execute,bulk,item,request,bulk,primary,execution,context,context,update,helper,update,helper,long,supplier,now,in,millis,supplier,mapping,update,performer,mapping,updater,checked,runnable,exception,wait,for,mapping,update,throws,exception,final,doc,write,request,op,type,op,type,context,get,current,op,type,final,update,helper,result,update,result,if,op,type,doc,write,request,op,type,update,final,update,request,update,request,update,request,context,get,current,try,update,result,update,helper,prepare,update,request,context,get,primary,now,in,millis,supplier,catch,exception,failure,final,engine,result,result,new,engine,index,result,failure,update,request,version,sequence,numbers,context,set,request,to,execute,update,request,context,mark,operation,as,executed,result,context,mark,as,completed,context,get,execution,result,return,switch,update,result,get,response,result,case,created,case,updated,index,request,index,request,update,result,action,index,meta,data,meta,data,context,get,primary,index,settings,get,index,meta,data,mapping,meta,data,mapping,md,meta,data,mapping,or,default,index,request,type,index,request,process,meta,data,get,creation,version,mapping,md,update,request,concrete,index,context,set,request,to,execute,index,request,break,case,deleted,context,set,request,to,execute,update,result,action,break,case,noop,context,mark,operation,as,no,op,update,result,action,context,mark,as,completed,context,get,execution,result,return,default,throw,new,illegal,state,exception,illegal,update,operation,update,result,get,response,result,else,context,set,request,to,execute,context,get,current,update,result,null,assert,context,get,request,to,execute,null,if,context,get,request,to,execute,op,type,doc,write,request,op,type,delete,execute,delete,request,on,primary,context,mapping,updater,else,execute,index,request,on,primary,context,mapping,updater,if,context,requires,waiting,for,mapping,update,try,wait,for,mapping,update,run,context,reset,for,execution,for,retry,catch,exception,e,context,fail,on,mapping,update,e,return,assert,context,is,operation,executed,if,op,type,doc,write,request,op,type,update,context,get,execution,result,is,failed,is,conflict,exception,context,get,execution,result,get,failure,get,cause,final,update,request,update,request,update,request,context,get,current,if,context,get,retry,counter,update,request,retry,on,conflict,context,reset,for,execution,for,retry,return,finalize,primary,operation,on,completion,context,op,type,update,result
TransportShardBulkAction -> static void executeBulkItemRequest(BulkPrimaryExecutionContext context, UpdateHelper updateHelper, LongSupplier nowInMillisSupplier,                                        MappingUpdatePerformer mappingUpdater, CheckedRunnable<Exception> waitForMappingUpdate)         throws Exception;1541008027;Executes bulk item requests and handles request execution exceptions;static void executeBulkItemRequest(BulkPrimaryExecutionContext context, UpdateHelper updateHelper, LongSupplier nowInMillisSupplier,_                                       MappingUpdatePerformer mappingUpdater, CheckedRunnable<Exception> waitForMappingUpdate)_        throws Exception {_        final DocWriteRequest.OpType opType = context.getCurrent().opType()___        final UpdateHelper.Result updateResult__        if (opType == DocWriteRequest.OpType.UPDATE) {_            final UpdateRequest updateRequest = (UpdateRequest) context.getCurrent()__            try {_                updateResult = updateHelper.prepare(updateRequest, context.getPrimary(), nowInMillisSupplier)__            } catch (Exception failure) {_                _                _                final Engine.Result result = new Engine.IndexResult(failure, updateRequest.version(), SequenceNumbers.UNASSIGNED_SEQ_NO)__                context.setRequestToExecute(updateRequest)__                context.markOperationAsExecuted(result)__                context.markAsCompleted(context.getExecutionResult())__                return__            }_            _            switch (updateResult.getResponseResult()) {_                case CREATED:_                case UPDATED:_                    IndexRequest indexRequest = updateResult.action()__                    IndexMetaData metaData = context.getPrimary().indexSettings().getIndexMetaData()__                    MappingMetaData mappingMd = metaData.mappingOrDefault(indexRequest.type())__                    indexRequest.process(metaData.getCreationVersion(), mappingMd, updateRequest.concreteIndex())__                    context.setRequestToExecute(indexRequest)__                    break__                case DELETED:_                    context.setRequestToExecute(updateResult.action())__                    break__                case NOOP:_                    context.markOperationAsNoOp(updateResult.action())__                    context.markAsCompleted(context.getExecutionResult())__                    return__                default:_                    throw new IllegalStateException("Illegal update operation " + updateResult.getResponseResult())__            }_        } else {_            context.setRequestToExecute(context.getCurrent())__            updateResult = null__        }__        assert context.getRequestToExecute() != null_ __        if (context.getRequestToExecute().opType() == DocWriteRequest.OpType.DELETE) {_            executeDeleteRequestOnPrimary(context, mappingUpdater)__        } else {_            executeIndexRequestOnPrimary(context, mappingUpdater)__        }__        if (context.requiresWaitingForMappingUpdate()) {_            try {_                waitForMappingUpdate.run()__                context.resetForExecutionForRetry()__            } catch (Exception e) {_                context.failOnMappingUpdate(e)__            }_            return__        }__        assert context.isOperationExecuted()___        if (opType == DocWriteRequest.OpType.UPDATE &&_            context.getExecutionResult().isFailed() &&_            isConflictException(context.getExecutionResult().getFailure().getCause())) {_            final UpdateRequest updateRequest = (UpdateRequest) context.getCurrent()__            if (context.getRetryCounter() < updateRequest.retryOnConflict()) {_                context.resetForExecutionForRetry()__                return__            }_        }__        finalizePrimaryOperationOnCompletion(context, opType, updateResult)__    };executes,bulk,item,requests,and,handles,request,execution,exceptions;static,void,execute,bulk,item,request,bulk,primary,execution,context,context,update,helper,update,helper,long,supplier,now,in,millis,supplier,mapping,update,performer,mapping,updater,checked,runnable,exception,wait,for,mapping,update,throws,exception,final,doc,write,request,op,type,op,type,context,get,current,op,type,final,update,helper,result,update,result,if,op,type,doc,write,request,op,type,update,final,update,request,update,request,update,request,context,get,current,try,update,result,update,helper,prepare,update,request,context,get,primary,now,in,millis,supplier,catch,exception,failure,final,engine,result,result,new,engine,index,result,failure,update,request,version,sequence,numbers,context,set,request,to,execute,update,request,context,mark,operation,as,executed,result,context,mark,as,completed,context,get,execution,result,return,switch,update,result,get,response,result,case,created,case,updated,index,request,index,request,update,result,action,index,meta,data,meta,data,context,get,primary,index,settings,get,index,meta,data,mapping,meta,data,mapping,md,meta,data,mapping,or,default,index,request,type,index,request,process,meta,data,get,creation,version,mapping,md,update,request,concrete,index,context,set,request,to,execute,index,request,break,case,deleted,context,set,request,to,execute,update,result,action,break,case,noop,context,mark,operation,as,no,op,update,result,action,context,mark,as,completed,context,get,execution,result,return,default,throw,new,illegal,state,exception,illegal,update,operation,update,result,get,response,result,else,context,set,request,to,execute,context,get,current,update,result,null,assert,context,get,request,to,execute,null,if,context,get,request,to,execute,op,type,doc,write,request,op,type,delete,execute,delete,request,on,primary,context,mapping,updater,else,execute,index,request,on,primary,context,mapping,updater,if,context,requires,waiting,for,mapping,update,try,wait,for,mapping,update,run,context,reset,for,execution,for,retry,catch,exception,e,context,fail,on,mapping,update,e,return,assert,context,is,operation,executed,if,op,type,doc,write,request,op,type,update,context,get,execution,result,is,failed,is,conflict,exception,context,get,execution,result,get,failure,get,cause,final,update,request,update,request,update,request,context,get,current,if,context,get,retry,counter,update,request,retry,on,conflict,context,reset,for,execution,for,retry,return,finalize,primary,operation,on,completion,context,op,type,update,result
TransportShardBulkAction -> static void executeBulkItemRequest(BulkPrimaryExecutionContext context, UpdateHelper updateHelper, LongSupplier nowInMillisSupplier,                                        MappingUpdatePerformer mappingUpdater, CheckedRunnable<Exception> waitForMappingUpdate)         throws Exception;1544893197;Executes bulk item requests and handles request execution exceptions;static void executeBulkItemRequest(BulkPrimaryExecutionContext context, UpdateHelper updateHelper, LongSupplier nowInMillisSupplier,_                                       MappingUpdatePerformer mappingUpdater, CheckedRunnable<Exception> waitForMappingUpdate)_        throws Exception {_        final DocWriteRequest.OpType opType = context.getCurrent().opType()___        final UpdateHelper.Result updateResult__        if (opType == DocWriteRequest.OpType.UPDATE) {_            final UpdateRequest updateRequest = (UpdateRequest) context.getCurrent()__            try {_                updateResult = updateHelper.prepare(updateRequest, context.getPrimary(), nowInMillisSupplier)__            } catch (Exception failure) {_                _                _                final Engine.Result result = new Engine.IndexResult(failure, updateRequest.version(), SequenceNumbers.UNASSIGNED_SEQ_NO)__                context.setRequestToExecute(updateRequest)__                context.markOperationAsExecuted(result)__                context.markAsCompleted(context.getExecutionResult())__                return__            }_            _            switch (updateResult.getResponseResult()) {_                case CREATED:_                case UPDATED:_                    IndexRequest indexRequest = updateResult.action()__                    IndexMetaData metaData = context.getPrimary().indexSettings().getIndexMetaData()__                    MappingMetaData mappingMd = metaData.mappingOrDefault(indexRequest.type())__                    indexRequest.process(metaData.getCreationVersion(), mappingMd, updateRequest.concreteIndex())__                    context.setRequestToExecute(indexRequest)__                    break__                case DELETED:_                    context.setRequestToExecute(updateResult.action())__                    break__                case NOOP:_                    context.markOperationAsNoOp(updateResult.action())__                    context.markAsCompleted(context.getExecutionResult())__                    return__                default:_                    throw new IllegalStateException("Illegal update operation " + updateResult.getResponseResult())__            }_        } else {_            context.setRequestToExecute(context.getCurrent())__            updateResult = null__        }__        assert context.getRequestToExecute() != null_ __        if (context.getRequestToExecute().opType() == DocWriteRequest.OpType.DELETE) {_            executeDeleteRequestOnPrimary(context, mappingUpdater)__        } else {_            executeIndexRequestOnPrimary(context, mappingUpdater)__        }__        if (context.requiresWaitingForMappingUpdate()) {_            try {_                waitForMappingUpdate.run()__                context.resetForExecutionForRetry()__            } catch (Exception e) {_                context.failOnMappingUpdate(e)__            }_            return__        }__        assert context.isOperationExecuted()___        if (opType == DocWriteRequest.OpType.UPDATE &&_            context.getExecutionResult().isFailed() &&_            isConflictException(context.getExecutionResult().getFailure().getCause())) {_            final UpdateRequest updateRequest = (UpdateRequest) context.getCurrent()__            if (context.getRetryCounter() < updateRequest.retryOnConflict()) {_                context.resetForExecutionForRetry()__                return__            }_        }__        finalizePrimaryOperationOnCompletion(context, opType, updateResult)__    };executes,bulk,item,requests,and,handles,request,execution,exceptions;static,void,execute,bulk,item,request,bulk,primary,execution,context,context,update,helper,update,helper,long,supplier,now,in,millis,supplier,mapping,update,performer,mapping,updater,checked,runnable,exception,wait,for,mapping,update,throws,exception,final,doc,write,request,op,type,op,type,context,get,current,op,type,final,update,helper,result,update,result,if,op,type,doc,write,request,op,type,update,final,update,request,update,request,update,request,context,get,current,try,update,result,update,helper,prepare,update,request,context,get,primary,now,in,millis,supplier,catch,exception,failure,final,engine,result,result,new,engine,index,result,failure,update,request,version,sequence,numbers,context,set,request,to,execute,update,request,context,mark,operation,as,executed,result,context,mark,as,completed,context,get,execution,result,return,switch,update,result,get,response,result,case,created,case,updated,index,request,index,request,update,result,action,index,meta,data,meta,data,context,get,primary,index,settings,get,index,meta,data,mapping,meta,data,mapping,md,meta,data,mapping,or,default,index,request,type,index,request,process,meta,data,get,creation,version,mapping,md,update,request,concrete,index,context,set,request,to,execute,index,request,break,case,deleted,context,set,request,to,execute,update,result,action,break,case,noop,context,mark,operation,as,no,op,update,result,action,context,mark,as,completed,context,get,execution,result,return,default,throw,new,illegal,state,exception,illegal,update,operation,update,result,get,response,result,else,context,set,request,to,execute,context,get,current,update,result,null,assert,context,get,request,to,execute,null,if,context,get,request,to,execute,op,type,doc,write,request,op,type,delete,execute,delete,request,on,primary,context,mapping,updater,else,execute,index,request,on,primary,context,mapping,updater,if,context,requires,waiting,for,mapping,update,try,wait,for,mapping,update,run,context,reset,for,execution,for,retry,catch,exception,e,context,fail,on,mapping,update,e,return,assert,context,is,operation,executed,if,op,type,doc,write,request,op,type,update,context,get,execution,result,is,failed,is,conflict,exception,context,get,execution,result,get,failure,get,cause,final,update,request,update,request,update,request,context,get,current,if,context,get,retry,counter,update,request,retry,on,conflict,context,reset,for,execution,for,retry,return,finalize,primary,operation,on,completion,context,op,type,update,result
TransportShardBulkAction -> static void executeBulkItemRequest(BulkPrimaryExecutionContext context, UpdateHelper updateHelper, LongSupplier nowInMillisSupplier,                                        MappingUpdatePerformer mappingUpdater, CheckedRunnable<Exception> waitForMappingUpdate)         throws Exception;1545056533;Executes bulk item requests and handles request execution exceptions;static void executeBulkItemRequest(BulkPrimaryExecutionContext context, UpdateHelper updateHelper, LongSupplier nowInMillisSupplier,_                                       MappingUpdatePerformer mappingUpdater, CheckedRunnable<Exception> waitForMappingUpdate)_        throws Exception {_        final DocWriteRequest.OpType opType = context.getCurrent().opType()___        final UpdateHelper.Result updateResult__        if (opType == DocWriteRequest.OpType.UPDATE) {_            final UpdateRequest updateRequest = (UpdateRequest) context.getCurrent()__            try {_                updateResult = updateHelper.prepare(updateRequest, context.getPrimary(), nowInMillisSupplier)__            } catch (Exception failure) {_                _                _                final Engine.Result result = new Engine.IndexResult(failure, updateRequest.version(), SequenceNumbers.UNASSIGNED_SEQ_NO)__                context.setRequestToExecute(updateRequest)__                context.markOperationAsExecuted(result)__                context.markAsCompleted(context.getExecutionResult())__                return__            }_            _            switch (updateResult.getResponseResult()) {_                case CREATED:_                case UPDATED:_                    IndexRequest indexRequest = updateResult.action()__                    IndexMetaData metaData = context.getPrimary().indexSettings().getIndexMetaData()__                    MappingMetaData mappingMd = metaData.mappingOrDefault(indexRequest.type())__                    indexRequest.process(metaData.getCreationVersion(), mappingMd, updateRequest.concreteIndex())__                    context.setRequestToExecute(indexRequest)__                    break__                case DELETED:_                    context.setRequestToExecute(updateResult.action())__                    break__                case NOOP:_                    context.markOperationAsNoOp(updateResult.action())__                    context.markAsCompleted(context.getExecutionResult())__                    return__                default:_                    throw new IllegalStateException("Illegal update operation " + updateResult.getResponseResult())__            }_        } else {_            context.setRequestToExecute(context.getCurrent())__            updateResult = null__        }__        assert context.getRequestToExecute() != null_ __        if (context.getRequestToExecute().opType() == DocWriteRequest.OpType.DELETE) {_            executeDeleteRequestOnPrimary(context, mappingUpdater)__        } else {_            executeIndexRequestOnPrimary(context, mappingUpdater)__        }__        if (context.requiresWaitingForMappingUpdate()) {_            try {_                waitForMappingUpdate.run()__                context.resetForExecutionForRetry()__            } catch (Exception e) {_                context.failOnMappingUpdate(e)__            }_            return__        }__        assert context.isOperationExecuted()___        if (opType == DocWriteRequest.OpType.UPDATE &&_            context.getExecutionResult().isFailed() &&_            isConflictException(context.getExecutionResult().getFailure().getCause())) {_            final UpdateRequest updateRequest = (UpdateRequest) context.getCurrent()__            if (context.getRetryCounter() < updateRequest.retryOnConflict()) {_                context.resetForExecutionForRetry()__                return__            }_        }__        finalizePrimaryOperationOnCompletion(context, opType, updateResult)__    };executes,bulk,item,requests,and,handles,request,execution,exceptions;static,void,execute,bulk,item,request,bulk,primary,execution,context,context,update,helper,update,helper,long,supplier,now,in,millis,supplier,mapping,update,performer,mapping,updater,checked,runnable,exception,wait,for,mapping,update,throws,exception,final,doc,write,request,op,type,op,type,context,get,current,op,type,final,update,helper,result,update,result,if,op,type,doc,write,request,op,type,update,final,update,request,update,request,update,request,context,get,current,try,update,result,update,helper,prepare,update,request,context,get,primary,now,in,millis,supplier,catch,exception,failure,final,engine,result,result,new,engine,index,result,failure,update,request,version,sequence,numbers,context,set,request,to,execute,update,request,context,mark,operation,as,executed,result,context,mark,as,completed,context,get,execution,result,return,switch,update,result,get,response,result,case,created,case,updated,index,request,index,request,update,result,action,index,meta,data,meta,data,context,get,primary,index,settings,get,index,meta,data,mapping,meta,data,mapping,md,meta,data,mapping,or,default,index,request,type,index,request,process,meta,data,get,creation,version,mapping,md,update,request,concrete,index,context,set,request,to,execute,index,request,break,case,deleted,context,set,request,to,execute,update,result,action,break,case,noop,context,mark,operation,as,no,op,update,result,action,context,mark,as,completed,context,get,execution,result,return,default,throw,new,illegal,state,exception,illegal,update,operation,update,result,get,response,result,else,context,set,request,to,execute,context,get,current,update,result,null,assert,context,get,request,to,execute,null,if,context,get,request,to,execute,op,type,doc,write,request,op,type,delete,execute,delete,request,on,primary,context,mapping,updater,else,execute,index,request,on,primary,context,mapping,updater,if,context,requires,waiting,for,mapping,update,try,wait,for,mapping,update,run,context,reset,for,execution,for,retry,catch,exception,e,context,fail,on,mapping,update,e,return,assert,context,is,operation,executed,if,op,type,doc,write,request,op,type,update,context,get,execution,result,is,failed,is,conflict,exception,context,get,execution,result,get,failure,get,cause,final,update,request,update,request,update,request,context,get,current,if,context,get,retry,counter,update,request,retry,on,conflict,context,reset,for,execution,for,retry,return,finalize,primary,operation,on,completion,context,op,type,update,result
TransportShardBulkAction -> static void executeBulkItemRequest(BulkPrimaryExecutionContext context, UpdateHelper updateHelper, LongSupplier nowInMillisSupplier,                                        MappingUpdatePerformer mappingUpdater, CheckedRunnable<Exception> waitForMappingUpdate)         throws Exception;1545140118;Executes bulk item requests and handles request execution exceptions;static void executeBulkItemRequest(BulkPrimaryExecutionContext context, UpdateHelper updateHelper, LongSupplier nowInMillisSupplier,_                                       MappingUpdatePerformer mappingUpdater, CheckedRunnable<Exception> waitForMappingUpdate)_        throws Exception {_        final DocWriteRequest.OpType opType = context.getCurrent().opType()___        final UpdateHelper.Result updateResult__        if (opType == DocWriteRequest.OpType.UPDATE) {_            final UpdateRequest updateRequest = (UpdateRequest) context.getCurrent()__            try {_                updateResult = updateHelper.prepare(updateRequest, context.getPrimary(), nowInMillisSupplier)__            } catch (Exception failure) {_                _                _                final Engine.Result result = new Engine.IndexResult(failure, updateRequest.version(), SequenceNumbers.UNASSIGNED_SEQ_NO)__                context.setRequestToExecute(updateRequest)__                context.markOperationAsExecuted(result)__                context.markAsCompleted(context.getExecutionResult())__                return__            }_            _            switch (updateResult.getResponseResult()) {_                case CREATED:_                case UPDATED:_                    IndexRequest indexRequest = updateResult.action()__                    IndexMetaData metaData = context.getPrimary().indexSettings().getIndexMetaData()__                    MappingMetaData mappingMd = metaData.mappingOrDefault(indexRequest.type())__                    indexRequest.process(metaData.getCreationVersion(), mappingMd, updateRequest.concreteIndex())__                    context.setRequestToExecute(indexRequest)__                    break__                case DELETED:_                    context.setRequestToExecute(updateResult.action())__                    break__                case NOOP:_                    context.markOperationAsNoOp(updateResult.action())__                    context.markAsCompleted(context.getExecutionResult())__                    return__                default:_                    throw new IllegalStateException("Illegal update operation " + updateResult.getResponseResult())__            }_        } else {_            context.setRequestToExecute(context.getCurrent())__            updateResult = null__        }__        assert context.getRequestToExecute() != null_ __        if (context.getRequestToExecute().opType() == DocWriteRequest.OpType.DELETE) {_            executeDeleteRequestOnPrimary(context, mappingUpdater)__        } else {_            executeIndexRequestOnPrimary(context, mappingUpdater)__        }__        if (context.requiresWaitingForMappingUpdate()) {_            try {_                waitForMappingUpdate.run()__                context.resetForExecutionForRetry()__            } catch (Exception e) {_                context.failOnMappingUpdate(e)__            }_            return__        }__        assert context.isOperationExecuted()___        if (opType == DocWriteRequest.OpType.UPDATE &&_            context.getExecutionResult().isFailed() &&_            isConflictException(context.getExecutionResult().getFailure().getCause())) {_            final UpdateRequest updateRequest = (UpdateRequest) context.getCurrent()__            if (context.getRetryCounter() < updateRequest.retryOnConflict()) {_                context.resetForExecutionForRetry()__                return__            }_        }__        finalizePrimaryOperationOnCompletion(context, opType, updateResult)__    };executes,bulk,item,requests,and,handles,request,execution,exceptions;static,void,execute,bulk,item,request,bulk,primary,execution,context,context,update,helper,update,helper,long,supplier,now,in,millis,supplier,mapping,update,performer,mapping,updater,checked,runnable,exception,wait,for,mapping,update,throws,exception,final,doc,write,request,op,type,op,type,context,get,current,op,type,final,update,helper,result,update,result,if,op,type,doc,write,request,op,type,update,final,update,request,update,request,update,request,context,get,current,try,update,result,update,helper,prepare,update,request,context,get,primary,now,in,millis,supplier,catch,exception,failure,final,engine,result,result,new,engine,index,result,failure,update,request,version,sequence,numbers,context,set,request,to,execute,update,request,context,mark,operation,as,executed,result,context,mark,as,completed,context,get,execution,result,return,switch,update,result,get,response,result,case,created,case,updated,index,request,index,request,update,result,action,index,meta,data,meta,data,context,get,primary,index,settings,get,index,meta,data,mapping,meta,data,mapping,md,meta,data,mapping,or,default,index,request,type,index,request,process,meta,data,get,creation,version,mapping,md,update,request,concrete,index,context,set,request,to,execute,index,request,break,case,deleted,context,set,request,to,execute,update,result,action,break,case,noop,context,mark,operation,as,no,op,update,result,action,context,mark,as,completed,context,get,execution,result,return,default,throw,new,illegal,state,exception,illegal,update,operation,update,result,get,response,result,else,context,set,request,to,execute,context,get,current,update,result,null,assert,context,get,request,to,execute,null,if,context,get,request,to,execute,op,type,doc,write,request,op,type,delete,execute,delete,request,on,primary,context,mapping,updater,else,execute,index,request,on,primary,context,mapping,updater,if,context,requires,waiting,for,mapping,update,try,wait,for,mapping,update,run,context,reset,for,execution,for,retry,catch,exception,e,context,fail,on,mapping,update,e,return,assert,context,is,operation,executed,if,op,type,doc,write,request,op,type,update,context,get,execution,result,is,failed,is,conflict,exception,context,get,execution,result,get,failure,get,cause,final,update,request,update,request,update,request,context,get,current,if,context,get,retry,counter,update,request,retry,on,conflict,context,reset,for,execution,for,retry,return,finalize,primary,operation,on,completion,context,op,type,update,result
TransportShardBulkAction -> static void executeBulkItemRequest(BulkPrimaryExecutionContext context, UpdateHelper updateHelper, LongSupplier nowInMillisSupplier,                                        MappingUpdatePerformer mappingUpdater, CheckedRunnable<Exception> waitForMappingUpdate)         throws Exception;1545678410;Executes bulk item requests and handles request execution exceptions;static void executeBulkItemRequest(BulkPrimaryExecutionContext context, UpdateHelper updateHelper, LongSupplier nowInMillisSupplier,_                                       MappingUpdatePerformer mappingUpdater, CheckedRunnable<Exception> waitForMappingUpdate)_        throws Exception {_        final DocWriteRequest.OpType opType = context.getCurrent().opType()___        final UpdateHelper.Result updateResult__        if (opType == DocWriteRequest.OpType.UPDATE) {_            final UpdateRequest updateRequest = (UpdateRequest) context.getCurrent()__            try {_                updateResult = updateHelper.prepare(updateRequest, context.getPrimary(), nowInMillisSupplier)__            } catch (Exception failure) {_                _                _                final Engine.Result result = new Engine.IndexResult(failure, updateRequest.version(), SequenceNumbers.UNASSIGNED_SEQ_NO)__                context.setRequestToExecute(updateRequest)__                context.markOperationAsExecuted(result)__                context.markAsCompleted(context.getExecutionResult())__                return__            }_            _            switch (updateResult.getResponseResult()) {_                case CREATED:_                case UPDATED:_                    IndexRequest indexRequest = updateResult.action()__                    IndexMetaData metaData = context.getPrimary().indexSettings().getIndexMetaData()__                    MappingMetaData mappingMd = metaData.mappingOrDefault(indexRequest.type())__                    indexRequest.process(metaData.getCreationVersion(), mappingMd, updateRequest.concreteIndex())__                    context.setRequestToExecute(indexRequest)__                    break__                case DELETED:_                    context.setRequestToExecute(updateResult.action())__                    break__                case NOOP:_                    context.markOperationAsNoOp(updateResult.action())__                    context.markAsCompleted(context.getExecutionResult())__                    return__                default:_                    throw new IllegalStateException("Illegal update operation " + updateResult.getResponseResult())__            }_        } else {_            context.setRequestToExecute(context.getCurrent())__            updateResult = null__        }__        assert context.getRequestToExecute() != null_ __        if (context.getRequestToExecute().opType() == DocWriteRequest.OpType.DELETE) {_            executeDeleteRequestOnPrimary(context, mappingUpdater)__        } else {_            executeIndexRequestOnPrimary(context, mappingUpdater)__        }__        if (context.requiresWaitingForMappingUpdate()) {_            try {_                waitForMappingUpdate.run()__                context.resetForExecutionForRetry()__            } catch (Exception e) {_                context.failOnMappingUpdate(e)__            }_            return__        }__        assert context.isOperationExecuted()___        if (opType == DocWriteRequest.OpType.UPDATE &&_            context.getExecutionResult().isFailed() &&_            isConflictException(context.getExecutionResult().getFailure().getCause())) {_            final UpdateRequest updateRequest = (UpdateRequest) context.getCurrent()__            if (context.getRetryCounter() < updateRequest.retryOnConflict()) {_                context.resetForExecutionForRetry()__                return__            }_        }__        finalizePrimaryOperationOnCompletion(context, opType, updateResult)__    };executes,bulk,item,requests,and,handles,request,execution,exceptions;static,void,execute,bulk,item,request,bulk,primary,execution,context,context,update,helper,update,helper,long,supplier,now,in,millis,supplier,mapping,update,performer,mapping,updater,checked,runnable,exception,wait,for,mapping,update,throws,exception,final,doc,write,request,op,type,op,type,context,get,current,op,type,final,update,helper,result,update,result,if,op,type,doc,write,request,op,type,update,final,update,request,update,request,update,request,context,get,current,try,update,result,update,helper,prepare,update,request,context,get,primary,now,in,millis,supplier,catch,exception,failure,final,engine,result,result,new,engine,index,result,failure,update,request,version,sequence,numbers,context,set,request,to,execute,update,request,context,mark,operation,as,executed,result,context,mark,as,completed,context,get,execution,result,return,switch,update,result,get,response,result,case,created,case,updated,index,request,index,request,update,result,action,index,meta,data,meta,data,context,get,primary,index,settings,get,index,meta,data,mapping,meta,data,mapping,md,meta,data,mapping,or,default,index,request,type,index,request,process,meta,data,get,creation,version,mapping,md,update,request,concrete,index,context,set,request,to,execute,index,request,break,case,deleted,context,set,request,to,execute,update,result,action,break,case,noop,context,mark,operation,as,no,op,update,result,action,context,mark,as,completed,context,get,execution,result,return,default,throw,new,illegal,state,exception,illegal,update,operation,update,result,get,response,result,else,context,set,request,to,execute,context,get,current,update,result,null,assert,context,get,request,to,execute,null,if,context,get,request,to,execute,op,type,doc,write,request,op,type,delete,execute,delete,request,on,primary,context,mapping,updater,else,execute,index,request,on,primary,context,mapping,updater,if,context,requires,waiting,for,mapping,update,try,wait,for,mapping,update,run,context,reset,for,execution,for,retry,catch,exception,e,context,fail,on,mapping,update,e,return,assert,context,is,operation,executed,if,op,type,doc,write,request,op,type,update,context,get,execution,result,is,failed,is,conflict,exception,context,get,execution,result,get,failure,get,cause,final,update,request,update,request,update,request,context,get,current,if,context,get,retry,counter,update,request,retry,on,conflict,context,reset,for,execution,for,retry,return,finalize,primary,operation,on,completion,context,op,type,update,result
TransportShardBulkAction -> static void executeBulkItemRequest(BulkPrimaryExecutionContext context, UpdateHelper updateHelper, LongSupplier nowInMillisSupplier,                                        MappingUpdatePerformer mappingUpdater, CheckedRunnable<Exception> waitForMappingUpdate)         throws Exception;1547643669;Executes bulk item requests and handles request execution exceptions;static void executeBulkItemRequest(BulkPrimaryExecutionContext context, UpdateHelper updateHelper, LongSupplier nowInMillisSupplier,_                                       MappingUpdatePerformer mappingUpdater, CheckedRunnable<Exception> waitForMappingUpdate)_        throws Exception {_        final DocWriteRequest.OpType opType = context.getCurrent().opType()___        final UpdateHelper.Result updateResult__        if (opType == DocWriteRequest.OpType.UPDATE) {_            final UpdateRequest updateRequest = (UpdateRequest) context.getCurrent()__            try {_                updateResult = updateHelper.prepare(updateRequest, context.getPrimary(), nowInMillisSupplier)__            } catch (Exception failure) {_                _                _                final Engine.Result result = new Engine.IndexResult(failure, updateRequest.version(), SequenceNumbers.UNASSIGNED_SEQ_NO)__                context.setRequestToExecute(updateRequest)__                context.markOperationAsExecuted(result)__                context.markAsCompleted(context.getExecutionResult())__                return__            }_            _            switch (updateResult.getResponseResult()) {_                case CREATED:_                case UPDATED:_                    IndexRequest indexRequest = updateResult.action()__                    IndexMetaData metaData = context.getPrimary().indexSettings().getIndexMetaData()__                    MappingMetaData mappingMd = metaData.mappingOrDefault()__                    indexRequest.process(metaData.getCreationVersion(), mappingMd, updateRequest.concreteIndex())__                    context.setRequestToExecute(indexRequest)__                    break__                case DELETED:_                    context.setRequestToExecute(updateResult.action())__                    break__                case NOOP:_                    context.markOperationAsNoOp(updateResult.action())__                    context.markAsCompleted(context.getExecutionResult())__                    return__                default:_                    throw new IllegalStateException("Illegal update operation " + updateResult.getResponseResult())__            }_        } else {_            context.setRequestToExecute(context.getCurrent())__            updateResult = null__        }__        assert context.getRequestToExecute() != null_ __        if (context.getRequestToExecute().opType() == DocWriteRequest.OpType.DELETE) {_            executeDeleteRequestOnPrimary(context, mappingUpdater)__        } else {_            executeIndexRequestOnPrimary(context, mappingUpdater)__        }__        if (context.requiresWaitingForMappingUpdate()) {_            try {_                waitForMappingUpdate.run()__                context.resetForExecutionForRetry()__            } catch (Exception e) {_                context.failOnMappingUpdate(e)__            }_            return__        }__        assert context.isOperationExecuted()___        if (opType == DocWriteRequest.OpType.UPDATE &&_            context.getExecutionResult().isFailed() &&_            isConflictException(context.getExecutionResult().getFailure().getCause())) {_            final UpdateRequest updateRequest = (UpdateRequest) context.getCurrent()__            if (context.getRetryCounter() < updateRequest.retryOnConflict()) {_                context.resetForExecutionForRetry()__                return__            }_        }__        finalizePrimaryOperationOnCompletion(context, opType, updateResult)__    };executes,bulk,item,requests,and,handles,request,execution,exceptions;static,void,execute,bulk,item,request,bulk,primary,execution,context,context,update,helper,update,helper,long,supplier,now,in,millis,supplier,mapping,update,performer,mapping,updater,checked,runnable,exception,wait,for,mapping,update,throws,exception,final,doc,write,request,op,type,op,type,context,get,current,op,type,final,update,helper,result,update,result,if,op,type,doc,write,request,op,type,update,final,update,request,update,request,update,request,context,get,current,try,update,result,update,helper,prepare,update,request,context,get,primary,now,in,millis,supplier,catch,exception,failure,final,engine,result,result,new,engine,index,result,failure,update,request,version,sequence,numbers,context,set,request,to,execute,update,request,context,mark,operation,as,executed,result,context,mark,as,completed,context,get,execution,result,return,switch,update,result,get,response,result,case,created,case,updated,index,request,index,request,update,result,action,index,meta,data,meta,data,context,get,primary,index,settings,get,index,meta,data,mapping,meta,data,mapping,md,meta,data,mapping,or,default,index,request,process,meta,data,get,creation,version,mapping,md,update,request,concrete,index,context,set,request,to,execute,index,request,break,case,deleted,context,set,request,to,execute,update,result,action,break,case,noop,context,mark,operation,as,no,op,update,result,action,context,mark,as,completed,context,get,execution,result,return,default,throw,new,illegal,state,exception,illegal,update,operation,update,result,get,response,result,else,context,set,request,to,execute,context,get,current,update,result,null,assert,context,get,request,to,execute,null,if,context,get,request,to,execute,op,type,doc,write,request,op,type,delete,execute,delete,request,on,primary,context,mapping,updater,else,execute,index,request,on,primary,context,mapping,updater,if,context,requires,waiting,for,mapping,update,try,wait,for,mapping,update,run,context,reset,for,execution,for,retry,catch,exception,e,context,fail,on,mapping,update,e,return,assert,context,is,operation,executed,if,op,type,doc,write,request,op,type,update,context,get,execution,result,is,failed,is,conflict,exception,context,get,execution,result,get,failure,get,cause,final,update,request,update,request,update,request,context,get,current,if,context,get,retry,counter,update,request,retry,on,conflict,context,reset,for,execution,for,retry,return,finalize,primary,operation,on,completion,context,op,type,update,result
TransportShardBulkAction -> static void executeBulkItemRequest(BulkPrimaryExecutionContext context, UpdateHelper updateHelper, LongSupplier nowInMillisSupplier,                                        MappingUpdatePerformer mappingUpdater, CheckedRunnable<Exception> waitForMappingUpdate)         throws Exception;1550161840;Executes bulk item requests and handles request execution exceptions;static void executeBulkItemRequest(BulkPrimaryExecutionContext context, UpdateHelper updateHelper, LongSupplier nowInMillisSupplier,_                                       MappingUpdatePerformer mappingUpdater, CheckedRunnable<Exception> waitForMappingUpdate)_        throws Exception {_        final DocWriteRequest.OpType opType = context.getCurrent().opType()___        final UpdateHelper.Result updateResult__        if (opType == DocWriteRequest.OpType.UPDATE) {_            final UpdateRequest updateRequest = (UpdateRequest) context.getCurrent()__            try {_                updateResult = updateHelper.prepare(updateRequest, context.getPrimary(), nowInMillisSupplier)__            } catch (Exception failure) {_                _                _                final Engine.Result result = new Engine.IndexResult(failure, updateRequest.version(), SequenceNumbers.UNASSIGNED_SEQ_NO)__                context.setRequestToExecute(updateRequest)__                context.markOperationAsExecuted(result)__                context.markAsCompleted(context.getExecutionResult())__                return__            }_            _            switch (updateResult.getResponseResult()) {_                case CREATED:_                case UPDATED:_                    IndexRequest indexRequest = updateResult.action()__                    IndexMetaData metaData = context.getPrimary().indexSettings().getIndexMetaData()__                    MappingMetaData mappingMd = metaData.mappingOrDefault()__                    indexRequest.process(metaData.getCreationVersion(), mappingMd, updateRequest.concreteIndex())__                    context.setRequestToExecute(indexRequest)__                    break__                case DELETED:_                    context.setRequestToExecute(updateResult.action())__                    break__                case NOOP:_                    context.markOperationAsNoOp(updateResult.action())__                    context.markAsCompleted(context.getExecutionResult())__                    return__                default:_                    throw new IllegalStateException("Illegal update operation " + updateResult.getResponseResult())__            }_        } else {_            context.setRequestToExecute(context.getCurrent())__            updateResult = null__        }__        assert context.getRequestToExecute() != null_ __        if (context.getRequestToExecute().opType() == DocWriteRequest.OpType.DELETE) {_            executeDeleteRequestOnPrimary(context, mappingUpdater)__        } else {_            executeIndexRequestOnPrimary(context, mappingUpdater)__        }__        if (context.requiresWaitingForMappingUpdate()) {_            try {_                waitForMappingUpdate.run()__                context.resetForExecutionForRetry()__            } catch (Exception e) {_                context.failOnMappingUpdate(e)__            }_            return__        }__        assert context.isOperationExecuted()___        if (opType == DocWriteRequest.OpType.UPDATE &&_            context.getExecutionResult().isFailed() &&_            isConflictException(context.getExecutionResult().getFailure().getCause())) {_            final UpdateRequest updateRequest = (UpdateRequest) context.getCurrent()__            if (context.getRetryCounter() < updateRequest.retryOnConflict()) {_                context.resetForExecutionForRetry()__                return__            }_        }__        finalizePrimaryOperationOnCompletion(context, opType, updateResult)__    };executes,bulk,item,requests,and,handles,request,execution,exceptions;static,void,execute,bulk,item,request,bulk,primary,execution,context,context,update,helper,update,helper,long,supplier,now,in,millis,supplier,mapping,update,performer,mapping,updater,checked,runnable,exception,wait,for,mapping,update,throws,exception,final,doc,write,request,op,type,op,type,context,get,current,op,type,final,update,helper,result,update,result,if,op,type,doc,write,request,op,type,update,final,update,request,update,request,update,request,context,get,current,try,update,result,update,helper,prepare,update,request,context,get,primary,now,in,millis,supplier,catch,exception,failure,final,engine,result,result,new,engine,index,result,failure,update,request,version,sequence,numbers,context,set,request,to,execute,update,request,context,mark,operation,as,executed,result,context,mark,as,completed,context,get,execution,result,return,switch,update,result,get,response,result,case,created,case,updated,index,request,index,request,update,result,action,index,meta,data,meta,data,context,get,primary,index,settings,get,index,meta,data,mapping,meta,data,mapping,md,meta,data,mapping,or,default,index,request,process,meta,data,get,creation,version,mapping,md,update,request,concrete,index,context,set,request,to,execute,index,request,break,case,deleted,context,set,request,to,execute,update,result,action,break,case,noop,context,mark,operation,as,no,op,update,result,action,context,mark,as,completed,context,get,execution,result,return,default,throw,new,illegal,state,exception,illegal,update,operation,update,result,get,response,result,else,context,set,request,to,execute,context,get,current,update,result,null,assert,context,get,request,to,execute,null,if,context,get,request,to,execute,op,type,doc,write,request,op,type,delete,execute,delete,request,on,primary,context,mapping,updater,else,execute,index,request,on,primary,context,mapping,updater,if,context,requires,waiting,for,mapping,update,try,wait,for,mapping,update,run,context,reset,for,execution,for,retry,catch,exception,e,context,fail,on,mapping,update,e,return,assert,context,is,operation,executed,if,op,type,doc,write,request,op,type,update,context,get,execution,result,is,failed,is,conflict,exception,context,get,execution,result,get,failure,get,cause,final,update,request,update,request,update,request,context,get,current,if,context,get,retry,counter,update,request,retry,on,conflict,context,reset,for,execution,for,retry,return,finalize,primary,operation,on,completion,context,op,type,update,result
TransportShardBulkAction -> static void executeBulkItemRequest(BulkPrimaryExecutionContext context, UpdateHelper updateHelper, LongSupplier nowInMillisSupplier,                                        MappingUpdatePerformer mappingUpdater, CheckedRunnable<Exception> waitForMappingUpdate)         throws Exception;1550221827;Executes bulk item requests and handles request execution exceptions;static void executeBulkItemRequest(BulkPrimaryExecutionContext context, UpdateHelper updateHelper, LongSupplier nowInMillisSupplier,_                                       MappingUpdatePerformer mappingUpdater, CheckedRunnable<Exception> waitForMappingUpdate)_        throws Exception {_        final DocWriteRequest.OpType opType = context.getCurrent().opType()___        final UpdateHelper.Result updateResult__        if (opType == DocWriteRequest.OpType.UPDATE) {_            final UpdateRequest updateRequest = (UpdateRequest) context.getCurrent()__            try {_                updateResult = updateHelper.prepare(updateRequest, context.getPrimary(), nowInMillisSupplier)__            } catch (Exception failure) {_                _                _                final Engine.Result result = new Engine.IndexResult(failure, updateRequest.version(), SequenceNumbers.UNASSIGNED_SEQ_NO)__                context.setRequestToExecute(updateRequest)__                context.markOperationAsExecuted(result)__                context.markAsCompleted(context.getExecutionResult())__                return__            }_            _            switch (updateResult.getResponseResult()) {_                case CREATED:_                case UPDATED:_                    IndexRequest indexRequest = updateResult.action()__                    IndexMetaData metaData = context.getPrimary().indexSettings().getIndexMetaData()__                    MappingMetaData mappingMd = metaData.mappingOrDefault()__                    indexRequest.process(metaData.getCreationVersion(), mappingMd, updateRequest.concreteIndex())__                    context.setRequestToExecute(indexRequest)__                    break__                case DELETED:_                    context.setRequestToExecute(updateResult.action())__                    break__                case NOOP:_                    context.markOperationAsNoOp(updateResult.action())__                    context.markAsCompleted(context.getExecutionResult())__                    return__                default:_                    throw new IllegalStateException("Illegal update operation " + updateResult.getResponseResult())__            }_        } else {_            context.setRequestToExecute(context.getCurrent())__            updateResult = null__        }__        assert context.getRequestToExecute() != null_ __        if (context.getRequestToExecute().opType() == DocWriteRequest.OpType.DELETE) {_            executeDeleteRequestOnPrimary(context, mappingUpdater)__        } else {_            executeIndexRequestOnPrimary(context, mappingUpdater)__        }__        if (context.requiresWaitingForMappingUpdate()) {_            try {_                waitForMappingUpdate.run()__                context.resetForExecutionForRetry()__            } catch (Exception e) {_                context.failOnMappingUpdate(e)__            }_            return__        }__        assert context.isOperationExecuted()___        if (opType == DocWriteRequest.OpType.UPDATE &&_            context.getExecutionResult().isFailed() &&_            isConflictException(context.getExecutionResult().getFailure().getCause())) {_            final UpdateRequest updateRequest = (UpdateRequest) context.getCurrent()__            if (context.getRetryCounter() < updateRequest.retryOnConflict()) {_                context.resetForExecutionForRetry()__                return__            }_        }__        finalizePrimaryOperationOnCompletion(context, opType, updateResult)__    };executes,bulk,item,requests,and,handles,request,execution,exceptions;static,void,execute,bulk,item,request,bulk,primary,execution,context,context,update,helper,update,helper,long,supplier,now,in,millis,supplier,mapping,update,performer,mapping,updater,checked,runnable,exception,wait,for,mapping,update,throws,exception,final,doc,write,request,op,type,op,type,context,get,current,op,type,final,update,helper,result,update,result,if,op,type,doc,write,request,op,type,update,final,update,request,update,request,update,request,context,get,current,try,update,result,update,helper,prepare,update,request,context,get,primary,now,in,millis,supplier,catch,exception,failure,final,engine,result,result,new,engine,index,result,failure,update,request,version,sequence,numbers,context,set,request,to,execute,update,request,context,mark,operation,as,executed,result,context,mark,as,completed,context,get,execution,result,return,switch,update,result,get,response,result,case,created,case,updated,index,request,index,request,update,result,action,index,meta,data,meta,data,context,get,primary,index,settings,get,index,meta,data,mapping,meta,data,mapping,md,meta,data,mapping,or,default,index,request,process,meta,data,get,creation,version,mapping,md,update,request,concrete,index,context,set,request,to,execute,index,request,break,case,deleted,context,set,request,to,execute,update,result,action,break,case,noop,context,mark,operation,as,no,op,update,result,action,context,mark,as,completed,context,get,execution,result,return,default,throw,new,illegal,state,exception,illegal,update,operation,update,result,get,response,result,else,context,set,request,to,execute,context,get,current,update,result,null,assert,context,get,request,to,execute,null,if,context,get,request,to,execute,op,type,doc,write,request,op,type,delete,execute,delete,request,on,primary,context,mapping,updater,else,execute,index,request,on,primary,context,mapping,updater,if,context,requires,waiting,for,mapping,update,try,wait,for,mapping,update,run,context,reset,for,execution,for,retry,catch,exception,e,context,fail,on,mapping,update,e,return,assert,context,is,operation,executed,if,op,type,doc,write,request,op,type,update,context,get,execution,result,is,failed,is,conflict,exception,context,get,execution,result,get,failure,get,cause,final,update,request,update,request,update,request,context,get,current,if,context,get,retry,counter,update,request,retry,on,conflict,context,reset,for,execution,for,retry,return,finalize,primary,operation,on,completion,context,op,type,update,result
TransportShardBulkAction -> private static void executeIndexRequestOnPrimary(BulkPrimaryExecutionContext context,                                              MappingUpdatePerformer mappingUpdater) throws Exception;1533921794;Executes index operation on primary shard after updates mapping if dynamic mappings are found;private static void executeIndexRequestOnPrimary(BulkPrimaryExecutionContext context,_                                             MappingUpdatePerformer mappingUpdater) throws Exception {_        final IndexRequest request = context.getRequestToExecute()__        final IndexShard primary = context.getPrimary()__        final SourceToParse sourceToParse =_            SourceToParse.source(request.index(), request.type(), request.id(), request.source(), request.getContentType())_                .routing(request.routing())__        executeOnPrimaryWhileHandlingMappingUpdates(context,_            () ->_                primary.applyIndexOperationOnPrimary(request.version(), request.versionType(), sourceToParse,_                    request.getAutoGeneratedTimestamp(), request.isRetry()),_            e -> primary.getFailedIndexResult(e, request.version()),_            context::markOperationAsExecuted,_            mapping -> mappingUpdater.updateMappings(mapping, primary.shardId(), request.type()))__    };executes,index,operation,on,primary,shard,after,updates,mapping,if,dynamic,mappings,are,found;private,static,void,execute,index,request,on,primary,bulk,primary,execution,context,context,mapping,update,performer,mapping,updater,throws,exception,final,index,request,request,context,get,request,to,execute,final,index,shard,primary,context,get,primary,final,source,to,parse,source,to,parse,source,to,parse,source,request,index,request,type,request,id,request,source,request,get,content,type,routing,request,routing,execute,on,primary,while,handling,mapping,updates,context,primary,apply,index,operation,on,primary,request,version,request,version,type,source,to,parse,request,get,auto,generated,timestamp,request,is,retry,e,primary,get,failed,index,result,e,request,version,context,mark,operation,as,executed,mapping,mapping,updater,update,mappings,mapping,primary,shard,id,request,type
TransportShardBulkAction -> private static void executeIndexRequestOnPrimary(BulkPrimaryExecutionContext context,                                              MappingUpdatePerformer mappingUpdater) throws Exception;1539615817;Executes index operation on primary shard after updates mapping if dynamic mappings are found;private static void executeIndexRequestOnPrimary(BulkPrimaryExecutionContext context,_                                             MappingUpdatePerformer mappingUpdater) throws Exception {_        final IndexRequest request = context.getRequestToExecute()__        final IndexShard primary = context.getPrimary()__        final SourceToParse sourceToParse =_            SourceToParse.source(request.index(), request.type(), request.id(), request.source(), request.getContentType())_                .routing(request.routing())__        executeOnPrimaryWhileHandlingMappingUpdates(context,_            () ->_                primary.applyIndexOperationOnPrimary(request.version(), request.versionType(), sourceToParse,_                    request.getAutoGeneratedTimestamp(), request.isRetry()),_            e -> primary.getFailedIndexResult(e, request.version()),_            context::markOperationAsExecuted,_            mapping -> mappingUpdater.updateMappings(mapping, primary.shardId(), request.type()))__    };executes,index,operation,on,primary,shard,after,updates,mapping,if,dynamic,mappings,are,found;private,static,void,execute,index,request,on,primary,bulk,primary,execution,context,context,mapping,update,performer,mapping,updater,throws,exception,final,index,request,request,context,get,request,to,execute,final,index,shard,primary,context,get,primary,final,source,to,parse,source,to,parse,source,to,parse,source,request,index,request,type,request,id,request,source,request,get,content,type,routing,request,routing,execute,on,primary,while,handling,mapping,updates,context,primary,apply,index,operation,on,primary,request,version,request,version,type,source,to,parse,request,get,auto,generated,timestamp,request,is,retry,e,primary,get,failed,index,result,e,request,version,context,mark,operation,as,executed,mapping,mapping,updater,update,mappings,mapping,primary,shard,id,request,type
TransportShardBulkAction -> private static void executeIndexRequestOnPrimary(BulkPrimaryExecutionContext context,                                              MappingUpdatePerformer mappingUpdater) throws Exception;1541008027;Executes index operation on primary shard after updates mapping if dynamic mappings are found;private static void executeIndexRequestOnPrimary(BulkPrimaryExecutionContext context,_                                             MappingUpdatePerformer mappingUpdater) throws Exception {_        final IndexRequest request = context.getRequestToExecute()__        final IndexShard primary = context.getPrimary()__        final SourceToParse sourceToParse =_            SourceToParse.source(request.index(), request.type(), request.id(), request.source(), request.getContentType())_                .routing(request.routing())__        executeOnPrimaryWhileHandlingMappingUpdates(context,_            () ->_                primary.applyIndexOperationOnPrimary(request.version(), request.versionType(), sourceToParse,_                    request.getAutoGeneratedTimestamp(), request.isRetry()),_            e -> primary.getFailedIndexResult(e, request.version()),_            context::markOperationAsExecuted,_            mapping -> mappingUpdater.updateMappings(mapping, primary.shardId(), request.type()))__    };executes,index,operation,on,primary,shard,after,updates,mapping,if,dynamic,mappings,are,found;private,static,void,execute,index,request,on,primary,bulk,primary,execution,context,context,mapping,update,performer,mapping,updater,throws,exception,final,index,request,request,context,get,request,to,execute,final,index,shard,primary,context,get,primary,final,source,to,parse,source,to,parse,source,to,parse,source,request,index,request,type,request,id,request,source,request,get,content,type,routing,request,routing,execute,on,primary,while,handling,mapping,updates,context,primary,apply,index,operation,on,primary,request,version,request,version,type,source,to,parse,request,get,auto,generated,timestamp,request,is,retry,e,primary,get,failed,index,result,e,request,version,context,mark,operation,as,executed,mapping,mapping,updater,update,mappings,mapping,primary,shard,id,request,type
TransportShardBulkAction -> private static void executeIndexRequestOnPrimary(BulkPrimaryExecutionContext context,                                              MappingUpdatePerformer mappingUpdater) throws Exception;1544893197;Executes index operation on primary shard after updates mapping if dynamic mappings are found;private static void executeIndexRequestOnPrimary(BulkPrimaryExecutionContext context,_                                             MappingUpdatePerformer mappingUpdater) throws Exception {_        final IndexRequest request = context.getRequestToExecute()__        final IndexShard primary = context.getPrimary()__        final SourceToParse sourceToParse =_            SourceToParse.source(request.index(), request.type(), request.id(), request.source(), request.getContentType())_                .routing(request.routing())__        executeOnPrimaryWhileHandlingMappingUpdates(context,_            () ->_                primary.applyIndexOperationOnPrimary(request.version(), request.versionType(), sourceToParse,_                    request.ifSeqNoMatch(), request.ifPrimaryTermMatch(), request.getAutoGeneratedTimestamp(), request.isRetry()),_            e -> primary.getFailedIndexResult(e, request.version()),_            context::markOperationAsExecuted,_            mapping -> mappingUpdater.updateMappings(mapping, primary.shardId(), request.type()))__    };executes,index,operation,on,primary,shard,after,updates,mapping,if,dynamic,mappings,are,found;private,static,void,execute,index,request,on,primary,bulk,primary,execution,context,context,mapping,update,performer,mapping,updater,throws,exception,final,index,request,request,context,get,request,to,execute,final,index,shard,primary,context,get,primary,final,source,to,parse,source,to,parse,source,to,parse,source,request,index,request,type,request,id,request,source,request,get,content,type,routing,request,routing,execute,on,primary,while,handling,mapping,updates,context,primary,apply,index,operation,on,primary,request,version,request,version,type,source,to,parse,request,if,seq,no,match,request,if,primary,term,match,request,get,auto,generated,timestamp,request,is,retry,e,primary,get,failed,index,result,e,request,version,context,mark,operation,as,executed,mapping,mapping,updater,update,mappings,mapping,primary,shard,id,request,type
TransportShardBulkAction -> private static void executeIndexRequestOnPrimary(BulkPrimaryExecutionContext context,                                              MappingUpdatePerformer mappingUpdater) throws Exception;1545056533;Executes index operation on primary shard after updates mapping if dynamic mappings are found;private static void executeIndexRequestOnPrimary(BulkPrimaryExecutionContext context,_                                             MappingUpdatePerformer mappingUpdater) throws Exception {_        final IndexRequest request = context.getRequestToExecute()__        final IndexShard primary = context.getPrimary()__        final SourceToParse sourceToParse =_            SourceToParse.source(request.index(), request.type(), request.id(), request.source(), request.getContentType())_                .routing(request.routing())__        executeOnPrimaryWhileHandlingMappingUpdates(context,_            () ->_                primary.applyIndexOperationOnPrimary(request.version(), request.versionType(), sourceToParse,_                    request.ifSeqNoMatch(), request.ifPrimaryTermMatch(), request.getAutoGeneratedTimestamp(), request.isRetry()),_            e -> primary.getFailedIndexResult(e, request.version()),_            context::markOperationAsExecuted,_            mapping -> mappingUpdater.updateMappings(mapping, primary.shardId(), request.type()))__    };executes,index,operation,on,primary,shard,after,updates,mapping,if,dynamic,mappings,are,found;private,static,void,execute,index,request,on,primary,bulk,primary,execution,context,context,mapping,update,performer,mapping,updater,throws,exception,final,index,request,request,context,get,request,to,execute,final,index,shard,primary,context,get,primary,final,source,to,parse,source,to,parse,source,to,parse,source,request,index,request,type,request,id,request,source,request,get,content,type,routing,request,routing,execute,on,primary,while,handling,mapping,updates,context,primary,apply,index,operation,on,primary,request,version,request,version,type,source,to,parse,request,if,seq,no,match,request,if,primary,term,match,request,get,auto,generated,timestamp,request,is,retry,e,primary,get,failed,index,result,e,request,version,context,mark,operation,as,executed,mapping,mapping,updater,update,mappings,mapping,primary,shard,id,request,type
TransportShardBulkAction -> private static void executeIndexRequestOnPrimary(BulkPrimaryExecutionContext context,                                              MappingUpdatePerformer mappingUpdater) throws Exception;1545140118;Executes index operation on primary shard after updates mapping if dynamic mappings are found;private static void executeIndexRequestOnPrimary(BulkPrimaryExecutionContext context,_                                             MappingUpdatePerformer mappingUpdater) throws Exception {_        final IndexRequest request = context.getRequestToExecute()__        final IndexShard primary = context.getPrimary()__        final SourceToParse sourceToParse =_            SourceToParse.source(request.index(), request.type(), request.id(), request.source(), request.getContentType())_                .routing(request.routing())__        executeOnPrimaryWhileHandlingMappingUpdates(context,_            () ->_                primary.applyIndexOperationOnPrimary(request.version(), request.versionType(), sourceToParse,_                    request.ifSeqNo(), request.ifPrimaryTerm(), request.getAutoGeneratedTimestamp(), request.isRetry()),_            e -> primary.getFailedIndexResult(e, request.version()),_            context::markOperationAsExecuted,_            mapping -> mappingUpdater.updateMappings(mapping, primary.shardId(), request.type()))__    };executes,index,operation,on,primary,shard,after,updates,mapping,if,dynamic,mappings,are,found;private,static,void,execute,index,request,on,primary,bulk,primary,execution,context,context,mapping,update,performer,mapping,updater,throws,exception,final,index,request,request,context,get,request,to,execute,final,index,shard,primary,context,get,primary,final,source,to,parse,source,to,parse,source,to,parse,source,request,index,request,type,request,id,request,source,request,get,content,type,routing,request,routing,execute,on,primary,while,handling,mapping,updates,context,primary,apply,index,operation,on,primary,request,version,request,version,type,source,to,parse,request,if,seq,no,request,if,primary,term,request,get,auto,generated,timestamp,request,is,retry,e,primary,get,failed,index,result,e,request,version,context,mark,operation,as,executed,mapping,mapping,updater,update,mappings,mapping,primary,shard,id,request,type
TransportShardBulkAction -> private static void executeIndexRequestOnPrimary(BulkPrimaryExecutionContext context,                                              MappingUpdatePerformer mappingUpdater) throws Exception;1545678410;Executes index operation on primary shard after updates mapping if dynamic mappings are found;private static void executeIndexRequestOnPrimary(BulkPrimaryExecutionContext context,_                                             MappingUpdatePerformer mappingUpdater) throws Exception {_        final IndexRequest request = context.getRequestToExecute()__        final IndexShard primary = context.getPrimary()__        final SourceToParse sourceToParse =_            new SourceToParse(request.index(), request.type(), request.id(), request.source(), request.getContentType(), request.routing())__        executeOnPrimaryWhileHandlingMappingUpdates(context,_            () ->_                primary.applyIndexOperationOnPrimary(request.version(), request.versionType(), sourceToParse,_                    request.ifSeqNo(), request.ifPrimaryTerm(), request.getAutoGeneratedTimestamp(), request.isRetry()),_            e -> primary.getFailedIndexResult(e, request.version()),_            context::markOperationAsExecuted,_            mapping -> mappingUpdater.updateMappings(mapping, primary.shardId(), request.type()))__    };executes,index,operation,on,primary,shard,after,updates,mapping,if,dynamic,mappings,are,found;private,static,void,execute,index,request,on,primary,bulk,primary,execution,context,context,mapping,update,performer,mapping,updater,throws,exception,final,index,request,request,context,get,request,to,execute,final,index,shard,primary,context,get,primary,final,source,to,parse,source,to,parse,new,source,to,parse,request,index,request,type,request,id,request,source,request,get,content,type,request,routing,execute,on,primary,while,handling,mapping,updates,context,primary,apply,index,operation,on,primary,request,version,request,version,type,source,to,parse,request,if,seq,no,request,if,primary,term,request,get,auto,generated,timestamp,request,is,retry,e,primary,get,failed,index,result,e,request,version,context,mark,operation,as,executed,mapping,mapping,updater,update,mappings,mapping,primary,shard,id,request,type
TransportShardBulkAction -> private static void executeIndexRequestOnPrimary(BulkPrimaryExecutionContext context,                                              MappingUpdatePerformer mappingUpdater) throws Exception;1547643669;Executes index operation on primary shard after updates mapping if dynamic mappings are found;private static void executeIndexRequestOnPrimary(BulkPrimaryExecutionContext context,_                                             MappingUpdatePerformer mappingUpdater) throws Exception {_        final IndexRequest request = context.getRequestToExecute()__        final IndexShard primary = context.getPrimary()__        final SourceToParse sourceToParse =_            new SourceToParse(request.index(), request.type(), request.id(), request.source(), request.getContentType(), request.routing())__        executeOnPrimaryWhileHandlingMappingUpdates(context,_            () ->_                primary.applyIndexOperationOnPrimary(request.version(), request.versionType(), sourceToParse,_                    request.ifSeqNo(), request.ifPrimaryTerm(), request.getAutoGeneratedTimestamp(), request.isRetry()),_            e -> primary.getFailedIndexResult(e, request.version()),_            context::markOperationAsExecuted,_            mapping -> mappingUpdater.updateMappings(mapping, primary.shardId(), request.type()))__    };executes,index,operation,on,primary,shard,after,updates,mapping,if,dynamic,mappings,are,found;private,static,void,execute,index,request,on,primary,bulk,primary,execution,context,context,mapping,update,performer,mapping,updater,throws,exception,final,index,request,request,context,get,request,to,execute,final,index,shard,primary,context,get,primary,final,source,to,parse,source,to,parse,new,source,to,parse,request,index,request,type,request,id,request,source,request,get,content,type,request,routing,execute,on,primary,while,handling,mapping,updates,context,primary,apply,index,operation,on,primary,request,version,request,version,type,source,to,parse,request,if,seq,no,request,if,primary,term,request,get,auto,generated,timestamp,request,is,retry,e,primary,get,failed,index,result,e,request,version,context,mark,operation,as,executed,mapping,mapping,updater,update,mappings,mapping,primary,shard,id,request,type
TransportShardBulkAction -> private static void executeIndexRequestOnPrimary(BulkPrimaryExecutionContext context,                                              MappingUpdatePerformer mappingUpdater) throws Exception;1550161840;Executes index operation on primary shard after updates mapping if dynamic mappings are found;private static void executeIndexRequestOnPrimary(BulkPrimaryExecutionContext context,_                                             MappingUpdatePerformer mappingUpdater) throws Exception {_        final IndexRequest request = context.getRequestToExecute()__        final IndexShard primary = context.getPrimary()__        final SourceToParse sourceToParse =_            new SourceToParse(request.index(), request.type(), request.id(), request.source(), request.getContentType(), request.routing())__        executeOnPrimaryWhileHandlingMappingUpdates(context,_            () ->_                primary.applyIndexOperationOnPrimary(request.version(), request.versionType(), sourceToParse,_                    request.ifSeqNo(), request.ifPrimaryTerm(), request.getAutoGeneratedTimestamp(), request.isRetry()),_            e -> primary.getFailedIndexResult(e, request.version()),_            context::markOperationAsExecuted,_            mapping -> mappingUpdater.updateMappings(mapping, primary.shardId(), request.type()))__    };executes,index,operation,on,primary,shard,after,updates,mapping,if,dynamic,mappings,are,found;private,static,void,execute,index,request,on,primary,bulk,primary,execution,context,context,mapping,update,performer,mapping,updater,throws,exception,final,index,request,request,context,get,request,to,execute,final,index,shard,primary,context,get,primary,final,source,to,parse,source,to,parse,new,source,to,parse,request,index,request,type,request,id,request,source,request,get,content,type,request,routing,execute,on,primary,while,handling,mapping,updates,context,primary,apply,index,operation,on,primary,request,version,request,version,type,source,to,parse,request,if,seq,no,request,if,primary,term,request,get,auto,generated,timestamp,request,is,retry,e,primary,get,failed,index,result,e,request,version,context,mark,operation,as,executed,mapping,mapping,updater,update,mappings,mapping,primary,shard,id,request,type
TransportShardBulkAction -> private static void executeIndexRequestOnPrimary(BulkPrimaryExecutionContext context,                                              MappingUpdatePerformer mappingUpdater) throws Exception;1550221827;Executes index operation on primary shard after updates mapping if dynamic mappings are found;private static void executeIndexRequestOnPrimary(BulkPrimaryExecutionContext context,_                                             MappingUpdatePerformer mappingUpdater) throws Exception {_        final IndexRequest request = context.getRequestToExecute()__        final IndexShard primary = context.getPrimary()__        final SourceToParse sourceToParse =_            new SourceToParse(request.index(), request.type(), request.id(), request.source(), request.getContentType(), request.routing())__        executeOnPrimaryWhileHandlingMappingUpdates(context,_            () ->_                primary.applyIndexOperationOnPrimary(request.version(), request.versionType(), sourceToParse,_                    request.ifSeqNo(), request.ifPrimaryTerm(), request.getAutoGeneratedTimestamp(), request.isRetry()),_            e -> primary.getFailedIndexResult(e, request.version()),_            context::markOperationAsExecuted,_            mapping -> mappingUpdater.updateMappings(mapping, primary.shardId(), request.type()))__    };executes,index,operation,on,primary,shard,after,updates,mapping,if,dynamic,mappings,are,found;private,static,void,execute,index,request,on,primary,bulk,primary,execution,context,context,mapping,update,performer,mapping,updater,throws,exception,final,index,request,request,context,get,request,to,execute,final,index,shard,primary,context,get,primary,final,source,to,parse,source,to,parse,new,source,to,parse,request,index,request,type,request,id,request,source,request,get,content,type,request,routing,execute,on,primary,while,handling,mapping,updates,context,primary,apply,index,operation,on,primary,request,version,request,version,type,source,to,parse,request,if,seq,no,request,if,primary,term,request,get,auto,generated,timestamp,request,is,retry,e,primary,get,failed,index,result,e,request,version,context,mark,operation,as,executed,mapping,mapping,updater,update,mappings,mapping,primary,shard,id,request,type
TransportShardBulkAction -> private static BulkItemResultHolder executeUpdateRequest(UpdateRequest updateRequest, IndexShard primary,                                                              IndexMetaData metaData, BulkShardRequest request,                                                              int requestIndex, UpdateHelper updateHelper,                                                              LongSupplier nowInMillis,                                                              final MappingUpdatePerformer mappingUpdater) throws Exception;1524684173;Executes update request, delegating to a index or delete operation after translation,_handles retries on version conflict and constructs update response_NOOP updates are indicated by returning a <code>null</code> operation_in {@link BulkItemResultHolder};private static BulkItemResultHolder executeUpdateRequest(UpdateRequest updateRequest, IndexShard primary,_                                                             IndexMetaData metaData, BulkShardRequest request,_                                                             int requestIndex, UpdateHelper updateHelper,_                                                             LongSupplier nowInMillis,_                                                             final MappingUpdatePerformer mappingUpdater) throws Exception {_        BulkItemRequest primaryItemRequest = request.items()[requestIndex]__        assert primaryItemRequest.request() == updateRequest_                : "expected bulk item request to contain the original update request, got: " +_                primaryItemRequest.request() + " and " + updateRequest___        BulkItemResultHolder holder = null__        _        int maxAttempts = Math.max(1, updateRequest.retryOnConflict())__        for (int attemptCount = 0_ attemptCount < maxAttempts_ attemptCount++) {__            holder = executeUpdateRequestOnce(updateRequest, primary, metaData, request.index(), updateHelper,_                    nowInMillis, primaryItemRequest, request.items()[requestIndex].id(), mappingUpdater)___            _            if (holder.isVersionConflict() == false) {_                return holder__            }_        }_        _        return holder__    };executes,update,request,delegating,to,a,index,or,delete,operation,after,translation,handles,retries,on,version,conflict,and,constructs,update,response,noop,updates,are,indicated,by,returning,a,code,null,code,operation,in,link,bulk,item,result,holder;private,static,bulk,item,result,holder,execute,update,request,update,request,update,request,index,shard,primary,index,meta,data,meta,data,bulk,shard,request,request,int,request,index,update,helper,update,helper,long,supplier,now,in,millis,final,mapping,update,performer,mapping,updater,throws,exception,bulk,item,request,primary,item,request,request,items,request,index,assert,primary,item,request,request,update,request,expected,bulk,item,request,to,contain,the,original,update,request,got,primary,item,request,request,and,update,request,bulk,item,result,holder,holder,null,int,max,attempts,math,max,1,update,request,retry,on,conflict,for,int,attempt,count,0,attempt,count,max,attempts,attempt,count,holder,execute,update,request,once,update,request,primary,meta,data,request,index,update,helper,now,in,millis,primary,item,request,request,items,request,index,id,mapping,updater,if,holder,is,version,conflict,false,return,holder,return,holder
TransportShardBulkAction -> private static BulkItemResultHolder executeUpdateRequest(UpdateRequest updateRequest, IndexShard primary,                                                              IndexMetaData metaData, BulkShardRequest request,                                                              int requestIndex, UpdateHelper updateHelper,                                                              LongSupplier nowInMillis,                                                              final MappingUpdatePerformer mappingUpdater) throws Exception;1525162917;Executes update request, delegating to a index or delete operation after translation,_handles retries on version conflict and constructs update response_NOOP updates are indicated by returning a <code>null</code> operation_in {@link BulkItemResultHolder};private static BulkItemResultHolder executeUpdateRequest(UpdateRequest updateRequest, IndexShard primary,_                                                             IndexMetaData metaData, BulkShardRequest request,_                                                             int requestIndex, UpdateHelper updateHelper,_                                                             LongSupplier nowInMillis,_                                                             final MappingUpdatePerformer mappingUpdater) throws Exception {_        BulkItemRequest primaryItemRequest = request.items()[requestIndex]__        assert primaryItemRequest.request() == updateRequest_                : "expected bulk item request to contain the original update request, got: " +_                primaryItemRequest.request() + " and " + updateRequest___        BulkItemResultHolder holder = null__        _        int maxAttempts = Math.max(1, updateRequest.retryOnConflict())__        for (int attemptCount = 0_ attemptCount < maxAttempts_ attemptCount++) {__            holder = executeUpdateRequestOnce(updateRequest, primary, metaData, request.index(), updateHelper,_                    nowInMillis, primaryItemRequest, request.items()[requestIndex].id(), mappingUpdater)___            _            if (holder.isVersionConflict() == false) {_                return holder__            }_        }_        _        return holder__    };executes,update,request,delegating,to,a,index,or,delete,operation,after,translation,handles,retries,on,version,conflict,and,constructs,update,response,noop,updates,are,indicated,by,returning,a,code,null,code,operation,in,link,bulk,item,result,holder;private,static,bulk,item,result,holder,execute,update,request,update,request,update,request,index,shard,primary,index,meta,data,meta,data,bulk,shard,request,request,int,request,index,update,helper,update,helper,long,supplier,now,in,millis,final,mapping,update,performer,mapping,updater,throws,exception,bulk,item,request,primary,item,request,request,items,request,index,assert,primary,item,request,request,update,request,expected,bulk,item,request,to,contain,the,original,update,request,got,primary,item,request,request,and,update,request,bulk,item,result,holder,holder,null,int,max,attempts,math,max,1,update,request,retry,on,conflict,for,int,attempt,count,0,attempt,count,max,attempts,attempt,count,holder,execute,update,request,once,update,request,primary,meta,data,request,index,update,helper,now,in,millis,primary,item,request,request,items,request,index,id,mapping,updater,if,holder,is,version,conflict,false,return,holder,return,holder
TransportShardBulkAction -> private static BulkItemResultHolder executeUpdateRequest(UpdateRequest updateRequest, IndexShard primary,                                                              IndexMetaData metaData, BulkShardRequest request,                                                              int requestIndex, UpdateHelper updateHelper,                                                              LongSupplier nowInMillis,                                                              final MappingUpdatePerformer mappingUpdater) throws Exception;1526029249;Executes update request, delegating to a index or delete operation after translation,_handles retries on version conflict and constructs update response_NOOP updates are indicated by returning a <code>null</code> operation_in {@link BulkItemResultHolder};private static BulkItemResultHolder executeUpdateRequest(UpdateRequest updateRequest, IndexShard primary,_                                                             IndexMetaData metaData, BulkShardRequest request,_                                                             int requestIndex, UpdateHelper updateHelper,_                                                             LongSupplier nowInMillis,_                                                             final MappingUpdatePerformer mappingUpdater) throws Exception {_        BulkItemRequest primaryItemRequest = request.items()[requestIndex]__        assert primaryItemRequest.request() == updateRequest_                : "expected bulk item request to contain the original update request, got: " +_                primaryItemRequest.request() + " and " + updateRequest___        BulkItemResultHolder holder = null__        _        int maxAttempts = Math.max(1, updateRequest.retryOnConflict())__        for (int attemptCount = 0_ attemptCount < maxAttempts_ attemptCount++) {__            holder = executeUpdateRequestOnce(updateRequest, primary, metaData, request.index(), updateHelper,_                    nowInMillis, primaryItemRequest, request.items()[requestIndex].id(), mappingUpdater)___            _            if (holder.isVersionConflict() == false) {_                return holder__            }_        }_        _        return holder__    };executes,update,request,delegating,to,a,index,or,delete,operation,after,translation,handles,retries,on,version,conflict,and,constructs,update,response,noop,updates,are,indicated,by,returning,a,code,null,code,operation,in,link,bulk,item,result,holder;private,static,bulk,item,result,holder,execute,update,request,update,request,update,request,index,shard,primary,index,meta,data,meta,data,bulk,shard,request,request,int,request,index,update,helper,update,helper,long,supplier,now,in,millis,final,mapping,update,performer,mapping,updater,throws,exception,bulk,item,request,primary,item,request,request,items,request,index,assert,primary,item,request,request,update,request,expected,bulk,item,request,to,contain,the,original,update,request,got,primary,item,request,request,and,update,request,bulk,item,result,holder,holder,null,int,max,attempts,math,max,1,update,request,retry,on,conflict,for,int,attempt,count,0,attempt,count,max,attempts,attempt,count,holder,execute,update,request,once,update,request,primary,meta,data,request,index,update,helper,now,in,millis,primary,item,request,request,items,request,index,id,mapping,updater,if,holder,is,version,conflict,false,return,holder,return,holder
TransportShardBulkAction -> private static BulkItemResultHolder executeUpdateRequest(UpdateRequest updateRequest, IndexShard primary,                                                              IndexMetaData metaData, BulkShardRequest request,                                                              int requestIndex, UpdateHelper updateHelper,                                                              LongSupplier nowInMillis,                                                              final MappingUpdatePerformer mappingUpdater) throws Exception;1528706846;Executes update request, delegating to a index or delete operation after translation,_handles retries on version conflict and constructs update response_NOOP updates are indicated by returning a <code>null</code> operation_in {@link BulkItemResultHolder};private static BulkItemResultHolder executeUpdateRequest(UpdateRequest updateRequest, IndexShard primary,_                                                             IndexMetaData metaData, BulkShardRequest request,_                                                             int requestIndex, UpdateHelper updateHelper,_                                                             LongSupplier nowInMillis,_                                                             final MappingUpdatePerformer mappingUpdater) throws Exception {_        BulkItemRequest primaryItemRequest = request.items()[requestIndex]__        assert primaryItemRequest.request() == updateRequest_                : "expected bulk item request to contain the original update request, got: " +_                primaryItemRequest.request() + " and " + updateRequest___        BulkItemResultHolder holder = null__        _        int maxAttempts = Math.max(1, updateRequest.retryOnConflict())__        for (int attemptCount = 0_ attemptCount < maxAttempts_ attemptCount++) {__            holder = executeUpdateRequestOnce(updateRequest, primary, metaData, request.index(), updateHelper,_                    nowInMillis, primaryItemRequest, request.items()[requestIndex].id(), mappingUpdater)___            _            if (holder.isVersionConflict() == false) {_                return holder__            }_        }_        _        return holder__    };executes,update,request,delegating,to,a,index,or,delete,operation,after,translation,handles,retries,on,version,conflict,and,constructs,update,response,noop,updates,are,indicated,by,returning,a,code,null,code,operation,in,link,bulk,item,result,holder;private,static,bulk,item,result,holder,execute,update,request,update,request,update,request,index,shard,primary,index,meta,data,meta,data,bulk,shard,request,request,int,request,index,update,helper,update,helper,long,supplier,now,in,millis,final,mapping,update,performer,mapping,updater,throws,exception,bulk,item,request,primary,item,request,request,items,request,index,assert,primary,item,request,request,update,request,expected,bulk,item,request,to,contain,the,original,update,request,got,primary,item,request,request,and,update,request,bulk,item,result,holder,holder,null,int,max,attempts,math,max,1,update,request,retry,on,conflict,for,int,attempt,count,0,attempt,count,max,attempts,attempt,count,holder,execute,update,request,once,update,request,primary,meta,data,request,index,update,helper,now,in,millis,primary,item,request,request,items,request,index,id,mapping,updater,if,holder,is,version,conflict,false,return,holder,return,holder
TransportShardBulkAction -> private static BulkItemResultHolder executeUpdateRequest(UpdateRequest updateRequest, IndexShard primary,                                                              IndexMetaData metaData, BulkShardRequest request,                                                              int requestIndex, UpdateHelper updateHelper,                                                              LongSupplier nowInMillis,                                                              final MappingUpdatePerformer mappingUpdater) throws Exception;1528977744;Executes update request, delegating to a index or delete operation after translation,_handles retries on version conflict and constructs update response_NOOP updates are indicated by returning a <code>null</code> operation_in {@link BulkItemResultHolder};private static BulkItemResultHolder executeUpdateRequest(UpdateRequest updateRequest, IndexShard primary,_                                                             IndexMetaData metaData, BulkShardRequest request,_                                                             int requestIndex, UpdateHelper updateHelper,_                                                             LongSupplier nowInMillis,_                                                             final MappingUpdatePerformer mappingUpdater) throws Exception {_        BulkItemRequest primaryItemRequest = request.items()[requestIndex]__        assert primaryItemRequest.request() == updateRequest_                : "expected bulk item request to contain the original update request, got: " +_                primaryItemRequest.request() + " and " + updateRequest___        BulkItemResultHolder holder = null__        _        int maxAttempts = Math.max(1, updateRequest.retryOnConflict())__        for (int attemptCount = 0_ attemptCount < maxAttempts_ attemptCount++) {__            holder = executeUpdateRequestOnce(updateRequest, primary, metaData, request.index(), updateHelper,_                    nowInMillis, primaryItemRequest, request.items()[requestIndex].id(), mappingUpdater)___            _            if (holder.isVersionConflict() == false) {_                return holder__            }_        }_        _        return holder__    };executes,update,request,delegating,to,a,index,or,delete,operation,after,translation,handles,retries,on,version,conflict,and,constructs,update,response,noop,updates,are,indicated,by,returning,a,code,null,code,operation,in,link,bulk,item,result,holder;private,static,bulk,item,result,holder,execute,update,request,update,request,update,request,index,shard,primary,index,meta,data,meta,data,bulk,shard,request,request,int,request,index,update,helper,update,helper,long,supplier,now,in,millis,final,mapping,update,performer,mapping,updater,throws,exception,bulk,item,request,primary,item,request,request,items,request,index,assert,primary,item,request,request,update,request,expected,bulk,item,request,to,contain,the,original,update,request,got,primary,item,request,request,and,update,request,bulk,item,result,holder,holder,null,int,max,attempts,math,max,1,update,request,retry,on,conflict,for,int,attempt,count,0,attempt,count,max,attempts,attempt,count,holder,execute,update,request,once,update,request,primary,meta,data,request,index,update,helper,now,in,millis,primary,item,request,request,items,request,index,id,mapping,updater,if,holder,is,version,conflict,false,return,holder,return,holder
TransportShardBulkAction -> private static BulkItemResultHolder executeUpdateRequest(UpdateRequest updateRequest, IndexShard primary,                                                              IndexMetaData metaData, BulkShardRequest request,                                                              int requestIndex, UpdateHelper updateHelper,                                                              LongSupplier nowInMillis,                                                              final MappingUpdatePerformer mappingUpdater) throws Exception;1529658035;Executes update request, delegating to a index or delete operation after translation,_handles retries on version conflict and constructs update response_NOOP updates are indicated by returning a <code>null</code> operation_in {@link BulkItemResultHolder};private static BulkItemResultHolder executeUpdateRequest(UpdateRequest updateRequest, IndexShard primary,_                                                             IndexMetaData metaData, BulkShardRequest request,_                                                             int requestIndex, UpdateHelper updateHelper,_                                                             LongSupplier nowInMillis,_                                                             final MappingUpdatePerformer mappingUpdater) throws Exception {_        BulkItemRequest primaryItemRequest = request.items()[requestIndex]__        assert primaryItemRequest.request() == updateRequest_                : "expected bulk item request to contain the original update request, got: " +_                primaryItemRequest.request() + " and " + updateRequest___        BulkItemResultHolder holder = null__        _        int maxAttempts = Math.max(1, updateRequest.retryOnConflict())__        for (int attemptCount = 0_ attemptCount < maxAttempts_ attemptCount++) {__            holder = executeUpdateRequestOnce(updateRequest, primary, metaData, request.index(), updateHelper,_                    nowInMillis, primaryItemRequest, request.items()[requestIndex].id(), mappingUpdater)___            _            if (holder.isVersionConflict() == false) {_                return holder__            }_        }_        _        return holder__    };executes,update,request,delegating,to,a,index,or,delete,operation,after,translation,handles,retries,on,version,conflict,and,constructs,update,response,noop,updates,are,indicated,by,returning,a,code,null,code,operation,in,link,bulk,item,result,holder;private,static,bulk,item,result,holder,execute,update,request,update,request,update,request,index,shard,primary,index,meta,data,meta,data,bulk,shard,request,request,int,request,index,update,helper,update,helper,long,supplier,now,in,millis,final,mapping,update,performer,mapping,updater,throws,exception,bulk,item,request,primary,item,request,request,items,request,index,assert,primary,item,request,request,update,request,expected,bulk,item,request,to,contain,the,original,update,request,got,primary,item,request,request,and,update,request,bulk,item,result,holder,holder,null,int,max,attempts,math,max,1,update,request,retry,on,conflict,for,int,attempt,count,0,attempt,count,max,attempts,attempt,count,holder,execute,update,request,once,update,request,primary,meta,data,request,index,update,helper,now,in,millis,primary,item,request,request,items,request,index,id,mapping,updater,if,holder,is,version,conflict,false,return,holder,return,holder
TransportShardBulkAction -> private static BulkItemResultHolder executeUpdateRequest(UpdateRequest updateRequest, IndexShard primary,                                                              IndexMetaData metaData, BulkShardRequest request,                                                              int requestIndex, UpdateHelper updateHelper,                                                              LongSupplier nowInMillis,                                                              final MappingUpdatePerformer mappingUpdater) throws Exception;1531179852;Executes update request, delegating to a index or delete operation after translation,_handles retries on version conflict and constructs update response_NOOP updates are indicated by returning a <code>null</code> operation_in {@link BulkItemResultHolder};private static BulkItemResultHolder executeUpdateRequest(UpdateRequest updateRequest, IndexShard primary,_                                                             IndexMetaData metaData, BulkShardRequest request,_                                                             int requestIndex, UpdateHelper updateHelper,_                                                             LongSupplier nowInMillis,_                                                             final MappingUpdatePerformer mappingUpdater) throws Exception {_        BulkItemRequest primaryItemRequest = request.items()[requestIndex]__        assert primaryItemRequest.request() == updateRequest_                : "expected bulk item request to contain the original update request, got: " +_                primaryItemRequest.request() + " and " + updateRequest___        BulkItemResultHolder holder = null__        _        int maxAttempts = Math.max(1, updateRequest.retryOnConflict())__        for (int attemptCount = 0_ attemptCount < maxAttempts_ attemptCount++) {__            holder = executeUpdateRequestOnce(updateRequest, primary, metaData, request.index(), updateHelper,_                    nowInMillis, primaryItemRequest, request.items()[requestIndex].id(), mappingUpdater)___            _            if (holder.isVersionConflict() == false) {_                return holder__            }_        }_        _        return holder__    };executes,update,request,delegating,to,a,index,or,delete,operation,after,translation,handles,retries,on,version,conflict,and,constructs,update,response,noop,updates,are,indicated,by,returning,a,code,null,code,operation,in,link,bulk,item,result,holder;private,static,bulk,item,result,holder,execute,update,request,update,request,update,request,index,shard,primary,index,meta,data,meta,data,bulk,shard,request,request,int,request,index,update,helper,update,helper,long,supplier,now,in,millis,final,mapping,update,performer,mapping,updater,throws,exception,bulk,item,request,primary,item,request,request,items,request,index,assert,primary,item,request,request,update,request,expected,bulk,item,request,to,contain,the,original,update,request,got,primary,item,request,request,and,update,request,bulk,item,result,holder,holder,null,int,max,attempts,math,max,1,update,request,retry,on,conflict,for,int,attempt,count,0,attempt,count,max,attempts,attempt,count,holder,execute,update,request,once,update,request,primary,meta,data,request,index,update,helper,now,in,millis,primary,item,request,request,items,request,index,id,mapping,updater,if,holder,is,version,conflict,false,return,holder,return,holder
TransportShardBulkAction -> private static BulkItemResultHolder executeUpdateRequest(UpdateRequest updateRequest, IndexShard primary,                                                              IndexMetaData metaData, BulkShardRequest request,                                                              int requestIndex, UpdateHelper updateHelper,                                                              LongSupplier nowInMillis,                                                              final MappingUpdatePerformer mappingUpdater) throws Exception;1531910483;Executes update request, delegating to a index or delete operation after translation,_handles retries on version conflict and constructs update response_NOOP updates are indicated by returning a <code>null</code> operation_in {@link BulkItemResultHolder};private static BulkItemResultHolder executeUpdateRequest(UpdateRequest updateRequest, IndexShard primary,_                                                             IndexMetaData metaData, BulkShardRequest request,_                                                             int requestIndex, UpdateHelper updateHelper,_                                                             LongSupplier nowInMillis,_                                                             final MappingUpdatePerformer mappingUpdater) throws Exception {_        BulkItemRequest primaryItemRequest = request.items()[requestIndex]__        assert primaryItemRequest.request() == updateRequest_                : "expected bulk item request to contain the original update request, got: " +_                primaryItemRequest.request() + " and " + updateRequest___        BulkItemResultHolder holder = null__        _        int maxAttempts = Math.max(1, updateRequest.retryOnConflict())__        for (int attemptCount = 0_ attemptCount < maxAttempts_ attemptCount++) {__            holder = executeUpdateRequestOnce(updateRequest, primary, metaData, request.index(), updateHelper,_                    nowInMillis, primaryItemRequest, request.items()[requestIndex].id(), mappingUpdater)___            _            if (holder.isVersionConflict() == false) {_                return holder__            }_        }_        _        return holder__    };executes,update,request,delegating,to,a,index,or,delete,operation,after,translation,handles,retries,on,version,conflict,and,constructs,update,response,noop,updates,are,indicated,by,returning,a,code,null,code,operation,in,link,bulk,item,result,holder;private,static,bulk,item,result,holder,execute,update,request,update,request,update,request,index,shard,primary,index,meta,data,meta,data,bulk,shard,request,request,int,request,index,update,helper,update,helper,long,supplier,now,in,millis,final,mapping,update,performer,mapping,updater,throws,exception,bulk,item,request,primary,item,request,request,items,request,index,assert,primary,item,request,request,update,request,expected,bulk,item,request,to,contain,the,original,update,request,got,primary,item,request,request,and,update,request,bulk,item,result,holder,holder,null,int,max,attempts,math,max,1,update,request,retry,on,conflict,for,int,attempt,count,0,attempt,count,max,attempts,attempt,count,holder,execute,update,request,once,update,request,primary,meta,data,request,index,update,helper,now,in,millis,primary,item,request,request,items,request,index,id,mapping,updater,if,holder,is,version,conflict,false,return,holder,return,holder
TransportShardBulkAction -> private static BulkItemResultHolder executeUpdateRequest(UpdateRequest updateRequest, IndexShard primary,                                                              IndexMetaData metaData, BulkShardRequest request,                                                              int requestIndex, UpdateHelper updateHelper,                                                              LongSupplier nowInMillis,                                                              final MappingUpdatePerformer mappingUpdater) throws Exception;1533295538;Executes update request, delegating to a index or delete operation after translation,_handles retries on version conflict and constructs update response_NOOP updates are indicated by returning a <code>null</code> operation_in {@link BulkItemResultHolder};private static BulkItemResultHolder executeUpdateRequest(UpdateRequest updateRequest, IndexShard primary,_                                                             IndexMetaData metaData, BulkShardRequest request,_                                                             int requestIndex, UpdateHelper updateHelper,_                                                             LongSupplier nowInMillis,_                                                             final MappingUpdatePerformer mappingUpdater) throws Exception {_        BulkItemRequest primaryItemRequest = request.items()[requestIndex]__        assert primaryItemRequest.request() == updateRequest_                : "expected bulk item request to contain the original update request, got: " +_                primaryItemRequest.request() + " and " + updateRequest___        BulkItemResultHolder holder = null__        _        int maxAttempts = Math.max(1, updateRequest.retryOnConflict())__        for (int attemptCount = 0_ attemptCount < maxAttempts_ attemptCount++) {__            holder = executeUpdateRequestOnce(updateRequest, primary, metaData, request.index(), updateHelper,_                    nowInMillis, primaryItemRequest, request.items()[requestIndex].id(), mappingUpdater)___            _            if (holder.isVersionConflict() == false) {_                return holder__            }_        }_        _        return holder__    };executes,update,request,delegating,to,a,index,or,delete,operation,after,translation,handles,retries,on,version,conflict,and,constructs,update,response,noop,updates,are,indicated,by,returning,a,code,null,code,operation,in,link,bulk,item,result,holder;private,static,bulk,item,result,holder,execute,update,request,update,request,update,request,index,shard,primary,index,meta,data,meta,data,bulk,shard,request,request,int,request,index,update,helper,update,helper,long,supplier,now,in,millis,final,mapping,update,performer,mapping,updater,throws,exception,bulk,item,request,primary,item,request,request,items,request,index,assert,primary,item,request,request,update,request,expected,bulk,item,request,to,contain,the,original,update,request,got,primary,item,request,request,and,update,request,bulk,item,result,holder,holder,null,int,max,attempts,math,max,1,update,request,retry,on,conflict,for,int,attempt,count,0,attempt,count,max,attempts,attempt,count,holder,execute,update,request,once,update,request,primary,meta,data,request,index,update,helper,now,in,millis,primary,item,request,request,items,request,index,id,mapping,updater,if,holder,is,version,conflict,false,return,holder,return,holder
