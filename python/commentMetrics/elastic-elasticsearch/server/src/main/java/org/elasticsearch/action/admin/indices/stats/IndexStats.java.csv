commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public String getIndex() {     return this.index. }
false;public;0;3;;public String getUuid() {     return uuid. }
false;public;0;3;;public ShardStats[] getShards() {     return this.shards. }
false;public;0;20;;public Map<Integer, IndexShardStats> getIndexShards() {     if (indexShards != null) {         return indexShards.     }     Map<Integer, List<ShardStats>> tmpIndexShards = new HashMap<>().     for (ShardStats shard : shards) {         List<ShardStats> lst = tmpIndexShards.get(shard.getShardRouting().id()).         if (lst == null) {             lst = new ArrayList<>().             tmpIndexShards.put(shard.getShardRouting().id(), lst).         }         lst.add(shard).     }     indexShards = new HashMap<>().     for (Map.Entry<Integer, List<ShardStats>> entry : tmpIndexShards.entrySet()) {         indexShards.put(entry.getKey(), new IndexShardStats(entry.getValue().get(0).getShardRouting().shardId(), entry.getValue().toArray(new ShardStats[entry.getValue().size()]))).     }     return indexShards. }
false;public;0;4;;@Override public Iterator<IndexShardStats> iterator() {     return getIndexShards().values().iterator(). }
false;public;0;11;;public CommonStats getTotal() {     if (total != null) {         return total.     }     CommonStats stats = new CommonStats().     for (ShardStats shard : shards) {         stats.add(shard.getStats()).     }     total = stats.     return stats. }
false;public;0;13;;public CommonStats getPrimaries() {     if (primary != null) {         return primary.     }     CommonStats stats = new CommonStats().     for (ShardStats shard : shards) {         if (shard.getShardRouting().primary()) {             stats.add(shard.getStats()).         }     }     primary = stats.     return stats. }
