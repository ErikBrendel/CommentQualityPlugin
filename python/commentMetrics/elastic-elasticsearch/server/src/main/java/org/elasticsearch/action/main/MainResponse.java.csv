commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public String getNodeName() {     return nodeName. }
false;public;0;3;;public Version getVersion() {     return version. }
false;public;0;3;;public ClusterName getClusterName() {     return clusterName. }
false;public;0;3;;public String getClusterUuid() {     return clusterUuid. }
false;public;0;3;;public Build getBuild() {     return build. }
false;public;1;12;;@Override public void writeTo(StreamOutput out) throws IOException {     super.writeTo(out).     out.writeString(nodeName).     Version.writeVersion(version, out).     clusterName.writeTo(out).     out.writeString(clusterUuid).     Build.writeBuild(build, out).     if (out.getVersion().before(Version.V_7_0_0)) {         out.writeBoolean(true).     } }
false;public;1;12;;@Override public void readFrom(StreamInput in) throws IOException {     super.readFrom(in).     nodeName = in.readString().     version = Version.readVersion(in).     clusterName = new ClusterName(in).     clusterUuid = in.readString().     build = Build.readBuild(in).     if (in.getVersion().before(Version.V_7_0_0)) {         in.readBoolean().     } }
false;public;2;21;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.startObject().     builder.field("name", nodeName).     builder.field("cluster_name", clusterName.value()).     builder.field("cluster_uuid", clusterUuid).     builder.startObject("version").field("number", build.getQualifiedVersion()).field("build_flavor", build.flavor().displayName()).field("build_type", build.type().displayName()).field("build_hash", build.shortHash()).field("build_date", build.date()).field("build_snapshot", build.isSnapshot()).field("lucene_version", version.luceneVersion.toString()).field("minimum_wire_compatibility_version", version.minimumCompatibilityVersion().toString()).field("minimum_index_compatibility_version", version.minimumIndexCompatibilityVersion().toString()).endObject().     builder.field("tagline", "You Know, for Search").     builder.endObject().     return builder. }
false;public,static;1;3;;public static MainResponse fromXContent(XContentParser parser) {     return PARSER.apply(parser, null). }
false;public;1;15;;@Override public boolean equals(Object o) {     if (this == o) {         return true.     }     if (o == null || getClass() != o.getClass()) {         return false.     }     MainResponse other = (MainResponse) o.     return Objects.equals(nodeName, other.nodeName) && Objects.equals(version, other.version) && Objects.equals(clusterUuid, other.clusterUuid) && Objects.equals(build, other.build) && Objects.equals(clusterName, other.clusterName). }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(nodeName, version, clusterUuid, build, clusterName). }
false;public;0;10;;@Override public String toString() {     return "MainResponse{" + "nodeName='" + nodeName + '\'' + ", version=" + version + ", clusterName=" + clusterName + ", clusterUuid='" + clusterUuid + '\'' + ", build=" + build + '}'. }
