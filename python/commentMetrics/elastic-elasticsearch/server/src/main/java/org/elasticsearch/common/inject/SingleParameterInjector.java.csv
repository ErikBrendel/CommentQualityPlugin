commented;modifiers;parameterAmount;loc;comment;code
false;private;2;8;;private T inject(Errors errors, InternalContext context) throws ErrorsException {     context.setDependency(dependency).     try {         return factory.get(errors.withSource(dependency), context, dependency).     } finally {         context.setDependency(null).     } }
true;static;3;24;/**  * Returns an array of parameter values.  */ ;/**  * Returns an array of parameter values.  */ static Object[] getAll(Errors errors, InternalContext context, SingleParameterInjector<?>[] parameterInjectors) throws ErrorsException {     if (parameterInjectors == null) {         return NO_ARGUMENTS.     }     int numErrorsBefore = errors.size().     int size = parameterInjectors.length.     Object[] parameters = new Object[size].     // optimization: use manual for/each to save allocating an iterator here     for (int i = 0. i < size. i++) {         SingleParameterInjector<?> parameterInjector = parameterInjectors[i].         try {             parameters[i] = parameterInjector.inject(errors, context).         } catch (ErrorsException e) {             errors.merge(e.getErrors()).         }     }     errors.throwIfNewErrors(numErrorsBefore).     return parameters. }
