commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public List<Setting<?>> getRegisteredSettings() {     return Arrays.asList(sizeSetting, queueSizeSetting). }
false;;1;7;;@Override FixedExecutorSettings getSettings(Settings settings) {     final String nodeName = Node.NODE_NAME_SETTING.get(settings).     final int size = sizeSetting.get(settings).     final int queueSize = queueSizeSetting.get(settings).     return new FixedExecutorSettings(nodeName, size, queueSize). }
false;;2;11;;@Override ThreadPool.ExecutorHolder build(final FixedExecutorSettings settings, final ThreadContext threadContext) {     int size = settings.size.     int queueSize = settings.queueSize.     final ThreadFactory threadFactory = EsExecutors.daemonThreadFactory(EsExecutors.threadName(settings.nodeName, name())).     final ExecutorService executor = EsExecutors.newFixed(settings.nodeName + "/" + name(), size, queueSize, threadFactory, threadContext).     final ThreadPool.Info info = new ThreadPool.Info(name(), ThreadPool.ThreadPoolType.FIXED, size, size, null, queueSize < 0 ? null : new SizeValue(queueSize)).     return new ThreadPool.ExecutorHolder(executor, info). }
false;;1;9;;@Override String formatInfo(ThreadPool.Info info) {     return String.format(Locale.ROOT, "name [%s], size [%d], queue size [%s]", info.getName(), info.getMax(), info.getQueueSize() == null ? "unbounded" : info.getQueueSize()). }
