commented;modifiers;parameterAmount;loc;comment;code
false;;0;1;;Map<String, Object> getKey().
false;;0;2;;@Override List<? extends CompositeAggregation.Bucket> getBuckets().
true;;0;1;/**  * Returns the last key in this aggregation. It can be used to retrieve the buckets that are after these values.  * See {@link CompositeAggregationBuilder#aggregateAfter}.  */ ;/**  * Returns the last key in this aggregation. It can be used to retrieve the buckets that are after these values.  * See {@link CompositeAggregationBuilder#aggregateAfter}.  */ Map<String, Object> afterKey().
false;static;3;9;;static XContentBuilder bucketToXContent(CompositeAggregation.Bucket bucket, XContentBuilder builder, Params params) throws IOException {     builder.startObject().     buildCompositeMap(CommonFields.KEY.getPreferredName(), bucket.getKey(), builder).     builder.field(CommonFields.DOC_COUNT.getPreferredName(), bucket.getDocCount()).     bucket.getAggregations().toXContentInternal(builder, params).     builder.endObject().     return builder. }
false;static;3;11;;static XContentBuilder toXContentFragment(CompositeAggregation aggregation, XContentBuilder builder, Params params) throws IOException {     if (aggregation.afterKey() != null) {         buildCompositeMap("after_key", aggregation.afterKey(), builder).     }     builder.startArray(CommonFields.BUCKETS.getPreferredName()).     for (CompositeAggregation.Bucket bucket : aggregation.getBuckets()) {         bucketToXContent(bucket, builder, params).     }     builder.endArray().     return builder. }
false;static;3;7;;static void buildCompositeMap(String fieldName, Map<String, Object> composite, XContentBuilder builder) throws IOException {     builder.startObject(fieldName).     for (Map.Entry<String, Object> entry : composite.entrySet()) {         builder.field(entry.getKey(), entry.getValue()).     }     builder.endObject(). }
