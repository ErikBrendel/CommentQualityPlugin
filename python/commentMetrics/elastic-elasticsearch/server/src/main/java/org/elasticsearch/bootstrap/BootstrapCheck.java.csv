commented;modifiers;parameterAmount;loc;comment;code
false;public,static;0;3;;public static BootstrapCheckResult success() {     return SUCCESS. }
false;public,static;1;4;;public static BootstrapCheckResult failure(final String message) {     Objects.requireNonNull(message).     return new BootstrapCheckResult(message). }
false;public;0;3;;public boolean isSuccess() {     return this == SUCCESS. }
false;public;0;3;;public boolean isFailure() {     return !isSuccess(). }
false;public;0;5;;public String getMessage() {     assert isFailure().     assert message != null.     return message. }
true;;1;1;/**  * Test if the node fails the check.  *  * @param context the bootstrap context  * @return the result of the bootstrap check  */ ;/**  * Test if the node fails the check.  *  * @param context the bootstrap context  * @return the result of the bootstrap check  */ BootstrapCheckResult check(BootstrapContext context).
false;default;0;3;;default boolean alwaysEnforce() {     return false. }
