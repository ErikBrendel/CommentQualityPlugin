commented;modifiers;parameterAmount;loc;comment;code
false;;0;3;;double alpha() {     return this.alpha. }
false;protected;1;4;;@Override protected double scoreUnigram(Candidate word) throws IOException {     return (alpha + frequency(word.term)) / (vocabluarySize + alpha * numTerms). }
false;protected;2;5;;@Override protected double scoreBigram(Candidate word, Candidate w_1) throws IOException {     join(separator, spare, w_1.term, word.term).     return (alpha + frequency(spare.get())) / (w_1.termStats.totalTermFreq + alpha * numTerms). }
false;protected;3;7;;@Override protected double scoreTrigram(Candidate word, Candidate w_1, Candidate w_2) throws IOException {     join(separator, spare, w_2.term, w_1.term, word.term).     long trigramCount = frequency(spare.get()).     join(separator, spare, w_1.term, word.term).     return (alpha + trigramCount) / (frequency(spare.get()) + alpha * numTerms). }
