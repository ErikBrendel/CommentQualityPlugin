# id;timestamp;commentText;codeText;commentWords;codeWords
NodeConnectionsService -> public void disconnectFromNodesExcept(DiscoveryNodes nodesToKeep);1524684173;Disconnects from all nodes except the ones provided as parameter;public void disconnectFromNodesExcept(DiscoveryNodes nodesToKeep) {_        Set<DiscoveryNode> currentNodes = new HashSet<>(nodes.keySet())__        for (DiscoveryNode node : nodesToKeep) {_            currentNodes.remove(node)__        }_        for (final DiscoveryNode node : currentNodes) {_            try (Releasable ignored = nodeLocks.acquire(node)) {_                Integer current = nodes.remove(node)__                assert current != null : "node " + node + " was removed in event but not in internal nodes"__                try {_                    transportService.disconnectFromNode(node)__                } catch (Exception e) {_                    logger.warn(() -> new ParameterizedMessage("failed to disconnect to node [{}]", node), e)__                }_            }_        }_    };disconnects,from,all,nodes,except,the,ones,provided,as,parameter;public,void,disconnect,from,nodes,except,discovery,nodes,nodes,to,keep,set,discovery,node,current,nodes,new,hash,set,nodes,key,set,for,discovery,node,node,nodes,to,keep,current,nodes,remove,node,for,final,discovery,node,node,current,nodes,try,releasable,ignored,node,locks,acquire,node,integer,current,nodes,remove,node,assert,current,null,node,node,was,removed,in,event,but,not,in,internal,nodes,try,transport,service,disconnect,from,node,node,catch,exception,e,logger,warn,new,parameterized,message,failed,to,disconnect,to,node,node,e
NodeConnectionsService -> public void disconnectFromNodesExcept(DiscoveryNodes nodesToKeep);1534203100;Disconnects from all nodes except the ones provided as parameter;public void disconnectFromNodesExcept(DiscoveryNodes nodesToKeep) {_        Set<DiscoveryNode> currentNodes = new HashSet<>(nodes.keySet())__        for (DiscoveryNode node : nodesToKeep) {_            currentNodes.remove(node)__        }_        for (final DiscoveryNode node : currentNodes) {_            try (Releasable ignored = nodeLocks.acquire(node)) {_                Integer current = nodes.remove(node)__                assert current != null : "node " + node + " was removed in event but not in internal nodes"__                try {_                    transportService.disconnectFromNode(node)__                } catch (Exception e) {_                    logger.warn(() -> new ParameterizedMessage("failed to disconnect to node [{}]", node), e)__                }_            }_        }_    };disconnects,from,all,nodes,except,the,ones,provided,as,parameter;public,void,disconnect,from,nodes,except,discovery,nodes,nodes,to,keep,set,discovery,node,current,nodes,new,hash,set,nodes,key,set,for,discovery,node,node,nodes,to,keep,current,nodes,remove,node,for,final,discovery,node,node,current,nodes,try,releasable,ignored,node,locks,acquire,node,integer,current,nodes,remove,node,assert,current,null,node,node,was,removed,in,event,but,not,in,internal,nodes,try,transport,service,disconnect,from,node,node,catch,exception,e,logger,warn,new,parameterized,message,failed,to,disconnect,to,node,node,e
NodeConnectionsService -> public void disconnectFromNodesExcept(DiscoveryNodes nodesToKeep);1542646292;Disconnects from all nodes except the ones provided as parameter;public void disconnectFromNodesExcept(DiscoveryNodes nodesToKeep) {_        Set<DiscoveryNode> currentNodes = new HashSet<>(nodes.keySet())__        for (DiscoveryNode node : nodesToKeep) {_            currentNodes.remove(node)__        }_        for (final DiscoveryNode node : currentNodes) {_            try (Releasable ignored = nodeLocks.acquire(node)) {_                Integer current = nodes.remove(node)__                assert current != null : "node " + node + " was removed in event but not in internal nodes"__                try {_                    transportService.disconnectFromNode(node)__                } catch (Exception e) {_                    logger.warn(() -> new ParameterizedMessage("failed to disconnect to node [{}]", node), e)__                }_            }_        }_    };disconnects,from,all,nodes,except,the,ones,provided,as,parameter;public,void,disconnect,from,nodes,except,discovery,nodes,nodes,to,keep,set,discovery,node,current,nodes,new,hash,set,nodes,key,set,for,discovery,node,node,nodes,to,keep,current,nodes,remove,node,for,final,discovery,node,node,current,nodes,try,releasable,ignored,node,locks,acquire,node,integer,current,nodes,remove,node,assert,current,null,node,node,was,removed,in,event,but,not,in,internal,nodes,try,transport,service,disconnect,from,node,node,catch,exception,e,logger,warn,new,parameterized,message,failed,to,disconnect,to,node,node,e
NodeConnectionsService -> public void disconnectFromNodesExcept(DiscoveryNodes nodesToKeep);1547625930;Disconnects from all nodes except the ones provided as parameter;public void disconnectFromNodesExcept(DiscoveryNodes nodesToKeep) {_        Set<DiscoveryNode> currentNodes = new HashSet<>(nodes.keySet())__        for (DiscoveryNode node : nodesToKeep) {_            currentNodes.remove(node)__        }_        for (final DiscoveryNode node : currentNodes) {_            try (Releasable ignored = nodeLocks.acquire(node)) {_                Integer current = nodes.remove(node)__                assert current != null : "node " + node + " was removed in event but not in internal nodes"__                try {_                    transportService.disconnectFromNode(node)__                } catch (Exception e) {_                    logger.warn(() -> new ParameterizedMessage("failed to disconnect to node [{}]", node), e)__                }_            }_        }_    };disconnects,from,all,nodes,except,the,ones,provided,as,parameter;public,void,disconnect,from,nodes,except,discovery,nodes,nodes,to,keep,set,discovery,node,current,nodes,new,hash,set,nodes,key,set,for,discovery,node,node,nodes,to,keep,current,nodes,remove,node,for,final,discovery,node,node,current,nodes,try,releasable,ignored,node,locks,acquire,node,integer,current,nodes,remove,node,assert,current,null,node,node,was,removed,in,event,but,not,in,internal,nodes,try,transport,service,disconnect,from,node,node,catch,exception,e,logger,warn,new,parameterized,message,failed,to,disconnect,to,node,node,e
NodeConnectionsService -> public void disconnectFromNodesExcept(DiscoveryNodes nodesToKeep);1548953505;Disconnects from all nodes except the ones provided as parameter;public void disconnectFromNodesExcept(DiscoveryNodes nodesToKeep) {_        Set<DiscoveryNode> currentNodes = new HashSet<>(nodes.keySet())__        for (DiscoveryNode node : nodesToKeep) {_            currentNodes.remove(node)__        }_        for (final DiscoveryNode node : currentNodes) {_            try (Releasable ignored = nodeLocks.acquire(node)) {_                Integer current = nodes.remove(node)__                assert current != null : "node " + node + " was removed in event but not in internal nodes"__                try {_                    transportService.disconnectFromNode(node)__                } catch (Exception e) {_                    logger.warn(() -> new ParameterizedMessage("failed to disconnect to node [{}]", node), e)__                }_            }_        }_    };disconnects,from,all,nodes,except,the,ones,provided,as,parameter;public,void,disconnect,from,nodes,except,discovery,nodes,nodes,to,keep,set,discovery,node,current,nodes,new,hash,set,nodes,key,set,for,discovery,node,node,nodes,to,keep,current,nodes,remove,node,for,final,discovery,node,node,current,nodes,try,releasable,ignored,node,locks,acquire,node,integer,current,nodes,remove,node,assert,current,null,node,node,was,removed,in,event,but,not,in,internal,nodes,try,transport,service,disconnect,from,node,node,catch,exception,e,logger,warn,new,parameterized,message,failed,to,disconnect,to,node,node,e
