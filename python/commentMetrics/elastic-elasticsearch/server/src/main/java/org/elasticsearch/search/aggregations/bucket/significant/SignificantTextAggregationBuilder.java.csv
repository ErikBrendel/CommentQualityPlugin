# id;timestamp;commentText;codeText;commentWords;codeWords
SignificantTextAggregationBuilder -> public SignificantTextAggregationBuilder includeExclude(IncludeExclude includeExclude);1524684173;Set terms to include and exclude from the aggregation results;public SignificantTextAggregationBuilder includeExclude(IncludeExclude includeExclude) {_        this.includeExclude = includeExclude__        return this__    };set,terms,to,include,and,exclude,from,the,aggregation,results;public,significant,text,aggregation,builder,include,exclude,include,exclude,include,exclude,this,include,exclude,include,exclude,return,this
SignificantTextAggregationBuilder -> public SignificantTextAggregationBuilder includeExclude(IncludeExclude includeExclude);1528762805;Set terms to include and exclude from the aggregation results;public SignificantTextAggregationBuilder includeExclude(IncludeExclude includeExclude) {_        this.includeExclude = includeExclude__        return this__    };set,terms,to,include,and,exclude,from,the,aggregation,results;public,significant,text,aggregation,builder,include,exclude,include,exclude,include,exclude,this,include,exclude,include,exclude,return,this
SignificantTextAggregationBuilder -> public SignificantTextAggregationBuilder includeExclude(IncludeExclude includeExclude);1531937412;Set terms to include and exclude from the aggregation results;public SignificantTextAggregationBuilder includeExclude(IncludeExclude includeExclude) {_        this.includeExclude = includeExclude__        return this__    };set,terms,to,include,and,exclude,from,the,aggregation,results;public,significant,text,aggregation,builder,include,exclude,include,exclude,include,exclude,this,include,exclude,include,exclude,return,this
SignificantTextAggregationBuilder -> public SignificantTextAggregationBuilder minDocCount(long minDocCount);1524684173;Set the minimum document count terms should have in order to appear in_the response.;public SignificantTextAggregationBuilder minDocCount(long minDocCount) {_        if (minDocCount < 0) {_            throw new IllegalArgumentException(_                    "[minDocCount] must be greater than or equal to 0. Found [" + minDocCount_                            + "] in [" + name + "]")__        }_        bucketCountThresholds.setMinDocCount(minDocCount)__        return this__    };set,the,minimum,document,count,terms,should,have,in,order,to,appear,in,the,response;public,significant,text,aggregation,builder,min,doc,count,long,min,doc,count,if,min,doc,count,0,throw,new,illegal,argument,exception,min,doc,count,must,be,greater,than,or,equal,to,0,found,min,doc,count,in,name,bucket,count,thresholds,set,min,doc,count,min,doc,count,return,this
SignificantTextAggregationBuilder -> public SignificantTextAggregationBuilder minDocCount(long minDocCount);1528762805;Set the minimum document count terms should have in order to appear in_the response.;public SignificantTextAggregationBuilder minDocCount(long minDocCount) {_        if (minDocCount < 0) {_            throw new IllegalArgumentException(_                    "[minDocCount] must be greater than or equal to 0. Found [" + minDocCount_                            + "] in [" + name + "]")__        }_        bucketCountThresholds.setMinDocCount(minDocCount)__        return this__    };set,the,minimum,document,count,terms,should,have,in,order,to,appear,in,the,response;public,significant,text,aggregation,builder,min,doc,count,long,min,doc,count,if,min,doc,count,0,throw,new,illegal,argument,exception,min,doc,count,must,be,greater,than,or,equal,to,0,found,min,doc,count,in,name,bucket,count,thresholds,set,min,doc,count,min,doc,count,return,this
SignificantTextAggregationBuilder -> public SignificantTextAggregationBuilder minDocCount(long minDocCount);1531937412;Set the minimum document count terms should have in order to appear in_the response.;public SignificantTextAggregationBuilder minDocCount(long minDocCount) {_        if (minDocCount < 0) {_            throw new IllegalArgumentException(_                    "[minDocCount] must be greater than or equal to 0. Found [" + minDocCount_                            + "] in [" + name + "]")__        }_        bucketCountThresholds.setMinDocCount(minDocCount)__        return this__    };set,the,minimum,document,count,terms,should,have,in,order,to,appear,in,the,response;public,significant,text,aggregation,builder,min,doc,count,long,min,doc,count,if,min,doc,count,0,throw,new,illegal,argument,exception,min,doc,count,must,be,greater,than,or,equal,to,0,found,min,doc,count,in,name,bucket,count,thresholds,set,min,doc,count,min,doc,count,return,this
SignificantTextAggregationBuilder -> public IncludeExclude includeExclude();1524684173;Get terms to include and exclude from the aggregation results;public IncludeExclude includeExclude() {_        return includeExclude__    };get,terms,to,include,and,exclude,from,the,aggregation,results;public,include,exclude,include,exclude,return,include,exclude
SignificantTextAggregationBuilder -> public IncludeExclude includeExclude();1528762805;Get terms to include and exclude from the aggregation results;public IncludeExclude includeExclude() {_        return includeExclude__    };get,terms,to,include,and,exclude,from,the,aggregation,results;public,include,exclude,include,exclude,return,include,exclude
SignificantTextAggregationBuilder -> public IncludeExclude includeExclude();1531937412;Get terms to include and exclude from the aggregation results;public IncludeExclude includeExclude() {_        return includeExclude__    };get,terms,to,include,and,exclude,from,the,aggregation,results;public,include,exclude,include,exclude,return,include,exclude
SignificantTextAggregationBuilder -> public SignificantTextAggregationBuilder(String name, String fieldName);1524684173;@param name_the name of this aggregation_@param fieldName_the name of the text field that will be the subject of this_aggregation;public SignificantTextAggregationBuilder(String name, String fieldName) {_        super(name)__        this.fieldName = fieldName__    };param,name,the,name,of,this,aggregation,param,field,name,the,name,of,the,text,field,that,will,be,the,subject,of,this,aggregation;public,significant,text,aggregation,builder,string,name,string,field,name,super,name,this,field,name,field,name
SignificantTextAggregationBuilder -> public SignificantTextAggregationBuilder(String name, String fieldName);1528762805;@param name_the name of this aggregation_@param fieldName_the name of the text field that will be the subject of this_aggregation;public SignificantTextAggregationBuilder(String name, String fieldName) {_        super(name)__        this.fieldName = fieldName__    };param,name,the,name,of,this,aggregation,param,field,name,the,name,of,the,text,field,that,will,be,the,subject,of,this,aggregation;public,significant,text,aggregation,builder,string,name,string,field,name,super,name,this,field,name,field,name
SignificantTextAggregationBuilder -> public SignificantTextAggregationBuilder(String name, String fieldName);1531937412;@param name_the name of this aggregation_@param fieldName_the name of the text field that will be the subject of this_aggregation;public SignificantTextAggregationBuilder(String name, String fieldName) {_        super(name)__        this.fieldName = fieldName__    };param,name,the,name,of,this,aggregation,param,field,name,the,name,of,the,text,field,that,will,be,the,subject,of,this,aggregation;public,significant,text,aggregation,builder,string,name,string,field,name,super,name,this,field,name,field,name
SignificantTextAggregationBuilder -> public SignificantTextAggregationBuilder(StreamInput in) throws IOException;1524684173;Read from a stream.;public SignificantTextAggregationBuilder(StreamInput in) throws IOException {_        super(in)__        fieldName = in.readString()__        filterDuplicateText = in.readBoolean()__        bucketCountThresholds = new BucketCountThresholds(in)__        filterBuilder = in.readOptionalNamedWriteable(QueryBuilder.class)__        includeExclude = in.readOptionalWriteable(IncludeExclude::new)__        significanceHeuristic = in.readNamedWriteable(SignificanceHeuristic.class)__        sourceFieldNames = in.readOptionalStringArray()__    };read,from,a,stream;public,significant,text,aggregation,builder,stream,input,in,throws,ioexception,super,in,field,name,in,read,string,filter,duplicate,text,in,read,boolean,bucket,count,thresholds,new,bucket,count,thresholds,in,filter,builder,in,read,optional,named,writeable,query,builder,class,include,exclude,in,read,optional,writeable,include,exclude,new,significance,heuristic,in,read,named,writeable,significance,heuristic,class,source,field,names,in,read,optional,string,array
SignificantTextAggregationBuilder -> public SignificantTextAggregationBuilder(StreamInput in) throws IOException;1528762805;Read from a stream.;public SignificantTextAggregationBuilder(StreamInput in) throws IOException {_        super(in)__        fieldName = in.readString()__        filterDuplicateText = in.readBoolean()__        bucketCountThresholds = new BucketCountThresholds(in)__        filterBuilder = in.readOptionalNamedWriteable(QueryBuilder.class)__        includeExclude = in.readOptionalWriteable(IncludeExclude::new)__        significanceHeuristic = in.readNamedWriteable(SignificanceHeuristic.class)__        sourceFieldNames = in.readOptionalStringArray()__    };read,from,a,stream;public,significant,text,aggregation,builder,stream,input,in,throws,ioexception,super,in,field,name,in,read,string,filter,duplicate,text,in,read,boolean,bucket,count,thresholds,new,bucket,count,thresholds,in,filter,builder,in,read,optional,named,writeable,query,builder,class,include,exclude,in,read,optional,writeable,include,exclude,new,significance,heuristic,in,read,named,writeable,significance,heuristic,class,source,field,names,in,read,optional,string,array
SignificantTextAggregationBuilder -> public SignificantTextAggregationBuilder(StreamInput in) throws IOException;1531937412;Read from a stream.;public SignificantTextAggregationBuilder(StreamInput in) throws IOException {_        super(in)__        fieldName = in.readString()__        filterDuplicateText = in.readBoolean()__        bucketCountThresholds = new BucketCountThresholds(in)__        filterBuilder = in.readOptionalNamedWriteable(QueryBuilder.class)__        includeExclude = in.readOptionalWriteable(IncludeExclude::new)__        significanceHeuristic = in.readNamedWriteable(SignificanceHeuristic.class)__        sourceFieldNames = in.readOptionalStringArray()__    };read,from,a,stream;public,significant,text,aggregation,builder,stream,input,in,throws,ioexception,super,in,field,name,in,read,string,filter,duplicate,text,in,read,boolean,bucket,count,thresholds,new,bucket,count,thresholds,in,filter,builder,in,read,optional,named,writeable,query,builder,class,include,exclude,in,read,optional,writeable,include,exclude,new,significance,heuristic,in,read,named,writeable,significance,heuristic,class,source,field,names,in,read,optional,string,array
SignificantTextAggregationBuilder -> public SignificantTextAggregationBuilder shardSize(int shardSize);1524684173;Sets the shard_size - indicating the number of term buckets each shard_will return to the coordinating node (the node that coordinates the_search execution). The higher the shard size is, the more accurate the_results are.;public SignificantTextAggregationBuilder shardSize(int shardSize) {_        if (shardSize <= 0) {_            throw new IllegalArgumentException("[shardSize] must be greater than  0. Found ["_                    + shardSize + "] in [" + name + "]")__        }_        bucketCountThresholds.setShardSize(shardSize)__        return this__    };sets,the,indicating,the,number,of,term,buckets,each,shard,will,return,to,the,coordinating,node,the,node,that,coordinates,the,search,execution,the,higher,the,shard,size,is,the,more,accurate,the,results,are;public,significant,text,aggregation,builder,shard,size,int,shard,size,if,shard,size,0,throw,new,illegal,argument,exception,shard,size,must,be,greater,than,0,found,shard,size,in,name,bucket,count,thresholds,set,shard,size,shard,size,return,this
SignificantTextAggregationBuilder -> public SignificantTextAggregationBuilder shardSize(int shardSize);1528762805;Sets the shard_size - indicating the number of term buckets each shard_will return to the coordinating node (the node that coordinates the_search execution). The higher the shard size is, the more accurate the_results are.;public SignificantTextAggregationBuilder shardSize(int shardSize) {_        if (shardSize <= 0) {_            throw new IllegalArgumentException("[shardSize] must be greater than  0. Found ["_                    + shardSize + "] in [" + name + "]")__        }_        bucketCountThresholds.setShardSize(shardSize)__        return this__    };sets,the,indicating,the,number,of,term,buckets,each,shard,will,return,to,the,coordinating,node,the,node,that,coordinates,the,search,execution,the,higher,the,shard,size,is,the,more,accurate,the,results,are;public,significant,text,aggregation,builder,shard,size,int,shard,size,if,shard,size,0,throw,new,illegal,argument,exception,shard,size,must,be,greater,than,0,found,shard,size,in,name,bucket,count,thresholds,set,shard,size,shard,size,return,this
SignificantTextAggregationBuilder -> public SignificantTextAggregationBuilder shardSize(int shardSize);1531937412;Sets the shard_size - indicating the number of term buckets each shard_will return to the coordinating node (the node that coordinates the_search execution). The higher the shard size is, the more accurate the_results are.;public SignificantTextAggregationBuilder shardSize(int shardSize) {_        if (shardSize <= 0) {_            throw new IllegalArgumentException("[shardSize] must be greater than  0. Found ["_                    + shardSize + "] in [" + name + "]")__        }_        bucketCountThresholds.setShardSize(shardSize)__        return this__    };sets,the,indicating,the,number,of,term,buckets,each,shard,will,return,to,the,coordinating,node,the,node,that,coordinates,the,search,execution,the,higher,the,shard,size,is,the,more,accurate,the,results,are;public,significant,text,aggregation,builder,shard,size,int,shard,size,if,shard,size,0,throw,new,illegal,argument,exception,shard,size,must,be,greater,than,0,found,shard,size,in,name,bucket,count,thresholds,set,shard,size,shard,size,return,this
SignificantTextAggregationBuilder -> public SignificantTextAggregationBuilder size(int size);1524684173;Sets the size - indicating how many term buckets should be returned_(defaults to 10);public SignificantTextAggregationBuilder size(int size) {_        if (size <= 0) {_            throw new IllegalArgumentException(_                    "[size] must be greater than 0. Found [" + size + "] in [" + name + "]")__        }_        bucketCountThresholds.setRequiredSize(size)__        return this__    };sets,the,size,indicating,how,many,term,buckets,should,be,returned,defaults,to,10;public,significant,text,aggregation,builder,size,int,size,if,size,0,throw,new,illegal,argument,exception,size,must,be,greater,than,0,found,size,in,name,bucket,count,thresholds,set,required,size,size,return,this
SignificantTextAggregationBuilder -> public SignificantTextAggregationBuilder size(int size);1528762805;Sets the size - indicating how many term buckets should be returned_(defaults to 10);public SignificantTextAggregationBuilder size(int size) {_        if (size <= 0) {_            throw new IllegalArgumentException(_                    "[size] must be greater than 0. Found [" + size + "] in [" + name + "]")__        }_        bucketCountThresholds.setRequiredSize(size)__        return this__    };sets,the,size,indicating,how,many,term,buckets,should,be,returned,defaults,to,10;public,significant,text,aggregation,builder,size,int,size,if,size,0,throw,new,illegal,argument,exception,size,must,be,greater,than,0,found,size,in,name,bucket,count,thresholds,set,required,size,size,return,this
SignificantTextAggregationBuilder -> public SignificantTextAggregationBuilder size(int size);1531937412;Sets the size - indicating how many term buckets should be returned_(defaults to 10);public SignificantTextAggregationBuilder size(int size) {_        if (size <= 0) {_            throw new IllegalArgumentException(_                    "[size] must be greater than 0. Found [" + size + "] in [" + name + "]")__        }_        bucketCountThresholds.setRequiredSize(size)__        return this__    };sets,the,size,indicating,how,many,term,buckets,should,be,returned,defaults,to,10;public,significant,text,aggregation,builder,size,int,size,if,size,0,throw,new,illegal,argument,exception,size,must,be,greater,than,0,found,size,in,name,bucket,count,thresholds,set,required,size,size,return,this
SignificantTextAggregationBuilder -> public SignificantTextAggregationBuilder shardMinDocCount(long shardMinDocCount);1524684173;Set the minimum document count terms should have on the shard in order to_appear in the response.;public SignificantTextAggregationBuilder shardMinDocCount(long shardMinDocCount) {_        if (shardMinDocCount < 0) {_            throw new IllegalArgumentException(_                    "[shardMinDocCount] must be greater than or equal to 0. Found ["_                            + shardMinDocCount + "] in [" + name + "]")__        }_        bucketCountThresholds.setShardMinDocCount(shardMinDocCount)__        return this__    };set,the,minimum,document,count,terms,should,have,on,the,shard,in,order,to,appear,in,the,response;public,significant,text,aggregation,builder,shard,min,doc,count,long,shard,min,doc,count,if,shard,min,doc,count,0,throw,new,illegal,argument,exception,shard,min,doc,count,must,be,greater,than,or,equal,to,0,found,shard,min,doc,count,in,name,bucket,count,thresholds,set,shard,min,doc,count,shard,min,doc,count,return,this
SignificantTextAggregationBuilder -> public SignificantTextAggregationBuilder shardMinDocCount(long shardMinDocCount);1528762805;Set the minimum document count terms should have on the shard in order to_appear in the response.;public SignificantTextAggregationBuilder shardMinDocCount(long shardMinDocCount) {_        if (shardMinDocCount < 0) {_            throw new IllegalArgumentException(_                    "[shardMinDocCount] must be greater than or equal to 0. Found ["_                            + shardMinDocCount + "] in [" + name + "]")__        }_        bucketCountThresholds.setShardMinDocCount(shardMinDocCount)__        return this__    };set,the,minimum,document,count,terms,should,have,on,the,shard,in,order,to,appear,in,the,response;public,significant,text,aggregation,builder,shard,min,doc,count,long,shard,min,doc,count,if,shard,min,doc,count,0,throw,new,illegal,argument,exception,shard,min,doc,count,must,be,greater,than,or,equal,to,0,found,shard,min,doc,count,in,name,bucket,count,thresholds,set,shard,min,doc,count,shard,min,doc,count,return,this
SignificantTextAggregationBuilder -> public SignificantTextAggregationBuilder shardMinDocCount(long shardMinDocCount);1531937412;Set the minimum document count terms should have on the shard in order to_appear in the response.;public SignificantTextAggregationBuilder shardMinDocCount(long shardMinDocCount) {_        if (shardMinDocCount < 0) {_            throw new IllegalArgumentException(_                    "[shardMinDocCount] must be greater than or equal to 0. Found ["_                            + shardMinDocCount + "] in [" + name + "]")__        }_        bucketCountThresholds.setShardMinDocCount(shardMinDocCount)__        return this__    };set,the,minimum,document,count,terms,should,have,on,the,shard,in,order,to,appear,in,the,response;public,significant,text,aggregation,builder,shard,min,doc,count,long,shard,min,doc,count,if,shard,min,doc,count,0,throw,new,illegal,argument,exception,shard,min,doc,count,must,be,greater,than,or,equal,to,0,found,shard,min,doc,count,in,name,bucket,count,thresholds,set,shard,min,doc,count,shard,min,doc,count,return,this
SignificantTextAggregationBuilder -> public SignificantTextAggregationBuilder fieldName(String fieldName);1524684173;Sets the name of the text field that will be the subject of this_aggregation.;public SignificantTextAggregationBuilder fieldName(String fieldName) {_        this.fieldName = fieldName__        return this__    };sets,the,name,of,the,text,field,that,will,be,the,subject,of,this,aggregation;public,significant,text,aggregation,builder,field,name,string,field,name,this,field,name,field,name,return,this
SignificantTextAggregationBuilder -> public SignificantTextAggregationBuilder fieldName(String fieldName);1528762805;Sets the name of the text field that will be the subject of this_aggregation.;public SignificantTextAggregationBuilder fieldName(String fieldName) {_        this.fieldName = fieldName__        return this__    };sets,the,name,of,the,text,field,that,will,be,the,subject,of,this,aggregation;public,significant,text,aggregation,builder,field,name,string,field,name,this,field,name,field,name,return,this
SignificantTextAggregationBuilder -> public SignificantTextAggregationBuilder fieldName(String fieldName);1531937412;Sets the name of the text field that will be the subject of this_aggregation.;public SignificantTextAggregationBuilder fieldName(String fieldName) {_        this.fieldName = fieldName__        return this__    };sets,the,name,of,the,text,field,that,will,be,the,subject,of,this,aggregation;public,significant,text,aggregation,builder,field,name,string,field,name,this,field,name,field,name,return,this
SignificantTextAggregationBuilder -> public SignificantTextAggregationBuilder sourceFieldNames(List<String> names);1524684173;Selects the fields to load from _source JSON and analyze._If none are specified, the indexed "fieldName" value is assumed_to also be the name of the JSON field holding the value;public SignificantTextAggregationBuilder sourceFieldNames(List<String> names) {_        this.sourceFieldNames = names.toArray(new String [names.size()])__        return this__    };selects,the,fields,to,load,from,json,and,analyze,if,none,are,specified,the,indexed,field,name,value,is,assumed,to,also,be,the,name,of,the,json,field,holding,the,value;public,significant,text,aggregation,builder,source,field,names,list,string,names,this,source,field,names,names,to,array,new,string,names,size,return,this
SignificantTextAggregationBuilder -> public SignificantTextAggregationBuilder sourceFieldNames(List<String> names);1528762805;Selects the fields to load from _source JSON and analyze._If none are specified, the indexed "fieldName" value is assumed_to also be the name of the JSON field holding the value;public SignificantTextAggregationBuilder sourceFieldNames(List<String> names) {_        this.sourceFieldNames = names.toArray(new String [names.size()])__        return this__    };selects,the,fields,to,load,from,json,and,analyze,if,none,are,specified,the,indexed,field,name,value,is,assumed,to,also,be,the,name,of,the,json,field,holding,the,value;public,significant,text,aggregation,builder,source,field,names,list,string,names,this,source,field,names,names,to,array,new,string,names,size,return,this
SignificantTextAggregationBuilder -> public SignificantTextAggregationBuilder sourceFieldNames(List<String> names);1531937412;Selects the fields to load from _source JSON and analyze._If none are specified, the indexed "fieldName" value is assumed_to also be the name of the JSON field holding the value;public SignificantTextAggregationBuilder sourceFieldNames(List<String> names) {_        this.sourceFieldNames = names.toArray(new String [names.size()])__        return this__    };selects,the,fields,to,load,from,json,and,analyze,if,none,are,specified,the,indexed,field,name,value,is,assumed,to,also,be,the,name,of,the,json,field,holding,the,value;public,significant,text,aggregation,builder,source,field,names,list,string,names,this,source,field,names,names,to,array,new,string,names,size,return,this
SignificantTextAggregationBuilder -> public SignificantTextAggregationBuilder filterDuplicateText(boolean filterDuplicateText);1524684173;Control if duplicate paragraphs of text should try be filtered from the_statistical text analysis. Can improve results but slows down analysis._Default is false.;public SignificantTextAggregationBuilder filterDuplicateText(boolean filterDuplicateText) {_        this.filterDuplicateText = filterDuplicateText__        return this__    };control,if,duplicate,paragraphs,of,text,should,try,be,filtered,from,the,statistical,text,analysis,can,improve,results,but,slows,down,analysis,default,is,false;public,significant,text,aggregation,builder,filter,duplicate,text,boolean,filter,duplicate,text,this,filter,duplicate,text,filter,duplicate,text,return,this
SignificantTextAggregationBuilder -> public SignificantTextAggregationBuilder filterDuplicateText(boolean filterDuplicateText);1528762805;Control if duplicate paragraphs of text should try be filtered from the_statistical text analysis. Can improve results but slows down analysis._Default is false.;public SignificantTextAggregationBuilder filterDuplicateText(boolean filterDuplicateText) {_        this.filterDuplicateText = filterDuplicateText__        return this__    };control,if,duplicate,paragraphs,of,text,should,try,be,filtered,from,the,statistical,text,analysis,can,improve,results,but,slows,down,analysis,default,is,false;public,significant,text,aggregation,builder,filter,duplicate,text,boolean,filter,duplicate,text,this,filter,duplicate,text,filter,duplicate,text,return,this
SignificantTextAggregationBuilder -> public SignificantTextAggregationBuilder filterDuplicateText(boolean filterDuplicateText);1531937412;Control if duplicate paragraphs of text should try be filtered from the_statistical text analysis. Can improve results but slows down analysis._Default is false.;public SignificantTextAggregationBuilder filterDuplicateText(boolean filterDuplicateText) {_        this.filterDuplicateText = filterDuplicateText__        return this__    };control,if,duplicate,paragraphs,of,text,should,try,be,filtered,from,the,statistical,text,analysis,can,improve,results,but,slows,down,analysis,default,is,false;public,significant,text,aggregation,builder,filter,duplicate,text,boolean,filter,duplicate,text,this,filter,duplicate,text,filter,duplicate,text,return,this
