commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public long getDocCount() {     return docCount. }
false;protected;1;3;;protected void setDocCount(long docCount) {     this.docCount = docCount. }
false;public;0;4;;@Override public Aggregations getAggregations() {     return aggregations. }
false;public;2;6;;@Override public XContentBuilder doXContentBody(XContentBuilder builder, Params params) throws IOException {     builder.field(CommonFields.DOC_COUNT.getPreferredName(), docCount).     aggregations.toXContentInternal(builder, params).     return builder. }
false;protected,static;3;30;;protected static <T extends ParsedSingleBucketAggregation> T parseXContent(final XContentParser parser, T aggregation, String name) throws IOException {     aggregation.setName(name).     XContentParser.Token token = parser.currentToken().     String currentFieldName = parser.currentName().     if (token == XContentParser.Token.FIELD_NAME) {         token = parser.nextToken().     }     ensureExpectedToken(XContentParser.Token.START_OBJECT, token, parser::getTokenLocation).     List<Aggregation> aggregations = new ArrayList<>().     while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {         if (token == XContentParser.Token.FIELD_NAME) {             currentFieldName = parser.currentName().         } else if (token.isValue()) {             if (CommonFields.DOC_COUNT.getPreferredName().equals(currentFieldName)) {                 aggregation.setDocCount(parser.longValue()).             }         } else if (token == XContentParser.Token.START_OBJECT) {             if (CommonFields.META.getPreferredName().equals(currentFieldName)) {                 aggregation.metadata = parser.map().             } else {                 XContentParserUtils.parseTypedKeysObject(parser, Aggregation.TYPED_KEYS_DELIMITER, Aggregation.class, aggregations::add).             }         }     }     aggregation.aggregations = new Aggregations(aggregations).     return aggregation. }
