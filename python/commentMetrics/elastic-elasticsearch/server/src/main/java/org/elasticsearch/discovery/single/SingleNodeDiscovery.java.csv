commented;modifiers;parameterAmount;loc;comment;code
false;public;1;5;;@Override public void onSuccess(String source) {     publishListener.onResponse(null).     ackListener.onNodeAck(transportService.getLocalNode(), null). }
false;public;2;6;;@Override public void onFailure(String source, Exception e) {     publishListener.onFailure(e).     ackListener.onNodeAck(transportService.getLocalNode(), e).     logger.warn(() -> new ParameterizedMessage("failed while applying cluster state locally [{}]", event.source()), e). }
false;public,synchronized;3;21;;@Override public synchronized void publish(final ClusterChangedEvent event, ActionListener<Void> publishListener, final AckListener ackListener) {     clusterState = event.state().     ackListener.onCommit(TimeValue.ZERO).     clusterApplier.onNewClusterState("apply-locally-on-node[" + event.source() + "]", () -> clusterState, new ClusterApplyListener() {          @Override         public void onSuccess(String source) {             publishListener.onResponse(null).             ackListener.onNodeAck(transportService.getLocalNode(), null).         }          @Override         public void onFailure(String source, Exception e) {             publishListener.onFailure(e).             ackListener.onNodeAck(transportService.getLocalNode(), e).             logger.warn(() -> new ParameterizedMessage("failed while applying cluster state locally [{}]", event.source()), e).         }     }). }
false;public;0;4;;@Override public DiscoveryStats stats() {     return new DiscoveryStats(null, null). }
false;public,synchronized;0;10;;@Override public synchronized void startInitialJoin() {     if (lifecycle.started() == false) {         throw new IllegalStateException("can't start initial join when not started").     }     // apply a fresh cluster state just so that state recovery gets triggered by GatewayService     // TODO: give discovery module control over GatewayService     clusterState = ClusterState.builder(clusterState).build().     clusterApplier.onNewClusterState("single-node-start-initial-join", () -> clusterState, (source, e) -> {     }). }
false;protected,synchronized;0;7;;@Override protected synchronized void doStart() {     // set initial state     DiscoveryNode localNode = transportService.getLocalNode().     clusterState = createInitialState(localNode).     clusterApplier.setInitialState(clusterState). }
false;protected;1;10;;protected ClusterState createInitialState(DiscoveryNode localNode) {     ClusterState.Builder builder = ClusterState.builder(clusterName).     return builder.nodes(DiscoveryNodes.builder().add(localNode).localNodeId(localNode.getId()).masterNodeId(localNode.getId()).build()).blocks(ClusterBlocks.builder().addGlobalBlock(STATE_NOT_RECOVERED_BLOCK)).build(). }
false;protected;0;4;;@Override protected void doStop() { }
false;protected;0;4;;@Override protected void doClose() { }
