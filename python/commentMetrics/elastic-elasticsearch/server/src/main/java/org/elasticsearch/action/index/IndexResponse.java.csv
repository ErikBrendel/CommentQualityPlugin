commented;modifiers;parameterAmount;loc;comment;code
false;private,static;1;4;;private static Result assertCreatedOrUpdated(Result result) {     assert result == Result.CREATED || result == Result.UPDATED.     return result. }
false;public;0;4;;@Override public RestStatus status() {     return result == Result.CREATED ? RestStatus.CREATED : super.status(). }
false;public;0;14;;@Override public String toString() {     StringBuilder builder = new StringBuilder().     builder.append("IndexResponse[").     builder.append("index=").append(getIndex()).     builder.append(",type=").append(getType()).     builder.append(",id=").append(getId()).     builder.append(",version=").append(getVersion()).     builder.append(",result=").append(getResult().getLowercase()).     builder.append(",seqNo=").append(getSeqNo()).     builder.append(",primaryTerm=").append(getPrimaryTerm()).     builder.append(",shards=").append(Strings.toString(getShardInfo())).     return builder.append("]").toString(). }
false;public,static;1;9;;public static IndexResponse fromXContent(XContentParser parser) throws IOException {     ensureExpectedToken(XContentParser.Token.START_OBJECT, parser.nextToken(), parser::getTokenLocation).     Builder context = new Builder().     while (parser.nextToken() != XContentParser.Token.END_OBJECT) {         parseXContentFields(parser, context).     }     return context.build(). }
true;public,static;2;3;/**  * Parse the current token and update the parsing context appropriately.  */ ;/**  * Parse the current token and update the parsing context appropriately.  */ public static void parseXContentFields(XContentParser parser, Builder context) throws IOException {     DocWriteResponse.parseInnerToXContent(parser, context). }
false;public;0;9;;@Override public IndexResponse build() {     IndexResponse indexResponse = new IndexResponse(shardId, type, id, seqNo, primaryTerm, version, result).     indexResponse.setForcedRefresh(forcedRefresh).     if (shardInfo != null) {         indexResponse.setShardInfo(shardInfo).     }     return indexResponse. }
