commented;modifiers;parameterAmount;loc;comment;code
false;protected;1;4;;@Override protected List<NodesReloadSecureSettingsResponse.NodeResponse> readNodesFrom(StreamInput in) throws IOException {     return in.readList(NodeResponse::readNodeResponse). }
false;protected;2;4;;@Override protected void writeNodesTo(StreamOutput out, List<NodesReloadSecureSettingsResponse.NodeResponse> nodes) throws IOException {     out.writeStreamableList(nodes). }
false;public;2;17;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.startObject("nodes").     for (final NodesReloadSecureSettingsResponse.NodeResponse node : getNodes()) {         builder.startObject(node.getNode().getId()).         builder.field("name", node.getNode().getName()).         final Exception e = node.reloadException().         if (e != null) {             builder.startObject("reload_exception").             ElasticsearchException.generateThrowableXContent(builder, params, e).             builder.endObject().         }         builder.endObject().     }     builder.endObject().     return builder. }
false;public;0;12;;@Override public String toString() {     try {         final XContentBuilder builder = XContentFactory.jsonBuilder().prettyPrint().         builder.startObject().         toXContent(builder, EMPTY_PARAMS).         builder.endObject().         return Strings.toString(builder).     } catch (final IOException e) {         return "{ \"error\" : \"" + e.getMessage() + "\"}".     } }
false;public;0;3;;public Exception reloadException() {     return this.reloadException. }
false;public;1;7;;@Override public void readFrom(StreamInput in) throws IOException {     super.readFrom(in).     if (in.readBoolean()) {         reloadException = in.readException().     } }
false;public;1;10;;@Override public void writeTo(StreamOutput out) throws IOException {     super.writeTo(out).     if (reloadException != null) {         out.writeBoolean(true).         out.writeException(reloadException).     } else {         out.writeBoolean(false).     } }
false;public;1;11;;@Override public boolean equals(Object o) {     if (this == o) {         return true.     }     if (o == null || getClass() != o.getClass()) {         return false.     }     final NodesReloadSecureSettingsResponse.NodeResponse that = (NodesReloadSecureSettingsResponse.NodeResponse) o.     return reloadException != null ? reloadException.equals(that.reloadException) : that.reloadException == null. }
false;public;0;4;;@Override public int hashCode() {     return reloadException != null ? reloadException.hashCode() : 0. }
false;public,static;1;5;;public static NodeResponse readNodeResponse(StreamInput in) throws IOException {     final NodeResponse node = new NodeResponse().     node.readFrom(in).     return node. }
