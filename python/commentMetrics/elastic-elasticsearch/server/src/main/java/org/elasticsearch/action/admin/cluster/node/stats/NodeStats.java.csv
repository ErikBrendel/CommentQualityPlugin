commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public long getTimestamp() {     return this.timestamp. }
false;public;0;4;;@Nullable public String getHostname() {     return getNode().getHostName(). }
true;public;0;4;/**  * Indices level stats.  */ ;/**  * Indices level stats.  */ @Nullable public NodeIndicesStats getIndices() {     return this.indices. }
true;public;0;4;/**  * Operating System level statistics.  */ ;/**  * Operating System level statistics.  */ @Nullable public OsStats getOs() {     return this.os. }
true;public;0;4;/**  * Process level statistics.  */ ;/**  * Process level statistics.  */ @Nullable public ProcessStats getProcess() {     return process. }
true;public;0;4;/**  * JVM level statistics.  */ ;/**  * JVM level statistics.  */ @Nullable public JvmStats getJvm() {     return jvm. }
true;public;0;4;/**  * Thread Pool level statistics.  */ ;/**  * Thread Pool level statistics.  */ @Nullable public ThreadPoolStats getThreadPool() {     return this.threadPool. }
true;public;0;4;/**  * File system level stats.  */ ;/**  * File system level stats.  */ @Nullable public FsInfo getFs() {     return fs. }
false;public;0;4;;@Nullable public TransportStats getTransport() {     return this.transport. }
false;public;0;4;;@Nullable public HttpStats getHttp() {     return this.http. }
false;public;0;4;;@Nullable public AllCircuitBreakerStats getBreaker() {     return this.breaker. }
false;public;0;4;;@Nullable public ScriptStats getScriptStats() {     return this.scriptStats. }
false;public;0;4;;@Nullable public DiscoveryStats getDiscoveryStats() {     return this.discoveryStats. }
false;public;0;4;;@Nullable public IngestStats getIngestStats() {     return ingestStats. }
false;public;0;4;;@Nullable public AdaptiveSelectionStats getAdaptiveSelectionStats() {     return adaptiveSelectionStats. }
false;public,static;1;5;;public static NodeStats readNodeStats(StreamInput in) throws IOException {     NodeStats nodeInfo = new NodeStats().     nodeInfo.readFrom(in).     return nodeInfo. }
false;public;1;24;;@Override public void readFrom(StreamInput in) throws IOException {     super.readFrom(in).     timestamp = in.readVLong().     if (in.readBoolean()) {         indices = NodeIndicesStats.readIndicesStats(in).     }     os = in.readOptionalWriteable(OsStats::new).     process = in.readOptionalWriteable(ProcessStats::new).     jvm = in.readOptionalWriteable(JvmStats::new).     threadPool = in.readOptionalWriteable(ThreadPoolStats::new).     fs = in.readOptionalWriteable(FsInfo::new).     transport = in.readOptionalWriteable(TransportStats::new).     http = in.readOptionalWriteable(HttpStats::new).     breaker = in.readOptionalWriteable(AllCircuitBreakerStats::new).     scriptStats = in.readOptionalWriteable(ScriptStats::new).     discoveryStats = in.readOptionalWriteable(DiscoveryStats::new).     ingestStats = in.readOptionalWriteable(IngestStats::new).     if (in.getVersion().onOrAfter(Version.V_6_1_0)) {         adaptiveSelectionStats = in.readOptionalWriteable(AdaptiveSelectionStats::new).     } else {         adaptiveSelectionStats = null.     } }
false;public;1;25;;@Override public void writeTo(StreamOutput out) throws IOException {     super.writeTo(out).     out.writeVLong(timestamp).     if (indices == null) {         out.writeBoolean(false).     } else {         out.writeBoolean(true).         indices.writeTo(out).     }     out.writeOptionalWriteable(os).     out.writeOptionalWriteable(process).     out.writeOptionalWriteable(jvm).     out.writeOptionalWriteable(threadPool).     out.writeOptionalWriteable(fs).     out.writeOptionalWriteable(transport).     out.writeOptionalWriteable(http).     out.writeOptionalWriteable(breaker).     out.writeOptionalWriteable(scriptStats).     out.writeOptionalWriteable(discoveryStats).     out.writeOptionalWriteable(ingestStats).     if (out.getVersion().onOrAfter(Version.V_6_1_0)) {         out.writeOptionalWriteable(adaptiveSelectionStats).     } }
false;public;2;63;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.field("name", getNode().getName()).     builder.field("transport_address", getNode().getAddress().toString()).     builder.field("host", getNode().getHostName()).     builder.field("ip", getNode().getAddress()).     builder.startArray("roles").     for (DiscoveryNode.Role role : getNode().getRoles()) {         builder.value(role.getRoleName()).     }     builder.endArray().     if (!getNode().getAttributes().isEmpty()) {         builder.startObject("attributes").         for (Map.Entry<String, String> attrEntry : getNode().getAttributes().entrySet()) {             builder.field(attrEntry.getKey(), attrEntry.getValue()).         }         builder.endObject().     }     if (getIndices() != null) {         getIndices().toXContent(builder, params).     }     if (getOs() != null) {         getOs().toXContent(builder, params).     }     if (getProcess() != null) {         getProcess().toXContent(builder, params).     }     if (getJvm() != null) {         getJvm().toXContent(builder, params).     }     if (getThreadPool() != null) {         getThreadPool().toXContent(builder, params).     }     if (getFs() != null) {         getFs().toXContent(builder, params).     }     if (getTransport() != null) {         getTransport().toXContent(builder, params).     }     if (getHttp() != null) {         getHttp().toXContent(builder, params).     }     if (getBreaker() != null) {         getBreaker().toXContent(builder, params).     }     if (getScriptStats() != null) {         getScriptStats().toXContent(builder, params).     }     if (getDiscoveryStats() != null) {         getDiscoveryStats().toXContent(builder, params).     }     if (getIngestStats() != null) {         getIngestStats().toXContent(builder, params).     }     if (getAdaptiveSelectionStats() != null) {         getAdaptiveSelectionStats().toXContent(builder, params).     }     return builder. }
