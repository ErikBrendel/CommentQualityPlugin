commented;modifiers;parameterAmount;loc;comment;code
true;public;0;3;/**  * Returns restore information if snapshot was completed before this method returned, null otherwise  *  * @return restore information or null  */ ;/**  * Returns restore information if snapshot was completed before this method returned, null otherwise  *  * @return restore information or null  */ public RestoreInfo getRestoreInfo() {     return restoreInfo. }
false;public;1;5;;@Override public void readFrom(StreamInput in) throws IOException {     super.readFrom(in).     restoreInfo = RestoreInfo.readOptionalRestoreInfo(in). }
false;public;1;5;;@Override public void writeTo(StreamOutput out) throws IOException {     super.writeTo(out).     out.writeOptionalStreamable(restoreInfo). }
false;public;0;6;;public RestStatus status() {     if (restoreInfo == null) {         return RestStatus.ACCEPTED.     }     return restoreInfo.status(). }
false;public;2;12;;@Override public XContentBuilder toXContent(XContentBuilder builder, ToXContent.Params params) throws IOException {     builder.startObject().     if (restoreInfo != null) {         builder.field("snapshot").         restoreInfo.toXContent(builder, params).     } else {         builder.field("accepted", true).     }     builder.endObject().     return builder. }
false;public,static;1;3;;public static RestoreSnapshotResponse fromXContent(XContentParser parser) throws IOException {     return PARSER.parse(parser, null). }
false;public;1;7;;@Override public boolean equals(Object o) {     if (this == o)         return true.     if (o == null || getClass() != o.getClass())         return false.     RestoreSnapshotResponse that = (RestoreSnapshotResponse) o.     return Objects.equals(restoreInfo, that.restoreInfo). }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(restoreInfo). }
false;public;0;4;;@Override public String toString() {     return "RestoreSnapshotResponse{" + "restoreInfo=" + restoreInfo + '}'. }
