commented;modifiers;parameterAmount;loc;comment;code
true;default;2;1;/**  * Called once a request is received  * @param requestId the internal request ID  * @param action the request action  */ ;/**  * Called once a request is received  * @param requestId the internal request ID  * @param action the request action  */ default void onRequestReceived(long requestId, String action) { }
true;default;3;1;/**  * Called for every action response sent after the response has been passed to the underlying network implementation.  * @param requestId the request ID (unique per client)  * @param action the request action  * @param response the response send  */ ;/**  * Called for every action response sent after the response has been passed to the underlying network implementation.  * @param requestId the request ID (unique per client)  * @param action the request action  * @param response the response send  */ default void onResponseSent(long requestId, String action, TransportResponse response) { }
true;default;3;1;/**  * Called for every failed action response after the response has been passed to the underlying network implementation.  * @param requestId the request ID (unique per client)  * @param action the request action  * @param error the error sent back to the caller  */ ;/**  * Called for every failed action response after the response has been passed to the underlying network implementation.  * @param requestId the request ID (unique per client)  * @param action the request action  * @param error the error sent back to the caller  */ default void onResponseSent(long requestId, String action, Exception error) { }
true;default;5;2;/**  * Called for every request sent to a server after the request has been passed to the underlying network implementation  * @param node the node the request was sent to  * @param requestId the internal request id  * @param action the action name  * @param request the actual request  * @param finalOptions the request options  */ ;/**  * Called for every request sent to a server after the request has been passed to the underlying network implementation  * @param node the node the request was sent to  * @param requestId the internal request id  * @param action the action name  * @param request the actual request  * @param finalOptions the request options  */ default void onRequestSent(DiscoveryNode node, long requestId, String action, TransportRequest request, TransportRequestOptions finalOptions) { }
true;default;2;1;/**  * Called for every response received  * @param requestId the request id for this reponse  * @param context the response context or null if the context was already processed ie. due to a timeout.  */ ;/**  * Called for every response received  * @param requestId the request id for this reponse  * @param context the response context or null if the context was already processed ie. due to a timeout.  */ default void onResponseReceived(long requestId, Transport.ResponseContext context) { }
