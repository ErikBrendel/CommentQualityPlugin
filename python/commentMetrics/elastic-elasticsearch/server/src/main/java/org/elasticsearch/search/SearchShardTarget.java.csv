commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Nullable public String getNodeId() {     return nodeId.string(). }
false;public;0;3;;public Text getNodeIdText() {     return this.nodeId. }
false;public;0;3;;public String getIndex() {     return shardId.getIndexName(). }
false;public;0;3;;public ShardId getShardId() {     return shardId. }
false;public;0;3;;public OriginalIndices getOriginalIndices() {     return originalIndices. }
false;public;0;4;;@Nullable public String getClusterAlias() {     return clusterAlias. }
true;public;0;3;/**  * Returns the fully qualified index name, including the index prefix that indicates which cluster results come from.  */ ;/**  * Returns the fully qualified index name, including the index prefix that indicates which cluster results come from.  */ public String getFullyQualifiedIndexName() {     return RemoteClusterAware.buildRemoteIndexName(clusterAlias, getIndex()). }
false;public;1;8;;@Override public int compareTo(SearchShardTarget o) {     int i = shardId.getIndexName().compareTo(o.getIndex()).     if (i == 0) {         i = shardId.getId() - o.shardId.id().     }     return i. }
false;public;1;11;;@Override public void writeTo(StreamOutput out) throws IOException {     if (nodeId == null) {         out.writeBoolean(false).     } else {         out.writeBoolean(true).         out.writeText(nodeId).     }     shardId.writeTo(out).     out.writeOptionalString(clusterAlias). }
false;public;1;13;;@Override public boolean equals(Object o) {     if (this == o) {         return true.     }     if (o == null || getClass() != o.getClass()) {         return false.     }     SearchShardTarget that = (SearchShardTarget) o.     return Objects.equals(nodeId, that.nodeId) && Objects.equals(shardId, that.shardId) && Objects.equals(clusterAlias, that.clusterAlias). }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(nodeId, shardId, clusterAlias). }
false;public;0;9;;@Override public String toString() {     String shardToString = "[" + RemoteClusterAware.buildRemoteIndexName(clusterAlias, shardId.getIndexName()) + "][" + shardId.getId() + "]".     if (nodeId == null) {         return "[_na_]" + shardToString.     }     return "[" + nodeId + "]" + shardToString. }
