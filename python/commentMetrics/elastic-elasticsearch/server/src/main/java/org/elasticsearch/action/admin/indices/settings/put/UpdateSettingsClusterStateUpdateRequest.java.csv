commented;modifiers;parameterAmount;loc;comment;code
true;public;0;3;/**  * Returns <code>true</code> iff the settings update should only add but not update settings. If the setting already exists  * it should not be overwritten by this update. The default is <code>false</code>  */ ;/**  * Returns <code>true</code> iff the settings update should only add but not update settings. If the setting already exists  * it should not be overwritten by this update. The default is <code>false</code>  */ public boolean isPreserveExisting() {     return preserveExisting. }
true;public;1;4;/**  * Iff set to <code>true</code> this settings update will only add settings not already set on an index. Existing settings remain  * unchanged.  */ ;/**  * Iff set to <code>true</code> this settings update will only add settings not already set on an index. Existing settings remain  * unchanged.  */ public UpdateSettingsClusterStateUpdateRequest setPreserveExisting(boolean preserveExisting) {     this.preserveExisting = preserveExisting.     return this. }
true;public;0;3;/**  * Returns the {@link Settings} to update  */ ;/**  * Returns the {@link Settings} to update  */ public Settings settings() {     return settings. }
true;public;1;4;/**  * Sets the {@link Settings} to update  */ ;/**  * Sets the {@link Settings} to update  */ public UpdateSettingsClusterStateUpdateRequest settings(Settings settings) {     this.settings = settings.     return this. }
