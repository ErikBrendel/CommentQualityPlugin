commented;modifiers;parameterAmount;loc;comment;code
false;protected;2;4;;@Override protected AggregationBuilder shallowCopy(Builder factoriesBuilder, Map<String, Object> metaData) {     return new SamplerAggregationBuilder(this, factoriesBuilder, metaData). }
false;protected;1;4;;@Override protected void doWriteTo(StreamOutput out) throws IOException {     out.writeVInt(shardSize). }
true;public;1;4;/**  * Set the max num docs to be returned from each shard.  */ ;/**  * Set the max num docs to be returned from each shard.  */ public SamplerAggregationBuilder shardSize(int shardSize) {     this.shardSize = shardSize.     return this. }
true;public;0;3;/**  * Get the max num docs to be returned from each shard.  */ ;/**  * Get the max num docs to be returned from each shard.  */ public int shardSize() {     return shardSize. }
false;protected;3;5;;@Override protected SamplerAggregatorFactory doBuild(SearchContext context, AggregatorFactory<?> parent, Builder subFactoriesBuilder) throws IOException {     return new SamplerAggregatorFactory(name, shardSize, context, parent, subFactoriesBuilder, metaData). }
false;protected;2;7;;@Override protected XContentBuilder internalXContent(XContentBuilder builder, Params params) throws IOException {     builder.startObject().     builder.field(SamplerAggregator.SHARD_SIZE_FIELD.getPreferredName(), shardSize).     builder.endObject().     return builder. }
false;public,static;2;27;;public static SamplerAggregationBuilder parse(String aggregationName, XContentParser parser) throws IOException {     XContentParser.Token token.     String currentFieldName = null.     Integer shardSize = null.     while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {         if (token == XContentParser.Token.FIELD_NAME) {             currentFieldName = parser.currentName().         } else if (token == XContentParser.Token.VALUE_NUMBER) {             if (SamplerAggregator.SHARD_SIZE_FIELD.match(currentFieldName, parser.getDeprecationHandler())) {                 shardSize = parser.intValue().             } else {                 throw new ParsingException(parser.getTokenLocation(), "Unsupported property \"" + currentFieldName + "\" for aggregation \"" + aggregationName).             }         } else {             throw new ParsingException(parser.getTokenLocation(), "Unsupported property \"" + currentFieldName + "\" for aggregation \"" + aggregationName).         }     }     SamplerAggregationBuilder factory = new SamplerAggregationBuilder(aggregationName).     if (shardSize != null) {         factory.shardSize(shardSize).     }     return factory. }
false;protected;0;4;;@Override protected int doHashCode() {     return Objects.hash(shardSize). }
false;protected;1;5;;@Override protected boolean doEquals(Object obj) {     SamplerAggregationBuilder other = (SamplerAggregationBuilder) obj.     return Objects.equals(shardSize, other.shardSize). }
false;public;0;4;;@Override public String getType() {     return NAME. }
