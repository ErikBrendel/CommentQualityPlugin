commented;modifiers;parameterAmount;loc;comment;code
false;private;1;3;;private void setDynamicMappingUpdateTimeout(TimeValue dynamicMappingUpdateTimeout) {     this.dynamicMappingUpdateTimeout = dynamicMappingUpdateTimeout. }
false;public;1;3;;public void setClient(Client client) {     this.client = client.admin().indices(). }
false;private;4;7;;private PutMappingRequestBuilder updateMappingRequest(Index index, String type, Mapping mappingUpdate, final TimeValue timeout) {     if (type.equals(MapperService.DEFAULT_MAPPING)) {         throw new IllegalArgumentException("_default_ mapping should not be updated").     }     return client.preparePutMapping().setConcreteIndex(index).setType(type).setSource(mappingUpdate.toString(), XContentType.JSON).setMasterNodeTimeout(timeout).setTimeout(TimeValue.ZERO). }
true;public;3;3;/**  * Same as {@link #updateMappingOnMaster(Index, String, Mapping, TimeValue)}  * using the default timeout.  */ ;/**  * Same as {@link #updateMappingOnMaster(Index, String, Mapping, TimeValue)}  * using the default timeout.  */ public void updateMappingOnMaster(Index index, String type, Mapping mappingUpdate) {     updateMappingOnMaster(index, type, mappingUpdate, dynamicMappingUpdateTimeout). }
true;public;4;3;/**  * Update mappings on the master node, waiting for the change to be committed,  * but not for the mapping update to be applied on all nodes. The timeout specified by  * {@code timeout} is the master node timeout ({@link MasterNodeRequest#masterNodeTimeout()}),  * potentially waiting for a master node to be available.  */ ;/**  * Update mappings on the master node, waiting for the change to be committed,  * but not for the mapping update to be applied on all nodes. The timeout specified by  * {@code timeout} is the master node timeout ({@link MasterNodeRequest#masterNodeTimeout()}),  * potentially waiting for a master node to be available.  */ public void updateMappingOnMaster(Index index, String type, Mapping mappingUpdate, TimeValue masterNodeTimeout) {     updateMappingRequest(index, type, mappingUpdate, masterNodeTimeout).get(). }
