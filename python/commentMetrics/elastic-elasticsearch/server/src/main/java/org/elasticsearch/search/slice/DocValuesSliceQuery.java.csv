commented;modifiers;parameterAmount;loc;comment;code
false;public;0;13;;@Override public boolean matches() throws IOException {     if (values.advanceExact(approximation.docID())) {         for (int i = 0. i < values.docValueCount(). i++) {             if (contains(BitMixer.mix(values.nextValue()))) {                 return true.             }         }         return false.     } else {         return contains(0).     } }
false;public;0;5;;@Override public float matchCost() {     // BitMixer.mix seems to be about 10 ops     return 10. }
false;public;1;28;;@Override public Scorer scorer(LeafReaderContext context) throws IOException {     final SortedNumericDocValues values = DocValues.getSortedNumeric(context.reader(), getField()).     final DocIdSetIterator approximation = DocIdSetIterator.all(context.reader().maxDoc()).     final TwoPhaseIterator twoPhase = new TwoPhaseIterator(approximation) {          @Override         public boolean matches() throws IOException {             if (values.advanceExact(approximation.docID())) {                 for (int i = 0. i < values.docValueCount(). i++) {                     if (contains(BitMixer.mix(values.nextValue()))) {                         return true.                     }                 }                 return false.             } else {                 return contains(0).             }         }          @Override         public float matchCost() {             // BitMixer.mix seems to be about 10 ops             return 10.         }     }.     return new ConstantScoreScorer(this, score(), scoreMode, twoPhase). }
false;public;1;4;;@Override public boolean isCacheable(LeafReaderContext ctx) {     return DocValues.isCacheable(ctx, getField()). }
false;public;3;40;;@Override public Weight createWeight(IndexSearcher searcher, ScoreMode scoreMode, float boost) throws IOException {     return new ConstantScoreWeight(this, boost) {          @Override         public Scorer scorer(LeafReaderContext context) throws IOException {             final SortedNumericDocValues values = DocValues.getSortedNumeric(context.reader(), getField()).             final DocIdSetIterator approximation = DocIdSetIterator.all(context.reader().maxDoc()).             final TwoPhaseIterator twoPhase = new TwoPhaseIterator(approximation) {                  @Override                 public boolean matches() throws IOException {                     if (values.advanceExact(approximation.docID())) {                         for (int i = 0. i < values.docValueCount(). i++) {                             if (contains(BitMixer.mix(values.nextValue()))) {                                 return true.                             }                         }                         return false.                     } else {                         return contains(0).                     }                 }                  @Override                 public float matchCost() {                     // BitMixer.mix seems to be about 10 ops                     return 10.                 }             }.             return new ConstantScoreScorer(this, score(), scoreMode, twoPhase).         }          @Override         public boolean isCacheable(LeafReaderContext ctx) {             return DocValues.isCacheable(ctx, getField()).         }     }. }
