commented;modifiers;parameterAmount;loc;comment;code
true;;3;1;/**  * Modifies the result of the previously executed search ({@link TopDocs})  * in place based on the given {@link RescoreContext}.  *  * @param topDocs        the result of the previously executed search  * @param searcher       the searcher used for this search. This will never be <code>null</code>.  * @param rescoreContext the {@link RescoreContext}. This will never be <code>null</code>  * @throws IOException if an {@link IOException} occurs during rescoring  */ ;/**  * Modifies the result of the previously executed search ({@link TopDocs})  * in place based on the given {@link RescoreContext}.  *  * @param topDocs        the result of the previously executed search  * @param searcher       the searcher used for this search. This will never be <code>null</code>.  * @param rescoreContext the {@link RescoreContext}. This will never be <code>null</code>  * @throws IOException if an {@link IOException} occurs during rescoring  */ TopDocs rescore(TopDocs topDocs, IndexSearcher searcher, RescoreContext rescoreContext) throws IOException.
true;;4;2;/**  * Executes an {@link Explanation} phase on the rescorer.  *  * @param topLevelDocId the global / top-level document ID to explain  * @param searcher the searcher used for this search. This will never be <code>null</code>.  * @param rescoreContext context for this rescorer  * @param sourceExplanation explanation of the source of the documents being fed into this rescore  * @return the explain for the given top level document ID.  * @throws IOException if an {@link IOException} occurs  */ ;/**  * Executes an {@link Explanation} phase on the rescorer.  *  * @param topLevelDocId the global / top-level document ID to explain  * @param searcher the searcher used for this search. This will never be <code>null</code>.  * @param rescoreContext context for this rescorer  * @param sourceExplanation explanation of the source of the documents being fed into this rescore  * @return the explain for the given top level document ID.  * @throws IOException if an {@link IOException} occurs  */ Explanation explain(int topLevelDocId, IndexSearcher searcher, RescoreContext rescoreContext, Explanation sourceExplanation) throws IOException.
