commented;modifiers;parameterAmount;loc;comment;code
false;protected;1;5;;@Override protected void doWriteTo(StreamOutput out) throws IOException {     out.writeVLong(docCount).     aggregations.writeTo(out). }
false;public;0;4;;@Override public long getDocCount() {     return docCount. }
false;public;0;4;;@Override public InternalAggregations getAggregations() {     return aggregations. }
true;public;1;3;/**  * Create a new copy of this {@link Aggregation} with the same settings as  * this {@link Aggregation} and contains the provided sub-aggregations.  *  * @param subAggregations  *            the buckets to use in the new {@link Aggregation}  * @return the new {@link Aggregation}  */ ;/**  * Create a new copy of this {@link Aggregation} with the same settings as  * this {@link Aggregation} and contains the provided sub-aggregations.  *  * @param subAggregations  *            the buckets to use in the new {@link Aggregation}  * @return the new {@link Aggregation}  */ public InternalSingleBucketAggregation create(InternalAggregations subAggregations) {     return newAggregation(getName(), getDocCount(), subAggregations). }
true;protected,abstract;3;1;/**  * Create a <b>new</b> empty sub aggregation. This must be a new instance on each call.  */ ;/**  * Create a <b>new</b> empty sub aggregation. This must be a new instance on each call.  */ protected abstract InternalSingleBucketAggregation newAggregation(String name, long docCount, InternalAggregations subAggregations).
false;public;2;12;;@Override public InternalAggregation doReduce(List<InternalAggregation> aggregations, ReduceContext reduceContext) {     long docCount = 0L.     List<InternalAggregations> subAggregationsList = new ArrayList<>(aggregations.size()).     for (InternalAggregation aggregation : aggregations) {         assert aggregation.getName().equals(getName()).         docCount += ((InternalSingleBucketAggregation) aggregation).docCount.         subAggregationsList.add(((InternalSingleBucketAggregation) aggregation).aggregations).     }     final InternalAggregations aggs = InternalAggregations.reduce(subAggregationsList, reduceContext).     return newAggregation(getName(), docCount, aggs). }
false;public;1;19;;@Override public Object getProperty(List<String> path) {     if (path.isEmpty()) {         return this.     } else {         String aggName = path.get(0).         if (aggName.equals("_count")) {             if (path.size() > 1) {                 throw new IllegalArgumentException("_count must be the last element in the path").             }             return getDocCount().         }         InternalAggregation aggregation = aggregations.get(aggName).         if (aggregation == null) {             throw new IllegalArgumentException("Cannot find an aggregation named [" + aggName + "] in [" + getName() + "]").         }         return aggregation.getProperty(path.subList(1, path.size())).     } }
false;public;2;6;;@Override public XContentBuilder doXContentBody(XContentBuilder builder, Params params) throws IOException {     builder.field(CommonFields.DOC_COUNT.getPreferredName(), docCount).     aggregations.toXContentInternal(builder, params).     return builder. }
false;protected;1;6;;@Override protected boolean doEquals(Object obj) {     InternalSingleBucketAggregation other = (InternalSingleBucketAggregation) obj.     return Objects.equals(docCount, other.docCount) && Objects.equals(aggregations, other.aggregations). }
false;protected;0;4;;@Override protected int doHashCode() {     return Objects.hash(docCount, aggregations). }
