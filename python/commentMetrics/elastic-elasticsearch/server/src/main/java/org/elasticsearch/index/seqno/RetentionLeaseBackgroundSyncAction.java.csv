# id;timestamp;commentText;codeText;commentWords;codeWords
RetentionLeaseBackgroundSyncAction -> public void backgroundSync(             final ShardId shardId,             final RetentionLeases retentionLeases);1549294529;Background sync the specified retention leases for the specified shard.__@param shardId         the shard to sync_@param retentionLeases the retention leases to sync;public void backgroundSync(_            final ShardId shardId,_            final RetentionLeases retentionLeases) {_        Objects.requireNonNull(shardId)__        Objects.requireNonNull(retentionLeases)__        final ThreadContext threadContext = threadPool.getThreadContext()__        try (ThreadContext.StoredContext ignore = threadContext.stashContext()) {_            _            threadContext.markAsSystemContext()__            execute(_                    new Request(shardId, retentionLeases),_                    ActionListener.wrap(_                            r -> {},_                            e -> {_                                if (ExceptionsHelper.unwrap(e, AlreadyClosedException.class, IndexShardClosedException.class) == null) {_                                    getLogger().warn(new ParameterizedMessage("{} retention lease background sync failed", shardId), e)__                                }_                            }))__        }_    };background,sync,the,specified,retention,leases,for,the,specified,shard,param,shard,id,the,shard,to,sync,param,retention,leases,the,retention,leases,to,sync;public,void,background,sync,final,shard,id,shard,id,final,retention,leases,retention,leases,objects,require,non,null,shard,id,objects,require,non,null,retention,leases,final,thread,context,thread,context,thread,pool,get,thread,context,try,thread,context,stored,context,ignore,thread,context,stash,context,thread,context,mark,as,system,context,execute,new,request,shard,id,retention,leases,action,listener,wrap,r,e,if,exceptions,helper,unwrap,e,already,closed,exception,class,index,shard,closed,exception,class,null,get,logger,warn,new,parameterized,message,retention,lease,background,sync,failed,shard,id,e
RetentionLeaseBackgroundSyncAction -> public void backgroundSync(             final ShardId shardId,             final RetentionLeases retentionLeases);1550526771;Background sync the specified retention leases for the specified shard.__@param shardId         the shard to sync_@param retentionLeases the retention leases to sync;public void backgroundSync(_            final ShardId shardId,_            final RetentionLeases retentionLeases) {_        Objects.requireNonNull(shardId)__        Objects.requireNonNull(retentionLeases)__        final ThreadContext threadContext = threadPool.getThreadContext()__        try (ThreadContext.StoredContext ignore = threadContext.stashContext()) {_            _            threadContext.markAsSystemContext()__            execute(_                    new Request(shardId, retentionLeases),_                    ActionListener.wrap(_                            r -> {},_                            e -> {_                                if (ExceptionsHelper.unwrap(e, AlreadyClosedException.class, IndexShardClosedException.class) == null) {_                                    getLogger().warn(new ParameterizedMessage("{} retention lease background sync failed", shardId), e)__                                }_                            }))__        }_    };background,sync,the,specified,retention,leases,for,the,specified,shard,param,shard,id,the,shard,to,sync,param,retention,leases,the,retention,leases,to,sync;public,void,background,sync,final,shard,id,shard,id,final,retention,leases,retention,leases,objects,require,non,null,shard,id,objects,require,non,null,retention,leases,final,thread,context,thread,context,thread,pool,get,thread,context,try,thread,context,stored,context,ignore,thread,context,stash,context,thread,context,mark,as,system,context,execute,new,request,shard,id,retention,leases,action,listener,wrap,r,e,if,exceptions,helper,unwrap,e,already,closed,exception,class,index,shard,closed,exception,class,null,get,logger,warn,new,parameterized,message,retention,lease,background,sync,failed,shard,id,e
RetentionLeaseBackgroundSyncAction -> public void backgroundSync(             final ShardId shardId,             final RetentionLeases retentionLeases);1551082082;Background sync the specified retention leases for the specified shard.__@param shardId         the shard to sync_@param retentionLeases the retention leases to sync;public void backgroundSync(_            final ShardId shardId,_            final RetentionLeases retentionLeases) {_        Objects.requireNonNull(shardId)__        Objects.requireNonNull(retentionLeases)__        final ThreadContext threadContext = threadPool.getThreadContext()__        try (ThreadContext.StoredContext ignore = threadContext.stashContext()) {_            _            threadContext.markAsSystemContext()__            execute(_                    new Request(shardId, retentionLeases),_                    ActionListener.wrap(_                            r -> {},_                            e -> {_                                if (ExceptionsHelper.unwrap(e, AlreadyClosedException.class, IndexShardClosedException.class) == null) {_                                    getLogger().warn(new ParameterizedMessage("{} retention lease background sync failed", shardId), e)__                                }_                            }))__        }_    };background,sync,the,specified,retention,leases,for,the,specified,shard,param,shard,id,the,shard,to,sync,param,retention,leases,the,retention,leases,to,sync;public,void,background,sync,final,shard,id,shard,id,final,retention,leases,retention,leases,objects,require,non,null,shard,id,objects,require,non,null,retention,leases,final,thread,context,thread,context,thread,pool,get,thread,context,try,thread,context,stored,context,ignore,thread,context,stash,context,thread,context,mark,as,system,context,execute,new,request,shard,id,retention,leases,action,listener,wrap,r,e,if,exceptions,helper,unwrap,e,already,closed,exception,class,index,shard,closed,exception,class,null,get,logger,warn,new,parameterized,message,retention,lease,background,sync,failed,shard,id,e
