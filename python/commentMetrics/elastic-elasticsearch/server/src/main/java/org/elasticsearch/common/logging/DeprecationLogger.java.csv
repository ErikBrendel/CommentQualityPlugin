# id;timestamp;commentText;codeText;commentWords;codeWords
DeprecationLogger -> public void deprecated(String msg, Object... params);1524684173;Logs a deprecation message, adding a formatted warning message as a response header on the thread context.;public void deprecated(String msg, Object... params) {_        deprecated(THREAD_CONTEXT, msg, params)__    };logs,a,deprecation,message,adding,a,formatted,warning,message,as,a,response,header,on,the,thread,context;public,void,deprecated,string,msg,object,params,deprecated,msg,params
DeprecationLogger -> public void deprecated(String msg, Object... params);1528762805;Logs a deprecation message, adding a formatted warning message as a response header on the thread context.;public void deprecated(String msg, Object... params) {_        deprecated(THREAD_CONTEXT, msg, params)__    };logs,a,deprecation,message,adding,a,formatted,warning,message,as,a,response,header,on,the,thread,context;public,void,deprecated,string,msg,object,params,deprecated,msg,params
DeprecationLogger -> public void deprecated(String msg, Object... params);1531179852;Logs a deprecation message, adding a formatted warning message as a response header on the thread context.;public void deprecated(String msg, Object... params) {_        deprecated(THREAD_CONTEXT, msg, params)__    };logs,a,deprecation,message,adding,a,formatted,warning,message,as,a,response,header,on,the,thread,context;public,void,deprecated,string,msg,object,params,deprecated,msg,params
DeprecationLogger -> public void deprecated(String msg, Object... params);1547135080;Logs a deprecation message, adding a formatted warning message as a response header on the thread context.;public void deprecated(String msg, Object... params) {_        deprecated(THREAD_CONTEXT, msg, params)__    };logs,a,deprecation,message,adding,a,formatted,warning,message,as,a,response,header,on,the,thread,context;public,void,deprecated,string,msg,object,params,deprecated,msg,params
DeprecationLogger -> public void deprecated(String msg, Object... params);1547847745;Logs a deprecation message, adding a formatted warning message as a response header on the thread context.;public void deprecated(String msg, Object... params) {_        deprecated(THREAD_CONTEXT, msg, params)__    };logs,a,deprecation,message,adding,a,formatted,warning,message,as,a,response,header,on,the,thread,context;public,void,deprecated,string,msg,object,params,deprecated,msg,params
DeprecationLogger -> public void deprecated(String msg, Object... params);1548178164;Logs a deprecation message, adding a formatted warning message as a response header on the thread context.;public void deprecated(String msg, Object... params) {_        deprecated(THREAD_CONTEXT, msg, params)__    };logs,a,deprecation,message,adding,a,formatted,warning,message,as,a,response,header,on,the,thread,context;public,void,deprecated,string,msg,object,params,deprecated,msg,params
DeprecationLogger -> public void deprecated(String msg, Object... params);1548337164;Logs a deprecation message, adding a formatted warning message as a response header on the thread context.;public void deprecated(String msg, Object... params) {_        deprecated(THREAD_CONTEXT, msg, params)__    };logs,a,deprecation,message,adding,a,formatted,warning,message,as,a,response,header,on,the,thread,context;public,void,deprecated,string,msg,object,params,deprecated,msg,params
DeprecationLogger -> public void deprecated(String msg, Object... params);1550865908;Logs a deprecation message, adding a formatted warning message as a response header on the thread context.;public void deprecated(String msg, Object... params) {_        deprecated(THREAD_CONTEXT, msg, params)__    };logs,a,deprecation,message,adding,a,formatted,warning,message,as,a,response,header,on,the,thread,context;public,void,deprecated,string,msg,object,params,deprecated,msg,params
DeprecationLogger -> static String escapeBackslashesAndQuotes(final String s);1524684173;Escape backslashes and quotes in the specified string.__@param s the string to escape_@return the escaped string;static String escapeBackslashesAndQuotes(final String s) {_        return s.replaceAll("([\"\\\\])", "\\\\$1")__    };escape,backslashes,and,quotes,in,the,specified,string,param,s,the,string,to,escape,return,the,escaped,string;static,string,escape,backslashes,and,quotes,final,string,s,return,s,replace,all,1
DeprecationLogger -> static String escapeBackslashesAndQuotes(final String s);1528762805;Escape backslashes and quotes in the specified string.__@param s the string to escape_@return the escaped string;static String escapeBackslashesAndQuotes(final String s) {_        return s.replaceAll("([\"\\\\])", "\\\\$1")__    };escape,backslashes,and,quotes,in,the,specified,string,param,s,the,string,to,escape,return,the,escaped,string;static,string,escape,backslashes,and,quotes,final,string,s,return,s,replace,all,1
DeprecationLogger -> static String escapeBackslashesAndQuotes(final String s);1531179852;Escape backslashes and quotes in the specified string.__@param s the string to escape_@return the escaped string;static String escapeBackslashesAndQuotes(final String s) {_        return s.replaceAll("([\"\\\\])", "\\\\$1")__    };escape,backslashes,and,quotes,in,the,specified,string,param,s,the,string,to,escape,return,the,escaped,string;static,string,escape,backslashes,and,quotes,final,string,s,return,s,replace,all,1
DeprecationLogger -> static String escapeBackslashesAndQuotes(final String s);1547135080;Escape backslashes and quotes in the specified string.__@param s the string to escape_@return the escaped string;static String escapeBackslashesAndQuotes(final String s) {_        return s.replaceAll("([\"\\\\])", "\\\\$1")__    };escape,backslashes,and,quotes,in,the,specified,string,param,s,the,string,to,escape,return,the,escaped,string;static,string,escape,backslashes,and,quotes,final,string,s,return,s,replace,all,1
DeprecationLogger -> static String escapeBackslashesAndQuotes(final String s);1547847745;Escape backslashes and quotes in the specified string.__@param s the string to escape_@return the escaped string;static String escapeBackslashesAndQuotes(final String s) {_        _        boolean escapingNeeded = false__        for (int i = 0_ i < s.length()_ i++) {_            final char c = s.charAt(i)__            if (c == '\\' || c == '"') {_                escapingNeeded = true__                break__            }_        }__        if (escapingNeeded) {_            final StringBuilder sb = new StringBuilder()__            for (final char c : s.toCharArray()) {_                if (c == '\\' || c == '"') {_                    sb.append("\\")__                }_                sb.append(c)__            }_            return sb.toString()__        } else {_            return s__        }_    };escape,backslashes,and,quotes,in,the,specified,string,param,s,the,string,to,escape,return,the,escaped,string;static,string,escape,backslashes,and,quotes,final,string,s,boolean,escaping,needed,false,for,int,i,0,i,s,length,i,final,char,c,s,char,at,i,if,c,c,escaping,needed,true,break,if,escaping,needed,final,string,builder,sb,new,string,builder,for,final,char,c,s,to,char,array,if,c,c,sb,append,sb,append,c,return,sb,to,string,else,return,s
DeprecationLogger -> static String escapeBackslashesAndQuotes(final String s);1548178164;Escape backslashes and quotes in the specified string.__@param s the string to escape_@return the escaped string;static String escapeBackslashesAndQuotes(final String s) {_        _        boolean escapingNeeded = false__        for (int i = 0_ i < s.length()_ i++) {_            final char c = s.charAt(i)__            if (c == '\\' || c == '"') {_                escapingNeeded = true__                break__            }_        }__        if (escapingNeeded) {_            final StringBuilder sb = new StringBuilder()__            for (final char c : s.toCharArray()) {_                if (c == '\\' || c == '"') {_                    sb.append("\\")__                }_                sb.append(c)__            }_            return sb.toString()__        } else {_            return s__        }_    };escape,backslashes,and,quotes,in,the,specified,string,param,s,the,string,to,escape,return,the,escaped,string;static,string,escape,backslashes,and,quotes,final,string,s,boolean,escaping,needed,false,for,int,i,0,i,s,length,i,final,char,c,s,char,at,i,if,c,c,escaping,needed,true,break,if,escaping,needed,final,string,builder,sb,new,string,builder,for,final,char,c,s,to,char,array,if,c,c,sb,append,sb,append,c,return,sb,to,string,else,return,s
DeprecationLogger -> static String escapeBackslashesAndQuotes(final String s);1548337164;Escape backslashes and quotes in the specified string.__@param s the string to escape_@return the escaped string;static String escapeBackslashesAndQuotes(final String s) {_        _        boolean escapingNeeded = false__        for (int i = 0_ i < s.length()_ i++) {_            final char c = s.charAt(i)__            if (c == '\\' || c == '"') {_                escapingNeeded = true__                break__            }_        }__        if (escapingNeeded) {_            final StringBuilder sb = new StringBuilder()__            for (final char c : s.toCharArray()) {_                if (c == '\\' || c == '"') {_                    sb.append("\\")__                }_                sb.append(c)__            }_            return sb.toString()__        } else {_            return s__        }_    };escape,backslashes,and,quotes,in,the,specified,string,param,s,the,string,to,escape,return,the,escaped,string;static,string,escape,backslashes,and,quotes,final,string,s,boolean,escaping,needed,false,for,int,i,0,i,s,length,i,final,char,c,s,char,at,i,if,c,c,escaping,needed,true,break,if,escaping,needed,final,string,builder,sb,new,string,builder,for,final,char,c,s,to,char,array,if,c,c,sb,append,sb,append,c,return,sb,to,string,else,return,s
DeprecationLogger -> static String escapeBackslashesAndQuotes(final String s);1550865908;Escape backslashes and quotes in the specified string.__@param s the string to escape_@return the escaped string;static String escapeBackslashesAndQuotes(final String s) {_        _        boolean escapingNeeded = false__        for (int i = 0_ i < s.length()_ i++) {_            final char c = s.charAt(i)__            if (c == '\\' || c == '"') {_                escapingNeeded = true__                break__            }_        }__        if (escapingNeeded) {_            final StringBuilder sb = new StringBuilder()__            for (final char c : s.toCharArray()) {_                if (c == '\\' || c == '"') {_                    sb.append("\\")__                }_                sb.append(c)__            }_            return sb.toString()__        } else {_            return s__        }_    };escape,backslashes,and,quotes,in,the,specified,string,param,s,the,string,to,escape,return,the,escaped,string;static,string,escape,backslashes,and,quotes,final,string,s,boolean,escaping,needed,false,for,int,i,0,i,s,length,i,final,char,c,s,char,at,i,if,c,c,escaping,needed,true,break,if,escaping,needed,final,string,builder,sb,new,string,builder,for,final,char,c,s,to,char,array,if,c,c,sb,append,sb,append,c,return,sb,to,string,else,return,s
DeprecationLogger -> void deprecated(final Set<ThreadContext> threadContexts, final String message, final Object... params);1524684173;Logs a deprecated message to the deprecation log, as well as to the local {@link ThreadContext}.__@param threadContexts The node's {@link ThreadContext} (outside of concurrent tests, this should only ever have one context)._@param message The deprecation message._@param params The parameters used to fill in the message, if any exist.;void deprecated(final Set<ThreadContext> threadContexts, final String message, final Object... params) {_        deprecated(threadContexts, message, true, params)__    };logs,a,deprecated,message,to,the,deprecation,log,as,well,as,to,the,local,link,thread,context,param,thread,contexts,the,node,s,link,thread,context,outside,of,concurrent,tests,this,should,only,ever,have,one,context,param,message,the,deprecation,message,param,params,the,parameters,used,to,fill,in,the,message,if,any,exist;void,deprecated,final,set,thread,context,thread,contexts,final,string,message,final,object,params,deprecated,thread,contexts,message,true,params
DeprecationLogger -> void deprecated(final Set<ThreadContext> threadContexts, final String message, final Object... params);1528762805;Logs a deprecated message to the deprecation log, as well as to the local {@link ThreadContext}.__@param threadContexts The node's {@link ThreadContext} (outside of concurrent tests, this should only ever have one context)._@param message The deprecation message._@param params The parameters used to fill in the message, if any exist.;void deprecated(final Set<ThreadContext> threadContexts, final String message, final Object... params) {_        deprecated(threadContexts, message, true, params)__    };logs,a,deprecated,message,to,the,deprecation,log,as,well,as,to,the,local,link,thread,context,param,thread,contexts,the,node,s,link,thread,context,outside,of,concurrent,tests,this,should,only,ever,have,one,context,param,message,the,deprecation,message,param,params,the,parameters,used,to,fill,in,the,message,if,any,exist;void,deprecated,final,set,thread,context,thread,contexts,final,string,message,final,object,params,deprecated,thread,contexts,message,true,params
DeprecationLogger -> void deprecated(final Set<ThreadContext> threadContexts, final String message, final Object... params);1531179852;Logs a deprecated message to the deprecation log, as well as to the local {@link ThreadContext}.__@param threadContexts The node's {@link ThreadContext} (outside of concurrent tests, this should only ever have one context)._@param message The deprecation message._@param params The parameters used to fill in the message, if any exist.;void deprecated(final Set<ThreadContext> threadContexts, final String message, final Object... params) {_        deprecated(threadContexts, message, true, params)__    };logs,a,deprecated,message,to,the,deprecation,log,as,well,as,to,the,local,link,thread,context,param,thread,contexts,the,node,s,link,thread,context,outside,of,concurrent,tests,this,should,only,ever,have,one,context,param,message,the,deprecation,message,param,params,the,parameters,used,to,fill,in,the,message,if,any,exist;void,deprecated,final,set,thread,context,thread,contexts,final,string,message,final,object,params,deprecated,thread,contexts,message,true,params
DeprecationLogger -> void deprecated(final Set<ThreadContext> threadContexts, final String message, final Object... params);1547135080;Logs a deprecated message to the deprecation log, as well as to the local {@link ThreadContext}.__@param threadContexts The node's {@link ThreadContext} (outside of concurrent tests, this should only ever have one context)._@param message The deprecation message._@param params The parameters used to fill in the message, if any exist.;void deprecated(final Set<ThreadContext> threadContexts, final String message, final Object... params) {_        deprecated(threadContexts, message, true, params)__    };logs,a,deprecated,message,to,the,deprecation,log,as,well,as,to,the,local,link,thread,context,param,thread,contexts,the,node,s,link,thread,context,outside,of,concurrent,tests,this,should,only,ever,have,one,context,param,message,the,deprecation,message,param,params,the,parameters,used,to,fill,in,the,message,if,any,exist;void,deprecated,final,set,thread,context,thread,contexts,final,string,message,final,object,params,deprecated,thread,contexts,message,true,params
DeprecationLogger -> void deprecated(final Set<ThreadContext> threadContexts, final String message, final Object... params);1547847745;Logs a deprecated message to the deprecation log, as well as to the local {@link ThreadContext}.__@param threadContexts The node's {@link ThreadContext} (outside of concurrent tests, this should only ever have one context)._@param message The deprecation message._@param params The parameters used to fill in the message, if any exist.;void deprecated(final Set<ThreadContext> threadContexts, final String message, final Object... params) {_        deprecated(threadContexts, message, true, params)__    };logs,a,deprecated,message,to,the,deprecation,log,as,well,as,to,the,local,link,thread,context,param,thread,contexts,the,node,s,link,thread,context,outside,of,concurrent,tests,this,should,only,ever,have,one,context,param,message,the,deprecation,message,param,params,the,parameters,used,to,fill,in,the,message,if,any,exist;void,deprecated,final,set,thread,context,thread,contexts,final,string,message,final,object,params,deprecated,thread,contexts,message,true,params
DeprecationLogger -> void deprecated(final Set<ThreadContext> threadContexts, final String message, final Object... params);1548178164;Logs a deprecated message to the deprecation log, as well as to the local {@link ThreadContext}.__@param threadContexts The node's {@link ThreadContext} (outside of concurrent tests, this should only ever have one context)._@param message The deprecation message._@param params The parameters used to fill in the message, if any exist.;void deprecated(final Set<ThreadContext> threadContexts, final String message, final Object... params) {_        deprecated(threadContexts, message, true, params)__    };logs,a,deprecated,message,to,the,deprecation,log,as,well,as,to,the,local,link,thread,context,param,thread,contexts,the,node,s,link,thread,context,outside,of,concurrent,tests,this,should,only,ever,have,one,context,param,message,the,deprecation,message,param,params,the,parameters,used,to,fill,in,the,message,if,any,exist;void,deprecated,final,set,thread,context,thread,contexts,final,string,message,final,object,params,deprecated,thread,contexts,message,true,params
DeprecationLogger -> void deprecated(final Set<ThreadContext> threadContexts, final String message, final Object... params);1548337164;Logs a deprecated message to the deprecation log, as well as to the local {@link ThreadContext}.__@param threadContexts The node's {@link ThreadContext} (outside of concurrent tests, this should only ever have one context)._@param message The deprecation message._@param params The parameters used to fill in the message, if any exist.;void deprecated(final Set<ThreadContext> threadContexts, final String message, final Object... params) {_        deprecated(threadContexts, message, true, params)__    };logs,a,deprecated,message,to,the,deprecation,log,as,well,as,to,the,local,link,thread,context,param,thread,contexts,the,node,s,link,thread,context,outside,of,concurrent,tests,this,should,only,ever,have,one,context,param,message,the,deprecation,message,param,params,the,parameters,used,to,fill,in,the,message,if,any,exist;void,deprecated,final,set,thread,context,thread,contexts,final,string,message,final,object,params,deprecated,thread,contexts,message,true,params
DeprecationLogger -> void deprecated(final Set<ThreadContext> threadContexts, final String message, final Object... params);1550865908;Logs a deprecated message to the deprecation log, as well as to the local {@link ThreadContext}.__@param threadContexts The node's {@link ThreadContext} (outside of concurrent tests, this should only ever have one context)._@param message The deprecation message._@param params The parameters used to fill in the message, if any exist.;void deprecated(final Set<ThreadContext> threadContexts, final String message, final Object... params) {_        deprecated(threadContexts, message, true, params)__    };logs,a,deprecated,message,to,the,deprecation,log,as,well,as,to,the,local,link,thread,context,param,thread,contexts,the,node,s,link,thread,context,outside,of,concurrent,tests,this,should,only,ever,have,one,context,param,message,the,deprecation,message,param,params,the,parameters,used,to,fill,in,the,message,if,any,exist;void,deprecated,final,set,thread,context,thread,contexts,final,string,message,final,object,params,deprecated,thread,contexts,message,true,params
DeprecationLogger -> public static String extractWarningValueFromWarningHeader(final String s);1524684173;Extracts the warning value from the value of a warning header that is formatted according to RFC 7234. That is, given a string_{@code 299 Elasticsearch-6.0.0 "warning value" "Sat, 25 Feb 2017 10:27:43 GMT"}, the return value of this method would be {@code_warning value}.__@param s the value of a warning header formatted according to RFC 7234._@return the extracted warning value;public static String extractWarningValueFromWarningHeader(final String s) {_        _        final int firstQuote = s.indexOf('\"')__        final int lastQuote = s.lastIndexOf('\"')__        final int penultimateQuote = s.lastIndexOf('\"', lastQuote - 1)__        final String warningValue = s.substring(firstQuote + 1, penultimateQuote - 2)__        assert assertWarningValue(s, warningValue)__        return warningValue__    };extracts,the,warning,value,from,the,value,of,a,warning,header,that,is,formatted,according,to,rfc,7234,that,is,given,a,string,code,299,elasticsearch,6,0,0,warning,value,sat,25,feb,2017,10,27,43,gmt,the,return,value,of,this,method,would,be,code,warning,value,param,s,the,value,of,a,warning,header,formatted,according,to,rfc,7234,return,the,extracted,warning,value;public,static,string,extract,warning,value,from,warning,header,final,string,s,final,int,first,quote,s,index,of,final,int,last,quote,s,last,index,of,final,int,penultimate,quote,s,last,index,of,last,quote,1,final,string,warning,value,s,substring,first,quote,1,penultimate,quote,2,assert,assert,warning,value,s,warning,value,return,warning,value
DeprecationLogger -> public static String extractWarningValueFromWarningHeader(final String s);1528762805;Extracts the warning value from the value of a warning header that is formatted according to RFC 7234. That is, given a string_{@code 299 Elasticsearch-6.0.0 "warning value" "Sat, 25 Feb 2017 10:27:43 GMT"}, the return value of this method would be {@code_warning value}.__@param s the value of a warning header formatted according to RFC 7234._@return the extracted warning value;public static String extractWarningValueFromWarningHeader(final String s) {_        _        final int firstQuote = s.indexOf('\"')__        final int lastQuote = s.lastIndexOf('\"')__        final int penultimateQuote = s.lastIndexOf('\"', lastQuote - 1)__        final String warningValue = s.substring(firstQuote + 1, penultimateQuote - 2)__        assert assertWarningValue(s, warningValue)__        return warningValue__    };extracts,the,warning,value,from,the,value,of,a,warning,header,that,is,formatted,according,to,rfc,7234,that,is,given,a,string,code,299,elasticsearch,6,0,0,warning,value,sat,25,feb,2017,10,27,43,gmt,the,return,value,of,this,method,would,be,code,warning,value,param,s,the,value,of,a,warning,header,formatted,according,to,rfc,7234,return,the,extracted,warning,value;public,static,string,extract,warning,value,from,warning,header,final,string,s,final,int,first,quote,s,index,of,final,int,last,quote,s,last,index,of,final,int,penultimate,quote,s,last,index,of,last,quote,1,final,string,warning,value,s,substring,first,quote,1,penultimate,quote,2,assert,assert,warning,value,s,warning,value,return,warning,value
DeprecationLogger -> public static String extractWarningValueFromWarningHeader(final String s);1531179852;Extracts the warning value from the value of a warning header that is formatted according to RFC 7234. That is, given a string_{@code 299 Elasticsearch-6.0.0 "warning value" "Sat, 25 Feb 2017 10:27:43 GMT"}, the return value of this method would be {@code_warning value}.__@param s the value of a warning header formatted according to RFC 7234._@return the extracted warning value;public static String extractWarningValueFromWarningHeader(final String s) {_        _        final int firstQuote = s.indexOf('\"')__        final int lastQuote = s.lastIndexOf('\"')__        final int penultimateQuote = s.lastIndexOf('\"', lastQuote - 1)__        final String warningValue = s.substring(firstQuote + 1, penultimateQuote - 2)__        assert assertWarningValue(s, warningValue)__        return warningValue__    };extracts,the,warning,value,from,the,value,of,a,warning,header,that,is,formatted,according,to,rfc,7234,that,is,given,a,string,code,299,elasticsearch,6,0,0,warning,value,sat,25,feb,2017,10,27,43,gmt,the,return,value,of,this,method,would,be,code,warning,value,param,s,the,value,of,a,warning,header,formatted,according,to,rfc,7234,return,the,extracted,warning,value;public,static,string,extract,warning,value,from,warning,header,final,string,s,final,int,first,quote,s,index,of,final,int,last,quote,s,last,index,of,final,int,penultimate,quote,s,last,index,of,last,quote,1,final,string,warning,value,s,substring,first,quote,1,penultimate,quote,2,assert,assert,warning,value,s,warning,value,return,warning,value
DeprecationLogger -> public static String extractWarningValueFromWarningHeader(final String s);1547135080;Extracts the warning value from the value of a warning header that is formatted according to RFC 7234. That is, given a string_{@code 299 Elasticsearch-6.0.0 "warning value" "Sat, 25 Feb 2017 10:27:43 GMT"}, the return value of this method would be {@code_warning value}.__@param s the value of a warning header formatted according to RFC 7234._@return the extracted warning value;public static String extractWarningValueFromWarningHeader(final String s) {_        _        final int firstQuote = s.indexOf('\"')__        final int lastQuote = s.lastIndexOf('\"')__        final int penultimateQuote = s.lastIndexOf('\"', lastQuote - 1)__        final String warningValue = s.substring(firstQuote + 1, penultimateQuote - 2)__        assert assertWarningValue(s, warningValue)__        return warningValue__    };extracts,the,warning,value,from,the,value,of,a,warning,header,that,is,formatted,according,to,rfc,7234,that,is,given,a,string,code,299,elasticsearch,6,0,0,warning,value,sat,25,feb,2017,10,27,43,gmt,the,return,value,of,this,method,would,be,code,warning,value,param,s,the,value,of,a,warning,header,formatted,according,to,rfc,7234,return,the,extracted,warning,value;public,static,string,extract,warning,value,from,warning,header,final,string,s,final,int,first,quote,s,index,of,final,int,last,quote,s,last,index,of,final,int,penultimate,quote,s,last,index,of,last,quote,1,final,string,warning,value,s,substring,first,quote,1,penultimate,quote,2,assert,assert,warning,value,s,warning,value,return,warning,value
DeprecationLogger -> public static String extractWarningValueFromWarningHeader(final String s);1547847745;Extracts the warning value from the value of a warning header that is formatted according to RFC 7234. That is, given a string_{@code 299 Elasticsearch-6.0.0 "warning value" "Sat, 25 Feb 2017 10:27:43 GMT"}, the return value of this method would be {@code_warning value}.__@param s the value of a warning header formatted according to RFC 7234._@return the extracted warning value;public static String extractWarningValueFromWarningHeader(final String s) {_        _        final int firstQuote = s.indexOf('\"')__        final int lastQuote = s.lastIndexOf('\"')__        final int penultimateQuote = s.lastIndexOf('\"', lastQuote - 1)__        final String warningValue = s.substring(firstQuote + 1, penultimateQuote - 2)__        assert assertWarningValue(s, warningValue)__        return warningValue__    };extracts,the,warning,value,from,the,value,of,a,warning,header,that,is,formatted,according,to,rfc,7234,that,is,given,a,string,code,299,elasticsearch,6,0,0,warning,value,sat,25,feb,2017,10,27,43,gmt,the,return,value,of,this,method,would,be,code,warning,value,param,s,the,value,of,a,warning,header,formatted,according,to,rfc,7234,return,the,extracted,warning,value;public,static,string,extract,warning,value,from,warning,header,final,string,s,final,int,first,quote,s,index,of,final,int,last,quote,s,last,index,of,final,int,penultimate,quote,s,last,index,of,last,quote,1,final,string,warning,value,s,substring,first,quote,1,penultimate,quote,2,assert,assert,warning,value,s,warning,value,return,warning,value
DeprecationLogger -> public static String extractWarningValueFromWarningHeader(final String s);1548178164;Extracts the warning value from the value of a warning header that is formatted according to RFC 7234. That is, given a string_{@code 299 Elasticsearch-6.0.0 "warning value"}, the return value of this method would be {@code warning value}.__@param s the value of a warning header formatted according to RFC 7234._@return the extracted warning value;public static String extractWarningValueFromWarningHeader(final String s) {_        _        final int firstQuote = s.indexOf('\"')__        final int lastQuote = s.length() - 1__        final String warningValue = s.substring(firstQuote + 1, lastQuote)__        assert assertWarningValue(s, warningValue)__        return warningValue__    };extracts,the,warning,value,from,the,value,of,a,warning,header,that,is,formatted,according,to,rfc,7234,that,is,given,a,string,code,299,elasticsearch,6,0,0,warning,value,the,return,value,of,this,method,would,be,code,warning,value,param,s,the,value,of,a,warning,header,formatted,according,to,rfc,7234,return,the,extracted,warning,value;public,static,string,extract,warning,value,from,warning,header,final,string,s,final,int,first,quote,s,index,of,final,int,last,quote,s,length,1,final,string,warning,value,s,substring,first,quote,1,last,quote,assert,assert,warning,value,s,warning,value,return,warning,value
DeprecationLogger -> public static String extractWarningValueFromWarningHeader(final String s);1548337164;Extracts the warning value from the value of a warning header that is formatted according to RFC 7234. That is, given a string_{@code 299 Elasticsearch-6.0.0 "warning value"}, the return value of this method would be {@code warning value}.__@param s the value of a warning header formatted according to RFC 7234._@return the extracted warning value;public static String extractWarningValueFromWarningHeader(final String s) {_        _        final int firstQuote = s.indexOf('\"')__        final int lastQuote = s.length() - 1__        final String warningValue = s.substring(firstQuote + 1, lastQuote)__        assert assertWarningValue(s, warningValue)__        return warningValue__    };extracts,the,warning,value,from,the,value,of,a,warning,header,that,is,formatted,according,to,rfc,7234,that,is,given,a,string,code,299,elasticsearch,6,0,0,warning,value,the,return,value,of,this,method,would,be,code,warning,value,param,s,the,value,of,a,warning,header,formatted,according,to,rfc,7234,return,the,extracted,warning,value;public,static,string,extract,warning,value,from,warning,header,final,string,s,final,int,first,quote,s,index,of,final,int,last,quote,s,length,1,final,string,warning,value,s,substring,first,quote,1,last,quote,assert,assert,warning,value,s,warning,value,return,warning,value
DeprecationLogger -> public static String extractWarningValueFromWarningHeader(final String s);1550865908;Extracts the warning value from the value of a warning header that is formatted according to RFC 7234. That is, given a string_{@code 299 Elasticsearch-6.0.0 "warning value"}, the return value of this method would be {@code warning value}.__@param s the value of a warning header formatted according to RFC 7234._@return the extracted warning value;public static String extractWarningValueFromWarningHeader(final String s) {_        _        final int firstQuote = s.indexOf('\"')__        final int lastQuote = s.length() - 1__        final String warningValue = s.substring(firstQuote + 1, lastQuote)__        assert assertWarningValue(s, warningValue)__        return warningValue__    };extracts,the,warning,value,from,the,value,of,a,warning,header,that,is,formatted,according,to,rfc,7234,that,is,given,a,string,code,299,elasticsearch,6,0,0,warning,value,the,return,value,of,this,method,would,be,code,warning,value,param,s,the,value,of,a,warning,header,formatted,according,to,rfc,7234,return,the,extracted,warning,value;public,static,string,extract,warning,value,from,warning,header,final,string,s,final,int,first,quote,s,index,of,final,int,last,quote,s,length,1,final,string,warning,value,s,substring,first,quote,1,last,quote,assert,assert,warning,value,s,warning,value,return,warning,value
DeprecationLogger -> public static String escapeAndEncode(final String s);1524684173;Escape and encode a string as a valid RFC 7230 quoted-string.__@param s the string to escape and encode_@return the escaped and encoded string;public static String escapeAndEncode(final String s) {_        return encode(escapeBackslashesAndQuotes(s))__    };escape,and,encode,a,string,as,a,valid,rfc,7230,quoted,string,param,s,the,string,to,escape,and,encode,return,the,escaped,and,encoded,string;public,static,string,escape,and,encode,final,string,s,return,encode,escape,backslashes,and,quotes,s
DeprecationLogger -> public static String escapeAndEncode(final String s);1528762805;Escape and encode a string as a valid RFC 7230 quoted-string.__@param s the string to escape and encode_@return the escaped and encoded string;public static String escapeAndEncode(final String s) {_        return encode(escapeBackslashesAndQuotes(s))__    };escape,and,encode,a,string,as,a,valid,rfc,7230,quoted,string,param,s,the,string,to,escape,and,encode,return,the,escaped,and,encoded,string;public,static,string,escape,and,encode,final,string,s,return,encode,escape,backslashes,and,quotes,s
DeprecationLogger -> public static String escapeAndEncode(final String s);1531179852;Escape and encode a string as a valid RFC 7230 quoted-string.__@param s the string to escape and encode_@return the escaped and encoded string;public static String escapeAndEncode(final String s) {_        return encode(escapeBackslashesAndQuotes(s))__    };escape,and,encode,a,string,as,a,valid,rfc,7230,quoted,string,param,s,the,string,to,escape,and,encode,return,the,escaped,and,encoded,string;public,static,string,escape,and,encode,final,string,s,return,encode,escape,backslashes,and,quotes,s
DeprecationLogger -> public static String escapeAndEncode(final String s);1547135080;Escape and encode a string as a valid RFC 7230 quoted-string.__@param s the string to escape and encode_@return the escaped and encoded string;public static String escapeAndEncode(final String s) {_        return encode(escapeBackslashesAndQuotes(s))__    };escape,and,encode,a,string,as,a,valid,rfc,7230,quoted,string,param,s,the,string,to,escape,and,encode,return,the,escaped,and,encoded,string;public,static,string,escape,and,encode,final,string,s,return,encode,escape,backslashes,and,quotes,s
DeprecationLogger -> public static String escapeAndEncode(final String s);1547847745;Escape and encode a string as a valid RFC 7230 quoted-string.__@param s the string to escape and encode_@return the escaped and encoded string;public static String escapeAndEncode(final String s) {_        return encode(escapeBackslashesAndQuotes(s))__    };escape,and,encode,a,string,as,a,valid,rfc,7230,quoted,string,param,s,the,string,to,escape,and,encode,return,the,escaped,and,encoded,string;public,static,string,escape,and,encode,final,string,s,return,encode,escape,backslashes,and,quotes,s
DeprecationLogger -> public static String escapeAndEncode(final String s);1548178164;Escape and encode a string as a valid RFC 7230 quoted-string.__@param s the string to escape and encode_@return the escaped and encoded string;public static String escapeAndEncode(final String s) {_        return encode(escapeBackslashesAndQuotes(s))__    };escape,and,encode,a,string,as,a,valid,rfc,7230,quoted,string,param,s,the,string,to,escape,and,encode,return,the,escaped,and,encoded,string;public,static,string,escape,and,encode,final,string,s,return,encode,escape,backslashes,and,quotes,s
DeprecationLogger -> public static String escapeAndEncode(final String s);1548337164;Escape and encode a string as a valid RFC 7230 quoted-string.__@param s the string to escape and encode_@return the escaped and encoded string;public static String escapeAndEncode(final String s) {_        return encode(escapeBackslashesAndQuotes(s))__    };escape,and,encode,a,string,as,a,valid,rfc,7230,quoted,string,param,s,the,string,to,escape,and,encode,return,the,escaped,and,encoded,string;public,static,string,escape,and,encode,final,string,s,return,encode,escape,backslashes,and,quotes,s
DeprecationLogger -> public static String escapeAndEncode(final String s);1550865908;Escape and encode a string as a valid RFC 7230 quoted-string.__@param s the string to escape and encode_@return the escaped and encoded string;public static String escapeAndEncode(final String s) {_        return encode(escapeBackslashesAndQuotes(s))__    };escape,and,encode,a,string,as,a,valid,rfc,7230,quoted,string,param,s,the,string,to,escape,and,encode,return,the,escaped,and,encoded,string;public,static,string,escape,and,encode,final,string,s,return,encode,escape,backslashes,and,quotes,s
DeprecationLogger -> public static String formatWarning(final String s);1524684173;Format a warning string in the proper warning format by prepending a warn code, warn agent, wrapping the warning string in quotes,_and appending the RFC 7231 date.__@param s the warning string to format_@return a warning value formatted according to RFC 7234;public static String formatWarning(final String s) {_        return String.format(Locale.ROOT, WARNING_FORMAT, escapeAndEncode(s), RFC_7231_DATE_TIME.format(ZonedDateTime.now(GMT)))__    };format,a,warning,string,in,the,proper,warning,format,by,prepending,a,warn,code,warn,agent,wrapping,the,warning,string,in,quotes,and,appending,the,rfc,7231,date,param,s,the,warning,string,to,format,return,a,warning,value,formatted,according,to,rfc,7234;public,static,string,format,warning,final,string,s,return,string,format,locale,root,escape,and,encode,s,format,zoned,date,time,now,gmt
DeprecationLogger -> public static String formatWarning(final String s);1528762805;Format a warning string in the proper warning format by prepending a warn code, warn agent, wrapping the warning string in quotes,_and appending the RFC 7231 date.__@param s the warning string to format_@return a warning value formatted according to RFC 7234;public static String formatWarning(final String s) {_        return String.format(Locale.ROOT, WARNING_FORMAT, escapeAndEncode(s), RFC_7231_DATE_TIME.format(ZonedDateTime.now(GMT)))__    };format,a,warning,string,in,the,proper,warning,format,by,prepending,a,warn,code,warn,agent,wrapping,the,warning,string,in,quotes,and,appending,the,rfc,7231,date,param,s,the,warning,string,to,format,return,a,warning,value,formatted,according,to,rfc,7234;public,static,string,format,warning,final,string,s,return,string,format,locale,root,escape,and,encode,s,format,zoned,date,time,now,gmt
DeprecationLogger -> public static String formatWarning(final String s);1531179852;Format a warning string in the proper warning format by prepending a warn code, warn agent, wrapping the warning string in quotes,_and appending the RFC 7231 date.__@param s the warning string to format_@return a warning value formatted according to RFC 7234;public static String formatWarning(final String s) {_        return String.format(Locale.ROOT, WARNING_FORMAT, escapeAndEncode(s), RFC_7231_DATE_TIME.format(ZonedDateTime.now(GMT)))__    };format,a,warning,string,in,the,proper,warning,format,by,prepending,a,warn,code,warn,agent,wrapping,the,warning,string,in,quotes,and,appending,the,rfc,7231,date,param,s,the,warning,string,to,format,return,a,warning,value,formatted,according,to,rfc,7234;public,static,string,format,warning,final,string,s,return,string,format,locale,root,escape,and,encode,s,format,zoned,date,time,now,gmt
DeprecationLogger -> public static String formatWarning(final String s);1547135080;Format a warning string in the proper warning format by prepending a warn code, warn agent, wrapping the warning string in quotes,_and appending the RFC 7231 date.__@param s the warning string to format_@return a warning value formatted according to RFC 7234;public static String formatWarning(final String s) {_        return String.format(Locale.ROOT, WARNING_FORMAT, escapeAndEncode(s), RFC_7231_DATE_TIME.format(ZonedDateTime.now(GMT)))__    };format,a,warning,string,in,the,proper,warning,format,by,prepending,a,warn,code,warn,agent,wrapping,the,warning,string,in,quotes,and,appending,the,rfc,7231,date,param,s,the,warning,string,to,format,return,a,warning,value,formatted,according,to,rfc,7234;public,static,string,format,warning,final,string,s,return,string,format,locale,root,escape,and,encode,s,format,zoned,date,time,now,gmt
DeprecationLogger -> public static String formatWarning(final String s);1547847745;Format a warning string in the proper warning format by prepending a warn code, warn agent, wrapping the warning string in quotes,_and appending the RFC 7231 date.__@param s the warning string to format_@return a warning value formatted according to RFC 7234;public static String formatWarning(final String s) {_        return WARNING_PREFIX + " "_                + "\"" + escapeAndEncode(s) + "\"" + " "_                + "\"" + STARTUP_TIME + "\""__    };format,a,warning,string,in,the,proper,warning,format,by,prepending,a,warn,code,warn,agent,wrapping,the,warning,string,in,quotes,and,appending,the,rfc,7231,date,param,s,the,warning,string,to,format,return,a,warning,value,formatted,according,to,rfc,7234;public,static,string,format,warning,final,string,s,return,escape,and,encode,s
DeprecationLogger -> public static String formatWarning(final String s);1548178164;Format a warning string in the proper warning format by prepending a warn code, warn agent, wrapping the warning string in quotes,_and appending the RFC 7231 date.__@param s the warning string to format_@return a warning value formatted according to RFC 7234;public static String formatWarning(final String s) {_        return WARNING_PREFIX + " " + "\"" + escapeAndEncode(s) + "\""__    };format,a,warning,string,in,the,proper,warning,format,by,prepending,a,warn,code,warn,agent,wrapping,the,warning,string,in,quotes,and,appending,the,rfc,7231,date,param,s,the,warning,string,to,format,return,a,warning,value,formatted,according,to,rfc,7234;public,static,string,format,warning,final,string,s,return,escape,and,encode,s
DeprecationLogger -> public static String formatWarning(final String s);1548337164;Format a warning string in the proper warning format by prepending a warn code, warn agent, wrapping the warning string in quotes,_and appending the RFC 7231 date.__@param s the warning string to format_@return a warning value formatted according to RFC 7234;public static String formatWarning(final String s) {_        return WARNING_PREFIX + " " + "\"" + escapeAndEncode(s) + "\""__    };format,a,warning,string,in,the,proper,warning,format,by,prepending,a,warn,code,warn,agent,wrapping,the,warning,string,in,quotes,and,appending,the,rfc,7231,date,param,s,the,warning,string,to,format,return,a,warning,value,formatted,according,to,rfc,7234;public,static,string,format,warning,final,string,s,return,escape,and,encode,s
DeprecationLogger -> public static String formatWarning(final String s);1550865908;Format a warning string in the proper warning format by prepending a warn code, warn agent, wrapping the warning string in quotes,_and appending the RFC 7231 date.__@param s the warning string to format_@return a warning value formatted according to RFC 7234;public static String formatWarning(final String s) {_        _        int length = WARNING_PREFIX.length() + s.length() + 3__        final StringBuilder sb = new StringBuilder(length)__        sb.append(WARNING_PREFIX).append(" \"").append(escapeAndEncode(s)).append("\"")__        return sb.toString()__    };format,a,warning,string,in,the,proper,warning,format,by,prepending,a,warn,code,warn,agent,wrapping,the,warning,string,in,quotes,and,appending,the,rfc,7231,date,param,s,the,warning,string,to,format,return,a,warning,value,formatted,according,to,rfc,7234;public,static,string,format,warning,final,string,s,int,length,length,s,length,3,final,string,builder,sb,new,string,builder,length,sb,append,append,append,escape,and,encode,s,append,return,sb,to,string
DeprecationLogger -> public DeprecationLogger(Logger parentLogger);1524684173;Creates a new deprecation logger based on the parent logger. Automatically_prefixes the logger name with "deprecation", if it starts with "org.elasticsearch.",_it replaces "org.elasticsearch" with "org.elasticsearch.deprecation" to maintain_the "org.elasticsearch" namespace.;public DeprecationLogger(Logger parentLogger) {_        String name = parentLogger.getName()__        if (name.startsWith("org.elasticsearch")) {_            name = name.replace("org.elasticsearch.", "org.elasticsearch.deprecation.")__        } else {_            name = "deprecation." + name__        }_        this.logger = LogManager.getLogger(name)__    };creates,a,new,deprecation,logger,based,on,the,parent,logger,automatically,prefixes,the,logger,name,with,deprecation,if,it,starts,with,org,elasticsearch,it,replaces,org,elasticsearch,with,org,elasticsearch,deprecation,to,maintain,the,org,elasticsearch,namespace;public,deprecation,logger,logger,parent,logger,string,name,parent,logger,get,name,if,name,starts,with,org,elasticsearch,name,name,replace,org,elasticsearch,org,elasticsearch,deprecation,else,name,deprecation,name,this,logger,log,manager,get,logger,name
DeprecationLogger -> public DeprecationLogger(Logger parentLogger);1528762805;Creates a new deprecation logger based on the parent logger. Automatically_prefixes the logger name with "deprecation", if it starts with "org.elasticsearch.",_it replaces "org.elasticsearch" with "org.elasticsearch.deprecation" to maintain_the "org.elasticsearch" namespace.;public DeprecationLogger(Logger parentLogger) {_        String name = parentLogger.getName()__        if (name.startsWith("org.elasticsearch")) {_            name = name.replace("org.elasticsearch.", "org.elasticsearch.deprecation.")__        } else {_            name = "deprecation." + name__        }_        this.logger = LogManager.getLogger(name)__    };creates,a,new,deprecation,logger,based,on,the,parent,logger,automatically,prefixes,the,logger,name,with,deprecation,if,it,starts,with,org,elasticsearch,it,replaces,org,elasticsearch,with,org,elasticsearch,deprecation,to,maintain,the,org,elasticsearch,namespace;public,deprecation,logger,logger,parent,logger,string,name,parent,logger,get,name,if,name,starts,with,org,elasticsearch,name,name,replace,org,elasticsearch,org,elasticsearch,deprecation,else,name,deprecation,name,this,logger,log,manager,get,logger,name
DeprecationLogger -> public DeprecationLogger(Logger parentLogger);1531179852;Creates a new deprecation logger based on the parent logger. Automatically_prefixes the logger name with "deprecation", if it starts with "org.elasticsearch.",_it replaces "org.elasticsearch" with "org.elasticsearch.deprecation" to maintain_the "org.elasticsearch" namespace.;public DeprecationLogger(Logger parentLogger) {_        String name = parentLogger.getName()__        if (name.startsWith("org.elasticsearch")) {_            name = name.replace("org.elasticsearch.", "org.elasticsearch.deprecation.")__        } else {_            name = "deprecation." + name__        }_        this.logger = LogManager.getLogger(name)__    };creates,a,new,deprecation,logger,based,on,the,parent,logger,automatically,prefixes,the,logger,name,with,deprecation,if,it,starts,with,org,elasticsearch,it,replaces,org,elasticsearch,with,org,elasticsearch,deprecation,to,maintain,the,org,elasticsearch,namespace;public,deprecation,logger,logger,parent,logger,string,name,parent,logger,get,name,if,name,starts,with,org,elasticsearch,name,name,replace,org,elasticsearch,org,elasticsearch,deprecation,else,name,deprecation,name,this,logger,log,manager,get,logger,name
DeprecationLogger -> public DeprecationLogger(Logger parentLogger);1547135080;Creates a new deprecation logger based on the parent logger. Automatically_prefixes the logger name with "deprecation", if it starts with "org.elasticsearch.",_it replaces "org.elasticsearch" with "org.elasticsearch.deprecation" to maintain_the "org.elasticsearch" namespace.;public DeprecationLogger(Logger parentLogger) {_        String name = parentLogger.getName()__        if (name.startsWith("org.elasticsearch")) {_            name = name.replace("org.elasticsearch.", "org.elasticsearch.deprecation.")__        } else {_            name = "deprecation." + name__        }_        this.logger = LogManager.getLogger(name)__    };creates,a,new,deprecation,logger,based,on,the,parent,logger,automatically,prefixes,the,logger,name,with,deprecation,if,it,starts,with,org,elasticsearch,it,replaces,org,elasticsearch,with,org,elasticsearch,deprecation,to,maintain,the,org,elasticsearch,namespace;public,deprecation,logger,logger,parent,logger,string,name,parent,logger,get,name,if,name,starts,with,org,elasticsearch,name,name,replace,org,elasticsearch,org,elasticsearch,deprecation,else,name,deprecation,name,this,logger,log,manager,get,logger,name
DeprecationLogger -> public DeprecationLogger(Logger parentLogger);1547847745;Creates a new deprecation logger based on the parent logger. Automatically_prefixes the logger name with "deprecation", if it starts with "org.elasticsearch.",_it replaces "org.elasticsearch" with "org.elasticsearch.deprecation" to maintain_the "org.elasticsearch" namespace.;public DeprecationLogger(Logger parentLogger) {_        String name = parentLogger.getName()__        if (name.startsWith("org.elasticsearch")) {_            name = name.replace("org.elasticsearch.", "org.elasticsearch.deprecation.")__        } else {_            name = "deprecation." + name__        }_        this.logger = LogManager.getLogger(name)__    };creates,a,new,deprecation,logger,based,on,the,parent,logger,automatically,prefixes,the,logger,name,with,deprecation,if,it,starts,with,org,elasticsearch,it,replaces,org,elasticsearch,with,org,elasticsearch,deprecation,to,maintain,the,org,elasticsearch,namespace;public,deprecation,logger,logger,parent,logger,string,name,parent,logger,get,name,if,name,starts,with,org,elasticsearch,name,name,replace,org,elasticsearch,org,elasticsearch,deprecation,else,name,deprecation,name,this,logger,log,manager,get,logger,name
DeprecationLogger -> public DeprecationLogger(Logger parentLogger);1548178164;Creates a new deprecation logger based on the parent logger. Automatically_prefixes the logger name with "deprecation", if it starts with "org.elasticsearch.",_it replaces "org.elasticsearch" with "org.elasticsearch.deprecation" to maintain_the "org.elasticsearch" namespace.;public DeprecationLogger(Logger parentLogger) {_        String name = parentLogger.getName()__        if (name.startsWith("org.elasticsearch")) {_            name = name.replace("org.elasticsearch.", "org.elasticsearch.deprecation.")__        } else {_            name = "deprecation." + name__        }_        this.logger = LogManager.getLogger(name)__    };creates,a,new,deprecation,logger,based,on,the,parent,logger,automatically,prefixes,the,logger,name,with,deprecation,if,it,starts,with,org,elasticsearch,it,replaces,org,elasticsearch,with,org,elasticsearch,deprecation,to,maintain,the,org,elasticsearch,namespace;public,deprecation,logger,logger,parent,logger,string,name,parent,logger,get,name,if,name,starts,with,org,elasticsearch,name,name,replace,org,elasticsearch,org,elasticsearch,deprecation,else,name,deprecation,name,this,logger,log,manager,get,logger,name
DeprecationLogger -> public DeprecationLogger(Logger parentLogger);1548337164;Creates a new deprecation logger based on the parent logger. Automatically_prefixes the logger name with "deprecation", if it starts with "org.elasticsearch.",_it replaces "org.elasticsearch" with "org.elasticsearch.deprecation" to maintain_the "org.elasticsearch" namespace.;public DeprecationLogger(Logger parentLogger) {_        String name = parentLogger.getName()__        if (name.startsWith("org.elasticsearch")) {_            name = name.replace("org.elasticsearch.", "org.elasticsearch.deprecation.")__        } else {_            name = "deprecation." + name__        }_        this.logger = LogManager.getLogger(name)__    };creates,a,new,deprecation,logger,based,on,the,parent,logger,automatically,prefixes,the,logger,name,with,deprecation,if,it,starts,with,org,elasticsearch,it,replaces,org,elasticsearch,with,org,elasticsearch,deprecation,to,maintain,the,org,elasticsearch,namespace;public,deprecation,logger,logger,parent,logger,string,name,parent,logger,get,name,if,name,starts,with,org,elasticsearch,name,name,replace,org,elasticsearch,org,elasticsearch,deprecation,else,name,deprecation,name,this,logger,log,manager,get,logger,name
DeprecationLogger -> public DeprecationLogger(Logger parentLogger);1550865908;Creates a new deprecation logger based on the parent logger. Automatically_prefixes the logger name with "deprecation", if it starts with "org.elasticsearch.",_it replaces "org.elasticsearch" with "org.elasticsearch.deprecation" to maintain_the "org.elasticsearch" namespace.;public DeprecationLogger(Logger parentLogger) {_        String name = parentLogger.getName()__        if (name.startsWith("org.elasticsearch")) {_            name = name.replace("org.elasticsearch.", "org.elasticsearch.deprecation.")__        } else {_            name = "deprecation." + name__        }_        this.logger = LogManager.getLogger(name)__    };creates,a,new,deprecation,logger,based,on,the,parent,logger,automatically,prefixes,the,logger,name,with,deprecation,if,it,starts,with,org,elasticsearch,it,replaces,org,elasticsearch,with,org,elasticsearch,deprecation,to,maintain,the,org,elasticsearch,namespace;public,deprecation,logger,logger,parent,logger,string,name,parent,logger,get,name,if,name,starts,with,org,elasticsearch,name,name,replace,org,elasticsearch,org,elasticsearch,deprecation,else,name,deprecation,name,this,logger,log,manager,get,logger,name
DeprecationLogger -> public static void removeThreadContext(ThreadContext threadContext);1524684173;Remove the {@link ThreadContext} used to add deprecation headers to network responses._<p>_This is expected to <em>only</em> be invoked by the {@code Node}'s {@code close} method (therefore once outside of tests).__@param threadContext The thread context owned by the {@code ThreadPool} (and implicitly a {@code Node})_@throws IllegalStateException if this {@code threadContext} is unknown (and presumably already unset before);public static void removeThreadContext(ThreadContext threadContext) {_        assert threadContext != null___        _        if (THREAD_CONTEXT.remove(threadContext) == false) {_            throw new IllegalStateException("Removing unknown ThreadContext not allowed!")__        }_    };remove,the,link,thread,context,used,to,add,deprecation,headers,to,network,responses,p,this,is,expected,to,em,only,em,be,invoked,by,the,code,node,s,code,close,method,therefore,once,outside,of,tests,param,thread,context,the,thread,context,owned,by,the,code,thread,pool,and,implicitly,a,code,node,throws,illegal,state,exception,if,this,code,thread,context,is,unknown,and,presumably,already,unset,before;public,static,void,remove,thread,context,thread,context,thread,context,assert,thread,context,null,if,remove,thread,context,false,throw,new,illegal,state,exception,removing,unknown,thread,context,not,allowed
DeprecationLogger -> public static void removeThreadContext(ThreadContext threadContext);1528762805;Remove the {@link ThreadContext} used to add deprecation headers to network responses._<p>_This is expected to <em>only</em> be invoked by the {@code Node}'s {@code close} method (therefore once outside of tests).__@param threadContext The thread context owned by the {@code ThreadPool} (and implicitly a {@code Node})_@throws IllegalStateException if this {@code threadContext} is unknown (and presumably already unset before);public static void removeThreadContext(ThreadContext threadContext) {_        assert threadContext != null___        _        if (THREAD_CONTEXT.remove(threadContext) == false) {_            throw new IllegalStateException("Removing unknown ThreadContext not allowed!")__        }_    };remove,the,link,thread,context,used,to,add,deprecation,headers,to,network,responses,p,this,is,expected,to,em,only,em,be,invoked,by,the,code,node,s,code,close,method,therefore,once,outside,of,tests,param,thread,context,the,thread,context,owned,by,the,code,thread,pool,and,implicitly,a,code,node,throws,illegal,state,exception,if,this,code,thread,context,is,unknown,and,presumably,already,unset,before;public,static,void,remove,thread,context,thread,context,thread,context,assert,thread,context,null,if,remove,thread,context,false,throw,new,illegal,state,exception,removing,unknown,thread,context,not,allowed
DeprecationLogger -> public static void removeThreadContext(ThreadContext threadContext);1531179852;Remove the {@link ThreadContext} used to add deprecation headers to network responses._<p>_This is expected to <em>only</em> be invoked by the {@code Node}'s {@code close} method (therefore once outside of tests).__@param threadContext The thread context owned by the {@code ThreadPool} (and implicitly a {@code Node})_@throws IllegalStateException if this {@code threadContext} is unknown (and presumably already unset before);public static void removeThreadContext(ThreadContext threadContext) {_        assert threadContext != null___        _        if (THREAD_CONTEXT.remove(threadContext) == false) {_            throw new IllegalStateException("Removing unknown ThreadContext not allowed!")__        }_    };remove,the,link,thread,context,used,to,add,deprecation,headers,to,network,responses,p,this,is,expected,to,em,only,em,be,invoked,by,the,code,node,s,code,close,method,therefore,once,outside,of,tests,param,thread,context,the,thread,context,owned,by,the,code,thread,pool,and,implicitly,a,code,node,throws,illegal,state,exception,if,this,code,thread,context,is,unknown,and,presumably,already,unset,before;public,static,void,remove,thread,context,thread,context,thread,context,assert,thread,context,null,if,remove,thread,context,false,throw,new,illegal,state,exception,removing,unknown,thread,context,not,allowed
DeprecationLogger -> public static void removeThreadContext(ThreadContext threadContext);1547135080;Remove the {@link ThreadContext} used to add deprecation headers to network responses._<p>_This is expected to <em>only</em> be invoked by the {@code Node}'s {@code close} method (therefore once outside of tests).__@param threadContext The thread context owned by the {@code ThreadPool} (and implicitly a {@code Node})_@throws IllegalStateException if this {@code threadContext} is unknown (and presumably already unset before);public static void removeThreadContext(ThreadContext threadContext) {_        assert threadContext != null___        _        if (THREAD_CONTEXT.remove(threadContext) == false) {_            throw new IllegalStateException("Removing unknown ThreadContext not allowed!")__        }_    };remove,the,link,thread,context,used,to,add,deprecation,headers,to,network,responses,p,this,is,expected,to,em,only,em,be,invoked,by,the,code,node,s,code,close,method,therefore,once,outside,of,tests,param,thread,context,the,thread,context,owned,by,the,code,thread,pool,and,implicitly,a,code,node,throws,illegal,state,exception,if,this,code,thread,context,is,unknown,and,presumably,already,unset,before;public,static,void,remove,thread,context,thread,context,thread,context,assert,thread,context,null,if,remove,thread,context,false,throw,new,illegal,state,exception,removing,unknown,thread,context,not,allowed
DeprecationLogger -> public static void removeThreadContext(ThreadContext threadContext);1547847745;Remove the {@link ThreadContext} used to add deprecation headers to network responses._<p>_This is expected to <em>only</em> be invoked by the {@code Node}'s {@code close} method (therefore once outside of tests).__@param threadContext The thread context owned by the {@code ThreadPool} (and implicitly a {@code Node})_@throws IllegalStateException if this {@code threadContext} is unknown (and presumably already unset before);public static void removeThreadContext(ThreadContext threadContext) {_        assert threadContext != null___        _        if (THREAD_CONTEXT.remove(threadContext) == false) {_            throw new IllegalStateException("Removing unknown ThreadContext not allowed!")__        }_    };remove,the,link,thread,context,used,to,add,deprecation,headers,to,network,responses,p,this,is,expected,to,em,only,em,be,invoked,by,the,code,node,s,code,close,method,therefore,once,outside,of,tests,param,thread,context,the,thread,context,owned,by,the,code,thread,pool,and,implicitly,a,code,node,throws,illegal,state,exception,if,this,code,thread,context,is,unknown,and,presumably,already,unset,before;public,static,void,remove,thread,context,thread,context,thread,context,assert,thread,context,null,if,remove,thread,context,false,throw,new,illegal,state,exception,removing,unknown,thread,context,not,allowed
DeprecationLogger -> public static void removeThreadContext(ThreadContext threadContext);1548178164;Remove the {@link ThreadContext} used to add deprecation headers to network responses._<p>_This is expected to <em>only</em> be invoked by the {@code Node}'s {@code close} method (therefore once outside of tests).__@param threadContext The thread context owned by the {@code ThreadPool} (and implicitly a {@code Node})_@throws IllegalStateException if this {@code threadContext} is unknown (and presumably already unset before);public static void removeThreadContext(ThreadContext threadContext) {_        assert threadContext != null___        _        if (THREAD_CONTEXT.remove(threadContext) == false) {_            throw new IllegalStateException("Removing unknown ThreadContext not allowed!")__        }_    };remove,the,link,thread,context,used,to,add,deprecation,headers,to,network,responses,p,this,is,expected,to,em,only,em,be,invoked,by,the,code,node,s,code,close,method,therefore,once,outside,of,tests,param,thread,context,the,thread,context,owned,by,the,code,thread,pool,and,implicitly,a,code,node,throws,illegal,state,exception,if,this,code,thread,context,is,unknown,and,presumably,already,unset,before;public,static,void,remove,thread,context,thread,context,thread,context,assert,thread,context,null,if,remove,thread,context,false,throw,new,illegal,state,exception,removing,unknown,thread,context,not,allowed
DeprecationLogger -> public static void removeThreadContext(ThreadContext threadContext);1548337164;Remove the {@link ThreadContext} used to add deprecation headers to network responses._<p>_This is expected to <em>only</em> be invoked by the {@code Node}'s {@code close} method (therefore once outside of tests).__@param threadContext The thread context owned by the {@code ThreadPool} (and implicitly a {@code Node})_@throws IllegalStateException if this {@code threadContext} is unknown (and presumably already unset before);public static void removeThreadContext(ThreadContext threadContext) {_        assert threadContext != null___        _        if (THREAD_CONTEXT.remove(threadContext) == false) {_            throw new IllegalStateException("Removing unknown ThreadContext not allowed!")__        }_    };remove,the,link,thread,context,used,to,add,deprecation,headers,to,network,responses,p,this,is,expected,to,em,only,em,be,invoked,by,the,code,node,s,code,close,method,therefore,once,outside,of,tests,param,thread,context,the,thread,context,owned,by,the,code,thread,pool,and,implicitly,a,code,node,throws,illegal,state,exception,if,this,code,thread,context,is,unknown,and,presumably,already,unset,before;public,static,void,remove,thread,context,thread,context,thread,context,assert,thread,context,null,if,remove,thread,context,false,throw,new,illegal,state,exception,removing,unknown,thread,context,not,allowed
DeprecationLogger -> public static void removeThreadContext(ThreadContext threadContext);1550865908;Remove the {@link ThreadContext} used to add deprecation headers to network responses._<p>_This is expected to <em>only</em> be invoked by the {@code Node}'s {@code close} method (therefore once outside of tests).__@param threadContext The thread context owned by the {@code ThreadPool} (and implicitly a {@code Node})_@throws IllegalStateException if this {@code threadContext} is unknown (and presumably already unset before);public static void removeThreadContext(ThreadContext threadContext) {_        assert threadContext != null___        _        if (THREAD_CONTEXT.remove(threadContext) == false) {_            throw new IllegalStateException("Removing unknown ThreadContext not allowed!")__        }_    };remove,the,link,thread,context,used,to,add,deprecation,headers,to,network,responses,p,this,is,expected,to,em,only,em,be,invoked,by,the,code,node,s,code,close,method,therefore,once,outside,of,tests,param,thread,context,the,thread,context,owned,by,the,code,thread,pool,and,implicitly,a,code,node,throws,illegal,state,exception,if,this,code,thread,context,is,unknown,and,presumably,already,unset,before;public,static,void,remove,thread,context,thread,context,thread,context,assert,thread,context,null,if,remove,thread,context,false,throw,new,illegal,state,exception,removing,unknown,thread,context,not,allowed
DeprecationLogger -> private static boolean assertWarningValue(final String s, final String warningValue);1524684173;Assert that the specified string has the warning value equal to the provided warning value.__@param s            the string representing a full warning header_@param warningValue the expected warning header_@return {@code true} if the specified string has the expected warning value;private static boolean assertWarningValue(final String s, final String warningValue) {_        final Matcher matcher = WARNING_HEADER_PATTERN.matcher(s)__        final boolean matches = matcher.matches()__        assert matches__        return matcher.group(1).equals(warningValue)__    };assert,that,the,specified,string,has,the,warning,value,equal,to,the,provided,warning,value,param,s,the,string,representing,a,full,warning,header,param,warning,value,the,expected,warning,header,return,code,true,if,the,specified,string,has,the,expected,warning,value;private,static,boolean,assert,warning,value,final,string,s,final,string,warning,value,final,matcher,matcher,matcher,s,final,boolean,matches,matcher,matches,assert,matches,return,matcher,group,1,equals,warning,value
DeprecationLogger -> private static boolean assertWarningValue(final String s, final String warningValue);1528762805;Assert that the specified string has the warning value equal to the provided warning value.__@param s            the string representing a full warning header_@param warningValue the expected warning header_@return {@code true} if the specified string has the expected warning value;private static boolean assertWarningValue(final String s, final String warningValue) {_        final Matcher matcher = WARNING_HEADER_PATTERN.matcher(s)__        final boolean matches = matcher.matches()__        assert matches__        return matcher.group(1).equals(warningValue)__    };assert,that,the,specified,string,has,the,warning,value,equal,to,the,provided,warning,value,param,s,the,string,representing,a,full,warning,header,param,warning,value,the,expected,warning,header,return,code,true,if,the,specified,string,has,the,expected,warning,value;private,static,boolean,assert,warning,value,final,string,s,final,string,warning,value,final,matcher,matcher,matcher,s,final,boolean,matches,matcher,matches,assert,matches,return,matcher,group,1,equals,warning,value
DeprecationLogger -> private static boolean assertWarningValue(final String s, final String warningValue);1531179852;Assert that the specified string has the warning value equal to the provided warning value.__@param s            the string representing a full warning header_@param warningValue the expected warning header_@return {@code true} if the specified string has the expected warning value;private static boolean assertWarningValue(final String s, final String warningValue) {_        final Matcher matcher = WARNING_HEADER_PATTERN.matcher(s)__        final boolean matches = matcher.matches()__        assert matches__        return matcher.group(1).equals(warningValue)__    };assert,that,the,specified,string,has,the,warning,value,equal,to,the,provided,warning,value,param,s,the,string,representing,a,full,warning,header,param,warning,value,the,expected,warning,header,return,code,true,if,the,specified,string,has,the,expected,warning,value;private,static,boolean,assert,warning,value,final,string,s,final,string,warning,value,final,matcher,matcher,matcher,s,final,boolean,matches,matcher,matches,assert,matches,return,matcher,group,1,equals,warning,value
DeprecationLogger -> private static boolean assertWarningValue(final String s, final String warningValue);1547135080;Assert that the specified string has the warning value equal to the provided warning value.__@param s            the string representing a full warning header_@param warningValue the expected warning header_@return {@code true} if the specified string has the expected warning value;private static boolean assertWarningValue(final String s, final String warningValue) {_        final Matcher matcher = WARNING_HEADER_PATTERN.matcher(s)__        final boolean matches = matcher.matches()__        assert matches__        return matcher.group(1).equals(warningValue)__    };assert,that,the,specified,string,has,the,warning,value,equal,to,the,provided,warning,value,param,s,the,string,representing,a,full,warning,header,param,warning,value,the,expected,warning,header,return,code,true,if,the,specified,string,has,the,expected,warning,value;private,static,boolean,assert,warning,value,final,string,s,final,string,warning,value,final,matcher,matcher,matcher,s,final,boolean,matches,matcher,matches,assert,matches,return,matcher,group,1,equals,warning,value
DeprecationLogger -> private static boolean assertWarningValue(final String s, final String warningValue);1547847745;Assert that the specified string has the warning value equal to the provided warning value.__@param s            the string representing a full warning header_@param warningValue the expected warning header_@return {@code true} if the specified string has the expected warning value;private static boolean assertWarningValue(final String s, final String warningValue) {_        final Matcher matcher = WARNING_HEADER_PATTERN.matcher(s)__        final boolean matches = matcher.matches()__        assert matches__        return matcher.group(1).equals(warningValue)__    };assert,that,the,specified,string,has,the,warning,value,equal,to,the,provided,warning,value,param,s,the,string,representing,a,full,warning,header,param,warning,value,the,expected,warning,header,return,code,true,if,the,specified,string,has,the,expected,warning,value;private,static,boolean,assert,warning,value,final,string,s,final,string,warning,value,final,matcher,matcher,matcher,s,final,boolean,matches,matcher,matches,assert,matches,return,matcher,group,1,equals,warning,value
DeprecationLogger -> private static boolean assertWarningValue(final String s, final String warningValue);1548178164;Assert that the specified string has the warning value equal to the provided warning value.__@param s            the string representing a full warning header_@param warningValue the expected warning header_@return {@code true} if the specified string has the expected warning value;private static boolean assertWarningValue(final String s, final String warningValue) {_        final Matcher matcher = WARNING_HEADER_PATTERN.matcher(s)__        final boolean matches = matcher.matches()__        assert matches__        return matcher.group(1).equals(warningValue)__    };assert,that,the,specified,string,has,the,warning,value,equal,to,the,provided,warning,value,param,s,the,string,representing,a,full,warning,header,param,warning,value,the,expected,warning,header,return,code,true,if,the,specified,string,has,the,expected,warning,value;private,static,boolean,assert,warning,value,final,string,s,final,string,warning,value,final,matcher,matcher,matcher,s,final,boolean,matches,matcher,matches,assert,matches,return,matcher,group,1,equals,warning,value
DeprecationLogger -> private static boolean assertWarningValue(final String s, final String warningValue);1548337164;Assert that the specified string has the warning value equal to the provided warning value.__@param s            the string representing a full warning header_@param warningValue the expected warning header_@return {@code true} if the specified string has the expected warning value;private static boolean assertWarningValue(final String s, final String warningValue) {_        final Matcher matcher = WARNING_HEADER_PATTERN.matcher(s)__        final boolean matches = matcher.matches()__        assert matches__        return matcher.group(1).equals(warningValue)__    };assert,that,the,specified,string,has,the,warning,value,equal,to,the,provided,warning,value,param,s,the,string,representing,a,full,warning,header,param,warning,value,the,expected,warning,header,return,code,true,if,the,specified,string,has,the,expected,warning,value;private,static,boolean,assert,warning,value,final,string,s,final,string,warning,value,final,matcher,matcher,matcher,s,final,boolean,matches,matcher,matches,assert,matches,return,matcher,group,1,equals,warning,value
DeprecationLogger -> private static boolean assertWarningValue(final String s, final String warningValue);1550865908;Assert that the specified string has the warning value equal to the provided warning value.__@param s            the string representing a full warning header_@param warningValue the expected warning header_@return {@code true} if the specified string has the expected warning value;private static boolean assertWarningValue(final String s, final String warningValue) {_        final Matcher matcher = WARNING_HEADER_PATTERN.matcher(s)__        final boolean matches = matcher.matches()__        assert matches__        return matcher.group(1).equals(warningValue)__    };assert,that,the,specified,string,has,the,warning,value,equal,to,the,provided,warning,value,param,s,the,string,representing,a,full,warning,header,param,warning,value,the,expected,warning,header,return,code,true,if,the,specified,string,has,the,expected,warning,value;private,static,boolean,assert,warning,value,final,string,s,final,string,warning,value,final,matcher,matcher,matcher,s,final,boolean,matches,matcher,matches,assert,matches,return,matcher,group,1,equals,warning,value
DeprecationLogger -> static String encode(final String s);1524684173;Encode a string containing characters outside of the legal characters for an RFC 7230 quoted-string.__@param s the string to encode_@return the encoded string;static String encode(final String s) {_        final StringBuilder sb = new StringBuilder(s.length())__        boolean encodingNeeded = false__        for (int i = 0_ i < s.length()_) {_            int current = (int) s.charAt(i)__            _            if (doesNotNeedEncoding.get(current)) {_                _                sb.append((char) current)__                i++__            } else {_                int startIndex = i__                do {_                    i++__                } while (i < s.length() && !doesNotNeedEncoding.get(s.charAt(i)))___                final byte[] bytes = s.substring(startIndex, i).getBytes(UTF_8)__                _                for (int j = 0_ j < bytes.length_ j++) {_                    sb.append('%').append(hex(bytes[j] >> 4)).append(hex(bytes[j]))__                }_                encodingNeeded = true__            }_        }_        return encodingNeeded ? sb.toString() : s__    };encode,a,string,containing,characters,outside,of,the,legal,characters,for,an,rfc,7230,quoted,string,param,s,the,string,to,encode,return,the,encoded,string;static,string,encode,final,string,s,final,string,builder,sb,new,string,builder,s,length,boolean,encoding,needed,false,for,int,i,0,i,s,length,int,current,int,s,char,at,i,if,does,not,need,encoding,get,current,sb,append,char,current,i,else,int,start,index,i,do,i,while,i,s,length,does,not,need,encoding,get,s,char,at,i,final,byte,bytes,s,substring,start,index,i,get,bytes,for,int,j,0,j,bytes,length,j,sb,append,append,hex,bytes,j,4,append,hex,bytes,j,encoding,needed,true,return,encoding,needed,sb,to,string,s
DeprecationLogger -> static String encode(final String s);1528762805;Encode a string containing characters outside of the legal characters for an RFC 7230 quoted-string.__@param s the string to encode_@return the encoded string;static String encode(final String s) {_        final StringBuilder sb = new StringBuilder(s.length())__        boolean encodingNeeded = false__        for (int i = 0_ i < s.length()_) {_            int current = (int) s.charAt(i)__            _            if (doesNotNeedEncoding.get(current)) {_                _                sb.append((char) current)__                i++__            } else {_                int startIndex = i__                do {_                    i++__                } while (i < s.length() && !doesNotNeedEncoding.get(s.charAt(i)))___                final byte[] bytes = s.substring(startIndex, i).getBytes(UTF_8)__                _                for (int j = 0_ j < bytes.length_ j++) {_                    sb.append('%').append(hex(bytes[j] >> 4)).append(hex(bytes[j]))__                }_                encodingNeeded = true__            }_        }_        return encodingNeeded ? sb.toString() : s__    };encode,a,string,containing,characters,outside,of,the,legal,characters,for,an,rfc,7230,quoted,string,param,s,the,string,to,encode,return,the,encoded,string;static,string,encode,final,string,s,final,string,builder,sb,new,string,builder,s,length,boolean,encoding,needed,false,for,int,i,0,i,s,length,int,current,int,s,char,at,i,if,does,not,need,encoding,get,current,sb,append,char,current,i,else,int,start,index,i,do,i,while,i,s,length,does,not,need,encoding,get,s,char,at,i,final,byte,bytes,s,substring,start,index,i,get,bytes,for,int,j,0,j,bytes,length,j,sb,append,append,hex,bytes,j,4,append,hex,bytes,j,encoding,needed,true,return,encoding,needed,sb,to,string,s
DeprecationLogger -> static String encode(final String s);1531179852;Encode a string containing characters outside of the legal characters for an RFC 7230 quoted-string.__@param s the string to encode_@return the encoded string;static String encode(final String s) {_        final StringBuilder sb = new StringBuilder(s.length())__        boolean encodingNeeded = false__        for (int i = 0_ i < s.length()_) {_            int current = s.charAt(i)__            _            if (doesNotNeedEncoding.get(current)) {_                _                sb.append((char) current)__                i++__            } else {_                int startIndex = i__                do {_                    i++__                } while (i < s.length() && !doesNotNeedEncoding.get(s.charAt(i)))___                final byte[] bytes = s.substring(startIndex, i).getBytes(UTF_8)__                _                for (int j = 0_ j < bytes.length_ j++) {_                    sb.append('%').append(hex(bytes[j] >> 4)).append(hex(bytes[j]))__                }_                encodingNeeded = true__            }_        }_        return encodingNeeded ? sb.toString() : s__    };encode,a,string,containing,characters,outside,of,the,legal,characters,for,an,rfc,7230,quoted,string,param,s,the,string,to,encode,return,the,encoded,string;static,string,encode,final,string,s,final,string,builder,sb,new,string,builder,s,length,boolean,encoding,needed,false,for,int,i,0,i,s,length,int,current,s,char,at,i,if,does,not,need,encoding,get,current,sb,append,char,current,i,else,int,start,index,i,do,i,while,i,s,length,does,not,need,encoding,get,s,char,at,i,final,byte,bytes,s,substring,start,index,i,get,bytes,for,int,j,0,j,bytes,length,j,sb,append,append,hex,bytes,j,4,append,hex,bytes,j,encoding,needed,true,return,encoding,needed,sb,to,string,s
DeprecationLogger -> static String encode(final String s);1547135080;Encode a string containing characters outside of the legal characters for an RFC 7230 quoted-string.__@param s the string to encode_@return the encoded string;static String encode(final String s) {_        final StringBuilder sb = new StringBuilder(s.length())__        boolean encodingNeeded = false__        for (int i = 0_ i < s.length()_) {_            int current = s.charAt(i)__            _            if (doesNotNeedEncoding.get(current)) {_                _                sb.append((char) current)__                i++__            } else {_                int startIndex = i__                do {_                    i++__                } while (i < s.length() && !doesNotNeedEncoding.get(s.charAt(i)))___                final byte[] bytes = s.substring(startIndex, i).getBytes(UTF_8)__                _                for (int j = 0_ j < bytes.length_ j++) {_                    sb.append('%').append(hex(bytes[j] >> 4)).append(hex(bytes[j]))__                }_                encodingNeeded = true__            }_        }_        return encodingNeeded ? sb.toString() : s__    };encode,a,string,containing,characters,outside,of,the,legal,characters,for,an,rfc,7230,quoted,string,param,s,the,string,to,encode,return,the,encoded,string;static,string,encode,final,string,s,final,string,builder,sb,new,string,builder,s,length,boolean,encoding,needed,false,for,int,i,0,i,s,length,int,current,s,char,at,i,if,does,not,need,encoding,get,current,sb,append,char,current,i,else,int,start,index,i,do,i,while,i,s,length,does,not,need,encoding,get,s,char,at,i,final,byte,bytes,s,substring,start,index,i,get,bytes,for,int,j,0,j,bytes,length,j,sb,append,append,hex,bytes,j,4,append,hex,bytes,j,encoding,needed,true,return,encoding,needed,sb,to,string,s
DeprecationLogger -> static String encode(final String s);1547847745;Encode a string containing characters outside of the legal characters for an RFC 7230 quoted-string.__@param s the string to encode_@return the encoded string;static String encode(final String s) {_        _        boolean encodingNeeded = false__        for (int i = 0_ i < s.length()_ i++) {_            int current = s.charAt(i)__            if (doesNotNeedEncoding.get(current) == false) {_                encodingNeeded = true__                break__            }_        }__        if (encodingNeeded == false) {_            return s__        }__        final StringBuilder sb = new StringBuilder(s.length())__        for (int i = 0_ i < s.length()_) {_            int current = s.charAt(i)__            _            if (doesNotNeedEncoding.get(current)) {_                _                sb.append((char) current)__                i++__            } else {_                int startIndex = i__                do {_                    i++__                } while (i < s.length() && !doesNotNeedEncoding.get(s.charAt(i)))___                final byte[] bytes = s.substring(startIndex, i).getBytes(UTF_8)__                _                for (int j = 0_ j < bytes.length_ j++) {_                    sb.append('%').append(hex(bytes[j] >> 4)).append(hex(bytes[j]))__                }_            }_        }_        return sb.toString()__    };encode,a,string,containing,characters,outside,of,the,legal,characters,for,an,rfc,7230,quoted,string,param,s,the,string,to,encode,return,the,encoded,string;static,string,encode,final,string,s,boolean,encoding,needed,false,for,int,i,0,i,s,length,i,int,current,s,char,at,i,if,does,not,need,encoding,get,current,false,encoding,needed,true,break,if,encoding,needed,false,return,s,final,string,builder,sb,new,string,builder,s,length,for,int,i,0,i,s,length,int,current,s,char,at,i,if,does,not,need,encoding,get,current,sb,append,char,current,i,else,int,start,index,i,do,i,while,i,s,length,does,not,need,encoding,get,s,char,at,i,final,byte,bytes,s,substring,start,index,i,get,bytes,for,int,j,0,j,bytes,length,j,sb,append,append,hex,bytes,j,4,append,hex,bytes,j,return,sb,to,string
DeprecationLogger -> static String encode(final String s);1548178164;Encode a string containing characters outside of the legal characters for an RFC 7230 quoted-string.__@param s the string to encode_@return the encoded string;static String encode(final String s) {_        _        boolean encodingNeeded = false__        for (int i = 0_ i < s.length()_ i++) {_            int current = s.charAt(i)__            if (doesNotNeedEncoding.get(current) == false) {_                encodingNeeded = true__                break__            }_        }__        if (encodingNeeded == false) {_            return s__        }__        final StringBuilder sb = new StringBuilder(s.length())__        for (int i = 0_ i < s.length()_) {_            int current = s.charAt(i)__            _            if (doesNotNeedEncoding.get(current)) {_                _                sb.append((char) current)__                i++__            } else {_                int startIndex = i__                do {_                    i++__                } while (i < s.length() && doesNotNeedEncoding.get(s.charAt(i)) == false)___                final byte[] bytes = s.substring(startIndex, i).getBytes(UTF_8)__                _                for (int j = 0_ j < bytes.length_ j++) {_                    sb.append('%').append(hex(bytes[j] >> 4)).append(hex(bytes[j]))__                }_            }_        }_        return sb.toString()__    };encode,a,string,containing,characters,outside,of,the,legal,characters,for,an,rfc,7230,quoted,string,param,s,the,string,to,encode,return,the,encoded,string;static,string,encode,final,string,s,boolean,encoding,needed,false,for,int,i,0,i,s,length,i,int,current,s,char,at,i,if,does,not,need,encoding,get,current,false,encoding,needed,true,break,if,encoding,needed,false,return,s,final,string,builder,sb,new,string,builder,s,length,for,int,i,0,i,s,length,int,current,s,char,at,i,if,does,not,need,encoding,get,current,sb,append,char,current,i,else,int,start,index,i,do,i,while,i,s,length,does,not,need,encoding,get,s,char,at,i,false,final,byte,bytes,s,substring,start,index,i,get,bytes,for,int,j,0,j,bytes,length,j,sb,append,append,hex,bytes,j,4,append,hex,bytes,j,return,sb,to,string
DeprecationLogger -> static String encode(final String s);1548337164;Encode a string containing characters outside of the legal characters for an RFC 7230 quoted-string.__@param s the string to encode_@return the encoded string;static String encode(final String s) {_        _        boolean encodingNeeded = false__        for (int i = 0_ i < s.length()_ i++) {_            int current = s.charAt(i)__            if (doesNotNeedEncoding.get(current) == false) {_                encodingNeeded = true__                break__            }_        }__        if (encodingNeeded == false) {_            return s__        }__        final StringBuilder sb = new StringBuilder(s.length())__        for (int i = 0_ i < s.length()_) {_            int current = s.charAt(i)__            _            if (doesNotNeedEncoding.get(current)) {_                _                sb.append((char) current)__                i++__            } else {_                int startIndex = i__                do {_                    i++__                } while (i < s.length() && doesNotNeedEncoding.get(s.charAt(i)) == false)___                final byte[] bytes = s.substring(startIndex, i).getBytes(UTF_8)__                _                for (int j = 0_ j < bytes.length_ j++) {_                    sb.append('%').append(hex(bytes[j] >> 4)).append(hex(bytes[j]))__                }_            }_        }_        return sb.toString()__    };encode,a,string,containing,characters,outside,of,the,legal,characters,for,an,rfc,7230,quoted,string,param,s,the,string,to,encode,return,the,encoded,string;static,string,encode,final,string,s,boolean,encoding,needed,false,for,int,i,0,i,s,length,i,int,current,s,char,at,i,if,does,not,need,encoding,get,current,false,encoding,needed,true,break,if,encoding,needed,false,return,s,final,string,builder,sb,new,string,builder,s,length,for,int,i,0,i,s,length,int,current,s,char,at,i,if,does,not,need,encoding,get,current,sb,append,char,current,i,else,int,start,index,i,do,i,while,i,s,length,does,not,need,encoding,get,s,char,at,i,false,final,byte,bytes,s,substring,start,index,i,get,bytes,for,int,j,0,j,bytes,length,j,sb,append,append,hex,bytes,j,4,append,hex,bytes,j,return,sb,to,string
DeprecationLogger -> static String encode(final String s);1550865908;Encode a string containing characters outside of the legal characters for an RFC 7230 quoted-string.__@param s the string to encode_@return the encoded string;static String encode(final String s) {_        _        boolean encodingNeeded = false__        for (int i = 0_ i < s.length()_ i++) {_            int current = s.charAt(i)__            if (doesNotNeedEncoding.get(current) == false) {_                encodingNeeded = true__                break__            }_        }__        if (encodingNeeded == false) {_            return s__        }__        final StringBuilder sb = new StringBuilder(s.length())__        for (int i = 0_ i < s.length()_) {_            int current = s.charAt(i)__            _            if (doesNotNeedEncoding.get(current)) {_                _                sb.append((char) current)__                i++__            } else {_                int startIndex = i__                do {_                    i++__                } while (i < s.length() && doesNotNeedEncoding.get(s.charAt(i)) == false)___                final byte[] bytes = s.substring(startIndex, i).getBytes(UTF_8)__                _                for (int j = 0_ j < bytes.length_ j++) {_                    sb.append('%').append(hex(bytes[j] >> 4)).append(hex(bytes[j]))__                }_            }_        }_        return sb.toString()__    };encode,a,string,containing,characters,outside,of,the,legal,characters,for,an,rfc,7230,quoted,string,param,s,the,string,to,encode,return,the,encoded,string;static,string,encode,final,string,s,boolean,encoding,needed,false,for,int,i,0,i,s,length,i,int,current,s,char,at,i,if,does,not,need,encoding,get,current,false,encoding,needed,true,break,if,encoding,needed,false,return,s,final,string,builder,sb,new,string,builder,s,length,for,int,i,0,i,s,length,int,current,s,char,at,i,if,does,not,need,encoding,get,current,sb,append,char,current,i,else,int,start,index,i,do,i,while,i,s,length,does,not,need,encoding,get,s,char,at,i,false,final,byte,bytes,s,substring,start,index,i,get,bytes,for,int,j,0,j,bytes,length,j,sb,append,append,hex,bytes,j,4,append,hex,bytes,j,return,sb,to,string
DeprecationLogger -> public static void setThreadContext(ThreadContext threadContext);1524684173;Set the {@link ThreadContext} used to add deprecation headers to network responses._<p>_This is expected to <em>only</em> be invoked by the {@code Node}'s constructor (therefore once outside of tests).__@param threadContext The thread context owned by the {@code ThreadPool} (and implicitly a {@code Node})_@throws IllegalStateException if this {@code threadContext} has already been set;public static void setThreadContext(ThreadContext threadContext) {_        Objects.requireNonNull(threadContext, "Cannot register a null ThreadContext")___        _        if (THREAD_CONTEXT.add(threadContext) == false) {_            throw new IllegalStateException("Double-setting ThreadContext not allowed!")__        }_    };set,the,link,thread,context,used,to,add,deprecation,headers,to,network,responses,p,this,is,expected,to,em,only,em,be,invoked,by,the,code,node,s,constructor,therefore,once,outside,of,tests,param,thread,context,the,thread,context,owned,by,the,code,thread,pool,and,implicitly,a,code,node,throws,illegal,state,exception,if,this,code,thread,context,has,already,been,set;public,static,void,set,thread,context,thread,context,thread,context,objects,require,non,null,thread,context,cannot,register,a,null,thread,context,if,add,thread,context,false,throw,new,illegal,state,exception,double,setting,thread,context,not,allowed
DeprecationLogger -> public static void setThreadContext(ThreadContext threadContext);1528762805;Set the {@link ThreadContext} used to add deprecation headers to network responses._<p>_This is expected to <em>only</em> be invoked by the {@code Node}'s constructor (therefore once outside of tests).__@param threadContext The thread context owned by the {@code ThreadPool} (and implicitly a {@code Node})_@throws IllegalStateException if this {@code threadContext} has already been set;public static void setThreadContext(ThreadContext threadContext) {_        Objects.requireNonNull(threadContext, "Cannot register a null ThreadContext")___        _        if (THREAD_CONTEXT.add(threadContext) == false) {_            throw new IllegalStateException("Double-setting ThreadContext not allowed!")__        }_    };set,the,link,thread,context,used,to,add,deprecation,headers,to,network,responses,p,this,is,expected,to,em,only,em,be,invoked,by,the,code,node,s,constructor,therefore,once,outside,of,tests,param,thread,context,the,thread,context,owned,by,the,code,thread,pool,and,implicitly,a,code,node,throws,illegal,state,exception,if,this,code,thread,context,has,already,been,set;public,static,void,set,thread,context,thread,context,thread,context,objects,require,non,null,thread,context,cannot,register,a,null,thread,context,if,add,thread,context,false,throw,new,illegal,state,exception,double,setting,thread,context,not,allowed
DeprecationLogger -> public static void setThreadContext(ThreadContext threadContext);1531179852;Set the {@link ThreadContext} used to add deprecation headers to network responses._<p>_This is expected to <em>only</em> be invoked by the {@code Node}'s constructor (therefore once outside of tests).__@param threadContext The thread context owned by the {@code ThreadPool} (and implicitly a {@code Node})_@throws IllegalStateException if this {@code threadContext} has already been set;public static void setThreadContext(ThreadContext threadContext) {_        Objects.requireNonNull(threadContext, "Cannot register a null ThreadContext")___        _        if (THREAD_CONTEXT.add(threadContext) == false) {_            throw new IllegalStateException("Double-setting ThreadContext not allowed!")__        }_    };set,the,link,thread,context,used,to,add,deprecation,headers,to,network,responses,p,this,is,expected,to,em,only,em,be,invoked,by,the,code,node,s,constructor,therefore,once,outside,of,tests,param,thread,context,the,thread,context,owned,by,the,code,thread,pool,and,implicitly,a,code,node,throws,illegal,state,exception,if,this,code,thread,context,has,already,been,set;public,static,void,set,thread,context,thread,context,thread,context,objects,require,non,null,thread,context,cannot,register,a,null,thread,context,if,add,thread,context,false,throw,new,illegal,state,exception,double,setting,thread,context,not,allowed
DeprecationLogger -> public static void setThreadContext(ThreadContext threadContext);1547135080;Set the {@link ThreadContext} used to add deprecation headers to network responses._<p>_This is expected to <em>only</em> be invoked by the {@code Node}'s constructor (therefore once outside of tests).__@param threadContext The thread context owned by the {@code ThreadPool} (and implicitly a {@code Node})_@throws IllegalStateException if this {@code threadContext} has already been set;public static void setThreadContext(ThreadContext threadContext) {_        Objects.requireNonNull(threadContext, "Cannot register a null ThreadContext")___        _        if (THREAD_CONTEXT.add(threadContext) == false) {_            throw new IllegalStateException("Double-setting ThreadContext not allowed!")__        }_    };set,the,link,thread,context,used,to,add,deprecation,headers,to,network,responses,p,this,is,expected,to,em,only,em,be,invoked,by,the,code,node,s,constructor,therefore,once,outside,of,tests,param,thread,context,the,thread,context,owned,by,the,code,thread,pool,and,implicitly,a,code,node,throws,illegal,state,exception,if,this,code,thread,context,has,already,been,set;public,static,void,set,thread,context,thread,context,thread,context,objects,require,non,null,thread,context,cannot,register,a,null,thread,context,if,add,thread,context,false,throw,new,illegal,state,exception,double,setting,thread,context,not,allowed
DeprecationLogger -> public static void setThreadContext(ThreadContext threadContext);1547847745;Set the {@link ThreadContext} used to add deprecation headers to network responses._<p>_This is expected to <em>only</em> be invoked by the {@code Node}'s constructor (therefore once outside of tests).__@param threadContext The thread context owned by the {@code ThreadPool} (and implicitly a {@code Node})_@throws IllegalStateException if this {@code threadContext} has already been set;public static void setThreadContext(ThreadContext threadContext) {_        Objects.requireNonNull(threadContext, "Cannot register a null ThreadContext")___        _        if (THREAD_CONTEXT.add(threadContext) == false) {_            throw new IllegalStateException("Double-setting ThreadContext not allowed!")__        }_    };set,the,link,thread,context,used,to,add,deprecation,headers,to,network,responses,p,this,is,expected,to,em,only,em,be,invoked,by,the,code,node,s,constructor,therefore,once,outside,of,tests,param,thread,context,the,thread,context,owned,by,the,code,thread,pool,and,implicitly,a,code,node,throws,illegal,state,exception,if,this,code,thread,context,has,already,been,set;public,static,void,set,thread,context,thread,context,thread,context,objects,require,non,null,thread,context,cannot,register,a,null,thread,context,if,add,thread,context,false,throw,new,illegal,state,exception,double,setting,thread,context,not,allowed
DeprecationLogger -> public static void setThreadContext(ThreadContext threadContext);1548178164;Set the {@link ThreadContext} used to add deprecation headers to network responses._<p>_This is expected to <em>only</em> be invoked by the {@code Node}'s constructor (therefore once outside of tests).__@param threadContext The thread context owned by the {@code ThreadPool} (and implicitly a {@code Node})_@throws IllegalStateException if this {@code threadContext} has already been set;public static void setThreadContext(ThreadContext threadContext) {_        Objects.requireNonNull(threadContext, "Cannot register a null ThreadContext")___        _        if (THREAD_CONTEXT.add(threadContext) == false) {_            throw new IllegalStateException("Double-setting ThreadContext not allowed!")__        }_    };set,the,link,thread,context,used,to,add,deprecation,headers,to,network,responses,p,this,is,expected,to,em,only,em,be,invoked,by,the,code,node,s,constructor,therefore,once,outside,of,tests,param,thread,context,the,thread,context,owned,by,the,code,thread,pool,and,implicitly,a,code,node,throws,illegal,state,exception,if,this,code,thread,context,has,already,been,set;public,static,void,set,thread,context,thread,context,thread,context,objects,require,non,null,thread,context,cannot,register,a,null,thread,context,if,add,thread,context,false,throw,new,illegal,state,exception,double,setting,thread,context,not,allowed
DeprecationLogger -> public static void setThreadContext(ThreadContext threadContext);1548337164;Set the {@link ThreadContext} used to add deprecation headers to network responses._<p>_This is expected to <em>only</em> be invoked by the {@code Node}'s constructor (therefore once outside of tests).__@param threadContext The thread context owned by the {@code ThreadPool} (and implicitly a {@code Node})_@throws IllegalStateException if this {@code threadContext} has already been set;public static void setThreadContext(ThreadContext threadContext) {_        Objects.requireNonNull(threadContext, "Cannot register a null ThreadContext")___        _        if (THREAD_CONTEXT.add(threadContext) == false) {_            throw new IllegalStateException("Double-setting ThreadContext not allowed!")__        }_    };set,the,link,thread,context,used,to,add,deprecation,headers,to,network,responses,p,this,is,expected,to,em,only,em,be,invoked,by,the,code,node,s,constructor,therefore,once,outside,of,tests,param,thread,context,the,thread,context,owned,by,the,code,thread,pool,and,implicitly,a,code,node,throws,illegal,state,exception,if,this,code,thread,context,has,already,been,set;public,static,void,set,thread,context,thread,context,thread,context,objects,require,non,null,thread,context,cannot,register,a,null,thread,context,if,add,thread,context,false,throw,new,illegal,state,exception,double,setting,thread,context,not,allowed
DeprecationLogger -> public static void setThreadContext(ThreadContext threadContext);1550865908;Set the {@link ThreadContext} used to add deprecation headers to network responses._<p>_This is expected to <em>only</em> be invoked by the {@code Node}'s constructor (therefore once outside of tests).__@param threadContext The thread context owned by the {@code ThreadPool} (and implicitly a {@code Node})_@throws IllegalStateException if this {@code threadContext} has already been set;public static void setThreadContext(ThreadContext threadContext) {_        Objects.requireNonNull(threadContext, "Cannot register a null ThreadContext")___        _        if (THREAD_CONTEXT.add(threadContext) == false) {_            throw new IllegalStateException("Double-setting ThreadContext not allowed!")__        }_    };set,the,link,thread,context,used,to,add,deprecation,headers,to,network,responses,p,this,is,expected,to,em,only,em,be,invoked,by,the,code,node,s,constructor,therefore,once,outside,of,tests,param,thread,context,the,thread,context,owned,by,the,code,thread,pool,and,implicitly,a,code,node,throws,illegal,state,exception,if,this,code,thread,context,has,already,been,set;public,static,void,set,thread,context,thread,context,thread,context,objects,require,non,null,thread,context,cannot,register,a,null,thread,context,if,add,thread,context,false,throw,new,illegal,state,exception,double,setting,thread,context,not,allowed
DeprecationLogger -> public void deprecatedAndMaybeLog(final String key, final String msg, final Object... params);1524684173;Adds a formatted warning message as a response header on the thread context, and logs a deprecation message if the associated key has_not recently been seen.__@param key    the key used to determine if this deprecation should be logged_@param msg    the message to log_@param params parameters to the message;public void deprecatedAndMaybeLog(final String key, final String msg, final Object... params) {_        deprecated(THREAD_CONTEXT, msg, keys.add(key), params)__    };adds,a,formatted,warning,message,as,a,response,header,on,the,thread,context,and,logs,a,deprecation,message,if,the,associated,key,has,not,recently,been,seen,param,key,the,key,used,to,determine,if,this,deprecation,should,be,logged,param,msg,the,message,to,log,param,params,parameters,to,the,message;public,void,deprecated,and,maybe,log,final,string,key,final,string,msg,final,object,params,deprecated,msg,keys,add,key,params
DeprecationLogger -> public void deprecatedAndMaybeLog(final String key, final String msg, final Object... params);1528762805;Adds a formatted warning message as a response header on the thread context, and logs a deprecation message if the associated key has_not recently been seen.__@param key    the key used to determine if this deprecation should be logged_@param msg    the message to log_@param params parameters to the message;public void deprecatedAndMaybeLog(final String key, final String msg, final Object... params) {_        deprecated(THREAD_CONTEXT, msg, keys.add(key), params)__    };adds,a,formatted,warning,message,as,a,response,header,on,the,thread,context,and,logs,a,deprecation,message,if,the,associated,key,has,not,recently,been,seen,param,key,the,key,used,to,determine,if,this,deprecation,should,be,logged,param,msg,the,message,to,log,param,params,parameters,to,the,message;public,void,deprecated,and,maybe,log,final,string,key,final,string,msg,final,object,params,deprecated,msg,keys,add,key,params
DeprecationLogger -> public void deprecatedAndMaybeLog(final String key, final String msg, final Object... params);1531179852;Adds a formatted warning message as a response header on the thread context, and logs a deprecation message if the associated key has_not recently been seen.__@param key    the key used to determine if this deprecation should be logged_@param msg    the message to log_@param params parameters to the message;public void deprecatedAndMaybeLog(final String key, final String msg, final Object... params) {_        deprecated(THREAD_CONTEXT, msg, keys.add(key), params)__    };adds,a,formatted,warning,message,as,a,response,header,on,the,thread,context,and,logs,a,deprecation,message,if,the,associated,key,has,not,recently,been,seen,param,key,the,key,used,to,determine,if,this,deprecation,should,be,logged,param,msg,the,message,to,log,param,params,parameters,to,the,message;public,void,deprecated,and,maybe,log,final,string,key,final,string,msg,final,object,params,deprecated,msg,keys,add,key,params
DeprecationLogger -> public void deprecatedAndMaybeLog(final String key, final String msg, final Object... params);1547135080;Adds a formatted warning message as a response header on the thread context, and logs a deprecation message if the associated key has_not recently been seen.__@param key    the key used to determine if this deprecation should be logged_@param msg    the message to log_@param params parameters to the message;public void deprecatedAndMaybeLog(final String key, final String msg, final Object... params) {_        deprecated(THREAD_CONTEXT, msg, keys.add(key), params)__    };adds,a,formatted,warning,message,as,a,response,header,on,the,thread,context,and,logs,a,deprecation,message,if,the,associated,key,has,not,recently,been,seen,param,key,the,key,used,to,determine,if,this,deprecation,should,be,logged,param,msg,the,message,to,log,param,params,parameters,to,the,message;public,void,deprecated,and,maybe,log,final,string,key,final,string,msg,final,object,params,deprecated,msg,keys,add,key,params
DeprecationLogger -> public void deprecatedAndMaybeLog(final String key, final String msg, final Object... params);1547847745;Adds a formatted warning message as a response header on the thread context, and logs a deprecation message if the associated key has_not recently been seen.__@param key    the key used to determine if this deprecation should be logged_@param msg    the message to log_@param params parameters to the message;public void deprecatedAndMaybeLog(final String key, final String msg, final Object... params) {_        deprecated(THREAD_CONTEXT, msg, keys.add(key), params)__    };adds,a,formatted,warning,message,as,a,response,header,on,the,thread,context,and,logs,a,deprecation,message,if,the,associated,key,has,not,recently,been,seen,param,key,the,key,used,to,determine,if,this,deprecation,should,be,logged,param,msg,the,message,to,log,param,params,parameters,to,the,message;public,void,deprecated,and,maybe,log,final,string,key,final,string,msg,final,object,params,deprecated,msg,keys,add,key,params
DeprecationLogger -> public void deprecatedAndMaybeLog(final String key, final String msg, final Object... params);1548178164;Adds a formatted warning message as a response header on the thread context, and logs a deprecation message if the associated key has_not recently been seen.__@param key    the key used to determine if this deprecation should be logged_@param msg    the message to log_@param params parameters to the message;public void deprecatedAndMaybeLog(final String key, final String msg, final Object... params) {_        deprecated(THREAD_CONTEXT, msg, keys.add(key), params)__    };adds,a,formatted,warning,message,as,a,response,header,on,the,thread,context,and,logs,a,deprecation,message,if,the,associated,key,has,not,recently,been,seen,param,key,the,key,used,to,determine,if,this,deprecation,should,be,logged,param,msg,the,message,to,log,param,params,parameters,to,the,message;public,void,deprecated,and,maybe,log,final,string,key,final,string,msg,final,object,params,deprecated,msg,keys,add,key,params
DeprecationLogger -> public void deprecatedAndMaybeLog(final String key, final String msg, final Object... params);1548337164;Adds a formatted warning message as a response header on the thread context, and logs a deprecation message if the associated key has_not recently been seen.__@param key    the key used to determine if this deprecation should be logged_@param msg    the message to log_@param params parameters to the message;public void deprecatedAndMaybeLog(final String key, final String msg, final Object... params) {_        deprecated(THREAD_CONTEXT, msg, keys.add(key), params)__    };adds,a,formatted,warning,message,as,a,response,header,on,the,thread,context,and,logs,a,deprecation,message,if,the,associated,key,has,not,recently,been,seen,param,key,the,key,used,to,determine,if,this,deprecation,should,be,logged,param,msg,the,message,to,log,param,params,parameters,to,the,message;public,void,deprecated,and,maybe,log,final,string,key,final,string,msg,final,object,params,deprecated,msg,keys,add,key,params
DeprecationLogger -> public void deprecatedAndMaybeLog(final String key, final String msg, final Object... params);1550865908;Adds a formatted warning message as a response header on the thread context, and logs a deprecation message if the associated key has_not recently been seen.__@param key    the key used to determine if this deprecation should be logged_@param msg    the message to log_@param params parameters to the message;public void deprecatedAndMaybeLog(final String key, final String msg, final Object... params) {_        deprecated(THREAD_CONTEXT, msg, keys.add(key), params)__    };adds,a,formatted,warning,message,as,a,response,header,on,the,thread,context,and,logs,a,deprecation,message,if,the,associated,key,has,not,recently,been,seen,param,key,the,key,used,to,determine,if,this,deprecation,should,be,logged,param,msg,the,message,to,log,param,params,parameters,to,the,message;public,void,deprecated,and,maybe,log,final,string,key,final,string,msg,final,object,params,deprecated,msg,keys,add,key,params
