commented;modifiers;parameterAmount;loc;comment;code
true;;0;1;/**  * Indicates if the channel is an inbound server channel.  */ ;/**  * Indicates if the channel is an inbound server channel.  */ boolean isServerChannel().
true;;0;1;/**  * This returns the profile for this channel.  */ ;/**  * This returns the profile for this channel.  */ String getProfile().
true;;0;1;/**  * Returns the local address for this channel.  *  * @return the local address of this channel.  */ ;/**  * Returns the local address for this channel.  *  * @return the local address of this channel.  */ InetSocketAddress getLocalAddress().
true;;0;1;/**  * Returns the remote address for this channel. Can be null if channel does not have a remote address.  *  * @return the remote address of this channel.  */ ;/**  * Returns the remote address for this channel. Can be null if channel does not have a remote address.  *  * @return the remote address of this channel.  */ InetSocketAddress getRemoteAddress().
true;;2;1;/**  * Sends a tcp message to the channel. The listener will be executed once the send process has been  * completed.  *  * @param reference to send to channel  * @param listener to execute upon send completion  */ ;/**  * Sends a tcp message to the channel. The listener will be executed once the send process has been  * completed.  *  * @param reference to send to channel  * @param listener to execute upon send completion  */ void sendMessage(BytesReference reference, ActionListener<Void> listener).
true;;1;1;/**  * Adds a listener that will be executed when the channel is connected. If the channel is still  * unconnected when this listener is added, the listener will be executed by the thread that eventually  * finishes the channel connection. If the channel is already connected when the listener is added the  * listener will immediately be executed by the thread that is attempting to add the listener.  *  * @param listener to be executed  */ ;/**  * Adds a listener that will be executed when the channel is connected. If the channel is still  * unconnected when this listener is added, the listener will be executed by the thread that eventually  * finishes the channel connection. If the channel is already connected when the listener is added the  * listener will immediately be executed by the thread that is attempting to add the listener.  *  * @param listener to be executed  */ void addConnectListener(ActionListener<Void> listener).
true;;0;1;/**  * Returns stats about this channel  */ ;/**  * Returns stats about this channel  */ ChannelStats getChannelStats().
false;;1;3;;void markAccessed(long relativeMillisTime) {     lastAccessedTime = relativeMillisTime. }
false;;0;3;;long lastAccessedTime() {     return lastAccessedTime. }
