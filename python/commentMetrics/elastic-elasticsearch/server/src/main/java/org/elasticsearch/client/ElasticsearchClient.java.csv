commented;modifiers;parameterAmount;loc;comment;code
true;;2;2;/**  * Executes a generic action, denoted by an {@link org.elasticsearch.action.Action}.  *  * @param action           The action type to execute.  * @param request          The action request.  * @param <Request>        The request type.  * @param <Response>       the response type.  * @return A future allowing to get back the response.  */ ;/**  * Executes a generic action, denoted by an {@link org.elasticsearch.action.Action}.  *  * @param action           The action type to execute.  * @param request          The action request.  * @param <Request>        The request type.  * @param <Response>       the response type.  * @return A future allowing to get back the response.  */ <Request extends ActionRequest, Response extends ActionResponse> ActionFuture<Response> execute(Action<Response> action, Request request).
true;;3;2;/**  * Executes a generic action, denoted by an {@link Action}.  *  * @param action           The action type to execute.  * @param request          The action request.  * @param listener         The listener to receive the response back.  * @param <Request>        The request type.  * @param <Response>       The response type.  */ ;/**  * Executes a generic action, denoted by an {@link Action}.  *  * @param action           The action type to execute.  * @param request          The action request.  * @param listener         The listener to receive the response back.  * @param <Request>        The request type.  * @param <Response>       The response type.  */ <Request extends ActionRequest, Response extends ActionResponse> void execute(Action<Response> action, Request request, ActionListener<Response> listener).
true;;0;1;/**  * Returns the threadpool used to execute requests on this client  */ ;/**  * Returns the threadpool used to execute requests on this client  */ ThreadPool threadPool().
