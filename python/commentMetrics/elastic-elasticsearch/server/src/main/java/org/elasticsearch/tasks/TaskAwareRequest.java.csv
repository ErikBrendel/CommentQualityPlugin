commented;modifiers;parameterAmount;loc;comment;code
true;default;2;3;/**  * Set a reference to task that caused this task to be run.  */ ;/**  * Set a reference to task that caused this task to be run.  */ default void setParentTask(String parentTaskNode, long parentTaskId) {     setParentTask(new TaskId(parentTaskNode, parentTaskId)). }
true;;1;1;/**  * Set a reference to task that created this request.  */ ;/**  * Set a reference to task that created this request.  */ void setParentTask(TaskId taskId).
true;;0;1;/**  * Get a reference to the task that created this request. Implementers should default to  * {@link TaskId#EMPTY_TASK_ID}, meaning "there is no parent".  */ ;/**  * Get a reference to the task that created this request. Implementers should default to  * {@link TaskId#EMPTY_TASK_ID}, meaning "there is no parent".  */ TaskId getParentTask().
true;default;5;3;/**  * Returns the task object that should be used to keep track of the processing of the request.  */ ;/**  * Returns the task object that should be used to keep track of the processing of the request.  */ default Task createTask(long id, String type, String action, TaskId parentTaskId, Map<String, String> headers) {     return new Task(id, type, action, getDescription(), parentTaskId, headers). }
true;default;0;3;/**  * Returns optional description of the request to be displayed by the task manager  */ ;/**  * Returns optional description of the request to be displayed by the task manager  */ default String getDescription() {     return "". }
