commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected String executor() {     return ThreadPool.Names.SNAPSHOT. }
false;protected;0;4;;@Override protected CreateSnapshotResponse newResponse() {     return new CreateSnapshotResponse(). }
false;protected;2;10;;@Override protected ClusterBlockException checkBlock(CreateSnapshotRequest request, ClusterState state) {     // We are reading the cluster metadata and indices - so we need to check both blocks     ClusterBlockException clusterBlockException = state.blocks().globalBlockedException(ClusterBlockLevel.METADATA_READ).     if (clusterBlockException != null) {         return clusterBlockException.     }     return state.blocks().indicesBlockedException(ClusterBlockLevel.READ, indexNameExpressionResolver.concreteIndexNames(state, request)). }
false;protected;3;11;;@Override protected void masterOperation(final CreateSnapshotRequest request, ClusterState state, final ActionListener<CreateSnapshotResponse> listener) {     if (request.waitForCompletion()) {         snapshotsService.executeSnapshot(request, ActionListener.wrap(snapshotInfo -> listener.onResponse(new CreateSnapshotResponse(snapshotInfo)), listener::onFailure)).     } else {         snapshotsService.createSnapshot(request, ActionListener.wrap(snapshot -> listener.onResponse(new CreateSnapshotResponse()), listener::onFailure)).     } }
