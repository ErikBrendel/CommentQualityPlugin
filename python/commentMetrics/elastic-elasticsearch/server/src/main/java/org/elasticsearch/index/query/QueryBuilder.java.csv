commented;modifiers;parameterAmount;loc;comment;code
true;;1;1;/**  * Converts this QueryBuilder to a lucene {@link Query}.  * Returns {@code null} if this query should be ignored in the context of  * parent queries.  *  * @param context additional information needed to construct the queries  * @return the {@link Query} or {@code null} if this query should be ignored upstream  */ ;/**  * Converts this QueryBuilder to a lucene {@link Query}.  * Returns {@code null} if this query should be ignored in the context of  * parent queries.  *  * @param context additional information needed to construct the queries  * @return the {@link Query} or {@code null} if this query should be ignored upstream  */ Query toQuery(QueryShardContext context) throws IOException.
true;;1;1;/**  * Sets the arbitrary name to be assigned to the query (see named queries).  * Implementers should return the concrete type of the  * {@link QueryBuilder} so that calls can be chained. This is done  * automatically when extending {@link AbstractQueryBuilder}.  */ ;/**  * Sets the arbitrary name to be assigned to the query (see named queries).  * Implementers should return the concrete type of the  * {@link QueryBuilder} so that calls can be chained. This is done  * automatically when extending {@link AbstractQueryBuilder}.  */ QueryBuilder queryName(String queryName).
true;;0;1;/**  * Returns the arbitrary name assigned to the query (see named queries).  */ ;/**  * Returns the arbitrary name assigned to the query (see named queries).  */ String queryName().
true;;0;1;/**  * Returns the boost for this query.  */ ;/**  * Returns the boost for this query.  */ float boost().
true;;1;1;/**  * Sets the boost for this query.  Documents matching this query will (in addition to the normal  * weightings) have their score multiplied by the boost provided.  * Implementers should return the concrete type of the  * {@link QueryBuilder} so that calls can be chained. This is done  * automatically when extending {@link AbstractQueryBuilder}.  */ ;/**  * Sets the boost for this query.  Documents matching this query will (in addition to the normal  * weightings) have their score multiplied by the boost provided.  * Implementers should return the concrete type of the  * {@link QueryBuilder} so that calls can be chained. This is done  * automatically when extending {@link AbstractQueryBuilder}.  */ QueryBuilder boost(float boost).
true;;0;1;/**  * Returns the name that identifies uniquely the query  */ ;/**  * Returns the name that identifies uniquely the query  */ String getName().
true;default;1;4;/**  * Rewrites this query builder into its primitive form. By default this method return the builder itself. If the builder  * did not change the identity reference must be returned otherwise the builder will be rewritten infinitely.  */ ;/**  * Rewrites this query builder into its primitive form. By default this method return the builder itself. If the builder  * did not change the identity reference must be returned otherwise the builder will be rewritten infinitely.  */ @Override default QueryBuilder rewrite(QueryRewriteContext queryShardContext) throws IOException {     return this. }
