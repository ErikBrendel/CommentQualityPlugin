# id;timestamp;commentText;codeText;commentWords;codeWords
IngestService -> private static List<Tuple<Processor, IngestMetric>> getProcessorMetrics(CompoundProcessor compoundProcessor,                                                                     List<Tuple<Processor, IngestMetric>> processorMetrics);1540313026;Recursive method to obtain all of the non-failure processors for given compoundProcessor. Since conditionals are implemented as_wrappers to the actual processor, always prefer the actual processor's metric over the conditional processor's metric._@param compoundProcessor The compound processor to start walking the non-failure processors_@param processorMetrics The list of {@link Processor} {@link IngestMetric} tuples._@return the processorMetrics for all non-failure processor that belong to the original compoundProcessor;private static List<Tuple<Processor, IngestMetric>> getProcessorMetrics(CompoundProcessor compoundProcessor,_                                                                    List<Tuple<Processor, IngestMetric>> processorMetrics) {_        _        for (Tuple<Processor, IngestMetric> processorWithMetric : compoundProcessor.getProcessorsWithMetrics()) {_            Processor processor = processorWithMetric.v1()__            IngestMetric metric = processorWithMetric.v2()__            if (processor instanceof CompoundProcessor) {_                getProcessorMetrics((CompoundProcessor) processor, processorMetrics)__            } else {_                _                if (processor instanceof ConditionalProcessor) {_                    metric = ((ConditionalProcessor) processor).getMetric()__                }_                processorMetrics.add(new Tuple<>(processor, metric))__            }_        }_        return processorMetrics__    };recursive,method,to,obtain,all,of,the,non,failure,processors,for,given,compound,processor,since,conditionals,are,implemented,as,wrappers,to,the,actual,processor,always,prefer,the,actual,processor,s,metric,over,the,conditional,processor,s,metric,param,compound,processor,the,compound,processor,to,start,walking,the,non,failure,processors,param,processor,metrics,the,list,of,link,processor,link,ingest,metric,tuples,return,the,processor,metrics,for,all,non,failure,processor,that,belong,to,the,original,compound,processor;private,static,list,tuple,processor,ingest,metric,get,processor,metrics,compound,processor,compound,processor,list,tuple,processor,ingest,metric,processor,metrics,for,tuple,processor,ingest,metric,processor,with,metric,compound,processor,get,processors,with,metrics,processor,processor,processor,with,metric,v1,ingest,metric,metric,processor,with,metric,v2,if,processor,instanceof,compound,processor,get,processor,metrics,compound,processor,processor,processor,metrics,else,if,processor,instanceof,conditional,processor,metric,conditional,processor,processor,get,metric,processor,metrics,add,new,tuple,processor,metric,return,processor,metrics
IngestService -> private static List<Tuple<Processor, IngestMetric>> getProcessorMetrics(CompoundProcessor compoundProcessor,                                                                     List<Tuple<Processor, IngestMetric>> processorMetrics);1545085511;Recursive method to obtain all of the non-failure processors for given compoundProcessor. Since conditionals are implemented as_wrappers to the actual processor, always prefer the actual processor's metric over the conditional processor's metric._@param compoundProcessor The compound processor to start walking the non-failure processors_@param processorMetrics The list of {@link Processor} {@link IngestMetric} tuples._@return the processorMetrics for all non-failure processor that belong to the original compoundProcessor;private static List<Tuple<Processor, IngestMetric>> getProcessorMetrics(CompoundProcessor compoundProcessor,_                                                                    List<Tuple<Processor, IngestMetric>> processorMetrics) {_        _        for (Tuple<Processor, IngestMetric> processorWithMetric : compoundProcessor.getProcessorsWithMetrics()) {_            Processor processor = processorWithMetric.v1()__            IngestMetric metric = processorWithMetric.v2()__            if (processor instanceof CompoundProcessor) {_                getProcessorMetrics((CompoundProcessor) processor, processorMetrics)__            } else {_                _                if (processor instanceof ConditionalProcessor) {_                    metric = ((ConditionalProcessor) processor).getMetric()__                }_                processorMetrics.add(new Tuple<>(processor, metric))__            }_        }_        return processorMetrics__    };recursive,method,to,obtain,all,of,the,non,failure,processors,for,given,compound,processor,since,conditionals,are,implemented,as,wrappers,to,the,actual,processor,always,prefer,the,actual,processor,s,metric,over,the,conditional,processor,s,metric,param,compound,processor,the,compound,processor,to,start,walking,the,non,failure,processors,param,processor,metrics,the,list,of,link,processor,link,ingest,metric,tuples,return,the,processor,metrics,for,all,non,failure,processor,that,belong,to,the,original,compound,processor;private,static,list,tuple,processor,ingest,metric,get,processor,metrics,compound,processor,compound,processor,list,tuple,processor,ingest,metric,processor,metrics,for,tuple,processor,ingest,metric,processor,with,metric,compound,processor,get,processors,with,metrics,processor,processor,processor,with,metric,v1,ingest,metric,metric,processor,with,metric,v2,if,processor,instanceof,compound,processor,get,processor,metrics,compound,processor,processor,processor,metrics,else,if,processor,instanceof,conditional,processor,metric,conditional,processor,processor,get,metric,processor,metrics,add,new,tuple,processor,metric,return,processor,metrics
IngestService -> private static List<Tuple<Processor, IngestMetric>> getProcessorMetrics(CompoundProcessor compoundProcessor,                                                                     List<Tuple<Processor, IngestMetric>> processorMetrics);1548335343;Recursive method to obtain all of the non-failure processors for given compoundProcessor. Since conditionals are implemented as_wrappers to the actual processor, always prefer the actual processor's metric over the conditional processor's metric._@param compoundProcessor The compound processor to start walking the non-failure processors_@param processorMetrics The list of {@link Processor} {@link IngestMetric} tuples._@return the processorMetrics for all non-failure processor that belong to the original compoundProcessor;private static List<Tuple<Processor, IngestMetric>> getProcessorMetrics(CompoundProcessor compoundProcessor,_                                                                    List<Tuple<Processor, IngestMetric>> processorMetrics) {_        _        for (Tuple<Processor, IngestMetric> processorWithMetric : compoundProcessor.getProcessorsWithMetrics()) {_            Processor processor = processorWithMetric.v1()__            IngestMetric metric = processorWithMetric.v2()__            if (processor instanceof CompoundProcessor) {_                getProcessorMetrics((CompoundProcessor) processor, processorMetrics)__            } else {_                _                if (processor instanceof ConditionalProcessor) {_                    metric = ((ConditionalProcessor) processor).getMetric()__                }_                processorMetrics.add(new Tuple<>(processor, metric))__            }_        }_        return processorMetrics__    };recursive,method,to,obtain,all,of,the,non,failure,processors,for,given,compound,processor,since,conditionals,are,implemented,as,wrappers,to,the,actual,processor,always,prefer,the,actual,processor,s,metric,over,the,conditional,processor,s,metric,param,compound,processor,the,compound,processor,to,start,walking,the,non,failure,processors,param,processor,metrics,the,list,of,link,processor,link,ingest,metric,tuples,return,the,processor,metrics,for,all,non,failure,processor,that,belong,to,the,original,compound,processor;private,static,list,tuple,processor,ingest,metric,get,processor,metrics,compound,processor,compound,processor,list,tuple,processor,ingest,metric,processor,metrics,for,tuple,processor,ingest,metric,processor,with,metric,compound,processor,get,processors,with,metrics,processor,processor,processor,with,metric,v1,ingest,metric,metric,processor,with,metric,v2,if,processor,instanceof,compound,processor,get,processor,metrics,compound,processor,processor,processor,metrics,else,if,processor,instanceof,conditional,processor,metric,conditional,processor,processor,get,metric,processor,metrics,add,new,tuple,processor,metric,return,processor,metrics
IngestService -> private static List<Tuple<Processor, IngestMetric>> getProcessorMetrics(CompoundProcessor compoundProcessor,                                                                     List<Tuple<Processor, IngestMetric>> processorMetrics);1548953505;Recursive method to obtain all of the non-failure processors for given compoundProcessor. Since conditionals are implemented as_wrappers to the actual processor, always prefer the actual processor's metric over the conditional processor's metric._@param compoundProcessor The compound processor to start walking the non-failure processors_@param processorMetrics The list of {@link Processor} {@link IngestMetric} tuples._@return the processorMetrics for all non-failure processor that belong to the original compoundProcessor;private static List<Tuple<Processor, IngestMetric>> getProcessorMetrics(CompoundProcessor compoundProcessor,_                                                                    List<Tuple<Processor, IngestMetric>> processorMetrics) {_        _        for (Tuple<Processor, IngestMetric> processorWithMetric : compoundProcessor.getProcessorsWithMetrics()) {_            Processor processor = processorWithMetric.v1()__            IngestMetric metric = processorWithMetric.v2()__            if (processor instanceof CompoundProcessor) {_                getProcessorMetrics((CompoundProcessor) processor, processorMetrics)__            } else {_                _                if (processor instanceof ConditionalProcessor) {_                    metric = ((ConditionalProcessor) processor).getMetric()__                }_                processorMetrics.add(new Tuple<>(processor, metric))__            }_        }_        return processorMetrics__    };recursive,method,to,obtain,all,of,the,non,failure,processors,for,given,compound,processor,since,conditionals,are,implemented,as,wrappers,to,the,actual,processor,always,prefer,the,actual,processor,s,metric,over,the,conditional,processor,s,metric,param,compound,processor,the,compound,processor,to,start,walking,the,non,failure,processors,param,processor,metrics,the,list,of,link,processor,link,ingest,metric,tuples,return,the,processor,metrics,for,all,non,failure,processor,that,belong,to,the,original,compound,processor;private,static,list,tuple,processor,ingest,metric,get,processor,metrics,compound,processor,compound,processor,list,tuple,processor,ingest,metric,processor,metrics,for,tuple,processor,ingest,metric,processor,with,metric,compound,processor,get,processors,with,metrics,processor,processor,processor,with,metric,v1,ingest,metric,metric,processor,with,metric,v2,if,processor,instanceof,compound,processor,get,processor,metrics,compound,processor,processor,processor,metrics,else,if,processor,instanceof,conditional,processor,metric,conditional,processor,processor,get,metric,processor,metrics,add,new,tuple,processor,metric,return,processor,metrics
IngestService -> public void putPipeline(Map<DiscoveryNode, IngestInfo> ingestInfos, PutPipelineRequest request,         ActionListener<AcknowledgedResponse> listener) throws Exception;1534848846;Stores the specified pipeline definition in the request.;public void putPipeline(Map<DiscoveryNode, IngestInfo> ingestInfos, PutPipelineRequest request,_        ActionListener<AcknowledgedResponse> listener) throws Exception {_        put(clusterService, ingestInfos, request, listener)__    };stores,the,specified,pipeline,definition,in,the,request;public,void,put,pipeline,map,discovery,node,ingest,info,ingest,infos,put,pipeline,request,request,action,listener,acknowledged,response,listener,throws,exception,put,cluster,service,ingest,infos,request,listener
IngestService -> public void putPipeline(Map<DiscoveryNode, IngestInfo> ingestInfos, PutPipelineRequest request,         ActionListener<AcknowledgedResponse> listener) throws Exception;1535046779;Stores the specified pipeline definition in the request.;public void putPipeline(Map<DiscoveryNode, IngestInfo> ingestInfos, PutPipelineRequest request,_        ActionListener<AcknowledgedResponse> listener) throws Exception {_            _            validatePipeline(ingestInfos, request)__            clusterService.submitStateUpdateTask("put-pipeline-" + request.getId(),_                new AckedClusterStateUpdateTask<AcknowledgedResponse>(request, listener) {__                    @Override_                    protected AcknowledgedResponse newResponse(boolean acknowledged) {_                        return new AcknowledgedResponse(acknowledged)__                    }__                    @Override_                    public ClusterState execute(ClusterState currentState) {_                        return innerPut(request, currentState)__                    }_                })__    };stores,the,specified,pipeline,definition,in,the,request;public,void,put,pipeline,map,discovery,node,ingest,info,ingest,infos,put,pipeline,request,request,action,listener,acknowledged,response,listener,throws,exception,validate,pipeline,ingest,infos,request,cluster,service,submit,state,update,task,put,pipeline,request,get,id,new,acked,cluster,state,update,task,acknowledged,response,request,listener,override,protected,acknowledged,response,new,response,boolean,acknowledged,return,new,acknowledged,response,acknowledged,override,public,cluster,state,execute,cluster,state,current,state,return,inner,put,request,current,state
IngestService -> public void putPipeline(Map<DiscoveryNode, IngestInfo> ingestInfos, PutPipelineRequest request,         ActionListener<AcknowledgedResponse> listener) throws Exception;1535552903;Stores the specified pipeline definition in the request.;public void putPipeline(Map<DiscoveryNode, IngestInfo> ingestInfos, PutPipelineRequest request,_        ActionListener<AcknowledgedResponse> listener) throws Exception {_            _            validatePipeline(ingestInfos, request)__            clusterService.submitStateUpdateTask("put-pipeline-" + request.getId(),_                new AckedClusterStateUpdateTask<AcknowledgedResponse>(request, listener) {__                    @Override_                    protected AcknowledgedResponse newResponse(boolean acknowledged) {_                        return new AcknowledgedResponse(acknowledged)__                    }__                    @Override_                    public ClusterState execute(ClusterState currentState) {_                        return innerPut(request, currentState)__                    }_                })__    };stores,the,specified,pipeline,definition,in,the,request;public,void,put,pipeline,map,discovery,node,ingest,info,ingest,infos,put,pipeline,request,request,action,listener,acknowledged,response,listener,throws,exception,validate,pipeline,ingest,infos,request,cluster,service,submit,state,update,task,put,pipeline,request,get,id,new,acked,cluster,state,update,task,acknowledged,response,request,listener,override,protected,acknowledged,response,new,response,boolean,acknowledged,return,new,acknowledged,response,acknowledged,override,public,cluster,state,execute,cluster,state,current,state,return,inner,put,request,current,state
IngestService -> public void putPipeline(Map<DiscoveryNode, IngestInfo> ingestInfos, PutPipelineRequest request,         ActionListener<AcknowledgedResponse> listener) throws Exception;1535666657;Stores the specified pipeline definition in the request.;public void putPipeline(Map<DiscoveryNode, IngestInfo> ingestInfos, PutPipelineRequest request,_        ActionListener<AcknowledgedResponse> listener) throws Exception {_            _            validatePipeline(ingestInfos, request)__            clusterService.submitStateUpdateTask("put-pipeline-" + request.getId(),_                new AckedClusterStateUpdateTask<AcknowledgedResponse>(request, listener) {__                    @Override_                    protected AcknowledgedResponse newResponse(boolean acknowledged) {_                        return new AcknowledgedResponse(acknowledged)__                    }__                    @Override_                    public ClusterState execute(ClusterState currentState) {_                        return innerPut(request, currentState)__                    }_                })__    };stores,the,specified,pipeline,definition,in,the,request;public,void,put,pipeline,map,discovery,node,ingest,info,ingest,infos,put,pipeline,request,request,action,listener,acknowledged,response,listener,throws,exception,validate,pipeline,ingest,infos,request,cluster,service,submit,state,update,task,put,pipeline,request,get,id,new,acked,cluster,state,update,task,acknowledged,response,request,listener,override,protected,acknowledged,response,new,response,boolean,acknowledged,return,new,acknowledged,response,acknowledged,override,public,cluster,state,execute,cluster,state,current,state,return,inner,put,request,current,state
IngestService -> public void putPipeline(Map<DiscoveryNode, IngestInfo> ingestInfos, PutPipelineRequest request,         ActionListener<AcknowledgedResponse> listener) throws Exception;1536177418;Stores the specified pipeline definition in the request.;public void putPipeline(Map<DiscoveryNode, IngestInfo> ingestInfos, PutPipelineRequest request,_        ActionListener<AcknowledgedResponse> listener) throws Exception {_            _            validatePipeline(ingestInfos, request)__            clusterService.submitStateUpdateTask("put-pipeline-" + request.getId(),_                new AckedClusterStateUpdateTask<AcknowledgedResponse>(request, listener) {__                    @Override_                    protected AcknowledgedResponse newResponse(boolean acknowledged) {_                        return new AcknowledgedResponse(acknowledged)__                    }__                    @Override_                    public ClusterState execute(ClusterState currentState) {_                        return innerPut(request, currentState)__                    }_                })__    };stores,the,specified,pipeline,definition,in,the,request;public,void,put,pipeline,map,discovery,node,ingest,info,ingest,infos,put,pipeline,request,request,action,listener,acknowledged,response,listener,throws,exception,validate,pipeline,ingest,infos,request,cluster,service,submit,state,update,task,put,pipeline,request,get,id,new,acked,cluster,state,update,task,acknowledged,response,request,listener,override,protected,acknowledged,response,new,response,boolean,acknowledged,return,new,acknowledged,response,acknowledged,override,public,cluster,state,execute,cluster,state,current,state,return,inner,put,request,current,state
IngestService -> public void putPipeline(Map<DiscoveryNode, IngestInfo> ingestInfos, PutPipelineRequest request,         ActionListener<AcknowledgedResponse> listener) throws Exception;1538170812;Stores the specified pipeline definition in the request.;public void putPipeline(Map<DiscoveryNode, IngestInfo> ingestInfos, PutPipelineRequest request,_        ActionListener<AcknowledgedResponse> listener) throws Exception {_            _            validatePipeline(ingestInfos, request)__            clusterService.submitStateUpdateTask("put-pipeline-" + request.getId(),_                new AckedClusterStateUpdateTask<AcknowledgedResponse>(request, listener) {__                    @Override_                    protected AcknowledgedResponse newResponse(boolean acknowledged) {_                        return new AcknowledgedResponse(acknowledged)__                    }__                    @Override_                    public ClusterState execute(ClusterState currentState) {_                        return innerPut(request, currentState)__                    }_                })__    };stores,the,specified,pipeline,definition,in,the,request;public,void,put,pipeline,map,discovery,node,ingest,info,ingest,infos,put,pipeline,request,request,action,listener,acknowledged,response,listener,throws,exception,validate,pipeline,ingest,infos,request,cluster,service,submit,state,update,task,put,pipeline,request,get,id,new,acked,cluster,state,update,task,acknowledged,response,request,listener,override,protected,acknowledged,response,new,response,boolean,acknowledged,return,new,acknowledged,response,acknowledged,override,public,cluster,state,execute,cluster,state,current,state,return,inner,put,request,current,state
IngestService -> public void putPipeline(Map<DiscoveryNode, IngestInfo> ingestInfos, PutPipelineRequest request,         ActionListener<AcknowledgedResponse> listener) throws Exception;1540313026;Stores the specified pipeline definition in the request.;public void putPipeline(Map<DiscoveryNode, IngestInfo> ingestInfos, PutPipelineRequest request,_        ActionListener<AcknowledgedResponse> listener) throws Exception {_            _            validatePipeline(ingestInfos, request)__            clusterService.submitStateUpdateTask("put-pipeline-" + request.getId(),_                new AckedClusterStateUpdateTask<AcknowledgedResponse>(request, listener) {__                    @Override_                    protected AcknowledgedResponse newResponse(boolean acknowledged) {_                        return new AcknowledgedResponse(acknowledged)__                    }__                    @Override_                    public ClusterState execute(ClusterState currentState) {_                        return innerPut(request, currentState)__                    }_                })__    };stores,the,specified,pipeline,definition,in,the,request;public,void,put,pipeline,map,discovery,node,ingest,info,ingest,infos,put,pipeline,request,request,action,listener,acknowledged,response,listener,throws,exception,validate,pipeline,ingest,infos,request,cluster,service,submit,state,update,task,put,pipeline,request,get,id,new,acked,cluster,state,update,task,acknowledged,response,request,listener,override,protected,acknowledged,response,new,response,boolean,acknowledged,return,new,acknowledged,response,acknowledged,override,public,cluster,state,execute,cluster,state,current,state,return,inner,put,request,current,state
IngestService -> public void putPipeline(Map<DiscoveryNode, IngestInfo> ingestInfos, PutPipelineRequest request,         ActionListener<AcknowledgedResponse> listener) throws Exception;1545085511;Stores the specified pipeline definition in the request.;public void putPipeline(Map<DiscoveryNode, IngestInfo> ingestInfos, PutPipelineRequest request,_        ActionListener<AcknowledgedResponse> listener) throws Exception {_            _            validatePipeline(ingestInfos, request)__            clusterService.submitStateUpdateTask("put-pipeline-" + request.getId(),_                new AckedClusterStateUpdateTask<AcknowledgedResponse>(request, listener) {__                    @Override_                    protected AcknowledgedResponse newResponse(boolean acknowledged) {_                        return new AcknowledgedResponse(acknowledged)__                    }__                    @Override_                    public ClusterState execute(ClusterState currentState) {_                        return innerPut(request, currentState)__                    }_                })__    };stores,the,specified,pipeline,definition,in,the,request;public,void,put,pipeline,map,discovery,node,ingest,info,ingest,infos,put,pipeline,request,request,action,listener,acknowledged,response,listener,throws,exception,validate,pipeline,ingest,infos,request,cluster,service,submit,state,update,task,put,pipeline,request,get,id,new,acked,cluster,state,update,task,acknowledged,response,request,listener,override,protected,acknowledged,response,new,response,boolean,acknowledged,return,new,acknowledged,response,acknowledged,override,public,cluster,state,execute,cluster,state,current,state,return,inner,put,request,current,state
IngestService -> public void putPipeline(Map<DiscoveryNode, IngestInfo> ingestInfos, PutPipelineRequest request,         ActionListener<AcknowledgedResponse> listener) throws Exception;1548335343;Stores the specified pipeline definition in the request.;public void putPipeline(Map<DiscoveryNode, IngestInfo> ingestInfos, PutPipelineRequest request,_        ActionListener<AcknowledgedResponse> listener) throws Exception {_            _            validatePipeline(ingestInfos, request)__            clusterService.submitStateUpdateTask("put-pipeline-" + request.getId(),_                new AckedClusterStateUpdateTask<AcknowledgedResponse>(request, listener) {__                    @Override_                    protected AcknowledgedResponse newResponse(boolean acknowledged) {_                        return new AcknowledgedResponse(acknowledged)__                    }__                    @Override_                    public ClusterState execute(ClusterState currentState) {_                        return innerPut(request, currentState)__                    }_                })__    };stores,the,specified,pipeline,definition,in,the,request;public,void,put,pipeline,map,discovery,node,ingest,info,ingest,infos,put,pipeline,request,request,action,listener,acknowledged,response,listener,throws,exception,validate,pipeline,ingest,infos,request,cluster,service,submit,state,update,task,put,pipeline,request,get,id,new,acked,cluster,state,update,task,acknowledged,response,request,listener,override,protected,acknowledged,response,new,response,boolean,acknowledged,return,new,acknowledged,response,acknowledged,override,public,cluster,state,execute,cluster,state,current,state,return,inner,put,request,current,state
IngestService -> public void putPipeline(Map<DiscoveryNode, IngestInfo> ingestInfos, PutPipelineRequest request,         ActionListener<AcknowledgedResponse> listener) throws Exception;1548953505;Stores the specified pipeline definition in the request.;public void putPipeline(Map<DiscoveryNode, IngestInfo> ingestInfos, PutPipelineRequest request,_        ActionListener<AcknowledgedResponse> listener) throws Exception {_            _            validatePipeline(ingestInfos, request)__            clusterService.submitStateUpdateTask("put-pipeline-" + request.getId(),_                new AckedClusterStateUpdateTask<AcknowledgedResponse>(request, listener) {__                    @Override_                    protected AcknowledgedResponse newResponse(boolean acknowledged) {_                        return new AcknowledgedResponse(acknowledged)__                    }__                    @Override_                    public ClusterState execute(ClusterState currentState) {_                        return innerPut(request, currentState)__                    }_                })__    };stores,the,specified,pipeline,definition,in,the,request;public,void,put,pipeline,map,discovery,node,ingest,info,ingest,infos,put,pipeline,request,request,action,listener,acknowledged,response,listener,throws,exception,validate,pipeline,ingest,infos,request,cluster,service,submit,state,update,task,put,pipeline,request,get,id,new,acked,cluster,state,update,task,acknowledged,response,request,listener,override,protected,acknowledged,response,new,response,boolean,acknowledged,return,new,acknowledged,response,acknowledged,override,public,cluster,state,execute,cluster,state,current,state,return,inner,put,request,current,state
IngestService -> public Pipeline getPipeline(String id);1534848846;Returns the pipeline by the specified id;public Pipeline getPipeline(String id) {_        return pipelines.get(id)__    };returns,the,pipeline,by,the,specified,id;public,pipeline,get,pipeline,string,id,return,pipelines,get,id
IngestService -> public Pipeline getPipeline(String id);1535046779;Returns the pipeline by the specified id;public Pipeline getPipeline(String id) {_        return pipelines.get(id)__    };returns,the,pipeline,by,the,specified,id;public,pipeline,get,pipeline,string,id,return,pipelines,get,id
IngestService -> public Pipeline getPipeline(String id);1535552903;Returns the pipeline by the specified id;public Pipeline getPipeline(String id) {_        return pipelines.get(id)__    };returns,the,pipeline,by,the,specified,id;public,pipeline,get,pipeline,string,id,return,pipelines,get,id
IngestService -> public Pipeline getPipeline(String id);1535666657;Returns the pipeline by the specified id;public Pipeline getPipeline(String id) {_        return pipelines.get(id)__    };returns,the,pipeline,by,the,specified,id;public,pipeline,get,pipeline,string,id,return,pipelines,get,id
IngestService -> public Pipeline getPipeline(String id);1536177418;Returns the pipeline by the specified id;public Pipeline getPipeline(String id) {_        return pipelines.get(id)__    };returns,the,pipeline,by,the,specified,id;public,pipeline,get,pipeline,string,id,return,pipelines,get,id
IngestService -> public Pipeline getPipeline(String id);1538170812;Returns the pipeline by the specified id;public Pipeline getPipeline(String id) {_        return pipelines.get(id)__    };returns,the,pipeline,by,the,specified,id;public,pipeline,get,pipeline,string,id,return,pipelines,get,id
IngestService -> public Pipeline getPipeline(String id);1540313026;Returns the pipeline by the specified id;public Pipeline getPipeline(String id) {_        return pipelines.get(id)__    };returns,the,pipeline,by,the,specified,id;public,pipeline,get,pipeline,string,id,return,pipelines,get,id
IngestService -> public Pipeline getPipeline(String id);1545085511;Returns the pipeline by the specified id;public Pipeline getPipeline(String id) {_        return pipelines.get(id)__    };returns,the,pipeline,by,the,specified,id;public,pipeline,get,pipeline,string,id,return,pipelines,get,id
IngestService -> public Pipeline getPipeline(String id);1548335343;Returns the pipeline by the specified id;public Pipeline getPipeline(String id) {_        return pipelines.get(id)__    };returns,the,pipeline,by,the,specified,id;public,pipeline,get,pipeline,string,id,return,pipelines,get,id
IngestService -> public Pipeline getPipeline(String id);1548953505;Returns the pipeline by the specified id;public Pipeline getPipeline(String id) {_        return pipelines.get(id)__    };returns,the,pipeline,by,the,specified,id;public,pipeline,get,pipeline,string,id,return,pipelines,get,id
IngestService -> public void delete(DeletePipelineRequest request, ActionListener<AcknowledgedResponse> listener);1534848846;Deletes the pipeline specified by id in the request.;public void delete(DeletePipelineRequest request, ActionListener<AcknowledgedResponse> listener) {_        clusterService.submitStateUpdateTask("delete-pipeline-" + request.getId(),_                new AckedClusterStateUpdateTask<AcknowledgedResponse>(request, listener) {__            @Override_            protected AcknowledgedResponse newResponse(boolean acknowledged) {_                return new AcknowledgedResponse(acknowledged)__            }__            @Override_            public ClusterState execute(ClusterState currentState) {_                return innerDelete(request, currentState)__            }_        })__    };deletes,the,pipeline,specified,by,id,in,the,request;public,void,delete,delete,pipeline,request,request,action,listener,acknowledged,response,listener,cluster,service,submit,state,update,task,delete,pipeline,request,get,id,new,acked,cluster,state,update,task,acknowledged,response,request,listener,override,protected,acknowledged,response,new,response,boolean,acknowledged,return,new,acknowledged,response,acknowledged,override,public,cluster,state,execute,cluster,state,current,state,return,inner,delete,request,current,state
IngestService -> public void delete(DeletePipelineRequest request, ActionListener<AcknowledgedResponse> listener);1535046779;Deletes the pipeline specified by id in the request.;public void delete(DeletePipelineRequest request, ActionListener<AcknowledgedResponse> listener) {_        clusterService.submitStateUpdateTask("delete-pipeline-" + request.getId(),_                new AckedClusterStateUpdateTask<AcknowledgedResponse>(request, listener) {__            @Override_            protected AcknowledgedResponse newResponse(boolean acknowledged) {_                return new AcknowledgedResponse(acknowledged)__            }__            @Override_            public ClusterState execute(ClusterState currentState) {_                return innerDelete(request, currentState)__            }_        })__    };deletes,the,pipeline,specified,by,id,in,the,request;public,void,delete,delete,pipeline,request,request,action,listener,acknowledged,response,listener,cluster,service,submit,state,update,task,delete,pipeline,request,get,id,new,acked,cluster,state,update,task,acknowledged,response,request,listener,override,protected,acknowledged,response,new,response,boolean,acknowledged,return,new,acknowledged,response,acknowledged,override,public,cluster,state,execute,cluster,state,current,state,return,inner,delete,request,current,state
IngestService -> public void delete(DeletePipelineRequest request, ActionListener<AcknowledgedResponse> listener);1535552903;Deletes the pipeline specified by id in the request.;public void delete(DeletePipelineRequest request, ActionListener<AcknowledgedResponse> listener) {_        clusterService.submitStateUpdateTask("delete-pipeline-" + request.getId(),_                new AckedClusterStateUpdateTask<AcknowledgedResponse>(request, listener) {__            @Override_            protected AcknowledgedResponse newResponse(boolean acknowledged) {_                return new AcknowledgedResponse(acknowledged)__            }__            @Override_            public ClusterState execute(ClusterState currentState) {_                return innerDelete(request, currentState)__            }_        })__    };deletes,the,pipeline,specified,by,id,in,the,request;public,void,delete,delete,pipeline,request,request,action,listener,acknowledged,response,listener,cluster,service,submit,state,update,task,delete,pipeline,request,get,id,new,acked,cluster,state,update,task,acknowledged,response,request,listener,override,protected,acknowledged,response,new,response,boolean,acknowledged,return,new,acknowledged,response,acknowledged,override,public,cluster,state,execute,cluster,state,current,state,return,inner,delete,request,current,state
IngestService -> public void delete(DeletePipelineRequest request, ActionListener<AcknowledgedResponse> listener);1535666657;Deletes the pipeline specified by id in the request.;public void delete(DeletePipelineRequest request, ActionListener<AcknowledgedResponse> listener) {_        clusterService.submitStateUpdateTask("delete-pipeline-" + request.getId(),_                new AckedClusterStateUpdateTask<AcknowledgedResponse>(request, listener) {__            @Override_            protected AcknowledgedResponse newResponse(boolean acknowledged) {_                return new AcknowledgedResponse(acknowledged)__            }__            @Override_            public ClusterState execute(ClusterState currentState) {_                return innerDelete(request, currentState)__            }_        })__    };deletes,the,pipeline,specified,by,id,in,the,request;public,void,delete,delete,pipeline,request,request,action,listener,acknowledged,response,listener,cluster,service,submit,state,update,task,delete,pipeline,request,get,id,new,acked,cluster,state,update,task,acknowledged,response,request,listener,override,protected,acknowledged,response,new,response,boolean,acknowledged,return,new,acknowledged,response,acknowledged,override,public,cluster,state,execute,cluster,state,current,state,return,inner,delete,request,current,state
IngestService -> public void delete(DeletePipelineRequest request, ActionListener<AcknowledgedResponse> listener);1536177418;Deletes the pipeline specified by id in the request.;public void delete(DeletePipelineRequest request, ActionListener<AcknowledgedResponse> listener) {_        clusterService.submitStateUpdateTask("delete-pipeline-" + request.getId(),_                new AckedClusterStateUpdateTask<AcknowledgedResponse>(request, listener) {__            @Override_            protected AcknowledgedResponse newResponse(boolean acknowledged) {_                return new AcknowledgedResponse(acknowledged)__            }__            @Override_            public ClusterState execute(ClusterState currentState) {_                return innerDelete(request, currentState)__            }_        })__    };deletes,the,pipeline,specified,by,id,in,the,request;public,void,delete,delete,pipeline,request,request,action,listener,acknowledged,response,listener,cluster,service,submit,state,update,task,delete,pipeline,request,get,id,new,acked,cluster,state,update,task,acknowledged,response,request,listener,override,protected,acknowledged,response,new,response,boolean,acknowledged,return,new,acknowledged,response,acknowledged,override,public,cluster,state,execute,cluster,state,current,state,return,inner,delete,request,current,state
IngestService -> public void delete(DeletePipelineRequest request, ActionListener<AcknowledgedResponse> listener);1538170812;Deletes the pipeline specified by id in the request.;public void delete(DeletePipelineRequest request, ActionListener<AcknowledgedResponse> listener) {_        clusterService.submitStateUpdateTask("delete-pipeline-" + request.getId(),_                new AckedClusterStateUpdateTask<AcknowledgedResponse>(request, listener) {__            @Override_            protected AcknowledgedResponse newResponse(boolean acknowledged) {_                return new AcknowledgedResponse(acknowledged)__            }__            @Override_            public ClusterState execute(ClusterState currentState) {_                return innerDelete(request, currentState)__            }_        })__    };deletes,the,pipeline,specified,by,id,in,the,request;public,void,delete,delete,pipeline,request,request,action,listener,acknowledged,response,listener,cluster,service,submit,state,update,task,delete,pipeline,request,get,id,new,acked,cluster,state,update,task,acknowledged,response,request,listener,override,protected,acknowledged,response,new,response,boolean,acknowledged,return,new,acknowledged,response,acknowledged,override,public,cluster,state,execute,cluster,state,current,state,return,inner,delete,request,current,state
IngestService -> public void delete(DeletePipelineRequest request, ActionListener<AcknowledgedResponse> listener);1540313026;Deletes the pipeline specified by id in the request.;public void delete(DeletePipelineRequest request, ActionListener<AcknowledgedResponse> listener) {_        clusterService.submitStateUpdateTask("delete-pipeline-" + request.getId(),_                new AckedClusterStateUpdateTask<AcknowledgedResponse>(request, listener) {__            @Override_            protected AcknowledgedResponse newResponse(boolean acknowledged) {_                return new AcknowledgedResponse(acknowledged)__            }__            @Override_            public ClusterState execute(ClusterState currentState) {_                return innerDelete(request, currentState)__            }_        })__    };deletes,the,pipeline,specified,by,id,in,the,request;public,void,delete,delete,pipeline,request,request,action,listener,acknowledged,response,listener,cluster,service,submit,state,update,task,delete,pipeline,request,get,id,new,acked,cluster,state,update,task,acknowledged,response,request,listener,override,protected,acknowledged,response,new,response,boolean,acknowledged,return,new,acknowledged,response,acknowledged,override,public,cluster,state,execute,cluster,state,current,state,return,inner,delete,request,current,state
IngestService -> public void delete(DeletePipelineRequest request, ActionListener<AcknowledgedResponse> listener);1545085511;Deletes the pipeline specified by id in the request.;public void delete(DeletePipelineRequest request, ActionListener<AcknowledgedResponse> listener) {_        clusterService.submitStateUpdateTask("delete-pipeline-" + request.getId(),_                new AckedClusterStateUpdateTask<AcknowledgedResponse>(request, listener) {__            @Override_            protected AcknowledgedResponse newResponse(boolean acknowledged) {_                return new AcknowledgedResponse(acknowledged)__            }__            @Override_            public ClusterState execute(ClusterState currentState) {_                return innerDelete(request, currentState)__            }_        })__    };deletes,the,pipeline,specified,by,id,in,the,request;public,void,delete,delete,pipeline,request,request,action,listener,acknowledged,response,listener,cluster,service,submit,state,update,task,delete,pipeline,request,get,id,new,acked,cluster,state,update,task,acknowledged,response,request,listener,override,protected,acknowledged,response,new,response,boolean,acknowledged,return,new,acknowledged,response,acknowledged,override,public,cluster,state,execute,cluster,state,current,state,return,inner,delete,request,current,state
IngestService -> public void delete(DeletePipelineRequest request, ActionListener<AcknowledgedResponse> listener);1548335343;Deletes the pipeline specified by id in the request.;public void delete(DeletePipelineRequest request, ActionListener<AcknowledgedResponse> listener) {_        clusterService.submitStateUpdateTask("delete-pipeline-" + request.getId(),_                new AckedClusterStateUpdateTask<AcknowledgedResponse>(request, listener) {__            @Override_            protected AcknowledgedResponse newResponse(boolean acknowledged) {_                return new AcknowledgedResponse(acknowledged)__            }__            @Override_            public ClusterState execute(ClusterState currentState) {_                return innerDelete(request, currentState)__            }_        })__    };deletes,the,pipeline,specified,by,id,in,the,request;public,void,delete,delete,pipeline,request,request,action,listener,acknowledged,response,listener,cluster,service,submit,state,update,task,delete,pipeline,request,get,id,new,acked,cluster,state,update,task,acknowledged,response,request,listener,override,protected,acknowledged,response,new,response,boolean,acknowledged,return,new,acknowledged,response,acknowledged,override,public,cluster,state,execute,cluster,state,current,state,return,inner,delete,request,current,state
IngestService -> public void delete(DeletePipelineRequest request, ActionListener<AcknowledgedResponse> listener);1548953505;Deletes the pipeline specified by id in the request.;public void delete(DeletePipelineRequest request, ActionListener<AcknowledgedResponse> listener) {_        clusterService.submitStateUpdateTask("delete-pipeline-" + request.getId(),_                new AckedClusterStateUpdateTask<AcknowledgedResponse>(request, listener) {__            @Override_            protected AcknowledgedResponse newResponse(boolean acknowledged) {_                return new AcknowledgedResponse(acknowledged)__            }__            @Override_            public ClusterState execute(ClusterState currentState) {_                return innerDelete(request, currentState)__            }_        })__    };deletes,the,pipeline,specified,by,id,in,the,request;public,void,delete,delete,pipeline,request,request,action,listener,acknowledged,response,listener,cluster,service,submit,state,update,task,delete,pipeline,request,get,id,new,acked,cluster,state,update,task,acknowledged,response,request,listener,override,protected,acknowledged,response,new,response,boolean,acknowledged,return,new,acknowledged,response,acknowledged,override,public,cluster,state,execute,cluster,state,current,state,return,inner,delete,request,current,state
IngestService -> public static List<PipelineConfiguration> getPipelines(ClusterState clusterState, String... ids);1534848846;@return pipeline configuration specified by id. If multiple ids or wildcards are specified multiple pipelines_may be returned;public static List<PipelineConfiguration> getPipelines(ClusterState clusterState, String... ids) {_        IngestMetadata ingestMetadata = clusterState.getMetaData().custom(IngestMetadata.TYPE)__        return innerGetPipelines(ingestMetadata, ids)__    };return,pipeline,configuration,specified,by,id,if,multiple,ids,or,wildcards,are,specified,multiple,pipelines,may,be,returned;public,static,list,pipeline,configuration,get,pipelines,cluster,state,cluster,state,string,ids,ingest,metadata,ingest,metadata,cluster,state,get,meta,data,custom,ingest,metadata,type,return,inner,get,pipelines,ingest,metadata,ids
IngestService -> public static List<PipelineConfiguration> getPipelines(ClusterState clusterState, String... ids);1535046779;@return pipeline configuration specified by id. If multiple ids or wildcards are specified multiple pipelines_may be returned;public static List<PipelineConfiguration> getPipelines(ClusterState clusterState, String... ids) {_        IngestMetadata ingestMetadata = clusterState.getMetaData().custom(IngestMetadata.TYPE)__        return innerGetPipelines(ingestMetadata, ids)__    };return,pipeline,configuration,specified,by,id,if,multiple,ids,or,wildcards,are,specified,multiple,pipelines,may,be,returned;public,static,list,pipeline,configuration,get,pipelines,cluster,state,cluster,state,string,ids,ingest,metadata,ingest,metadata,cluster,state,get,meta,data,custom,ingest,metadata,type,return,inner,get,pipelines,ingest,metadata,ids
IngestService -> public static List<PipelineConfiguration> getPipelines(ClusterState clusterState, String... ids);1535552903;@return pipeline configuration specified by id. If multiple ids or wildcards are specified multiple pipelines_may be returned;public static List<PipelineConfiguration> getPipelines(ClusterState clusterState, String... ids) {_        IngestMetadata ingestMetadata = clusterState.getMetaData().custom(IngestMetadata.TYPE)__        return innerGetPipelines(ingestMetadata, ids)__    };return,pipeline,configuration,specified,by,id,if,multiple,ids,or,wildcards,are,specified,multiple,pipelines,may,be,returned;public,static,list,pipeline,configuration,get,pipelines,cluster,state,cluster,state,string,ids,ingest,metadata,ingest,metadata,cluster,state,get,meta,data,custom,ingest,metadata,type,return,inner,get,pipelines,ingest,metadata,ids
IngestService -> public static List<PipelineConfiguration> getPipelines(ClusterState clusterState, String... ids);1535666657;@return pipeline configuration specified by id. If multiple ids or wildcards are specified multiple pipelines_may be returned;public static List<PipelineConfiguration> getPipelines(ClusterState clusterState, String... ids) {_        IngestMetadata ingestMetadata = clusterState.getMetaData().custom(IngestMetadata.TYPE)__        return innerGetPipelines(ingestMetadata, ids)__    };return,pipeline,configuration,specified,by,id,if,multiple,ids,or,wildcards,are,specified,multiple,pipelines,may,be,returned;public,static,list,pipeline,configuration,get,pipelines,cluster,state,cluster,state,string,ids,ingest,metadata,ingest,metadata,cluster,state,get,meta,data,custom,ingest,metadata,type,return,inner,get,pipelines,ingest,metadata,ids
IngestService -> public static List<PipelineConfiguration> getPipelines(ClusterState clusterState, String... ids);1536177418;@return pipeline configuration specified by id. If multiple ids or wildcards are specified multiple pipelines_may be returned;public static List<PipelineConfiguration> getPipelines(ClusterState clusterState, String... ids) {_        IngestMetadata ingestMetadata = clusterState.getMetaData().custom(IngestMetadata.TYPE)__        return innerGetPipelines(ingestMetadata, ids)__    };return,pipeline,configuration,specified,by,id,if,multiple,ids,or,wildcards,are,specified,multiple,pipelines,may,be,returned;public,static,list,pipeline,configuration,get,pipelines,cluster,state,cluster,state,string,ids,ingest,metadata,ingest,metadata,cluster,state,get,meta,data,custom,ingest,metadata,type,return,inner,get,pipelines,ingest,metadata,ids
IngestService -> public static List<PipelineConfiguration> getPipelines(ClusterState clusterState, String... ids);1538170812;@return pipeline configuration specified by id. If multiple ids or wildcards are specified multiple pipelines_may be returned;public static List<PipelineConfiguration> getPipelines(ClusterState clusterState, String... ids) {_        IngestMetadata ingestMetadata = clusterState.getMetaData().custom(IngestMetadata.TYPE)__        return innerGetPipelines(ingestMetadata, ids)__    };return,pipeline,configuration,specified,by,id,if,multiple,ids,or,wildcards,are,specified,multiple,pipelines,may,be,returned;public,static,list,pipeline,configuration,get,pipelines,cluster,state,cluster,state,string,ids,ingest,metadata,ingest,metadata,cluster,state,get,meta,data,custom,ingest,metadata,type,return,inner,get,pipelines,ingest,metadata,ids
IngestService -> public static List<PipelineConfiguration> getPipelines(ClusterState clusterState, String... ids);1540313026;@return pipeline configuration specified by id. If multiple ids or wildcards are specified multiple pipelines_may be returned;public static List<PipelineConfiguration> getPipelines(ClusterState clusterState, String... ids) {_        IngestMetadata ingestMetadata = clusterState.getMetaData().custom(IngestMetadata.TYPE)__        return innerGetPipelines(ingestMetadata, ids)__    };return,pipeline,configuration,specified,by,id,if,multiple,ids,or,wildcards,are,specified,multiple,pipelines,may,be,returned;public,static,list,pipeline,configuration,get,pipelines,cluster,state,cluster,state,string,ids,ingest,metadata,ingest,metadata,cluster,state,get,meta,data,custom,ingest,metadata,type,return,inner,get,pipelines,ingest,metadata,ids
IngestService -> public static List<PipelineConfiguration> getPipelines(ClusterState clusterState, String... ids);1545085511;@return pipeline configuration specified by id. If multiple ids or wildcards are specified multiple pipelines_may be returned;public static List<PipelineConfiguration> getPipelines(ClusterState clusterState, String... ids) {_        IngestMetadata ingestMetadata = clusterState.getMetaData().custom(IngestMetadata.TYPE)__        return innerGetPipelines(ingestMetadata, ids)__    };return,pipeline,configuration,specified,by,id,if,multiple,ids,or,wildcards,are,specified,multiple,pipelines,may,be,returned;public,static,list,pipeline,configuration,get,pipelines,cluster,state,cluster,state,string,ids,ingest,metadata,ingest,metadata,cluster,state,get,meta,data,custom,ingest,metadata,type,return,inner,get,pipelines,ingest,metadata,ids
IngestService -> public static List<PipelineConfiguration> getPipelines(ClusterState clusterState, String... ids);1548335343;@return pipeline configuration specified by id. If multiple ids or wildcards are specified multiple pipelines_may be returned;public static List<PipelineConfiguration> getPipelines(ClusterState clusterState, String... ids) {_        IngestMetadata ingestMetadata = clusterState.getMetaData().custom(IngestMetadata.TYPE)__        return innerGetPipelines(ingestMetadata, ids)__    };return,pipeline,configuration,specified,by,id,if,multiple,ids,or,wildcards,are,specified,multiple,pipelines,may,be,returned;public,static,list,pipeline,configuration,get,pipelines,cluster,state,cluster,state,string,ids,ingest,metadata,ingest,metadata,cluster,state,get,meta,data,custom,ingest,metadata,type,return,inner,get,pipelines,ingest,metadata,ids
IngestService -> public static List<PipelineConfiguration> getPipelines(ClusterState clusterState, String... ids);1548953505;@return pipeline configuration specified by id. If multiple ids or wildcards are specified multiple pipelines_may be returned;public static List<PipelineConfiguration> getPipelines(ClusterState clusterState, String... ids) {_        IngestMetadata ingestMetadata = clusterState.getMetaData().custom(IngestMetadata.TYPE)__        return innerGetPipelines(ingestMetadata, ids)__    };return,pipeline,configuration,specified,by,id,if,multiple,ids,or,wildcards,are,specified,multiple,pipelines,may,be,returned;public,static,list,pipeline,configuration,get,pipelines,cluster,state,cluster,state,string,ids,ingest,metadata,ingest,metadata,cluster,state,get,meta,data,custom,ingest,metadata,type,return,inner,get,pipelines,ingest,metadata,ids
