# id;timestamp;commentText;codeText;commentWords;codeWords
ShardSearchRequest -> String preference()_;1524780945;Returns the preference of the original {@link SearchRequest#preference()}.;String preference()_;returns,the,preference,of,the,original,link,search,request,preference;string,preference
ShardSearchRequest -> String preference()_;1525334055;Returns the preference of the original {@link SearchRequest#preference()}.;String preference()_;returns,the,preference,of,the,original,link,search,request,preference;string,preference
ShardSearchRequest -> String preference()_;1528762805;Returns the preference of the original {@link SearchRequest#preference()}.;String preference()_;returns,the,preference,of,the,original,link,search,request,preference;string,preference
ShardSearchRequest -> String preference()_;1545997405;Returns the preference of the original {@link SearchRequest#preference()}.;String preference()_;returns,the,preference,of,the,original,link,search,request,preference;string,preference
ShardSearchRequest -> String preference()_;1548770182;Returns the preference of the original {@link SearchRequest#preference()}.;String preference()_;returns,the,preference,of,the,original,link,search,request,preference;string,preference
ShardSearchRequest -> String preference()_;1549896917;Returns the preference of the original {@link SearchRequest#preference()}.;String preference()_;returns,the,preference,of,the,original,link,search,request,preference;string,preference
ShardSearchRequest -> boolean isProfile()_;1524684173;Returns true if this shard search is being profiled or not;boolean isProfile()_;returns,true,if,this,shard,search,is,being,profiled,or,not;boolean,is,profile
ShardSearchRequest -> boolean isProfile()_;1524780945;Returns true if this shard search is being profiled or not;boolean isProfile()_;returns,true,if,this,shard,search,is,being,profiled,or,not;boolean,is,profile
ShardSearchRequest -> boolean isProfile()_;1525334055;Returns true if this shard search is being profiled or not;boolean isProfile()_;returns,true,if,this,shard,search,is,being,profiled,or,not;boolean,is,profile
ShardSearchRequest -> boolean isProfile()_;1528762805;Returns true if this shard search is being profiled or not;boolean isProfile()_;returns,true,if,this,shard,search,is,being,profiled,or,not;boolean,is,profile
ShardSearchRequest -> boolean isProfile()_;1545997405;Returns true if this shard search is being profiled or not;boolean isProfile()_;returns,true,if,this,shard,search,is,being,profiled,or,not;boolean,is,profile
ShardSearchRequest -> boolean isProfile()_;1548770182;Returns true if this shard search is being profiled or not;boolean isProfile()_;returns,true,if,this,shard,search,is,being,profiled,or,not;boolean,is,profile
ShardSearchRequest -> void setProfile(boolean profile)_;1524684173;Sets if this shard search needs to be profiled or not_@param profile True if the shard should be profiled;void setProfile(boolean profile)_;sets,if,this,shard,search,needs,to,be,profiled,or,not,param,profile,true,if,the,shard,should,be,profiled;void,set,profile,boolean,profile
ShardSearchRequest -> void setProfile(boolean profile)_;1524780945;Sets if this shard search needs to be profiled or not_@param profile True if the shard should be profiled;void setProfile(boolean profile)_;sets,if,this,shard,search,needs,to,be,profiled,or,not,param,profile,true,if,the,shard,should,be,profiled;void,set,profile,boolean,profile
ShardSearchRequest -> void setProfile(boolean profile)_;1525334055;Sets if this shard search needs to be profiled or not_@param profile True if the shard should be profiled;void setProfile(boolean profile)_;sets,if,this,shard,search,needs,to,be,profiled,or,not,param,profile,true,if,the,shard,should,be,profiled;void,set,profile,boolean,profile
ShardSearchRequest -> void setProfile(boolean profile)_;1528762805;Sets if this shard search needs to be profiled or not_@param profile True if the shard should be profiled;void setProfile(boolean profile)_;sets,if,this,shard,search,needs,to,be,profiled,or,not,param,profile,true,if,the,shard,should,be,profiled;void,set,profile,boolean,profile
ShardSearchRequest -> void setProfile(boolean profile)_;1545997405;Sets if this shard search needs to be profiled or not_@param profile True if the shard should be profiled;void setProfile(boolean profile)_;sets,if,this,shard,search,needs,to,be,profiled,or,not,param,profile,true,if,the,shard,should,be,profiled;void,set,profile,boolean,profile
ShardSearchRequest -> void setProfile(boolean profile)_;1548770182;Sets if this shard search needs to be profiled or not_@param profile True if the shard should be profiled;void setProfile(boolean profile)_;sets,if,this,shard,search,needs,to,be,profiled,or,not,param,profile,true,if,the,shard,should,be,profiled;void,set,profile,boolean,profile
ShardSearchRequest -> static QueryBuilder parseAliasFilter(CheckedFunction<byte[], QueryBuilder, IOException> filterParser,                                          IndexMetaData metaData, String... aliasNames);1524684173;Returns the filter associated with listed filtering aliases._<p>_The list of filtering aliases should be obtained by calling MetaData.filteringAliases._Returns <tt>null</tt> if no filtering is required.</p>;static QueryBuilder parseAliasFilter(CheckedFunction<byte[], QueryBuilder, IOException> filterParser,_                                         IndexMetaData metaData, String... aliasNames) {_        if (aliasNames == null || aliasNames.length == 0) {_            return null__        }_        Index index = metaData.getIndex()__        ImmutableOpenMap<String, AliasMetaData> aliases = metaData.getAliases()__        Function<AliasMetaData, QueryBuilder> parserFunction = (alias) -> {_            if (alias.filter() == null) {_                return null__            }_            try {_                return filterParser.apply(alias.filter().uncompressed())__            } catch (IOException ex) {_                throw new AliasFilterParsingException(index, alias.getAlias(), "Invalid alias filter", ex)__            }_        }__        if (aliasNames.length == 1) {_            AliasMetaData alias = aliases.get(aliasNames[0])__            if (alias == null) {_                _                throw new InvalidAliasNameException(index, aliasNames[0], "Unknown alias name was passed to alias Filter")__            }_            return parserFunction.apply(alias)__        } else {_            _            BoolQueryBuilder combined = new BoolQueryBuilder()__            for (String aliasName : aliasNames) {_                AliasMetaData alias = aliases.get(aliasName)__                if (alias == null) {_                    _                    throw new InvalidAliasNameException(index, aliasNames[0],_                        "Unknown alias name was passed to alias Filter")__                }_                QueryBuilder parsedFilter = parserFunction.apply(alias)__                if (parsedFilter != null) {_                    combined.should(parsedFilter)__                } else {_                    _                    return null__                }_            }_            return combined__        }_    };returns,the,filter,associated,with,listed,filtering,aliases,p,the,list,of,filtering,aliases,should,be,obtained,by,calling,meta,data,filtering,aliases,returns,tt,null,tt,if,no,filtering,is,required,p;static,query,builder,parse,alias,filter,checked,function,byte,query,builder,ioexception,filter,parser,index,meta,data,meta,data,string,alias,names,if,alias,names,null,alias,names,length,0,return,null,index,index,meta,data,get,index,immutable,open,map,string,alias,meta,data,aliases,meta,data,get,aliases,function,alias,meta,data,query,builder,parser,function,alias,if,alias,filter,null,return,null,try,return,filter,parser,apply,alias,filter,uncompressed,catch,ioexception,ex,throw,new,alias,filter,parsing,exception,index,alias,get,alias,invalid,alias,filter,ex,if,alias,names,length,1,alias,meta,data,alias,aliases,get,alias,names,0,if,alias,null,throw,new,invalid,alias,name,exception,index,alias,names,0,unknown,alias,name,was,passed,to,alias,filter,return,parser,function,apply,alias,else,bool,query,builder,combined,new,bool,query,builder,for,string,alias,name,alias,names,alias,meta,data,alias,aliases,get,alias,name,if,alias,null,throw,new,invalid,alias,name,exception,index,alias,names,0,unknown,alias,name,was,passed,to,alias,filter,query,builder,parsed,filter,parser,function,apply,alias,if,parsed,filter,null,combined,should,parsed,filter,else,return,null,return,combined
ShardSearchRequest -> static QueryBuilder parseAliasFilter(CheckedFunction<byte[], QueryBuilder, IOException> filterParser,                                          IndexMetaData metaData, String... aliasNames);1524780945;Returns the filter associated with listed filtering aliases._<p>_The list of filtering aliases should be obtained by calling MetaData.filteringAliases._Returns <tt>null</tt> if no filtering is required.</p>;static QueryBuilder parseAliasFilter(CheckedFunction<byte[], QueryBuilder, IOException> filterParser,_                                         IndexMetaData metaData, String... aliasNames) {_        if (aliasNames == null || aliasNames.length == 0) {_            return null__        }_        Index index = metaData.getIndex()__        ImmutableOpenMap<String, AliasMetaData> aliases = metaData.getAliases()__        Function<AliasMetaData, QueryBuilder> parserFunction = (alias) -> {_            if (alias.filter() == null) {_                return null__            }_            try {_                return filterParser.apply(alias.filter().uncompressed())__            } catch (IOException ex) {_                throw new AliasFilterParsingException(index, alias.getAlias(), "Invalid alias filter", ex)__            }_        }__        if (aliasNames.length == 1) {_            AliasMetaData alias = aliases.get(aliasNames[0])__            if (alias == null) {_                _                throw new InvalidAliasNameException(index, aliasNames[0], "Unknown alias name was passed to alias Filter")__            }_            return parserFunction.apply(alias)__        } else {_            _            BoolQueryBuilder combined = new BoolQueryBuilder()__            for (String aliasName : aliasNames) {_                AliasMetaData alias = aliases.get(aliasName)__                if (alias == null) {_                    _                    throw new InvalidAliasNameException(index, aliasNames[0],_                        "Unknown alias name was passed to alias Filter")__                }_                QueryBuilder parsedFilter = parserFunction.apply(alias)__                if (parsedFilter != null) {_                    combined.should(parsedFilter)__                } else {_                    _                    return null__                }_            }_            return combined__        }_    };returns,the,filter,associated,with,listed,filtering,aliases,p,the,list,of,filtering,aliases,should,be,obtained,by,calling,meta,data,filtering,aliases,returns,tt,null,tt,if,no,filtering,is,required,p;static,query,builder,parse,alias,filter,checked,function,byte,query,builder,ioexception,filter,parser,index,meta,data,meta,data,string,alias,names,if,alias,names,null,alias,names,length,0,return,null,index,index,meta,data,get,index,immutable,open,map,string,alias,meta,data,aliases,meta,data,get,aliases,function,alias,meta,data,query,builder,parser,function,alias,if,alias,filter,null,return,null,try,return,filter,parser,apply,alias,filter,uncompressed,catch,ioexception,ex,throw,new,alias,filter,parsing,exception,index,alias,get,alias,invalid,alias,filter,ex,if,alias,names,length,1,alias,meta,data,alias,aliases,get,alias,names,0,if,alias,null,throw,new,invalid,alias,name,exception,index,alias,names,0,unknown,alias,name,was,passed,to,alias,filter,return,parser,function,apply,alias,else,bool,query,builder,combined,new,bool,query,builder,for,string,alias,name,alias,names,alias,meta,data,alias,aliases,get,alias,name,if,alias,null,throw,new,invalid,alias,name,exception,index,alias,names,0,unknown,alias,name,was,passed,to,alias,filter,query,builder,parsed,filter,parser,function,apply,alias,if,parsed,filter,null,combined,should,parsed,filter,else,return,null,return,combined
ShardSearchRequest -> static QueryBuilder parseAliasFilter(CheckedFunction<byte[], QueryBuilder, IOException> filterParser,                                          IndexMetaData metaData, String... aliasNames);1525334055;Returns the filter associated with listed filtering aliases._<p>_The list of filtering aliases should be obtained by calling MetaData.filteringAliases._Returns {@code null} if no filtering is required.</p>;static QueryBuilder parseAliasFilter(CheckedFunction<byte[], QueryBuilder, IOException> filterParser,_                                         IndexMetaData metaData, String... aliasNames) {_        if (aliasNames == null || aliasNames.length == 0) {_            return null__        }_        Index index = metaData.getIndex()__        ImmutableOpenMap<String, AliasMetaData> aliases = metaData.getAliases()__        Function<AliasMetaData, QueryBuilder> parserFunction = (alias) -> {_            if (alias.filter() == null) {_                return null__            }_            try {_                return filterParser.apply(alias.filter().uncompressed())__            } catch (IOException ex) {_                throw new AliasFilterParsingException(index, alias.getAlias(), "Invalid alias filter", ex)__            }_        }__        if (aliasNames.length == 1) {_            AliasMetaData alias = aliases.get(aliasNames[0])__            if (alias == null) {_                _                throw new InvalidAliasNameException(index, aliasNames[0], "Unknown alias name was passed to alias Filter")__            }_            return parserFunction.apply(alias)__        } else {_            _            BoolQueryBuilder combined = new BoolQueryBuilder()__            for (String aliasName : aliasNames) {_                AliasMetaData alias = aliases.get(aliasName)__                if (alias == null) {_                    _                    throw new InvalidAliasNameException(index, aliasNames[0],_                        "Unknown alias name was passed to alias Filter")__                }_                QueryBuilder parsedFilter = parserFunction.apply(alias)__                if (parsedFilter != null) {_                    combined.should(parsedFilter)__                } else {_                    _                    return null__                }_            }_            return combined__        }_    };returns,the,filter,associated,with,listed,filtering,aliases,p,the,list,of,filtering,aliases,should,be,obtained,by,calling,meta,data,filtering,aliases,returns,code,null,if,no,filtering,is,required,p;static,query,builder,parse,alias,filter,checked,function,byte,query,builder,ioexception,filter,parser,index,meta,data,meta,data,string,alias,names,if,alias,names,null,alias,names,length,0,return,null,index,index,meta,data,get,index,immutable,open,map,string,alias,meta,data,aliases,meta,data,get,aliases,function,alias,meta,data,query,builder,parser,function,alias,if,alias,filter,null,return,null,try,return,filter,parser,apply,alias,filter,uncompressed,catch,ioexception,ex,throw,new,alias,filter,parsing,exception,index,alias,get,alias,invalid,alias,filter,ex,if,alias,names,length,1,alias,meta,data,alias,aliases,get,alias,names,0,if,alias,null,throw,new,invalid,alias,name,exception,index,alias,names,0,unknown,alias,name,was,passed,to,alias,filter,return,parser,function,apply,alias,else,bool,query,builder,combined,new,bool,query,builder,for,string,alias,name,alias,names,alias,meta,data,alias,aliases,get,alias,name,if,alias,null,throw,new,invalid,alias,name,exception,index,alias,names,0,unknown,alias,name,was,passed,to,alias,filter,query,builder,parsed,filter,parser,function,apply,alias,if,parsed,filter,null,combined,should,parsed,filter,else,return,null,return,combined
ShardSearchRequest -> static QueryBuilder parseAliasFilter(CheckedFunction<byte[], QueryBuilder, IOException> filterParser,                                          IndexMetaData metaData, String... aliasNames);1528762805;Returns the filter associated with listed filtering aliases._<p>_The list of filtering aliases should be obtained by calling MetaData.filteringAliases._Returns {@code null} if no filtering is required.</p>;static QueryBuilder parseAliasFilter(CheckedFunction<byte[], QueryBuilder, IOException> filterParser,_                                         IndexMetaData metaData, String... aliasNames) {_        if (aliasNames == null || aliasNames.length == 0) {_            return null__        }_        Index index = metaData.getIndex()__        ImmutableOpenMap<String, AliasMetaData> aliases = metaData.getAliases()__        Function<AliasMetaData, QueryBuilder> parserFunction = (alias) -> {_            if (alias.filter() == null) {_                return null__            }_            try {_                return filterParser.apply(alias.filter().uncompressed())__            } catch (IOException ex) {_                throw new AliasFilterParsingException(index, alias.getAlias(), "Invalid alias filter", ex)__            }_        }__        if (aliasNames.length == 1) {_            AliasMetaData alias = aliases.get(aliasNames[0])__            if (alias == null) {_                _                throw new InvalidAliasNameException(index, aliasNames[0], "Unknown alias name was passed to alias Filter")__            }_            return parserFunction.apply(alias)__        } else {_            _            BoolQueryBuilder combined = new BoolQueryBuilder()__            for (String aliasName : aliasNames) {_                AliasMetaData alias = aliases.get(aliasName)__                if (alias == null) {_                    _                    throw new InvalidAliasNameException(index, aliasNames[0],_                        "Unknown alias name was passed to alias Filter")__                }_                QueryBuilder parsedFilter = parserFunction.apply(alias)__                if (parsedFilter != null) {_                    combined.should(parsedFilter)__                } else {_                    _                    return null__                }_            }_            return combined__        }_    };returns,the,filter,associated,with,listed,filtering,aliases,p,the,list,of,filtering,aliases,should,be,obtained,by,calling,meta,data,filtering,aliases,returns,code,null,if,no,filtering,is,required,p;static,query,builder,parse,alias,filter,checked,function,byte,query,builder,ioexception,filter,parser,index,meta,data,meta,data,string,alias,names,if,alias,names,null,alias,names,length,0,return,null,index,index,meta,data,get,index,immutable,open,map,string,alias,meta,data,aliases,meta,data,get,aliases,function,alias,meta,data,query,builder,parser,function,alias,if,alias,filter,null,return,null,try,return,filter,parser,apply,alias,filter,uncompressed,catch,ioexception,ex,throw,new,alias,filter,parsing,exception,index,alias,get,alias,invalid,alias,filter,ex,if,alias,names,length,1,alias,meta,data,alias,aliases,get,alias,names,0,if,alias,null,throw,new,invalid,alias,name,exception,index,alias,names,0,unknown,alias,name,was,passed,to,alias,filter,return,parser,function,apply,alias,else,bool,query,builder,combined,new,bool,query,builder,for,string,alias,name,alias,names,alias,meta,data,alias,aliases,get,alias,name,if,alias,null,throw,new,invalid,alias,name,exception,index,alias,names,0,unknown,alias,name,was,passed,to,alias,filter,query,builder,parsed,filter,parser,function,apply,alias,if,parsed,filter,null,combined,should,parsed,filter,else,return,null,return,combined
ShardSearchRequest -> static QueryBuilder parseAliasFilter(CheckedFunction<byte[], QueryBuilder, IOException> filterParser,                                          IndexMetaData metaData, String... aliasNames);1545997405;Returns the filter associated with listed filtering aliases._<p>_The list of filtering aliases should be obtained by calling MetaData.filteringAliases._Returns {@code null} if no filtering is required.</p>;static QueryBuilder parseAliasFilter(CheckedFunction<byte[], QueryBuilder, IOException> filterParser,_                                         IndexMetaData metaData, String... aliasNames) {_        if (aliasNames == null || aliasNames.length == 0) {_            return null__        }_        Index index = metaData.getIndex()__        ImmutableOpenMap<String, AliasMetaData> aliases = metaData.getAliases()__        Function<AliasMetaData, QueryBuilder> parserFunction = (alias) -> {_            if (alias.filter() == null) {_                return null__            }_            try {_                return filterParser.apply(alias.filter().uncompressed())__            } catch (IOException ex) {_                throw new AliasFilterParsingException(index, alias.getAlias(), "Invalid alias filter", ex)__            }_        }__        if (aliasNames.length == 1) {_            AliasMetaData alias = aliases.get(aliasNames[0])__            if (alias == null) {_                _                throw new InvalidAliasNameException(index, aliasNames[0], "Unknown alias name was passed to alias Filter")__            }_            return parserFunction.apply(alias)__        } else {_            _            BoolQueryBuilder combined = new BoolQueryBuilder()__            for (String aliasName : aliasNames) {_                AliasMetaData alias = aliases.get(aliasName)__                if (alias == null) {_                    _                    throw new InvalidAliasNameException(index, aliasNames[0],_                        "Unknown alias name was passed to alias Filter")__                }_                QueryBuilder parsedFilter = parserFunction.apply(alias)__                if (parsedFilter != null) {_                    combined.should(parsedFilter)__                } else {_                    _                    return null__                }_            }_            return combined__        }_    };returns,the,filter,associated,with,listed,filtering,aliases,p,the,list,of,filtering,aliases,should,be,obtained,by,calling,meta,data,filtering,aliases,returns,code,null,if,no,filtering,is,required,p;static,query,builder,parse,alias,filter,checked,function,byte,query,builder,ioexception,filter,parser,index,meta,data,meta,data,string,alias,names,if,alias,names,null,alias,names,length,0,return,null,index,index,meta,data,get,index,immutable,open,map,string,alias,meta,data,aliases,meta,data,get,aliases,function,alias,meta,data,query,builder,parser,function,alias,if,alias,filter,null,return,null,try,return,filter,parser,apply,alias,filter,uncompressed,catch,ioexception,ex,throw,new,alias,filter,parsing,exception,index,alias,get,alias,invalid,alias,filter,ex,if,alias,names,length,1,alias,meta,data,alias,aliases,get,alias,names,0,if,alias,null,throw,new,invalid,alias,name,exception,index,alias,names,0,unknown,alias,name,was,passed,to,alias,filter,return,parser,function,apply,alias,else,bool,query,builder,combined,new,bool,query,builder,for,string,alias,name,alias,names,alias,meta,data,alias,aliases,get,alias,name,if,alias,null,throw,new,invalid,alias,name,exception,index,alias,names,0,unknown,alias,name,was,passed,to,alias,filter,query,builder,parsed,filter,parser,function,apply,alias,if,parsed,filter,null,combined,should,parsed,filter,else,return,null,return,combined
ShardSearchRequest -> static QueryBuilder parseAliasFilter(CheckedFunction<byte[], QueryBuilder, IOException> filterParser,                                          IndexMetaData metaData, String... aliasNames);1548770182;Returns the filter associated with listed filtering aliases._<p>_The list of filtering aliases should be obtained by calling MetaData.filteringAliases._Returns {@code null} if no filtering is required.</p>;static QueryBuilder parseAliasFilter(CheckedFunction<byte[], QueryBuilder, IOException> filterParser,_                                         IndexMetaData metaData, String... aliasNames) {_        if (aliasNames == null || aliasNames.length == 0) {_            return null__        }_        Index index = metaData.getIndex()__        ImmutableOpenMap<String, AliasMetaData> aliases = metaData.getAliases()__        Function<AliasMetaData, QueryBuilder> parserFunction = (alias) -> {_            if (alias.filter() == null) {_                return null__            }_            try {_                return filterParser.apply(alias.filter().uncompressed())__            } catch (IOException ex) {_                throw new AliasFilterParsingException(index, alias.getAlias(), "Invalid alias filter", ex)__            }_        }__        if (aliasNames.length == 1) {_            AliasMetaData alias = aliases.get(aliasNames[0])__            if (alias == null) {_                _                throw new InvalidAliasNameException(index, aliasNames[0], "Unknown alias name was passed to alias Filter")__            }_            return parserFunction.apply(alias)__        } else {_            _            BoolQueryBuilder combined = new BoolQueryBuilder()__            for (String aliasName : aliasNames) {_                AliasMetaData alias = aliases.get(aliasName)__                if (alias == null) {_                    _                    throw new InvalidAliasNameException(index, aliasNames[0],_                        "Unknown alias name was passed to alias Filter")__                }_                QueryBuilder parsedFilter = parserFunction.apply(alias)__                if (parsedFilter != null) {_                    combined.should(parsedFilter)__                } else {_                    _                    return null__                }_            }_            return combined__        }_    };returns,the,filter,associated,with,listed,filtering,aliases,p,the,list,of,filtering,aliases,should,be,obtained,by,calling,meta,data,filtering,aliases,returns,code,null,if,no,filtering,is,required,p;static,query,builder,parse,alias,filter,checked,function,byte,query,builder,ioexception,filter,parser,index,meta,data,meta,data,string,alias,names,if,alias,names,null,alias,names,length,0,return,null,index,index,meta,data,get,index,immutable,open,map,string,alias,meta,data,aliases,meta,data,get,aliases,function,alias,meta,data,query,builder,parser,function,alias,if,alias,filter,null,return,null,try,return,filter,parser,apply,alias,filter,uncompressed,catch,ioexception,ex,throw,new,alias,filter,parsing,exception,index,alias,get,alias,invalid,alias,filter,ex,if,alias,names,length,1,alias,meta,data,alias,aliases,get,alias,names,0,if,alias,null,throw,new,invalid,alias,name,exception,index,alias,names,0,unknown,alias,name,was,passed,to,alias,filter,return,parser,function,apply,alias,else,bool,query,builder,combined,new,bool,query,builder,for,string,alias,name,alias,names,alias,meta,data,alias,aliases,get,alias,name,if,alias,null,throw,new,invalid,alias,name,exception,index,alias,names,0,unknown,alias,name,was,passed,to,alias,filter,query,builder,parsed,filter,parser,function,apply,alias,if,parsed,filter,null,combined,should,parsed,filter,else,return,null,return,combined
ShardSearchRequest -> static QueryBuilder parseAliasFilter(CheckedFunction<byte[], QueryBuilder, IOException> filterParser,                                          IndexMetaData metaData, String... aliasNames);1549896917;Returns the filter associated with listed filtering aliases._<p>_The list of filtering aliases should be obtained by calling MetaData.filteringAliases._Returns {@code null} if no filtering is required.</p>;static QueryBuilder parseAliasFilter(CheckedFunction<byte[], QueryBuilder, IOException> filterParser,_                                         IndexMetaData metaData, String... aliasNames) {_        if (aliasNames == null || aliasNames.length == 0) {_            return null__        }_        Index index = metaData.getIndex()__        ImmutableOpenMap<String, AliasMetaData> aliases = metaData.getAliases()__        Function<AliasMetaData, QueryBuilder> parserFunction = (alias) -> {_            if (alias.filter() == null) {_                return null__            }_            try {_                return filterParser.apply(alias.filter().uncompressed())__            } catch (IOException ex) {_                throw new AliasFilterParsingException(index, alias.getAlias(), "Invalid alias filter", ex)__            }_        }__        if (aliasNames.length == 1) {_            AliasMetaData alias = aliases.get(aliasNames[0])__            if (alias == null) {_                _                throw new InvalidAliasNameException(index, aliasNames[0], "Unknown alias name was passed to alias Filter")__            }_            return parserFunction.apply(alias)__        } else {_            _            BoolQueryBuilder combined = new BoolQueryBuilder()__            for (String aliasName : aliasNames) {_                AliasMetaData alias = aliases.get(aliasName)__                if (alias == null) {_                    _                    throw new InvalidAliasNameException(index, aliasNames[0],_                        "Unknown alias name was passed to alias Filter")__                }_                QueryBuilder parsedFilter = parserFunction.apply(alias)__                if (parsedFilter != null) {_                    combined.should(parsedFilter)__                } else {_                    _                    return null__                }_            }_            return combined__        }_    };returns,the,filter,associated,with,listed,filtering,aliases,p,the,list,of,filtering,aliases,should,be,obtained,by,calling,meta,data,filtering,aliases,returns,code,null,if,no,filtering,is,required,p;static,query,builder,parse,alias,filter,checked,function,byte,query,builder,ioexception,filter,parser,index,meta,data,meta,data,string,alias,names,if,alias,names,null,alias,names,length,0,return,null,index,index,meta,data,get,index,immutable,open,map,string,alias,meta,data,aliases,meta,data,get,aliases,function,alias,meta,data,query,builder,parser,function,alias,if,alias,filter,null,return,null,try,return,filter,parser,apply,alias,filter,uncompressed,catch,ioexception,ex,throw,new,alias,filter,parsing,exception,index,alias,get,alias,invalid,alias,filter,ex,if,alias,names,length,1,alias,meta,data,alias,aliases,get,alias,names,0,if,alias,null,throw,new,invalid,alias,name,exception,index,alias,names,0,unknown,alias,name,was,passed,to,alias,filter,return,parser,function,apply,alias,else,bool,query,builder,combined,new,bool,query,builder,for,string,alias,name,alias,names,alias,meta,data,alias,aliases,get,alias,name,if,alias,null,throw,new,invalid,alias,name,exception,index,alias,names,0,unknown,alias,name,was,passed,to,alias,filter,query,builder,parsed,filter,parser,function,apply,alias,if,parsed,filter,null,combined,should,parsed,filter,else,return,null,return,combined
ShardSearchRequest -> String[] indexRoutings()_;1524780945;Returns the routing values resolved by the coordinating node for the index pointed by {@link #shardId()}.;String[] indexRoutings()_;returns,the,routing,values,resolved,by,the,coordinating,node,for,the,index,pointed,by,link,shard,id;string,index,routings
ShardSearchRequest -> String[] indexRoutings()_;1525334055;Returns the routing values resolved by the coordinating node for the index pointed by {@link #shardId()}.;String[] indexRoutings()_;returns,the,routing,values,resolved,by,the,coordinating,node,for,the,index,pointed,by,link,shard,id;string,index,routings
ShardSearchRequest -> String[] indexRoutings()_;1528762805;Returns the routing values resolved by the coordinating node for the index pointed by {@link #shardId()}.;String[] indexRoutings()_;returns,the,routing,values,resolved,by,the,coordinating,node,for,the,index,pointed,by,link,shard,id;string,index,routings
ShardSearchRequest -> String[] indexRoutings()_;1545997405;Returns the routing values resolved by the coordinating node for the index pointed by {@link #shardId()}.;String[] indexRoutings()_;returns,the,routing,values,resolved,by,the,coordinating,node,for,the,index,pointed,by,link,shard,id;string,index,routings
ShardSearchRequest -> String[] indexRoutings()_;1548770182;Returns the routing values resolved by the coordinating node for the index pointed by {@link #shardId()}.;String[] indexRoutings()_;returns,the,routing,values,resolved,by,the,coordinating,node,for,the,index,pointed,by,link,shard,id;string,index,routings
ShardSearchRequest -> String[] indexRoutings()_;1549896917;Returns the routing values resolved by the coordinating node for the index pointed by {@link #shardId()}.;String[] indexRoutings()_;returns,the,routing,values,resolved,by,the,coordinating,node,for,the,index,pointed,by,link,shard,id;string,index,routings
ShardSearchRequest -> String getClusterAlias()_;1524684173;Returns the cluster alias if this request is for a remote cluster or <code>null</code> if the request if targeted to the local_cluster.;String getClusterAlias()_;returns,the,cluster,alias,if,this,request,is,for,a,remote,cluster,or,code,null,code,if,the,request,if,targeted,to,the,local,cluster;string,get,cluster,alias
ShardSearchRequest -> String getClusterAlias()_;1524780945;Returns the cluster alias if this request is for a remote cluster or <code>null</code> if the request if targeted to the local_cluster.;String getClusterAlias()_;returns,the,cluster,alias,if,this,request,is,for,a,remote,cluster,or,code,null,code,if,the,request,if,targeted,to,the,local,cluster;string,get,cluster,alias
ShardSearchRequest -> String getClusterAlias()_;1525334055;Returns the cluster alias if this request is for a remote cluster or <code>null</code> if the request if targeted to the local_cluster.;String getClusterAlias()_;returns,the,cluster,alias,if,this,request,is,for,a,remote,cluster,or,code,null,code,if,the,request,if,targeted,to,the,local,cluster;string,get,cluster,alias
ShardSearchRequest -> String getClusterAlias()_;1528762805;Returns the cluster alias if this request is for a remote cluster or <code>null</code> if the request if targeted to the local_cluster.;String getClusterAlias()_;returns,the,cluster,alias,if,this,request,is,for,a,remote,cluster,or,code,null,code,if,the,request,if,targeted,to,the,local,cluster;string,get,cluster,alias
ShardSearchRequest -> BytesReference cacheKey() throws IOException_;1524684173;Returns the cache key for this shard search request, based on its content;BytesReference cacheKey() throws IOException_;returns,the,cache,key,for,this,shard,search,request,based,on,its,content;bytes,reference,cache,key,throws,ioexception
ShardSearchRequest -> BytesReference cacheKey() throws IOException_;1524780945;Returns the cache key for this shard search request, based on its content;BytesReference cacheKey() throws IOException_;returns,the,cache,key,for,this,shard,search,request,based,on,its,content;bytes,reference,cache,key,throws,ioexception
ShardSearchRequest -> BytesReference cacheKey() throws IOException_;1525334055;Returns the cache key for this shard search request, based on its content;BytesReference cacheKey() throws IOException_;returns,the,cache,key,for,this,shard,search,request,based,on,its,content;bytes,reference,cache,key,throws,ioexception
ShardSearchRequest -> BytesReference cacheKey() throws IOException_;1528762805;Returns the cache key for this shard search request, based on its content;BytesReference cacheKey() throws IOException_;returns,the,cache,key,for,this,shard,search,request,based,on,its,content;bytes,reference,cache,key,throws,ioexception
ShardSearchRequest -> BytesReference cacheKey() throws IOException_;1545997405;Returns the cache key for this shard search request, based on its content;BytesReference cacheKey() throws IOException_;returns,the,cache,key,for,this,shard,search,request,based,on,its,content;bytes,reference,cache,key,throws,ioexception
ShardSearchRequest -> BytesReference cacheKey() throws IOException_;1548770182;Returns the cache key for this shard search request, based on its content;BytesReference cacheKey() throws IOException_;returns,the,cache,key,for,this,shard,search,request,based,on,its,content;bytes,reference,cache,key,throws,ioexception
ShardSearchRequest -> BytesReference cacheKey() throws IOException_;1549896917;Returns the cache key for this shard search request, based on its content;BytesReference cacheKey() throws IOException_;returns,the,cache,key,for,this,shard,search,request,based,on,its,content;bytes,reference,cache,key,throws,ioexception
ShardSearchRequest -> @Nullable     String getClusterAlias()_;1545997405;Returns the cluster alias in case the request is part of a cross-cluster search request, <code>null</code> otherwise.;@Nullable_    String getClusterAlias()_;returns,the,cluster,alias,in,case,the,request,is,part,of,a,cross,cluster,search,request,code,null,code,otherwise;nullable,string,get,cluster,alias
ShardSearchRequest -> @Nullable     String getClusterAlias()_;1548770182;Returns the cluster alias in case the request is part of a cross-cluster search request, <code>null</code> otherwise.;@Nullable_    String getClusterAlias()_;returns,the,cluster,alias,in,case,the,request,is,part,of,a,cross,cluster,search,request,code,null,code,otherwise;nullable,string,get,cluster,alias
ShardSearchRequest -> @Nullable     String getClusterAlias()_;1549896917;Returns the cluster alias in case the request is part of a cross-cluster search request, <code>null</code> otherwise.;@Nullable_    String getClusterAlias()_;returns,the,cluster,alias,in,case,the,request,is,part,of,a,cross,cluster,search,request,code,null,code,otherwise;nullable,string,get,cluster,alias
