commented;modifiers;parameterAmount;loc;comment;code
true;public;0;3;/**  * Should the runnable force its execution in case it gets rejected?  */ ;/**  * Should the runnable force its execution in case it gets rejected?  */ public boolean isForceExecution() {     return false. }
false;public,final;0;10;;@Override public final void run() {     try {         doRun().     } catch (Exception t) {         onFailure(t).     } finally {         onAfter().     } }
true;public;0;3;/**  * This method is called in a finally block after successful execution  * or on a rejection.  */ ;/**  * This method is called in a finally block after successful execution  * or on a rejection.  */ public void onAfter() { // nothing by default }
true;public,abstract;1;1;/**  * This method is invoked for all exception thrown by {@link #doRun()}  */ ;/**  * This method is invoked for all exception thrown by {@link #doRun()}  */ public abstract void onFailure(Exception e).
true;public;1;3;/**  * This should be executed if the thread-pool executing this action rejected the execution.  * The default implementation forwards to {@link #onFailure(Exception)}  */ ;/**  * This should be executed if the thread-pool executing this action rejected the execution.  * The default implementation forwards to {@link #onFailure(Exception)}  */ public void onRejection(Exception e) {     onFailure(e). }
true;protected,abstract;0;1;/**  * This method has the same semantics as {@link Runnable#run()}  * @throws InterruptedException if the run method throws an InterruptedException  */ ;/**  * This method has the same semantics as {@link Runnable#run()}  * @throws InterruptedException if the run method throws an InterruptedException  */ protected abstract void doRun() throws Exception.
