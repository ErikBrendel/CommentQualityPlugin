commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public float maxErrors() {     return maxErrors. }
false;public;1;3;;public void setMaxErrors(Float maxErrors) {     this.maxErrors = maxErrors. }
false;public;0;3;;public BytesRef separator() {     return separator. }
false;public;1;3;;public void setSeparator(BytesRef separator) {     this.separator = separator. }
false;public;0;3;;public Float realworldErrorLikelihood() {     return realworldErrorLikelihood. }
false;public;1;3;;public void setRealWordErrorLikelihood(Float realworldErrorLikelihood) {     this.realworldErrorLikelihood = realworldErrorLikelihood. }
false;public;1;3;;public void addGenerator(DirectCandidateGenerator generator) {     this.generators.add(generator). }
false;public;0;3;;public List<DirectCandidateGenerator> generators() {     return this.generators. }
false;public;1;3;;public void setGramSize(int gramSize) {     this.gramSize = gramSize. }
false;public;0;3;;public int gramSize() {     return gramSize. }
false;public;0;3;;public float confidence() {     return confidence. }
false;public;1;3;;public void setConfidence(float confidence) {     this.confidence = confidence. }
false;public;1;3;;public void setModel(WordScorer.WordScorerFactory scorer) {     this.scorer = scorer. }
false;public;0;3;;public WordScorer.WordScorerFactory model() {     return scorer. }
false;public;0;3;;public String field() {     return field. }
false;public;1;3;;public void setField(String field) {     this.field = field. }
false;public;0;3;;public int size() {     return size. }
false;public;1;6;;public void size(int size) {     if (size <= 0) {         throw new IllegalArgumentException("Size must be positive").     }     this.size = size. }
false;public;0;3;;public Analyzer preFilter() {     return preFilter. }
false;public;1;3;;public void preFilter(Analyzer preFilter) {     this.preFilter = preFilter. }
false;public;0;3;;public Analyzer postFilter() {     return postFilter. }
false;public;1;3;;public void postFilter(Analyzer postFilter) {     this.postFilter = postFilter. }
false;public;1;3;;public void setRequireUnigram(boolean requireUnigram) {     this.requireUnigram = requireUnigram. }
false;public;0;3;;public boolean getRequireUnigram() {     return requireUnigram. }
false;public;1;3;;public void setTokenLimit(int tokenLimit) {     this.tokenLimit = tokenLimit. }
false;public;0;3;;public int getTokenLimit() {     return tokenLimit. }
false;public;1;3;;public void setPreTag(BytesRef preTag) {     this.preTag = preTag. }
false;public;0;3;;public BytesRef getPreTag() {     return preTag. }
false;public;1;3;;public void setPostTag(BytesRef postTag) {     this.postTag = postTag. }
false;public;0;3;;public BytesRef getPostTag() {     return postTag. }
false;;0;3;;TemplateScript.Factory getCollateQueryScript() {     return scriptFactory. }
false;;1;3;;void setCollateQueryScript(TemplateScript.Factory scriptFactory) {     this.scriptFactory = scriptFactory. }
false;;0;3;;Map<String, Object> getCollateScriptParams() {     return collateScriptParams. }
false;;1;3;;void setCollateScriptParams(Map<String, Object> collateScriptParams) {     this.collateScriptParams = new HashMap<>(collateScriptParams). }
false;;1;3;;void setCollatePrune(boolean prune) {     this.prune = prune. }
false;;0;3;;boolean collatePrune() {     return prune. }
