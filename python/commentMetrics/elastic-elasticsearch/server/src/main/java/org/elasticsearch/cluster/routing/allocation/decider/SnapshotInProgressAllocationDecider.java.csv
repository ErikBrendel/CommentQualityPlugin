# id;timestamp;commentText;codeText;commentWords;codeWords
SnapshotInProgressAllocationDecider -> @Override     public Decision canAllocate(ShardRouting shardRouting, RoutingNode node, RoutingAllocation allocation);1524684173;Returns a {@link Decision} whether the given shard routing can be_allocated on the given node. The default is {@link Decision#ALWAYS}.;@Override_    public Decision canAllocate(ShardRouting shardRouting, RoutingNode node, RoutingAllocation allocation) {_        return canMove(shardRouting, allocation)__    };returns,a,link,decision,whether,the,given,shard,routing,can,be,allocated,on,the,given,node,the,default,is,link,decision,always;override,public,decision,can,allocate,shard,routing,shard,routing,routing,node,node,routing,allocation,allocation,return,can,move,shard,routing,allocation
SnapshotInProgressAllocationDecider -> @Override     public Decision canAllocate(ShardRouting shardRouting, RoutingNode node, RoutingAllocation allocation);1541092382;Returns a {@link Decision} whether the given shard routing can be_allocated on the given node. The default is {@link Decision#ALWAYS}.;@Override_    public Decision canAllocate(ShardRouting shardRouting, RoutingNode node, RoutingAllocation allocation) {_        return canMove(shardRouting, allocation)__    };returns,a,link,decision,whether,the,given,shard,routing,can,be,allocated,on,the,given,node,the,default,is,link,decision,always;override,public,decision,can,allocate,shard,routing,shard,routing,routing,node,node,routing,allocation,allocation,return,can,move,shard,routing,allocation
SnapshotInProgressAllocationDecider -> @Override     public Decision canAllocate(ShardRouting shardRouting, RoutingNode node, RoutingAllocation allocation);1542402632;Returns a {@link Decision} whether the given shard routing can be_allocated on the given node. The default is {@link Decision#ALWAYS}.;@Override_    public Decision canAllocate(ShardRouting shardRouting, RoutingNode node, RoutingAllocation allocation) {_        return canMove(shardRouting, allocation)__    };returns,a,link,decision,whether,the,given,shard,routing,can,be,allocated,on,the,given,node,the,default,is,link,decision,always;override,public,decision,can,allocate,shard,routing,shard,routing,routing,node,node,routing,allocation,allocation,return,can,move,shard,routing,allocation
SnapshotInProgressAllocationDecider -> @Override     public Decision canRebalance(ShardRouting shardRouting, RoutingAllocation allocation);1524684173;Returns a {@link Decision} whether the given shard routing can be_re-balanced to the given allocation. The default is_{@link Decision#ALWAYS}.;@Override_    public Decision canRebalance(ShardRouting shardRouting, RoutingAllocation allocation) {_        return canMove(shardRouting, allocation)__    };returns,a,link,decision,whether,the,given,shard,routing,can,be,re,balanced,to,the,given,allocation,the,default,is,link,decision,always;override,public,decision,can,rebalance,shard,routing,shard,routing,routing,allocation,allocation,return,can,move,shard,routing,allocation
SnapshotInProgressAllocationDecider -> @Override     public Decision canRebalance(ShardRouting shardRouting, RoutingAllocation allocation);1541092382;Returns a {@link Decision} whether the given shard routing can be_re-balanced to the given allocation. The default is_{@link Decision#ALWAYS}.;@Override_    public Decision canRebalance(ShardRouting shardRouting, RoutingAllocation allocation) {_        return canMove(shardRouting, allocation)__    };returns,a,link,decision,whether,the,given,shard,routing,can,be,re,balanced,to,the,given,allocation,the,default,is,link,decision,always;override,public,decision,can,rebalance,shard,routing,shard,routing,routing,allocation,allocation,return,can,move,shard,routing,allocation
SnapshotInProgressAllocationDecider -> @Override     public Decision canRebalance(ShardRouting shardRouting, RoutingAllocation allocation);1542402632;Returns a {@link Decision} whether the given shard routing can be_re-balanced to the given allocation. The default is_{@link Decision#ALWAYS}.;@Override_    public Decision canRebalance(ShardRouting shardRouting, RoutingAllocation allocation) {_        return canMove(shardRouting, allocation)__    };returns,a,link,decision,whether,the,given,shard,routing,can,be,re,balanced,to,the,given,allocation,the,default,is,link,decision,always;override,public,decision,can,rebalance,shard,routing,shard,routing,routing,allocation,allocation,return,can,move,shard,routing,allocation
