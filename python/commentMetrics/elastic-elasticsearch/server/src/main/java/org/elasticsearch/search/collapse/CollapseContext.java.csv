commented;modifiers;parameterAmount;loc;comment;code
true;public;0;3;/**  * The requested field name to collapse on.  */ ;/**  * The requested field name to collapse on.  */ public String getFieldName() {     return fieldName. }
true;public;0;3;/**  * The field type used for collapsing *  */ ;/**  * The field type used for collapsing *  */ public MappedFieldType getFieldType() {     return fieldType. }
true;public;0;3;/**  * The inner hit options to expand the collapsed results *  */ ;/**  * The inner hit options to expand the collapsed results *  */ public List<InnerHitBuilder> getInnerHit() {     return innerHits. }
false;public;2;10;;public CollapsingTopDocsCollector<?> createTopDocs(Sort sort, int topN) {     if (fieldType instanceof KeywordFieldMapper.KeywordFieldType) {         return CollapsingTopDocsCollector.createKeyword(fieldType.name(), sort, topN).     } else if (fieldType instanceof NumberFieldMapper.NumberFieldType) {         return CollapsingTopDocsCollector.createNumeric(fieldType.name(), sort, topN).     } else {         throw new IllegalStateException("unknown type for collapse field " + fieldType.name() + ", only keywords and numbers are accepted").     } }
