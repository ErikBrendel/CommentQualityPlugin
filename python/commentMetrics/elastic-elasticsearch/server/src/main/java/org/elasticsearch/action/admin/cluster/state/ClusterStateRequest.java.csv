commented;modifiers;parameterAmount;loc;comment;code
false;public;1;15;;@Override public void writeTo(StreamOutput out) throws IOException {     super.writeTo(out).     out.writeBoolean(routingTable).     out.writeBoolean(nodes).     out.writeBoolean(metaData).     out.writeBoolean(blocks).     out.writeBoolean(customs).     out.writeStringArray(indices).     indicesOptions.writeIndicesOptions(out).     if (out.getVersion().onOrAfter(Version.V_6_6_0)) {         out.writeTimeValue(waitForTimeout).         out.writeOptionalLong(waitForMetaDataVersion).     } }
false;public;0;4;;@Override public ActionRequestValidationException validate() {     return null. }
false;public;0;9;;public ClusterStateRequest all() {     routingTable = true.     nodes = true.     metaData = true.     blocks = true.     customs = true.     indices = Strings.EMPTY_ARRAY.     return this. }
false;public;0;9;;public ClusterStateRequest clear() {     routingTable = false.     nodes = false.     metaData = false.     blocks = false.     customs = false.     indices = Strings.EMPTY_ARRAY.     return this. }
false;public;0;3;;public boolean routingTable() {     return routingTable. }
false;public;1;4;;public ClusterStateRequest routingTable(boolean routingTable) {     this.routingTable = routingTable.     return this. }
false;public;0;3;;public boolean nodes() {     return nodes. }
false;public;1;4;;public ClusterStateRequest nodes(boolean nodes) {     this.nodes = nodes.     return this. }
false;public;0;3;;public boolean metaData() {     return metaData. }
false;public;1;4;;public ClusterStateRequest metaData(boolean metaData) {     this.metaData = metaData.     return this. }
false;public;0;3;;public boolean blocks() {     return blocks. }
false;public;1;4;;public ClusterStateRequest blocks(boolean blocks) {     this.blocks = blocks.     return this. }
false;public;0;4;;@Override public String[] indices() {     return indices. }
false;public;1;5;;@Override public ClusterStateRequest indices(String... indices) {     this.indices = indices.     return this. }
false;public;0;4;;@Override public IndicesOptions indicesOptions() {     return this.indicesOptions. }
false;public,final;1;4;;public final ClusterStateRequest indicesOptions(IndicesOptions indicesOptions) {     this.indicesOptions = indicesOptions.     return this. }
false;public;1;4;;public ClusterStateRequest customs(boolean customs) {     this.customs = customs.     return this. }
false;public;0;3;;public boolean customs() {     return customs. }
false;public;0;3;;public TimeValue waitForTimeout() {     return waitForTimeout. }
false;public;1;4;;public ClusterStateRequest waitForTimeout(TimeValue waitForTimeout) {     this.waitForTimeout = waitForTimeout.     return this. }
false;public;0;3;;public Long waitForMetaDataVersion() {     return waitForMetaDataVersion. }
false;public;1;8;;public ClusterStateRequest waitForMetaDataVersion(long waitForMetaDataVersion) {     if (waitForMetaDataVersion < 1) {         throw new IllegalArgumentException("provided waitForMetaDataVersion should be >= 1, but instead is [" + waitForMetaDataVersion + "]").     }     this.waitForMetaDataVersion = waitForMetaDataVersion.     return this. }
false;public;1;4;;@Override public void readFrom(StreamInput in) throws IOException {     throw new UnsupportedOperationException("usage of Streamable is to be replaced by Writeable"). }
