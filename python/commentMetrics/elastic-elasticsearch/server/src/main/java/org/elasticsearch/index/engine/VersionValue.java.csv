commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public boolean isDelete() {     return false. }
false;public;0;4;;@Override public long ramBytesUsed() {     return BASE_RAM_BYTES_USED. }
false;public;0;4;;@Override public Collection<Accountable> getChildResources() {     return Collections.emptyList(). }
false;public;1;11;;@Override public boolean equals(Object o) {     if (this == o)         return true.     if (o == null || getClass() != o.getClass())         return false.     VersionValue that = (VersionValue) o.     if (version != that.version)         return false.     if (seqNo != that.seqNo)         return false.     return term == that.term. }
false;public;0;7;;@Override public int hashCode() {     int result = (int) (version ^ (version >>> 32)).     result = 31 * result + (int) (seqNo ^ (seqNo >>> 32)).     result = 31 * result + (int) (term ^ (term >>> 32)).     return result. }
false;public;0;8;;@Override public String toString() {     return "VersionValue{" + "version=" + version + ", seqNo=" + seqNo + ", term=" + term + '}'. }
true;public;0;4;/**  * Returns the translog location for this version value or null. This is optional and might not be tracked all the time.  */ ;/**  * Returns the translog location for this version value or null. This is optional and might not be tracked all the time.  */ @Nullable public Translog.Location getLocation() {     return null. }
