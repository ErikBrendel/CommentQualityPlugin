commented;modifiers;parameterAmount;loc;comment;code
true;;1;1;/**  * Performs pre processing of the search context before the execute.  */ ;/**  * Performs pre processing of the search context before the execute.  */ void preProcess(SearchContext context).
true;;1;1;/**  * Executes the search phase  */ ;/**  * Executes the search phase  */ void execute(SearchContext context).
false;public;0;19;;@Override public String toString() {     StringBuilder builder = new StringBuilder().     builder.append(searchContext.indexShard().shardId()).     builder.append(" ").     if (searchContext.request() != null && searchContext.request().source() != null) {         builder.append("source[").append(searchContext.request().source().toString()).append("], ").     } else {         builder.append("source[], ").     }     if (searchContext.getTask() != null && searchContext.getTask().getHeader(Task.X_OPAQUE_ID) != null) {         builder.append("id[").append(searchContext.getTask().getHeader(Task.X_OPAQUE_ID)).append("], ").     } else {         builder.append("id[], ").     }     return builder.toString(). }
