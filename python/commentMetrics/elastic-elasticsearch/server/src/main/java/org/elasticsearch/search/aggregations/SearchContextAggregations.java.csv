commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public AggregatorFactories factories() {     return factories. }
false;public;0;3;;public Aggregator[] aggregators() {     return aggregators. }
true;public;1;3;/**  * Registers all the created aggregators (top level aggregators) for the search execution context.  *  * @param aggregators The top level aggregators of the search execution.  */ ;/**  * Registers all the created aggregators (top level aggregators) for the search execution context.  *  * @param aggregators The top level aggregators of the search execution.  */ public void aggregators(Aggregator[] aggregators) {     this.aggregators = aggregators. }
true;public;0;3;/**  * Returns a consumer for multi bucket aggregation that checks the total number of buckets  * created in the response  */ ;/**  * Returns a consumer for multi bucket aggregation that checks the total number of buckets  * created in the response  */ public MultiBucketConsumer multiBucketConsumer() {     return multiBucketConsumer. }
false;;0;3;;void resetBucketMultiConsumer() {     multiBucketConsumer.reset(). }
