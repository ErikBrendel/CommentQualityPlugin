commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public int precision() {     return precision. }
false;public;0;4;;@Override public boolean isFloatingPoint() {     return false. }
false;public;1;4;;@Override public SortedNumericDocValues longValues(LeafReaderContext ctx) {     return new CellValues(valuesSource.geoPointValues(ctx), precision, encoder). }
false;public;1;4;;@Override public SortedNumericDoubleValues doubleValues(LeafReaderContext ctx) {     throw new UnsupportedOperationException(). }
false;public;1;4;;@Override public SortedBinaryDocValues bytesValues(LeafReaderContext ctx) {     throw new UnsupportedOperationException(). }
false;;3;1;;long encode(double lon, double lat, int precision).
false;public;1;14;;@Override public boolean advanceExact(int docId) throws IOException {     if (geoValues.advanceExact(docId)) {         resize(geoValues.docValueCount()).         for (int i = 0. i < docValueCount(). ++i) {             org.elasticsearch.common.geo.GeoPoint target = geoValues.nextValue().             values[i] = encoder.encode(target.getLon(), target.getLat(), precision).         }         sort().         return true.     } else {         return false.     } }
