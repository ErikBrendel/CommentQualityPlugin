commented;modifiers;parameterAmount;loc;comment;code
false;;9;9;;@Override Aggregator create(String name, AggregatorFactories factories, int shardSize, int maxDocsPerValue, ValuesSource valuesSource, SearchContext context, Aggregator parent, List<PipelineAggregator> pipelineAggregators, Map<String, Object> metaData) throws IOException {     return new DiversifiedMapSamplerAggregator(name, shardSize, factories, context, parent, pipelineAggregators, metaData, valuesSource, maxDocsPerValue). }
false;;0;4;;@Override boolean needsGlobalOrdinals() {     return false. }
false;;9;10;;@Override Aggregator create(String name, AggregatorFactories factories, int shardSize, int maxDocsPerValue, ValuesSource valuesSource, SearchContext context, Aggregator parent, List<PipelineAggregator> pipelineAggregators, Map<String, Object> metaData) throws IOException {     return new DiversifiedBytesHashSamplerAggregator(name, shardSize, factories, context, parent, pipelineAggregators, metaData, valuesSource, maxDocsPerValue). }
false;;0;4;;@Override boolean needsGlobalOrdinals() {     return false. }
false;;9;7;;@Override Aggregator create(String name, AggregatorFactories factories, int shardSize, int maxDocsPerValue, ValuesSource valuesSource, SearchContext context, Aggregator parent, List<PipelineAggregator> pipelineAggregators, Map<String, Object> metaData) throws IOException {     return new DiversifiedOrdinalsSamplerAggregator(name, shardSize, factories, context, parent, pipelineAggregators, metaData, (ValuesSource.Bytes.WithOrdinals.FieldData) valuesSource, maxDocsPerValue). }
false;;0;4;;@Override boolean needsGlobalOrdinals() {     return true. }
false;public,static;1;8;;public static ExecutionMode fromString(String value) {     for (ExecutionMode mode : values()) {         if (mode.parseField.match(value, LoggingDeprecationHandler.INSTANCE)) {             return mode.         }     }     throw new IllegalArgumentException("Unknown `execution_hint`: [" + value + "], expected any of " + Arrays.toString(values())). }
false;abstract;9;3;;abstract Aggregator create(String name, AggregatorFactories factories, int shardSize, int maxDocsPerValue, ValuesSource valuesSource, SearchContext context, Aggregator parent, List<PipelineAggregator> pipelineAggregators, Map<String, Object> metaData) throws IOException.
false;abstract;0;1;;abstract boolean needsGlobalOrdinals().
false;public;0;4;;@Override public String toString() {     return parseField.getPreferredName(). }
false;public;0;4;;@Override public ScoreMode scoreMode() {     return ScoreMode.COMPLETE. }
false;public;0;5;;@Override public DeferringBucketCollector getDeferringCollector() {     bdd = new BestDocsDeferringCollector(shardSize, context.bigArrays()).     return bdd. }
false;protected;1;4;;@Override protected boolean shouldDefer(Aggregator aggregator) {     return true. }
false;public;1;7;;@Override public InternalAggregation buildAggregation(long owningBucketOrdinal) throws IOException {     runDeferredCollections(owningBucketOrdinal).     return new InternalSampler(name, bdd == null ? 0 : bdd.getDocCount(owningBucketOrdinal), bucketAggregations(owningBucketOrdinal), pipelineAggregators(), metaData()). }
false;public;0;4;;@Override public InternalAggregation buildEmptyAggregation() {     return new InternalSampler(name, 0, buildEmptySubAggregations(), pipelineAggregators(), metaData()). }
false;protected;2;7;;@Override protected LeafBucketCollector getLeafCollector(LeafReaderContext ctx, LeafBucketCollector sub) throws IOException {     if (bdd == null) {         throw new AggregationExecutionException("Sampler aggregation must be used with child aggregations.").     }     return bdd.getLeafCollector(ctx). }
false;protected;0;5;;@Override protected void doClose() {     Releasables.close(bdd).     super.doClose(). }
