commented;modifiers;parameterAmount;loc;comment;code
false;public;2;6;;@Override public void collect(int doc, long bucket) throws IOException {     if (bits.get(doc)) {         collectBucket(sub, doc, bucket).     } }
false;public;2;14;;@Override public LeafBucketCollector getLeafCollector(LeafReaderContext ctx, final LeafBucketCollector sub) throws IOException {     // no need to provide deleted docs to the filter     final Bits bits = Lucene.asSequentialAccessBits(ctx.reader().maxDoc(), filter.get().scorerSupplier(ctx)).     return new LeafBucketCollectorBase(sub, null) {          @Override         public void collect(int doc, long bucket) throws IOException {             if (bits.get(doc)) {                 collectBucket(sub, doc, bucket).             }         }     }. }
false;public;1;5;;@Override public InternalAggregation buildAggregation(long owningBucketOrdinal) throws IOException {     return new InternalFilter(name, bucketDocCount(owningBucketOrdinal), bucketAggregations(owningBucketOrdinal), pipelineAggregators(), metaData()). }
false;public;0;4;;@Override public InternalAggregation buildEmptyAggregation() {     return new InternalFilter(name, 0, buildEmptySubAggregations(), pipelineAggregators(), metaData()). }
