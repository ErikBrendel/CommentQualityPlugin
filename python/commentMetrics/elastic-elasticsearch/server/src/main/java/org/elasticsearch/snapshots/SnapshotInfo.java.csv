# id;timestamp;commentText;codeText;commentWords;codeWords
SnapshotInfo -> public static SnapshotInfo fromXContentInternal(final XContentParser parser) throws IOException;1531179852;This method creates a SnapshotInfo from internal x-content.  It does not_handle x-content written with the external version as external x-content_is only for display purposes and does not need to be parsed.;public static SnapshotInfo fromXContentInternal(final XContentParser parser) throws IOException {_        String name = null__        String uuid = null__        Version version = Version.CURRENT__        SnapshotState state = SnapshotState.IN_PROGRESS__        String reason = null__        List<String> indices = Collections.emptyList()__        long startTime = 0__        long endTime = 0__        int totalShards = 0__        int successfulShards = 0__        Boolean includeGlobalState = null__        List<SnapshotShardFailure> shardFailures = Collections.emptyList()__        if (parser.currentToken() == null) { _            parser.nextToken()__        }_        if (parser.currentToken() == XContentParser.Token.START_OBJECT) {  _            parser.nextToken()__        }_        XContentParser.Token token__        if ((token = parser.nextToken()) == XContentParser.Token.START_OBJECT) {_            String currentFieldName = parser.currentName()__            if (SNAPSHOT.equals(currentFieldName)) {_                while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {_                    if (token == XContentParser.Token.FIELD_NAME) {_                        currentFieldName = parser.currentName()__                        token = parser.nextToken()__                        if (token.isValue()) {_                            if (NAME.equals(currentFieldName)) {_                                name = parser.text()__                            } else if (UUID.equals(currentFieldName)) {_                                uuid = parser.text()__                            } else if (STATE.equals(currentFieldName)) {_                                state = SnapshotState.valueOf(parser.text())__                            } else if (REASON.equals(currentFieldName)) {_                                reason = parser.text()__                            } else if (START_TIME.equals(currentFieldName)) {_                                startTime = parser.longValue()__                            } else if (END_TIME.equals(currentFieldName)) {_                                endTime = parser.longValue()__                            } else if (TOTAL_SHARDS.equals(currentFieldName)) {_                                totalShards = parser.intValue()__                            } else if (SUCCESSFUL_SHARDS.equals(currentFieldName)) {_                                successfulShards = parser.intValue()__                            } else if (VERSION_ID.equals(currentFieldName)) {_                                version = Version.fromId(parser.intValue())__                            } else if (INCLUDE_GLOBAL_STATE.equals(currentFieldName)) {_                                includeGlobalState = parser.booleanValue()__                            }_                        } else if (token == XContentParser.Token.START_ARRAY) {_                            if (INDICES.equals(currentFieldName)) {_                                ArrayList<String> indicesArray = new ArrayList<>()__                                while (parser.nextToken() != XContentParser.Token.END_ARRAY) {_                                    indicesArray.add(parser.text())__                                }_                                indices = Collections.unmodifiableList(indicesArray)__                            } else if (FAILURES.equals(currentFieldName)) {_                                ArrayList<SnapshotShardFailure> shardFailureArrayList = new ArrayList<>()__                                while (parser.nextToken() != XContentParser.Token.END_ARRAY) {_                                    shardFailureArrayList.add(SnapshotShardFailure.fromXContent(parser))__                                }_                                shardFailures = Collections.unmodifiableList(shardFailureArrayList)__                            } else {_                                _                                parser.skipChildren()__                            }_                        } else if (token == XContentParser.Token.START_OBJECT) {_                            _                            parser.skipChildren()__                        }_                    }_                }_            }_        } else {_            throw new ElasticsearchParseException("unexpected token  [" + token + "]")__        }_        if (uuid == null) {_            _            uuid = name__        }_        return new SnapshotInfo(new SnapshotId(name, uuid),_                                indices,_                                state,_                                reason,_                                version,_                                startTime,_                                endTime,_                                totalShards,_                                successfulShards,_                                shardFailures,_                                includeGlobalState)__    };this,method,creates,a,snapshot,info,from,internal,x,content,it,does,not,handle,x,content,written,with,the,external,version,as,external,x,content,is,only,for,display,purposes,and,does,not,need,to,be,parsed;public,static,snapshot,info,from,xcontent,internal,final,xcontent,parser,parser,throws,ioexception,string,name,null,string,uuid,null,version,version,version,current,snapshot,state,state,snapshot,state,string,reason,null,list,string,indices,collections,empty,list,long,start,time,0,long,end,time,0,int,total,shards,0,int,successful,shards,0,boolean,include,global,state,null,list,snapshot,shard,failure,shard,failures,collections,empty,list,if,parser,current,token,null,parser,next,token,if,parser,current,token,xcontent,parser,token,parser,next,token,xcontent,parser,token,token,if,token,parser,next,token,xcontent,parser,token,string,current,field,name,parser,current,name,if,snapshot,equals,current,field,name,while,token,parser,next,token,xcontent,parser,token,if,token,xcontent,parser,token,current,field,name,parser,current,name,token,parser,next,token,if,token,is,value,if,name,equals,current,field,name,name,parser,text,else,if,uuid,equals,current,field,name,uuid,parser,text,else,if,state,equals,current,field,name,state,snapshot,state,value,of,parser,text,else,if,reason,equals,current,field,name,reason,parser,text,else,if,equals,current,field,name,start,time,parser,long,value,else,if,equals,current,field,name,end,time,parser,long,value,else,if,equals,current,field,name,total,shards,parser,int,value,else,if,equals,current,field,name,successful,shards,parser,int,value,else,if,equals,current,field,name,version,version,from,id,parser,int,value,else,if,equals,current,field,name,include,global,state,parser,boolean,value,else,if,token,xcontent,parser,token,if,indices,equals,current,field,name,array,list,string,indices,array,new,array,list,while,parser,next,token,xcontent,parser,token,indices,array,add,parser,text,indices,collections,unmodifiable,list,indices,array,else,if,failures,equals,current,field,name,array,list,snapshot,shard,failure,shard,failure,array,list,new,array,list,while,parser,next,token,xcontent,parser,token,shard,failure,array,list,add,snapshot,shard,failure,from,xcontent,parser,shard,failures,collections,unmodifiable,list,shard,failure,array,list,else,parser,skip,children,else,if,token,xcontent,parser,token,parser,skip,children,else,throw,new,elasticsearch,parse,exception,unexpected,token,token,if,uuid,null,uuid,name,return,new,snapshot,info,new,snapshot,id,name,uuid,indices,state,reason,version,start,time,end,time,total,shards,successful,shards,shard,failures,include,global,state
SnapshotInfo -> public static SnapshotInfo fromXContentInternal(final XContentParser parser) throws IOException;1531234550;This method creates a SnapshotInfo from internal x-content.  It does not_handle x-content written with the external version as external x-content_is only for display purposes and does not need to be parsed.;public static SnapshotInfo fromXContentInternal(final XContentParser parser) throws IOException {_        String name = null__        String uuid = null__        Version version = Version.CURRENT__        SnapshotState state = SnapshotState.IN_PROGRESS__        String reason = null__        List<String> indices = Collections.emptyList()__        long startTime = 0__        long endTime = 0__        int totalShards = 0__        int successfulShards = 0__        Boolean includeGlobalState = null__        List<SnapshotShardFailure> shardFailures = Collections.emptyList()__        if (parser.currentToken() == null) { _            parser.nextToken()__        }_        if (parser.currentToken() == XContentParser.Token.START_OBJECT) {  _            parser.nextToken()__        }_        XContentParser.Token token__        if ((token = parser.nextToken()) == XContentParser.Token.START_OBJECT) {_            String currentFieldName = parser.currentName()__            if (SNAPSHOT.equals(currentFieldName)) {_                while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {_                    if (token == XContentParser.Token.FIELD_NAME) {_                        currentFieldName = parser.currentName()__                        token = parser.nextToken()__                        if (token.isValue()) {_                            if (NAME.equals(currentFieldName)) {_                                name = parser.text()__                            } else if (UUID.equals(currentFieldName)) {_                                uuid = parser.text()__                            } else if (STATE.equals(currentFieldName)) {_                                state = SnapshotState.valueOf(parser.text())__                            } else if (REASON.equals(currentFieldName)) {_                                reason = parser.text()__                            } else if (START_TIME.equals(currentFieldName)) {_                                startTime = parser.longValue()__                            } else if (END_TIME.equals(currentFieldName)) {_                                endTime = parser.longValue()__                            } else if (TOTAL_SHARDS.equals(currentFieldName)) {_                                totalShards = parser.intValue()__                            } else if (SUCCESSFUL_SHARDS.equals(currentFieldName)) {_                                successfulShards = parser.intValue()__                            } else if (VERSION_ID.equals(currentFieldName)) {_                                version = Version.fromId(parser.intValue())__                            } else if (INCLUDE_GLOBAL_STATE.equals(currentFieldName)) {_                                includeGlobalState = parser.booleanValue()__                            }_                        } else if (token == XContentParser.Token.START_ARRAY) {_                            if (INDICES.equals(currentFieldName)) {_                                ArrayList<String> indicesArray = new ArrayList<>()__                                while (parser.nextToken() != XContentParser.Token.END_ARRAY) {_                                    indicesArray.add(parser.text())__                                }_                                indices = Collections.unmodifiableList(indicesArray)__                            } else if (FAILURES.equals(currentFieldName)) {_                                ArrayList<SnapshotShardFailure> shardFailureArrayList = new ArrayList<>()__                                while (parser.nextToken() != XContentParser.Token.END_ARRAY) {_                                    shardFailureArrayList.add(SnapshotShardFailure.fromXContent(parser))__                                }_                                shardFailures = Collections.unmodifiableList(shardFailureArrayList)__                            } else {_                                _                                parser.skipChildren()__                            }_                        } else if (token == XContentParser.Token.START_OBJECT) {_                            _                            parser.skipChildren()__                        }_                    }_                }_            }_        } else {_            throw new ElasticsearchParseException("unexpected token  [" + token + "]")__        }_        if (uuid == null) {_            _            uuid = name__        }_        return new SnapshotInfo(new SnapshotId(name, uuid),_                                indices,_                                state,_                                reason,_                                version,_                                startTime,_                                endTime,_                                totalShards,_                                successfulShards,_                                shardFailures,_                                includeGlobalState)__    };this,method,creates,a,snapshot,info,from,internal,x,content,it,does,not,handle,x,content,written,with,the,external,version,as,external,x,content,is,only,for,display,purposes,and,does,not,need,to,be,parsed;public,static,snapshot,info,from,xcontent,internal,final,xcontent,parser,parser,throws,ioexception,string,name,null,string,uuid,null,version,version,version,current,snapshot,state,state,snapshot,state,string,reason,null,list,string,indices,collections,empty,list,long,start,time,0,long,end,time,0,int,total,shards,0,int,successful,shards,0,boolean,include,global,state,null,list,snapshot,shard,failure,shard,failures,collections,empty,list,if,parser,current,token,null,parser,next,token,if,parser,current,token,xcontent,parser,token,parser,next,token,xcontent,parser,token,token,if,token,parser,next,token,xcontent,parser,token,string,current,field,name,parser,current,name,if,snapshot,equals,current,field,name,while,token,parser,next,token,xcontent,parser,token,if,token,xcontent,parser,token,current,field,name,parser,current,name,token,parser,next,token,if,token,is,value,if,name,equals,current,field,name,name,parser,text,else,if,uuid,equals,current,field,name,uuid,parser,text,else,if,state,equals,current,field,name,state,snapshot,state,value,of,parser,text,else,if,reason,equals,current,field,name,reason,parser,text,else,if,equals,current,field,name,start,time,parser,long,value,else,if,equals,current,field,name,end,time,parser,long,value,else,if,equals,current,field,name,total,shards,parser,int,value,else,if,equals,current,field,name,successful,shards,parser,int,value,else,if,equals,current,field,name,version,version,from,id,parser,int,value,else,if,equals,current,field,name,include,global,state,parser,boolean,value,else,if,token,xcontent,parser,token,if,indices,equals,current,field,name,array,list,string,indices,array,new,array,list,while,parser,next,token,xcontent,parser,token,indices,array,add,parser,text,indices,collections,unmodifiable,list,indices,array,else,if,failures,equals,current,field,name,array,list,snapshot,shard,failure,shard,failure,array,list,new,array,list,while,parser,next,token,xcontent,parser,token,shard,failure,array,list,add,snapshot,shard,failure,from,xcontent,parser,shard,failures,collections,unmodifiable,list,shard,failure,array,list,else,parser,skip,children,else,if,token,xcontent,parser,token,parser,skip,children,else,throw,new,elasticsearch,parse,exception,unexpected,token,token,if,uuid,null,uuid,name,return,new,snapshot,info,new,snapshot,id,name,uuid,indices,state,reason,version,start,time,end,time,total,shards,successful,shards,shard,failures,include,global,state
SnapshotInfo -> public static SnapshotInfo fromXContentInternal(final XContentParser parser) throws IOException;1531729807;This method creates a SnapshotInfo from internal x-content.  It does not_handle x-content written with the external version as external x-content_is only for display purposes and does not need to be parsed.;public static SnapshotInfo fromXContentInternal(final XContentParser parser) throws IOException {_        String name = null__        String uuid = null__        Version version = Version.CURRENT__        SnapshotState state = SnapshotState.IN_PROGRESS__        String reason = null__        List<String> indices = Collections.emptyList()__        long startTime = 0__        long endTime = 0__        int totalShards = 0__        int successfulShards = 0__        Boolean includeGlobalState = null__        List<SnapshotShardFailure> shardFailures = Collections.emptyList()__        if (parser.currentToken() == null) { _            parser.nextToken()__        }_        if (parser.currentToken() == XContentParser.Token.START_OBJECT) {  _            parser.nextToken()__        }_        XContentParser.Token token__        if ((token = parser.nextToken()) == XContentParser.Token.START_OBJECT) {_            String currentFieldName = parser.currentName()__            if (SNAPSHOT.equals(currentFieldName)) {_                while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {_                    if (token == XContentParser.Token.FIELD_NAME) {_                        currentFieldName = parser.currentName()__                        token = parser.nextToken()__                        if (token.isValue()) {_                            if (NAME.equals(currentFieldName)) {_                                name = parser.text()__                            } else if (UUID.equals(currentFieldName)) {_                                uuid = parser.text()__                            } else if (STATE.equals(currentFieldName)) {_                                state = SnapshotState.valueOf(parser.text())__                            } else if (REASON.equals(currentFieldName)) {_                                reason = parser.text()__                            } else if (START_TIME.equals(currentFieldName)) {_                                startTime = parser.longValue()__                            } else if (END_TIME.equals(currentFieldName)) {_                                endTime = parser.longValue()__                            } else if (TOTAL_SHARDS.equals(currentFieldName)) {_                                totalShards = parser.intValue()__                            } else if (SUCCESSFUL_SHARDS.equals(currentFieldName)) {_                                successfulShards = parser.intValue()__                            } else if (VERSION_ID.equals(currentFieldName)) {_                                version = Version.fromId(parser.intValue())__                            } else if (INCLUDE_GLOBAL_STATE.equals(currentFieldName)) {_                                includeGlobalState = parser.booleanValue()__                            }_                        } else if (token == XContentParser.Token.START_ARRAY) {_                            if (INDICES.equals(currentFieldName)) {_                                ArrayList<String> indicesArray = new ArrayList<>()__                                while (parser.nextToken() != XContentParser.Token.END_ARRAY) {_                                    indicesArray.add(parser.text())__                                }_                                indices = Collections.unmodifiableList(indicesArray)__                            } else if (FAILURES.equals(currentFieldName)) {_                                ArrayList<SnapshotShardFailure> shardFailureArrayList = new ArrayList<>()__                                while (parser.nextToken() != XContentParser.Token.END_ARRAY) {_                                    shardFailureArrayList.add(SnapshotShardFailure.fromXContent(parser))__                                }_                                shardFailures = Collections.unmodifiableList(shardFailureArrayList)__                            } else {_                                _                                parser.skipChildren()__                            }_                        } else if (token == XContentParser.Token.START_OBJECT) {_                            _                            parser.skipChildren()__                        }_                    }_                }_            }_        } else {_            throw new ElasticsearchParseException("unexpected token  [" + token + "]")__        }_        if (uuid == null) {_            _            uuid = name__        }_        return new SnapshotInfo(new SnapshotId(name, uuid),_                                indices,_                                state,_                                reason,_                                version,_                                startTime,_                                endTime,_                                totalShards,_                                successfulShards,_                                shardFailures,_                                includeGlobalState)__    };this,method,creates,a,snapshot,info,from,internal,x,content,it,does,not,handle,x,content,written,with,the,external,version,as,external,x,content,is,only,for,display,purposes,and,does,not,need,to,be,parsed;public,static,snapshot,info,from,xcontent,internal,final,xcontent,parser,parser,throws,ioexception,string,name,null,string,uuid,null,version,version,version,current,snapshot,state,state,snapshot,state,string,reason,null,list,string,indices,collections,empty,list,long,start,time,0,long,end,time,0,int,total,shards,0,int,successful,shards,0,boolean,include,global,state,null,list,snapshot,shard,failure,shard,failures,collections,empty,list,if,parser,current,token,null,parser,next,token,if,parser,current,token,xcontent,parser,token,parser,next,token,xcontent,parser,token,token,if,token,parser,next,token,xcontent,parser,token,string,current,field,name,parser,current,name,if,snapshot,equals,current,field,name,while,token,parser,next,token,xcontent,parser,token,if,token,xcontent,parser,token,current,field,name,parser,current,name,token,parser,next,token,if,token,is,value,if,name,equals,current,field,name,name,parser,text,else,if,uuid,equals,current,field,name,uuid,parser,text,else,if,state,equals,current,field,name,state,snapshot,state,value,of,parser,text,else,if,reason,equals,current,field,name,reason,parser,text,else,if,equals,current,field,name,start,time,parser,long,value,else,if,equals,current,field,name,end,time,parser,long,value,else,if,equals,current,field,name,total,shards,parser,int,value,else,if,equals,current,field,name,successful,shards,parser,int,value,else,if,equals,current,field,name,version,version,from,id,parser,int,value,else,if,equals,current,field,name,include,global,state,parser,boolean,value,else,if,token,xcontent,parser,token,if,indices,equals,current,field,name,array,list,string,indices,array,new,array,list,while,parser,next,token,xcontent,parser,token,indices,array,add,parser,text,indices,collections,unmodifiable,list,indices,array,else,if,failures,equals,current,field,name,array,list,snapshot,shard,failure,shard,failure,array,list,new,array,list,while,parser,next,token,xcontent,parser,token,shard,failure,array,list,add,snapshot,shard,failure,from,xcontent,parser,shard,failures,collections,unmodifiable,list,shard,failure,array,list,else,parser,skip,children,else,if,token,xcontent,parser,token,parser,skip,children,else,throw,new,elasticsearch,parse,exception,unexpected,token,token,if,uuid,null,uuid,name,return,new,snapshot,info,new,snapshot,id,name,uuid,indices,state,reason,version,start,time,end,time,total,shards,successful,shards,shard,failures,include,global,state
SnapshotInfo -> public static SnapshotInfo fromXContentInternal(final XContentParser parser) throws IOException;1535139672;This method creates a SnapshotInfo from internal x-content.  It does not_handle x-content written with the external version as external x-content_is only for display purposes and does not need to be parsed.;public static SnapshotInfo fromXContentInternal(final XContentParser parser) throws IOException {_        String name = null__        String uuid = null__        Version version = Version.CURRENT__        SnapshotState state = SnapshotState.IN_PROGRESS__        String reason = null__        List<String> indices = Collections.emptyList()__        long startTime = 0__        long endTime = 0__        int totalShards = 0__        int successfulShards = 0__        Boolean includeGlobalState = null__        List<SnapshotShardFailure> shardFailures = Collections.emptyList()__        if (parser.currentToken() == null) { _            parser.nextToken()__        }_        if (parser.currentToken() == XContentParser.Token.START_OBJECT) {  _            parser.nextToken()__        }_        XContentParser.Token token__        if ((token = parser.nextToken()) == XContentParser.Token.START_OBJECT) {_            String currentFieldName = parser.currentName()__            if (SNAPSHOT.equals(currentFieldName)) {_                while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {_                    if (token == XContentParser.Token.FIELD_NAME) {_                        currentFieldName = parser.currentName()__                        token = parser.nextToken()__                        if (token.isValue()) {_                            if (NAME.equals(currentFieldName)) {_                                name = parser.text()__                            } else if (UUID.equals(currentFieldName)) {_                                uuid = parser.text()__                            } else if (STATE.equals(currentFieldName)) {_                                state = SnapshotState.valueOf(parser.text())__                            } else if (REASON.equals(currentFieldName)) {_                                reason = parser.text()__                            } else if (START_TIME.equals(currentFieldName)) {_                                startTime = parser.longValue()__                            } else if (END_TIME.equals(currentFieldName)) {_                                endTime = parser.longValue()__                            } else if (TOTAL_SHARDS.equals(currentFieldName)) {_                                totalShards = parser.intValue()__                            } else if (SUCCESSFUL_SHARDS.equals(currentFieldName)) {_                                successfulShards = parser.intValue()__                            } else if (VERSION_ID.equals(currentFieldName)) {_                                version = Version.fromId(parser.intValue())__                            } else if (INCLUDE_GLOBAL_STATE.equals(currentFieldName)) {_                                includeGlobalState = parser.booleanValue()__                            }_                        } else if (token == XContentParser.Token.START_ARRAY) {_                            if (INDICES.equals(currentFieldName)) {_                                ArrayList<String> indicesArray = new ArrayList<>()__                                while (parser.nextToken() != XContentParser.Token.END_ARRAY) {_                                    indicesArray.add(parser.text())__                                }_                                indices = Collections.unmodifiableList(indicesArray)__                            } else if (FAILURES.equals(currentFieldName)) {_                                ArrayList<SnapshotShardFailure> shardFailureArrayList = new ArrayList<>()__                                while (parser.nextToken() != XContentParser.Token.END_ARRAY) {_                                    shardFailureArrayList.add(SnapshotShardFailure.fromXContent(parser))__                                }_                                shardFailures = Collections.unmodifiableList(shardFailureArrayList)__                            } else {_                                _                                parser.skipChildren()__                            }_                        } else if (token == XContentParser.Token.START_OBJECT) {_                            _                            parser.skipChildren()__                        }_                    }_                }_            }_        } else {_            throw new ElasticsearchParseException("unexpected token  [" + token + "]")__        }_        if (uuid == null) {_            _            uuid = name__        }_        return new SnapshotInfo(new SnapshotId(name, uuid),_                                indices,_                                state,_                                reason,_                                version,_                                startTime,_                                endTime,_                                totalShards,_                                successfulShards,_                                shardFailures,_                                includeGlobalState)__    };this,method,creates,a,snapshot,info,from,internal,x,content,it,does,not,handle,x,content,written,with,the,external,version,as,external,x,content,is,only,for,display,purposes,and,does,not,need,to,be,parsed;public,static,snapshot,info,from,xcontent,internal,final,xcontent,parser,parser,throws,ioexception,string,name,null,string,uuid,null,version,version,version,current,snapshot,state,state,snapshot,state,string,reason,null,list,string,indices,collections,empty,list,long,start,time,0,long,end,time,0,int,total,shards,0,int,successful,shards,0,boolean,include,global,state,null,list,snapshot,shard,failure,shard,failures,collections,empty,list,if,parser,current,token,null,parser,next,token,if,parser,current,token,xcontent,parser,token,parser,next,token,xcontent,parser,token,token,if,token,parser,next,token,xcontent,parser,token,string,current,field,name,parser,current,name,if,snapshot,equals,current,field,name,while,token,parser,next,token,xcontent,parser,token,if,token,xcontent,parser,token,current,field,name,parser,current,name,token,parser,next,token,if,token,is,value,if,name,equals,current,field,name,name,parser,text,else,if,uuid,equals,current,field,name,uuid,parser,text,else,if,state,equals,current,field,name,state,snapshot,state,value,of,parser,text,else,if,reason,equals,current,field,name,reason,parser,text,else,if,equals,current,field,name,start,time,parser,long,value,else,if,equals,current,field,name,end,time,parser,long,value,else,if,equals,current,field,name,total,shards,parser,int,value,else,if,equals,current,field,name,successful,shards,parser,int,value,else,if,equals,current,field,name,version,version,from,id,parser,int,value,else,if,equals,current,field,name,include,global,state,parser,boolean,value,else,if,token,xcontent,parser,token,if,indices,equals,current,field,name,array,list,string,indices,array,new,array,list,while,parser,next,token,xcontent,parser,token,indices,array,add,parser,text,indices,collections,unmodifiable,list,indices,array,else,if,failures,equals,current,field,name,array,list,snapshot,shard,failure,shard,failure,array,list,new,array,list,while,parser,next,token,xcontent,parser,token,shard,failure,array,list,add,snapshot,shard,failure,from,xcontent,parser,shard,failures,collections,unmodifiable,list,shard,failure,array,list,else,parser,skip,children,else,if,token,xcontent,parser,token,parser,skip,children,else,throw,new,elasticsearch,parse,exception,unexpected,token,token,if,uuid,null,uuid,name,return,new,snapshot,info,new,snapshot,id,name,uuid,indices,state,reason,version,start,time,end,time,total,shards,successful,shards,shard,failures,include,global,state
SnapshotInfo -> public static SnapshotInfo fromXContentInternal(final XContentParser parser) throws IOException;1536964057;This method creates a SnapshotInfo from internal x-content.  It does not_handle x-content written with the external version as external x-content_is only for display purposes and does not need to be parsed.;public static SnapshotInfo fromXContentInternal(final XContentParser parser) throws IOException {_        String name = null__        String uuid = null__        Version version = Version.CURRENT__        SnapshotState state = SnapshotState.IN_PROGRESS__        String reason = null__        List<String> indices = Collections.emptyList()__        long startTime = 0__        long endTime = 0__        int totalShards = 0__        int successfulShards = 0__        Boolean includeGlobalState = null__        List<SnapshotShardFailure> shardFailures = Collections.emptyList()__        if (parser.currentToken() == null) { _            parser.nextToken()__        }_        if (parser.currentToken() == XContentParser.Token.START_OBJECT) {  _            parser.nextToken()__        }_        XContentParser.Token token__        if ((token = parser.nextToken()) == XContentParser.Token.START_OBJECT) {_            String currentFieldName = parser.currentName()__            if (SNAPSHOT.equals(currentFieldName)) {_                while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {_                    if (token == XContentParser.Token.FIELD_NAME) {_                        currentFieldName = parser.currentName()__                        token = parser.nextToken()__                        if (token.isValue()) {_                            if (NAME.equals(currentFieldName)) {_                                name = parser.text()__                            } else if (UUID.equals(currentFieldName)) {_                                uuid = parser.text()__                            } else if (STATE.equals(currentFieldName)) {_                                state = SnapshotState.valueOf(parser.text())__                            } else if (REASON.equals(currentFieldName)) {_                                reason = parser.text()__                            } else if (START_TIME.equals(currentFieldName)) {_                                startTime = parser.longValue()__                            } else if (END_TIME.equals(currentFieldName)) {_                                endTime = parser.longValue()__                            } else if (TOTAL_SHARDS.equals(currentFieldName)) {_                                totalShards = parser.intValue()__                            } else if (SUCCESSFUL_SHARDS.equals(currentFieldName)) {_                                successfulShards = parser.intValue()__                            } else if (VERSION_ID.equals(currentFieldName)) {_                                version = Version.fromId(parser.intValue())__                            } else if (INCLUDE_GLOBAL_STATE.equals(currentFieldName)) {_                                includeGlobalState = parser.booleanValue()__                            }_                        } else if (token == XContentParser.Token.START_ARRAY) {_                            if (INDICES.equals(currentFieldName)) {_                                ArrayList<String> indicesArray = new ArrayList<>()__                                while (parser.nextToken() != XContentParser.Token.END_ARRAY) {_                                    indicesArray.add(parser.text())__                                }_                                indices = Collections.unmodifiableList(indicesArray)__                            } else if (FAILURES.equals(currentFieldName)) {_                                ArrayList<SnapshotShardFailure> shardFailureArrayList = new ArrayList<>()__                                while (parser.nextToken() != XContentParser.Token.END_ARRAY) {_                                    shardFailureArrayList.add(SnapshotShardFailure.fromXContent(parser))__                                }_                                shardFailures = Collections.unmodifiableList(shardFailureArrayList)__                            } else {_                                _                                parser.skipChildren()__                            }_                        } else if (token == XContentParser.Token.START_OBJECT) {_                            _                            parser.skipChildren()__                        }_                    }_                }_            }_        } else {_            throw new ElasticsearchParseException("unexpected token  [" + token + "]")__        }_        if (uuid == null) {_            _            uuid = name__        }_        return new SnapshotInfo(new SnapshotId(name, uuid),_                                indices,_                                state,_                                reason,_                                version,_                                startTime,_                                endTime,_                                totalShards,_                                successfulShards,_                                shardFailures,_                                includeGlobalState)__    };this,method,creates,a,snapshot,info,from,internal,x,content,it,does,not,handle,x,content,written,with,the,external,version,as,external,x,content,is,only,for,display,purposes,and,does,not,need,to,be,parsed;public,static,snapshot,info,from,xcontent,internal,final,xcontent,parser,parser,throws,ioexception,string,name,null,string,uuid,null,version,version,version,current,snapshot,state,state,snapshot,state,string,reason,null,list,string,indices,collections,empty,list,long,start,time,0,long,end,time,0,int,total,shards,0,int,successful,shards,0,boolean,include,global,state,null,list,snapshot,shard,failure,shard,failures,collections,empty,list,if,parser,current,token,null,parser,next,token,if,parser,current,token,xcontent,parser,token,parser,next,token,xcontent,parser,token,token,if,token,parser,next,token,xcontent,parser,token,string,current,field,name,parser,current,name,if,snapshot,equals,current,field,name,while,token,parser,next,token,xcontent,parser,token,if,token,xcontent,parser,token,current,field,name,parser,current,name,token,parser,next,token,if,token,is,value,if,name,equals,current,field,name,name,parser,text,else,if,uuid,equals,current,field,name,uuid,parser,text,else,if,state,equals,current,field,name,state,snapshot,state,value,of,parser,text,else,if,reason,equals,current,field,name,reason,parser,text,else,if,equals,current,field,name,start,time,parser,long,value,else,if,equals,current,field,name,end,time,parser,long,value,else,if,equals,current,field,name,total,shards,parser,int,value,else,if,equals,current,field,name,successful,shards,parser,int,value,else,if,equals,current,field,name,version,version,from,id,parser,int,value,else,if,equals,current,field,name,include,global,state,parser,boolean,value,else,if,token,xcontent,parser,token,if,indices,equals,current,field,name,array,list,string,indices,array,new,array,list,while,parser,next,token,xcontent,parser,token,indices,array,add,parser,text,indices,collections,unmodifiable,list,indices,array,else,if,failures,equals,current,field,name,array,list,snapshot,shard,failure,shard,failure,array,list,new,array,list,while,parser,next,token,xcontent,parser,token,shard,failure,array,list,add,snapshot,shard,failure,from,xcontent,parser,shard,failures,collections,unmodifiable,list,shard,failure,array,list,else,parser,skip,children,else,if,token,xcontent,parser,token,parser,skip,children,else,throw,new,elasticsearch,parse,exception,unexpected,token,token,if,uuid,null,uuid,name,return,new,snapshot,info,new,snapshot,id,name,uuid,indices,state,reason,version,start,time,end,time,total,shards,successful,shards,shard,failures,include,global,state
SnapshotInfo -> public static SnapshotInfo fromXContentInternal(final XContentParser parser) throws IOException;1544221624;This method creates a SnapshotInfo from internal x-content.  It does not_handle x-content written with the external version as external x-content_is only for display purposes and does not need to be parsed.;public static SnapshotInfo fromXContentInternal(final XContentParser parser) throws IOException {_        String name = null__        String uuid = null__        Version version = Version.CURRENT__        SnapshotState state = SnapshotState.IN_PROGRESS__        String reason = null__        List<String> indices = Collections.emptyList()__        long startTime = 0__        long endTime = 0__        int totalShards = 0__        int successfulShards = 0__        Boolean includeGlobalState = null__        List<SnapshotShardFailure> shardFailures = Collections.emptyList()__        if (parser.currentToken() == null) { _            parser.nextToken()__        }_        if (parser.currentToken() == XContentParser.Token.START_OBJECT) {  _            parser.nextToken()__        }_        XContentParser.Token token__        if ((token = parser.nextToken()) == XContentParser.Token.START_OBJECT) {_            String currentFieldName = parser.currentName()__            if (SNAPSHOT.equals(currentFieldName)) {_                while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {_                    if (token == XContentParser.Token.FIELD_NAME) {_                        currentFieldName = parser.currentName()__                        token = parser.nextToken()__                        if (token.isValue()) {_                            if (NAME.equals(currentFieldName)) {_                                name = parser.text()__                            } else if (UUID.equals(currentFieldName)) {_                                uuid = parser.text()__                            } else if (STATE.equals(currentFieldName)) {_                                state = SnapshotState.valueOf(parser.text())__                            } else if (REASON.equals(currentFieldName)) {_                                reason = parser.text()__                            } else if (START_TIME.equals(currentFieldName)) {_                                startTime = parser.longValue()__                            } else if (END_TIME.equals(currentFieldName)) {_                                endTime = parser.longValue()__                            } else if (TOTAL_SHARDS.equals(currentFieldName)) {_                                totalShards = parser.intValue()__                            } else if (SUCCESSFUL_SHARDS.equals(currentFieldName)) {_                                successfulShards = parser.intValue()__                            } else if (VERSION_ID.equals(currentFieldName)) {_                                version = Version.fromId(parser.intValue())__                            } else if (INCLUDE_GLOBAL_STATE.equals(currentFieldName)) {_                                includeGlobalState = parser.booleanValue()__                            }_                        } else if (token == XContentParser.Token.START_ARRAY) {_                            if (INDICES.equals(currentFieldName)) {_                                ArrayList<String> indicesArray = new ArrayList<>()__                                while (parser.nextToken() != XContentParser.Token.END_ARRAY) {_                                    indicesArray.add(parser.text())__                                }_                                indices = Collections.unmodifiableList(indicesArray)__                            } else if (FAILURES.equals(currentFieldName)) {_                                ArrayList<SnapshotShardFailure> shardFailureArrayList = new ArrayList<>()__                                while (parser.nextToken() != XContentParser.Token.END_ARRAY) {_                                    shardFailureArrayList.add(SnapshotShardFailure.fromXContent(parser))__                                }_                                shardFailures = Collections.unmodifiableList(shardFailureArrayList)__                            } else {_                                _                                parser.skipChildren()__                            }_                        } else if (token == XContentParser.Token.START_OBJECT) {_                            _                            parser.skipChildren()__                        }_                    }_                }_            }_        } else {_            throw new ElasticsearchParseException("unexpected token  [" + token + "]")__        }_        if (uuid == null) {_            _            uuid = name__        }_        return new SnapshotInfo(new SnapshotId(name, uuid),_                                indices,_                                state,_                                reason,_                                version,_                                startTime,_                                endTime,_                                totalShards,_                                successfulShards,_                                shardFailures,_                                includeGlobalState)__    };this,method,creates,a,snapshot,info,from,internal,x,content,it,does,not,handle,x,content,written,with,the,external,version,as,external,x,content,is,only,for,display,purposes,and,does,not,need,to,be,parsed;public,static,snapshot,info,from,xcontent,internal,final,xcontent,parser,parser,throws,ioexception,string,name,null,string,uuid,null,version,version,version,current,snapshot,state,state,snapshot,state,string,reason,null,list,string,indices,collections,empty,list,long,start,time,0,long,end,time,0,int,total,shards,0,int,successful,shards,0,boolean,include,global,state,null,list,snapshot,shard,failure,shard,failures,collections,empty,list,if,parser,current,token,null,parser,next,token,if,parser,current,token,xcontent,parser,token,parser,next,token,xcontent,parser,token,token,if,token,parser,next,token,xcontent,parser,token,string,current,field,name,parser,current,name,if,snapshot,equals,current,field,name,while,token,parser,next,token,xcontent,parser,token,if,token,xcontent,parser,token,current,field,name,parser,current,name,token,parser,next,token,if,token,is,value,if,name,equals,current,field,name,name,parser,text,else,if,uuid,equals,current,field,name,uuid,parser,text,else,if,state,equals,current,field,name,state,snapshot,state,value,of,parser,text,else,if,reason,equals,current,field,name,reason,parser,text,else,if,equals,current,field,name,start,time,parser,long,value,else,if,equals,current,field,name,end,time,parser,long,value,else,if,equals,current,field,name,total,shards,parser,int,value,else,if,equals,current,field,name,successful,shards,parser,int,value,else,if,equals,current,field,name,version,version,from,id,parser,int,value,else,if,equals,current,field,name,include,global,state,parser,boolean,value,else,if,token,xcontent,parser,token,if,indices,equals,current,field,name,array,list,string,indices,array,new,array,list,while,parser,next,token,xcontent,parser,token,indices,array,add,parser,text,indices,collections,unmodifiable,list,indices,array,else,if,failures,equals,current,field,name,array,list,snapshot,shard,failure,shard,failure,array,list,new,array,list,while,parser,next,token,xcontent,parser,token,shard,failure,array,list,add,snapshot,shard,failure,from,xcontent,parser,shard,failures,collections,unmodifiable,list,shard,failure,array,list,else,parser,skip,children,else,if,token,xcontent,parser,token,parser,skip,children,else,throw,new,elasticsearch,parse,exception,unexpected,token,token,if,uuid,null,uuid,name,return,new,snapshot,info,new,snapshot,id,name,uuid,indices,state,reason,version,start,time,end,time,total,shards,successful,shards,shard,failures,include,global,state
SnapshotInfo -> public static SnapshotInfo fromXContentInternal(final XContentParser parser) throws IOException;1544629714;This method creates a SnapshotInfo from internal x-content.  It does not_handle x-content written with the external version as external x-content_is only for display purposes and does not need to be parsed.;public static SnapshotInfo fromXContentInternal(final XContentParser parser) throws IOException {_        String name = null__        String uuid = null__        Version version = Version.CURRENT__        SnapshotState state = SnapshotState.IN_PROGRESS__        String reason = null__        List<String> indices = Collections.emptyList()__        long startTime = 0__        long endTime = 0__        int totalShards = 0__        int successfulShards = 0__        Boolean includeGlobalState = null__        List<SnapshotShardFailure> shardFailures = Collections.emptyList()__        if (parser.currentToken() == null) { _            parser.nextToken()__        }_        if (parser.currentToken() == XContentParser.Token.START_OBJECT) {  _            parser.nextToken()__        }_        XContentParser.Token token__        if ((token = parser.nextToken()) == XContentParser.Token.START_OBJECT) {_            String currentFieldName = parser.currentName()__            if (SNAPSHOT.equals(currentFieldName)) {_                while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {_                    if (token == XContentParser.Token.FIELD_NAME) {_                        currentFieldName = parser.currentName()__                        token = parser.nextToken()__                        if (token.isValue()) {_                            if (NAME.equals(currentFieldName)) {_                                name = parser.text()__                            } else if (UUID.equals(currentFieldName)) {_                                uuid = parser.text()__                            } else if (STATE.equals(currentFieldName)) {_                                state = SnapshotState.valueOf(parser.text())__                            } else if (REASON.equals(currentFieldName)) {_                                reason = parser.text()__                            } else if (START_TIME.equals(currentFieldName)) {_                                startTime = parser.longValue()__                            } else if (END_TIME.equals(currentFieldName)) {_                                endTime = parser.longValue()__                            } else if (TOTAL_SHARDS.equals(currentFieldName)) {_                                totalShards = parser.intValue()__                            } else if (SUCCESSFUL_SHARDS.equals(currentFieldName)) {_                                successfulShards = parser.intValue()__                            } else if (VERSION_ID.equals(currentFieldName)) {_                                version = Version.fromId(parser.intValue())__                            } else if (INCLUDE_GLOBAL_STATE.equals(currentFieldName)) {_                                includeGlobalState = parser.booleanValue()__                            }_                        } else if (token == XContentParser.Token.START_ARRAY) {_                            if (INDICES.equals(currentFieldName)) {_                                ArrayList<String> indicesArray = new ArrayList<>()__                                while (parser.nextToken() != XContentParser.Token.END_ARRAY) {_                                    indicesArray.add(parser.text())__                                }_                                indices = Collections.unmodifiableList(indicesArray)__                            } else if (FAILURES.equals(currentFieldName)) {_                                ArrayList<SnapshotShardFailure> shardFailureArrayList = new ArrayList<>()__                                while (parser.nextToken() != XContentParser.Token.END_ARRAY) {_                                    shardFailureArrayList.add(SnapshotShardFailure.fromXContent(parser))__                                }_                                shardFailures = Collections.unmodifiableList(shardFailureArrayList)__                            } else {_                                _                                parser.skipChildren()__                            }_                        } else if (token == XContentParser.Token.START_OBJECT) {_                            _                            parser.skipChildren()__                        }_                    }_                }_            }_        } else {_            throw new ElasticsearchParseException("unexpected token  [" + token + "]")__        }_        if (uuid == null) {_            _            uuid = name__        }_        return new SnapshotInfo(new SnapshotId(name, uuid),_                                indices,_                                state,_                                reason,_                                version,_                                startTime,_                                endTime,_                                totalShards,_                                successfulShards,_                                shardFailures,_                                includeGlobalState)__    };this,method,creates,a,snapshot,info,from,internal,x,content,it,does,not,handle,x,content,written,with,the,external,version,as,external,x,content,is,only,for,display,purposes,and,does,not,need,to,be,parsed;public,static,snapshot,info,from,xcontent,internal,final,xcontent,parser,parser,throws,ioexception,string,name,null,string,uuid,null,version,version,version,current,snapshot,state,state,snapshot,state,string,reason,null,list,string,indices,collections,empty,list,long,start,time,0,long,end,time,0,int,total,shards,0,int,successful,shards,0,boolean,include,global,state,null,list,snapshot,shard,failure,shard,failures,collections,empty,list,if,parser,current,token,null,parser,next,token,if,parser,current,token,xcontent,parser,token,parser,next,token,xcontent,parser,token,token,if,token,parser,next,token,xcontent,parser,token,string,current,field,name,parser,current,name,if,snapshot,equals,current,field,name,while,token,parser,next,token,xcontent,parser,token,if,token,xcontent,parser,token,current,field,name,parser,current,name,token,parser,next,token,if,token,is,value,if,name,equals,current,field,name,name,parser,text,else,if,uuid,equals,current,field,name,uuid,parser,text,else,if,state,equals,current,field,name,state,snapshot,state,value,of,parser,text,else,if,reason,equals,current,field,name,reason,parser,text,else,if,equals,current,field,name,start,time,parser,long,value,else,if,equals,current,field,name,end,time,parser,long,value,else,if,equals,current,field,name,total,shards,parser,int,value,else,if,equals,current,field,name,successful,shards,parser,int,value,else,if,equals,current,field,name,version,version,from,id,parser,int,value,else,if,equals,current,field,name,include,global,state,parser,boolean,value,else,if,token,xcontent,parser,token,if,indices,equals,current,field,name,array,list,string,indices,array,new,array,list,while,parser,next,token,xcontent,parser,token,indices,array,add,parser,text,indices,collections,unmodifiable,list,indices,array,else,if,failures,equals,current,field,name,array,list,snapshot,shard,failure,shard,failure,array,list,new,array,list,while,parser,next,token,xcontent,parser,token,shard,failure,array,list,add,snapshot,shard,failure,from,xcontent,parser,shard,failures,collections,unmodifiable,list,shard,failure,array,list,else,parser,skip,children,else,if,token,xcontent,parser,token,parser,skip,children,else,throw,new,elasticsearch,parse,exception,unexpected,token,token,if,uuid,null,uuid,name,return,new,snapshot,info,new,snapshot,id,name,uuid,indices,state,reason,version,start,time,end,time,total,shards,successful,shards,shard,failures,include,global,state
SnapshotInfo -> public static SnapshotInfo fromXContentInternal(final XContentParser parser) throws IOException;1545215361;This method creates a SnapshotInfo from internal x-content.  It does not_handle x-content written with the external version as external x-content_is only for display purposes and does not need to be parsed.;public static SnapshotInfo fromXContentInternal(final XContentParser parser) throws IOException {_        String name = null__        String uuid = null__        Version version = Version.CURRENT__        SnapshotState state = SnapshotState.IN_PROGRESS__        String reason = null__        List<String> indices = Collections.emptyList()__        long startTime = 0__        long endTime = 0__        int totalShards = 0__        int successfulShards = 0__        Boolean includeGlobalState = null__        List<SnapshotShardFailure> shardFailures = Collections.emptyList()__        if (parser.currentToken() == null) { _            parser.nextToken()__        }_        if (parser.currentToken() == XContentParser.Token.START_OBJECT) {  _            parser.nextToken()__        }_        XContentParser.Token token__        if ((token = parser.nextToken()) == XContentParser.Token.START_OBJECT) {_            String currentFieldName = parser.currentName()__            if (SNAPSHOT.equals(currentFieldName)) {_                while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {_                    if (token == XContentParser.Token.FIELD_NAME) {_                        currentFieldName = parser.currentName()__                        token = parser.nextToken()__                        if (token.isValue()) {_                            if (NAME.equals(currentFieldName)) {_                                name = parser.text()__                            } else if (UUID.equals(currentFieldName)) {_                                uuid = parser.text()__                            } else if (STATE.equals(currentFieldName)) {_                                state = SnapshotState.valueOf(parser.text())__                            } else if (REASON.equals(currentFieldName)) {_                                reason = parser.text()__                            } else if (START_TIME.equals(currentFieldName)) {_                                startTime = parser.longValue()__                            } else if (END_TIME.equals(currentFieldName)) {_                                endTime = parser.longValue()__                            } else if (TOTAL_SHARDS.equals(currentFieldName)) {_                                totalShards = parser.intValue()__                            } else if (SUCCESSFUL_SHARDS.equals(currentFieldName)) {_                                successfulShards = parser.intValue()__                            } else if (VERSION_ID.equals(currentFieldName)) {_                                version = Version.fromId(parser.intValue())__                            } else if (INCLUDE_GLOBAL_STATE.equals(currentFieldName)) {_                                includeGlobalState = parser.booleanValue()__                            }_                        } else if (token == XContentParser.Token.START_ARRAY) {_                            if (INDICES.equals(currentFieldName)) {_                                ArrayList<String> indicesArray = new ArrayList<>()__                                while (parser.nextToken() != XContentParser.Token.END_ARRAY) {_                                    indicesArray.add(parser.text())__                                }_                                indices = Collections.unmodifiableList(indicesArray)__                            } else if (FAILURES.equals(currentFieldName)) {_                                ArrayList<SnapshotShardFailure> shardFailureArrayList = new ArrayList<>()__                                while (parser.nextToken() != XContentParser.Token.END_ARRAY) {_                                    shardFailureArrayList.add(SnapshotShardFailure.fromXContent(parser))__                                }_                                shardFailures = Collections.unmodifiableList(shardFailureArrayList)__                            } else {_                                _                                parser.skipChildren()__                            }_                        } else if (token == XContentParser.Token.START_OBJECT) {_                            _                            parser.skipChildren()__                        }_                    }_                }_            }_        } else {_            throw new ElasticsearchParseException("unexpected token  [" + token + "]")__        }_        if (uuid == null) {_            _            uuid = name__        }_        return new SnapshotInfo(new SnapshotId(name, uuid),_                                indices,_                                state,_                                reason,_                                version,_                                startTime,_                                endTime,_                                totalShards,_                                successfulShards,_                                shardFailures,_                                includeGlobalState)__    };this,method,creates,a,snapshot,info,from,internal,x,content,it,does,not,handle,x,content,written,with,the,external,version,as,external,x,content,is,only,for,display,purposes,and,does,not,need,to,be,parsed;public,static,snapshot,info,from,xcontent,internal,final,xcontent,parser,parser,throws,ioexception,string,name,null,string,uuid,null,version,version,version,current,snapshot,state,state,snapshot,state,string,reason,null,list,string,indices,collections,empty,list,long,start,time,0,long,end,time,0,int,total,shards,0,int,successful,shards,0,boolean,include,global,state,null,list,snapshot,shard,failure,shard,failures,collections,empty,list,if,parser,current,token,null,parser,next,token,if,parser,current,token,xcontent,parser,token,parser,next,token,xcontent,parser,token,token,if,token,parser,next,token,xcontent,parser,token,string,current,field,name,parser,current,name,if,snapshot,equals,current,field,name,while,token,parser,next,token,xcontent,parser,token,if,token,xcontent,parser,token,current,field,name,parser,current,name,token,parser,next,token,if,token,is,value,if,name,equals,current,field,name,name,parser,text,else,if,uuid,equals,current,field,name,uuid,parser,text,else,if,state,equals,current,field,name,state,snapshot,state,value,of,parser,text,else,if,reason,equals,current,field,name,reason,parser,text,else,if,equals,current,field,name,start,time,parser,long,value,else,if,equals,current,field,name,end,time,parser,long,value,else,if,equals,current,field,name,total,shards,parser,int,value,else,if,equals,current,field,name,successful,shards,parser,int,value,else,if,equals,current,field,name,version,version,from,id,parser,int,value,else,if,equals,current,field,name,include,global,state,parser,boolean,value,else,if,token,xcontent,parser,token,if,indices,equals,current,field,name,array,list,string,indices,array,new,array,list,while,parser,next,token,xcontent,parser,token,indices,array,add,parser,text,indices,collections,unmodifiable,list,indices,array,else,if,failures,equals,current,field,name,array,list,snapshot,shard,failure,shard,failure,array,list,new,array,list,while,parser,next,token,xcontent,parser,token,shard,failure,array,list,add,snapshot,shard,failure,from,xcontent,parser,shard,failures,collections,unmodifiable,list,shard,failure,array,list,else,parser,skip,children,else,if,token,xcontent,parser,token,parser,skip,children,else,throw,new,elasticsearch,parse,exception,unexpected,token,token,if,uuid,null,uuid,name,return,new,snapshot,info,new,snapshot,id,name,uuid,indices,state,reason,version,start,time,end,time,total,shards,successful,shards,shard,failures,include,global,state
SnapshotInfo -> public static SnapshotInfo fromXContentInternal(final XContentParser parser) throws IOException;1548236405;This method creates a SnapshotInfo from internal x-content.  It does not_handle x-content written with the external version as external x-content_is only for display purposes and does not need to be parsed.;public static SnapshotInfo fromXContentInternal(final XContentParser parser) throws IOException {_        String name = null__        String uuid = null__        Version version = Version.CURRENT__        SnapshotState state = SnapshotState.IN_PROGRESS__        String reason = null__        List<String> indices = Collections.emptyList()__        long startTime = 0__        long endTime = 0__        int totalShards = 0__        int successfulShards = 0__        Boolean includeGlobalState = null__        List<SnapshotShardFailure> shardFailures = Collections.emptyList()__        if (parser.currentToken() == null) { _            parser.nextToken()__        }_        if (parser.currentToken() == XContentParser.Token.START_OBJECT) {  _            parser.nextToken()__        }_        XContentParser.Token token__        if ((token = parser.nextToken()) == XContentParser.Token.START_OBJECT) {_            String currentFieldName = parser.currentName()__            if (SNAPSHOT.equals(currentFieldName)) {_                while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {_                    if (token == XContentParser.Token.FIELD_NAME) {_                        currentFieldName = parser.currentName()__                        token = parser.nextToken()__                        if (token.isValue()) {_                            if (NAME.equals(currentFieldName)) {_                                name = parser.text()__                            } else if (UUID.equals(currentFieldName)) {_                                uuid = parser.text()__                            } else if (STATE.equals(currentFieldName)) {_                                state = SnapshotState.valueOf(parser.text())__                            } else if (REASON.equals(currentFieldName)) {_                                reason = parser.text()__                            } else if (START_TIME.equals(currentFieldName)) {_                                startTime = parser.longValue()__                            } else if (END_TIME.equals(currentFieldName)) {_                                endTime = parser.longValue()__                            } else if (TOTAL_SHARDS.equals(currentFieldName)) {_                                totalShards = parser.intValue()__                            } else if (SUCCESSFUL_SHARDS.equals(currentFieldName)) {_                                successfulShards = parser.intValue()__                            } else if (VERSION_ID.equals(currentFieldName)) {_                                version = Version.fromId(parser.intValue())__                            } else if (INCLUDE_GLOBAL_STATE.equals(currentFieldName)) {_                                includeGlobalState = parser.booleanValue()__                            }_                        } else if (token == XContentParser.Token.START_ARRAY) {_                            if (INDICES.equals(currentFieldName)) {_                                ArrayList<String> indicesArray = new ArrayList<>()__                                while (parser.nextToken() != XContentParser.Token.END_ARRAY) {_                                    indicesArray.add(parser.text())__                                }_                                indices = Collections.unmodifiableList(indicesArray)__                            } else if (FAILURES.equals(currentFieldName)) {_                                ArrayList<SnapshotShardFailure> shardFailureArrayList = new ArrayList<>()__                                while (parser.nextToken() != XContentParser.Token.END_ARRAY) {_                                    shardFailureArrayList.add(SnapshotShardFailure.fromXContent(parser))__                                }_                                shardFailures = Collections.unmodifiableList(shardFailureArrayList)__                            } else {_                                _                                parser.skipChildren()__                            }_                        } else if (token == XContentParser.Token.START_OBJECT) {_                            _                            parser.skipChildren()__                        }_                    }_                }_            }_        } else {_            throw new ElasticsearchParseException("unexpected token  [" + token + "]")__        }_        if (uuid == null) {_            _            uuid = name__        }_        return new SnapshotInfo(new SnapshotId(name, uuid),_                                indices,_                                state,_                                reason,_                                version,_                                startTime,_                                endTime,_                                totalShards,_                                successfulShards,_                                shardFailures,_                                includeGlobalState)__    };this,method,creates,a,snapshot,info,from,internal,x,content,it,does,not,handle,x,content,written,with,the,external,version,as,external,x,content,is,only,for,display,purposes,and,does,not,need,to,be,parsed;public,static,snapshot,info,from,xcontent,internal,final,xcontent,parser,parser,throws,ioexception,string,name,null,string,uuid,null,version,version,version,current,snapshot,state,state,snapshot,state,string,reason,null,list,string,indices,collections,empty,list,long,start,time,0,long,end,time,0,int,total,shards,0,int,successful,shards,0,boolean,include,global,state,null,list,snapshot,shard,failure,shard,failures,collections,empty,list,if,parser,current,token,null,parser,next,token,if,parser,current,token,xcontent,parser,token,parser,next,token,xcontent,parser,token,token,if,token,parser,next,token,xcontent,parser,token,string,current,field,name,parser,current,name,if,snapshot,equals,current,field,name,while,token,parser,next,token,xcontent,parser,token,if,token,xcontent,parser,token,current,field,name,parser,current,name,token,parser,next,token,if,token,is,value,if,name,equals,current,field,name,name,parser,text,else,if,uuid,equals,current,field,name,uuid,parser,text,else,if,state,equals,current,field,name,state,snapshot,state,value,of,parser,text,else,if,reason,equals,current,field,name,reason,parser,text,else,if,equals,current,field,name,start,time,parser,long,value,else,if,equals,current,field,name,end,time,parser,long,value,else,if,equals,current,field,name,total,shards,parser,int,value,else,if,equals,current,field,name,successful,shards,parser,int,value,else,if,equals,current,field,name,version,version,from,id,parser,int,value,else,if,equals,current,field,name,include,global,state,parser,boolean,value,else,if,token,xcontent,parser,token,if,indices,equals,current,field,name,array,list,string,indices,array,new,array,list,while,parser,next,token,xcontent,parser,token,indices,array,add,parser,text,indices,collections,unmodifiable,list,indices,array,else,if,failures,equals,current,field,name,array,list,snapshot,shard,failure,shard,failure,array,list,new,array,list,while,parser,next,token,xcontent,parser,token,shard,failure,array,list,add,snapshot,shard,failure,from,xcontent,parser,shard,failures,collections,unmodifiable,list,shard,failure,array,list,else,parser,skip,children,else,if,token,xcontent,parser,token,parser,skip,children,else,throw,new,elasticsearch,parse,exception,unexpected,token,token,if,uuid,null,uuid,name,return,new,snapshot,info,new,snapshot,id,name,uuid,indices,state,reason,version,start,time,end,time,total,shards,successful,shards,shard,failures,include,global,state
SnapshotInfo -> public List<String> indices();1524684173;Returns indices that were included in this snapshot.__@return list of indices;public List<String> indices() {_        return indices__    };returns,indices,that,were,included,in,this,snapshot,return,list,of,indices;public,list,string,indices,return,indices
SnapshotInfo -> public List<String> indices();1531179852;Returns indices that were included in this snapshot.__@return list of indices;public List<String> indices() {_        return indices__    };returns,indices,that,were,included,in,this,snapshot,return,list,of,indices;public,list,string,indices,return,indices
SnapshotInfo -> public List<String> indices();1531234550;Returns indices that were included in this snapshot.__@return list of indices;public List<String> indices() {_        return indices__    };returns,indices,that,were,included,in,this,snapshot,return,list,of,indices;public,list,string,indices,return,indices
SnapshotInfo -> public List<String> indices();1531729807;Returns indices that were included in this snapshot.__@return list of indices;public List<String> indices() {_        return indices__    };returns,indices,that,were,included,in,this,snapshot,return,list,of,indices;public,list,string,indices,return,indices
SnapshotInfo -> public List<String> indices();1535139672;Returns indices that were included in this snapshot.__@return list of indices;public List<String> indices() {_        return indices__    };returns,indices,that,were,included,in,this,snapshot,return,list,of,indices;public,list,string,indices,return,indices
SnapshotInfo -> public List<String> indices();1536964057;Returns indices that were included in this snapshot.__@return list of indices;public List<String> indices() {_        return indices__    };returns,indices,that,were,included,in,this,snapshot,return,list,of,indices;public,list,string,indices,return,indices
SnapshotInfo -> public List<String> indices();1544221624;Returns indices that were included in this snapshot.__@return list of indices;public List<String> indices() {_        return indices__    };returns,indices,that,were,included,in,this,snapshot,return,list,of,indices;public,list,string,indices,return,indices
SnapshotInfo -> public List<String> indices();1544629714;Returns indices that were included in this snapshot.__@return list of indices;public List<String> indices() {_        return indices__    };returns,indices,that,were,included,in,this,snapshot,return,list,of,indices;public,list,string,indices,return,indices
SnapshotInfo -> public List<String> indices();1545215361;Returns indices that were included in this snapshot.__@return list of indices;public List<String> indices() {_        return indices__    };returns,indices,that,were,included,in,this,snapshot,return,list,of,indices;public,list,string,indices,return,indices
SnapshotInfo -> public List<String> indices();1548236405;Returns indices that were included in this snapshot.__@return list of indices;public List<String> indices() {_        return indices__    };returns,indices,that,were,included,in,this,snapshot,return,list,of,indices;public,list,string,indices,return,indices
SnapshotInfo -> @Nullable     public String reason();1524684173;Returns snapshot failure reason_ {@code null} if the snapshot succeeded.__@return snapshot failure reason;@Nullable_    public String reason() {_        return reason__    };returns,snapshot,failure,reason,code,null,if,the,snapshot,succeeded,return,snapshot,failure,reason;nullable,public,string,reason,return,reason
SnapshotInfo -> @Nullable     public String reason();1531179852;Returns snapshot failure reason_ {@code null} if the snapshot succeeded.__@return snapshot failure reason;@Nullable_    public String reason() {_        return reason__    };returns,snapshot,failure,reason,code,null,if,the,snapshot,succeeded,return,snapshot,failure,reason;nullable,public,string,reason,return,reason
SnapshotInfo -> @Nullable     public String reason();1531234550;Returns snapshot failure reason_ {@code null} if the snapshot succeeded.__@return snapshot failure reason;@Nullable_    public String reason() {_        return reason__    };returns,snapshot,failure,reason,code,null,if,the,snapshot,succeeded,return,snapshot,failure,reason;nullable,public,string,reason,return,reason
SnapshotInfo -> @Nullable     public String reason();1531729807;Returns snapshot failure reason_ {@code null} if the snapshot succeeded.__@return snapshot failure reason;@Nullable_    public String reason() {_        return reason__    };returns,snapshot,failure,reason,code,null,if,the,snapshot,succeeded,return,snapshot,failure,reason;nullable,public,string,reason,return,reason
SnapshotInfo -> @Nullable     public String reason();1535139672;Returns snapshot failure reason_ {@code null} if the snapshot succeeded.__@return snapshot failure reason;@Nullable_    public String reason() {_        return reason__    };returns,snapshot,failure,reason,code,null,if,the,snapshot,succeeded,return,snapshot,failure,reason;nullable,public,string,reason,return,reason
SnapshotInfo -> @Nullable     public String reason();1536964057;Returns snapshot failure reason_ {@code null} if the snapshot succeeded.__@return snapshot failure reason;@Nullable_    public String reason() {_        return reason__    };returns,snapshot,failure,reason,code,null,if,the,snapshot,succeeded,return,snapshot,failure,reason;nullable,public,string,reason,return,reason
SnapshotInfo -> @Nullable     public String reason();1544221624;Returns snapshot failure reason_ {@code null} if the snapshot succeeded.__@return snapshot failure reason;@Nullable_    public String reason() {_        return reason__    };returns,snapshot,failure,reason,code,null,if,the,snapshot,succeeded,return,snapshot,failure,reason;nullable,public,string,reason,return,reason
SnapshotInfo -> @Nullable     public String reason();1544629714;Returns snapshot failure reason_ {@code null} if the snapshot succeeded.__@return snapshot failure reason;@Nullable_    public String reason() {_        return reason__    };returns,snapshot,failure,reason,code,null,if,the,snapshot,succeeded,return,snapshot,failure,reason;nullable,public,string,reason,return,reason
SnapshotInfo -> @Nullable     public String reason();1545215361;Returns snapshot failure reason_ {@code null} if the snapshot succeeded.__@return snapshot failure reason;@Nullable_    public String reason() {_        return reason__    };returns,snapshot,failure,reason,code,null,if,the,snapshot,succeeded,return,snapshot,failure,reason;nullable,public,string,reason,return,reason
SnapshotInfo -> @Nullable     public String reason();1548236405;Returns snapshot failure reason_ {@code null} if the snapshot succeeded.__@return snapshot failure reason;@Nullable_    public String reason() {_        return reason__    };returns,snapshot,failure,reason,code,null,if,the,snapshot,succeeded,return,snapshot,failure,reason;nullable,public,string,reason,return,reason
SnapshotInfo -> public SnapshotInfo basic();1524684173;Gets a new {@link SnapshotInfo} instance from the given {@link SnapshotInfo} with_all information stripped out except the snapshot id, state, and indices.;public SnapshotInfo basic() {_        return new SnapshotInfo(snapshotId, indices, state)__    };gets,a,new,link,snapshot,info,instance,from,the,given,link,snapshot,info,with,all,information,stripped,out,except,the,snapshot,id,state,and,indices;public,snapshot,info,basic,return,new,snapshot,info,snapshot,id,indices,state
SnapshotInfo -> public SnapshotInfo basic();1531179852;Gets a new {@link SnapshotInfo} instance from the given {@link SnapshotInfo} with_all information stripped out except the snapshot id, state, and indices.;public SnapshotInfo basic() {_        return new SnapshotInfo(snapshotId, indices, state)__    };gets,a,new,link,snapshot,info,instance,from,the,given,link,snapshot,info,with,all,information,stripped,out,except,the,snapshot,id,state,and,indices;public,snapshot,info,basic,return,new,snapshot,info,snapshot,id,indices,state
SnapshotInfo -> public SnapshotInfo basic();1531234550;Gets a new {@link SnapshotInfo} instance from the given {@link SnapshotInfo} with_all information stripped out except the snapshot id, state, and indices.;public SnapshotInfo basic() {_        return new SnapshotInfo(snapshotId, indices, state)__    };gets,a,new,link,snapshot,info,instance,from,the,given,link,snapshot,info,with,all,information,stripped,out,except,the,snapshot,id,state,and,indices;public,snapshot,info,basic,return,new,snapshot,info,snapshot,id,indices,state
SnapshotInfo -> public SnapshotInfo basic();1531729807;Gets a new {@link SnapshotInfo} instance from the given {@link SnapshotInfo} with_all information stripped out except the snapshot id, state, and indices.;public SnapshotInfo basic() {_        return new SnapshotInfo(snapshotId, indices, state)__    };gets,a,new,link,snapshot,info,instance,from,the,given,link,snapshot,info,with,all,information,stripped,out,except,the,snapshot,id,state,and,indices;public,snapshot,info,basic,return,new,snapshot,info,snapshot,id,indices,state
SnapshotInfo -> public SnapshotInfo basic();1535139672;Gets a new {@link SnapshotInfo} instance from the given {@link SnapshotInfo} with_all information stripped out except the snapshot id, state, and indices.;public SnapshotInfo basic() {_        return new SnapshotInfo(snapshotId, indices, state)__    };gets,a,new,link,snapshot,info,instance,from,the,given,link,snapshot,info,with,all,information,stripped,out,except,the,snapshot,id,state,and,indices;public,snapshot,info,basic,return,new,snapshot,info,snapshot,id,indices,state
SnapshotInfo -> public SnapshotInfo basic();1536964057;Gets a new {@link SnapshotInfo} instance from the given {@link SnapshotInfo} with_all information stripped out except the snapshot id, state, and indices.;public SnapshotInfo basic() {_        return new SnapshotInfo(snapshotId, indices, state)__    };gets,a,new,link,snapshot,info,instance,from,the,given,link,snapshot,info,with,all,information,stripped,out,except,the,snapshot,id,state,and,indices;public,snapshot,info,basic,return,new,snapshot,info,snapshot,id,indices,state
SnapshotInfo -> public SnapshotInfo basic();1544221624;Gets a new {@link SnapshotInfo} instance from the given {@link SnapshotInfo} with_all information stripped out except the snapshot id, state, and indices.;public SnapshotInfo basic() {_        return new SnapshotInfo(snapshotId, indices, state)__    };gets,a,new,link,snapshot,info,instance,from,the,given,link,snapshot,info,with,all,information,stripped,out,except,the,snapshot,id,state,and,indices;public,snapshot,info,basic,return,new,snapshot,info,snapshot,id,indices,state
SnapshotInfo -> public SnapshotInfo basic();1544629714;Gets a new {@link SnapshotInfo} instance from the given {@link SnapshotInfo} with_all information stripped out except the snapshot id, state, and indices.;public SnapshotInfo basic() {_        return new SnapshotInfo(snapshotId, indices, state)__    };gets,a,new,link,snapshot,info,instance,from,the,given,link,snapshot,info,with,all,information,stripped,out,except,the,snapshot,id,state,and,indices;public,snapshot,info,basic,return,new,snapshot,info,snapshot,id,indices,state
SnapshotInfo -> public SnapshotInfo basic();1545215361;Gets a new {@link SnapshotInfo} instance from the given {@link SnapshotInfo} with_all information stripped out except the snapshot id, state, and indices.;public SnapshotInfo basic() {_        return new SnapshotInfo(snapshotId, indices, state)__    };gets,a,new,link,snapshot,info,instance,from,the,given,link,snapshot,info,with,all,information,stripped,out,except,the,snapshot,id,state,and,indices;public,snapshot,info,basic,return,new,snapshot,info,snapshot,id,indices,state
SnapshotInfo -> public SnapshotInfo basic();1548236405;Gets a new {@link SnapshotInfo} instance from the given {@link SnapshotInfo} with_all information stripped out except the snapshot id, state, and indices.;public SnapshotInfo basic() {_        return new SnapshotInfo(snapshotId, indices, state)__    };gets,a,new,link,snapshot,info,instance,from,the,given,link,snapshot,info,with,all,information,stripped,out,except,the,snapshot,id,state,and,indices;public,snapshot,info,basic,return,new,snapshot,info,snapshot,id,indices,state
SnapshotInfo -> public int successfulShards();1524684173;Returns total number of shards that were successfully snapshotted_ a value of_{@code 0} will be returned if {@link #state()} returns {@code null}.__@return number of successful shards;public int successfulShards() {_        return successfulShards__    };returns,total,number,of,shards,that,were,successfully,snapshotted,a,value,of,code,0,will,be,returned,if,link,state,returns,code,null,return,number,of,successful,shards;public,int,successful,shards,return,successful,shards
SnapshotInfo -> public int successfulShards();1531179852;Returns total number of shards that were successfully snapshotted_ a value of_{@code 0} will be returned if {@link #state()} returns {@code null}.__@return number of successful shards;public int successfulShards() {_        return successfulShards__    };returns,total,number,of,shards,that,were,successfully,snapshotted,a,value,of,code,0,will,be,returned,if,link,state,returns,code,null,return,number,of,successful,shards;public,int,successful,shards,return,successful,shards
SnapshotInfo -> public int successfulShards();1531234550;Returns total number of shards that were successfully snapshotted_ a value of_{@code 0} will be returned if {@link #state()} returns {@code null}.__@return number of successful shards;public int successfulShards() {_        return successfulShards__    };returns,total,number,of,shards,that,were,successfully,snapshotted,a,value,of,code,0,will,be,returned,if,link,state,returns,code,null,return,number,of,successful,shards;public,int,successful,shards,return,successful,shards
SnapshotInfo -> public int successfulShards();1531729807;Returns total number of shards that were successfully snapshotted_ a value of_{@code 0} will be returned if {@link #state()} returns {@code null}.__@return number of successful shards;public int successfulShards() {_        return successfulShards__    };returns,total,number,of,shards,that,were,successfully,snapshotted,a,value,of,code,0,will,be,returned,if,link,state,returns,code,null,return,number,of,successful,shards;public,int,successful,shards,return,successful,shards
SnapshotInfo -> public int successfulShards();1535139672;Returns total number of shards that were successfully snapshotted_ a value of_{@code 0} will be returned if {@link #state()} returns {@code null}.__@return number of successful shards;public int successfulShards() {_        return successfulShards__    };returns,total,number,of,shards,that,were,successfully,snapshotted,a,value,of,code,0,will,be,returned,if,link,state,returns,code,null,return,number,of,successful,shards;public,int,successful,shards,return,successful,shards
SnapshotInfo -> public int successfulShards();1536964057;Returns total number of shards that were successfully snapshotted_ a value of_{@code 0} will be returned if {@link #state()} returns {@code null}.__@return number of successful shards;public int successfulShards() {_        return successfulShards__    };returns,total,number,of,shards,that,were,successfully,snapshotted,a,value,of,code,0,will,be,returned,if,link,state,returns,code,null,return,number,of,successful,shards;public,int,successful,shards,return,successful,shards
SnapshotInfo -> public int successfulShards();1544221624;Returns total number of shards that were successfully snapshotted_ a value of_{@code 0} will be returned if {@link #state()} returns {@code null}.__@return number of successful shards;public int successfulShards() {_        return successfulShards__    };returns,total,number,of,shards,that,were,successfully,snapshotted,a,value,of,code,0,will,be,returned,if,link,state,returns,code,null,return,number,of,successful,shards;public,int,successful,shards,return,successful,shards
SnapshotInfo -> public int successfulShards();1544629714;Returns total number of shards that were successfully snapshotted_ a value of_{@code 0} will be returned if {@link #state()} returns {@code null}.__@return number of successful shards;public int successfulShards() {_        return successfulShards__    };returns,total,number,of,shards,that,were,successfully,snapshotted,a,value,of,code,0,will,be,returned,if,link,state,returns,code,null,return,number,of,successful,shards;public,int,successful,shards,return,successful,shards
SnapshotInfo -> public int successfulShards();1545215361;Returns total number of shards that were successfully snapshotted_ a value of_{@code 0} will be returned if {@link #state()} returns {@code null}.__@return number of successful shards;public int successfulShards() {_        return successfulShards__    };returns,total,number,of,shards,that,were,successfully,snapshotted,a,value,of,code,0,will,be,returned,if,link,state,returns,code,null,return,number,of,successful,shards;public,int,successful,shards,return,successful,shards
SnapshotInfo -> public int successfulShards();1548236405;Returns total number of shards that were successfully snapshotted_ a value of_{@code 0} will be returned if {@link #state()} returns {@code null}.__@return number of successful shards;public int successfulShards() {_        return successfulShards__    };returns,total,number,of,shards,that,were,successfully,snapshotted,a,value,of,code,0,will,be,returned,if,link,state,returns,code,null,return,number,of,successful,shards;public,int,successful,shards,return,successful,shards
SnapshotInfo -> public SnapshotInfo(final StreamInput in) throws IOException;1524684173;Constructs snapshot information from stream input;public SnapshotInfo(final StreamInput in) throws IOException {_        snapshotId = new SnapshotId(in)__        int size = in.readVInt()__        List<String> indicesListBuilder = new ArrayList<>()__        for (int i = 0_ i < size_ i++) {_            indicesListBuilder.add(in.readString())__        }_        indices = Collections.unmodifiableList(indicesListBuilder)__        if (in.getVersion().onOrAfter(VERBOSE_INTRODUCED)) {_            state = in.readBoolean() ? SnapshotState.fromValue(in.readByte()) : null__        } else {_            state = SnapshotState.fromValue(in.readByte())__        }_        reason = in.readOptionalString()__        startTime = in.readVLong()__        endTime = in.readVLong()__        totalShards = in.readVInt()__        successfulShards = in.readVInt()__        size = in.readVInt()__        if (size > 0) {_            List<SnapshotShardFailure> failureBuilder = new ArrayList<>()__            for (int i = 0_ i < size_ i++) {_                failureBuilder.add(SnapshotShardFailure.readSnapshotShardFailure(in))__            }_            shardFailures = Collections.unmodifiableList(failureBuilder)__        } else {_            shardFailures = Collections.emptyList()__        }_        if (in.getVersion().before(VERSION_INCOMPATIBLE_INTRODUCED)) {_            version = Version.readVersion(in)__        } else {_            version = in.readBoolean() ? Version.readVersion(in) : null__        }_        if (in.getVersion().onOrAfter(INCLUDE_GLOBAL_STATE_INTRODUCED)) {_            includeGlobalState = in.readOptionalBoolean()__        }_    };constructs,snapshot,information,from,stream,input;public,snapshot,info,final,stream,input,in,throws,ioexception,snapshot,id,new,snapshot,id,in,int,size,in,read,vint,list,string,indices,list,builder,new,array,list,for,int,i,0,i,size,i,indices,list,builder,add,in,read,string,indices,collections,unmodifiable,list,indices,list,builder,if,in,get,version,on,or,after,state,in,read,boolean,snapshot,state,from,value,in,read,byte,null,else,state,snapshot,state,from,value,in,read,byte,reason,in,read,optional,string,start,time,in,read,vlong,end,time,in,read,vlong,total,shards,in,read,vint,successful,shards,in,read,vint,size,in,read,vint,if,size,0,list,snapshot,shard,failure,failure,builder,new,array,list,for,int,i,0,i,size,i,failure,builder,add,snapshot,shard,failure,read,snapshot,shard,failure,in,shard,failures,collections,unmodifiable,list,failure,builder,else,shard,failures,collections,empty,list,if,in,get,version,before,version,version,read,version,in,else,version,in,read,boolean,version,read,version,in,null,if,in,get,version,on,or,after,include,global,state,in,read,optional,boolean
SnapshotInfo -> public SnapshotInfo(final StreamInput in) throws IOException;1531179852;Constructs snapshot information from stream input;public SnapshotInfo(final StreamInput in) throws IOException {_        snapshotId = new SnapshotId(in)__        int size = in.readVInt()__        List<String> indicesListBuilder = new ArrayList<>()__        for (int i = 0_ i < size_ i++) {_            indicesListBuilder.add(in.readString())__        }_        indices = Collections.unmodifiableList(indicesListBuilder)__        if (in.getVersion().onOrAfter(VERBOSE_INTRODUCED)) {_            state = in.readBoolean() ? SnapshotState.fromValue(in.readByte()) : null__        } else {_            state = SnapshotState.fromValue(in.readByte())__        }_        reason = in.readOptionalString()__        startTime = in.readVLong()__        endTime = in.readVLong()__        totalShards = in.readVInt()__        successfulShards = in.readVInt()__        size = in.readVInt()__        if (size > 0) {_            List<SnapshotShardFailure> failureBuilder = new ArrayList<>()__            for (int i = 0_ i < size_ i++) {_                failureBuilder.add(SnapshotShardFailure.readSnapshotShardFailure(in))__            }_            shardFailures = Collections.unmodifiableList(failureBuilder)__        } else {_            shardFailures = Collections.emptyList()__        }_        if (in.getVersion().before(VERSION_INCOMPATIBLE_INTRODUCED)) {_            version = Version.readVersion(in)__        } else {_            version = in.readBoolean() ? Version.readVersion(in) : null__        }_        if (in.getVersion().onOrAfter(INCLUDE_GLOBAL_STATE_INTRODUCED)) {_            includeGlobalState = in.readOptionalBoolean()__        }_    };constructs,snapshot,information,from,stream,input;public,snapshot,info,final,stream,input,in,throws,ioexception,snapshot,id,new,snapshot,id,in,int,size,in,read,vint,list,string,indices,list,builder,new,array,list,for,int,i,0,i,size,i,indices,list,builder,add,in,read,string,indices,collections,unmodifiable,list,indices,list,builder,if,in,get,version,on,or,after,state,in,read,boolean,snapshot,state,from,value,in,read,byte,null,else,state,snapshot,state,from,value,in,read,byte,reason,in,read,optional,string,start,time,in,read,vlong,end,time,in,read,vlong,total,shards,in,read,vint,successful,shards,in,read,vint,size,in,read,vint,if,size,0,list,snapshot,shard,failure,failure,builder,new,array,list,for,int,i,0,i,size,i,failure,builder,add,snapshot,shard,failure,read,snapshot,shard,failure,in,shard,failures,collections,unmodifiable,list,failure,builder,else,shard,failures,collections,empty,list,if,in,get,version,before,version,version,read,version,in,else,version,in,read,boolean,version,read,version,in,null,if,in,get,version,on,or,after,include,global,state,in,read,optional,boolean
SnapshotInfo -> public SnapshotInfo(final StreamInput in) throws IOException;1531234550;Constructs snapshot information from stream input;public SnapshotInfo(final StreamInput in) throws IOException {_        snapshotId = new SnapshotId(in)__        int size = in.readVInt()__        List<String> indicesListBuilder = new ArrayList<>()__        for (int i = 0_ i < size_ i++) {_            indicesListBuilder.add(in.readString())__        }_        indices = Collections.unmodifiableList(indicesListBuilder)__        if (in.getVersion().onOrAfter(VERBOSE_INTRODUCED)) {_            state = in.readBoolean() ? SnapshotState.fromValue(in.readByte()) : null__        } else {_            state = SnapshotState.fromValue(in.readByte())__        }_        reason = in.readOptionalString()__        startTime = in.readVLong()__        endTime = in.readVLong()__        totalShards = in.readVInt()__        successfulShards = in.readVInt()__        size = in.readVInt()__        if (size > 0) {_            List<SnapshotShardFailure> failureBuilder = new ArrayList<>()__            for (int i = 0_ i < size_ i++) {_                failureBuilder.add(SnapshotShardFailure.readSnapshotShardFailure(in))__            }_            shardFailures = Collections.unmodifiableList(failureBuilder)__        } else {_            shardFailures = Collections.emptyList()__        }_        if (in.getVersion().before(VERSION_INCOMPATIBLE_INTRODUCED)) {_            version = Version.readVersion(in)__        } else {_            version = in.readBoolean() ? Version.readVersion(in) : null__        }_        if (in.getVersion().onOrAfter(INCLUDE_GLOBAL_STATE_INTRODUCED)) {_            includeGlobalState = in.readOptionalBoolean()__        }_    };constructs,snapshot,information,from,stream,input;public,snapshot,info,final,stream,input,in,throws,ioexception,snapshot,id,new,snapshot,id,in,int,size,in,read,vint,list,string,indices,list,builder,new,array,list,for,int,i,0,i,size,i,indices,list,builder,add,in,read,string,indices,collections,unmodifiable,list,indices,list,builder,if,in,get,version,on,or,after,state,in,read,boolean,snapshot,state,from,value,in,read,byte,null,else,state,snapshot,state,from,value,in,read,byte,reason,in,read,optional,string,start,time,in,read,vlong,end,time,in,read,vlong,total,shards,in,read,vint,successful,shards,in,read,vint,size,in,read,vint,if,size,0,list,snapshot,shard,failure,failure,builder,new,array,list,for,int,i,0,i,size,i,failure,builder,add,snapshot,shard,failure,read,snapshot,shard,failure,in,shard,failures,collections,unmodifiable,list,failure,builder,else,shard,failures,collections,empty,list,if,in,get,version,before,version,version,read,version,in,else,version,in,read,boolean,version,read,version,in,null,if,in,get,version,on,or,after,include,global,state,in,read,optional,boolean
SnapshotInfo -> public SnapshotInfo(final StreamInput in) throws IOException;1531729807;Constructs snapshot information from stream input;public SnapshotInfo(final StreamInput in) throws IOException {_        snapshotId = new SnapshotId(in)__        int size = in.readVInt()__        List<String> indicesListBuilder = new ArrayList<>()__        for (int i = 0_ i < size_ i++) {_            indicesListBuilder.add(in.readString())__        }_        indices = Collections.unmodifiableList(indicesListBuilder)__        if (in.getVersion().onOrAfter(VERBOSE_INTRODUCED)) {_            state = in.readBoolean() ? SnapshotState.fromValue(in.readByte()) : null__        } else {_            state = SnapshotState.fromValue(in.readByte())__        }_        reason = in.readOptionalString()__        startTime = in.readVLong()__        endTime = in.readVLong()__        totalShards = in.readVInt()__        successfulShards = in.readVInt()__        size = in.readVInt()__        if (size > 0) {_            List<SnapshotShardFailure> failureBuilder = new ArrayList<>()__            for (int i = 0_ i < size_ i++) {_                failureBuilder.add(SnapshotShardFailure.readSnapshotShardFailure(in))__            }_            shardFailures = Collections.unmodifiableList(failureBuilder)__        } else {_            shardFailures = Collections.emptyList()__        }_        if (in.getVersion().before(VERSION_INCOMPATIBLE_INTRODUCED)) {_            version = Version.readVersion(in)__        } else {_            version = in.readBoolean() ? Version.readVersion(in) : null__        }_        if (in.getVersion().onOrAfter(INCLUDE_GLOBAL_STATE_INTRODUCED)) {_            includeGlobalState = in.readOptionalBoolean()__        }_    };constructs,snapshot,information,from,stream,input;public,snapshot,info,final,stream,input,in,throws,ioexception,snapshot,id,new,snapshot,id,in,int,size,in,read,vint,list,string,indices,list,builder,new,array,list,for,int,i,0,i,size,i,indices,list,builder,add,in,read,string,indices,collections,unmodifiable,list,indices,list,builder,if,in,get,version,on,or,after,state,in,read,boolean,snapshot,state,from,value,in,read,byte,null,else,state,snapshot,state,from,value,in,read,byte,reason,in,read,optional,string,start,time,in,read,vlong,end,time,in,read,vlong,total,shards,in,read,vint,successful,shards,in,read,vint,size,in,read,vint,if,size,0,list,snapshot,shard,failure,failure,builder,new,array,list,for,int,i,0,i,size,i,failure,builder,add,snapshot,shard,failure,read,snapshot,shard,failure,in,shard,failures,collections,unmodifiable,list,failure,builder,else,shard,failures,collections,empty,list,if,in,get,version,before,version,version,read,version,in,else,version,in,read,boolean,version,read,version,in,null,if,in,get,version,on,or,after,include,global,state,in,read,optional,boolean
SnapshotInfo -> public SnapshotInfo(final StreamInput in) throws IOException;1535139672;Constructs snapshot information from stream input;public SnapshotInfo(final StreamInput in) throws IOException {_        snapshotId = new SnapshotId(in)__        int size = in.readVInt()__        List<String> indicesListBuilder = new ArrayList<>()__        for (int i = 0_ i < size_ i++) {_            indicesListBuilder.add(in.readString())__        }_        indices = Collections.unmodifiableList(indicesListBuilder)__        state = in.readBoolean() ? SnapshotState.fromValue(in.readByte()) : null__        reason = in.readOptionalString()__        startTime = in.readVLong()__        endTime = in.readVLong()__        totalShards = in.readVInt()__        successfulShards = in.readVInt()__        size = in.readVInt()__        if (size > 0) {_            List<SnapshotShardFailure> failureBuilder = new ArrayList<>()__            for (int i = 0_ i < size_ i++) {_                failureBuilder.add(SnapshotShardFailure.readSnapshotShardFailure(in))__            }_            shardFailures = Collections.unmodifiableList(failureBuilder)__        } else {_            shardFailures = Collections.emptyList()__        }_        version = in.readBoolean() ? Version.readVersion(in) : null__        if (in.getVersion().onOrAfter(INCLUDE_GLOBAL_STATE_INTRODUCED)) {_            includeGlobalState = in.readOptionalBoolean()__        }_    };constructs,snapshot,information,from,stream,input;public,snapshot,info,final,stream,input,in,throws,ioexception,snapshot,id,new,snapshot,id,in,int,size,in,read,vint,list,string,indices,list,builder,new,array,list,for,int,i,0,i,size,i,indices,list,builder,add,in,read,string,indices,collections,unmodifiable,list,indices,list,builder,state,in,read,boolean,snapshot,state,from,value,in,read,byte,null,reason,in,read,optional,string,start,time,in,read,vlong,end,time,in,read,vlong,total,shards,in,read,vint,successful,shards,in,read,vint,size,in,read,vint,if,size,0,list,snapshot,shard,failure,failure,builder,new,array,list,for,int,i,0,i,size,i,failure,builder,add,snapshot,shard,failure,read,snapshot,shard,failure,in,shard,failures,collections,unmodifiable,list,failure,builder,else,shard,failures,collections,empty,list,version,in,read,boolean,version,read,version,in,null,if,in,get,version,on,or,after,include,global,state,in,read,optional,boolean
SnapshotInfo -> public SnapshotInfo(final StreamInput in) throws IOException;1536964057;Constructs snapshot information from stream input;public SnapshotInfo(final StreamInput in) throws IOException {_        snapshotId = new SnapshotId(in)__        int size = in.readVInt()__        List<String> indicesListBuilder = new ArrayList<>()__        for (int i = 0_ i < size_ i++) {_            indicesListBuilder.add(in.readString())__        }_        indices = Collections.unmodifiableList(indicesListBuilder)__        state = in.readBoolean() ? SnapshotState.fromValue(in.readByte()) : null__        reason = in.readOptionalString()__        startTime = in.readVLong()__        endTime = in.readVLong()__        totalShards = in.readVInt()__        successfulShards = in.readVInt()__        size = in.readVInt()__        if (size > 0) {_            List<SnapshotShardFailure> failureBuilder = new ArrayList<>()__            for (int i = 0_ i < size_ i++) {_                failureBuilder.add(SnapshotShardFailure.readSnapshotShardFailure(in))__            }_            shardFailures = Collections.unmodifiableList(failureBuilder)__        } else {_            shardFailures = Collections.emptyList()__        }_        version = in.readBoolean() ? Version.readVersion(in) : null__        if (in.getVersion().onOrAfter(INCLUDE_GLOBAL_STATE_INTRODUCED)) {_            includeGlobalState = in.readOptionalBoolean()__        }_    };constructs,snapshot,information,from,stream,input;public,snapshot,info,final,stream,input,in,throws,ioexception,snapshot,id,new,snapshot,id,in,int,size,in,read,vint,list,string,indices,list,builder,new,array,list,for,int,i,0,i,size,i,indices,list,builder,add,in,read,string,indices,collections,unmodifiable,list,indices,list,builder,state,in,read,boolean,snapshot,state,from,value,in,read,byte,null,reason,in,read,optional,string,start,time,in,read,vlong,end,time,in,read,vlong,total,shards,in,read,vint,successful,shards,in,read,vint,size,in,read,vint,if,size,0,list,snapshot,shard,failure,failure,builder,new,array,list,for,int,i,0,i,size,i,failure,builder,add,snapshot,shard,failure,read,snapshot,shard,failure,in,shard,failures,collections,unmodifiable,list,failure,builder,else,shard,failures,collections,empty,list,version,in,read,boolean,version,read,version,in,null,if,in,get,version,on,or,after,include,global,state,in,read,optional,boolean
SnapshotInfo -> public SnapshotInfo(final StreamInput in) throws IOException;1544221624;Constructs snapshot information from stream input;public SnapshotInfo(final StreamInput in) throws IOException {_        snapshotId = new SnapshotId(in)__        int size = in.readVInt()__        List<String> indicesListBuilder = new ArrayList<>()__        for (int i = 0_ i < size_ i++) {_            indicesListBuilder.add(in.readString())__        }_        indices = Collections.unmodifiableList(indicesListBuilder)__        state = in.readBoolean() ? SnapshotState.fromValue(in.readByte()) : null__        reason = in.readOptionalString()__        startTime = in.readVLong()__        endTime = in.readVLong()__        totalShards = in.readVInt()__        successfulShards = in.readVInt()__        size = in.readVInt()__        if (size > 0) {_            List<SnapshotShardFailure> failureBuilder = new ArrayList<>()__            for (int i = 0_ i < size_ i++) {_                failureBuilder.add(SnapshotShardFailure.readSnapshotShardFailure(in))__            }_            shardFailures = Collections.unmodifiableList(failureBuilder)__        } else {_            shardFailures = Collections.emptyList()__        }_        version = in.readBoolean() ? Version.readVersion(in) : null__        if (in.getVersion().onOrAfter(INCLUDE_GLOBAL_STATE_INTRODUCED)) {_            includeGlobalState = in.readOptionalBoolean()__        }_    };constructs,snapshot,information,from,stream,input;public,snapshot,info,final,stream,input,in,throws,ioexception,snapshot,id,new,snapshot,id,in,int,size,in,read,vint,list,string,indices,list,builder,new,array,list,for,int,i,0,i,size,i,indices,list,builder,add,in,read,string,indices,collections,unmodifiable,list,indices,list,builder,state,in,read,boolean,snapshot,state,from,value,in,read,byte,null,reason,in,read,optional,string,start,time,in,read,vlong,end,time,in,read,vlong,total,shards,in,read,vint,successful,shards,in,read,vint,size,in,read,vint,if,size,0,list,snapshot,shard,failure,failure,builder,new,array,list,for,int,i,0,i,size,i,failure,builder,add,snapshot,shard,failure,read,snapshot,shard,failure,in,shard,failures,collections,unmodifiable,list,failure,builder,else,shard,failures,collections,empty,list,version,in,read,boolean,version,read,version,in,null,if,in,get,version,on,or,after,include,global,state,in,read,optional,boolean
SnapshotInfo -> public SnapshotInfo(final StreamInput in) throws IOException;1544629714;Constructs snapshot information from stream input;public SnapshotInfo(final StreamInput in) throws IOException {_        snapshotId = new SnapshotId(in)__        int size = in.readVInt()__        List<String> indicesListBuilder = new ArrayList<>()__        for (int i = 0_ i < size_ i++) {_            indicesListBuilder.add(in.readString())__        }_        indices = Collections.unmodifiableList(indicesListBuilder)__        state = in.readBoolean() ? SnapshotState.fromValue(in.readByte()) : null__        reason = in.readOptionalString()__        startTime = in.readVLong()__        endTime = in.readVLong()__        totalShards = in.readVInt()__        successfulShards = in.readVInt()__        size = in.readVInt()__        if (size > 0) {_            List<SnapshotShardFailure> failureBuilder = new ArrayList<>()__            for (int i = 0_ i < size_ i++) {_                failureBuilder.add(SnapshotShardFailure.readSnapshotShardFailure(in))__            }_            shardFailures = Collections.unmodifiableList(failureBuilder)__        } else {_            shardFailures = Collections.emptyList()__        }_        version = in.readBoolean() ? Version.readVersion(in) : null__        if (in.getVersion().onOrAfter(INCLUDE_GLOBAL_STATE_INTRODUCED)) {_            includeGlobalState = in.readOptionalBoolean()__        }_    };constructs,snapshot,information,from,stream,input;public,snapshot,info,final,stream,input,in,throws,ioexception,snapshot,id,new,snapshot,id,in,int,size,in,read,vint,list,string,indices,list,builder,new,array,list,for,int,i,0,i,size,i,indices,list,builder,add,in,read,string,indices,collections,unmodifiable,list,indices,list,builder,state,in,read,boolean,snapshot,state,from,value,in,read,byte,null,reason,in,read,optional,string,start,time,in,read,vlong,end,time,in,read,vlong,total,shards,in,read,vint,successful,shards,in,read,vint,size,in,read,vint,if,size,0,list,snapshot,shard,failure,failure,builder,new,array,list,for,int,i,0,i,size,i,failure,builder,add,snapshot,shard,failure,read,snapshot,shard,failure,in,shard,failures,collections,unmodifiable,list,failure,builder,else,shard,failures,collections,empty,list,version,in,read,boolean,version,read,version,in,null,if,in,get,version,on,or,after,include,global,state,in,read,optional,boolean
SnapshotInfo -> public SnapshotInfo(final StreamInput in) throws IOException;1545215361;Constructs snapshot information from stream input;public SnapshotInfo(final StreamInput in) throws IOException {_        snapshotId = new SnapshotId(in)__        int size = in.readVInt()__        List<String> indicesListBuilder = new ArrayList<>()__        for (int i = 0_ i < size_ i++) {_            indicesListBuilder.add(in.readString())__        }_        indices = Collections.unmodifiableList(indicesListBuilder)__        state = in.readBoolean() ? SnapshotState.fromValue(in.readByte()) : null__        reason = in.readOptionalString()__        startTime = in.readVLong()__        endTime = in.readVLong()__        totalShards = in.readVInt()__        successfulShards = in.readVInt()__        size = in.readVInt()__        if (size > 0) {_            List<SnapshotShardFailure> failureBuilder = new ArrayList<>()__            for (int i = 0_ i < size_ i++) {_                failureBuilder.add(SnapshotShardFailure.readSnapshotShardFailure(in))__            }_            shardFailures = Collections.unmodifiableList(failureBuilder)__        } else {_            shardFailures = Collections.emptyList()__        }_        version = in.readBoolean() ? Version.readVersion(in) : null__        if (in.getVersion().onOrAfter(INCLUDE_GLOBAL_STATE_INTRODUCED)) {_            includeGlobalState = in.readOptionalBoolean()__        }_    };constructs,snapshot,information,from,stream,input;public,snapshot,info,final,stream,input,in,throws,ioexception,snapshot,id,new,snapshot,id,in,int,size,in,read,vint,list,string,indices,list,builder,new,array,list,for,int,i,0,i,size,i,indices,list,builder,add,in,read,string,indices,collections,unmodifiable,list,indices,list,builder,state,in,read,boolean,snapshot,state,from,value,in,read,byte,null,reason,in,read,optional,string,start,time,in,read,vlong,end,time,in,read,vlong,total,shards,in,read,vint,successful,shards,in,read,vint,size,in,read,vint,if,size,0,list,snapshot,shard,failure,failure,builder,new,array,list,for,int,i,0,i,size,i,failure,builder,add,snapshot,shard,failure,read,snapshot,shard,failure,in,shard,failures,collections,unmodifiable,list,failure,builder,else,shard,failures,collections,empty,list,version,in,read,boolean,version,read,version,in,null,if,in,get,version,on,or,after,include,global,state,in,read,optional,boolean
SnapshotInfo -> public SnapshotInfo(final StreamInput in) throws IOException;1548236405;Constructs snapshot information from stream input;public SnapshotInfo(final StreamInput in) throws IOException {_        snapshotId = new SnapshotId(in)__        int size = in.readVInt()__        List<String> indicesListBuilder = new ArrayList<>()__        for (int i = 0_ i < size_ i++) {_            indicesListBuilder.add(in.readString())__        }_        indices = Collections.unmodifiableList(indicesListBuilder)__        state = in.readBoolean() ? SnapshotState.fromValue(in.readByte()) : null__        reason = in.readOptionalString()__        startTime = in.readVLong()__        endTime = in.readVLong()__        totalShards = in.readVInt()__        successfulShards = in.readVInt()__        size = in.readVInt()__        if (size > 0) {_            List<SnapshotShardFailure> failureBuilder = new ArrayList<>()__            for (int i = 0_ i < size_ i++) {_                failureBuilder.add(SnapshotShardFailure.readSnapshotShardFailure(in))__            }_            shardFailures = Collections.unmodifiableList(failureBuilder)__        } else {_            shardFailures = Collections.emptyList()__        }_        version = in.readBoolean() ? Version.readVersion(in) : null__        if (in.getVersion().onOrAfter(INCLUDE_GLOBAL_STATE_INTRODUCED)) {_            includeGlobalState = in.readOptionalBoolean()__        }_    };constructs,snapshot,information,from,stream,input;public,snapshot,info,final,stream,input,in,throws,ioexception,snapshot,id,new,snapshot,id,in,int,size,in,read,vint,list,string,indices,list,builder,new,array,list,for,int,i,0,i,size,i,indices,list,builder,add,in,read,string,indices,collections,unmodifiable,list,indices,list,builder,state,in,read,boolean,snapshot,state,from,value,in,read,byte,null,reason,in,read,optional,string,start,time,in,read,vlong,end,time,in,read,vlong,total,shards,in,read,vint,successful,shards,in,read,vint,size,in,read,vint,if,size,0,list,snapshot,shard,failure,failure,builder,new,array,list,for,int,i,0,i,size,i,failure,builder,add,snapshot,shard,failure,read,snapshot,shard,failure,in,shard,failures,collections,unmodifiable,list,failure,builder,else,shard,failures,collections,empty,list,version,in,read,boolean,version,read,version,in,null,if,in,get,version,on,or,after,include,global,state,in,read,optional,boolean
SnapshotInfo -> public int failedShards();1524684173;Number of failed shards_ a value of {@code 0} will be returned if there were no_failed shards, or if {@link #state()} returns {@code null}.__@return number of failed shards;public int failedShards() {_        return totalShards - successfulShards__    };number,of,failed,shards,a,value,of,code,0,will,be,returned,if,there,were,no,failed,shards,or,if,link,state,returns,code,null,return,number,of,failed,shards;public,int,failed,shards,return,total,shards,successful,shards
SnapshotInfo -> public int failedShards();1531179852;Number of failed shards_ a value of {@code 0} will be returned if there were no_failed shards, or if {@link #state()} returns {@code null}.__@return number of failed shards;public int failedShards() {_        return totalShards - successfulShards__    };number,of,failed,shards,a,value,of,code,0,will,be,returned,if,there,were,no,failed,shards,or,if,link,state,returns,code,null,return,number,of,failed,shards;public,int,failed,shards,return,total,shards,successful,shards
SnapshotInfo -> public int failedShards();1531234550;Number of failed shards_ a value of {@code 0} will be returned if there were no_failed shards, or if {@link #state()} returns {@code null}.__@return number of failed shards;public int failedShards() {_        return totalShards - successfulShards__    };number,of,failed,shards,a,value,of,code,0,will,be,returned,if,there,were,no,failed,shards,or,if,link,state,returns,code,null,return,number,of,failed,shards;public,int,failed,shards,return,total,shards,successful,shards
SnapshotInfo -> public int failedShards();1531729807;Number of failed shards_ a value of {@code 0} will be returned if there were no_failed shards, or if {@link #state()} returns {@code null}.__@return number of failed shards;public int failedShards() {_        return totalShards - successfulShards__    };number,of,failed,shards,a,value,of,code,0,will,be,returned,if,there,were,no,failed,shards,or,if,link,state,returns,code,null,return,number,of,failed,shards;public,int,failed,shards,return,total,shards,successful,shards
SnapshotInfo -> public int failedShards();1535139672;Number of failed shards_ a value of {@code 0} will be returned if there were no_failed shards, or if {@link #state()} returns {@code null}.__@return number of failed shards;public int failedShards() {_        return totalShards - successfulShards__    };number,of,failed,shards,a,value,of,code,0,will,be,returned,if,there,were,no,failed,shards,or,if,link,state,returns,code,null,return,number,of,failed,shards;public,int,failed,shards,return,total,shards,successful,shards
SnapshotInfo -> public int failedShards();1536964057;Number of failed shards_ a value of {@code 0} will be returned if there were no_failed shards, or if {@link #state()} returns {@code null}.__@return number of failed shards;public int failedShards() {_        return totalShards - successfulShards__    };number,of,failed,shards,a,value,of,code,0,will,be,returned,if,there,were,no,failed,shards,or,if,link,state,returns,code,null,return,number,of,failed,shards;public,int,failed,shards,return,total,shards,successful,shards
SnapshotInfo -> public int failedShards();1544221624;Number of failed shards_ a value of {@code 0} will be returned if there were no_failed shards, or if {@link #state()} returns {@code null}.__@return number of failed shards;public int failedShards() {_        return totalShards - successfulShards__    };number,of,failed,shards,a,value,of,code,0,will,be,returned,if,there,were,no,failed,shards,or,if,link,state,returns,code,null,return,number,of,failed,shards;public,int,failed,shards,return,total,shards,successful,shards
SnapshotInfo -> public int failedShards();1544629714;Number of failed shards_ a value of {@code 0} will be returned if there were no_failed shards, or if {@link #state()} returns {@code null}.__@return number of failed shards;public int failedShards() {_        return totalShards - successfulShards__    };number,of,failed,shards,a,value,of,code,0,will,be,returned,if,there,were,no,failed,shards,or,if,link,state,returns,code,null,return,number,of,failed,shards;public,int,failed,shards,return,total,shards,successful,shards
SnapshotInfo -> public int failedShards();1545215361;Number of failed shards_ a value of {@code 0} will be returned if there were no_failed shards, or if {@link #state()} returns {@code null}.__@return number of failed shards;public int failedShards() {_        return totalShards - successfulShards__    };number,of,failed,shards,a,value,of,code,0,will,be,returned,if,there,were,no,failed,shards,or,if,link,state,returns,code,null,return,number,of,failed,shards;public,int,failed,shards,return,total,shards,successful,shards
SnapshotInfo -> public int failedShards();1548236405;Number of failed shards_ a value of {@code 0} will be returned if there were no_failed shards, or if {@link #state()} returns {@code null}.__@return number of failed shards;public int failedShards() {_        return totalShards - successfulShards__    };number,of,failed,shards,a,value,of,code,0,will,be,returned,if,there,were,no,failed,shards,or,if,link,state,returns,code,null,return,number,of,failed,shards;public,int,failed,shards,return,total,shards,successful,shards
SnapshotInfo -> @Nullable     public Version version();1524684173;Returns the version of elasticsearch that the snapshot was created with.  Will only_return {@code null} if {@link #state()} returns {@code null} or {@link SnapshotState#INCOMPATIBLE}.__@return version of elasticsearch that the snapshot was created with;@Nullable_    public Version version() {_        return version__    };returns,the,version,of,elasticsearch,that,the,snapshot,was,created,with,will,only,return,code,null,if,link,state,returns,code,null,or,link,snapshot,state,incompatible,return,version,of,elasticsearch,that,the,snapshot,was,created,with;nullable,public,version,version,return,version
SnapshotInfo -> @Nullable     public Version version();1531179852;Returns the version of elasticsearch that the snapshot was created with.  Will only_return {@code null} if {@link #state()} returns {@code null} or {@link SnapshotState#INCOMPATIBLE}.__@return version of elasticsearch that the snapshot was created with;@Nullable_    public Version version() {_        return version__    };returns,the,version,of,elasticsearch,that,the,snapshot,was,created,with,will,only,return,code,null,if,link,state,returns,code,null,or,link,snapshot,state,incompatible,return,version,of,elasticsearch,that,the,snapshot,was,created,with;nullable,public,version,version,return,version
SnapshotInfo -> @Nullable     public Version version();1531234550;Returns the version of elasticsearch that the snapshot was created with.  Will only_return {@code null} if {@link #state()} returns {@code null} or {@link SnapshotState#INCOMPATIBLE}.__@return version of elasticsearch that the snapshot was created with;@Nullable_    public Version version() {_        return version__    };returns,the,version,of,elasticsearch,that,the,snapshot,was,created,with,will,only,return,code,null,if,link,state,returns,code,null,or,link,snapshot,state,incompatible,return,version,of,elasticsearch,that,the,snapshot,was,created,with;nullable,public,version,version,return,version
SnapshotInfo -> @Nullable     public Version version();1531729807;Returns the version of elasticsearch that the snapshot was created with.  Will only_return {@code null} if {@link #state()} returns {@code null} or {@link SnapshotState#INCOMPATIBLE}.__@return version of elasticsearch that the snapshot was created with;@Nullable_    public Version version() {_        return version__    };returns,the,version,of,elasticsearch,that,the,snapshot,was,created,with,will,only,return,code,null,if,link,state,returns,code,null,or,link,snapshot,state,incompatible,return,version,of,elasticsearch,that,the,snapshot,was,created,with;nullable,public,version,version,return,version
SnapshotInfo -> @Nullable     public Version version();1535139672;Returns the version of elasticsearch that the snapshot was created with.  Will only_return {@code null} if {@link #state()} returns {@code null} or {@link SnapshotState#INCOMPATIBLE}.__@return version of elasticsearch that the snapshot was created with;@Nullable_    public Version version() {_        return version__    };returns,the,version,of,elasticsearch,that,the,snapshot,was,created,with,will,only,return,code,null,if,link,state,returns,code,null,or,link,snapshot,state,incompatible,return,version,of,elasticsearch,that,the,snapshot,was,created,with;nullable,public,version,version,return,version
SnapshotInfo -> @Nullable     public Version version();1536964057;Returns the version of elasticsearch that the snapshot was created with.  Will only_return {@code null} if {@link #state()} returns {@code null} or {@link SnapshotState#INCOMPATIBLE}.__@return version of elasticsearch that the snapshot was created with;@Nullable_    public Version version() {_        return version__    };returns,the,version,of,elasticsearch,that,the,snapshot,was,created,with,will,only,return,code,null,if,link,state,returns,code,null,or,link,snapshot,state,incompatible,return,version,of,elasticsearch,that,the,snapshot,was,created,with;nullable,public,version,version,return,version
SnapshotInfo -> @Nullable     public Version version();1544221624;Returns the version of elasticsearch that the snapshot was created with.  Will only_return {@code null} if {@link #state()} returns {@code null} or {@link SnapshotState#INCOMPATIBLE}.__@return version of elasticsearch that the snapshot was created with;@Nullable_    public Version version() {_        return version__    };returns,the,version,of,elasticsearch,that,the,snapshot,was,created,with,will,only,return,code,null,if,link,state,returns,code,null,or,link,snapshot,state,incompatible,return,version,of,elasticsearch,that,the,snapshot,was,created,with;nullable,public,version,version,return,version
SnapshotInfo -> @Nullable     public Version version();1544629714;Returns the version of elasticsearch that the snapshot was created with.  Will only_return {@code null} if {@link #state()} returns {@code null} or {@link SnapshotState#INCOMPATIBLE}.__@return version of elasticsearch that the snapshot was created with;@Nullable_    public Version version() {_        return version__    };returns,the,version,of,elasticsearch,that,the,snapshot,was,created,with,will,only,return,code,null,if,link,state,returns,code,null,or,link,snapshot,state,incompatible,return,version,of,elasticsearch,that,the,snapshot,was,created,with;nullable,public,version,version,return,version
SnapshotInfo -> @Nullable     public Version version();1545215361;Returns the version of elasticsearch that the snapshot was created with.  Will only_return {@code null} if {@link #state()} returns {@code null} or {@link SnapshotState#INCOMPATIBLE}.__@return version of elasticsearch that the snapshot was created with;@Nullable_    public Version version() {_        return version__    };returns,the,version,of,elasticsearch,that,the,snapshot,was,created,with,will,only,return,code,null,if,link,state,returns,code,null,or,link,snapshot,state,incompatible,return,version,of,elasticsearch,that,the,snapshot,was,created,with;nullable,public,version,version,return,version
SnapshotInfo -> @Nullable     public Version version();1548236405;Returns the version of elasticsearch that the snapshot was created with.  Will only_return {@code null} if {@link #state()} returns {@code null} or {@link SnapshotState#INCOMPATIBLE}.__@return version of elasticsearch that the snapshot was created with;@Nullable_    public Version version() {_        return version__    };returns,the,version,of,elasticsearch,that,the,snapshot,was,created,with,will,only,return,code,null,if,link,state,returns,code,null,or,link,snapshot,state,incompatible,return,version,of,elasticsearch,that,the,snapshot,was,created,with;nullable,public,version,version,return,version
SnapshotInfo -> @Nullable     public SnapshotState state();1524684173;Returns snapshot state_ {@code null} if the state is unknown.__@return snapshot state;@Nullable_    public SnapshotState state() {_        return state__    };returns,snapshot,state,code,null,if,the,state,is,unknown,return,snapshot,state;nullable,public,snapshot,state,state,return,state
SnapshotInfo -> @Nullable     public SnapshotState state();1531179852;Returns snapshot state_ {@code null} if the state is unknown.__@return snapshot state;@Nullable_    public SnapshotState state() {_        return state__    };returns,snapshot,state,code,null,if,the,state,is,unknown,return,snapshot,state;nullable,public,snapshot,state,state,return,state
SnapshotInfo -> @Nullable     public SnapshotState state();1531234550;Returns snapshot state_ {@code null} if the state is unknown.__@return snapshot state;@Nullable_    public SnapshotState state() {_        return state__    };returns,snapshot,state,code,null,if,the,state,is,unknown,return,snapshot,state;nullable,public,snapshot,state,state,return,state
SnapshotInfo -> @Nullable     public SnapshotState state();1531729807;Returns snapshot state_ {@code null} if the state is unknown.__@return snapshot state;@Nullable_    public SnapshotState state() {_        return state__    };returns,snapshot,state,code,null,if,the,state,is,unknown,return,snapshot,state;nullable,public,snapshot,state,state,return,state
SnapshotInfo -> @Nullable     public SnapshotState state();1535139672;Returns snapshot state_ {@code null} if the state is unknown.__@return snapshot state;@Nullable_    public SnapshotState state() {_        return state__    };returns,snapshot,state,code,null,if,the,state,is,unknown,return,snapshot,state;nullable,public,snapshot,state,state,return,state
SnapshotInfo -> @Nullable     public SnapshotState state();1536964057;Returns snapshot state_ {@code null} if the state is unknown.__@return snapshot state;@Nullable_    public SnapshotState state() {_        return state__    };returns,snapshot,state,code,null,if,the,state,is,unknown,return,snapshot,state;nullable,public,snapshot,state,state,return,state
SnapshotInfo -> @Nullable     public SnapshotState state();1544221624;Returns snapshot state_ {@code null} if the state is unknown.__@return snapshot state;@Nullable_    public SnapshotState state() {_        return state__    };returns,snapshot,state,code,null,if,the,state,is,unknown,return,snapshot,state;nullable,public,snapshot,state,state,return,state
SnapshotInfo -> @Nullable     public SnapshotState state();1544629714;Returns snapshot state_ {@code null} if the state is unknown.__@return snapshot state;@Nullable_    public SnapshotState state() {_        return state__    };returns,snapshot,state,code,null,if,the,state,is,unknown,return,snapshot,state;nullable,public,snapshot,state,state,return,state
SnapshotInfo -> @Nullable     public SnapshotState state();1545215361;Returns snapshot state_ {@code null} if the state is unknown.__@return snapshot state;@Nullable_    public SnapshotState state() {_        return state__    };returns,snapshot,state,code,null,if,the,state,is,unknown,return,snapshot,state;nullable,public,snapshot,state,state,return,state
SnapshotInfo -> @Nullable     public SnapshotState state();1548236405;Returns snapshot state_ {@code null} if the state is unknown.__@return snapshot state;@Nullable_    public SnapshotState state() {_        return state__    };returns,snapshot,state,code,null,if,the,state,is,unknown,return,snapshot,state;nullable,public,snapshot,state,state,return,state
SnapshotInfo -> public long startTime();1524684173;Returns time when snapshot started_ a value of {@code 0L} will be returned if_{@link #state()} returns {@code null}.__@return snapshot start time;public long startTime() {_        return startTime__    };returns,time,when,snapshot,started,a,value,of,code,0l,will,be,returned,if,link,state,returns,code,null,return,snapshot,start,time;public,long,start,time,return,start,time
SnapshotInfo -> public long startTime();1531179852;Returns time when snapshot started_ a value of {@code 0L} will be returned if_{@link #state()} returns {@code null}.__@return snapshot start time;public long startTime() {_        return startTime__    };returns,time,when,snapshot,started,a,value,of,code,0l,will,be,returned,if,link,state,returns,code,null,return,snapshot,start,time;public,long,start,time,return,start,time
SnapshotInfo -> public long startTime();1531234550;Returns time when snapshot started_ a value of {@code 0L} will be returned if_{@link #state()} returns {@code null}.__@return snapshot start time;public long startTime() {_        return startTime__    };returns,time,when,snapshot,started,a,value,of,code,0l,will,be,returned,if,link,state,returns,code,null,return,snapshot,start,time;public,long,start,time,return,start,time
SnapshotInfo -> public long startTime();1531729807;Returns time when snapshot started_ a value of {@code 0L} will be returned if_{@link #state()} returns {@code null}.__@return snapshot start time;public long startTime() {_        return startTime__    };returns,time,when,snapshot,started,a,value,of,code,0l,will,be,returned,if,link,state,returns,code,null,return,snapshot,start,time;public,long,start,time,return,start,time
SnapshotInfo -> public long startTime();1535139672;Returns time when snapshot started_ a value of {@code 0L} will be returned if_{@link #state()} returns {@code null}.__@return snapshot start time;public long startTime() {_        return startTime__    };returns,time,when,snapshot,started,a,value,of,code,0l,will,be,returned,if,link,state,returns,code,null,return,snapshot,start,time;public,long,start,time,return,start,time
SnapshotInfo -> public long startTime();1536964057;Returns time when snapshot started_ a value of {@code 0L} will be returned if_{@link #state()} returns {@code null}.__@return snapshot start time;public long startTime() {_        return startTime__    };returns,time,when,snapshot,started,a,value,of,code,0l,will,be,returned,if,link,state,returns,code,null,return,snapshot,start,time;public,long,start,time,return,start,time
SnapshotInfo -> public long startTime();1544221624;Returns time when snapshot started_ a value of {@code 0L} will be returned if_{@link #state()} returns {@code null}.__@return snapshot start time;public long startTime() {_        return startTime__    };returns,time,when,snapshot,started,a,value,of,code,0l,will,be,returned,if,link,state,returns,code,null,return,snapshot,start,time;public,long,start,time,return,start,time
SnapshotInfo -> public long startTime();1544629714;Returns time when snapshot started_ a value of {@code 0L} will be returned if_{@link #state()} returns {@code null}.__@return snapshot start time;public long startTime() {_        return startTime__    };returns,time,when,snapshot,started,a,value,of,code,0l,will,be,returned,if,link,state,returns,code,null,return,snapshot,start,time;public,long,start,time,return,start,time
SnapshotInfo -> public long startTime();1545215361;Returns time when snapshot started_ a value of {@code 0L} will be returned if_{@link #state()} returns {@code null}.__@return snapshot start time;public long startTime() {_        return startTime__    };returns,time,when,snapshot,started,a,value,of,code,0l,will,be,returned,if,link,state,returns,code,null,return,snapshot,start,time;public,long,start,time,return,start,time
SnapshotInfo -> public long startTime();1548236405;Returns time when snapshot started_ a value of {@code 0L} will be returned if_{@link #state()} returns {@code null}.__@return snapshot start time;public long startTime() {_        return startTime__    };returns,time,when,snapshot,started,a,value,of,code,0l,will,be,returned,if,link,state,returns,code,null,return,snapshot,start,time;public,long,start,time,return,start,time
SnapshotInfo -> public long endTime();1524684173;Returns time when snapshot ended_ a value of {@code 0L} will be returned if the_snapshot is still running or if {@link #state()} returns {@code null}.__@return snapshot end time;public long endTime() {_        return endTime__    };returns,time,when,snapshot,ended,a,value,of,code,0l,will,be,returned,if,the,snapshot,is,still,running,or,if,link,state,returns,code,null,return,snapshot,end,time;public,long,end,time,return,end,time
SnapshotInfo -> public long endTime();1531179852;Returns time when snapshot ended_ a value of {@code 0L} will be returned if the_snapshot is still running or if {@link #state()} returns {@code null}.__@return snapshot end time;public long endTime() {_        return endTime__    };returns,time,when,snapshot,ended,a,value,of,code,0l,will,be,returned,if,the,snapshot,is,still,running,or,if,link,state,returns,code,null,return,snapshot,end,time;public,long,end,time,return,end,time
SnapshotInfo -> public long endTime();1531234550;Returns time when snapshot ended_ a value of {@code 0L} will be returned if the_snapshot is still running or if {@link #state()} returns {@code null}.__@return snapshot end time;public long endTime() {_        return endTime__    };returns,time,when,snapshot,ended,a,value,of,code,0l,will,be,returned,if,the,snapshot,is,still,running,or,if,link,state,returns,code,null,return,snapshot,end,time;public,long,end,time,return,end,time
SnapshotInfo -> public long endTime();1531729807;Returns time when snapshot ended_ a value of {@code 0L} will be returned if the_snapshot is still running or if {@link #state()} returns {@code null}.__@return snapshot end time;public long endTime() {_        return endTime__    };returns,time,when,snapshot,ended,a,value,of,code,0l,will,be,returned,if,the,snapshot,is,still,running,or,if,link,state,returns,code,null,return,snapshot,end,time;public,long,end,time,return,end,time
SnapshotInfo -> public long endTime();1535139672;Returns time when snapshot ended_ a value of {@code 0L} will be returned if the_snapshot is still running or if {@link #state()} returns {@code null}.__@return snapshot end time;public long endTime() {_        return endTime__    };returns,time,when,snapshot,ended,a,value,of,code,0l,will,be,returned,if,the,snapshot,is,still,running,or,if,link,state,returns,code,null,return,snapshot,end,time;public,long,end,time,return,end,time
SnapshotInfo -> public long endTime();1536964057;Returns time when snapshot ended_ a value of {@code 0L} will be returned if the_snapshot is still running or if {@link #state()} returns {@code null}.__@return snapshot end time;public long endTime() {_        return endTime__    };returns,time,when,snapshot,ended,a,value,of,code,0l,will,be,returned,if,the,snapshot,is,still,running,or,if,link,state,returns,code,null,return,snapshot,end,time;public,long,end,time,return,end,time
SnapshotInfo -> public long endTime();1544221624;Returns time when snapshot ended_ a value of {@code 0L} will be returned if the_snapshot is still running or if {@link #state()} returns {@code null}.__@return snapshot end time;public long endTime() {_        return endTime__    };returns,time,when,snapshot,ended,a,value,of,code,0l,will,be,returned,if,the,snapshot,is,still,running,or,if,link,state,returns,code,null,return,snapshot,end,time;public,long,end,time,return,end,time
SnapshotInfo -> public long endTime();1544629714;Returns time when snapshot ended_ a value of {@code 0L} will be returned if the_snapshot is still running or if {@link #state()} returns {@code null}.__@return snapshot end time;public long endTime() {_        return endTime__    };returns,time,when,snapshot,ended,a,value,of,code,0l,will,be,returned,if,the,snapshot,is,still,running,or,if,link,state,returns,code,null,return,snapshot,end,time;public,long,end,time,return,end,time
SnapshotInfo -> public long endTime();1545215361;Returns time when snapshot ended_ a value of {@code 0L} will be returned if the_snapshot is still running or if {@link #state()} returns {@code null}.__@return snapshot end time;public long endTime() {_        return endTime__    };returns,time,when,snapshot,ended,a,value,of,code,0l,will,be,returned,if,the,snapshot,is,still,running,or,if,link,state,returns,code,null,return,snapshot,end,time;public,long,end,time,return,end,time
SnapshotInfo -> public long endTime();1548236405;Returns time when snapshot ended_ a value of {@code 0L} will be returned if the_snapshot is still running or if {@link #state()} returns {@code null}.__@return snapshot end time;public long endTime() {_        return endTime__    };returns,time,when,snapshot,ended,a,value,of,code,0l,will,be,returned,if,the,snapshot,is,still,running,or,if,link,state,returns,code,null,return,snapshot,end,time;public,long,end,time,return,end,time
SnapshotInfo -> public List<SnapshotShardFailure> shardFailures();1524684173;Returns shard failures_ an empty list will be returned if there were no shard_failures, or if {@link #state()} returns {@code null}.__@return shard failures;public List<SnapshotShardFailure> shardFailures() {_        return shardFailures__    };returns,shard,failures,an,empty,list,will,be,returned,if,there,were,no,shard,failures,or,if,link,state,returns,code,null,return,shard,failures;public,list,snapshot,shard,failure,shard,failures,return,shard,failures
SnapshotInfo -> public List<SnapshotShardFailure> shardFailures();1531179852;Returns shard failures_ an empty list will be returned if there were no shard_failures, or if {@link #state()} returns {@code null}.__@return shard failures;public List<SnapshotShardFailure> shardFailures() {_        return shardFailures__    };returns,shard,failures,an,empty,list,will,be,returned,if,there,were,no,shard,failures,or,if,link,state,returns,code,null,return,shard,failures;public,list,snapshot,shard,failure,shard,failures,return,shard,failures
SnapshotInfo -> public List<SnapshotShardFailure> shardFailures();1531234550;Returns shard failures_ an empty list will be returned if there were no shard_failures, or if {@link #state()} returns {@code null}.__@return shard failures;public List<SnapshotShardFailure> shardFailures() {_        return shardFailures__    };returns,shard,failures,an,empty,list,will,be,returned,if,there,were,no,shard,failures,or,if,link,state,returns,code,null,return,shard,failures;public,list,snapshot,shard,failure,shard,failures,return,shard,failures
SnapshotInfo -> public List<SnapshotShardFailure> shardFailures();1531729807;Returns shard failures_ an empty list will be returned if there were no shard_failures, or if {@link #state()} returns {@code null}.__@return shard failures;public List<SnapshotShardFailure> shardFailures() {_        return shardFailures__    };returns,shard,failures,an,empty,list,will,be,returned,if,there,were,no,shard,failures,or,if,link,state,returns,code,null,return,shard,failures;public,list,snapshot,shard,failure,shard,failures,return,shard,failures
SnapshotInfo -> public List<SnapshotShardFailure> shardFailures();1535139672;Returns shard failures_ an empty list will be returned if there were no shard_failures, or if {@link #state()} returns {@code null}.__@return shard failures;public List<SnapshotShardFailure> shardFailures() {_        return shardFailures__    };returns,shard,failures,an,empty,list,will,be,returned,if,there,were,no,shard,failures,or,if,link,state,returns,code,null,return,shard,failures;public,list,snapshot,shard,failure,shard,failures,return,shard,failures
SnapshotInfo -> public List<SnapshotShardFailure> shardFailures();1536964057;Returns shard failures_ an empty list will be returned if there were no shard_failures, or if {@link #state()} returns {@code null}.__@return shard failures;public List<SnapshotShardFailure> shardFailures() {_        return shardFailures__    };returns,shard,failures,an,empty,list,will,be,returned,if,there,were,no,shard,failures,or,if,link,state,returns,code,null,return,shard,failures;public,list,snapshot,shard,failure,shard,failures,return,shard,failures
SnapshotInfo -> public List<SnapshotShardFailure> shardFailures();1544221624;Returns shard failures_ an empty list will be returned if there were no shard_failures, or if {@link #state()} returns {@code null}.__@return shard failures;public List<SnapshotShardFailure> shardFailures() {_        return shardFailures__    };returns,shard,failures,an,empty,list,will,be,returned,if,there,were,no,shard,failures,or,if,link,state,returns,code,null,return,shard,failures;public,list,snapshot,shard,failure,shard,failures,return,shard,failures
SnapshotInfo -> public List<SnapshotShardFailure> shardFailures();1544629714;Returns shard failures_ an empty list will be returned if there were no shard_failures, or if {@link #state()} returns {@code null}.__@return shard failures;public List<SnapshotShardFailure> shardFailures() {_        return shardFailures__    };returns,shard,failures,an,empty,list,will,be,returned,if,there,were,no,shard,failures,or,if,link,state,returns,code,null,return,shard,failures;public,list,snapshot,shard,failure,shard,failures,return,shard,failures
SnapshotInfo -> public List<SnapshotShardFailure> shardFailures();1545215361;Returns shard failures_ an empty list will be returned if there were no shard_failures, or if {@link #state()} returns {@code null}.__@return shard failures;public List<SnapshotShardFailure> shardFailures() {_        return shardFailures__    };returns,shard,failures,an,empty,list,will,be,returned,if,there,were,no,shard,failures,or,if,link,state,returns,code,null,return,shard,failures;public,list,snapshot,shard,failure,shard,failures,return,shard,failures
SnapshotInfo -> public List<SnapshotShardFailure> shardFailures();1548236405;Returns shard failures_ an empty list will be returned if there were no shard_failures, or if {@link #state()} returns {@code null}.__@return shard failures;public List<SnapshotShardFailure> shardFailures() {_        return shardFailures__    };returns,shard,failures,an,empty,list,will,be,returned,if,there,were,no,shard,failures,or,if,link,state,returns,code,null,return,shard,failures;public,list,snapshot,shard,failure,shard,failures,return,shard,failures
SnapshotInfo -> public RestStatus status();1524684173;Returns snapshot REST status;public RestStatus status() {_        if (state == SnapshotState.FAILED) {_            return RestStatus.INTERNAL_SERVER_ERROR__        }_        if (shardFailures.size() == 0) {_            return RestStatus.OK__        }_        return RestStatus.status(successfulShards, totalShards,_                                 shardFailures.toArray(new ShardOperationFailedException[shardFailures.size()]))__    };returns,snapshot,rest,status;public,rest,status,status,if,state,snapshot,state,failed,return,rest,status,if,shard,failures,size,0,return,rest,status,ok,return,rest,status,status,successful,shards,total,shards,shard,failures,to,array,new,shard,operation,failed,exception,shard,failures,size
SnapshotInfo -> public RestStatus status();1531179852;Returns snapshot REST status;public RestStatus status() {_        if (state == SnapshotState.FAILED) {_            return RestStatus.INTERNAL_SERVER_ERROR__        }_        if (shardFailures.size() == 0) {_            return RestStatus.OK__        }_        return RestStatus.status(successfulShards, totalShards,_                                 shardFailures.toArray(new ShardOperationFailedException[shardFailures.size()]))__    };returns,snapshot,rest,status;public,rest,status,status,if,state,snapshot,state,failed,return,rest,status,if,shard,failures,size,0,return,rest,status,ok,return,rest,status,status,successful,shards,total,shards,shard,failures,to,array,new,shard,operation,failed,exception,shard,failures,size
SnapshotInfo -> public RestStatus status();1531234550;Returns snapshot REST status;public RestStatus status() {_        if (state == SnapshotState.FAILED) {_            return RestStatus.INTERNAL_SERVER_ERROR__        }_        if (shardFailures.size() == 0) {_            return RestStatus.OK__        }_        return RestStatus.status(successfulShards, totalShards,_                                 shardFailures.toArray(new ShardOperationFailedException[shardFailures.size()]))__    };returns,snapshot,rest,status;public,rest,status,status,if,state,snapshot,state,failed,return,rest,status,if,shard,failures,size,0,return,rest,status,ok,return,rest,status,status,successful,shards,total,shards,shard,failures,to,array,new,shard,operation,failed,exception,shard,failures,size
SnapshotInfo -> public RestStatus status();1531729807;Returns snapshot REST status;public RestStatus status() {_        if (state == SnapshotState.FAILED) {_            return RestStatus.INTERNAL_SERVER_ERROR__        }_        if (shardFailures.size() == 0) {_            return RestStatus.OK__        }_        return RestStatus.status(successfulShards, totalShards,_                                 shardFailures.toArray(new ShardOperationFailedException[shardFailures.size()]))__    };returns,snapshot,rest,status;public,rest,status,status,if,state,snapshot,state,failed,return,rest,status,if,shard,failures,size,0,return,rest,status,ok,return,rest,status,status,successful,shards,total,shards,shard,failures,to,array,new,shard,operation,failed,exception,shard,failures,size
SnapshotInfo -> public RestStatus status();1535139672;Returns snapshot REST status;public RestStatus status() {_        if (state == SnapshotState.FAILED) {_            return RestStatus.INTERNAL_SERVER_ERROR__        }_        if (shardFailures.size() == 0) {_            return RestStatus.OK__        }_        return RestStatus.status(successfulShards, totalShards,_                                 shardFailures.toArray(new ShardOperationFailedException[shardFailures.size()]))__    };returns,snapshot,rest,status;public,rest,status,status,if,state,snapshot,state,failed,return,rest,status,if,shard,failures,size,0,return,rest,status,ok,return,rest,status,status,successful,shards,total,shards,shard,failures,to,array,new,shard,operation,failed,exception,shard,failures,size
SnapshotInfo -> public RestStatus status();1536964057;Returns snapshot REST status;public RestStatus status() {_        if (state == SnapshotState.FAILED) {_            return RestStatus.INTERNAL_SERVER_ERROR__        }_        if (shardFailures.size() == 0) {_            return RestStatus.OK__        }_        return RestStatus.status(successfulShards, totalShards,_                                 shardFailures.toArray(new ShardOperationFailedException[shardFailures.size()]))__    };returns,snapshot,rest,status;public,rest,status,status,if,state,snapshot,state,failed,return,rest,status,if,shard,failures,size,0,return,rest,status,ok,return,rest,status,status,successful,shards,total,shards,shard,failures,to,array,new,shard,operation,failed,exception,shard,failures,size
SnapshotInfo -> public RestStatus status();1544221624;Returns snapshot REST status;public RestStatus status() {_        if (state == SnapshotState.FAILED) {_            return RestStatus.INTERNAL_SERVER_ERROR__        }_        if (shardFailures.size() == 0) {_            return RestStatus.OK__        }_        return RestStatus.status(successfulShards, totalShards,_                                 shardFailures.toArray(new ShardOperationFailedException[shardFailures.size()]))__    };returns,snapshot,rest,status;public,rest,status,status,if,state,snapshot,state,failed,return,rest,status,if,shard,failures,size,0,return,rest,status,ok,return,rest,status,status,successful,shards,total,shards,shard,failures,to,array,new,shard,operation,failed,exception,shard,failures,size
SnapshotInfo -> public RestStatus status();1544629714;Returns snapshot REST status;public RestStatus status() {_        if (state == SnapshotState.FAILED) {_            return RestStatus.INTERNAL_SERVER_ERROR__        }_        if (shardFailures.size() == 0) {_            return RestStatus.OK__        }_        return RestStatus.status(successfulShards, totalShards,_                                 shardFailures.toArray(new ShardOperationFailedException[shardFailures.size()]))__    };returns,snapshot,rest,status;public,rest,status,status,if,state,snapshot,state,failed,return,rest,status,if,shard,failures,size,0,return,rest,status,ok,return,rest,status,status,successful,shards,total,shards,shard,failures,to,array,new,shard,operation,failed,exception,shard,failures,size
SnapshotInfo -> public RestStatus status();1545215361;Returns snapshot REST status;public RestStatus status() {_        if (state == SnapshotState.FAILED) {_            return RestStatus.INTERNAL_SERVER_ERROR__        }_        if (shardFailures.size() == 0) {_            return RestStatus.OK__        }_        return RestStatus.status(successfulShards, totalShards,_                                 shardFailures.toArray(new ShardOperationFailedException[shardFailures.size()]))__    };returns,snapshot,rest,status;public,rest,status,status,if,state,snapshot,state,failed,return,rest,status,if,shard,failures,size,0,return,rest,status,ok,return,rest,status,status,successful,shards,total,shards,shard,failures,to,array,new,shard,operation,failed,exception,shard,failures,size
SnapshotInfo -> public RestStatus status();1548236405;Returns snapshot REST status;public RestStatus status() {_        if (state == SnapshotState.FAILED) {_            return RestStatus.INTERNAL_SERVER_ERROR__        }_        if (shardFailures.size() == 0) {_            return RestStatus.OK__        }_        return RestStatus.status(successfulShards, totalShards,_                                 shardFailures.toArray(new ShardOperationFailedException[shardFailures.size()]))__    };returns,snapshot,rest,status;public,rest,status,status,if,state,snapshot,state,failed,return,rest,status,if,shard,failures,size,0,return,rest,status,ok,return,rest,status,status,successful,shards,total,shards,shard,failures,to,array,new,shard,operation,failed,exception,shard,failures,size
SnapshotInfo -> @Override     public int compareTo(final SnapshotInfo o);1524684173;Compares two snapshots by their start time_ if the start times are the same, then_compares the two snapshots by their snapshot ids.;@Override_    public int compareTo(final SnapshotInfo o) {_        return COMPARATOR.compare(this, o)__    };compares,two,snapshots,by,their,start,time,if,the,start,times,are,the,same,then,compares,the,two,snapshots,by,their,snapshot,ids;override,public,int,compare,to,final,snapshot,info,o,return,comparator,compare,this,o
SnapshotInfo -> @Override     public int compareTo(final SnapshotInfo o);1531179852;Compares two snapshots by their start time_ if the start times are the same, then_compares the two snapshots by their snapshot ids.;@Override_    public int compareTo(final SnapshotInfo o) {_        return COMPARATOR.compare(this, o)__    };compares,two,snapshots,by,their,start,time,if,the,start,times,are,the,same,then,compares,the,two,snapshots,by,their,snapshot,ids;override,public,int,compare,to,final,snapshot,info,o,return,comparator,compare,this,o
SnapshotInfo -> @Override     public int compareTo(final SnapshotInfo o);1531234550;Compares two snapshots by their start time_ if the start times are the same, then_compares the two snapshots by their snapshot ids.;@Override_    public int compareTo(final SnapshotInfo o) {_        return COMPARATOR.compare(this, o)__    };compares,two,snapshots,by,their,start,time,if,the,start,times,are,the,same,then,compares,the,two,snapshots,by,their,snapshot,ids;override,public,int,compare,to,final,snapshot,info,o,return,comparator,compare,this,o
SnapshotInfo -> @Override     public int compareTo(final SnapshotInfo o);1531729807;Compares two snapshots by their start time_ if the start times are the same, then_compares the two snapshots by their snapshot ids.;@Override_    public int compareTo(final SnapshotInfo o) {_        return COMPARATOR.compare(this, o)__    };compares,two,snapshots,by,their,start,time,if,the,start,times,are,the,same,then,compares,the,two,snapshots,by,their,snapshot,ids;override,public,int,compare,to,final,snapshot,info,o,return,comparator,compare,this,o
SnapshotInfo -> @Override     public int compareTo(final SnapshotInfo o);1535139672;Compares two snapshots by their start time_ if the start times are the same, then_compares the two snapshots by their snapshot ids.;@Override_    public int compareTo(final SnapshotInfo o) {_        return COMPARATOR.compare(this, o)__    };compares,two,snapshots,by,their,start,time,if,the,start,times,are,the,same,then,compares,the,two,snapshots,by,their,snapshot,ids;override,public,int,compare,to,final,snapshot,info,o,return,comparator,compare,this,o
SnapshotInfo -> @Override     public int compareTo(final SnapshotInfo o);1536964057;Compares two snapshots by their start time_ if the start times are the same, then_compares the two snapshots by their snapshot ids.;@Override_    public int compareTo(final SnapshotInfo o) {_        return COMPARATOR.compare(this, o)__    };compares,two,snapshots,by,their,start,time,if,the,start,times,are,the,same,then,compares,the,two,snapshots,by,their,snapshot,ids;override,public,int,compare,to,final,snapshot,info,o,return,comparator,compare,this,o
SnapshotInfo -> @Override     public int compareTo(final SnapshotInfo o);1544221624;Compares two snapshots by their start time_ if the start times are the same, then_compares the two snapshots by their snapshot ids.;@Override_    public int compareTo(final SnapshotInfo o) {_        return COMPARATOR.compare(this, o)__    };compares,two,snapshots,by,their,start,time,if,the,start,times,are,the,same,then,compares,the,two,snapshots,by,their,snapshot,ids;override,public,int,compare,to,final,snapshot,info,o,return,comparator,compare,this,o
SnapshotInfo -> @Override     public int compareTo(final SnapshotInfo o);1544629714;Compares two snapshots by their start time_ if the start times are the same, then_compares the two snapshots by their snapshot ids.;@Override_    public int compareTo(final SnapshotInfo o) {_        return COMPARATOR.compare(this, o)__    };compares,two,snapshots,by,their,start,time,if,the,start,times,are,the,same,then,compares,the,two,snapshots,by,their,snapshot,ids;override,public,int,compare,to,final,snapshot,info,o,return,comparator,compare,this,o
SnapshotInfo -> @Override     public int compareTo(final SnapshotInfo o);1545215361;Compares two snapshots by their start time_ if the start times are the same, then_compares the two snapshots by their snapshot ids.;@Override_    public int compareTo(final SnapshotInfo o) {_        return COMPARATOR.compare(this, o)__    };compares,two,snapshots,by,their,start,time,if,the,start,times,are,the,same,then,compares,the,two,snapshots,by,their,snapshot,ids;override,public,int,compare,to,final,snapshot,info,o,return,comparator,compare,this,o
SnapshotInfo -> @Override     public int compareTo(final SnapshotInfo o);1548236405;Compares two snapshots by their start time_ if the start times are the same, then_compares the two snapshots by their snapshot ids.;@Override_    public int compareTo(final SnapshotInfo o) {_        return COMPARATOR.compare(this, o)__    };compares,two,snapshots,by,their,start,time,if,the,start,times,are,the,same,then,compares,the,two,snapshots,by,their,snapshot,ids;override,public,int,compare,to,final,snapshot,info,o,return,comparator,compare,this,o
SnapshotInfo -> public int totalShards();1524684173;Returns total number of shards that were snapshotted_ a value of {@code 0} will_be returned if {@link #state()} returns {@code null}.__@return number of shards;public int totalShards() {_        return totalShards__    };returns,total,number,of,shards,that,were,snapshotted,a,value,of,code,0,will,be,returned,if,link,state,returns,code,null,return,number,of,shards;public,int,total,shards,return,total,shards
SnapshotInfo -> public int totalShards();1531179852;Returns total number of shards that were snapshotted_ a value of {@code 0} will_be returned if {@link #state()} returns {@code null}.__@return number of shards;public int totalShards() {_        return totalShards__    };returns,total,number,of,shards,that,were,snapshotted,a,value,of,code,0,will,be,returned,if,link,state,returns,code,null,return,number,of,shards;public,int,total,shards,return,total,shards
SnapshotInfo -> public int totalShards();1531234550;Returns total number of shards that were snapshotted_ a value of {@code 0} will_be returned if {@link #state()} returns {@code null}.__@return number of shards;public int totalShards() {_        return totalShards__    };returns,total,number,of,shards,that,were,snapshotted,a,value,of,code,0,will,be,returned,if,link,state,returns,code,null,return,number,of,shards;public,int,total,shards,return,total,shards
SnapshotInfo -> public int totalShards();1531729807;Returns total number of shards that were snapshotted_ a value of {@code 0} will_be returned if {@link #state()} returns {@code null}.__@return number of shards;public int totalShards() {_        return totalShards__    };returns,total,number,of,shards,that,were,snapshotted,a,value,of,code,0,will,be,returned,if,link,state,returns,code,null,return,number,of,shards;public,int,total,shards,return,total,shards
SnapshotInfo -> public int totalShards();1535139672;Returns total number of shards that were snapshotted_ a value of {@code 0} will_be returned if {@link #state()} returns {@code null}.__@return number of shards;public int totalShards() {_        return totalShards__    };returns,total,number,of,shards,that,were,snapshotted,a,value,of,code,0,will,be,returned,if,link,state,returns,code,null,return,number,of,shards;public,int,total,shards,return,total,shards
SnapshotInfo -> public int totalShards();1536964057;Returns total number of shards that were snapshotted_ a value of {@code 0} will_be returned if {@link #state()} returns {@code null}.__@return number of shards;public int totalShards() {_        return totalShards__    };returns,total,number,of,shards,that,were,snapshotted,a,value,of,code,0,will,be,returned,if,link,state,returns,code,null,return,number,of,shards;public,int,total,shards,return,total,shards
SnapshotInfo -> public int totalShards();1544221624;Returns total number of shards that were snapshotted_ a value of {@code 0} will_be returned if {@link #state()} returns {@code null}.__@return number of shards;public int totalShards() {_        return totalShards__    };returns,total,number,of,shards,that,were,snapshotted,a,value,of,code,0,will,be,returned,if,link,state,returns,code,null,return,number,of,shards;public,int,total,shards,return,total,shards
SnapshotInfo -> public int totalShards();1544629714;Returns total number of shards that were snapshotted_ a value of {@code 0} will_be returned if {@link #state()} returns {@code null}.__@return number of shards;public int totalShards() {_        return totalShards__    };returns,total,number,of,shards,that,were,snapshotted,a,value,of,code,0,will,be,returned,if,link,state,returns,code,null,return,number,of,shards;public,int,total,shards,return,total,shards
SnapshotInfo -> public int totalShards();1545215361;Returns total number of shards that were snapshotted_ a value of {@code 0} will_be returned if {@link #state()} returns {@code null}.__@return number of shards;public int totalShards() {_        return totalShards__    };returns,total,number,of,shards,that,were,snapshotted,a,value,of,code,0,will,be,returned,if,link,state,returns,code,null,return,number,of,shards;public,int,total,shards,return,total,shards
SnapshotInfo -> public int totalShards();1548236405;Returns total number of shards that were snapshotted_ a value of {@code 0} will_be returned if {@link #state()} returns {@code null}.__@return number of shards;public int totalShards() {_        return totalShards__    };returns,total,number,of,shards,that,were,snapshotted,a,value,of,code,0,will,be,returned,if,link,state,returns,code,null,return,number,of,shards;public,int,total,shards,return,total,shards
SnapshotInfo -> public static SnapshotInfo incompatible(SnapshotId snapshotId);1524684173;Gets a new {@link SnapshotInfo} instance for a snapshot that is incompatible with the_current version of the cluster.;public static SnapshotInfo incompatible(SnapshotId snapshotId) {_        return new SnapshotInfo(snapshotId, Collections.emptyList(), SnapshotState.INCOMPATIBLE,_                                "the snapshot is incompatible with the current version of Elasticsearch and its exact version is unknown",_                                null, 0L, 0L, 0, 0, Collections.emptyList(), null)__    };gets,a,new,link,snapshot,info,instance,for,a,snapshot,that,is,incompatible,with,the,current,version,of,the,cluster;public,static,snapshot,info,incompatible,snapshot,id,snapshot,id,return,new,snapshot,info,snapshot,id,collections,empty,list,snapshot,state,incompatible,the,snapshot,is,incompatible,with,the,current,version,of,elasticsearch,and,its,exact,version,is,unknown,null,0l,0l,0,0,collections,empty,list,null
SnapshotInfo -> public static SnapshotInfo incompatible(SnapshotId snapshotId);1531179852;Gets a new {@link SnapshotInfo} instance for a snapshot that is incompatible with the_current version of the cluster.;public static SnapshotInfo incompatible(SnapshotId snapshotId) {_        return new SnapshotInfo(snapshotId, Collections.emptyList(), SnapshotState.INCOMPATIBLE,_                                "the snapshot is incompatible with the current version of Elasticsearch and its exact version is unknown",_                                null, 0L, 0L, 0, 0, Collections.emptyList(), null)__    };gets,a,new,link,snapshot,info,instance,for,a,snapshot,that,is,incompatible,with,the,current,version,of,the,cluster;public,static,snapshot,info,incompatible,snapshot,id,snapshot,id,return,new,snapshot,info,snapshot,id,collections,empty,list,snapshot,state,incompatible,the,snapshot,is,incompatible,with,the,current,version,of,elasticsearch,and,its,exact,version,is,unknown,null,0l,0l,0,0,collections,empty,list,null
SnapshotInfo -> public static SnapshotInfo incompatible(SnapshotId snapshotId);1531234550;Gets a new {@link SnapshotInfo} instance for a snapshot that is incompatible with the_current version of the cluster.;public static SnapshotInfo incompatible(SnapshotId snapshotId) {_        return new SnapshotInfo(snapshotId, Collections.emptyList(), SnapshotState.INCOMPATIBLE,_                                "the snapshot is incompatible with the current version of Elasticsearch and its exact version is unknown",_                                null, 0L, 0L, 0, 0, Collections.emptyList(), null)__    };gets,a,new,link,snapshot,info,instance,for,a,snapshot,that,is,incompatible,with,the,current,version,of,the,cluster;public,static,snapshot,info,incompatible,snapshot,id,snapshot,id,return,new,snapshot,info,snapshot,id,collections,empty,list,snapshot,state,incompatible,the,snapshot,is,incompatible,with,the,current,version,of,elasticsearch,and,its,exact,version,is,unknown,null,0l,0l,0,0,collections,empty,list,null
SnapshotInfo -> public static SnapshotInfo incompatible(SnapshotId snapshotId);1531729807;Gets a new {@link SnapshotInfo} instance for a snapshot that is incompatible with the_current version of the cluster.;public static SnapshotInfo incompatible(SnapshotId snapshotId) {_        return new SnapshotInfo(snapshotId, Collections.emptyList(), SnapshotState.INCOMPATIBLE,_                                "the snapshot is incompatible with the current version of Elasticsearch and its exact version is unknown",_                                null, 0L, 0L, 0, 0, Collections.emptyList(), null)__    };gets,a,new,link,snapshot,info,instance,for,a,snapshot,that,is,incompatible,with,the,current,version,of,the,cluster;public,static,snapshot,info,incompatible,snapshot,id,snapshot,id,return,new,snapshot,info,snapshot,id,collections,empty,list,snapshot,state,incompatible,the,snapshot,is,incompatible,with,the,current,version,of,elasticsearch,and,its,exact,version,is,unknown,null,0l,0l,0,0,collections,empty,list,null
SnapshotInfo -> public static SnapshotInfo incompatible(SnapshotId snapshotId);1535139672;Gets a new {@link SnapshotInfo} instance for a snapshot that is incompatible with the_current version of the cluster.;public static SnapshotInfo incompatible(SnapshotId snapshotId) {_        return new SnapshotInfo(snapshotId, Collections.emptyList(), SnapshotState.INCOMPATIBLE,_                                "the snapshot is incompatible with the current version of Elasticsearch and its exact version is unknown",_                                null, 0L, 0L, 0, 0, Collections.emptyList(), null)__    };gets,a,new,link,snapshot,info,instance,for,a,snapshot,that,is,incompatible,with,the,current,version,of,the,cluster;public,static,snapshot,info,incompatible,snapshot,id,snapshot,id,return,new,snapshot,info,snapshot,id,collections,empty,list,snapshot,state,incompatible,the,snapshot,is,incompatible,with,the,current,version,of,elasticsearch,and,its,exact,version,is,unknown,null,0l,0l,0,0,collections,empty,list,null
SnapshotInfo -> public static SnapshotInfo incompatible(SnapshotId snapshotId);1536964057;Gets a new {@link SnapshotInfo} instance for a snapshot that is incompatible with the_current version of the cluster.;public static SnapshotInfo incompatible(SnapshotId snapshotId) {_        return new SnapshotInfo(snapshotId, Collections.emptyList(), SnapshotState.INCOMPATIBLE,_                                "the snapshot is incompatible with the current version of Elasticsearch and its exact version is unknown",_                                null, 0L, 0L, 0, 0, Collections.emptyList(), null)__    };gets,a,new,link,snapshot,info,instance,for,a,snapshot,that,is,incompatible,with,the,current,version,of,the,cluster;public,static,snapshot,info,incompatible,snapshot,id,snapshot,id,return,new,snapshot,info,snapshot,id,collections,empty,list,snapshot,state,incompatible,the,snapshot,is,incompatible,with,the,current,version,of,elasticsearch,and,its,exact,version,is,unknown,null,0l,0l,0,0,collections,empty,list,null
SnapshotInfo -> public static SnapshotInfo incompatible(SnapshotId snapshotId);1544221624;Gets a new {@link SnapshotInfo} instance for a snapshot that is incompatible with the_current version of the cluster.;public static SnapshotInfo incompatible(SnapshotId snapshotId) {_        return new SnapshotInfo(snapshotId, Collections.emptyList(), SnapshotState.INCOMPATIBLE,_                                "the snapshot is incompatible with the current version of Elasticsearch and its exact version is unknown",_                                null, 0L, 0L, 0, 0, Collections.emptyList(), null)__    };gets,a,new,link,snapshot,info,instance,for,a,snapshot,that,is,incompatible,with,the,current,version,of,the,cluster;public,static,snapshot,info,incompatible,snapshot,id,snapshot,id,return,new,snapshot,info,snapshot,id,collections,empty,list,snapshot,state,incompatible,the,snapshot,is,incompatible,with,the,current,version,of,elasticsearch,and,its,exact,version,is,unknown,null,0l,0l,0,0,collections,empty,list,null
SnapshotInfo -> public static SnapshotInfo incompatible(SnapshotId snapshotId);1544629714;Gets a new {@link SnapshotInfo} instance for a snapshot that is incompatible with the_current version of the cluster.;public static SnapshotInfo incompatible(SnapshotId snapshotId) {_        return new SnapshotInfo(snapshotId, Collections.emptyList(), SnapshotState.INCOMPATIBLE,_                                "the snapshot is incompatible with the current version of Elasticsearch and its exact version is unknown",_                                null, 0L, 0L, 0, 0, Collections.emptyList(), null)__    };gets,a,new,link,snapshot,info,instance,for,a,snapshot,that,is,incompatible,with,the,current,version,of,the,cluster;public,static,snapshot,info,incompatible,snapshot,id,snapshot,id,return,new,snapshot,info,snapshot,id,collections,empty,list,snapshot,state,incompatible,the,snapshot,is,incompatible,with,the,current,version,of,elasticsearch,and,its,exact,version,is,unknown,null,0l,0l,0,0,collections,empty,list,null
SnapshotInfo -> public static SnapshotInfo incompatible(SnapshotId snapshotId);1545215361;Gets a new {@link SnapshotInfo} instance for a snapshot that is incompatible with the_current version of the cluster.;public static SnapshotInfo incompatible(SnapshotId snapshotId) {_        return new SnapshotInfo(snapshotId, Collections.emptyList(), SnapshotState.INCOMPATIBLE,_                                "the snapshot is incompatible with the current version of Elasticsearch and its exact version is unknown",_                                null, 0L, 0L, 0, 0,_                                Collections.emptyList(), null)__    };gets,a,new,link,snapshot,info,instance,for,a,snapshot,that,is,incompatible,with,the,current,version,of,the,cluster;public,static,snapshot,info,incompatible,snapshot,id,snapshot,id,return,new,snapshot,info,snapshot,id,collections,empty,list,snapshot,state,incompatible,the,snapshot,is,incompatible,with,the,current,version,of,elasticsearch,and,its,exact,version,is,unknown,null,0l,0l,0,0,collections,empty,list,null
SnapshotInfo -> public static SnapshotInfo incompatible(SnapshotId snapshotId);1548236405;Gets a new {@link SnapshotInfo} instance for a snapshot that is incompatible with the_current version of the cluster.;public static SnapshotInfo incompatible(SnapshotId snapshotId) {_        return new SnapshotInfo(snapshotId, Collections.emptyList(), SnapshotState.INCOMPATIBLE,_                                "the snapshot is incompatible with the current version of Elasticsearch and its exact version is unknown",_                                null, 0L, 0L, 0, 0,_                                Collections.emptyList(), null)__    };gets,a,new,link,snapshot,info,instance,for,a,snapshot,that,is,incompatible,with,the,current,version,of,the,cluster;public,static,snapshot,info,incompatible,snapshot,id,snapshot,id,return,new,snapshot,info,snapshot,id,collections,empty,list,snapshot,state,incompatible,the,snapshot,is,incompatible,with,the,current,version,of,elasticsearch,and,its,exact,version,is,unknown,null,0l,0l,0,0,collections,empty,list,null
SnapshotInfo -> public SnapshotId snapshotId();1524684173;Returns snapshot id__@return snapshot id;public SnapshotId snapshotId() {_        return snapshotId__    };returns,snapshot,id,return,snapshot,id;public,snapshot,id,snapshot,id,return,snapshot,id
SnapshotInfo -> public SnapshotId snapshotId();1531179852;Returns snapshot id__@return snapshot id;public SnapshotId snapshotId() {_        return snapshotId__    };returns,snapshot,id,return,snapshot,id;public,snapshot,id,snapshot,id,return,snapshot,id
SnapshotInfo -> public SnapshotId snapshotId();1531234550;Returns snapshot id__@return snapshot id;public SnapshotId snapshotId() {_        return snapshotId__    };returns,snapshot,id,return,snapshot,id;public,snapshot,id,snapshot,id,return,snapshot,id
SnapshotInfo -> public SnapshotId snapshotId();1531729807;Returns snapshot id__@return snapshot id;public SnapshotId snapshotId() {_        return snapshotId__    };returns,snapshot,id,return,snapshot,id;public,snapshot,id,snapshot,id,return,snapshot,id
SnapshotInfo -> public SnapshotId snapshotId();1535139672;Returns snapshot id__@return snapshot id;public SnapshotId snapshotId() {_        return snapshotId__    };returns,snapshot,id,return,snapshot,id;public,snapshot,id,snapshot,id,return,snapshot,id
SnapshotInfo -> public SnapshotId snapshotId();1536964057;Returns snapshot id__@return snapshot id;public SnapshotId snapshotId() {_        return snapshotId__    };returns,snapshot,id,return,snapshot,id;public,snapshot,id,snapshot,id,return,snapshot,id
SnapshotInfo -> public SnapshotId snapshotId();1544221624;Returns snapshot id__@return snapshot id;public SnapshotId snapshotId() {_        return snapshotId__    };returns,snapshot,id,return,snapshot,id;public,snapshot,id,snapshot,id,return,snapshot,id
SnapshotInfo -> public SnapshotId snapshotId();1544629714;Returns snapshot id__@return snapshot id;public SnapshotId snapshotId() {_        return snapshotId__    };returns,snapshot,id,return,snapshot,id;public,snapshot,id,snapshot,id,return,snapshot,id
SnapshotInfo -> public SnapshotId snapshotId();1545215361;Returns snapshot id__@return snapshot id;public SnapshotId snapshotId() {_        return snapshotId__    };returns,snapshot,id,return,snapshot,id;public,snapshot,id,snapshot,id,return,snapshot,id
SnapshotInfo -> public SnapshotId snapshotId();1548236405;Returns snapshot id__@return snapshot id;public SnapshotId snapshotId() {_        return snapshotId__    };returns,snapshot,id,return,snapshot,id;public,snapshot,id,snapshot,id,return,snapshot,id
SnapshotInfo -> public static SnapshotInfo fromXContent(final XContentParser parser) throws IOException;1524684173;This method creates a SnapshotInfo from internal x-content.  It does not_handle x-content written with the external version as external x-content_is only for display purposes and does not need to be parsed.;public static SnapshotInfo fromXContent(final XContentParser parser) throws IOException {_        String name = null__        String uuid = null__        Version version = Version.CURRENT__        SnapshotState state = SnapshotState.IN_PROGRESS__        String reason = null__        List<String> indices = Collections.emptyList()__        long startTime = 0__        long endTime = 0__        int totalShards = 0__        int successfulShards = 0__        Boolean includeGlobalState = null__        List<SnapshotShardFailure> shardFailures = Collections.emptyList()__        if (parser.currentToken() == null) { _            parser.nextToken()__        }_        if (parser.currentToken() == XContentParser.Token.START_OBJECT) {  _            parser.nextToken()__        }_        XContentParser.Token token__        if ((token = parser.nextToken()) == XContentParser.Token.START_OBJECT) {_            String currentFieldName = parser.currentName()__            if (SNAPSHOT.equals(currentFieldName)) {_                while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {_                    if (token == XContentParser.Token.FIELD_NAME) {_                        currentFieldName = parser.currentName()__                        token = parser.nextToken()__                        if (token.isValue()) {_                            if (NAME.equals(currentFieldName)) {_                                name = parser.text()__                            } else if (UUID.equals(currentFieldName)) {_                                uuid = parser.text()__                            } else if (STATE.equals(currentFieldName)) {_                                state = SnapshotState.valueOf(parser.text())__                            } else if (REASON.equals(currentFieldName)) {_                                reason = parser.text()__                            } else if (START_TIME.equals(currentFieldName)) {_                                startTime = parser.longValue()__                            } else if (END_TIME.equals(currentFieldName)) {_                                endTime = parser.longValue()__                            } else if (TOTAL_SHARDS.equals(currentFieldName)) {_                                totalShards = parser.intValue()__                            } else if (SUCCESSFUL_SHARDS.equals(currentFieldName)) {_                                successfulShards = parser.intValue()__                            } else if (VERSION_ID.equals(currentFieldName)) {_                                version = Version.fromId(parser.intValue())__                            } else if (INCLUDE_GLOBAL_STATE.equals(currentFieldName)) {_                                includeGlobalState = parser.booleanValue()__                            }_                        } else if (token == XContentParser.Token.START_ARRAY) {_                            if (INDICES.equals(currentFieldName)) {_                                ArrayList<String> indicesArray = new ArrayList<>()__                                while (parser.nextToken() != XContentParser.Token.END_ARRAY) {_                                    indicesArray.add(parser.text())__                                }_                                indices = Collections.unmodifiableList(indicesArray)__                            } else if (FAILURES.equals(currentFieldName)) {_                                ArrayList<SnapshotShardFailure> shardFailureArrayList = new ArrayList<>()__                                while (parser.nextToken() != XContentParser.Token.END_ARRAY) {_                                    shardFailureArrayList.add(SnapshotShardFailure.fromXContent(parser))__                                }_                                shardFailures = Collections.unmodifiableList(shardFailureArrayList)__                            } else {_                                _                                parser.skipChildren()__                            }_                        } else if (token == XContentParser.Token.START_OBJECT) {_                            _                            parser.skipChildren()__                        }_                    }_                }_            }_        } else {_            throw new ElasticsearchParseException("unexpected token  [" + token + "]")__        }_        if (uuid == null) {_            _            uuid = name__        }_        return new SnapshotInfo(new SnapshotId(name, uuid),_                                indices,_                                state,_                                reason,_                                version,_                                startTime,_                                endTime,_                                totalShards,_                                successfulShards,_                                shardFailures,_                                includeGlobalState)__    };this,method,creates,a,snapshot,info,from,internal,x,content,it,does,not,handle,x,content,written,with,the,external,version,as,external,x,content,is,only,for,display,purposes,and,does,not,need,to,be,parsed;public,static,snapshot,info,from,xcontent,final,xcontent,parser,parser,throws,ioexception,string,name,null,string,uuid,null,version,version,version,current,snapshot,state,state,snapshot,state,string,reason,null,list,string,indices,collections,empty,list,long,start,time,0,long,end,time,0,int,total,shards,0,int,successful,shards,0,boolean,include,global,state,null,list,snapshot,shard,failure,shard,failures,collections,empty,list,if,parser,current,token,null,parser,next,token,if,parser,current,token,xcontent,parser,token,parser,next,token,xcontent,parser,token,token,if,token,parser,next,token,xcontent,parser,token,string,current,field,name,parser,current,name,if,snapshot,equals,current,field,name,while,token,parser,next,token,xcontent,parser,token,if,token,xcontent,parser,token,current,field,name,parser,current,name,token,parser,next,token,if,token,is,value,if,name,equals,current,field,name,name,parser,text,else,if,uuid,equals,current,field,name,uuid,parser,text,else,if,state,equals,current,field,name,state,snapshot,state,value,of,parser,text,else,if,reason,equals,current,field,name,reason,parser,text,else,if,equals,current,field,name,start,time,parser,long,value,else,if,equals,current,field,name,end,time,parser,long,value,else,if,equals,current,field,name,total,shards,parser,int,value,else,if,equals,current,field,name,successful,shards,parser,int,value,else,if,equals,current,field,name,version,version,from,id,parser,int,value,else,if,equals,current,field,name,include,global,state,parser,boolean,value,else,if,token,xcontent,parser,token,if,indices,equals,current,field,name,array,list,string,indices,array,new,array,list,while,parser,next,token,xcontent,parser,token,indices,array,add,parser,text,indices,collections,unmodifiable,list,indices,array,else,if,failures,equals,current,field,name,array,list,snapshot,shard,failure,shard,failure,array,list,new,array,list,while,parser,next,token,xcontent,parser,token,shard,failure,array,list,add,snapshot,shard,failure,from,xcontent,parser,shard,failures,collections,unmodifiable,list,shard,failure,array,list,else,parser,skip,children,else,if,token,xcontent,parser,token,parser,skip,children,else,throw,new,elasticsearch,parse,exception,unexpected,token,token,if,uuid,null,uuid,name,return,new,snapshot,info,new,snapshot,id,name,uuid,indices,state,reason,version,start,time,end,time,total,shards,successful,shards,shard,failures,include,global,state
SnapshotInfo -> public static SnapshotInfo fromXContent(final XContentParser parser) throws IOException;1531179852;This method creates a SnapshotInfo from external x-content.  It does not_handle x-content written with the internal version.;public static SnapshotInfo fromXContent(final XContentParser parser) throws IOException {_        return SNAPSHOT_INFO_PARSER.parse(parser, null).build()__    };this,method,creates,a,snapshot,info,from,external,x,content,it,does,not,handle,x,content,written,with,the,internal,version;public,static,snapshot,info,from,xcontent,final,xcontent,parser,parser,throws,ioexception,return,parse,parser,null,build
SnapshotInfo -> public static SnapshotInfo fromXContent(final XContentParser parser) throws IOException;1531234550;This method creates a SnapshotInfo from external x-content.  It does not_handle x-content written with the internal version.;public static SnapshotInfo fromXContent(final XContentParser parser) throws IOException {_        return SNAPSHOT_INFO_PARSER.parse(parser, null).build()__    };this,method,creates,a,snapshot,info,from,external,x,content,it,does,not,handle,x,content,written,with,the,internal,version;public,static,snapshot,info,from,xcontent,final,xcontent,parser,parser,throws,ioexception,return,parse,parser,null,build
SnapshotInfo -> public static SnapshotInfo fromXContent(final XContentParser parser) throws IOException;1531729807;This method creates a SnapshotInfo from external x-content.  It does not_handle x-content written with the internal version.;public static SnapshotInfo fromXContent(final XContentParser parser) throws IOException {_        return SNAPSHOT_INFO_PARSER.parse(parser, null).build()__    };this,method,creates,a,snapshot,info,from,external,x,content,it,does,not,handle,x,content,written,with,the,internal,version;public,static,snapshot,info,from,xcontent,final,xcontent,parser,parser,throws,ioexception,return,parse,parser,null,build
SnapshotInfo -> public static SnapshotInfo fromXContent(final XContentParser parser) throws IOException;1535139672;This method creates a SnapshotInfo from external x-content.  It does not_handle x-content written with the internal version.;public static SnapshotInfo fromXContent(final XContentParser parser) throws IOException {_        return SNAPSHOT_INFO_PARSER.parse(parser, null).build()__    };this,method,creates,a,snapshot,info,from,external,x,content,it,does,not,handle,x,content,written,with,the,internal,version;public,static,snapshot,info,from,xcontent,final,xcontent,parser,parser,throws,ioexception,return,parse,parser,null,build
SnapshotInfo -> public static SnapshotInfo fromXContent(final XContentParser parser) throws IOException;1536964057;This method creates a SnapshotInfo from external x-content.  It does not_handle x-content written with the internal version.;public static SnapshotInfo fromXContent(final XContentParser parser) throws IOException {_        return SNAPSHOT_INFO_PARSER.parse(parser, null).build()__    };this,method,creates,a,snapshot,info,from,external,x,content,it,does,not,handle,x,content,written,with,the,internal,version;public,static,snapshot,info,from,xcontent,final,xcontent,parser,parser,throws,ioexception,return,parse,parser,null,build
SnapshotInfo -> public static SnapshotInfo fromXContent(final XContentParser parser) throws IOException;1544221624;This method creates a SnapshotInfo from external x-content.  It does not_handle x-content written with the internal version.;public static SnapshotInfo fromXContent(final XContentParser parser) throws IOException {_        return SNAPSHOT_INFO_PARSER.parse(parser, null).build()__    };this,method,creates,a,snapshot,info,from,external,x,content,it,does,not,handle,x,content,written,with,the,internal,version;public,static,snapshot,info,from,xcontent,final,xcontent,parser,parser,throws,ioexception,return,parse,parser,null,build
