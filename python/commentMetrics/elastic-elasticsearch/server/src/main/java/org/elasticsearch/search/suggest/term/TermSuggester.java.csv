commented;modifiers;parameterAmount;loc;comment;code
false;public;4;24;;@Override public TermSuggestion innerExecute(String name, TermSuggestionContext suggestion, IndexSearcher searcher, CharsRefBuilder spare) throws IOException {     DirectSpellChecker directSpellChecker = suggestion.getDirectSpellCheckerSettings().createDirectSpellChecker().     final IndexReader indexReader = searcher.getIndexReader().     TermSuggestion response = new TermSuggestion(name, suggestion.getSize(), suggestion.getDirectSpellCheckerSettings().sort()).     List<Token> tokens = queryTerms(suggestion, spare).     for (Token token : tokens) {         // TODO: Extend DirectSpellChecker in 4.1, to get the raw suggested words as BytesRef         SuggestWord[] suggestedWords = directSpellChecker.suggestSimilar(token.term, suggestion.getShardSize(), indexReader, suggestion.getDirectSpellCheckerSettings().suggestMode()).         Text key = new Text(new BytesArray(token.term.bytes())).         TermSuggestion.Entry resultEntry = new TermSuggestion.Entry(key, token.startOffset, token.endOffset - token.startOffset).         for (SuggestWord suggestWord : suggestedWords) {             Text word = new Text(suggestWord.string).             resultEntry.addOption(new TermSuggestion.Entry.Option(word, suggestWord.freq, suggestWord.score)).         }         response.addTerm(resultEntry).     }     return response. }
false;public;0;5;;@Override public void nextToken() {     Term term = new Term(field, BytesRef.deepCopyOf(fillBytesRef(new BytesRefBuilder()))).     result.add(new Token(term, offsetAttr.startOffset(), offsetAttr.endOffset())). }
false;private,static;2;13;;private static List<Token> queryTerms(SuggestionContext suggestion, CharsRefBuilder spare) throws IOException {     final List<Token> result = new ArrayList<>().     final String field = suggestion.getField().     DirectCandidateGenerator.analyze(suggestion.getAnalyzer(), suggestion.getText(), field, new DirectCandidateGenerator.TokenConsumer() {          @Override         public void nextToken() {             Term term = new Term(field, BytesRef.deepCopyOf(fillBytesRef(new BytesRefBuilder()))).             result.add(new Token(term, offsetAttr.startOffset(), offsetAttr.endOffset())).         }     }, spare).     return result. }
