commented;modifiers;parameterAmount;loc;comment;code
false;static;2;3;;static InternalScrollSearchRequest internalScrollSearchRequest(long id, SearchScrollRequest request) {     return new InternalScrollSearchRequest(request, id). }
false;static;1;19;;static String buildScrollId(AtomicArray<? extends SearchPhaseResult> searchPhaseResults) throws IOException {     try (RAMOutputStream out = new RAMOutputStream()) {         out.writeString(searchPhaseResults.length() == 1 ? ParsedScrollId.QUERY_AND_FETCH_TYPE : ParsedScrollId.QUERY_THEN_FETCH_TYPE).         out.writeVInt(searchPhaseResults.asList().size()).         for (SearchPhaseResult searchPhaseResult : searchPhaseResults.asList()) {             out.writeLong(searchPhaseResult.getRequestId()).             SearchShardTarget searchShardTarget = searchPhaseResult.getSearchShardTarget().             if (searchShardTarget.getClusterAlias() != null) {                 out.writeString(RemoteClusterAware.buildRemoteIndexName(searchShardTarget.getClusterAlias(), searchShardTarget.getNodeId())).             } else {                 out.writeString(searchShardTarget.getNodeId()).             }         }         byte[] bytes = new byte[(int) out.getFilePointer()].         out.writeTo(bytes, 0).         return Base64.getUrlEncoder().encodeToString(bytes).     } }
false;static;1;27;;static ParsedScrollId parseScrollId(String scrollId) {     try {         byte[] bytes = Base64.getUrlDecoder().decode(scrollId).         ByteArrayDataInput in = new ByteArrayDataInput(bytes).         String type = in.readString().         ScrollIdForNode[] context = new ScrollIdForNode[in.readVInt()].         for (int i = 0. i < context.length. ++i) {             long id = in.readLong().             String target = in.readString().             String clusterAlias.             final int index = target.indexOf(RemoteClusterAware.REMOTE_CLUSTER_INDEX_SEPARATOR).             if (index == -1) {                 clusterAlias = null.             } else {                 clusterAlias = target.substring(0, index).                 target = target.substring(index + 1).             }             context[i] = new ScrollIdForNode(clusterAlias, target, id).         }         if (in.getPosition() != bytes.length) {             throw new IllegalArgumentException("Not all bytes were read").         }         return new ParsedScrollId(scrollId, type, context).     } catch (Exception e) {         throw new IllegalArgumentException("Cannot parse scroll id", e).     } }
