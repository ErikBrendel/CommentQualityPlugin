commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String getName() {     return "cat_alias_action". }
false;public;1;5;;@Override public RestResponse buildResponse(GetAliasesResponse response) throws Exception {     Table tab = buildTable(request, response).     return RestTable.buildResponse(tab, channel). }
false;protected;2;15;;@Override protected RestChannelConsumer doCatRequest(final RestRequest request, final NodeClient client) {     final GetAliasesRequest getAliasesRequest = request.hasParam("alias") ? new GetAliasesRequest(Strings.commaDelimitedListToStringArray(request.param("alias"))) : new GetAliasesRequest().     getAliasesRequest.local(request.paramAsBoolean("local", getAliasesRequest.local())).     return channel -> client.admin().indices().getAliases(getAliasesRequest, new RestResponseListener<GetAliasesResponse>(channel) {          @Override         public RestResponse buildResponse(GetAliasesResponse response) throws Exception {             Table tab = buildTable(request, response).             return RestTable.buildResponse(tab, channel).         }     }). }
false;protected;1;5;;@Override protected void documentation(StringBuilder sb) {     sb.append("/_cat/aliases\n").     sb.append("/_cat/aliases/{alias}\n"). }
false;protected;1;12;;@Override protected Table getTableWithHeader(RestRequest request) {     final Table table = new Table().     table.startHeaders().     table.addCell("alias", "alias:a.desc:alias name").     table.addCell("index", "alias:i,idx.desc:index alias points to").     table.addCell("filter", "alias:f,fi.desc:filter").     table.addCell("routing.index", "alias:ri,routingIndex.desc:index routing").     table.addCell("routing.search", "alias:rs,routingSearch.desc:search routing").     table.endHeaders().     return table. }
false;private;2;20;;private Table buildTable(RestRequest request, GetAliasesResponse response) {     Table table = getTableWithHeader(request).     for (ObjectObjectCursor<String, List<AliasMetaData>> cursor : response.getAliases()) {         String indexName = cursor.key.         for (AliasMetaData aliasMetaData : cursor.value) {             table.startRow().             table.addCell(aliasMetaData.alias()).             table.addCell(indexName).             table.addCell(aliasMetaData.filteringRequired() ? "*" : "-").             String indexRouting = Strings.hasLength(aliasMetaData.indexRouting()) ? aliasMetaData.indexRouting() : "-".             table.addCell(indexRouting).             String searchRouting = Strings.hasLength(aliasMetaData.searchRouting()) ? aliasMetaData.searchRouting() : "-".             table.addCell(searchRouting).             table.endRow().         }     }     return table. }
