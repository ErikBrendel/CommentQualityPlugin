commented;modifiers;parameterAmount;loc;comment;code
false;public;1;4;;@Override public Result evaluate(Stats stats) {     return new Result(this, stats.indexSize.getBytes() >= value.getBytes()). }
false;;1;4;;@Override boolean includedInVersion(Version version) {     return version.onOrAfter(Version.V_6_1_0). }
false;public;0;4;;@Override public String getWriteableName() {     return NAME. }
false;public;1;5;;@Override public void writeTo(StreamOutput out) throws IOException {     // TODO here we should just use ByteSizeValue#writeTo and same for de-serialization in the constructor     out.writeVLong(value.getBytes()). }
false;public;2;4;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     return builder.field(NAME, value.getStringRep()). }
false;public,static;1;7;;public static MaxSizeCondition fromXContent(XContentParser parser) throws IOException {     if (parser.nextToken() == XContentParser.Token.VALUE_STRING) {         return new MaxSizeCondition(ByteSizeValue.parseBytesSizeValue(parser.text(), NAME)).     } else {         throw new IllegalArgumentException("invalid token: " + parser.currentToken()).     } }
