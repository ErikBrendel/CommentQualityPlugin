commented;modifiers;parameterAmount;loc;comment;code
true;public;0;6;/**  * The index name of the document.  */ ;/**  * The index name of the document.  */ public String getIndex() {     if (failure != null) {         return failure.getIndex().     }     return response.getIndex(). }
true;public;0;6;/**  * The type of the document.  */ ;/**  * The type of the document.  */ public String getType() {     if (failure != null) {         return failure.getType().     }     return response.getType(). }
true;public;0;6;/**  * The id of the document.  */ ;/**  * The id of the document.  */ public String getId() {     if (failure != null) {         return failure.getId().     }     return response.getId(). }
true;public;0;3;/**  * Is this a failed execution?  */ ;/**  * Is this a failed execution?  */ public boolean isFailed() {     return failure != null. }
true;public;0;3;/**  * The actual get response, {@code null} if its a failure.  */ ;/**  * The actual get response, {@code null} if its a failure.  */ public TermVectorsResponse getResponse() {     return this.response. }
true;public;0;3;/**  * The failure if relevant.  */ ;/**  * The failure if relevant.  */ public MultiTermVectorsResponse.Failure getFailure() {     return this.failure. }
false;public,static;1;5;;public static MultiTermVectorsItemResponse readItemResponse(StreamInput in) throws IOException {     MultiTermVectorsItemResponse response = new MultiTermVectorsItemResponse().     response.readFrom(in).     return response. }
false;public;1;9;;@Override public void readFrom(StreamInput in) throws IOException {     if (in.readBoolean()) {         failure = MultiTermVectorsResponse.Failure.readFailure(in).     } else {         response = new TermVectorsResponse().         response.readFrom(in).     } }
false;public;1;10;;@Override public void writeTo(StreamOutput out) throws IOException {     if (failure != null) {         out.writeBoolean(true).         failure.writeTo(out).     } else {         out.writeBoolean(false).         response.writeTo(out).     } }
