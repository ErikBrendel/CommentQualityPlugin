commented;modifiers;parameterAmount;loc;comment;code
true;public;0;13;/**  * Clears all info flags.  */ ;/**  * Clears all info flags.  */ public NodesInfoRequest clear() {     settings = false.     os = false.     process = false.     jvm = false.     threadPool = false.     transport = false.     http = false.     plugins = false.     ingest = false.     indices = false.     return this. }
true;public;0;13;/**  * Sets to return all the data.  */ ;/**  * Sets to return all the data.  */ public NodesInfoRequest all() {     settings = true.     os = true.     process = true.     jvm = true.     threadPool = true.     transport = true.     http = true.     plugins = true.     ingest = true.     indices = true.     return this. }
true;public;0;3;/**  * Should the node settings be returned.  */ ;/**  * Should the node settings be returned.  */ public boolean settings() {     return this.settings. }
true;public;1;4;/**  * Should the node settings be returned.  */ ;/**  * Should the node settings be returned.  */ public NodesInfoRequest settings(boolean settings) {     this.settings = settings.     return this. }
true;public;0;3;/**  * Should the node OS be returned.  */ ;/**  * Should the node OS be returned.  */ public boolean os() {     return this.os. }
true;public;1;4;/**  * Should the node OS be returned.  */ ;/**  * Should the node OS be returned.  */ public NodesInfoRequest os(boolean os) {     this.os = os.     return this. }
true;public;0;3;/**  * Should the node Process be returned.  */ ;/**  * Should the node Process be returned.  */ public boolean process() {     return this.process. }
true;public;1;4;/**  * Should the node Process be returned.  */ ;/**  * Should the node Process be returned.  */ public NodesInfoRequest process(boolean process) {     this.process = process.     return this. }
true;public;0;3;/**  * Should the node JVM be returned.  */ ;/**  * Should the node JVM be returned.  */ public boolean jvm() {     return this.jvm. }
true;public;1;4;/**  * Should the node JVM be returned.  */ ;/**  * Should the node JVM be returned.  */ public NodesInfoRequest jvm(boolean jvm) {     this.jvm = jvm.     return this. }
true;public;0;3;/**  * Should the node Thread Pool info be returned.  */ ;/**  * Should the node Thread Pool info be returned.  */ public boolean threadPool() {     return this.threadPool. }
true;public;1;4;/**  * Should the node Thread Pool info be returned.  */ ;/**  * Should the node Thread Pool info be returned.  */ public NodesInfoRequest threadPool(boolean threadPool) {     this.threadPool = threadPool.     return this. }
true;public;0;3;/**  * Should the node Transport be returned.  */ ;/**  * Should the node Transport be returned.  */ public boolean transport() {     return this.transport. }
true;public;1;4;/**  * Should the node Transport be returned.  */ ;/**  * Should the node Transport be returned.  */ public NodesInfoRequest transport(boolean transport) {     this.transport = transport.     return this. }
true;public;0;3;/**  * Should the node HTTP be returned.  */ ;/**  * Should the node HTTP be returned.  */ public boolean http() {     return this.http. }
true;public;1;4;/**  * Should the node HTTP be returned.  */ ;/**  * Should the node HTTP be returned.  */ public NodesInfoRequest http(boolean http) {     this.http = http.     return this. }
true;public;1;4;/**  * Should information about plugins be returned  * @param plugins true if you want info  * @return The request  */ ;/**  * Should information about plugins be returned  * @param plugins true if you want info  * @return The request  */ public NodesInfoRequest plugins(boolean plugins) {     this.plugins = plugins.     return this. }
true;public;0;3;/**  * @return true if information about plugins is requested  */ ;/**  * @return true if information about plugins is requested  */ public boolean plugins() {     return plugins. }
true;public;1;4;/**  * Should information about ingest be returned  * @param ingest true if you want info  */ ;/**  * Should information about ingest be returned  * @param ingest true if you want info  */ public NodesInfoRequest ingest(boolean ingest) {     this.ingest = ingest.     return this. }
true;public;0;3;/**  * @return true if information about ingest is requested  */ ;/**  * @return true if information about ingest is requested  */ public boolean ingest() {     return ingest. }
true;public;1;4;/**  * Should information about indices (currently just indexing buffers) be returned  * @param indices true if you want info  */ ;/**  * Should information about indices (currently just indexing buffers) be returned  * @param indices true if you want info  */ public NodesInfoRequest indices(boolean indices) {     this.indices = indices.     return this. }
true;public;0;3;/**  * @return true if information about indices (currently just indexing buffers)  */ ;/**  * @return true if information about indices (currently just indexing buffers)  */ public boolean indices() {     return indices. }
false;public;1;14;;@Override public void readFrom(StreamInput in) throws IOException {     super.readFrom(in).     settings = in.readBoolean().     os = in.readBoolean().     process = in.readBoolean().     jvm = in.readBoolean().     threadPool = in.readBoolean().     transport = in.readBoolean().     http = in.readBoolean().     plugins = in.readBoolean().     ingest = in.readBoolean().     indices = in.readBoolean(). }
false;public;1;14;;@Override public void writeTo(StreamOutput out) throws IOException {     super.writeTo(out).     out.writeBoolean(settings).     out.writeBoolean(os).     out.writeBoolean(process).     out.writeBoolean(jvm).     out.writeBoolean(threadPool).     out.writeBoolean(transport).     out.writeBoolean(http).     out.writeBoolean(plugins).     out.writeBoolean(ingest).     out.writeBoolean(indices). }
