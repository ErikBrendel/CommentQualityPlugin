# id;timestamp;commentText;codeText;commentWords;codeWords
TermVectorsRequest -> public TermVectorsRequest positions(boolean positions);1524684173;Return the positions for each term if stored or skip.;public TermVectorsRequest positions(boolean positions) {_        setFlag(Flag.Positions, positions)__        return this__    };return,the,positions,for,each,term,if,stored,or,skip;public,term,vectors,request,positions,boolean,positions,set,flag,flag,positions,positions,return,this
TermVectorsRequest -> public TermVectorsRequest positions(boolean positions);1525334055;Return the positions for each term if stored or skip.;public TermVectorsRequest positions(boolean positions) {_        setFlag(Flag.Positions, positions)__        return this__    };return,the,positions,for,each,term,if,stored,or,skip;public,term,vectors,request,positions,boolean,positions,set,flag,flag,positions,positions,return,this
TermVectorsRequest -> public TermVectorsRequest positions(boolean positions);1535139672;Return the positions for each term if stored or skip.;public TermVectorsRequest positions(boolean positions) {_        setFlag(Flag.Positions, positions)__        return this__    };return,the,positions,for,each,term,if,stored,or,skip;public,term,vectors,request,positions,boolean,positions,set,flag,flag,positions,positions,return,this
TermVectorsRequest -> public TermVectorsRequest positions(boolean positions);1541592065;Return the positions for each term if stored or skip.;public TermVectorsRequest positions(boolean positions) {_        setFlag(Flag.Positions, positions)__        return this__    };return,the,positions,for,each,term,if,stored,or,skip;public,term,vectors,request,positions,boolean,positions,set,flag,flag,positions,positions,return,this
TermVectorsRequest -> public TermVectorsRequest positions(boolean positions);1542402699;Return the positions for each term if stored or skip.;public TermVectorsRequest positions(boolean positions) {_        setFlag(Flag.Positions, positions)__        return this__    };return,the,positions,for,each,term,if,stored,or,skip;public,term,vectors,request,positions,boolean,positions,set,flag,flag,positions,positions,return,this
TermVectorsRequest -> public TermVectorsRequest positions(boolean positions);1544120595;Return the positions for each term if stored or skip.;public TermVectorsRequest positions(boolean positions) {_        setFlag(Flag.Positions, positions)__        return this__    };return,the,positions,for,each,term,if,stored,or,skip;public,term,vectors,request,positions,boolean,positions,set,flag,flag,positions,positions,return,this
TermVectorsRequest -> public TermVectorsRequest positions(boolean positions);1544210484;Return the positions for each term if stored or skip.;public TermVectorsRequest positions(boolean positions) {_        setFlag(Flag.Positions, positions)__        return this__    };return,the,positions,for,each,term,if,stored,or,skip;public,term,vectors,request,positions,boolean,positions,set,flag,flag,positions,positions,return,this
TermVectorsRequest -> public boolean fieldStatistics();1524684173;@return <code>true</code> if field statistics should be returned._Otherwise <code>false</code>;public boolean fieldStatistics() {_        return flagsEnum.contains(Flag.FieldStatistics)__    };return,code,true,code,if,field,statistics,should,be,returned,otherwise,code,false,code;public,boolean,field,statistics,return,flags,enum,contains,flag,field,statistics
TermVectorsRequest -> public boolean fieldStatistics();1525334055;@return <code>true</code> if field statistics should be returned._Otherwise <code>false</code>;public boolean fieldStatistics() {_        return flagsEnum.contains(Flag.FieldStatistics)__    };return,code,true,code,if,field,statistics,should,be,returned,otherwise,code,false,code;public,boolean,field,statistics,return,flags,enum,contains,flag,field,statistics
TermVectorsRequest -> public boolean fieldStatistics();1535139672;@return <code>true</code> if field statistics should be returned._Otherwise <code>false</code>;public boolean fieldStatistics() {_        return flagsEnum.contains(Flag.FieldStatistics)__    };return,code,true,code,if,field,statistics,should,be,returned,otherwise,code,false,code;public,boolean,field,statistics,return,flags,enum,contains,flag,field,statistics
TermVectorsRequest -> public boolean fieldStatistics();1541592065;@return <code>true</code> if field statistics should be returned._Otherwise <code>false</code>;public boolean fieldStatistics() {_        return flagsEnum.contains(Flag.FieldStatistics)__    };return,code,true,code,if,field,statistics,should,be,returned,otherwise,code,false,code;public,boolean,field,statistics,return,flags,enum,contains,flag,field,statistics
TermVectorsRequest -> public boolean fieldStatistics();1542402699;@return <code>true</code> if field statistics should be returned._Otherwise <code>false</code>;public boolean fieldStatistics() {_        return flagsEnum.contains(Flag.FieldStatistics)__    };return,code,true,code,if,field,statistics,should,be,returned,otherwise,code,false,code;public,boolean,field,statistics,return,flags,enum,contains,flag,field,statistics
TermVectorsRequest -> public boolean fieldStatistics();1544120595;@return <code>true</code> if field statistics should be returned._Otherwise <code>false</code>;public boolean fieldStatistics() {_        return flagsEnum.contains(Flag.FieldStatistics)__    };return,code,true,code,if,field,statistics,should,be,returned,otherwise,code,false,code;public,boolean,field,statistics,return,flags,enum,contains,flag,field,statistics
TermVectorsRequest -> public boolean fieldStatistics();1544210484;@return <code>true</code> if field statistics should be returned._Otherwise <code>false</code>;public boolean fieldStatistics() {_        return flagsEnum.contains(Flag.FieldStatistics)__    };return,code,true,code,if,field,statistics,should,be,returned,otherwise,code,false,code;public,boolean,field,statistics,return,flags,enum,contains,flag,field,statistics
TermVectorsRequest -> public String type();1524684173;Returns the type of document to get the term vector for.;public String type() {_        return type__    };returns,the,type,of,document,to,get,the,term,vector,for;public,string,type,return,type
TermVectorsRequest -> public String type();1525334055;Returns the type of document to get the term vector for.;public String type() {_        return type__    };returns,the,type,of,document,to,get,the,term,vector,for;public,string,type,return,type
TermVectorsRequest -> public String type();1535139672;Returns the type of document to get the term vector for.;public String type() {_        return type__    };returns,the,type,of,document,to,get,the,term,vector,for;public,string,type,return,type
TermVectorsRequest -> public String type();1541592065;Returns the type of document to get the term vector for.;public String type() {_        return type__    };returns,the,type,of,document,to,get,the,term,vector,for;public,string,type,return,type
TermVectorsRequest -> public String type();1542402699;Returns the type of document to get the term vector for.;public String type() {_        return type__    };returns,the,type,of,document,to,get,the,term,vector,for;public,string,type,return,type
TermVectorsRequest -> public String type();1544120595;Returns the type of document to get the term vector for.;public String type() {_        return type__    };returns,the,type,of,document,to,get,the,term,vector,for;public,string,type,return,type
TermVectorsRequest -> public String type();1544210484;Returns the type of document to get the term vector for.;public String type() {_        return type__    };returns,the,type,of,document,to,get,the,term,vector,for;public,string,type,return,type
TermVectorsRequest -> public Set<String> selectedFields();1524684173;Return only term vectors for special selected fields. Returns for term_vectors for all fields if selectedFields == null;public Set<String> selectedFields() {_        return selectedFields__    };return,only,term,vectors,for,special,selected,fields,returns,for,term,vectors,for,all,fields,if,selected,fields,null;public,set,string,selected,fields,return,selected,fields
TermVectorsRequest -> public Set<String> selectedFields();1525334055;Return only term vectors for special selected fields. Returns for term_vectors for all fields if selectedFields == null;public Set<String> selectedFields() {_        return selectedFields__    };return,only,term,vectors,for,special,selected,fields,returns,for,term,vectors,for,all,fields,if,selected,fields,null;public,set,string,selected,fields,return,selected,fields
TermVectorsRequest -> public Set<String> selectedFields();1535139672;Return only term vectors for special selected fields. Returns for term_vectors for all fields if selectedFields == null;public Set<String> selectedFields() {_        return selectedFields__    };return,only,term,vectors,for,special,selected,fields,returns,for,term,vectors,for,all,fields,if,selected,fields,null;public,set,string,selected,fields,return,selected,fields
TermVectorsRequest -> public Set<String> selectedFields();1541592065;Return only term vectors for special selected fields. Returns for term_vectors for all fields if selectedFields == null;public Set<String> selectedFields() {_        return selectedFields__    };return,only,term,vectors,for,special,selected,fields,returns,for,term,vectors,for,all,fields,if,selected,fields,null;public,set,string,selected,fields,return,selected,fields
TermVectorsRequest -> public Set<String> selectedFields();1542402699;Return only term vectors for special selected fields. Returns for term_vectors for all fields if selectedFields == null;public Set<String> selectedFields() {_        return selectedFields__    };return,only,term,vectors,for,special,selected,fields,returns,for,term,vectors,for,all,fields,if,selected,fields,null;public,set,string,selected,fields,return,selected,fields
TermVectorsRequest -> public Set<String> selectedFields();1544120595;Return only term vectors for special selected fields. Returns for term_vectors for all fields if selectedFields == null;public Set<String> selectedFields() {_        return selectedFields__    };return,only,term,vectors,for,special,selected,fields,returns,for,term,vectors,for,all,fields,if,selected,fields,null;public,set,string,selected,fields,return,selected,fields
TermVectorsRequest -> public Set<String> selectedFields();1544210484;Return only term vectors for special selected fields. Returns for term_vectors for all fields if selectedFields == null;public Set<String> selectedFields() {_        return selectedFields__    };return,only,term,vectors,for,special,selected,fields,returns,for,term,vectors,for,all,fields,if,selected,fields,null;public,set,string,selected,fields,return,selected,fields
TermVectorsRequest -> public TermVectorsRequest type(String type);1524684173;Sets the type of document to get the term vector for.;public TermVectorsRequest type(String type) {_        this.type = type__        return this__    };sets,the,type,of,document,to,get,the,term,vector,for;public,term,vectors,request,type,string,type,this,type,type,return,this
TermVectorsRequest -> public TermVectorsRequest type(String type);1525334055;Sets the type of document to get the term vector for.;public TermVectorsRequest type(String type) {_        this.type = type__        return this__    };sets,the,type,of,document,to,get,the,term,vector,for;public,term,vectors,request,type,string,type,this,type,type,return,this
TermVectorsRequest -> public TermVectorsRequest type(String type);1535139672;Sets the type of document to get the term vector for.;public TermVectorsRequest type(String type) {_        this.type = type__        return this__    };sets,the,type,of,document,to,get,the,term,vector,for;public,term,vectors,request,type,string,type,this,type,type,return,this
TermVectorsRequest -> public TermVectorsRequest type(String type);1541592065;Sets the type of document to get the term vector for.;public TermVectorsRequest type(String type) {_        this.type = type__        return this__    };sets,the,type,of,document,to,get,the,term,vector,for;public,term,vectors,request,type,string,type,this,type,type,return,this
TermVectorsRequest -> public TermVectorsRequest type(String type);1542402699;Sets the type of document to get the term vector for.;public TermVectorsRequest type(String type) {_        this.type = type__        return this__    };sets,the,type,of,document,to,get,the,term,vector,for;public,term,vectors,request,type,string,type,this,type,type,return,this
TermVectorsRequest -> public TermVectorsRequest type(String type);1544120595;Sets the type of document to get the term vector for.;public TermVectorsRequest type(String type) {_        this.type = type__        return this__    };sets,the,type,of,document,to,get,the,term,vector,for;public,term,vectors,request,type,string,type,this,type,type,return,this
TermVectorsRequest -> public TermVectorsRequest type(String type);1544210484;Sets the type of document to get the term vector for.;public TermVectorsRequest type(String type) {_        this.type = type__        return this__    };sets,the,type,of,document,to,get,the,term,vector,for;public,term,vectors,request,type,string,type,this,type,type,return,this
TermVectorsRequest -> public TermVectorsRequest doc(BytesReference doc, boolean generateRandomId, XContentType xContentType);1524684173;Sets an artificial document from which term vectors are requested for.;public TermVectorsRequest doc(BytesReference doc, boolean generateRandomId, XContentType xContentType) {_        _        if (generateRandomId) {_            this.id(String.valueOf(randomInt.getAndAdd(1)))__        }_        this.doc = doc__        this.xContentType = xContentType__        return this__    };sets,an,artificial,document,from,which,term,vectors,are,requested,for;public,term,vectors,request,doc,bytes,reference,doc,boolean,generate,random,id,xcontent,type,x,content,type,if,generate,random,id,this,id,string,value,of,random,int,get,and,add,1,this,doc,doc,this,x,content,type,x,content,type,return,this
TermVectorsRequest -> public TermVectorsRequest doc(BytesReference doc, boolean generateRandomId, XContentType xContentType);1525334055;Sets an artificial document from which term vectors are requested for.;public TermVectorsRequest doc(BytesReference doc, boolean generateRandomId, XContentType xContentType) {_        _        if (generateRandomId) {_            this.id(String.valueOf(randomInt.getAndAdd(1)))__        }_        this.doc = doc__        this.xContentType = xContentType__        return this__    };sets,an,artificial,document,from,which,term,vectors,are,requested,for;public,term,vectors,request,doc,bytes,reference,doc,boolean,generate,random,id,xcontent,type,x,content,type,if,generate,random,id,this,id,string,value,of,random,int,get,and,add,1,this,doc,doc,this,x,content,type,x,content,type,return,this
TermVectorsRequest -> public TermVectorsRequest doc(BytesReference doc, boolean generateRandomId, XContentType xContentType);1535139672;Sets an artificial document from which term vectors are requested for.;public TermVectorsRequest doc(BytesReference doc, boolean generateRandomId, XContentType xContentType) {_        _        if (generateRandomId) {_            this.id(String.valueOf(randomInt.getAndAdd(1)))__        }_        this.doc = doc__        this.xContentType = xContentType__        return this__    };sets,an,artificial,document,from,which,term,vectors,are,requested,for;public,term,vectors,request,doc,bytes,reference,doc,boolean,generate,random,id,xcontent,type,x,content,type,if,generate,random,id,this,id,string,value,of,random,int,get,and,add,1,this,doc,doc,this,x,content,type,x,content,type,return,this
TermVectorsRequest -> public TermVectorsRequest doc(BytesReference doc, boolean generateRandomId, XContentType xContentType);1541592065;Sets an artificial document from which term vectors are requested for.;public TermVectorsRequest doc(BytesReference doc, boolean generateRandomId, XContentType xContentType) {_        _        if (generateRandomId) {_            this.id(String.valueOf(randomInt.getAndAdd(1)))__        }_        this.doc = doc__        this.xContentType = xContentType__        return this__    };sets,an,artificial,document,from,which,term,vectors,are,requested,for;public,term,vectors,request,doc,bytes,reference,doc,boolean,generate,random,id,xcontent,type,x,content,type,if,generate,random,id,this,id,string,value,of,random,int,get,and,add,1,this,doc,doc,this,x,content,type,x,content,type,return,this
TermVectorsRequest -> public TermVectorsRequest doc(BytesReference doc, boolean generateRandomId, XContentType xContentType);1542402699;Sets an artificial document from which term vectors are requested for.;public TermVectorsRequest doc(BytesReference doc, boolean generateRandomId, XContentType xContentType) {_        _        if (generateRandomId) {_            this.id(String.valueOf(randomInt.getAndAdd(1)))__        }_        this.doc = doc__        this.xContentType = xContentType__        return this__    };sets,an,artificial,document,from,which,term,vectors,are,requested,for;public,term,vectors,request,doc,bytes,reference,doc,boolean,generate,random,id,xcontent,type,x,content,type,if,generate,random,id,this,id,string,value,of,random,int,get,and,add,1,this,doc,doc,this,x,content,type,x,content,type,return,this
TermVectorsRequest -> public TermVectorsRequest doc(BytesReference doc, boolean generateRandomId, XContentType xContentType);1544120595;Sets an artificial document from which term vectors are requested for.;public TermVectorsRequest doc(BytesReference doc, boolean generateRandomId, XContentType xContentType) {_        _        if (generateRandomId) {_            this.id(String.valueOf(randomInt.getAndAdd(1)))__        }_        this.doc = doc__        this.xContentType = xContentType__        return this__    };sets,an,artificial,document,from,which,term,vectors,are,requested,for;public,term,vectors,request,doc,bytes,reference,doc,boolean,generate,random,id,xcontent,type,x,content,type,if,generate,random,id,this,id,string,value,of,random,int,get,and,add,1,this,doc,doc,this,x,content,type,x,content,type,return,this
TermVectorsRequest -> public TermVectorsRequest doc(BytesReference doc, boolean generateRandomId, XContentType xContentType);1544210484;Sets an artificial document from which term vectors are requested for.;public TermVectorsRequest doc(BytesReference doc, boolean generateRandomId, XContentType xContentType) {_        _        if (generateRandomId) {_            this.id(String.valueOf(randomInt.getAndAdd(1)))__        }_        this.doc = doc__        this.xContentType = xContentType__        return this__    };sets,an,artificial,document,from,which,term,vectors,are,requested,for;public,term,vectors,request,doc,bytes,reference,doc,boolean,generate,random,id,xcontent,type,x,content,type,if,generate,random,id,this,id,string,value,of,random,int,get,and,add,1,this,doc,doc,this,x,content,type,x,content,type,return,this
TermVectorsRequest -> public TermVectorsRequest doc(XContentBuilder documentBuilder);1524684173;Sets an artificial document from which term vectors are requested for.;public TermVectorsRequest doc(XContentBuilder documentBuilder) {_        return this.doc(BytesReference.bytes(documentBuilder), true, documentBuilder.contentType())__    };sets,an,artificial,document,from,which,term,vectors,are,requested,for;public,term,vectors,request,doc,xcontent,builder,document,builder,return,this,doc,bytes,reference,bytes,document,builder,true,document,builder,content,type
TermVectorsRequest -> public TermVectorsRequest doc(XContentBuilder documentBuilder);1525334055;Sets an artificial document from which term vectors are requested for.;public TermVectorsRequest doc(XContentBuilder documentBuilder) {_        return this.doc(BytesReference.bytes(documentBuilder), true, documentBuilder.contentType())__    };sets,an,artificial,document,from,which,term,vectors,are,requested,for;public,term,vectors,request,doc,xcontent,builder,document,builder,return,this,doc,bytes,reference,bytes,document,builder,true,document,builder,content,type
TermVectorsRequest -> public TermVectorsRequest doc(XContentBuilder documentBuilder);1535139672;Sets an artificial document from which term vectors are requested for.;public TermVectorsRequest doc(XContentBuilder documentBuilder) {_        return this.doc(BytesReference.bytes(documentBuilder), true, documentBuilder.contentType())__    };sets,an,artificial,document,from,which,term,vectors,are,requested,for;public,term,vectors,request,doc,xcontent,builder,document,builder,return,this,doc,bytes,reference,bytes,document,builder,true,document,builder,content,type
TermVectorsRequest -> public TermVectorsRequest doc(XContentBuilder documentBuilder);1541592065;Sets an artificial document from which term vectors are requested for.;public TermVectorsRequest doc(XContentBuilder documentBuilder) {_        return this.doc(BytesReference.bytes(documentBuilder), true, documentBuilder.contentType())__    };sets,an,artificial,document,from,which,term,vectors,are,requested,for;public,term,vectors,request,doc,xcontent,builder,document,builder,return,this,doc,bytes,reference,bytes,document,builder,true,document,builder,content,type
TermVectorsRequest -> public TermVectorsRequest doc(XContentBuilder documentBuilder);1542402699;Sets an artificial document from which term vectors are requested for.;public TermVectorsRequest doc(XContentBuilder documentBuilder) {_        return this.doc(BytesReference.bytes(documentBuilder), true, documentBuilder.contentType())__    };sets,an,artificial,document,from,which,term,vectors,are,requested,for;public,term,vectors,request,doc,xcontent,builder,document,builder,return,this,doc,bytes,reference,bytes,document,builder,true,document,builder,content,type
TermVectorsRequest -> public TermVectorsRequest doc(XContentBuilder documentBuilder);1544120595;Sets an artificial document from which term vectors are requested for.;public TermVectorsRequest doc(XContentBuilder documentBuilder) {_        return this.doc(BytesReference.bytes(documentBuilder), true, documentBuilder.contentType())__    };sets,an,artificial,document,from,which,term,vectors,are,requested,for;public,term,vectors,request,doc,xcontent,builder,document,builder,return,this,doc,bytes,reference,bytes,document,builder,true,document,builder,content,type
TermVectorsRequest -> public TermVectorsRequest doc(XContentBuilder documentBuilder);1544210484;Sets an artificial document from which term vectors are requested for.;public TermVectorsRequest doc(XContentBuilder documentBuilder) {_        return this.doc(BytesReference.bytes(documentBuilder), true, documentBuilder.contentType())__    };sets,an,artificial,document,from,which,term,vectors,are,requested,for;public,term,vectors,request,doc,xcontent,builder,document,builder,return,this,doc,bytes,reference,bytes,document,builder,true,document,builder,content,type
TermVectorsRequest -> public BytesReference doc();1524684173;Returns the artificial document from which term vectors are requested for.;public BytesReference doc() {_        return doc__    };returns,the,artificial,document,from,which,term,vectors,are,requested,for;public,bytes,reference,doc,return,doc
TermVectorsRequest -> public BytesReference doc();1525334055;Returns the artificial document from which term vectors are requested for.;public BytesReference doc() {_        return doc__    };returns,the,artificial,document,from,which,term,vectors,are,requested,for;public,bytes,reference,doc,return,doc
TermVectorsRequest -> public BytesReference doc();1535139672;Returns the artificial document from which term vectors are requested for.;public BytesReference doc() {_        return doc__    };returns,the,artificial,document,from,which,term,vectors,are,requested,for;public,bytes,reference,doc,return,doc
TermVectorsRequest -> public BytesReference doc();1541592065;Returns the artificial document from which term vectors are requested for.;public BytesReference doc() {_        return doc__    };returns,the,artificial,document,from,which,term,vectors,are,requested,for;public,bytes,reference,doc,return,doc
TermVectorsRequest -> public BytesReference doc();1542402699;Returns the artificial document from which term vectors are requested for.;public BytesReference doc() {_        return doc__    };returns,the,artificial,document,from,which,term,vectors,are,requested,for;public,bytes,reference,doc,return,doc
TermVectorsRequest -> public BytesReference doc();1544120595;Returns the artificial document from which term vectors are requested for.;public BytesReference doc() {_        return doc__    };returns,the,artificial,document,from,which,term,vectors,are,requested,for;public,bytes,reference,doc,return,doc
TermVectorsRequest -> public BytesReference doc();1544210484;Returns the artificial document from which term vectors are requested for.;public BytesReference doc() {_        return doc__    };returns,the,artificial,document,from,which,term,vectors,are,requested,for;public,bytes,reference,doc,return,doc
TermVectorsRequest -> public TermVectorsRequest filterSettings(FilterSettings settings);1524684173;Sets the settings for filtering out terms.;public TermVectorsRequest filterSettings(FilterSettings settings) {_        this.filterSettings = settings != null ? settings : null__        return this__    };sets,the,settings,for,filtering,out,terms;public,term,vectors,request,filter,settings,filter,settings,settings,this,filter,settings,settings,null,settings,null,return,this
TermVectorsRequest -> public TermVectorsRequest filterSettings(FilterSettings settings);1525334055;Sets the settings for filtering out terms.;public TermVectorsRequest filterSettings(FilterSettings settings) {_        this.filterSettings = settings != null ? settings : null__        return this__    };sets,the,settings,for,filtering,out,terms;public,term,vectors,request,filter,settings,filter,settings,settings,this,filter,settings,settings,null,settings,null,return,this
TermVectorsRequest -> public TermVectorsRequest filterSettings(FilterSettings settings);1535139672;Sets the settings for filtering out terms.;public TermVectorsRequest filterSettings(FilterSettings settings) {_        this.filterSettings = settings != null ? settings : null__        return this__    };sets,the,settings,for,filtering,out,terms;public,term,vectors,request,filter,settings,filter,settings,settings,this,filter,settings,settings,null,settings,null,return,this
TermVectorsRequest -> public TermVectorsRequest filterSettings(FilterSettings settings);1541592065;Sets the settings for filtering out terms.;public TermVectorsRequest filterSettings(FilterSettings settings) {_        this.filterSettings = settings != null ? settings : null__        return this__    };sets,the,settings,for,filtering,out,terms;public,term,vectors,request,filter,settings,filter,settings,settings,this,filter,settings,settings,null,settings,null,return,this
TermVectorsRequest -> public TermVectorsRequest filterSettings(FilterSettings settings);1542402699;Sets the settings for filtering out terms.;public TermVectorsRequest filterSettings(FilterSettings settings) {_        this.filterSettings = settings != null ? settings : null__        return this__    };sets,the,settings,for,filtering,out,terms;public,term,vectors,request,filter,settings,filter,settings,settings,this,filter,settings,settings,null,settings,null,return,this
TermVectorsRequest -> public TermVectorsRequest filterSettings(FilterSettings settings);1544120595;Sets the settings for filtering out terms.;public TermVectorsRequest filterSettings(FilterSettings settings) {_        this.filterSettings = settings != null ? settings : null__        return this__    };sets,the,settings,for,filtering,out,terms;public,term,vectors,request,filter,settings,filter,settings,settings,this,filter,settings,settings,null,settings,null,return,this
TermVectorsRequest -> public TermVectorsRequest filterSettings(FilterSettings settings);1544210484;Sets the settings for filtering out terms.;public TermVectorsRequest filterSettings(FilterSettings settings) {_        this.filterSettings = settings != null ? settings : null__        return this__    };sets,the,settings,for,filtering,out,terms;public,term,vectors,request,filter,settings,filter,settings,settings,this,filter,settings,settings,null,settings,null,return,this
TermVectorsRequest -> public String id();1524684173;Returns the id of document the term vector is requested for.;public String id() {_        return id__    };returns,the,id,of,document,the,term,vector,is,requested,for;public,string,id,return,id
TermVectorsRequest -> public String id();1525334055;Returns the id of document the term vector is requested for.;public String id() {_        return id__    };returns,the,id,of,document,the,term,vector,is,requested,for;public,string,id,return,id
TermVectorsRequest -> public String id();1535139672;Returns the id of document the term vector is requested for.;public String id() {_        return id__    };returns,the,id,of,document,the,term,vector,is,requested,for;public,string,id,return,id
TermVectorsRequest -> public String id();1541592065;Returns the id of document the term vector is requested for.;public String id() {_        return id__    };returns,the,id,of,document,the,term,vector,is,requested,for;public,string,id,return,id
TermVectorsRequest -> public String id();1542402699;Returns the id of document the term vector is requested for.;public String id() {_        return id__    };returns,the,id,of,document,the,term,vector,is,requested,for;public,string,id,return,id
TermVectorsRequest -> public String id();1544120595;Returns the id of document the term vector is requested for.;public String id() {_        return id__    };returns,the,id,of,document,the,term,vector,is,requested,for;public,string,id,return,id
TermVectorsRequest -> public String id();1544210484;Returns the id of document the term vector is requested for.;public String id() {_        return id__    };returns,the,id,of,document,the,term,vector,is,requested,for;public,string,id,return,id
TermVectorsRequest -> public TermVectorsRequest(String index, String type, String id);1524684173;Constructs a new term vector request for a document that will be fetch_from the provided index. Use {@link #type(String)} and_{@link #id(String)} to specify the document to load.;public TermVectorsRequest(String index, String type, String id) {_        super(index)__        this.id = id__        this.type = type__    };constructs,a,new,term,vector,request,for,a,document,that,will,be,fetch,from,the,provided,index,use,link,type,string,and,link,id,string,to,specify,the,document,to,load;public,term,vectors,request,string,index,string,type,string,id,super,index,this,id,id,this,type,type
TermVectorsRequest -> public TermVectorsRequest(String index, String type, String id);1525334055;Constructs a new term vector request for a document that will be fetch_from the provided index. Use {@link #type(String)} and_{@link #id(String)} to specify the document to load.;public TermVectorsRequest(String index, String type, String id) {_        super(index)__        this.id = id__        this.type = type__    };constructs,a,new,term,vector,request,for,a,document,that,will,be,fetch,from,the,provided,index,use,link,type,string,and,link,id,string,to,specify,the,document,to,load;public,term,vectors,request,string,index,string,type,string,id,super,index,this,id,id,this,type,type
TermVectorsRequest -> public TermVectorsRequest(String index, String type, String id);1535139672;Constructs a new term vector request for a document that will be fetch_from the provided index. Use {@link #type(String)} and_{@link #id(String)} to specify the document to load.;public TermVectorsRequest(String index, String type, String id) {_        super(index)__        this.id = id__        this.type = type__    };constructs,a,new,term,vector,request,for,a,document,that,will,be,fetch,from,the,provided,index,use,link,type,string,and,link,id,string,to,specify,the,document,to,load;public,term,vectors,request,string,index,string,type,string,id,super,index,this,id,id,this,type,type
TermVectorsRequest -> public TermVectorsRequest(String index, String type, String id);1541592065;Constructs a new term vector request for a document that will be fetch_from the provided index. Use {@link #type(String)} and_{@link #id(String)} to specify the document to load.;public TermVectorsRequest(String index, String type, String id) {_        super(index)__        this.id = id__        this.type = type__    };constructs,a,new,term,vector,request,for,a,document,that,will,be,fetch,from,the,provided,index,use,link,type,string,and,link,id,string,to,specify,the,document,to,load;public,term,vectors,request,string,index,string,type,string,id,super,index,this,id,id,this,type,type
TermVectorsRequest -> public TermVectorsRequest(String index, String type, String id);1542402699;Constructs a new term vector request for a document that will be fetch_from the provided index. Use {@link #type(String)} and_{@link #id(String)} to specify the document to load.;public TermVectorsRequest(String index, String type, String id) {_        super(index)__        this.id = id__        this.type = type__    };constructs,a,new,term,vector,request,for,a,document,that,will,be,fetch,from,the,provided,index,use,link,type,string,and,link,id,string,to,specify,the,document,to,load;public,term,vectors,request,string,index,string,type,string,id,super,index,this,id,id,this,type,type
TermVectorsRequest -> public TermVectorsRequest(String index, String type, String id);1544120595;Constructs a new term vector request for a document that will be fetch_from the provided index. Use {@link #type(String)} and_{@link #id(String)} to specify the document to load.;public TermVectorsRequest(String index, String type, String id) {_        super(index)__        this.id = id__        this.type = type__    };constructs,a,new,term,vector,request,for,a,document,that,will,be,fetch,from,the,provided,index,use,link,type,string,and,link,id,string,to,specify,the,document,to,load;public,term,vectors,request,string,index,string,type,string,id,super,index,this,id,id,this,type,type
TermVectorsRequest -> public TermVectorsRequest(String index, String type, String id);1544210484;Constructs a new term vector request for a document that will be fetch_from the provided index. Use {@link #type(String)} and_{@link #id(String)} to specify the document to load.;public TermVectorsRequest(String index, String type, String id) {_        super(index)__        this.id = id__        this.type = type__    };constructs,a,new,term,vector,request,for,a,document,that,will,be,fetch,from,the,provided,index,use,link,type,string,and,link,id,string,to,specify,the,document,to,load;public,term,vectors,request,string,index,string,type,string,id,super,index,this,id,id,this,type,type
TermVectorsRequest -> public boolean positions();1524684173;@return Returns if the positions for each term should be returned if_stored or skip.;public boolean positions() {_        return flagsEnum.contains(Flag.Positions)__    };return,returns,if,the,positions,for,each,term,should,be,returned,if,stored,or,skip;public,boolean,positions,return,flags,enum,contains,flag,positions
TermVectorsRequest -> public boolean positions();1525334055;@return Returns if the positions for each term should be returned if_stored or skip.;public boolean positions() {_        return flagsEnum.contains(Flag.Positions)__    };return,returns,if,the,positions,for,each,term,should,be,returned,if,stored,or,skip;public,boolean,positions,return,flags,enum,contains,flag,positions
TermVectorsRequest -> public boolean positions();1535139672;@return Returns if the positions for each term should be returned if_stored or skip.;public boolean positions() {_        return flagsEnum.contains(Flag.Positions)__    };return,returns,if,the,positions,for,each,term,should,be,returned,if,stored,or,skip;public,boolean,positions,return,flags,enum,contains,flag,positions
TermVectorsRequest -> public boolean positions();1541592065;@return Returns if the positions for each term should be returned if_stored or skip.;public boolean positions() {_        return flagsEnum.contains(Flag.Positions)__    };return,returns,if,the,positions,for,each,term,should,be,returned,if,stored,or,skip;public,boolean,positions,return,flags,enum,contains,flag,positions
TermVectorsRequest -> public boolean positions();1542402699;@return Returns if the positions for each term should be returned if_stored or skip.;public boolean positions() {_        return flagsEnum.contains(Flag.Positions)__    };return,returns,if,the,positions,for,each,term,should,be,returned,if,stored,or,skip;public,boolean,positions,return,flags,enum,contains,flag,positions
TermVectorsRequest -> public boolean positions();1544120595;@return Returns if the positions for each term should be returned if_stored or skip.;public boolean positions() {_        return flagsEnum.contains(Flag.Positions)__    };return,returns,if,the,positions,for,each,term,should,be,returned,if,stored,or,skip;public,boolean,positions,return,flags,enum,contains,flag,positions
TermVectorsRequest -> public boolean positions();1544210484;@return Returns if the positions for each term should be returned if_stored or skip.;public boolean positions() {_        return flagsEnum.contains(Flag.Positions)__    };return,returns,if,the,positions,for,each,term,should,be,returned,if,stored,or,skip;public,boolean,positions,return,flags,enum,contains,flag,positions
TermVectorsRequest -> public boolean realtime();1524684173;Return whether term vectors should be generated real-time (default to true).;public boolean realtime() {_        return this.realtime__    };return,whether,term,vectors,should,be,generated,real,time,default,to,true;public,boolean,realtime,return,this,realtime
TermVectorsRequest -> public boolean realtime();1525334055;Return whether term vectors should be generated real-time (default to true).;public boolean realtime() {_        return this.realtime__    };return,whether,term,vectors,should,be,generated,real,time,default,to,true;public,boolean,realtime,return,this,realtime
TermVectorsRequest -> public boolean realtime();1535139672;Return whether term vectors should be generated real-time (default to true).;public boolean realtime() {_        return this.realtime__    };return,whether,term,vectors,should,be,generated,real,time,default,to,true;public,boolean,realtime,return,this,realtime
TermVectorsRequest -> public boolean realtime();1541592065;Return whether term vectors should be generated real-time (default to true).;public boolean realtime() {_        return this.realtime__    };return,whether,term,vectors,should,be,generated,real,time,default,to,true;public,boolean,realtime,return,this,realtime
TermVectorsRequest -> public boolean realtime();1542402699;Return whether term vectors should be generated real-time (default to true).;public boolean realtime() {_        return this.realtime__    };return,whether,term,vectors,should,be,generated,real,time,default,to,true;public,boolean,realtime,return,this,realtime
TermVectorsRequest -> public boolean realtime();1544120595;Return whether term vectors should be generated real-time (default to true).;public boolean realtime() {_        return this.realtime__    };return,whether,term,vectors,should,be,generated,real,time,default,to,true;public,boolean,realtime,return,this,realtime
TermVectorsRequest -> public boolean realtime();1544210484;Return whether term vectors should be generated real-time (default to true).;public boolean realtime() {_        return this.realtime__    };return,whether,term,vectors,should,be,generated,real,time,default,to,true;public,boolean,realtime,return,this,realtime
TermVectorsRequest -> public Map<String, String> perFieldAnalyzer();1524684173;Return the overridden analyzers at each field.;public Map<String, String> perFieldAnalyzer() {_        return perFieldAnalyzer__    };return,the,overridden,analyzers,at,each,field;public,map,string,string,per,field,analyzer,return,per,field,analyzer
TermVectorsRequest -> public Map<String, String> perFieldAnalyzer();1525334055;Return the overridden analyzers at each field.;public Map<String, String> perFieldAnalyzer() {_        return perFieldAnalyzer__    };return,the,overridden,analyzers,at,each,field;public,map,string,string,per,field,analyzer,return,per,field,analyzer
TermVectorsRequest -> public Map<String, String> perFieldAnalyzer();1535139672;Return the overridden analyzers at each field.;public Map<String, String> perFieldAnalyzer() {_        return perFieldAnalyzer__    };return,the,overridden,analyzers,at,each,field;public,map,string,string,per,field,analyzer,return,per,field,analyzer
TermVectorsRequest -> public Map<String, String> perFieldAnalyzer();1541592065;Return the overridden analyzers at each field.;public Map<String, String> perFieldAnalyzer() {_        return perFieldAnalyzer__    };return,the,overridden,analyzers,at,each,field;public,map,string,string,per,field,analyzer,return,per,field,analyzer
TermVectorsRequest -> public Map<String, String> perFieldAnalyzer();1542402699;Return the overridden analyzers at each field.;public Map<String, String> perFieldAnalyzer() {_        return perFieldAnalyzer__    };return,the,overridden,analyzers,at,each,field;public,map,string,string,per,field,analyzer,return,per,field,analyzer
TermVectorsRequest -> public Map<String, String> perFieldAnalyzer();1544120595;Return the overridden analyzers at each field.;public Map<String, String> perFieldAnalyzer() {_        return perFieldAnalyzer__    };return,the,overridden,analyzers,at,each,field;public,map,string,string,per,field,analyzer,return,per,field,analyzer
TermVectorsRequest -> public Map<String, String> perFieldAnalyzer();1544210484;Return the overridden analyzers at each field.;public Map<String, String> perFieldAnalyzer() {_        return perFieldAnalyzer__    };return,the,overridden,analyzers,at,each,field;public,map,string,string,per,field,analyzer,return,per,field,analyzer
TermVectorsRequest -> public String routing();1524684173;@return The routing for this request.;public String routing() {_        return routing__    };return,the,routing,for,this,request;public,string,routing,return,routing
TermVectorsRequest -> public String routing();1525334055;@return The routing for this request.;public String routing() {_        return routing__    };return,the,routing,for,this,request;public,string,routing,return,routing
TermVectorsRequest -> public String routing();1535139672;@return The routing for this request.;public String routing() {_        return routing__    };return,the,routing,for,this,request;public,string,routing,return,routing
TermVectorsRequest -> public String routing();1541592065;@return The routing for this request.;public String routing() {_        return routing__    };return,the,routing,for,this,request;public,string,routing,return,routing
TermVectorsRequest -> public String routing();1542402699;@return The routing for this request.;public String routing() {_        return routing__    };return,the,routing,for,this,request;public,string,routing,return,routing
TermVectorsRequest -> public String routing();1544120595;@return The routing for this request.;public String routing() {_        return routing__    };return,the,routing,for,this,request;public,string,routing,return,routing
TermVectorsRequest -> public String routing();1544210484;@return The routing for this request.;public String routing() {_        return routing__    };return,the,routing,for,this,request;public,string,routing,return,routing
TermVectorsRequest -> public TermVectorsRequest id(String id);1524684173;Sets the id of document the term vector is requested for.;public TermVectorsRequest id(String id) {_        this.id = id__        return this__    };sets,the,id,of,document,the,term,vector,is,requested,for;public,term,vectors,request,id,string,id,this,id,id,return,this
TermVectorsRequest -> public TermVectorsRequest id(String id);1525334055;Sets the id of document the term vector is requested for.;public TermVectorsRequest id(String id) {_        this.id = id__        return this__    };sets,the,id,of,document,the,term,vector,is,requested,for;public,term,vectors,request,id,string,id,this,id,id,return,this
TermVectorsRequest -> public TermVectorsRequest id(String id);1535139672;Sets the id of document the term vector is requested for.;public TermVectorsRequest id(String id) {_        this.id = id__        return this__    };sets,the,id,of,document,the,term,vector,is,requested,for;public,term,vectors,request,id,string,id,this,id,id,return,this
TermVectorsRequest -> public TermVectorsRequest id(String id);1541592065;Sets the id of document the term vector is requested for.;public TermVectorsRequest id(String id) {_        this.id = id__        return this__    };sets,the,id,of,document,the,term,vector,is,requested,for;public,term,vectors,request,id,string,id,this,id,id,return,this
TermVectorsRequest -> public TermVectorsRequest id(String id);1542402699;Sets the id of document the term vector is requested for.;public TermVectorsRequest id(String id) {_        this.id = id__        return this__    };sets,the,id,of,document,the,term,vector,is,requested,for;public,term,vectors,request,id,string,id,this,id,id,return,this
TermVectorsRequest -> public TermVectorsRequest id(String id);1544120595;Sets the id of document the term vector is requested for.;public TermVectorsRequest id(String id) {_        this.id = id__        return this__    };sets,the,id,of,document,the,term,vector,is,requested,for;public,term,vectors,request,id,string,id,this,id,id,return,this
TermVectorsRequest -> public TermVectorsRequest id(String id);1544210484;Sets the id of document the term vector is requested for.;public TermVectorsRequest id(String id) {_        this.id = id__        return this__    };sets,the,id,of,document,the,term,vector,is,requested,for;public,term,vectors,request,id,string,id,this,id,id,return,this
TermVectorsRequest -> public TermVectorsRequest offsets(boolean offsets);1524684173;Return the start and stop offsets for each term if they were stored or_skip offsets.;public TermVectorsRequest offsets(boolean offsets) {_        setFlag(Flag.Offsets, offsets)__        return this__    };return,the,start,and,stop,offsets,for,each,term,if,they,were,stored,or,skip,offsets;public,term,vectors,request,offsets,boolean,offsets,set,flag,flag,offsets,offsets,return,this
TermVectorsRequest -> public TermVectorsRequest offsets(boolean offsets);1525334055;Return the start and stop offsets for each term if they were stored or_skip offsets.;public TermVectorsRequest offsets(boolean offsets) {_        setFlag(Flag.Offsets, offsets)__        return this__    };return,the,start,and,stop,offsets,for,each,term,if,they,were,stored,or,skip,offsets;public,term,vectors,request,offsets,boolean,offsets,set,flag,flag,offsets,offsets,return,this
TermVectorsRequest -> public TermVectorsRequest offsets(boolean offsets);1535139672;Return the start and stop offsets for each term if they were stored or_skip offsets.;public TermVectorsRequest offsets(boolean offsets) {_        setFlag(Flag.Offsets, offsets)__        return this__    };return,the,start,and,stop,offsets,for,each,term,if,they,were,stored,or,skip,offsets;public,term,vectors,request,offsets,boolean,offsets,set,flag,flag,offsets,offsets,return,this
TermVectorsRequest -> public TermVectorsRequest offsets(boolean offsets);1541592065;Return the start and stop offsets for each term if they were stored or_skip offsets.;public TermVectorsRequest offsets(boolean offsets) {_        setFlag(Flag.Offsets, offsets)__        return this__    };return,the,start,and,stop,offsets,for,each,term,if,they,were,stored,or,skip,offsets;public,term,vectors,request,offsets,boolean,offsets,set,flag,flag,offsets,offsets,return,this
TermVectorsRequest -> public TermVectorsRequest offsets(boolean offsets);1542402699;Return the start and stop offsets for each term if they were stored or_skip offsets.;public TermVectorsRequest offsets(boolean offsets) {_        setFlag(Flag.Offsets, offsets)__        return this__    };return,the,start,and,stop,offsets,for,each,term,if,they,were,stored,or,skip,offsets;public,term,vectors,request,offsets,boolean,offsets,set,flag,flag,offsets,offsets,return,this
TermVectorsRequest -> public TermVectorsRequest offsets(boolean offsets);1544120595;Return the start and stop offsets for each term if they were stored or_skip offsets.;public TermVectorsRequest offsets(boolean offsets) {_        setFlag(Flag.Offsets, offsets)__        return this__    };return,the,start,and,stop,offsets,for,each,term,if,they,were,stored,or,skip,offsets;public,term,vectors,request,offsets,boolean,offsets,set,flag,flag,offsets,offsets,return,this
TermVectorsRequest -> public TermVectorsRequest offsets(boolean offsets);1544210484;Return the start and stop offsets for each term if they were stored or_skip offsets.;public TermVectorsRequest offsets(boolean offsets) {_        setFlag(Flag.Offsets, offsets)__        return this__    };return,the,start,and,stop,offsets,for,each,term,if,they,were,stored,or,skip,offsets;public,term,vectors,request,offsets,boolean,offsets,set,flag,flag,offsets,offsets,return,this
TermVectorsRequest -> public boolean payloads();1524684173;@return <code>true</code> if term payloads should be returned. Otherwise_<code>false</code>;public boolean payloads() {_        return flagsEnum.contains(Flag.Payloads)__    };return,code,true,code,if,term,payloads,should,be,returned,otherwise,code,false,code;public,boolean,payloads,return,flags,enum,contains,flag,payloads
TermVectorsRequest -> public boolean payloads();1525334055;@return <code>true</code> if term payloads should be returned. Otherwise_<code>false</code>;public boolean payloads() {_        return flagsEnum.contains(Flag.Payloads)__    };return,code,true,code,if,term,payloads,should,be,returned,otherwise,code,false,code;public,boolean,payloads,return,flags,enum,contains,flag,payloads
TermVectorsRequest -> public boolean payloads();1535139672;@return <code>true</code> if term payloads should be returned. Otherwise_<code>false</code>;public boolean payloads() {_        return flagsEnum.contains(Flag.Payloads)__    };return,code,true,code,if,term,payloads,should,be,returned,otherwise,code,false,code;public,boolean,payloads,return,flags,enum,contains,flag,payloads
TermVectorsRequest -> public boolean payloads();1541592065;@return <code>true</code> if term payloads should be returned. Otherwise_<code>false</code>;public boolean payloads() {_        return flagsEnum.contains(Flag.Payloads)__    };return,code,true,code,if,term,payloads,should,be,returned,otherwise,code,false,code;public,boolean,payloads,return,flags,enum,contains,flag,payloads
TermVectorsRequest -> public boolean payloads();1542402699;@return <code>true</code> if term payloads should be returned. Otherwise_<code>false</code>;public boolean payloads() {_        return flagsEnum.contains(Flag.Payloads)__    };return,code,true,code,if,term,payloads,should,be,returned,otherwise,code,false,code;public,boolean,payloads,return,flags,enum,contains,flag,payloads
TermVectorsRequest -> public boolean payloads();1544120595;@return <code>true</code> if term payloads should be returned. Otherwise_<code>false</code>;public boolean payloads() {_        return flagsEnum.contains(Flag.Payloads)__    };return,code,true,code,if,term,payloads,should,be,returned,otherwise,code,false,code;public,boolean,payloads,return,flags,enum,contains,flag,payloads
TermVectorsRequest -> public boolean payloads();1544210484;@return <code>true</code> if term payloads should be returned. Otherwise_<code>false</code>;public boolean payloads() {_        return flagsEnum.contains(Flag.Payloads)__    };return,code,true,code,if,term,payloads,should,be,returned,otherwise,code,false,code;public,boolean,payloads,return,flags,enum,contains,flag,payloads
TermVectorsRequest -> @Deprecated     public TermVectorsRequest doc(BytesReference doc, boolean generateRandomId);1524684173;Sets an artificial document from which term vectors are requested for._@deprecated use {@link #doc(BytesReference, boolean, XContentType)} to avoid content auto detection;@Deprecated_    public TermVectorsRequest doc(BytesReference doc, boolean generateRandomId) {_        return this.doc(doc, generateRandomId, XContentHelper.xContentType(doc))__    };sets,an,artificial,document,from,which,term,vectors,are,requested,for,deprecated,use,link,doc,bytes,reference,boolean,xcontent,type,to,avoid,content,auto,detection;deprecated,public,term,vectors,request,doc,bytes,reference,doc,boolean,generate,random,id,return,this,doc,doc,generate,random,id,xcontent,helper,x,content,type,doc
TermVectorsRequest -> @Deprecated     public TermVectorsRequest doc(BytesReference doc, boolean generateRandomId);1525334055;Sets an artificial document from which term vectors are requested for._@deprecated use {@link #doc(BytesReference, boolean, XContentType)} to avoid content auto detection;@Deprecated_    public TermVectorsRequest doc(BytesReference doc, boolean generateRandomId) {_        return this.doc(doc, generateRandomId, XContentHelper.xContentType(doc))__    };sets,an,artificial,document,from,which,term,vectors,are,requested,for,deprecated,use,link,doc,bytes,reference,boolean,xcontent,type,to,avoid,content,auto,detection;deprecated,public,term,vectors,request,doc,bytes,reference,doc,boolean,generate,random,id,return,this,doc,doc,generate,random,id,xcontent,helper,x,content,type,doc
TermVectorsRequest -> @Deprecated     public TermVectorsRequest doc(BytesReference doc, boolean generateRandomId);1535139672;Sets an artificial document from which term vectors are requested for._@deprecated use {@link #doc(BytesReference, boolean, XContentType)} to avoid content auto detection;@Deprecated_    public TermVectorsRequest doc(BytesReference doc, boolean generateRandomId) {_        return this.doc(doc, generateRandomId, XContentHelper.xContentType(doc))__    };sets,an,artificial,document,from,which,term,vectors,are,requested,for,deprecated,use,link,doc,bytes,reference,boolean,xcontent,type,to,avoid,content,auto,detection;deprecated,public,term,vectors,request,doc,bytes,reference,doc,boolean,generate,random,id,return,this,doc,doc,generate,random,id,xcontent,helper,x,content,type,doc
TermVectorsRequest -> @Deprecated     public TermVectorsRequest doc(BytesReference doc, boolean generateRandomId);1541592065;Sets an artificial document from which term vectors are requested for._@deprecated use {@link #doc(BytesReference, boolean, XContentType)} to avoid content auto detection;@Deprecated_    public TermVectorsRequest doc(BytesReference doc, boolean generateRandomId) {_        return this.doc(doc, generateRandomId, XContentHelper.xContentType(doc))__    };sets,an,artificial,document,from,which,term,vectors,are,requested,for,deprecated,use,link,doc,bytes,reference,boolean,xcontent,type,to,avoid,content,auto,detection;deprecated,public,term,vectors,request,doc,bytes,reference,doc,boolean,generate,random,id,return,this,doc,doc,generate,random,id,xcontent,helper,x,content,type,doc
TermVectorsRequest -> @Deprecated     public TermVectorsRequest doc(BytesReference doc, boolean generateRandomId);1542402699;Sets an artificial document from which term vectors are requested for._@deprecated use {@link #doc(BytesReference, boolean, XContentType)} to avoid content auto detection;@Deprecated_    public TermVectorsRequest doc(BytesReference doc, boolean generateRandomId) {_        return this.doc(doc, generateRandomId, XContentHelper.xContentType(doc))__    };sets,an,artificial,document,from,which,term,vectors,are,requested,for,deprecated,use,link,doc,bytes,reference,boolean,xcontent,type,to,avoid,content,auto,detection;deprecated,public,term,vectors,request,doc,bytes,reference,doc,boolean,generate,random,id,return,this,doc,doc,generate,random,id,xcontent,helper,x,content,type,doc
TermVectorsRequest -> @Deprecated     public TermVectorsRequest doc(BytesReference doc, boolean generateRandomId);1544120595;Sets an artificial document from which term vectors are requested for._@deprecated use {@link #doc(BytesReference, boolean, XContentType)} to avoid content auto detection;@Deprecated_    public TermVectorsRequest doc(BytesReference doc, boolean generateRandomId) {_        return this.doc(doc, generateRandomId, XContentHelper.xContentType(doc))__    };sets,an,artificial,document,from,which,term,vectors,are,requested,for,deprecated,use,link,doc,bytes,reference,boolean,xcontent,type,to,avoid,content,auto,detection;deprecated,public,term,vectors,request,doc,bytes,reference,doc,boolean,generate,random,id,return,this,doc,doc,generate,random,id,xcontent,helper,x,content,type,doc
TermVectorsRequest -> @Deprecated     public TermVectorsRequest doc(BytesReference doc, boolean generateRandomId);1544210484;Sets an artificial document from which term vectors are requested for._@deprecated use {@link #doc(BytesReference, boolean, XContentType)} to avoid content auto detection;@Deprecated_    public TermVectorsRequest doc(BytesReference doc, boolean generateRandomId) {_        return this.doc(doc, generateRandomId, XContentHelper.xContentType(doc))__    };sets,an,artificial,document,from,which,term,vectors,are,requested,for,deprecated,use,link,doc,bytes,reference,boolean,xcontent,type,to,avoid,content,auto,detection;deprecated,public,term,vectors,request,doc,bytes,reference,doc,boolean,generate,random,id,return,this,doc,doc,generate,random,id,xcontent,helper,x,content,type,doc
TermVectorsRequest -> public TermVectorsRequest termStatistics(boolean termStatistics);1524684173;Return the term statistics for each term in the shard or skip.;public TermVectorsRequest termStatistics(boolean termStatistics) {_        setFlag(Flag.TermStatistics, termStatistics)__        return this__    };return,the,term,statistics,for,each,term,in,the,shard,or,skip;public,term,vectors,request,term,statistics,boolean,term,statistics,set,flag,flag,term,statistics,term,statistics,return,this
TermVectorsRequest -> public TermVectorsRequest termStatistics(boolean termStatistics);1525334055;Return the term statistics for each term in the shard or skip.;public TermVectorsRequest termStatistics(boolean termStatistics) {_        setFlag(Flag.TermStatistics, termStatistics)__        return this__    };return,the,term,statistics,for,each,term,in,the,shard,or,skip;public,term,vectors,request,term,statistics,boolean,term,statistics,set,flag,flag,term,statistics,term,statistics,return,this
TermVectorsRequest -> public TermVectorsRequest termStatistics(boolean termStatistics);1535139672;Return the term statistics for each term in the shard or skip.;public TermVectorsRequest termStatistics(boolean termStatistics) {_        setFlag(Flag.TermStatistics, termStatistics)__        return this__    };return,the,term,statistics,for,each,term,in,the,shard,or,skip;public,term,vectors,request,term,statistics,boolean,term,statistics,set,flag,flag,term,statistics,term,statistics,return,this
TermVectorsRequest -> public TermVectorsRequest termStatistics(boolean termStatistics);1541592065;Return the term statistics for each term in the shard or skip.;public TermVectorsRequest termStatistics(boolean termStatistics) {_        setFlag(Flag.TermStatistics, termStatistics)__        return this__    };return,the,term,statistics,for,each,term,in,the,shard,or,skip;public,term,vectors,request,term,statistics,boolean,term,statistics,set,flag,flag,term,statistics,term,statistics,return,this
TermVectorsRequest -> public TermVectorsRequest termStatistics(boolean termStatistics);1542402699;Return the term statistics for each term in the shard or skip.;public TermVectorsRequest termStatistics(boolean termStatistics) {_        setFlag(Flag.TermStatistics, termStatistics)__        return this__    };return,the,term,statistics,for,each,term,in,the,shard,or,skip;public,term,vectors,request,term,statistics,boolean,term,statistics,set,flag,flag,term,statistics,term,statistics,return,this
TermVectorsRequest -> public TermVectorsRequest termStatistics(boolean termStatistics);1544120595;Return the term statistics for each term in the shard or skip.;public TermVectorsRequest termStatistics(boolean termStatistics) {_        setFlag(Flag.TermStatistics, termStatistics)__        return this__    };return,the,term,statistics,for,each,term,in,the,shard,or,skip;public,term,vectors,request,term,statistics,boolean,term,statistics,set,flag,flag,term,statistics,term,statistics,return,this
TermVectorsRequest -> public TermVectorsRequest termStatistics(boolean termStatistics);1544210484;Return the term statistics for each term in the shard or skip.;public TermVectorsRequest termStatistics(boolean termStatistics) {_        setFlag(Flag.TermStatistics, termStatistics)__        return this__    };return,the,term,statistics,for,each,term,in,the,shard,or,skip;public,term,vectors,request,term,statistics,boolean,term,statistics,set,flag,flag,term,statistics,term,statistics,return,this
TermVectorsRequest -> public TermVectorsRequest selectedFields(String... fields);1524684173;Return only term vectors for special selected fields. Returns the term_vectors for all fields if selectedFields == null;public TermVectorsRequest selectedFields(String... fields) {_        selectedFields = fields != null && fields.length != 0 ? Sets.newHashSet(fields) : null__        return this__    };return,only,term,vectors,for,special,selected,fields,returns,the,term,vectors,for,all,fields,if,selected,fields,null;public,term,vectors,request,selected,fields,string,fields,selected,fields,fields,null,fields,length,0,sets,new,hash,set,fields,null,return,this
TermVectorsRequest -> public TermVectorsRequest selectedFields(String... fields);1525334055;Return only term vectors for special selected fields. Returns the term_vectors for all fields if selectedFields == null;public TermVectorsRequest selectedFields(String... fields) {_        selectedFields = fields != null && fields.length != 0 ? Sets.newHashSet(fields) : null__        return this__    };return,only,term,vectors,for,special,selected,fields,returns,the,term,vectors,for,all,fields,if,selected,fields,null;public,term,vectors,request,selected,fields,string,fields,selected,fields,fields,null,fields,length,0,sets,new,hash,set,fields,null,return,this
TermVectorsRequest -> public TermVectorsRequest selectedFields(String... fields);1535139672;Return only term vectors for special selected fields. Returns the term_vectors for all fields if selectedFields == null;public TermVectorsRequest selectedFields(String... fields) {_        selectedFields = fields != null && fields.length != 0 ? Sets.newHashSet(fields) : null__        return this__    };return,only,term,vectors,for,special,selected,fields,returns,the,term,vectors,for,all,fields,if,selected,fields,null;public,term,vectors,request,selected,fields,string,fields,selected,fields,fields,null,fields,length,0,sets,new,hash,set,fields,null,return,this
TermVectorsRequest -> public TermVectorsRequest selectedFields(String... fields);1541592065;Return only term vectors for special selected fields. Returns the term_vectors for all fields if selectedFields == null;public TermVectorsRequest selectedFields(String... fields) {_        selectedFields = fields != null && fields.length != 0 ? Sets.newHashSet(fields) : null__        return this__    };return,only,term,vectors,for,special,selected,fields,returns,the,term,vectors,for,all,fields,if,selected,fields,null;public,term,vectors,request,selected,fields,string,fields,selected,fields,fields,null,fields,length,0,sets,new,hash,set,fields,null,return,this
TermVectorsRequest -> public TermVectorsRequest selectedFields(String... fields);1542402699;Return only term vectors for special selected fields. Returns the term_vectors for all fields if selectedFields == null;public TermVectorsRequest selectedFields(String... fields) {_        selectedFields = fields != null && fields.length != 0 ? Sets.newHashSet(fields) : null__        return this__    };return,only,term,vectors,for,special,selected,fields,returns,the,term,vectors,for,all,fields,if,selected,fields,null;public,term,vectors,request,selected,fields,string,fields,selected,fields,fields,null,fields,length,0,sets,new,hash,set,fields,null,return,this
TermVectorsRequest -> public TermVectorsRequest selectedFields(String... fields);1544120595;Return only term vectors for special selected fields. Returns the term_vectors for all fields if selectedFields == null;public TermVectorsRequest selectedFields(String... fields) {_        selectedFields = fields != null && fields.length != 0 ? Sets.newHashSet(fields) : null__        return this__    };return,only,term,vectors,for,special,selected,fields,returns,the,term,vectors,for,all,fields,if,selected,fields,null;public,term,vectors,request,selected,fields,string,fields,selected,fields,fields,null,fields,length,0,sets,new,hash,set,fields,null,return,this
TermVectorsRequest -> public TermVectorsRequest selectedFields(String... fields);1544210484;Return only term vectors for special selected fields. Returns the term_vectors for all fields if selectedFields == null;public TermVectorsRequest selectedFields(String... fields) {_        selectedFields = fields != null && fields.length != 0 ? Sets.newHashSet(fields) : null__        return this__    };return,only,term,vectors,for,special,selected,fields,returns,the,term,vectors,for,all,fields,if,selected,fields,null;public,term,vectors,request,selected,fields,string,fields,selected,fields,fields,null,fields,length,0,sets,new,hash,set,fields,null,return,this
TermVectorsRequest -> public TermVectorsRequest preference(String preference);1524684173;Sets the preference to execute the search. Defaults to randomize across_shards. Can be set to <tt>_local</tt> to prefer local shards or a custom value,_which guarantees that the same order will be used across different_requests.;public TermVectorsRequest preference(String preference) {_        this.preference = preference__        return this__    };sets,the,preference,to,execute,the,search,defaults,to,randomize,across,shards,can,be,set,to,tt,tt,to,prefer,local,shards,or,a,custom,value,which,guarantees,that,the,same,order,will,be,used,across,different,requests;public,term,vectors,request,preference,string,preference,this,preference,preference,return,this
TermVectorsRequest -> public TermVectorsRequest preference(String preference);1525334055;Sets the preference to execute the search. Defaults to randomize across_shards. Can be set to {@code _local} to prefer local shards or a custom value,_which guarantees that the same order will be used across different_requests.;public TermVectorsRequest preference(String preference) {_        this.preference = preference__        return this__    };sets,the,preference,to,execute,the,search,defaults,to,randomize,across,shards,can,be,set,to,code,to,prefer,local,shards,or,a,custom,value,which,guarantees,that,the,same,order,will,be,used,across,different,requests;public,term,vectors,request,preference,string,preference,this,preference,preference,return,this
TermVectorsRequest -> public TermVectorsRequest preference(String preference);1535139672;Sets the preference to execute the search. Defaults to randomize across_shards. Can be set to {@code _local} to prefer local shards or a custom value,_which guarantees that the same order will be used across different_requests.;public TermVectorsRequest preference(String preference) {_        this.preference = preference__        return this__    };sets,the,preference,to,execute,the,search,defaults,to,randomize,across,shards,can,be,set,to,code,to,prefer,local,shards,or,a,custom,value,which,guarantees,that,the,same,order,will,be,used,across,different,requests;public,term,vectors,request,preference,string,preference,this,preference,preference,return,this
TermVectorsRequest -> public TermVectorsRequest preference(String preference);1541592065;Sets the preference to execute the search. Defaults to randomize across_shards. Can be set to {@code _local} to prefer local shards or a custom value,_which guarantees that the same order will be used across different_requests.;public TermVectorsRequest preference(String preference) {_        this.preference = preference__        return this__    };sets,the,preference,to,execute,the,search,defaults,to,randomize,across,shards,can,be,set,to,code,to,prefer,local,shards,or,a,custom,value,which,guarantees,that,the,same,order,will,be,used,across,different,requests;public,term,vectors,request,preference,string,preference,this,preference,preference,return,this
TermVectorsRequest -> public TermVectorsRequest preference(String preference);1542402699;Sets the preference to execute the search. Defaults to randomize across_shards. Can be set to {@code _local} to prefer local shards or a custom value,_which guarantees that the same order will be used across different_requests.;public TermVectorsRequest preference(String preference) {_        this.preference = preference__        return this__    };sets,the,preference,to,execute,the,search,defaults,to,randomize,across,shards,can,be,set,to,code,to,prefer,local,shards,or,a,custom,value,which,guarantees,that,the,same,order,will,be,used,across,different,requests;public,term,vectors,request,preference,string,preference,this,preference,preference,return,this
TermVectorsRequest -> public TermVectorsRequest preference(String preference);1544120595;Sets the preference to execute the search. Defaults to randomize across_shards. Can be set to {@code _local} to prefer local shards or a custom value,_which guarantees that the same order will be used across different_requests.;public TermVectorsRequest preference(String preference) {_        this.preference = preference__        return this__    };sets,the,preference,to,execute,the,search,defaults,to,randomize,across,shards,can,be,set,to,code,to,prefer,local,shards,or,a,custom,value,which,guarantees,that,the,same,order,will,be,used,across,different,requests;public,term,vectors,request,preference,string,preference,this,preference,preference,return,this
TermVectorsRequest -> public TermVectorsRequest preference(String preference);1544210484;Sets the preference to execute the search. Defaults to randomize across_shards. Can be set to {@code _local} to prefer local shards or a custom value,_which guarantees that the same order will be used across different_requests.;public TermVectorsRequest preference(String preference) {_        this.preference = preference__        return this__    };sets,the,preference,to,execute,the,search,defaults,to,randomize,across,shards,can,be,set,to,code,to,prefer,local,shards,or,a,custom,value,which,guarantees,that,the,same,order,will,be,used,across,different,requests;public,term,vectors,request,preference,string,preference,this,preference,preference,return,this
TermVectorsRequest -> public boolean offsets();1524684173;@return <code>true</code> if term offsets should be returned. Otherwise_<code>false</code>;public boolean offsets() {_        return flagsEnum.contains(Flag.Offsets)__    };return,code,true,code,if,term,offsets,should,be,returned,otherwise,code,false,code;public,boolean,offsets,return,flags,enum,contains,flag,offsets
TermVectorsRequest -> public boolean offsets();1525334055;@return <code>true</code> if term offsets should be returned. Otherwise_<code>false</code>;public boolean offsets() {_        return flagsEnum.contains(Flag.Offsets)__    };return,code,true,code,if,term,offsets,should,be,returned,otherwise,code,false,code;public,boolean,offsets,return,flags,enum,contains,flag,offsets
TermVectorsRequest -> public boolean offsets();1535139672;@return <code>true</code> if term offsets should be returned. Otherwise_<code>false</code>;public boolean offsets() {_        return flagsEnum.contains(Flag.Offsets)__    };return,code,true,code,if,term,offsets,should,be,returned,otherwise,code,false,code;public,boolean,offsets,return,flags,enum,contains,flag,offsets
TermVectorsRequest -> public boolean offsets();1541592065;@return <code>true</code> if term offsets should be returned. Otherwise_<code>false</code>;public boolean offsets() {_        return flagsEnum.contains(Flag.Offsets)__    };return,code,true,code,if,term,offsets,should,be,returned,otherwise,code,false,code;public,boolean,offsets,return,flags,enum,contains,flag,offsets
TermVectorsRequest -> public boolean offsets();1542402699;@return <code>true</code> if term offsets should be returned. Otherwise_<code>false</code>;public boolean offsets() {_        return flagsEnum.contains(Flag.Offsets)__    };return,code,true,code,if,term,offsets,should,be,returned,otherwise,code,false,code;public,boolean,offsets,return,flags,enum,contains,flag,offsets
TermVectorsRequest -> public boolean offsets();1544120595;@return <code>true</code> if term offsets should be returned. Otherwise_<code>false</code>;public boolean offsets() {_        return flagsEnum.contains(Flag.Offsets)__    };return,code,true,code,if,term,offsets,should,be,returned,otherwise,code,false,code;public,boolean,offsets,return,flags,enum,contains,flag,offsets
TermVectorsRequest -> public boolean offsets();1544210484;@return <code>true</code> if term offsets should be returned. Otherwise_<code>false</code>;public boolean offsets() {_        return flagsEnum.contains(Flag.Offsets)__    };return,code,true,code,if,term,offsets,should,be,returned,otherwise,code,false,code;public,boolean,offsets,return,flags,enum,contains,flag,offsets
TermVectorsRequest -> public TermVectorsRequest(TermVectorsRequest other);1524684173;Constructs a new term vector request for a document that will be fetch_from the provided index. Use {@link #type(String)} and_{@link #id(String)} to specify the document to load.;public TermVectorsRequest(TermVectorsRequest other) {_        super(other.index())__        this.id = other.id()__        this.type = other.type()__        if (other.doc != null) {_            this.doc = new BytesArray(other.doc().toBytesRef(), true)__            this.xContentType = other.xContentType__        }_        this.flagsEnum = other.getFlags().clone()__        this.preference = other.preference()__        this.routing = other.routing()__        if (other.selectedFields != null) {_            this.selectedFields = new HashSet<>(other.selectedFields)__        }_        if (other.perFieldAnalyzer != null) {_            this.perFieldAnalyzer = new HashMap<>(other.perFieldAnalyzer)__        }_        this.realtime = other.realtime()__        this.version = other.version()__        this.versionType = VersionType.fromValue(other.versionType().getValue())__        this.filterSettings = other.filterSettings()__    };constructs,a,new,term,vector,request,for,a,document,that,will,be,fetch,from,the,provided,index,use,link,type,string,and,link,id,string,to,specify,the,document,to,load;public,term,vectors,request,term,vectors,request,other,super,other,index,this,id,other,id,this,type,other,type,if,other,doc,null,this,doc,new,bytes,array,other,doc,to,bytes,ref,true,this,x,content,type,other,x,content,type,this,flags,enum,other,get,flags,clone,this,preference,other,preference,this,routing,other,routing,if,other,selected,fields,null,this,selected,fields,new,hash,set,other,selected,fields,if,other,per,field,analyzer,null,this,per,field,analyzer,new,hash,map,other,per,field,analyzer,this,realtime,other,realtime,this,version,other,version,this,version,type,version,type,from,value,other,version,type,get,value,this,filter,settings,other,filter,settings
TermVectorsRequest -> public TermVectorsRequest(TermVectorsRequest other);1525334055;Constructs a new term vector request for a document that will be fetch_from the provided index. Use {@link #type(String)} and_{@link #id(String)} to specify the document to load.;public TermVectorsRequest(TermVectorsRequest other) {_        super(other.index())__        this.id = other.id()__        this.type = other.type()__        if (other.doc != null) {_            this.doc = new BytesArray(other.doc().toBytesRef(), true)__            this.xContentType = other.xContentType__        }_        this.flagsEnum = other.getFlags().clone()__        this.preference = other.preference()__        this.routing = other.routing()__        if (other.selectedFields != null) {_            this.selectedFields = new HashSet<>(other.selectedFields)__        }_        if (other.perFieldAnalyzer != null) {_            this.perFieldAnalyzer = new HashMap<>(other.perFieldAnalyzer)__        }_        this.realtime = other.realtime()__        this.version = other.version()__        this.versionType = VersionType.fromValue(other.versionType().getValue())__        this.filterSettings = other.filterSettings()__    };constructs,a,new,term,vector,request,for,a,document,that,will,be,fetch,from,the,provided,index,use,link,type,string,and,link,id,string,to,specify,the,document,to,load;public,term,vectors,request,term,vectors,request,other,super,other,index,this,id,other,id,this,type,other,type,if,other,doc,null,this,doc,new,bytes,array,other,doc,to,bytes,ref,true,this,x,content,type,other,x,content,type,this,flags,enum,other,get,flags,clone,this,preference,other,preference,this,routing,other,routing,if,other,selected,fields,null,this,selected,fields,new,hash,set,other,selected,fields,if,other,per,field,analyzer,null,this,per,field,analyzer,new,hash,map,other,per,field,analyzer,this,realtime,other,realtime,this,version,other,version,this,version,type,version,type,from,value,other,version,type,get,value,this,filter,settings,other,filter,settings
TermVectorsRequest -> public TermVectorsRequest(TermVectorsRequest other);1535139672;Constructs a new term vector request for a document that will be fetch_from the provided index. Use {@link #type(String)} and_{@link #id(String)} to specify the document to load.;public TermVectorsRequest(TermVectorsRequest other) {_        super(other.index())__        this.id = other.id()__        this.type = other.type()__        if (other.doc != null) {_            this.doc = new BytesArray(other.doc().toBytesRef(), true)__            this.xContentType = other.xContentType__        }_        this.flagsEnum = other.getFlags().clone()__        this.preference = other.preference()__        this.routing = other.routing()__        if (other.selectedFields != null) {_            this.selectedFields = new HashSet<>(other.selectedFields)__        }_        if (other.perFieldAnalyzer != null) {_            this.perFieldAnalyzer = new HashMap<>(other.perFieldAnalyzer)__        }_        this.realtime = other.realtime()__        this.version = other.version()__        this.versionType = VersionType.fromValue(other.versionType().getValue())__        this.filterSettings = other.filterSettings()__    };constructs,a,new,term,vector,request,for,a,document,that,will,be,fetch,from,the,provided,index,use,link,type,string,and,link,id,string,to,specify,the,document,to,load;public,term,vectors,request,term,vectors,request,other,super,other,index,this,id,other,id,this,type,other,type,if,other,doc,null,this,doc,new,bytes,array,other,doc,to,bytes,ref,true,this,x,content,type,other,x,content,type,this,flags,enum,other,get,flags,clone,this,preference,other,preference,this,routing,other,routing,if,other,selected,fields,null,this,selected,fields,new,hash,set,other,selected,fields,if,other,per,field,analyzer,null,this,per,field,analyzer,new,hash,map,other,per,field,analyzer,this,realtime,other,realtime,this,version,other,version,this,version,type,version,type,from,value,other,version,type,get,value,this,filter,settings,other,filter,settings
TermVectorsRequest -> public TermVectorsRequest(TermVectorsRequest other);1541592065;Constructs a new term vector request for a document that will be fetch_from the provided index. Use {@link #type(String)} and_{@link #id(String)} to specify the document to load.;public TermVectorsRequest(TermVectorsRequest other) {_        super(other.index())__        this.id = other.id()__        this.type = other.type()__        if (other.doc != null) {_            this.doc = new BytesArray(other.doc().toBytesRef(), true)__            this.xContentType = other.xContentType__        }_        this.flagsEnum = other.getFlags().clone()__        this.preference = other.preference()__        this.routing = other.routing()__        if (other.selectedFields != null) {_            this.selectedFields = new HashSet<>(other.selectedFields)__        }_        if (other.perFieldAnalyzer != null) {_            this.perFieldAnalyzer = new HashMap<>(other.perFieldAnalyzer)__        }_        this.realtime = other.realtime()__        this.version = other.version()__        this.versionType = VersionType.fromValue(other.versionType().getValue())__        this.filterSettings = other.filterSettings()__    };constructs,a,new,term,vector,request,for,a,document,that,will,be,fetch,from,the,provided,index,use,link,type,string,and,link,id,string,to,specify,the,document,to,load;public,term,vectors,request,term,vectors,request,other,super,other,index,this,id,other,id,this,type,other,type,if,other,doc,null,this,doc,new,bytes,array,other,doc,to,bytes,ref,true,this,x,content,type,other,x,content,type,this,flags,enum,other,get,flags,clone,this,preference,other,preference,this,routing,other,routing,if,other,selected,fields,null,this,selected,fields,new,hash,set,other,selected,fields,if,other,per,field,analyzer,null,this,per,field,analyzer,new,hash,map,other,per,field,analyzer,this,realtime,other,realtime,this,version,other,version,this,version,type,version,type,from,value,other,version,type,get,value,this,filter,settings,other,filter,settings
TermVectorsRequest -> public TermVectorsRequest(TermVectorsRequest other);1542402699;Constructs a new term vector request for a document that will be fetch_from the provided index. Use {@link #type(String)} and_{@link #id(String)} to specify the document to load.;public TermVectorsRequest(TermVectorsRequest other) {_        super(other.index())__        this.id = other.id()__        this.type = other.type()__        if (other.doc != null) {_            this.doc = new BytesArray(other.doc().toBytesRef(), true)__            this.xContentType = other.xContentType__        }_        this.flagsEnum = other.getFlags().clone()__        this.preference = other.preference()__        this.routing = other.routing()__        if (other.selectedFields != null) {_            this.selectedFields = new HashSet<>(other.selectedFields)__        }_        if (other.perFieldAnalyzer != null) {_            this.perFieldAnalyzer = new HashMap<>(other.perFieldAnalyzer)__        }_        this.realtime = other.realtime()__        this.version = other.version()__        this.versionType = VersionType.fromValue(other.versionType().getValue())__        this.filterSettings = other.filterSettings()__    };constructs,a,new,term,vector,request,for,a,document,that,will,be,fetch,from,the,provided,index,use,link,type,string,and,link,id,string,to,specify,the,document,to,load;public,term,vectors,request,term,vectors,request,other,super,other,index,this,id,other,id,this,type,other,type,if,other,doc,null,this,doc,new,bytes,array,other,doc,to,bytes,ref,true,this,x,content,type,other,x,content,type,this,flags,enum,other,get,flags,clone,this,preference,other,preference,this,routing,other,routing,if,other,selected,fields,null,this,selected,fields,new,hash,set,other,selected,fields,if,other,per,field,analyzer,null,this,per,field,analyzer,new,hash,map,other,per,field,analyzer,this,realtime,other,realtime,this,version,other,version,this,version,type,version,type,from,value,other,version,type,get,value,this,filter,settings,other,filter,settings
TermVectorsRequest -> public TermVectorsRequest(TermVectorsRequest other);1544120595;Constructs a new term vector request for a document that will be fetch_from the provided index. Use {@link #type(String)} and_{@link #id(String)} to specify the document to load.;public TermVectorsRequest(TermVectorsRequest other) {_        super(other.index())__        this.id = other.id()__        this.type = other.type()__        if (other.doc != null) {_            this.doc = new BytesArray(other.doc().toBytesRef(), true)__            this.xContentType = other.xContentType__        }_        this.flagsEnum = other.getFlags().clone()__        this.preference = other.preference()__        this.routing = other.routing()__        if (other.selectedFields != null) {_            this.selectedFields = new HashSet<>(other.selectedFields)__        }_        if (other.perFieldAnalyzer != null) {_            this.perFieldAnalyzer = new HashMap<>(other.perFieldAnalyzer)__        }_        this.realtime = other.realtime()__        this.version = other.version()__        this.versionType = VersionType.fromValue(other.versionType().getValue())__        this.filterSettings = other.filterSettings()__    };constructs,a,new,term,vector,request,for,a,document,that,will,be,fetch,from,the,provided,index,use,link,type,string,and,link,id,string,to,specify,the,document,to,load;public,term,vectors,request,term,vectors,request,other,super,other,index,this,id,other,id,this,type,other,type,if,other,doc,null,this,doc,new,bytes,array,other,doc,to,bytes,ref,true,this,x,content,type,other,x,content,type,this,flags,enum,other,get,flags,clone,this,preference,other,preference,this,routing,other,routing,if,other,selected,fields,null,this,selected,fields,new,hash,set,other,selected,fields,if,other,per,field,analyzer,null,this,per,field,analyzer,new,hash,map,other,per,field,analyzer,this,realtime,other,realtime,this,version,other,version,this,version,type,version,type,from,value,other,version,type,get,value,this,filter,settings,other,filter,settings
TermVectorsRequest -> public TermVectorsRequest(TermVectorsRequest other);1544210484;Constructs a new term vector request for a document that will be fetch_from the provided index. Use {@link #type(String)} and_{@link #id(String)} to specify the document to load.;public TermVectorsRequest(TermVectorsRequest other) {_        super(other.index())__        this.id = other.id()__        this.type = other.type()__        if (other.doc != null) {_            this.doc = new BytesArray(other.doc().toBytesRef(), true)__            this.xContentType = other.xContentType__        }_        this.flagsEnum = other.getFlags().clone()__        this.preference = other.preference()__        this.routing = other.routing()__        if (other.selectedFields != null) {_            this.selectedFields = new HashSet<>(other.selectedFields)__        }_        if (other.perFieldAnalyzer != null) {_            this.perFieldAnalyzer = new HashMap<>(other.perFieldAnalyzer)__        }_        this.realtime = other.realtime()__        this.version = other.version()__        this.versionType = VersionType.fromValue(other.versionType().getValue())__        this.filterSettings = other.filterSettings()__    };constructs,a,new,term,vector,request,for,a,document,that,will,be,fetch,from,the,provided,index,use,link,type,string,and,link,id,string,to,specify,the,document,to,load;public,term,vectors,request,term,vectors,request,other,super,other,index,this,id,other,id,this,type,other,type,if,other,doc,null,this,doc,new,bytes,array,other,doc,to,bytes,ref,true,this,x,content,type,other,x,content,type,this,flags,enum,other,get,flags,clone,this,preference,other,preference,this,routing,other,routing,if,other,selected,fields,null,this,selected,fields,new,hash,set,other,selected,fields,if,other,per,field,analyzer,null,this,per,field,analyzer,new,hash,map,other,per,field,analyzer,this,realtime,other,realtime,this,version,other,version,this,version,type,version,type,from,value,other,version,type,get,value,this,filter,settings,other,filter,settings
TermVectorsRequest -> public TermVectorsRequest perFieldAnalyzer(Map<String, String> perFieldAnalyzer);1524684173;Override the analyzer used at each field when generating term vectors.;public TermVectorsRequest perFieldAnalyzer(Map<String, String> perFieldAnalyzer) {_        this.perFieldAnalyzer = perFieldAnalyzer != null && perFieldAnalyzer.size() != 0 ? new HashMap<>(perFieldAnalyzer) : null__        return this__    };override,the,analyzer,used,at,each,field,when,generating,term,vectors;public,term,vectors,request,per,field,analyzer,map,string,string,per,field,analyzer,this,per,field,analyzer,per,field,analyzer,null,per,field,analyzer,size,0,new,hash,map,per,field,analyzer,null,return,this
TermVectorsRequest -> public TermVectorsRequest perFieldAnalyzer(Map<String, String> perFieldAnalyzer);1525334055;Override the analyzer used at each field when generating term vectors.;public TermVectorsRequest perFieldAnalyzer(Map<String, String> perFieldAnalyzer) {_        this.perFieldAnalyzer = perFieldAnalyzer != null && perFieldAnalyzer.size() != 0 ? new HashMap<>(perFieldAnalyzer) : null__        return this__    };override,the,analyzer,used,at,each,field,when,generating,term,vectors;public,term,vectors,request,per,field,analyzer,map,string,string,per,field,analyzer,this,per,field,analyzer,per,field,analyzer,null,per,field,analyzer,size,0,new,hash,map,per,field,analyzer,null,return,this
TermVectorsRequest -> public TermVectorsRequest perFieldAnalyzer(Map<String, String> perFieldAnalyzer);1535139672;Override the analyzer used at each field when generating term vectors.;public TermVectorsRequest perFieldAnalyzer(Map<String, String> perFieldAnalyzer) {_        this.perFieldAnalyzer = perFieldAnalyzer != null && perFieldAnalyzer.size() != 0 ? new HashMap<>(perFieldAnalyzer) : null__        return this__    };override,the,analyzer,used,at,each,field,when,generating,term,vectors;public,term,vectors,request,per,field,analyzer,map,string,string,per,field,analyzer,this,per,field,analyzer,per,field,analyzer,null,per,field,analyzer,size,0,new,hash,map,per,field,analyzer,null,return,this
TermVectorsRequest -> public TermVectorsRequest perFieldAnalyzer(Map<String, String> perFieldAnalyzer);1541592065;Override the analyzer used at each field when generating term vectors.;public TermVectorsRequest perFieldAnalyzer(Map<String, String> perFieldAnalyzer) {_        this.perFieldAnalyzer = perFieldAnalyzer != null && perFieldAnalyzer.size() != 0 ? new HashMap<>(perFieldAnalyzer) : null__        return this__    };override,the,analyzer,used,at,each,field,when,generating,term,vectors;public,term,vectors,request,per,field,analyzer,map,string,string,per,field,analyzer,this,per,field,analyzer,per,field,analyzer,null,per,field,analyzer,size,0,new,hash,map,per,field,analyzer,null,return,this
TermVectorsRequest -> public TermVectorsRequest perFieldAnalyzer(Map<String, String> perFieldAnalyzer);1542402699;Override the analyzer used at each field when generating term vectors.;public TermVectorsRequest perFieldAnalyzer(Map<String, String> perFieldAnalyzer) {_        this.perFieldAnalyzer = perFieldAnalyzer != null && perFieldAnalyzer.size() != 0 ? new HashMap<>(perFieldAnalyzer) : null__        return this__    };override,the,analyzer,used,at,each,field,when,generating,term,vectors;public,term,vectors,request,per,field,analyzer,map,string,string,per,field,analyzer,this,per,field,analyzer,per,field,analyzer,null,per,field,analyzer,size,0,new,hash,map,per,field,analyzer,null,return,this
TermVectorsRequest -> public TermVectorsRequest perFieldAnalyzer(Map<String, String> perFieldAnalyzer);1544120595;Override the analyzer used at each field when generating term vectors.;public TermVectorsRequest perFieldAnalyzer(Map<String, String> perFieldAnalyzer) {_        this.perFieldAnalyzer = perFieldAnalyzer != null && perFieldAnalyzer.size() != 0 ? new HashMap<>(perFieldAnalyzer) : null__        return this__    };override,the,analyzer,used,at,each,field,when,generating,term,vectors;public,term,vectors,request,per,field,analyzer,map,string,string,per,field,analyzer,this,per,field,analyzer,per,field,analyzer,null,per,field,analyzer,size,0,new,hash,map,per,field,analyzer,null,return,this
TermVectorsRequest -> public TermVectorsRequest perFieldAnalyzer(Map<String, String> perFieldAnalyzer);1544210484;Override the analyzer used at each field when generating term vectors.;public TermVectorsRequest perFieldAnalyzer(Map<String, String> perFieldAnalyzer) {_        this.perFieldAnalyzer = perFieldAnalyzer != null && perFieldAnalyzer.size() != 0 ? new HashMap<>(perFieldAnalyzer) : null__        return this__    };override,the,analyzer,used,at,each,field,when,generating,term,vectors;public,term,vectors,request,per,field,analyzer,map,string,string,per,field,analyzer,this,per,field,analyzer,per,field,analyzer,null,per,field,analyzer,size,0,new,hash,map,per,field,analyzer,null,return,this
TermVectorsRequest -> public FilterSettings filterSettings();1524684173;Return the settings for filtering out terms.;public FilterSettings filterSettings() {_        return this.filterSettings__    };return,the,settings,for,filtering,out,terms;public,filter,settings,filter,settings,return,this,filter,settings
TermVectorsRequest -> public FilterSettings filterSettings();1525334055;Return the settings for filtering out terms.;public FilterSettings filterSettings() {_        return this.filterSettings__    };return,the,settings,for,filtering,out,terms;public,filter,settings,filter,settings,return,this,filter,settings
TermVectorsRequest -> public FilterSettings filterSettings();1535139672;Return the settings for filtering out terms.;public FilterSettings filterSettings() {_        return this.filterSettings__    };return,the,settings,for,filtering,out,terms;public,filter,settings,filter,settings,return,this,filter,settings
TermVectorsRequest -> public FilterSettings filterSettings();1541592065;Return the settings for filtering out terms.;public FilterSettings filterSettings() {_        return this.filterSettings__    };return,the,settings,for,filtering,out,terms;public,filter,settings,filter,settings,return,this,filter,settings
TermVectorsRequest -> public FilterSettings filterSettings();1542402699;Return the settings for filtering out terms.;public FilterSettings filterSettings() {_        return this.filterSettings__    };return,the,settings,for,filtering,out,terms;public,filter,settings,filter,settings,return,this,filter,settings
TermVectorsRequest -> public FilterSettings filterSettings();1544120595;Return the settings for filtering out terms.;public FilterSettings filterSettings() {_        return this.filterSettings__    };return,the,settings,for,filtering,out,terms;public,filter,settings,filter,settings,return,this,filter,settings
TermVectorsRequest -> public FilterSettings filterSettings();1544210484;Return the settings for filtering out terms.;public FilterSettings filterSettings() {_        return this.filterSettings__    };return,the,settings,for,filtering,out,terms;public,filter,settings,filter,settings,return,this,filter,settings
TermVectorsRequest -> public TermVectorsRequest payloads(boolean payloads);1524684173;Return the payloads for each term or skip.;public TermVectorsRequest payloads(boolean payloads) {_        setFlag(Flag.Payloads, payloads)__        return this__    };return,the,payloads,for,each,term,or,skip;public,term,vectors,request,payloads,boolean,payloads,set,flag,flag,payloads,payloads,return,this
TermVectorsRequest -> public TermVectorsRequest payloads(boolean payloads);1525334055;Return the payloads for each term or skip.;public TermVectorsRequest payloads(boolean payloads) {_        setFlag(Flag.Payloads, payloads)__        return this__    };return,the,payloads,for,each,term,or,skip;public,term,vectors,request,payloads,boolean,payloads,set,flag,flag,payloads,payloads,return,this
TermVectorsRequest -> public TermVectorsRequest payloads(boolean payloads);1535139672;Return the payloads for each term or skip.;public TermVectorsRequest payloads(boolean payloads) {_        setFlag(Flag.Payloads, payloads)__        return this__    };return,the,payloads,for,each,term,or,skip;public,term,vectors,request,payloads,boolean,payloads,set,flag,flag,payloads,payloads,return,this
TermVectorsRequest -> public TermVectorsRequest payloads(boolean payloads);1541592065;Return the payloads for each term or skip.;public TermVectorsRequest payloads(boolean payloads) {_        setFlag(Flag.Payloads, payloads)__        return this__    };return,the,payloads,for,each,term,or,skip;public,term,vectors,request,payloads,boolean,payloads,set,flag,flag,payloads,payloads,return,this
TermVectorsRequest -> public TermVectorsRequest payloads(boolean payloads);1542402699;Return the payloads for each term or skip.;public TermVectorsRequest payloads(boolean payloads) {_        setFlag(Flag.Payloads, payloads)__        return this__    };return,the,payloads,for,each,term,or,skip;public,term,vectors,request,payloads,boolean,payloads,set,flag,flag,payloads,payloads,return,this
TermVectorsRequest -> public TermVectorsRequest payloads(boolean payloads);1544120595;Return the payloads for each term or skip.;public TermVectorsRequest payloads(boolean payloads) {_        setFlag(Flag.Payloads, payloads)__        return this__    };return,the,payloads,for,each,term,or,skip;public,term,vectors,request,payloads,boolean,payloads,set,flag,flag,payloads,payloads,return,this
TermVectorsRequest -> public TermVectorsRequest payloads(boolean payloads);1544210484;Return the payloads for each term or skip.;public TermVectorsRequest payloads(boolean payloads) {_        setFlag(Flag.Payloads, payloads)__        return this__    };return,the,payloads,for,each,term,or,skip;public,term,vectors,request,payloads,boolean,payloads,set,flag,flag,payloads,payloads,return,this
TermVectorsRequest -> public static void parseRequest(TermVectorsRequest termVectorsRequest, XContentParser parser) throws IOException;1524684173;populates a request object (pre-populated with defaults) based on a parser.;public static void parseRequest(TermVectorsRequest termVectorsRequest, XContentParser parser) throws IOException {_        XContentParser.Token token__        String currentFieldName = null__        List<String> fields = new ArrayList<>()__        while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {_            if (token == XContentParser.Token.FIELD_NAME) {_                currentFieldName = parser.currentName()__            } else if (currentFieldName != null) {_                if (FIELDS.match(currentFieldName, parser.getDeprecationHandler())) {_                    if (token == XContentParser.Token.START_ARRAY) {_                        while (parser.nextToken() != XContentParser.Token.END_ARRAY) {_                            fields.add(parser.text())__                        }_                    } else {_                        throw new ElasticsearchParseException("failed to parse term vectors request. field [fields] must be an array")__                    }_                } else if (OFFSETS.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.offsets(parser.booleanValue())__                } else if (POSITIONS.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.positions(parser.booleanValue())__                } else if (PAYLOADS.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.payloads(parser.booleanValue())__                } else if (currentFieldName.equals("term_statistics") || currentFieldName.equals("termStatistics")) {_                    termVectorsRequest.termStatistics(parser.booleanValue())__                } else if (currentFieldName.equals("field_statistics") || currentFieldName.equals("fieldStatistics")) {_                    termVectorsRequest.fieldStatistics(parser.booleanValue())__                } else if (DFS.match(currentFieldName, parser.getDeprecationHandler())) {_                    throw new IllegalArgumentException("distributed frequencies is not supported anymore for term vectors")__                } else if (currentFieldName.equals("per_field_analyzer") || currentFieldName.equals("perFieldAnalyzer")) {_                    termVectorsRequest.perFieldAnalyzer(readPerFieldAnalyzer(parser.map()))__                } else if (FILTER.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.filterSettings(readFilterSettings(parser))__                } else if (INDEX.match(currentFieldName, parser.getDeprecationHandler())) { _                    termVectorsRequest.index = parser.text()__                } else if (TYPE.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.type = parser.text()__                } else if (ID.match(currentFieldName, parser.getDeprecationHandler())) {_                    if (termVectorsRequest.doc != null) {_                        throw new ElasticsearchParseException("failed to parse term vectors request. either [id] or [doc] can be specified, but not both!")__                    }_                    termVectorsRequest.id = parser.text()__                } else if (DOC.match(currentFieldName, parser.getDeprecationHandler())) {_                    if (termVectorsRequest.id != null) {_                        throw new ElasticsearchParseException("failed to parse term vectors request. either [id] or [doc] can be specified, but not both!")__                    }_                    termVectorsRequest.doc(jsonBuilder().copyCurrentStructure(parser))__                } else if (ROUTING.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.routing = parser.text()__                } else if (VERSION.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.version = parser.longValue()__                } else if (VERSION_TYPE.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.versionType = VersionType.fromString(parser.text())__                } else {_                    throw new ElasticsearchParseException("failed to parse term vectors request. unknown field [{}]", currentFieldName)__                }_            }_        }_        if (fields.size() > 0) {_            String[] fieldsAsArray = new String[fields.size()]__            termVectorsRequest.selectedFields(fields.toArray(fieldsAsArray))__        }_    };populates,a,request,object,pre,populated,with,defaults,based,on,a,parser;public,static,void,parse,request,term,vectors,request,term,vectors,request,xcontent,parser,parser,throws,ioexception,xcontent,parser,token,token,string,current,field,name,null,list,string,fields,new,array,list,while,token,parser,next,token,xcontent,parser,token,if,token,xcontent,parser,token,current,field,name,parser,current,name,else,if,current,field,name,null,if,fields,match,current,field,name,parser,get,deprecation,handler,if,token,xcontent,parser,token,while,parser,next,token,xcontent,parser,token,fields,add,parser,text,else,throw,new,elasticsearch,parse,exception,failed,to,parse,term,vectors,request,field,fields,must,be,an,array,else,if,offsets,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,offsets,parser,boolean,value,else,if,positions,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,positions,parser,boolean,value,else,if,payloads,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,payloads,parser,boolean,value,else,if,current,field,name,equals,current,field,name,equals,term,statistics,term,vectors,request,term,statistics,parser,boolean,value,else,if,current,field,name,equals,current,field,name,equals,field,statistics,term,vectors,request,field,statistics,parser,boolean,value,else,if,dfs,match,current,field,name,parser,get,deprecation,handler,throw,new,illegal,argument,exception,distributed,frequencies,is,not,supported,anymore,for,term,vectors,else,if,current,field,name,equals,current,field,name,equals,per,field,analyzer,term,vectors,request,per,field,analyzer,read,per,field,analyzer,parser,map,else,if,filter,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,filter,settings,read,filter,settings,parser,else,if,index,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,index,parser,text,else,if,type,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,type,parser,text,else,if,id,match,current,field,name,parser,get,deprecation,handler,if,term,vectors,request,doc,null,throw,new,elasticsearch,parse,exception,failed,to,parse,term,vectors,request,either,id,or,doc,can,be,specified,but,not,both,term,vectors,request,id,parser,text,else,if,doc,match,current,field,name,parser,get,deprecation,handler,if,term,vectors,request,id,null,throw,new,elasticsearch,parse,exception,failed,to,parse,term,vectors,request,either,id,or,doc,can,be,specified,but,not,both,term,vectors,request,doc,json,builder,copy,current,structure,parser,else,if,routing,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,routing,parser,text,else,if,version,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,version,parser,long,value,else,if,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,version,type,version,type,from,string,parser,text,else,throw,new,elasticsearch,parse,exception,failed,to,parse,term,vectors,request,unknown,field,current,field,name,if,fields,size,0,string,fields,as,array,new,string,fields,size,term,vectors,request,selected,fields,fields,to,array,fields,as,array
TermVectorsRequest -> public static void parseRequest(TermVectorsRequest termVectorsRequest, XContentParser parser) throws IOException;1525334055;populates a request object (pre-populated with defaults) based on a parser.;public static void parseRequest(TermVectorsRequest termVectorsRequest, XContentParser parser) throws IOException {_        XContentParser.Token token__        String currentFieldName = null__        List<String> fields = new ArrayList<>()__        while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {_            if (token == XContentParser.Token.FIELD_NAME) {_                currentFieldName = parser.currentName()__            } else if (currentFieldName != null) {_                if (FIELDS.match(currentFieldName, parser.getDeprecationHandler())) {_                    if (token == XContentParser.Token.START_ARRAY) {_                        while (parser.nextToken() != XContentParser.Token.END_ARRAY) {_                            fields.add(parser.text())__                        }_                    } else {_                        throw new ElasticsearchParseException("failed to parse term vectors request. field [fields] must be an array")__                    }_                } else if (OFFSETS.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.offsets(parser.booleanValue())__                } else if (POSITIONS.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.positions(parser.booleanValue())__                } else if (PAYLOADS.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.payloads(parser.booleanValue())__                } else if (currentFieldName.equals("term_statistics") || currentFieldName.equals("termStatistics")) {_                    termVectorsRequest.termStatistics(parser.booleanValue())__                } else if (currentFieldName.equals("field_statistics") || currentFieldName.equals("fieldStatistics")) {_                    termVectorsRequest.fieldStatistics(parser.booleanValue())__                } else if (DFS.match(currentFieldName, parser.getDeprecationHandler())) {_                    throw new IllegalArgumentException("distributed frequencies is not supported anymore for term vectors")__                } else if (currentFieldName.equals("per_field_analyzer") || currentFieldName.equals("perFieldAnalyzer")) {_                    termVectorsRequest.perFieldAnalyzer(readPerFieldAnalyzer(parser.map()))__                } else if (FILTER.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.filterSettings(readFilterSettings(parser))__                } else if (INDEX.match(currentFieldName, parser.getDeprecationHandler())) { _                    termVectorsRequest.index = parser.text()__                } else if (TYPE.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.type = parser.text()__                } else if (ID.match(currentFieldName, parser.getDeprecationHandler())) {_                    if (termVectorsRequest.doc != null) {_                        throw new ElasticsearchParseException("failed to parse term vectors request. either [id] or [doc] can be specified, but not both!")__                    }_                    termVectorsRequest.id = parser.text()__                } else if (DOC.match(currentFieldName, parser.getDeprecationHandler())) {_                    if (termVectorsRequest.id != null) {_                        throw new ElasticsearchParseException("failed to parse term vectors request. either [id] or [doc] can be specified, but not both!")__                    }_                    termVectorsRequest.doc(jsonBuilder().copyCurrentStructure(parser))__                } else if (ROUTING.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.routing = parser.text()__                } else if (VERSION.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.version = parser.longValue()__                } else if (VERSION_TYPE.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.versionType = VersionType.fromString(parser.text())__                } else {_                    throw new ElasticsearchParseException("failed to parse term vectors request. unknown field [{}]", currentFieldName)__                }_            }_        }_        if (fields.size() > 0) {_            String[] fieldsAsArray = new String[fields.size()]__            termVectorsRequest.selectedFields(fields.toArray(fieldsAsArray))__        }_    };populates,a,request,object,pre,populated,with,defaults,based,on,a,parser;public,static,void,parse,request,term,vectors,request,term,vectors,request,xcontent,parser,parser,throws,ioexception,xcontent,parser,token,token,string,current,field,name,null,list,string,fields,new,array,list,while,token,parser,next,token,xcontent,parser,token,if,token,xcontent,parser,token,current,field,name,parser,current,name,else,if,current,field,name,null,if,fields,match,current,field,name,parser,get,deprecation,handler,if,token,xcontent,parser,token,while,parser,next,token,xcontent,parser,token,fields,add,parser,text,else,throw,new,elasticsearch,parse,exception,failed,to,parse,term,vectors,request,field,fields,must,be,an,array,else,if,offsets,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,offsets,parser,boolean,value,else,if,positions,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,positions,parser,boolean,value,else,if,payloads,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,payloads,parser,boolean,value,else,if,current,field,name,equals,current,field,name,equals,term,statistics,term,vectors,request,term,statistics,parser,boolean,value,else,if,current,field,name,equals,current,field,name,equals,field,statistics,term,vectors,request,field,statistics,parser,boolean,value,else,if,dfs,match,current,field,name,parser,get,deprecation,handler,throw,new,illegal,argument,exception,distributed,frequencies,is,not,supported,anymore,for,term,vectors,else,if,current,field,name,equals,current,field,name,equals,per,field,analyzer,term,vectors,request,per,field,analyzer,read,per,field,analyzer,parser,map,else,if,filter,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,filter,settings,read,filter,settings,parser,else,if,index,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,index,parser,text,else,if,type,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,type,parser,text,else,if,id,match,current,field,name,parser,get,deprecation,handler,if,term,vectors,request,doc,null,throw,new,elasticsearch,parse,exception,failed,to,parse,term,vectors,request,either,id,or,doc,can,be,specified,but,not,both,term,vectors,request,id,parser,text,else,if,doc,match,current,field,name,parser,get,deprecation,handler,if,term,vectors,request,id,null,throw,new,elasticsearch,parse,exception,failed,to,parse,term,vectors,request,either,id,or,doc,can,be,specified,but,not,both,term,vectors,request,doc,json,builder,copy,current,structure,parser,else,if,routing,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,routing,parser,text,else,if,version,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,version,parser,long,value,else,if,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,version,type,version,type,from,string,parser,text,else,throw,new,elasticsearch,parse,exception,failed,to,parse,term,vectors,request,unknown,field,current,field,name,if,fields,size,0,string,fields,as,array,new,string,fields,size,term,vectors,request,selected,fields,fields,to,array,fields,as,array
TermVectorsRequest -> public static void parseRequest(TermVectorsRequest termVectorsRequest, XContentParser parser) throws IOException;1535139672;populates a request object (pre-populated with defaults) based on a parser.;public static void parseRequest(TermVectorsRequest termVectorsRequest, XContentParser parser) throws IOException {_        XContentParser.Token token__        String currentFieldName = null__        List<String> fields = new ArrayList<>()__        while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {_            if (token == XContentParser.Token.FIELD_NAME) {_                currentFieldName = parser.currentName()__            } else if (currentFieldName != null) {_                if (FIELDS.match(currentFieldName, parser.getDeprecationHandler())) {_                    if (token == XContentParser.Token.START_ARRAY) {_                        while (parser.nextToken() != XContentParser.Token.END_ARRAY) {_                            fields.add(parser.text())__                        }_                    } else {_                        throw new ElasticsearchParseException("failed to parse term vectors request. field [fields] must be an array")__                    }_                } else if (OFFSETS.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.offsets(parser.booleanValue())__                } else if (POSITIONS.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.positions(parser.booleanValue())__                } else if (PAYLOADS.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.payloads(parser.booleanValue())__                } else if (currentFieldName.equals("term_statistics") || currentFieldName.equals("termStatistics")) {_                    termVectorsRequest.termStatistics(parser.booleanValue())__                } else if (currentFieldName.equals("field_statistics") || currentFieldName.equals("fieldStatistics")) {_                    termVectorsRequest.fieldStatistics(parser.booleanValue())__                } else if (DFS.match(currentFieldName, parser.getDeprecationHandler())) {_                    throw new IllegalArgumentException("distributed frequencies is not supported anymore for term vectors")__                } else if (currentFieldName.equals("per_field_analyzer") || currentFieldName.equals("perFieldAnalyzer")) {_                    termVectorsRequest.perFieldAnalyzer(readPerFieldAnalyzer(parser.map()))__                } else if (FILTER.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.filterSettings(readFilterSettings(parser))__                } else if (INDEX.match(currentFieldName, parser.getDeprecationHandler())) { _                    termVectorsRequest.index = parser.text()__                } else if (TYPE.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.type = parser.text()__                } else if (ID.match(currentFieldName, parser.getDeprecationHandler())) {_                    if (termVectorsRequest.doc != null) {_                        throw new ElasticsearchParseException("failed to parse term vectors request. either [id] or [doc] can be specified, but not both!")__                    }_                    termVectorsRequest.id = parser.text()__                } else if (DOC.match(currentFieldName, parser.getDeprecationHandler())) {_                    if (termVectorsRequest.id != null) {_                        throw new ElasticsearchParseException("failed to parse term vectors request. either [id] or [doc] can be specified, but not both!")__                    }_                    termVectorsRequest.doc(jsonBuilder().copyCurrentStructure(parser))__                } else if (ROUTING.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.routing = parser.text()__                } else if (VERSION.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.version = parser.longValue()__                } else if (VERSION_TYPE.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.versionType = VersionType.fromString(parser.text())__                } else {_                    throw new ElasticsearchParseException("failed to parse term vectors request. unknown field [{}]", currentFieldName)__                }_            }_        }_        if (fields.size() > 0) {_            String[] fieldsAsArray = new String[fields.size()]__            termVectorsRequest.selectedFields(fields.toArray(fieldsAsArray))__        }_    };populates,a,request,object,pre,populated,with,defaults,based,on,a,parser;public,static,void,parse,request,term,vectors,request,term,vectors,request,xcontent,parser,parser,throws,ioexception,xcontent,parser,token,token,string,current,field,name,null,list,string,fields,new,array,list,while,token,parser,next,token,xcontent,parser,token,if,token,xcontent,parser,token,current,field,name,parser,current,name,else,if,current,field,name,null,if,fields,match,current,field,name,parser,get,deprecation,handler,if,token,xcontent,parser,token,while,parser,next,token,xcontent,parser,token,fields,add,parser,text,else,throw,new,elasticsearch,parse,exception,failed,to,parse,term,vectors,request,field,fields,must,be,an,array,else,if,offsets,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,offsets,parser,boolean,value,else,if,positions,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,positions,parser,boolean,value,else,if,payloads,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,payloads,parser,boolean,value,else,if,current,field,name,equals,current,field,name,equals,term,statistics,term,vectors,request,term,statistics,parser,boolean,value,else,if,current,field,name,equals,current,field,name,equals,field,statistics,term,vectors,request,field,statistics,parser,boolean,value,else,if,dfs,match,current,field,name,parser,get,deprecation,handler,throw,new,illegal,argument,exception,distributed,frequencies,is,not,supported,anymore,for,term,vectors,else,if,current,field,name,equals,current,field,name,equals,per,field,analyzer,term,vectors,request,per,field,analyzer,read,per,field,analyzer,parser,map,else,if,filter,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,filter,settings,read,filter,settings,parser,else,if,index,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,index,parser,text,else,if,type,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,type,parser,text,else,if,id,match,current,field,name,parser,get,deprecation,handler,if,term,vectors,request,doc,null,throw,new,elasticsearch,parse,exception,failed,to,parse,term,vectors,request,either,id,or,doc,can,be,specified,but,not,both,term,vectors,request,id,parser,text,else,if,doc,match,current,field,name,parser,get,deprecation,handler,if,term,vectors,request,id,null,throw,new,elasticsearch,parse,exception,failed,to,parse,term,vectors,request,either,id,or,doc,can,be,specified,but,not,both,term,vectors,request,doc,json,builder,copy,current,structure,parser,else,if,routing,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,routing,parser,text,else,if,version,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,version,parser,long,value,else,if,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,version,type,version,type,from,string,parser,text,else,throw,new,elasticsearch,parse,exception,failed,to,parse,term,vectors,request,unknown,field,current,field,name,if,fields,size,0,string,fields,as,array,new,string,fields,size,term,vectors,request,selected,fields,fields,to,array,fields,as,array
TermVectorsRequest -> public static void parseRequest(TermVectorsRequest termVectorsRequest, XContentParser parser) throws IOException;1541592065;populates a request object (pre-populated with defaults) based on a parser.;public static void parseRequest(TermVectorsRequest termVectorsRequest, XContentParser parser) throws IOException {_        XContentParser.Token token__        String currentFieldName = null__        List<String> fields = new ArrayList<>()__        while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {_            if (token == XContentParser.Token.FIELD_NAME) {_                currentFieldName = parser.currentName()__            } else if (currentFieldName != null) {_                if (FIELDS.match(currentFieldName, parser.getDeprecationHandler())) {_                    if (token == XContentParser.Token.START_ARRAY) {_                        while (parser.nextToken() != XContentParser.Token.END_ARRAY) {_                            fields.add(parser.text())__                        }_                    } else {_                        throw new ElasticsearchParseException("failed to parse term vectors request. field [fields] must be an array")__                    }_                } else if (OFFSETS.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.offsets(parser.booleanValue())__                } else if (POSITIONS.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.positions(parser.booleanValue())__                } else if (PAYLOADS.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.payloads(parser.booleanValue())__                } else if (currentFieldName.equals("term_statistics") || currentFieldName.equals("termStatistics")) {_                    termVectorsRequest.termStatistics(parser.booleanValue())__                } else if (currentFieldName.equals("field_statistics") || currentFieldName.equals("fieldStatistics")) {_                    termVectorsRequest.fieldStatistics(parser.booleanValue())__                } else if (DFS.match(currentFieldName, parser.getDeprecationHandler())) {_                    throw new IllegalArgumentException("distributed frequencies is not supported anymore for term vectors")__                } else if (currentFieldName.equals("per_field_analyzer") || currentFieldName.equals("perFieldAnalyzer")) {_                    termVectorsRequest.perFieldAnalyzer(readPerFieldAnalyzer(parser.map()))__                } else if (FILTER.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.filterSettings(readFilterSettings(parser))__                } else if (INDEX.match(currentFieldName, parser.getDeprecationHandler())) { _                    termVectorsRequest.index = parser.text()__                } else if (TYPE.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.type = parser.text()__                } else if (ID.match(currentFieldName, parser.getDeprecationHandler())) {_                    if (termVectorsRequest.doc != null) {_                        throw new ElasticsearchParseException("failed to parse term vectors request. either [id] or [doc] can be specified, but not both!")__                    }_                    termVectorsRequest.id = parser.text()__                } else if (DOC.match(currentFieldName, parser.getDeprecationHandler())) {_                    if (termVectorsRequest.id != null) {_                        throw new ElasticsearchParseException("failed to parse term vectors request. either [id] or [doc] can be specified, but not both!")__                    }_                    termVectorsRequest.doc(jsonBuilder().copyCurrentStructure(parser))__                } else if (ROUTING.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.routing = parser.text()__                } else if (VERSION.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.version = parser.longValue()__                } else if (VERSION_TYPE.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.versionType = VersionType.fromString(parser.text())__                } else {_                    throw new ElasticsearchParseException("failed to parse term vectors request. unknown field [{}]", currentFieldName)__                }_            }_        }_        if (fields.size() > 0) {_            String[] fieldsAsArray = new String[fields.size()]__            termVectorsRequest.selectedFields(fields.toArray(fieldsAsArray))__        }_    };populates,a,request,object,pre,populated,with,defaults,based,on,a,parser;public,static,void,parse,request,term,vectors,request,term,vectors,request,xcontent,parser,parser,throws,ioexception,xcontent,parser,token,token,string,current,field,name,null,list,string,fields,new,array,list,while,token,parser,next,token,xcontent,parser,token,if,token,xcontent,parser,token,current,field,name,parser,current,name,else,if,current,field,name,null,if,fields,match,current,field,name,parser,get,deprecation,handler,if,token,xcontent,parser,token,while,parser,next,token,xcontent,parser,token,fields,add,parser,text,else,throw,new,elasticsearch,parse,exception,failed,to,parse,term,vectors,request,field,fields,must,be,an,array,else,if,offsets,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,offsets,parser,boolean,value,else,if,positions,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,positions,parser,boolean,value,else,if,payloads,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,payloads,parser,boolean,value,else,if,current,field,name,equals,current,field,name,equals,term,statistics,term,vectors,request,term,statistics,parser,boolean,value,else,if,current,field,name,equals,current,field,name,equals,field,statistics,term,vectors,request,field,statistics,parser,boolean,value,else,if,dfs,match,current,field,name,parser,get,deprecation,handler,throw,new,illegal,argument,exception,distributed,frequencies,is,not,supported,anymore,for,term,vectors,else,if,current,field,name,equals,current,field,name,equals,per,field,analyzer,term,vectors,request,per,field,analyzer,read,per,field,analyzer,parser,map,else,if,filter,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,filter,settings,read,filter,settings,parser,else,if,index,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,index,parser,text,else,if,type,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,type,parser,text,else,if,id,match,current,field,name,parser,get,deprecation,handler,if,term,vectors,request,doc,null,throw,new,elasticsearch,parse,exception,failed,to,parse,term,vectors,request,either,id,or,doc,can,be,specified,but,not,both,term,vectors,request,id,parser,text,else,if,doc,match,current,field,name,parser,get,deprecation,handler,if,term,vectors,request,id,null,throw,new,elasticsearch,parse,exception,failed,to,parse,term,vectors,request,either,id,or,doc,can,be,specified,but,not,both,term,vectors,request,doc,json,builder,copy,current,structure,parser,else,if,routing,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,routing,parser,text,else,if,version,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,version,parser,long,value,else,if,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,version,type,version,type,from,string,parser,text,else,throw,new,elasticsearch,parse,exception,failed,to,parse,term,vectors,request,unknown,field,current,field,name,if,fields,size,0,string,fields,as,array,new,string,fields,size,term,vectors,request,selected,fields,fields,to,array,fields,as,array
TermVectorsRequest -> public static void parseRequest(TermVectorsRequest termVectorsRequest, XContentParser parser) throws IOException;1542402699;populates a request object (pre-populated with defaults) based on a parser.;public static void parseRequest(TermVectorsRequest termVectorsRequest, XContentParser parser) throws IOException {_        XContentParser.Token token__        String currentFieldName = null__        List<String> fields = new ArrayList<>()__        while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {_            if (token == XContentParser.Token.FIELD_NAME) {_                currentFieldName = parser.currentName()__            } else if (currentFieldName != null) {_                if (FIELDS.match(currentFieldName, parser.getDeprecationHandler())) {_                    if (token == XContentParser.Token.START_ARRAY) {_                        while (parser.nextToken() != XContentParser.Token.END_ARRAY) {_                            fields.add(parser.text())__                        }_                    } else {_                        throw new ElasticsearchParseException("failed to parse term vectors request. field [fields] must be an array")__                    }_                } else if (OFFSETS.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.offsets(parser.booleanValue())__                } else if (POSITIONS.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.positions(parser.booleanValue())__                } else if (PAYLOADS.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.payloads(parser.booleanValue())__                } else if (currentFieldName.equals("term_statistics") || currentFieldName.equals("termStatistics")) {_                    termVectorsRequest.termStatistics(parser.booleanValue())__                } else if (currentFieldName.equals("field_statistics") || currentFieldName.equals("fieldStatistics")) {_                    termVectorsRequest.fieldStatistics(parser.booleanValue())__                } else if (DFS.match(currentFieldName, parser.getDeprecationHandler())) {_                    throw new IllegalArgumentException("distributed frequencies is not supported anymore for term vectors")__                } else if (currentFieldName.equals("per_field_analyzer") || currentFieldName.equals("perFieldAnalyzer")) {_                    termVectorsRequest.perFieldAnalyzer(readPerFieldAnalyzer(parser.map()))__                } else if (FILTER.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.filterSettings(readFilterSettings(parser))__                } else if (INDEX.match(currentFieldName, parser.getDeprecationHandler())) {_                    _                    termVectorsRequest.index = parser.text()__                } else if (TYPE.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.type = parser.text()__                } else if (ID.match(currentFieldName, parser.getDeprecationHandler())) {_                    if (termVectorsRequest.doc != null) {_                        throw new ElasticsearchParseException("failed to parse term vectors request. " +_                            "either [id] or [doc] can be specified, but not both!")__                    }_                    termVectorsRequest.id = parser.text()__                } else if (DOC.match(currentFieldName, parser.getDeprecationHandler())) {_                    if (termVectorsRequest.id != null) {_                        throw new ElasticsearchParseException("failed to parse term vectors request. " +_                            "either [id] or [doc] can be specified, but not both!")__                    }_                    termVectorsRequest.doc(jsonBuilder().copyCurrentStructure(parser))__                } else if (ROUTING.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.routing = parser.text()__                } else if (VERSION.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.version = parser.longValue()__                } else if (VERSION_TYPE.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.versionType = VersionType.fromString(parser.text())__                } else {_                    throw new ElasticsearchParseException("failed to parse term vectors request. unknown field [{}]", currentFieldName)__                }_            }_        }_        if (fields.size() > 0) {_            String[] fieldsAsArray = new String[fields.size()]__            termVectorsRequest.selectedFields(fields.toArray(fieldsAsArray))__        }_    };populates,a,request,object,pre,populated,with,defaults,based,on,a,parser;public,static,void,parse,request,term,vectors,request,term,vectors,request,xcontent,parser,parser,throws,ioexception,xcontent,parser,token,token,string,current,field,name,null,list,string,fields,new,array,list,while,token,parser,next,token,xcontent,parser,token,if,token,xcontent,parser,token,current,field,name,parser,current,name,else,if,current,field,name,null,if,fields,match,current,field,name,parser,get,deprecation,handler,if,token,xcontent,parser,token,while,parser,next,token,xcontent,parser,token,fields,add,parser,text,else,throw,new,elasticsearch,parse,exception,failed,to,parse,term,vectors,request,field,fields,must,be,an,array,else,if,offsets,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,offsets,parser,boolean,value,else,if,positions,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,positions,parser,boolean,value,else,if,payloads,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,payloads,parser,boolean,value,else,if,current,field,name,equals,current,field,name,equals,term,statistics,term,vectors,request,term,statistics,parser,boolean,value,else,if,current,field,name,equals,current,field,name,equals,field,statistics,term,vectors,request,field,statistics,parser,boolean,value,else,if,dfs,match,current,field,name,parser,get,deprecation,handler,throw,new,illegal,argument,exception,distributed,frequencies,is,not,supported,anymore,for,term,vectors,else,if,current,field,name,equals,current,field,name,equals,per,field,analyzer,term,vectors,request,per,field,analyzer,read,per,field,analyzer,parser,map,else,if,filter,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,filter,settings,read,filter,settings,parser,else,if,index,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,index,parser,text,else,if,type,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,type,parser,text,else,if,id,match,current,field,name,parser,get,deprecation,handler,if,term,vectors,request,doc,null,throw,new,elasticsearch,parse,exception,failed,to,parse,term,vectors,request,either,id,or,doc,can,be,specified,but,not,both,term,vectors,request,id,parser,text,else,if,doc,match,current,field,name,parser,get,deprecation,handler,if,term,vectors,request,id,null,throw,new,elasticsearch,parse,exception,failed,to,parse,term,vectors,request,either,id,or,doc,can,be,specified,but,not,both,term,vectors,request,doc,json,builder,copy,current,structure,parser,else,if,routing,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,routing,parser,text,else,if,version,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,version,parser,long,value,else,if,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,version,type,version,type,from,string,parser,text,else,throw,new,elasticsearch,parse,exception,failed,to,parse,term,vectors,request,unknown,field,current,field,name,if,fields,size,0,string,fields,as,array,new,string,fields,size,term,vectors,request,selected,fields,fields,to,array,fields,as,array
TermVectorsRequest -> public static void parseRequest(TermVectorsRequest termVectorsRequest, XContentParser parser) throws IOException;1544120595;populates a request object (pre-populated with defaults) based on a parser.;public static void parseRequest(TermVectorsRequest termVectorsRequest, XContentParser parser) throws IOException {_        XContentParser.Token token__        String currentFieldName = null__        List<String> fields = new ArrayList<>()__        while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {_            if (token == XContentParser.Token.FIELD_NAME) {_                currentFieldName = parser.currentName()__            } else if (currentFieldName != null) {_                if (FIELDS.match(currentFieldName, parser.getDeprecationHandler())) {_                    if (token == XContentParser.Token.START_ARRAY) {_                        while (parser.nextToken() != XContentParser.Token.END_ARRAY) {_                            fields.add(parser.text())__                        }_                    } else {_                        throw new ElasticsearchParseException("failed to parse term vectors request. field [fields] must be an array")__                    }_                } else if (OFFSETS.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.offsets(parser.booleanValue())__                } else if (POSITIONS.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.positions(parser.booleanValue())__                } else if (PAYLOADS.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.payloads(parser.booleanValue())__                } else if (currentFieldName.equals("term_statistics") || currentFieldName.equals("termStatistics")) {_                    termVectorsRequest.termStatistics(parser.booleanValue())__                } else if (currentFieldName.equals("field_statistics") || currentFieldName.equals("fieldStatistics")) {_                    termVectorsRequest.fieldStatistics(parser.booleanValue())__                } else if (DFS.match(currentFieldName, parser.getDeprecationHandler())) {_                    throw new IllegalArgumentException("distributed frequencies is not supported anymore for term vectors")__                } else if (currentFieldName.equals("per_field_analyzer") || currentFieldName.equals("perFieldAnalyzer")) {_                    termVectorsRequest.perFieldAnalyzer(readPerFieldAnalyzer(parser.map()))__                } else if (FILTER.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.filterSettings(readFilterSettings(parser))__                } else if (INDEX.match(currentFieldName, parser.getDeprecationHandler())) {_                    _                    termVectorsRequest.index = parser.text()__                } else if (TYPE.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.type = parser.text()__                    deprecationLogger.deprecated(RestTermVectorsAction.TYPES_DEPRECATION_MESSAGE)__                } else if (ID.match(currentFieldName, parser.getDeprecationHandler())) {_                    if (termVectorsRequest.doc != null) {_                        throw new ElasticsearchParseException("failed to parse term vectors request. " +_                            "either [id] or [doc] can be specified, but not both!")__                    }_                    termVectorsRequest.id = parser.text()__                } else if (DOC.match(currentFieldName, parser.getDeprecationHandler())) {_                    if (termVectorsRequest.id != null) {_                        throw new ElasticsearchParseException("failed to parse term vectors request. " +_                            "either [id] or [doc] can be specified, but not both!")__                    }_                    termVectorsRequest.doc(jsonBuilder().copyCurrentStructure(parser))__                } else if (ROUTING.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.routing = parser.text()__                } else if (VERSION.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.version = parser.longValue()__                } else if (VERSION_TYPE.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.versionType = VersionType.fromString(parser.text())__                } else {_                    throw new ElasticsearchParseException("failed to parse term vectors request. unknown field [{}]", currentFieldName)__                }_            }_        }_        if (fields.size() > 0) {_            String[] fieldsAsArray = new String[fields.size()]__            termVectorsRequest.selectedFields(fields.toArray(fieldsAsArray))__        }_    };populates,a,request,object,pre,populated,with,defaults,based,on,a,parser;public,static,void,parse,request,term,vectors,request,term,vectors,request,xcontent,parser,parser,throws,ioexception,xcontent,parser,token,token,string,current,field,name,null,list,string,fields,new,array,list,while,token,parser,next,token,xcontent,parser,token,if,token,xcontent,parser,token,current,field,name,parser,current,name,else,if,current,field,name,null,if,fields,match,current,field,name,parser,get,deprecation,handler,if,token,xcontent,parser,token,while,parser,next,token,xcontent,parser,token,fields,add,parser,text,else,throw,new,elasticsearch,parse,exception,failed,to,parse,term,vectors,request,field,fields,must,be,an,array,else,if,offsets,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,offsets,parser,boolean,value,else,if,positions,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,positions,parser,boolean,value,else,if,payloads,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,payloads,parser,boolean,value,else,if,current,field,name,equals,current,field,name,equals,term,statistics,term,vectors,request,term,statistics,parser,boolean,value,else,if,current,field,name,equals,current,field,name,equals,field,statistics,term,vectors,request,field,statistics,parser,boolean,value,else,if,dfs,match,current,field,name,parser,get,deprecation,handler,throw,new,illegal,argument,exception,distributed,frequencies,is,not,supported,anymore,for,term,vectors,else,if,current,field,name,equals,current,field,name,equals,per,field,analyzer,term,vectors,request,per,field,analyzer,read,per,field,analyzer,parser,map,else,if,filter,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,filter,settings,read,filter,settings,parser,else,if,index,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,index,parser,text,else,if,type,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,type,parser,text,deprecation,logger,deprecated,rest,term,vectors,action,else,if,id,match,current,field,name,parser,get,deprecation,handler,if,term,vectors,request,doc,null,throw,new,elasticsearch,parse,exception,failed,to,parse,term,vectors,request,either,id,or,doc,can,be,specified,but,not,both,term,vectors,request,id,parser,text,else,if,doc,match,current,field,name,parser,get,deprecation,handler,if,term,vectors,request,id,null,throw,new,elasticsearch,parse,exception,failed,to,parse,term,vectors,request,either,id,or,doc,can,be,specified,but,not,both,term,vectors,request,doc,json,builder,copy,current,structure,parser,else,if,routing,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,routing,parser,text,else,if,version,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,version,parser,long,value,else,if,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,version,type,version,type,from,string,parser,text,else,throw,new,elasticsearch,parse,exception,failed,to,parse,term,vectors,request,unknown,field,current,field,name,if,fields,size,0,string,fields,as,array,new,string,fields,size,term,vectors,request,selected,fields,fields,to,array,fields,as,array
TermVectorsRequest -> public static void parseRequest(TermVectorsRequest termVectorsRequest, XContentParser parser) throws IOException;1544210484;populates a request object (pre-populated with defaults) based on a parser.;public static void parseRequest(TermVectorsRequest termVectorsRequest, XContentParser parser) throws IOException {_        XContentParser.Token token__        String currentFieldName = null__        List<String> fields = new ArrayList<>()__        while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {_            if (token == XContentParser.Token.FIELD_NAME) {_                currentFieldName = parser.currentName()__            } else if (currentFieldName != null) {_                if (FIELDS.match(currentFieldName, parser.getDeprecationHandler())) {_                    if (token == XContentParser.Token.START_ARRAY) {_                        while (parser.nextToken() != XContentParser.Token.END_ARRAY) {_                            fields.add(parser.text())__                        }_                    } else {_                        throw new ElasticsearchParseException("failed to parse term vectors request. field [fields] must be an array")__                    }_                } else if (OFFSETS.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.offsets(parser.booleanValue())__                } else if (POSITIONS.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.positions(parser.booleanValue())__                } else if (PAYLOADS.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.payloads(parser.booleanValue())__                } else if (currentFieldName.equals("term_statistics") || currentFieldName.equals("termStatistics")) {_                    termVectorsRequest.termStatistics(parser.booleanValue())__                } else if (currentFieldName.equals("field_statistics") || currentFieldName.equals("fieldStatistics")) {_                    termVectorsRequest.fieldStatistics(parser.booleanValue())__                } else if (DFS.match(currentFieldName, parser.getDeprecationHandler())) {_                    throw new IllegalArgumentException("distributed frequencies is not supported anymore for term vectors")__                } else if (currentFieldName.equals("per_field_analyzer") || currentFieldName.equals("perFieldAnalyzer")) {_                    termVectorsRequest.perFieldAnalyzer(readPerFieldAnalyzer(parser.map()))__                } else if (FILTER.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.filterSettings(readFilterSettings(parser))__                } else if (INDEX.match(currentFieldName, parser.getDeprecationHandler())) {_                    _                    termVectorsRequest.index = parser.text()__                } else if (TYPE.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.type = parser.text()__                    deprecationLogger.deprecatedAndMaybeLog("termvectors_with_types",_                        RestTermVectorsAction.TYPES_DEPRECATION_MESSAGE)__                } else if (ID.match(currentFieldName, parser.getDeprecationHandler())) {_                    if (termVectorsRequest.doc != null) {_                        throw new ElasticsearchParseException("failed to parse term vectors request. " +_                            "either [id] or [doc] can be specified, but not both!")__                    }_                    termVectorsRequest.id = parser.text()__                } else if (DOC.match(currentFieldName, parser.getDeprecationHandler())) {_                    if (termVectorsRequest.id != null) {_                        throw new ElasticsearchParseException("failed to parse term vectors request. " +_                            "either [id] or [doc] can be specified, but not both!")__                    }_                    termVectorsRequest.doc(jsonBuilder().copyCurrentStructure(parser))__                } else if (ROUTING.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.routing = parser.text()__                } else if (VERSION.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.version = parser.longValue()__                } else if (VERSION_TYPE.match(currentFieldName, parser.getDeprecationHandler())) {_                    termVectorsRequest.versionType = VersionType.fromString(parser.text())__                } else {_                    throw new ElasticsearchParseException("failed to parse term vectors request. unknown field [{}]", currentFieldName)__                }_            }_        }_        if (fields.size() > 0) {_            String[] fieldsAsArray = new String[fields.size()]__            termVectorsRequest.selectedFields(fields.toArray(fieldsAsArray))__        }_    };populates,a,request,object,pre,populated,with,defaults,based,on,a,parser;public,static,void,parse,request,term,vectors,request,term,vectors,request,xcontent,parser,parser,throws,ioexception,xcontent,parser,token,token,string,current,field,name,null,list,string,fields,new,array,list,while,token,parser,next,token,xcontent,parser,token,if,token,xcontent,parser,token,current,field,name,parser,current,name,else,if,current,field,name,null,if,fields,match,current,field,name,parser,get,deprecation,handler,if,token,xcontent,parser,token,while,parser,next,token,xcontent,parser,token,fields,add,parser,text,else,throw,new,elasticsearch,parse,exception,failed,to,parse,term,vectors,request,field,fields,must,be,an,array,else,if,offsets,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,offsets,parser,boolean,value,else,if,positions,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,positions,parser,boolean,value,else,if,payloads,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,payloads,parser,boolean,value,else,if,current,field,name,equals,current,field,name,equals,term,statistics,term,vectors,request,term,statistics,parser,boolean,value,else,if,current,field,name,equals,current,field,name,equals,field,statistics,term,vectors,request,field,statistics,parser,boolean,value,else,if,dfs,match,current,field,name,parser,get,deprecation,handler,throw,new,illegal,argument,exception,distributed,frequencies,is,not,supported,anymore,for,term,vectors,else,if,current,field,name,equals,current,field,name,equals,per,field,analyzer,term,vectors,request,per,field,analyzer,read,per,field,analyzer,parser,map,else,if,filter,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,filter,settings,read,filter,settings,parser,else,if,index,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,index,parser,text,else,if,type,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,type,parser,text,deprecation,logger,deprecated,and,maybe,log,rest,term,vectors,action,else,if,id,match,current,field,name,parser,get,deprecation,handler,if,term,vectors,request,doc,null,throw,new,elasticsearch,parse,exception,failed,to,parse,term,vectors,request,either,id,or,doc,can,be,specified,but,not,both,term,vectors,request,id,parser,text,else,if,doc,match,current,field,name,parser,get,deprecation,handler,if,term,vectors,request,id,null,throw,new,elasticsearch,parse,exception,failed,to,parse,term,vectors,request,either,id,or,doc,can,be,specified,but,not,both,term,vectors,request,doc,json,builder,copy,current,structure,parser,else,if,routing,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,routing,parser,text,else,if,version,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,version,parser,long,value,else,if,match,current,field,name,parser,get,deprecation,handler,term,vectors,request,version,type,version,type,from,string,parser,text,else,throw,new,elasticsearch,parse,exception,failed,to,parse,term,vectors,request,unknown,field,current,field,name,if,fields,size,0,string,fields,as,array,new,string,fields,size,term,vectors,request,selected,fields,fields,to,array,fields,as,array
TermVectorsRequest -> public TermVectorsRequest fieldStatistics(boolean fieldStatistics);1524684173;Return the field statistics for each term in the shard or skip.;public TermVectorsRequest fieldStatistics(boolean fieldStatistics) {_        setFlag(Flag.FieldStatistics, fieldStatistics)__        return this__    };return,the,field,statistics,for,each,term,in,the,shard,or,skip;public,term,vectors,request,field,statistics,boolean,field,statistics,set,flag,flag,field,statistics,field,statistics,return,this
TermVectorsRequest -> public TermVectorsRequest fieldStatistics(boolean fieldStatistics);1525334055;Return the field statistics for each term in the shard or skip.;public TermVectorsRequest fieldStatistics(boolean fieldStatistics) {_        setFlag(Flag.FieldStatistics, fieldStatistics)__        return this__    };return,the,field,statistics,for,each,term,in,the,shard,or,skip;public,term,vectors,request,field,statistics,boolean,field,statistics,set,flag,flag,field,statistics,field,statistics,return,this
TermVectorsRequest -> public TermVectorsRequest fieldStatistics(boolean fieldStatistics);1535139672;Return the field statistics for each term in the shard or skip.;public TermVectorsRequest fieldStatistics(boolean fieldStatistics) {_        setFlag(Flag.FieldStatistics, fieldStatistics)__        return this__    };return,the,field,statistics,for,each,term,in,the,shard,or,skip;public,term,vectors,request,field,statistics,boolean,field,statistics,set,flag,flag,field,statistics,field,statistics,return,this
TermVectorsRequest -> public TermVectorsRequest fieldStatistics(boolean fieldStatistics);1541592065;Return the field statistics for each term in the shard or skip.;public TermVectorsRequest fieldStatistics(boolean fieldStatistics) {_        setFlag(Flag.FieldStatistics, fieldStatistics)__        return this__    };return,the,field,statistics,for,each,term,in,the,shard,or,skip;public,term,vectors,request,field,statistics,boolean,field,statistics,set,flag,flag,field,statistics,field,statistics,return,this
TermVectorsRequest -> public TermVectorsRequest fieldStatistics(boolean fieldStatistics);1542402699;Return the field statistics for each term in the shard or skip.;public TermVectorsRequest fieldStatistics(boolean fieldStatistics) {_        setFlag(Flag.FieldStatistics, fieldStatistics)__        return this__    };return,the,field,statistics,for,each,term,in,the,shard,or,skip;public,term,vectors,request,field,statistics,boolean,field,statistics,set,flag,flag,field,statistics,field,statistics,return,this
TermVectorsRequest -> public TermVectorsRequest fieldStatistics(boolean fieldStatistics);1544120595;Return the field statistics for each term in the shard or skip.;public TermVectorsRequest fieldStatistics(boolean fieldStatistics) {_        setFlag(Flag.FieldStatistics, fieldStatistics)__        return this__    };return,the,field,statistics,for,each,term,in,the,shard,or,skip;public,term,vectors,request,field,statistics,boolean,field,statistics,set,flag,flag,field,statistics,field,statistics,return,this
TermVectorsRequest -> public TermVectorsRequest fieldStatistics(boolean fieldStatistics);1544210484;Return the field statistics for each term in the shard or skip.;public TermVectorsRequest fieldStatistics(boolean fieldStatistics) {_        setFlag(Flag.FieldStatistics, fieldStatistics)__        return this__    };return,the,field,statistics,for,each,term,in,the,shard,or,skip;public,term,vectors,request,field,statistics,boolean,field,statistics,set,flag,flag,field,statistics,field,statistics,return,this
TermVectorsRequest -> public boolean termStatistics();1524684173;@return <code>true</code> if term statistics should be returned._Otherwise <code>false</code>;public boolean termStatistics() {_        return flagsEnum.contains(Flag.TermStatistics)__    };return,code,true,code,if,term,statistics,should,be,returned,otherwise,code,false,code;public,boolean,term,statistics,return,flags,enum,contains,flag,term,statistics
TermVectorsRequest -> public boolean termStatistics();1525334055;@return <code>true</code> if term statistics should be returned._Otherwise <code>false</code>;public boolean termStatistics() {_        return flagsEnum.contains(Flag.TermStatistics)__    };return,code,true,code,if,term,statistics,should,be,returned,otherwise,code,false,code;public,boolean,term,statistics,return,flags,enum,contains,flag,term,statistics
TermVectorsRequest -> public boolean termStatistics();1535139672;@return <code>true</code> if term statistics should be returned._Otherwise <code>false</code>;public boolean termStatistics() {_        return flagsEnum.contains(Flag.TermStatistics)__    };return,code,true,code,if,term,statistics,should,be,returned,otherwise,code,false,code;public,boolean,term,statistics,return,flags,enum,contains,flag,term,statistics
TermVectorsRequest -> public boolean termStatistics();1541592065;@return <code>true</code> if term statistics should be returned._Otherwise <code>false</code>;public boolean termStatistics() {_        return flagsEnum.contains(Flag.TermStatistics)__    };return,code,true,code,if,term,statistics,should,be,returned,otherwise,code,false,code;public,boolean,term,statistics,return,flags,enum,contains,flag,term,statistics
TermVectorsRequest -> public boolean termStatistics();1542402699;@return <code>true</code> if term statistics should be returned._Otherwise <code>false</code>;public boolean termStatistics() {_        return flagsEnum.contains(Flag.TermStatistics)__    };return,code,true,code,if,term,statistics,should,be,returned,otherwise,code,false,code;public,boolean,term,statistics,return,flags,enum,contains,flag,term,statistics
TermVectorsRequest -> public boolean termStatistics();1544120595;@return <code>true</code> if term statistics should be returned._Otherwise <code>false</code>;public boolean termStatistics() {_        return flagsEnum.contains(Flag.TermStatistics)__    };return,code,true,code,if,term,statistics,should,be,returned,otherwise,code,false,code;public,boolean,term,statistics,return,flags,enum,contains,flag,term,statistics
TermVectorsRequest -> public boolean termStatistics();1544210484;@return <code>true</code> if term statistics should be returned._Otherwise <code>false</code>;public boolean termStatistics() {_        return flagsEnum.contains(Flag.TermStatistics)__    };return,code,true,code,if,term,statistics,should,be,returned,otherwise,code,false,code;public,boolean,term,statistics,return,flags,enum,contains,flag,term,statistics
