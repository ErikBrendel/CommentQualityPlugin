# id;timestamp;commentText;codeText;commentWords;codeWords
Numbers -> public static byte[] longToBytes(long val);1524684173;Converts a long to a byte array.__@param val The long to convert to a byte array_@return The byte array converted;public static byte[] longToBytes(long val) {_        byte[] arr = new byte[8]__        arr[0] = (byte) (val >>> 56)__        arr[1] = (byte) (val >>> 48)__        arr[2] = (byte) (val >>> 40)__        arr[3] = (byte) (val >>> 32)__        arr[4] = (byte) (val >>> 24)__        arr[5] = (byte) (val >>> 16)__        arr[6] = (byte) (val >>> 8)__        arr[7] = (byte) (val)__        return arr__    };converts,a,long,to,a,byte,array,param,val,the,long,to,convert,to,a,byte,array,return,the,byte,array,converted;public,static,byte,long,to,bytes,long,val,byte,arr,new,byte,8,arr,0,byte,val,56,arr,1,byte,val,48,arr,2,byte,val,40,arr,3,byte,val,32,arr,4,byte,val,24,arr,5,byte,val,16,arr,6,byte,val,8,arr,7,byte,val,return,arr
Numbers -> public static byte[] longToBytes(long val);1540583181;Converts a long to a byte array.__@param val The long to convert to a byte array_@return The byte array converted;public static byte[] longToBytes(long val) {_        byte[] arr = new byte[8]__        arr[0] = (byte) (val >>> 56)__        arr[1] = (byte) (val >>> 48)__        arr[2] = (byte) (val >>> 40)__        arr[3] = (byte) (val >>> 32)__        arr[4] = (byte) (val >>> 24)__        arr[5] = (byte) (val >>> 16)__        arr[6] = (byte) (val >>> 8)__        arr[7] = (byte) (val)__        return arr__    };converts,a,long,to,a,byte,array,param,val,the,long,to,convert,to,a,byte,array,return,the,byte,array,converted;public,static,byte,long,to,bytes,long,val,byte,arr,new,byte,8,arr,0,byte,val,56,arr,1,byte,val,48,arr,2,byte,val,40,arr,3,byte,val,32,arr,4,byte,val,24,arr,5,byte,val,16,arr,6,byte,val,8,arr,7,byte,val,return,arr
Numbers -> public static byte[] longToBytes(long val);1546902890;Converts a long to a byte array.__@param val The long to convert to a byte array_@return The byte array converted;public static byte[] longToBytes(long val) {_        byte[] arr = new byte[8]__        arr[0] = (byte) (val >>> 56)__        arr[1] = (byte) (val >>> 48)__        arr[2] = (byte) (val >>> 40)__        arr[3] = (byte) (val >>> 32)__        arr[4] = (byte) (val >>> 24)__        arr[5] = (byte) (val >>> 16)__        arr[6] = (byte) (val >>> 8)__        arr[7] = (byte) (val)__        return arr__    };converts,a,long,to,a,byte,array,param,val,the,long,to,convert,to,a,byte,array,return,the,byte,array,converted;public,static,byte,long,to,bytes,long,val,byte,arr,new,byte,8,arr,0,byte,val,56,arr,1,byte,val,48,arr,2,byte,val,40,arr,3,byte,val,32,arr,4,byte,val,24,arr,5,byte,val,16,arr,6,byte,val,8,arr,7,byte,val,return,arr
Numbers -> public static long toLongExact(Number n);1524684173;Return the long that {@code n} stores, or throws an exception if the_stored value cannot be converted to a long that stores the exact same_value.;public static long toLongExact(Number n) {_        if (n instanceof Byte || n instanceof Short || n instanceof Integer_                || n instanceof Long) {_            return n.longValue()__        } else if (n instanceof Float || n instanceof Double) {_            double d = n.doubleValue()__            if (d != Math.round(d)) {_                throw new IllegalArgumentException(n + " is not an integer value")__            }_            return n.longValue()__        } else if (n instanceof BigDecimal) {_            return ((BigDecimal) n).toBigIntegerExact().longValueExact()__        } else if (n instanceof BigInteger) {_            return ((BigInteger) n).longValueExact()__        } else {_            throw new IllegalArgumentException("Cannot check whether [" + n + "] of class [" + n.getClass().getName()_                    + "] is actually a long")__        }_    };return,the,long,that,code,n,stores,or,throws,an,exception,if,the,stored,value,cannot,be,converted,to,a,long,that,stores,the,exact,same,value;public,static,long,to,long,exact,number,n,if,n,instanceof,byte,n,instanceof,short,n,instanceof,integer,n,instanceof,long,return,n,long,value,else,if,n,instanceof,float,n,instanceof,double,double,d,n,double,value,if,d,math,round,d,throw,new,illegal,argument,exception,n,is,not,an,integer,value,return,n,long,value,else,if,n,instanceof,big,decimal,return,big,decimal,n,to,big,integer,exact,long,value,exact,else,if,n,instanceof,big,integer,return,big,integer,n,long,value,exact,else,throw,new,illegal,argument,exception,cannot,check,whether,n,of,class,n,get,class,get,name,is,actually,a,long
Numbers -> public static long toLongExact(Number n);1540583181;Return the long that {@code n} stores, or throws an exception if the_stored value cannot be converted to a long that stores the exact same_value.;public static long toLongExact(Number n) {_        if (n instanceof Byte || n instanceof Short || n instanceof Integer_                || n instanceof Long) {_            return n.longValue()__        } else if (n instanceof Float || n instanceof Double) {_            double d = n.doubleValue()__            if (d != Math.round(d)) {_                throw new IllegalArgumentException(n + " is not an integer value")__            }_            return n.longValue()__        } else if (n instanceof BigDecimal) {_            return ((BigDecimal) n).toBigIntegerExact().longValueExact()__        } else if (n instanceof BigInteger) {_            return ((BigInteger) n).longValueExact()__        } else {_            throw new IllegalArgumentException("Cannot check whether [" + n + "] of class [" + n.getClass().getName()_                    + "] is actually a long")__        }_    };return,the,long,that,code,n,stores,or,throws,an,exception,if,the,stored,value,cannot,be,converted,to,a,long,that,stores,the,exact,same,value;public,static,long,to,long,exact,number,n,if,n,instanceof,byte,n,instanceof,short,n,instanceof,integer,n,instanceof,long,return,n,long,value,else,if,n,instanceof,float,n,instanceof,double,double,d,n,double,value,if,d,math,round,d,throw,new,illegal,argument,exception,n,is,not,an,integer,value,return,n,long,value,else,if,n,instanceof,big,decimal,return,big,decimal,n,to,big,integer,exact,long,value,exact,else,if,n,instanceof,big,integer,return,big,integer,n,long,value,exact,else,throw,new,illegal,argument,exception,cannot,check,whether,n,of,class,n,get,class,get,name,is,actually,a,long
Numbers -> public static long toLongExact(Number n);1546902890;Return the long that {@code n} stores, or throws an exception if the_stored value cannot be converted to a long that stores the exact same_value.;public static long toLongExact(Number n) {_        if (n instanceof Byte || n instanceof Short || n instanceof Integer_                || n instanceof Long) {_            return n.longValue()__        } else if (n instanceof Float || n instanceof Double) {_            double d = n.doubleValue()__            if (d != Math.round(d)) {_                throw new IllegalArgumentException(n + " is not an integer value")__            }_            return n.longValue()__        } else if (n instanceof BigDecimal) {_            return ((BigDecimal) n).toBigIntegerExact().longValueExact()__        } else if (n instanceof BigInteger) {_            return ((BigInteger) n).longValueExact()__        } else {_            throw new IllegalArgumentException("Cannot check whether [" + n + "] of class [" + n.getClass().getName()_                    + "] is actually a long")__        }_    };return,the,long,that,code,n,stores,or,throws,an,exception,if,the,stored,value,cannot,be,converted,to,a,long,that,stores,the,exact,same,value;public,static,long,to,long,exact,number,n,if,n,instanceof,byte,n,instanceof,short,n,instanceof,integer,n,instanceof,long,return,n,long,value,else,if,n,instanceof,float,n,instanceof,double,double,d,n,double,value,if,d,math,round,d,throw,new,illegal,argument,exception,n,is,not,an,integer,value,return,n,long,value,else,if,n,instanceof,big,decimal,return,big,decimal,n,to,big,integer,exact,long,value,exact,else,if,n,instanceof,big,integer,return,big,integer,n,long,value,exact,else,throw,new,illegal,argument,exception,cannot,check,whether,n,of,class,n,get,class,get,name,is,actually,a,long
Numbers -> public static byte[] doubleToBytes(double val);1524684173;Converts a double to a byte array.__@param val The double to convert to a byte array_@return The byte array converted;public static byte[] doubleToBytes(double val) {_        return longToBytes(Double.doubleToRawLongBits(val))__    };converts,a,double,to,a,byte,array,param,val,the,double,to,convert,to,a,byte,array,return,the,byte,array,converted;public,static,byte,double,to,bytes,double,val,return,long,to,bytes,double,double,to,raw,long,bits,val
Numbers -> public static byte[] doubleToBytes(double val);1540583181;Converts a double to a byte array.__@param val The double to convert to a byte array_@return The byte array converted;public static byte[] doubleToBytes(double val) {_        return longToBytes(Double.doubleToRawLongBits(val))__    };converts,a,double,to,a,byte,array,param,val,the,double,to,convert,to,a,byte,array,return,the,byte,array,converted;public,static,byte,double,to,bytes,double,val,return,long,to,bytes,double,double,to,raw,long,bits,val
Numbers -> public static byte[] doubleToBytes(double val);1546902890;Converts a double to a byte array.__@param val The double to convert to a byte array_@return The byte array converted;public static byte[] doubleToBytes(double val) {_        return longToBytes(Double.doubleToRawLongBits(val))__    };converts,a,double,to,a,byte,array,param,val,the,double,to,convert,to,a,byte,array,return,the,byte,array,converted;public,static,byte,double,to,bytes,double,val,return,long,to,bytes,double,double,to,raw,long,bits,val
Numbers -> public static int bytesToInt(byte[] arr);1524684173;Converts a byte array to an int.__@param arr The byte array to convert to an int_@return The int converted;public static int bytesToInt(byte[] arr) {_        return (arr[0] << 24) | ((arr[1] & 0xff) << 16) | ((arr[2] & 0xff) << 8) | (arr[3] & 0xff)__    };converts,a,byte,array,to,an,int,param,arr,the,byte,array,to,convert,to,an,int,return,the,int,converted;public,static,int,bytes,to,int,byte,arr,return,arr,0,24,arr,1,0xff,16,arr,2,0xff,8,arr,3,0xff
Numbers -> public static int bytesToInt(byte[] arr);1540583181;Converts a byte array to an int.__@param arr The byte array to convert to an int_@return The int converted;public static int bytesToInt(byte[] arr) {_        return (arr[0] << 24) | ((arr[1] & 0xff) << 16) | ((arr[2] & 0xff) << 8) | (arr[3] & 0xff)__    };converts,a,byte,array,to,an,int,param,arr,the,byte,array,to,convert,to,an,int,return,the,int,converted;public,static,int,bytes,to,int,byte,arr,return,arr,0,24,arr,1,0xff,16,arr,2,0xff,8,arr,3,0xff
Numbers -> public static long bytesToLong(byte[] arr);1524684173;Converts a byte array to a long.__@param arr The byte array to convert to a long_@return The long converter;public static long bytesToLong(byte[] arr) {_        int high = (arr[0] << 24) | ((arr[1] & 0xff) << 16) | ((arr[2] & 0xff) << 8) | (arr[3] & 0xff)__        int low = (arr[4] << 24) | ((arr[5] & 0xff) << 16) | ((arr[6] & 0xff) << 8) | (arr[7] & 0xff)__        return (((long) high) << 32) | (low & 0x0ffffffffL)__    };converts,a,byte,array,to,a,long,param,arr,the,byte,array,to,convert,to,a,long,return,the,long,converter;public,static,long,bytes,to,long,byte,arr,int,high,arr,0,24,arr,1,0xff,16,arr,2,0xff,8,arr,3,0xff,int,low,arr,4,24,arr,5,0xff,16,arr,6,0xff,8,arr,7,0xff,return,long,high,32,low,0x0ffffffff,l
Numbers -> public static long bytesToLong(byte[] arr);1540583181;Converts a byte array to a long.__@param arr The byte array to convert to a long_@return The long converter;public static long bytesToLong(byte[] arr) {_        int high = (arr[0] << 24) | ((arr[1] & 0xff) << 16) | ((arr[2] & 0xff) << 8) | (arr[3] & 0xff)__        int low = (arr[4] << 24) | ((arr[5] & 0xff) << 16) | ((arr[6] & 0xff) << 8) | (arr[7] & 0xff)__        return (((long) high) << 32) | (low & 0x0ffffffffL)__    };converts,a,byte,array,to,a,long,param,arr,the,byte,array,to,convert,to,a,long,return,the,long,converter;public,static,long,bytes,to,long,byte,arr,int,high,arr,0,24,arr,1,0xff,16,arr,2,0xff,8,arr,3,0xff,int,low,arr,4,24,arr,5,0xff,16,arr,6,0xff,8,arr,7,0xff,return,long,high,32,low,0x0ffffffff,l
Numbers -> public static boolean isValidDouble(double value);1524684173;Returns true if value is neither NaN nor infinite.;public static boolean isValidDouble(double value) {_        if (Double.isNaN(value) || Double.isInfinite(value)) {_            return false__        }_        return true__    };returns,true,if,value,is,neither,na,n,nor,infinite;public,static,boolean,is,valid,double,double,value,if,double,is,na,n,value,double,is,infinite,value,return,false,return,true
Numbers -> public static boolean isValidDouble(double value);1540583181;Returns true if value is neither NaN nor infinite.;public static boolean isValidDouble(double value) {_        if (Double.isNaN(value) || Double.isInfinite(value)) {_            return false__        }_        return true__    };returns,true,if,value,is,neither,na,n,nor,infinite;public,static,boolean,is,valid,double,double,value,if,double,is,na,n,value,double,is,infinite,value,return,false,return,true
Numbers -> public static boolean isValidDouble(double value);1546902890;Returns true if value is neither NaN nor infinite.;public static boolean isValidDouble(double value) {_        if (Double.isNaN(value) || Double.isInfinite(value)) {_            return false__        }_        return true__    };returns,true,if,value,is,neither,na,n,nor,infinite;public,static,boolean,is,valid,double,double,value,if,double,is,na,n,value,double,is,infinite,value,return,false,return,true
Numbers -> public static float bytesToFloat(byte[] arr);1524684173;Converts a byte array to float.__@param arr The byte array to convert to a float_@return The float converted;public static float bytesToFloat(byte[] arr) {_        return Float.intBitsToFloat(bytesToInt(arr))__    };converts,a,byte,array,to,float,param,arr,the,byte,array,to,convert,to,a,float,return,the,float,converted;public,static,float,bytes,to,float,byte,arr,return,float,int,bits,to,float,bytes,to,int,arr
Numbers -> public static float bytesToFloat(byte[] arr);1540583181;Converts a byte array to float.__@param arr The byte array to convert to a float_@return The float converted;public static float bytesToFloat(byte[] arr) {_        return Float.intBitsToFloat(bytesToInt(arr))__    };converts,a,byte,array,to,float,param,arr,the,byte,array,to,convert,to,a,float,return,the,float,converted;public,static,float,bytes,to,float,byte,arr,return,float,int,bits,to,float,bytes,to,int,arr
Numbers -> public static long toLong(String stringValue, boolean coerce);1524684173;Return the long that {@code stringValue} stores or throws an exception if the_stored value cannot be converted to a long that stores the exact same_value and {@code coerce} is false.;public static long toLong(String stringValue, boolean coerce) {_        try {_            return Long.parseLong(stringValue)__        } catch (NumberFormatException e) {_            _        }__        final BigInteger bigIntegerValue__        try {_            BigDecimal bigDecimalValue = new BigDecimal(stringValue)__            bigIntegerValue = coerce ? bigDecimalValue.toBigInteger() : bigDecimalValue.toBigIntegerExact()__        } catch (ArithmeticException e) {_            throw new IllegalArgumentException("Value [" + stringValue + "] has a decimal part")__        } catch (NumberFormatException e) {_            throw new IllegalArgumentException("For input string: \"" + stringValue + "\"")__        }__        if (bigIntegerValue.compareTo(MAX_LONG_VALUE) > 0 || bigIntegerValue.compareTo(MIN_LONG_VALUE) < 0) {_            throw new IllegalArgumentException("Value [" + stringValue + "] is out of range for a long")__        }__        return bigIntegerValue.longValue()__    };return,the,long,that,code,string,value,stores,or,throws,an,exception,if,the,stored,value,cannot,be,converted,to,a,long,that,stores,the,exact,same,value,and,code,coerce,is,false;public,static,long,to,long,string,string,value,boolean,coerce,try,return,long,parse,long,string,value,catch,number,format,exception,e,final,big,integer,big,integer,value,try,big,decimal,big,decimal,value,new,big,decimal,string,value,big,integer,value,coerce,big,decimal,value,to,big,integer,big,decimal,value,to,big,integer,exact,catch,arithmetic,exception,e,throw,new,illegal,argument,exception,value,string,value,has,a,decimal,part,catch,number,format,exception,e,throw,new,illegal,argument,exception,for,input,string,string,value,if,big,integer,value,compare,to,0,big,integer,value,compare,to,0,throw,new,illegal,argument,exception,value,string,value,is,out,of,range,for,a,long,return,big,integer,value,long,value
Numbers -> public static long toLong(String stringValue, boolean coerce);1540583181;Return the long that {@code stringValue} stores or throws an exception if the_stored value cannot be converted to a long that stores the exact same_value and {@code coerce} is false.;public static long toLong(String stringValue, boolean coerce) {_        try {_            return Long.parseLong(stringValue)__        } catch (NumberFormatException e) {_            _        }__        final BigInteger bigIntegerValue__        try {_            BigDecimal bigDecimalValue = new BigDecimal(stringValue)__            bigIntegerValue = coerce ? bigDecimalValue.toBigInteger() : bigDecimalValue.toBigIntegerExact()__        } catch (ArithmeticException e) {_            throw new IllegalArgumentException("Value [" + stringValue + "] has a decimal part")__        } catch (NumberFormatException e) {_            throw new IllegalArgumentException("For input string: \"" + stringValue + "\"")__        }__        if (bigIntegerValue.compareTo(MAX_LONG_VALUE) > 0 || bigIntegerValue.compareTo(MIN_LONG_VALUE) < 0) {_            throw new IllegalArgumentException("Value [" + stringValue + "] is out of range for a long")__        }__        return bigIntegerValue.longValue()__    };return,the,long,that,code,string,value,stores,or,throws,an,exception,if,the,stored,value,cannot,be,converted,to,a,long,that,stores,the,exact,same,value,and,code,coerce,is,false;public,static,long,to,long,string,string,value,boolean,coerce,try,return,long,parse,long,string,value,catch,number,format,exception,e,final,big,integer,big,integer,value,try,big,decimal,big,decimal,value,new,big,decimal,string,value,big,integer,value,coerce,big,decimal,value,to,big,integer,big,decimal,value,to,big,integer,exact,catch,arithmetic,exception,e,throw,new,illegal,argument,exception,value,string,value,has,a,decimal,part,catch,number,format,exception,e,throw,new,illegal,argument,exception,for,input,string,string,value,if,big,integer,value,compare,to,0,big,integer,value,compare,to,0,throw,new,illegal,argument,exception,value,string,value,is,out,of,range,for,a,long,return,big,integer,value,long,value
Numbers -> public static long toLong(String stringValue, boolean coerce);1546902890;Return the long that {@code stringValue} stores or throws an exception if the_stored value cannot be converted to a long that stores the exact same_value and {@code coerce} is false.;public static long toLong(String stringValue, boolean coerce) {_        try {_            return Long.parseLong(stringValue)__        } catch (NumberFormatException e) {_            _        }__        final BigInteger bigIntegerValue__        try {_            BigDecimal bigDecimalValue = new BigDecimal(stringValue)__            bigIntegerValue = coerce ? bigDecimalValue.toBigInteger() : bigDecimalValue.toBigIntegerExact()__        } catch (ArithmeticException e) {_            throw new IllegalArgumentException("Value [" + stringValue + "] has a decimal part")__        } catch (NumberFormatException e) {_            throw new IllegalArgumentException("For input string: \"" + stringValue + "\"")__        }__        if (bigIntegerValue.compareTo(MAX_LONG_VALUE) > 0 || bigIntegerValue.compareTo(MIN_LONG_VALUE) < 0) {_            throw new IllegalArgumentException("Value [" + stringValue + "] is out of range for a long")__        }__        return bigIntegerValue.longValue()__    };return,the,long,that,code,string,value,stores,or,throws,an,exception,if,the,stored,value,cannot,be,converted,to,a,long,that,stores,the,exact,same,value,and,code,coerce,is,false;public,static,long,to,long,string,string,value,boolean,coerce,try,return,long,parse,long,string,value,catch,number,format,exception,e,final,big,integer,big,integer,value,try,big,decimal,big,decimal,value,new,big,decimal,string,value,big,integer,value,coerce,big,decimal,value,to,big,integer,big,decimal,value,to,big,integer,exact,catch,arithmetic,exception,e,throw,new,illegal,argument,exception,value,string,value,has,a,decimal,part,catch,number,format,exception,e,throw,new,illegal,argument,exception,for,input,string,string,value,if,big,integer,value,compare,to,0,big,integer,value,compare,to,0,throw,new,illegal,argument,exception,value,string,value,is,out,of,range,for,a,long,return,big,integer,value,long,value
Numbers -> public static byte[] intToBytes(int val);1524684173;Converts an int to a byte array.__@param val The int to convert to a byte array_@return The byte array converted;public static byte[] intToBytes(int val) {_        byte[] arr = new byte[4]__        arr[0] = (byte) (val >>> 24)__        arr[1] = (byte) (val >>> 16)__        arr[2] = (byte) (val >>> 8)__        arr[3] = (byte) (val)__        return arr__    };converts,an,int,to,a,byte,array,param,val,the,int,to,convert,to,a,byte,array,return,the,byte,array,converted;public,static,byte,int,to,bytes,int,val,byte,arr,new,byte,4,arr,0,byte,val,24,arr,1,byte,val,16,arr,2,byte,val,8,arr,3,byte,val,return,arr
Numbers -> public static byte[] intToBytes(int val);1540583181;Converts an int to a byte array.__@param val The int to convert to a byte array_@return The byte array converted;public static byte[] intToBytes(int val) {_        byte[] arr = new byte[4]__        arr[0] = (byte) (val >>> 24)__        arr[1] = (byte) (val >>> 16)__        arr[2] = (byte) (val >>> 8)__        arr[3] = (byte) (val)__        return arr__    };converts,an,int,to,a,byte,array,param,val,the,int,to,convert,to,a,byte,array,return,the,byte,array,converted;public,static,byte,int,to,bytes,int,val,byte,arr,new,byte,4,arr,0,byte,val,24,arr,1,byte,val,16,arr,2,byte,val,8,arr,3,byte,val,return,arr
Numbers -> public static short toShortExact(Number n);1524684173;Return the short that {@code n} stores, or throws an exception if the_stored value cannot be converted to a short that stores the exact same_value.;public static short toShortExact(Number n) {_        long l = toLongExact(n)__        if (l != (short) l) {_            throw new ArithmeticException("short overflow: " + l)__        }_        return (short) l__    };return,the,short,that,code,n,stores,or,throws,an,exception,if,the,stored,value,cannot,be,converted,to,a,short,that,stores,the,exact,same,value;public,static,short,to,short,exact,number,n,long,l,to,long,exact,n,if,l,short,l,throw,new,arithmetic,exception,short,overflow,l,return,short,l
Numbers -> public static short toShortExact(Number n);1540583181;Return the short that {@code n} stores, or throws an exception if the_stored value cannot be converted to a short that stores the exact same_value.;public static short toShortExact(Number n) {_        long l = toLongExact(n)__        if (l != (short) l) {_            throw new ArithmeticException("short overflow: " + l)__        }_        return (short) l__    };return,the,short,that,code,n,stores,or,throws,an,exception,if,the,stored,value,cannot,be,converted,to,a,short,that,stores,the,exact,same,value;public,static,short,to,short,exact,number,n,long,l,to,long,exact,n,if,l,short,l,throw,new,arithmetic,exception,short,overflow,l,return,short,l
Numbers -> public static short toShortExact(Number n);1546902890;Return the short that {@code n} stores, or throws an exception if the_stored value cannot be converted to a short that stores the exact same_value.;public static short toShortExact(Number n) {_        long l = toLongExact(n)__        if (l != (short) l) {_            throw new ArithmeticException("short overflow: " + l)__        }_        return (short) l__    };return,the,short,that,code,n,stores,or,throws,an,exception,if,the,stored,value,cannot,be,converted,to,a,short,that,stores,the,exact,same,value;public,static,short,to,short,exact,number,n,long,l,to,long,exact,n,if,l,short,l,throw,new,arithmetic,exception,short,overflow,l,return,short,l
Numbers -> public static short bytesToShort(byte[] arr);1524684173;Converts a byte array to an short.__@param arr The byte array to convert to an short_@return The int converted;public static short bytesToShort(byte[] arr) {_        return (short) (((arr[0] & 0xff) << 8) | (arr[1] & 0xff))__    };converts,a,byte,array,to,an,short,param,arr,the,byte,array,to,convert,to,an,short,return,the,int,converted;public,static,short,bytes,to,short,byte,arr,return,short,arr,0,0xff,8,arr,1,0xff
Numbers -> public static short bytesToShort(byte[] arr);1540583181;Converts a byte array to an short.__@param arr The byte array to convert to an short_@return The int converted;public static short bytesToShort(byte[] arr) {_        return (short) (((arr[0] & 0xff) << 8) | (arr[1] & 0xff))__    };converts,a,byte,array,to,an,short,param,arr,the,byte,array,to,convert,to,an,short,return,the,int,converted;public,static,short,bytes,to,short,byte,arr,return,short,arr,0,0xff,8,arr,1,0xff
Numbers -> public static byte[] shortToBytes(int val);1524684173;Converts an int to a byte array.__@param val The int to convert to a byte array_@return The byte array converted;public static byte[] shortToBytes(int val) {_        byte[] arr = new byte[2]__        arr[0] = (byte) (val >>> 8)__        arr[1] = (byte) (val)__        return arr__    };converts,an,int,to,a,byte,array,param,val,the,int,to,convert,to,a,byte,array,return,the,byte,array,converted;public,static,byte,short,to,bytes,int,val,byte,arr,new,byte,2,arr,0,byte,val,8,arr,1,byte,val,return,arr
Numbers -> public static byte[] shortToBytes(int val);1540583181;Converts an int to a byte array.__@param val The int to convert to a byte array_@return The byte array converted;public static byte[] shortToBytes(int val) {_        byte[] arr = new byte[2]__        arr[0] = (byte) (val >>> 8)__        arr[1] = (byte) (val)__        return arr__    };converts,an,int,to,a,byte,array,param,val,the,int,to,convert,to,a,byte,array,return,the,byte,array,converted;public,static,byte,short,to,bytes,int,val,byte,arr,new,byte,2,arr,0,byte,val,8,arr,1,byte,val,return,arr
Numbers -> public static byte[] shortToBytes(int val);1546902890;Converts an int to a byte array.__@param val The int to convert to a byte array_@return The byte array converted;public static byte[] shortToBytes(int val) {_        byte[] arr = new byte[2]__        arr[0] = (byte) (val >>> 8)__        arr[1] = (byte) (val)__        return arr__    };converts,an,int,to,a,byte,array,param,val,the,int,to,convert,to,a,byte,array,return,the,byte,array,converted;public,static,byte,short,to,bytes,int,val,byte,arr,new,byte,2,arr,0,byte,val,8,arr,1,byte,val,return,arr
Numbers -> public static double bytesToDouble(byte[] arr);1524684173;Converts a byte array to double.__@param arr The byte array to convert to a double_@return The double converted;public static double bytesToDouble(byte[] arr) {_        return Double.longBitsToDouble(bytesToLong(arr))__    };converts,a,byte,array,to,double,param,arr,the,byte,array,to,convert,to,a,double,return,the,double,converted;public,static,double,bytes,to,double,byte,arr,return,double,long,bits,to,double,bytes,to,long,arr
Numbers -> public static double bytesToDouble(byte[] arr);1540583181;Converts a byte array to double.__@param arr The byte array to convert to a double_@return The double converted;public static double bytesToDouble(byte[] arr) {_        return Double.longBitsToDouble(bytesToLong(arr))__    };converts,a,byte,array,to,double,param,arr,the,byte,array,to,convert,to,a,double,return,the,double,converted;public,static,double,bytes,to,double,byte,arr,return,double,long,bits,to,double,bytes,to,long,arr
Numbers -> public static int toIntExact(Number n);1524684173;Return the int that {@code n} stores, or throws an exception if the_stored value cannot be converted to an int that stores the exact same_value.;public static int toIntExact(Number n) {_        return Math.toIntExact(toLongExact(n))__    };return,the,int,that,code,n,stores,or,throws,an,exception,if,the,stored,value,cannot,be,converted,to,an,int,that,stores,the,exact,same,value;public,static,int,to,int,exact,number,n,return,math,to,int,exact,to,long,exact,n
Numbers -> public static int toIntExact(Number n);1540583181;Return the int that {@code n} stores, or throws an exception if the_stored value cannot be converted to an int that stores the exact same_value.;public static int toIntExact(Number n) {_        return Math.toIntExact(toLongExact(n))__    };return,the,int,that,code,n,stores,or,throws,an,exception,if,the,stored,value,cannot,be,converted,to,an,int,that,stores,the,exact,same,value;public,static,int,to,int,exact,number,n,return,math,to,int,exact,to,long,exact,n
Numbers -> public static int toIntExact(Number n);1546902890;Return the int that {@code n} stores, or throws an exception if the_stored value cannot be converted to an int that stores the exact same_value.;public static int toIntExact(Number n) {_        return Math.toIntExact(toLongExact(n))__    };return,the,int,that,code,n,stores,or,throws,an,exception,if,the,stored,value,cannot,be,converted,to,an,int,that,stores,the,exact,same,value;public,static,int,to,int,exact,number,n,return,math,to,int,exact,to,long,exact,n
Numbers -> public static byte toByteExact(Number n);1524684173;Return the byte that {@code n} stores, or throws an exception if the_stored value cannot be converted to a byte that stores the exact same_value.;public static byte toByteExact(Number n) {_        long l = toLongExact(n)__        if (l != (byte) l) {_            throw new ArithmeticException("byte overflow: " + l)__        }_        return (byte) l__    };return,the,byte,that,code,n,stores,or,throws,an,exception,if,the,stored,value,cannot,be,converted,to,a,byte,that,stores,the,exact,same,value;public,static,byte,to,byte,exact,number,n,long,l,to,long,exact,n,if,l,byte,l,throw,new,arithmetic,exception,byte,overflow,l,return,byte,l
Numbers -> public static byte toByteExact(Number n);1540583181;Return the byte that {@code n} stores, or throws an exception if the_stored value cannot be converted to a byte that stores the exact same_value.;public static byte toByteExact(Number n) {_        long l = toLongExact(n)__        if (l != (byte) l) {_            throw new ArithmeticException("byte overflow: " + l)__        }_        return (byte) l__    };return,the,byte,that,code,n,stores,or,throws,an,exception,if,the,stored,value,cannot,be,converted,to,a,byte,that,stores,the,exact,same,value;public,static,byte,to,byte,exact,number,n,long,l,to,long,exact,n,if,l,byte,l,throw,new,arithmetic,exception,byte,overflow,l,return,byte,l
Numbers -> public static byte toByteExact(Number n);1546902890;Return the byte that {@code n} stores, or throws an exception if the_stored value cannot be converted to a byte that stores the exact same_value.;public static byte toByteExact(Number n) {_        long l = toLongExact(n)__        if (l != (byte) l) {_            throw new ArithmeticException("byte overflow: " + l)__        }_        return (byte) l__    };return,the,byte,that,code,n,stores,or,throws,an,exception,if,the,stored,value,cannot,be,converted,to,a,byte,that,stores,the,exact,same,value;public,static,byte,to,byte,exact,number,n,long,l,to,long,exact,n,if,l,byte,l,throw,new,arithmetic,exception,byte,overflow,l,return,byte,l
Numbers -> public static byte[] floatToBytes(float val);1524684173;Converts a float to a byte array.__@param val The float to convert to a byte array_@return The byte array converted;public static byte[] floatToBytes(float val) {_        return intToBytes(Float.floatToRawIntBits(val))__    };converts,a,float,to,a,byte,array,param,val,the,float,to,convert,to,a,byte,array,return,the,byte,array,converted;public,static,byte,float,to,bytes,float,val,return,int,to,bytes,float,float,to,raw,int,bits,val
Numbers -> public static byte[] floatToBytes(float val);1540583181;Converts a float to a byte array.__@param val The float to convert to a byte array_@return The byte array converted;public static byte[] floatToBytes(float val) {_        return intToBytes(Float.floatToRawIntBits(val))__    };converts,a,float,to,a,byte,array,param,val,the,float,to,convert,to,a,byte,array,return,the,byte,array,converted;public,static,byte,float,to,bytes,float,val,return,int,to,bytes,float,float,to,raw,int,bits,val
