# id;timestamp;commentText;codeText;commentWords;codeWords
WildcardQueryBuilder -> public WildcardQueryBuilder(String fieldName, String value);1524684173;Implements the wildcard search query. Supported wildcards are <tt>*</tt>, which_matches any character sequence (including the empty one), and <tt>?</tt>,_which matches any single character. Note this query can be slow, as it_needs to iterate over many terms. In order to prevent extremely slow WildcardQueries,_a Wildcard term should not start with one of the wildcards <tt>*</tt> or_<tt>?</tt>.__@param fieldName The field name_@param value The wildcard query string;public WildcardQueryBuilder(String fieldName, String value) {_        if (Strings.isEmpty(fieldName)) {_            throw new IllegalArgumentException("field name is null or empty")__        }_        if (value == null) {_            throw new IllegalArgumentException("value cannot be null")__        }_        this.fieldName = fieldName__        this.value = value__    };implements,the,wildcard,search,query,supported,wildcards,are,tt,tt,which,matches,any,character,sequence,including,the,empty,one,and,tt,tt,which,matches,any,single,character,note,this,query,can,be,slow,as,it,needs,to,iterate,over,many,terms,in,order,to,prevent,extremely,slow,wildcard,queries,a,wildcard,term,should,not,start,with,one,of,the,wildcards,tt,tt,or,tt,tt,param,field,name,the,field,name,param,value,the,wildcard,query,string;public,wildcard,query,builder,string,field,name,string,value,if,strings,is,empty,field,name,throw,new,illegal,argument,exception,field,name,is,null,or,empty,if,value,null,throw,new,illegal,argument,exception,value,cannot,be,null,this,field,name,field,name,this,value,value
WildcardQueryBuilder -> public WildcardQueryBuilder(String fieldName, String value);1525334055;Implements the wildcard search query. Supported wildcards are {@code *}, which_matches any character sequence (including the empty one), and {@code ?},_which matches any single character. Note this query can be slow, as it_needs to iterate over many terms. In order to prevent extremely slow WildcardQueries,_a Wildcard term should not start with one of the wildcards {@code *} or_{@code ?}.__@param fieldName The field name_@param value The wildcard query string;public WildcardQueryBuilder(String fieldName, String value) {_        if (Strings.isEmpty(fieldName)) {_            throw new IllegalArgumentException("field name is null or empty")__        }_        if (value == null) {_            throw new IllegalArgumentException("value cannot be null")__        }_        this.fieldName = fieldName__        this.value = value__    };implements,the,wildcard,search,query,supported,wildcards,are,code,which,matches,any,character,sequence,including,the,empty,one,and,code,which,matches,any,single,character,note,this,query,can,be,slow,as,it,needs,to,iterate,over,many,terms,in,order,to,prevent,extremely,slow,wildcard,queries,a,wildcard,term,should,not,start,with,one,of,the,wildcards,code,or,code,param,field,name,the,field,name,param,value,the,wildcard,query,string;public,wildcard,query,builder,string,field,name,string,value,if,strings,is,empty,field,name,throw,new,illegal,argument,exception,field,name,is,null,or,empty,if,value,null,throw,new,illegal,argument,exception,value,cannot,be,null,this,field,name,field,name,this,value,value
WildcardQueryBuilder -> public WildcardQueryBuilder(String fieldName, String value);1528762805;Implements the wildcard search query. Supported wildcards are {@code *}, which_matches any character sequence (including the empty one), and {@code ?},_which matches any single character. Note this query can be slow, as it_needs to iterate over many terms. In order to prevent extremely slow WildcardQueries,_a Wildcard term should not start with one of the wildcards {@code *} or_{@code ?}.__@param fieldName The field name_@param value The wildcard query string;public WildcardQueryBuilder(String fieldName, String value) {_        if (Strings.isEmpty(fieldName)) {_            throw new IllegalArgumentException("field name is null or empty")__        }_        if (value == null) {_            throw new IllegalArgumentException("value cannot be null")__        }_        this.fieldName = fieldName__        this.value = value__    };implements,the,wildcard,search,query,supported,wildcards,are,code,which,matches,any,character,sequence,including,the,empty,one,and,code,which,matches,any,single,character,note,this,query,can,be,slow,as,it,needs,to,iterate,over,many,terms,in,order,to,prevent,extremely,slow,wildcard,queries,a,wildcard,term,should,not,start,with,one,of,the,wildcards,code,or,code,param,field,name,the,field,name,param,value,the,wildcard,query,string;public,wildcard,query,builder,string,field,name,string,value,if,strings,is,empty,field,name,throw,new,illegal,argument,exception,field,name,is,null,or,empty,if,value,null,throw,new,illegal,argument,exception,value,cannot,be,null,this,field,name,field,name,this,value,value
WildcardQueryBuilder -> public WildcardQueryBuilder(String fieldName, String value);1538067637;Implements the wildcard search query. Supported wildcards are {@code *}, which_matches any character sequence (including the empty one), and {@code ?},_which matches any single character. Note this query can be slow, as it_needs to iterate over many terms. In order to prevent extremely slow WildcardQueries,_a Wildcard term should not start with one of the wildcards {@code *} or_{@code ?}.__@param fieldName The field name_@param value The wildcard query string;public WildcardQueryBuilder(String fieldName, String value) {_        if (Strings.isEmpty(fieldName)) {_            throw new IllegalArgumentException("field name is null or empty")__        }_        if (value == null) {_            throw new IllegalArgumentException("value cannot be null")__        }_        this.fieldName = fieldName__        this.value = value__    };implements,the,wildcard,search,query,supported,wildcards,are,code,which,matches,any,character,sequence,including,the,empty,one,and,code,which,matches,any,single,character,note,this,query,can,be,slow,as,it,needs,to,iterate,over,many,terms,in,order,to,prevent,extremely,slow,wildcard,queries,a,wildcard,term,should,not,start,with,one,of,the,wildcards,code,or,code,param,field,name,the,field,name,param,value,the,wildcard,query,string;public,wildcard,query,builder,string,field,name,string,value,if,strings,is,empty,field,name,throw,new,illegal,argument,exception,field,name,is,null,or,empty,if,value,null,throw,new,illegal,argument,exception,value,cannot,be,null,this,field,name,field,name,this,value,value
WildcardQueryBuilder -> public WildcardQueryBuilder(StreamInput in) throws IOException;1524684173;Read from a stream.;public WildcardQueryBuilder(StreamInput in) throws IOException {_        super(in)__        fieldName = in.readString()__        value = in.readString()__        rewrite = in.readOptionalString()__    };read,from,a,stream;public,wildcard,query,builder,stream,input,in,throws,ioexception,super,in,field,name,in,read,string,value,in,read,string,rewrite,in,read,optional,string
WildcardQueryBuilder -> public WildcardQueryBuilder(StreamInput in) throws IOException;1525334055;Read from a stream.;public WildcardQueryBuilder(StreamInput in) throws IOException {_        super(in)__        fieldName = in.readString()__        value = in.readString()__        rewrite = in.readOptionalString()__    };read,from,a,stream;public,wildcard,query,builder,stream,input,in,throws,ioexception,super,in,field,name,in,read,string,value,in,read,string,rewrite,in,read,optional,string
WildcardQueryBuilder -> public WildcardQueryBuilder(StreamInput in) throws IOException;1528762805;Read from a stream.;public WildcardQueryBuilder(StreamInput in) throws IOException {_        super(in)__        fieldName = in.readString()__        value = in.readString()__        rewrite = in.readOptionalString()__    };read,from,a,stream;public,wildcard,query,builder,stream,input,in,throws,ioexception,super,in,field,name,in,read,string,value,in,read,string,rewrite,in,read,optional,string
WildcardQueryBuilder -> public WildcardQueryBuilder(StreamInput in) throws IOException;1538067637;Read from a stream.;public WildcardQueryBuilder(StreamInput in) throws IOException {_        super(in)__        fieldName = in.readString()__        value = in.readString()__        rewrite = in.readOptionalString()__    };read,from,a,stream;public,wildcard,query,builder,stream,input,in,throws,ioexception,super,in,field,name,in,read,string,value,in,read,string,rewrite,in,read,optional,string
