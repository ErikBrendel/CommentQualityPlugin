commented;modifiers;parameterAmount;loc;comment;code
false;public;1;8;;@Override public void onResponse(ShardResponse shardResponse) {     shardsResponses.add(shardResponse).     logger.trace("{}: got response from {}", actionName, shardId).     if (responsesCountDown.countDown()) {         finishAndNotifyListener(listener, shardsResponses).     } }
false;public;1;20;;@Override public void onFailure(Exception e) {     logger.trace("{}: got failure from {}", actionName, shardId).     int totalNumCopies = clusterState.getMetaData().getIndexSafe(shardId.getIndex()).getNumberOfReplicas() + 1.     ShardResponse shardResponse = newShardResponse().     ReplicationResponse.ShardInfo.Failure[] failures.     if (TransportActions.isShardNotAvailableException(e)) {         failures = new ReplicationResponse.ShardInfo.Failure[0].     } else {         ReplicationResponse.ShardInfo.Failure failure = new ReplicationResponse.ShardInfo.Failure(shardId, null, e, ExceptionsHelper.status(e), true).         failures = new ReplicationResponse.ShardInfo.Failure[totalNumCopies].         Arrays.fill(failures, failure).     }     shardResponse.setShardInfo(new ReplicationResponse.ShardInfo(totalNumCopies, 0, failures)).     shardsResponses.add(shardResponse).     if (responsesCountDown.countDown()) {         finishAndNotifyListener(listener, shardsResponses).     } }
false;protected;3;44;;@Override protected void doExecute(Task task, Request request, ActionListener<Response> listener) {     final ClusterState clusterState = clusterService.state().     List<ShardId> shards = shards(request, clusterState).     final CopyOnWriteArrayList<ShardResponse> shardsResponses = new CopyOnWriteArrayList<>().     if (shards.size() == 0) {         finishAndNotifyListener(listener, shardsResponses).     }     final CountDown responsesCountDown = new CountDown(shards.size()).     for (final ShardId shardId : shards) {         ActionListener<ShardResponse> shardActionListener = new ActionListener<ShardResponse>() {              @Override             public void onResponse(ShardResponse shardResponse) {                 shardsResponses.add(shardResponse).                 logger.trace("{}: got response from {}", actionName, shardId).                 if (responsesCountDown.countDown()) {                     finishAndNotifyListener(listener, shardsResponses).                 }             }              @Override             public void onFailure(Exception e) {                 logger.trace("{}: got failure from {}", actionName, shardId).                 int totalNumCopies = clusterState.getMetaData().getIndexSafe(shardId.getIndex()).getNumberOfReplicas() + 1.                 ShardResponse shardResponse = newShardResponse().                 ReplicationResponse.ShardInfo.Failure[] failures.                 if (TransportActions.isShardNotAvailableException(e)) {                     failures = new ReplicationResponse.ShardInfo.Failure[0].                 } else {                     ReplicationResponse.ShardInfo.Failure failure = new ReplicationResponse.ShardInfo.Failure(shardId, null, e, ExceptionsHelper.status(e), true).                     failures = new ReplicationResponse.ShardInfo.Failure[totalNumCopies].                     Arrays.fill(failures, failure).                 }                 shardResponse.setShardInfo(new ReplicationResponse.ShardInfo(totalNumCopies, 0, failures)).                 shardsResponses.add(shardResponse).                 if (responsesCountDown.countDown()) {                     finishAndNotifyListener(listener, shardsResponses).                 }             }         }.         shardExecute(task, request, shardId, shardActionListener).     } }
false;protected;4;5;;protected void shardExecute(Task task, Request request, ShardId shardId, ActionListener<ShardResponse> shardActionListener) {     ShardRequest shardRequest = newShardRequest(request, shardId).     shardRequest.setParentTask(clusterService.localNode().getId(), task.getId()).     replicatedBroadcastShardAction.execute(shardRequest, shardActionListener). }
true;protected;2;14;/**  * @return all shard ids the request should run on  */ ;/**  * @return all shard ids the request should run on  */ protected List<ShardId> shards(Request request, ClusterState clusterState) {     List<ShardId> shardIds = new ArrayList<>().     String[] concreteIndices = indexNameExpressionResolver.concreteIndexNames(clusterState, request).     for (String index : concreteIndices) {         IndexMetaData indexMetaData = clusterState.metaData().getIndices().get(index).         if (indexMetaData != null) {             for (IntObjectCursor<IndexShardRoutingTable> shardRouting : clusterState.getRoutingTable().indicesRouting().get(index).getShards()) {                 shardIds.add(shardRouting.value.shardId()).             }         }     }     return shardIds. }
false;protected,abstract;0;1;;protected abstract ShardResponse newShardResponse().
false;protected,abstract;2;1;;protected abstract ShardRequest newShardRequest(Request request, ShardId shardId).
false;private;2;25;;private void finishAndNotifyListener(ActionListener listener, CopyOnWriteArrayList<ShardResponse> shardsResponses) {     logger.trace("{}: got all shard responses", actionName).     int successfulShards = 0.     int failedShards = 0.     int totalNumCopies = 0.     List<DefaultShardOperationFailedException> shardFailures = null.     for (int i = 0. i < shardsResponses.size(). i++) {         ReplicationResponse shardResponse = shardsResponses.get(i).         if (shardResponse == null) {         // non active shard, ignore         } else {             failedShards += shardResponse.getShardInfo().getFailed().             successfulShards += shardResponse.getShardInfo().getSuccessful().             totalNumCopies += shardResponse.getShardInfo().getTotal().             if (shardFailures == null) {                 shardFailures = new ArrayList<>().             }             for (ReplicationResponse.ShardInfo.Failure failure : shardResponse.getShardInfo().getFailures()) {                 shardFailures.add(new DefaultShardOperationFailedException(new BroadcastShardOperationFailedException(failure.fullShardId(), failure.getCause()))).             }         }     }     listener.onResponse(newResponse(successfulShards, failedShards, totalNumCopies, shardFailures)). }
false;protected,abstract;4;2;;protected abstract BroadcastResponse newResponse(int successfulShards, int failedShards, int totalNumCopies, List<DefaultShardOperationFailedException> shardFailures).
