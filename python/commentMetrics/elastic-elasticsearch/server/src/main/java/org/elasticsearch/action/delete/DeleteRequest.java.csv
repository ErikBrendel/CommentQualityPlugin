# id;timestamp;commentText;codeText;commentWords;codeWords
DeleteRequest -> public DeleteRequest(String index);1524684173;Constructs a new delete request against the specified index. The {@link #type(String)} and {@link #id(String)}_must be set.;public DeleteRequest(String index) {_        this.index = index__    };constructs,a,new,delete,request,against,the,specified,index,the,link,type,string,and,link,id,string,must,be,set;public,delete,request,string,index,this,index,index
DeleteRequest -> public DeleteRequest(String index);1540847035;Constructs a new delete request against the specified index. The {@link #type(String)} and {@link #id(String)}_must be set.;public DeleteRequest(String index) {_        this.index = index__    };constructs,a,new,delete,request,against,the,specified,index,the,link,type,string,and,link,id,string,must,be,set;public,delete,request,string,index,this,index,index
DeleteRequest -> public DeleteRequest(String index);1540912197;Constructs a new delete request against the specified index. The {@link #type(String)} and {@link #id(String)}_must be set.;public DeleteRequest(String index) {_        this.index = index__    };constructs,a,new,delete,request,against,the,specified,index,the,link,type,string,and,link,id,string,must,be,set;public,delete,request,string,index,this,index,index
DeleteRequest -> public DeleteRequest(String index);1541591531;Constructs a new delete request against the specified index. The {@link #type(String)} and {@link #id(String)}_must be set.;public DeleteRequest(String index) {_        this.index = index__    };constructs,a,new,delete,request,against,the,specified,index,the,link,type,string,and,link,id,string,must,be,set;public,delete,request,string,index,this,index,index
DeleteRequest -> public DeleteRequest(String index);1541592065;Constructs a new delete request against the specified index. The {@link #type(String)} and {@link #id(String)}_must be set.;public DeleteRequest(String index) {_        this.index = index__    };constructs,a,new,delete,request,against,the,specified,index,the,link,type,string,and,link,id,string,must,be,set;public,delete,request,string,index,this,index,index
DeleteRequest -> public DeleteRequest(String index);1543619489;Constructs a new delete request against the specified index. The {@link #type(String)} and {@link #id(String)}_must be set.;public DeleteRequest(String index) {_        this.index = index__    };constructs,a,new,delete,request,against,the,specified,index,the,link,type,string,and,link,id,string,must,be,set;public,delete,request,string,index,this,index,index
DeleteRequest -> public DeleteRequest(String index);1544893197;Constructs a new delete request against the specified index. The {@link #type(String)} and {@link #id(String)}_must be set.;public DeleteRequest(String index) {_        this.index = index__    };constructs,a,new,delete,request,against,the,specified,index,the,link,type,string,and,link,id,string,must,be,set;public,delete,request,string,index,this,index,index
DeleteRequest -> public DeleteRequest(String index);1545140118;Constructs a new delete request against the specified index. The {@link #type(String)} and {@link #id(String)}_must be set.;public DeleteRequest(String index) {_        this.index = index__    };constructs,a,new,delete,request,against,the,specified,index,the,link,type,string,and,link,id,string,must,be,set;public,delete,request,string,index,this,index,index
DeleteRequest -> public DeleteRequest(String index);1545159787;Constructs a new delete request against the specified index. The {@link #type(String)} and {@link #id(String)}_must be set.;public DeleteRequest(String index) {_        this.index = index__    };constructs,a,new,delete,request,against,the,specified,index,the,link,type,string,and,link,id,string,must,be,set;public,delete,request,string,index,this,index,index
DeleteRequest -> public DeleteRequest(String index);1545221705;Constructs a new delete request against the specified index. The {@link #type(String)} and {@link #id(String)}_must be set.;public DeleteRequest(String index) {_        this.index = index__    };constructs,a,new,delete,request,against,the,specified,index,the,link,type,string,and,link,id,string,must,be,set;public,delete,request,string,index,this,index,index
DeleteRequest -> public DeleteRequest(String index);1547156119;Constructs a new delete request against the specified index. The {@link #type(String)} and {@link #id(String)}_must be set.;public DeleteRequest(String index) {_        this.index = index__    };constructs,a,new,delete,request,against,the,specified,index,the,link,type,string,and,link,id,string,must,be,set;public,delete,request,string,index,this,index,index
DeleteRequest -> public DeleteRequest(String index);1548771485;Constructs a new delete request against the specified index. The {@link #type(String)} and {@link #id(String)}_must be set.;public DeleteRequest(String index) {_        this.index = index__    };constructs,a,new,delete,request,against,the,specified,index,the,link,type,string,and,link,id,string,must,be,set;public,delete,request,string,index,this,index,index
DeleteRequest -> public DeleteRequest setIfSeqNo(long seqNo);1545140118;only perform this delete request if the document was last modification was assigned the given_sequence number. Must be used in combination with {@link #setIfPrimaryTerm(long)}__If the document last modification was assigned a different sequence number a_{@link org.elasticsearch.index.engine.VersionConflictEngineException} will be thrown.;public DeleteRequest setIfSeqNo(long seqNo) {_        if (seqNo < 0 && seqNo != SequenceNumbers.UNASSIGNED_SEQ_NO) {_            throw new IllegalArgumentException("sequence numbers must be non negative. got [" +  seqNo + "].")__        }_        ifSeqNo = seqNo__        return this__    };only,perform,this,delete,request,if,the,document,was,last,modification,was,assigned,the,given,sequence,number,must,be,used,in,combination,with,link,set,if,primary,term,long,if,the,document,last,modification,was,assigned,a,different,sequence,number,a,link,org,elasticsearch,index,engine,version,conflict,engine,exception,will,be,thrown;public,delete,request,set,if,seq,no,long,seq,no,if,seq,no,0,seq,no,sequence,numbers,throw,new,illegal,argument,exception,sequence,numbers,must,be,non,negative,got,seq,no,if,seq,no,seq,no,return,this
DeleteRequest -> public DeleteRequest setIfSeqNo(long seqNo);1545159787;only perform this delete request if the document was last modification was assigned the given_sequence number. Must be used in combination with {@link #setIfPrimaryTerm(long)}__If the document last modification was assigned a different sequence number a_{@link org.elasticsearch.index.engine.VersionConflictEngineException} will be thrown.;public DeleteRequest setIfSeqNo(long seqNo) {_        if (seqNo < 0 && seqNo != SequenceNumbers.UNASSIGNED_SEQ_NO) {_            throw new IllegalArgumentException("sequence numbers must be non negative. got [" +  seqNo + "].")__        }_        ifSeqNo = seqNo__        return this__    };only,perform,this,delete,request,if,the,document,was,last,modification,was,assigned,the,given,sequence,number,must,be,used,in,combination,with,link,set,if,primary,term,long,if,the,document,last,modification,was,assigned,a,different,sequence,number,a,link,org,elasticsearch,index,engine,version,conflict,engine,exception,will,be,thrown;public,delete,request,set,if,seq,no,long,seq,no,if,seq,no,0,seq,no,sequence,numbers,throw,new,illegal,argument,exception,sequence,numbers,must,be,non,negative,got,seq,no,if,seq,no,seq,no,return,this
DeleteRequest -> public DeleteRequest setIfSeqNo(long seqNo);1545221705;only perform this delete request if the document was last modification was assigned the given_sequence number. Must be used in combination with {@link #setIfPrimaryTerm(long)}__If the document last modification was assigned a different sequence number a_{@link org.elasticsearch.index.engine.VersionConflictEngineException} will be thrown.;public DeleteRequest setIfSeqNo(long seqNo) {_        if (seqNo < 0 && seqNo != UNASSIGNED_SEQ_NO) {_            throw new IllegalArgumentException("sequence numbers must be non negative. got [" +  seqNo + "].")__        }_        ifSeqNo = seqNo__        return this__    };only,perform,this,delete,request,if,the,document,was,last,modification,was,assigned,the,given,sequence,number,must,be,used,in,combination,with,link,set,if,primary,term,long,if,the,document,last,modification,was,assigned,a,different,sequence,number,a,link,org,elasticsearch,index,engine,version,conflict,engine,exception,will,be,thrown;public,delete,request,set,if,seq,no,long,seq,no,if,seq,no,0,seq,no,throw,new,illegal,argument,exception,sequence,numbers,must,be,non,negative,got,seq,no,if,seq,no,seq,no,return,this
DeleteRequest -> public DeleteRequest setIfSeqNo(long seqNo);1547156119;only perform this delete request if the document was last modification was assigned the given_sequence number. Must be used in combination with {@link #setIfPrimaryTerm(long)}__If the document last modification was assigned a different sequence number a_{@link org.elasticsearch.index.engine.VersionConflictEngineException} will be thrown.;public DeleteRequest setIfSeqNo(long seqNo) {_        if (seqNo < 0 && seqNo != UNASSIGNED_SEQ_NO) {_            throw new IllegalArgumentException("sequence numbers must be non negative. got [" +  seqNo + "].")__        }_        ifSeqNo = seqNo__        return this__    };only,perform,this,delete,request,if,the,document,was,last,modification,was,assigned,the,given,sequence,number,must,be,used,in,combination,with,link,set,if,primary,term,long,if,the,document,last,modification,was,assigned,a,different,sequence,number,a,link,org,elasticsearch,index,engine,version,conflict,engine,exception,will,be,thrown;public,delete,request,set,if,seq,no,long,seq,no,if,seq,no,0,seq,no,throw,new,illegal,argument,exception,sequence,numbers,must,be,non,negative,got,seq,no,if,seq,no,seq,no,return,this
DeleteRequest -> public DeleteRequest setIfSeqNo(long seqNo);1548771485;only perform this delete request if the document was last modification was assigned the given_sequence number. Must be used in combination with {@link #setIfPrimaryTerm(long)}__If the document last modification was assigned a different sequence number a_{@link org.elasticsearch.index.engine.VersionConflictEngineException} will be thrown.;public DeleteRequest setIfSeqNo(long seqNo) {_        if (seqNo < 0 && seqNo != UNASSIGNED_SEQ_NO) {_            throw new IllegalArgumentException("sequence numbers must be non negative. got [" +  seqNo + "].")__        }_        ifSeqNo = seqNo__        return this__    };only,perform,this,delete,request,if,the,document,was,last,modification,was,assigned,the,given,sequence,number,must,be,used,in,combination,with,link,set,if,primary,term,long,if,the,document,last,modification,was,assigned,a,different,sequence,number,a,link,org,elasticsearch,index,engine,version,conflict,engine,exception,will,be,thrown;public,delete,request,set,if,seq,no,long,seq,no,if,seq,no,0,seq,no,throw,new,illegal,argument,exception,sequence,numbers,must,be,non,negative,got,seq,no,if,seq,no,seq,no,return,this
DeleteRequest -> @Deprecated     @Override     public String type();1543619489;The type of the document to delete.__@deprecated Types are in the process of being removed.;@Deprecated_    @Override_    public String type() {_        return type__    };the,type,of,the,document,to,delete,deprecated,types,are,in,the,process,of,being,removed;deprecated,override,public,string,type,return,type
DeleteRequest -> @Deprecated     @Override     public String type();1544893197;The type of the document to delete.__@deprecated Types are in the process of being removed.;@Deprecated_    @Override_    public String type() {_        return type__    };the,type,of,the,document,to,delete,deprecated,types,are,in,the,process,of,being,removed;deprecated,override,public,string,type,return,type
DeleteRequest -> @Deprecated     @Override     public String type();1545140118;The type of the document to delete.__@deprecated Types are in the process of being removed.;@Deprecated_    @Override_    public String type() {_        return type__    };the,type,of,the,document,to,delete,deprecated,types,are,in,the,process,of,being,removed;deprecated,override,public,string,type,return,type
DeleteRequest -> @Deprecated     @Override     public String type();1545159787;The type of the document to delete.__@deprecated Types are in the process of being removed.;@Deprecated_    @Override_    public String type() {_        return type__    };the,type,of,the,document,to,delete,deprecated,types,are,in,the,process,of,being,removed;deprecated,override,public,string,type,return,type
DeleteRequest -> @Deprecated     @Override     public String type();1545221705;The type of the document to delete.__@deprecated Types are in the process of being removed.;@Deprecated_    @Override_    public String type() {_        return type__    };the,type,of,the,document,to,delete,deprecated,types,are,in,the,process,of,being,removed;deprecated,override,public,string,type,return,type
DeleteRequest -> @Deprecated     @Override     public String type();1547156119;The type of the document to delete.__@deprecated Types are in the process of being removed.;@Deprecated_    @Override_    public String type() {_        if (type == null) {_            return MapperService.SINGLE_MAPPING_NAME_                    _        }_        return type__    };the,type,of,the,document,to,delete,deprecated,types,are,in,the,process,of,being,removed;deprecated,override,public,string,type,if,type,null,return,mapper,service,return,type
DeleteRequest -> @Deprecated     @Override     public String type();1548771485;The type of the document to delete.__@deprecated Types are in the process of being removed.;@Deprecated_    @Override_    public String type() {_        if (type == null) {_            return MapperService.SINGLE_MAPPING_NAME_                    _        }_        return type__    };the,type,of,the,document,to,delete,deprecated,types,are,in,the,process,of,being,removed;deprecated,override,public,string,type,if,type,null,return,mapper,service,return,type
DeleteRequest -> public long ifPrimaryTerm();1545140118;If set, only perform this delete request if the document was last modification was assigned this primary term.__If the document last modification was assigned a different term a_{@link org.elasticsearch.index.engine.VersionConflictEngineException} will be thrown.;public long ifPrimaryTerm() {_        return ifPrimaryTerm__    };if,set,only,perform,this,delete,request,if,the,document,was,last,modification,was,assigned,this,primary,term,if,the,document,last,modification,was,assigned,a,different,term,a,link,org,elasticsearch,index,engine,version,conflict,engine,exception,will,be,thrown;public,long,if,primary,term,return,if,primary,term
DeleteRequest -> public long ifPrimaryTerm();1545159787;If set, only perform this delete request if the document was last modification was assigned this primary term.__If the document last modification was assigned a different term a_{@link org.elasticsearch.index.engine.VersionConflictEngineException} will be thrown.;public long ifPrimaryTerm() {_        return ifPrimaryTerm__    };if,set,only,perform,this,delete,request,if,the,document,was,last,modification,was,assigned,this,primary,term,if,the,document,last,modification,was,assigned,a,different,term,a,link,org,elasticsearch,index,engine,version,conflict,engine,exception,will,be,thrown;public,long,if,primary,term,return,if,primary,term
DeleteRequest -> public long ifPrimaryTerm();1545221705;If set, only perform this delete request if the document was last modification was assigned this primary term.__If the document last modification was assigned a different term a_{@link org.elasticsearch.index.engine.VersionConflictEngineException} will be thrown.;public long ifPrimaryTerm() {_        return ifPrimaryTerm__    };if,set,only,perform,this,delete,request,if,the,document,was,last,modification,was,assigned,this,primary,term,if,the,document,last,modification,was,assigned,a,different,term,a,link,org,elasticsearch,index,engine,version,conflict,engine,exception,will,be,thrown;public,long,if,primary,term,return,if,primary,term
DeleteRequest -> public long ifPrimaryTerm();1547156119;If set, only perform this delete request if the document was last modification was assigned this primary term.__If the document last modification was assigned a different term a_{@link org.elasticsearch.index.engine.VersionConflictEngineException} will be thrown.;public long ifPrimaryTerm() {_        return ifPrimaryTerm__    };if,set,only,perform,this,delete,request,if,the,document,was,last,modification,was,assigned,this,primary,term,if,the,document,last,modification,was,assigned,a,different,term,a,link,org,elasticsearch,index,engine,version,conflict,engine,exception,will,be,thrown;public,long,if,primary,term,return,if,primary,term
DeleteRequest -> public long ifPrimaryTerm();1548771485;If set, only perform this delete request if the document was last modification was assigned this primary term.__If the document last modification was assigned a different term a_{@link org.elasticsearch.index.engine.VersionConflictEngineException} will be thrown.;public long ifPrimaryTerm() {_        return ifPrimaryTerm__    };if,set,only,perform,this,delete,request,if,the,document,was,last,modification,was,assigned,this,primary,term,if,the,document,last,modification,was,assigned,a,different,term,a,link,org,elasticsearch,index,engine,version,conflict,engine,exception,will,be,thrown;public,long,if,primary,term,return,if,primary,term
DeleteRequest -> public DeleteRequest(String index, String type, String id);1524684173;Constructs a new delete request against the specified index with the type and id.__@param index The index to get the document from_@param type  The type of the document_@param id    The id of the document;public DeleteRequest(String index, String type, String id) {_        this.index = index__        this.type = type__        this.id = id__    };constructs,a,new,delete,request,against,the,specified,index,with,the,type,and,id,param,index,the,index,to,get,the,document,from,param,type,the,type,of,the,document,param,id,the,id,of,the,document;public,delete,request,string,index,string,type,string,id,this,index,index,this,type,type,this,id,id
DeleteRequest -> public DeleteRequest(String index, String type, String id);1540847035;Constructs a new delete request against the specified index with the type and id.__@param index The index to get the document from_@param type  The type of the document_@param id    The id of the document;public DeleteRequest(String index, String type, String id) {_        this.index = index__        this.type = type__        this.id = id__    };constructs,a,new,delete,request,against,the,specified,index,with,the,type,and,id,param,index,the,index,to,get,the,document,from,param,type,the,type,of,the,document,param,id,the,id,of,the,document;public,delete,request,string,index,string,type,string,id,this,index,index,this,type,type,this,id,id
DeleteRequest -> public DeleteRequest(String index, String type, String id);1540912197;Constructs a new delete request against the specified index with the type and id.__@param index The index to get the document from_@param type  The type of the document_@param id    The id of the document;public DeleteRequest(String index, String type, String id) {_        this.index = index__        this.type = type__        this.id = id__    };constructs,a,new,delete,request,against,the,specified,index,with,the,type,and,id,param,index,the,index,to,get,the,document,from,param,type,the,type,of,the,document,param,id,the,id,of,the,document;public,delete,request,string,index,string,type,string,id,this,index,index,this,type,type,this,id,id
DeleteRequest -> public DeleteRequest(String index, String type, String id);1541591531;Constructs a new delete request against the specified index with the type and id.__@param index The index to get the document from_@param type  The type of the document_@param id    The id of the document;public DeleteRequest(String index, String type, String id) {_        this.index = index__        this.type = type__        this.id = id__    };constructs,a,new,delete,request,against,the,specified,index,with,the,type,and,id,param,index,the,index,to,get,the,document,from,param,type,the,type,of,the,document,param,id,the,id,of,the,document;public,delete,request,string,index,string,type,string,id,this,index,index,this,type,type,this,id,id
DeleteRequest -> public DeleteRequest(String index, String type, String id);1541592065;Constructs a new delete request against the specified index with the type and id.__@param index The index to get the document from_@param type  The type of the document_@param id    The id of the document;public DeleteRequest(String index, String type, String id) {_        this.index = index__        this.type = type__        this.id = id__    };constructs,a,new,delete,request,against,the,specified,index,with,the,type,and,id,param,index,the,index,to,get,the,document,from,param,type,the,type,of,the,document,param,id,the,id,of,the,document;public,delete,request,string,index,string,type,string,id,this,index,index,this,type,type,this,id,id
DeleteRequest -> public DeleteRequest id(String id);1524684173;Sets the id of the document to delete.;public DeleteRequest id(String id) {_        this.id = id__        return this__    };sets,the,id,of,the,document,to,delete;public,delete,request,id,string,id,this,id,id,return,this
DeleteRequest -> public DeleteRequest id(String id);1540847035;Sets the id of the document to delete.;public DeleteRequest id(String id) {_        this.id = id__        return this__    };sets,the,id,of,the,document,to,delete;public,delete,request,id,string,id,this,id,id,return,this
DeleteRequest -> public DeleteRequest id(String id);1540912197;Sets the id of the document to delete.;public DeleteRequest id(String id) {_        this.id = id__        return this__    };sets,the,id,of,the,document,to,delete;public,delete,request,id,string,id,this,id,id,return,this
DeleteRequest -> public DeleteRequest id(String id);1541591531;Sets the id of the document to delete.;public DeleteRequest id(String id) {_        this.id = id__        return this__    };sets,the,id,of,the,document,to,delete;public,delete,request,id,string,id,this,id,id,return,this
DeleteRequest -> public DeleteRequest id(String id);1541592065;Sets the id of the document to delete.;public DeleteRequest id(String id) {_        this.id = id__        return this__    };sets,the,id,of,the,document,to,delete;public,delete,request,id,string,id,this,id,id,return,this
DeleteRequest -> public DeleteRequest id(String id);1543619489;Sets the id of the document to delete.;public DeleteRequest id(String id) {_        this.id = id__        return this__    };sets,the,id,of,the,document,to,delete;public,delete,request,id,string,id,this,id,id,return,this
DeleteRequest -> public DeleteRequest id(String id);1544893197;Sets the id of the document to delete.;public DeleteRequest id(String id) {_        this.id = id__        return this__    };sets,the,id,of,the,document,to,delete;public,delete,request,id,string,id,this,id,id,return,this
DeleteRequest -> public DeleteRequest id(String id);1545140118;Sets the id of the document to delete.;public DeleteRequest id(String id) {_        this.id = id__        return this__    };sets,the,id,of,the,document,to,delete;public,delete,request,id,string,id,this,id,id,return,this
DeleteRequest -> public DeleteRequest id(String id);1545159787;Sets the id of the document to delete.;public DeleteRequest id(String id) {_        this.id = id__        return this__    };sets,the,id,of,the,document,to,delete;public,delete,request,id,string,id,this,id,id,return,this
DeleteRequest -> public DeleteRequest id(String id);1545221705;Sets the id of the document to delete.;public DeleteRequest id(String id) {_        this.id = id__        return this__    };sets,the,id,of,the,document,to,delete;public,delete,request,id,string,id,this,id,id,return,this
DeleteRequest -> public DeleteRequest id(String id);1547156119;Sets the id of the document to delete.;public DeleteRequest id(String id) {_        this.id = id__        return this__    };sets,the,id,of,the,document,to,delete;public,delete,request,id,string,id,this,id,id,return,this
DeleteRequest -> public DeleteRequest id(String id);1548771485;Sets the id of the document to delete.;public DeleteRequest id(String id) {_        this.id = id__        return this__    };sets,the,id,of,the,document,to,delete;public,delete,request,id,string,id,this,id,id,return,this
DeleteRequest -> @Override     public DeleteRequest type(String type);1540912197;Sets the type of the document to delete.;@Override_    public DeleteRequest type(String type) {_        this.type = type__        return this__    };sets,the,type,of,the,document,to,delete;override,public,delete,request,type,string,type,this,type,type,return,this
DeleteRequest -> @Override     public DeleteRequest type(String type);1541591531;Sets the type of the document to delete.;@Override_    public DeleteRequest type(String type) {_        this.type = type__        return this__    };sets,the,type,of,the,document,to,delete;override,public,delete,request,type,string,type,this,type,type,return,this
DeleteRequest -> @Override     public DeleteRequest type(String type);1541592065;Sets the type of the document to delete.;@Override_    public DeleteRequest type(String type) {_        this.type = type__        return this__    };sets,the,type,of,the,document,to,delete;override,public,delete,request,type,string,type,this,type,type,return,this
DeleteRequest -> @Override     public String type();1524684173;The type of the document to delete.;@Override_    public String type() {_        return type__    };the,type,of,the,document,to,delete;override,public,string,type,return,type
DeleteRequest -> @Override     public String type();1540847035;The type of the document to delete.;@Override_    public String type() {_        return type__    };the,type,of,the,document,to,delete;override,public,string,type,return,type
DeleteRequest -> @Override     public String type();1540912197;The type of the document to delete.;@Override_    public String type() {_        return type__    };the,type,of,the,document,to,delete;override,public,string,type,return,type
DeleteRequest -> @Override     public String type();1541591531;The type of the document to delete.;@Override_    public String type() {_        return type__    };the,type,of,the,document,to,delete;override,public,string,type,return,type
DeleteRequest -> @Override     public String type();1541592065;The type of the document to delete.;@Override_    public String type() {_        return type__    };the,type,of,the,document,to,delete;override,public,string,type,return,type
DeleteRequest -> @Deprecated     public DeleteRequest(String index, String type, String id);1543619489;Constructs a new delete request against the specified index with the type and id.__@param index The index to get the document from_@param type  The type of the document_@param id    The id of the document__@deprecated Types are in the process of being removed. Use {@link #DeleteRequest(String, String)} instead.;@Deprecated_    public DeleteRequest(String index, String type, String id) {_        this.index = index__        this.type = type__        this.id = id__    };constructs,a,new,delete,request,against,the,specified,index,with,the,type,and,id,param,index,the,index,to,get,the,document,from,param,type,the,type,of,the,document,param,id,the,id,of,the,document,deprecated,types,are,in,the,process,of,being,removed,use,link,delete,request,string,string,instead;deprecated,public,delete,request,string,index,string,type,string,id,this,index,index,this,type,type,this,id,id
DeleteRequest -> @Deprecated     public DeleteRequest(String index, String type, String id);1544893197;Constructs a new delete request against the specified index with the type and id.__@param index The index to get the document from_@param type  The type of the document_@param id    The id of the document__@deprecated Types are in the process of being removed. Use {@link #DeleteRequest(String, String)} instead.;@Deprecated_    public DeleteRequest(String index, String type, String id) {_        this.index = index__        this.type = type__        this.id = id__    };constructs,a,new,delete,request,against,the,specified,index,with,the,type,and,id,param,index,the,index,to,get,the,document,from,param,type,the,type,of,the,document,param,id,the,id,of,the,document,deprecated,types,are,in,the,process,of,being,removed,use,link,delete,request,string,string,instead;deprecated,public,delete,request,string,index,string,type,string,id,this,index,index,this,type,type,this,id,id
DeleteRequest -> @Deprecated     public DeleteRequest(String index, String type, String id);1545140118;Constructs a new delete request against the specified index with the type and id.__@param index The index to get the document from_@param type  The type of the document_@param id    The id of the document__@deprecated Types are in the process of being removed. Use {@link #DeleteRequest(String, String)} instead.;@Deprecated_    public DeleteRequest(String index, String type, String id) {_        this.index = index__        this.type = type__        this.id = id__    };constructs,a,new,delete,request,against,the,specified,index,with,the,type,and,id,param,index,the,index,to,get,the,document,from,param,type,the,type,of,the,document,param,id,the,id,of,the,document,deprecated,types,are,in,the,process,of,being,removed,use,link,delete,request,string,string,instead;deprecated,public,delete,request,string,index,string,type,string,id,this,index,index,this,type,type,this,id,id
DeleteRequest -> @Deprecated     public DeleteRequest(String index, String type, String id);1545159787;Constructs a new delete request against the specified index with the type and id.__@param index The index to get the document from_@param type  The type of the document_@param id    The id of the document__@deprecated Types are in the process of being removed. Use {@link #DeleteRequest(String, String)} instead.;@Deprecated_    public DeleteRequest(String index, String type, String id) {_        this.index = index__        this.type = type__        this.id = id__    };constructs,a,new,delete,request,against,the,specified,index,with,the,type,and,id,param,index,the,index,to,get,the,document,from,param,type,the,type,of,the,document,param,id,the,id,of,the,document,deprecated,types,are,in,the,process,of,being,removed,use,link,delete,request,string,string,instead;deprecated,public,delete,request,string,index,string,type,string,id,this,index,index,this,type,type,this,id,id
DeleteRequest -> @Deprecated     public DeleteRequest(String index, String type, String id);1545221705;Constructs a new delete request against the specified index with the type and id.__@param index The index to get the document from_@param type  The type of the document_@param id    The id of the document__@deprecated Types are in the process of being removed. Use {@link #DeleteRequest(String, String)} instead.;@Deprecated_    public DeleteRequest(String index, String type, String id) {_        this.index = index__        this.type = type__        this.id = id__    };constructs,a,new,delete,request,against,the,specified,index,with,the,type,and,id,param,index,the,index,to,get,the,document,from,param,type,the,type,of,the,document,param,id,the,id,of,the,document,deprecated,types,are,in,the,process,of,being,removed,use,link,delete,request,string,string,instead;deprecated,public,delete,request,string,index,string,type,string,id,this,index,index,this,type,type,this,id,id
DeleteRequest -> @Deprecated     public DeleteRequest(String index, String type, String id);1547156119;Constructs a new delete request against the specified index with the type and id.__@param index The index to get the document from_@param type  The type of the document_@param id    The id of the document__@deprecated Types are in the process of being removed. Use {@link #DeleteRequest(String, String)} instead.;@Deprecated_    public DeleteRequest(String index, String type, String id) {_        this.index = index__        this.type = type__        this.id = id__    };constructs,a,new,delete,request,against,the,specified,index,with,the,type,and,id,param,index,the,index,to,get,the,document,from,param,type,the,type,of,the,document,param,id,the,id,of,the,document,deprecated,types,are,in,the,process,of,being,removed,use,link,delete,request,string,string,instead;deprecated,public,delete,request,string,index,string,type,string,id,this,index,index,this,type,type,this,id,id
DeleteRequest -> @Deprecated     public DeleteRequest(String index, String type, String id);1548771485;Constructs a new delete request against the specified index with the type and id.__@param index The index to get the document from_@param type  The type of the document_@param id    The id of the document__@deprecated Types are in the process of being removed. Use {@link #DeleteRequest(String, String)} instead.;@Deprecated_    public DeleteRequest(String index, String type, String id) {_        this.index = index__        this.type = type__        this.id = id__    };constructs,a,new,delete,request,against,the,specified,index,with,the,type,and,id,param,index,the,index,to,get,the,document,from,param,type,the,type,of,the,document,param,id,the,id,of,the,document,deprecated,types,are,in,the,process,of,being,removed,use,link,delete,request,string,string,instead;deprecated,public,delete,request,string,index,string,type,string,id,this,index,index,this,type,type,this,id,id
DeleteRequest -> @Override     public DeleteRequest routing(String routing);1524684173;Controls the shard routing of the request. Using this value to hash the shard_and not the id.;@Override_    public DeleteRequest routing(String routing) {_        if (routing != null && routing.length() == 0) {_            this.routing = null__        } else {_            this.routing = routing__        }_        return this__    };controls,the,shard,routing,of,the,request,using,this,value,to,hash,the,shard,and,not,the,id;override,public,delete,request,routing,string,routing,if,routing,null,routing,length,0,this,routing,null,else,this,routing,routing,return,this
DeleteRequest -> @Override     public DeleteRequest routing(String routing);1540847035;Controls the shard routing of the request. Using this value to hash the shard_and not the id.;@Override_    public DeleteRequest routing(String routing) {_        if (routing != null && routing.length() == 0) {_            this.routing = null__        } else {_            this.routing = routing__        }_        return this__    };controls,the,shard,routing,of,the,request,using,this,value,to,hash,the,shard,and,not,the,id;override,public,delete,request,routing,string,routing,if,routing,null,routing,length,0,this,routing,null,else,this,routing,routing,return,this
DeleteRequest -> @Override     public DeleteRequest routing(String routing);1540912197;Controls the shard routing of the request. Using this value to hash the shard_and not the id.;@Override_    public DeleteRequest routing(String routing) {_        if (routing != null && routing.length() == 0) {_            this.routing = null__        } else {_            this.routing = routing__        }_        return this__    };controls,the,shard,routing,of,the,request,using,this,value,to,hash,the,shard,and,not,the,id;override,public,delete,request,routing,string,routing,if,routing,null,routing,length,0,this,routing,null,else,this,routing,routing,return,this
DeleteRequest -> @Override     public DeleteRequest routing(String routing);1541591531;Controls the shard routing of the request. Using this value to hash the shard_and not the id.;@Override_    public DeleteRequest routing(String routing) {_        if (routing != null && routing.length() == 0) {_            this.routing = null__        } else {_            this.routing = routing__        }_        return this__    };controls,the,shard,routing,of,the,request,using,this,value,to,hash,the,shard,and,not,the,id;override,public,delete,request,routing,string,routing,if,routing,null,routing,length,0,this,routing,null,else,this,routing,routing,return,this
DeleteRequest -> @Override     public DeleteRequest routing(String routing);1541592065;Controls the shard routing of the request. Using this value to hash the shard_and not the id.;@Override_    public DeleteRequest routing(String routing) {_        if (routing != null && routing.length() == 0) {_            this.routing = null__        } else {_            this.routing = routing__        }_        return this__    };controls,the,shard,routing,of,the,request,using,this,value,to,hash,the,shard,and,not,the,id;override,public,delete,request,routing,string,routing,if,routing,null,routing,length,0,this,routing,null,else,this,routing,routing,return,this
DeleteRequest -> @Override     public DeleteRequest routing(String routing);1543619489;Controls the shard routing of the request. Using this value to hash the shard_and not the id.;@Override_    public DeleteRequest routing(String routing) {_        if (routing != null && routing.length() == 0) {_            this.routing = null__        } else {_            this.routing = routing__        }_        return this__    };controls,the,shard,routing,of,the,request,using,this,value,to,hash,the,shard,and,not,the,id;override,public,delete,request,routing,string,routing,if,routing,null,routing,length,0,this,routing,null,else,this,routing,routing,return,this
DeleteRequest -> @Override     public DeleteRequest routing(String routing);1544893197;Controls the shard routing of the request. Using this value to hash the shard_and not the id.;@Override_    public DeleteRequest routing(String routing) {_        if (routing != null && routing.length() == 0) {_            this.routing = null__        } else {_            this.routing = routing__        }_        return this__    };controls,the,shard,routing,of,the,request,using,this,value,to,hash,the,shard,and,not,the,id;override,public,delete,request,routing,string,routing,if,routing,null,routing,length,0,this,routing,null,else,this,routing,routing,return,this
DeleteRequest -> @Override     public DeleteRequest routing(String routing);1545140118;Controls the shard routing of the request. Using this value to hash the shard_and not the id.;@Override_    public DeleteRequest routing(String routing) {_        if (routing != null && routing.length() == 0) {_            this.routing = null__        } else {_            this.routing = routing__        }_        return this__    };controls,the,shard,routing,of,the,request,using,this,value,to,hash,the,shard,and,not,the,id;override,public,delete,request,routing,string,routing,if,routing,null,routing,length,0,this,routing,null,else,this,routing,routing,return,this
DeleteRequest -> @Override     public DeleteRequest routing(String routing);1545159787;Controls the shard routing of the request. Using this value to hash the shard_and not the id.;@Override_    public DeleteRequest routing(String routing) {_        if (routing != null && routing.length() == 0) {_            this.routing = null__        } else {_            this.routing = routing__        }_        return this__    };controls,the,shard,routing,of,the,request,using,this,value,to,hash,the,shard,and,not,the,id;override,public,delete,request,routing,string,routing,if,routing,null,routing,length,0,this,routing,null,else,this,routing,routing,return,this
DeleteRequest -> @Override     public DeleteRequest routing(String routing);1545221705;Controls the shard routing of the request. Using this value to hash the shard_and not the id.;@Override_    public DeleteRequest routing(String routing) {_        if (routing != null && routing.length() == 0) {_            this.routing = null__        } else {_            this.routing = routing__        }_        return this__    };controls,the,shard,routing,of,the,request,using,this,value,to,hash,the,shard,and,not,the,id;override,public,delete,request,routing,string,routing,if,routing,null,routing,length,0,this,routing,null,else,this,routing,routing,return,this
DeleteRequest -> @Override     public DeleteRequest routing(String routing);1547156119;Controls the shard routing of the request. Using this value to hash the shard_and not the id.;@Override_    public DeleteRequest routing(String routing) {_        if (routing != null && routing.length() == 0) {_            this.routing = null__        } else {_            this.routing = routing__        }_        return this__    };controls,the,shard,routing,of,the,request,using,this,value,to,hash,the,shard,and,not,the,id;override,public,delete,request,routing,string,routing,if,routing,null,routing,length,0,this,routing,null,else,this,routing,routing,return,this
DeleteRequest -> @Override     public DeleteRequest routing(String routing);1548771485;Controls the shard routing of the request. Using this value to hash the shard_and not the id.;@Override_    public DeleteRequest routing(String routing) {_        if (routing != null && routing.length() == 0) {_            this.routing = null__        } else {_            this.routing = routing__        }_        return this__    };controls,the,shard,routing,of,the,request,using,this,value,to,hash,the,shard,and,not,the,id;override,public,delete,request,routing,string,routing,if,routing,null,routing,length,0,this,routing,null,else,this,routing,routing,return,this
DeleteRequest -> @Override     public String routing();1524684173;Controls the shard routing of the delete request. Using this value to hash the shard_and not the id.;@Override_    public String routing() {_        return this.routing__    };controls,the,shard,routing,of,the,delete,request,using,this,value,to,hash,the,shard,and,not,the,id;override,public,string,routing,return,this,routing
DeleteRequest -> @Override     public String routing();1540847035;Controls the shard routing of the delete request. Using this value to hash the shard_and not the id.;@Override_    public String routing() {_        return this.routing__    };controls,the,shard,routing,of,the,delete,request,using,this,value,to,hash,the,shard,and,not,the,id;override,public,string,routing,return,this,routing
DeleteRequest -> @Override     public String routing();1540912197;Controls the shard routing of the delete request. Using this value to hash the shard_and not the id.;@Override_    public String routing() {_        return this.routing__    };controls,the,shard,routing,of,the,delete,request,using,this,value,to,hash,the,shard,and,not,the,id;override,public,string,routing,return,this,routing
DeleteRequest -> @Override     public String routing();1541591531;Controls the shard routing of the delete request. Using this value to hash the shard_and not the id.;@Override_    public String routing() {_        return this.routing__    };controls,the,shard,routing,of,the,delete,request,using,this,value,to,hash,the,shard,and,not,the,id;override,public,string,routing,return,this,routing
DeleteRequest -> @Override     public String routing();1541592065;Controls the shard routing of the delete request. Using this value to hash the shard_and not the id.;@Override_    public String routing() {_        return this.routing__    };controls,the,shard,routing,of,the,delete,request,using,this,value,to,hash,the,shard,and,not,the,id;override,public,string,routing,return,this,routing
DeleteRequest -> @Override     public String routing();1543619489;Controls the shard routing of the delete request. Using this value to hash the shard_and not the id.;@Override_    public String routing() {_        return this.routing__    };controls,the,shard,routing,of,the,delete,request,using,this,value,to,hash,the,shard,and,not,the,id;override,public,string,routing,return,this,routing
DeleteRequest -> @Override     public String routing();1544893197;Controls the shard routing of the delete request. Using this value to hash the shard_and not the id.;@Override_    public String routing() {_        return this.routing__    };controls,the,shard,routing,of,the,delete,request,using,this,value,to,hash,the,shard,and,not,the,id;override,public,string,routing,return,this,routing
DeleteRequest -> @Override     public String routing();1545140118;Controls the shard routing of the delete request. Using this value to hash the shard_and not the id.;@Override_    public String routing() {_        return this.routing__    };controls,the,shard,routing,of,the,delete,request,using,this,value,to,hash,the,shard,and,not,the,id;override,public,string,routing,return,this,routing
DeleteRequest -> @Override     public String routing();1545159787;Controls the shard routing of the delete request. Using this value to hash the shard_and not the id.;@Override_    public String routing() {_        return this.routing__    };controls,the,shard,routing,of,the,delete,request,using,this,value,to,hash,the,shard,and,not,the,id;override,public,string,routing,return,this,routing
DeleteRequest -> @Override     public String routing();1545221705;Controls the shard routing of the delete request. Using this value to hash the shard_and not the id.;@Override_    public String routing() {_        return this.routing__    };controls,the,shard,routing,of,the,delete,request,using,this,value,to,hash,the,shard,and,not,the,id;override,public,string,routing,return,this,routing
DeleteRequest -> @Override     public String routing();1547156119;Controls the shard routing of the delete request. Using this value to hash the shard_and not the id.;@Override_    public String routing() {_        return this.routing__    };controls,the,shard,routing,of,the,delete,request,using,this,value,to,hash,the,shard,and,not,the,id;override,public,string,routing,return,this,routing
DeleteRequest -> @Override     public String routing();1548771485;Controls the shard routing of the delete request. Using this value to hash the shard_and not the id.;@Override_    public String routing() {_        return this.routing__    };controls,the,shard,routing,of,the,delete,request,using,this,value,to,hash,the,shard,and,not,the,id;override,public,string,routing,return,this,routing
DeleteRequest -> public DeleteRequest type(String type);1524684173;Sets the type of the document to delete.;public DeleteRequest type(String type) {_        this.type = type__        return this__    };sets,the,type,of,the,document,to,delete;public,delete,request,type,string,type,this,type,type,return,this
DeleteRequest -> public DeleteRequest type(String type);1540847035;Sets the type of the document to delete.;public DeleteRequest type(String type) {_        this.type = type__        return this__    };sets,the,type,of,the,document,to,delete;public,delete,request,type,string,type,this,type,type,return,this
DeleteRequest -> @Override     public DeleteRequest setShardId(ShardId shardId);1524684173;Override this method from ReplicationAction, this is where we are storing our state in the request object (which we really shouldn't_do). Once the transport client goes away we can move away from making this available, but in the meantime this is dangerous to set or_use because the DeleteRequest object will always be wrapped in a bulk request envelope, which is where this *should* be set.;@Override_    public DeleteRequest setShardId(ShardId shardId) {_        throw new UnsupportedOperationException("shard id should never be set on DeleteRequest")__    };override,this,method,from,replication,action,this,is,where,we,are,storing,our,state,in,the,request,object,which,we,really,shouldn,t,do,once,the,transport,client,goes,away,we,can,move,away,from,making,this,available,but,in,the,meantime,this,is,dangerous,to,set,or,use,because,the,delete,request,object,will,always,be,wrapped,in,a,bulk,request,envelope,which,is,where,this,should,be,set;override,public,delete,request,set,shard,id,shard,id,shard,id,throw,new,unsupported,operation,exception,shard,id,should,never,be,set,on,delete,request
DeleteRequest -> @Override     public DeleteRequest setShardId(ShardId shardId);1540847035;Override this method from ReplicationAction, this is where we are storing our state in the request object (which we really shouldn't_do). Once the transport client goes away we can move away from making this available, but in the meantime this is dangerous to set or_use because the DeleteRequest object will always be wrapped in a bulk request envelope, which is where this *should* be set.;@Override_    public DeleteRequest setShardId(ShardId shardId) {_        throw new UnsupportedOperationException("shard id should never be set on DeleteRequest")__    };override,this,method,from,replication,action,this,is,where,we,are,storing,our,state,in,the,request,object,which,we,really,shouldn,t,do,once,the,transport,client,goes,away,we,can,move,away,from,making,this,available,but,in,the,meantime,this,is,dangerous,to,set,or,use,because,the,delete,request,object,will,always,be,wrapped,in,a,bulk,request,envelope,which,is,where,this,should,be,set;override,public,delete,request,set,shard,id,shard,id,shard,id,throw,new,unsupported,operation,exception,shard,id,should,never,be,set,on,delete,request
DeleteRequest -> @Override     public DeleteRequest setShardId(ShardId shardId);1540912197;Override this method from ReplicationAction, this is where we are storing our state in the request object (which we really shouldn't_do). Once the transport client goes away we can move away from making this available, but in the meantime this is dangerous to set or_use because the DeleteRequest object will always be wrapped in a bulk request envelope, which is where this *should* be set.;@Override_    public DeleteRequest setShardId(ShardId shardId) {_        throw new UnsupportedOperationException("shard id should never be set on DeleteRequest")__    };override,this,method,from,replication,action,this,is,where,we,are,storing,our,state,in,the,request,object,which,we,really,shouldn,t,do,once,the,transport,client,goes,away,we,can,move,away,from,making,this,available,but,in,the,meantime,this,is,dangerous,to,set,or,use,because,the,delete,request,object,will,always,be,wrapped,in,a,bulk,request,envelope,which,is,where,this,should,be,set;override,public,delete,request,set,shard,id,shard,id,shard,id,throw,new,unsupported,operation,exception,shard,id,should,never,be,set,on,delete,request
DeleteRequest -> @Override     public DeleteRequest setShardId(ShardId shardId);1541591531;Override this method from ReplicationAction, this is where we are storing our state in the request object (which we really shouldn't_do). Once the transport client goes away we can move away from making this available, but in the meantime this is dangerous to set or_use because the DeleteRequest object will always be wrapped in a bulk request envelope, which is where this *should* be set.;@Override_    public DeleteRequest setShardId(ShardId shardId) {_        throw new UnsupportedOperationException("shard id should never be set on DeleteRequest")__    };override,this,method,from,replication,action,this,is,where,we,are,storing,our,state,in,the,request,object,which,we,really,shouldn,t,do,once,the,transport,client,goes,away,we,can,move,away,from,making,this,available,but,in,the,meantime,this,is,dangerous,to,set,or,use,because,the,delete,request,object,will,always,be,wrapped,in,a,bulk,request,envelope,which,is,where,this,should,be,set;override,public,delete,request,set,shard,id,shard,id,shard,id,throw,new,unsupported,operation,exception,shard,id,should,never,be,set,on,delete,request
DeleteRequest -> @Override     public DeleteRequest setShardId(ShardId shardId);1541592065;Override this method from ReplicationAction, this is where we are storing our state in the request object (which we really shouldn't_do). Once the transport client goes away we can move away from making this available, but in the meantime this is dangerous to set or_use because the DeleteRequest object will always be wrapped in a bulk request envelope, which is where this *should* be set.;@Override_    public DeleteRequest setShardId(ShardId shardId) {_        throw new UnsupportedOperationException("shard id should never be set on DeleteRequest")__    };override,this,method,from,replication,action,this,is,where,we,are,storing,our,state,in,the,request,object,which,we,really,shouldn,t,do,once,the,transport,client,goes,away,we,can,move,away,from,making,this,available,but,in,the,meantime,this,is,dangerous,to,set,or,use,because,the,delete,request,object,will,always,be,wrapped,in,a,bulk,request,envelope,which,is,where,this,should,be,set;override,public,delete,request,set,shard,id,shard,id,shard,id,throw,new,unsupported,operation,exception,shard,id,should,never,be,set,on,delete,request
DeleteRequest -> @Override     public DeleteRequest setShardId(ShardId shardId);1543619489;Override this method from ReplicationAction, this is where we are storing our state in the request object (which we really shouldn't_do). Once the transport client goes away we can move away from making this available, but in the meantime this is dangerous to set or_use because the DeleteRequest object will always be wrapped in a bulk request envelope, which is where this *should* be set.;@Override_    public DeleteRequest setShardId(ShardId shardId) {_        throw new UnsupportedOperationException("shard id should never be set on DeleteRequest")__    };override,this,method,from,replication,action,this,is,where,we,are,storing,our,state,in,the,request,object,which,we,really,shouldn,t,do,once,the,transport,client,goes,away,we,can,move,away,from,making,this,available,but,in,the,meantime,this,is,dangerous,to,set,or,use,because,the,delete,request,object,will,always,be,wrapped,in,a,bulk,request,envelope,which,is,where,this,should,be,set;override,public,delete,request,set,shard,id,shard,id,shard,id,throw,new,unsupported,operation,exception,shard,id,should,never,be,set,on,delete,request
DeleteRequest -> @Override     public DeleteRequest setShardId(ShardId shardId);1544893197;Override this method from ReplicationAction, this is where we are storing our state in the request object (which we really shouldn't_do). Once the transport client goes away we can move away from making this available, but in the meantime this is dangerous to set or_use because the DeleteRequest object will always be wrapped in a bulk request envelope, which is where this *should* be set.;@Override_    public DeleteRequest setShardId(ShardId shardId) {_        throw new UnsupportedOperationException("shard id should never be set on DeleteRequest")__    };override,this,method,from,replication,action,this,is,where,we,are,storing,our,state,in,the,request,object,which,we,really,shouldn,t,do,once,the,transport,client,goes,away,we,can,move,away,from,making,this,available,but,in,the,meantime,this,is,dangerous,to,set,or,use,because,the,delete,request,object,will,always,be,wrapped,in,a,bulk,request,envelope,which,is,where,this,should,be,set;override,public,delete,request,set,shard,id,shard,id,shard,id,throw,new,unsupported,operation,exception,shard,id,should,never,be,set,on,delete,request
DeleteRequest -> @Override     public DeleteRequest setShardId(ShardId shardId);1545140118;Override this method from ReplicationAction, this is where we are storing our state in the request object (which we really shouldn't_do). Once the transport client goes away we can move away from making this available, but in the meantime this is dangerous to set or_use because the DeleteRequest object will always be wrapped in a bulk request envelope, which is where this *should* be set.;@Override_    public DeleteRequest setShardId(ShardId shardId) {_        throw new UnsupportedOperationException("shard id should never be set on DeleteRequest")__    };override,this,method,from,replication,action,this,is,where,we,are,storing,our,state,in,the,request,object,which,we,really,shouldn,t,do,once,the,transport,client,goes,away,we,can,move,away,from,making,this,available,but,in,the,meantime,this,is,dangerous,to,set,or,use,because,the,delete,request,object,will,always,be,wrapped,in,a,bulk,request,envelope,which,is,where,this,should,be,set;override,public,delete,request,set,shard,id,shard,id,shard,id,throw,new,unsupported,operation,exception,shard,id,should,never,be,set,on,delete,request
DeleteRequest -> @Override     public DeleteRequest setShardId(ShardId shardId);1545159787;Override this method from ReplicationAction, this is where we are storing our state in the request object (which we really shouldn't_do). Once the transport client goes away we can move away from making this available, but in the meantime this is dangerous to set or_use because the DeleteRequest object will always be wrapped in a bulk request envelope, which is where this *should* be set.;@Override_    public DeleteRequest setShardId(ShardId shardId) {_        throw new UnsupportedOperationException("shard id should never be set on DeleteRequest")__    };override,this,method,from,replication,action,this,is,where,we,are,storing,our,state,in,the,request,object,which,we,really,shouldn,t,do,once,the,transport,client,goes,away,we,can,move,away,from,making,this,available,but,in,the,meantime,this,is,dangerous,to,set,or,use,because,the,delete,request,object,will,always,be,wrapped,in,a,bulk,request,envelope,which,is,where,this,should,be,set;override,public,delete,request,set,shard,id,shard,id,shard,id,throw,new,unsupported,operation,exception,shard,id,should,never,be,set,on,delete,request
DeleteRequest -> @Override     public DeleteRequest setShardId(ShardId shardId);1545221705;Override this method from ReplicationAction, this is where we are storing our state in the request object (which we really shouldn't_do). Once the transport client goes away we can move away from making this available, but in the meantime this is dangerous to set or_use because the DeleteRequest object will always be wrapped in a bulk request envelope, which is where this *should* be set.;@Override_    public DeleteRequest setShardId(ShardId shardId) {_        throw new UnsupportedOperationException("shard id should never be set on DeleteRequest")__    };override,this,method,from,replication,action,this,is,where,we,are,storing,our,state,in,the,request,object,which,we,really,shouldn,t,do,once,the,transport,client,goes,away,we,can,move,away,from,making,this,available,but,in,the,meantime,this,is,dangerous,to,set,or,use,because,the,delete,request,object,will,always,be,wrapped,in,a,bulk,request,envelope,which,is,where,this,should,be,set;override,public,delete,request,set,shard,id,shard,id,shard,id,throw,new,unsupported,operation,exception,shard,id,should,never,be,set,on,delete,request
DeleteRequest -> @Override     public DeleteRequest setShardId(ShardId shardId);1547156119;Override this method from ReplicationAction, this is where we are storing our state in the request object (which we really shouldn't_do). Once the transport client goes away we can move away from making this available, but in the meantime this is dangerous to set or_use because the DeleteRequest object will always be wrapped in a bulk request envelope, which is where this *should* be set.;@Override_    public DeleteRequest setShardId(ShardId shardId) {_        throw new UnsupportedOperationException("shard id should never be set on DeleteRequest")__    };override,this,method,from,replication,action,this,is,where,we,are,storing,our,state,in,the,request,object,which,we,really,shouldn,t,do,once,the,transport,client,goes,away,we,can,move,away,from,making,this,available,but,in,the,meantime,this,is,dangerous,to,set,or,use,because,the,delete,request,object,will,always,be,wrapped,in,a,bulk,request,envelope,which,is,where,this,should,be,set;override,public,delete,request,set,shard,id,shard,id,shard,id,throw,new,unsupported,operation,exception,shard,id,should,never,be,set,on,delete,request
DeleteRequest -> @Override     public DeleteRequest setShardId(ShardId shardId);1548771485;Override this method from ReplicationAction, this is where we are storing our state in the request object (which we really shouldn't_do). Once the transport client goes away we can move away from making this available, but in the meantime this is dangerous to set or_use because the DeleteRequest object will always be wrapped in a bulk request envelope, which is where this *should* be set.;@Override_    public DeleteRequest setShardId(ShardId shardId) {_        throw new UnsupportedOperationException("shard id should never be set on DeleteRequest")__    };override,this,method,from,replication,action,this,is,where,we,are,storing,our,state,in,the,request,object,which,we,really,shouldn,t,do,once,the,transport,client,goes,away,we,can,move,away,from,making,this,available,but,in,the,meantime,this,is,dangerous,to,set,or,use,because,the,delete,request,object,will,always,be,wrapped,in,a,bulk,request,envelope,which,is,where,this,should,be,set;override,public,delete,request,set,shard,id,shard,id,shard,id,throw,new,unsupported,operation,exception,shard,id,should,never,be,set,on,delete,request
DeleteRequest -> public DeleteRequest(String index, String id);1543619489;Constructs a new delete request against the specified index and id.__@param index The index to get the document from_@param id    The id of the document;public DeleteRequest(String index, String id) {_        this.index = index__        this.id = id__    };constructs,a,new,delete,request,against,the,specified,index,and,id,param,index,the,index,to,get,the,document,from,param,id,the,id,of,the,document;public,delete,request,string,index,string,id,this,index,index,this,id,id
DeleteRequest -> public DeleteRequest(String index, String id);1544893197;Constructs a new delete request against the specified index and id.__@param index The index to get the document from_@param id    The id of the document;public DeleteRequest(String index, String id) {_        this.index = index__        this.id = id__    };constructs,a,new,delete,request,against,the,specified,index,and,id,param,index,the,index,to,get,the,document,from,param,id,the,id,of,the,document;public,delete,request,string,index,string,id,this,index,index,this,id,id
DeleteRequest -> public DeleteRequest(String index, String id);1545140118;Constructs a new delete request against the specified index and id.__@param index The index to get the document from_@param id    The id of the document;public DeleteRequest(String index, String id) {_        this.index = index__        this.id = id__    };constructs,a,new,delete,request,against,the,specified,index,and,id,param,index,the,index,to,get,the,document,from,param,id,the,id,of,the,document;public,delete,request,string,index,string,id,this,index,index,this,id,id
DeleteRequest -> public DeleteRequest(String index, String id);1545159787;Constructs a new delete request against the specified index and id.__@param index The index to get the document from_@param id    The id of the document;public DeleteRequest(String index, String id) {_        this.index = index__        this.id = id__    };constructs,a,new,delete,request,against,the,specified,index,and,id,param,index,the,index,to,get,the,document,from,param,id,the,id,of,the,document;public,delete,request,string,index,string,id,this,index,index,this,id,id
DeleteRequest -> public DeleteRequest(String index, String id);1545221705;Constructs a new delete request against the specified index and id.__@param index The index to get the document from_@param id    The id of the document;public DeleteRequest(String index, String id) {_        this.index = index__        this.id = id__    };constructs,a,new,delete,request,against,the,specified,index,and,id,param,index,the,index,to,get,the,document,from,param,id,the,id,of,the,document;public,delete,request,string,index,string,id,this,index,index,this,id,id
DeleteRequest -> public DeleteRequest(String index, String id);1547156119;Constructs a new delete request against the specified index and id.__@param index The index to get the document from_@param id    The id of the document;public DeleteRequest(String index, String id) {_        this.index = index__        this.id = id__    };constructs,a,new,delete,request,against,the,specified,index,and,id,param,index,the,index,to,get,the,document,from,param,id,the,id,of,the,document;public,delete,request,string,index,string,id,this,index,index,this,id,id
DeleteRequest -> public DeleteRequest(String index, String id);1548771485;Constructs a new delete request against the specified index and id.__@param index The index to get the document from_@param id    The id of the document;public DeleteRequest(String index, String id) {_        this.index = index__        this.id = id__    };constructs,a,new,delete,request,against,the,specified,index,and,id,param,index,the,index,to,get,the,document,from,param,id,the,id,of,the,document;public,delete,request,string,index,string,id,this,index,index,this,id,id
DeleteRequest -> public DeleteRequest setIfPrimaryTerm(long term);1545140118;only perform this delete request if the document was last modification was assigned the given_primary term. Must be used in combination with {@link #setIfSeqNo(long)}__If the document last modification was assigned a different primary term a_{@link org.elasticsearch.index.engine.VersionConflictEngineException} will be thrown.;public DeleteRequest setIfPrimaryTerm(long term) {_        if (term < 0) {_            throw new IllegalArgumentException("primary term must be non negative. got [" + term + "]")__        }_        ifPrimaryTerm = term__        return this__    };only,perform,this,delete,request,if,the,document,was,last,modification,was,assigned,the,given,primary,term,must,be,used,in,combination,with,link,set,if,seq,no,long,if,the,document,last,modification,was,assigned,a,different,primary,term,a,link,org,elasticsearch,index,engine,version,conflict,engine,exception,will,be,thrown;public,delete,request,set,if,primary,term,long,term,if,term,0,throw,new,illegal,argument,exception,primary,term,must,be,non,negative,got,term,if,primary,term,term,return,this
DeleteRequest -> public DeleteRequest setIfPrimaryTerm(long term);1545159787;only perform this delete request if the document was last modification was assigned the given_primary term. Must be used in combination with {@link #setIfSeqNo(long)}__If the document last modification was assigned a different primary term a_{@link org.elasticsearch.index.engine.VersionConflictEngineException} will be thrown.;public DeleteRequest setIfPrimaryTerm(long term) {_        if (term < 0) {_            throw new IllegalArgumentException("primary term must be non negative. got [" + term + "]")__        }_        ifPrimaryTerm = term__        return this__    };only,perform,this,delete,request,if,the,document,was,last,modification,was,assigned,the,given,primary,term,must,be,used,in,combination,with,link,set,if,seq,no,long,if,the,document,last,modification,was,assigned,a,different,primary,term,a,link,org,elasticsearch,index,engine,version,conflict,engine,exception,will,be,thrown;public,delete,request,set,if,primary,term,long,term,if,term,0,throw,new,illegal,argument,exception,primary,term,must,be,non,negative,got,term,if,primary,term,term,return,this
DeleteRequest -> public DeleteRequest setIfPrimaryTerm(long term);1545221705;only perform this delete request if the document was last modification was assigned the given_primary term. Must be used in combination with {@link #setIfSeqNo(long)}__If the document last modification was assigned a different primary term a_{@link org.elasticsearch.index.engine.VersionConflictEngineException} will be thrown.;public DeleteRequest setIfPrimaryTerm(long term) {_        if (term < 0) {_            throw new IllegalArgumentException("primary term must be non negative. got [" + term + "]")__        }_        ifPrimaryTerm = term__        return this__    };only,perform,this,delete,request,if,the,document,was,last,modification,was,assigned,the,given,primary,term,must,be,used,in,combination,with,link,set,if,seq,no,long,if,the,document,last,modification,was,assigned,a,different,primary,term,a,link,org,elasticsearch,index,engine,version,conflict,engine,exception,will,be,thrown;public,delete,request,set,if,primary,term,long,term,if,term,0,throw,new,illegal,argument,exception,primary,term,must,be,non,negative,got,term,if,primary,term,term,return,this
DeleteRequest -> public DeleteRequest setIfPrimaryTerm(long term);1547156119;only perform this delete request if the document was last modification was assigned the given_primary term. Must be used in combination with {@link #setIfSeqNo(long)}__If the document last modification was assigned a different primary term a_{@link org.elasticsearch.index.engine.VersionConflictEngineException} will be thrown.;public DeleteRequest setIfPrimaryTerm(long term) {_        if (term < 0) {_            throw new IllegalArgumentException("primary term must be non negative. got [" + term + "]")__        }_        ifPrimaryTerm = term__        return this__    };only,perform,this,delete,request,if,the,document,was,last,modification,was,assigned,the,given,primary,term,must,be,used,in,combination,with,link,set,if,seq,no,long,if,the,document,last,modification,was,assigned,a,different,primary,term,a,link,org,elasticsearch,index,engine,version,conflict,engine,exception,will,be,thrown;public,delete,request,set,if,primary,term,long,term,if,term,0,throw,new,illegal,argument,exception,primary,term,must,be,non,negative,got,term,if,primary,term,term,return,this
DeleteRequest -> public DeleteRequest setIfPrimaryTerm(long term);1548771485;only perform this delete request if the document was last modification was assigned the given_primary term. Must be used in combination with {@link #setIfSeqNo(long)}__If the document last modification was assigned a different primary term a_{@link org.elasticsearch.index.engine.VersionConflictEngineException} will be thrown.;public DeleteRequest setIfPrimaryTerm(long term) {_        if (term < 0) {_            throw new IllegalArgumentException("primary term must be non negative. got [" + term + "]")__        }_        ifPrimaryTerm = term__        return this__    };only,perform,this,delete,request,if,the,document,was,last,modification,was,assigned,the,given,primary,term,must,be,used,in,combination,with,link,set,if,seq,no,long,if,the,document,last,modification,was,assigned,a,different,primary,term,a,link,org,elasticsearch,index,engine,version,conflict,engine,exception,will,be,thrown;public,delete,request,set,if,primary,term,long,term,if,term,0,throw,new,illegal,argument,exception,primary,term,must,be,non,negative,got,term,if,primary,term,term,return,this
DeleteRequest -> @Deprecated     @Override     public DeleteRequest type(String type);1543619489;Sets the type of the document to delete.__@deprecated Types are in the process of being removed.;@Deprecated_    @Override_    public DeleteRequest type(String type) {_        this.type = type__        return this__    };sets,the,type,of,the,document,to,delete,deprecated,types,are,in,the,process,of,being,removed;deprecated,override,public,delete,request,type,string,type,this,type,type,return,this
DeleteRequest -> @Deprecated     @Override     public DeleteRequest type(String type);1544893197;Sets the type of the document to delete.__@deprecated Types are in the process of being removed.;@Deprecated_    @Override_    public DeleteRequest type(String type) {_        this.type = type__        return this__    };sets,the,type,of,the,document,to,delete,deprecated,types,are,in,the,process,of,being,removed;deprecated,override,public,delete,request,type,string,type,this,type,type,return,this
DeleteRequest -> @Deprecated     @Override     public DeleteRequest type(String type);1545140118;Sets the type of the document to delete.__@deprecated Types are in the process of being removed.;@Deprecated_    @Override_    public DeleteRequest type(String type) {_        this.type = type__        return this__    };sets,the,type,of,the,document,to,delete,deprecated,types,are,in,the,process,of,being,removed;deprecated,override,public,delete,request,type,string,type,this,type,type,return,this
DeleteRequest -> @Deprecated     @Override     public DeleteRequest type(String type);1545159787;Sets the type of the document to delete.__@deprecated Types are in the process of being removed.;@Deprecated_    @Override_    public DeleteRequest type(String type) {_        this.type = type__        return this__    };sets,the,type,of,the,document,to,delete,deprecated,types,are,in,the,process,of,being,removed;deprecated,override,public,delete,request,type,string,type,this,type,type,return,this
DeleteRequest -> @Deprecated     @Override     public DeleteRequest type(String type);1545221705;Sets the type of the document to delete.__@deprecated Types are in the process of being removed.;@Deprecated_    @Override_    public DeleteRequest type(String type) {_        this.type = type__        return this__    };sets,the,type,of,the,document,to,delete,deprecated,types,are,in,the,process,of,being,removed;deprecated,override,public,delete,request,type,string,type,this,type,type,return,this
DeleteRequest -> @Deprecated     @Override     public DeleteRequest type(String type);1547156119;Sets the type of the document to delete.__@deprecated Types are in the process of being removed.;@Deprecated_    @Override_    public DeleteRequest type(String type) {_        this.type = type__        return this__    };sets,the,type,of,the,document,to,delete,deprecated,types,are,in,the,process,of,being,removed;deprecated,override,public,delete,request,type,string,type,this,type,type,return,this
DeleteRequest -> @Deprecated     @Override     public DeleteRequest type(String type);1548771485;Sets the type of the document to delete.__@deprecated Types are in the process of being removed.;@Deprecated_    @Override_    public DeleteRequest type(String type) {_        this.type = type__        return this__    };sets,the,type,of,the,document,to,delete,deprecated,types,are,in,the,process,of,being,removed;deprecated,override,public,delete,request,type,string,type,this,type,type,return,this
DeleteRequest -> @Override     public String id();1524684173;The id of the document to delete.;@Override_    public String id() {_        return id__    };the,id,of,the,document,to,delete;override,public,string,id,return,id
DeleteRequest -> @Override     public String id();1540847035;The id of the document to delete.;@Override_    public String id() {_        return id__    };the,id,of,the,document,to,delete;override,public,string,id,return,id
DeleteRequest -> @Override     public String id();1540912197;The id of the document to delete.;@Override_    public String id() {_        return id__    };the,id,of,the,document,to,delete;override,public,string,id,return,id
DeleteRequest -> @Override     public String id();1541591531;The id of the document to delete.;@Override_    public String id() {_        return id__    };the,id,of,the,document,to,delete;override,public,string,id,return,id
DeleteRequest -> @Override     public String id();1541592065;The id of the document to delete.;@Override_    public String id() {_        return id__    };the,id,of,the,document,to,delete;override,public,string,id,return,id
DeleteRequest -> @Override     public String id();1543619489;The id of the document to delete.;@Override_    public String id() {_        return id__    };the,id,of,the,document,to,delete;override,public,string,id,return,id
DeleteRequest -> @Override     public String id();1544893197;The id of the document to delete.;@Override_    public String id() {_        return id__    };the,id,of,the,document,to,delete;override,public,string,id,return,id
DeleteRequest -> @Override     public String id();1545140118;The id of the document to delete.;@Override_    public String id() {_        return id__    };the,id,of,the,document,to,delete;override,public,string,id,return,id
DeleteRequest -> @Override     public String id();1545159787;The id of the document to delete.;@Override_    public String id() {_        return id__    };the,id,of,the,document,to,delete;override,public,string,id,return,id
DeleteRequest -> @Override     public String id();1545221705;The id of the document to delete.;@Override_    public String id() {_        return id__    };the,id,of,the,document,to,delete;override,public,string,id,return,id
DeleteRequest -> @Override     public String id();1547156119;The id of the document to delete.;@Override_    public String id() {_        return id__    };the,id,of,the,document,to,delete;override,public,string,id,return,id
DeleteRequest -> @Override     public String id();1548771485;The id of the document to delete.;@Override_    public String id() {_        return id__    };the,id,of,the,document,to,delete;override,public,string,id,return,id
DeleteRequest -> public long ifSeqNo();1545140118;If set, only perform this delete request if the document was last modification was assigned this sequence number._If the document last modification was assigned a different sequence number a_{@link org.elasticsearch.index.engine.VersionConflictEngineException} will be thrown.;public long ifSeqNo() {_        return ifSeqNo__    };if,set,only,perform,this,delete,request,if,the,document,was,last,modification,was,assigned,this,sequence,number,if,the,document,last,modification,was,assigned,a,different,sequence,number,a,link,org,elasticsearch,index,engine,version,conflict,engine,exception,will,be,thrown;public,long,if,seq,no,return,if,seq,no
DeleteRequest -> public long ifSeqNo();1545159787;If set, only perform this delete request if the document was last modification was assigned this sequence number._If the document last modification was assigned a different sequence number a_{@link org.elasticsearch.index.engine.VersionConflictEngineException} will be thrown.;public long ifSeqNo() {_        return ifSeqNo__    };if,set,only,perform,this,delete,request,if,the,document,was,last,modification,was,assigned,this,sequence,number,if,the,document,last,modification,was,assigned,a,different,sequence,number,a,link,org,elasticsearch,index,engine,version,conflict,engine,exception,will,be,thrown;public,long,if,seq,no,return,if,seq,no
DeleteRequest -> public long ifSeqNo();1545221705;If set, only perform this delete request if the document was last modification was assigned this sequence number._If the document last modification was assigned a different sequence number a_{@link org.elasticsearch.index.engine.VersionConflictEngineException} will be thrown.;public long ifSeqNo() {_        return ifSeqNo__    };if,set,only,perform,this,delete,request,if,the,document,was,last,modification,was,assigned,this,sequence,number,if,the,document,last,modification,was,assigned,a,different,sequence,number,a,link,org,elasticsearch,index,engine,version,conflict,engine,exception,will,be,thrown;public,long,if,seq,no,return,if,seq,no
DeleteRequest -> public long ifSeqNo();1547156119;If set, only perform this delete request if the document was last modification was assigned this sequence number._If the document last modification was assigned a different sequence number a_{@link org.elasticsearch.index.engine.VersionConflictEngineException} will be thrown.;public long ifSeqNo() {_        return ifSeqNo__    };if,set,only,perform,this,delete,request,if,the,document,was,last,modification,was,assigned,this,sequence,number,if,the,document,last,modification,was,assigned,a,different,sequence,number,a,link,org,elasticsearch,index,engine,version,conflict,engine,exception,will,be,thrown;public,long,if,seq,no,return,if,seq,no
DeleteRequest -> public long ifSeqNo();1548771485;If set, only perform this delete request if the document was last modification was assigned this sequence number._If the document last modification was assigned a different sequence number a_{@link org.elasticsearch.index.engine.VersionConflictEngineException} will be thrown.;public long ifSeqNo() {_        return ifSeqNo__    };if,set,only,perform,this,delete,request,if,the,document,was,last,modification,was,assigned,this,sequence,number,if,the,document,last,modification,was,assigned,a,different,sequence,number,a,link,org,elasticsearch,index,engine,version,conflict,engine,exception,will,be,thrown;public,long,if,seq,no,return,if,seq,no
DeleteRequest -> @Deprecated     @Override     public DeleteRequest defaultTypeIfNull(String defaultType);1547156119;Set the default type supplied to a bulk_request if this individual request's type is null_or empty__@deprecated Types are in the process of being removed.;@Deprecated_    @Override_    public DeleteRequest defaultTypeIfNull(String defaultType) {_        if (Strings.isNullOrEmpty(type)) {_            type = defaultType__        }_        return this__    };set,the,default,type,supplied,to,a,bulk,request,if,this,individual,request,s,type,is,null,or,empty,deprecated,types,are,in,the,process,of,being,removed;deprecated,override,public,delete,request,default,type,if,null,string,default,type,if,strings,is,null,or,empty,type,type,default,type,return,this
DeleteRequest -> @Deprecated     @Override     public DeleteRequest defaultTypeIfNull(String defaultType);1548771485;Set the default type supplied to a bulk_request if this individual request's type is null_or empty__@deprecated Types are in the process of being removed.;@Deprecated_    @Override_    public DeleteRequest defaultTypeIfNull(String defaultType) {_        if (Strings.isNullOrEmpty(type)) {_            type = defaultType__        }_        return this__    };set,the,default,type,supplied,to,a,bulk,request,if,this,individual,request,s,type,is,null,or,empty,deprecated,types,are,in,the,process,of,being,removed;deprecated,override,public,delete,request,default,type,if,null,string,default,type,if,strings,is,null,or,empty,type,type,default,type,return,this
