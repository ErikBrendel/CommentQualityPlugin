# id;timestamp;commentText;codeText;commentWords;codeWords
InternalHistogram -> Bucket -> public Bucket(StreamInput in, boolean keyed, DocValueFormat format) throws IOException;1524684173;Read from a stream.;public Bucket(StreamInput in, boolean keyed, DocValueFormat format) throws IOException {_            this.format = format__            this.keyed = keyed__            key = in.readDouble()__            docCount = in.readVLong()__            aggregations = InternalAggregations.readAggregations(in)__        };read,from,a,stream;public,bucket,stream,input,in,boolean,keyed,doc,value,format,format,throws,ioexception,this,format,format,this,keyed,keyed,key,in,read,double,doc,count,in,read,vlong,aggregations,internal,aggregations,read,aggregations,in
InternalHistogram -> Bucket -> public Bucket(StreamInput in, boolean keyed, DocValueFormat format) throws IOException;1527096592;Read from a stream.;public Bucket(StreamInput in, boolean keyed, DocValueFormat format) throws IOException {_            this.format = format__            this.keyed = keyed__            key = in.readDouble()__            docCount = in.readVLong()__            aggregations = InternalAggregations.readAggregations(in)__        };read,from,a,stream;public,bucket,stream,input,in,boolean,keyed,doc,value,format,format,throws,ioexception,this,format,format,this,keyed,keyed,key,in,read,double,doc,count,in,read,vlong,aggregations,internal,aggregations,read,aggregations,in
InternalHistogram -> Bucket -> public Bucket(StreamInput in, boolean keyed, DocValueFormat format) throws IOException;1543432000;Read from a stream.;public Bucket(StreamInput in, boolean keyed, DocValueFormat format) throws IOException {_            this.format = format__            this.keyed = keyed__            key = in.readDouble()__            docCount = in.readVLong()__            aggregations = InternalAggregations.readAggregations(in)__        };read,from,a,stream;public,bucket,stream,input,in,boolean,keyed,doc,value,format,format,throws,ioexception,this,format,format,this,keyed,keyed,key,in,read,double,doc,count,in,read,vlong,aggregations,internal,aggregations,read,aggregations,in
InternalHistogram -> Bucket -> public Bucket(StreamInput in, boolean keyed, DocValueFormat format) throws IOException;1543606389;Read from a stream.;public Bucket(StreamInput in, boolean keyed, DocValueFormat format) throws IOException {_            this.format = format__            this.keyed = keyed__            key = in.readDouble()__            docCount = in.readVLong()__            aggregations = InternalAggregations.readAggregations(in)__        };read,from,a,stream;public,bucket,stream,input,in,boolean,keyed,doc,value,format,format,throws,ioexception,this,format,format,this,keyed,keyed,key,in,read,double,doc,count,in,read,vlong,aggregations,internal,aggregations,read,aggregations,in
InternalHistogram -> public InternalHistogram(StreamInput in) throws IOException;1524684173;Stream from a stream.;public InternalHistogram(StreamInput in) throws IOException {_        super(in)__        order = InternalOrder.Streams.readHistogramOrder(in, false)__        minDocCount = in.readVLong()__        if (minDocCount == 0) {_            emptyBucketInfo = new EmptyBucketInfo(in)__        } else {_            emptyBucketInfo = null__        }_        format = in.readNamedWriteable(DocValueFormat.class)__        keyed = in.readBoolean()__        buckets = in.readList(stream -> new Bucket(stream, keyed, format))__    };stream,from,a,stream;public,internal,histogram,stream,input,in,throws,ioexception,super,in,order,internal,order,streams,read,histogram,order,in,false,min,doc,count,in,read,vlong,if,min,doc,count,0,empty,bucket,info,new,empty,bucket,info,in,else,empty,bucket,info,null,format,in,read,named,writeable,doc,value,format,class,keyed,in,read,boolean,buckets,in,read,list,stream,new,bucket,stream,keyed,format
InternalHistogram -> public InternalHistogram(StreamInput in) throws IOException;1527096592;Stream from a stream.;public InternalHistogram(StreamInput in) throws IOException {_        super(in)__        order = InternalOrder.Streams.readHistogramOrder(in, false)__        minDocCount = in.readVLong()__        if (minDocCount == 0) {_            emptyBucketInfo = new EmptyBucketInfo(in)__        } else {_            emptyBucketInfo = null__        }_        format = in.readNamedWriteable(DocValueFormat.class)__        keyed = in.readBoolean()__        buckets = in.readList(stream -> new Bucket(stream, keyed, format))__    };stream,from,a,stream;public,internal,histogram,stream,input,in,throws,ioexception,super,in,order,internal,order,streams,read,histogram,order,in,false,min,doc,count,in,read,vlong,if,min,doc,count,0,empty,bucket,info,new,empty,bucket,info,in,else,empty,bucket,info,null,format,in,read,named,writeable,doc,value,format,class,keyed,in,read,boolean,buckets,in,read,list,stream,new,bucket,stream,keyed,format
InternalHistogram -> public InternalHistogram(StreamInput in) throws IOException;1543432000;Stream from a stream.;public InternalHistogram(StreamInput in) throws IOException {_        super(in)__        order = InternalOrder.Streams.readHistogramOrder(in, false)__        minDocCount = in.readVLong()__        if (minDocCount == 0) {_            emptyBucketInfo = new EmptyBucketInfo(in)__        } else {_            emptyBucketInfo = null__        }_        format = in.readNamedWriteable(DocValueFormat.class)__        keyed = in.readBoolean()__        buckets = in.readList(stream -> new Bucket(stream, keyed, format))__    };stream,from,a,stream;public,internal,histogram,stream,input,in,throws,ioexception,super,in,order,internal,order,streams,read,histogram,order,in,false,min,doc,count,in,read,vlong,if,min,doc,count,0,empty,bucket,info,new,empty,bucket,info,in,else,empty,bucket,info,null,format,in,read,named,writeable,doc,value,format,class,keyed,in,read,boolean,buckets,in,read,list,stream,new,bucket,stream,keyed,format
InternalHistogram -> public InternalHistogram(StreamInput in) throws IOException;1543606389;Stream from a stream.;public InternalHistogram(StreamInput in) throws IOException {_        super(in)__        order = InternalOrder.Streams.readHistogramOrder(in, false)__        minDocCount = in.readVLong()__        if (minDocCount == 0) {_            emptyBucketInfo = new EmptyBucketInfo(in)__        } else {_            emptyBucketInfo = null__        }_        format = in.readNamedWriteable(DocValueFormat.class)__        keyed = in.readBoolean()__        buckets = in.readList(stream -> new Bucket(stream, keyed, format))__    };stream,from,a,stream;public,internal,histogram,stream,input,in,throws,ioexception,super,in,order,internal,order,streams,read,histogram,order,in,false,min,doc,count,in,read,vlong,if,min,doc,count,0,empty,bucket,info,new,empty,bucket,info,in,else,empty,bucket,info,null,format,in,read,named,writeable,doc,value,format,class,keyed,in,read,boolean,buckets,in,read,list,stream,new,bucket,stream,keyed,format
