commented;modifiers;parameterAmount;loc;comment;code
false;protected;1;5;;@Override protected boolean resolveIndex(FieldCapabilitiesIndexRequest request) {     // internal action, index already resolved     return false. }
false;protected;2;6;;@Override protected ShardsIterator shards(ClusterState state, InternalRequest request) {     // Resolve patterns and deduplicate     return state.routingTable().index(request.concreteIndex()).randomAllActiveShardsIt(). }
false;protected;2;41;;@Override protected FieldCapabilitiesIndexResponse shardOperation(final FieldCapabilitiesIndexRequest request, ShardId shardId) {     MapperService mapperService = indicesService.indexServiceSafe(shardId.getIndex()).mapperService().     Set<String> fieldNames = new HashSet<>().     for (String field : request.fields()) {         fieldNames.addAll(mapperService.simpleMatchToFullName(field)).     }     Predicate<String> fieldPredicate = indicesService.getFieldFilter().apply(shardId.getIndexName()).     Map<String, FieldCapabilities> responseMap = new HashMap<>().     for (String field : fieldNames) {         MappedFieldType ft = mapperService.fullName(field).         if (ft != null) {             if (indicesService.isMetaDataField(mapperService.getIndexSettings().getIndexVersionCreated(), field) || fieldPredicate.test(ft.name())) {                 FieldCapabilities fieldCap = new FieldCapabilities(field, ft.typeName(), ft.isSearchable(), ft.isAggregatable()).                 responseMap.put(field, fieldCap).             } else {                 continue.             }             // add nested and object fields             int dotIndex = ft.name().lastIndexOf('.').             while (dotIndex > -1) {                 String parentField = ft.name().substring(0, dotIndex).                 if (responseMap.containsKey(parentField)) {                     // we added this path on another field already                     break.                 }                 // checks if the parent field contains sub-fields                 if (mapperService.fullName(parentField) == null) {                     // no field type, it must be an object field                     ObjectMapper mapper = mapperService.getObjectMapper(parentField).                     String type = mapper.nested().isNested() ? "nested" : "object".                     FieldCapabilities fieldCap = new FieldCapabilities(parentField, type, false, false).                     responseMap.put(parentField, fieldCap).                 }                 dotIndex = parentField.lastIndexOf('.').             }         }     }     return new FieldCapabilitiesIndexResponse(shardId.getIndexName(), responseMap). }
false;protected;0;4;;@Override protected FieldCapabilitiesIndexResponse newResponse() {     return new FieldCapabilitiesIndexResponse(). }
false;protected;2;4;;@Override protected ClusterBlockException checkRequestBlock(ClusterState state, InternalRequest request) {     return state.blocks().indexBlockedException(ClusterBlockLevel.METADATA_READ, request.concreteIndex()). }
