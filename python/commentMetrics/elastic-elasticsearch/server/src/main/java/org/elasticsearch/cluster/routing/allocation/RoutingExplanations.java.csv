commented;modifiers;parameterAmount;loc;comment;code
false;public;1;4;;public RoutingExplanations add(RerouteExplanation explanation) {     this.explanations.add(explanation).     return this. }
false;public;0;3;;public List<RerouteExplanation> explanations() {     return this.explanations. }
true;public;0;8;/**  * Provides feedback from commands with a YES decision that should be displayed to the user after the command has been applied  */ ;/**  * Provides feedback from commands with a YES decision that should be displayed to the user after the command has been applied  */ public List<String> getYesDecisionMessages() {     return explanations().stream().filter(explanation -> explanation.decisions().type().equals(Decision.Type.YES)).map(explanation -> explanation.command().getMessage()).filter(Optional::isPresent).map(Optional::get).collect(Collectors.toList()). }
true;public,static;1;9;/**  * Read in a RoutingExplanations object  */ ;/**  * Read in a RoutingExplanations object  */ public static RoutingExplanations readFrom(StreamInput in) throws IOException {     int exCount = in.readVInt().     RoutingExplanations exp = new RoutingExplanations().     for (int i = 0. i < exCount. i++) {         RerouteExplanation explanation = RerouteExplanation.readFrom(in).         exp.add(explanation).     }     return exp. }
true;public,static;2;6;/**  * Write the RoutingExplanations object  */ ;/**  * Write the RoutingExplanations object  */ public static void writeTo(RoutingExplanations explanations, StreamOutput out) throws IOException {     out.writeVInt(explanations.explanations.size()).     for (RerouteExplanation explanation : explanations.explanations) {         RerouteExplanation.writeTo(explanation, out).     } }
false;public;2;9;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.startArray("explanations").     for (RerouteExplanation explanation : explanations) {         explanation.toXContent(builder, params).     }     builder.endArray().     return builder. }
