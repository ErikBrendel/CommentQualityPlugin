# id;timestamp;commentText;codeText;commentWords;codeWords
PrioritizedEsThreadPoolExecutor -> TieBreakingPrioritizedRunnable -> private void runAndClean(Runnable run);1524684173;Timeout callback might remain in the timer scheduling queue for some time and it might hold_the pointers to other objects. As a result it's possible to run out of memory if a large number of_tasks are executed;private void runAndClean(Runnable run) {_            try {_                run.run()__            } finally {_                runnable = null__                timeoutFuture = null__            }__        };timeout,callback,might,remain,in,the,timer,scheduling,queue,for,some,time,and,it,might,hold,the,pointers,to,other,objects,as,a,result,it,s,possible,to,run,out,of,memory,if,a,large,number,of,tasks,are,executed;private,void,run,and,clean,runnable,run,try,run,run,finally,runnable,null,timeout,future,null
PrioritizedEsThreadPoolExecutor -> TieBreakingPrioritizedRunnable -> private void runAndClean(Runnable run);1544081506;Timeout callback might remain in the timer scheduling queue for some time and it might hold_the pointers to other objects. As a result it's possible to run out of memory if a large number of_tasks are executed;private void runAndClean(Runnable run) {_            try {_                run.run()__            } finally {_                runnable = null__                timeoutFuture = null__            }__        };timeout,callback,might,remain,in,the,timer,scheduling,queue,for,some,time,and,it,might,hold,the,pointers,to,other,objects,as,a,result,it,s,possible,to,run,out,of,memory,if,a,large,number,of,tasks,are,executed;private,void,run,and,clean,runnable,run,try,run,run,finally,runnable,null,timeout,future,null
PrioritizedEsThreadPoolExecutor -> TieBreakingPrioritizedRunnable -> private void runAndClean(Runnable run);1547743595;Timeout callback might remain in the timer scheduling queue for some time and it might hold_the pointers to other objects. As a result it's possible to run out of memory if a large number of_tasks are executed;private void runAndClean(Runnable run) {_            try {_                run.run()__            } finally {_                runnable = null__                timeoutFuture = null__            }_        };timeout,callback,might,remain,in,the,timer,scheduling,queue,for,some,time,and,it,might,hold,the,pointers,to,other,objects,as,a,result,it,s,possible,to,run,out,of,memory,if,a,large,number,of,tasks,are,executed;private,void,run,and,clean,runnable,run,try,run,run,finally,runnable,null,timeout,future,null
PrioritizedEsThreadPoolExecutor -> public TimeValue getMaxTaskWaitTime();1524684173;Returns the waiting time of the first task in the queue;public TimeValue getMaxTaskWaitTime() {_        if (getQueue().size() == 0) {_            return NO_WAIT_TIME_VALUE__        }__        long now = System.nanoTime()__        long oldestCreationDateInNanos = now__        for (Runnable queuedRunnable : getQueue()) {_            if (queuedRunnable instanceof PrioritizedRunnable) {_                oldestCreationDateInNanos = Math.min(oldestCreationDateInNanos,_                        ((PrioritizedRunnable) queuedRunnable).getCreationDateInNanos())__            }_        }__        return TimeValue.timeValueNanos(now - oldestCreationDateInNanos)__    };returns,the,waiting,time,of,the,first,task,in,the,queue;public,time,value,get,max,task,wait,time,if,get,queue,size,0,return,long,now,system,nano,time,long,oldest,creation,date,in,nanos,now,for,runnable,queued,runnable,get,queue,if,queued,runnable,instanceof,prioritized,runnable,oldest,creation,date,in,nanos,math,min,oldest,creation,date,in,nanos,prioritized,runnable,queued,runnable,get,creation,date,in,nanos,return,time,value,time,value,nanos,now,oldest,creation,date,in,nanos
PrioritizedEsThreadPoolExecutor -> public TimeValue getMaxTaskWaitTime();1544081506;Returns the waiting time of the first task in the queue;public TimeValue getMaxTaskWaitTime() {_        if (getQueue().size() == 0) {_            return NO_WAIT_TIME_VALUE__        }__        long now = System.nanoTime()__        long oldestCreationDateInNanos = now__        for (Runnable queuedRunnable : getQueue()) {_            if (queuedRunnable instanceof PrioritizedRunnable) {_                oldestCreationDateInNanos = Math.min(oldestCreationDateInNanos,_                        ((PrioritizedRunnable) queuedRunnable).getCreationDateInNanos())__            }_        }__        return TimeValue.timeValueNanos(now - oldestCreationDateInNanos)__    };returns,the,waiting,time,of,the,first,task,in,the,queue;public,time,value,get,max,task,wait,time,if,get,queue,size,0,return,long,now,system,nano,time,long,oldest,creation,date,in,nanos,now,for,runnable,queued,runnable,get,queue,if,queued,runnable,instanceof,prioritized,runnable,oldest,creation,date,in,nanos,math,min,oldest,creation,date,in,nanos,prioritized,runnable,queued,runnable,get,creation,date,in,nanos,return,time,value,time,value,nanos,now,oldest,creation,date,in,nanos
PrioritizedEsThreadPoolExecutor -> public TimeValue getMaxTaskWaitTime();1547743595;Returns the waiting time of the first task in the queue;public TimeValue getMaxTaskWaitTime() {_        if (getQueue().size() == 0) {_            return NO_WAIT_TIME_VALUE__        }__        long now = System.nanoTime()__        long oldestCreationDateInNanos = now__        for (Runnable queuedRunnable : getQueue()) {_            if (queuedRunnable instanceof PrioritizedRunnable) {_                oldestCreationDateInNanos = Math.min(oldestCreationDateInNanos,_                        ((PrioritizedRunnable) queuedRunnable).getCreationDateInNanos())__            }_        }__        return TimeValue.timeValueNanos(now - oldestCreationDateInNanos)__    };returns,the,waiting,time,of,the,first,task,in,the,queue;public,time,value,get,max,task,wait,time,if,get,queue,size,0,return,long,now,system,nano,time,long,oldest,creation,date,in,nanos,now,for,runnable,queued,runnable,get,queue,if,queued,runnable,instanceof,prioritized,runnable,oldest,creation,date,in,nanos,math,min,oldest,creation,date,in,nanos,prioritized,runnable,queued,runnable,get,creation,date,in,nanos,return,time,value,time,value,nanos,now,oldest,creation,date,in,nanos
