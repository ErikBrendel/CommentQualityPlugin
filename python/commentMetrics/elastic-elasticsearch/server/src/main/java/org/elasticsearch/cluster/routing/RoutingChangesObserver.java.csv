commented;modifiers;parameterAmount;loc;comment;code
true;;2;1;/**  * Called when unassigned shard is initialized. Does not include initializing relocation target shards.  */ ;/**  * Called when unassigned shard is initialized. Does not include initializing relocation target shards.  */ void shardInitialized(ShardRouting unassignedShard, ShardRouting initializedShard).
true;;2;1;/**  * Called when an initializing shard is started.  */ ;/**  * Called when an initializing shard is started.  */ void shardStarted(ShardRouting initializingShard, ShardRouting startedShard).
true;;2;1;/**  * Called when relocation of a started shard is initiated.  */ ;/**  * Called when relocation of a started shard is initiated.  */ void relocationStarted(ShardRouting startedShard, ShardRouting targetRelocatingShard).
true;;2;1;/**  * Called when an unassigned shard's unassigned information was updated  */ ;/**  * Called when an unassigned shard's unassigned information was updated  */ void unassignedInfoUpdated(ShardRouting unassignedShard, UnassignedInfo newUnassignedInfo).
true;;2;1;/**  * Called when a shard is failed or cancelled.  */ ;/**  * Called when a shard is failed or cancelled.  */ void shardFailed(ShardRouting failedShard, UnassignedInfo unassignedInfo).
true;;1;1;/**  * Called on relocation source when relocation completes after relocation target is started.  */ ;/**  * Called on relocation source when relocation completes after relocation target is started.  */ void relocationCompleted(ShardRouting removedRelocationSource).
true;;1;1;/**  * Called on replica relocation target when replica relocation source fails. Promotes the replica relocation target to ordinary  * initializing shard.  */ ;/**  * Called on replica relocation target when replica relocation source fails. Promotes the replica relocation target to ordinary  * initializing shard.  */ void relocationSourceRemoved(ShardRouting removedReplicaRelocationSource).
true;;1;1;/**  * Called when started replica is promoted to primary.  */ ;/**  * Called when started replica is promoted to primary.  */ void replicaPromoted(ShardRouting replicaShard).
true;;2;1;/**  * Called when an initializing replica is reinitialized. This happens when a primary relocation completes, which  * reinitializes all currently initializing replicas as their recovery source node changes  */ ;/**  * Called when an initializing replica is reinitialized. This happens when a primary relocation completes, which  * reinitializes all currently initializing replicas as their recovery source node changes  */ void initializedReplicaReinitialized(ShardRouting oldReplica, ShardRouting reinitializedReplica).
false;public;2;4;;@Override public void shardInitialized(ShardRouting unassignedShard, ShardRouting initializedShard) { }
false;public;2;4;;@Override public void shardStarted(ShardRouting initializingShard, ShardRouting startedShard) { }
false;public;2;4;;@Override public void relocationStarted(ShardRouting startedShard, ShardRouting targetRelocatingShard) { }
false;public;2;4;;@Override public void unassignedInfoUpdated(ShardRouting unassignedShard, UnassignedInfo newUnassignedInfo) { }
false;public;2;4;;@Override public void shardFailed(ShardRouting activeShard, UnassignedInfo unassignedInfo) { }
false;public;1;4;;@Override public void relocationCompleted(ShardRouting removedRelocationSource) { }
false;public;1;4;;@Override public void relocationSourceRemoved(ShardRouting removedReplicaRelocationSource) { }
false;public;1;4;;@Override public void replicaPromoted(ShardRouting replicaShard) { }
false;public;2;4;;@Override public void initializedReplicaReinitialized(ShardRouting oldReplica, ShardRouting reinitializedReplica) { }
false;public;2;6;;@Override public void shardInitialized(ShardRouting unassignedShard, ShardRouting initializedShard) {     for (RoutingChangesObserver routingChangesObserver : routingChangesObservers) {         routingChangesObserver.shardInitialized(unassignedShard, initializedShard).     } }
false;public;2;6;;@Override public void shardStarted(ShardRouting initializingShard, ShardRouting startedShard) {     for (RoutingChangesObserver routingChangesObserver : routingChangesObservers) {         routingChangesObserver.shardStarted(initializingShard, startedShard).     } }
false;public;2;6;;@Override public void relocationStarted(ShardRouting startedShard, ShardRouting targetRelocatingShard) {     for (RoutingChangesObserver routingChangesObserver : routingChangesObservers) {         routingChangesObserver.relocationStarted(startedShard, targetRelocatingShard).     } }
false;public;2;6;;@Override public void unassignedInfoUpdated(ShardRouting unassignedShard, UnassignedInfo newUnassignedInfo) {     for (RoutingChangesObserver routingChangesObserver : routingChangesObservers) {         routingChangesObserver.unassignedInfoUpdated(unassignedShard, newUnassignedInfo).     } }
false;public;2;6;;@Override public void shardFailed(ShardRouting activeShard, UnassignedInfo unassignedInfo) {     for (RoutingChangesObserver routingChangesObserver : routingChangesObservers) {         routingChangesObserver.shardFailed(activeShard, unassignedInfo).     } }
false;public;1;6;;@Override public void relocationCompleted(ShardRouting removedRelocationSource) {     for (RoutingChangesObserver routingChangesObserver : routingChangesObservers) {         routingChangesObserver.relocationCompleted(removedRelocationSource).     } }
false;public;1;6;;@Override public void relocationSourceRemoved(ShardRouting removedReplicaRelocationSource) {     for (RoutingChangesObserver routingChangesObserver : routingChangesObservers) {         routingChangesObserver.relocationSourceRemoved(removedReplicaRelocationSource).     } }
false;public;1;6;;@Override public void replicaPromoted(ShardRouting replicaShard) {     for (RoutingChangesObserver routingChangesObserver : routingChangesObservers) {         routingChangesObserver.replicaPromoted(replicaShard).     } }
false;public;2;6;;@Override public void initializedReplicaReinitialized(ShardRouting oldReplica, ShardRouting reinitializedReplica) {     for (RoutingChangesObserver routingChangesObserver : routingChangesObservers) {         routingChangesObserver.initializedReplicaReinitialized(oldReplica, reinitializedReplica).     } }
