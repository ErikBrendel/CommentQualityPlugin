# id;timestamp;commentText;codeText;commentWords;codeWords
Transport -> BoundTransportAddress boundAddress()_;1524684173;The address the transport is bound on.;BoundTransportAddress boundAddress()_;the,address,the,transport,is,bound,on;bound,transport,address,bound,address
Transport -> BoundTransportAddress boundAddress()_;1525334055;The address the transport is bound on.;BoundTransportAddress boundAddress()_;the,address,the,transport,is,bound,on;bound,transport,address,bound,address
Transport -> BoundTransportAddress boundAddress()_;1531179852;The address the transport is bound on.;BoundTransportAddress boundAddress()_;the,address,the,transport,is,bound,on;bound,transport,address,bound,address
Transport -> BoundTransportAddress boundAddress()_;1534203100;The address the transport is bound on.;BoundTransportAddress boundAddress()_;the,address,the,transport,is,bound,on;bound,transport,address,bound,address
Transport -> BoundTransportAddress boundAddress()_;1534755962;The address the transport is bound on.;BoundTransportAddress boundAddress()_;the,address,the,transport,is,bound,on;bound,transport,address,bound,address
Transport -> BoundTransportAddress boundAddress()_;1539615817;The address the transport is bound on.;BoundTransportAddress boundAddress()_;the,address,the,transport,is,bound,on;bound,transport,address,bound,address
Transport -> BoundTransportAddress boundAddress()_;1540583181;The address the transport is bound on.;BoundTransportAddress boundAddress()_;the,address,the,transport,is,bound,on;bound,transport,address,bound,address
Transport -> BoundTransportAddress boundAddress()_;1543506953;The address the transport is bound on.;BoundTransportAddress boundAddress()_;the,address,the,transport,is,bound,on;bound,transport,address,bound,address
Transport -> BoundTransportAddress boundAddress()_;1543602642;The address the transport is bound on.;BoundTransportAddress boundAddress()_;the,address,the,transport,is,bound,on;bound,transport,address,bound,address
Transport -> BoundTransportAddress boundAddress()_;1544823664;The address the transport is bound on.;BoundTransportAddress boundAddress()_;the,address,the,transport,is,bound,on;bound,transport,address,bound,address
Transport -> ResponseHandlers -> public ResponseContext remove(long requestId);1531179852;Removes and return the {@link ResponseContext} for the given request ID or returns_<code>null</code> if no context is associated with this request ID.;public ResponseContext remove(long requestId) {_            return handlers.remove(requestId)__        };removes,and,return,the,link,response,context,for,the,given,request,id,or,returns,code,null,code,if,no,context,is,associated,with,this,request,id;public,response,context,remove,long,request,id,return,handlers,remove,request,id
Transport -> ResponseHandlers -> public ResponseContext remove(long requestId);1534203100;Removes and return the {@link ResponseContext} for the given request ID or returns_<code>null</code> if no context is associated with this request ID.;public ResponseContext remove(long requestId) {_            return handlers.remove(requestId)__        };removes,and,return,the,link,response,context,for,the,given,request,id,or,returns,code,null,code,if,no,context,is,associated,with,this,request,id;public,response,context,remove,long,request,id,return,handlers,remove,request,id
Transport -> ResponseHandlers -> public ResponseContext remove(long requestId);1534755962;Removes and return the {@link ResponseContext} for the given request ID or returns_<code>null</code> if no context is associated with this request ID.;public ResponseContext remove(long requestId) {_            return handlers.remove(requestId)__        };removes,and,return,the,link,response,context,for,the,given,request,id,or,returns,code,null,code,if,no,context,is,associated,with,this,request,id;public,response,context,remove,long,request,id,return,handlers,remove,request,id
Transport -> ResponseHandlers -> public ResponseContext remove(long requestId);1539615817;Removes and return the {@link ResponseContext} for the given request ID or returns_<code>null</code> if no context is associated with this request ID.;public ResponseContext remove(long requestId) {_            return handlers.remove(requestId)__        };removes,and,return,the,link,response,context,for,the,given,request,id,or,returns,code,null,code,if,no,context,is,associated,with,this,request,id;public,response,context,remove,long,request,id,return,handlers,remove,request,id
Transport -> ResponseHandlers -> public ResponseContext remove(long requestId);1540583181;Removes and return the {@link ResponseContext} for the given request ID or returns_<code>null</code> if no context is associated with this request ID.;public ResponseContext remove(long requestId) {_            return handlers.remove(requestId)__        };removes,and,return,the,link,response,context,for,the,given,request,id,or,returns,code,null,code,if,no,context,is,associated,with,this,request,id;public,response,context,remove,long,request,id,return,handlers,remove,request,id
Transport -> ResponseHandlers -> public ResponseContext remove(long requestId);1543506953;Removes and return the {@link ResponseContext} for the given request ID or returns_<code>null</code> if no context is associated with this request ID.;public ResponseContext remove(long requestId) {_            return handlers.remove(requestId)__        };removes,and,return,the,link,response,context,for,the,given,request,id,or,returns,code,null,code,if,no,context,is,associated,with,this,request,id;public,response,context,remove,long,request,id,return,handlers,remove,request,id
Transport -> ResponseHandlers -> public ResponseContext remove(long requestId);1543602642;Removes and return the {@link ResponseContext} for the given request ID or returns_<code>null</code> if no context is associated with this request ID.;public ResponseContext remove(long requestId) {_            return handlers.remove(requestId)__        };removes,and,return,the,link,response,context,for,the,given,request,id,or,returns,code,null,code,if,no,context,is,associated,with,this,request,id;public,response,context,remove,long,request,id,return,handlers,remove,request,id
Transport -> ResponseHandlers -> public ResponseContext remove(long requestId);1544823664;Removes and return the {@link ResponseContext} for the given request ID or returns_<code>null</code> if no context is associated with this request ID.;public ResponseContext remove(long requestId) {_            return handlers.remove(requestId)__        };removes,and,return,the,link,response,context,for,the,given,request,id,or,returns,code,null,code,if,no,context,is,associated,with,this,request,id;public,response,context,remove,long,request,id,return,handlers,remove,request,id
Transport -> Map<String, BoundTransportAddress> profileBoundAddresses()_;1524684173;Further profile bound addresses_@return <code>null</code> iff profiles are unsupported, otherwise a map with name of profile and its bound transport address;Map<String, BoundTransportAddress> profileBoundAddresses()_;further,profile,bound,addresses,return,code,null,code,iff,profiles,are,unsupported,otherwise,a,map,with,name,of,profile,and,its,bound,transport,address;map,string,bound,transport,address,profile,bound,addresses
Transport -> Map<String, BoundTransportAddress> profileBoundAddresses()_;1525334055;Further profile bound addresses_@return <code>null</code> iff profiles are unsupported, otherwise a map with name of profile and its bound transport address;Map<String, BoundTransportAddress> profileBoundAddresses()_;further,profile,bound,addresses,return,code,null,code,iff,profiles,are,unsupported,otherwise,a,map,with,name,of,profile,and,its,bound,transport,address;map,string,bound,transport,address,profile,bound,addresses
Transport -> Map<String, BoundTransportAddress> profileBoundAddresses()_;1531179852;Further profile bound addresses_@return <code>null</code> iff profiles are unsupported, otherwise a map with name of profile and its bound transport address;Map<String, BoundTransportAddress> profileBoundAddresses()_;further,profile,bound,addresses,return,code,null,code,iff,profiles,are,unsupported,otherwise,a,map,with,name,of,profile,and,its,bound,transport,address;map,string,bound,transport,address,profile,bound,addresses
Transport -> Map<String, BoundTransportAddress> profileBoundAddresses()_;1534203100;Further profile bound addresses_@return <code>null</code> iff profiles are unsupported, otherwise a map with name of profile and its bound transport address;Map<String, BoundTransportAddress> profileBoundAddresses()_;further,profile,bound,addresses,return,code,null,code,iff,profiles,are,unsupported,otherwise,a,map,with,name,of,profile,and,its,bound,transport,address;map,string,bound,transport,address,profile,bound,addresses
Transport -> Map<String, BoundTransportAddress> profileBoundAddresses()_;1534755962;Further profile bound addresses_@return <code>null</code> iff profiles are unsupported, otherwise a map with name of profile and its bound transport address;Map<String, BoundTransportAddress> profileBoundAddresses()_;further,profile,bound,addresses,return,code,null,code,iff,profiles,are,unsupported,otherwise,a,map,with,name,of,profile,and,its,bound,transport,address;map,string,bound,transport,address,profile,bound,addresses
Transport -> Map<String, BoundTransportAddress> profileBoundAddresses()_;1539615817;Further profile bound addresses_@return <code>null</code> iff profiles are unsupported, otherwise a map with name of profile and its bound transport address;Map<String, BoundTransportAddress> profileBoundAddresses()_;further,profile,bound,addresses,return,code,null,code,iff,profiles,are,unsupported,otherwise,a,map,with,name,of,profile,and,its,bound,transport,address;map,string,bound,transport,address,profile,bound,addresses
Transport -> Map<String, BoundTransportAddress> profileBoundAddresses()_;1540583181;Further profile bound addresses_@return <code>null</code> iff profiles are unsupported, otherwise a map with name of profile and its bound transport address;Map<String, BoundTransportAddress> profileBoundAddresses()_;further,profile,bound,addresses,return,code,null,code,iff,profiles,are,unsupported,otherwise,a,map,with,name,of,profile,and,its,bound,transport,address;map,string,bound,transport,address,profile,bound,addresses
Transport -> Map<String, BoundTransportAddress> profileBoundAddresses()_;1543506953;Further profile bound addresses_@return <code>null</code> iff profiles are unsupported, otherwise a map with name of profile and its bound transport address;Map<String, BoundTransportAddress> profileBoundAddresses()_;further,profile,bound,addresses,return,code,null,code,iff,profiles,are,unsupported,otherwise,a,map,with,name,of,profile,and,its,bound,transport,address;map,string,bound,transport,address,profile,bound,addresses
Transport -> Map<String, BoundTransportAddress> profileBoundAddresses()_;1543602642;Further profile bound addresses_@return <code>null</code> iff profiles are unsupported, otherwise a map with name of profile and its bound transport address;Map<String, BoundTransportAddress> profileBoundAddresses()_;further,profile,bound,addresses,return,code,null,code,iff,profiles,are,unsupported,otherwise,a,map,with,name,of,profile,and,its,bound,transport,address;map,string,bound,transport,address,profile,bound,addresses
Transport -> Map<String, BoundTransportAddress> profileBoundAddresses()_;1544823664;Further profile bound addresses_@return <code>null</code> iff profiles are unsupported, otherwise a map with name of profile and its bound transport address;Map<String, BoundTransportAddress> profileBoundAddresses()_;further,profile,bound,addresses,return,code,null,code,iff,profiles,are,unsupported,otherwise,a,map,with,name,of,profile,and,its,bound,transport,address;map,string,bound,transport,address,profile,bound,addresses
Transport -> ResponseHandlers -> long newRequestId();1531179852;Returns a new request ID to use when sending a message via {@link Connection#sendRequest(long, String,_TransportRequest, TransportRequestOptions)};long newRequestId() {_            return requestIdGenerator.incrementAndGet()__        };returns,a,new,request,id,to,use,when,sending,a,message,via,link,connection,send,request,long,string,transport,request,transport,request,options;long,new,request,id,return,request,id,generator,increment,and,get
Transport -> ResponseHandlers -> long newRequestId();1534203100;Returns a new request ID to use when sending a message via {@link Connection#sendRequest(long, String,_TransportRequest, TransportRequestOptions)};long newRequestId() {_            return requestIdGenerator.incrementAndGet()__        };returns,a,new,request,id,to,use,when,sending,a,message,via,link,connection,send,request,long,string,transport,request,transport,request,options;long,new,request,id,return,request,id,generator,increment,and,get
Transport -> ResponseHandlers -> long newRequestId();1534755962;Returns a new request ID to use when sending a message via {@link Connection#sendRequest(long, String,_TransportRequest, TransportRequestOptions)};long newRequestId() {_            return requestIdGenerator.incrementAndGet()__        };returns,a,new,request,id,to,use,when,sending,a,message,via,link,connection,send,request,long,string,transport,request,transport,request,options;long,new,request,id,return,request,id,generator,increment,and,get
Transport -> ResponseHandlers -> long newRequestId();1539615817;Returns a new request ID to use when sending a message via {@link Connection#sendRequest(long, String,_TransportRequest, TransportRequestOptions)};long newRequestId() {_            return requestIdGenerator.incrementAndGet()__        };returns,a,new,request,id,to,use,when,sending,a,message,via,link,connection,send,request,long,string,transport,request,transport,request,options;long,new,request,id,return,request,id,generator,increment,and,get
Transport -> ResponseHandlers -> long newRequestId();1540583181;Returns a new request ID to use when sending a message via {@link Connection#sendRequest(long, String,_TransportRequest, TransportRequestOptions)};long newRequestId() {_            return requestIdGenerator.incrementAndGet()__        };returns,a,new,request,id,to,use,when,sending,a,message,via,link,connection,send,request,long,string,transport,request,transport,request,options;long,new,request,id,return,request,id,generator,increment,and,get
Transport -> ResponseHandlers -> long newRequestId();1543506953;Returns a new request ID to use when sending a message via {@link Connection#sendRequest(long, String,_TransportRequest, TransportRequestOptions)};long newRequestId() {_            return requestIdGenerator.incrementAndGet()__        };returns,a,new,request,id,to,use,when,sending,a,message,via,link,connection,send,request,long,string,transport,request,transport,request,options;long,new,request,id,return,request,id,generator,increment,and,get
Transport -> ResponseHandlers -> long newRequestId();1543602642;Returns a new request ID to use when sending a message via {@link Connection#sendRequest(long, String,_TransportRequest, TransportRequestOptions)};long newRequestId() {_            return requestIdGenerator.incrementAndGet()__        };returns,a,new,request,id,to,use,when,sending,a,message,via,link,connection,send,request,long,string,transport,request,transport,request,options;long,new,request,id,return,request,id,generator,increment,and,get
Transport -> ResponseHandlers -> long newRequestId();1544823664;Returns a new request ID to use when sending a message via {@link Connection#sendRequest(long, String,_TransportRequest, TransportRequestOptions)};long newRequestId() {_            return requestIdGenerator.incrementAndGet()__        };returns,a,new,request,id,to,use,when,sending,a,message,via,link,connection,send,request,long,string,transport,request,transport,request,options;long,new,request,id,return,request,id,generator,increment,and,get
Transport -> RequestHandlerRegistry<? extends TransportRequest> getRequestHandler(String action)_;1540583181;Returns the registered request handler registry for the given action or <code>null</code> if it's not registered_@param action the action to look up;RequestHandlerRegistry<? extends TransportRequest> getRequestHandler(String action)_;returns,the,registered,request,handler,registry,for,the,given,action,or,code,null,code,if,it,s,not,registered,param,action,the,action,to,look,up;request,handler,registry,extends,transport,request,get,request,handler,string,action
Transport -> RequestHandlerRegistry<? extends TransportRequest> getRequestHandler(String action)_;1543506953;Returns the registered request handler registry for the given action or <code>null</code> if it's not registered_@param action the action to look up;RequestHandlerRegistry<? extends TransportRequest> getRequestHandler(String action)_;returns,the,registered,request,handler,registry,for,the,given,action,or,code,null,code,if,it,s,not,registered,param,action,the,action,to,look,up;request,handler,registry,extends,transport,request,get,request,handler,string,action
Transport -> RequestHandlerRegistry<? extends TransportRequest> getRequestHandler(String action)_;1543602642;Returns the registered request handler registry for the given action or <code>null</code> if it's not registered_@param action the action to look up;RequestHandlerRegistry<? extends TransportRequest> getRequestHandler(String action)_;returns,the,registered,request,handler,registry,for,the,given,action,or,code,null,code,if,it,s,not,registered,param,action,the,action,to,look,up;request,handler,registry,extends,transport,request,get,request,handler,string,action
Transport -> RequestHandlerRegistry<? extends TransportRequest> getRequestHandler(String action)_;1544823664;Returns the registered request handler registry for the given action or <code>null</code> if it's not registered_@param action the action to look up;RequestHandlerRegistry<? extends TransportRequest> getRequestHandler(String action)_;returns,the,registered,request,handler,registry,for,the,given,action,or,code,null,code,if,it,s,not,registered,param,action,the,action,to,look,up;request,handler,registry,extends,transport,request,get,request,handler,string,action
Transport -> boolean nodeConnected(DiscoveryNode node)_;1524684173;Returns <tt>true</tt> if the node is connected.;boolean nodeConnected(DiscoveryNode node)_;returns,tt,true,tt,if,the,node,is,connected;boolean,node,connected,discovery,node,node
Transport -> boolean nodeConnected(DiscoveryNode node)_;1525334055;Returns {@code true} if the node is connected.;boolean nodeConnected(DiscoveryNode node)_;returns,code,true,if,the,node,is,connected;boolean,node,connected,discovery,node,node
Transport -> boolean nodeConnected(DiscoveryNode node)_;1531179852;Returns {@code true} if the node is connected.;boolean nodeConnected(DiscoveryNode node)_;returns,code,true,if,the,node,is,connected;boolean,node,connected,discovery,node,node
Transport -> Connection openConnection(DiscoveryNode node, ConnectionProfile profile)_;1534203100;Opens a new connection to the given node and returns it. The returned connection is not managed by_the transport implementation. This connection must be closed once it's not needed anymore.;Connection openConnection(DiscoveryNode node, ConnectionProfile profile)_;opens,a,new,connection,to,the,given,node,and,returns,it,the,returned,connection,is,not,managed,by,the,transport,implementation,this,connection,must,be,closed,once,it,s,not,needed,anymore;connection,open,connection,discovery,node,node,connection,profile,profile
Transport -> Connection openConnection(DiscoveryNode node, ConnectionProfile profile)_;1534755962;Opens a new connection to the given node and returns it. The returned connection is not managed by_the transport implementation. This connection must be closed once it's not needed anymore.;Connection openConnection(DiscoveryNode node, ConnectionProfile profile)_;opens,a,new,connection,to,the,given,node,and,returns,it,the,returned,connection,is,not,managed,by,the,transport,implementation,this,connection,must,be,closed,once,it,s,not,needed,anymore;connection,open,connection,discovery,node,node,connection,profile,profile
Transport -> Connection openConnection(DiscoveryNode node, ConnectionProfile profile)_;1539615817;Opens a new connection to the given node and returns it. The returned connection is not managed by_the transport implementation. This connection must be closed once it's not needed anymore.;Connection openConnection(DiscoveryNode node, ConnectionProfile profile)_;opens,a,new,connection,to,the,given,node,and,returns,it,the,returned,connection,is,not,managed,by,the,transport,implementation,this,connection,must,be,closed,once,it,s,not,needed,anymore;connection,open,connection,discovery,node,node,connection,profile,profile
Transport -> Connection openConnection(DiscoveryNode node, ConnectionProfile profile)_;1540583181;Opens a new connection to the given node and returns it. The returned connection is not managed by_the transport implementation. This connection must be closed once it's not needed anymore.;Connection openConnection(DiscoveryNode node, ConnectionProfile profile)_;opens,a,new,connection,to,the,given,node,and,returns,it,the,returned,connection,is,not,managed,by,the,transport,implementation,this,connection,must,be,closed,once,it,s,not,needed,anymore;connection,open,connection,discovery,node,node,connection,profile,profile
Transport -> Connection openConnection(DiscoveryNode node, ConnectionProfile profile)_;1543506953;Opens a new connection to the given node and returns it. The returned connection is not managed by_the transport implementation. This connection must be closed once it's not needed anymore.;Connection openConnection(DiscoveryNode node, ConnectionProfile profile)_;opens,a,new,connection,to,the,given,node,and,returns,it,the,returned,connection,is,not,managed,by,the,transport,implementation,this,connection,must,be,closed,once,it,s,not,needed,anymore;connection,open,connection,discovery,node,node,connection,profile,profile
Transport -> <Request extends TransportRequest> void registerRequestHandler(RequestHandlerRegistry<Request> reg)_;1531179852;Registers a new request handler;<Request extends TransportRequest> void registerRequestHandler(RequestHandlerRegistry<Request> reg)_;registers,a,new,request,handler;request,extends,transport,request,void,register,request,handler,request,handler,registry,request,reg
Transport -> <Request extends TransportRequest> void registerRequestHandler(RequestHandlerRegistry<Request> reg)_;1534203100;Registers a new request handler;<Request extends TransportRequest> void registerRequestHandler(RequestHandlerRegistry<Request> reg)_;registers,a,new,request,handler;request,extends,transport,request,void,register,request,handler,request,handler,registry,request,reg
Transport -> <Request extends TransportRequest> void registerRequestHandler(RequestHandlerRegistry<Request> reg)_;1534755962;Registers a new request handler;<Request extends TransportRequest> void registerRequestHandler(RequestHandlerRegistry<Request> reg)_;registers,a,new,request,handler;request,extends,transport,request,void,register,request,handler,request,handler,registry,request,reg
Transport -> <Request extends TransportRequest> void registerRequestHandler(RequestHandlerRegistry<Request> reg)_;1539615817;Registers a new request handler;<Request extends TransportRequest> void registerRequestHandler(RequestHandlerRegistry<Request> reg)_;registers,a,new,request,handler;request,extends,transport,request,void,register,request,handler,request,handler,registry,request,reg
Transport -> <Request extends TransportRequest> void registerRequestHandler(RequestHandlerRegistry<Request> reg)_;1540583181;Registers a new request handler;<Request extends TransportRequest> void registerRequestHandler(RequestHandlerRegistry<Request> reg)_;registers,a,new,request,handler;request,extends,transport,request,void,register,request,handler,request,handler,registry,request,reg
Transport -> <Request extends TransportRequest> void registerRequestHandler(RequestHandlerRegistry<Request> reg)_;1543506953;Registers a new request handler;<Request extends TransportRequest> void registerRequestHandler(RequestHandlerRegistry<Request> reg)_;registers,a,new,request,handler;request,extends,transport,request,void,register,request,handler,request,handler,registry,request,reg
Transport -> <Request extends TransportRequest> void registerRequestHandler(RequestHandlerRegistry<Request> reg)_;1543602642;Registers a new request handler;<Request extends TransportRequest> void registerRequestHandler(RequestHandlerRegistry<Request> reg)_;registers,a,new,request,handler;request,extends,transport,request,void,register,request,handler,request,handler,registry,request,reg
Transport -> <Request extends TransportRequest> void registerRequestHandler(RequestHandlerRegistry<Request> reg)_;1544823664;Registers a new request handler;<Request extends TransportRequest> void registerRequestHandler(RequestHandlerRegistry<Request> reg)_;registers,a,new,request,handler;request,extends,transport,request,void,register,request,handler,request,handler,registry,request,reg
Transport -> Connection -> default Version getVersion();1524684173;Returns the version of the node this connection was established with.;default Version getVersion() {_            return getNode().getVersion()__        };returns,the,version,of,the,node,this,connection,was,established,with;default,version,get,version,return,get,node,get,version
Transport -> Connection -> default Version getVersion();1525334055;Returns the version of the node this connection was established with.;default Version getVersion() {_            return getNode().getVersion()__        };returns,the,version,of,the,node,this,connection,was,established,with;default,version,get,version,return,get,node,get,version
Transport -> Connection -> default Version getVersion();1531179852;Returns the version of the node this connection was established with.;default Version getVersion() {_            return getNode().getVersion()__        };returns,the,version,of,the,node,this,connection,was,established,with;default,version,get,version,return,get,node,get,version
Transport -> Connection -> default Version getVersion();1534203100;Returns the version of the node this connection was established with.;default Version getVersion() {_            return getNode().getVersion()__        };returns,the,version,of,the,node,this,connection,was,established,with;default,version,get,version,return,get,node,get,version
Transport -> Connection -> default Version getVersion();1534755962;Returns the version of the node this connection was established with.;default Version getVersion() {_            return getNode().getVersion()__        };returns,the,version,of,the,node,this,connection,was,established,with;default,version,get,version,return,get,node,get,version
Transport -> Connection -> default Version getVersion();1539615817;Returns the version of the node this connection was established with.;default Version getVersion() {_            return getNode().getVersion()__        };returns,the,version,of,the,node,this,connection,was,established,with;default,version,get,version,return,get,node,get,version
Transport -> Connection -> default Version getVersion();1540583181;Returns the version of the node this connection was established with.;default Version getVersion() {_            return getNode().getVersion()__        };returns,the,version,of,the,node,this,connection,was,established,with;default,version,get,version,return,get,node,get,version
Transport -> Connection -> default Version getVersion();1543506953;Returns the version of the node this connection was established with.;default Version getVersion() {_            return getNode().getVersion()__        };returns,the,version,of,the,node,this,connection,was,established,with;default,version,get,version,return,get,node,get,version
Transport -> Connection -> default Version getVersion();1543602642;Returns the version of the node this connection was established with.;default Version getVersion() {_            return getNode().getVersion()__        };returns,the,version,of,the,node,this,connection,was,established,with;default,version,get,version,return,get,node,get,version
Transport -> Connection -> default Version getVersion();1544823664;Returns the version of the node this connection was established with.;default Version getVersion() {_            return getNode().getVersion()__        };returns,the,version,of,the,node,this,connection,was,established,with;default,version,get,version,return,get,node,get,version
Transport -> boolean removeConnectionListener(TransportConnectionListener listener)_;1531179852;Removes an event listener_@param listener the listener to remove_@return <code>true</code> iff the listener was removed otherwise <code>false</code>;boolean removeConnectionListener(TransportConnectionListener listener)_;removes,an,event,listener,param,listener,the,listener,to,remove,return,code,true,code,iff,the,listener,was,removed,otherwise,code,false,code;boolean,remove,connection,listener,transport,connection,listener,listener
Transport -> boolean removeConnectionListener(TransportConnectionListener listener)_;1534203100;Removes an event listener_@param listener the listener to remove_@return <code>true</code> iff the listener was removed otherwise <code>false</code>;boolean removeConnectionListener(TransportConnectionListener listener)_;removes,an,event,listener,param,listener,the,listener,to,remove,return,code,true,code,iff,the,listener,was,removed,otherwise,code,false,code;boolean,remove,connection,listener,transport,connection,listener,listener
Transport -> ResponseHandlers -> public List<ResponseContext> prune(Predicate<ResponseContext> predicate);1531179852;Removes and returns all {@link ResponseContext} instances that match the predicate;public List<ResponseContext> prune(Predicate<ResponseContext> predicate) {_            final List<ResponseContext> holders = new ArrayList<>()__            for (Map.Entry<Long, ResponseContext> entry : handlers.entrySet()) {_                ResponseContext holder = entry.getValue()__                if (predicate.test(holder)) {_                    ResponseContext remove = handlers.remove(entry.getKey())__                    if (remove != null) {_                        holders.add(holder)__                    }_                }_            }_            return holders__        };removes,and,returns,all,link,response,context,instances,that,match,the,predicate;public,list,response,context,prune,predicate,response,context,predicate,final,list,response,context,holders,new,array,list,for,map,entry,long,response,context,entry,handlers,entry,set,response,context,holder,entry,get,value,if,predicate,test,holder,response,context,remove,handlers,remove,entry,get,key,if,remove,null,holders,add,holder,return,holders
Transport -> ResponseHandlers -> public List<ResponseContext> prune(Predicate<ResponseContext> predicate);1534203100;Removes and returns all {@link ResponseContext} instances that match the predicate;public List<ResponseContext> prune(Predicate<ResponseContext> predicate) {_            final List<ResponseContext> holders = new ArrayList<>()__            for (Map.Entry<Long, ResponseContext> entry : handlers.entrySet()) {_                ResponseContext holder = entry.getValue()__                if (predicate.test(holder)) {_                    ResponseContext remove = handlers.remove(entry.getKey())__                    if (remove != null) {_                        holders.add(holder)__                    }_                }_            }_            return holders__        };removes,and,returns,all,link,response,context,instances,that,match,the,predicate;public,list,response,context,prune,predicate,response,context,predicate,final,list,response,context,holders,new,array,list,for,map,entry,long,response,context,entry,handlers,entry,set,response,context,holder,entry,get,value,if,predicate,test,holder,response,context,remove,handlers,remove,entry,get,key,if,remove,null,holders,add,holder,return,holders
Transport -> ResponseHandlers -> public List<ResponseContext> prune(Predicate<ResponseContext> predicate);1534755962;Removes and returns all {@link ResponseContext} instances that match the predicate;public List<ResponseContext> prune(Predicate<ResponseContext> predicate) {_            final List<ResponseContext> holders = new ArrayList<>()__            for (Map.Entry<Long, ResponseContext> entry : handlers.entrySet()) {_                ResponseContext holder = entry.getValue()__                if (predicate.test(holder)) {_                    ResponseContext remove = handlers.remove(entry.getKey())__                    if (remove != null) {_                        holders.add(holder)__                    }_                }_            }_            return holders__        };removes,and,returns,all,link,response,context,instances,that,match,the,predicate;public,list,response,context,prune,predicate,response,context,predicate,final,list,response,context,holders,new,array,list,for,map,entry,long,response,context,entry,handlers,entry,set,response,context,holder,entry,get,value,if,predicate,test,holder,response,context,remove,handlers,remove,entry,get,key,if,remove,null,holders,add,holder,return,holders
Transport -> ResponseHandlers -> public List<ResponseContext> prune(Predicate<ResponseContext> predicate);1539615817;Removes and returns all {@link ResponseContext} instances that match the predicate;public List<ResponseContext> prune(Predicate<ResponseContext> predicate) {_            final List<ResponseContext> holders = new ArrayList<>()__            for (Map.Entry<Long, ResponseContext> entry : handlers.entrySet()) {_                ResponseContext holder = entry.getValue()__                if (predicate.test(holder)) {_                    ResponseContext remove = handlers.remove(entry.getKey())__                    if (remove != null) {_                        holders.add(holder)__                    }_                }_            }_            return holders__        };removes,and,returns,all,link,response,context,instances,that,match,the,predicate;public,list,response,context,prune,predicate,response,context,predicate,final,list,response,context,holders,new,array,list,for,map,entry,long,response,context,entry,handlers,entry,set,response,context,holder,entry,get,value,if,predicate,test,holder,response,context,remove,handlers,remove,entry,get,key,if,remove,null,holders,add,holder,return,holders
Transport -> List<String> getLocalAddresses()_;1531179852;Returns a list of all local adresses for this transport;List<String> getLocalAddresses()_;returns,a,list,of,all,local,adresses,for,this,transport;list,string,get,local,addresses
Transport -> List<String> getLocalAddresses()_;1534203100;Returns a list of all local adresses for this transport;List<String> getLocalAddresses()_;returns,a,list,of,all,local,adresses,for,this,transport;list,string,get,local,addresses
Transport -> List<String> getLocalAddresses()_;1534755962;Returns a list of all local adresses for this transport;List<String> getLocalAddresses()_;returns,a,list,of,all,local,adresses,for,this,transport;list,string,get,local,addresses
Transport -> List<String> getLocalAddresses()_;1539615817;Returns a list of all local adresses for this transport;List<String> getLocalAddresses()_;returns,a,list,of,all,local,adresses,for,this,transport;list,string,get,local,addresses
Transport -> List<String> getLocalAddresses()_;1540583181;Returns a list of all local adresses for this transport;List<String> getLocalAddresses()_;returns,a,list,of,all,local,adresses,for,this,transport;list,string,get,local,addresses
Transport -> List<String> getLocalAddresses()_;1543506953;Returns a list of all local adresses for this transport;List<String> getLocalAddresses()_;returns,a,list,of,all,local,adresses,for,this,transport;list,string,get,local,addresses
Transport -> List<String> getLocalAddresses()_;1543602642;Returns a list of all local adresses for this transport;List<String> getLocalAddresses()_;returns,a,list,of,all,local,adresses,for,this,transport;list,string,get,local,addresses
Transport -> List<String> getLocalAddresses()_;1544823664;Returns a list of all local adresses for this transport;List<String> getLocalAddresses()_;returns,a,list,of,all,local,adresses,for,this,transport;list,string,get,local,addresses
Transport -> ResponseHandlers -> public long add(ResponseContext<? extends TransportResponse> holder);1540583181;Adds a new response context and associates it with a new request ID._@return the new request ID_@see Connection#sendRequest(long, String, TransportRequest, TransportRequestOptions);public long add(ResponseContext<? extends TransportResponse> holder) {_            long requestId = newRequestId()__            ResponseContext existing = handlers.put(requestId, holder)__            assert existing == null : "request ID already in use: " + requestId__            return requestId__        };adds,a,new,response,context,and,associates,it,with,a,new,request,id,return,the,new,request,id,see,connection,send,request,long,string,transport,request,transport,request,options;public,long,add,response,context,extends,transport,response,holder,long,request,id,new,request,id,response,context,existing,handlers,put,request,id,holder,assert,existing,null,request,id,already,in,use,request,id,return,request,id
Transport -> ResponseHandlers -> public long add(ResponseContext<? extends TransportResponse> holder);1543506953;Adds a new response context and associates it with a new request ID._@return the new request ID_@see Connection#sendRequest(long, String, TransportRequest, TransportRequestOptions);public long add(ResponseContext<? extends TransportResponse> holder) {_            long requestId = newRequestId()__            ResponseContext existing = handlers.put(requestId, holder)__            assert existing == null : "request ID already in use: " + requestId__            return requestId__        };adds,a,new,response,context,and,associates,it,with,a,new,request,id,return,the,new,request,id,see,connection,send,request,long,string,transport,request,transport,request,options;public,long,add,response,context,extends,transport,response,holder,long,request,id,new,request,id,response,context,existing,handlers,put,request,id,holder,assert,existing,null,request,id,already,in,use,request,id,return,request,id
Transport -> ResponseHandlers -> public long add(ResponseContext<? extends TransportResponse> holder);1543602642;Adds a new response context and associates it with a new request ID._@return the new request ID_@see Connection#sendRequest(long, String, TransportRequest, TransportRequestOptions);public long add(ResponseContext<? extends TransportResponse> holder) {_            long requestId = newRequestId()__            ResponseContext existing = handlers.put(requestId, holder)__            assert existing == null : "request ID already in use: " + requestId__            return requestId__        };adds,a,new,response,context,and,associates,it,with,a,new,request,id,return,the,new,request,id,see,connection,send,request,long,string,transport,request,transport,request,options;public,long,add,response,context,extends,transport,response,holder,long,request,id,new,request,id,response,context,existing,handlers,put,request,id,holder,assert,existing,null,request,id,already,in,use,request,id,return,request,id
Transport -> ResponseHandlers -> public long add(ResponseContext<? extends TransportResponse> holder);1544823664;Adds a new response context and associates it with a new request ID._@return the new request ID_@see Connection#sendRequest(long, String, TransportRequest, TransportRequestOptions);public long add(ResponseContext<? extends TransportResponse> holder) {_            long requestId = newRequestId()__            ResponseContext existing = handlers.put(requestId, holder)__            assert existing == null : "request ID already in use: " + requestId__            return requestId__        };adds,a,new,response,context,and,associates,it,with,a,new,request,id,return,the,new,request,id,see,connection,send,request,long,string,transport,request,transport,request,options;public,long,add,response,context,extends,transport,response,holder,long,request,id,new,request,id,response,context,existing,handlers,put,request,id,holder,assert,existing,null,request,id,already,in,use,request,id,return,request,id
Transport -> RequestHandlerRegistry getRequestHandler(String action)_;1531179852;Returns the registered request handler registry for the given action or <code>null</code> if it's not registered_@param action the action to look up;RequestHandlerRegistry getRequestHandler(String action)_;returns,the,registered,request,handler,registry,for,the,given,action,or,code,null,code,if,it,s,not,registered,param,action,the,action,to,look,up;request,handler,registry,get,request,handler,string,action
Transport -> RequestHandlerRegistry getRequestHandler(String action)_;1534203100;Returns the registered request handler registry for the given action or <code>null</code> if it's not registered_@param action the action to look up;RequestHandlerRegistry getRequestHandler(String action)_;returns,the,registered,request,handler,registry,for,the,given,action,or,code,null,code,if,it,s,not,registered,param,action,the,action,to,look,up;request,handler,registry,get,request,handler,string,action
Transport -> RequestHandlerRegistry getRequestHandler(String action)_;1534755962;Returns the registered request handler registry for the given action or <code>null</code> if it's not registered_@param action the action to look up;RequestHandlerRegistry getRequestHandler(String action)_;returns,the,registered,request,handler,registry,for,the,given,action,or,code,null,code,if,it,s,not,registered,param,action,the,action,to,look,up;request,handler,registry,get,request,handler,string,action
Transport -> RequestHandlerRegistry getRequestHandler(String action)_;1539615817;Returns the registered request handler registry for the given action or <code>null</code> if it's not registered_@param action the action to look up;RequestHandlerRegistry getRequestHandler(String action)_;returns,the,registered,request,handler,registry,for,the,given,action,or,code,null,code,if,it,s,not,registered,param,action,the,action,to,look,up;request,handler,registry,get,request,handler,string,action
Transport -> ResponseHandlers -> public TransportResponseHandler<? extends TransportResponse> onResponseReceived(final long requestId,                                                                                         final TransportMessageListener listener);1540583181;called by the {@link Transport} implementation when a response or an exception has been received for a previously_sent request (before any processing or deserialization was done). Returns the appropriate response handler or null if not_found.;public TransportResponseHandler<? extends TransportResponse> onResponseReceived(final long requestId,_                                                                                        final TransportMessageListener listener) {_            ResponseContext<? extends TransportResponse> context = handlers.remove(requestId)__            listener.onResponseReceived(requestId, context)__            if (context == null) {_                return null__            } else {_                return context.handler()__            }_        };called,by,the,link,transport,implementation,when,a,response,or,an,exception,has,been,received,for,a,previously,sent,request,before,any,processing,or,deserialization,was,done,returns,the,appropriate,response,handler,or,null,if,not,found;public,transport,response,handler,extends,transport,response,on,response,received,final,long,request,id,final,transport,message,listener,listener,response,context,extends,transport,response,context,handlers,remove,request,id,listener,on,response,received,request,id,context,if,context,null,return,null,else,return,context,handler
Transport -> ResponseHandlers -> public TransportResponseHandler<? extends TransportResponse> onResponseReceived(final long requestId,                                                                                         final TransportMessageListener listener);1543506953;called by the {@link Transport} implementation when a response or an exception has been received for a previously_sent request (before any processing or deserialization was done). Returns the appropriate response handler or null if not_found.;public TransportResponseHandler<? extends TransportResponse> onResponseReceived(final long requestId,_                                                                                        final TransportMessageListener listener) {_            ResponseContext<? extends TransportResponse> context = handlers.remove(requestId)__            listener.onResponseReceived(requestId, context)__            if (context == null) {_                return null__            } else {_                return context.handler()__            }_        };called,by,the,link,transport,implementation,when,a,response,or,an,exception,has,been,received,for,a,previously,sent,request,before,any,processing,or,deserialization,was,done,returns,the,appropriate,response,handler,or,null,if,not,found;public,transport,response,handler,extends,transport,response,on,response,received,final,long,request,id,final,transport,message,listener,listener,response,context,extends,transport,response,context,handlers,remove,request,id,listener,on,response,received,request,id,context,if,context,null,return,null,else,return,context,handler
Transport -> ResponseHandlers -> public TransportResponseHandler<? extends TransportResponse> onResponseReceived(final long requestId,                                                                                         final TransportMessageListener listener);1543602642;called by the {@link Transport} implementation when a response or an exception has been received for a previously_sent request (before any processing or deserialization was done). Returns the appropriate response handler or null if not_found.;public TransportResponseHandler<? extends TransportResponse> onResponseReceived(final long requestId,_                                                                                        final TransportMessageListener listener) {_            ResponseContext<? extends TransportResponse> context = handlers.remove(requestId)__            listener.onResponseReceived(requestId, context)__            if (context == null) {_                return null__            } else {_                return context.handler()__            }_        };called,by,the,link,transport,implementation,when,a,response,or,an,exception,has,been,received,for,a,previously,sent,request,before,any,processing,or,deserialization,was,done,returns,the,appropriate,response,handler,or,null,if,not,found;public,transport,response,handler,extends,transport,response,on,response,received,final,long,request,id,final,transport,message,listener,listener,response,context,extends,transport,response,context,handlers,remove,request,id,listener,on,response,received,request,id,context,if,context,null,return,null,else,return,context,handler
Transport -> ResponseHandlers -> public TransportResponseHandler<? extends TransportResponse> onResponseReceived(final long requestId,                                                                                         final TransportMessageListener listener);1544823664;called by the {@link Transport} implementation when a response or an exception has been received for a previously_sent request (before any processing or deserialization was done). Returns the appropriate response handler or null if not_found.;public TransportResponseHandler<? extends TransportResponse> onResponseReceived(final long requestId,_                                                                                        final TransportMessageListener listener) {_            ResponseContext<? extends TransportResponse> context = handlers.remove(requestId)__            listener.onResponseReceived(requestId, context)__            if (context == null) {_                return null__            } else {_                return context.handler()__            }_        };called,by,the,link,transport,implementation,when,a,response,or,an,exception,has,been,received,for,a,previously,sent,request,before,any,processing,or,deserialization,was,done,returns,the,appropriate,response,handler,or,null,if,not,found;public,transport,response,handler,extends,transport,response,on,response,received,final,long,request,id,final,transport,message,listener,listener,response,context,extends,transport,response,context,handlers,remove,request,id,listener,on,response,received,request,id,context,if,context,null,return,null,else,return,context,handler
Transport -> Releasable openConnection(DiscoveryNode node, ConnectionProfile profile, ActionListener<Transport.Connection> listener)_;1543602642;Opens a new connection to the given node. When the connection is fully connected, the listener is_called. A {@link Releasable} is returned representing the pending connection. If the caller of this_method decides to move on before the listener is called with the completed connection, they should_release the pending connection to prevent hanging connections.;Releasable openConnection(DiscoveryNode node, ConnectionProfile profile, ActionListener<Transport.Connection> listener)_;opens,a,new,connection,to,the,given,node,when,the,connection,is,fully,connected,the,listener,is,called,a,link,releasable,is,returned,representing,the,pending,connection,if,the,caller,of,this,method,decides,to,move,on,before,the,listener,is,called,with,the,completed,connection,they,should,release,the,pending,connection,to,prevent,hanging,connections;releasable,open,connection,discovery,node,node,connection,profile,profile,action,listener,transport,connection,listener
Transport -> Releasable openConnection(DiscoveryNode node, ConnectionProfile profile, ActionListener<Transport.Connection> listener)_;1544823664;Opens a new connection to the given node. When the connection is fully connected, the listener is_called. A {@link Releasable} is returned representing the pending connection. If the caller of this_method decides to move on before the listener is called with the completed connection, they should_release the pending connection to prevent hanging connections.;Releasable openConnection(DiscoveryNode node, ConnectionProfile profile, ActionListener<Transport.Connection> listener)_;opens,a,new,connection,to,the,given,node,when,the,connection,is,fully,connected,the,listener,is,called,a,link,releasable,is,returned,representing,the,pending,connection,if,the,caller,of,this,method,decides,to,move,on,before,the,listener,is,called,with,the,completed,connection,they,should,release,the,pending,connection,to,prevent,hanging,connections;releasable,open,connection,discovery,node,node,connection,profile,profile,action,listener,transport,connection,listener
Transport -> Connection -> DiscoveryNode getNode()_;1524684173;The node this connection is associated with;DiscoveryNode getNode()_;the,node,this,connection,is,associated,with;discovery,node,get,node
Transport -> Connection -> DiscoveryNode getNode()_;1525334055;The node this connection is associated with;DiscoveryNode getNode()_;the,node,this,connection,is,associated,with;discovery,node,get,node
Transport -> Connection -> DiscoveryNode getNode()_;1531179852;The node this connection is associated with;DiscoveryNode getNode()_;the,node,this,connection,is,associated,with;discovery,node,get,node
Transport -> Connection -> DiscoveryNode getNode()_;1534203100;The node this connection is associated with;DiscoveryNode getNode()_;the,node,this,connection,is,associated,with;discovery,node,get,node
Transport -> Connection -> DiscoveryNode getNode()_;1534755962;The node this connection is associated with;DiscoveryNode getNode()_;the,node,this,connection,is,associated,with;discovery,node,get,node
Transport -> Connection -> DiscoveryNode getNode()_;1539615817;The node this connection is associated with;DiscoveryNode getNode()_;the,node,this,connection,is,associated,with;discovery,node,get,node
Transport -> Connection -> DiscoveryNode getNode()_;1540583181;The node this connection is associated with;DiscoveryNode getNode()_;the,node,this,connection,is,associated,with;discovery,node,get,node
Transport -> Connection -> DiscoveryNode getNode()_;1543506953;The node this connection is associated with;DiscoveryNode getNode()_;the,node,this,connection,is,associated,with;discovery,node,get,node
Transport -> Connection -> DiscoveryNode getNode()_;1543602642;The node this connection is associated with;DiscoveryNode getNode()_;the,node,this,connection,is,associated,with;discovery,node,get,node
Transport -> Connection -> DiscoveryNode getNode()_;1544823664;The node this connection is associated with;DiscoveryNode getNode()_;the,node,this,connection,is,associated,with;discovery,node,get,node
Transport -> Connection getConnection(DiscoveryNode node)_;1524684173;Returns a connection for the given node if the node is connected._Connections returned from this method must not be closed. The lifecycle of this connection is maintained by the Transport_implementation.__@throws NodeNotConnectedException if the node is not connected_@see #connectToNode(DiscoveryNode, ConnectionProfile, CheckedBiConsumer);Connection getConnection(DiscoveryNode node)_;returns,a,connection,for,the,given,node,if,the,node,is,connected,connections,returned,from,this,method,must,not,be,closed,the,lifecycle,of,this,connection,is,maintained,by,the,transport,implementation,throws,node,not,connected,exception,if,the,node,is,not,connected,see,connect,to,node,discovery,node,connection,profile,checked,bi,consumer;connection,get,connection,discovery,node,node
Transport -> Connection getConnection(DiscoveryNode node)_;1525334055;Returns a connection for the given node if the node is connected._Connections returned from this method must not be closed. The lifecycle of this connection is maintained by the Transport_implementation.__@throws NodeNotConnectedException if the node is not connected_@see #connectToNode(DiscoveryNode, ConnectionProfile, CheckedBiConsumer);Connection getConnection(DiscoveryNode node)_;returns,a,connection,for,the,given,node,if,the,node,is,connected,connections,returned,from,this,method,must,not,be,closed,the,lifecycle,of,this,connection,is,maintained,by,the,transport,implementation,throws,node,not,connected,exception,if,the,node,is,not,connected,see,connect,to,node,discovery,node,connection,profile,checked,bi,consumer;connection,get,connection,discovery,node,node
Transport -> Connection getConnection(DiscoveryNode node)_;1531179852;Returns a connection for the given node if the node is connected._Connections returned from this method must not be closed. The lifecycle of this connection is maintained by the Transport_implementation.__@throws NodeNotConnectedException if the node is not connected_@see #connectToNode(DiscoveryNode, ConnectionProfile, CheckedBiConsumer);Connection getConnection(DiscoveryNode node)_;returns,a,connection,for,the,given,node,if,the,node,is,connected,connections,returned,from,this,method,must,not,be,closed,the,lifecycle,of,this,connection,is,maintained,by,the,transport,implementation,throws,node,not,connected,exception,if,the,node,is,not,connected,see,connect,to,node,discovery,node,connection,profile,checked,bi,consumer;connection,get,connection,discovery,node,node
Transport -> void connectToNode(DiscoveryNode node, ConnectionProfile connectionProfile,                        CheckedBiConsumer<Connection, ConnectionProfile, IOException> connectionValidator) throws ConnectTransportException_;1524684173;Connects to a node with the given connection profile. If the node is already connected this method has no effect._Once a successful is established, it can be validated before being exposed.;void connectToNode(DiscoveryNode node, ConnectionProfile connectionProfile,_                       CheckedBiConsumer<Connection, ConnectionProfile, IOException> connectionValidator) throws ConnectTransportException_;connects,to,a,node,with,the,given,connection,profile,if,the,node,is,already,connected,this,method,has,no,effect,once,a,successful,is,established,it,can,be,validated,before,being,exposed;void,connect,to,node,discovery,node,node,connection,profile,connection,profile,checked,bi,consumer,connection,connection,profile,ioexception,connection,validator,throws,connect,transport,exception
Transport -> void connectToNode(DiscoveryNode node, ConnectionProfile connectionProfile,                        CheckedBiConsumer<Connection, ConnectionProfile, IOException> connectionValidator) throws ConnectTransportException_;1525334055;Connects to a node with the given connection profile. If the node is already connected this method has no effect._Once a successful is established, it can be validated before being exposed.;void connectToNode(DiscoveryNode node, ConnectionProfile connectionProfile,_                       CheckedBiConsumer<Connection, ConnectionProfile, IOException> connectionValidator) throws ConnectTransportException_;connects,to,a,node,with,the,given,connection,profile,if,the,node,is,already,connected,this,method,has,no,effect,once,a,successful,is,established,it,can,be,validated,before,being,exposed;void,connect,to,node,discovery,node,node,connection,profile,connection,profile,checked,bi,consumer,connection,connection,profile,ioexception,connection,validator,throws,connect,transport,exception
Transport -> void connectToNode(DiscoveryNode node, ConnectionProfile connectionProfile,                        CheckedBiConsumer<Connection, ConnectionProfile, IOException> connectionValidator) throws ConnectTransportException_;1531179852;Connects to a node with the given connection profile. If the node is already connected this method has no effect._Once a successful is established, it can be validated before being exposed.;void connectToNode(DiscoveryNode node, ConnectionProfile connectionProfile,_                       CheckedBiConsumer<Connection, ConnectionProfile, IOException> connectionValidator) throws ConnectTransportException_;connects,to,a,node,with,the,given,connection,profile,if,the,node,is,already,connected,this,method,has,no,effect,once,a,successful,is,established,it,can,be,validated,before,being,exposed;void,connect,to,node,discovery,node,node,connection,profile,connection,profile,checked,bi,consumer,connection,connection,profile,ioexception,connection,validator,throws,connect,transport,exception
Transport -> Connection openConnection(DiscoveryNode node, ConnectionProfile profile) throws IOException_;1524684173;Opens a new connection to the given node and returns it. In contrast to_{@link #connectToNode(DiscoveryNode, ConnectionProfile, CheckedBiConsumer)} the returned connection is not managed by_the transport implementation. This connection must be closed once it's not needed anymore._This connection type can be used to execute a handshake between two nodes before the node will be published via_{@link #connectToNode(DiscoveryNode, ConnectionProfile, CheckedBiConsumer)}.;Connection openConnection(DiscoveryNode node, ConnectionProfile profile) throws IOException_;opens,a,new,connection,to,the,given,node,and,returns,it,in,contrast,to,link,connect,to,node,discovery,node,connection,profile,checked,bi,consumer,the,returned,connection,is,not,managed,by,the,transport,implementation,this,connection,must,be,closed,once,it,s,not,needed,anymore,this,connection,type,can,be,used,to,execute,a,handshake,between,two,nodes,before,the,node,will,be,published,via,link,connect,to,node,discovery,node,connection,profile,checked,bi,consumer;connection,open,connection,discovery,node,node,connection,profile,profile,throws,ioexception
Transport -> Connection openConnection(DiscoveryNode node, ConnectionProfile profile) throws IOException_;1525334055;Opens a new connection to the given node and returns it. In contrast to_{@link #connectToNode(DiscoveryNode, ConnectionProfile, CheckedBiConsumer)} the returned connection is not managed by_the transport implementation. This connection must be closed once it's not needed anymore._This connection type can be used to execute a handshake between two nodes before the node will be published via_{@link #connectToNode(DiscoveryNode, ConnectionProfile, CheckedBiConsumer)}.;Connection openConnection(DiscoveryNode node, ConnectionProfile profile) throws IOException_;opens,a,new,connection,to,the,given,node,and,returns,it,in,contrast,to,link,connect,to,node,discovery,node,connection,profile,checked,bi,consumer,the,returned,connection,is,not,managed,by,the,transport,implementation,this,connection,must,be,closed,once,it,s,not,needed,anymore,this,connection,type,can,be,used,to,execute,a,handshake,between,two,nodes,before,the,node,will,be,published,via,link,connect,to,node,discovery,node,connection,profile,checked,bi,consumer;connection,open,connection,discovery,node,node,connection,profile,profile,throws,ioexception
Transport -> Connection openConnection(DiscoveryNode node, ConnectionProfile profile) throws IOException_;1531179852;Opens a new connection to the given node and returns it. In contrast to_{@link #connectToNode(DiscoveryNode, ConnectionProfile, CheckedBiConsumer)} the returned connection is not managed by_the transport implementation. This connection must be closed once it's not needed anymore._This connection type can be used to execute a handshake between two nodes before the node will be published via_{@link #connectToNode(DiscoveryNode, ConnectionProfile, CheckedBiConsumer)}.;Connection openConnection(DiscoveryNode node, ConnectionProfile profile) throws IOException_;opens,a,new,connection,to,the,given,node,and,returns,it,in,contrast,to,link,connect,to,node,discovery,node,connection,profile,checked,bi,consumer,the,returned,connection,is,not,managed,by,the,transport,implementation,this,connection,must,be,closed,once,it,s,not,needed,anymore,this,connection,type,can,be,used,to,execute,a,handshake,between,two,nodes,before,the,node,will,be,published,via,link,connect,to,node,discovery,node,connection,profile,checked,bi,consumer;connection,open,connection,discovery,node,node,connection,profile,profile,throws,ioexception
Transport -> ResponseHandlers -> public boolean contains(long requestId);1531179852;Returns <code>true</code> if the give request ID has a context associated with it.;public boolean contains(long requestId) {_            return handlers.containsKey(requestId)__        };returns,code,true,code,if,the,give,request,id,has,a,context,associated,with,it;public,boolean,contains,long,request,id,return,handlers,contains,key,request,id
Transport -> ResponseHandlers -> public boolean contains(long requestId);1534203100;Returns <code>true</code> if the give request ID has a context associated with it.;public boolean contains(long requestId) {_            return handlers.containsKey(requestId)__        };returns,code,true,code,if,the,give,request,id,has,a,context,associated,with,it;public,boolean,contains,long,request,id,return,handlers,contains,key,request,id
Transport -> ResponseHandlers -> public boolean contains(long requestId);1534755962;Returns <code>true</code> if the give request ID has a context associated with it.;public boolean contains(long requestId) {_            return handlers.containsKey(requestId)__        };returns,code,true,code,if,the,give,request,id,has,a,context,associated,with,it;public,boolean,contains,long,request,id,return,handlers,contains,key,request,id
Transport -> ResponseHandlers -> public boolean contains(long requestId);1539615817;Returns <code>true</code> if the give request ID has a context associated with it.;public boolean contains(long requestId) {_            return handlers.containsKey(requestId)__        };returns,code,true,code,if,the,give,request,id,has,a,context,associated,with,it;public,boolean,contains,long,request,id,return,handlers,contains,key,request,id
Transport -> ResponseHandlers -> public boolean contains(long requestId);1540583181;Returns <code>true</code> if the give request ID has a context associated with it.;public boolean contains(long requestId) {_            return handlers.containsKey(requestId)__        };returns,code,true,code,if,the,give,request,id,has,a,context,associated,with,it;public,boolean,contains,long,request,id,return,handlers,contains,key,request,id
Transport -> ResponseHandlers -> public boolean contains(long requestId);1543506953;Returns <code>true</code> if the give request ID has a context associated with it.;public boolean contains(long requestId) {_            return handlers.containsKey(requestId)__        };returns,code,true,code,if,the,give,request,id,has,a,context,associated,with,it;public,boolean,contains,long,request,id,return,handlers,contains,key,request,id
Transport -> ResponseHandlers -> public boolean contains(long requestId);1543602642;Returns <code>true</code> if the give request ID has a context associated with it.;public boolean contains(long requestId) {_            return handlers.containsKey(requestId)__        };returns,code,true,code,if,the,give,request,id,has,a,context,associated,with,it;public,boolean,contains,long,request,id,return,handlers,contains,key,request,id
Transport -> ResponseHandlers -> public boolean contains(long requestId);1544823664;Returns <code>true</code> if the give request ID has a context associated with it.;public boolean contains(long requestId) {_            return handlers.containsKey(requestId)__        };returns,code,true,code,if,the,give,request,id,has,a,context,associated,with,it;public,boolean,contains,long,request,id,return,handlers,contains,key,request,id
Transport -> Connection -> default Object getCacheKey();1524684173;Returns a key that this connection can be cached on. Delegating subclasses must delegate method call to_the original connection.;default Object getCacheKey() {_            return this__        };returns,a,key,that,this,connection,can,be,cached,on,delegating,subclasses,must,delegate,method,call,to,the,original,connection;default,object,get,cache,key,return,this
Transport -> Connection -> default Object getCacheKey();1525334055;Returns a key that this connection can be cached on. Delegating subclasses must delegate method call to_the original connection.;default Object getCacheKey() {_            return this__        };returns,a,key,that,this,connection,can,be,cached,on,delegating,subclasses,must,delegate,method,call,to,the,original,connection;default,object,get,cache,key,return,this
Transport -> Connection -> default Object getCacheKey();1531179852;Returns a key that this connection can be cached on. Delegating subclasses must delegate method call to_the original connection.;default Object getCacheKey() {_            return this__        };returns,a,key,that,this,connection,can,be,cached,on,delegating,subclasses,must,delegate,method,call,to,the,original,connection;default,object,get,cache,key,return,this
Transport -> Connection -> default Object getCacheKey();1534203100;Returns a key that this connection can be cached on. Delegating subclasses must delegate method call to_the original connection.;default Object getCacheKey() {_            return this__        };returns,a,key,that,this,connection,can,be,cached,on,delegating,subclasses,must,delegate,method,call,to,the,original,connection;default,object,get,cache,key,return,this
Transport -> Connection -> default Object getCacheKey();1534755962;Returns a key that this connection can be cached on. Delegating subclasses must delegate method call to_the original connection.;default Object getCacheKey() {_            return this__        };returns,a,key,that,this,connection,can,be,cached,on,delegating,subclasses,must,delegate,method,call,to,the,original,connection;default,object,get,cache,key,return,this
Transport -> Connection -> default Object getCacheKey();1539615817;Returns a key that this connection can be cached on. Delegating subclasses must delegate method call to_the original connection.;default Object getCacheKey() {_            return this__        };returns,a,key,that,this,connection,can,be,cached,on,delegating,subclasses,must,delegate,method,call,to,the,original,connection;default,object,get,cache,key,return,this
Transport -> Connection -> default Object getCacheKey();1540583181;Returns a key that this connection can be cached on. Delegating subclasses must delegate method call to_the original connection.;default Object getCacheKey() {_            return this__        };returns,a,key,that,this,connection,can,be,cached,on,delegating,subclasses,must,delegate,method,call,to,the,original,connection;default,object,get,cache,key,return,this
Transport -> Connection -> default Object getCacheKey();1543506953;Returns a key that this connection can be cached on. Delegating subclasses must delegate method call to_the original connection.;default Object getCacheKey() {_            return this__        };returns,a,key,that,this,connection,can,be,cached,on,delegating,subclasses,must,delegate,method,call,to,the,original,connection;default,object,get,cache,key,return,this
Transport -> Connection -> default Object getCacheKey();1543602642;Returns a key that this connection can be cached on. Delegating subclasses must delegate method call to_the original connection.;default Object getCacheKey() {_            return this__        };returns,a,key,that,this,connection,can,be,cached,on,delegating,subclasses,must,delegate,method,call,to,the,original,connection;default,object,get,cache,key,return,this
Transport -> Connection -> default Object getCacheKey();1544823664;Returns a key that this connection can be cached on. Delegating subclasses must delegate method call to_the original connection.;default Object getCacheKey() {_            return this__        };returns,a,key,that,this,connection,can,be,cached,on,delegating,subclasses,must,delegate,method,call,to,the,original,connection;default,object,get,cache,key,return,this
Transport -> ResponseHandlers -> public TransportResponseHandler onResponseReceived(final long requestId, TransportMessageListener listener);1534755962;called by the {@link Transport} implementation when a response or an exception has been received for a previously_sent request (before any processing or deserialization was done). Returns the appropriate response handler or null if not_found.;public TransportResponseHandler onResponseReceived(final long requestId, TransportMessageListener listener) {_            ResponseContext context = handlers.remove(requestId)__            listener.onResponseReceived(requestId, context)__            if (context == null) {_                return null__            } else {_                return context.handler()__            }_        };called,by,the,link,transport,implementation,when,a,response,or,an,exception,has,been,received,for,a,previously,sent,request,before,any,processing,or,deserialization,was,done,returns,the,appropriate,response,handler,or,null,if,not,found;public,transport,response,handler,on,response,received,final,long,request,id,transport,message,listener,listener,response,context,context,handlers,remove,request,id,listener,on,response,received,request,id,context,if,context,null,return,null,else,return,context,handler
Transport -> ResponseHandlers -> public TransportResponseHandler onResponseReceived(final long requestId, TransportMessageListener listener);1539615817;called by the {@link Transport} implementation when a response or an exception has been received for a previously_sent request (before any processing or deserialization was done). Returns the appropriate response handler or null if not_found.;public TransportResponseHandler onResponseReceived(final long requestId, TransportMessageListener listener) {_            ResponseContext context = handlers.remove(requestId)__            listener.onResponseReceived(requestId, context)__            if (context == null) {_                return null__            } else {_                return context.handler()__            }_        };called,by,the,link,transport,implementation,when,a,response,or,an,exception,has,been,received,for,a,previously,sent,request,before,any,processing,or,deserialization,was,done,returns,the,appropriate,response,handler,or,null,if,not,found;public,transport,response,handler,on,response,received,final,long,request,id,transport,message,listener,listener,response,context,context,handlers,remove,request,id,listener,on,response,received,request,id,context,if,context,null,return,null,else,return,context,handler
Transport -> Connection -> void addCloseListener(ActionListener<Void> listener)_;1534203100;The listener's {@link ActionListener#onResponse(Object)} method will be called when this_connection is closed. No implementations currently throw an exception during close, so_{@link ActionListener#onFailure(Exception)} will not be called.__@param listener to be called;void addCloseListener(ActionListener<Void> listener)_;the,listener,s,link,action,listener,on,response,object,method,will,be,called,when,this,connection,is,closed,no,implementations,currently,throw,an,exception,during,close,so,link,action,listener,on,failure,exception,will,not,be,called,param,listener,to,be,called;void,add,close,listener,action,listener,void,listener
Transport -> Connection -> void addCloseListener(ActionListener<Void> listener)_;1534755962;The listener's {@link ActionListener#onResponse(Object)} method will be called when this_connection is closed. No implementations currently throw an exception during close, so_{@link ActionListener#onFailure(Exception)} will not be called.__@param listener to be called;void addCloseListener(ActionListener<Void> listener)_;the,listener,s,link,action,listener,on,response,object,method,will,be,called,when,this,connection,is,closed,no,implementations,currently,throw,an,exception,during,close,so,link,action,listener,on,failure,exception,will,not,be,called,param,listener,to,be,called;void,add,close,listener,action,listener,void,listener
Transport -> Connection -> void addCloseListener(ActionListener<Void> listener)_;1539615817;The listener's {@link ActionListener#onResponse(Object)} method will be called when this_connection is closed. No implementations currently throw an exception during close, so_{@link ActionListener#onFailure(Exception)} will not be called.__@param listener to be called;void addCloseListener(ActionListener<Void> listener)_;the,listener,s,link,action,listener,on,response,object,method,will,be,called,when,this,connection,is,closed,no,implementations,currently,throw,an,exception,during,close,so,link,action,listener,on,failure,exception,will,not,be,called,param,listener,to,be,called;void,add,close,listener,action,listener,void,listener
Transport -> Connection -> void addCloseListener(ActionListener<Void> listener)_;1540583181;The listener's {@link ActionListener#onResponse(Object)} method will be called when this_connection is closed. No implementations currently throw an exception during close, so_{@link ActionListener#onFailure(Exception)} will not be called.__@param listener to be called;void addCloseListener(ActionListener<Void> listener)_;the,listener,s,link,action,listener,on,response,object,method,will,be,called,when,this,connection,is,closed,no,implementations,currently,throw,an,exception,during,close,so,link,action,listener,on,failure,exception,will,not,be,called,param,listener,to,be,called;void,add,close,listener,action,listener,void,listener
Transport -> Connection -> void addCloseListener(ActionListener<Void> listener)_;1543506953;The listener's {@link ActionListener#onResponse(Object)} method will be called when this_connection is closed. No implementations currently throw an exception during close, so_{@link ActionListener#onFailure(Exception)} will not be called.__@param listener to be called;void addCloseListener(ActionListener<Void> listener)_;the,listener,s,link,action,listener,on,response,object,method,will,be,called,when,this,connection,is,closed,no,implementations,currently,throw,an,exception,during,close,so,link,action,listener,on,failure,exception,will,not,be,called,param,listener,to,be,called;void,add,close,listener,action,listener,void,listener
Transport -> Connection -> void addCloseListener(ActionListener<Void> listener)_;1543602642;The listener's {@link ActionListener#onResponse(Object)} method will be called when this_connection is closed. No implementations currently throw an exception during close, so_{@link ActionListener#onFailure(Exception)} will not be called.__@param listener to be called;void addCloseListener(ActionListener<Void> listener)_;the,listener,s,link,action,listener,on,response,object,method,will,be,called,when,this,connection,is,closed,no,implementations,currently,throw,an,exception,during,close,so,link,action,listener,on,failure,exception,will,not,be,called,param,listener,to,be,called;void,add,close,listener,action,listener,void,listener
Transport -> Connection -> void addCloseListener(ActionListener<Void> listener)_;1544823664;The listener's {@link ActionListener#onResponse(Object)} method will be called when this_connection is closed. No implementations currently throw an exception during close, so_{@link ActionListener#onFailure(Exception)} will not be called.__@param listener to be called;void addCloseListener(ActionListener<Void> listener)_;the,listener,s,link,action,listener,on,response,object,method,will,be,called,when,this,connection,is,closed,no,implementations,currently,throw,an,exception,during,close,so,link,action,listener,on,failure,exception,will,not,be,called,param,listener,to,be,called;void,add,close,listener,action,listener,void,listener
Transport -> ResponseHandlers -> public long add(ResponseContext holder);1531179852;Adds a new response context and associates it with a new request ID._@return the new request ID_@see Connection#sendRequest(long, String, TransportRequest, TransportRequestOptions);public long add(ResponseContext holder) {_            long requestId = newRequestId()__            ResponseContext existing = handlers.put(requestId, holder)__            assert existing == null : "request ID already in use: " + requestId__            return requestId__        };adds,a,new,response,context,and,associates,it,with,a,new,request,id,return,the,new,request,id,see,connection,send,request,long,string,transport,request,transport,request,options;public,long,add,response,context,holder,long,request,id,new,request,id,response,context,existing,handlers,put,request,id,holder,assert,existing,null,request,id,already,in,use,request,id,return,request,id
Transport -> ResponseHandlers -> public long add(ResponseContext holder);1534203100;Adds a new response context and associates it with a new request ID._@return the new request ID_@see Connection#sendRequest(long, String, TransportRequest, TransportRequestOptions);public long add(ResponseContext holder) {_            long requestId = newRequestId()__            ResponseContext existing = handlers.put(requestId, holder)__            assert existing == null : "request ID already in use: " + requestId__            return requestId__        };adds,a,new,response,context,and,associates,it,with,a,new,request,id,return,the,new,request,id,see,connection,send,request,long,string,transport,request,transport,request,options;public,long,add,response,context,holder,long,request,id,new,request,id,response,context,existing,handlers,put,request,id,holder,assert,existing,null,request,id,already,in,use,request,id,return,request,id
Transport -> ResponseHandlers -> public long add(ResponseContext holder);1534755962;Adds a new response context and associates it with a new request ID._@return the new request ID_@see Connection#sendRequest(long, String, TransportRequest, TransportRequestOptions);public long add(ResponseContext holder) {_            long requestId = newRequestId()__            ResponseContext existing = handlers.put(requestId, holder)__            assert existing == null : "request ID already in use: " + requestId__            return requestId__        };adds,a,new,response,context,and,associates,it,with,a,new,request,id,return,the,new,request,id,see,connection,send,request,long,string,transport,request,transport,request,options;public,long,add,response,context,holder,long,request,id,new,request,id,response,context,existing,handlers,put,request,id,holder,assert,existing,null,request,id,already,in,use,request,id,return,request,id
Transport -> ResponseHandlers -> public long add(ResponseContext holder);1539615817;Adds a new response context and associates it with a new request ID._@return the new request ID_@see Connection#sendRequest(long, String, TransportRequest, TransportRequestOptions);public long add(ResponseContext holder) {_            long requestId = newRequestId()__            ResponseContext existing = handlers.put(requestId, holder)__            assert existing == null : "request ID already in use: " + requestId__            return requestId__        };adds,a,new,response,context,and,associates,it,with,a,new,request,id,return,the,new,request,id,see,connection,send,request,long,string,transport,request,transport,request,options;public,long,add,response,context,holder,long,request,id,new,request,id,response,context,existing,handlers,put,request,id,holder,assert,existing,null,request,id,already,in,use,request,id,return,request,id
Transport -> TransportAddress[] addressesFromString(String address, int perAddressLimit) throws UnknownHostException_;1524684173;Returns an address from its string representation.;TransportAddress[] addressesFromString(String address, int perAddressLimit) throws UnknownHostException_;returns,an,address,from,its,string,representation;transport,address,addresses,from,string,string,address,int,per,address,limit,throws,unknown,host,exception
Transport -> TransportAddress[] addressesFromString(String address, int perAddressLimit) throws UnknownHostException_;1525334055;Returns an address from its string representation.;TransportAddress[] addressesFromString(String address, int perAddressLimit) throws UnknownHostException_;returns,an,address,from,its,string,representation;transport,address,addresses,from,string,string,address,int,per,address,limit,throws,unknown,host,exception
Transport -> TransportAddress[] addressesFromString(String address, int perAddressLimit) throws UnknownHostException_;1531179852;Returns an address from its string representation.;TransportAddress[] addressesFromString(String address, int perAddressLimit) throws UnknownHostException_;returns,an,address,from,its,string,representation;transport,address,addresses,from,string,string,address,int,per,address,limit,throws,unknown,host,exception
Transport -> TransportAddress[] addressesFromString(String address, int perAddressLimit) throws UnknownHostException_;1534203100;Returns an address from its string representation.;TransportAddress[] addressesFromString(String address, int perAddressLimit) throws UnknownHostException_;returns,an,address,from,its,string,representation;transport,address,addresses,from,string,string,address,int,per,address,limit,throws,unknown,host,exception
Transport -> TransportAddress[] addressesFromString(String address, int perAddressLimit) throws UnknownHostException_;1534755962;Returns an address from its string representation.;TransportAddress[] addressesFromString(String address, int perAddressLimit) throws UnknownHostException_;returns,an,address,from,its,string,representation;transport,address,addresses,from,string,string,address,int,per,address,limit,throws,unknown,host,exception
Transport -> TransportAddress[] addressesFromString(String address, int perAddressLimit) throws UnknownHostException_;1539615817;Returns an address from its string representation.;TransportAddress[] addressesFromString(String address, int perAddressLimit) throws UnknownHostException_;returns,an,address,from,its,string,representation;transport,address,addresses,from,string,string,address,int,per,address,limit,throws,unknown,host,exception
Transport -> TransportAddress[] addressesFromString(String address, int perAddressLimit) throws UnknownHostException_;1540583181;Returns an address from its string representation.;TransportAddress[] addressesFromString(String address, int perAddressLimit) throws UnknownHostException_;returns,an,address,from,its,string,representation;transport,address,addresses,from,string,string,address,int,per,address,limit,throws,unknown,host,exception
Transport -> TransportAddress[] addressesFromString(String address, int perAddressLimit) throws UnknownHostException_;1543506953;Returns an address from its string representation.;TransportAddress[] addressesFromString(String address, int perAddressLimit) throws UnknownHostException_;returns,an,address,from,its,string,representation;transport,address,addresses,from,string,string,address,int,per,address,limit,throws,unknown,host,exception
Transport -> TransportAddress[] addressesFromString(String address, int perAddressLimit) throws UnknownHostException_;1543602642;Returns an address from its string representation.;TransportAddress[] addressesFromString(String address, int perAddressLimit) throws UnknownHostException_;returns,an,address,from,its,string,representation;transport,address,addresses,from,string,string,address,int,per,address,limit,throws,unknown,host,exception
Transport -> TransportAddress[] addressesFromString(String address, int perAddressLimit) throws UnknownHostException_;1544823664;Returns an address from its string representation.;TransportAddress[] addressesFromString(String address, int perAddressLimit) throws UnknownHostException_;returns,an,address,from,its,string,representation;transport,address,addresses,from,string,string,address,int,per,address,limit,throws,unknown,host,exception
Transport -> void addConnectionListener(TransportConnectionListener listener)_;1531179852;Adds a new event listener_@param listener the listener to add;void addConnectionListener(TransportConnectionListener listener)_;adds,a,new,event,listener,param,listener,the,listener,to,add;void,add,connection,listener,transport,connection,listener,listener
Transport -> void addConnectionListener(TransportConnectionListener listener)_;1534203100;Adds a new event listener_@param listener the listener to add;void addConnectionListener(TransportConnectionListener listener)_;adds,a,new,event,listener,param,listener,the,listener,to,add;void,add,connection,listener,transport,connection,listener,listener
Transport -> Connection -> void sendRequest(long requestId, String action, TransportRequest request, TransportRequestOptions options) throws             IOException, TransportException_;1524684173;Sends the request to the node this connection is associated with_@throws NodeNotConnectedException if the given node is not connected;void sendRequest(long requestId, String action, TransportRequest request, TransportRequestOptions options) throws_            IOException, TransportException_;sends,the,request,to,the,node,this,connection,is,associated,with,throws,node,not,connected,exception,if,the,given,node,is,not,connected;void,send,request,long,request,id,string,action,transport,request,request,transport,request,options,options,throws,ioexception,transport,exception
Transport -> Connection -> void sendRequest(long requestId, String action, TransportRequest request, TransportRequestOptions options) throws             IOException, TransportException_;1525334055;Sends the request to the node this connection is associated with_@throws NodeNotConnectedException if the given node is not connected;void sendRequest(long requestId, String action, TransportRequest request, TransportRequestOptions options) throws_            IOException, TransportException_;sends,the,request,to,the,node,this,connection,is,associated,with,throws,node,not,connected,exception,if,the,given,node,is,not,connected;void,send,request,long,request,id,string,action,transport,request,request,transport,request,options,options,throws,ioexception,transport,exception
Transport -> Connection -> void sendRequest(long requestId, String action, TransportRequest request, TransportRequestOptions options) throws             IOException, TransportException_;1531179852;Sends the request to the node this connection is associated with_@param requestId see {@link ResponseHandlers#add(ResponseContext)} for details_@param action the action to execute_@param request the request to send_@param options request options to apply_@throws NodeNotConnectedException if the given node is not connected;void sendRequest(long requestId, String action, TransportRequest request, TransportRequestOptions options) throws_            IOException, TransportException_;sends,the,request,to,the,node,this,connection,is,associated,with,param,request,id,see,link,response,handlers,add,response,context,for,details,param,action,the,action,to,execute,param,request,the,request,to,send,param,options,request,options,to,apply,throws,node,not,connected,exception,if,the,given,node,is,not,connected;void,send,request,long,request,id,string,action,transport,request,request,transport,request,options,options,throws,ioexception,transport,exception
Transport -> Connection -> void sendRequest(long requestId, String action, TransportRequest request, TransportRequestOptions options) throws             IOException, TransportException_;1534203100;Sends the request to the node this connection is associated with_@param requestId see {@link ResponseHandlers#add(ResponseContext)} for details_@param action the action to execute_@param request the request to send_@param options request options to apply_@throws NodeNotConnectedException if the given node is not connected;void sendRequest(long requestId, String action, TransportRequest request, TransportRequestOptions options) throws_            IOException, TransportException_;sends,the,request,to,the,node,this,connection,is,associated,with,param,request,id,see,link,response,handlers,add,response,context,for,details,param,action,the,action,to,execute,param,request,the,request,to,send,param,options,request,options,to,apply,throws,node,not,connected,exception,if,the,given,node,is,not,connected;void,send,request,long,request,id,string,action,transport,request,request,transport,request,options,options,throws,ioexception,transport,exception
Transport -> Connection -> void sendRequest(long requestId, String action, TransportRequest request, TransportRequestOptions options) throws             IOException, TransportException_;1534755962;Sends the request to the node this connection is associated with_@param requestId see {@link ResponseHandlers#add(ResponseContext)} for details_@param action the action to execute_@param request the request to send_@param options request options to apply_@throws NodeNotConnectedException if the given node is not connected;void sendRequest(long requestId, String action, TransportRequest request, TransportRequestOptions options) throws_            IOException, TransportException_;sends,the,request,to,the,node,this,connection,is,associated,with,param,request,id,see,link,response,handlers,add,response,context,for,details,param,action,the,action,to,execute,param,request,the,request,to,send,param,options,request,options,to,apply,throws,node,not,connected,exception,if,the,given,node,is,not,connected;void,send,request,long,request,id,string,action,transport,request,request,transport,request,options,options,throws,ioexception,transport,exception
Transport -> Connection -> void sendRequest(long requestId, String action, TransportRequest request, TransportRequestOptions options) throws             IOException, TransportException_;1539615817;Sends the request to the node this connection is associated with_@param requestId see {@link ResponseHandlers#add(ResponseContext)} for details_@param action the action to execute_@param request the request to send_@param options request options to apply_@throws NodeNotConnectedException if the given node is not connected;void sendRequest(long requestId, String action, TransportRequest request, TransportRequestOptions options) throws_            IOException, TransportException_;sends,the,request,to,the,node,this,connection,is,associated,with,param,request,id,see,link,response,handlers,add,response,context,for,details,param,action,the,action,to,execute,param,request,the,request,to,send,param,options,request,options,to,apply,throws,node,not,connected,exception,if,the,given,node,is,not,connected;void,send,request,long,request,id,string,action,transport,request,request,transport,request,options,options,throws,ioexception,transport,exception
Transport -> Connection -> void sendRequest(long requestId, String action, TransportRequest request, TransportRequestOptions options) throws             IOException, TransportException_;1540583181;Sends the request to the node this connection is associated with_@param requestId see {@link ResponseHandlers#add(ResponseContext)} for details_@param action the action to execute_@param request the request to send_@param options request options to apply_@throws NodeNotConnectedException if the given node is not connected;void sendRequest(long requestId, String action, TransportRequest request, TransportRequestOptions options) throws_            IOException, TransportException_;sends,the,request,to,the,node,this,connection,is,associated,with,param,request,id,see,link,response,handlers,add,response,context,for,details,param,action,the,action,to,execute,param,request,the,request,to,send,param,options,request,options,to,apply,throws,node,not,connected,exception,if,the,given,node,is,not,connected;void,send,request,long,request,id,string,action,transport,request,request,transport,request,options,options,throws,ioexception,transport,exception
Transport -> Connection -> void sendRequest(long requestId, String action, TransportRequest request, TransportRequestOptions options) throws             IOException, TransportException_;1543506953;Sends the request to the node this connection is associated with_@param requestId see {@link ResponseHandlers#add(ResponseContext)} for details_@param action the action to execute_@param request the request to send_@param options request options to apply_@throws NodeNotConnectedException if the given node is not connected;void sendRequest(long requestId, String action, TransportRequest request, TransportRequestOptions options) throws_            IOException, TransportException_;sends,the,request,to,the,node,this,connection,is,associated,with,param,request,id,see,link,response,handlers,add,response,context,for,details,param,action,the,action,to,execute,param,request,the,request,to,send,param,options,request,options,to,apply,throws,node,not,connected,exception,if,the,given,node,is,not,connected;void,send,request,long,request,id,string,action,transport,request,request,transport,request,options,options,throws,ioexception,transport,exception
Transport -> Connection -> void sendRequest(long requestId, String action, TransportRequest request, TransportRequestOptions options) throws             IOException, TransportException_;1543602642;Sends the request to the node this connection is associated with_@param requestId see {@link ResponseHandlers#add(ResponseContext)} for details_@param action the action to execute_@param request the request to send_@param options request options to apply_@throws NodeNotConnectedException if the given node is not connected;void sendRequest(long requestId, String action, TransportRequest request, TransportRequestOptions options) throws_            IOException, TransportException_;sends,the,request,to,the,node,this,connection,is,associated,with,param,request,id,see,link,response,handlers,add,response,context,for,details,param,action,the,action,to,execute,param,request,the,request,to,send,param,options,request,options,to,apply,throws,node,not,connected,exception,if,the,given,node,is,not,connected;void,send,request,long,request,id,string,action,transport,request,request,transport,request,options,options,throws,ioexception,transport,exception
Transport -> Connection -> void sendRequest(long requestId, String action, TransportRequest request, TransportRequestOptions options) throws             IOException, TransportException_;1544823664;Sends the request to the node this connection is associated with_@param requestId see {@link ResponseHandlers#add(ResponseContext)} for details_@param action the action to execute_@param request the request to send_@param options request options to apply_@throws NodeNotConnectedException if the given node is not connected;void sendRequest(long requestId, String action, TransportRequest request, TransportRequestOptions options) throws_            IOException, TransportException_;sends,the,request,to,the,node,this,connection,is,associated,with,param,request,id,see,link,response,handlers,add,response,context,for,details,param,action,the,action,to,execute,param,request,the,request,to,send,param,options,request,options,to,apply,throws,node,not,connected,exception,if,the,given,node,is,not,connected;void,send,request,long,request,id,string,action,transport,request,request,transport,request,options,options,throws,ioexception,transport,exception
Transport -> long newRequestId()_;1524684173;Returns a new request ID to use when sending a message via {@link Connection#sendRequest(long, String,_TransportRequest, TransportRequestOptions)};long newRequestId()_;returns,a,new,request,id,to,use,when,sending,a,message,via,link,connection,send,request,long,string,transport,request,transport,request,options;long,new,request,id
Transport -> long newRequestId()_;1525334055;Returns a new request ID to use when sending a message via {@link Connection#sendRequest(long, String,_TransportRequest, TransportRequestOptions)};long newRequestId()_;returns,a,new,request,id,to,use,when,sending,a,message,via,link,connection,send,request,long,string,transport,request,transport,request,options;long,new,request,id
Transport -> ResponseHandlers -> public TransportResponseHandler onResponseReceived(final long requestId, TransportConnectionListener listener);1531179852;called by the {@link Transport} implementation when a response or an exception has been received for a previously_sent request (before any processing or deserialization was done). Returns the appropriate response handler or null if not_found.;public TransportResponseHandler onResponseReceived(final long requestId, TransportConnectionListener listener) {_            ResponseContext context = handlers.remove(requestId)__            listener.onResponseReceived(requestId, context)__            if (context == null) {_                return null__            } else {_                return context.handler()__            }_        };called,by,the,link,transport,implementation,when,a,response,or,an,exception,has,been,received,for,a,previously,sent,request,before,any,processing,or,deserialization,was,done,returns,the,appropriate,response,handler,or,null,if,not,found;public,transport,response,handler,on,response,received,final,long,request,id,transport,connection,listener,listener,response,context,context,handlers,remove,request,id,listener,on,response,received,request,id,context,if,context,null,return,null,else,return,context,handler
Transport -> ResponseHandlers -> public TransportResponseHandler onResponseReceived(final long requestId, TransportConnectionListener listener);1534203100;called by the {@link Transport} implementation when a response or an exception has been received for a previously_sent request (before any processing or deserialization was done). Returns the appropriate response handler or null if not_found.;public TransportResponseHandler onResponseReceived(final long requestId, TransportConnectionListener listener) {_            ResponseContext context = handlers.remove(requestId)__            listener.onResponseReceived(requestId, context)__            if (context == null) {_                return null__            } else {_                return context.handler()__            }_        };called,by,the,link,transport,implementation,when,a,response,or,an,exception,has,been,received,for,a,previously,sent,request,before,any,processing,or,deserialization,was,done,returns,the,appropriate,response,handler,or,null,if,not,found;public,transport,response,handler,on,response,received,final,long,request,id,transport,connection,listener,listener,response,context,context,handlers,remove,request,id,listener,on,response,received,request,id,context,if,context,null,return,null,else,return,context,handler
Transport -> ResponseHandlers -> public List<ResponseContext<? extends TransportResponse>> prune(Predicate<ResponseContext> predicate);1540583181;Removes and returns all {@link ResponseContext} instances that match the predicate;public List<ResponseContext<? extends TransportResponse>> prune(Predicate<ResponseContext> predicate) {_            final List<ResponseContext<? extends TransportResponse>> holders = new ArrayList<>()__            for (Map.Entry<Long, ResponseContext<? extends TransportResponse>> entry : handlers.entrySet()) {_                ResponseContext<? extends TransportResponse> holder = entry.getValue()__                if (predicate.test(holder)) {_                    ResponseContext remove = handlers.remove(entry.getKey())__                    if (remove != null) {_                        holders.add(holder)__                    }_                }_            }_            return holders__        };removes,and,returns,all,link,response,context,instances,that,match,the,predicate;public,list,response,context,extends,transport,response,prune,predicate,response,context,predicate,final,list,response,context,extends,transport,response,holders,new,array,list,for,map,entry,long,response,context,extends,transport,response,entry,handlers,entry,set,response,context,extends,transport,response,holder,entry,get,value,if,predicate,test,holder,response,context,remove,handlers,remove,entry,get,key,if,remove,null,holders,add,holder,return,holders
Transport -> ResponseHandlers -> public List<ResponseContext<? extends TransportResponse>> prune(Predicate<ResponseContext> predicate);1543506953;Removes and returns all {@link ResponseContext} instances that match the predicate;public List<ResponseContext<? extends TransportResponse>> prune(Predicate<ResponseContext> predicate) {_            final List<ResponseContext<? extends TransportResponse>> holders = new ArrayList<>()__            for (Map.Entry<Long, ResponseContext<? extends TransportResponse>> entry : handlers.entrySet()) {_                ResponseContext<? extends TransportResponse> holder = entry.getValue()__                if (predicate.test(holder)) {_                    ResponseContext remove = handlers.remove(entry.getKey())__                    if (remove != null) {_                        holders.add(holder)__                    }_                }_            }_            return holders__        };removes,and,returns,all,link,response,context,instances,that,match,the,predicate;public,list,response,context,extends,transport,response,prune,predicate,response,context,predicate,final,list,response,context,extends,transport,response,holders,new,array,list,for,map,entry,long,response,context,extends,transport,response,entry,handlers,entry,set,response,context,extends,transport,response,holder,entry,get,value,if,predicate,test,holder,response,context,remove,handlers,remove,entry,get,key,if,remove,null,holders,add,holder,return,holders
Transport -> ResponseHandlers -> public List<ResponseContext<? extends TransportResponse>> prune(Predicate<ResponseContext> predicate);1543602642;Removes and returns all {@link ResponseContext} instances that match the predicate;public List<ResponseContext<? extends TransportResponse>> prune(Predicate<ResponseContext> predicate) {_            final List<ResponseContext<? extends TransportResponse>> holders = new ArrayList<>()__            for (Map.Entry<Long, ResponseContext<? extends TransportResponse>> entry : handlers.entrySet()) {_                ResponseContext<? extends TransportResponse> holder = entry.getValue()__                if (predicate.test(holder)) {_                    ResponseContext remove = handlers.remove(entry.getKey())__                    if (remove != null) {_                        holders.add(holder)__                    }_                }_            }_            return holders__        };removes,and,returns,all,link,response,context,instances,that,match,the,predicate;public,list,response,context,extends,transport,response,prune,predicate,response,context,predicate,final,list,response,context,extends,transport,response,holders,new,array,list,for,map,entry,long,response,context,extends,transport,response,entry,handlers,entry,set,response,context,extends,transport,response,holder,entry,get,value,if,predicate,test,holder,response,context,remove,handlers,remove,entry,get,key,if,remove,null,holders,add,holder,return,holders
Transport -> ResponseHandlers -> public List<ResponseContext<? extends TransportResponse>> prune(Predicate<ResponseContext> predicate);1544823664;Removes and returns all {@link ResponseContext} instances that match the predicate;public List<ResponseContext<? extends TransportResponse>> prune(Predicate<ResponseContext> predicate) {_            final List<ResponseContext<? extends TransportResponse>> holders = new ArrayList<>()__            for (Map.Entry<Long, ResponseContext<? extends TransportResponse>> entry : handlers.entrySet()) {_                ResponseContext<? extends TransportResponse> holder = entry.getValue()__                if (predicate.test(holder)) {_                    ResponseContext remove = handlers.remove(entry.getKey())__                    if (remove != null) {_                        holders.add(holder)__                    }_                }_            }_            return holders__        };removes,and,returns,all,link,response,context,instances,that,match,the,predicate;public,list,response,context,extends,transport,response,prune,predicate,response,context,predicate,final,list,response,context,extends,transport,response,holders,new,array,list,for,map,entry,long,response,context,extends,transport,response,entry,handlers,entry,set,response,context,extends,transport,response,holder,entry,get,value,if,predicate,test,holder,response,context,remove,handlers,remove,entry,get,key,if,remove,null,holders,add,holder,return,holders
Transport -> void disconnectFromNode(DiscoveryNode node)_;1524684173;Disconnected from the given node, if not connected, will do nothing.;void disconnectFromNode(DiscoveryNode node)_;disconnected,from,the,given,node,if,not,connected,will,do,nothing;void,disconnect,from,node,discovery,node,node
Transport -> void disconnectFromNode(DiscoveryNode node)_;1525334055;Disconnected from the given node, if not connected, will do nothing.;void disconnectFromNode(DiscoveryNode node)_;disconnected,from,the,given,node,if,not,connected,will,do,nothing;void,disconnect,from,node,discovery,node,node
Transport -> void disconnectFromNode(DiscoveryNode node)_;1531179852;Disconnected from the given node, if not connected, will do nothing.;void disconnectFromNode(DiscoveryNode node)_;disconnected,from,the,given,node,if,not,connected,will,do,nothing;void,disconnect,from,node,discovery,node,node
