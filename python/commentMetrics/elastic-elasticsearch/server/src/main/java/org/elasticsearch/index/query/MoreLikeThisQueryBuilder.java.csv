# id;timestamp;commentText;codeText;commentWords;codeWords
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder failOnUnsupportedField(boolean fail);1524684173;Whether to fail or return no result when this query is run against a field which is not supported such as binary/numeric fields.;public MoreLikeThisQueryBuilder failOnUnsupportedField(boolean fail) {_        this.failOnUnsupportedField = fail__        return this__    };whether,to,fail,or,return,no,result,when,this,query,is,run,against,a,field,which,is,not,supported,such,as,binary,numeric,fields;public,more,like,this,query,builder,fail,on,unsupported,field,boolean,fail,this,fail,on,unsupported,field,fail,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder failOnUnsupportedField(boolean fail);1525334055;Whether to fail or return no result when this query is run against a field which is not supported such as binary/numeric fields.;public MoreLikeThisQueryBuilder failOnUnsupportedField(boolean fail) {_        this.failOnUnsupportedField = fail__        return this__    };whether,to,fail,or,return,no,result,when,this,query,is,run,against,a,field,which,is,not,supported,such,as,binary,numeric,fields;public,more,like,this,query,builder,fail,on,unsupported,field,boolean,fail,this,fail,on,unsupported,field,fail,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder failOnUnsupportedField(boolean fail);1535139672;Whether to fail or return no result when this query is run against a field which is not supported such as binary/numeric fields.;public MoreLikeThisQueryBuilder failOnUnsupportedField(boolean fail) {_        this.failOnUnsupportedField = fail__        return this__    };whether,to,fail,or,return,no,result,when,this,query,is,run,against,a,field,which,is,not,supported,such,as,binary,numeric,fields;public,more,like,this,query,builder,fail,on,unsupported,field,boolean,fail,this,fail,on,unsupported,field,fail,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder failOnUnsupportedField(boolean fail);1543237077;Whether to fail or return no result when this query is run against a field which is not supported such as binary/numeric fields.;public MoreLikeThisQueryBuilder failOnUnsupportedField(boolean fail) {_        this.failOnUnsupportedField = fail__        return this__    };whether,to,fail,or,return,no,result,when,this,query,is,run,against,a,field,which,is,not,supported,such,as,binary,numeric,fields;public,more,like,this,query,builder,fail,on,unsupported,field,boolean,fail,this,fail,on,unsupported,field,fail,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder failOnUnsupportedField(boolean fail);1544177681;Whether to fail or return no result when this query is run against a field which is not supported such as binary/numeric fields.;public MoreLikeThisQueryBuilder failOnUnsupportedField(boolean fail) {_        this.failOnUnsupportedField = fail__        return this__    };whether,to,fail,or,return,no,result,when,this,query,is,run,against,a,field,which,is,not,supported,such,as,binary,numeric,fields;public,more,like,this,query,builder,fail,on,unsupported,field,boolean,fail,this,fail,on,unsupported,field,fail,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder failOnUnsupportedField(boolean fail);1547002001;Whether to fail or return no result when this query is run against a field which is not supported such as binary/numeric fields.;public MoreLikeThisQueryBuilder failOnUnsupportedField(boolean fail) {_        this.failOnUnsupportedField = fail__        return this__    };whether,to,fail,or,return,no,result,when,this,query,is,run,against,a,field,which,is,not,supported,such,as,binary,numeric,fields;public,more,like,this,query,builder,fail,on,unsupported,field,boolean,fail,this,fail,on,unsupported,field,fail,return,this
MoreLikeThisQueryBuilder -> Item -> Item(StreamInput in) throws IOException;1524684173;Read from a stream.;Item(StreamInput in) throws IOException {_            index = in.readOptionalString()__            type = in.readOptionalString()__            if (in.readBoolean()) {_                doc = (BytesReference) in.readGenericValue()__                if (in.getVersion().onOrAfter(Version.V_5_3_0)) {_                    xContentType = in.readEnum(XContentType.class)__                } else {_                    xContentType = XContentHelper.xContentType(doc)__                }_            } else {_                id = in.readString()__            }_            fields = in.readOptionalStringArray()__            perFieldAnalyzer = (Map<String, String>) in.readGenericValue()__            routing = in.readOptionalString()__            version = in.readLong()__            versionType = VersionType.readFromStream(in)__        };read,from,a,stream;item,stream,input,in,throws,ioexception,index,in,read,optional,string,type,in,read,optional,string,if,in,read,boolean,doc,bytes,reference,in,read,generic,value,if,in,get,version,on,or,after,version,x,content,type,in,read,enum,xcontent,type,class,else,x,content,type,xcontent,helper,x,content,type,doc,else,id,in,read,string,fields,in,read,optional,string,array,per,field,analyzer,map,string,string,in,read,generic,value,routing,in,read,optional,string,version,in,read,long,version,type,version,type,read,from,stream,in
MoreLikeThisQueryBuilder -> Item -> Item(StreamInput in) throws IOException;1525334055;Read from a stream.;Item(StreamInput in) throws IOException {_            index = in.readOptionalString()__            type = in.readOptionalString()__            if (in.readBoolean()) {_                doc = (BytesReference) in.readGenericValue()__                if (in.getVersion().onOrAfter(Version.V_5_3_0)) {_                    xContentType = in.readEnum(XContentType.class)__                } else {_                    xContentType = XContentHelper.xContentType(doc)__                }_            } else {_                id = in.readString()__            }_            fields = in.readOptionalStringArray()__            perFieldAnalyzer = (Map<String, String>) in.readGenericValue()__            routing = in.readOptionalString()__            version = in.readLong()__            versionType = VersionType.readFromStream(in)__        };read,from,a,stream;item,stream,input,in,throws,ioexception,index,in,read,optional,string,type,in,read,optional,string,if,in,read,boolean,doc,bytes,reference,in,read,generic,value,if,in,get,version,on,or,after,version,x,content,type,in,read,enum,xcontent,type,class,else,x,content,type,xcontent,helper,x,content,type,doc,else,id,in,read,string,fields,in,read,optional,string,array,per,field,analyzer,map,string,string,in,read,generic,value,routing,in,read,optional,string,version,in,read,long,version,type,version,type,read,from,stream,in
MoreLikeThisQueryBuilder -> Item -> Item(StreamInput in) throws IOException;1535139672;Read from a stream.;Item(StreamInput in) throws IOException {_            index = in.readOptionalString()__            type = in.readOptionalString()__            if (in.readBoolean()) {_                doc = (BytesReference) in.readGenericValue()__                xContentType = in.readEnum(XContentType.class)__            } else {_                id = in.readString()__            }_            fields = in.readOptionalStringArray()__            perFieldAnalyzer = (Map<String, String>) in.readGenericValue()__            routing = in.readOptionalString()__            version = in.readLong()__            versionType = VersionType.readFromStream(in)__        };read,from,a,stream;item,stream,input,in,throws,ioexception,index,in,read,optional,string,type,in,read,optional,string,if,in,read,boolean,doc,bytes,reference,in,read,generic,value,x,content,type,in,read,enum,xcontent,type,class,else,id,in,read,string,fields,in,read,optional,string,array,per,field,analyzer,map,string,string,in,read,generic,value,routing,in,read,optional,string,version,in,read,long,version,type,version,type,read,from,stream,in
MoreLikeThisQueryBuilder -> Item -> Item(StreamInput in) throws IOException;1543237077;Read from a stream.;Item(StreamInput in) throws IOException {_            index = in.readOptionalString()__            type = in.readOptionalString()__            if (in.readBoolean()) {_                doc = (BytesReference) in.readGenericValue()__                xContentType = in.readEnum(XContentType.class)__            } else {_                id = in.readString()__            }_            fields = in.readOptionalStringArray()__            perFieldAnalyzer = (Map<String, String>) in.readGenericValue()__            routing = in.readOptionalString()__            version = in.readLong()__            versionType = VersionType.readFromStream(in)__        };read,from,a,stream;item,stream,input,in,throws,ioexception,index,in,read,optional,string,type,in,read,optional,string,if,in,read,boolean,doc,bytes,reference,in,read,generic,value,x,content,type,in,read,enum,xcontent,type,class,else,id,in,read,string,fields,in,read,optional,string,array,per,field,analyzer,map,string,string,in,read,generic,value,routing,in,read,optional,string,version,in,read,long,version,type,version,type,read,from,stream,in
MoreLikeThisQueryBuilder -> Item -> Item(StreamInput in) throws IOException;1544177681;Read from a stream.;Item(StreamInput in) throws IOException {_            index = in.readOptionalString()__            type = in.readOptionalString()__            if (in.readBoolean()) {_                doc = (BytesReference) in.readGenericValue()__                xContentType = in.readEnum(XContentType.class)__            } else {_                id = in.readString()__            }_            fields = in.readOptionalStringArray()__            perFieldAnalyzer = (Map<String, String>) in.readGenericValue()__            routing = in.readOptionalString()__            version = in.readLong()__            versionType = VersionType.readFromStream(in)__        };read,from,a,stream;item,stream,input,in,throws,ioexception,index,in,read,optional,string,type,in,read,optional,string,if,in,read,boolean,doc,bytes,reference,in,read,generic,value,x,content,type,in,read,enum,xcontent,type,class,else,id,in,read,string,fields,in,read,optional,string,array,per,field,analyzer,map,string,string,in,read,generic,value,routing,in,read,optional,string,version,in,read,long,version,type,version,type,read,from,stream,in
MoreLikeThisQueryBuilder -> Item -> Item(StreamInput in) throws IOException;1547002001;Read from a stream.;Item(StreamInput in) throws IOException {_            index = in.readOptionalString()__            type = in.readOptionalString()__            if (in.readBoolean()) {_                doc = (BytesReference) in.readGenericValue()__                xContentType = in.readEnum(XContentType.class)__            } else {_                id = in.readString()__            }_            fields = in.readOptionalStringArray()__            perFieldAnalyzer = (Map<String, String>) in.readGenericValue()__            routing = in.readOptionalString()__            version = in.readLong()__            versionType = VersionType.readFromStream(in)__        };read,from,a,stream;item,stream,input,in,throws,ioexception,index,in,read,optional,string,type,in,read,optional,string,if,in,read,boolean,doc,bytes,reference,in,read,generic,value,x,content,type,in,read,enum,xcontent,type,class,else,id,in,read,string,fields,in,read,optional,string,array,per,field,analyzer,map,string,string,in,read,generic,value,routing,in,read,optional,string,version,in,read,long,version,type,version,type,read,from,stream,in
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder minTermFreq(int minTermFreq);1524684173;The frequency below which terms will be ignored in the source doc. The default_frequency is <tt>2</tt>.;public MoreLikeThisQueryBuilder minTermFreq(int minTermFreq) {_        this.minTermFreq = minTermFreq__        return this__    };the,frequency,below,which,terms,will,be,ignored,in,the,source,doc,the,default,frequency,is,tt,2,tt;public,more,like,this,query,builder,min,term,freq,int,min,term,freq,this,min,term,freq,min,term,freq,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder minTermFreq(int minTermFreq);1525334055;The frequency below which terms will be ignored in the source doc. The default_frequency is {@code 2}.;public MoreLikeThisQueryBuilder minTermFreq(int minTermFreq) {_        this.minTermFreq = minTermFreq__        return this__    };the,frequency,below,which,terms,will,be,ignored,in,the,source,doc,the,default,frequency,is,code,2;public,more,like,this,query,builder,min,term,freq,int,min,term,freq,this,min,term,freq,min,term,freq,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder minTermFreq(int minTermFreq);1535139672;The frequency below which terms will be ignored in the source doc. The default_frequency is {@code 2}.;public MoreLikeThisQueryBuilder minTermFreq(int minTermFreq) {_        this.minTermFreq = minTermFreq__        return this__    };the,frequency,below,which,terms,will,be,ignored,in,the,source,doc,the,default,frequency,is,code,2;public,more,like,this,query,builder,min,term,freq,int,min,term,freq,this,min,term,freq,min,term,freq,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder minTermFreq(int minTermFreq);1543237077;The frequency below which terms will be ignored in the source doc. The default_frequency is {@code 2}.;public MoreLikeThisQueryBuilder minTermFreq(int minTermFreq) {_        this.minTermFreq = minTermFreq__        return this__    };the,frequency,below,which,terms,will,be,ignored,in,the,source,doc,the,default,frequency,is,code,2;public,more,like,this,query,builder,min,term,freq,int,min,term,freq,this,min,term,freq,min,term,freq,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder minTermFreq(int minTermFreq);1544177681;The frequency below which terms will be ignored in the source doc. The default_frequency is {@code 2}.;public MoreLikeThisQueryBuilder minTermFreq(int minTermFreq) {_        this.minTermFreq = minTermFreq__        return this__    };the,frequency,below,which,terms,will,be,ignored,in,the,source,doc,the,default,frequency,is,code,2;public,more,like,this,query,builder,min,term,freq,int,min,term,freq,this,min,term,freq,min,term,freq,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder minTermFreq(int minTermFreq);1547002001;The frequency below which terms will be ignored in the source doc. The default_frequency is {@code 2}.;public MoreLikeThisQueryBuilder minTermFreq(int minTermFreq) {_        this.minTermFreq = minTermFreq__        return this__    };the,frequency,below,which,terms,will,be,ignored,in,the,source,doc,the,default,frequency,is,code,2;public,more,like,this,query,builder,min,term,freq,int,min,term,freq,this,min,term,freq,min,term,freq,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder maxWordLength(int maxWordLength);1524684173;Sets the maximum word length above which words will be ignored. Defaults to_unbounded (<tt>0</tt>).;public MoreLikeThisQueryBuilder maxWordLength(int maxWordLength) {_        this.maxWordLength = maxWordLength__        return this__    };sets,the,maximum,word,length,above,which,words,will,be,ignored,defaults,to,unbounded,tt,0,tt;public,more,like,this,query,builder,max,word,length,int,max,word,length,this,max,word,length,max,word,length,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder maxWordLength(int maxWordLength);1525334055;Sets the maximum word length above which words will be ignored. Defaults to_unbounded ({@code 0}).;public MoreLikeThisQueryBuilder maxWordLength(int maxWordLength) {_        this.maxWordLength = maxWordLength__        return this__    };sets,the,maximum,word,length,above,which,words,will,be,ignored,defaults,to,unbounded,code,0;public,more,like,this,query,builder,max,word,length,int,max,word,length,this,max,word,length,max,word,length,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder maxWordLength(int maxWordLength);1535139672;Sets the maximum word length above which words will be ignored. Defaults to_unbounded ({@code 0}).;public MoreLikeThisQueryBuilder maxWordLength(int maxWordLength) {_        this.maxWordLength = maxWordLength__        return this__    };sets,the,maximum,word,length,above,which,words,will,be,ignored,defaults,to,unbounded,code,0;public,more,like,this,query,builder,max,word,length,int,max,word,length,this,max,word,length,max,word,length,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder maxWordLength(int maxWordLength);1543237077;Sets the maximum word length above which words will be ignored. Defaults to_unbounded ({@code 0}).;public MoreLikeThisQueryBuilder maxWordLength(int maxWordLength) {_        this.maxWordLength = maxWordLength__        return this__    };sets,the,maximum,word,length,above,which,words,will,be,ignored,defaults,to,unbounded,code,0;public,more,like,this,query,builder,max,word,length,int,max,word,length,this,max,word,length,max,word,length,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder maxWordLength(int maxWordLength);1544177681;Sets the maximum word length above which words will be ignored. Defaults to_unbounded ({@code 0}).;public MoreLikeThisQueryBuilder maxWordLength(int maxWordLength) {_        this.maxWordLength = maxWordLength__        return this__    };sets,the,maximum,word,length,above,which,words,will,be,ignored,defaults,to,unbounded,code,0;public,more,like,this,query,builder,max,word,length,int,max,word,length,this,max,word,length,max,word,length,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder maxWordLength(int maxWordLength);1547002001;Sets the maximum word length above which words will be ignored. Defaults to_unbounded ({@code 0}).;public MoreLikeThisQueryBuilder maxWordLength(int maxWordLength) {_        this.maxWordLength = maxWordLength__        return this__    };sets,the,maximum,word,length,above,which,words,will,be,ignored,defaults,to,unbounded,code,0;public,more,like,this,query,builder,max,word,length,int,max,word,length,this,max,word,length,max,word,length,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder unlike(Item[] unlikeItems);1524684173;Sets the documents from which the terms should not be selected from.;public MoreLikeThisQueryBuilder unlike(Item[] unlikeItems) {_        this.unlikeItems = Optional.ofNullable(unlikeItems).orElse(new Item[0])__        return this__    };sets,the,documents,from,which,the,terms,should,not,be,selected,from;public,more,like,this,query,builder,unlike,item,unlike,items,this,unlike,items,optional,of,nullable,unlike,items,or,else,new,item,0,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder unlike(Item[] unlikeItems);1525334055;Sets the documents from which the terms should not be selected from.;public MoreLikeThisQueryBuilder unlike(Item[] unlikeItems) {_        this.unlikeItems = Optional.ofNullable(unlikeItems).orElse(new Item[0])__        return this__    };sets,the,documents,from,which,the,terms,should,not,be,selected,from;public,more,like,this,query,builder,unlike,item,unlike,items,this,unlike,items,optional,of,nullable,unlike,items,or,else,new,item,0,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder unlike(Item[] unlikeItems);1535139672;Sets the documents from which the terms should not be selected from.;public MoreLikeThisQueryBuilder unlike(Item[] unlikeItems) {_        this.unlikeItems = Optional.ofNullable(unlikeItems).orElse(new Item[0])__        return this__    };sets,the,documents,from,which,the,terms,should,not,be,selected,from;public,more,like,this,query,builder,unlike,item,unlike,items,this,unlike,items,optional,of,nullable,unlike,items,or,else,new,item,0,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder unlike(Item[] unlikeItems);1543237077;Sets the documents from which the terms should not be selected from.;public MoreLikeThisQueryBuilder unlike(Item[] unlikeItems) {_        this.unlikeItems = Optional.ofNullable(unlikeItems).orElse(new Item[0])__        return this__    };sets,the,documents,from,which,the,terms,should,not,be,selected,from;public,more,like,this,query,builder,unlike,item,unlike,items,this,unlike,items,optional,of,nullable,unlike,items,or,else,new,item,0,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder unlike(Item[] unlikeItems);1544177681;Sets the documents from which the terms should not be selected from.;public MoreLikeThisQueryBuilder unlike(Item[] unlikeItems) {_        this.unlikeItems = Optional.ofNullable(unlikeItems).orElse(new Item[0])__        return this__    };sets,the,documents,from,which,the,terms,should,not,be,selected,from;public,more,like,this,query,builder,unlike,item,unlike,items,this,unlike,items,optional,of,nullable,unlike,items,or,else,new,item,0,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder unlike(Item[] unlikeItems);1547002001;Sets the documents from which the terms should not be selected from.;public MoreLikeThisQueryBuilder unlike(Item[] unlikeItems) {_        this.unlikeItems = Optional.ofNullable(unlikeItems).orElse(new Item[0])__        return this__    };sets,the,documents,from,which,the,terms,should,not,be,selected,from;public,more,like,this,query,builder,unlike,item,unlike,items,this,unlike,items,optional,of,nullable,unlike,items,or,else,new,item,0,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder maxQueryTerms(int maxQueryTerms);1524684173;Sets the maximum number of query terms that will be included in any generated query._Defaults to <tt>25</tt>.;public MoreLikeThisQueryBuilder maxQueryTerms(int maxQueryTerms) {_        this.maxQueryTerms = maxQueryTerms__        return this__    };sets,the,maximum,number,of,query,terms,that,will,be,included,in,any,generated,query,defaults,to,tt,25,tt;public,more,like,this,query,builder,max,query,terms,int,max,query,terms,this,max,query,terms,max,query,terms,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder maxQueryTerms(int maxQueryTerms);1525334055;Sets the maximum number of query terms that will be included in any generated query._Defaults to {@code 25}.;public MoreLikeThisQueryBuilder maxQueryTerms(int maxQueryTerms) {_        this.maxQueryTerms = maxQueryTerms__        return this__    };sets,the,maximum,number,of,query,terms,that,will,be,included,in,any,generated,query,defaults,to,code,25;public,more,like,this,query,builder,max,query,terms,int,max,query,terms,this,max,query,terms,max,query,terms,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder maxQueryTerms(int maxQueryTerms);1535139672;Sets the maximum number of query terms that will be included in any generated query._Defaults to {@code 25}.;public MoreLikeThisQueryBuilder maxQueryTerms(int maxQueryTerms) {_        this.maxQueryTerms = maxQueryTerms__        return this__    };sets,the,maximum,number,of,query,terms,that,will,be,included,in,any,generated,query,defaults,to,code,25;public,more,like,this,query,builder,max,query,terms,int,max,query,terms,this,max,query,terms,max,query,terms,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder maxQueryTerms(int maxQueryTerms);1543237077;Sets the maximum number of query terms that will be included in any generated query._Defaults to {@code 25}.;public MoreLikeThisQueryBuilder maxQueryTerms(int maxQueryTerms) {_        this.maxQueryTerms = maxQueryTerms__        return this__    };sets,the,maximum,number,of,query,terms,that,will,be,included,in,any,generated,query,defaults,to,code,25;public,more,like,this,query,builder,max,query,terms,int,max,query,terms,this,max,query,terms,max,query,terms,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder maxQueryTerms(int maxQueryTerms);1544177681;Sets the maximum number of query terms that will be included in any generated query._Defaults to {@code 25}.;public MoreLikeThisQueryBuilder maxQueryTerms(int maxQueryTerms) {_        this.maxQueryTerms = maxQueryTerms__        return this__    };sets,the,maximum,number,of,query,terms,that,will,be,included,in,any,generated,query,defaults,to,code,25;public,more,like,this,query,builder,max,query,terms,int,max,query,terms,this,max,query,terms,max,query,terms,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder maxQueryTerms(int maxQueryTerms);1547002001;Sets the maximum number of query terms that will be included in any generated query._Defaults to {@code 25}.;public MoreLikeThisQueryBuilder maxQueryTerms(int maxQueryTerms) {_        this.maxQueryTerms = maxQueryTerms__        return this__    };sets,the,maximum,number,of,query,terms,that,will,be,included,in,any,generated,query,defaults,to,code,25;public,more,like,this,query,builder,max,query,terms,int,max,query,terms,this,max,query,terms,max,query,terms,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder(StreamInput in) throws IOException;1524684173;Read from a stream.;public MoreLikeThisQueryBuilder(StreamInput in) throws IOException {_        super(in)__        fields = in.readOptionalStringArray()__        likeTexts = in.readStringArray()__        likeItems = in.readList(Item::new).toArray(new Item[0])__        unlikeTexts = in.readStringArray()__        unlikeItems = in.readList(Item::new).toArray(new Item[0])__        maxQueryTerms = in.readVInt()__        minTermFreq = in.readVInt()__        minDocFreq = in.readVInt()__        maxDocFreq = in.readVInt()__        minWordLength = in.readVInt()__        maxWordLength = in.readVInt()__        stopWords = in.readOptionalStringArray()__        analyzer = in.readOptionalString()__        minimumShouldMatch = in.readString()__        boostTerms = (Float) in.readGenericValue()__        include = in.readBoolean()__        failOnUnsupportedField = in.readBoolean()__    };read,from,a,stream;public,more,like,this,query,builder,stream,input,in,throws,ioexception,super,in,fields,in,read,optional,string,array,like,texts,in,read,string,array,like,items,in,read,list,item,new,to,array,new,item,0,unlike,texts,in,read,string,array,unlike,items,in,read,list,item,new,to,array,new,item,0,max,query,terms,in,read,vint,min,term,freq,in,read,vint,min,doc,freq,in,read,vint,max,doc,freq,in,read,vint,min,word,length,in,read,vint,max,word,length,in,read,vint,stop,words,in,read,optional,string,array,analyzer,in,read,optional,string,minimum,should,match,in,read,string,boost,terms,float,in,read,generic,value,include,in,read,boolean,fail,on,unsupported,field,in,read,boolean
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder(StreamInput in) throws IOException;1525334055;Read from a stream.;public MoreLikeThisQueryBuilder(StreamInput in) throws IOException {_        super(in)__        fields = in.readOptionalStringArray()__        likeTexts = in.readStringArray()__        likeItems = in.readList(Item::new).toArray(new Item[0])__        unlikeTexts = in.readStringArray()__        unlikeItems = in.readList(Item::new).toArray(new Item[0])__        maxQueryTerms = in.readVInt()__        minTermFreq = in.readVInt()__        minDocFreq = in.readVInt()__        maxDocFreq = in.readVInt()__        minWordLength = in.readVInt()__        maxWordLength = in.readVInt()__        stopWords = in.readOptionalStringArray()__        analyzer = in.readOptionalString()__        minimumShouldMatch = in.readString()__        boostTerms = (Float) in.readGenericValue()__        include = in.readBoolean()__        failOnUnsupportedField = in.readBoolean()__    };read,from,a,stream;public,more,like,this,query,builder,stream,input,in,throws,ioexception,super,in,fields,in,read,optional,string,array,like,texts,in,read,string,array,like,items,in,read,list,item,new,to,array,new,item,0,unlike,texts,in,read,string,array,unlike,items,in,read,list,item,new,to,array,new,item,0,max,query,terms,in,read,vint,min,term,freq,in,read,vint,min,doc,freq,in,read,vint,max,doc,freq,in,read,vint,min,word,length,in,read,vint,max,word,length,in,read,vint,stop,words,in,read,optional,string,array,analyzer,in,read,optional,string,minimum,should,match,in,read,string,boost,terms,float,in,read,generic,value,include,in,read,boolean,fail,on,unsupported,field,in,read,boolean
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder(StreamInput in) throws IOException;1535139672;Read from a stream.;public MoreLikeThisQueryBuilder(StreamInput in) throws IOException {_        super(in)__        fields = in.readOptionalStringArray()__        likeTexts = in.readStringArray()__        likeItems = in.readList(Item::new).toArray(new Item[0])__        unlikeTexts = in.readStringArray()__        unlikeItems = in.readList(Item::new).toArray(new Item[0])__        maxQueryTerms = in.readVInt()__        minTermFreq = in.readVInt()__        minDocFreq = in.readVInt()__        maxDocFreq = in.readVInt()__        minWordLength = in.readVInt()__        maxWordLength = in.readVInt()__        stopWords = in.readOptionalStringArray()__        analyzer = in.readOptionalString()__        minimumShouldMatch = in.readString()__        boostTerms = (Float) in.readGenericValue()__        include = in.readBoolean()__        failOnUnsupportedField = in.readBoolean()__    };read,from,a,stream;public,more,like,this,query,builder,stream,input,in,throws,ioexception,super,in,fields,in,read,optional,string,array,like,texts,in,read,string,array,like,items,in,read,list,item,new,to,array,new,item,0,unlike,texts,in,read,string,array,unlike,items,in,read,list,item,new,to,array,new,item,0,max,query,terms,in,read,vint,min,term,freq,in,read,vint,min,doc,freq,in,read,vint,max,doc,freq,in,read,vint,min,word,length,in,read,vint,max,word,length,in,read,vint,stop,words,in,read,optional,string,array,analyzer,in,read,optional,string,minimum,should,match,in,read,string,boost,terms,float,in,read,generic,value,include,in,read,boolean,fail,on,unsupported,field,in,read,boolean
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder(StreamInput in) throws IOException;1543237077;Read from a stream.;public MoreLikeThisQueryBuilder(StreamInput in) throws IOException {_        super(in)__        fields = in.readOptionalStringArray()__        likeTexts = in.readStringArray()__        likeItems = in.readList(Item::new).toArray(new Item[0])__        unlikeTexts = in.readStringArray()__        unlikeItems = in.readList(Item::new).toArray(new Item[0])__        maxQueryTerms = in.readVInt()__        minTermFreq = in.readVInt()__        minDocFreq = in.readVInt()__        maxDocFreq = in.readVInt()__        minWordLength = in.readVInt()__        maxWordLength = in.readVInt()__        stopWords = in.readOptionalStringArray()__        analyzer = in.readOptionalString()__        minimumShouldMatch = in.readString()__        boostTerms = (Float) in.readGenericValue()__        include = in.readBoolean()__        failOnUnsupportedField = in.readBoolean()__    };read,from,a,stream;public,more,like,this,query,builder,stream,input,in,throws,ioexception,super,in,fields,in,read,optional,string,array,like,texts,in,read,string,array,like,items,in,read,list,item,new,to,array,new,item,0,unlike,texts,in,read,string,array,unlike,items,in,read,list,item,new,to,array,new,item,0,max,query,terms,in,read,vint,min,term,freq,in,read,vint,min,doc,freq,in,read,vint,max,doc,freq,in,read,vint,min,word,length,in,read,vint,max,word,length,in,read,vint,stop,words,in,read,optional,string,array,analyzer,in,read,optional,string,minimum,should,match,in,read,string,boost,terms,float,in,read,generic,value,include,in,read,boolean,fail,on,unsupported,field,in,read,boolean
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder(StreamInput in) throws IOException;1544177681;Read from a stream.;public MoreLikeThisQueryBuilder(StreamInput in) throws IOException {_        super(in)__        fields = in.readOptionalStringArray()__        likeTexts = in.readStringArray()__        likeItems = in.readList(Item::new).toArray(new Item[0])__        unlikeTexts = in.readStringArray()__        unlikeItems = in.readList(Item::new).toArray(new Item[0])__        maxQueryTerms = in.readVInt()__        minTermFreq = in.readVInt()__        minDocFreq = in.readVInt()__        maxDocFreq = in.readVInt()__        minWordLength = in.readVInt()__        maxWordLength = in.readVInt()__        stopWords = in.readOptionalStringArray()__        analyzer = in.readOptionalString()__        minimumShouldMatch = in.readString()__        boostTerms = (Float) in.readGenericValue()__        include = in.readBoolean()__        failOnUnsupportedField = in.readBoolean()__    };read,from,a,stream;public,more,like,this,query,builder,stream,input,in,throws,ioexception,super,in,fields,in,read,optional,string,array,like,texts,in,read,string,array,like,items,in,read,list,item,new,to,array,new,item,0,unlike,texts,in,read,string,array,unlike,items,in,read,list,item,new,to,array,new,item,0,max,query,terms,in,read,vint,min,term,freq,in,read,vint,min,doc,freq,in,read,vint,max,doc,freq,in,read,vint,min,word,length,in,read,vint,max,word,length,in,read,vint,stop,words,in,read,optional,string,array,analyzer,in,read,optional,string,minimum,should,match,in,read,string,boost,terms,float,in,read,generic,value,include,in,read,boolean,fail,on,unsupported,field,in,read,boolean
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder(StreamInput in) throws IOException;1547002001;Read from a stream.;public MoreLikeThisQueryBuilder(StreamInput in) throws IOException {_        super(in)__        fields = in.readOptionalStringArray()__        likeTexts = in.readStringArray()__        likeItems = in.readList(Item::new).toArray(new Item[0])__        unlikeTexts = in.readStringArray()__        unlikeItems = in.readList(Item::new).toArray(new Item[0])__        maxQueryTerms = in.readVInt()__        minTermFreq = in.readVInt()__        minDocFreq = in.readVInt()__        maxDocFreq = in.readVInt()__        minWordLength = in.readVInt()__        maxWordLength = in.readVInt()__        stopWords = in.readOptionalStringArray()__        analyzer = in.readOptionalString()__        minimumShouldMatch = in.readString()__        boostTerms = (Float) in.readGenericValue()__        include = in.readBoolean()__        failOnUnsupportedField = in.readBoolean()__    };read,from,a,stream;public,more,like,this,query,builder,stream,input,in,throws,ioexception,super,in,fields,in,read,optional,string,array,like,texts,in,read,string,array,like,items,in,read,list,item,new,to,array,new,item,0,unlike,texts,in,read,string,array,unlike,items,in,read,list,item,new,to,array,new,item,0,max,query,terms,in,read,vint,min,term,freq,in,read,vint,min,doc,freq,in,read,vint,max,doc,freq,in,read,vint,min,word,length,in,read,vint,max,word,length,in,read,vint,stop,words,in,read,optional,string,array,analyzer,in,read,optional,string,minimum,should,match,in,read,string,boost,terms,float,in,read,generic,value,include,in,read,boolean,fail,on,unsupported,field,in,read,boolean
MoreLikeThisQueryBuilder -> Item -> TermVectorsRequest toTermVectorsRequest();1524684173;Convert this to a {@link TermVectorsRequest} for fetching the terms of the document.;TermVectorsRequest toTermVectorsRequest() {_            TermVectorsRequest termVectorsRequest = new TermVectorsRequest(index, type, id)_                    .selectedFields(fields)_                    .routing(routing)_                    .version(version)_                    .versionType(versionType)_                    .perFieldAnalyzer(perFieldAnalyzer)_                    .positions(false)  _                    .offsets(false)_                    .payloads(false)_                    .fieldStatistics(false)_                    .termStatistics(false)__            _            if (doc != null) {_                termVectorsRequest.doc(doc, true, xContentType)__                this.id = termVectorsRequest.id()__            }_            return termVectorsRequest__        };convert,this,to,a,link,term,vectors,request,for,fetching,the,terms,of,the,document;term,vectors,request,to,term,vectors,request,term,vectors,request,term,vectors,request,new,term,vectors,request,index,type,id,selected,fields,fields,routing,routing,version,version,version,type,version,type,per,field,analyzer,per,field,analyzer,positions,false,offsets,false,payloads,false,field,statistics,false,term,statistics,false,if,doc,null,term,vectors,request,doc,doc,true,x,content,type,this,id,term,vectors,request,id,return,term,vectors,request
MoreLikeThisQueryBuilder -> Item -> TermVectorsRequest toTermVectorsRequest();1525334055;Convert this to a {@link TermVectorsRequest} for fetching the terms of the document.;TermVectorsRequest toTermVectorsRequest() {_            TermVectorsRequest termVectorsRequest = new TermVectorsRequest(index, type, id)_                    .selectedFields(fields)_                    .routing(routing)_                    .version(version)_                    .versionType(versionType)_                    .perFieldAnalyzer(perFieldAnalyzer)_                    .positions(false)  _                    .offsets(false)_                    .payloads(false)_                    .fieldStatistics(false)_                    .termStatistics(false)__            _            if (doc != null) {_                termVectorsRequest.doc(doc, true, xContentType)__                this.id = termVectorsRequest.id()__            }_            return termVectorsRequest__        };convert,this,to,a,link,term,vectors,request,for,fetching,the,terms,of,the,document;term,vectors,request,to,term,vectors,request,term,vectors,request,term,vectors,request,new,term,vectors,request,index,type,id,selected,fields,fields,routing,routing,version,version,version,type,version,type,per,field,analyzer,per,field,analyzer,positions,false,offsets,false,payloads,false,field,statistics,false,term,statistics,false,if,doc,null,term,vectors,request,doc,doc,true,x,content,type,this,id,term,vectors,request,id,return,term,vectors,request
MoreLikeThisQueryBuilder -> Item -> TermVectorsRequest toTermVectorsRequest();1535139672;Convert this to a {@link TermVectorsRequest} for fetching the terms of the document.;TermVectorsRequest toTermVectorsRequest() {_            TermVectorsRequest termVectorsRequest = new TermVectorsRequest(index, type, id)_                    .selectedFields(fields)_                    .routing(routing)_                    .version(version)_                    .versionType(versionType)_                    .perFieldAnalyzer(perFieldAnalyzer)_                    .positions(false)  _                    .offsets(false)_                    .payloads(false)_                    .fieldStatistics(false)_                    .termStatistics(false)__            _            if (doc != null) {_                termVectorsRequest.doc(doc, true, xContentType)__                this.id = termVectorsRequest.id()__            }_            return termVectorsRequest__        };convert,this,to,a,link,term,vectors,request,for,fetching,the,terms,of,the,document;term,vectors,request,to,term,vectors,request,term,vectors,request,term,vectors,request,new,term,vectors,request,index,type,id,selected,fields,fields,routing,routing,version,version,version,type,version,type,per,field,analyzer,per,field,analyzer,positions,false,offsets,false,payloads,false,field,statistics,false,term,statistics,false,if,doc,null,term,vectors,request,doc,doc,true,x,content,type,this,id,term,vectors,request,id,return,term,vectors,request
MoreLikeThisQueryBuilder -> Item -> TermVectorsRequest toTermVectorsRequest();1543237077;Convert this to a {@link TermVectorsRequest} for fetching the terms of the document.;TermVectorsRequest toTermVectorsRequest() {_            TermVectorsRequest termVectorsRequest = new TermVectorsRequest(index, type, id)_                    .selectedFields(fields)_                    .routing(routing)_                    .version(version)_                    .versionType(versionType)_                    .perFieldAnalyzer(perFieldAnalyzer)_                    .positions(false)  _                    .offsets(false)_                    .payloads(false)_                    .fieldStatistics(false)_                    .termStatistics(false)__            _            if (doc != null) {_                termVectorsRequest.doc(doc, true, xContentType)__                this.id = termVectorsRequest.id()__            }_            return termVectorsRequest__        };convert,this,to,a,link,term,vectors,request,for,fetching,the,terms,of,the,document;term,vectors,request,to,term,vectors,request,term,vectors,request,term,vectors,request,new,term,vectors,request,index,type,id,selected,fields,fields,routing,routing,version,version,version,type,version,type,per,field,analyzer,per,field,analyzer,positions,false,offsets,false,payloads,false,field,statistics,false,term,statistics,false,if,doc,null,term,vectors,request,doc,doc,true,x,content,type,this,id,term,vectors,request,id,return,term,vectors,request
MoreLikeThisQueryBuilder -> Item -> TermVectorsRequest toTermVectorsRequest();1544177681;Convert this to a {@link TermVectorsRequest} for fetching the terms of the document.;TermVectorsRequest toTermVectorsRequest() {_            TermVectorsRequest termVectorsRequest = new TermVectorsRequest(index, type, id)_                    .selectedFields(fields)_                    .routing(routing)_                    .version(version)_                    .versionType(versionType)_                    .perFieldAnalyzer(perFieldAnalyzer)_                    .positions(false)  _                    .offsets(false)_                    .payloads(false)_                    .fieldStatistics(false)_                    .termStatistics(false)__            _            if (doc != null) {_                termVectorsRequest.doc(doc, true, xContentType)__                this.id = termVectorsRequest.id()__            }_            return termVectorsRequest__        };convert,this,to,a,link,term,vectors,request,for,fetching,the,terms,of,the,document;term,vectors,request,to,term,vectors,request,term,vectors,request,term,vectors,request,new,term,vectors,request,index,type,id,selected,fields,fields,routing,routing,version,version,version,type,version,type,per,field,analyzer,per,field,analyzer,positions,false,offsets,false,payloads,false,field,statistics,false,term,statistics,false,if,doc,null,term,vectors,request,doc,doc,true,x,content,type,this,id,term,vectors,request,id,return,term,vectors,request
MoreLikeThisQueryBuilder -> Item -> TermVectorsRequest toTermVectorsRequest();1547002001;Convert this to a {@link TermVectorsRequest} for fetching the terms of the document.;TermVectorsRequest toTermVectorsRequest() {_            TermVectorsRequest termVectorsRequest = new TermVectorsRequest(index, type, id)_                    .selectedFields(fields)_                    .routing(routing)_                    .version(version)_                    .versionType(versionType)_                    .perFieldAnalyzer(perFieldAnalyzer)_                    .positions(false)  _                    .offsets(false)_                    .payloads(false)_                    .fieldStatistics(false)_                    .termStatistics(false)__            _            if (doc != null) {_                termVectorsRequest.doc(doc, true, xContentType)__                this.id = termVectorsRequest.id()__            }_            return termVectorsRequest__        };convert,this,to,a,link,term,vectors,request,for,fetching,the,terms,of,the,document;term,vectors,request,to,term,vectors,request,term,vectors,request,term,vectors,request,new,term,vectors,request,index,type,id,selected,fields,fields,routing,routing,version,version,version,type,version,type,per,field,analyzer,per,field,analyzer,positions,false,offsets,false,payloads,false,field,statistics,false,term,statistics,false,if,doc,null,term,vectors,request,doc,doc,true,x,content,type,this,id,term,vectors,request,id,return,term,vectors,request
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder boostTerms(float boostTerms);1524684173;Sets the boost factor to use when boosting terms. Defaults to <tt>0</tt> (deactivated).;public MoreLikeThisQueryBuilder boostTerms(float boostTerms) {_        this.boostTerms = boostTerms__        return this__    };sets,the,boost,factor,to,use,when,boosting,terms,defaults,to,tt,0,tt,deactivated;public,more,like,this,query,builder,boost,terms,float,boost,terms,this,boost,terms,boost,terms,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder boostTerms(float boostTerms);1525334055;Sets the boost factor to use when boosting terms. Defaults to {@code 0} (deactivated).;public MoreLikeThisQueryBuilder boostTerms(float boostTerms) {_        this.boostTerms = boostTerms__        return this__    };sets,the,boost,factor,to,use,when,boosting,terms,defaults,to,code,0,deactivated;public,more,like,this,query,builder,boost,terms,float,boost,terms,this,boost,terms,boost,terms,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder boostTerms(float boostTerms);1535139672;Sets the boost factor to use when boosting terms. Defaults to {@code 0} (deactivated).;public MoreLikeThisQueryBuilder boostTerms(float boostTerms) {_        this.boostTerms = boostTerms__        return this__    };sets,the,boost,factor,to,use,when,boosting,terms,defaults,to,code,0,deactivated;public,more,like,this,query,builder,boost,terms,float,boost,terms,this,boost,terms,boost,terms,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder boostTerms(float boostTerms);1543237077;Sets the boost factor to use when boosting terms. Defaults to {@code 0} (deactivated).;public MoreLikeThisQueryBuilder boostTerms(float boostTerms) {_        this.boostTerms = boostTerms__        return this__    };sets,the,boost,factor,to,use,when,boosting,terms,defaults,to,code,0,deactivated;public,more,like,this,query,builder,boost,terms,float,boost,terms,this,boost,terms,boost,terms,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder boostTerms(float boostTerms);1544177681;Sets the boost factor to use when boosting terms. Defaults to {@code 0} (deactivated).;public MoreLikeThisQueryBuilder boostTerms(float boostTerms) {_        this.boostTerms = boostTerms__        return this__    };sets,the,boost,factor,to,use,when,boosting,terms,defaults,to,code,0,deactivated;public,more,like,this,query,builder,boost,terms,float,boost,terms,this,boost,terms,boost,terms,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder boostTerms(float boostTerms);1547002001;Sets the boost factor to use when boosting terms. Defaults to {@code 0} (deactivated).;public MoreLikeThisQueryBuilder boostTerms(float boostTerms) {_        this.boostTerms = boostTerms__        return this__    };sets,the,boost,factor,to,use,when,boosting,terms,defaults,to,code,0,deactivated;public,more,like,this,query,builder,boost,terms,float,boost,terms,this,boost,terms,boost,terms,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder minimumShouldMatch(String minimumShouldMatch);1524684173;Number of terms that must match the generated query expressed in the_common syntax for minimum should match. Defaults to <tt>30%</tt>.__@see    org.elasticsearch.common.lucene.search.Queries#calculateMinShouldMatch(int, String);public MoreLikeThisQueryBuilder minimumShouldMatch(String minimumShouldMatch) {_        if (minimumShouldMatch == null) {_            throw new IllegalArgumentException("[" + NAME + "] requires minimum should match to be non-null")__        }_        this.minimumShouldMatch = minimumShouldMatch__        return this__    };number,of,terms,that,must,match,the,generated,query,expressed,in,the,common,syntax,for,minimum,should,match,defaults,to,tt,30,tt,see,org,elasticsearch,common,lucene,search,queries,calculate,min,should,match,int,string;public,more,like,this,query,builder,minimum,should,match,string,minimum,should,match,if,minimum,should,match,null,throw,new,illegal,argument,exception,name,requires,minimum,should,match,to,be,non,null,this,minimum,should,match,minimum,should,match,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder minimumShouldMatch(String minimumShouldMatch);1525334055;Number of terms that must match the generated query expressed in the_common syntax for minimum should match. Defaults to {@code 30%}.__@see    org.elasticsearch.common.lucene.search.Queries#calculateMinShouldMatch(int, String);public MoreLikeThisQueryBuilder minimumShouldMatch(String minimumShouldMatch) {_        if (minimumShouldMatch == null) {_            throw new IllegalArgumentException("[" + NAME + "] requires minimum should match to be non-null")__        }_        this.minimumShouldMatch = minimumShouldMatch__        return this__    };number,of,terms,that,must,match,the,generated,query,expressed,in,the,common,syntax,for,minimum,should,match,defaults,to,code,30,see,org,elasticsearch,common,lucene,search,queries,calculate,min,should,match,int,string;public,more,like,this,query,builder,minimum,should,match,string,minimum,should,match,if,minimum,should,match,null,throw,new,illegal,argument,exception,name,requires,minimum,should,match,to,be,non,null,this,minimum,should,match,minimum,should,match,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder minimumShouldMatch(String minimumShouldMatch);1535139672;Number of terms that must match the generated query expressed in the_common syntax for minimum should match. Defaults to {@code 30%}.__@see    org.elasticsearch.common.lucene.search.Queries#calculateMinShouldMatch(int, String);public MoreLikeThisQueryBuilder minimumShouldMatch(String minimumShouldMatch) {_        if (minimumShouldMatch == null) {_            throw new IllegalArgumentException("[" + NAME + "] requires minimum should match to be non-null")__        }_        this.minimumShouldMatch = minimumShouldMatch__        return this__    };number,of,terms,that,must,match,the,generated,query,expressed,in,the,common,syntax,for,minimum,should,match,defaults,to,code,30,see,org,elasticsearch,common,lucene,search,queries,calculate,min,should,match,int,string;public,more,like,this,query,builder,minimum,should,match,string,minimum,should,match,if,minimum,should,match,null,throw,new,illegal,argument,exception,name,requires,minimum,should,match,to,be,non,null,this,minimum,should,match,minimum,should,match,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder minimumShouldMatch(String minimumShouldMatch);1543237077;Number of terms that must match the generated query expressed in the_common syntax for minimum should match. Defaults to {@code 30%}.__@see    org.elasticsearch.common.lucene.search.Queries#calculateMinShouldMatch(int, String);public MoreLikeThisQueryBuilder minimumShouldMatch(String minimumShouldMatch) {_        if (minimumShouldMatch == null) {_            throw new IllegalArgumentException("[" + NAME + "] requires minimum should match to be non-null")__        }_        this.minimumShouldMatch = minimumShouldMatch__        return this__    };number,of,terms,that,must,match,the,generated,query,expressed,in,the,common,syntax,for,minimum,should,match,defaults,to,code,30,see,org,elasticsearch,common,lucene,search,queries,calculate,min,should,match,int,string;public,more,like,this,query,builder,minimum,should,match,string,minimum,should,match,if,minimum,should,match,null,throw,new,illegal,argument,exception,name,requires,minimum,should,match,to,be,non,null,this,minimum,should,match,minimum,should,match,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder minimumShouldMatch(String minimumShouldMatch);1544177681;Number of terms that must match the generated query expressed in the_common syntax for minimum should match. Defaults to {@code 30%}.__@see    org.elasticsearch.common.lucene.search.Queries#calculateMinShouldMatch(int, String);public MoreLikeThisQueryBuilder minimumShouldMatch(String minimumShouldMatch) {_        if (minimumShouldMatch == null) {_            throw new IllegalArgumentException("[" + NAME + "] requires minimum should match to be non-null")__        }_        this.minimumShouldMatch = minimumShouldMatch__        return this__    };number,of,terms,that,must,match,the,generated,query,expressed,in,the,common,syntax,for,minimum,should,match,defaults,to,code,30,see,org,elasticsearch,common,lucene,search,queries,calculate,min,should,match,int,string;public,more,like,this,query,builder,minimum,should,match,string,minimum,should,match,if,minimum,should,match,null,throw,new,illegal,argument,exception,name,requires,minimum,should,match,to,be,non,null,this,minimum,should,match,minimum,should,match,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder minimumShouldMatch(String minimumShouldMatch);1547002001;Number of terms that must match the generated query expressed in the_common syntax for minimum should match. Defaults to {@code 30%}.__@see    org.elasticsearch.common.lucene.search.Queries#calculateMinShouldMatch(int, String);public MoreLikeThisQueryBuilder minimumShouldMatch(String minimumShouldMatch) {_        if (minimumShouldMatch == null) {_            throw new IllegalArgumentException("[" + NAME + "] requires minimum should match to be non-null")__        }_        this.minimumShouldMatch = minimumShouldMatch__        return this__    };number,of,terms,that,must,match,the,generated,query,expressed,in,the,common,syntax,for,minimum,should,match,defaults,to,code,30,see,org,elasticsearch,common,lucene,search,queries,calculate,min,should,match,int,string;public,more,like,this,query,builder,minimum,should,match,string,minimum,should,match,if,minimum,should,match,null,throw,new,illegal,argument,exception,name,requires,minimum,should,match,to,be,non,null,this,minimum,should,match,minimum,should,match,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder maxDocFreq(int maxDocFreq);1524684173;Set the maximum frequency in which words may still appear. Words that appear_in more than this many docs will be ignored. Defaults to unbounded.;public MoreLikeThisQueryBuilder maxDocFreq(int maxDocFreq) {_        this.maxDocFreq = maxDocFreq__        return this__    };set,the,maximum,frequency,in,which,words,may,still,appear,words,that,appear,in,more,than,this,many,docs,will,be,ignored,defaults,to,unbounded;public,more,like,this,query,builder,max,doc,freq,int,max,doc,freq,this,max,doc,freq,max,doc,freq,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder maxDocFreq(int maxDocFreq);1525334055;Set the maximum frequency in which words may still appear. Words that appear_in more than this many docs will be ignored. Defaults to unbounded.;public MoreLikeThisQueryBuilder maxDocFreq(int maxDocFreq) {_        this.maxDocFreq = maxDocFreq__        return this__    };set,the,maximum,frequency,in,which,words,may,still,appear,words,that,appear,in,more,than,this,many,docs,will,be,ignored,defaults,to,unbounded;public,more,like,this,query,builder,max,doc,freq,int,max,doc,freq,this,max,doc,freq,max,doc,freq,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder maxDocFreq(int maxDocFreq);1535139672;Set the maximum frequency in which words may still appear. Words that appear_in more than this many docs will be ignored. Defaults to unbounded.;public MoreLikeThisQueryBuilder maxDocFreq(int maxDocFreq) {_        this.maxDocFreq = maxDocFreq__        return this__    };set,the,maximum,frequency,in,which,words,may,still,appear,words,that,appear,in,more,than,this,many,docs,will,be,ignored,defaults,to,unbounded;public,more,like,this,query,builder,max,doc,freq,int,max,doc,freq,this,max,doc,freq,max,doc,freq,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder maxDocFreq(int maxDocFreq);1543237077;Set the maximum frequency in which words may still appear. Words that appear_in more than this many docs will be ignored. Defaults to unbounded.;public MoreLikeThisQueryBuilder maxDocFreq(int maxDocFreq) {_        this.maxDocFreq = maxDocFreq__        return this__    };set,the,maximum,frequency,in,which,words,may,still,appear,words,that,appear,in,more,than,this,many,docs,will,be,ignored,defaults,to,unbounded;public,more,like,this,query,builder,max,doc,freq,int,max,doc,freq,this,max,doc,freq,max,doc,freq,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder maxDocFreq(int maxDocFreq);1544177681;Set the maximum frequency in which words may still appear. Words that appear_in more than this many docs will be ignored. Defaults to unbounded.;public MoreLikeThisQueryBuilder maxDocFreq(int maxDocFreq) {_        this.maxDocFreq = maxDocFreq__        return this__    };set,the,maximum,frequency,in,which,words,may,still,appear,words,that,appear,in,more,than,this,many,docs,will,be,ignored,defaults,to,unbounded;public,more,like,this,query,builder,max,doc,freq,int,max,doc,freq,this,max,doc,freq,max,doc,freq,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder maxDocFreq(int maxDocFreq);1547002001;Set the maximum frequency in which words may still appear. Words that appear_in more than this many docs will be ignored. Defaults to unbounded.;public MoreLikeThisQueryBuilder maxDocFreq(int maxDocFreq) {_        this.maxDocFreq = maxDocFreq__        return this__    };set,the,maximum,frequency,in,which,words,may,still,appear,words,that,appear,in,more,than,this,many,docs,will,be,ignored,defaults,to,unbounded;public,more,like,this,query,builder,max,doc,freq,int,max,doc,freq,this,max,doc,freq,max,doc,freq,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder(@Nullable String[] fields, @Nullable String[] likeTexts, @Nullable Item[] likeItems);1524684173;Sets the field names that will be used when generating the 'More Like This' query.__@param fields the field names that will be used when generating the 'More Like This' query._@param likeTexts the text to use when generating the 'More Like This' query._@param likeItems the documents to use when generating the 'More Like This' query.;public MoreLikeThisQueryBuilder(@Nullable String[] fields, @Nullable String[] likeTexts, @Nullable Item[] likeItems) {_        _        if (fields != null && fields.length == 0) {_            throw new IllegalArgumentException(NAME + " query requires 'fields' to be specified")__        }_        if ((likeTexts == null || likeTexts.length == 0) && (likeItems == null || likeItems.length == 0)) {_            throw new IllegalArgumentException(NAME + " query requires either 'like' texts or items to be specified.")__        }_        this.fields = fields__        this.likeTexts = Optional.ofNullable(likeTexts).orElse(Strings.EMPTY_ARRAY)__        this.likeItems = Optional.ofNullable(likeItems).orElse(new Item[0])__    };sets,the,field,names,that,will,be,used,when,generating,the,more,like,this,query,param,fields,the,field,names,that,will,be,used,when,generating,the,more,like,this,query,param,like,texts,the,text,to,use,when,generating,the,more,like,this,query,param,like,items,the,documents,to,use,when,generating,the,more,like,this,query;public,more,like,this,query,builder,nullable,string,fields,nullable,string,like,texts,nullable,item,like,items,if,fields,null,fields,length,0,throw,new,illegal,argument,exception,name,query,requires,fields,to,be,specified,if,like,texts,null,like,texts,length,0,like,items,null,like,items,length,0,throw,new,illegal,argument,exception,name,query,requires,either,like,texts,or,items,to,be,specified,this,fields,fields,this,like,texts,optional,of,nullable,like,texts,or,else,strings,this,like,items,optional,of,nullable,like,items,or,else,new,item,0
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder(@Nullable String[] fields, @Nullable String[] likeTexts, @Nullable Item[] likeItems);1525334055;Sets the field names that will be used when generating the 'More Like This' query.__@param fields the field names that will be used when generating the 'More Like This' query._@param likeTexts the text to use when generating the 'More Like This' query._@param likeItems the documents to use when generating the 'More Like This' query.;public MoreLikeThisQueryBuilder(@Nullable String[] fields, @Nullable String[] likeTexts, @Nullable Item[] likeItems) {_        _        if (fields != null && fields.length == 0) {_            throw new IllegalArgumentException(NAME + " query requires 'fields' to be specified")__        }_        if ((likeTexts == null || likeTexts.length == 0) && (likeItems == null || likeItems.length == 0)) {_            throw new IllegalArgumentException(NAME + " query requires either 'like' texts or items to be specified.")__        }_        this.fields = fields__        this.likeTexts = Optional.ofNullable(likeTexts).orElse(Strings.EMPTY_ARRAY)__        this.likeItems = Optional.ofNullable(likeItems).orElse(new Item[0])__    };sets,the,field,names,that,will,be,used,when,generating,the,more,like,this,query,param,fields,the,field,names,that,will,be,used,when,generating,the,more,like,this,query,param,like,texts,the,text,to,use,when,generating,the,more,like,this,query,param,like,items,the,documents,to,use,when,generating,the,more,like,this,query;public,more,like,this,query,builder,nullable,string,fields,nullable,string,like,texts,nullable,item,like,items,if,fields,null,fields,length,0,throw,new,illegal,argument,exception,name,query,requires,fields,to,be,specified,if,like,texts,null,like,texts,length,0,like,items,null,like,items,length,0,throw,new,illegal,argument,exception,name,query,requires,either,like,texts,or,items,to,be,specified,this,fields,fields,this,like,texts,optional,of,nullable,like,texts,or,else,strings,this,like,items,optional,of,nullable,like,items,or,else,new,item,0
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder(@Nullable String[] fields, @Nullable String[] likeTexts, @Nullable Item[] likeItems);1535139672;Sets the field names that will be used when generating the 'More Like This' query.__@param fields the field names that will be used when generating the 'More Like This' query._@param likeTexts the text to use when generating the 'More Like This' query._@param likeItems the documents to use when generating the 'More Like This' query.;public MoreLikeThisQueryBuilder(@Nullable String[] fields, @Nullable String[] likeTexts, @Nullable Item[] likeItems) {_        _        if (fields != null && fields.length == 0) {_            throw new IllegalArgumentException(NAME + " query requires 'fields' to be specified")__        }_        if ((likeTexts == null || likeTexts.length == 0) && (likeItems == null || likeItems.length == 0)) {_            throw new IllegalArgumentException(NAME + " query requires either 'like' texts or items to be specified.")__        }_        this.fields = fields__        this.likeTexts = Optional.ofNullable(likeTexts).orElse(Strings.EMPTY_ARRAY)__        this.likeItems = Optional.ofNullable(likeItems).orElse(new Item[0])__    };sets,the,field,names,that,will,be,used,when,generating,the,more,like,this,query,param,fields,the,field,names,that,will,be,used,when,generating,the,more,like,this,query,param,like,texts,the,text,to,use,when,generating,the,more,like,this,query,param,like,items,the,documents,to,use,when,generating,the,more,like,this,query;public,more,like,this,query,builder,nullable,string,fields,nullable,string,like,texts,nullable,item,like,items,if,fields,null,fields,length,0,throw,new,illegal,argument,exception,name,query,requires,fields,to,be,specified,if,like,texts,null,like,texts,length,0,like,items,null,like,items,length,0,throw,new,illegal,argument,exception,name,query,requires,either,like,texts,or,items,to,be,specified,this,fields,fields,this,like,texts,optional,of,nullable,like,texts,or,else,strings,this,like,items,optional,of,nullable,like,items,or,else,new,item,0
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder(@Nullable String[] fields, @Nullable String[] likeTexts, @Nullable Item[] likeItems);1543237077;Sets the field names that will be used when generating the 'More Like This' query.__@param fields the field names that will be used when generating the 'More Like This' query._@param likeTexts the text to use when generating the 'More Like This' query._@param likeItems the documents to use when generating the 'More Like This' query.;public MoreLikeThisQueryBuilder(@Nullable String[] fields, @Nullable String[] likeTexts, @Nullable Item[] likeItems) {_        _        if (fields != null && fields.length == 0) {_            throw new IllegalArgumentException(NAME + " query requires 'fields' to be specified")__        }_        if ((likeTexts == null || likeTexts.length == 0) && (likeItems == null || likeItems.length == 0)) {_            throw new IllegalArgumentException(NAME + " query requires either 'like' texts or items to be specified.")__        }_        this.fields = fields__        this.likeTexts = Optional.ofNullable(likeTexts).orElse(Strings.EMPTY_ARRAY)__        this.likeItems = Optional.ofNullable(likeItems).orElse(new Item[0])__    };sets,the,field,names,that,will,be,used,when,generating,the,more,like,this,query,param,fields,the,field,names,that,will,be,used,when,generating,the,more,like,this,query,param,like,texts,the,text,to,use,when,generating,the,more,like,this,query,param,like,items,the,documents,to,use,when,generating,the,more,like,this,query;public,more,like,this,query,builder,nullable,string,fields,nullable,string,like,texts,nullable,item,like,items,if,fields,null,fields,length,0,throw,new,illegal,argument,exception,name,query,requires,fields,to,be,specified,if,like,texts,null,like,texts,length,0,like,items,null,like,items,length,0,throw,new,illegal,argument,exception,name,query,requires,either,like,texts,or,items,to,be,specified,this,fields,fields,this,like,texts,optional,of,nullable,like,texts,or,else,strings,this,like,items,optional,of,nullable,like,items,or,else,new,item,0
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder(@Nullable String[] fields, @Nullable String[] likeTexts, @Nullable Item[] likeItems);1544177681;Sets the field names that will be used when generating the 'More Like This' query.__@param fields the field names that will be used when generating the 'More Like This' query._@param likeTexts the text to use when generating the 'More Like This' query._@param likeItems the documents to use when generating the 'More Like This' query.;public MoreLikeThisQueryBuilder(@Nullable String[] fields, @Nullable String[] likeTexts, @Nullable Item[] likeItems) {_        _        if (fields != null && fields.length == 0) {_            throw new IllegalArgumentException(NAME + " query requires 'fields' to be specified")__        }_        if ((likeTexts == null || likeTexts.length == 0) && (likeItems == null || likeItems.length == 0)) {_            throw new IllegalArgumentException(NAME + " query requires either 'like' texts or items to be specified.")__        }_        this.fields = fields__        this.likeTexts = Optional.ofNullable(likeTexts).orElse(Strings.EMPTY_ARRAY)__        this.likeItems = Optional.ofNullable(likeItems).orElse(new Item[0])__    };sets,the,field,names,that,will,be,used,when,generating,the,more,like,this,query,param,fields,the,field,names,that,will,be,used,when,generating,the,more,like,this,query,param,like,texts,the,text,to,use,when,generating,the,more,like,this,query,param,like,items,the,documents,to,use,when,generating,the,more,like,this,query;public,more,like,this,query,builder,nullable,string,fields,nullable,string,like,texts,nullable,item,like,items,if,fields,null,fields,length,0,throw,new,illegal,argument,exception,name,query,requires,fields,to,be,specified,if,like,texts,null,like,texts,length,0,like,items,null,like,items,length,0,throw,new,illegal,argument,exception,name,query,requires,either,like,texts,or,items,to,be,specified,this,fields,fields,this,like,texts,optional,of,nullable,like,texts,or,else,strings,this,like,items,optional,of,nullable,like,items,or,else,new,item,0
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder(@Nullable String[] fields, @Nullable String[] likeTexts, @Nullable Item[] likeItems);1547002001;Sets the field names that will be used when generating the 'More Like This' query.__@param fields the field names that will be used when generating the 'More Like This' query._@param likeTexts the text to use when generating the 'More Like This' query._@param likeItems the documents to use when generating the 'More Like This' query.;public MoreLikeThisQueryBuilder(@Nullable String[] fields, @Nullable String[] likeTexts, @Nullable Item[] likeItems) {_        _        if (fields != null && fields.length == 0) {_            throw new IllegalArgumentException(NAME + " query requires 'fields' to be specified")__        }_        if ((likeTexts == null || likeTexts.length == 0) && (likeItems == null || likeItems.length == 0)) {_            throw new IllegalArgumentException(NAME + " query requires either 'like' texts or items to be specified.")__        }_        this.fields = fields__        this.likeTexts = Optional.ofNullable(likeTexts).orElse(Strings.EMPTY_ARRAY)__        this.likeItems = Optional.ofNullable(likeItems).orElse(new Item[0])__    };sets,the,field,names,that,will,be,used,when,generating,the,more,like,this,query,param,fields,the,field,names,that,will,be,used,when,generating,the,more,like,this,query,param,like,texts,the,text,to,use,when,generating,the,more,like,this,query,param,like,items,the,documents,to,use,when,generating,the,more,like,this,query;public,more,like,this,query,builder,nullable,string,fields,nullable,string,like,texts,nullable,item,like,items,if,fields,null,fields,length,0,throw,new,illegal,argument,exception,name,query,requires,fields,to,be,specified,if,like,texts,null,like,texts,length,0,like,items,null,like,items,length,0,throw,new,illegal,argument,exception,name,query,requires,either,like,texts,or,items,to,be,specified,this,fields,fields,this,like,texts,optional,of,nullable,like,texts,or,else,strings,this,like,items,optional,of,nullable,like,items,or,else,new,item,0
MoreLikeThisQueryBuilder -> Item -> public static Item parse(XContentParser parser, Item item) throws IOException;1524684173;Parses and returns the given item.;public static Item parse(XContentParser parser, Item item) throws IOException {_            XContentParser.Token token__            String currentFieldName = null__            while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {_                if (token == XContentParser.Token.FIELD_NAME) {_                    currentFieldName = parser.currentName()__                } else if (currentFieldName != null) {_                    if (INDEX.match(currentFieldName, parser.getDeprecationHandler())) {_                        item.index = parser.text()__                    } else if (TYPE.match(currentFieldName, parser.getDeprecationHandler())) {_                        item.type = parser.text()__                    } else if (ID.match(currentFieldName, parser.getDeprecationHandler())) {_                        item.id = parser.text()__                    } else if (DOC.match(currentFieldName, parser.getDeprecationHandler())) {_                        item.doc = BytesReference.bytes(jsonBuilder().copyCurrentStructure(parser))__                        item.xContentType = XContentType.JSON__                    } else if (FIELDS.match(currentFieldName, parser.getDeprecationHandler())) {_                        if (token == XContentParser.Token.START_ARRAY) {_                            List<String> fields = new ArrayList<>()__                            while (parser.nextToken() != XContentParser.Token.END_ARRAY) {_                                fields.add(parser.text())__                            }_                            item.fields(fields.toArray(new String[fields.size()]))__                        } else {_                            throw new ElasticsearchParseException(_                                    "failed to parse More Like This item. field [fields] must be an array")__                        }_                    } else if (PER_FIELD_ANALYZER.match(currentFieldName, parser.getDeprecationHandler())) {_                        item.perFieldAnalyzer(TermVectorsRequest.readPerFieldAnalyzer(parser.map()))__                    } else if (ROUTING.match(currentFieldName, parser.getDeprecationHandler())) {_                        item.routing = parser.text()__                    } else if (VERSION.match(currentFieldName, parser.getDeprecationHandler())) {_                        item.version = parser.longValue()__                    } else if (VERSION_TYPE.match(currentFieldName, parser.getDeprecationHandler())) {_                        item.versionType = VersionType.fromString(parser.text())__                    } else {_                        throw new ElasticsearchParseException(_                                "failed to parse More Like This item. unknown field [{}]", currentFieldName)__                    }_                }_            }_            if (item.id != null && item.doc != null) {_                throw new ElasticsearchParseException(_                        "failed to parse More Like This item. either [id] or [doc] can be specified, but not both!")__            }_            if (item.id == null && item.doc == null) {_                throw new ElasticsearchParseException(_                        "failed to parse More Like This item. neither [id] nor [doc] is specified!")__            }_            return item__        };parses,and,returns,the,given,item;public,static,item,parse,xcontent,parser,parser,item,item,throws,ioexception,xcontent,parser,token,token,string,current,field,name,null,while,token,parser,next,token,xcontent,parser,token,if,token,xcontent,parser,token,current,field,name,parser,current,name,else,if,current,field,name,null,if,index,match,current,field,name,parser,get,deprecation,handler,item,index,parser,text,else,if,type,match,current,field,name,parser,get,deprecation,handler,item,type,parser,text,else,if,id,match,current,field,name,parser,get,deprecation,handler,item,id,parser,text,else,if,doc,match,current,field,name,parser,get,deprecation,handler,item,doc,bytes,reference,bytes,json,builder,copy,current,structure,parser,item,x,content,type,xcontent,type,json,else,if,fields,match,current,field,name,parser,get,deprecation,handler,if,token,xcontent,parser,token,list,string,fields,new,array,list,while,parser,next,token,xcontent,parser,token,fields,add,parser,text,item,fields,fields,to,array,new,string,fields,size,else,throw,new,elasticsearch,parse,exception,failed,to,parse,more,like,this,item,field,fields,must,be,an,array,else,if,match,current,field,name,parser,get,deprecation,handler,item,per,field,analyzer,term,vectors,request,read,per,field,analyzer,parser,map,else,if,routing,match,current,field,name,parser,get,deprecation,handler,item,routing,parser,text,else,if,version,match,current,field,name,parser,get,deprecation,handler,item,version,parser,long,value,else,if,match,current,field,name,parser,get,deprecation,handler,item,version,type,version,type,from,string,parser,text,else,throw,new,elasticsearch,parse,exception,failed,to,parse,more,like,this,item,unknown,field,current,field,name,if,item,id,null,item,doc,null,throw,new,elasticsearch,parse,exception,failed,to,parse,more,like,this,item,either,id,or,doc,can,be,specified,but,not,both,if,item,id,null,item,doc,null,throw,new,elasticsearch,parse,exception,failed,to,parse,more,like,this,item,neither,id,nor,doc,is,specified,return,item
MoreLikeThisQueryBuilder -> Item -> public static Item parse(XContentParser parser, Item item) throws IOException;1525334055;Parses and returns the given item.;public static Item parse(XContentParser parser, Item item) throws IOException {_            XContentParser.Token token__            String currentFieldName = null__            while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {_                if (token == XContentParser.Token.FIELD_NAME) {_                    currentFieldName = parser.currentName()__                } else if (currentFieldName != null) {_                    if (INDEX.match(currentFieldName, parser.getDeprecationHandler())) {_                        item.index = parser.text()__                    } else if (TYPE.match(currentFieldName, parser.getDeprecationHandler())) {_                        item.type = parser.text()__                    } else if (ID.match(currentFieldName, parser.getDeprecationHandler())) {_                        item.id = parser.text()__                    } else if (DOC.match(currentFieldName, parser.getDeprecationHandler())) {_                        item.doc = BytesReference.bytes(jsonBuilder().copyCurrentStructure(parser))__                        item.xContentType = XContentType.JSON__                    } else if (FIELDS.match(currentFieldName, parser.getDeprecationHandler())) {_                        if (token == XContentParser.Token.START_ARRAY) {_                            List<String> fields = new ArrayList<>()__                            while (parser.nextToken() != XContentParser.Token.END_ARRAY) {_                                fields.add(parser.text())__                            }_                            item.fields(fields.toArray(new String[fields.size()]))__                        } else {_                            throw new ElasticsearchParseException(_                                    "failed to parse More Like This item. field [fields] must be an array")__                        }_                    } else if (PER_FIELD_ANALYZER.match(currentFieldName, parser.getDeprecationHandler())) {_                        item.perFieldAnalyzer(TermVectorsRequest.readPerFieldAnalyzer(parser.map()))__                    } else if (ROUTING.match(currentFieldName, parser.getDeprecationHandler())) {_                        item.routing = parser.text()__                    } else if (VERSION.match(currentFieldName, parser.getDeprecationHandler())) {_                        item.version = parser.longValue()__                    } else if (VERSION_TYPE.match(currentFieldName, parser.getDeprecationHandler())) {_                        item.versionType = VersionType.fromString(parser.text())__                    } else {_                        throw new ElasticsearchParseException(_                                "failed to parse More Like This item. unknown field [{}]", currentFieldName)__                    }_                }_            }_            if (item.id != null && item.doc != null) {_                throw new ElasticsearchParseException(_                        "failed to parse More Like This item. either [id] or [doc] can be specified, but not both!")__            }_            if (item.id == null && item.doc == null) {_                throw new ElasticsearchParseException(_                        "failed to parse More Like This item. neither [id] nor [doc] is specified!")__            }_            return item__        };parses,and,returns,the,given,item;public,static,item,parse,xcontent,parser,parser,item,item,throws,ioexception,xcontent,parser,token,token,string,current,field,name,null,while,token,parser,next,token,xcontent,parser,token,if,token,xcontent,parser,token,current,field,name,parser,current,name,else,if,current,field,name,null,if,index,match,current,field,name,parser,get,deprecation,handler,item,index,parser,text,else,if,type,match,current,field,name,parser,get,deprecation,handler,item,type,parser,text,else,if,id,match,current,field,name,parser,get,deprecation,handler,item,id,parser,text,else,if,doc,match,current,field,name,parser,get,deprecation,handler,item,doc,bytes,reference,bytes,json,builder,copy,current,structure,parser,item,x,content,type,xcontent,type,json,else,if,fields,match,current,field,name,parser,get,deprecation,handler,if,token,xcontent,parser,token,list,string,fields,new,array,list,while,parser,next,token,xcontent,parser,token,fields,add,parser,text,item,fields,fields,to,array,new,string,fields,size,else,throw,new,elasticsearch,parse,exception,failed,to,parse,more,like,this,item,field,fields,must,be,an,array,else,if,match,current,field,name,parser,get,deprecation,handler,item,per,field,analyzer,term,vectors,request,read,per,field,analyzer,parser,map,else,if,routing,match,current,field,name,parser,get,deprecation,handler,item,routing,parser,text,else,if,version,match,current,field,name,parser,get,deprecation,handler,item,version,parser,long,value,else,if,match,current,field,name,parser,get,deprecation,handler,item,version,type,version,type,from,string,parser,text,else,throw,new,elasticsearch,parse,exception,failed,to,parse,more,like,this,item,unknown,field,current,field,name,if,item,id,null,item,doc,null,throw,new,elasticsearch,parse,exception,failed,to,parse,more,like,this,item,either,id,or,doc,can,be,specified,but,not,both,if,item,id,null,item,doc,null,throw,new,elasticsearch,parse,exception,failed,to,parse,more,like,this,item,neither,id,nor,doc,is,specified,return,item
MoreLikeThisQueryBuilder -> Item -> public static Item parse(XContentParser parser, Item item) throws IOException;1535139672;Parses and returns the given item.;public static Item parse(XContentParser parser, Item item) throws IOException {_            XContentParser.Token token__            String currentFieldName = null__            while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {_                if (token == XContentParser.Token.FIELD_NAME) {_                    currentFieldName = parser.currentName()__                } else if (currentFieldName != null) {_                    if (INDEX.match(currentFieldName, parser.getDeprecationHandler())) {_                        item.index = parser.text()__                    } else if (TYPE.match(currentFieldName, parser.getDeprecationHandler())) {_                        item.type = parser.text()__                    } else if (ID.match(currentFieldName, parser.getDeprecationHandler())) {_                        item.id = parser.text()__                    } else if (DOC.match(currentFieldName, parser.getDeprecationHandler())) {_                        item.doc = BytesReference.bytes(jsonBuilder().copyCurrentStructure(parser))__                        item.xContentType = XContentType.JSON__                    } else if (FIELDS.match(currentFieldName, parser.getDeprecationHandler())) {_                        if (token == XContentParser.Token.START_ARRAY) {_                            List<String> fields = new ArrayList<>()__                            while (parser.nextToken() != XContentParser.Token.END_ARRAY) {_                                fields.add(parser.text())__                            }_                            item.fields(fields.toArray(new String[fields.size()]))__                        } else {_                            throw new ElasticsearchParseException(_                                    "failed to parse More Like This item. field [fields] must be an array")__                        }_                    } else if (PER_FIELD_ANALYZER.match(currentFieldName, parser.getDeprecationHandler())) {_                        item.perFieldAnalyzer(TermVectorsRequest.readPerFieldAnalyzer(parser.map()))__                    } else if (ROUTING.match(currentFieldName, parser.getDeprecationHandler())) {_                        item.routing = parser.text()__                    } else if (VERSION.match(currentFieldName, parser.getDeprecationHandler())) {_                        item.version = parser.longValue()__                    } else if (VERSION_TYPE.match(currentFieldName, parser.getDeprecationHandler())) {_                        item.versionType = VersionType.fromString(parser.text())__                    } else {_                        throw new ElasticsearchParseException(_                                "failed to parse More Like This item. unknown field [{}]", currentFieldName)__                    }_                }_            }_            if (item.id != null && item.doc != null) {_                throw new ElasticsearchParseException(_                        "failed to parse More Like This item. either [id] or [doc] can be specified, but not both!")__            }_            if (item.id == null && item.doc == null) {_                throw new ElasticsearchParseException(_                        "failed to parse More Like This item. neither [id] nor [doc] is specified!")__            }_            return item__        };parses,and,returns,the,given,item;public,static,item,parse,xcontent,parser,parser,item,item,throws,ioexception,xcontent,parser,token,token,string,current,field,name,null,while,token,parser,next,token,xcontent,parser,token,if,token,xcontent,parser,token,current,field,name,parser,current,name,else,if,current,field,name,null,if,index,match,current,field,name,parser,get,deprecation,handler,item,index,parser,text,else,if,type,match,current,field,name,parser,get,deprecation,handler,item,type,parser,text,else,if,id,match,current,field,name,parser,get,deprecation,handler,item,id,parser,text,else,if,doc,match,current,field,name,parser,get,deprecation,handler,item,doc,bytes,reference,bytes,json,builder,copy,current,structure,parser,item,x,content,type,xcontent,type,json,else,if,fields,match,current,field,name,parser,get,deprecation,handler,if,token,xcontent,parser,token,list,string,fields,new,array,list,while,parser,next,token,xcontent,parser,token,fields,add,parser,text,item,fields,fields,to,array,new,string,fields,size,else,throw,new,elasticsearch,parse,exception,failed,to,parse,more,like,this,item,field,fields,must,be,an,array,else,if,match,current,field,name,parser,get,deprecation,handler,item,per,field,analyzer,term,vectors,request,read,per,field,analyzer,parser,map,else,if,routing,match,current,field,name,parser,get,deprecation,handler,item,routing,parser,text,else,if,version,match,current,field,name,parser,get,deprecation,handler,item,version,parser,long,value,else,if,match,current,field,name,parser,get,deprecation,handler,item,version,type,version,type,from,string,parser,text,else,throw,new,elasticsearch,parse,exception,failed,to,parse,more,like,this,item,unknown,field,current,field,name,if,item,id,null,item,doc,null,throw,new,elasticsearch,parse,exception,failed,to,parse,more,like,this,item,either,id,or,doc,can,be,specified,but,not,both,if,item,id,null,item,doc,null,throw,new,elasticsearch,parse,exception,failed,to,parse,more,like,this,item,neither,id,nor,doc,is,specified,return,item
MoreLikeThisQueryBuilder -> Item -> public static Item parse(XContentParser parser, Item item) throws IOException;1543237077;Parses and returns the given item.;public static Item parse(XContentParser parser, Item item) throws IOException {_            XContentParser.Token token__            String currentFieldName = null__            while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {_                if (token == XContentParser.Token.FIELD_NAME) {_                    currentFieldName = parser.currentName()__                } else if (currentFieldName != null) {_                    if (INDEX.match(currentFieldName, parser.getDeprecationHandler())) {_                        item.index = parser.text()__                    } else if (TYPE.match(currentFieldName, parser.getDeprecationHandler())) {_                        item.type = parser.text()__                    } else if (ID.match(currentFieldName, parser.getDeprecationHandler())) {_                        item.id = parser.text()__                    } else if (DOC.match(currentFieldName, parser.getDeprecationHandler())) {_                        item.doc = BytesReference.bytes(jsonBuilder().copyCurrentStructure(parser))__                        item.xContentType = XContentType.JSON__                    } else if (FIELDS.match(currentFieldName, parser.getDeprecationHandler())) {_                        if (token == XContentParser.Token.START_ARRAY) {_                            List<String> fields = new ArrayList<>()__                            while (parser.nextToken() != XContentParser.Token.END_ARRAY) {_                                fields.add(parser.text())__                            }_                            item.fields(fields.toArray(new String[fields.size()]))__                        } else {_                            throw new ElasticsearchParseException(_                                    "failed to parse More Like This item. field [fields] must be an array")__                        }_                    } else if (PER_FIELD_ANALYZER.match(currentFieldName, parser.getDeprecationHandler())) {_                        item.perFieldAnalyzer(TermVectorsRequest.readPerFieldAnalyzer(parser.map()))__                    } else if (ROUTING.match(currentFieldName, parser.getDeprecationHandler())) {_                        item.routing = parser.text()__                    } else if (VERSION.match(currentFieldName, parser.getDeprecationHandler())) {_                        item.version = parser.longValue()__                    } else if (VERSION_TYPE.match(currentFieldName, parser.getDeprecationHandler())) {_                        item.versionType = VersionType.fromString(parser.text())__                    } else {_                        throw new ElasticsearchParseException(_                                "failed to parse More Like This item. unknown field [{}]", currentFieldName)__                    }_                }_            }_            if (item.id != null && item.doc != null) {_                throw new ElasticsearchParseException(_                        "failed to parse More Like This item. either [id] or [doc] can be specified, but not both!")__            }_            if (item.id == null && item.doc == null) {_                throw new ElasticsearchParseException(_                        "failed to parse More Like This item. neither [id] nor [doc] is specified!")__            }_            return item__        };parses,and,returns,the,given,item;public,static,item,parse,xcontent,parser,parser,item,item,throws,ioexception,xcontent,parser,token,token,string,current,field,name,null,while,token,parser,next,token,xcontent,parser,token,if,token,xcontent,parser,token,current,field,name,parser,current,name,else,if,current,field,name,null,if,index,match,current,field,name,parser,get,deprecation,handler,item,index,parser,text,else,if,type,match,current,field,name,parser,get,deprecation,handler,item,type,parser,text,else,if,id,match,current,field,name,parser,get,deprecation,handler,item,id,parser,text,else,if,doc,match,current,field,name,parser,get,deprecation,handler,item,doc,bytes,reference,bytes,json,builder,copy,current,structure,parser,item,x,content,type,xcontent,type,json,else,if,fields,match,current,field,name,parser,get,deprecation,handler,if,token,xcontent,parser,token,list,string,fields,new,array,list,while,parser,next,token,xcontent,parser,token,fields,add,parser,text,item,fields,fields,to,array,new,string,fields,size,else,throw,new,elasticsearch,parse,exception,failed,to,parse,more,like,this,item,field,fields,must,be,an,array,else,if,match,current,field,name,parser,get,deprecation,handler,item,per,field,analyzer,term,vectors,request,read,per,field,analyzer,parser,map,else,if,routing,match,current,field,name,parser,get,deprecation,handler,item,routing,parser,text,else,if,version,match,current,field,name,parser,get,deprecation,handler,item,version,parser,long,value,else,if,match,current,field,name,parser,get,deprecation,handler,item,version,type,version,type,from,string,parser,text,else,throw,new,elasticsearch,parse,exception,failed,to,parse,more,like,this,item,unknown,field,current,field,name,if,item,id,null,item,doc,null,throw,new,elasticsearch,parse,exception,failed,to,parse,more,like,this,item,either,id,or,doc,can,be,specified,but,not,both,if,item,id,null,item,doc,null,throw,new,elasticsearch,parse,exception,failed,to,parse,more,like,this,item,neither,id,nor,doc,is,specified,return,item
MoreLikeThisQueryBuilder -> Item -> public static Item parse(XContentParser parser, Item item) throws IOException;1544177681;Parses and returns the given item.;public static Item parse(XContentParser parser, Item item) throws IOException {_            XContentParser.Token token__            String currentFieldName = null__            while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {_                if (token == XContentParser.Token.FIELD_NAME) {_                    currentFieldName = parser.currentName()__                } else if (currentFieldName != null) {_                    if (INDEX.match(currentFieldName, parser.getDeprecationHandler())) {_                        item.index = parser.text()__                    } else if (TYPE.match(currentFieldName, parser.getDeprecationHandler())) {_                        item.type = parser.text()__                    } else if (ID.match(currentFieldName, parser.getDeprecationHandler())) {_                        item.id = parser.text()__                    } else if (DOC.match(currentFieldName, parser.getDeprecationHandler())) {_                        item.doc = BytesReference.bytes(jsonBuilder().copyCurrentStructure(parser))__                        item.xContentType = XContentType.JSON__                    } else if (FIELDS.match(currentFieldName, parser.getDeprecationHandler())) {_                        if (token == XContentParser.Token.START_ARRAY) {_                            List<String> fields = new ArrayList<>()__                            while (parser.nextToken() != XContentParser.Token.END_ARRAY) {_                                fields.add(parser.text())__                            }_                            item.fields(fields.toArray(new String[fields.size()]))__                        } else {_                            throw new ElasticsearchParseException(_                                    "failed to parse More Like This item. field [fields] must be an array")__                        }_                    } else if (PER_FIELD_ANALYZER.match(currentFieldName, parser.getDeprecationHandler())) {_                        item.perFieldAnalyzer(TermVectorsRequest.readPerFieldAnalyzer(parser.map()))__                    } else if (ROUTING.match(currentFieldName, parser.getDeprecationHandler())) {_                        item.routing = parser.text()__                    } else if (VERSION.match(currentFieldName, parser.getDeprecationHandler())) {_                        item.version = parser.longValue()__                    } else if (VERSION_TYPE.match(currentFieldName, parser.getDeprecationHandler())) {_                        item.versionType = VersionType.fromString(parser.text())__                    } else {_                        throw new ElasticsearchParseException(_                                "failed to parse More Like This item. unknown field [{}]", currentFieldName)__                    }_                }_            }_            if (item.id != null && item.doc != null) {_                throw new ElasticsearchParseException(_                        "failed to parse More Like This item. either [id] or [doc] can be specified, but not both!")__            }_            if (item.id == null && item.doc == null) {_                throw new ElasticsearchParseException(_                        "failed to parse More Like This item. neither [id] nor [doc] is specified!")__            }_            return item__        };parses,and,returns,the,given,item;public,static,item,parse,xcontent,parser,parser,item,item,throws,ioexception,xcontent,parser,token,token,string,current,field,name,null,while,token,parser,next,token,xcontent,parser,token,if,token,xcontent,parser,token,current,field,name,parser,current,name,else,if,current,field,name,null,if,index,match,current,field,name,parser,get,deprecation,handler,item,index,parser,text,else,if,type,match,current,field,name,parser,get,deprecation,handler,item,type,parser,text,else,if,id,match,current,field,name,parser,get,deprecation,handler,item,id,parser,text,else,if,doc,match,current,field,name,parser,get,deprecation,handler,item,doc,bytes,reference,bytes,json,builder,copy,current,structure,parser,item,x,content,type,xcontent,type,json,else,if,fields,match,current,field,name,parser,get,deprecation,handler,if,token,xcontent,parser,token,list,string,fields,new,array,list,while,parser,next,token,xcontent,parser,token,fields,add,parser,text,item,fields,fields,to,array,new,string,fields,size,else,throw,new,elasticsearch,parse,exception,failed,to,parse,more,like,this,item,field,fields,must,be,an,array,else,if,match,current,field,name,parser,get,deprecation,handler,item,per,field,analyzer,term,vectors,request,read,per,field,analyzer,parser,map,else,if,routing,match,current,field,name,parser,get,deprecation,handler,item,routing,parser,text,else,if,version,match,current,field,name,parser,get,deprecation,handler,item,version,parser,long,value,else,if,match,current,field,name,parser,get,deprecation,handler,item,version,type,version,type,from,string,parser,text,else,throw,new,elasticsearch,parse,exception,failed,to,parse,more,like,this,item,unknown,field,current,field,name,if,item,id,null,item,doc,null,throw,new,elasticsearch,parse,exception,failed,to,parse,more,like,this,item,either,id,or,doc,can,be,specified,but,not,both,if,item,id,null,item,doc,null,throw,new,elasticsearch,parse,exception,failed,to,parse,more,like,this,item,neither,id,nor,doc,is,specified,return,item
MoreLikeThisQueryBuilder -> Item -> public static Item parse(XContentParser parser, Item item) throws IOException;1547002001;Parses and returns the given item.;public static Item parse(XContentParser parser, Item item) throws IOException {_            XContentParser.Token token__            String currentFieldName = null__            while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {_                if (token == XContentParser.Token.FIELD_NAME) {_                    currentFieldName = parser.currentName()__                } else if (currentFieldName != null) {_                    if (INDEX.match(currentFieldName, parser.getDeprecationHandler())) {_                        item.index = parser.text()__                    } else if (TYPE.match(currentFieldName, parser.getDeprecationHandler())) {_                        item.type = parser.text()__                    } else if (ID.match(currentFieldName, parser.getDeprecationHandler())) {_                        item.id = parser.text()__                    } else if (DOC.match(currentFieldName, parser.getDeprecationHandler())) {_                        item.doc = BytesReference.bytes(jsonBuilder().copyCurrentStructure(parser))__                        item.xContentType = XContentType.JSON__                    } else if (FIELDS.match(currentFieldName, parser.getDeprecationHandler())) {_                        if (token == XContentParser.Token.START_ARRAY) {_                            List<String> fields = new ArrayList<>()__                            while (parser.nextToken() != XContentParser.Token.END_ARRAY) {_                                fields.add(parser.text())__                            }_                            item.fields(fields.toArray(new String[fields.size()]))__                        } else {_                            throw new ElasticsearchParseException(_                                    "failed to parse More Like This item. field [fields] must be an array")__                        }_                    } else if (PER_FIELD_ANALYZER.match(currentFieldName, parser.getDeprecationHandler())) {_                        item.perFieldAnalyzer(TermVectorsRequest.readPerFieldAnalyzer(parser.map()))__                    } else if (ROUTING.match(currentFieldName, parser.getDeprecationHandler())) {_                        item.routing = parser.text()__                    } else if (VERSION.match(currentFieldName, parser.getDeprecationHandler())) {_                        item.version = parser.longValue()__                    } else if (VERSION_TYPE.match(currentFieldName, parser.getDeprecationHandler())) {_                        item.versionType = VersionType.fromString(parser.text())__                    } else {_                        throw new ElasticsearchParseException(_                                "failed to parse More Like This item. unknown field [{}]", currentFieldName)__                    }_                }_            }_            if (item.id != null && item.doc != null) {_                throw new ElasticsearchParseException(_                        "failed to parse More Like This item. either [id] or [doc] can be specified, but not both!")__            }_            if (item.id == null && item.doc == null) {_                throw new ElasticsearchParseException(_                        "failed to parse More Like This item. neither [id] nor [doc] is specified!")__            }_            return item__        };parses,and,returns,the,given,item;public,static,item,parse,xcontent,parser,parser,item,item,throws,ioexception,xcontent,parser,token,token,string,current,field,name,null,while,token,parser,next,token,xcontent,parser,token,if,token,xcontent,parser,token,current,field,name,parser,current,name,else,if,current,field,name,null,if,index,match,current,field,name,parser,get,deprecation,handler,item,index,parser,text,else,if,type,match,current,field,name,parser,get,deprecation,handler,item,type,parser,text,else,if,id,match,current,field,name,parser,get,deprecation,handler,item,id,parser,text,else,if,doc,match,current,field,name,parser,get,deprecation,handler,item,doc,bytes,reference,bytes,json,builder,copy,current,structure,parser,item,x,content,type,xcontent,type,json,else,if,fields,match,current,field,name,parser,get,deprecation,handler,if,token,xcontent,parser,token,list,string,fields,new,array,list,while,parser,next,token,xcontent,parser,token,fields,add,parser,text,item,fields,fields,to,array,new,string,fields,size,else,throw,new,elasticsearch,parse,exception,failed,to,parse,more,like,this,item,field,fields,must,be,an,array,else,if,match,current,field,name,parser,get,deprecation,handler,item,per,field,analyzer,term,vectors,request,read,per,field,analyzer,parser,map,else,if,routing,match,current,field,name,parser,get,deprecation,handler,item,routing,parser,text,else,if,version,match,current,field,name,parser,get,deprecation,handler,item,version,parser,long,value,else,if,match,current,field,name,parser,get,deprecation,handler,item,version,type,version,type,from,string,parser,text,else,throw,new,elasticsearch,parse,exception,failed,to,parse,more,like,this,item,unknown,field,current,field,name,if,item,id,null,item,doc,null,throw,new,elasticsearch,parse,exception,failed,to,parse,more,like,this,item,either,id,or,doc,can,be,specified,but,not,both,if,item,id,null,item,doc,null,throw,new,elasticsearch,parse,exception,failed,to,parse,more,like,this,item,neither,id,nor,doc,is,specified,return,item
MoreLikeThisQueryBuilder -> Item -> public Item(@Nullable String index, @Nullable String type, String id);1524684173;Constructor for a given item / document request__@param index the index where the document is located_@param type the type of the document_@param id and its id;public Item(@Nullable String index, @Nullable String type, String id) {_            if (id == null) {_                throw new IllegalArgumentException("Item requires id to be non-null")__            }_            this.index = index__            this.type = type__            this.id = id__        };constructor,for,a,given,item,document,request,param,index,the,index,where,the,document,is,located,param,type,the,type,of,the,document,param,id,and,its,id;public,item,nullable,string,index,nullable,string,type,string,id,if,id,null,throw,new,illegal,argument,exception,item,requires,id,to,be,non,null,this,index,index,this,type,type,this,id,id
MoreLikeThisQueryBuilder -> Item -> public Item(@Nullable String index, @Nullable String type, String id);1525334055;Constructor for a given item / document request__@param index the index where the document is located_@param type the type of the document_@param id and its id;public Item(@Nullable String index, @Nullable String type, String id) {_            if (id == null) {_                throw new IllegalArgumentException("Item requires id to be non-null")__            }_            this.index = index__            this.type = type__            this.id = id__        };constructor,for,a,given,item,document,request,param,index,the,index,where,the,document,is,located,param,type,the,type,of,the,document,param,id,and,its,id;public,item,nullable,string,index,nullable,string,type,string,id,if,id,null,throw,new,illegal,argument,exception,item,requires,id,to,be,non,null,this,index,index,this,type,type,this,id,id
MoreLikeThisQueryBuilder -> Item -> public Item(@Nullable String index, @Nullable String type, String id);1535139672;Constructor for a given item / document request__@param index the index where the document is located_@param type the type of the document_@param id and its id;public Item(@Nullable String index, @Nullable String type, String id) {_            if (id == null) {_                throw new IllegalArgumentException("Item requires id to be non-null")__            }_            this.index = index__            this.type = type__            this.id = id__        };constructor,for,a,given,item,document,request,param,index,the,index,where,the,document,is,located,param,type,the,type,of,the,document,param,id,and,its,id;public,item,nullable,string,index,nullable,string,type,string,id,if,id,null,throw,new,illegal,argument,exception,item,requires,id,to,be,non,null,this,index,index,this,type,type,this,id,id
MoreLikeThisQueryBuilder -> Item -> public Item(@Nullable String index, @Nullable String type, String id);1543237077;Constructor for a given item / document request__@param index the index where the document is located_@param type the type of the document_@param id and its id;public Item(@Nullable String index, @Nullable String type, String id) {_            if (id == null) {_                throw new IllegalArgumentException("Item requires id to be non-null")__            }_            this.index = index__            this.type = type__            this.id = id__        };constructor,for,a,given,item,document,request,param,index,the,index,where,the,document,is,located,param,type,the,type,of,the,document,param,id,and,its,id;public,item,nullable,string,index,nullable,string,type,string,id,if,id,null,throw,new,illegal,argument,exception,item,requires,id,to,be,non,null,this,index,index,this,type,type,this,id,id
MoreLikeThisQueryBuilder -> Item -> public Item(@Nullable String index, @Nullable String type, String id);1544177681;Constructor for a given item / document request__@param index the index where the document is located_@param type the type of the document_@param id and its id;public Item(@Nullable String index, @Nullable String type, String id) {_            if (id == null) {_                throw new IllegalArgumentException("Item requires id to be non-null")__            }_            this.index = index__            this.type = type__            this.id = id__        };constructor,for,a,given,item,document,request,param,index,the,index,where,the,document,is,located,param,type,the,type,of,the,document,param,id,and,its,id;public,item,nullable,string,index,nullable,string,type,string,id,if,id,null,throw,new,illegal,argument,exception,item,requires,id,to,be,non,null,this,index,index,this,type,type,this,id,id
MoreLikeThisQueryBuilder -> Item -> public Item perFieldAnalyzer(Map<String, String> perFieldAnalyzer);1524684173;Sets the analyzer(s) to use at any given field.;public Item perFieldAnalyzer(Map<String, String> perFieldAnalyzer) {_            this.perFieldAnalyzer = perFieldAnalyzer__            return this__        };sets,the,analyzer,s,to,use,at,any,given,field;public,item,per,field,analyzer,map,string,string,per,field,analyzer,this,per,field,analyzer,per,field,analyzer,return,this
MoreLikeThisQueryBuilder -> Item -> public Item perFieldAnalyzer(Map<String, String> perFieldAnalyzer);1525334055;Sets the analyzer(s) to use at any given field.;public Item perFieldAnalyzer(Map<String, String> perFieldAnalyzer) {_            this.perFieldAnalyzer = perFieldAnalyzer__            return this__        };sets,the,analyzer,s,to,use,at,any,given,field;public,item,per,field,analyzer,map,string,string,per,field,analyzer,this,per,field,analyzer,per,field,analyzer,return,this
MoreLikeThisQueryBuilder -> Item -> public Item perFieldAnalyzer(Map<String, String> perFieldAnalyzer);1535139672;Sets the analyzer(s) to use at any given field.;public Item perFieldAnalyzer(Map<String, String> perFieldAnalyzer) {_            this.perFieldAnalyzer = perFieldAnalyzer__            return this__        };sets,the,analyzer,s,to,use,at,any,given,field;public,item,per,field,analyzer,map,string,string,per,field,analyzer,this,per,field,analyzer,per,field,analyzer,return,this
MoreLikeThisQueryBuilder -> Item -> public Item perFieldAnalyzer(Map<String, String> perFieldAnalyzer);1543237077;Sets the analyzer(s) to use at any given field.;public Item perFieldAnalyzer(Map<String, String> perFieldAnalyzer) {_            this.perFieldAnalyzer = perFieldAnalyzer__            return this__        };sets,the,analyzer,s,to,use,at,any,given,field;public,item,per,field,analyzer,map,string,string,per,field,analyzer,this,per,field,analyzer,per,field,analyzer,return,this
MoreLikeThisQueryBuilder -> Item -> public Item perFieldAnalyzer(Map<String, String> perFieldAnalyzer);1544177681;Sets the analyzer(s) to use at any given field.;public Item perFieldAnalyzer(Map<String, String> perFieldAnalyzer) {_            this.perFieldAnalyzer = perFieldAnalyzer__            return this__        };sets,the,analyzer,s,to,use,at,any,given,field;public,item,per,field,analyzer,map,string,string,per,field,analyzer,this,per,field,analyzer,per,field,analyzer,return,this
MoreLikeThisQueryBuilder -> Item -> public Item perFieldAnalyzer(Map<String, String> perFieldAnalyzer);1547002001;Sets the analyzer(s) to use at any given field.;public Item perFieldAnalyzer(Map<String, String> perFieldAnalyzer) {_            this.perFieldAnalyzer = perFieldAnalyzer__            return this__        };sets,the,analyzer,s,to,use,at,any,given,field;public,item,per,field,analyzer,map,string,string,per,field,analyzer,this,per,field,analyzer,per,field,analyzer,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder unlike(String[] unlikeTexts);1524684173;Sets the text from which the terms should not be selected from.;public MoreLikeThisQueryBuilder unlike(String[] unlikeTexts) {_        this.unlikeTexts = Optional.ofNullable(unlikeTexts).orElse(Strings.EMPTY_ARRAY)__        return this__    };sets,the,text,from,which,the,terms,should,not,be,selected,from;public,more,like,this,query,builder,unlike,string,unlike,texts,this,unlike,texts,optional,of,nullable,unlike,texts,or,else,strings,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder unlike(String[] unlikeTexts);1525334055;Sets the text from which the terms should not be selected from.;public MoreLikeThisQueryBuilder unlike(String[] unlikeTexts) {_        this.unlikeTexts = Optional.ofNullable(unlikeTexts).orElse(Strings.EMPTY_ARRAY)__        return this__    };sets,the,text,from,which,the,terms,should,not,be,selected,from;public,more,like,this,query,builder,unlike,string,unlike,texts,this,unlike,texts,optional,of,nullable,unlike,texts,or,else,strings,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder unlike(String[] unlikeTexts);1535139672;Sets the text from which the terms should not be selected from.;public MoreLikeThisQueryBuilder unlike(String[] unlikeTexts) {_        this.unlikeTexts = Optional.ofNullable(unlikeTexts).orElse(Strings.EMPTY_ARRAY)__        return this__    };sets,the,text,from,which,the,terms,should,not,be,selected,from;public,more,like,this,query,builder,unlike,string,unlike,texts,this,unlike,texts,optional,of,nullable,unlike,texts,or,else,strings,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder unlike(String[] unlikeTexts);1543237077;Sets the text from which the terms should not be selected from.;public MoreLikeThisQueryBuilder unlike(String[] unlikeTexts) {_        this.unlikeTexts = Optional.ofNullable(unlikeTexts).orElse(Strings.EMPTY_ARRAY)__        return this__    };sets,the,text,from,which,the,terms,should,not,be,selected,from;public,more,like,this,query,builder,unlike,string,unlike,texts,this,unlike,texts,optional,of,nullable,unlike,texts,or,else,strings,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder unlike(String[] unlikeTexts);1544177681;Sets the text from which the terms should not be selected from.;public MoreLikeThisQueryBuilder unlike(String[] unlikeTexts) {_        this.unlikeTexts = Optional.ofNullable(unlikeTexts).orElse(Strings.EMPTY_ARRAY)__        return this__    };sets,the,text,from,which,the,terms,should,not,be,selected,from;public,more,like,this,query,builder,unlike,string,unlike,texts,this,unlike,texts,optional,of,nullable,unlike,texts,or,else,strings,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder unlike(String[] unlikeTexts);1547002001;Sets the text from which the terms should not be selected from.;public MoreLikeThisQueryBuilder unlike(String[] unlikeTexts) {_        this.unlikeTexts = Optional.ofNullable(unlikeTexts).orElse(Strings.EMPTY_ARRAY)__        return this__    };sets,the,text,from,which,the,terms,should,not,be,selected,from;public,more,like,this,query,builder,unlike,string,unlike,texts,this,unlike,texts,optional,of,nullable,unlike,texts,or,else,strings,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder minDocFreq(int minDocFreq);1524684173;Sets the frequency at which words will be ignored which do not occur in at least this_many docs. Defaults to <tt>5</tt>.;public MoreLikeThisQueryBuilder minDocFreq(int minDocFreq) {_        this.minDocFreq = minDocFreq__        return this__    };sets,the,frequency,at,which,words,will,be,ignored,which,do,not,occur,in,at,least,this,many,docs,defaults,to,tt,5,tt;public,more,like,this,query,builder,min,doc,freq,int,min,doc,freq,this,min,doc,freq,min,doc,freq,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder minDocFreq(int minDocFreq);1525334055;Sets the frequency at which words will be ignored which do not occur in at least this_many docs. Defaults to {@code 5}.;public MoreLikeThisQueryBuilder minDocFreq(int minDocFreq) {_        this.minDocFreq = minDocFreq__        return this__    };sets,the,frequency,at,which,words,will,be,ignored,which,do,not,occur,in,at,least,this,many,docs,defaults,to,code,5;public,more,like,this,query,builder,min,doc,freq,int,min,doc,freq,this,min,doc,freq,min,doc,freq,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder minDocFreq(int minDocFreq);1535139672;Sets the frequency at which words will be ignored which do not occur in at least this_many docs. Defaults to {@code 5}.;public MoreLikeThisQueryBuilder minDocFreq(int minDocFreq) {_        this.minDocFreq = minDocFreq__        return this__    };sets,the,frequency,at,which,words,will,be,ignored,which,do,not,occur,in,at,least,this,many,docs,defaults,to,code,5;public,more,like,this,query,builder,min,doc,freq,int,min,doc,freq,this,min,doc,freq,min,doc,freq,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder minDocFreq(int minDocFreq);1543237077;Sets the frequency at which words will be ignored which do not occur in at least this_many docs. Defaults to {@code 5}.;public MoreLikeThisQueryBuilder minDocFreq(int minDocFreq) {_        this.minDocFreq = minDocFreq__        return this__    };sets,the,frequency,at,which,words,will,be,ignored,which,do,not,occur,in,at,least,this,many,docs,defaults,to,code,5;public,more,like,this,query,builder,min,doc,freq,int,min,doc,freq,this,min,doc,freq,min,doc,freq,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder minDocFreq(int minDocFreq);1544177681;Sets the frequency at which words will be ignored which do not occur in at least this_many docs. Defaults to {@code 5}.;public MoreLikeThisQueryBuilder minDocFreq(int minDocFreq) {_        this.minDocFreq = minDocFreq__        return this__    };sets,the,frequency,at,which,words,will,be,ignored,which,do,not,occur,in,at,least,this,many,docs,defaults,to,code,5;public,more,like,this,query,builder,min,doc,freq,int,min,doc,freq,this,min,doc,freq,min,doc,freq,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder minDocFreq(int minDocFreq);1547002001;Sets the frequency at which words will be ignored which do not occur in at least this_many docs. Defaults to {@code 5}.;public MoreLikeThisQueryBuilder minDocFreq(int minDocFreq) {_        this.minDocFreq = minDocFreq__        return this__    };sets,the,frequency,at,which,words,will,be,ignored,which,do,not,occur,in,at,least,this,many,docs,defaults,to,code,5;public,more,like,this,query,builder,min,doc,freq,int,min,doc,freq,this,min,doc,freq,min,doc,freq,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder include(boolean include);1524684173;Whether to include the input documents. Defaults to <tt>false</tt>;public MoreLikeThisQueryBuilder include(boolean include) {_        this.include = include__        return this__    };whether,to,include,the,input,documents,defaults,to,tt,false,tt;public,more,like,this,query,builder,include,boolean,include,this,include,include,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder include(boolean include);1525334055;Whether to include the input documents. Defaults to {@code false};public MoreLikeThisQueryBuilder include(boolean include) {_        this.include = include__        return this__    };whether,to,include,the,input,documents,defaults,to,code,false;public,more,like,this,query,builder,include,boolean,include,this,include,include,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder include(boolean include);1535139672;Whether to include the input documents. Defaults to {@code false};public MoreLikeThisQueryBuilder include(boolean include) {_        this.include = include__        return this__    };whether,to,include,the,input,documents,defaults,to,code,false;public,more,like,this,query,builder,include,boolean,include,this,include,include,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder include(boolean include);1543237077;Whether to include the input documents. Defaults to {@code false};public MoreLikeThisQueryBuilder include(boolean include) {_        this.include = include__        return this__    };whether,to,include,the,input,documents,defaults,to,code,false;public,more,like,this,query,builder,include,boolean,include,this,include,include,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder include(boolean include);1544177681;Whether to include the input documents. Defaults to {@code false};public MoreLikeThisQueryBuilder include(boolean include) {_        this.include = include__        return this__    };whether,to,include,the,input,documents,defaults,to,code,false;public,more,like,this,query,builder,include,boolean,include,this,include,include,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder include(boolean include);1547002001;Whether to include the input documents. Defaults to {@code false};public MoreLikeThisQueryBuilder include(boolean include) {_        this.include = include__        return this__    };whether,to,include,the,input,documents,defaults,to,code,false;public,more,like,this,query,builder,include,boolean,include,this,include,include,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder(String[] likeTexts, Item[] likeItems);1524684173;Constructs a new more like this query which uses the default search field._@param likeTexts the text to use when generating the 'More Like This' query._@param likeItems the documents to use when generating the 'More Like This' query.;public MoreLikeThisQueryBuilder(String[] likeTexts, Item[] likeItems) {_        this(null, likeTexts, likeItems)__    };constructs,a,new,more,like,this,query,which,uses,the,default,search,field,param,like,texts,the,text,to,use,when,generating,the,more,like,this,query,param,like,items,the,documents,to,use,when,generating,the,more,like,this,query;public,more,like,this,query,builder,string,like,texts,item,like,items,this,null,like,texts,like,items
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder(String[] likeTexts, Item[] likeItems);1525334055;Constructs a new more like this query which uses the default search field._@param likeTexts the text to use when generating the 'More Like This' query._@param likeItems the documents to use when generating the 'More Like This' query.;public MoreLikeThisQueryBuilder(String[] likeTexts, Item[] likeItems) {_        this(null, likeTexts, likeItems)__    };constructs,a,new,more,like,this,query,which,uses,the,default,search,field,param,like,texts,the,text,to,use,when,generating,the,more,like,this,query,param,like,items,the,documents,to,use,when,generating,the,more,like,this,query;public,more,like,this,query,builder,string,like,texts,item,like,items,this,null,like,texts,like,items
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder(String[] likeTexts, Item[] likeItems);1535139672;Constructs a new more like this query which uses the default search field._@param likeTexts the text to use when generating the 'More Like This' query._@param likeItems the documents to use when generating the 'More Like This' query.;public MoreLikeThisQueryBuilder(String[] likeTexts, Item[] likeItems) {_        this(null, likeTexts, likeItems)__    };constructs,a,new,more,like,this,query,which,uses,the,default,search,field,param,like,texts,the,text,to,use,when,generating,the,more,like,this,query,param,like,items,the,documents,to,use,when,generating,the,more,like,this,query;public,more,like,this,query,builder,string,like,texts,item,like,items,this,null,like,texts,like,items
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder(String[] likeTexts, Item[] likeItems);1543237077;Constructs a new more like this query which uses the default search field._@param likeTexts the text to use when generating the 'More Like This' query._@param likeItems the documents to use when generating the 'More Like This' query.;public MoreLikeThisQueryBuilder(String[] likeTexts, Item[] likeItems) {_        this(null, likeTexts, likeItems)__    };constructs,a,new,more,like,this,query,which,uses,the,default,search,field,param,like,texts,the,text,to,use,when,generating,the,more,like,this,query,param,like,items,the,documents,to,use,when,generating,the,more,like,this,query;public,more,like,this,query,builder,string,like,texts,item,like,items,this,null,like,texts,like,items
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder(String[] likeTexts, Item[] likeItems);1544177681;Constructs a new more like this query which uses the default search field._@param likeTexts the text to use when generating the 'More Like This' query._@param likeItems the documents to use when generating the 'More Like This' query.;public MoreLikeThisQueryBuilder(String[] likeTexts, Item[] likeItems) {_        this(null, likeTexts, likeItems)__    };constructs,a,new,more,like,this,query,which,uses,the,default,search,field,param,like,texts,the,text,to,use,when,generating,the,more,like,this,query,param,like,items,the,documents,to,use,when,generating,the,more,like,this,query;public,more,like,this,query,builder,string,like,texts,item,like,items,this,null,like,texts,like,items
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder(String[] likeTexts, Item[] likeItems);1547002001;Constructs a new more like this query which uses the default search field._@param likeTexts the text to use when generating the 'More Like This' query._@param likeItems the documents to use when generating the 'More Like This' query.;public MoreLikeThisQueryBuilder(String[] likeTexts, Item[] likeItems) {_        this(null, likeTexts, likeItems)__    };constructs,a,new,more,like,this,query,which,uses,the,default,search,field,param,like,texts,the,text,to,use,when,generating,the,more,like,this,query,param,like,items,the,documents,to,use,when,generating,the,more,like,this,query;public,more,like,this,query,builder,string,like,texts,item,like,items,this,null,like,texts,like,items
MoreLikeThisQueryBuilder -> Item -> public Item(@Nullable String index, @Nullable String type, XContentBuilder doc);1524684173;Constructor for an artificial document request, that is not present in the index.__@param index the index to be used for parsing the doc_@param type the type to be used for parsing the doc_@param doc the document specification;public Item(@Nullable String index, @Nullable String type, XContentBuilder doc) {_            if (doc == null) {_                throw new IllegalArgumentException("Item requires doc to be non-null")__            }_            this.index = index__            this.type = type__            this.doc = BytesReference.bytes(doc)__            this.xContentType = doc.contentType()__        };constructor,for,an,artificial,document,request,that,is,not,present,in,the,index,param,index,the,index,to,be,used,for,parsing,the,doc,param,type,the,type,to,be,used,for,parsing,the,doc,param,doc,the,document,specification;public,item,nullable,string,index,nullable,string,type,xcontent,builder,doc,if,doc,null,throw,new,illegal,argument,exception,item,requires,doc,to,be,non,null,this,index,index,this,type,type,this,doc,bytes,reference,bytes,doc,this,x,content,type,doc,content,type
MoreLikeThisQueryBuilder -> Item -> public Item(@Nullable String index, @Nullable String type, XContentBuilder doc);1525334055;Constructor for an artificial document request, that is not present in the index.__@param index the index to be used for parsing the doc_@param type the type to be used for parsing the doc_@param doc the document specification;public Item(@Nullable String index, @Nullable String type, XContentBuilder doc) {_            if (doc == null) {_                throw new IllegalArgumentException("Item requires doc to be non-null")__            }_            this.index = index__            this.type = type__            this.doc = BytesReference.bytes(doc)__            this.xContentType = doc.contentType()__        };constructor,for,an,artificial,document,request,that,is,not,present,in,the,index,param,index,the,index,to,be,used,for,parsing,the,doc,param,type,the,type,to,be,used,for,parsing,the,doc,param,doc,the,document,specification;public,item,nullable,string,index,nullable,string,type,xcontent,builder,doc,if,doc,null,throw,new,illegal,argument,exception,item,requires,doc,to,be,non,null,this,index,index,this,type,type,this,doc,bytes,reference,bytes,doc,this,x,content,type,doc,content,type
MoreLikeThisQueryBuilder -> Item -> public Item(@Nullable String index, @Nullable String type, XContentBuilder doc);1535139672;Constructor for an artificial document request, that is not present in the index.__@param index the index to be used for parsing the doc_@param type the type to be used for parsing the doc_@param doc the document specification;public Item(@Nullable String index, @Nullable String type, XContentBuilder doc) {_            if (doc == null) {_                throw new IllegalArgumentException("Item requires doc to be non-null")__            }_            this.index = index__            this.type = type__            this.doc = BytesReference.bytes(doc)__            this.xContentType = doc.contentType()__        };constructor,for,an,artificial,document,request,that,is,not,present,in,the,index,param,index,the,index,to,be,used,for,parsing,the,doc,param,type,the,type,to,be,used,for,parsing,the,doc,param,doc,the,document,specification;public,item,nullable,string,index,nullable,string,type,xcontent,builder,doc,if,doc,null,throw,new,illegal,argument,exception,item,requires,doc,to,be,non,null,this,index,index,this,type,type,this,doc,bytes,reference,bytes,doc,this,x,content,type,doc,content,type
MoreLikeThisQueryBuilder -> Item -> public Item(@Nullable String index, @Nullable String type, XContentBuilder doc);1543237077;Constructor for an artificial document request, that is not present in the index.__@param index the index to be used for parsing the doc_@param type the type to be used for parsing the doc_@param doc the document specification;public Item(@Nullable String index, @Nullable String type, XContentBuilder doc) {_            if (doc == null) {_                throw new IllegalArgumentException("Item requires doc to be non-null")__            }_            this.index = index__            this.type = type__            this.doc = BytesReference.bytes(doc)__            this.xContentType = doc.contentType()__        };constructor,for,an,artificial,document,request,that,is,not,present,in,the,index,param,index,the,index,to,be,used,for,parsing,the,doc,param,type,the,type,to,be,used,for,parsing,the,doc,param,doc,the,document,specification;public,item,nullable,string,index,nullable,string,type,xcontent,builder,doc,if,doc,null,throw,new,illegal,argument,exception,item,requires,doc,to,be,non,null,this,index,index,this,type,type,this,doc,bytes,reference,bytes,doc,this,x,content,type,doc,content,type
MoreLikeThisQueryBuilder -> Item -> public Item(@Nullable String index, @Nullable String type, XContentBuilder doc);1544177681;Constructor for an artificial document request, that is not present in the index.__@param index the index to be used for parsing the doc_@param type the type to be used for parsing the doc_@param doc the document specification;public Item(@Nullable String index, @Nullable String type, XContentBuilder doc) {_            if (doc == null) {_                throw new IllegalArgumentException("Item requires doc to be non-null")__            }_            this.index = index__            this.type = type__            this.doc = BytesReference.bytes(doc)__            this.xContentType = doc.contentType()__        };constructor,for,an,artificial,document,request,that,is,not,present,in,the,index,param,index,the,index,to,be,used,for,parsing,the,doc,param,type,the,type,to,be,used,for,parsing,the,doc,param,doc,the,document,specification;public,item,nullable,string,index,nullable,string,type,xcontent,builder,doc,if,doc,null,throw,new,illegal,argument,exception,item,requires,doc,to,be,non,null,this,index,index,this,type,type,this,doc,bytes,reference,bytes,doc,this,x,content,type,doc,content,type
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder stopWords(String... stopWords);1524684173;Set the set of stopwords._<p>_Any word in this set is considered "uninteresting" and ignored. Even if your Analyzer allows stopwords, you_might want to tell the MoreLikeThis code to ignore them, as for the purposes of document similarity it seems_reasonable to assume that "a stop word is never interesting".;public MoreLikeThisQueryBuilder stopWords(String... stopWords) {_        this.stopWords = stopWords__        return this__    };set,the,set,of,stopwords,p,any,word,in,this,set,is,considered,uninteresting,and,ignored,even,if,your,analyzer,allows,stopwords,you,might,want,to,tell,the,more,like,this,code,to,ignore,them,as,for,the,purposes,of,document,similarity,it,seems,reasonable,to,assume,that,a,stop,word,is,never,interesting;public,more,like,this,query,builder,stop,words,string,stop,words,this,stop,words,stop,words,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder stopWords(String... stopWords);1525334055;Set the set of stopwords._<p>_Any word in this set is considered "uninteresting" and ignored. Even if your Analyzer allows stopwords, you_might want to tell the MoreLikeThis code to ignore them, as for the purposes of document similarity it seems_reasonable to assume that "a stop word is never interesting".;public MoreLikeThisQueryBuilder stopWords(String... stopWords) {_        this.stopWords = stopWords__        return this__    };set,the,set,of,stopwords,p,any,word,in,this,set,is,considered,uninteresting,and,ignored,even,if,your,analyzer,allows,stopwords,you,might,want,to,tell,the,more,like,this,code,to,ignore,them,as,for,the,purposes,of,document,similarity,it,seems,reasonable,to,assume,that,a,stop,word,is,never,interesting;public,more,like,this,query,builder,stop,words,string,stop,words,this,stop,words,stop,words,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder stopWords(String... stopWords);1535139672;Set the set of stopwords._<p>_Any word in this set is considered "uninteresting" and ignored. Even if your Analyzer allows stopwords, you_might want to tell the MoreLikeThis code to ignore them, as for the purposes of document similarity it seems_reasonable to assume that "a stop word is never interesting".;public MoreLikeThisQueryBuilder stopWords(String... stopWords) {_        this.stopWords = stopWords__        return this__    };set,the,set,of,stopwords,p,any,word,in,this,set,is,considered,uninteresting,and,ignored,even,if,your,analyzer,allows,stopwords,you,might,want,to,tell,the,more,like,this,code,to,ignore,them,as,for,the,purposes,of,document,similarity,it,seems,reasonable,to,assume,that,a,stop,word,is,never,interesting;public,more,like,this,query,builder,stop,words,string,stop,words,this,stop,words,stop,words,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder stopWords(String... stopWords);1543237077;Set the set of stopwords._<p>_Any word in this set is considered "uninteresting" and ignored. Even if your Analyzer allows stopwords, you_might want to tell the MoreLikeThis code to ignore them, as for the purposes of document similarity it seems_reasonable to assume that "a stop word is never interesting".;public MoreLikeThisQueryBuilder stopWords(String... stopWords) {_        this.stopWords = stopWords__        return this__    };set,the,set,of,stopwords,p,any,word,in,this,set,is,considered,uninteresting,and,ignored,even,if,your,analyzer,allows,stopwords,you,might,want,to,tell,the,more,like,this,code,to,ignore,them,as,for,the,purposes,of,document,similarity,it,seems,reasonable,to,assume,that,a,stop,word,is,never,interesting;public,more,like,this,query,builder,stop,words,string,stop,words,this,stop,words,stop,words,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder stopWords(String... stopWords);1544177681;Set the set of stopwords._<p>_Any word in this set is considered "uninteresting" and ignored. Even if your Analyzer allows stopwords, you_might want to tell the MoreLikeThis code to ignore them, as for the purposes of document similarity it seems_reasonable to assume that "a stop word is never interesting".;public MoreLikeThisQueryBuilder stopWords(String... stopWords) {_        this.stopWords = stopWords__        return this__    };set,the,set,of,stopwords,p,any,word,in,this,set,is,considered,uninteresting,and,ignored,even,if,your,analyzer,allows,stopwords,you,might,want,to,tell,the,more,like,this,code,to,ignore,them,as,for,the,purposes,of,document,similarity,it,seems,reasonable,to,assume,that,a,stop,word,is,never,interesting;public,more,like,this,query,builder,stop,words,string,stop,words,this,stop,words,stop,words,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder stopWords(String... stopWords);1547002001;Set the set of stopwords._<p>_Any word in this set is considered "uninteresting" and ignored. Even if your Analyzer allows stopwords, you_might want to tell the MoreLikeThis code to ignore them, as for the purposes of document similarity it seems_reasonable to assume that "a stop word is never interesting".;public MoreLikeThisQueryBuilder stopWords(String... stopWords) {_        this.stopWords = stopWords__        return this__    };set,the,set,of,stopwords,p,any,word,in,this,set,is,considered,uninteresting,and,ignored,even,if,your,analyzer,allows,stopwords,you,might,want,to,tell,the,more,like,this,code,to,ignore,them,as,for,the,purposes,of,document,similarity,it,seems,reasonable,to,assume,that,a,stop,word,is,never,interesting;public,more,like,this,query,builder,stop,words,string,stop,words,this,stop,words,stop,words,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder analyzer(String analyzer);1524684173;The analyzer that will be used to analyze the text. Defaults to the analyzer associated with the field.;public MoreLikeThisQueryBuilder analyzer(String analyzer) {_        this.analyzer = analyzer__        return this__    };the,analyzer,that,will,be,used,to,analyze,the,text,defaults,to,the,analyzer,associated,with,the,field;public,more,like,this,query,builder,analyzer,string,analyzer,this,analyzer,analyzer,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder analyzer(String analyzer);1525334055;The analyzer that will be used to analyze the text. Defaults to the analyzer associated with the field.;public MoreLikeThisQueryBuilder analyzer(String analyzer) {_        this.analyzer = analyzer__        return this__    };the,analyzer,that,will,be,used,to,analyze,the,text,defaults,to,the,analyzer,associated,with,the,field;public,more,like,this,query,builder,analyzer,string,analyzer,this,analyzer,analyzer,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder analyzer(String analyzer);1535139672;The analyzer that will be used to analyze the text. Defaults to the analyzer associated with the field.;public MoreLikeThisQueryBuilder analyzer(String analyzer) {_        this.analyzer = analyzer__        return this__    };the,analyzer,that,will,be,used,to,analyze,the,text,defaults,to,the,analyzer,associated,with,the,field;public,more,like,this,query,builder,analyzer,string,analyzer,this,analyzer,analyzer,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder analyzer(String analyzer);1543237077;The analyzer that will be used to analyze the text. Defaults to the analyzer associated with the field.;public MoreLikeThisQueryBuilder analyzer(String analyzer) {_        this.analyzer = analyzer__        return this__    };the,analyzer,that,will,be,used,to,analyze,the,text,defaults,to,the,analyzer,associated,with,the,field;public,more,like,this,query,builder,analyzer,string,analyzer,this,analyzer,analyzer,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder analyzer(String analyzer);1544177681;The analyzer that will be used to analyze the text. Defaults to the analyzer associated with the field.;public MoreLikeThisQueryBuilder analyzer(String analyzer) {_        this.analyzer = analyzer__        return this__    };the,analyzer,that,will,be,used,to,analyze,the,text,defaults,to,the,analyzer,associated,with,the,field;public,more,like,this,query,builder,analyzer,string,analyzer,this,analyzer,analyzer,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder analyzer(String analyzer);1547002001;The analyzer that will be used to analyze the text. Defaults to the analyzer associated with the field.;public MoreLikeThisQueryBuilder analyzer(String analyzer) {_        this.analyzer = analyzer__        return this__    };the,analyzer,that,will,be,used,to,analyze,the,text,defaults,to,the,analyzer,associated,with,the,field;public,more,like,this,query,builder,analyzer,string,analyzer,this,analyzer,analyzer,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder minWordLength(int minWordLength);1524684173;Sets the minimum word length below which words will be ignored. Defaults_to <tt>0</tt>.;public MoreLikeThisQueryBuilder minWordLength(int minWordLength) {_        this.minWordLength = minWordLength__        return this__    };sets,the,minimum,word,length,below,which,words,will,be,ignored,defaults,to,tt,0,tt;public,more,like,this,query,builder,min,word,length,int,min,word,length,this,min,word,length,min,word,length,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder minWordLength(int minWordLength);1525334055;Sets the minimum word length below which words will be ignored. Defaults_to {@code 0}.;public MoreLikeThisQueryBuilder minWordLength(int minWordLength) {_        this.minWordLength = minWordLength__        return this__    };sets,the,minimum,word,length,below,which,words,will,be,ignored,defaults,to,code,0;public,more,like,this,query,builder,min,word,length,int,min,word,length,this,min,word,length,min,word,length,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder minWordLength(int minWordLength);1535139672;Sets the minimum word length below which words will be ignored. Defaults_to {@code 0}.;public MoreLikeThisQueryBuilder minWordLength(int minWordLength) {_        this.minWordLength = minWordLength__        return this__    };sets,the,minimum,word,length,below,which,words,will,be,ignored,defaults,to,code,0;public,more,like,this,query,builder,min,word,length,int,min,word,length,this,min,word,length,min,word,length,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder minWordLength(int minWordLength);1543237077;Sets the minimum word length below which words will be ignored. Defaults_to {@code 0}.;public MoreLikeThisQueryBuilder minWordLength(int minWordLength) {_        this.minWordLength = minWordLength__        return this__    };sets,the,minimum,word,length,below,which,words,will,be,ignored,defaults,to,code,0;public,more,like,this,query,builder,min,word,length,int,min,word,length,this,min,word,length,min,word,length,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder minWordLength(int minWordLength);1544177681;Sets the minimum word length below which words will be ignored. Defaults_to {@code 0}.;public MoreLikeThisQueryBuilder minWordLength(int minWordLength) {_        this.minWordLength = minWordLength__        return this__    };sets,the,minimum,word,length,below,which,words,will,be,ignored,defaults,to,code,0;public,more,like,this,query,builder,min,word,length,int,min,word,length,this,min,word,length,min,word,length,return,this
MoreLikeThisQueryBuilder -> public MoreLikeThisQueryBuilder minWordLength(int minWordLength);1547002001;Sets the minimum word length below which words will be ignored. Defaults_to {@code 0}.;public MoreLikeThisQueryBuilder minWordLength(int minWordLength) {_        this.minWordLength = minWordLength__        return this__    };sets,the,minimum,word,length,below,which,words,will,be,ignored,defaults,to,code,0;public,more,like,this,query,builder,min,word,length,int,min,word,length,this,min,word,length,min,word,length,return,this
MoreLikeThisQueryBuilder -> @Deprecated     public static Item[] ids(String... ids);1524684173;Converts an array of String ids to and Item[]._@param ids the ids to convert_@return the new items array_@deprecated construct the items array externally and use it in the constructor / setter;@Deprecated_    public static Item[] ids(String... ids) {_        Item[] items = new Item[ids.length]__        for (int i = 0_ i < items.length_ i++) {_            items[i] = new Item(null, null, ids[i])__        }_        return items__    };converts,an,array,of,string,ids,to,and,item,param,ids,the,ids,to,convert,return,the,new,items,array,deprecated,construct,the,items,array,externally,and,use,it,in,the,constructor,setter;deprecated,public,static,item,ids,string,ids,item,items,new,item,ids,length,for,int,i,0,i,items,length,i,items,i,new,item,null,null,ids,i,return,items
MoreLikeThisQueryBuilder -> @Deprecated     public static Item[] ids(String... ids);1525334055;Converts an array of String ids to and Item[]._@param ids the ids to convert_@return the new items array_@deprecated construct the items array externally and use it in the constructor / setter;@Deprecated_    public static Item[] ids(String... ids) {_        Item[] items = new Item[ids.length]__        for (int i = 0_ i < items.length_ i++) {_            items[i] = new Item(null, null, ids[i])__        }_        return items__    };converts,an,array,of,string,ids,to,and,item,param,ids,the,ids,to,convert,return,the,new,items,array,deprecated,construct,the,items,array,externally,and,use,it,in,the,constructor,setter;deprecated,public,static,item,ids,string,ids,item,items,new,item,ids,length,for,int,i,0,i,items,length,i,items,i,new,item,null,null,ids,i,return,items
MoreLikeThisQueryBuilder -> @Deprecated     public static Item[] ids(String... ids);1535139672;Converts an array of String ids to and Item[]._@param ids the ids to convert_@return the new items array_@deprecated construct the items array externally and use it in the constructor / setter;@Deprecated_    public static Item[] ids(String... ids) {_        Item[] items = new Item[ids.length]__        for (int i = 0_ i < items.length_ i++) {_            items[i] = new Item(null, null, ids[i])__        }_        return items__    };converts,an,array,of,string,ids,to,and,item,param,ids,the,ids,to,convert,return,the,new,items,array,deprecated,construct,the,items,array,externally,and,use,it,in,the,constructor,setter;deprecated,public,static,item,ids,string,ids,item,items,new,item,ids,length,for,int,i,0,i,items,length,i,items,i,new,item,null,null,ids,i,return,items
MoreLikeThisQueryBuilder -> @Deprecated     public static Item[] ids(String... ids);1543237077;Converts an array of String ids to and Item[]._@param ids the ids to convert_@return the new items array_@deprecated construct the items array externally and use it in the constructor / setter;@Deprecated_    public static Item[] ids(String... ids) {_        Item[] items = new Item[ids.length]__        for (int i = 0_ i < items.length_ i++) {_            items[i] = new Item(null, null, ids[i])__        }_        return items__    };converts,an,array,of,string,ids,to,and,item,param,ids,the,ids,to,convert,return,the,new,items,array,deprecated,construct,the,items,array,externally,and,use,it,in,the,constructor,setter;deprecated,public,static,item,ids,string,ids,item,items,new,item,ids,length,for,int,i,0,i,items,length,i,items,i,new,item,null,null,ids,i,return,items
