# id;timestamp;commentText;codeText;commentWords;codeWords
ChecksumBlobStoreFormat -> public ChecksumBlobStoreFormat(String codec, String blobNameFormat, CheckedFunction<XContentParser, T, IOException> reader,                                    NamedXContentRegistry namedXContentRegistry, boolean compress);1524684173;@param codec          codec name_@param blobNameFormat format of the blobname in {@link String#format} format_@param reader         prototype object that can deserialize T from XContent_@param compress       true if the content should be compressed;public ChecksumBlobStoreFormat(String codec, String blobNameFormat, CheckedFunction<XContentParser, T, IOException> reader,_                                   NamedXContentRegistry namedXContentRegistry, boolean compress) {_        this(codec, blobNameFormat, reader, namedXContentRegistry, compress, DEFAULT_X_CONTENT_TYPE)__    };param,codec,codec,name,param,blob,name,format,format,of,the,blobname,in,link,string,format,format,param,reader,prototype,object,that,can,deserialize,t,from,xcontent,param,compress,true,if,the,content,should,be,compressed;public,checksum,blob,store,format,string,codec,string,blob,name,format,checked,function,xcontent,parser,t,ioexception,reader,named,xcontent,registry,named,xcontent,registry,boolean,compress,this,codec,blob,name,format,reader,named,xcontent,registry,compress
ChecksumBlobStoreFormat -> public ChecksumBlobStoreFormat(String codec, String blobNameFormat, CheckedFunction<XContentParser, T, IOException> reader,                                    NamedXContentRegistry namedXContentRegistry, boolean compress);1528211342;@param codec          codec name_@param blobNameFormat format of the blobname in {@link String#format} format_@param reader         prototype object that can deserialize T from XContent_@param compress       true if the content should be compressed;public ChecksumBlobStoreFormat(String codec, String blobNameFormat, CheckedFunction<XContentParser, T, IOException> reader,_                                   NamedXContentRegistry namedXContentRegistry, boolean compress) {_        this(codec, blobNameFormat, reader, namedXContentRegistry, compress, DEFAULT_X_CONTENT_TYPE)__    };param,codec,codec,name,param,blob,name,format,format,of,the,blobname,in,link,string,format,format,param,reader,prototype,object,that,can,deserialize,t,from,xcontent,param,compress,true,if,the,content,should,be,compressed;public,checksum,blob,store,format,string,codec,string,blob,name,format,checked,function,xcontent,parser,t,ioexception,reader,named,xcontent,registry,named,xcontent,registry,boolean,compress,this,codec,blob,name,format,reader,named,xcontent,registry,compress
ChecksumBlobStoreFormat -> public ChecksumBlobStoreFormat(String codec, String blobNameFormat, CheckedFunction<XContentParser, T, IOException> reader,                                    NamedXContentRegistry namedXContentRegistry, boolean compress);1528762805;@param codec          codec name_@param blobNameFormat format of the blobname in {@link String#format} format_@param reader         prototype object that can deserialize T from XContent_@param compress       true if the content should be compressed;public ChecksumBlobStoreFormat(String codec, String blobNameFormat, CheckedFunction<XContentParser, T, IOException> reader,_                                   NamedXContentRegistry namedXContentRegistry, boolean compress) {_        this(codec, blobNameFormat, reader, namedXContentRegistry, compress, DEFAULT_X_CONTENT_TYPE)__    };param,codec,codec,name,param,blob,name,format,format,of,the,blobname,in,link,string,format,format,param,reader,prototype,object,that,can,deserialize,t,from,xcontent,param,compress,true,if,the,content,should,be,compressed;public,checksum,blob,store,format,string,codec,string,blob,name,format,checked,function,xcontent,parser,t,ioexception,reader,named,xcontent,registry,named,xcontent,registry,boolean,compress,this,codec,blob,name,format,reader,named,xcontent,registry,compress
ChecksumBlobStoreFormat -> public ChecksumBlobStoreFormat(String codec, String blobNameFormat, CheckedFunction<XContentParser, T, IOException> reader,                                    NamedXContentRegistry namedXContentRegistry, boolean compress);1531179852;@param codec          codec name_@param blobNameFormat format of the blobname in {@link String#format} format_@param reader         prototype object that can deserialize T from XContent_@param compress       true if the content should be compressed;public ChecksumBlobStoreFormat(String codec, String blobNameFormat, CheckedFunction<XContentParser, T, IOException> reader,_                                   NamedXContentRegistry namedXContentRegistry, boolean compress) {_        this(codec, blobNameFormat, reader, namedXContentRegistry, compress, DEFAULT_X_CONTENT_TYPE)__    };param,codec,codec,name,param,blob,name,format,format,of,the,blobname,in,link,string,format,format,param,reader,prototype,object,that,can,deserialize,t,from,xcontent,param,compress,true,if,the,content,should,be,compressed;public,checksum,blob,store,format,string,codec,string,blob,name,format,checked,function,xcontent,parser,t,ioexception,reader,named,xcontent,registry,named,xcontent,registry,boolean,compress,this,codec,blob,name,format,reader,named,xcontent,registry,compress
ChecksumBlobStoreFormat -> public T readBlob(BlobContainer blobContainer, String blobName) throws IOException;1524684173;Reads blob with specified name without resolving the blobName using using {@link #blobName} method.__@param blobContainer blob container_@param blobName blob name;public T readBlob(BlobContainer blobContainer, String blobName) throws IOException {_        try (InputStream inputStream = blobContainer.readBlob(blobName)) {_            ByteArrayOutputStream out = new ByteArrayOutputStream()__            Streams.copy(inputStream, out)__            final byte[] bytes = out.toByteArray()__            final String resourceDesc = "ChecksumBlobStoreFormat.readBlob(blob=\"" + blobName + "\")"__            try (ByteArrayIndexInput indexInput = new ByteArrayIndexInput(resourceDesc, bytes)) {_                CodecUtil.checksumEntireFile(indexInput)__                CodecUtil.checkHeader(indexInput, codec, VERSION, VERSION)__                long filePointer = indexInput.getFilePointer()__                long contentSize = indexInput.length() - CodecUtil.footerLength() - filePointer__                BytesReference bytesReference = new BytesArray(bytes, (int) filePointer, (int) contentSize)__                return read(bytesReference)__            } catch (CorruptIndexException | IndexFormatTooOldException | IndexFormatTooNewException ex) {_                _                throw new CorruptStateException(ex)__            }_        }_    };reads,blob,with,specified,name,without,resolving,the,blob,name,using,using,link,blob,name,method,param,blob,container,blob,container,param,blob,name,blob,name;public,t,read,blob,blob,container,blob,container,string,blob,name,throws,ioexception,try,input,stream,input,stream,blob,container,read,blob,blob,name,byte,array,output,stream,out,new,byte,array,output,stream,streams,copy,input,stream,out,final,byte,bytes,out,to,byte,array,final,string,resource,desc,checksum,blob,store,format,read,blob,blob,blob,name,try,byte,array,index,input,index,input,new,byte,array,index,input,resource,desc,bytes,codec,util,checksum,entire,file,index,input,codec,util,check,header,index,input,codec,version,version,long,file,pointer,index,input,get,file,pointer,long,content,size,index,input,length,codec,util,footer,length,file,pointer,bytes,reference,bytes,reference,new,bytes,array,bytes,int,file,pointer,int,content,size,return,read,bytes,reference,catch,corrupt,index,exception,index,format,too,old,exception,index,format,too,new,exception,ex,throw,new,corrupt,state,exception,ex
ChecksumBlobStoreFormat -> public T readBlob(BlobContainer blobContainer, String blobName) throws IOException;1528211342;Reads blob with specified name without resolving the blobName using using {@link #blobName} method.__@param blobContainer blob container_@param blobName blob name;public T readBlob(BlobContainer blobContainer, String blobName) throws IOException {_        try (InputStream inputStream = blobContainer.readBlob(blobName)) {_            ByteArrayOutputStream out = new ByteArrayOutputStream()__            Streams.copy(inputStream, out)__            final byte[] bytes = out.toByteArray()__            final String resourceDesc = "ChecksumBlobStoreFormat.readBlob(blob=\"" + blobName + "\")"__            try (ByteArrayIndexInput indexInput = new ByteArrayIndexInput(resourceDesc, bytes)) {_                CodecUtil.checksumEntireFile(indexInput)__                CodecUtil.checkHeader(indexInput, codec, VERSION, VERSION)__                long filePointer = indexInput.getFilePointer()__                long contentSize = indexInput.length() - CodecUtil.footerLength() - filePointer__                BytesReference bytesReference = new BytesArray(bytes, (int) filePointer, (int) contentSize)__                return read(bytesReference)__            } catch (CorruptIndexException | IndexFormatTooOldException | IndexFormatTooNewException ex) {_                _                throw new CorruptStateException(ex)__            }_        }_    };reads,blob,with,specified,name,without,resolving,the,blob,name,using,using,link,blob,name,method,param,blob,container,blob,container,param,blob,name,blob,name;public,t,read,blob,blob,container,blob,container,string,blob,name,throws,ioexception,try,input,stream,input,stream,blob,container,read,blob,blob,name,byte,array,output,stream,out,new,byte,array,output,stream,streams,copy,input,stream,out,final,byte,bytes,out,to,byte,array,final,string,resource,desc,checksum,blob,store,format,read,blob,blob,blob,name,try,byte,array,index,input,index,input,new,byte,array,index,input,resource,desc,bytes,codec,util,checksum,entire,file,index,input,codec,util,check,header,index,input,codec,version,version,long,file,pointer,index,input,get,file,pointer,long,content,size,index,input,length,codec,util,footer,length,file,pointer,bytes,reference,bytes,reference,new,bytes,array,bytes,int,file,pointer,int,content,size,return,read,bytes,reference,catch,corrupt,index,exception,index,format,too,old,exception,index,format,too,new,exception,ex,throw,new,corrupt,state,exception,ex
ChecksumBlobStoreFormat -> public T readBlob(BlobContainer blobContainer, String blobName) throws IOException;1528762805;Reads blob with specified name without resolving the blobName using using {@link #blobName} method.__@param blobContainer blob container_@param blobName blob name;public T readBlob(BlobContainer blobContainer, String blobName) throws IOException {_        try (InputStream inputStream = blobContainer.readBlob(blobName)) {_            ByteArrayOutputStream out = new ByteArrayOutputStream()__            Streams.copy(inputStream, out)__            final byte[] bytes = out.toByteArray()__            final String resourceDesc = "ChecksumBlobStoreFormat.readBlob(blob=\"" + blobName + "\")"__            try (ByteArrayIndexInput indexInput = new ByteArrayIndexInput(resourceDesc, bytes)) {_                CodecUtil.checksumEntireFile(indexInput)__                CodecUtil.checkHeader(indexInput, codec, VERSION, VERSION)__                long filePointer = indexInput.getFilePointer()__                long contentSize = indexInput.length() - CodecUtil.footerLength() - filePointer__                BytesReference bytesReference = new BytesArray(bytes, (int) filePointer, (int) contentSize)__                return read(bytesReference)__            } catch (CorruptIndexException | IndexFormatTooOldException | IndexFormatTooNewException ex) {_                _                throw new CorruptStateException(ex)__            }_        }_    };reads,blob,with,specified,name,without,resolving,the,blob,name,using,using,link,blob,name,method,param,blob,container,blob,container,param,blob,name,blob,name;public,t,read,blob,blob,container,blob,container,string,blob,name,throws,ioexception,try,input,stream,input,stream,blob,container,read,blob,blob,name,byte,array,output,stream,out,new,byte,array,output,stream,streams,copy,input,stream,out,final,byte,bytes,out,to,byte,array,final,string,resource,desc,checksum,blob,store,format,read,blob,blob,blob,name,try,byte,array,index,input,index,input,new,byte,array,index,input,resource,desc,bytes,codec,util,checksum,entire,file,index,input,codec,util,check,header,index,input,codec,version,version,long,file,pointer,index,input,get,file,pointer,long,content,size,index,input,length,codec,util,footer,length,file,pointer,bytes,reference,bytes,reference,new,bytes,array,bytes,int,file,pointer,int,content,size,return,read,bytes,reference,catch,corrupt,index,exception,index,format,too,old,exception,index,format,too,new,exception,ex,throw,new,corrupt,state,exception,ex
ChecksumBlobStoreFormat -> public T readBlob(BlobContainer blobContainer, String blobName) throws IOException;1531179852;Reads blob with specified name without resolving the blobName using using {@link #blobName} method.__@param blobContainer blob container_@param blobName blob name;public T readBlob(BlobContainer blobContainer, String blobName) throws IOException {_        try (InputStream inputStream = blobContainer.readBlob(blobName)) {_            ByteArrayOutputStream out = new ByteArrayOutputStream()__            Streams.copy(inputStream, out)__            final byte[] bytes = out.toByteArray()__            final String resourceDesc = "ChecksumBlobStoreFormat.readBlob(blob=\"" + blobName + "\")"__            try (ByteArrayIndexInput indexInput = new ByteArrayIndexInput(resourceDesc, bytes)) {_                CodecUtil.checksumEntireFile(indexInput)__                CodecUtil.checkHeader(indexInput, codec, VERSION, VERSION)__                long filePointer = indexInput.getFilePointer()__                long contentSize = indexInput.length() - CodecUtil.footerLength() - filePointer__                BytesReference bytesReference = new BytesArray(bytes, (int) filePointer, (int) contentSize)__                return read(bytesReference)__            } catch (CorruptIndexException | IndexFormatTooOldException | IndexFormatTooNewException ex) {_                _                throw new CorruptStateException(ex)__            }_        }_    };reads,blob,with,specified,name,without,resolving,the,blob,name,using,using,link,blob,name,method,param,blob,container,blob,container,param,blob,name,blob,name;public,t,read,blob,blob,container,blob,container,string,blob,name,throws,ioexception,try,input,stream,input,stream,blob,container,read,blob,blob,name,byte,array,output,stream,out,new,byte,array,output,stream,streams,copy,input,stream,out,final,byte,bytes,out,to,byte,array,final,string,resource,desc,checksum,blob,store,format,read,blob,blob,blob,name,try,byte,array,index,input,index,input,new,byte,array,index,input,resource,desc,bytes,codec,util,checksum,entire,file,index,input,codec,util,check,header,index,input,codec,version,version,long,file,pointer,index,input,get,file,pointer,long,content,size,index,input,length,codec,util,footer,length,file,pointer,bytes,reference,bytes,reference,new,bytes,array,bytes,int,file,pointer,int,content,size,return,read,bytes,reference,catch,corrupt,index,exception,index,format,too,old,exception,index,format,too,new,exception,ex,throw,new,corrupt,state,exception,ex
ChecksumBlobStoreFormat -> public ChecksumBlobStoreFormat(String codec, String blobNameFormat, CheckedFunction<XContentParser, T, IOException> reader,                                    NamedXContentRegistry namedXContentRegistry, boolean compress, XContentType xContentType);1524684173;@param codec          codec name_@param blobNameFormat format of the blobname in {@link String#format} format_@param reader         prototype object that can deserialize T from XContent_@param compress       true if the content should be compressed_@param xContentType   content type that should be used for write operations;public ChecksumBlobStoreFormat(String codec, String blobNameFormat, CheckedFunction<XContentParser, T, IOException> reader,_                                   NamedXContentRegistry namedXContentRegistry, boolean compress, XContentType xContentType) {_        super(blobNameFormat, reader, namedXContentRegistry)__        this.xContentType = xContentType__        this.compress = compress__        this.codec = codec__    };param,codec,codec,name,param,blob,name,format,format,of,the,blobname,in,link,string,format,format,param,reader,prototype,object,that,can,deserialize,t,from,xcontent,param,compress,true,if,the,content,should,be,compressed,param,x,content,type,content,type,that,should,be,used,for,write,operations;public,checksum,blob,store,format,string,codec,string,blob,name,format,checked,function,xcontent,parser,t,ioexception,reader,named,xcontent,registry,named,xcontent,registry,boolean,compress,xcontent,type,x,content,type,super,blob,name,format,reader,named,xcontent,registry,this,x,content,type,x,content,type,this,compress,compress,this,codec,codec
ChecksumBlobStoreFormat -> public ChecksumBlobStoreFormat(String codec, String blobNameFormat, CheckedFunction<XContentParser, T, IOException> reader,                                    NamedXContentRegistry namedXContentRegistry, boolean compress, XContentType xContentType);1528211342;@param codec          codec name_@param blobNameFormat format of the blobname in {@link String#format} format_@param reader         prototype object that can deserialize T from XContent_@param compress       true if the content should be compressed_@param xContentType   content type that should be used for write operations;public ChecksumBlobStoreFormat(String codec, String blobNameFormat, CheckedFunction<XContentParser, T, IOException> reader,_                                   NamedXContentRegistry namedXContentRegistry, boolean compress, XContentType xContentType) {_        super(blobNameFormat, reader, namedXContentRegistry)__        this.xContentType = xContentType__        this.compress = compress__        this.codec = codec__    };param,codec,codec,name,param,blob,name,format,format,of,the,blobname,in,link,string,format,format,param,reader,prototype,object,that,can,deserialize,t,from,xcontent,param,compress,true,if,the,content,should,be,compressed,param,x,content,type,content,type,that,should,be,used,for,write,operations;public,checksum,blob,store,format,string,codec,string,blob,name,format,checked,function,xcontent,parser,t,ioexception,reader,named,xcontent,registry,named,xcontent,registry,boolean,compress,xcontent,type,x,content,type,super,blob,name,format,reader,named,xcontent,registry,this,x,content,type,x,content,type,this,compress,compress,this,codec,codec
ChecksumBlobStoreFormat -> public ChecksumBlobStoreFormat(String codec, String blobNameFormat, CheckedFunction<XContentParser, T, IOException> reader,                                    NamedXContentRegistry namedXContentRegistry, boolean compress, XContentType xContentType);1528762805;@param codec          codec name_@param blobNameFormat format of the blobname in {@link String#format} format_@param reader         prototype object that can deserialize T from XContent_@param compress       true if the content should be compressed_@param xContentType   content type that should be used for write operations;public ChecksumBlobStoreFormat(String codec, String blobNameFormat, CheckedFunction<XContentParser, T, IOException> reader,_                                   NamedXContentRegistry namedXContentRegistry, boolean compress, XContentType xContentType) {_        super(blobNameFormat, reader, namedXContentRegistry)__        this.xContentType = xContentType__        this.compress = compress__        this.codec = codec__    };param,codec,codec,name,param,blob,name,format,format,of,the,blobname,in,link,string,format,format,param,reader,prototype,object,that,can,deserialize,t,from,xcontent,param,compress,true,if,the,content,should,be,compressed,param,x,content,type,content,type,that,should,be,used,for,write,operations;public,checksum,blob,store,format,string,codec,string,blob,name,format,checked,function,xcontent,parser,t,ioexception,reader,named,xcontent,registry,named,xcontent,registry,boolean,compress,xcontent,type,x,content,type,super,blob,name,format,reader,named,xcontent,registry,this,x,content,type,x,content,type,this,compress,compress,this,codec,codec
ChecksumBlobStoreFormat -> public ChecksumBlobStoreFormat(String codec, String blobNameFormat, CheckedFunction<XContentParser, T, IOException> reader,                                    NamedXContentRegistry namedXContentRegistry, boolean compress, XContentType xContentType);1531179852;@param codec          codec name_@param blobNameFormat format of the blobname in {@link String#format} format_@param reader         prototype object that can deserialize T from XContent_@param compress       true if the content should be compressed_@param xContentType   content type that should be used for write operations;public ChecksumBlobStoreFormat(String codec, String blobNameFormat, CheckedFunction<XContentParser, T, IOException> reader,_                                   NamedXContentRegistry namedXContentRegistry, boolean compress, XContentType xContentType) {_        super(blobNameFormat, reader, namedXContentRegistry)__        this.xContentType = xContentType__        this.compress = compress__        this.codec = codec__    };param,codec,codec,name,param,blob,name,format,format,of,the,blobname,in,link,string,format,format,param,reader,prototype,object,that,can,deserialize,t,from,xcontent,param,compress,true,if,the,content,should,be,compressed,param,x,content,type,content,type,that,should,be,used,for,write,operations;public,checksum,blob,store,format,string,codec,string,blob,name,format,checked,function,xcontent,parser,t,ioexception,reader,named,xcontent,registry,named,xcontent,registry,boolean,compress,xcontent,type,x,content,type,super,blob,name,format,reader,named,xcontent,registry,this,x,content,type,x,content,type,this,compress,compress,this,codec,codec
ChecksumBlobStoreFormat -> public void writeAtomic(T obj, BlobContainer blobContainer, String name) throws IOException;1524684173;Writes blob in atomic manner with resolving the blob name using {@link #blobName} and {@link #tempBlobName} methods._<p>_The blob will be compressed and checksum will be written if required.__Atomic move might be very inefficient on some repositories. It also cannot override existing files.__@param obj           object to be serialized_@param blobContainer blob container_@param name          blob name;public void writeAtomic(T obj, BlobContainer blobContainer, String name) throws IOException {_        String blobName = blobName(name)__        String tempBlobName = tempBlobName(name)__        writeBlob(obj, blobContainer, tempBlobName)__        try {_            blobContainer.move(tempBlobName, blobName)__        } catch (IOException ex) {_            _            try {_                blobContainer.deleteBlob(tempBlobName)__            } catch (Exception e) {_                ex.addSuppressed(e)__            }_            throw ex__        }_    };writes,blob,in,atomic,manner,with,resolving,the,blob,name,using,link,blob,name,and,link,temp,blob,name,methods,p,the,blob,will,be,compressed,and,checksum,will,be,written,if,required,atomic,move,might,be,very,inefficient,on,some,repositories,it,also,cannot,override,existing,files,param,obj,object,to,be,serialized,param,blob,container,blob,container,param,name,blob,name;public,void,write,atomic,t,obj,blob,container,blob,container,string,name,throws,ioexception,string,blob,name,blob,name,name,string,temp,blob,name,temp,blob,name,name,write,blob,obj,blob,container,temp,blob,name,try,blob,container,move,temp,blob,name,blob,name,catch,ioexception,ex,try,blob,container,delete,blob,temp,blob,name,catch,exception,e,ex,add,suppressed,e,throw,ex
ChecksumBlobStoreFormat -> public void writeAtomic(T obj, BlobContainer blobContainer, String name) throws IOException;1528211342;Writes blob in atomic manner with resolving the blob name using {@link #blobName} method._<p>_The blob will be compressed and checksum will be written if required.__Atomic move might be very inefficient on some repositories. It also cannot override existing files.__@param obj           object to be serialized_@param blobContainer blob container_@param name          blob name;public void writeAtomic(T obj, BlobContainer blobContainer, String name) throws IOException {_        final String blobName = blobName(name)__        writeTo(obj, blobName, bytesArray -> {_            try (InputStream stream = bytesArray.streamInput()) {_                blobContainer.writeBlobAtomic(blobName, stream, bytesArray.length())__            }_        })__    };writes,blob,in,atomic,manner,with,resolving,the,blob,name,using,link,blob,name,method,p,the,blob,will,be,compressed,and,checksum,will,be,written,if,required,atomic,move,might,be,very,inefficient,on,some,repositories,it,also,cannot,override,existing,files,param,obj,object,to,be,serialized,param,blob,container,blob,container,param,name,blob,name;public,void,write,atomic,t,obj,blob,container,blob,container,string,name,throws,ioexception,final,string,blob,name,blob,name,name,write,to,obj,blob,name,bytes,array,try,input,stream,stream,bytes,array,stream,input,blob,container,write,blob,atomic,blob,name,stream,bytes,array,length
ChecksumBlobStoreFormat -> public void writeAtomic(T obj, BlobContainer blobContainer, String name) throws IOException;1528762805;Writes blob in atomic manner with resolving the blob name using {@link #blobName} method._<p>_The blob will be compressed and checksum will be written if required.__Atomic move might be very inefficient on some repositories. It also cannot override existing files.__@param obj           object to be serialized_@param blobContainer blob container_@param name          blob name;public void writeAtomic(T obj, BlobContainer blobContainer, String name) throws IOException {_        final String blobName = blobName(name)__        writeTo(obj, blobName, bytesArray -> {_            try (InputStream stream = bytesArray.streamInput()) {_                blobContainer.writeBlobAtomic(blobName, stream, bytesArray.length())__            }_        })__    };writes,blob,in,atomic,manner,with,resolving,the,blob,name,using,link,blob,name,method,p,the,blob,will,be,compressed,and,checksum,will,be,written,if,required,atomic,move,might,be,very,inefficient,on,some,repositories,it,also,cannot,override,existing,files,param,obj,object,to,be,serialized,param,blob,container,blob,container,param,name,blob,name;public,void,write,atomic,t,obj,blob,container,blob,container,string,name,throws,ioexception,final,string,blob,name,blob,name,name,write,to,obj,blob,name,bytes,array,try,input,stream,stream,bytes,array,stream,input,blob,container,write,blob,atomic,blob,name,stream,bytes,array,length
ChecksumBlobStoreFormat -> public void writeAtomic(T obj, BlobContainer blobContainer, String name) throws IOException;1531179852;Writes blob in atomic manner with resolving the blob name using {@link #blobName} method._<p>_The blob will be compressed and checksum will be written if required.__Atomic move might be very inefficient on some repositories. It also cannot override existing files.__@param obj           object to be serialized_@param blobContainer blob container_@param name          blob name;public void writeAtomic(T obj, BlobContainer blobContainer, String name) throws IOException {_        final String blobName = blobName(name)__        writeTo(obj, blobName, bytesArray -> {_            try (InputStream stream = bytesArray.streamInput()) {_                blobContainer.writeBlobAtomic(blobName, stream, bytesArray.length(), true)__            }_        })__    };writes,blob,in,atomic,manner,with,resolving,the,blob,name,using,link,blob,name,method,p,the,blob,will,be,compressed,and,checksum,will,be,written,if,required,atomic,move,might,be,very,inefficient,on,some,repositories,it,also,cannot,override,existing,files,param,obj,object,to,be,serialized,param,blob,container,blob,container,param,name,blob,name;public,void,write,atomic,t,obj,blob,container,blob,container,string,name,throws,ioexception,final,string,blob,name,blob,name,name,write,to,obj,blob,name,bytes,array,try,input,stream,stream,bytes,array,stream,input,blob,container,write,blob,atomic,blob,name,stream,bytes,array,length,true
ChecksumBlobStoreFormat -> public void write(T obj, BlobContainer blobContainer, String name) throws IOException;1524684173;Writes blob with resolving the blob name using {@link #blobName} method._<p>_The blob will be compressed and checksum will be written if required.__@param obj           object to be serialized_@param blobContainer blob container_@param name          blob name;public void write(T obj, BlobContainer blobContainer, String name) throws IOException {_        String blobName = blobName(name)__        writeBlob(obj, blobContainer, blobName)__    };writes,blob,with,resolving,the,blob,name,using,link,blob,name,method,p,the,blob,will,be,compressed,and,checksum,will,be,written,if,required,param,obj,object,to,be,serialized,param,blob,container,blob,container,param,name,blob,name;public,void,write,t,obj,blob,container,blob,container,string,name,throws,ioexception,string,blob,name,blob,name,name,write,blob,obj,blob,container,blob,name
ChecksumBlobStoreFormat -> public void write(T obj, BlobContainer blobContainer, String name) throws IOException;1528211342;Writes blob with resolving the blob name using {@link #blobName} method._<p>_The blob will be compressed and checksum will be written if required.__@param obj           object to be serialized_@param blobContainer blob container_@param name          blob name;public void write(T obj, BlobContainer blobContainer, String name) throws IOException {_        final String blobName = blobName(name)__        writeTo(obj, blobName, bytesArray -> {_            try (InputStream stream = bytesArray.streamInput()) {_                blobContainer.writeBlob(blobName, stream, bytesArray.length())__            }_        })__    };writes,blob,with,resolving,the,blob,name,using,link,blob,name,method,p,the,blob,will,be,compressed,and,checksum,will,be,written,if,required,param,obj,object,to,be,serialized,param,blob,container,blob,container,param,name,blob,name;public,void,write,t,obj,blob,container,blob,container,string,name,throws,ioexception,final,string,blob,name,blob,name,name,write,to,obj,blob,name,bytes,array,try,input,stream,stream,bytes,array,stream,input,blob,container,write,blob,blob,name,stream,bytes,array,length
ChecksumBlobStoreFormat -> public void write(T obj, BlobContainer blobContainer, String name) throws IOException;1528762805;Writes blob with resolving the blob name using {@link #blobName} method._<p>_The blob will be compressed and checksum will be written if required.__@param obj           object to be serialized_@param blobContainer blob container_@param name          blob name;public void write(T obj, BlobContainer blobContainer, String name) throws IOException {_        final String blobName = blobName(name)__        writeTo(obj, blobName, bytesArray -> {_            try (InputStream stream = bytesArray.streamInput()) {_                blobContainer.writeBlob(blobName, stream, bytesArray.length())__            }_        })__    };writes,blob,with,resolving,the,blob,name,using,link,blob,name,method,p,the,blob,will,be,compressed,and,checksum,will,be,written,if,required,param,obj,object,to,be,serialized,param,blob,container,blob,container,param,name,blob,name;public,void,write,t,obj,blob,container,blob,container,string,name,throws,ioexception,final,string,blob,name,blob,name,name,write,to,obj,blob,name,bytes,array,try,input,stream,stream,bytes,array,stream,input,blob,container,write,blob,blob,name,stream,bytes,array,length
ChecksumBlobStoreFormat -> public void write(T obj, BlobContainer blobContainer, String name) throws IOException;1531179852;Writes blob with resolving the blob name using {@link #blobName} method._<p>_The blob will be compressed and checksum will be written if required.__@param obj           object to be serialized_@param blobContainer blob container_@param name          blob name;public void write(T obj, BlobContainer blobContainer, String name) throws IOException {_        final String blobName = blobName(name)__        writeTo(obj, blobName, bytesArray -> {_            try (InputStream stream = bytesArray.streamInput()) {_                blobContainer.writeBlob(blobName, stream, bytesArray.length(), true)__            }_        })__    };writes,blob,with,resolving,the,blob,name,using,link,blob,name,method,p,the,blob,will,be,compressed,and,checksum,will,be,written,if,required,param,obj,object,to,be,serialized,param,blob,container,blob,container,param,name,blob,name;public,void,write,t,obj,blob,container,blob,container,string,name,throws,ioexception,final,string,blob,name,blob,name,name,write,to,obj,blob,name,bytes,array,try,input,stream,stream,bytes,array,stream,input,blob,container,write,blob,blob,name,stream,bytes,array,length,true
