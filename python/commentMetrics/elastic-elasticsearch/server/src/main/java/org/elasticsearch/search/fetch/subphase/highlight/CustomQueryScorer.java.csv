commented;modifiers;parameterAmount;loc;comment;code
false;protected;1;5;;@Override protected WeightedSpanTermExtractor newTermExtractor(String defaultField) {     return defaultField == null ? new CustomWeightedSpanTermExtractor() : new CustomWeightedSpanTermExtractor(defaultField). }
false;protected;2;7;;@Override protected void extractUnknownQuery(Query query, Map<String, WeightedSpanTerm> terms) throws IOException {     if (terms.isEmpty()) {         extractWeightedTerms(terms, query, 1F).     } }
false;protected;3;12;;protected void extract(Query query, float boost, Map<String, WeightedSpanTerm> terms) throws IOException {     if (isChildOrParentQuery(query.getClass())) {         // skip has_child or has_parent queries, see: https://github.com/elastic/elasticsearch/issues/14999         return.     } else if (query instanceof FunctionScoreQuery) {         super.extract(((FunctionScoreQuery) query).getSubQuery(), boost, terms).     } else if (query instanceof ESToParentBlockJoinQuery) {         super.extract(((ESToParentBlockJoinQuery) query).getChildQuery(), boost, terms).     } else {         super.extract(query, boost, terms).     } }
false;private,static;1;3;;private static boolean isChildOrParentQuery(Class<?> clazz) {     return clazz.getName().endsWith(PARENT_CHILD_QUERY_NAME). }
