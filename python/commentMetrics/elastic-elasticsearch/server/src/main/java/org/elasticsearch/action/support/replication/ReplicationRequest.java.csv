# id;timestamp;commentText;codeText;commentWords;codeWords
ReplicationRequest -> public final Request timeout(String timeout);1524684173;A timeout to wait if the index operation can't be performed immediately. Defaults to <tt>1m</tt>.;public final Request timeout(String timeout) {_        return timeout(TimeValue.parseTimeValue(timeout, null, getClass().getSimpleName() + ".timeout"))__    };a,timeout,to,wait,if,the,index,operation,can,t,be,performed,immediately,defaults,to,tt,1m,tt;public,final,request,timeout,string,timeout,return,timeout,time,value,parse,time,value,timeout,null,get,class,get,simple,name,timeout
ReplicationRequest -> public final Request timeout(String timeout);1525334055;A timeout to wait if the index operation can't be performed immediately. Defaults to {@code 1m}.;public final Request timeout(String timeout) {_        return timeout(TimeValue.parseTimeValue(timeout, null, getClass().getSimpleName() + ".timeout"))__    };a,timeout,to,wait,if,the,index,operation,can,t,be,performed,immediately,defaults,to,code,1m;public,final,request,timeout,string,timeout,return,timeout,time,value,parse,time,value,timeout,null,get,class,get,simple,name,timeout
ReplicationRequest -> public final Request timeout(String timeout);1531179852;A timeout to wait if the index operation can't be performed immediately. Defaults to {@code 1m}.;public final Request timeout(String timeout) {_        return timeout(TimeValue.parseTimeValue(timeout, null, getClass().getSimpleName() + ".timeout"))__    };a,timeout,to,wait,if,the,index,operation,can,t,be,performed,immediately,defaults,to,code,1m;public,final,request,timeout,string,timeout,return,timeout,time,value,parse,time,value,timeout,null,get,class,get,simple,name,timeout
ReplicationRequest -> @Nullable     public ShardId shardId();1524684173;@return the shardId of the shard where this operation should be executed on._can be null if the shardID has not yet been resolved;@Nullable_    public ShardId shardId() {_        return shardId__    };return,the,shard,id,of,the,shard,where,this,operation,should,be,executed,on,can,be,null,if,the,shard,id,has,not,yet,been,resolved;nullable,public,shard,id,shard,id,return,shard,id
ReplicationRequest -> @Nullable     public ShardId shardId();1525334055;@return the shardId of the shard where this operation should be executed on._can be null if the shardID has not yet been resolved;@Nullable_    public ShardId shardId() {_        return shardId__    };return,the,shard,id,of,the,shard,where,this,operation,should,be,executed,on,can,be,null,if,the,shard,id,has,not,yet,been,resolved;nullable,public,shard,id,shard,id,return,shard,id
ReplicationRequest -> @Nullable     public ShardId shardId();1531179852;@return the shardId of the shard where this operation should be executed on._can be null if the shardID has not yet been resolved;@Nullable_    public ShardId shardId() {_        return shardId__    };return,the,shard,id,of,the,shard,where,this,operation,should,be,executed,on,can,be,null,if,the,shard,id,has,not,yet,been,resolved;nullable,public,shard,id,shard,id,return,shard,id
ReplicationRequest -> public ReplicationRequest(ShardId shardId);1524684173;Creates a new request with resolved shard id;public ReplicationRequest(ShardId shardId) {_        this.index = shardId.getIndexName()__        this.shardId = shardId__    };creates,a,new,request,with,resolved,shard,id;public,replication,request,shard,id,shard,id,this,index,shard,id,get,index,name,this,shard,id,shard,id
ReplicationRequest -> public ReplicationRequest(ShardId shardId);1525334055;Creates a new request with resolved shard id;public ReplicationRequest(ShardId shardId) {_        this.index = shardId.getIndexName()__        this.shardId = shardId__    };creates,a,new,request,with,resolved,shard,id;public,replication,request,shard,id,shard,id,this,index,shard,id,get,index,name,this,shard,id,shard,id
ReplicationRequest -> public ReplicationRequest(ShardId shardId);1531179852;Creates a new request with resolved shard id;public ReplicationRequest(ShardId shardId) {_        this.index = shardId.getIndexName()__        this.shardId = shardId__    };creates,a,new,request,with,resolved,shard,id;public,replication,request,shard,id,shard,id,this,index,shard,id,get,index,name,this,shard,id,shard,id
ReplicationRequest -> @SuppressWarnings("unchecked")     public final Request waitForActiveShards(ActiveShardCount waitForActiveShards);1524684173;Sets the number of shard copies that must be active before proceeding with the replication_operation. Defaults to {@link ActiveShardCount#DEFAULT}, which requires one shard copy_(the primary) to be active. Set this value to {@link ActiveShardCount#ALL} to_wait for all shards (primary and all replicas) to be active. Otherwise, use_{@link ActiveShardCount#from(int)} to set this value to any non-negative integer, up to the_total number of shard copies (number of replicas + 1).;@SuppressWarnings("unchecked")_    public final Request waitForActiveShards(ActiveShardCount waitForActiveShards) {_        this.waitForActiveShards = waitForActiveShards__        return (Request) this__    };sets,the,number,of,shard,copies,that,must,be,active,before,proceeding,with,the,replication,operation,defaults,to,link,active,shard,count,default,which,requires,one,shard,copy,the,primary,to,be,active,set,this,value,to,link,active,shard,count,all,to,wait,for,all,shards,primary,and,all,replicas,to,be,active,otherwise,use,link,active,shard,count,from,int,to,set,this,value,to,any,non,negative,integer,up,to,the,total,number,of,shard,copies,number,of,replicas,1;suppress,warnings,unchecked,public,final,request,wait,for,active,shards,active,shard,count,wait,for,active,shards,this,wait,for,active,shards,wait,for,active,shards,return,request,this
ReplicationRequest -> @SuppressWarnings("unchecked")     public final Request waitForActiveShards(ActiveShardCount waitForActiveShards);1525334055;Sets the number of shard copies that must be active before proceeding with the replication_operation. Defaults to {@link ActiveShardCount#DEFAULT}, which requires one shard copy_(the primary) to be active. Set this value to {@link ActiveShardCount#ALL} to_wait for all shards (primary and all replicas) to be active. Otherwise, use_{@link ActiveShardCount#from(int)} to set this value to any non-negative integer, up to the_total number of shard copies (number of replicas + 1).;@SuppressWarnings("unchecked")_    public final Request waitForActiveShards(ActiveShardCount waitForActiveShards) {_        this.waitForActiveShards = waitForActiveShards__        return (Request) this__    };sets,the,number,of,shard,copies,that,must,be,active,before,proceeding,with,the,replication,operation,defaults,to,link,active,shard,count,default,which,requires,one,shard,copy,the,primary,to,be,active,set,this,value,to,link,active,shard,count,all,to,wait,for,all,shards,primary,and,all,replicas,to,be,active,otherwise,use,link,active,shard,count,from,int,to,set,this,value,to,any,non,negative,integer,up,to,the,total,number,of,shard,copies,number,of,replicas,1;suppress,warnings,unchecked,public,final,request,wait,for,active,shards,active,shard,count,wait,for,active,shards,this,wait,for,active,shards,wait,for,active,shards,return,request,this
ReplicationRequest -> @SuppressWarnings("unchecked")     public final Request waitForActiveShards(ActiveShardCount waitForActiveShards);1531179852;Sets the number of shard copies that must be active before proceeding with the replication_operation. Defaults to {@link ActiveShardCount#DEFAULT}, which requires one shard copy_(the primary) to be active. Set this value to {@link ActiveShardCount#ALL} to_wait for all shards (primary and all replicas) to be active. Otherwise, use_{@link ActiveShardCount#from(int)} to set this value to any non-negative integer, up to the_total number of shard copies (number of replicas + 1).;@SuppressWarnings("unchecked")_    public final Request waitForActiveShards(ActiveShardCount waitForActiveShards) {_        this.waitForActiveShards = waitForActiveShards__        return (Request) this__    };sets,the,number,of,shard,copies,that,must,be,active,before,proceeding,with,the,replication,operation,defaults,to,link,active,shard,count,default,which,requires,one,shard,copy,the,primary,to,be,active,set,this,value,to,link,active,shard,count,all,to,wait,for,all,shards,primary,and,all,replicas,to,be,active,otherwise,use,link,active,shard,count,from,int,to,set,this,value,to,any,non,negative,integer,up,to,the,total,number,of,shard,copies,number,of,replicas,1;suppress,warnings,unchecked,public,final,request,wait,for,active,shards,active,shard,count,wait,for,active,shards,this,wait,for,active,shards,wait,for,active,shards,return,request,this
ReplicationRequest -> public void onRetry();1524684173;This method is called before this replication request is retried_the first time.;public void onRetry() {_        _    };this,method,is,called,before,this,replication,request,is,retried,the,first,time;public,void,on,retry
ReplicationRequest -> public void onRetry();1525334055;This method is called before this replication request is retried_the first time.;public void onRetry() {_        _    };this,method,is,called,before,this,replication,request,is,retried,the,first,time;public,void,on,retry
ReplicationRequest -> public void onRetry();1531179852;This method is called before this replication request is retried_the first time.;public void onRetry() {_        _    };this,method,is,called,before,this,replication,request,is,retried,the,first,time;public,void,on,retry
ReplicationRequest -> @SuppressWarnings("unchecked")     public final Request waitForActiveShards(final int waitForActiveShards);1524684173;A shortcut for {@link #waitForActiveShards(ActiveShardCount)} where the numerical_shard count is passed in, instead of having to first call {@link ActiveShardCount#from(int)}_to get the ActiveShardCount.;@SuppressWarnings("unchecked")_    public final Request waitForActiveShards(final int waitForActiveShards) {_        return waitForActiveShards(ActiveShardCount.from(waitForActiveShards))__    };a,shortcut,for,link,wait,for,active,shards,active,shard,count,where,the,numerical,shard,count,is,passed,in,instead,of,having,to,first,call,link,active,shard,count,from,int,to,get,the,active,shard,count;suppress,warnings,unchecked,public,final,request,wait,for,active,shards,final,int,wait,for,active,shards,return,wait,for,active,shards,active,shard,count,from,wait,for,active,shards
ReplicationRequest -> @SuppressWarnings("unchecked")     public final Request waitForActiveShards(final int waitForActiveShards);1525334055;A shortcut for {@link #waitForActiveShards(ActiveShardCount)} where the numerical_shard count is passed in, instead of having to first call {@link ActiveShardCount#from(int)}_to get the ActiveShardCount.;@SuppressWarnings("unchecked")_    public final Request waitForActiveShards(final int waitForActiveShards) {_        return waitForActiveShards(ActiveShardCount.from(waitForActiveShards))__    };a,shortcut,for,link,wait,for,active,shards,active,shard,count,where,the,numerical,shard,count,is,passed,in,instead,of,having,to,first,call,link,active,shard,count,from,int,to,get,the,active,shard,count;suppress,warnings,unchecked,public,final,request,wait,for,active,shards,final,int,wait,for,active,shards,return,wait,for,active,shards,active,shard,count,from,wait,for,active,shards
ReplicationRequest -> @SuppressWarnings("unchecked")     public Request setShardId(ShardId shardId);1524684173;Sets the target shard id for the request. The shard id is set when a_index/delete request is resolved by the transport action;@SuppressWarnings("unchecked")_    public Request setShardId(ShardId shardId) {_        this.shardId = shardId__        return (Request) this__    };sets,the,target,shard,id,for,the,request,the,shard,id,is,set,when,a,index,delete,request,is,resolved,by,the,transport,action;suppress,warnings,unchecked,public,request,set,shard,id,shard,id,shard,id,this,shard,id,shard,id,return,request,this
ReplicationRequest -> @SuppressWarnings("unchecked")     public Request setShardId(ShardId shardId);1525334055;Sets the target shard id for the request. The shard id is set when a_index/delete request is resolved by the transport action;@SuppressWarnings("unchecked")_    public Request setShardId(ShardId shardId) {_        this.shardId = shardId__        return (Request) this__    };sets,the,target,shard,id,for,the,request,the,shard,id,is,set,when,a,index,delete,request,is,resolved,by,the,transport,action;suppress,warnings,unchecked,public,request,set,shard,id,shard,id,shard,id,this,shard,id,shard,id,return,request,this
ReplicationRequest -> @SuppressWarnings("unchecked")     public Request setShardId(ShardId shardId);1531179852;Sets the target shard id for the request. The shard id is set when a_index/delete request is resolved by the transport action;@SuppressWarnings("unchecked")_    public Request setShardId(ShardId shardId) {_        this.shardId = shardId__        return (Request) this__    };sets,the,target,shard,id,for,the,request,the,shard,id,is,set,when,a,index,delete,request,is,resolved,by,the,transport,action;suppress,warnings,unchecked,public,request,set,shard,id,shard,id,shard,id,this,shard,id,shard,id,return,request,this
ReplicationRequest -> @SuppressWarnings("unchecked")     public final Request timeout(TimeValue timeout);1524684173;A timeout to wait if the index operation can't be performed immediately. Defaults to <tt>1m</tt>.;@SuppressWarnings("unchecked")_    public final Request timeout(TimeValue timeout) {_        this.timeout = timeout__        return (Request) this__    };a,timeout,to,wait,if,the,index,operation,can,t,be,performed,immediately,defaults,to,tt,1m,tt;suppress,warnings,unchecked,public,final,request,timeout,time,value,timeout,this,timeout,timeout,return,request,this
ReplicationRequest -> @SuppressWarnings("unchecked")     public final Request timeout(TimeValue timeout);1525334055;A timeout to wait if the index operation can't be performed immediately. Defaults to {@code 1m}.;@SuppressWarnings("unchecked")_    public final Request timeout(TimeValue timeout) {_        this.timeout = timeout__        return (Request) this__    };a,timeout,to,wait,if,the,index,operation,can,t,be,performed,immediately,defaults,to,code,1m;suppress,warnings,unchecked,public,final,request,timeout,time,value,timeout,this,timeout,timeout,return,request,this
ReplicationRequest -> @SuppressWarnings("unchecked")     public final Request timeout(TimeValue timeout);1531179852;A timeout to wait if the index operation can't be performed immediately. Defaults to {@code 1m}.;@SuppressWarnings("unchecked")_    public final Request timeout(TimeValue timeout) {_        this.timeout = timeout__        return (Request) this__    };a,timeout,to,wait,if,the,index,operation,can,t,be,performed,immediately,defaults,to,code,1m;suppress,warnings,unchecked,public,final,request,timeout,time,value,timeout,this,timeout,timeout,return,request,this
ReplicationRequest -> @SuppressWarnings("unchecked")     Request routedBasedOnClusterVersion(long routedBasedOnClusterVersion);1524684173;Sets the minimum version of the cluster state that is required on the next node before we redirect to another primary._Used to prevent redirect loops, see also {@link TransportReplicationAction.ReroutePhase#doRun()};@SuppressWarnings("unchecked")_    Request routedBasedOnClusterVersion(long routedBasedOnClusterVersion) {_        this.routedBasedOnClusterVersion = routedBasedOnClusterVersion__        return (Request) this__    };sets,the,minimum,version,of,the,cluster,state,that,is,required,on,the,next,node,before,we,redirect,to,another,primary,used,to,prevent,redirect,loops,see,also,link,transport,replication,action,reroute,phase,do,run;suppress,warnings,unchecked,request,routed,based,on,cluster,version,long,routed,based,on,cluster,version,this,routed,based,on,cluster,version,routed,based,on,cluster,version,return,request,this
ReplicationRequest -> @SuppressWarnings("unchecked")     Request routedBasedOnClusterVersion(long routedBasedOnClusterVersion);1525334055;Sets the minimum version of the cluster state that is required on the next node before we redirect to another primary._Used to prevent redirect loops, see also {@link TransportReplicationAction.ReroutePhase#doRun()};@SuppressWarnings("unchecked")_    Request routedBasedOnClusterVersion(long routedBasedOnClusterVersion) {_        this.routedBasedOnClusterVersion = routedBasedOnClusterVersion__        return (Request) this__    };sets,the,minimum,version,of,the,cluster,state,that,is,required,on,the,next,node,before,we,redirect,to,another,primary,used,to,prevent,redirect,loops,see,also,link,transport,replication,action,reroute,phase,do,run;suppress,warnings,unchecked,request,routed,based,on,cluster,version,long,routed,based,on,cluster,version,this,routed,based,on,cluster,version,routed,based,on,cluster,version,return,request,this
ReplicationRequest -> @SuppressWarnings("unchecked")     Request routedBasedOnClusterVersion(long routedBasedOnClusterVersion);1531179852;Sets the minimum version of the cluster state that is required on the next node before we redirect to another primary._Used to prevent redirect loops, see also {@link TransportReplicationAction.ReroutePhase#doRun()};@SuppressWarnings("unchecked")_    Request routedBasedOnClusterVersion(long routedBasedOnClusterVersion) {_        this.routedBasedOnClusterVersion = routedBasedOnClusterVersion__        return (Request) this__    };sets,the,minimum,version,of,the,cluster,state,that,is,required,on,the,next,node,before,we,redirect,to,another,primary,used,to,prevent,redirect,loops,see,also,link,transport,replication,action,reroute,phase,do,run;suppress,warnings,unchecked,request,routed,based,on,cluster,version,long,routed,based,on,cluster,version,this,routed,based,on,cluster,version,routed,based,on,cluster,version,return,request,this
