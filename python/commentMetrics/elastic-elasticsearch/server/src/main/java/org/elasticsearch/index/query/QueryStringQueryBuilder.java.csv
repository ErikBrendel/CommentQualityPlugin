# id;timestamp;commentText;codeText;commentWords;codeWords
QueryStringQueryBuilder -> public QueryStringQueryBuilder quoteAnalyzer(String quoteAnalyzer);1524684173;The optional analyzer used to analyze the query string for phrase searches. Note, if a field has search (quote) analyzer_defined for it, then it will be used automatically. Defaults to the smart search analyzer.;public QueryStringQueryBuilder quoteAnalyzer(String quoteAnalyzer) {_        this.quoteAnalyzer = quoteAnalyzer__        return this__    };the,optional,analyzer,used,to,analyze,the,query,string,for,phrase,searches,note,if,a,field,has,search,quote,analyzer,defined,for,it,then,it,will,be,used,automatically,defaults,to,the,smart,search,analyzer;public,query,string,query,builder,quote,analyzer,string,quote,analyzer,this,quote,analyzer,quote,analyzer,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder quoteAnalyzer(String quoteAnalyzer);1525334055;The optional analyzer used to analyze the query string for phrase searches. Note, if a field has search (quote) analyzer_defined for it, then it will be used automatically. Defaults to the smart search analyzer.;public QueryStringQueryBuilder quoteAnalyzer(String quoteAnalyzer) {_        this.quoteAnalyzer = quoteAnalyzer__        return this__    };the,optional,analyzer,used,to,analyze,the,query,string,for,phrase,searches,note,if,a,field,has,search,quote,analyzer,defined,for,it,then,it,will,be,used,automatically,defaults,to,the,smart,search,analyzer;public,query,string,query,builder,quote,analyzer,string,quote,analyzer,this,quote,analyzer,quote,analyzer,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder quoteAnalyzer(String quoteAnalyzer);1535046779;The optional analyzer used to analyze the query string for phrase searches. Note, if a field has search (quote) analyzer_defined for it, then it will be used automatically. Defaults to the smart search analyzer.;public QueryStringQueryBuilder quoteAnalyzer(String quoteAnalyzer) {_        this.quoteAnalyzer = quoteAnalyzer__        return this__    };the,optional,analyzer,used,to,analyze,the,query,string,for,phrase,searches,note,if,a,field,has,search,quote,analyzer,defined,for,it,then,it,will,be,used,automatically,defaults,to,the,smart,search,analyzer;public,query,string,query,builder,quote,analyzer,string,quote,analyzer,this,quote,analyzer,quote,analyzer,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder quoteAnalyzer(String quoteAnalyzer);1535139672;The optional analyzer used to analyze the query string for phrase searches. Note, if a field has search (quote) analyzer_defined for it, then it will be used automatically. Defaults to the smart search analyzer.;public QueryStringQueryBuilder quoteAnalyzer(String quoteAnalyzer) {_        this.quoteAnalyzer = quoteAnalyzer__        return this__    };the,optional,analyzer,used,to,analyze,the,query,string,for,phrase,searches,note,if,a,field,has,search,quote,analyzer,defined,for,it,then,it,will,be,used,automatically,defaults,to,the,smart,search,analyzer;public,query,string,query,builder,quote,analyzer,string,quote,analyzer,this,quote,analyzer,quote,analyzer,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder quoteAnalyzer(String quoteAnalyzer);1542726437;The optional analyzer used to analyze the query string for phrase searches. Note, if a field has search (quote) analyzer_defined for it, then it will be used automatically. Defaults to the smart search analyzer.;public QueryStringQueryBuilder quoteAnalyzer(String quoteAnalyzer) {_        this.quoteAnalyzer = quoteAnalyzer__        return this__    };the,optional,analyzer,used,to,analyze,the,query,string,for,phrase,searches,note,if,a,field,has,search,quote,analyzer,defined,for,it,then,it,will,be,used,automatically,defaults,to,the,smart,search,analyzer;public,query,string,query,builder,quote,analyzer,string,quote,analyzer,this,quote,analyzer,quote,analyzer,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder quoteAnalyzer(String quoteAnalyzer);1542792548;The optional analyzer used to analyze the query string for phrase searches. Note, if a field has search (quote) analyzer_defined for it, then it will be used automatically. Defaults to the smart search analyzer.;public QueryStringQueryBuilder quoteAnalyzer(String quoteAnalyzer) {_        this.quoteAnalyzer = quoteAnalyzer__        return this__    };the,optional,analyzer,used,to,analyze,the,query,string,for,phrase,searches,note,if,a,field,has,search,quote,analyzer,defined,for,it,then,it,will,be,used,automatically,defaults,to,the,smart,search,analyzer;public,query,string,query,builder,quote,analyzer,string,quote,analyzer,this,quote,analyzer,quote,analyzer,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder quoteAnalyzer(String quoteAnalyzer);1543399743;The optional analyzer used to analyze the query string for phrase searches. Note, if a field has search (quote) analyzer_defined for it, then it will be used automatically. Defaults to the smart search analyzer.;public QueryStringQueryBuilder quoteAnalyzer(String quoteAnalyzer) {_        this.quoteAnalyzer = quoteAnalyzer__        return this__    };the,optional,analyzer,used,to,analyze,the,query,string,for,phrase,searches,note,if,a,field,has,search,quote,analyzer,defined,for,it,then,it,will,be,used,automatically,defaults,to,the,smart,search,analyzer;public,query,string,query,builder,quote,analyzer,string,quote,analyzer,this,quote,analyzer,quote,analyzer,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder quoteAnalyzer(String quoteAnalyzer);1548236405;The optional analyzer used to analyze the query string for phrase searches. Note, if a field has search (quote) analyzer_defined for it, then it will be used automatically. Defaults to the smart search analyzer.;public QueryStringQueryBuilder quoteAnalyzer(String quoteAnalyzer) {_        this.quoteAnalyzer = quoteAnalyzer__        return this__    };the,optional,analyzer,used,to,analyze,the,query,string,for,phrase,searches,note,if,a,field,has,search,quote,analyzer,defined,for,it,then,it,will,be,used,automatically,defaults,to,the,smart,search,analyzer;public,query,string,query,builder,quote,analyzer,string,quote,analyzer,this,quote,analyzer,quote,analyzer,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder quoteAnalyzer(String quoteAnalyzer);1549017700;The optional analyzer used to analyze the query string for phrase searches. Note, if a field has search (quote) analyzer_defined for it, then it will be used automatically. Defaults to the smart search analyzer.;public QueryStringQueryBuilder quoteAnalyzer(String quoteAnalyzer) {_        this.quoteAnalyzer = quoteAnalyzer__        return this__    };the,optional,analyzer,used,to,analyze,the,query,string,for,phrase,searches,note,if,a,field,has,search,quote,analyzer,defined,for,it,then,it,will,be,used,automatically,defaults,to,the,smart,search,analyzer;public,query,string,query,builder,quote,analyzer,string,quote,analyzer,this,quote,analyzer,quote,analyzer,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder phraseSlop(int phraseSlop);1524684173;Sets the default slop for phrases.  If zero, then exact phrase matches_are required. Default value is zero.;public QueryStringQueryBuilder phraseSlop(int phraseSlop) {_        this.phraseSlop = phraseSlop__        return this__    };sets,the,default,slop,for,phrases,if,zero,then,exact,phrase,matches,are,required,default,value,is,zero;public,query,string,query,builder,phrase,slop,int,phrase,slop,this,phrase,slop,phrase,slop,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder phraseSlop(int phraseSlop);1525334055;Sets the default slop for phrases.  If zero, then exact phrase matches_are required. Default value is zero.;public QueryStringQueryBuilder phraseSlop(int phraseSlop) {_        this.phraseSlop = phraseSlop__        return this__    };sets,the,default,slop,for,phrases,if,zero,then,exact,phrase,matches,are,required,default,value,is,zero;public,query,string,query,builder,phrase,slop,int,phrase,slop,this,phrase,slop,phrase,slop,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder phraseSlop(int phraseSlop);1535046779;Sets the default slop for phrases.  If zero, then exact phrase matches_are required. Default value is zero.;public QueryStringQueryBuilder phraseSlop(int phraseSlop) {_        this.phraseSlop = phraseSlop__        return this__    };sets,the,default,slop,for,phrases,if,zero,then,exact,phrase,matches,are,required,default,value,is,zero;public,query,string,query,builder,phrase,slop,int,phrase,slop,this,phrase,slop,phrase,slop,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder phraseSlop(int phraseSlop);1535139672;Sets the default slop for phrases.  If zero, then exact phrase matches_are required. Default value is zero.;public QueryStringQueryBuilder phraseSlop(int phraseSlop) {_        this.phraseSlop = phraseSlop__        return this__    };sets,the,default,slop,for,phrases,if,zero,then,exact,phrase,matches,are,required,default,value,is,zero;public,query,string,query,builder,phrase,slop,int,phrase,slop,this,phrase,slop,phrase,slop,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder phraseSlop(int phraseSlop);1542726437;Sets the default slop for phrases.  If zero, then exact phrase matches_are required. Default value is zero.;public QueryStringQueryBuilder phraseSlop(int phraseSlop) {_        this.phraseSlop = phraseSlop__        return this__    };sets,the,default,slop,for,phrases,if,zero,then,exact,phrase,matches,are,required,default,value,is,zero;public,query,string,query,builder,phrase,slop,int,phrase,slop,this,phrase,slop,phrase,slop,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder phraseSlop(int phraseSlop);1542792548;Sets the default slop for phrases.  If zero, then exact phrase matches_are required. Default value is zero.;public QueryStringQueryBuilder phraseSlop(int phraseSlop) {_        this.phraseSlop = phraseSlop__        return this__    };sets,the,default,slop,for,phrases,if,zero,then,exact,phrase,matches,are,required,default,value,is,zero;public,query,string,query,builder,phrase,slop,int,phrase,slop,this,phrase,slop,phrase,slop,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder phraseSlop(int phraseSlop);1543399743;Sets the default slop for phrases.  If zero, then exact phrase matches_are required. Default value is zero.;public QueryStringQueryBuilder phraseSlop(int phraseSlop) {_        this.phraseSlop = phraseSlop__        return this__    };sets,the,default,slop,for,phrases,if,zero,then,exact,phrase,matches,are,required,default,value,is,zero;public,query,string,query,builder,phrase,slop,int,phrase,slop,this,phrase,slop,phrase,slop,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder phraseSlop(int phraseSlop);1548236405;Sets the default slop for phrases.  If zero, then exact phrase matches_are required. Default value is zero.;public QueryStringQueryBuilder phraseSlop(int phraseSlop) {_        this.phraseSlop = phraseSlop__        return this__    };sets,the,default,slop,for,phrases,if,zero,then,exact,phrase,matches,are,required,default,value,is,zero;public,query,string,query,builder,phrase,slop,int,phrase,slop,this,phrase,slop,phrase,slop,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder phraseSlop(int phraseSlop);1549017700;Sets the default slop for phrases.  If zero, then exact phrase matches_are required. Default value is zero.;public QueryStringQueryBuilder phraseSlop(int phraseSlop) {_        this.phraseSlop = phraseSlop__        return this__    };sets,the,default,slop,for,phrases,if,zero,then,exact,phrase,matches,are,required,default,value,is,zero;public,query,string,query,builder,phrase,slop,int,phrase,slop,this,phrase,slop,phrase,slop,return,this
QueryStringQueryBuilder -> public String analyzer();1524684173;The optional analyzer used to analyze the query string. Note, if a field has search analyzer_defined for it, then it will be used automatically. Defaults to the smart search analyzer.;public String analyzer() {_        return analyzer__    };the,optional,analyzer,used,to,analyze,the,query,string,note,if,a,field,has,search,analyzer,defined,for,it,then,it,will,be,used,automatically,defaults,to,the,smart,search,analyzer;public,string,analyzer,return,analyzer
QueryStringQueryBuilder -> public String analyzer();1525334055;The optional analyzer used to analyze the query string. Note, if a field has search analyzer_defined for it, then it will be used automatically. Defaults to the smart search analyzer.;public String analyzer() {_        return analyzer__    };the,optional,analyzer,used,to,analyze,the,query,string,note,if,a,field,has,search,analyzer,defined,for,it,then,it,will,be,used,automatically,defaults,to,the,smart,search,analyzer;public,string,analyzer,return,analyzer
QueryStringQueryBuilder -> public String analyzer();1535046779;The optional analyzer used to analyze the query string. Note, if a field has search analyzer_defined for it, then it will be used automatically. Defaults to the smart search analyzer.;public String analyzer() {_        return analyzer__    };the,optional,analyzer,used,to,analyze,the,query,string,note,if,a,field,has,search,analyzer,defined,for,it,then,it,will,be,used,automatically,defaults,to,the,smart,search,analyzer;public,string,analyzer,return,analyzer
QueryStringQueryBuilder -> public String analyzer();1535139672;The optional analyzer used to analyze the query string. Note, if a field has search analyzer_defined for it, then it will be used automatically. Defaults to the smart search analyzer.;public String analyzer() {_        return analyzer__    };the,optional,analyzer,used,to,analyze,the,query,string,note,if,a,field,has,search,analyzer,defined,for,it,then,it,will,be,used,automatically,defaults,to,the,smart,search,analyzer;public,string,analyzer,return,analyzer
QueryStringQueryBuilder -> public String analyzer();1542726437;The optional analyzer used to analyze the query string. Note, if a field has search analyzer_defined for it, then it will be used automatically. Defaults to the smart search analyzer.;public String analyzer() {_        return analyzer__    };the,optional,analyzer,used,to,analyze,the,query,string,note,if,a,field,has,search,analyzer,defined,for,it,then,it,will,be,used,automatically,defaults,to,the,smart,search,analyzer;public,string,analyzer,return,analyzer
QueryStringQueryBuilder -> public String analyzer();1542792548;The optional analyzer used to analyze the query string. Note, if a field has search analyzer_defined for it, then it will be used automatically. Defaults to the smart search analyzer.;public String analyzer() {_        return analyzer__    };the,optional,analyzer,used,to,analyze,the,query,string,note,if,a,field,has,search,analyzer,defined,for,it,then,it,will,be,used,automatically,defaults,to,the,smart,search,analyzer;public,string,analyzer,return,analyzer
QueryStringQueryBuilder -> public String analyzer();1543399743;The optional analyzer used to analyze the query string. Note, if a field has search analyzer_defined for it, then it will be used automatically. Defaults to the smart search analyzer.;public String analyzer() {_        return analyzer__    };the,optional,analyzer,used,to,analyze,the,query,string,note,if,a,field,has,search,analyzer,defined,for,it,then,it,will,be,used,automatically,defaults,to,the,smart,search,analyzer;public,string,analyzer,return,analyzer
QueryStringQueryBuilder -> public String analyzer();1548236405;The optional analyzer used to analyze the query string. Note, if a field has search analyzer_defined for it, then it will be used automatically. Defaults to the smart search analyzer.;public String analyzer() {_        return analyzer__    };the,optional,analyzer,used,to,analyze,the,query,string,note,if,a,field,has,search,analyzer,defined,for,it,then,it,will,be,used,automatically,defaults,to,the,smart,search,analyzer;public,string,analyzer,return,analyzer
QueryStringQueryBuilder -> public String analyzer();1549017700;The optional analyzer used to analyze the query string. Note, if a field has search analyzer_defined for it, then it will be used automatically. Defaults to the smart search analyzer.;public String analyzer() {_        return analyzer__    };the,optional,analyzer,used,to,analyze,the,query,string,note,if,a,field,has,search,analyzer,defined,for,it,then,it,will,be,used,automatically,defaults,to,the,smart,search,analyzer;public,string,analyzer,return,analyzer
QueryStringQueryBuilder -> public QueryStringQueryBuilder tieBreaker(float tieBreaker);1524684173;When more than one field is used with the query string, and combined queries are using_dis max, control the tie breaker for it.;public QueryStringQueryBuilder tieBreaker(float tieBreaker) {_        this.tieBreaker = tieBreaker__        return this__    };when,more,than,one,field,is,used,with,the,query,string,and,combined,queries,are,using,dis,max,control,the,tie,breaker,for,it;public,query,string,query,builder,tie,breaker,float,tie,breaker,this,tie,breaker,tie,breaker,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder tieBreaker(float tieBreaker);1525334055;When more than one field is used with the query string, and combined queries are using_dis max, control the tie breaker for it.;public QueryStringQueryBuilder tieBreaker(float tieBreaker) {_        this.tieBreaker = tieBreaker__        return this__    };when,more,than,one,field,is,used,with,the,query,string,and,combined,queries,are,using,dis,max,control,the,tie,breaker,for,it;public,query,string,query,builder,tie,breaker,float,tie,breaker,this,tie,breaker,tie,breaker,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder tieBreaker(float tieBreaker);1535046779;When more than one field is used with the query string, and combined queries are using_dis max, control the tie breaker for it.;public QueryStringQueryBuilder tieBreaker(float tieBreaker) {_        this.tieBreaker = tieBreaker__        return this__    };when,more,than,one,field,is,used,with,the,query,string,and,combined,queries,are,using,dis,max,control,the,tie,breaker,for,it;public,query,string,query,builder,tie,breaker,float,tie,breaker,this,tie,breaker,tie,breaker,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder tieBreaker(float tieBreaker);1535139672;When more than one field is used with the query string, and combined queries are using_dis max, control the tie breaker for it.;public QueryStringQueryBuilder tieBreaker(float tieBreaker) {_        this.tieBreaker = tieBreaker__        return this__    };when,more,than,one,field,is,used,with,the,query,string,and,combined,queries,are,using,dis,max,control,the,tie,breaker,for,it;public,query,string,query,builder,tie,breaker,float,tie,breaker,this,tie,breaker,tie,breaker,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder tieBreaker(float tieBreaker);1542726437;When more than one field is used with the query string, and combined queries are using_dis max, control the tie breaker for it.;public QueryStringQueryBuilder tieBreaker(float tieBreaker) {_        this.tieBreaker = tieBreaker__        return this__    };when,more,than,one,field,is,used,with,the,query,string,and,combined,queries,are,using,dis,max,control,the,tie,breaker,for,it;public,query,string,query,builder,tie,breaker,float,tie,breaker,this,tie,breaker,tie,breaker,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder tieBreaker(float tieBreaker);1542792548;When more than one field is used with the query string, and combined queries are using_dis max, control the tie breaker for it.;public QueryStringQueryBuilder tieBreaker(float tieBreaker) {_        this.tieBreaker = tieBreaker__        return this__    };when,more,than,one,field,is,used,with,the,query,string,and,combined,queries,are,using,dis,max,control,the,tie,breaker,for,it;public,query,string,query,builder,tie,breaker,float,tie,breaker,this,tie,breaker,tie,breaker,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder tieBreaker(float tieBreaker);1543399743;When more than one field is used with the query string, and combined queries are using_dis max, control the tie breaker for it.;public QueryStringQueryBuilder tieBreaker(float tieBreaker) {_        this.tieBreaker = tieBreaker__        return this__    };when,more,than,one,field,is,used,with,the,query,string,and,combined,queries,are,using,dis,max,control,the,tie,breaker,for,it;public,query,string,query,builder,tie,breaker,float,tie,breaker,this,tie,breaker,tie,breaker,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder tieBreaker(float tieBreaker);1548236405;When more than one field is used with the query string, and combined queries are using_dis max, control the tie breaker for it.;public QueryStringQueryBuilder tieBreaker(float tieBreaker) {_        this.tieBreaker = tieBreaker__        return this__    };when,more,than,one,field,is,used,with,the,query,string,and,combined,queries,are,using,dis,max,control,the,tie,breaker,for,it;public,query,string,query,builder,tie,breaker,float,tie,breaker,this,tie,breaker,tie,breaker,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder tieBreaker(float tieBreaker);1549017700;When more than one field is used with the query string, and combined queries are using_dis max, control the tie breaker for it.;public QueryStringQueryBuilder tieBreaker(float tieBreaker) {_        this.tieBreaker = tieBreaker__        return this__    };when,more,than,one,field,is,used,with,the,query,string,and,combined,queries,are,using,dis,max,control,the,tie,breaker,for,it;public,query,string,query,builder,tie,breaker,float,tie,breaker,this,tie,breaker,tie,breaker,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder defaultField(String defaultField);1524684173;The default field to run against when no prefix field is specified. Only relevant when_not explicitly adding fields the query string will run against.;public QueryStringQueryBuilder defaultField(String defaultField) {_        this.defaultField = defaultField__        return this__    };the,default,field,to,run,against,when,no,prefix,field,is,specified,only,relevant,when,not,explicitly,adding,fields,the,query,string,will,run,against;public,query,string,query,builder,default,field,string,default,field,this,default,field,default,field,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder defaultField(String defaultField);1525334055;The default field to run against when no prefix field is specified. Only relevant when_not explicitly adding fields the query string will run against.;public QueryStringQueryBuilder defaultField(String defaultField) {_        this.defaultField = defaultField__        return this__    };the,default,field,to,run,against,when,no,prefix,field,is,specified,only,relevant,when,not,explicitly,adding,fields,the,query,string,will,run,against;public,query,string,query,builder,default,field,string,default,field,this,default,field,default,field,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder defaultField(String defaultField);1535046779;The default field to run against when no prefix field is specified. Only relevant when_not explicitly adding fields the query string will run against.;public QueryStringQueryBuilder defaultField(String defaultField) {_        this.defaultField = defaultField__        return this__    };the,default,field,to,run,against,when,no,prefix,field,is,specified,only,relevant,when,not,explicitly,adding,fields,the,query,string,will,run,against;public,query,string,query,builder,default,field,string,default,field,this,default,field,default,field,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder defaultField(String defaultField);1535139672;The default field to run against when no prefix field is specified. Only relevant when_not explicitly adding fields the query string will run against.;public QueryStringQueryBuilder defaultField(String defaultField) {_        this.defaultField = defaultField__        return this__    };the,default,field,to,run,against,when,no,prefix,field,is,specified,only,relevant,when,not,explicitly,adding,fields,the,query,string,will,run,against;public,query,string,query,builder,default,field,string,default,field,this,default,field,default,field,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder defaultField(String defaultField);1542726437;The default field to run against when no prefix field is specified. Only relevant when_not explicitly adding fields the query string will run against.;public QueryStringQueryBuilder defaultField(String defaultField) {_        this.defaultField = defaultField__        return this__    };the,default,field,to,run,against,when,no,prefix,field,is,specified,only,relevant,when,not,explicitly,adding,fields,the,query,string,will,run,against;public,query,string,query,builder,default,field,string,default,field,this,default,field,default,field,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder defaultField(String defaultField);1542792548;The default field to run against when no prefix field is specified. Only relevant when_not explicitly adding fields the query string will run against.;public QueryStringQueryBuilder defaultField(String defaultField) {_        this.defaultField = defaultField__        return this__    };the,default,field,to,run,against,when,no,prefix,field,is,specified,only,relevant,when,not,explicitly,adding,fields,the,query,string,will,run,against;public,query,string,query,builder,default,field,string,default,field,this,default,field,default,field,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder defaultField(String defaultField);1543399743;The default field to run against when no prefix field is specified. Only relevant when_not explicitly adding fields the query string will run against.;public QueryStringQueryBuilder defaultField(String defaultField) {_        this.defaultField = defaultField__        return this__    };the,default,field,to,run,against,when,no,prefix,field,is,specified,only,relevant,when,not,explicitly,adding,fields,the,query,string,will,run,against;public,query,string,query,builder,default,field,string,default,field,this,default,field,default,field,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder defaultField(String defaultField);1548236405;The default field to run against when no prefix field is specified. Only relevant when_not explicitly adding fields the query string will run against.;public QueryStringQueryBuilder defaultField(String defaultField) {_        this.defaultField = defaultField__        return this__    };the,default,field,to,run,against,when,no,prefix,field,is,specified,only,relevant,when,not,explicitly,adding,fields,the,query,string,will,run,against;public,query,string,query,builder,default,field,string,default,field,this,default,field,default,field,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder defaultField(String defaultField);1549017700;The default field to run against when no prefix field is specified. Only relevant when_not explicitly adding fields the query string will run against.;public QueryStringQueryBuilder defaultField(String defaultField) {_        this.defaultField = defaultField__        return this__    };the,default,field,to,run,against,when,no,prefix,field,is,specified,only,relevant,when,not,explicitly,adding,fields,the,query,string,will,run,against;public,query,string,query,builder,default,field,string,default,field,this,default,field,default,field,return,this
QueryStringQueryBuilder -> public String quoteAnalyzer();1524684173;The optional analyzer used to analyze the query string for phrase searches. Note, if a field has search (quote) analyzer_defined for it, then it will be used automatically. Defaults to the smart search analyzer.;public String quoteAnalyzer() {_        return quoteAnalyzer__    };the,optional,analyzer,used,to,analyze,the,query,string,for,phrase,searches,note,if,a,field,has,search,quote,analyzer,defined,for,it,then,it,will,be,used,automatically,defaults,to,the,smart,search,analyzer;public,string,quote,analyzer,return,quote,analyzer
QueryStringQueryBuilder -> public String quoteAnalyzer();1525334055;The optional analyzer used to analyze the query string for phrase searches. Note, if a field has search (quote) analyzer_defined for it, then it will be used automatically. Defaults to the smart search analyzer.;public String quoteAnalyzer() {_        return quoteAnalyzer__    };the,optional,analyzer,used,to,analyze,the,query,string,for,phrase,searches,note,if,a,field,has,search,quote,analyzer,defined,for,it,then,it,will,be,used,automatically,defaults,to,the,smart,search,analyzer;public,string,quote,analyzer,return,quote,analyzer
QueryStringQueryBuilder -> public String quoteAnalyzer();1535046779;The optional analyzer used to analyze the query string for phrase searches. Note, if a field has search (quote) analyzer_defined for it, then it will be used automatically. Defaults to the smart search analyzer.;public String quoteAnalyzer() {_        return quoteAnalyzer__    };the,optional,analyzer,used,to,analyze,the,query,string,for,phrase,searches,note,if,a,field,has,search,quote,analyzer,defined,for,it,then,it,will,be,used,automatically,defaults,to,the,smart,search,analyzer;public,string,quote,analyzer,return,quote,analyzer
QueryStringQueryBuilder -> public String quoteAnalyzer();1535139672;The optional analyzer used to analyze the query string for phrase searches. Note, if a field has search (quote) analyzer_defined for it, then it will be used automatically. Defaults to the smart search analyzer.;public String quoteAnalyzer() {_        return quoteAnalyzer__    };the,optional,analyzer,used,to,analyze,the,query,string,for,phrase,searches,note,if,a,field,has,search,quote,analyzer,defined,for,it,then,it,will,be,used,automatically,defaults,to,the,smart,search,analyzer;public,string,quote,analyzer,return,quote,analyzer
QueryStringQueryBuilder -> public String quoteAnalyzer();1542726437;The optional analyzer used to analyze the query string for phrase searches. Note, if a field has search (quote) analyzer_defined for it, then it will be used automatically. Defaults to the smart search analyzer.;public String quoteAnalyzer() {_        return quoteAnalyzer__    };the,optional,analyzer,used,to,analyze,the,query,string,for,phrase,searches,note,if,a,field,has,search,quote,analyzer,defined,for,it,then,it,will,be,used,automatically,defaults,to,the,smart,search,analyzer;public,string,quote,analyzer,return,quote,analyzer
QueryStringQueryBuilder -> public String quoteAnalyzer();1542792548;The optional analyzer used to analyze the query string for phrase searches. Note, if a field has search (quote) analyzer_defined for it, then it will be used automatically. Defaults to the smart search analyzer.;public String quoteAnalyzer() {_        return quoteAnalyzer__    };the,optional,analyzer,used,to,analyze,the,query,string,for,phrase,searches,note,if,a,field,has,search,quote,analyzer,defined,for,it,then,it,will,be,used,automatically,defaults,to,the,smart,search,analyzer;public,string,quote,analyzer,return,quote,analyzer
QueryStringQueryBuilder -> public String quoteAnalyzer();1543399743;The optional analyzer used to analyze the query string for phrase searches. Note, if a field has search (quote) analyzer_defined for it, then it will be used automatically. Defaults to the smart search analyzer.;public String quoteAnalyzer() {_        return quoteAnalyzer__    };the,optional,analyzer,used,to,analyze,the,query,string,for,phrase,searches,note,if,a,field,has,search,quote,analyzer,defined,for,it,then,it,will,be,used,automatically,defaults,to,the,smart,search,analyzer;public,string,quote,analyzer,return,quote,analyzer
QueryStringQueryBuilder -> public String quoteAnalyzer();1548236405;The optional analyzer used to analyze the query string for phrase searches. Note, if a field has search (quote) analyzer_defined for it, then it will be used automatically. Defaults to the smart search analyzer.;public String quoteAnalyzer() {_        return quoteAnalyzer__    };the,optional,analyzer,used,to,analyze,the,query,string,for,phrase,searches,note,if,a,field,has,search,quote,analyzer,defined,for,it,then,it,will,be,used,automatically,defaults,to,the,smart,search,analyzer;public,string,quote,analyzer,return,quote,analyzer
QueryStringQueryBuilder -> public String quoteAnalyzer();1549017700;The optional analyzer used to analyze the query string for phrase searches. Note, if a field has search (quote) analyzer_defined for it, then it will be used automatically. Defaults to the smart search analyzer.;public String quoteAnalyzer() {_        return quoteAnalyzer__    };the,optional,analyzer,used,to,analyze,the,query,string,for,phrase,searches,note,if,a,field,has,search,quote,analyzer,defined,for,it,then,it,will,be,used,automatically,defaults,to,the,smart,search,analyzer;public,string,quote,analyzer,return,quote,analyzer
QueryStringQueryBuilder -> @Deprecated     public QueryStringQueryBuilder useDisMax(boolean useDisMax);1524684173;Use {@link QueryStringQueryBuilder#tieBreaker} instead.;@Deprecated_    public QueryStringQueryBuilder useDisMax(boolean useDisMax) {_        return this__    };use,link,query,string,query,builder,tie,breaker,instead;deprecated,public,query,string,query,builder,use,dis,max,boolean,use,dis,max,return,this
QueryStringQueryBuilder -> @Deprecated     public QueryStringQueryBuilder useDisMax(boolean useDisMax);1525334055;Use {@link QueryStringQueryBuilder#tieBreaker} instead.;@Deprecated_    public QueryStringQueryBuilder useDisMax(boolean useDisMax) {_        return this__    };use,link,query,string,query,builder,tie,breaker,instead;deprecated,public,query,string,query,builder,use,dis,max,boolean,use,dis,max,return,this
QueryStringQueryBuilder -> @Deprecated     public QueryStringQueryBuilder useDisMax(boolean useDisMax);1535046779;Use {@link QueryStringQueryBuilder#tieBreaker} instead.;@Deprecated_    public QueryStringQueryBuilder useDisMax(boolean useDisMax) {_        return this__    };use,link,query,string,query,builder,tie,breaker,instead;deprecated,public,query,string,query,builder,use,dis,max,boolean,use,dis,max,return,this
QueryStringQueryBuilder -> @Deprecated     public QueryStringQueryBuilder useDisMax(boolean useDisMax);1535139672;Use {@link QueryStringQueryBuilder#tieBreaker} instead.;@Deprecated_    public QueryStringQueryBuilder useDisMax(boolean useDisMax) {_        return this__    };use,link,query,string,query,builder,tie,breaker,instead;deprecated,public,query,string,query,builder,use,dis,max,boolean,use,dis,max,return,this
QueryStringQueryBuilder -> @Deprecated     public QueryStringQueryBuilder useDisMax(boolean useDisMax);1542726437;Use {@link QueryStringQueryBuilder#tieBreaker} instead.;@Deprecated_    public QueryStringQueryBuilder useDisMax(boolean useDisMax) {_        return this__    };use,link,query,string,query,builder,tie,breaker,instead;deprecated,public,query,string,query,builder,use,dis,max,boolean,use,dis,max,return,this
QueryStringQueryBuilder -> @Deprecated     public QueryStringQueryBuilder useDisMax(boolean useDisMax);1542792548;Use {@link QueryStringQueryBuilder#tieBreaker} instead.;@Deprecated_    public QueryStringQueryBuilder useDisMax(boolean useDisMax) {_        return this__    };use,link,query,string,query,builder,tie,breaker,instead;deprecated,public,query,string,query,builder,use,dis,max,boolean,use,dis,max,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder fuzzyTranspositions(boolean fuzzyTranspositions);1524684173;Sets whether transpositions are supported in fuzzy queries.<p>_The default metric used by fuzzy queries to determine a match is the Damerau-Levenshtein_distance formula which supports transpositions. Setting transposition to false will_switch to classic Levenshtein distance.<br>_If not set, Damerau-Levenshtein distance metric will be used.;public QueryStringQueryBuilder fuzzyTranspositions(boolean fuzzyTranspositions) {_        this.fuzzyTranspositions = fuzzyTranspositions__        return this__    };sets,whether,transpositions,are,supported,in,fuzzy,queries,p,the,default,metric,used,by,fuzzy,queries,to,determine,a,match,is,the,damerau,levenshtein,distance,formula,which,supports,transpositions,setting,transposition,to,false,will,switch,to,classic,levenshtein,distance,br,if,not,set,damerau,levenshtein,distance,metric,will,be,used;public,query,string,query,builder,fuzzy,transpositions,boolean,fuzzy,transpositions,this,fuzzy,transpositions,fuzzy,transpositions,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder fuzzyTranspositions(boolean fuzzyTranspositions);1525334055;Sets whether transpositions are supported in fuzzy queries.<p>_The default metric used by fuzzy queries to determine a match is the Damerau-Levenshtein_distance formula which supports transpositions. Setting transposition to false will_switch to classic Levenshtein distance.<br>_If not set, Damerau-Levenshtein distance metric will be used.;public QueryStringQueryBuilder fuzzyTranspositions(boolean fuzzyTranspositions) {_        this.fuzzyTranspositions = fuzzyTranspositions__        return this__    };sets,whether,transpositions,are,supported,in,fuzzy,queries,p,the,default,metric,used,by,fuzzy,queries,to,determine,a,match,is,the,damerau,levenshtein,distance,formula,which,supports,transpositions,setting,transposition,to,false,will,switch,to,classic,levenshtein,distance,br,if,not,set,damerau,levenshtein,distance,metric,will,be,used;public,query,string,query,builder,fuzzy,transpositions,boolean,fuzzy,transpositions,this,fuzzy,transpositions,fuzzy,transpositions,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder fuzzyTranspositions(boolean fuzzyTranspositions);1535046779;Sets whether transpositions are supported in fuzzy queries.<p>_The default metric used by fuzzy queries to determine a match is the Damerau-Levenshtein_distance formula which supports transpositions. Setting transposition to false will_switch to classic Levenshtein distance.<br>_If not set, Damerau-Levenshtein distance metric will be used.;public QueryStringQueryBuilder fuzzyTranspositions(boolean fuzzyTranspositions) {_        this.fuzzyTranspositions = fuzzyTranspositions__        return this__    };sets,whether,transpositions,are,supported,in,fuzzy,queries,p,the,default,metric,used,by,fuzzy,queries,to,determine,a,match,is,the,damerau,levenshtein,distance,formula,which,supports,transpositions,setting,transposition,to,false,will,switch,to,classic,levenshtein,distance,br,if,not,set,damerau,levenshtein,distance,metric,will,be,used;public,query,string,query,builder,fuzzy,transpositions,boolean,fuzzy,transpositions,this,fuzzy,transpositions,fuzzy,transpositions,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder fuzzyTranspositions(boolean fuzzyTranspositions);1535139672;Sets whether transpositions are supported in fuzzy queries.<p>_The default metric used by fuzzy queries to determine a match is the Damerau-Levenshtein_distance formula which supports transpositions. Setting transposition to false will_switch to classic Levenshtein distance.<br>_If not set, Damerau-Levenshtein distance metric will be used.;public QueryStringQueryBuilder fuzzyTranspositions(boolean fuzzyTranspositions) {_        this.fuzzyTranspositions = fuzzyTranspositions__        return this__    };sets,whether,transpositions,are,supported,in,fuzzy,queries,p,the,default,metric,used,by,fuzzy,queries,to,determine,a,match,is,the,damerau,levenshtein,distance,formula,which,supports,transpositions,setting,transposition,to,false,will,switch,to,classic,levenshtein,distance,br,if,not,set,damerau,levenshtein,distance,metric,will,be,used;public,query,string,query,builder,fuzzy,transpositions,boolean,fuzzy,transpositions,this,fuzzy,transpositions,fuzzy,transpositions,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder fuzzyTranspositions(boolean fuzzyTranspositions);1542726437;Sets whether transpositions are supported in fuzzy queries.<p>_The default metric used by fuzzy queries to determine a match is the Damerau-Levenshtein_distance formula which supports transpositions. Setting transposition to false will_switch to classic Levenshtein distance.<br>_If not set, Damerau-Levenshtein distance metric will be used.;public QueryStringQueryBuilder fuzzyTranspositions(boolean fuzzyTranspositions) {_        this.fuzzyTranspositions = fuzzyTranspositions__        return this__    };sets,whether,transpositions,are,supported,in,fuzzy,queries,p,the,default,metric,used,by,fuzzy,queries,to,determine,a,match,is,the,damerau,levenshtein,distance,formula,which,supports,transpositions,setting,transposition,to,false,will,switch,to,classic,levenshtein,distance,br,if,not,set,damerau,levenshtein,distance,metric,will,be,used;public,query,string,query,builder,fuzzy,transpositions,boolean,fuzzy,transpositions,this,fuzzy,transpositions,fuzzy,transpositions,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder fuzzyTranspositions(boolean fuzzyTranspositions);1542792548;Sets whether transpositions are supported in fuzzy queries.<p>_The default metric used by fuzzy queries to determine a match is the Damerau-Levenshtein_distance formula which supports transpositions. Setting transposition to false will_switch to classic Levenshtein distance.<br>_If not set, Damerau-Levenshtein distance metric will be used.;public QueryStringQueryBuilder fuzzyTranspositions(boolean fuzzyTranspositions) {_        this.fuzzyTranspositions = fuzzyTranspositions__        return this__    };sets,whether,transpositions,are,supported,in,fuzzy,queries,p,the,default,metric,used,by,fuzzy,queries,to,determine,a,match,is,the,damerau,levenshtein,distance,formula,which,supports,transpositions,setting,transposition,to,false,will,switch,to,classic,levenshtein,distance,br,if,not,set,damerau,levenshtein,distance,metric,will,be,used;public,query,string,query,builder,fuzzy,transpositions,boolean,fuzzy,transpositions,this,fuzzy,transpositions,fuzzy,transpositions,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder fuzzyTranspositions(boolean fuzzyTranspositions);1543399743;Sets whether transpositions are supported in fuzzy queries.<p>_The default metric used by fuzzy queries to determine a match is the Damerau-Levenshtein_distance formula which supports transpositions. Setting transposition to false will_switch to classic Levenshtein distance.<br>_If not set, Damerau-Levenshtein distance metric will be used.;public QueryStringQueryBuilder fuzzyTranspositions(boolean fuzzyTranspositions) {_        this.fuzzyTranspositions = fuzzyTranspositions__        return this__    };sets,whether,transpositions,are,supported,in,fuzzy,queries,p,the,default,metric,used,by,fuzzy,queries,to,determine,a,match,is,the,damerau,levenshtein,distance,formula,which,supports,transpositions,setting,transposition,to,false,will,switch,to,classic,levenshtein,distance,br,if,not,set,damerau,levenshtein,distance,metric,will,be,used;public,query,string,query,builder,fuzzy,transpositions,boolean,fuzzy,transpositions,this,fuzzy,transpositions,fuzzy,transpositions,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder fuzzyTranspositions(boolean fuzzyTranspositions);1548236405;Sets whether transpositions are supported in fuzzy queries.<p>_The default metric used by fuzzy queries to determine a match is the Damerau-Levenshtein_distance formula which supports transpositions. Setting transposition to false will_switch to classic Levenshtein distance.<br>_If not set, Damerau-Levenshtein distance metric will be used.;public QueryStringQueryBuilder fuzzyTranspositions(boolean fuzzyTranspositions) {_        this.fuzzyTranspositions = fuzzyTranspositions__        return this__    };sets,whether,transpositions,are,supported,in,fuzzy,queries,p,the,default,metric,used,by,fuzzy,queries,to,determine,a,match,is,the,damerau,levenshtein,distance,formula,which,supports,transpositions,setting,transposition,to,false,will,switch,to,classic,levenshtein,distance,br,if,not,set,damerau,levenshtein,distance,metric,will,be,used;public,query,string,query,builder,fuzzy,transpositions,boolean,fuzzy,transpositions,this,fuzzy,transpositions,fuzzy,transpositions,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder fuzzyTranspositions(boolean fuzzyTranspositions);1549017700;Sets whether transpositions are supported in fuzzy queries.<p>_The default metric used by fuzzy queries to determine a match is the Damerau-Levenshtein_distance formula which supports transpositions. Setting transposition to false will_switch to classic Levenshtein distance.<br>_If not set, Damerau-Levenshtein distance metric will be used.;public QueryStringQueryBuilder fuzzyTranspositions(boolean fuzzyTranspositions) {_        this.fuzzyTranspositions = fuzzyTranspositions__        return this__    };sets,whether,transpositions,are,supported,in,fuzzy,queries,p,the,default,metric,used,by,fuzzy,queries,to,determine,a,match,is,the,damerau,levenshtein,distance,formula,which,supports,transpositions,setting,transposition,to,false,will,switch,to,classic,levenshtein,distance,br,if,not,set,damerau,levenshtein,distance,metric,will,be,used;public,query,string,query,builder,fuzzy,transpositions,boolean,fuzzy,transpositions,this,fuzzy,transpositions,fuzzy,transpositions,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder lenient(Boolean lenient);1524684173;Sets the query string parser to be lenient when parsing field values, defaults to the index_setting and if not set, defaults to false.;public QueryStringQueryBuilder lenient(Boolean lenient) {_        this.lenient = lenient__        return this__    };sets,the,query,string,parser,to,be,lenient,when,parsing,field,values,defaults,to,the,index,setting,and,if,not,set,defaults,to,false;public,query,string,query,builder,lenient,boolean,lenient,this,lenient,lenient,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder lenient(Boolean lenient);1525334055;Sets the query string parser to be lenient when parsing field values, defaults to the index_setting and if not set, defaults to false.;public QueryStringQueryBuilder lenient(Boolean lenient) {_        this.lenient = lenient__        return this__    };sets,the,query,string,parser,to,be,lenient,when,parsing,field,values,defaults,to,the,index,setting,and,if,not,set,defaults,to,false;public,query,string,query,builder,lenient,boolean,lenient,this,lenient,lenient,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder lenient(Boolean lenient);1535046779;Sets the query string parser to be lenient when parsing field values, defaults to the index_setting and if not set, defaults to false.;public QueryStringQueryBuilder lenient(Boolean lenient) {_        this.lenient = lenient__        return this__    };sets,the,query,string,parser,to,be,lenient,when,parsing,field,values,defaults,to,the,index,setting,and,if,not,set,defaults,to,false;public,query,string,query,builder,lenient,boolean,lenient,this,lenient,lenient,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder lenient(Boolean lenient);1535139672;Sets the query string parser to be lenient when parsing field values, defaults to the index_setting and if not set, defaults to false.;public QueryStringQueryBuilder lenient(Boolean lenient) {_        this.lenient = lenient__        return this__    };sets,the,query,string,parser,to,be,lenient,when,parsing,field,values,defaults,to,the,index,setting,and,if,not,set,defaults,to,false;public,query,string,query,builder,lenient,boolean,lenient,this,lenient,lenient,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder lenient(Boolean lenient);1542726437;Sets the query string parser to be lenient when parsing field values, defaults to the index_setting and if not set, defaults to false.;public QueryStringQueryBuilder lenient(Boolean lenient) {_        this.lenient = lenient__        return this__    };sets,the,query,string,parser,to,be,lenient,when,parsing,field,values,defaults,to,the,index,setting,and,if,not,set,defaults,to,false;public,query,string,query,builder,lenient,boolean,lenient,this,lenient,lenient,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder lenient(Boolean lenient);1542792548;Sets the query string parser to be lenient when parsing field values, defaults to the index_setting and if not set, defaults to false.;public QueryStringQueryBuilder lenient(Boolean lenient) {_        this.lenient = lenient__        return this__    };sets,the,query,string,parser,to,be,lenient,when,parsing,field,values,defaults,to,the,index,setting,and,if,not,set,defaults,to,false;public,query,string,query,builder,lenient,boolean,lenient,this,lenient,lenient,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder lenient(Boolean lenient);1543399743;Sets the query string parser to be lenient when parsing field values, defaults to the index_setting and if not set, defaults to false.;public QueryStringQueryBuilder lenient(Boolean lenient) {_        this.lenient = lenient__        return this__    };sets,the,query,string,parser,to,be,lenient,when,parsing,field,values,defaults,to,the,index,setting,and,if,not,set,defaults,to,false;public,query,string,query,builder,lenient,boolean,lenient,this,lenient,lenient,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder lenient(Boolean lenient);1548236405;Sets the query string parser to be lenient when parsing field values, defaults to the index_setting and if not set, defaults to false.;public QueryStringQueryBuilder lenient(Boolean lenient) {_        this.lenient = lenient__        return this__    };sets,the,query,string,parser,to,be,lenient,when,parsing,field,values,defaults,to,the,index,setting,and,if,not,set,defaults,to,false;public,query,string,query,builder,lenient,boolean,lenient,this,lenient,lenient,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder lenient(Boolean lenient);1549017700;Sets the query string parser to be lenient when parsing field values, defaults to the index_setting and if not set, defaults to false.;public QueryStringQueryBuilder lenient(Boolean lenient) {_        this.lenient = lenient__        return this__    };sets,the,query,string,parser,to,be,lenient,when,parsing,field,values,defaults,to,the,index,setting,and,if,not,set,defaults,to,false;public,query,string,query,builder,lenient,boolean,lenient,this,lenient,lenient,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder field(String field);1524684173;Adds a field to run the query string against. The field will be associated with the_default boost of {@link AbstractQueryBuilder#DEFAULT_BOOST}._Use {@link #field(String, float)} to set a specific boost for the field.;public QueryStringQueryBuilder field(String field) {_        this.fieldsAndWeights.put(field, AbstractQueryBuilder.DEFAULT_BOOST)__        return this__    };adds,a,field,to,run,the,query,string,against,the,field,will,be,associated,with,the,default,boost,of,link,abstract,query,builder,use,link,field,string,float,to,set,a,specific,boost,for,the,field;public,query,string,query,builder,field,string,field,this,fields,and,weights,put,field,abstract,query,builder,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder field(String field);1525334055;Adds a field to run the query string against. The field will be associated with the_default boost of {@link AbstractQueryBuilder#DEFAULT_BOOST}._Use {@link #field(String, float)} to set a specific boost for the field.;public QueryStringQueryBuilder field(String field) {_        this.fieldsAndWeights.put(field, AbstractQueryBuilder.DEFAULT_BOOST)__        return this__    };adds,a,field,to,run,the,query,string,against,the,field,will,be,associated,with,the,default,boost,of,link,abstract,query,builder,use,link,field,string,float,to,set,a,specific,boost,for,the,field;public,query,string,query,builder,field,string,field,this,fields,and,weights,put,field,abstract,query,builder,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder field(String field);1535046779;Adds a field to run the query string against. The field will be associated with the_default boost of {@link AbstractQueryBuilder#DEFAULT_BOOST}._Use {@link #field(String, float)} to set a specific boost for the field.;public QueryStringQueryBuilder field(String field) {_        this.fieldsAndWeights.put(field, AbstractQueryBuilder.DEFAULT_BOOST)__        return this__    };adds,a,field,to,run,the,query,string,against,the,field,will,be,associated,with,the,default,boost,of,link,abstract,query,builder,use,link,field,string,float,to,set,a,specific,boost,for,the,field;public,query,string,query,builder,field,string,field,this,fields,and,weights,put,field,abstract,query,builder,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder field(String field);1535139672;Adds a field to run the query string against. The field will be associated with the_default boost of {@link AbstractQueryBuilder#DEFAULT_BOOST}._Use {@link #field(String, float)} to set a specific boost for the field.;public QueryStringQueryBuilder field(String field) {_        this.fieldsAndWeights.put(field, AbstractQueryBuilder.DEFAULT_BOOST)__        return this__    };adds,a,field,to,run,the,query,string,against,the,field,will,be,associated,with,the,default,boost,of,link,abstract,query,builder,use,link,field,string,float,to,set,a,specific,boost,for,the,field;public,query,string,query,builder,field,string,field,this,fields,and,weights,put,field,abstract,query,builder,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder field(String field);1542726437;Adds a field to run the query string against. The field will be associated with the_default boost of {@link AbstractQueryBuilder#DEFAULT_BOOST}._Use {@link #field(String, float)} to set a specific boost for the field.;public QueryStringQueryBuilder field(String field) {_        this.fieldsAndWeights.put(field, AbstractQueryBuilder.DEFAULT_BOOST)__        return this__    };adds,a,field,to,run,the,query,string,against,the,field,will,be,associated,with,the,default,boost,of,link,abstract,query,builder,use,link,field,string,float,to,set,a,specific,boost,for,the,field;public,query,string,query,builder,field,string,field,this,fields,and,weights,put,field,abstract,query,builder,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder field(String field);1542792548;Adds a field to run the query string against. The field will be associated with the_default boost of {@link AbstractQueryBuilder#DEFAULT_BOOST}._Use {@link #field(String, float)} to set a specific boost for the field.;public QueryStringQueryBuilder field(String field) {_        this.fieldsAndWeights.put(field, AbstractQueryBuilder.DEFAULT_BOOST)__        return this__    };adds,a,field,to,run,the,query,string,against,the,field,will,be,associated,with,the,default,boost,of,link,abstract,query,builder,use,link,field,string,float,to,set,a,specific,boost,for,the,field;public,query,string,query,builder,field,string,field,this,fields,and,weights,put,field,abstract,query,builder,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder field(String field);1543399743;Adds a field to run the query string against. The field will be associated with the_default boost of {@link AbstractQueryBuilder#DEFAULT_BOOST}._Use {@link #field(String, float)} to set a specific boost for the field.;public QueryStringQueryBuilder field(String field) {_        this.fieldsAndWeights.put(field, AbstractQueryBuilder.DEFAULT_BOOST)__        return this__    };adds,a,field,to,run,the,query,string,against,the,field,will,be,associated,with,the,default,boost,of,link,abstract,query,builder,use,link,field,string,float,to,set,a,specific,boost,for,the,field;public,query,string,query,builder,field,string,field,this,fields,and,weights,put,field,abstract,query,builder,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder field(String field);1548236405;Adds a field to run the query string against. The field will be associated with the_default boost of {@link AbstractQueryBuilder#DEFAULT_BOOST}._Use {@link #field(String, float)} to set a specific boost for the field.;public QueryStringQueryBuilder field(String field) {_        this.fieldsAndWeights.put(field, AbstractQueryBuilder.DEFAULT_BOOST)__        return this__    };adds,a,field,to,run,the,query,string,against,the,field,will,be,associated,with,the,default,boost,of,link,abstract,query,builder,use,link,field,string,float,to,set,a,specific,boost,for,the,field;public,query,string,query,builder,field,string,field,this,fields,and,weights,put,field,abstract,query,builder,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder field(String field);1549017700;Adds a field to run the query string against. The field will be associated with the_default boost of {@link AbstractQueryBuilder#DEFAULT_BOOST}._Use {@link #field(String, float)} to set a specific boost for the field.;public QueryStringQueryBuilder field(String field) {_        this.fieldsAndWeights.put(field, AbstractQueryBuilder.DEFAULT_BOOST)__        return this__    };adds,a,field,to,run,the,query,string,against,the,field,will,be,associated,with,the,default,boost,of,link,abstract,query,builder,use,link,field,string,float,to,set,a,specific,boost,for,the,field;public,query,string,query,builder,field,string,field,this,fields,and,weights,put,field,abstract,query,builder,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder fuzziness(Fuzziness fuzziness);1524684173;Set the edit distance for fuzzy queries. Default is "AUTO".;public QueryStringQueryBuilder fuzziness(Fuzziness fuzziness) {_        this.fuzziness = fuzziness == null ? DEFAULT_FUZZINESS : fuzziness__        return this__    };set,the,edit,distance,for,fuzzy,queries,default,is,auto;public,query,string,query,builder,fuzziness,fuzziness,fuzziness,this,fuzziness,fuzziness,null,fuzziness,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder fuzziness(Fuzziness fuzziness);1525334055;Set the edit distance for fuzzy queries. Default is "AUTO".;public QueryStringQueryBuilder fuzziness(Fuzziness fuzziness) {_        this.fuzziness = fuzziness == null ? DEFAULT_FUZZINESS : fuzziness__        return this__    };set,the,edit,distance,for,fuzzy,queries,default,is,auto;public,query,string,query,builder,fuzziness,fuzziness,fuzziness,this,fuzziness,fuzziness,null,fuzziness,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder fuzziness(Fuzziness fuzziness);1535046779;Set the edit distance for fuzzy queries. Default is "AUTO".;public QueryStringQueryBuilder fuzziness(Fuzziness fuzziness) {_        this.fuzziness = fuzziness == null ? DEFAULT_FUZZINESS : fuzziness__        return this__    };set,the,edit,distance,for,fuzzy,queries,default,is,auto;public,query,string,query,builder,fuzziness,fuzziness,fuzziness,this,fuzziness,fuzziness,null,fuzziness,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder fuzziness(Fuzziness fuzziness);1535139672;Set the edit distance for fuzzy queries. Default is "AUTO".;public QueryStringQueryBuilder fuzziness(Fuzziness fuzziness) {_        this.fuzziness = fuzziness == null ? DEFAULT_FUZZINESS : fuzziness__        return this__    };set,the,edit,distance,for,fuzzy,queries,default,is,auto;public,query,string,query,builder,fuzziness,fuzziness,fuzziness,this,fuzziness,fuzziness,null,fuzziness,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder fuzziness(Fuzziness fuzziness);1542726437;Set the edit distance for fuzzy queries. Default is "AUTO".;public QueryStringQueryBuilder fuzziness(Fuzziness fuzziness) {_        this.fuzziness = fuzziness == null ? DEFAULT_FUZZINESS : fuzziness__        return this__    };set,the,edit,distance,for,fuzzy,queries,default,is,auto;public,query,string,query,builder,fuzziness,fuzziness,fuzziness,this,fuzziness,fuzziness,null,fuzziness,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder fuzziness(Fuzziness fuzziness);1542792548;Set the edit distance for fuzzy queries. Default is "AUTO".;public QueryStringQueryBuilder fuzziness(Fuzziness fuzziness) {_        this.fuzziness = fuzziness == null ? DEFAULT_FUZZINESS : fuzziness__        return this__    };set,the,edit,distance,for,fuzzy,queries,default,is,auto;public,query,string,query,builder,fuzziness,fuzziness,fuzziness,this,fuzziness,fuzziness,null,fuzziness,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder fuzziness(Fuzziness fuzziness);1543399743;Set the edit distance for fuzzy queries. Default is "AUTO".;public QueryStringQueryBuilder fuzziness(Fuzziness fuzziness) {_        this.fuzziness = fuzziness == null ? DEFAULT_FUZZINESS : fuzziness__        return this__    };set,the,edit,distance,for,fuzzy,queries,default,is,auto;public,query,string,query,builder,fuzziness,fuzziness,fuzziness,this,fuzziness,fuzziness,null,fuzziness,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder fuzziness(Fuzziness fuzziness);1548236405;Set the edit distance for fuzzy queries. Default is "AUTO".;public QueryStringQueryBuilder fuzziness(Fuzziness fuzziness) {_        this.fuzziness = fuzziness == null ? DEFAULT_FUZZINESS : fuzziness__        return this__    };set,the,edit,distance,for,fuzzy,queries,default,is,auto;public,query,string,query,builder,fuzziness,fuzziness,fuzziness,this,fuzziness,fuzziness,null,fuzziness,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder fuzziness(Fuzziness fuzziness);1549017700;Set the edit distance for fuzzy queries. Default is "AUTO".;public QueryStringQueryBuilder fuzziness(Fuzziness fuzziness) {_        this.fuzziness = fuzziness == null ? DEFAULT_FUZZINESS : fuzziness__        return this__    };set,the,edit,distance,for,fuzzy,queries,default,is,auto;public,query,string,query,builder,fuzziness,fuzziness,fuzziness,this,fuzziness,fuzziness,null,fuzziness,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder defaultOperator(Operator defaultOperator);1524684173;Sets the boolean operator of the query parser used to parse the query string._<p>_In default mode ({@link Operator#OR}) terms without any modifiers_are considered optional: for example <code>capital of Hungary</code> is equal to_<code>capital OR of OR Hungary</code>._<p>_In {@link Operator#AND} mode terms are considered to be in conjunction: the_above mentioned query is parsed as <code>capital AND of AND Hungary</code>;public QueryStringQueryBuilder defaultOperator(Operator defaultOperator) {_        this.defaultOperator = defaultOperator == null ? DEFAULT_OPERATOR : defaultOperator__        return this__    };sets,the,boolean,operator,of,the,query,parser,used,to,parse,the,query,string,p,in,default,mode,link,operator,or,terms,without,any,modifiers,are,considered,optional,for,example,code,capital,of,hungary,code,is,equal,to,code,capital,or,of,or,hungary,code,p,in,link,operator,and,mode,terms,are,considered,to,be,in,conjunction,the,above,mentioned,query,is,parsed,as,code,capital,and,of,and,hungary,code;public,query,string,query,builder,default,operator,operator,default,operator,this,default,operator,default,operator,null,default,operator,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder defaultOperator(Operator defaultOperator);1525334055;Sets the boolean operator of the query parser used to parse the query string._<p>_In default mode ({@link Operator#OR}) terms without any modifiers_are considered optional: for example <code>capital of Hungary</code> is equal to_<code>capital OR of OR Hungary</code>._<p>_In {@link Operator#AND} mode terms are considered to be in conjunction: the_above mentioned query is parsed as <code>capital AND of AND Hungary</code>;public QueryStringQueryBuilder defaultOperator(Operator defaultOperator) {_        this.defaultOperator = defaultOperator == null ? DEFAULT_OPERATOR : defaultOperator__        return this__    };sets,the,boolean,operator,of,the,query,parser,used,to,parse,the,query,string,p,in,default,mode,link,operator,or,terms,without,any,modifiers,are,considered,optional,for,example,code,capital,of,hungary,code,is,equal,to,code,capital,or,of,or,hungary,code,p,in,link,operator,and,mode,terms,are,considered,to,be,in,conjunction,the,above,mentioned,query,is,parsed,as,code,capital,and,of,and,hungary,code;public,query,string,query,builder,default,operator,operator,default,operator,this,default,operator,default,operator,null,default,operator,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder defaultOperator(Operator defaultOperator);1535046779;Sets the boolean operator of the query parser used to parse the query string._<p>_In default mode ({@link Operator#OR}) terms without any modifiers_are considered optional: for example <code>capital of Hungary</code> is equal to_<code>capital OR of OR Hungary</code>._<p>_In {@link Operator#AND} mode terms are considered to be in conjunction: the_above mentioned query is parsed as <code>capital AND of AND Hungary</code>;public QueryStringQueryBuilder defaultOperator(Operator defaultOperator) {_        this.defaultOperator = defaultOperator == null ? DEFAULT_OPERATOR : defaultOperator__        return this__    };sets,the,boolean,operator,of,the,query,parser,used,to,parse,the,query,string,p,in,default,mode,link,operator,or,terms,without,any,modifiers,are,considered,optional,for,example,code,capital,of,hungary,code,is,equal,to,code,capital,or,of,or,hungary,code,p,in,link,operator,and,mode,terms,are,considered,to,be,in,conjunction,the,above,mentioned,query,is,parsed,as,code,capital,and,of,and,hungary,code;public,query,string,query,builder,default,operator,operator,default,operator,this,default,operator,default,operator,null,default,operator,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder defaultOperator(Operator defaultOperator);1535139672;Sets the boolean operator of the query parser used to parse the query string._<p>_In default mode ({@link Operator#OR}) terms without any modifiers_are considered optional: for example <code>capital of Hungary</code> is equal to_<code>capital OR of OR Hungary</code>._<p>_In {@link Operator#AND} mode terms are considered to be in conjunction: the_above mentioned query is parsed as <code>capital AND of AND Hungary</code>;public QueryStringQueryBuilder defaultOperator(Operator defaultOperator) {_        this.defaultOperator = defaultOperator == null ? DEFAULT_OPERATOR : defaultOperator__        return this__    };sets,the,boolean,operator,of,the,query,parser,used,to,parse,the,query,string,p,in,default,mode,link,operator,or,terms,without,any,modifiers,are,considered,optional,for,example,code,capital,of,hungary,code,is,equal,to,code,capital,or,of,or,hungary,code,p,in,link,operator,and,mode,terms,are,considered,to,be,in,conjunction,the,above,mentioned,query,is,parsed,as,code,capital,and,of,and,hungary,code;public,query,string,query,builder,default,operator,operator,default,operator,this,default,operator,default,operator,null,default,operator,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder defaultOperator(Operator defaultOperator);1542726437;Sets the boolean operator of the query parser used to parse the query string._<p>_In default mode ({@link Operator#OR}) terms without any modifiers_are considered optional: for example <code>capital of Hungary</code> is equal to_<code>capital OR of OR Hungary</code>._<p>_In {@link Operator#AND} mode terms are considered to be in conjunction: the_above mentioned query is parsed as <code>capital AND of AND Hungary</code>;public QueryStringQueryBuilder defaultOperator(Operator defaultOperator) {_        this.defaultOperator = defaultOperator == null ? DEFAULT_OPERATOR : defaultOperator__        return this__    };sets,the,boolean,operator,of,the,query,parser,used,to,parse,the,query,string,p,in,default,mode,link,operator,or,terms,without,any,modifiers,are,considered,optional,for,example,code,capital,of,hungary,code,is,equal,to,code,capital,or,of,or,hungary,code,p,in,link,operator,and,mode,terms,are,considered,to,be,in,conjunction,the,above,mentioned,query,is,parsed,as,code,capital,and,of,and,hungary,code;public,query,string,query,builder,default,operator,operator,default,operator,this,default,operator,default,operator,null,default,operator,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder defaultOperator(Operator defaultOperator);1542792548;Sets the boolean operator of the query parser used to parse the query string._<p>_In default mode ({@link Operator#OR}) terms without any modifiers_are considered optional: for example <code>capital of Hungary</code> is equal to_<code>capital OR of OR Hungary</code>._<p>_In {@link Operator#AND} mode terms are considered to be in conjunction: the_above mentioned query is parsed as <code>capital AND of AND Hungary</code>;public QueryStringQueryBuilder defaultOperator(Operator defaultOperator) {_        this.defaultOperator = defaultOperator == null ? DEFAULT_OPERATOR : defaultOperator__        return this__    };sets,the,boolean,operator,of,the,query,parser,used,to,parse,the,query,string,p,in,default,mode,link,operator,or,terms,without,any,modifiers,are,considered,optional,for,example,code,capital,of,hungary,code,is,equal,to,code,capital,or,of,or,hungary,code,p,in,link,operator,and,mode,terms,are,considered,to,be,in,conjunction,the,above,mentioned,query,is,parsed,as,code,capital,and,of,and,hungary,code;public,query,string,query,builder,default,operator,operator,default,operator,this,default,operator,default,operator,null,default,operator,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder defaultOperator(Operator defaultOperator);1543399743;Sets the boolean operator of the query parser used to parse the query string._<p>_In default mode ({@link Operator#OR}) terms without any modifiers_are considered optional: for example <code>capital of Hungary</code> is equal to_<code>capital OR of OR Hungary</code>._<p>_In {@link Operator#AND} mode terms are considered to be in conjunction: the_above mentioned query is parsed as <code>capital AND of AND Hungary</code>;public QueryStringQueryBuilder defaultOperator(Operator defaultOperator) {_        this.defaultOperator = defaultOperator == null ? DEFAULT_OPERATOR : defaultOperator__        return this__    };sets,the,boolean,operator,of,the,query,parser,used,to,parse,the,query,string,p,in,default,mode,link,operator,or,terms,without,any,modifiers,are,considered,optional,for,example,code,capital,of,hungary,code,is,equal,to,code,capital,or,of,or,hungary,code,p,in,link,operator,and,mode,terms,are,considered,to,be,in,conjunction,the,above,mentioned,query,is,parsed,as,code,capital,and,of,and,hungary,code;public,query,string,query,builder,default,operator,operator,default,operator,this,default,operator,default,operator,null,default,operator,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder defaultOperator(Operator defaultOperator);1548236405;Sets the boolean operator of the query parser used to parse the query string._<p>_In default mode ({@link Operator#OR}) terms without any modifiers_are considered optional: for example <code>capital of Hungary</code> is equal to_<code>capital OR of OR Hungary</code>._<p>_In {@link Operator#AND} mode terms are considered to be in conjunction: the_above mentioned query is parsed as <code>capital AND of AND Hungary</code>;public QueryStringQueryBuilder defaultOperator(Operator defaultOperator) {_        this.defaultOperator = defaultOperator == null ? DEFAULT_OPERATOR : defaultOperator__        return this__    };sets,the,boolean,operator,of,the,query,parser,used,to,parse,the,query,string,p,in,default,mode,link,operator,or,terms,without,any,modifiers,are,considered,optional,for,example,code,capital,of,hungary,code,is,equal,to,code,capital,or,of,or,hungary,code,p,in,link,operator,and,mode,terms,are,considered,to,be,in,conjunction,the,above,mentioned,query,is,parsed,as,code,capital,and,of,and,hungary,code;public,query,string,query,builder,default,operator,operator,default,operator,this,default,operator,default,operator,null,default,operator,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder defaultOperator(Operator defaultOperator);1549017700;Sets the boolean operator of the query parser used to parse the query string._<p>_In default mode ({@link Operator#OR}) terms without any modifiers_are considered optional: for example <code>capital of Hungary</code> is equal to_<code>capital OR of OR Hungary</code>._<p>_In {@link Operator#AND} mode terms are considered to be in conjunction: the_above mentioned query is parsed as <code>capital AND of AND Hungary</code>;public QueryStringQueryBuilder defaultOperator(Operator defaultOperator) {_        this.defaultOperator = defaultOperator == null ? DEFAULT_OPERATOR : defaultOperator__        return this__    };sets,the,boolean,operator,of,the,query,parser,used,to,parse,the,query,string,p,in,default,mode,link,operator,or,terms,without,any,modifiers,are,considered,optional,for,example,code,capital,of,hungary,code,is,equal,to,code,capital,or,of,or,hungary,code,p,in,link,operator,and,mode,terms,are,considered,to,be,in,conjunction,the,above,mentioned,query,is,parsed,as,code,capital,and,of,and,hungary,code;public,query,string,query,builder,default,operator,operator,default,operator,this,default,operator,default,operator,null,default,operator,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder analyzer(String analyzer);1524684173;The optional analyzer used to analyze the query string. Note, if a field has search analyzer_defined for it, then it will be used automatically. Defaults to the smart search analyzer.;public QueryStringQueryBuilder analyzer(String analyzer) {_        this.analyzer = analyzer__        return this__    };the,optional,analyzer,used,to,analyze,the,query,string,note,if,a,field,has,search,analyzer,defined,for,it,then,it,will,be,used,automatically,defaults,to,the,smart,search,analyzer;public,query,string,query,builder,analyzer,string,analyzer,this,analyzer,analyzer,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder analyzer(String analyzer);1525334055;The optional analyzer used to analyze the query string. Note, if a field has search analyzer_defined for it, then it will be used automatically. Defaults to the smart search analyzer.;public QueryStringQueryBuilder analyzer(String analyzer) {_        this.analyzer = analyzer__        return this__    };the,optional,analyzer,used,to,analyze,the,query,string,note,if,a,field,has,search,analyzer,defined,for,it,then,it,will,be,used,automatically,defaults,to,the,smart,search,analyzer;public,query,string,query,builder,analyzer,string,analyzer,this,analyzer,analyzer,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder analyzer(String analyzer);1535046779;The optional analyzer used to analyze the query string. Note, if a field has search analyzer_defined for it, then it will be used automatically. Defaults to the smart search analyzer.;public QueryStringQueryBuilder analyzer(String analyzer) {_        this.analyzer = analyzer__        return this__    };the,optional,analyzer,used,to,analyze,the,query,string,note,if,a,field,has,search,analyzer,defined,for,it,then,it,will,be,used,automatically,defaults,to,the,smart,search,analyzer;public,query,string,query,builder,analyzer,string,analyzer,this,analyzer,analyzer,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder analyzer(String analyzer);1535139672;The optional analyzer used to analyze the query string. Note, if a field has search analyzer_defined for it, then it will be used automatically. Defaults to the smart search analyzer.;public QueryStringQueryBuilder analyzer(String analyzer) {_        this.analyzer = analyzer__        return this__    };the,optional,analyzer,used,to,analyze,the,query,string,note,if,a,field,has,search,analyzer,defined,for,it,then,it,will,be,used,automatically,defaults,to,the,smart,search,analyzer;public,query,string,query,builder,analyzer,string,analyzer,this,analyzer,analyzer,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder analyzer(String analyzer);1542726437;The optional analyzer used to analyze the query string. Note, if a field has search analyzer_defined for it, then it will be used automatically. Defaults to the smart search analyzer.;public QueryStringQueryBuilder analyzer(String analyzer) {_        this.analyzer = analyzer__        return this__    };the,optional,analyzer,used,to,analyze,the,query,string,note,if,a,field,has,search,analyzer,defined,for,it,then,it,will,be,used,automatically,defaults,to,the,smart,search,analyzer;public,query,string,query,builder,analyzer,string,analyzer,this,analyzer,analyzer,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder analyzer(String analyzer);1542792548;The optional analyzer used to analyze the query string. Note, if a field has search analyzer_defined for it, then it will be used automatically. Defaults to the smart search analyzer.;public QueryStringQueryBuilder analyzer(String analyzer) {_        this.analyzer = analyzer__        return this__    };the,optional,analyzer,used,to,analyze,the,query,string,note,if,a,field,has,search,analyzer,defined,for,it,then,it,will,be,used,automatically,defaults,to,the,smart,search,analyzer;public,query,string,query,builder,analyzer,string,analyzer,this,analyzer,analyzer,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder analyzer(String analyzer);1543399743;The optional analyzer used to analyze the query string. Note, if a field has search analyzer_defined for it, then it will be used automatically. Defaults to the smart search analyzer.;public QueryStringQueryBuilder analyzer(String analyzer) {_        this.analyzer = analyzer__        return this__    };the,optional,analyzer,used,to,analyze,the,query,string,note,if,a,field,has,search,analyzer,defined,for,it,then,it,will,be,used,automatically,defaults,to,the,smart,search,analyzer;public,query,string,query,builder,analyzer,string,analyzer,this,analyzer,analyzer,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder analyzer(String analyzer);1548236405;The optional analyzer used to analyze the query string. Note, if a field has search analyzer_defined for it, then it will be used automatically. Defaults to the smart search analyzer.;public QueryStringQueryBuilder analyzer(String analyzer) {_        this.analyzer = analyzer__        return this__    };the,optional,analyzer,used,to,analyze,the,query,string,note,if,a,field,has,search,analyzer,defined,for,it,then,it,will,be,used,automatically,defaults,to,the,smart,search,analyzer;public,query,string,query,builder,analyzer,string,analyzer,this,analyzer,analyzer,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder analyzer(String analyzer);1549017700;The optional analyzer used to analyze the query string. Note, if a field has search analyzer_defined for it, then it will be used automatically. Defaults to the smart search analyzer.;public QueryStringQueryBuilder analyzer(String analyzer) {_        this.analyzer = analyzer__        return this__    };the,optional,analyzer,used,to,analyze,the,query,string,note,if,a,field,has,search,analyzer,defined,for,it,then,it,will,be,used,automatically,defaults,to,the,smart,search,analyzer;public,query,string,query,builder,analyzer,string,analyzer,this,analyzer,analyzer,return,this
QueryStringQueryBuilder -> public Map<String, Float> fields();1524684173;Returns the fields including their respective boosts to run the query against.;public Map<String, Float> fields() {_        return this.fieldsAndWeights__    };returns,the,fields,including,their,respective,boosts,to,run,the,query,against;public,map,string,float,fields,return,this,fields,and,weights
QueryStringQueryBuilder -> public Map<String, Float> fields();1525334055;Returns the fields including their respective boosts to run the query against.;public Map<String, Float> fields() {_        return this.fieldsAndWeights__    };returns,the,fields,including,their,respective,boosts,to,run,the,query,against;public,map,string,float,fields,return,this,fields,and,weights
QueryStringQueryBuilder -> public Map<String, Float> fields();1535046779;Returns the fields including their respective boosts to run the query against.;public Map<String, Float> fields() {_        return this.fieldsAndWeights__    };returns,the,fields,including,their,respective,boosts,to,run,the,query,against;public,map,string,float,fields,return,this,fields,and,weights
QueryStringQueryBuilder -> public Map<String, Float> fields();1535139672;Returns the fields including their respective boosts to run the query against.;public Map<String, Float> fields() {_        return this.fieldsAndWeights__    };returns,the,fields,including,their,respective,boosts,to,run,the,query,against;public,map,string,float,fields,return,this,fields,and,weights
QueryStringQueryBuilder -> public Map<String, Float> fields();1542726437;Returns the fields including their respective boosts to run the query against.;public Map<String, Float> fields() {_        return this.fieldsAndWeights__    };returns,the,fields,including,their,respective,boosts,to,run,the,query,against;public,map,string,float,fields,return,this,fields,and,weights
QueryStringQueryBuilder -> public Map<String, Float> fields();1542792548;Returns the fields including their respective boosts to run the query against.;public Map<String, Float> fields() {_        return this.fieldsAndWeights__    };returns,the,fields,including,their,respective,boosts,to,run,the,query,against;public,map,string,float,fields,return,this,fields,and,weights
QueryStringQueryBuilder -> public Map<String, Float> fields();1543399743;Returns the fields including their respective boosts to run the query against.;public Map<String, Float> fields() {_        return this.fieldsAndWeights__    };returns,the,fields,including,their,respective,boosts,to,run,the,query,against;public,map,string,float,fields,return,this,fields,and,weights
QueryStringQueryBuilder -> public Map<String, Float> fields();1548236405;Returns the fields including their respective boosts to run the query against.;public Map<String, Float> fields() {_        return this.fieldsAndWeights__    };returns,the,fields,including,their,respective,boosts,to,run,the,query,against;public,map,string,float,fields,return,this,fields,and,weights
QueryStringQueryBuilder -> public Map<String, Float> fields();1549017700;Returns the fields including their respective boosts to run the query against.;public Map<String, Float> fields() {_        return this.fieldsAndWeights__    };returns,the,fields,including,their,respective,boosts,to,run,the,query,against;public,map,string,float,fields,return,this,fields,and,weights
QueryStringQueryBuilder -> public boolean autoGenerateSynonymsPhraseQuery();1524684173;Whether phrase queries should be automatically generated for multi terms synonyms._Defaults to <tt>true</tt>.;public boolean autoGenerateSynonymsPhraseQuery() {_        return autoGenerateSynonymsPhraseQuery__    };whether,phrase,queries,should,be,automatically,generated,for,multi,terms,synonyms,defaults,to,tt,true,tt;public,boolean,auto,generate,synonyms,phrase,query,return,auto,generate,synonyms,phrase,query
QueryStringQueryBuilder -> public boolean autoGenerateSynonymsPhraseQuery();1525334055;Whether phrase queries should be automatically generated for multi terms synonyms._Defaults to {@code true}.;public boolean autoGenerateSynonymsPhraseQuery() {_        return autoGenerateSynonymsPhraseQuery__    };whether,phrase,queries,should,be,automatically,generated,for,multi,terms,synonyms,defaults,to,code,true;public,boolean,auto,generate,synonyms,phrase,query,return,auto,generate,synonyms,phrase,query
QueryStringQueryBuilder -> public boolean autoGenerateSynonymsPhraseQuery();1535046779;Whether phrase queries should be automatically generated for multi terms synonyms._Defaults to {@code true}.;public boolean autoGenerateSynonymsPhraseQuery() {_        return autoGenerateSynonymsPhraseQuery__    };whether,phrase,queries,should,be,automatically,generated,for,multi,terms,synonyms,defaults,to,code,true;public,boolean,auto,generate,synonyms,phrase,query,return,auto,generate,synonyms,phrase,query
QueryStringQueryBuilder -> public boolean autoGenerateSynonymsPhraseQuery();1535139672;Whether phrase queries should be automatically generated for multi terms synonyms._Defaults to {@code true}.;public boolean autoGenerateSynonymsPhraseQuery() {_        return autoGenerateSynonymsPhraseQuery__    };whether,phrase,queries,should,be,automatically,generated,for,multi,terms,synonyms,defaults,to,code,true;public,boolean,auto,generate,synonyms,phrase,query,return,auto,generate,synonyms,phrase,query
QueryStringQueryBuilder -> public boolean autoGenerateSynonymsPhraseQuery();1542726437;Whether phrase queries should be automatically generated for multi terms synonyms._Defaults to {@code true}.;public boolean autoGenerateSynonymsPhraseQuery() {_        return autoGenerateSynonymsPhraseQuery__    };whether,phrase,queries,should,be,automatically,generated,for,multi,terms,synonyms,defaults,to,code,true;public,boolean,auto,generate,synonyms,phrase,query,return,auto,generate,synonyms,phrase,query
QueryStringQueryBuilder -> public boolean autoGenerateSynonymsPhraseQuery();1542792548;Whether phrase queries should be automatically generated for multi terms synonyms._Defaults to {@code true}.;public boolean autoGenerateSynonymsPhraseQuery() {_        return autoGenerateSynonymsPhraseQuery__    };whether,phrase,queries,should,be,automatically,generated,for,multi,terms,synonyms,defaults,to,code,true;public,boolean,auto,generate,synonyms,phrase,query,return,auto,generate,synonyms,phrase,query
QueryStringQueryBuilder -> public boolean autoGenerateSynonymsPhraseQuery();1543399743;Whether phrase queries should be automatically generated for multi terms synonyms._Defaults to {@code true}.;public boolean autoGenerateSynonymsPhraseQuery() {_        return autoGenerateSynonymsPhraseQuery__    };whether,phrase,queries,should,be,automatically,generated,for,multi,terms,synonyms,defaults,to,code,true;public,boolean,auto,generate,synonyms,phrase,query,return,auto,generate,synonyms,phrase,query
QueryStringQueryBuilder -> public boolean autoGenerateSynonymsPhraseQuery();1548236405;Whether phrase queries should be automatically generated for multi terms synonyms._Defaults to {@code true}.;public boolean autoGenerateSynonymsPhraseQuery() {_        return autoGenerateSynonymsPhraseQuery__    };whether,phrase,queries,should,be,automatically,generated,for,multi,terms,synonyms,defaults,to,code,true;public,boolean,auto,generate,synonyms,phrase,query,return,auto,generate,synonyms,phrase,query
QueryStringQueryBuilder -> public boolean autoGenerateSynonymsPhraseQuery();1549017700;Whether phrase queries should be automatically generated for multi terms synonyms._Defaults to {@code true}.;public boolean autoGenerateSynonymsPhraseQuery() {_        return autoGenerateSynonymsPhraseQuery__    };whether,phrase,queries,should,be,automatically,generated,for,multi,terms,synonyms,defaults,to,code,true;public,boolean,auto,generate,synonyms,phrase,query,return,auto,generate,synonyms,phrase,query
QueryStringQueryBuilder -> @Deprecated     public boolean splitOnWhitespace();1524684173;This setting is ignored, this query parser splits on operator only.;@Deprecated_    public boolean splitOnWhitespace() {_        return false__    };this,setting,is,ignored,this,query,parser,splits,on,operator,only;deprecated,public,boolean,split,on,whitespace,return,false
QueryStringQueryBuilder -> @Deprecated     public boolean splitOnWhitespace();1525334055;This setting is ignored, this query parser splits on operator only.;@Deprecated_    public boolean splitOnWhitespace() {_        return false__    };this,setting,is,ignored,this,query,parser,splits,on,operator,only;deprecated,public,boolean,split,on,whitespace,return,false
QueryStringQueryBuilder -> @Deprecated     public boolean splitOnWhitespace();1535046779;This setting is ignored, this query parser splits on operator only.;@Deprecated_    public boolean splitOnWhitespace() {_        return false__    };this,setting,is,ignored,this,query,parser,splits,on,operator,only;deprecated,public,boolean,split,on,whitespace,return,false
QueryStringQueryBuilder -> @Deprecated     public boolean splitOnWhitespace();1535139672;This setting is ignored, this query parser splits on operator only.;@Deprecated_    public boolean splitOnWhitespace() {_        return false__    };this,setting,is,ignored,this,query,parser,splits,on,operator,only;deprecated,public,boolean,split,on,whitespace,return,false
QueryStringQueryBuilder -> @Deprecated     public boolean splitOnWhitespace();1542726437;This setting is ignored, this query parser splits on operator only.;@Deprecated_    public boolean splitOnWhitespace() {_        return false__    };this,setting,is,ignored,this,query,parser,splits,on,operator,only;deprecated,public,boolean,split,on,whitespace,return,false
QueryStringQueryBuilder -> public QueryStringQueryBuilder timeZone(String timeZone);1524684173;In case of date field, we can adjust the from/to fields using a timezone;public QueryStringQueryBuilder timeZone(String timeZone) {_        if (timeZone != null) {_            this.timeZone = DateTimeZone.forID(timeZone)__        } else {_            this.timeZone = null__        }_        return this__    };in,case,of,date,field,we,can,adjust,the,from,to,fields,using,a,timezone;public,query,string,query,builder,time,zone,string,time,zone,if,time,zone,null,this,time,zone,date,time,zone,for,id,time,zone,else,this,time,zone,null,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder timeZone(String timeZone);1525334055;In case of date field, we can adjust the from/to fields using a timezone;public QueryStringQueryBuilder timeZone(String timeZone) {_        if (timeZone != null) {_            this.timeZone = DateTimeZone.forID(timeZone)__        } else {_            this.timeZone = null__        }_        return this__    };in,case,of,date,field,we,can,adjust,the,from,to,fields,using,a,timezone;public,query,string,query,builder,time,zone,string,time,zone,if,time,zone,null,this,time,zone,date,time,zone,for,id,time,zone,else,this,time,zone,null,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder timeZone(String timeZone);1535046779;In case of date field, we can adjust the from/to fields using a timezone;public QueryStringQueryBuilder timeZone(String timeZone) {_        if (timeZone != null) {_            this.timeZone = DateTimeZone.forID(timeZone)__        } else {_            this.timeZone = null__        }_        return this__    };in,case,of,date,field,we,can,adjust,the,from,to,fields,using,a,timezone;public,query,string,query,builder,time,zone,string,time,zone,if,time,zone,null,this,time,zone,date,time,zone,for,id,time,zone,else,this,time,zone,null,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder timeZone(String timeZone);1535139672;In case of date field, we can adjust the from/to fields using a timezone;public QueryStringQueryBuilder timeZone(String timeZone) {_        if (timeZone != null) {_            this.timeZone = DateTimeZone.forID(timeZone)__        } else {_            this.timeZone = null__        }_        return this__    };in,case,of,date,field,we,can,adjust,the,from,to,fields,using,a,timezone;public,query,string,query,builder,time,zone,string,time,zone,if,time,zone,null,this,time,zone,date,time,zone,for,id,time,zone,else,this,time,zone,null,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder timeZone(String timeZone);1542726437;In case of date field, we can adjust the from/to fields using a timezone;public QueryStringQueryBuilder timeZone(String timeZone) {_        if (timeZone != null) {_            this.timeZone = DateTimeZone.forID(timeZone)__        } else {_            this.timeZone = null__        }_        return this__    };in,case,of,date,field,we,can,adjust,the,from,to,fields,using,a,timezone;public,query,string,query,builder,time,zone,string,time,zone,if,time,zone,null,this,time,zone,date,time,zone,for,id,time,zone,else,this,time,zone,null,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder timeZone(String timeZone);1542792548;In case of date field, we can adjust the from/to fields using a timezone;public QueryStringQueryBuilder timeZone(String timeZone) {_        if (timeZone != null) {_            this.timeZone = DateTimeZone.forID(timeZone)__        } else {_            this.timeZone = null__        }_        return this__    };in,case,of,date,field,we,can,adjust,the,from,to,fields,using,a,timezone;public,query,string,query,builder,time,zone,string,time,zone,if,time,zone,null,this,time,zone,date,time,zone,for,id,time,zone,else,this,time,zone,null,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder timeZone(String timeZone);1543399743;In case of date field, we can adjust the from/to fields using a timezone;public QueryStringQueryBuilder timeZone(String timeZone) {_        if (timeZone != null) {_            this.timeZone = DateTimeZone.forID(timeZone)__        } else {_            this.timeZone = null__        }_        return this__    };in,case,of,date,field,we,can,adjust,the,from,to,fields,using,a,timezone;public,query,string,query,builder,time,zone,string,time,zone,if,time,zone,null,this,time,zone,date,time,zone,for,id,time,zone,else,this,time,zone,null,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder timeZone(String timeZone);1548236405;In case of date field, we can adjust the from/to fields using a timezone;public QueryStringQueryBuilder timeZone(String timeZone) {_        if (timeZone != null) {_            this.timeZone = ZoneId.of(timeZone)__        } else {_            this.timeZone = null__        }_        return this__    };in,case,of,date,field,we,can,adjust,the,from,to,fields,using,a,timezone;public,query,string,query,builder,time,zone,string,time,zone,if,time,zone,null,this,time,zone,zone,id,of,time,zone,else,this,time,zone,null,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder timeZone(String timeZone);1549017700;In case of date field, we can adjust the from/to fields using a timezone;public QueryStringQueryBuilder timeZone(String timeZone) {_        if (timeZone != null) {_            this.timeZone = ZoneId.of(timeZone)__        } else {_            this.timeZone = null__        }_        return this__    };in,case,of,date,field,we,can,adjust,the,from,to,fields,using,a,timezone;public,query,string,query,builder,time,zone,string,time,zone,if,time,zone,null,this,time,zone,zone,id,of,time,zone,else,this,time,zone,null,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder type(MultiMatchQueryBuilder.Type type);1535046779;@param type Sets how multiple fields should be combined to build textual part queries.;public QueryStringQueryBuilder type(MultiMatchQueryBuilder.Type type) {_        this.type = type__        return this__    };param,type,sets,how,multiple,fields,should,be,combined,to,build,textual,part,queries;public,query,string,query,builder,type,multi,match,query,builder,type,type,this,type,type,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder type(MultiMatchQueryBuilder.Type type);1535139672;@param type Sets how multiple fields should be combined to build textual part queries.;public QueryStringQueryBuilder type(MultiMatchQueryBuilder.Type type) {_        this.type = type__        return this__    };param,type,sets,how,multiple,fields,should,be,combined,to,build,textual,part,queries;public,query,string,query,builder,type,multi,match,query,builder,type,type,this,type,type,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder type(MultiMatchQueryBuilder.Type type);1542726437;@param type Sets how multiple fields should be combined to build textual part queries.;public QueryStringQueryBuilder type(MultiMatchQueryBuilder.Type type) {_        this.type = type__        return this__    };param,type,sets,how,multiple,fields,should,be,combined,to,build,textual,part,queries;public,query,string,query,builder,type,multi,match,query,builder,type,type,this,type,type,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder type(MultiMatchQueryBuilder.Type type);1542792548;@param type Sets how multiple fields should be combined to build textual part queries.;public QueryStringQueryBuilder type(MultiMatchQueryBuilder.Type type) {_        this.type = type__        return this__    };param,type,sets,how,multiple,fields,should,be,combined,to,build,textual,part,queries;public,query,string,query,builder,type,multi,match,query,builder,type,type,this,type,type,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder type(MultiMatchQueryBuilder.Type type);1543399743;@param type Sets how multiple fields should be combined to build textual part queries.;public QueryStringQueryBuilder type(MultiMatchQueryBuilder.Type type) {_        this.type = type__        return this__    };param,type,sets,how,multiple,fields,should,be,combined,to,build,textual,part,queries;public,query,string,query,builder,type,multi,match,query,builder,type,type,this,type,type,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder type(MultiMatchQueryBuilder.Type type);1548236405;@param type Sets how multiple fields should be combined to build textual part queries.;public QueryStringQueryBuilder type(MultiMatchQueryBuilder.Type type) {_        this.type = type__        return this__    };param,type,sets,how,multiple,fields,should,be,combined,to,build,textual,part,queries;public,query,string,query,builder,type,multi,match,query,builder,type,type,this,type,type,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder type(MultiMatchQueryBuilder.Type type);1549017700;@param type Sets how multiple fields should be combined to build textual part queries.;public QueryStringQueryBuilder type(MultiMatchQueryBuilder.Type type) {_        this.type = type__        return this__    };param,type,sets,how,multiple,fields,should,be,combined,to,build,textual,part,queries;public,query,string,query,builder,type,multi,match,query,builder,type,type,this,type,type,return,this
QueryStringQueryBuilder -> @Deprecated     public QueryStringQueryBuilder useAllFields(Boolean useAllFields);1524684173;This setting is deprecated, set {@link #defaultField(String)} to "*" instead.;@Deprecated_    public QueryStringQueryBuilder useAllFields(Boolean useAllFields) {_        if (useAllFields != null && useAllFields) {_            this.defaultField = "*"__        }_        return this__    };this,setting,is,deprecated,set,link,default,field,string,to,instead;deprecated,public,query,string,query,builder,use,all,fields,boolean,use,all,fields,if,use,all,fields,null,use,all,fields,this,default,field,return,this
QueryStringQueryBuilder -> @Deprecated     public QueryStringQueryBuilder useAllFields(Boolean useAllFields);1525334055;This setting is deprecated, set {@link #defaultField(String)} to "*" instead.;@Deprecated_    public QueryStringQueryBuilder useAllFields(Boolean useAllFields) {_        if (useAllFields != null && useAllFields) {_            this.defaultField = "*"__        }_        return this__    };this,setting,is,deprecated,set,link,default,field,string,to,instead;deprecated,public,query,string,query,builder,use,all,fields,boolean,use,all,fields,if,use,all,fields,null,use,all,fields,this,default,field,return,this
QueryStringQueryBuilder -> @Deprecated     public QueryStringQueryBuilder useAllFields(Boolean useAllFields);1535046779;This setting is deprecated, set {@link #defaultField(String)} to "*" instead.;@Deprecated_    public QueryStringQueryBuilder useAllFields(Boolean useAllFields) {_        if (useAllFields != null && useAllFields) {_            this.defaultField = "*"__        }_        return this__    };this,setting,is,deprecated,set,link,default,field,string,to,instead;deprecated,public,query,string,query,builder,use,all,fields,boolean,use,all,fields,if,use,all,fields,null,use,all,fields,this,default,field,return,this
QueryStringQueryBuilder -> @Deprecated     public QueryStringQueryBuilder useAllFields(Boolean useAllFields);1535139672;This setting is deprecated, set {@link #defaultField(String)} to "*" instead.;@Deprecated_    public QueryStringQueryBuilder useAllFields(Boolean useAllFields) {_        if (useAllFields != null && useAllFields) {_            this.defaultField = "*"__        }_        return this__    };this,setting,is,deprecated,set,link,default,field,string,to,instead;deprecated,public,query,string,query,builder,use,all,fields,boolean,use,all,fields,if,use,all,fields,null,use,all,fields,this,default,field,return,this
QueryStringQueryBuilder -> @Deprecated     public QueryStringQueryBuilder useAllFields(Boolean useAllFields);1542726437;This setting is deprecated, set {@link #defaultField(String)} to "*" instead.;@Deprecated_    public QueryStringQueryBuilder useAllFields(Boolean useAllFields) {_        if (useAllFields != null && useAllFields) {_            this.defaultField = "*"__        }_        return this__    };this,setting,is,deprecated,set,link,default,field,string,to,instead;deprecated,public,query,string,query,builder,use,all,fields,boolean,use,all,fields,if,use,all,fields,null,use,all,fields,this,default,field,return,this
QueryStringQueryBuilder -> @Deprecated     public QueryStringQueryBuilder useAllFields(Boolean useAllFields);1542792548;This setting is deprecated, set {@link #defaultField(String)} to "*" instead.;@Deprecated_    public QueryStringQueryBuilder useAllFields(Boolean useAllFields) {_        if (useAllFields != null && useAllFields) {_            this.defaultField = "*"__        }_        return this__    };this,setting,is,deprecated,set,link,default,field,string,to,instead;deprecated,public,query,string,query,builder,use,all,fields,boolean,use,all,fields,if,use,all,fields,null,use,all,fields,this,default,field,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder escape(boolean escape);1524684173;Set to <tt>true</tt> to enable escaping of the query string;public QueryStringQueryBuilder escape(boolean escape) {_        this.escape = escape__        return this__    };set,to,tt,true,tt,to,enable,escaping,of,the,query,string;public,query,string,query,builder,escape,boolean,escape,this,escape,escape,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder escape(boolean escape);1525334055;Set to {@code true} to enable escaping of the query string;public QueryStringQueryBuilder escape(boolean escape) {_        this.escape = escape__        return this__    };set,to,code,true,to,enable,escaping,of,the,query,string;public,query,string,query,builder,escape,boolean,escape,this,escape,escape,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder escape(boolean escape);1535046779;Set to {@code true} to enable escaping of the query string;public QueryStringQueryBuilder escape(boolean escape) {_        this.escape = escape__        return this__    };set,to,code,true,to,enable,escaping,of,the,query,string;public,query,string,query,builder,escape,boolean,escape,this,escape,escape,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder escape(boolean escape);1535139672;Set to {@code true} to enable escaping of the query string;public QueryStringQueryBuilder escape(boolean escape) {_        this.escape = escape__        return this__    };set,to,code,true,to,enable,escaping,of,the,query,string;public,query,string,query,builder,escape,boolean,escape,this,escape,escape,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder escape(boolean escape);1542726437;Set to {@code true} to enable escaping of the query string;public QueryStringQueryBuilder escape(boolean escape) {_        this.escape = escape__        return this__    };set,to,code,true,to,enable,escaping,of,the,query,string;public,query,string,query,builder,escape,boolean,escape,this,escape,escape,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder escape(boolean escape);1542792548;Set to {@code true} to enable escaping of the query string;public QueryStringQueryBuilder escape(boolean escape) {_        this.escape = escape__        return this__    };set,to,code,true,to,enable,escaping,of,the,query,string;public,query,string,query,builder,escape,boolean,escape,this,escape,escape,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder escape(boolean escape);1543399743;Set to {@code true} to enable escaping of the query string;public QueryStringQueryBuilder escape(boolean escape) {_        this.escape = escape__        return this__    };set,to,code,true,to,enable,escaping,of,the,query,string;public,query,string,query,builder,escape,boolean,escape,this,escape,escape,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder escape(boolean escape);1548236405;Set to {@code true} to enable escaping of the query string;public QueryStringQueryBuilder escape(boolean escape) {_        this.escape = escape__        return this__    };set,to,code,true,to,enable,escaping,of,the,query,string;public,query,string,query,builder,escape,boolean,escape,this,escape,escape,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder escape(boolean escape);1549017700;Set to {@code true} to enable escaping of the query string;public QueryStringQueryBuilder escape(boolean escape) {_        this.escape = escape__        return this__    };set,to,code,true,to,enable,escaping,of,the,query,string;public,query,string,query,builder,escape,boolean,escape,this,escape,escape,return,this
QueryStringQueryBuilder -> @Deprecated     public QueryStringQueryBuilder splitOnWhitespace(boolean value);1524684173;This setting is ignored, this query parser splits on operator only.;@Deprecated_    public QueryStringQueryBuilder splitOnWhitespace(boolean value) {_        return this__    };this,setting,is,ignored,this,query,parser,splits,on,operator,only;deprecated,public,query,string,query,builder,split,on,whitespace,boolean,value,return,this
QueryStringQueryBuilder -> @Deprecated     public QueryStringQueryBuilder splitOnWhitespace(boolean value);1525334055;This setting is ignored, this query parser splits on operator only.;@Deprecated_    public QueryStringQueryBuilder splitOnWhitespace(boolean value) {_        return this__    };this,setting,is,ignored,this,query,parser,splits,on,operator,only;deprecated,public,query,string,query,builder,split,on,whitespace,boolean,value,return,this
QueryStringQueryBuilder -> @Deprecated     public QueryStringQueryBuilder splitOnWhitespace(boolean value);1535046779;This setting is ignored, this query parser splits on operator only.;@Deprecated_    public QueryStringQueryBuilder splitOnWhitespace(boolean value) {_        return this__    };this,setting,is,ignored,this,query,parser,splits,on,operator,only;deprecated,public,query,string,query,builder,split,on,whitespace,boolean,value,return,this
QueryStringQueryBuilder -> @Deprecated     public QueryStringQueryBuilder splitOnWhitespace(boolean value);1535139672;This setting is ignored, this query parser splits on operator only.;@Deprecated_    public QueryStringQueryBuilder splitOnWhitespace(boolean value) {_        return this__    };this,setting,is,ignored,this,query,parser,splits,on,operator,only;deprecated,public,query,string,query,builder,split,on,whitespace,boolean,value,return,this
QueryStringQueryBuilder -> @Deprecated     public QueryStringQueryBuilder splitOnWhitespace(boolean value);1542726437;This setting is ignored, this query parser splits on operator only.;@Deprecated_    public QueryStringQueryBuilder splitOnWhitespace(boolean value) {_        return this__    };this,setting,is,ignored,this,query,parser,splits,on,operator,only;deprecated,public,query,string,query,builder,split,on,whitespace,boolean,value,return,this
QueryStringQueryBuilder -> @Deprecated     public boolean useDisMax();1524684173;Use {@link QueryStringQueryBuilder#tieBreaker} instead.;@Deprecated_    public boolean useDisMax() {_        return true__    };use,link,query,string,query,builder,tie,breaker,instead;deprecated,public,boolean,use,dis,max,return,true
QueryStringQueryBuilder -> @Deprecated     public boolean useDisMax();1525334055;Use {@link QueryStringQueryBuilder#tieBreaker} instead.;@Deprecated_    public boolean useDisMax() {_        return true__    };use,link,query,string,query,builder,tie,breaker,instead;deprecated,public,boolean,use,dis,max,return,true
QueryStringQueryBuilder -> @Deprecated     public boolean useDisMax();1535046779;Use {@link QueryStringQueryBuilder#tieBreaker} instead.;@Deprecated_    public boolean useDisMax() {_        return true__    };use,link,query,string,query,builder,tie,breaker,instead;deprecated,public,boolean,use,dis,max,return,true
QueryStringQueryBuilder -> @Deprecated     public boolean useDisMax();1535139672;Use {@link QueryStringQueryBuilder#tieBreaker} instead.;@Deprecated_    public boolean useDisMax() {_        return true__    };use,link,query,string,query,builder,tie,breaker,instead;deprecated,public,boolean,use,dis,max,return,true
QueryStringQueryBuilder -> @Deprecated     public boolean useDisMax();1542726437;Use {@link QueryStringQueryBuilder#tieBreaker} instead.;@Deprecated_    public boolean useDisMax() {_        return true__    };use,link,query,string,query,builder,tie,breaker,instead;deprecated,public,boolean,use,dis,max,return,true
QueryStringQueryBuilder -> @Deprecated     public boolean useDisMax();1542792548;Use {@link QueryStringQueryBuilder#tieBreaker} instead.;@Deprecated_    public boolean useDisMax() {_        return true__    };use,link,query,string,query,builder,tie,breaker,instead;deprecated,public,boolean,use,dis,max,return,true
QueryStringQueryBuilder -> public QueryStringQueryBuilder allowLeadingWildcard(Boolean allowLeadingWildcard);1524684173;Should leading wildcards be allowed or not. Defaults to <tt>true</tt>.;public QueryStringQueryBuilder allowLeadingWildcard(Boolean allowLeadingWildcard) {_        this.allowLeadingWildcard = allowLeadingWildcard__        return this__    };should,leading,wildcards,be,allowed,or,not,defaults,to,tt,true,tt;public,query,string,query,builder,allow,leading,wildcard,boolean,allow,leading,wildcard,this,allow,leading,wildcard,allow,leading,wildcard,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder allowLeadingWildcard(Boolean allowLeadingWildcard);1525334055;Should leading wildcards be allowed or not. Defaults to {@code true}.;public QueryStringQueryBuilder allowLeadingWildcard(Boolean allowLeadingWildcard) {_        this.allowLeadingWildcard = allowLeadingWildcard__        return this__    };should,leading,wildcards,be,allowed,or,not,defaults,to,code,true;public,query,string,query,builder,allow,leading,wildcard,boolean,allow,leading,wildcard,this,allow,leading,wildcard,allow,leading,wildcard,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder allowLeadingWildcard(Boolean allowLeadingWildcard);1535046779;Should leading wildcards be allowed or not. Defaults to {@code true}.;public QueryStringQueryBuilder allowLeadingWildcard(Boolean allowLeadingWildcard) {_        this.allowLeadingWildcard = allowLeadingWildcard__        return this__    };should,leading,wildcards,be,allowed,or,not,defaults,to,code,true;public,query,string,query,builder,allow,leading,wildcard,boolean,allow,leading,wildcard,this,allow,leading,wildcard,allow,leading,wildcard,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder allowLeadingWildcard(Boolean allowLeadingWildcard);1535139672;Should leading wildcards be allowed or not. Defaults to {@code true}.;public QueryStringQueryBuilder allowLeadingWildcard(Boolean allowLeadingWildcard) {_        this.allowLeadingWildcard = allowLeadingWildcard__        return this__    };should,leading,wildcards,be,allowed,or,not,defaults,to,code,true;public,query,string,query,builder,allow,leading,wildcard,boolean,allow,leading,wildcard,this,allow,leading,wildcard,allow,leading,wildcard,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder allowLeadingWildcard(Boolean allowLeadingWildcard);1542726437;Should leading wildcards be allowed or not. Defaults to {@code true}.;public QueryStringQueryBuilder allowLeadingWildcard(Boolean allowLeadingWildcard) {_        this.allowLeadingWildcard = allowLeadingWildcard__        return this__    };should,leading,wildcards,be,allowed,or,not,defaults,to,code,true;public,query,string,query,builder,allow,leading,wildcard,boolean,allow,leading,wildcard,this,allow,leading,wildcard,allow,leading,wildcard,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder allowLeadingWildcard(Boolean allowLeadingWildcard);1542792548;Should leading wildcards be allowed or not. Defaults to {@code true}.;public QueryStringQueryBuilder allowLeadingWildcard(Boolean allowLeadingWildcard) {_        this.allowLeadingWildcard = allowLeadingWildcard__        return this__    };should,leading,wildcards,be,allowed,or,not,defaults,to,code,true;public,query,string,query,builder,allow,leading,wildcard,boolean,allow,leading,wildcard,this,allow,leading,wildcard,allow,leading,wildcard,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder allowLeadingWildcard(Boolean allowLeadingWildcard);1543399743;Should leading wildcards be allowed or not. Defaults to {@code true}.;public QueryStringQueryBuilder allowLeadingWildcard(Boolean allowLeadingWildcard) {_        this.allowLeadingWildcard = allowLeadingWildcard__        return this__    };should,leading,wildcards,be,allowed,or,not,defaults,to,code,true;public,query,string,query,builder,allow,leading,wildcard,boolean,allow,leading,wildcard,this,allow,leading,wildcard,allow,leading,wildcard,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder allowLeadingWildcard(Boolean allowLeadingWildcard);1548236405;Should leading wildcards be allowed or not. Defaults to {@code true}.;public QueryStringQueryBuilder allowLeadingWildcard(Boolean allowLeadingWildcard) {_        this.allowLeadingWildcard = allowLeadingWildcard__        return this__    };should,leading,wildcards,be,allowed,or,not,defaults,to,code,true;public,query,string,query,builder,allow,leading,wildcard,boolean,allow,leading,wildcard,this,allow,leading,wildcard,allow,leading,wildcard,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder allowLeadingWildcard(Boolean allowLeadingWildcard);1549017700;Should leading wildcards be allowed or not. Defaults to {@code true}.;public QueryStringQueryBuilder allowLeadingWildcard(Boolean allowLeadingWildcard) {_        this.allowLeadingWildcard = allowLeadingWildcard__        return this__    };should,leading,wildcards,be,allowed,or,not,defaults,to,code,true;public,query,string,query,builder,allow,leading,wildcard,boolean,allow,leading,wildcard,this,allow,leading,wildcard,allow,leading,wildcard,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder fuzzyPrefixLength(int fuzzyPrefixLength);1524684173;Set the minimum prefix length for fuzzy queries. Default is 1.;public QueryStringQueryBuilder fuzzyPrefixLength(int fuzzyPrefixLength) {_        this.fuzzyPrefixLength = fuzzyPrefixLength__        return this__    };set,the,minimum,prefix,length,for,fuzzy,queries,default,is,1;public,query,string,query,builder,fuzzy,prefix,length,int,fuzzy,prefix,length,this,fuzzy,prefix,length,fuzzy,prefix,length,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder fuzzyPrefixLength(int fuzzyPrefixLength);1525334055;Set the minimum prefix length for fuzzy queries. Default is 1.;public QueryStringQueryBuilder fuzzyPrefixLength(int fuzzyPrefixLength) {_        this.fuzzyPrefixLength = fuzzyPrefixLength__        return this__    };set,the,minimum,prefix,length,for,fuzzy,queries,default,is,1;public,query,string,query,builder,fuzzy,prefix,length,int,fuzzy,prefix,length,this,fuzzy,prefix,length,fuzzy,prefix,length,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder fuzzyPrefixLength(int fuzzyPrefixLength);1535046779;Set the minimum prefix length for fuzzy queries. Default is 1.;public QueryStringQueryBuilder fuzzyPrefixLength(int fuzzyPrefixLength) {_        this.fuzzyPrefixLength = fuzzyPrefixLength__        return this__    };set,the,minimum,prefix,length,for,fuzzy,queries,default,is,1;public,query,string,query,builder,fuzzy,prefix,length,int,fuzzy,prefix,length,this,fuzzy,prefix,length,fuzzy,prefix,length,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder fuzzyPrefixLength(int fuzzyPrefixLength);1535139672;Set the minimum prefix length for fuzzy queries. Default is 1.;public QueryStringQueryBuilder fuzzyPrefixLength(int fuzzyPrefixLength) {_        this.fuzzyPrefixLength = fuzzyPrefixLength__        return this__    };set,the,minimum,prefix,length,for,fuzzy,queries,default,is,1;public,query,string,query,builder,fuzzy,prefix,length,int,fuzzy,prefix,length,this,fuzzy,prefix,length,fuzzy,prefix,length,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder fuzzyPrefixLength(int fuzzyPrefixLength);1542726437;Set the minimum prefix length for fuzzy queries. Default is 1.;public QueryStringQueryBuilder fuzzyPrefixLength(int fuzzyPrefixLength) {_        this.fuzzyPrefixLength = fuzzyPrefixLength__        return this__    };set,the,minimum,prefix,length,for,fuzzy,queries,default,is,1;public,query,string,query,builder,fuzzy,prefix,length,int,fuzzy,prefix,length,this,fuzzy,prefix,length,fuzzy,prefix,length,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder fuzzyPrefixLength(int fuzzyPrefixLength);1542792548;Set the minimum prefix length for fuzzy queries. Default is 1.;public QueryStringQueryBuilder fuzzyPrefixLength(int fuzzyPrefixLength) {_        this.fuzzyPrefixLength = fuzzyPrefixLength__        return this__    };set,the,minimum,prefix,length,for,fuzzy,queries,default,is,1;public,query,string,query,builder,fuzzy,prefix,length,int,fuzzy,prefix,length,this,fuzzy,prefix,length,fuzzy,prefix,length,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder fuzzyPrefixLength(int fuzzyPrefixLength);1543399743;Set the minimum prefix length for fuzzy queries. Default is 1.;public QueryStringQueryBuilder fuzzyPrefixLength(int fuzzyPrefixLength) {_        this.fuzzyPrefixLength = fuzzyPrefixLength__        return this__    };set,the,minimum,prefix,length,for,fuzzy,queries,default,is,1;public,query,string,query,builder,fuzzy,prefix,length,int,fuzzy,prefix,length,this,fuzzy,prefix,length,fuzzy,prefix,length,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder fuzzyPrefixLength(int fuzzyPrefixLength);1548236405;Set the minimum prefix length for fuzzy queries. Default is 1.;public QueryStringQueryBuilder fuzzyPrefixLength(int fuzzyPrefixLength) {_        this.fuzzyPrefixLength = fuzzyPrefixLength__        return this__    };set,the,minimum,prefix,length,for,fuzzy,queries,default,is,1;public,query,string,query,builder,fuzzy,prefix,length,int,fuzzy,prefix,length,this,fuzzy,prefix,length,fuzzy,prefix,length,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder fuzzyPrefixLength(int fuzzyPrefixLength);1549017700;Set the minimum prefix length for fuzzy queries. Default is 1.;public QueryStringQueryBuilder fuzzyPrefixLength(int fuzzyPrefixLength) {_        this.fuzzyPrefixLength = fuzzyPrefixLength__        return this__    };set,the,minimum,prefix,length,for,fuzzy,queries,default,is,1;public,query,string,query,builder,fuzzy,prefix,length,int,fuzzy,prefix,length,this,fuzzy,prefix,length,fuzzy,prefix,length,return,this
QueryStringQueryBuilder -> @Deprecated     public QueryStringQueryBuilder autoGeneratePhraseQueries(boolean autoGeneratePhraseQueries);1524684173;This setting is ignored;@Deprecated_    public QueryStringQueryBuilder autoGeneratePhraseQueries(boolean autoGeneratePhraseQueries) {_        return this__    };this,setting,is,ignored;deprecated,public,query,string,query,builder,auto,generate,phrase,queries,boolean,auto,generate,phrase,queries,return,this
QueryStringQueryBuilder -> @Deprecated     public QueryStringQueryBuilder autoGeneratePhraseQueries(boolean autoGeneratePhraseQueries);1525334055;This setting is ignored;@Deprecated_    public QueryStringQueryBuilder autoGeneratePhraseQueries(boolean autoGeneratePhraseQueries) {_        return this__    };this,setting,is,ignored;deprecated,public,query,string,query,builder,auto,generate,phrase,queries,boolean,auto,generate,phrase,queries,return,this
QueryStringQueryBuilder -> @Deprecated     public QueryStringQueryBuilder autoGeneratePhraseQueries(boolean autoGeneratePhraseQueries);1535046779;This setting is ignored;@Deprecated_    public QueryStringQueryBuilder autoGeneratePhraseQueries(boolean autoGeneratePhraseQueries) {_        return this__    };this,setting,is,ignored;deprecated,public,query,string,query,builder,auto,generate,phrase,queries,boolean,auto,generate,phrase,queries,return,this
QueryStringQueryBuilder -> @Deprecated     public QueryStringQueryBuilder autoGeneratePhraseQueries(boolean autoGeneratePhraseQueries);1535139672;This setting is ignored;@Deprecated_    public QueryStringQueryBuilder autoGeneratePhraseQueries(boolean autoGeneratePhraseQueries) {_        return this__    };this,setting,is,ignored;deprecated,public,query,string,query,builder,auto,generate,phrase,queries,boolean,auto,generate,phrase,queries,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder fields(Map<String, Float> fields);1524684173;Add several fields to run the query against with a specific boost.;public QueryStringQueryBuilder fields(Map<String, Float> fields) {_        this.fieldsAndWeights.putAll(fields)__        return this__    };add,several,fields,to,run,the,query,against,with,a,specific,boost;public,query,string,query,builder,fields,map,string,float,fields,this,fields,and,weights,put,all,fields,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder fields(Map<String, Float> fields);1525334055;Add several fields to run the query against with a specific boost.;public QueryStringQueryBuilder fields(Map<String, Float> fields) {_        this.fieldsAndWeights.putAll(fields)__        return this__    };add,several,fields,to,run,the,query,against,with,a,specific,boost;public,query,string,query,builder,fields,map,string,float,fields,this,fields,and,weights,put,all,fields,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder fields(Map<String, Float> fields);1535046779;Add several fields to run the query against with a specific boost.;public QueryStringQueryBuilder fields(Map<String, Float> fields) {_        this.fieldsAndWeights.putAll(fields)__        return this__    };add,several,fields,to,run,the,query,against,with,a,specific,boost;public,query,string,query,builder,fields,map,string,float,fields,this,fields,and,weights,put,all,fields,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder fields(Map<String, Float> fields);1535139672;Add several fields to run the query against with a specific boost.;public QueryStringQueryBuilder fields(Map<String, Float> fields) {_        this.fieldsAndWeights.putAll(fields)__        return this__    };add,several,fields,to,run,the,query,against,with,a,specific,boost;public,query,string,query,builder,fields,map,string,float,fields,this,fields,and,weights,put,all,fields,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder fields(Map<String, Float> fields);1542726437;Add several fields to run the query against with a specific boost.;public QueryStringQueryBuilder fields(Map<String, Float> fields) {_        this.fieldsAndWeights.putAll(fields)__        return this__    };add,several,fields,to,run,the,query,against,with,a,specific,boost;public,query,string,query,builder,fields,map,string,float,fields,this,fields,and,weights,put,all,fields,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder fields(Map<String, Float> fields);1542792548;Add several fields to run the query against with a specific boost.;public QueryStringQueryBuilder fields(Map<String, Float> fields) {_        this.fieldsAndWeights.putAll(fields)__        return this__    };add,several,fields,to,run,the,query,against,with,a,specific,boost;public,query,string,query,builder,fields,map,string,float,fields,this,fields,and,weights,put,all,fields,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder fields(Map<String, Float> fields);1543399743;Add several fields to run the query against with a specific boost.;public QueryStringQueryBuilder fields(Map<String, Float> fields) {_        this.fieldsAndWeights.putAll(fields)__        return this__    };add,several,fields,to,run,the,query,against,with,a,specific,boost;public,query,string,query,builder,fields,map,string,float,fields,this,fields,and,weights,put,all,fields,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder fields(Map<String, Float> fields);1548236405;Add several fields to run the query against with a specific boost.;public QueryStringQueryBuilder fields(Map<String, Float> fields) {_        this.fieldsAndWeights.putAll(fields)__        return this__    };add,several,fields,to,run,the,query,against,with,a,specific,boost;public,query,string,query,builder,fields,map,string,float,fields,this,fields,and,weights,put,all,fields,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder fields(Map<String, Float> fields);1549017700;Add several fields to run the query against with a specific boost.;public QueryStringQueryBuilder fields(Map<String, Float> fields) {_        for (float fieldBoost : fields.values()) {_            checkNegativeBoost(fieldBoost)__        }_        this.fieldsAndWeights.putAll(fields)__        return this__    };add,several,fields,to,run,the,query,against,with,a,specific,boost;public,query,string,query,builder,fields,map,string,float,fields,for,float,field,boost,fields,values,check,negative,boost,field,boost,this,fields,and,weights,put,all,fields,return,this
QueryStringQueryBuilder -> @Deprecated     public boolean autoGeneratePhraseQueries();1524684173;This setting is ignored;@Deprecated_    public boolean autoGeneratePhraseQueries() {_        return false__    };this,setting,is,ignored;deprecated,public,boolean,auto,generate,phrase,queries,return,false
QueryStringQueryBuilder -> @Deprecated     public boolean autoGeneratePhraseQueries();1525334055;This setting is ignored;@Deprecated_    public boolean autoGeneratePhraseQueries() {_        return false__    };this,setting,is,ignored;deprecated,public,boolean,auto,generate,phrase,queries,return,false
QueryStringQueryBuilder -> @Deprecated     public boolean autoGeneratePhraseQueries();1535046779;This setting is ignored;@Deprecated_    public boolean autoGeneratePhraseQueries() {_        return false__    };this,setting,is,ignored;deprecated,public,boolean,auto,generate,phrase,queries,return,false
QueryStringQueryBuilder -> @Deprecated     public boolean autoGeneratePhraseQueries();1535139672;This setting is ignored;@Deprecated_    public boolean autoGeneratePhraseQueries() {_        return false__    };this,setting,is,ignored;deprecated,public,boolean,auto,generate,phrase,queries,return,false
QueryStringQueryBuilder -> public QueryStringQueryBuilder maxDeterminizedStates(int maxDeterminizedStates);1524684173;Protects against too-difficult regular expression queries.;public QueryStringQueryBuilder maxDeterminizedStates(int maxDeterminizedStates) {_        this.maxDeterminizedStates = maxDeterminizedStates__        return this__    };protects,against,too,difficult,regular,expression,queries;public,query,string,query,builder,max,determinized,states,int,max,determinized,states,this,max,determinized,states,max,determinized,states,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder maxDeterminizedStates(int maxDeterminizedStates);1525334055;Protects against too-difficult regular expression queries.;public QueryStringQueryBuilder maxDeterminizedStates(int maxDeterminizedStates) {_        this.maxDeterminizedStates = maxDeterminizedStates__        return this__    };protects,against,too,difficult,regular,expression,queries;public,query,string,query,builder,max,determinized,states,int,max,determinized,states,this,max,determinized,states,max,determinized,states,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder maxDeterminizedStates(int maxDeterminizedStates);1535046779;Protects against too-difficult regular expression queries.;public QueryStringQueryBuilder maxDeterminizedStates(int maxDeterminizedStates) {_        this.maxDeterminizedStates = maxDeterminizedStates__        return this__    };protects,against,too,difficult,regular,expression,queries;public,query,string,query,builder,max,determinized,states,int,max,determinized,states,this,max,determinized,states,max,determinized,states,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder maxDeterminizedStates(int maxDeterminizedStates);1535139672;Protects against too-difficult regular expression queries.;public QueryStringQueryBuilder maxDeterminizedStates(int maxDeterminizedStates) {_        this.maxDeterminizedStates = maxDeterminizedStates__        return this__    };protects,against,too,difficult,regular,expression,queries;public,query,string,query,builder,max,determinized,states,int,max,determinized,states,this,max,determinized,states,max,determinized,states,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder maxDeterminizedStates(int maxDeterminizedStates);1542726437;Protects against too-difficult regular expression queries.;public QueryStringQueryBuilder maxDeterminizedStates(int maxDeterminizedStates) {_        this.maxDeterminizedStates = maxDeterminizedStates__        return this__    };protects,against,too,difficult,regular,expression,queries;public,query,string,query,builder,max,determinized,states,int,max,determinized,states,this,max,determinized,states,max,determinized,states,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder maxDeterminizedStates(int maxDeterminizedStates);1542792548;Protects against too-difficult regular expression queries.;public QueryStringQueryBuilder maxDeterminizedStates(int maxDeterminizedStates) {_        this.maxDeterminizedStates = maxDeterminizedStates__        return this__    };protects,against,too,difficult,regular,expression,queries;public,query,string,query,builder,max,determinized,states,int,max,determinized,states,this,max,determinized,states,max,determinized,states,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder maxDeterminizedStates(int maxDeterminizedStates);1543399743;Protects against too-difficult regular expression queries.;public QueryStringQueryBuilder maxDeterminizedStates(int maxDeterminizedStates) {_        this.maxDeterminizedStates = maxDeterminizedStates__        return this__    };protects,against,too,difficult,regular,expression,queries;public,query,string,query,builder,max,determinized,states,int,max,determinized,states,this,max,determinized,states,max,determinized,states,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder maxDeterminizedStates(int maxDeterminizedStates);1548236405;Protects against too-difficult regular expression queries.;public QueryStringQueryBuilder maxDeterminizedStates(int maxDeterminizedStates) {_        this.maxDeterminizedStates = maxDeterminizedStates__        return this__    };protects,against,too,difficult,regular,expression,queries;public,query,string,query,builder,max,determinized,states,int,max,determinized,states,this,max,determinized,states,max,determinized,states,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder maxDeterminizedStates(int maxDeterminizedStates);1549017700;Protects against too-difficult regular expression queries.;public QueryStringQueryBuilder maxDeterminizedStates(int maxDeterminizedStates) {_        this.maxDeterminizedStates = maxDeterminizedStates__        return this__    };protects,against,too,difficult,regular,expression,queries;public,query,string,query,builder,max,determinized,states,int,max,determinized,states,this,max,determinized,states,max,determinized,states,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder(StreamInput in) throws IOException;1524684173;Read from a stream.;public QueryStringQueryBuilder(StreamInput in) throws IOException {_        super(in)__        queryString = in.readString()__        defaultField = in.readOptionalString()__        int size = in.readVInt()__        for (int i = 0_ i < size_ i++) {_            fieldsAndWeights.put(in.readString(), in.readFloat())__        }_        defaultOperator = Operator.readFromStream(in)__        analyzer = in.readOptionalString()__        quoteAnalyzer = in.readOptionalString()__        quoteFieldSuffix = in.readOptionalString()__        if (in.getVersion().before(Version.V_6_0_0_beta1)) {_            in.readBoolean()_ _        }_        allowLeadingWildcard = in.readOptionalBoolean()__        analyzeWildcard = in.readOptionalBoolean()__        enablePositionIncrements = in.readBoolean()__        fuzziness = new Fuzziness(in)__        fuzzyPrefixLength = in.readVInt()__        fuzzyMaxExpansions = in.readVInt()__        fuzzyRewrite = in.readOptionalString()__        phraseSlop = in.readVInt()__        if (in.getVersion().before(Version.V_6_0_0_beta1)) {_            in.readBoolean()_ _            tieBreaker = in.readFloat()__            type = DEFAULT_TYPE__        } else {_            type = MultiMatchQueryBuilder.Type.readFromStream(in)__            tieBreaker = in.readOptionalFloat()__        }_        rewrite = in.readOptionalString()__        minimumShouldMatch = in.readOptionalString()__        lenient = in.readOptionalBoolean()__        timeZone = in.readOptionalTimeZone()__        escape = in.readBoolean()__        maxDeterminizedStates = in.readVInt()__        if (in.getVersion().onOrAfter(Version.V_5_1_1) && in.getVersion().before(Version.V_6_0_0_beta1)) {_            in.readBoolean()_ _            Boolean useAllField = in.readOptionalBoolean()__            if (useAllField != null && useAllField) {_                defaultField = "*"__            }_        }_        if (in.getVersion().onOrAfter(Version.V_6_1_0)) {_            autoGenerateSynonymsPhraseQuery = in.readBoolean()__            fuzzyTranspositions = in.readBoolean()__        }_    };read,from,a,stream;public,query,string,query,builder,stream,input,in,throws,ioexception,super,in,query,string,in,read,string,default,field,in,read,optional,string,int,size,in,read,vint,for,int,i,0,i,size,i,fields,and,weights,put,in,read,string,in,read,float,default,operator,operator,read,from,stream,in,analyzer,in,read,optional,string,quote,analyzer,in,read,optional,string,quote,field,suffix,in,read,optional,string,if,in,get,version,before,version,in,read,boolean,allow,leading,wildcard,in,read,optional,boolean,analyze,wildcard,in,read,optional,boolean,enable,position,increments,in,read,boolean,fuzziness,new,fuzziness,in,fuzzy,prefix,length,in,read,vint,fuzzy,max,expansions,in,read,vint,fuzzy,rewrite,in,read,optional,string,phrase,slop,in,read,vint,if,in,get,version,before,version,in,read,boolean,tie,breaker,in,read,float,type,else,type,multi,match,query,builder,type,read,from,stream,in,tie,breaker,in,read,optional,float,rewrite,in,read,optional,string,minimum,should,match,in,read,optional,string,lenient,in,read,optional,boolean,time,zone,in,read,optional,time,zone,escape,in,read,boolean,max,determinized,states,in,read,vint,if,in,get,version,on,or,after,version,in,get,version,before,version,in,read,boolean,boolean,use,all,field,in,read,optional,boolean,if,use,all,field,null,use,all,field,default,field,if,in,get,version,on,or,after,version,auto,generate,synonyms,phrase,query,in,read,boolean,fuzzy,transpositions,in,read,boolean
QueryStringQueryBuilder -> public QueryStringQueryBuilder(StreamInput in) throws IOException;1525334055;Read from a stream.;public QueryStringQueryBuilder(StreamInput in) throws IOException {_        super(in)__        queryString = in.readString()__        defaultField = in.readOptionalString()__        int size = in.readVInt()__        for (int i = 0_ i < size_ i++) {_            fieldsAndWeights.put(in.readString(), in.readFloat())__        }_        defaultOperator = Operator.readFromStream(in)__        analyzer = in.readOptionalString()__        quoteAnalyzer = in.readOptionalString()__        quoteFieldSuffix = in.readOptionalString()__        if (in.getVersion().before(Version.V_6_0_0_beta1)) {_            in.readBoolean()_ _        }_        allowLeadingWildcard = in.readOptionalBoolean()__        analyzeWildcard = in.readOptionalBoolean()__        enablePositionIncrements = in.readBoolean()__        fuzziness = new Fuzziness(in)__        fuzzyPrefixLength = in.readVInt()__        fuzzyMaxExpansions = in.readVInt()__        fuzzyRewrite = in.readOptionalString()__        phraseSlop = in.readVInt()__        if (in.getVersion().before(Version.V_6_0_0_beta1)) {_            in.readBoolean()_ _            tieBreaker = in.readFloat()__            type = DEFAULT_TYPE__        } else {_            type = MultiMatchQueryBuilder.Type.readFromStream(in)__            tieBreaker = in.readOptionalFloat()__        }_        rewrite = in.readOptionalString()__        minimumShouldMatch = in.readOptionalString()__        lenient = in.readOptionalBoolean()__        timeZone = in.readOptionalTimeZone()__        escape = in.readBoolean()__        maxDeterminizedStates = in.readVInt()__        if (in.getVersion().onOrAfter(Version.V_5_1_1) && in.getVersion().before(Version.V_6_0_0_beta1)) {_            in.readBoolean()_ _            Boolean useAllField = in.readOptionalBoolean()__            if (useAllField != null && useAllField) {_                defaultField = "*"__            }_        }_        if (in.getVersion().onOrAfter(Version.V_6_1_0)) {_            autoGenerateSynonymsPhraseQuery = in.readBoolean()__            fuzzyTranspositions = in.readBoolean()__        }_    };read,from,a,stream;public,query,string,query,builder,stream,input,in,throws,ioexception,super,in,query,string,in,read,string,default,field,in,read,optional,string,int,size,in,read,vint,for,int,i,0,i,size,i,fields,and,weights,put,in,read,string,in,read,float,default,operator,operator,read,from,stream,in,analyzer,in,read,optional,string,quote,analyzer,in,read,optional,string,quote,field,suffix,in,read,optional,string,if,in,get,version,before,version,in,read,boolean,allow,leading,wildcard,in,read,optional,boolean,analyze,wildcard,in,read,optional,boolean,enable,position,increments,in,read,boolean,fuzziness,new,fuzziness,in,fuzzy,prefix,length,in,read,vint,fuzzy,max,expansions,in,read,vint,fuzzy,rewrite,in,read,optional,string,phrase,slop,in,read,vint,if,in,get,version,before,version,in,read,boolean,tie,breaker,in,read,float,type,else,type,multi,match,query,builder,type,read,from,stream,in,tie,breaker,in,read,optional,float,rewrite,in,read,optional,string,minimum,should,match,in,read,optional,string,lenient,in,read,optional,boolean,time,zone,in,read,optional,time,zone,escape,in,read,boolean,max,determinized,states,in,read,vint,if,in,get,version,on,or,after,version,in,get,version,before,version,in,read,boolean,boolean,use,all,field,in,read,optional,boolean,if,use,all,field,null,use,all,field,default,field,if,in,get,version,on,or,after,version,auto,generate,synonyms,phrase,query,in,read,boolean,fuzzy,transpositions,in,read,boolean
QueryStringQueryBuilder -> public QueryStringQueryBuilder(StreamInput in) throws IOException;1535046779;Read from a stream.;public QueryStringQueryBuilder(StreamInput in) throws IOException {_        super(in)__        queryString = in.readString()__        defaultField = in.readOptionalString()__        int size = in.readVInt()__        for (int i = 0_ i < size_ i++) {_            fieldsAndWeights.put(in.readString(), in.readFloat())__        }_        defaultOperator = Operator.readFromStream(in)__        analyzer = in.readOptionalString()__        quoteAnalyzer = in.readOptionalString()__        quoteFieldSuffix = in.readOptionalString()__        if (in.getVersion().before(Version.V_6_0_0_beta1)) {_            in.readBoolean()_ _        }_        allowLeadingWildcard = in.readOptionalBoolean()__        analyzeWildcard = in.readOptionalBoolean()__        enablePositionIncrements = in.readBoolean()__        fuzziness = new Fuzziness(in)__        fuzzyPrefixLength = in.readVInt()__        fuzzyMaxExpansions = in.readVInt()__        fuzzyRewrite = in.readOptionalString()__        phraseSlop = in.readVInt()__        if (in.getVersion().before(Version.V_6_0_0_beta1)) {_            in.readBoolean()_ _            tieBreaker = in.readFloat()__            type = DEFAULT_TYPE__        } else {_            type = MultiMatchQueryBuilder.Type.readFromStream(in)__            tieBreaker = in.readOptionalFloat()__        }_        rewrite = in.readOptionalString()__        minimumShouldMatch = in.readOptionalString()__        lenient = in.readOptionalBoolean()__        timeZone = in.readOptionalTimeZone()__        escape = in.readBoolean()__        maxDeterminizedStates = in.readVInt()__        if (in.getVersion().onOrAfter(Version.V_5_1_1) && in.getVersion().before(Version.V_6_0_0_beta1)) {_            in.readBoolean()_ _            Boolean useAllField = in.readOptionalBoolean()__            if (useAllField != null && useAllField) {_                defaultField = "*"__            }_        }_        if (in.getVersion().onOrAfter(Version.V_6_1_0)) {_            autoGenerateSynonymsPhraseQuery = in.readBoolean()__            fuzzyTranspositions = in.readBoolean()__        }_    };read,from,a,stream;public,query,string,query,builder,stream,input,in,throws,ioexception,super,in,query,string,in,read,string,default,field,in,read,optional,string,int,size,in,read,vint,for,int,i,0,i,size,i,fields,and,weights,put,in,read,string,in,read,float,default,operator,operator,read,from,stream,in,analyzer,in,read,optional,string,quote,analyzer,in,read,optional,string,quote,field,suffix,in,read,optional,string,if,in,get,version,before,version,in,read,boolean,allow,leading,wildcard,in,read,optional,boolean,analyze,wildcard,in,read,optional,boolean,enable,position,increments,in,read,boolean,fuzziness,new,fuzziness,in,fuzzy,prefix,length,in,read,vint,fuzzy,max,expansions,in,read,vint,fuzzy,rewrite,in,read,optional,string,phrase,slop,in,read,vint,if,in,get,version,before,version,in,read,boolean,tie,breaker,in,read,float,type,else,type,multi,match,query,builder,type,read,from,stream,in,tie,breaker,in,read,optional,float,rewrite,in,read,optional,string,minimum,should,match,in,read,optional,string,lenient,in,read,optional,boolean,time,zone,in,read,optional,time,zone,escape,in,read,boolean,max,determinized,states,in,read,vint,if,in,get,version,on,or,after,version,in,get,version,before,version,in,read,boolean,boolean,use,all,field,in,read,optional,boolean,if,use,all,field,null,use,all,field,default,field,if,in,get,version,on,or,after,version,auto,generate,synonyms,phrase,query,in,read,boolean,fuzzy,transpositions,in,read,boolean
QueryStringQueryBuilder -> public QueryStringQueryBuilder(StreamInput in) throws IOException;1535139672;Read from a stream.;public QueryStringQueryBuilder(StreamInput in) throws IOException {_        super(in)__        queryString = in.readString()__        defaultField = in.readOptionalString()__        int size = in.readVInt()__        for (int i = 0_ i < size_ i++) {_            fieldsAndWeights.put(in.readString(), in.readFloat())__        }_        defaultOperator = Operator.readFromStream(in)__        analyzer = in.readOptionalString()__        quoteAnalyzer = in.readOptionalString()__        quoteFieldSuffix = in.readOptionalString()__        allowLeadingWildcard = in.readOptionalBoolean()__        analyzeWildcard = in.readOptionalBoolean()__        enablePositionIncrements = in.readBoolean()__        fuzziness = new Fuzziness(in)__        fuzzyPrefixLength = in.readVInt()__        fuzzyMaxExpansions = in.readVInt()__        fuzzyRewrite = in.readOptionalString()__        phraseSlop = in.readVInt()__        type = MultiMatchQueryBuilder.Type.readFromStream(in)__        tieBreaker = in.readOptionalFloat()___        rewrite = in.readOptionalString()__        minimumShouldMatch = in.readOptionalString()__        lenient = in.readOptionalBoolean()__        timeZone = in.readOptionalTimeZone()__        escape = in.readBoolean()__        maxDeterminizedStates = in.readVInt()__        if (in.getVersion().onOrAfter(Version.V_6_1_0)) {_            autoGenerateSynonymsPhraseQuery = in.readBoolean()__            fuzzyTranspositions = in.readBoolean()__        }_    };read,from,a,stream;public,query,string,query,builder,stream,input,in,throws,ioexception,super,in,query,string,in,read,string,default,field,in,read,optional,string,int,size,in,read,vint,for,int,i,0,i,size,i,fields,and,weights,put,in,read,string,in,read,float,default,operator,operator,read,from,stream,in,analyzer,in,read,optional,string,quote,analyzer,in,read,optional,string,quote,field,suffix,in,read,optional,string,allow,leading,wildcard,in,read,optional,boolean,analyze,wildcard,in,read,optional,boolean,enable,position,increments,in,read,boolean,fuzziness,new,fuzziness,in,fuzzy,prefix,length,in,read,vint,fuzzy,max,expansions,in,read,vint,fuzzy,rewrite,in,read,optional,string,phrase,slop,in,read,vint,type,multi,match,query,builder,type,read,from,stream,in,tie,breaker,in,read,optional,float,rewrite,in,read,optional,string,minimum,should,match,in,read,optional,string,lenient,in,read,optional,boolean,time,zone,in,read,optional,time,zone,escape,in,read,boolean,max,determinized,states,in,read,vint,if,in,get,version,on,or,after,version,auto,generate,synonyms,phrase,query,in,read,boolean,fuzzy,transpositions,in,read,boolean
QueryStringQueryBuilder -> public QueryStringQueryBuilder(StreamInput in) throws IOException;1542726437;Read from a stream.;public QueryStringQueryBuilder(StreamInput in) throws IOException {_        super(in)__        queryString = in.readString()__        defaultField = in.readOptionalString()__        int size = in.readVInt()__        for (int i = 0_ i < size_ i++) {_            fieldsAndWeights.put(in.readString(), in.readFloat())__        }_        defaultOperator = Operator.readFromStream(in)__        analyzer = in.readOptionalString()__        quoteAnalyzer = in.readOptionalString()__        quoteFieldSuffix = in.readOptionalString()__        allowLeadingWildcard = in.readOptionalBoolean()__        analyzeWildcard = in.readOptionalBoolean()__        enablePositionIncrements = in.readBoolean()__        fuzziness = new Fuzziness(in)__        fuzzyPrefixLength = in.readVInt()__        fuzzyMaxExpansions = in.readVInt()__        fuzzyRewrite = in.readOptionalString()__        phraseSlop = in.readVInt()__        type = MultiMatchQueryBuilder.Type.readFromStream(in)__        tieBreaker = in.readOptionalFloat()___        rewrite = in.readOptionalString()__        minimumShouldMatch = in.readOptionalString()__        lenient = in.readOptionalBoolean()__        timeZone = in.readOptionalTimeZone()__        escape = in.readBoolean()__        maxDeterminizedStates = in.readVInt()__        if (in.getVersion().onOrAfter(Version.V_6_1_0)) {_            autoGenerateSynonymsPhraseQuery = in.readBoolean()__            fuzzyTranspositions = in.readBoolean()__        }_    };read,from,a,stream;public,query,string,query,builder,stream,input,in,throws,ioexception,super,in,query,string,in,read,string,default,field,in,read,optional,string,int,size,in,read,vint,for,int,i,0,i,size,i,fields,and,weights,put,in,read,string,in,read,float,default,operator,operator,read,from,stream,in,analyzer,in,read,optional,string,quote,analyzer,in,read,optional,string,quote,field,suffix,in,read,optional,string,allow,leading,wildcard,in,read,optional,boolean,analyze,wildcard,in,read,optional,boolean,enable,position,increments,in,read,boolean,fuzziness,new,fuzziness,in,fuzzy,prefix,length,in,read,vint,fuzzy,max,expansions,in,read,vint,fuzzy,rewrite,in,read,optional,string,phrase,slop,in,read,vint,type,multi,match,query,builder,type,read,from,stream,in,tie,breaker,in,read,optional,float,rewrite,in,read,optional,string,minimum,should,match,in,read,optional,string,lenient,in,read,optional,boolean,time,zone,in,read,optional,time,zone,escape,in,read,boolean,max,determinized,states,in,read,vint,if,in,get,version,on,or,after,version,auto,generate,synonyms,phrase,query,in,read,boolean,fuzzy,transpositions,in,read,boolean
QueryStringQueryBuilder -> public QueryStringQueryBuilder(StreamInput in) throws IOException;1542792548;Read from a stream.;public QueryStringQueryBuilder(StreamInput in) throws IOException {_        super(in)__        queryString = in.readString()__        defaultField = in.readOptionalString()__        int size = in.readVInt()__        for (int i = 0_ i < size_ i++) {_            fieldsAndWeights.put(in.readString(), in.readFloat())__        }_        defaultOperator = Operator.readFromStream(in)__        analyzer = in.readOptionalString()__        quoteAnalyzer = in.readOptionalString()__        quoteFieldSuffix = in.readOptionalString()__        allowLeadingWildcard = in.readOptionalBoolean()__        analyzeWildcard = in.readOptionalBoolean()__        enablePositionIncrements = in.readBoolean()__        fuzziness = new Fuzziness(in)__        fuzzyPrefixLength = in.readVInt()__        fuzzyMaxExpansions = in.readVInt()__        fuzzyRewrite = in.readOptionalString()__        phraseSlop = in.readVInt()__        type = MultiMatchQueryBuilder.Type.readFromStream(in)__        tieBreaker = in.readOptionalFloat()___        rewrite = in.readOptionalString()__        minimumShouldMatch = in.readOptionalString()__        lenient = in.readOptionalBoolean()__        timeZone = in.readOptionalTimeZone()__        escape = in.readBoolean()__        maxDeterminizedStates = in.readVInt()__        if (in.getVersion().onOrAfter(Version.V_6_1_0)) {_            autoGenerateSynonymsPhraseQuery = in.readBoolean()__            fuzzyTranspositions = in.readBoolean()__        }_    };read,from,a,stream;public,query,string,query,builder,stream,input,in,throws,ioexception,super,in,query,string,in,read,string,default,field,in,read,optional,string,int,size,in,read,vint,for,int,i,0,i,size,i,fields,and,weights,put,in,read,string,in,read,float,default,operator,operator,read,from,stream,in,analyzer,in,read,optional,string,quote,analyzer,in,read,optional,string,quote,field,suffix,in,read,optional,string,allow,leading,wildcard,in,read,optional,boolean,analyze,wildcard,in,read,optional,boolean,enable,position,increments,in,read,boolean,fuzziness,new,fuzziness,in,fuzzy,prefix,length,in,read,vint,fuzzy,max,expansions,in,read,vint,fuzzy,rewrite,in,read,optional,string,phrase,slop,in,read,vint,type,multi,match,query,builder,type,read,from,stream,in,tie,breaker,in,read,optional,float,rewrite,in,read,optional,string,minimum,should,match,in,read,optional,string,lenient,in,read,optional,boolean,time,zone,in,read,optional,time,zone,escape,in,read,boolean,max,determinized,states,in,read,vint,if,in,get,version,on,or,after,version,auto,generate,synonyms,phrase,query,in,read,boolean,fuzzy,transpositions,in,read,boolean
QueryStringQueryBuilder -> public QueryStringQueryBuilder(StreamInput in) throws IOException;1543399743;Read from a stream.;public QueryStringQueryBuilder(StreamInput in) throws IOException {_        super(in)__        queryString = in.readString()__        defaultField = in.readOptionalString()__        int size = in.readVInt()__        for (int i = 0_ i < size_ i++) {_            fieldsAndWeights.put(in.readString(), in.readFloat())__        }_        defaultOperator = Operator.readFromStream(in)__        analyzer = in.readOptionalString()__        quoteAnalyzer = in.readOptionalString()__        quoteFieldSuffix = in.readOptionalString()__        allowLeadingWildcard = in.readOptionalBoolean()__        analyzeWildcard = in.readOptionalBoolean()__        enablePositionIncrements = in.readBoolean()__        fuzziness = new Fuzziness(in)__        fuzzyPrefixLength = in.readVInt()__        fuzzyMaxExpansions = in.readVInt()__        fuzzyRewrite = in.readOptionalString()__        phraseSlop = in.readVInt()__        type = MultiMatchQueryBuilder.Type.readFromStream(in)__        tieBreaker = in.readOptionalFloat()___        rewrite = in.readOptionalString()__        minimumShouldMatch = in.readOptionalString()__        lenient = in.readOptionalBoolean()__        timeZone = in.readOptionalTimeZone()__        escape = in.readBoolean()__        maxDeterminizedStates = in.readVInt()__        if (in.getVersion().onOrAfter(Version.V_6_1_0)) {_            autoGenerateSynonymsPhraseQuery = in.readBoolean()__            fuzzyTranspositions = in.readBoolean()__        }_    };read,from,a,stream;public,query,string,query,builder,stream,input,in,throws,ioexception,super,in,query,string,in,read,string,default,field,in,read,optional,string,int,size,in,read,vint,for,int,i,0,i,size,i,fields,and,weights,put,in,read,string,in,read,float,default,operator,operator,read,from,stream,in,analyzer,in,read,optional,string,quote,analyzer,in,read,optional,string,quote,field,suffix,in,read,optional,string,allow,leading,wildcard,in,read,optional,boolean,analyze,wildcard,in,read,optional,boolean,enable,position,increments,in,read,boolean,fuzziness,new,fuzziness,in,fuzzy,prefix,length,in,read,vint,fuzzy,max,expansions,in,read,vint,fuzzy,rewrite,in,read,optional,string,phrase,slop,in,read,vint,type,multi,match,query,builder,type,read,from,stream,in,tie,breaker,in,read,optional,float,rewrite,in,read,optional,string,minimum,should,match,in,read,optional,string,lenient,in,read,optional,boolean,time,zone,in,read,optional,time,zone,escape,in,read,boolean,max,determinized,states,in,read,vint,if,in,get,version,on,or,after,version,auto,generate,synonyms,phrase,query,in,read,boolean,fuzzy,transpositions,in,read,boolean
QueryStringQueryBuilder -> public QueryStringQueryBuilder(StreamInput in) throws IOException;1548236405;Read from a stream.;public QueryStringQueryBuilder(StreamInput in) throws IOException {_        super(in)__        queryString = in.readString()__        defaultField = in.readOptionalString()__        int size = in.readVInt()__        for (int i = 0_ i < size_ i++) {_            fieldsAndWeights.put(in.readString(), in.readFloat())__        }_        defaultOperator = Operator.readFromStream(in)__        analyzer = in.readOptionalString()__        quoteAnalyzer = in.readOptionalString()__        quoteFieldSuffix = in.readOptionalString()__        allowLeadingWildcard = in.readOptionalBoolean()__        analyzeWildcard = in.readOptionalBoolean()__        enablePositionIncrements = in.readBoolean()__        fuzziness = new Fuzziness(in)__        fuzzyPrefixLength = in.readVInt()__        fuzzyMaxExpansions = in.readVInt()__        fuzzyRewrite = in.readOptionalString()__        phraseSlop = in.readVInt()__        type = MultiMatchQueryBuilder.Type.readFromStream(in)__        tieBreaker = in.readOptionalFloat()___        rewrite = in.readOptionalString()__        minimumShouldMatch = in.readOptionalString()__        lenient = in.readOptionalBoolean()__        timeZone = in.readOptionalZoneId()__        escape = in.readBoolean()__        maxDeterminizedStates = in.readVInt()__        if (in.getVersion().onOrAfter(Version.V_6_1_0)) {_            autoGenerateSynonymsPhraseQuery = in.readBoolean()__            fuzzyTranspositions = in.readBoolean()__        }_    };read,from,a,stream;public,query,string,query,builder,stream,input,in,throws,ioexception,super,in,query,string,in,read,string,default,field,in,read,optional,string,int,size,in,read,vint,for,int,i,0,i,size,i,fields,and,weights,put,in,read,string,in,read,float,default,operator,operator,read,from,stream,in,analyzer,in,read,optional,string,quote,analyzer,in,read,optional,string,quote,field,suffix,in,read,optional,string,allow,leading,wildcard,in,read,optional,boolean,analyze,wildcard,in,read,optional,boolean,enable,position,increments,in,read,boolean,fuzziness,new,fuzziness,in,fuzzy,prefix,length,in,read,vint,fuzzy,max,expansions,in,read,vint,fuzzy,rewrite,in,read,optional,string,phrase,slop,in,read,vint,type,multi,match,query,builder,type,read,from,stream,in,tie,breaker,in,read,optional,float,rewrite,in,read,optional,string,minimum,should,match,in,read,optional,string,lenient,in,read,optional,boolean,time,zone,in,read,optional,zone,id,escape,in,read,boolean,max,determinized,states,in,read,vint,if,in,get,version,on,or,after,version,auto,generate,synonyms,phrase,query,in,read,boolean,fuzzy,transpositions,in,read,boolean
QueryStringQueryBuilder -> public QueryStringQueryBuilder(StreamInput in) throws IOException;1549017700;Read from a stream.;public QueryStringQueryBuilder(StreamInput in) throws IOException {_        super(in)__        queryString = in.readString()__        defaultField = in.readOptionalString()__        int size = in.readVInt()__        for (int i = 0_ i < size_ i++) {_            String field = in.readString()__            Float weight = in.readFloat()__            checkNegativeBoost(weight)__            fieldsAndWeights.put(field, weight)__        }_        defaultOperator = Operator.readFromStream(in)__        analyzer = in.readOptionalString()__        quoteAnalyzer = in.readOptionalString()__        quoteFieldSuffix = in.readOptionalString()__        allowLeadingWildcard = in.readOptionalBoolean()__        analyzeWildcard = in.readOptionalBoolean()__        enablePositionIncrements = in.readBoolean()__        fuzziness = new Fuzziness(in)__        fuzzyPrefixLength = in.readVInt()__        fuzzyMaxExpansions = in.readVInt()__        fuzzyRewrite = in.readOptionalString()__        phraseSlop = in.readVInt()__        type = MultiMatchQueryBuilder.Type.readFromStream(in)__        tieBreaker = in.readOptionalFloat()___        rewrite = in.readOptionalString()__        minimumShouldMatch = in.readOptionalString()__        lenient = in.readOptionalBoolean()__        timeZone = in.readOptionalZoneId()__        escape = in.readBoolean()__        maxDeterminizedStates = in.readVInt()__        if (in.getVersion().onOrAfter(Version.V_6_1_0)) {_            autoGenerateSynonymsPhraseQuery = in.readBoolean()__            fuzzyTranspositions = in.readBoolean()__        }_    };read,from,a,stream;public,query,string,query,builder,stream,input,in,throws,ioexception,super,in,query,string,in,read,string,default,field,in,read,optional,string,int,size,in,read,vint,for,int,i,0,i,size,i,string,field,in,read,string,float,weight,in,read,float,check,negative,boost,weight,fields,and,weights,put,field,weight,default,operator,operator,read,from,stream,in,analyzer,in,read,optional,string,quote,analyzer,in,read,optional,string,quote,field,suffix,in,read,optional,string,allow,leading,wildcard,in,read,optional,boolean,analyze,wildcard,in,read,optional,boolean,enable,position,increments,in,read,boolean,fuzziness,new,fuzziness,in,fuzzy,prefix,length,in,read,vint,fuzzy,max,expansions,in,read,vint,fuzzy,rewrite,in,read,optional,string,phrase,slop,in,read,vint,type,multi,match,query,builder,type,read,from,stream,in,tie,breaker,in,read,optional,float,rewrite,in,read,optional,string,minimum,should,match,in,read,optional,string,lenient,in,read,optional,boolean,time,zone,in,read,optional,zone,id,escape,in,read,boolean,max,determinized,states,in,read,vint,if,in,get,version,on,or,after,version,auto,generate,synonyms,phrase,query,in,read,boolean,fuzzy,transpositions,in,read,boolean
QueryStringQueryBuilder -> public QueryStringQueryBuilder field(String field, float boost);1524684173;Adds a field to run the query string against with a specific boost.;public QueryStringQueryBuilder field(String field, float boost) {_        this.fieldsAndWeights.put(field, boost)__        return this__    };adds,a,field,to,run,the,query,string,against,with,a,specific,boost;public,query,string,query,builder,field,string,field,float,boost,this,fields,and,weights,put,field,boost,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder field(String field, float boost);1525334055;Adds a field to run the query string against with a specific boost.;public QueryStringQueryBuilder field(String field, float boost) {_        this.fieldsAndWeights.put(field, boost)__        return this__    };adds,a,field,to,run,the,query,string,against,with,a,specific,boost;public,query,string,query,builder,field,string,field,float,boost,this,fields,and,weights,put,field,boost,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder field(String field, float boost);1535046779;Adds a field to run the query string against with a specific boost.;public QueryStringQueryBuilder field(String field, float boost) {_        this.fieldsAndWeights.put(field, boost)__        return this__    };adds,a,field,to,run,the,query,string,against,with,a,specific,boost;public,query,string,query,builder,field,string,field,float,boost,this,fields,and,weights,put,field,boost,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder field(String field, float boost);1535139672;Adds a field to run the query string against with a specific boost.;public QueryStringQueryBuilder field(String field, float boost) {_        this.fieldsAndWeights.put(field, boost)__        return this__    };adds,a,field,to,run,the,query,string,against,with,a,specific,boost;public,query,string,query,builder,field,string,field,float,boost,this,fields,and,weights,put,field,boost,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder field(String field, float boost);1542726437;Adds a field to run the query string against with a specific boost.;public QueryStringQueryBuilder field(String field, float boost) {_        this.fieldsAndWeights.put(field, boost)__        return this__    };adds,a,field,to,run,the,query,string,against,with,a,specific,boost;public,query,string,query,builder,field,string,field,float,boost,this,fields,and,weights,put,field,boost,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder field(String field, float boost);1542792548;Adds a field to run the query string against with a specific boost.;public QueryStringQueryBuilder field(String field, float boost) {_        this.fieldsAndWeights.put(field, boost)__        return this__    };adds,a,field,to,run,the,query,string,against,with,a,specific,boost;public,query,string,query,builder,field,string,field,float,boost,this,fields,and,weights,put,field,boost,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder field(String field, float boost);1543399743;Adds a field to run the query string against with a specific boost.;public QueryStringQueryBuilder field(String field, float boost) {_        this.fieldsAndWeights.put(field, boost)__        return this__    };adds,a,field,to,run,the,query,string,against,with,a,specific,boost;public,query,string,query,builder,field,string,field,float,boost,this,fields,and,weights,put,field,boost,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder field(String field, float boost);1548236405;Adds a field to run the query string against with a specific boost.;public QueryStringQueryBuilder field(String field, float boost) {_        this.fieldsAndWeights.put(field, boost)__        return this__    };adds,a,field,to,run,the,query,string,against,with,a,specific,boost;public,query,string,query,builder,field,string,field,float,boost,this,fields,and,weights,put,field,boost,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder field(String field, float boost);1549017700;Adds a field to run the query string against with a specific boost.;public QueryStringQueryBuilder field(String field, float boost) {_        checkNegativeBoost(boost)__        this.fieldsAndWeights.put(field, boost)__        return this__    };adds,a,field,to,run,the,query,string,against,with,a,specific,boost;public,query,string,query,builder,field,string,field,float,boost,check,negative,boost,boost,this,fields,and,weights,put,field,boost,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder enablePositionIncrements(boolean enablePositionIncrements);1524684173;Set to <tt>true</tt> to enable position increments in result query. Defaults to_<tt>true</tt>._<p>_When set, result phrase and multi-phrase queries will be aware of position increments._Useful when e.g. a StopFilter increases the position increment of the token that follows an omitted token.;public QueryStringQueryBuilder enablePositionIncrements(boolean enablePositionIncrements) {_        this.enablePositionIncrements = enablePositionIncrements__        return this__    };set,to,tt,true,tt,to,enable,position,increments,in,result,query,defaults,to,tt,true,tt,p,when,set,result,phrase,and,multi,phrase,queries,will,be,aware,of,position,increments,useful,when,e,g,a,stop,filter,increases,the,position,increment,of,the,token,that,follows,an,omitted,token;public,query,string,query,builder,enable,position,increments,boolean,enable,position,increments,this,enable,position,increments,enable,position,increments,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder enablePositionIncrements(boolean enablePositionIncrements);1525334055;Set to {@code true} to enable position increments in result query. Defaults to_{@code true}._<p>_When set, result phrase and multi-phrase queries will be aware of position increments._Useful when e.g. a StopFilter increases the position increment of the token that follows an omitted token.;public QueryStringQueryBuilder enablePositionIncrements(boolean enablePositionIncrements) {_        this.enablePositionIncrements = enablePositionIncrements__        return this__    };set,to,code,true,to,enable,position,increments,in,result,query,defaults,to,code,true,p,when,set,result,phrase,and,multi,phrase,queries,will,be,aware,of,position,increments,useful,when,e,g,a,stop,filter,increases,the,position,increment,of,the,token,that,follows,an,omitted,token;public,query,string,query,builder,enable,position,increments,boolean,enable,position,increments,this,enable,position,increments,enable,position,increments,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder enablePositionIncrements(boolean enablePositionIncrements);1535046779;Set to {@code true} to enable position increments in result query. Defaults to_{@code true}._<p>_When set, result phrase and multi-phrase queries will be aware of position increments._Useful when e.g. a StopFilter increases the position increment of the token that follows an omitted token.;public QueryStringQueryBuilder enablePositionIncrements(boolean enablePositionIncrements) {_        this.enablePositionIncrements = enablePositionIncrements__        return this__    };set,to,code,true,to,enable,position,increments,in,result,query,defaults,to,code,true,p,when,set,result,phrase,and,multi,phrase,queries,will,be,aware,of,position,increments,useful,when,e,g,a,stop,filter,increases,the,position,increment,of,the,token,that,follows,an,omitted,token;public,query,string,query,builder,enable,position,increments,boolean,enable,position,increments,this,enable,position,increments,enable,position,increments,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder enablePositionIncrements(boolean enablePositionIncrements);1535139672;Set to {@code true} to enable position increments in result query. Defaults to_{@code true}._<p>_When set, result phrase and multi-phrase queries will be aware of position increments._Useful when e.g. a StopFilter increases the position increment of the token that follows an omitted token.;public QueryStringQueryBuilder enablePositionIncrements(boolean enablePositionIncrements) {_        this.enablePositionIncrements = enablePositionIncrements__        return this__    };set,to,code,true,to,enable,position,increments,in,result,query,defaults,to,code,true,p,when,set,result,phrase,and,multi,phrase,queries,will,be,aware,of,position,increments,useful,when,e,g,a,stop,filter,increases,the,position,increment,of,the,token,that,follows,an,omitted,token;public,query,string,query,builder,enable,position,increments,boolean,enable,position,increments,this,enable,position,increments,enable,position,increments,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder enablePositionIncrements(boolean enablePositionIncrements);1542726437;Set to {@code true} to enable position increments in result query. Defaults to_{@code true}._<p>_When set, result phrase and multi-phrase queries will be aware of position increments._Useful when e.g. a StopFilter increases the position increment of the token that follows an omitted token.;public QueryStringQueryBuilder enablePositionIncrements(boolean enablePositionIncrements) {_        this.enablePositionIncrements = enablePositionIncrements__        return this__    };set,to,code,true,to,enable,position,increments,in,result,query,defaults,to,code,true,p,when,set,result,phrase,and,multi,phrase,queries,will,be,aware,of,position,increments,useful,when,e,g,a,stop,filter,increases,the,position,increment,of,the,token,that,follows,an,omitted,token;public,query,string,query,builder,enable,position,increments,boolean,enable,position,increments,this,enable,position,increments,enable,position,increments,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder enablePositionIncrements(boolean enablePositionIncrements);1542792548;Set to {@code true} to enable position increments in result query. Defaults to_{@code true}._<p>_When set, result phrase and multi-phrase queries will be aware of position increments._Useful when e.g. a StopFilter increases the position increment of the token that follows an omitted token.;public QueryStringQueryBuilder enablePositionIncrements(boolean enablePositionIncrements) {_        this.enablePositionIncrements = enablePositionIncrements__        return this__    };set,to,code,true,to,enable,position,increments,in,result,query,defaults,to,code,true,p,when,set,result,phrase,and,multi,phrase,queries,will,be,aware,of,position,increments,useful,when,e,g,a,stop,filter,increases,the,position,increment,of,the,token,that,follows,an,omitted,token;public,query,string,query,builder,enable,position,increments,boolean,enable,position,increments,this,enable,position,increments,enable,position,increments,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder enablePositionIncrements(boolean enablePositionIncrements);1543399743;Set to {@code true} to enable position increments in result query. Defaults to_{@code true}._<p>_When set, result phrase and multi-phrase queries will be aware of position increments._Useful when e.g. a StopFilter increases the position increment of the token that follows an omitted token.;public QueryStringQueryBuilder enablePositionIncrements(boolean enablePositionIncrements) {_        this.enablePositionIncrements = enablePositionIncrements__        return this__    };set,to,code,true,to,enable,position,increments,in,result,query,defaults,to,code,true,p,when,set,result,phrase,and,multi,phrase,queries,will,be,aware,of,position,increments,useful,when,e,g,a,stop,filter,increases,the,position,increment,of,the,token,that,follows,an,omitted,token;public,query,string,query,builder,enable,position,increments,boolean,enable,position,increments,this,enable,position,increments,enable,position,increments,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder enablePositionIncrements(boolean enablePositionIncrements);1548236405;Set to {@code true} to enable position increments in result query. Defaults to_{@code true}._<p>_When set, result phrase and multi-phrase queries will be aware of position increments._Useful when e.g. a StopFilter increases the position increment of the token that follows an omitted token.;public QueryStringQueryBuilder enablePositionIncrements(boolean enablePositionIncrements) {_        this.enablePositionIncrements = enablePositionIncrements__        return this__    };set,to,code,true,to,enable,position,increments,in,result,query,defaults,to,code,true,p,when,set,result,phrase,and,multi,phrase,queries,will,be,aware,of,position,increments,useful,when,e,g,a,stop,filter,increases,the,position,increment,of,the,token,that,follows,an,omitted,token;public,query,string,query,builder,enable,position,increments,boolean,enable,position,increments,this,enable,position,increments,enable,position,increments,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder enablePositionIncrements(boolean enablePositionIncrements);1549017700;Set to {@code true} to enable position increments in result query. Defaults to_{@code true}._<p>_When set, result phrase and multi-phrase queries will be aware of position increments._Useful when e.g. a StopFilter increases the position increment of the token that follows an omitted token.;public QueryStringQueryBuilder enablePositionIncrements(boolean enablePositionIncrements) {_        this.enablePositionIncrements = enablePositionIncrements__        return this__    };set,to,code,true,to,enable,position,increments,in,result,query,defaults,to,code,true,p,when,set,result,phrase,and,multi,phrase,queries,will,be,aware,of,position,increments,useful,when,e,g,a,stop,filter,increases,the,position,increment,of,the,token,that,follows,an,omitted,token;public,query,string,query,builder,enable,position,increments,boolean,enable,position,increments,this,enable,position,increments,enable,position,increments,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder analyzeWildcard(Boolean analyzeWildcard);1524684173;Set to <tt>true</tt> to enable analysis on wildcard and prefix queries.;public QueryStringQueryBuilder analyzeWildcard(Boolean analyzeWildcard) {_        this.analyzeWildcard = analyzeWildcard__        return this__    };set,to,tt,true,tt,to,enable,analysis,on,wildcard,and,prefix,queries;public,query,string,query,builder,analyze,wildcard,boolean,analyze,wildcard,this,analyze,wildcard,analyze,wildcard,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder analyzeWildcard(Boolean analyzeWildcard);1525334055;Set to {@code true} to enable analysis on wildcard and prefix queries.;public QueryStringQueryBuilder analyzeWildcard(Boolean analyzeWildcard) {_        this.analyzeWildcard = analyzeWildcard__        return this__    };set,to,code,true,to,enable,analysis,on,wildcard,and,prefix,queries;public,query,string,query,builder,analyze,wildcard,boolean,analyze,wildcard,this,analyze,wildcard,analyze,wildcard,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder analyzeWildcard(Boolean analyzeWildcard);1535046779;Set to {@code true} to enable analysis on wildcard and prefix queries.;public QueryStringQueryBuilder analyzeWildcard(Boolean analyzeWildcard) {_        this.analyzeWildcard = analyzeWildcard__        return this__    };set,to,code,true,to,enable,analysis,on,wildcard,and,prefix,queries;public,query,string,query,builder,analyze,wildcard,boolean,analyze,wildcard,this,analyze,wildcard,analyze,wildcard,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder analyzeWildcard(Boolean analyzeWildcard);1535139672;Set to {@code true} to enable analysis on wildcard and prefix queries.;public QueryStringQueryBuilder analyzeWildcard(Boolean analyzeWildcard) {_        this.analyzeWildcard = analyzeWildcard__        return this__    };set,to,code,true,to,enable,analysis,on,wildcard,and,prefix,queries;public,query,string,query,builder,analyze,wildcard,boolean,analyze,wildcard,this,analyze,wildcard,analyze,wildcard,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder analyzeWildcard(Boolean analyzeWildcard);1542726437;Set to {@code true} to enable analysis on wildcard and prefix queries.;public QueryStringQueryBuilder analyzeWildcard(Boolean analyzeWildcard) {_        this.analyzeWildcard = analyzeWildcard__        return this__    };set,to,code,true,to,enable,analysis,on,wildcard,and,prefix,queries;public,query,string,query,builder,analyze,wildcard,boolean,analyze,wildcard,this,analyze,wildcard,analyze,wildcard,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder analyzeWildcard(Boolean analyzeWildcard);1542792548;Set to {@code true} to enable analysis on wildcard and prefix queries.;public QueryStringQueryBuilder analyzeWildcard(Boolean analyzeWildcard) {_        this.analyzeWildcard = analyzeWildcard__        return this__    };set,to,code,true,to,enable,analysis,on,wildcard,and,prefix,queries;public,query,string,query,builder,analyze,wildcard,boolean,analyze,wildcard,this,analyze,wildcard,analyze,wildcard,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder analyzeWildcard(Boolean analyzeWildcard);1543399743;Set to {@code true} to enable analysis on wildcard and prefix queries.;public QueryStringQueryBuilder analyzeWildcard(Boolean analyzeWildcard) {_        this.analyzeWildcard = analyzeWildcard__        return this__    };set,to,code,true,to,enable,analysis,on,wildcard,and,prefix,queries;public,query,string,query,builder,analyze,wildcard,boolean,analyze,wildcard,this,analyze,wildcard,analyze,wildcard,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder analyzeWildcard(Boolean analyzeWildcard);1548236405;Set to {@code true} to enable analysis on wildcard and prefix queries.;public QueryStringQueryBuilder analyzeWildcard(Boolean analyzeWildcard) {_        this.analyzeWildcard = analyzeWildcard__        return this__    };set,to,code,true,to,enable,analysis,on,wildcard,and,prefix,queries;public,query,string,query,builder,analyze,wildcard,boolean,analyze,wildcard,this,analyze,wildcard,analyze,wildcard,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder analyzeWildcard(Boolean analyzeWildcard);1549017700;Set to {@code true} to enable analysis on wildcard and prefix queries.;public QueryStringQueryBuilder analyzeWildcard(Boolean analyzeWildcard) {_        this.analyzeWildcard = analyzeWildcard__        return this__    };set,to,code,true,to,enable,analysis,on,wildcard,and,prefix,queries;public,query,string,query,builder,analyze,wildcard,boolean,analyze,wildcard,this,analyze,wildcard,analyze,wildcard,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder quoteFieldSuffix(String quoteFieldSuffix);1524684173;An optional field name suffix to automatically try and add to the field searched when using quoted text.;public QueryStringQueryBuilder quoteFieldSuffix(String quoteFieldSuffix) {_        this.quoteFieldSuffix = quoteFieldSuffix__        return this__    };an,optional,field,name,suffix,to,automatically,try,and,add,to,the,field,searched,when,using,quoted,text;public,query,string,query,builder,quote,field,suffix,string,quote,field,suffix,this,quote,field,suffix,quote,field,suffix,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder quoteFieldSuffix(String quoteFieldSuffix);1525334055;An optional field name suffix to automatically try and add to the field searched when using quoted text.;public QueryStringQueryBuilder quoteFieldSuffix(String quoteFieldSuffix) {_        this.quoteFieldSuffix = quoteFieldSuffix__        return this__    };an,optional,field,name,suffix,to,automatically,try,and,add,to,the,field,searched,when,using,quoted,text;public,query,string,query,builder,quote,field,suffix,string,quote,field,suffix,this,quote,field,suffix,quote,field,suffix,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder quoteFieldSuffix(String quoteFieldSuffix);1535046779;An optional field name suffix to automatically try and add to the field searched when using quoted text.;public QueryStringQueryBuilder quoteFieldSuffix(String quoteFieldSuffix) {_        this.quoteFieldSuffix = quoteFieldSuffix__        return this__    };an,optional,field,name,suffix,to,automatically,try,and,add,to,the,field,searched,when,using,quoted,text;public,query,string,query,builder,quote,field,suffix,string,quote,field,suffix,this,quote,field,suffix,quote,field,suffix,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder quoteFieldSuffix(String quoteFieldSuffix);1535139672;An optional field name suffix to automatically try and add to the field searched when using quoted text.;public QueryStringQueryBuilder quoteFieldSuffix(String quoteFieldSuffix) {_        this.quoteFieldSuffix = quoteFieldSuffix__        return this__    };an,optional,field,name,suffix,to,automatically,try,and,add,to,the,field,searched,when,using,quoted,text;public,query,string,query,builder,quote,field,suffix,string,quote,field,suffix,this,quote,field,suffix,quote,field,suffix,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder quoteFieldSuffix(String quoteFieldSuffix);1542726437;An optional field name suffix to automatically try and add to the field searched when using quoted text.;public QueryStringQueryBuilder quoteFieldSuffix(String quoteFieldSuffix) {_        this.quoteFieldSuffix = quoteFieldSuffix__        return this__    };an,optional,field,name,suffix,to,automatically,try,and,add,to,the,field,searched,when,using,quoted,text;public,query,string,query,builder,quote,field,suffix,string,quote,field,suffix,this,quote,field,suffix,quote,field,suffix,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder quoteFieldSuffix(String quoteFieldSuffix);1542792548;An optional field name suffix to automatically try and add to the field searched when using quoted text.;public QueryStringQueryBuilder quoteFieldSuffix(String quoteFieldSuffix) {_        this.quoteFieldSuffix = quoteFieldSuffix__        return this__    };an,optional,field,name,suffix,to,automatically,try,and,add,to,the,field,searched,when,using,quoted,text;public,query,string,query,builder,quote,field,suffix,string,quote,field,suffix,this,quote,field,suffix,quote,field,suffix,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder quoteFieldSuffix(String quoteFieldSuffix);1543399743;An optional field name suffix to automatically try and add to the field searched when using quoted text.;public QueryStringQueryBuilder quoteFieldSuffix(String quoteFieldSuffix) {_        this.quoteFieldSuffix = quoteFieldSuffix__        return this__    };an,optional,field,name,suffix,to,automatically,try,and,add,to,the,field,searched,when,using,quoted,text;public,query,string,query,builder,quote,field,suffix,string,quote,field,suffix,this,quote,field,suffix,quote,field,suffix,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder quoteFieldSuffix(String quoteFieldSuffix);1548236405;An optional field name suffix to automatically try and add to the field searched when using quoted text.;public QueryStringQueryBuilder quoteFieldSuffix(String quoteFieldSuffix) {_        this.quoteFieldSuffix = quoteFieldSuffix__        return this__    };an,optional,field,name,suffix,to,automatically,try,and,add,to,the,field,searched,when,using,quoted,text;public,query,string,query,builder,quote,field,suffix,string,quote,field,suffix,this,quote,field,suffix,quote,field,suffix,return,this
QueryStringQueryBuilder -> public QueryStringQueryBuilder quoteFieldSuffix(String quoteFieldSuffix);1549017700;An optional field name suffix to automatically try and add to the field searched when using quoted text.;public QueryStringQueryBuilder quoteFieldSuffix(String quoteFieldSuffix) {_        this.quoteFieldSuffix = quoteFieldSuffix__        return this__    };an,optional,field,name,suffix,to,automatically,try,and,add,to,the,field,searched,when,using,quoted,text;public,query,string,query,builder,quote,field,suffix,string,quote,field,suffix,this,quote,field,suffix,quote,field,suffix,return,this
QueryStringQueryBuilder -> public void type(MultiMatchQueryBuilder.Type type);1524684173;@param type Sets how multiple fields should be combined to build textual part queries.;public void type(MultiMatchQueryBuilder.Type type) {_        this.type = type__    };param,type,sets,how,multiple,fields,should,be,combined,to,build,textual,part,queries;public,void,type,multi,match,query,builder,type,type,this,type,type
QueryStringQueryBuilder -> public void type(MultiMatchQueryBuilder.Type type);1525334055;@param type Sets how multiple fields should be combined to build textual part queries.;public void type(MultiMatchQueryBuilder.Type type) {_        this.type = type__    };param,type,sets,how,multiple,fields,should,be,combined,to,build,textual,part,queries;public,void,type,multi,match,query,builder,type,type,this,type,type
