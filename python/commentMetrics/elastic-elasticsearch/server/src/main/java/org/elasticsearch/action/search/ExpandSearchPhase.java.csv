commented;modifiers;parameterAmount;loc;comment;code
true;private;0;6;/**  * Returns <code>true</code> iff the search request has inner hits and needs field collapsing  */ ;/**  * Returns <code>true</code> iff the search request has inner hits and needs field collapsing  */ private boolean isCollapseRequest() {     final SearchRequest searchRequest = context.getRequest().     return searchRequest.source() != null && searchRequest.source().collapse() != null && searchRequest.source().collapse().getInnerHits().isEmpty() == false. }
false;public;0;56;;@Override public void run() throws IOException {     if (isCollapseRequest() && searchResponse.hits().getHits().length > 0) {         SearchRequest searchRequest = context.getRequest().         CollapseBuilder collapseBuilder = searchRequest.source().collapse().         final List<InnerHitBuilder> innerHitBuilders = collapseBuilder.getInnerHits().         MultiSearchRequest multiRequest = new MultiSearchRequest().         if (collapseBuilder.getMaxConcurrentGroupRequests() > 0) {             multiRequest.maxConcurrentSearchRequests(collapseBuilder.getMaxConcurrentGroupRequests()).         }         for (SearchHit hit : searchResponse.hits().getHits()) {             BoolQueryBuilder groupQuery = new BoolQueryBuilder().             Object collapseValue = hit.field(collapseBuilder.getField()).getValue().             if (collapseValue != null) {                 groupQuery.filter(QueryBuilders.matchQuery(collapseBuilder.getField(), collapseValue)).             } else {                 groupQuery.mustNot(QueryBuilders.existsQuery(collapseBuilder.getField())).             }             QueryBuilder origQuery = searchRequest.source().query().             if (origQuery != null) {                 groupQuery.must(origQuery).             }             for (InnerHitBuilder innerHitBuilder : innerHitBuilders) {                 CollapseBuilder innerCollapseBuilder = innerHitBuilder.getInnerCollapseBuilder().                 SearchSourceBuilder sourceBuilder = buildExpandSearchSourceBuilder(innerHitBuilder, innerCollapseBuilder).query(groupQuery).postFilter(searchRequest.source().postFilter()).                 SearchRequest groupRequest = new SearchRequest(searchRequest).                 groupRequest.source(sourceBuilder).                 multiRequest.add(groupRequest).             }         }         context.getSearchTransport().sendExecuteMultiSearch(multiRequest, context.getTask(), ActionListener.wrap(response -> {             Iterator<MultiSearchResponse.Item> it = response.iterator().             for (SearchHit hit : searchResponse.hits.getHits()) {                 for (InnerHitBuilder innerHitBuilder : innerHitBuilders) {                     MultiSearchResponse.Item item = it.next().                     if (item.isFailure()) {                         context.onPhaseFailure(this, "failed to expand hits", item.getFailure()).                         return.                     }                     SearchHits innerHits = item.getResponse().getHits().                     if (hit.getInnerHits() == null) {                         hit.setInnerHits(new HashMap<>(innerHitBuilders.size())).                     }                     hit.getInnerHits().put(innerHitBuilder.getName(), innerHits).                 }             }             context.executeNextPhase(this, nextPhaseFactory.apply(searchResponse)).         }, context::onFailure)).     } else {         context.executeNextPhase(this, nextPhaseFactory.apply(searchResponse)).     } }
false;private;2;39;;private SearchSourceBuilder buildExpandSearchSourceBuilder(InnerHitBuilder options, CollapseBuilder innerCollapseBuilder) {     SearchSourceBuilder groupSource = new SearchSourceBuilder().     groupSource.from(options.getFrom()).     groupSource.size(options.getSize()).     if (options.getSorts() != null) {         options.getSorts().forEach(groupSource::sort).     }     if (options.getFetchSourceContext() != null) {         if (options.getFetchSourceContext().includes().length == 0 && options.getFetchSourceContext().excludes().length == 0) {             groupSource.fetchSource(options.getFetchSourceContext().fetchSource()).         } else {             groupSource.fetchSource(options.getFetchSourceContext().includes(), options.getFetchSourceContext().excludes()).         }     }     if (options.getDocValueFields() != null) {         options.getDocValueFields().forEach(ff -> groupSource.docValueField(ff.field, ff.format)).     }     if (options.getStoredFieldsContext() != null && options.getStoredFieldsContext().fieldNames() != null) {         options.getStoredFieldsContext().fieldNames().forEach(groupSource::storedField).     }     if (options.getScriptFields() != null) {         for (SearchSourceBuilder.ScriptField field : options.getScriptFields()) {             groupSource.scriptField(field.fieldName(), field.script()).         }     }     if (options.getHighlightBuilder() != null) {         groupSource.highlighter(options.getHighlightBuilder()).     }     groupSource.explain(options.isExplain()).     groupSource.trackScores(options.isTrackScores()).     groupSource.version(options.isVersion()).     groupSource.seqNoAndPrimaryTerm(options.isSeqNoAndPrimaryTerm()).     if (innerCollapseBuilder != null) {         groupSource.collapse(innerCollapseBuilder).     }     return groupSource. }
