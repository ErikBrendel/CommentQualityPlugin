# id;timestamp;commentText;codeText;commentWords;codeWords
QueryStringQueryParser -> private PhraseQuery addSlopToPhrase(PhraseQuery query, int slop);1524684173;Rebuild a phrase query with a slop value;private PhraseQuery addSlopToPhrase(PhraseQuery query, int slop) {_        PhraseQuery.Builder builder = new PhraseQuery.Builder()__        builder.setSlop(slop)__        final Term[] terms = query.getTerms()__        final int[] positions = query.getPositions()__        for (int i = 0_ i < terms.length_ ++i) {_            builder.add(terms[i], positions[i])__        }__        return builder.build()__    };rebuild,a,phrase,query,with,a,slop,value;private,phrase,query,add,slop,to,phrase,phrase,query,query,int,slop,phrase,query,builder,builder,new,phrase,query,builder,builder,set,slop,slop,final,term,terms,query,get,terms,final,int,positions,query,get,positions,for,int,i,0,i,terms,length,i,builder,add,terms,i,positions,i,return,builder,build
QueryStringQueryParser -> private PhraseQuery addSlopToPhrase(PhraseQuery query, int slop);1527840262;Rebuild a phrase query with a slop value;private PhraseQuery addSlopToPhrase(PhraseQuery query, int slop) {_        PhraseQuery.Builder builder = new PhraseQuery.Builder()__        builder.setSlop(slop)__        final Term[] terms = query.getTerms()__        final int[] positions = query.getPositions()__        for (int i = 0_ i < terms.length_ ++i) {_            builder.add(terms[i], positions[i])__        }__        return builder.build()__    };rebuild,a,phrase,query,with,a,slop,value;private,phrase,query,add,slop,to,phrase,phrase,query,query,int,slop,phrase,query,builder,builder,new,phrase,query,builder,builder,set,slop,slop,final,term,terms,query,get,terms,final,int,positions,query,get,positions,for,int,i,0,i,terms,length,i,builder,add,terms,i,positions,i,return,builder,build
QueryStringQueryParser -> private PhraseQuery addSlopToPhrase(PhraseQuery query, int slop);1528706846;Rebuild a phrase query with a slop value;private PhraseQuery addSlopToPhrase(PhraseQuery query, int slop) {_        PhraseQuery.Builder builder = new PhraseQuery.Builder()__        builder.setSlop(slop)__        final Term[] terms = query.getTerms()__        final int[] positions = query.getPositions()__        for (int i = 0_ i < terms.length_ ++i) {_            builder.add(terms[i], positions[i])__        }__        return builder.build()__    };rebuild,a,phrase,query,with,a,slop,value;private,phrase,query,add,slop,to,phrase,phrase,query,query,int,slop,phrase,query,builder,builder,new,phrase,query,builder,builder,set,slop,slop,final,term,terms,query,get,terms,final,int,positions,query,get,positions,for,int,i,0,i,terms,length,i,builder,add,terms,i,positions,i,return,builder,build
QueryStringQueryParser -> private PhraseQuery addSlopToPhrase(PhraseQuery query, int slop);1535046779;Rebuild a phrase query with a slop value;private PhraseQuery addSlopToPhrase(PhraseQuery query, int slop) {_        PhraseQuery.Builder builder = new PhraseQuery.Builder()__        builder.setSlop(slop)__        final Term[] terms = query.getTerms()__        final int[] positions = query.getPositions()__        for (int i = 0_ i < terms.length_ ++i) {_            builder.add(terms[i], positions[i])__        }__        return builder.build()__    };rebuild,a,phrase,query,with,a,slop,value;private,phrase,query,add,slop,to,phrase,phrase,query,query,int,slop,phrase,query,builder,builder,new,phrase,query,builder,builder,set,slop,slop,final,term,terms,query,get,terms,final,int,positions,query,get,positions,for,int,i,0,i,terms,length,i,builder,add,terms,i,positions,i,return,builder,build
QueryStringQueryParser -> private PhraseQuery addSlopToPhrase(PhraseQuery query, int slop);1542355687;Rebuild a phrase query with a slop value;private PhraseQuery addSlopToPhrase(PhraseQuery query, int slop) {_        PhraseQuery.Builder builder = new PhraseQuery.Builder()__        builder.setSlop(slop)__        final Term[] terms = query.getTerms()__        final int[] positions = query.getPositions()__        for (int i = 0_ i < terms.length_ ++i) {_            builder.add(terms[i], positions[i])__        }__        return builder.build()__    };rebuild,a,phrase,query,with,a,slop,value;private,phrase,query,add,slop,to,phrase,phrase,query,query,int,slop,phrase,query,builder,builder,new,phrase,query,builder,builder,set,slop,slop,final,term,terms,query,get,terms,final,int,positions,query,get,positions,for,int,i,0,i,terms,length,i,builder,add,terms,i,positions,i,return,builder,build
QueryStringQueryParser -> private PhraseQuery addSlopToPhrase(PhraseQuery query, int slop);1542962543;Rebuild a phrase query with a slop value;private PhraseQuery addSlopToPhrase(PhraseQuery query, int slop) {_        PhraseQuery.Builder builder = new PhraseQuery.Builder()__        builder.setSlop(slop)__        final Term[] terms = query.getTerms()__        final int[] positions = query.getPositions()__        for (int i = 0_ i < terms.length_ ++i) {_            builder.add(terms[i], positions[i])__        }__        return builder.build()__    };rebuild,a,phrase,query,with,a,slop,value;private,phrase,query,add,slop,to,phrase,phrase,query,query,int,slop,phrase,query,builder,builder,new,phrase,query,builder,builder,set,slop,slop,final,term,terms,query,get,terms,final,int,positions,query,get,positions,for,int,i,0,i,terms,length,i,builder,add,terms,i,positions,i,return,builder,build
QueryStringQueryParser -> private PhraseQuery addSlopToPhrase(PhraseQuery query, int slop);1546459944;Rebuild a phrase query with a slop value;private PhraseQuery addSlopToPhrase(PhraseQuery query, int slop) {_        PhraseQuery.Builder builder = new PhraseQuery.Builder()__        builder.setSlop(slop)__        final Term[] terms = query.getTerms()__        final int[] positions = query.getPositions()__        for (int i = 0_ i < terms.length_ ++i) {_            builder.add(terms[i], positions[i])__        }__        return builder.build()__    };rebuild,a,phrase,query,with,a,slop,value;private,phrase,query,add,slop,to,phrase,phrase,query,query,int,slop,phrase,query,builder,builder,new,phrase,query,builder,builder,set,slop,slop,final,term,terms,query,get,terms,final,int,positions,query,get,positions,for,int,i,0,i,terms,length,i,builder,add,terms,i,positions,i,return,builder,build
QueryStringQueryParser -> private PhraseQuery addSlopToPhrase(PhraseQuery query, int slop);1548236405;Rebuild a phrase query with a slop value;private PhraseQuery addSlopToPhrase(PhraseQuery query, int slop) {_        PhraseQuery.Builder builder = new PhraseQuery.Builder()__        builder.setSlop(slop)__        final Term[] terms = query.getTerms()__        final int[] positions = query.getPositions()__        for (int i = 0_ i < terms.length_ ++i) {_            builder.add(terms[i], positions[i])__        }__        return builder.build()__    };rebuild,a,phrase,query,with,a,slop,value;private,phrase,query,add,slop,to,phrase,phrase,query,query,int,slop,phrase,query,builder,builder,new,phrase,query,builder,builder,set,slop,slop,final,term,terms,query,get,terms,final,int,positions,query,get,positions,for,int,i,0,i,terms,length,i,builder,add,terms,i,positions,i,return,builder,build
QueryStringQueryParser -> public void setAnalyzeWildcard(boolean analyzeWildcard);1524684173;@param analyzeWildcard If true, the wildcard operator analyzes the term to build a wildcard query._Otherwise the query terms are only normalized.;public void setAnalyzeWildcard(boolean analyzeWildcard) {_        this.analyzeWildcard = analyzeWildcard__    };param,analyze,wildcard,if,true,the,wildcard,operator,analyzes,the,term,to,build,a,wildcard,query,otherwise,the,query,terms,are,only,normalized;public,void,set,analyze,wildcard,boolean,analyze,wildcard,this,analyze,wildcard,analyze,wildcard
QueryStringQueryParser -> public void setAnalyzeWildcard(boolean analyzeWildcard);1527840262;@param analyzeWildcard If true, the wildcard operator analyzes the term to build a wildcard query._Otherwise the query terms are only normalized.;public void setAnalyzeWildcard(boolean analyzeWildcard) {_        this.analyzeWildcard = analyzeWildcard__    };param,analyze,wildcard,if,true,the,wildcard,operator,analyzes,the,term,to,build,a,wildcard,query,otherwise,the,query,terms,are,only,normalized;public,void,set,analyze,wildcard,boolean,analyze,wildcard,this,analyze,wildcard,analyze,wildcard
QueryStringQueryParser -> public void setAnalyzeWildcard(boolean analyzeWildcard);1528706846;@param analyzeWildcard If true, the wildcard operator analyzes the term to build a wildcard query._Otherwise the query terms are only normalized.;public void setAnalyzeWildcard(boolean analyzeWildcard) {_        this.analyzeWildcard = analyzeWildcard__    };param,analyze,wildcard,if,true,the,wildcard,operator,analyzes,the,term,to,build,a,wildcard,query,otherwise,the,query,terms,are,only,normalized;public,void,set,analyze,wildcard,boolean,analyze,wildcard,this,analyze,wildcard,analyze,wildcard
QueryStringQueryParser -> public void setAnalyzeWildcard(boolean analyzeWildcard);1535046779;@param analyzeWildcard If true, the wildcard operator analyzes the term to build a wildcard query._Otherwise the query terms are only normalized.;public void setAnalyzeWildcard(boolean analyzeWildcard) {_        this.analyzeWildcard = analyzeWildcard__    };param,analyze,wildcard,if,true,the,wildcard,operator,analyzes,the,term,to,build,a,wildcard,query,otherwise,the,query,terms,are,only,normalized;public,void,set,analyze,wildcard,boolean,analyze,wildcard,this,analyze,wildcard,analyze,wildcard
QueryStringQueryParser -> public void setAnalyzeWildcard(boolean analyzeWildcard);1542355687;@param analyzeWildcard If true, the wildcard operator analyzes the term to build a wildcard query._Otherwise the query terms are only normalized.;public void setAnalyzeWildcard(boolean analyzeWildcard) {_        this.analyzeWildcard = analyzeWildcard__    };param,analyze,wildcard,if,true,the,wildcard,operator,analyzes,the,term,to,build,a,wildcard,query,otherwise,the,query,terms,are,only,normalized;public,void,set,analyze,wildcard,boolean,analyze,wildcard,this,analyze,wildcard,analyze,wildcard
QueryStringQueryParser -> public void setAnalyzeWildcard(boolean analyzeWildcard);1542962543;@param analyzeWildcard If true, the wildcard operator analyzes the term to build a wildcard query._Otherwise the query terms are only normalized.;public void setAnalyzeWildcard(boolean analyzeWildcard) {_        this.analyzeWildcard = analyzeWildcard__    };param,analyze,wildcard,if,true,the,wildcard,operator,analyzes,the,term,to,build,a,wildcard,query,otherwise,the,query,terms,are,only,normalized;public,void,set,analyze,wildcard,boolean,analyze,wildcard,this,analyze,wildcard,analyze,wildcard
QueryStringQueryParser -> public void setAnalyzeWildcard(boolean analyzeWildcard);1546459944;@param analyzeWildcard If true, the wildcard operator analyzes the term to build a wildcard query._Otherwise the query terms are only normalized.;public void setAnalyzeWildcard(boolean analyzeWildcard) {_        this.analyzeWildcard = analyzeWildcard__    };param,analyze,wildcard,if,true,the,wildcard,operator,analyzes,the,term,to,build,a,wildcard,query,otherwise,the,query,terms,are,only,normalized;public,void,set,analyze,wildcard,boolean,analyze,wildcard,this,analyze,wildcard,analyze,wildcard
QueryStringQueryParser -> public void setAnalyzeWildcard(boolean analyzeWildcard);1548236405;@param analyzeWildcard If true, the wildcard operator analyzes the term to build a wildcard query._Otherwise the query terms are only normalized.;public void setAnalyzeWildcard(boolean analyzeWildcard) {_        this.analyzeWildcard = analyzeWildcard__    };param,analyze,wildcard,if,true,the,wildcard,operator,analyzes,the,term,to,build,a,wildcard,query,otherwise,the,query,terms,are,only,normalized;public,void,set,analyze,wildcard,boolean,analyze,wildcard,this,analyze,wildcard,analyze,wildcard
QueryStringQueryParser -> public QueryStringQueryParser(QueryShardContext context, Map<String, Float> fieldsAndWeights);1524684173;@param context The query shard context_@param fieldsAndWeights The default fields and weights expansion for query terms;public QueryStringQueryParser(QueryShardContext context, Map<String, Float> fieldsAndWeights) {_        this(context, null, fieldsAndWeights, false, context.getMapperService().searchAnalyzer())__    };param,context,the,query,shard,context,param,fields,and,weights,the,default,fields,and,weights,expansion,for,query,terms;public,query,string,query,parser,query,shard,context,context,map,string,float,fields,and,weights,this,context,null,fields,and,weights,false,context,get,mapper,service,search,analyzer
QueryStringQueryParser -> public QueryStringQueryParser(QueryShardContext context, Map<String, Float> fieldsAndWeights);1527840262;@param context The query shard context_@param fieldsAndWeights The default fields and weights expansion for query terms;public QueryStringQueryParser(QueryShardContext context, Map<String, Float> fieldsAndWeights) {_        this(context, null, fieldsAndWeights, false, context.getMapperService().searchAnalyzer())__    };param,context,the,query,shard,context,param,fields,and,weights,the,default,fields,and,weights,expansion,for,query,terms;public,query,string,query,parser,query,shard,context,context,map,string,float,fields,and,weights,this,context,null,fields,and,weights,false,context,get,mapper,service,search,analyzer
QueryStringQueryParser -> public QueryStringQueryParser(QueryShardContext context, Map<String, Float> fieldsAndWeights);1528706846;@param context The query shard context_@param fieldsAndWeights The default fields and weights expansion for query terms;public QueryStringQueryParser(QueryShardContext context, Map<String, Float> fieldsAndWeights) {_        this(context, null, fieldsAndWeights, false, context.getMapperService().searchAnalyzer())__    };param,context,the,query,shard,context,param,fields,and,weights,the,default,fields,and,weights,expansion,for,query,terms;public,query,string,query,parser,query,shard,context,context,map,string,float,fields,and,weights,this,context,null,fields,and,weights,false,context,get,mapper,service,search,analyzer
QueryStringQueryParser -> public QueryStringQueryParser(QueryShardContext context, Map<String, Float> fieldsAndWeights);1535046779;@param context The query shard context_@param fieldsAndWeights The default fields and weights expansion for query terms;public QueryStringQueryParser(QueryShardContext context, Map<String, Float> fieldsAndWeights) {_        this(context, null, fieldsAndWeights, false, context.getMapperService().searchAnalyzer())__    };param,context,the,query,shard,context,param,fields,and,weights,the,default,fields,and,weights,expansion,for,query,terms;public,query,string,query,parser,query,shard,context,context,map,string,float,fields,and,weights,this,context,null,fields,and,weights,false,context,get,mapper,service,search,analyzer
QueryStringQueryParser -> public QueryStringQueryParser(QueryShardContext context, Map<String, Float> fieldsAndWeights);1542355687;@param context The query shard context_@param fieldsAndWeights The default fields and weights expansion for query terms;public QueryStringQueryParser(QueryShardContext context, Map<String, Float> fieldsAndWeights) {_        this(context, null, fieldsAndWeights, false, context.getMapperService().searchAnalyzer())__    };param,context,the,query,shard,context,param,fields,and,weights,the,default,fields,and,weights,expansion,for,query,terms;public,query,string,query,parser,query,shard,context,context,map,string,float,fields,and,weights,this,context,null,fields,and,weights,false,context,get,mapper,service,search,analyzer
QueryStringQueryParser -> public QueryStringQueryParser(QueryShardContext context, Map<String, Float> fieldsAndWeights);1542962543;@param context The query shard context_@param fieldsAndWeights The default fields and weights expansion for query terms;public QueryStringQueryParser(QueryShardContext context, Map<String, Float> fieldsAndWeights) {_        this(context, null, fieldsAndWeights, false, context.getMapperService().searchAnalyzer())__    };param,context,the,query,shard,context,param,fields,and,weights,the,default,fields,and,weights,expansion,for,query,terms;public,query,string,query,parser,query,shard,context,context,map,string,float,fields,and,weights,this,context,null,fields,and,weights,false,context,get,mapper,service,search,analyzer
QueryStringQueryParser -> public QueryStringQueryParser(QueryShardContext context, Map<String, Float> fieldsAndWeights);1546459944;@param context The query shard context_@param fieldsAndWeights The default fields and weights expansion for query terms;public QueryStringQueryParser(QueryShardContext context, Map<String, Float> fieldsAndWeights) {_        this(context, null, fieldsAndWeights, false, context.getMapperService().searchAnalyzer())__    };param,context,the,query,shard,context,param,fields,and,weights,the,default,fields,and,weights,expansion,for,query,terms;public,query,string,query,parser,query,shard,context,context,map,string,float,fields,and,weights,this,context,null,fields,and,weights,false,context,get,mapper,service,search,analyzer
QueryStringQueryParser -> public QueryStringQueryParser(QueryShardContext context, Map<String, Float> fieldsAndWeights);1548236405;@param context The query shard context_@param fieldsAndWeights The default fields and weights expansion for query terms;public QueryStringQueryParser(QueryShardContext context, Map<String, Float> fieldsAndWeights) {_        this(context, null, fieldsAndWeights, false, context.getMapperService().searchAnalyzer())__    };param,context,the,query,shard,context,param,fields,and,weights,the,default,fields,and,weights,expansion,for,query,terms;public,query,string,query,parser,query,shard,context,context,map,string,float,fields,and,weights,this,context,null,fields,and,weights,false,context,get,mapper,service,search,analyzer
QueryStringQueryParser -> public QueryStringQueryParser(QueryShardContext context, Map<String, Float> fieldsAndWeights, boolean lenient);1524684173;@param context The query shard context._@param fieldsAndWeights The default fields and weights expansion for query terms._@param lenient If set to `true` will cause format based failures (like providing text to a numeric field) to be ignored.;public QueryStringQueryParser(QueryShardContext context, Map<String, Float> fieldsAndWeights, boolean lenient) {_        this(context, null, fieldsAndWeights, lenient, context.getMapperService().searchAnalyzer())__    };param,context,the,query,shard,context,param,fields,and,weights,the,default,fields,and,weights,expansion,for,query,terms,param,lenient,if,set,to,true,will,cause,format,based,failures,like,providing,text,to,a,numeric,field,to,be,ignored;public,query,string,query,parser,query,shard,context,context,map,string,float,fields,and,weights,boolean,lenient,this,context,null,fields,and,weights,lenient,context,get,mapper,service,search,analyzer
QueryStringQueryParser -> public QueryStringQueryParser(QueryShardContext context, Map<String, Float> fieldsAndWeights, boolean lenient);1527840262;@param context The query shard context._@param fieldsAndWeights The default fields and weights expansion for query terms._@param lenient If set to `true` will cause format based failures (like providing text to a numeric field) to be ignored.;public QueryStringQueryParser(QueryShardContext context, Map<String, Float> fieldsAndWeights, boolean lenient) {_        this(context, null, fieldsAndWeights, lenient, context.getMapperService().searchAnalyzer())__    };param,context,the,query,shard,context,param,fields,and,weights,the,default,fields,and,weights,expansion,for,query,terms,param,lenient,if,set,to,true,will,cause,format,based,failures,like,providing,text,to,a,numeric,field,to,be,ignored;public,query,string,query,parser,query,shard,context,context,map,string,float,fields,and,weights,boolean,lenient,this,context,null,fields,and,weights,lenient,context,get,mapper,service,search,analyzer
QueryStringQueryParser -> public QueryStringQueryParser(QueryShardContext context, Map<String, Float> fieldsAndWeights, boolean lenient);1528706846;@param context The query shard context._@param fieldsAndWeights The default fields and weights expansion for query terms._@param lenient If set to `true` will cause format based failures (like providing text to a numeric field) to be ignored.;public QueryStringQueryParser(QueryShardContext context, Map<String, Float> fieldsAndWeights, boolean lenient) {_        this(context, null, fieldsAndWeights, lenient, context.getMapperService().searchAnalyzer())__    };param,context,the,query,shard,context,param,fields,and,weights,the,default,fields,and,weights,expansion,for,query,terms,param,lenient,if,set,to,true,will,cause,format,based,failures,like,providing,text,to,a,numeric,field,to,be,ignored;public,query,string,query,parser,query,shard,context,context,map,string,float,fields,and,weights,boolean,lenient,this,context,null,fields,and,weights,lenient,context,get,mapper,service,search,analyzer
QueryStringQueryParser -> public QueryStringQueryParser(QueryShardContext context, Map<String, Float> fieldsAndWeights, boolean lenient);1535046779;@param context The query shard context._@param fieldsAndWeights The default fields and weights expansion for query terms._@param lenient If set to `true` will cause format based failures (like providing text to a numeric field) to be ignored.;public QueryStringQueryParser(QueryShardContext context, Map<String, Float> fieldsAndWeights, boolean lenient) {_        this(context, null, fieldsAndWeights, lenient, context.getMapperService().searchAnalyzer())__    };param,context,the,query,shard,context,param,fields,and,weights,the,default,fields,and,weights,expansion,for,query,terms,param,lenient,if,set,to,true,will,cause,format,based,failures,like,providing,text,to,a,numeric,field,to,be,ignored;public,query,string,query,parser,query,shard,context,context,map,string,float,fields,and,weights,boolean,lenient,this,context,null,fields,and,weights,lenient,context,get,mapper,service,search,analyzer
QueryStringQueryParser -> public QueryStringQueryParser(QueryShardContext context, Map<String, Float> fieldsAndWeights, boolean lenient);1542355687;@param context The query shard context._@param fieldsAndWeights The default fields and weights expansion for query terms._@param lenient If set to `true` will cause format based failures (like providing text to a numeric field) to be ignored.;public QueryStringQueryParser(QueryShardContext context, Map<String, Float> fieldsAndWeights, boolean lenient) {_        this(context, null, fieldsAndWeights, lenient, context.getMapperService().searchAnalyzer())__    };param,context,the,query,shard,context,param,fields,and,weights,the,default,fields,and,weights,expansion,for,query,terms,param,lenient,if,set,to,true,will,cause,format,based,failures,like,providing,text,to,a,numeric,field,to,be,ignored;public,query,string,query,parser,query,shard,context,context,map,string,float,fields,and,weights,boolean,lenient,this,context,null,fields,and,weights,lenient,context,get,mapper,service,search,analyzer
QueryStringQueryParser -> public QueryStringQueryParser(QueryShardContext context, Map<String, Float> fieldsAndWeights, boolean lenient);1542962543;@param context The query shard context._@param fieldsAndWeights The default fields and weights expansion for query terms._@param lenient If set to `true` will cause format based failures (like providing text to a numeric field) to be ignored.;public QueryStringQueryParser(QueryShardContext context, Map<String, Float> fieldsAndWeights, boolean lenient) {_        this(context, null, fieldsAndWeights, lenient, context.getMapperService().searchAnalyzer())__    };param,context,the,query,shard,context,param,fields,and,weights,the,default,fields,and,weights,expansion,for,query,terms,param,lenient,if,set,to,true,will,cause,format,based,failures,like,providing,text,to,a,numeric,field,to,be,ignored;public,query,string,query,parser,query,shard,context,context,map,string,float,fields,and,weights,boolean,lenient,this,context,null,fields,and,weights,lenient,context,get,mapper,service,search,analyzer
QueryStringQueryParser -> public QueryStringQueryParser(QueryShardContext context, Map<String, Float> fieldsAndWeights, boolean lenient);1546459944;@param context The query shard context._@param fieldsAndWeights The default fields and weights expansion for query terms._@param lenient If set to `true` will cause format based failures (like providing text to a numeric field) to be ignored.;public QueryStringQueryParser(QueryShardContext context, Map<String, Float> fieldsAndWeights, boolean lenient) {_        this(context, null, fieldsAndWeights, lenient, context.getMapperService().searchAnalyzer())__    };param,context,the,query,shard,context,param,fields,and,weights,the,default,fields,and,weights,expansion,for,query,terms,param,lenient,if,set,to,true,will,cause,format,based,failures,like,providing,text,to,a,numeric,field,to,be,ignored;public,query,string,query,parser,query,shard,context,context,map,string,float,fields,and,weights,boolean,lenient,this,context,null,fields,and,weights,lenient,context,get,mapper,service,search,analyzer
QueryStringQueryParser -> public QueryStringQueryParser(QueryShardContext context, Map<String, Float> fieldsAndWeights, boolean lenient);1548236405;@param context The query shard context._@param fieldsAndWeights The default fields and weights expansion for query terms._@param lenient If set to `true` will cause format based failures (like providing text to a numeric field) to be ignored.;public QueryStringQueryParser(QueryShardContext context, Map<String, Float> fieldsAndWeights, boolean lenient) {_        this(context, null, fieldsAndWeights, lenient, context.getMapperService().searchAnalyzer())__    };param,context,the,query,shard,context,param,fields,and,weights,the,default,fields,and,weights,expansion,for,query,terms,param,lenient,if,set,to,true,will,cause,format,based,failures,like,providing,text,to,a,numeric,field,to,be,ignored;public,query,string,query,parser,query,shard,context,context,map,string,float,fields,and,weights,boolean,lenient,this,context,null,fields,and,weights,lenient,context,get,mapper,service,search,analyzer
QueryStringQueryParser -> public void setFuzzyTranspositions(boolean fuzzyTranspositions);1524684173;@param fuzzyTranspositions Sets whether transpositions are supported in fuzzy queries._Defaults to {@link FuzzyQuery#defaultTranspositions}.;public void setFuzzyTranspositions(boolean fuzzyTranspositions) {_        this.fuzzyTranspositions = fuzzyTranspositions__    };param,fuzzy,transpositions,sets,whether,transpositions,are,supported,in,fuzzy,queries,defaults,to,link,fuzzy,query,default,transpositions;public,void,set,fuzzy,transpositions,boolean,fuzzy,transpositions,this,fuzzy,transpositions,fuzzy,transpositions
QueryStringQueryParser -> public void setFuzzyTranspositions(boolean fuzzyTranspositions);1527840262;@param fuzzyTranspositions Sets whether transpositions are supported in fuzzy queries._Defaults to {@link FuzzyQuery#defaultTranspositions}.;public void setFuzzyTranspositions(boolean fuzzyTranspositions) {_        this.fuzzyTranspositions = fuzzyTranspositions__    };param,fuzzy,transpositions,sets,whether,transpositions,are,supported,in,fuzzy,queries,defaults,to,link,fuzzy,query,default,transpositions;public,void,set,fuzzy,transpositions,boolean,fuzzy,transpositions,this,fuzzy,transpositions,fuzzy,transpositions
QueryStringQueryParser -> public void setFuzzyTranspositions(boolean fuzzyTranspositions);1528706846;@param fuzzyTranspositions Sets whether transpositions are supported in fuzzy queries._Defaults to {@link FuzzyQuery#defaultTranspositions}.;public void setFuzzyTranspositions(boolean fuzzyTranspositions) {_        this.fuzzyTranspositions = fuzzyTranspositions__    };param,fuzzy,transpositions,sets,whether,transpositions,are,supported,in,fuzzy,queries,defaults,to,link,fuzzy,query,default,transpositions;public,void,set,fuzzy,transpositions,boolean,fuzzy,transpositions,this,fuzzy,transpositions,fuzzy,transpositions
QueryStringQueryParser -> public void setFuzzyTranspositions(boolean fuzzyTranspositions);1535046779;@param fuzzyTranspositions Sets whether transpositions are supported in fuzzy queries._Defaults to {@link FuzzyQuery#defaultTranspositions}.;public void setFuzzyTranspositions(boolean fuzzyTranspositions) {_        this.fuzzyTranspositions = fuzzyTranspositions__    };param,fuzzy,transpositions,sets,whether,transpositions,are,supported,in,fuzzy,queries,defaults,to,link,fuzzy,query,default,transpositions;public,void,set,fuzzy,transpositions,boolean,fuzzy,transpositions,this,fuzzy,transpositions,fuzzy,transpositions
QueryStringQueryParser -> public void setFuzzyTranspositions(boolean fuzzyTranspositions);1542355687;@param fuzzyTranspositions Sets whether transpositions are supported in fuzzy queries._Defaults to {@link FuzzyQuery#defaultTranspositions}.;public void setFuzzyTranspositions(boolean fuzzyTranspositions) {_        this.fuzzyTranspositions = fuzzyTranspositions__    };param,fuzzy,transpositions,sets,whether,transpositions,are,supported,in,fuzzy,queries,defaults,to,link,fuzzy,query,default,transpositions;public,void,set,fuzzy,transpositions,boolean,fuzzy,transpositions,this,fuzzy,transpositions,fuzzy,transpositions
QueryStringQueryParser -> public void setFuzzyTranspositions(boolean fuzzyTranspositions);1542962543;@param fuzzyTranspositions Sets whether transpositions are supported in fuzzy queries._Defaults to {@link FuzzyQuery#defaultTranspositions}.;public void setFuzzyTranspositions(boolean fuzzyTranspositions) {_        this.fuzzyTranspositions = fuzzyTranspositions__    };param,fuzzy,transpositions,sets,whether,transpositions,are,supported,in,fuzzy,queries,defaults,to,link,fuzzy,query,default,transpositions;public,void,set,fuzzy,transpositions,boolean,fuzzy,transpositions,this,fuzzy,transpositions,fuzzy,transpositions
QueryStringQueryParser -> public void setFuzzyTranspositions(boolean fuzzyTranspositions);1546459944;@param fuzzyTranspositions Sets whether transpositions are supported in fuzzy queries._Defaults to {@link FuzzyQuery#defaultTranspositions}.;public void setFuzzyTranspositions(boolean fuzzyTranspositions) {_        this.fuzzyTranspositions = fuzzyTranspositions__    };param,fuzzy,transpositions,sets,whether,transpositions,are,supported,in,fuzzy,queries,defaults,to,link,fuzzy,query,default,transpositions;public,void,set,fuzzy,transpositions,boolean,fuzzy,transpositions,this,fuzzy,transpositions,fuzzy,transpositions
QueryStringQueryParser -> public void setFuzzyTranspositions(boolean fuzzyTranspositions);1548236405;@param fuzzyTranspositions Sets whether transpositions are supported in fuzzy queries._Defaults to {@link FuzzyQuery#defaultTranspositions}.;public void setFuzzyTranspositions(boolean fuzzyTranspositions) {_        this.fuzzyTranspositions = fuzzyTranspositions__    };param,fuzzy,transpositions,sets,whether,transpositions,are,supported,in,fuzzy,queries,defaults,to,link,fuzzy,query,default,transpositions;public,void,set,fuzzy,transpositions,boolean,fuzzy,transpositions,this,fuzzy,transpositions,fuzzy,transpositions
QueryStringQueryParser -> public void setFuzzyMaxExpansions(int fuzzyMaxExpansions);1524684173;@param fuzzyMaxExpansions Sets the maximum number of expansions allowed in a fuzzy query._Defaults to {@link FuzzyQuery#defaultMaxExpansions}.;public void setFuzzyMaxExpansions(int fuzzyMaxExpansions) {_        this.fuzzyMaxExpansions = fuzzyMaxExpansions__    };param,fuzzy,max,expansions,sets,the,maximum,number,of,expansions,allowed,in,a,fuzzy,query,defaults,to,link,fuzzy,query,default,max,expansions;public,void,set,fuzzy,max,expansions,int,fuzzy,max,expansions,this,fuzzy,max,expansions,fuzzy,max,expansions
QueryStringQueryParser -> public void setFuzzyMaxExpansions(int fuzzyMaxExpansions);1527840262;@param fuzzyMaxExpansions Sets the maximum number of expansions allowed in a fuzzy query._Defaults to {@link FuzzyQuery#defaultMaxExpansions}.;public void setFuzzyMaxExpansions(int fuzzyMaxExpansions) {_        this.fuzzyMaxExpansions = fuzzyMaxExpansions__    };param,fuzzy,max,expansions,sets,the,maximum,number,of,expansions,allowed,in,a,fuzzy,query,defaults,to,link,fuzzy,query,default,max,expansions;public,void,set,fuzzy,max,expansions,int,fuzzy,max,expansions,this,fuzzy,max,expansions,fuzzy,max,expansions
QueryStringQueryParser -> public void setFuzzyMaxExpansions(int fuzzyMaxExpansions);1528706846;@param fuzzyMaxExpansions Sets the maximum number of expansions allowed in a fuzzy query._Defaults to {@link FuzzyQuery#defaultMaxExpansions}.;public void setFuzzyMaxExpansions(int fuzzyMaxExpansions) {_        this.fuzzyMaxExpansions = fuzzyMaxExpansions__    };param,fuzzy,max,expansions,sets,the,maximum,number,of,expansions,allowed,in,a,fuzzy,query,defaults,to,link,fuzzy,query,default,max,expansions;public,void,set,fuzzy,max,expansions,int,fuzzy,max,expansions,this,fuzzy,max,expansions,fuzzy,max,expansions
QueryStringQueryParser -> public void setFuzzyMaxExpansions(int fuzzyMaxExpansions);1535046779;@param fuzzyMaxExpansions Sets the maximum number of expansions allowed in a fuzzy query._Defaults to {@link FuzzyQuery#defaultMaxExpansions}.;public void setFuzzyMaxExpansions(int fuzzyMaxExpansions) {_        this.fuzzyMaxExpansions = fuzzyMaxExpansions__    };param,fuzzy,max,expansions,sets,the,maximum,number,of,expansions,allowed,in,a,fuzzy,query,defaults,to,link,fuzzy,query,default,max,expansions;public,void,set,fuzzy,max,expansions,int,fuzzy,max,expansions,this,fuzzy,max,expansions,fuzzy,max,expansions
QueryStringQueryParser -> public void setFuzzyMaxExpansions(int fuzzyMaxExpansions);1542355687;@param fuzzyMaxExpansions Sets the maximum number of expansions allowed in a fuzzy query._Defaults to {@link FuzzyQuery#defaultMaxExpansions}.;public void setFuzzyMaxExpansions(int fuzzyMaxExpansions) {_        this.fuzzyMaxExpansions = fuzzyMaxExpansions__    };param,fuzzy,max,expansions,sets,the,maximum,number,of,expansions,allowed,in,a,fuzzy,query,defaults,to,link,fuzzy,query,default,max,expansions;public,void,set,fuzzy,max,expansions,int,fuzzy,max,expansions,this,fuzzy,max,expansions,fuzzy,max,expansions
QueryStringQueryParser -> public void setFuzzyMaxExpansions(int fuzzyMaxExpansions);1542962543;@param fuzzyMaxExpansions Sets the maximum number of expansions allowed in a fuzzy query._Defaults to {@link FuzzyQuery#defaultMaxExpansions}.;public void setFuzzyMaxExpansions(int fuzzyMaxExpansions) {_        this.fuzzyMaxExpansions = fuzzyMaxExpansions__    };param,fuzzy,max,expansions,sets,the,maximum,number,of,expansions,allowed,in,a,fuzzy,query,defaults,to,link,fuzzy,query,default,max,expansions;public,void,set,fuzzy,max,expansions,int,fuzzy,max,expansions,this,fuzzy,max,expansions,fuzzy,max,expansions
QueryStringQueryParser -> public void setFuzzyMaxExpansions(int fuzzyMaxExpansions);1546459944;@param fuzzyMaxExpansions Sets the maximum number of expansions allowed in a fuzzy query._Defaults to {@link FuzzyQuery#defaultMaxExpansions}.;public void setFuzzyMaxExpansions(int fuzzyMaxExpansions) {_        this.fuzzyMaxExpansions = fuzzyMaxExpansions__    };param,fuzzy,max,expansions,sets,the,maximum,number,of,expansions,allowed,in,a,fuzzy,query,defaults,to,link,fuzzy,query,default,max,expansions;public,void,set,fuzzy,max,expansions,int,fuzzy,max,expansions,this,fuzzy,max,expansions,fuzzy,max,expansions
QueryStringQueryParser -> public void setFuzzyMaxExpansions(int fuzzyMaxExpansions);1548236405;@param fuzzyMaxExpansions Sets the maximum number of expansions allowed in a fuzzy query._Defaults to {@link FuzzyQuery#defaultMaxExpansions}.;public void setFuzzyMaxExpansions(int fuzzyMaxExpansions) {_        this.fuzzyMaxExpansions = fuzzyMaxExpansions__    };param,fuzzy,max,expansions,sets,the,maximum,number,of,expansions,allowed,in,a,fuzzy,query,defaults,to,link,fuzzy,query,default,max,expansions;public,void,set,fuzzy,max,expansions,int,fuzzy,max,expansions,this,fuzzy,max,expansions,fuzzy,max,expansions
QueryStringQueryParser -> public void setFuzzyRewriteMethod(MultiTermQuery.RewriteMethod fuzzyRewriteMethod);1524684173;@param fuzzyRewriteMethod Sets the default rewrite method for fuzzy query.;public void setFuzzyRewriteMethod(MultiTermQuery.RewriteMethod fuzzyRewriteMethod) {_        this.fuzzyRewriteMethod = fuzzyRewriteMethod__    };param,fuzzy,rewrite,method,sets,the,default,rewrite,method,for,fuzzy,query;public,void,set,fuzzy,rewrite,method,multi,term,query,rewrite,method,fuzzy,rewrite,method,this,fuzzy,rewrite,method,fuzzy,rewrite,method
QueryStringQueryParser -> public void setFuzzyRewriteMethod(MultiTermQuery.RewriteMethod fuzzyRewriteMethod);1527840262;@param fuzzyRewriteMethod Sets the default rewrite method for fuzzy query.;public void setFuzzyRewriteMethod(MultiTermQuery.RewriteMethod fuzzyRewriteMethod) {_        this.fuzzyRewriteMethod = fuzzyRewriteMethod__    };param,fuzzy,rewrite,method,sets,the,default,rewrite,method,for,fuzzy,query;public,void,set,fuzzy,rewrite,method,multi,term,query,rewrite,method,fuzzy,rewrite,method,this,fuzzy,rewrite,method,fuzzy,rewrite,method
QueryStringQueryParser -> public void setFuzzyRewriteMethod(MultiTermQuery.RewriteMethod fuzzyRewriteMethod);1528706846;@param fuzzyRewriteMethod Sets the default rewrite method for fuzzy query.;public void setFuzzyRewriteMethod(MultiTermQuery.RewriteMethod fuzzyRewriteMethod) {_        this.fuzzyRewriteMethod = fuzzyRewriteMethod__    };param,fuzzy,rewrite,method,sets,the,default,rewrite,method,for,fuzzy,query;public,void,set,fuzzy,rewrite,method,multi,term,query,rewrite,method,fuzzy,rewrite,method,this,fuzzy,rewrite,method,fuzzy,rewrite,method
QueryStringQueryParser -> public void setFuzzyRewriteMethod(MultiTermQuery.RewriteMethod fuzzyRewriteMethod);1535046779;@param fuzzyRewriteMethod Sets the default rewrite method for fuzzy query.;public void setFuzzyRewriteMethod(MultiTermQuery.RewriteMethod fuzzyRewriteMethod) {_        this.fuzzyRewriteMethod = fuzzyRewriteMethod__    };param,fuzzy,rewrite,method,sets,the,default,rewrite,method,for,fuzzy,query;public,void,set,fuzzy,rewrite,method,multi,term,query,rewrite,method,fuzzy,rewrite,method,this,fuzzy,rewrite,method,fuzzy,rewrite,method
QueryStringQueryParser -> public void setFuzzyRewriteMethod(MultiTermQuery.RewriteMethod fuzzyRewriteMethod);1542355687;@param fuzzyRewriteMethod Sets the default rewrite method for fuzzy query.;public void setFuzzyRewriteMethod(MultiTermQuery.RewriteMethod fuzzyRewriteMethod) {_        this.fuzzyRewriteMethod = fuzzyRewriteMethod__    };param,fuzzy,rewrite,method,sets,the,default,rewrite,method,for,fuzzy,query;public,void,set,fuzzy,rewrite,method,multi,term,query,rewrite,method,fuzzy,rewrite,method,this,fuzzy,rewrite,method,fuzzy,rewrite,method
QueryStringQueryParser -> public void setFuzzyRewriteMethod(MultiTermQuery.RewriteMethod fuzzyRewriteMethod);1542962543;@param fuzzyRewriteMethod Sets the default rewrite method for fuzzy query.;public void setFuzzyRewriteMethod(MultiTermQuery.RewriteMethod fuzzyRewriteMethod) {_        this.fuzzyRewriteMethod = fuzzyRewriteMethod__    };param,fuzzy,rewrite,method,sets,the,default,rewrite,method,for,fuzzy,query;public,void,set,fuzzy,rewrite,method,multi,term,query,rewrite,method,fuzzy,rewrite,method,this,fuzzy,rewrite,method,fuzzy,rewrite,method
QueryStringQueryParser -> public void setFuzzyRewriteMethod(MultiTermQuery.RewriteMethod fuzzyRewriteMethod);1546459944;@param fuzzyRewriteMethod Sets the default rewrite method for fuzzy query.;public void setFuzzyRewriteMethod(MultiTermQuery.RewriteMethod fuzzyRewriteMethod) {_        this.fuzzyRewriteMethod = fuzzyRewriteMethod__    };param,fuzzy,rewrite,method,sets,the,default,rewrite,method,for,fuzzy,query;public,void,set,fuzzy,rewrite,method,multi,term,query,rewrite,method,fuzzy,rewrite,method,this,fuzzy,rewrite,method,fuzzy,rewrite,method
QueryStringQueryParser -> public void setFuzzyRewriteMethod(MultiTermQuery.RewriteMethod fuzzyRewriteMethod);1548236405;@param fuzzyRewriteMethod Sets the default rewrite method for fuzzy query.;public void setFuzzyRewriteMethod(MultiTermQuery.RewriteMethod fuzzyRewriteMethod) {_        this.fuzzyRewriteMethod = fuzzyRewriteMethod__    };param,fuzzy,rewrite,method,sets,the,default,rewrite,method,for,fuzzy,query;public,void,set,fuzzy,rewrite,method,multi,term,query,rewrite,method,fuzzy,rewrite,method,this,fuzzy,rewrite,method,fuzzy,rewrite,method
QueryStringQueryParser -> public QueryStringQueryParser(QueryShardContext context, String defaultField, boolean lenient);1524684173;@param context The query shard context._@param defaultField The default field for query terms._@param lenient If set to `true` will cause format based failures (like providing text to a numeric field) to be ignored.;public QueryStringQueryParser(QueryShardContext context, String defaultField, boolean lenient) {_        this(context, defaultField, Collections.emptyMap(), lenient, context.getMapperService().searchAnalyzer())__    };param,context,the,query,shard,context,param,default,field,the,default,field,for,query,terms,param,lenient,if,set,to,true,will,cause,format,based,failures,like,providing,text,to,a,numeric,field,to,be,ignored;public,query,string,query,parser,query,shard,context,context,string,default,field,boolean,lenient,this,context,default,field,collections,empty,map,lenient,context,get,mapper,service,search,analyzer
QueryStringQueryParser -> public QueryStringQueryParser(QueryShardContext context, String defaultField, boolean lenient);1527840262;@param context The query shard context._@param defaultField The default field for query terms._@param lenient If set to `true` will cause format based failures (like providing text to a numeric field) to be ignored.;public QueryStringQueryParser(QueryShardContext context, String defaultField, boolean lenient) {_        this(context, defaultField, Collections.emptyMap(), lenient, context.getMapperService().searchAnalyzer())__    };param,context,the,query,shard,context,param,default,field,the,default,field,for,query,terms,param,lenient,if,set,to,true,will,cause,format,based,failures,like,providing,text,to,a,numeric,field,to,be,ignored;public,query,string,query,parser,query,shard,context,context,string,default,field,boolean,lenient,this,context,default,field,collections,empty,map,lenient,context,get,mapper,service,search,analyzer
QueryStringQueryParser -> public QueryStringQueryParser(QueryShardContext context, String defaultField, boolean lenient);1528706846;@param context The query shard context._@param defaultField The default field for query terms._@param lenient If set to `true` will cause format based failures (like providing text to a numeric field) to be ignored.;public QueryStringQueryParser(QueryShardContext context, String defaultField, boolean lenient) {_        this(context, defaultField, Collections.emptyMap(), lenient, context.getMapperService().searchAnalyzer())__    };param,context,the,query,shard,context,param,default,field,the,default,field,for,query,terms,param,lenient,if,set,to,true,will,cause,format,based,failures,like,providing,text,to,a,numeric,field,to,be,ignored;public,query,string,query,parser,query,shard,context,context,string,default,field,boolean,lenient,this,context,default,field,collections,empty,map,lenient,context,get,mapper,service,search,analyzer
QueryStringQueryParser -> public QueryStringQueryParser(QueryShardContext context, String defaultField, boolean lenient);1535046779;@param context The query shard context._@param defaultField The default field for query terms._@param lenient If set to `true` will cause format based failures (like providing text to a numeric field) to be ignored.;public QueryStringQueryParser(QueryShardContext context, String defaultField, boolean lenient) {_        this(context, defaultField, Collections.emptyMap(), lenient, context.getMapperService().searchAnalyzer())__    };param,context,the,query,shard,context,param,default,field,the,default,field,for,query,terms,param,lenient,if,set,to,true,will,cause,format,based,failures,like,providing,text,to,a,numeric,field,to,be,ignored;public,query,string,query,parser,query,shard,context,context,string,default,field,boolean,lenient,this,context,default,field,collections,empty,map,lenient,context,get,mapper,service,search,analyzer
QueryStringQueryParser -> public QueryStringQueryParser(QueryShardContext context, String defaultField, boolean lenient);1542355687;@param context The query shard context._@param defaultField The default field for query terms._@param lenient If set to `true` will cause format based failures (like providing text to a numeric field) to be ignored.;public QueryStringQueryParser(QueryShardContext context, String defaultField, boolean lenient) {_        this(context, defaultField, Collections.emptyMap(), lenient, context.getMapperService().searchAnalyzer())__    };param,context,the,query,shard,context,param,default,field,the,default,field,for,query,terms,param,lenient,if,set,to,true,will,cause,format,based,failures,like,providing,text,to,a,numeric,field,to,be,ignored;public,query,string,query,parser,query,shard,context,context,string,default,field,boolean,lenient,this,context,default,field,collections,empty,map,lenient,context,get,mapper,service,search,analyzer
QueryStringQueryParser -> public QueryStringQueryParser(QueryShardContext context, String defaultField, boolean lenient);1542962543;@param context The query shard context._@param defaultField The default field for query terms._@param lenient If set to `true` will cause format based failures (like providing text to a numeric field) to be ignored.;public QueryStringQueryParser(QueryShardContext context, String defaultField, boolean lenient) {_        this(context, defaultField, Collections.emptyMap(), lenient, context.getMapperService().searchAnalyzer())__    };param,context,the,query,shard,context,param,default,field,the,default,field,for,query,terms,param,lenient,if,set,to,true,will,cause,format,based,failures,like,providing,text,to,a,numeric,field,to,be,ignored;public,query,string,query,parser,query,shard,context,context,string,default,field,boolean,lenient,this,context,default,field,collections,empty,map,lenient,context,get,mapper,service,search,analyzer
QueryStringQueryParser -> public QueryStringQueryParser(QueryShardContext context, String defaultField, boolean lenient);1546459944;@param context The query shard context._@param defaultField The default field for query terms._@param lenient If set to `true` will cause format based failures (like providing text to a numeric field) to be ignored.;public QueryStringQueryParser(QueryShardContext context, String defaultField, boolean lenient) {_        this(context, defaultField, Collections.emptyMap(), lenient, context.getMapperService().searchAnalyzer())__    };param,context,the,query,shard,context,param,default,field,the,default,field,for,query,terms,param,lenient,if,set,to,true,will,cause,format,based,failures,like,providing,text,to,a,numeric,field,to,be,ignored;public,query,string,query,parser,query,shard,context,context,string,default,field,boolean,lenient,this,context,default,field,collections,empty,map,lenient,context,get,mapper,service,search,analyzer
QueryStringQueryParser -> public QueryStringQueryParser(QueryShardContext context, String defaultField, boolean lenient);1548236405;@param context The query shard context._@param defaultField The default field for query terms._@param lenient If set to `true` will cause format based failures (like providing text to a numeric field) to be ignored.;public QueryStringQueryParser(QueryShardContext context, String defaultField, boolean lenient) {_        this(context, defaultField, Collections.emptyMap(), lenient, context.getMapperService().searchAnalyzer())__    };param,context,the,query,shard,context,param,default,field,the,default,field,for,query,terms,param,lenient,if,set,to,true,will,cause,format,based,failures,like,providing,text,to,a,numeric,field,to,be,ignored;public,query,string,query,parser,query,shard,context,context,string,default,field,boolean,lenient,this,context,default,field,collections,empty,map,lenient,context,get,mapper,service,search,analyzer
QueryStringQueryParser -> public QueryStringQueryParser(QueryShardContext context, boolean lenient);1524684173;Defaults to all queryiable fields extracted from the mapping for query terms_@param context The query shard context_@param lenient If set to `true` will cause format based failures (like providing text to a numeric field) to be ignored.;public QueryStringQueryParser(QueryShardContext context, boolean lenient) {_        this(context, "*",_            resolveMappingField(context, "*", 1.0f, false, false),_            lenient, context.getMapperService().searchAnalyzer())__    };defaults,to,all,queryiable,fields,extracted,from,the,mapping,for,query,terms,param,context,the,query,shard,context,param,lenient,if,set,to,true,will,cause,format,based,failures,like,providing,text,to,a,numeric,field,to,be,ignored;public,query,string,query,parser,query,shard,context,context,boolean,lenient,this,context,resolve,mapping,field,context,1,0f,false,false,lenient,context,get,mapper,service,search,analyzer
QueryStringQueryParser -> public QueryStringQueryParser(QueryShardContext context, boolean lenient);1527840262;Defaults to all queryiable fields extracted from the mapping for query terms_@param context The query shard context_@param lenient If set to `true` will cause format based failures (like providing text to a numeric field) to be ignored.;public QueryStringQueryParser(QueryShardContext context, boolean lenient) {_        this(context, "*",_            resolveMappingField(context, "*", 1.0f, false, false),_            lenient, context.getMapperService().searchAnalyzer())__    };defaults,to,all,queryiable,fields,extracted,from,the,mapping,for,query,terms,param,context,the,query,shard,context,param,lenient,if,set,to,true,will,cause,format,based,failures,like,providing,text,to,a,numeric,field,to,be,ignored;public,query,string,query,parser,query,shard,context,context,boolean,lenient,this,context,resolve,mapping,field,context,1,0f,false,false,lenient,context,get,mapper,service,search,analyzer
QueryStringQueryParser -> public QueryStringQueryParser(QueryShardContext context, boolean lenient);1528706846;Defaults to all queryiable fields extracted from the mapping for query terms_@param context The query shard context_@param lenient If set to `true` will cause format based failures (like providing text to a numeric field) to be ignored.;public QueryStringQueryParser(QueryShardContext context, boolean lenient) {_        this(context, "*",_            resolveMappingField(context, "*", 1.0f, false, false),_            lenient, context.getMapperService().searchAnalyzer())__    };defaults,to,all,queryiable,fields,extracted,from,the,mapping,for,query,terms,param,context,the,query,shard,context,param,lenient,if,set,to,true,will,cause,format,based,failures,like,providing,text,to,a,numeric,field,to,be,ignored;public,query,string,query,parser,query,shard,context,context,boolean,lenient,this,context,resolve,mapping,field,context,1,0f,false,false,lenient,context,get,mapper,service,search,analyzer
QueryStringQueryParser -> public QueryStringQueryParser(QueryShardContext context, boolean lenient);1535046779;Defaults to all queryiable fields extracted from the mapping for query terms_@param context The query shard context_@param lenient If set to `true` will cause format based failures (like providing text to a numeric field) to be ignored.;public QueryStringQueryParser(QueryShardContext context, boolean lenient) {_        this(context, "*",_            resolveMappingField(context, "*", 1.0f, false, false),_            lenient, context.getMapperService().searchAnalyzer())__    };defaults,to,all,queryiable,fields,extracted,from,the,mapping,for,query,terms,param,context,the,query,shard,context,param,lenient,if,set,to,true,will,cause,format,based,failures,like,providing,text,to,a,numeric,field,to,be,ignored;public,query,string,query,parser,query,shard,context,context,boolean,lenient,this,context,resolve,mapping,field,context,1,0f,false,false,lenient,context,get,mapper,service,search,analyzer
QueryStringQueryParser -> public QueryStringQueryParser(QueryShardContext context, boolean lenient);1542355687;Defaults to all queryiable fields extracted from the mapping for query terms_@param context The query shard context_@param lenient If set to `true` will cause format based failures (like providing text to a numeric field) to be ignored.;public QueryStringQueryParser(QueryShardContext context, boolean lenient) {_        this(context, "*",_            resolveMappingField(context, "*", 1.0f, false, false),_            lenient, context.getMapperService().searchAnalyzer())__    };defaults,to,all,queryiable,fields,extracted,from,the,mapping,for,query,terms,param,context,the,query,shard,context,param,lenient,if,set,to,true,will,cause,format,based,failures,like,providing,text,to,a,numeric,field,to,be,ignored;public,query,string,query,parser,query,shard,context,context,boolean,lenient,this,context,resolve,mapping,field,context,1,0f,false,false,lenient,context,get,mapper,service,search,analyzer
QueryStringQueryParser -> public QueryStringQueryParser(QueryShardContext context, boolean lenient);1542962543;Defaults to all queryiable fields extracted from the mapping for query terms_@param context The query shard context_@param lenient If set to `true` will cause format based failures (like providing text to a numeric field) to be ignored.;public QueryStringQueryParser(QueryShardContext context, boolean lenient) {_        this(context, "*",_            resolveMappingField(context, "*", 1.0f, false, false),_            lenient, context.getMapperService().searchAnalyzer())__    };defaults,to,all,queryiable,fields,extracted,from,the,mapping,for,query,terms,param,context,the,query,shard,context,param,lenient,if,set,to,true,will,cause,format,based,failures,like,providing,text,to,a,numeric,field,to,be,ignored;public,query,string,query,parser,query,shard,context,context,boolean,lenient,this,context,resolve,mapping,field,context,1,0f,false,false,lenient,context,get,mapper,service,search,analyzer
QueryStringQueryParser -> public QueryStringQueryParser(QueryShardContext context, boolean lenient);1546459944;Defaults to all queryiable fields extracted from the mapping for query terms_@param context The query shard context_@param lenient If set to `true` will cause format based failures (like providing text to a numeric field) to be ignored.;public QueryStringQueryParser(QueryShardContext context, boolean lenient) {_        this(context, "*",_            resolveMappingField(context, "*", 1.0f, false, false),_            lenient, context.getMapperService().searchAnalyzer())__    };defaults,to,all,queryiable,fields,extracted,from,the,mapping,for,query,terms,param,context,the,query,shard,context,param,lenient,if,set,to,true,will,cause,format,based,failures,like,providing,text,to,a,numeric,field,to,be,ignored;public,query,string,query,parser,query,shard,context,context,boolean,lenient,this,context,resolve,mapping,field,context,1,0f,false,false,lenient,context,get,mapper,service,search,analyzer
QueryStringQueryParser -> public QueryStringQueryParser(QueryShardContext context, boolean lenient);1548236405;Defaults to all queryiable fields extracted from the mapping for query terms_@param context The query shard context_@param lenient If set to `true` will cause format based failures (like providing text to a numeric field) to be ignored.;public QueryStringQueryParser(QueryShardContext context, boolean lenient) {_        this(context, "*",_            resolveMappingField(context, "*", 1.0f, false, false),_            lenient, context.getMapperService().searchAnalyzer())__    };defaults,to,all,queryiable,fields,extracted,from,the,mapping,for,query,terms,param,context,the,query,shard,context,param,lenient,if,set,to,true,will,cause,format,based,failures,like,providing,text,to,a,numeric,field,to,be,ignored;public,query,string,query,parser,query,shard,context,context,boolean,lenient,this,context,resolve,mapping,field,context,1,0f,false,false,lenient,context,get,mapper,service,search,analyzer
QueryStringQueryParser -> public void setType(MultiMatchQueryBuilder.Type type);1524684173;@param type Sets how multiple fields should be combined to build textual part queries.;public void setType(MultiMatchQueryBuilder.Type type) {_        this.type = type__    };param,type,sets,how,multiple,fields,should,be,combined,to,build,textual,part,queries;public,void,set,type,multi,match,query,builder,type,type,this,type,type
QueryStringQueryParser -> public void setType(MultiMatchQueryBuilder.Type type);1527840262;@param type Sets how multiple fields should be combined to build textual part queries.;public void setType(MultiMatchQueryBuilder.Type type) {_        this.type = type__    };param,type,sets,how,multiple,fields,should,be,combined,to,build,textual,part,queries;public,void,set,type,multi,match,query,builder,type,type,this,type,type
QueryStringQueryParser -> public void setType(MultiMatchQueryBuilder.Type type);1528706846;@param type Sets how multiple fields should be combined to build textual part queries.;public void setType(MultiMatchQueryBuilder.Type type) {_        this.type = type__    };param,type,sets,how,multiple,fields,should,be,combined,to,build,textual,part,queries;public,void,set,type,multi,match,query,builder,type,type,this,type,type
QueryStringQueryParser -> public void setType(MultiMatchQueryBuilder.Type type);1535046779;@param type Sets how multiple fields should be combined to build textual part queries.;public void setType(MultiMatchQueryBuilder.Type type) {_        this.type = type__    };param,type,sets,how,multiple,fields,should,be,combined,to,build,textual,part,queries;public,void,set,type,multi,match,query,builder,type,type,this,type,type
QueryStringQueryParser -> public void setType(MultiMatchQueryBuilder.Type type);1542355687;@param type Sets how multiple fields should be combined to build textual part queries.;public void setType(MultiMatchQueryBuilder.Type type) {_        this.type = type__    };param,type,sets,how,multiple,fields,should,be,combined,to,build,textual,part,queries;public,void,set,type,multi,match,query,builder,type,type,this,type,type
QueryStringQueryParser -> public void setType(MultiMatchQueryBuilder.Type type);1542962543;@param type Sets how multiple fields should be combined to build textual part queries.;public void setType(MultiMatchQueryBuilder.Type type) {_        this.type = type__    };param,type,sets,how,multiple,fields,should,be,combined,to,build,textual,part,queries;public,void,set,type,multi,match,query,builder,type,type,this,type,type
QueryStringQueryParser -> public void setType(MultiMatchQueryBuilder.Type type);1546459944;@param type Sets how multiple fields should be combined to build textual part queries.;public void setType(MultiMatchQueryBuilder.Type type) {_        this.type = type__    };param,type,sets,how,multiple,fields,should,be,combined,to,build,textual,part,queries;public,void,set,type,multi,match,query,builder,type,type,this,type,type
QueryStringQueryParser -> public void setType(MultiMatchQueryBuilder.Type type);1548236405;@param type Sets how multiple fields should be combined to build textual part queries.;public void setType(MultiMatchQueryBuilder.Type type) {_        this.type = type__    };param,type,sets,how,multiple,fields,should,be,combined,to,build,textual,part,queries;public,void,set,type,multi,match,query,builder,type,type,this,type,type
QueryStringQueryParser -> public void setTimeZone(DateTimeZone timeZone);1524684173;@param timeZone Time Zone to be applied to any range query related to dates.;public void setTimeZone(DateTimeZone timeZone) {_        this.timeZone = timeZone__    };param,time,zone,time,zone,to,be,applied,to,any,range,query,related,to,dates;public,void,set,time,zone,date,time,zone,time,zone,this,time,zone,time,zone
QueryStringQueryParser -> public void setTimeZone(DateTimeZone timeZone);1527840262;@param timeZone Time Zone to be applied to any range query related to dates.;public void setTimeZone(DateTimeZone timeZone) {_        this.timeZone = timeZone__    };param,time,zone,time,zone,to,be,applied,to,any,range,query,related,to,dates;public,void,set,time,zone,date,time,zone,time,zone,this,time,zone,time,zone
QueryStringQueryParser -> public void setTimeZone(DateTimeZone timeZone);1528706846;@param timeZone Time Zone to be applied to any range query related to dates.;public void setTimeZone(DateTimeZone timeZone) {_        this.timeZone = timeZone__    };param,time,zone,time,zone,to,be,applied,to,any,range,query,related,to,dates;public,void,set,time,zone,date,time,zone,time,zone,this,time,zone,time,zone
QueryStringQueryParser -> public void setTimeZone(DateTimeZone timeZone);1535046779;@param timeZone Time Zone to be applied to any range query related to dates.;public void setTimeZone(DateTimeZone timeZone) {_        this.timeZone = timeZone__    };param,time,zone,time,zone,to,be,applied,to,any,range,query,related,to,dates;public,void,set,time,zone,date,time,zone,time,zone,this,time,zone,time,zone
QueryStringQueryParser -> public void setTimeZone(DateTimeZone timeZone);1542355687;@param timeZone Time Zone to be applied to any range query related to dates.;public void setTimeZone(DateTimeZone timeZone) {_        this.timeZone = timeZone__    };param,time,zone,time,zone,to,be,applied,to,any,range,query,related,to,dates;public,void,set,time,zone,date,time,zone,time,zone,this,time,zone,time,zone
QueryStringQueryParser -> public void setTimeZone(DateTimeZone timeZone);1542962543;@param timeZone Time Zone to be applied to any range query related to dates.;public void setTimeZone(DateTimeZone timeZone) {_        this.timeZone = timeZone__    };param,time,zone,time,zone,to,be,applied,to,any,range,query,related,to,dates;public,void,set,time,zone,date,time,zone,time,zone,this,time,zone,time,zone
QueryStringQueryParser -> public void setTimeZone(DateTimeZone timeZone);1546459944;@param timeZone Time Zone to be applied to any range query related to dates.;public void setTimeZone(DateTimeZone timeZone) {_        this.timeZone = timeZone__    };param,time,zone,time,zone,to,be,applied,to,any,range,query,related,to,dates;public,void,set,time,zone,date,time,zone,time,zone,this,time,zone,time,zone
QueryStringQueryParser -> public QueryStringQueryParser(QueryShardContext context, String defaultField);1524684173;@param context The query shard context._@param defaultField The default field for query terms.;public QueryStringQueryParser(QueryShardContext context, String defaultField) {_        this(context, defaultField, Collections.emptyMap(), false, context.getMapperService().searchAnalyzer())__    };param,context,the,query,shard,context,param,default,field,the,default,field,for,query,terms;public,query,string,query,parser,query,shard,context,context,string,default,field,this,context,default,field,collections,empty,map,false,context,get,mapper,service,search,analyzer
QueryStringQueryParser -> public QueryStringQueryParser(QueryShardContext context, String defaultField);1527840262;@param context The query shard context._@param defaultField The default field for query terms.;public QueryStringQueryParser(QueryShardContext context, String defaultField) {_        this(context, defaultField, Collections.emptyMap(), false, context.getMapperService().searchAnalyzer())__    };param,context,the,query,shard,context,param,default,field,the,default,field,for,query,terms;public,query,string,query,parser,query,shard,context,context,string,default,field,this,context,default,field,collections,empty,map,false,context,get,mapper,service,search,analyzer
QueryStringQueryParser -> public QueryStringQueryParser(QueryShardContext context, String defaultField);1528706846;@param context The query shard context._@param defaultField The default field for query terms.;public QueryStringQueryParser(QueryShardContext context, String defaultField) {_        this(context, defaultField, Collections.emptyMap(), false, context.getMapperService().searchAnalyzer())__    };param,context,the,query,shard,context,param,default,field,the,default,field,for,query,terms;public,query,string,query,parser,query,shard,context,context,string,default,field,this,context,default,field,collections,empty,map,false,context,get,mapper,service,search,analyzer
QueryStringQueryParser -> public QueryStringQueryParser(QueryShardContext context, String defaultField);1535046779;@param context The query shard context._@param defaultField The default field for query terms.;public QueryStringQueryParser(QueryShardContext context, String defaultField) {_        this(context, defaultField, Collections.emptyMap(), false, context.getMapperService().searchAnalyzer())__    };param,context,the,query,shard,context,param,default,field,the,default,field,for,query,terms;public,query,string,query,parser,query,shard,context,context,string,default,field,this,context,default,field,collections,empty,map,false,context,get,mapper,service,search,analyzer
QueryStringQueryParser -> public QueryStringQueryParser(QueryShardContext context, String defaultField);1542355687;@param context The query shard context._@param defaultField The default field for query terms.;public QueryStringQueryParser(QueryShardContext context, String defaultField) {_        this(context, defaultField, Collections.emptyMap(), false, context.getMapperService().searchAnalyzer())__    };param,context,the,query,shard,context,param,default,field,the,default,field,for,query,terms;public,query,string,query,parser,query,shard,context,context,string,default,field,this,context,default,field,collections,empty,map,false,context,get,mapper,service,search,analyzer
QueryStringQueryParser -> public QueryStringQueryParser(QueryShardContext context, String defaultField);1542962543;@param context The query shard context._@param defaultField The default field for query terms.;public QueryStringQueryParser(QueryShardContext context, String defaultField) {_        this(context, defaultField, Collections.emptyMap(), false, context.getMapperService().searchAnalyzer())__    };param,context,the,query,shard,context,param,default,field,the,default,field,for,query,terms;public,query,string,query,parser,query,shard,context,context,string,default,field,this,context,default,field,collections,empty,map,false,context,get,mapper,service,search,analyzer
QueryStringQueryParser -> public QueryStringQueryParser(QueryShardContext context, String defaultField);1546459944;@param context The query shard context._@param defaultField The default field for query terms.;public QueryStringQueryParser(QueryShardContext context, String defaultField) {_        this(context, defaultField, Collections.emptyMap(), false, context.getMapperService().searchAnalyzer())__    };param,context,the,query,shard,context,param,default,field,the,default,field,for,query,terms;public,query,string,query,parser,query,shard,context,context,string,default,field,this,context,default,field,collections,empty,map,false,context,get,mapper,service,search,analyzer
QueryStringQueryParser -> public QueryStringQueryParser(QueryShardContext context, String defaultField);1548236405;@param context The query shard context._@param defaultField The default field for query terms.;public QueryStringQueryParser(QueryShardContext context, String defaultField) {_        this(context, defaultField, Collections.emptyMap(), false, context.getMapperService().searchAnalyzer())__    };param,context,the,query,shard,context,param,default,field,the,default,field,for,query,terms;public,query,string,query,parser,query,shard,context,context,string,default,field,this,context,default,field,collections,empty,map,false,context,get,mapper,service,search,analyzer
QueryStringQueryParser -> public void setForceAnalyzer(Analyzer analyzer);1524684173;@param analyzer Force the provided analyzer to be used for all query analysis regardless of the field.;public void setForceAnalyzer(Analyzer analyzer) {_        this.forceAnalyzer = analyzer__    };param,analyzer,force,the,provided,analyzer,to,be,used,for,all,query,analysis,regardless,of,the,field;public,void,set,force,analyzer,analyzer,analyzer,this,force,analyzer,analyzer
QueryStringQueryParser -> public void setForceAnalyzer(Analyzer analyzer);1527840262;@param analyzer Force the provided analyzer to be used for all query analysis regardless of the field.;public void setForceAnalyzer(Analyzer analyzer) {_        this.forceAnalyzer = analyzer__    };param,analyzer,force,the,provided,analyzer,to,be,used,for,all,query,analysis,regardless,of,the,field;public,void,set,force,analyzer,analyzer,analyzer,this,force,analyzer,analyzer
QueryStringQueryParser -> public void setForceAnalyzer(Analyzer analyzer);1528706846;@param analyzer Force the provided analyzer to be used for all query analysis regardless of the field.;public void setForceAnalyzer(Analyzer analyzer) {_        this.forceAnalyzer = analyzer__    };param,analyzer,force,the,provided,analyzer,to,be,used,for,all,query,analysis,regardless,of,the,field;public,void,set,force,analyzer,analyzer,analyzer,this,force,analyzer,analyzer
QueryStringQueryParser -> public void setForceAnalyzer(Analyzer analyzer);1535046779;@param analyzer Force the provided analyzer to be used for all query analysis regardless of the field.;public void setForceAnalyzer(Analyzer analyzer) {_        this.forceAnalyzer = analyzer__    };param,analyzer,force,the,provided,analyzer,to,be,used,for,all,query,analysis,regardless,of,the,field;public,void,set,force,analyzer,analyzer,analyzer,this,force,analyzer,analyzer
QueryStringQueryParser -> public void setForceAnalyzer(Analyzer analyzer);1542355687;@param analyzer Force the provided analyzer to be used for all query analysis regardless of the field.;public void setForceAnalyzer(Analyzer analyzer) {_        this.forceAnalyzer = analyzer__    };param,analyzer,force,the,provided,analyzer,to,be,used,for,all,query,analysis,regardless,of,the,field;public,void,set,force,analyzer,analyzer,analyzer,this,force,analyzer,analyzer
QueryStringQueryParser -> public void setForceAnalyzer(Analyzer analyzer);1542962543;@param analyzer Force the provided analyzer to be used for all query analysis regardless of the field.;public void setForceAnalyzer(Analyzer analyzer) {_        this.forceAnalyzer = analyzer__    };param,analyzer,force,the,provided,analyzer,to,be,used,for,all,query,analysis,regardless,of,the,field;public,void,set,force,analyzer,analyzer,analyzer,this,force,analyzer,analyzer
QueryStringQueryParser -> public void setForceAnalyzer(Analyzer analyzer);1546459944;@param analyzer Force the provided analyzer to be used for all query analysis regardless of the field.;public void setForceAnalyzer(Analyzer analyzer) {_        this.forceAnalyzer = analyzer__    };param,analyzer,force,the,provided,analyzer,to,be,used,for,all,query,analysis,regardless,of,the,field;public,void,set,force,analyzer,analyzer,analyzer,this,force,analyzer,analyzer
QueryStringQueryParser -> public void setForceAnalyzer(Analyzer analyzer);1548236405;@param analyzer Force the provided analyzer to be used for all query analysis regardless of the field.;public void setForceAnalyzer(Analyzer analyzer) {_        this.forceAnalyzer = analyzer__    };param,analyzer,force,the,provided,analyzer,to,be,used,for,all,query,analysis,regardless,of,the,field;public,void,set,force,analyzer,analyzer,analyzer,this,force,analyzer,analyzer
QueryStringQueryParser -> public void setGroupTieBreaker(float groupTieBreaker);1524684173;@param groupTieBreaker The tie breaker to apply when multiple fields are used.;public void setGroupTieBreaker(float groupTieBreaker) {_        _        queryBuilder.setTieBreaker(groupTieBreaker)__        this.groupTieBreaker = groupTieBreaker__    };param,group,tie,breaker,the,tie,breaker,to,apply,when,multiple,fields,are,used;public,void,set,group,tie,breaker,float,group,tie,breaker,query,builder,set,tie,breaker,group,tie,breaker,this,group,tie,breaker,group,tie,breaker
QueryStringQueryParser -> public void setGroupTieBreaker(float groupTieBreaker);1527840262;@param groupTieBreaker The tie breaker to apply when multiple fields are used.;public void setGroupTieBreaker(float groupTieBreaker) {_        _        queryBuilder.setTieBreaker(groupTieBreaker)__        this.groupTieBreaker = groupTieBreaker__    };param,group,tie,breaker,the,tie,breaker,to,apply,when,multiple,fields,are,used;public,void,set,group,tie,breaker,float,group,tie,breaker,query,builder,set,tie,breaker,group,tie,breaker,this,group,tie,breaker,group,tie,breaker
QueryStringQueryParser -> public void setGroupTieBreaker(float groupTieBreaker);1528706846;@param groupTieBreaker The tie breaker to apply when multiple fields are used.;public void setGroupTieBreaker(float groupTieBreaker) {_        _        queryBuilder.setTieBreaker(groupTieBreaker)__        this.groupTieBreaker = groupTieBreaker__    };param,group,tie,breaker,the,tie,breaker,to,apply,when,multiple,fields,are,used;public,void,set,group,tie,breaker,float,group,tie,breaker,query,builder,set,tie,breaker,group,tie,breaker,this,group,tie,breaker,group,tie,breaker
QueryStringQueryParser -> public void setGroupTieBreaker(float groupTieBreaker);1535046779;@param groupTieBreaker The tie breaker to apply when multiple fields are used.;public void setGroupTieBreaker(float groupTieBreaker) {_        _        queryBuilder.setTieBreaker(groupTieBreaker)__        this.groupTieBreaker = groupTieBreaker__    };param,group,tie,breaker,the,tie,breaker,to,apply,when,multiple,fields,are,used;public,void,set,group,tie,breaker,float,group,tie,breaker,query,builder,set,tie,breaker,group,tie,breaker,this,group,tie,breaker,group,tie,breaker
QueryStringQueryParser -> public void setGroupTieBreaker(float groupTieBreaker);1542355687;@param groupTieBreaker The tie breaker to apply when multiple fields are used.;public void setGroupTieBreaker(float groupTieBreaker) {_        _        queryBuilder.setTieBreaker(groupTieBreaker)__        this.groupTieBreaker = groupTieBreaker__    };param,group,tie,breaker,the,tie,breaker,to,apply,when,multiple,fields,are,used;public,void,set,group,tie,breaker,float,group,tie,breaker,query,builder,set,tie,breaker,group,tie,breaker,this,group,tie,breaker,group,tie,breaker
QueryStringQueryParser -> public void setGroupTieBreaker(float groupTieBreaker);1542962543;@param groupTieBreaker The tie breaker to apply when multiple fields are used.;public void setGroupTieBreaker(float groupTieBreaker) {_        _        queryBuilder.setTieBreaker(groupTieBreaker)__        this.groupTieBreaker = groupTieBreaker__    };param,group,tie,breaker,the,tie,breaker,to,apply,when,multiple,fields,are,used;public,void,set,group,tie,breaker,float,group,tie,breaker,query,builder,set,tie,breaker,group,tie,breaker,this,group,tie,breaker,group,tie,breaker
QueryStringQueryParser -> public void setGroupTieBreaker(float groupTieBreaker);1546459944;@param groupTieBreaker The tie breaker to apply when multiple fields are used.;public void setGroupTieBreaker(float groupTieBreaker) {_        _        queryBuilder.setTieBreaker(groupTieBreaker)__        this.groupTieBreaker = groupTieBreaker__    };param,group,tie,breaker,the,tie,breaker,to,apply,when,multiple,fields,are,used;public,void,set,group,tie,breaker,float,group,tie,breaker,query,builder,set,tie,breaker,group,tie,breaker,this,group,tie,breaker,group,tie,breaker
QueryStringQueryParser -> public void setGroupTieBreaker(float groupTieBreaker);1548236405;@param groupTieBreaker The tie breaker to apply when multiple fields are used.;public void setGroupTieBreaker(float groupTieBreaker) {_        _        queryBuilder.setTieBreaker(groupTieBreaker)__        this.groupTieBreaker = groupTieBreaker__    };param,group,tie,breaker,the,tie,breaker,to,apply,when,multiple,fields,are,used;public,void,set,group,tie,breaker,float,group,tie,breaker,query,builder,set,tie,breaker,group,tie,breaker,this,group,tie,breaker,group,tie,breaker
QueryStringQueryParser -> public void setQuoteFieldSuffix(String quoteFieldSuffix);1524684173;@param quoteFieldSuffix The suffix to append to fields for quoted parts of the query string.;public void setQuoteFieldSuffix(String quoteFieldSuffix) {_        this.quoteFieldSuffix = quoteFieldSuffix__    };param,quote,field,suffix,the,suffix,to,append,to,fields,for,quoted,parts,of,the,query,string;public,void,set,quote,field,suffix,string,quote,field,suffix,this,quote,field,suffix,quote,field,suffix
QueryStringQueryParser -> public void setQuoteFieldSuffix(String quoteFieldSuffix);1527840262;@param quoteFieldSuffix The suffix to append to fields for quoted parts of the query string.;public void setQuoteFieldSuffix(String quoteFieldSuffix) {_        this.quoteFieldSuffix = quoteFieldSuffix__    };param,quote,field,suffix,the,suffix,to,append,to,fields,for,quoted,parts,of,the,query,string;public,void,set,quote,field,suffix,string,quote,field,suffix,this,quote,field,suffix,quote,field,suffix
QueryStringQueryParser -> public void setQuoteFieldSuffix(String quoteFieldSuffix);1528706846;@param quoteFieldSuffix The suffix to append to fields for quoted parts of the query string.;public void setQuoteFieldSuffix(String quoteFieldSuffix) {_        this.quoteFieldSuffix = quoteFieldSuffix__    };param,quote,field,suffix,the,suffix,to,append,to,fields,for,quoted,parts,of,the,query,string;public,void,set,quote,field,suffix,string,quote,field,suffix,this,quote,field,suffix,quote,field,suffix
QueryStringQueryParser -> public void setQuoteFieldSuffix(String quoteFieldSuffix);1535046779;@param quoteFieldSuffix The suffix to append to fields for quoted parts of the query string.;public void setQuoteFieldSuffix(String quoteFieldSuffix) {_        this.quoteFieldSuffix = quoteFieldSuffix__    };param,quote,field,suffix,the,suffix,to,append,to,fields,for,quoted,parts,of,the,query,string;public,void,set,quote,field,suffix,string,quote,field,suffix,this,quote,field,suffix,quote,field,suffix
QueryStringQueryParser -> public void setQuoteFieldSuffix(String quoteFieldSuffix);1542355687;@param quoteFieldSuffix The suffix to append to fields for quoted parts of the query string.;public void setQuoteFieldSuffix(String quoteFieldSuffix) {_        this.quoteFieldSuffix = quoteFieldSuffix__    };param,quote,field,suffix,the,suffix,to,append,to,fields,for,quoted,parts,of,the,query,string;public,void,set,quote,field,suffix,string,quote,field,suffix,this,quote,field,suffix,quote,field,suffix
QueryStringQueryParser -> public void setQuoteFieldSuffix(String quoteFieldSuffix);1542962543;@param quoteFieldSuffix The suffix to append to fields for quoted parts of the query string.;public void setQuoteFieldSuffix(String quoteFieldSuffix) {_        this.quoteFieldSuffix = quoteFieldSuffix__    };param,quote,field,suffix,the,suffix,to,append,to,fields,for,quoted,parts,of,the,query,string;public,void,set,quote,field,suffix,string,quote,field,suffix,this,quote,field,suffix,quote,field,suffix
QueryStringQueryParser -> public void setQuoteFieldSuffix(String quoteFieldSuffix);1546459944;@param quoteFieldSuffix The suffix to append to fields for quoted parts of the query string.;public void setQuoteFieldSuffix(String quoteFieldSuffix) {_        this.quoteFieldSuffix = quoteFieldSuffix__    };param,quote,field,suffix,the,suffix,to,append,to,fields,for,quoted,parts,of,the,query,string;public,void,set,quote,field,suffix,string,quote,field,suffix,this,quote,field,suffix,quote,field,suffix
QueryStringQueryParser -> public void setQuoteFieldSuffix(String quoteFieldSuffix);1548236405;@param quoteFieldSuffix The suffix to append to fields for quoted parts of the query string.;public void setQuoteFieldSuffix(String quoteFieldSuffix) {_        this.quoteFieldSuffix = quoteFieldSuffix__    };param,quote,field,suffix,the,suffix,to,append,to,fields,for,quoted,parts,of,the,query,string;public,void,set,quote,field,suffix,string,quote,field,suffix,this,quote,field,suffix,quote,field,suffix
QueryStringQueryParser -> public void setFuzziness(Fuzziness fuzziness);1524684173;@param fuzziness Sets the default {@link Fuzziness} for fuzzy query._Defaults to {@link Fuzziness#AUTO}.;public void setFuzziness(Fuzziness fuzziness) {_        this.fuzziness = fuzziness__    };param,fuzziness,sets,the,default,link,fuzziness,for,fuzzy,query,defaults,to,link,fuzziness,auto;public,void,set,fuzziness,fuzziness,fuzziness,this,fuzziness,fuzziness
QueryStringQueryParser -> public void setFuzziness(Fuzziness fuzziness);1527840262;@param fuzziness Sets the default {@link Fuzziness} for fuzzy query._Defaults to {@link Fuzziness#AUTO}.;public void setFuzziness(Fuzziness fuzziness) {_        this.fuzziness = fuzziness__    };param,fuzziness,sets,the,default,link,fuzziness,for,fuzzy,query,defaults,to,link,fuzziness,auto;public,void,set,fuzziness,fuzziness,fuzziness,this,fuzziness,fuzziness
QueryStringQueryParser -> public void setFuzziness(Fuzziness fuzziness);1528706846;@param fuzziness Sets the default {@link Fuzziness} for fuzzy query._Defaults to {@link Fuzziness#AUTO}.;public void setFuzziness(Fuzziness fuzziness) {_        this.fuzziness = fuzziness__    };param,fuzziness,sets,the,default,link,fuzziness,for,fuzzy,query,defaults,to,link,fuzziness,auto;public,void,set,fuzziness,fuzziness,fuzziness,this,fuzziness,fuzziness
QueryStringQueryParser -> public void setFuzziness(Fuzziness fuzziness);1535046779;@param fuzziness Sets the default {@link Fuzziness} for fuzzy query._Defaults to {@link Fuzziness#AUTO}.;public void setFuzziness(Fuzziness fuzziness) {_        this.fuzziness = fuzziness__    };param,fuzziness,sets,the,default,link,fuzziness,for,fuzzy,query,defaults,to,link,fuzziness,auto;public,void,set,fuzziness,fuzziness,fuzziness,this,fuzziness,fuzziness
QueryStringQueryParser -> public void setFuzziness(Fuzziness fuzziness);1542355687;@param fuzziness Sets the default {@link Fuzziness} for fuzzy query._Defaults to {@link Fuzziness#AUTO}.;public void setFuzziness(Fuzziness fuzziness) {_        this.fuzziness = fuzziness__    };param,fuzziness,sets,the,default,link,fuzziness,for,fuzzy,query,defaults,to,link,fuzziness,auto;public,void,set,fuzziness,fuzziness,fuzziness,this,fuzziness,fuzziness
QueryStringQueryParser -> public void setFuzziness(Fuzziness fuzziness);1542962543;@param fuzziness Sets the default {@link Fuzziness} for fuzzy query._Defaults to {@link Fuzziness#AUTO}.;public void setFuzziness(Fuzziness fuzziness) {_        this.fuzziness = fuzziness__    };param,fuzziness,sets,the,default,link,fuzziness,for,fuzzy,query,defaults,to,link,fuzziness,auto;public,void,set,fuzziness,fuzziness,fuzziness,this,fuzziness,fuzziness
QueryStringQueryParser -> public void setFuzziness(Fuzziness fuzziness);1546459944;@param fuzziness Sets the default {@link Fuzziness} for fuzzy query._Defaults to {@link Fuzziness#AUTO}.;public void setFuzziness(Fuzziness fuzziness) {_        this.fuzziness = fuzziness__    };param,fuzziness,sets,the,default,link,fuzziness,for,fuzzy,query,defaults,to,link,fuzziness,auto;public,void,set,fuzziness,fuzziness,fuzziness,this,fuzziness,fuzziness
QueryStringQueryParser -> public void setFuzziness(Fuzziness fuzziness);1548236405;@param fuzziness Sets the default {@link Fuzziness} for fuzzy query._Defaults to {@link Fuzziness#AUTO}.;public void setFuzziness(Fuzziness fuzziness) {_        this.fuzziness = fuzziness__    };param,fuzziness,sets,the,default,link,fuzziness,for,fuzzy,query,defaults,to,link,fuzziness,auto;public,void,set,fuzziness,fuzziness,fuzziness,this,fuzziness,fuzziness
QueryStringQueryParser -> public void setForceQuoteAnalyzer(Analyzer analyzer);1524684173;@param analyzer Force the provided analyzer to be used for all phrase query analysis regardless of the field.;public void setForceQuoteAnalyzer(Analyzer analyzer) {_        this.forceQuoteAnalyzer = analyzer__    };param,analyzer,force,the,provided,analyzer,to,be,used,for,all,phrase,query,analysis,regardless,of,the,field;public,void,set,force,quote,analyzer,analyzer,analyzer,this,force,quote,analyzer,analyzer
QueryStringQueryParser -> public void setForceQuoteAnalyzer(Analyzer analyzer);1527840262;@param analyzer Force the provided analyzer to be used for all phrase query analysis regardless of the field.;public void setForceQuoteAnalyzer(Analyzer analyzer) {_        this.forceQuoteAnalyzer = analyzer__    };param,analyzer,force,the,provided,analyzer,to,be,used,for,all,phrase,query,analysis,regardless,of,the,field;public,void,set,force,quote,analyzer,analyzer,analyzer,this,force,quote,analyzer,analyzer
QueryStringQueryParser -> public void setForceQuoteAnalyzer(Analyzer analyzer);1528706846;@param analyzer Force the provided analyzer to be used for all phrase query analysis regardless of the field.;public void setForceQuoteAnalyzer(Analyzer analyzer) {_        this.forceQuoteAnalyzer = analyzer__    };param,analyzer,force,the,provided,analyzer,to,be,used,for,all,phrase,query,analysis,regardless,of,the,field;public,void,set,force,quote,analyzer,analyzer,analyzer,this,force,quote,analyzer,analyzer
QueryStringQueryParser -> public void setForceQuoteAnalyzer(Analyzer analyzer);1535046779;@param analyzer Force the provided analyzer to be used for all phrase query analysis regardless of the field.;public void setForceQuoteAnalyzer(Analyzer analyzer) {_        this.forceQuoteAnalyzer = analyzer__    };param,analyzer,force,the,provided,analyzer,to,be,used,for,all,phrase,query,analysis,regardless,of,the,field;public,void,set,force,quote,analyzer,analyzer,analyzer,this,force,quote,analyzer,analyzer
QueryStringQueryParser -> public void setForceQuoteAnalyzer(Analyzer analyzer);1542355687;@param analyzer Force the provided analyzer to be used for all phrase query analysis regardless of the field.;public void setForceQuoteAnalyzer(Analyzer analyzer) {_        this.forceQuoteAnalyzer = analyzer__    };param,analyzer,force,the,provided,analyzer,to,be,used,for,all,phrase,query,analysis,regardless,of,the,field;public,void,set,force,quote,analyzer,analyzer,analyzer,this,force,quote,analyzer,analyzer
QueryStringQueryParser -> public void setForceQuoteAnalyzer(Analyzer analyzer);1542962543;@param analyzer Force the provided analyzer to be used for all phrase query analysis regardless of the field.;public void setForceQuoteAnalyzer(Analyzer analyzer) {_        this.forceQuoteAnalyzer = analyzer__    };param,analyzer,force,the,provided,analyzer,to,be,used,for,all,phrase,query,analysis,regardless,of,the,field;public,void,set,force,quote,analyzer,analyzer,analyzer,this,force,quote,analyzer,analyzer
QueryStringQueryParser -> public void setForceQuoteAnalyzer(Analyzer analyzer);1546459944;@param analyzer Force the provided analyzer to be used for all phrase query analysis regardless of the field.;public void setForceQuoteAnalyzer(Analyzer analyzer) {_        this.forceQuoteAnalyzer = analyzer__    };param,analyzer,force,the,provided,analyzer,to,be,used,for,all,phrase,query,analysis,regardless,of,the,field;public,void,set,force,quote,analyzer,analyzer,analyzer,this,force,quote,analyzer,analyzer
QueryStringQueryParser -> public void setForceQuoteAnalyzer(Analyzer analyzer);1548236405;@param analyzer Force the provided analyzer to be used for all phrase query analysis regardless of the field.;public void setForceQuoteAnalyzer(Analyzer analyzer) {_        this.forceQuoteAnalyzer = analyzer__    };param,analyzer,force,the,provided,analyzer,to,be,used,for,all,phrase,query,analysis,regardless,of,the,field;public,void,set,force,quote,analyzer,analyzer,analyzer,this,force,quote,analyzer,analyzer
