commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;5;;@Override protected String executor() {     // we go async right away...     return ThreadPool.Names.SAME. }
false;protected;0;4;;@Override protected OpenIndexResponse newResponse() {     return new OpenIndexResponse(). }
false;protected;3;5;;@Override protected void doExecute(Task task, OpenIndexRequest request, ActionListener<OpenIndexResponse> listener) {     destructiveOperations.failDestructive(request.indices()).     super.doExecute(task, request, listener). }
false;protected;2;5;;@Override protected ClusterBlockException checkBlock(OpenIndexRequest request, ClusterState state) {     return state.blocks().indicesBlockedException(ClusterBlockLevel.METADATA_WRITE, indexNameExpressionResolver.concreteIndexNames(state, request)). }
false;public;1;4;;@Override public void onResponse(OpenIndexClusterStateUpdateResponse response) {     listener.onResponse(new OpenIndexResponse(response.isAcknowledged(), response.isShardsAcknowledged())). }
false;public;1;5;;@Override public void onFailure(Exception t) {     logger.debug(() -> new ParameterizedMessage("failed to open indices [{}]", (Object) concreteIndices), t).     listener.onFailure(t). }
false;protected;3;26;;@Override protected void masterOperation(final OpenIndexRequest request, final ClusterState state, final ActionListener<OpenIndexResponse> listener) {     final Index[] concreteIndices = indexNameExpressionResolver.concreteIndices(state, request).     if (concreteIndices == null || concreteIndices.length == 0) {         listener.onResponse(new OpenIndexResponse(true, true)).         return.     }     OpenIndexClusterStateUpdateRequest updateRequest = new OpenIndexClusterStateUpdateRequest().ackTimeout(request.timeout()).masterNodeTimeout(request.masterNodeTimeout()).indices(concreteIndices).waitForActiveShards(request.waitForActiveShards()).     indexStateService.openIndex(updateRequest, new ActionListener<OpenIndexClusterStateUpdateResponse>() {          @Override         public void onResponse(OpenIndexClusterStateUpdateResponse response) {             listener.onResponse(new OpenIndexResponse(response.isAcknowledged(), response.isShardsAcknowledged())).         }          @Override         public void onFailure(Exception t) {             logger.debug(() -> new ParameterizedMessage("failed to open indices [{}]", (Object) concreteIndices), t).             listener.onFailure(t).         }     }). }
