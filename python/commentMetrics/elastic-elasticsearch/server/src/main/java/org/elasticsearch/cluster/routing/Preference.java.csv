commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public String type() {     return type. }
true;public,static;1;25;/**  * Parses the Preference Type given a string  */ ;/**  * Parses the Preference Type given a string  */ public static Preference parse(String preference) {     String preferenceType.     int colonIndex = preference.indexOf(':').     if (colonIndex == -1) {         preferenceType = preference.     } else {         preferenceType = preference.substring(0, colonIndex).     }     switch(preferenceType) {         case "_shards":             return SHARDS.         case "_prefer_nodes":             return PREFER_NODES.         case "_local":             return LOCAL.         case "_only_local":         case "_onlyLocal":             return ONLY_LOCAL.         case "_only_nodes":             return ONLY_NODES.         default:             throw new IllegalArgumentException("no Preference for [" + preferenceType + "]").     } }
