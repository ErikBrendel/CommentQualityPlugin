commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public int value() {     return value. }
true;public,static;1;24;/**  * Resolves the combined OR'ed value for the given list of regular expression flags. The given flags must follow the  * following syntax:  * <p>  * {@code flag_name}(|{@code flag_name})*  * <p>  * Where {@code flag_name} is one of the following:  * <ul>  *     <li>INTERSECTION</li>  *     <li>COMPLEMENT</li>  *     <li>EMPTY</li>  *     <li>ANYSTRING</li>  *     <li>INTERVAL</li>  *     <li>NONE</li>  *     <li>ALL</li>  * </ul>  * <p>  * Example: {@code INTERSECTION|COMPLEMENT|EMPTY}  *  * @param flags A string representing a list of regular expression flags  * @return The combined OR'ed value for all the flags  */ ;/**  * Resolves the combined OR'ed value for the given list of regular expression flags. The given flags must follow the  * following syntax:  * <p>  * {@code flag_name}(|{@code flag_name})*  * <p>  * Where {@code flag_name} is one of the following:  * <ul>  *     <li>INTERSECTION</li>  *     <li>COMPLEMENT</li>  *     <li>EMPTY</li>  *     <li>ANYSTRING</li>  *     <li>INTERVAL</li>  *     <li>NONE</li>  *     <li>ALL</li>  * </ul>  * <p>  * Example: {@code INTERSECTION|COMPLEMENT|EMPTY}  *  * @param flags A string representing a list of regular expression flags  * @return The combined OR'ed value for all the flags  */ public static int resolveValue(String flags) {     if (flags == null || flags.isEmpty()) {         return RegExp.ALL.     }     int magic = RegExp.NONE.     for (String s : Strings.delimitedListToStringArray(flags, "|")) {         if (s.isEmpty()) {             continue.         }         try {             RegexpFlag flag = RegexpFlag.valueOf(s.toUpperCase(Locale.ROOT)).             if (flag == RegexpFlag.NONE) {                 continue.             }             if (flag == RegexpFlag.ALL) {                 return flag.value().             }             magic |= flag.value().         } catch (IllegalArgumentException iae) {             throw new IllegalArgumentException("Unknown regexp flag [" + s + "]").         }     }     return magic. }
