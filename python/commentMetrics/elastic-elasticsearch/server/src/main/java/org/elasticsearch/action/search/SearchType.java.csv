# id;timestamp;commentText;codeText;commentWords;codeWords
SearchType -> public static SearchType fromString(String searchType);1524684173;The a string representation search type to execute, defaults to {@link SearchType#DEFAULT}. Can be_one of "dfs_query_then_fetch"/"dfsQueryThenFetch", "dfs_query_and_fetch"/"dfsQueryAndFetch",_"query_then_fetch"/"queryThenFetch" and "query_and_fetch"/"queryAndFetch".;public static SearchType fromString(String searchType) {_        if (searchType == null) {_            return SearchType.DEFAULT__        }_        if ("dfs_query_then_fetch".equals(searchType)) {_            return SearchType.DFS_QUERY_THEN_FETCH__        } else if ("query_then_fetch".equals(searchType)) {_            return SearchType.QUERY_THEN_FETCH__        } else {_            throw new IllegalArgumentException("No search type for [" + searchType + "]")__        }_    };the,a,string,representation,search,type,to,execute,defaults,to,link,search,type,default,can,be,one,of,dfs,query,then,fetch,dfs,query,and,fetch,query,then,fetch,and,query,and,fetch;public,static,search,type,from,string,string,search,type,if,search,type,null,return,search,type,default,if,equals,search,type,return,search,type,else,if,equals,search,type,return,search,type,else,throw,new,illegal,argument,exception,no,search,type,for,search,type
SearchType -> public static SearchType fromString(String searchType);1531179852;The a string representation search type to execute, defaults to {@link SearchType#DEFAULT}. Can be_one of "dfs_query_then_fetch"/"dfsQueryThenFetch", "dfs_query_and_fetch"/"dfsQueryAndFetch",_"query_then_fetch"/"queryThenFetch" and "query_and_fetch"/"queryAndFetch".;public static SearchType fromString(String searchType) {_        if (searchType == null) {_            return SearchType.DEFAULT__        }_        if ("dfs_query_then_fetch".equals(searchType)) {_            return SearchType.DFS_QUERY_THEN_FETCH__        } else if ("query_then_fetch".equals(searchType)) {_            return SearchType.QUERY_THEN_FETCH__        } else {_            throw new IllegalArgumentException("No search type for [" + searchType + "]")__        }_    };the,a,string,representation,search,type,to,execute,defaults,to,link,search,type,default,can,be,one,of,dfs,query,then,fetch,dfs,query,and,fetch,query,then,fetch,and,query,and,fetch;public,static,search,type,from,string,string,search,type,if,search,type,null,return,search,type,default,if,equals,search,type,return,search,type,else,if,equals,search,type,return,search,type,else,throw,new,illegal,argument,exception,no,search,type,for,search,type
SearchType -> public static SearchType fromString(String searchType);1547121007;The a string representation search type to execute, defaults to {@link SearchType#DEFAULT}. Can be_one of "dfs_query_then_fetch"/"dfsQueryThenFetch", "dfs_query_and_fetch"/"dfsQueryAndFetch",_"query_then_fetch"/"queryThenFetch" and "query_and_fetch"/"queryAndFetch".;public static SearchType fromString(String searchType) {_        if (searchType == null) {_            return SearchType.DEFAULT__        }_        if ("dfs_query_then_fetch".equals(searchType)) {_            return SearchType.DFS_QUERY_THEN_FETCH__        } else if ("query_then_fetch".equals(searchType)) {_            return SearchType.QUERY_THEN_FETCH__        } else {_            throw new IllegalArgumentException("No search type for [" + searchType + "]")__        }_    };the,a,string,representation,search,type,to,execute,defaults,to,link,search,type,default,can,be,one,of,dfs,query,then,fetch,dfs,query,and,fetch,query,then,fetch,and,query,and,fetch;public,static,search,type,from,string,string,search,type,if,search,type,null,return,search,type,default,if,equals,search,type,return,search,type,else,if,equals,search,type,return,search,type,else,throw,new,illegal,argument,exception,no,search,type,for,search,type
SearchType -> public byte id();1524684173;The internal id of the type.;public byte id() {_        return this.id__    };the,internal,id,of,the,type;public,byte,id,return,this,id
SearchType -> public byte id();1531179852;The internal id of the type.;public byte id() {_        return this.id__    };the,internal,id,of,the,type;public,byte,id,return,this,id
SearchType -> public byte id();1547121007;The internal id of the type.;public byte id() {_        return this.id__    };the,internal,id,of,the,type;public,byte,id,return,this,id
SearchType -> public static SearchType fromId(byte id);1524684173;Constructs search type based on the internal id.;public static SearchType fromId(byte id) {_        if (id == 0) {_            return DFS_QUERY_THEN_FETCH__        } else if (id == 1_            || id == 3) { _            return QUERY_THEN_FETCH__        } else {_            throw new IllegalArgumentException("No search type for [" + id + "]")__        }_    };constructs,search,type,based,on,the,internal,id;public,static,search,type,from,id,byte,id,if,id,0,return,else,if,id,1,id,3,return,else,throw,new,illegal,argument,exception,no,search,type,for,id
SearchType -> public static SearchType fromId(byte id);1531179852;Constructs search type based on the internal id.;public static SearchType fromId(byte id) {_        if (id == 0) {_            return DFS_QUERY_THEN_FETCH__        } else if (id == 1_            || id == 3) { _            return QUERY_THEN_FETCH__        } else {_            throw new IllegalArgumentException("No search type for [" + id + "]")__        }_    };constructs,search,type,based,on,the,internal,id;public,static,search,type,from,id,byte,id,if,id,0,return,else,if,id,1,id,3,return,else,throw,new,illegal,argument,exception,no,search,type,for,id
SearchType -> public static SearchType fromId(byte id);1547121007;Constructs search type based on the internal id.;public static SearchType fromId(byte id) {_        if (id == 0) {_            return DFS_QUERY_THEN_FETCH__        } else if (id == 1_            || id == 3) { _            return QUERY_THEN_FETCH__        } else {_            throw new IllegalArgumentException("No search type for [" + id + "]")__        }_    };constructs,search,type,based,on,the,internal,id;public,static,search,type,from,id,byte,id,if,id,0,return,else,if,id,1,id,3,return,else,throw,new,illegal,argument,exception,no,search,type,for,id
