commented;modifiers;parameterAmount;loc;comment;code
false;protected;2;4;;@Override protected AggregationBuilder shallowCopy(AggregatorFactories.Builder factoriesBuilder, Map<String, Object> metaData) {     return new FilterAggregationBuilder(this, factoriesBuilder, metaData). }
false;protected;1;4;;@Override protected void doWriteTo(StreamOutput out) throws IOException {     out.writeNamedWriteable(filter). }
false;protected;1;8;;@Override protected AggregationBuilder doRewrite(QueryRewriteContext queryShardContext) throws IOException {     QueryBuilder result = Rewriteable.rewrite(filter, queryShardContext).     if (result != filter) {         return new FilterAggregationBuilder(getName(), result).     }     return this. }
false;protected;3;5;;@Override protected AggregatorFactory<?> doBuild(SearchContext context, AggregatorFactory<?> parent, AggregatorFactories.Builder subFactoriesBuilder) throws IOException {     return new FilterAggregatorFactory(name, filter, context, parent, subFactoriesBuilder, metaData). }
false;protected;2;7;;@Override protected XContentBuilder internalXContent(XContentBuilder builder, Params params) throws IOException {     if (filter != null) {         filter.toXContent(builder, params).     }     return builder. }
false;public,static;2;4;;public static FilterAggregationBuilder parse(String aggregationName, XContentParser parser) throws IOException {     QueryBuilder filter = parseInnerQueryBuilder(parser).     return new FilterAggregationBuilder(aggregationName, filter). }
false;protected;0;4;;@Override protected int doHashCode() {     return Objects.hash(filter). }
false;protected;1;5;;@Override protected boolean doEquals(Object obj) {     FilterAggregationBuilder other = (FilterAggregationBuilder) obj.     return Objects.equals(filter, other.filter). }
false;public;0;4;;@Override public String getType() {     return NAME. }
false;public;0;3;;public QueryBuilder getFilter() {     return filter. }
