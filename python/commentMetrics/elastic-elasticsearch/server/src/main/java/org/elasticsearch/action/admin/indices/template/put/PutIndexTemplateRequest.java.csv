# id;timestamp;commentText;codeText;commentWords;codeWords
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, XContentBuilder source);1524684173;Adds mapping that will be added when the index gets created.__@param type   The mapping type_@param source The mapping source;public PutIndexTemplateRequest mapping(String type, XContentBuilder source) {_        return mapping(type, BytesReference.bytes(source), source.contentType())__    };adds,mapping,that,will,be,added,when,the,index,gets,created,param,type,the,mapping,type,param,source,the,mapping,source;public,put,index,template,request,mapping,string,type,xcontent,builder,source,return,mapping,type,bytes,reference,bytes,source,source,content,type
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, XContentBuilder source);1525334055;Adds mapping that will be added when the index gets created.__@param type   The mapping type_@param source The mapping source;public PutIndexTemplateRequest mapping(String type, XContentBuilder source) {_        return mapping(type, BytesReference.bytes(source), source.contentType())__    };adds,mapping,that,will,be,added,when,the,index,gets,created,param,type,the,mapping,type,param,source,the,mapping,source;public,put,index,template,request,mapping,string,type,xcontent,builder,source,return,mapping,type,bytes,reference,bytes,source,source,content,type
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, XContentBuilder source);1525645056;Adds mapping that will be added when the index gets created.__@param type   The mapping type_@param source The mapping source;public PutIndexTemplateRequest mapping(String type, XContentBuilder source) {_        return mapping(type, BytesReference.bytes(source), source.contentType())__    };adds,mapping,that,will,be,added,when,the,index,gets,created,param,type,the,mapping,type,param,source,the,mapping,source;public,put,index,template,request,mapping,string,type,xcontent,builder,source,return,mapping,type,bytes,reference,bytes,source,source,content,type
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, XContentBuilder source);1526449283;Adds mapping that will be added when the index gets created.__@param type   The mapping type_@param source The mapping source;public PutIndexTemplateRequest mapping(String type, XContentBuilder source) {_        return mapping(type, BytesReference.bytes(source), source.contentType())__    };adds,mapping,that,will,be,added,when,the,index,gets,created,param,type,the,mapping,type,param,source,the,mapping,source;public,put,index,template,request,mapping,string,type,xcontent,builder,source,return,mapping,type,bytes,reference,bytes,source,source,content,type
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, XContentBuilder source);1529916084;Adds mapping that will be added when the index gets created.__@param type   The mapping type_@param source The mapping source;public PutIndexTemplateRequest mapping(String type, XContentBuilder source) {_        return mapping(type, BytesReference.bytes(source), source.contentType())__    };adds,mapping,that,will,be,added,when,the,index,gets,created,param,type,the,mapping,type,param,source,the,mapping,source;public,put,index,template,request,mapping,string,type,xcontent,builder,source,return,mapping,type,bytes,reference,bytes,source,source,content,type
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, XContentBuilder source);1531179852;Adds mapping that will be added when the index gets created.__@param type   The mapping type_@param source The mapping source;public PutIndexTemplateRequest mapping(String type, XContentBuilder source) {_        return mapping(type, BytesReference.bytes(source), source.contentType())__    };adds,mapping,that,will,be,added,when,the,index,gets,created,param,type,the,mapping,type,param,source,the,mapping,source;public,put,index,template,request,mapping,string,type,xcontent,builder,source,return,mapping,type,bytes,reference,bytes,source,source,content,type
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, XContentBuilder source);1535139672;Adds mapping that will be added when the index gets created.__@param type   The mapping type_@param source The mapping source;public PutIndexTemplateRequest mapping(String type, XContentBuilder source) {_        return mapping(type, BytesReference.bytes(source), source.contentType())__    };adds,mapping,that,will,be,added,when,the,index,gets,created,param,type,the,mapping,type,param,source,the,mapping,source;public,put,index,template,request,mapping,string,type,xcontent,builder,source,return,mapping,type,bytes,reference,bytes,source,source,content,type
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, XContentBuilder source);1535666657;Adds mapping that will be added when the index gets created.__@param type   The mapping type_@param source The mapping source;public PutIndexTemplateRequest mapping(String type, XContentBuilder source) {_        return mapping(type, BytesReference.bytes(source), source.contentType())__    };adds,mapping,that,will,be,added,when,the,index,gets,created,param,type,the,mapping,type,param,source,the,mapping,source;public,put,index,template,request,mapping,string,type,xcontent,builder,source,return,mapping,type,bytes,reference,bytes,source,source,content,type
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, XContentBuilder source);1535723122;Adds mapping that will be added when the index gets created.__@param type   The mapping type_@param source The mapping source;public PutIndexTemplateRequest mapping(String type, XContentBuilder source) {_        return mapping(type, BytesReference.bytes(source), source.contentType())__    };adds,mapping,that,will,be,added,when,the,index,gets,created,param,type,the,mapping,type,param,source,the,mapping,source;public,put,index,template,request,mapping,string,type,xcontent,builder,source,return,mapping,type,bytes,reference,bytes,source,source,content,type
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, XContentBuilder source);1540486836;Adds mapping that will be added when the index gets created.__@param type   The mapping type_@param source The mapping source;public PutIndexTemplateRequest mapping(String type, XContentBuilder source) {_        return mapping(type, BytesReference.bytes(source), source.contentType())__    };adds,mapping,that,will,be,added,when,the,index,gets,created,param,type,the,mapping,type,param,source,the,mapping,source;public,put,index,template,request,mapping,string,type,xcontent,builder,source,return,mapping,type,bytes,reference,bytes,source,source,content,type
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, XContentBuilder source);1540583181;Adds mapping that will be added when the index gets created.__@param type   The mapping type_@param source The mapping source;public PutIndexTemplateRequest mapping(String type, XContentBuilder source) {_        return mapping(type, BytesReference.bytes(source), source.contentType())__    };adds,mapping,that,will,be,added,when,the,index,gets,created,param,type,the,mapping,type,param,source,the,mapping,source;public,put,index,template,request,mapping,string,type,xcontent,builder,source,return,mapping,type,bytes,reference,bytes,source,source,content,type
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, XContentBuilder source);1548265937;Adds mapping that will be added when the index gets created.__@param type   The mapping type_@param source The mapping source;public PutIndexTemplateRequest mapping(String type, XContentBuilder source) {_        return mapping(type, BytesReference.bytes(source), source.contentType())__    };adds,mapping,that,will,be,added,when,the,index,gets,created,param,type,the,mapping,type,param,source,the,mapping,source;public,put,index,template,request,mapping,string,type,xcontent,builder,source,return,mapping,type,bytes,reference,bytes,source,source,content,type
PutIndexTemplateRequest -> public PutIndexTemplateRequest create(boolean create);1524684173;Set to <tt>true</tt> to force only creation, not an update of an index template. If it already_exists, it will fail with an {@link IllegalArgumentException}.;public PutIndexTemplateRequest create(boolean create) {_        this.create = create__        return this__    };set,to,tt,true,tt,to,force,only,creation,not,an,update,of,an,index,template,if,it,already,exists,it,will,fail,with,an,link,illegal,argument,exception;public,put,index,template,request,create,boolean,create,this,create,create,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest create(boolean create);1525334055;Set to {@code true} to force only creation, not an update of an index template. If it already_exists, it will fail with an {@link IllegalArgumentException}.;public PutIndexTemplateRequest create(boolean create) {_        this.create = create__        return this__    };set,to,code,true,to,force,only,creation,not,an,update,of,an,index,template,if,it,already,exists,it,will,fail,with,an,link,illegal,argument,exception;public,put,index,template,request,create,boolean,create,this,create,create,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest create(boolean create);1525645056;Set to {@code true} to force only creation, not an update of an index template. If it already_exists, it will fail with an {@link IllegalArgumentException}.;public PutIndexTemplateRequest create(boolean create) {_        this.create = create__        return this__    };set,to,code,true,to,force,only,creation,not,an,update,of,an,index,template,if,it,already,exists,it,will,fail,with,an,link,illegal,argument,exception;public,put,index,template,request,create,boolean,create,this,create,create,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest create(boolean create);1526449283;Set to {@code true} to force only creation, not an update of an index template. If it already_exists, it will fail with an {@link IllegalArgumentException}.;public PutIndexTemplateRequest create(boolean create) {_        this.create = create__        return this__    };set,to,code,true,to,force,only,creation,not,an,update,of,an,index,template,if,it,already,exists,it,will,fail,with,an,link,illegal,argument,exception;public,put,index,template,request,create,boolean,create,this,create,create,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest create(boolean create);1529916084;Set to {@code true} to force only creation, not an update of an index template. If it already_exists, it will fail with an {@link IllegalArgumentException}.;public PutIndexTemplateRequest create(boolean create) {_        this.create = create__        return this__    };set,to,code,true,to,force,only,creation,not,an,update,of,an,index,template,if,it,already,exists,it,will,fail,with,an,link,illegal,argument,exception;public,put,index,template,request,create,boolean,create,this,create,create,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest create(boolean create);1531179852;Set to {@code true} to force only creation, not an update of an index template. If it already_exists, it will fail with an {@link IllegalArgumentException}.;public PutIndexTemplateRequest create(boolean create) {_        this.create = create__        return this__    };set,to,code,true,to,force,only,creation,not,an,update,of,an,index,template,if,it,already,exists,it,will,fail,with,an,link,illegal,argument,exception;public,put,index,template,request,create,boolean,create,this,create,create,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest create(boolean create);1535139672;Set to {@code true} to force only creation, not an update of an index template. If it already_exists, it will fail with an {@link IllegalArgumentException}.;public PutIndexTemplateRequest create(boolean create) {_        this.create = create__        return this__    };set,to,code,true,to,force,only,creation,not,an,update,of,an,index,template,if,it,already,exists,it,will,fail,with,an,link,illegal,argument,exception;public,put,index,template,request,create,boolean,create,this,create,create,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest create(boolean create);1535666657;Set to {@code true} to force only creation, not an update of an index template. If it already_exists, it will fail with an {@link IllegalArgumentException}.;public PutIndexTemplateRequest create(boolean create) {_        this.create = create__        return this__    };set,to,code,true,to,force,only,creation,not,an,update,of,an,index,template,if,it,already,exists,it,will,fail,with,an,link,illegal,argument,exception;public,put,index,template,request,create,boolean,create,this,create,create,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest create(boolean create);1535723122;Set to {@code true} to force only creation, not an update of an index template. If it already_exists, it will fail with an {@link IllegalArgumentException}.;public PutIndexTemplateRequest create(boolean create) {_        this.create = create__        return this__    };set,to,code,true,to,force,only,creation,not,an,update,of,an,index,template,if,it,already,exists,it,will,fail,with,an,link,illegal,argument,exception;public,put,index,template,request,create,boolean,create,this,create,create,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest create(boolean create);1540486836;Set to {@code true} to force only creation, not an update of an index template. If it already_exists, it will fail with an {@link IllegalArgumentException}.;public PutIndexTemplateRequest create(boolean create) {_        this.create = create__        return this__    };set,to,code,true,to,force,only,creation,not,an,update,of,an,index,template,if,it,already,exists,it,will,fail,with,an,link,illegal,argument,exception;public,put,index,template,request,create,boolean,create,this,create,create,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest create(boolean create);1540583181;Set to {@code true} to force only creation, not an update of an index template. If it already_exists, it will fail with an {@link IllegalArgumentException}.;public PutIndexTemplateRequest create(boolean create) {_        this.create = create__        return this__    };set,to,code,true,to,force,only,creation,not,an,update,of,an,index,template,if,it,already,exists,it,will,fail,with,an,link,illegal,argument,exception;public,put,index,template,request,create,boolean,create,this,create,create,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest create(boolean create);1548265937;Set to {@code true} to force only creation, not an update of an index template. If it already_exists, it will fail with an {@link IllegalArgumentException}.;public PutIndexTemplateRequest create(boolean create) {_        this.create = create__        return this__    };set,to,code,true,to,force,only,creation,not,an,update,of,an,index,template,if,it,already,exists,it,will,fail,with,an,link,illegal,argument,exception;public,put,index,template,request,create,boolean,create,this,create,create,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest(String name);1524684173;Constructs a new put index template request with the provided name.;public PutIndexTemplateRequest(String name) {_        this.name = name__    };constructs,a,new,put,index,template,request,with,the,provided,name;public,put,index,template,request,string,name,this,name,name
PutIndexTemplateRequest -> public PutIndexTemplateRequest(String name);1525334055;Constructs a new put index template request with the provided name.;public PutIndexTemplateRequest(String name) {_        this.name = name__    };constructs,a,new,put,index,template,request,with,the,provided,name;public,put,index,template,request,string,name,this,name,name
PutIndexTemplateRequest -> public PutIndexTemplateRequest(String name);1525645056;Constructs a new put index template request with the provided name.;public PutIndexTemplateRequest(String name) {_        this.name = name__    };constructs,a,new,put,index,template,request,with,the,provided,name;public,put,index,template,request,string,name,this,name,name
PutIndexTemplateRequest -> public PutIndexTemplateRequest(String name);1526449283;Constructs a new put index template request with the provided name.;public PutIndexTemplateRequest(String name) {_        this.name = name__    };constructs,a,new,put,index,template,request,with,the,provided,name;public,put,index,template,request,string,name,this,name,name
PutIndexTemplateRequest -> public PutIndexTemplateRequest(String name);1529916084;Constructs a new put index template request with the provided name.;public PutIndexTemplateRequest(String name) {_        this.name = name__    };constructs,a,new,put,index,template,request,with,the,provided,name;public,put,index,template,request,string,name,this,name,name
PutIndexTemplateRequest -> public PutIndexTemplateRequest(String name);1531179852;Constructs a new put index template request with the provided name.;public PutIndexTemplateRequest(String name) {_        this.name = name__    };constructs,a,new,put,index,template,request,with,the,provided,name;public,put,index,template,request,string,name,this,name,name
PutIndexTemplateRequest -> public PutIndexTemplateRequest(String name);1535139672;Constructs a new put index template request with the provided name.;public PutIndexTemplateRequest(String name) {_        this.name = name__    };constructs,a,new,put,index,template,request,with,the,provided,name;public,put,index,template,request,string,name,this,name,name
PutIndexTemplateRequest -> public PutIndexTemplateRequest(String name);1535666657;Constructs a new put index template request with the provided name.;public PutIndexTemplateRequest(String name) {_        this.name = name__    };constructs,a,new,put,index,template,request,with,the,provided,name;public,put,index,template,request,string,name,this,name,name
PutIndexTemplateRequest -> public PutIndexTemplateRequest(String name);1535723122;Constructs a new put index template request with the provided name.;public PutIndexTemplateRequest(String name) {_        this.name = name__    };constructs,a,new,put,index,template,request,with,the,provided,name;public,put,index,template,request,string,name,this,name,name
PutIndexTemplateRequest -> public PutIndexTemplateRequest(String name);1540486836;Constructs a new put index template request with the provided name.;public PutIndexTemplateRequest(String name) {_        this.name = name__    };constructs,a,new,put,index,template,request,with,the,provided,name;public,put,index,template,request,string,name,this,name,name
PutIndexTemplateRequest -> public PutIndexTemplateRequest(String name);1540583181;Constructs a new put index template request with the provided name.;public PutIndexTemplateRequest(String name) {_        this.name = name__    };constructs,a,new,put,index,template,request,with,the,provided,name;public,put,index,template,request,string,name,this,name,name
PutIndexTemplateRequest -> public PutIndexTemplateRequest(String name);1548265937;Constructs a new put index template request with the provided name.;public PutIndexTemplateRequest(String name) {_        this.name = name__    };constructs,a,new,put,index,template,request,with,the,provided,name;public,put,index,template,request,string,name,this,name,name
PutIndexTemplateRequest -> public PutIndexTemplateRequest settings(String source, XContentType xContentType);1524684173;The settings to create the index template with (either json/yaml format).;public PutIndexTemplateRequest settings(String source, XContentType xContentType) {_        this.settings = Settings.builder().loadFromSource(source, xContentType).build()__        return this__    };the,settings,to,create,the,index,template,with,either,json,yaml,format;public,put,index,template,request,settings,string,source,xcontent,type,x,content,type,this,settings,settings,builder,load,from,source,source,x,content,type,build,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest settings(String source, XContentType xContentType);1525334055;The settings to create the index template with (either json/yaml format).;public PutIndexTemplateRequest settings(String source, XContentType xContentType) {_        this.settings = Settings.builder().loadFromSource(source, xContentType).build()__        return this__    };the,settings,to,create,the,index,template,with,either,json,yaml,format;public,put,index,template,request,settings,string,source,xcontent,type,x,content,type,this,settings,settings,builder,load,from,source,source,x,content,type,build,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest settings(String source, XContentType xContentType);1525645056;The settings to create the index template with (either json/yaml format).;public PutIndexTemplateRequest settings(String source, XContentType xContentType) {_        this.settings = Settings.builder().loadFromSource(source, xContentType).build()__        return this__    };the,settings,to,create,the,index,template,with,either,json,yaml,format;public,put,index,template,request,settings,string,source,xcontent,type,x,content,type,this,settings,settings,builder,load,from,source,source,x,content,type,build,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest settings(String source, XContentType xContentType);1526449283;The settings to create the index template with (either json/yaml format).;public PutIndexTemplateRequest settings(String source, XContentType xContentType) {_        this.settings = Settings.builder().loadFromSource(source, xContentType).build()__        return this__    };the,settings,to,create,the,index,template,with,either,json,yaml,format;public,put,index,template,request,settings,string,source,xcontent,type,x,content,type,this,settings,settings,builder,load,from,source,source,x,content,type,build,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest settings(String source, XContentType xContentType);1529916084;The settings to create the index template with (either json/yaml format).;public PutIndexTemplateRequest settings(String source, XContentType xContentType) {_        this.settings = Settings.builder().loadFromSource(source, xContentType).build()__        return this__    };the,settings,to,create,the,index,template,with,either,json,yaml,format;public,put,index,template,request,settings,string,source,xcontent,type,x,content,type,this,settings,settings,builder,load,from,source,source,x,content,type,build,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest settings(String source, XContentType xContentType);1531179852;The settings to create the index template with (either json/yaml format).;public PutIndexTemplateRequest settings(String source, XContentType xContentType) {_        this.settings = Settings.builder().loadFromSource(source, xContentType).build()__        return this__    };the,settings,to,create,the,index,template,with,either,json,yaml,format;public,put,index,template,request,settings,string,source,xcontent,type,x,content,type,this,settings,settings,builder,load,from,source,source,x,content,type,build,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest settings(String source, XContentType xContentType);1535139672;The settings to create the index template with (either json/yaml format).;public PutIndexTemplateRequest settings(String source, XContentType xContentType) {_        this.settings = Settings.builder().loadFromSource(source, xContentType).build()__        return this__    };the,settings,to,create,the,index,template,with,either,json,yaml,format;public,put,index,template,request,settings,string,source,xcontent,type,x,content,type,this,settings,settings,builder,load,from,source,source,x,content,type,build,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest settings(String source, XContentType xContentType);1535666657;The settings to create the index template with (either json/yaml format).;public PutIndexTemplateRequest settings(String source, XContentType xContentType) {_        this.settings = Settings.builder().loadFromSource(source, xContentType).build()__        return this__    };the,settings,to,create,the,index,template,with,either,json,yaml,format;public,put,index,template,request,settings,string,source,xcontent,type,x,content,type,this,settings,settings,builder,load,from,source,source,x,content,type,build,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest settings(String source, XContentType xContentType);1535723122;The settings to create the index template with (either json/yaml format).;public PutIndexTemplateRequest settings(String source, XContentType xContentType) {_        this.settings = Settings.builder().loadFromSource(source, xContentType).build()__        return this__    };the,settings,to,create,the,index,template,with,either,json,yaml,format;public,put,index,template,request,settings,string,source,xcontent,type,x,content,type,this,settings,settings,builder,load,from,source,source,x,content,type,build,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest settings(String source, XContentType xContentType);1540486836;The settings to create the index template with (either json/yaml format).;public PutIndexTemplateRequest settings(String source, XContentType xContentType) {_        this.settings = Settings.builder().loadFromSource(source, xContentType).build()__        return this__    };the,settings,to,create,the,index,template,with,either,json,yaml,format;public,put,index,template,request,settings,string,source,xcontent,type,x,content,type,this,settings,settings,builder,load,from,source,source,x,content,type,build,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest settings(String source, XContentType xContentType);1540583181;The settings to create the index template with (either json/yaml format).;public PutIndexTemplateRequest settings(String source, XContentType xContentType) {_        this.settings = Settings.builder().loadFromSource(source, xContentType).build()__        return this__    };the,settings,to,create,the,index,template,with,either,json,yaml,format;public,put,index,template,request,settings,string,source,xcontent,type,x,content,type,this,settings,settings,builder,load,from,source,source,x,content,type,build,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest settings(String source, XContentType xContentType);1548265937;The settings to create the index template with (either json/yaml format).;public PutIndexTemplateRequest settings(String source, XContentType xContentType) {_        this.settings = Settings.builder().loadFromSource(source, xContentType).build()__        return this__    };the,settings,to,create,the,index,template,with,either,json,yaml,format;public,put,index,template,request,settings,string,source,xcontent,type,x,content,type,this,settings,settings,builder,load,from,source,source,x,content,type,build,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(String templateSource, XContentType xContentType);1524684173;The template source definition.;public PutIndexTemplateRequest source(String templateSource, XContentType xContentType) {_        return source(XContentHelper.convertToMap(xContentType.xContent(), templateSource, true))__    };the,template,source,definition;public,put,index,template,request,source,string,template,source,xcontent,type,x,content,type,return,source,xcontent,helper,convert,to,map,x,content,type,x,content,template,source,true
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(String templateSource, XContentType xContentType);1525334055;The template source definition.;public PutIndexTemplateRequest source(String templateSource, XContentType xContentType) {_        return source(XContentHelper.convertToMap(xContentType.xContent(), templateSource, true))__    };the,template,source,definition;public,put,index,template,request,source,string,template,source,xcontent,type,x,content,type,return,source,xcontent,helper,convert,to,map,x,content,type,x,content,template,source,true
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(String templateSource, XContentType xContentType);1525645056;The template source definition.;public PutIndexTemplateRequest source(String templateSource, XContentType xContentType) {_        return source(XContentHelper.convertToMap(xContentType.xContent(), templateSource, true))__    };the,template,source,definition;public,put,index,template,request,source,string,template,source,xcontent,type,x,content,type,return,source,xcontent,helper,convert,to,map,x,content,type,x,content,template,source,true
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(String templateSource, XContentType xContentType);1526449283;The template source definition.;public PutIndexTemplateRequest source(String templateSource, XContentType xContentType) {_        return source(XContentHelper.convertToMap(xContentType.xContent(), templateSource, true))__    };the,template,source,definition;public,put,index,template,request,source,string,template,source,xcontent,type,x,content,type,return,source,xcontent,helper,convert,to,map,x,content,type,x,content,template,source,true
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(String templateSource, XContentType xContentType);1529916084;The template source definition.;public PutIndexTemplateRequest source(String templateSource, XContentType xContentType) {_        return source(XContentHelper.convertToMap(xContentType.xContent(), templateSource, true))__    };the,template,source,definition;public,put,index,template,request,source,string,template,source,xcontent,type,x,content,type,return,source,xcontent,helper,convert,to,map,x,content,type,x,content,template,source,true
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(String templateSource, XContentType xContentType);1531179852;The template source definition.;public PutIndexTemplateRequest source(String templateSource, XContentType xContentType) {_        return source(XContentHelper.convertToMap(xContentType.xContent(), templateSource, true))__    };the,template,source,definition;public,put,index,template,request,source,string,template,source,xcontent,type,x,content,type,return,source,xcontent,helper,convert,to,map,x,content,type,x,content,template,source,true
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(String templateSource, XContentType xContentType);1535139672;The template source definition.;public PutIndexTemplateRequest source(String templateSource, XContentType xContentType) {_        return source(XContentHelper.convertToMap(xContentType.xContent(), templateSource, true))__    };the,template,source,definition;public,put,index,template,request,source,string,template,source,xcontent,type,x,content,type,return,source,xcontent,helper,convert,to,map,x,content,type,x,content,template,source,true
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(String templateSource, XContentType xContentType);1535666657;The template source definition.;public PutIndexTemplateRequest source(String templateSource, XContentType xContentType) {_        return source(XContentHelper.convertToMap(xContentType.xContent(), templateSource, true))__    };the,template,source,definition;public,put,index,template,request,source,string,template,source,xcontent,type,x,content,type,return,source,xcontent,helper,convert,to,map,x,content,type,x,content,template,source,true
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(String templateSource, XContentType xContentType);1535723122;The template source definition.;public PutIndexTemplateRequest source(String templateSource, XContentType xContentType) {_        return source(XContentHelper.convertToMap(xContentType.xContent(), templateSource, true))__    };the,template,source,definition;public,put,index,template,request,source,string,template,source,xcontent,type,x,content,type,return,source,xcontent,helper,convert,to,map,x,content,type,x,content,template,source,true
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(String templateSource, XContentType xContentType);1540486836;The template source definition.;public PutIndexTemplateRequest source(String templateSource, XContentType xContentType) {_        return source(XContentHelper.convertToMap(xContentType.xContent(), templateSource, true))__    };the,template,source,definition;public,put,index,template,request,source,string,template,source,xcontent,type,x,content,type,return,source,xcontent,helper,convert,to,map,x,content,type,x,content,template,source,true
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(String templateSource, XContentType xContentType);1540583181;The template source definition.;public PutIndexTemplateRequest source(String templateSource, XContentType xContentType) {_        return source(XContentHelper.convertToMap(xContentType.xContent(), templateSource, true))__    };the,template,source,definition;public,put,index,template,request,source,string,template,source,xcontent,type,x,content,type,return,source,xcontent,helper,convert,to,map,x,content,type,x,content,template,source,true
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(String templateSource, XContentType xContentType);1548265937;The template source definition.;public PutIndexTemplateRequest source(String templateSource, XContentType xContentType) {_        return source(XContentHelper.convertToMap(xContentType.xContent(), templateSource, true))__    };the,template,source,definition;public,put,index,template,request,source,string,template,source,xcontent,type,x,content,type,return,source,xcontent,helper,convert,to,map,x,content,type,x,content,template,source,true
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, BytesReference source, XContentType xContentType);1524684173;Adds mapping that will be added when the index gets created.__@param type   The mapping type_@param source The mapping source_@param xContentType the source content type;public PutIndexTemplateRequest mapping(String type, BytesReference source, XContentType xContentType) {_        Objects.requireNonNull(xContentType)__        try {_            mappings.put(type, XContentHelper.convertToJson(source, false, false, xContentType))__            return this__        } catch (IOException e) {_            throw new UncheckedIOException("failed to convert source to json", e)__        }_    };adds,mapping,that,will,be,added,when,the,index,gets,created,param,type,the,mapping,type,param,source,the,mapping,source,param,x,content,type,the,source,content,type;public,put,index,template,request,mapping,string,type,bytes,reference,source,xcontent,type,x,content,type,objects,require,non,null,x,content,type,try,mappings,put,type,xcontent,helper,convert,to,json,source,false,false,x,content,type,return,this,catch,ioexception,e,throw,new,unchecked,ioexception,failed,to,convert,source,to,json,e
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, BytesReference source, XContentType xContentType);1525334055;Adds mapping that will be added when the index gets created.__@param type   The mapping type_@param source The mapping source_@param xContentType the source content type;public PutIndexTemplateRequest mapping(String type, BytesReference source, XContentType xContentType) {_        Objects.requireNonNull(xContentType)__        try {_            mappings.put(type, XContentHelper.convertToJson(source, false, false, xContentType))__            return this__        } catch (IOException e) {_            throw new UncheckedIOException("failed to convert source to json", e)__        }_    };adds,mapping,that,will,be,added,when,the,index,gets,created,param,type,the,mapping,type,param,source,the,mapping,source,param,x,content,type,the,source,content,type;public,put,index,template,request,mapping,string,type,bytes,reference,source,xcontent,type,x,content,type,objects,require,non,null,x,content,type,try,mappings,put,type,xcontent,helper,convert,to,json,source,false,false,x,content,type,return,this,catch,ioexception,e,throw,new,unchecked,ioexception,failed,to,convert,source,to,json,e
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, BytesReference source, XContentType xContentType);1525645056;Adds mapping that will be added when the index gets created.__@param type   The mapping type_@param source The mapping source_@param xContentType the source content type;public PutIndexTemplateRequest mapping(String type, BytesReference source, XContentType xContentType) {_        Objects.requireNonNull(xContentType)__        try {_            mappings.put(type, XContentHelper.convertToJson(source, false, false, xContentType))__            return this__        } catch (IOException e) {_            throw new UncheckedIOException("failed to convert source to json", e)__        }_    };adds,mapping,that,will,be,added,when,the,index,gets,created,param,type,the,mapping,type,param,source,the,mapping,source,param,x,content,type,the,source,content,type;public,put,index,template,request,mapping,string,type,bytes,reference,source,xcontent,type,x,content,type,objects,require,non,null,x,content,type,try,mappings,put,type,xcontent,helper,convert,to,json,source,false,false,x,content,type,return,this,catch,ioexception,e,throw,new,unchecked,ioexception,failed,to,convert,source,to,json,e
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, BytesReference source, XContentType xContentType);1526449283;Adds mapping that will be added when the index gets created.__@param type   The mapping type_@param source The mapping source_@param xContentType the source content type;public PutIndexTemplateRequest mapping(String type, BytesReference source, XContentType xContentType) {_        Objects.requireNonNull(xContentType)__        try {_            mappings.put(type, XContentHelper.convertToJson(source, false, false, xContentType))__            return this__        } catch (IOException e) {_            throw new UncheckedIOException("failed to convert source to json", e)__        }_    };adds,mapping,that,will,be,added,when,the,index,gets,created,param,type,the,mapping,type,param,source,the,mapping,source,param,x,content,type,the,source,content,type;public,put,index,template,request,mapping,string,type,bytes,reference,source,xcontent,type,x,content,type,objects,require,non,null,x,content,type,try,mappings,put,type,xcontent,helper,convert,to,json,source,false,false,x,content,type,return,this,catch,ioexception,e,throw,new,unchecked,ioexception,failed,to,convert,source,to,json,e
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, BytesReference source, XContentType xContentType);1529916084;Adds mapping that will be added when the index gets created.__@param type   The mapping type_@param source The mapping source_@param xContentType the source content type;public PutIndexTemplateRequest mapping(String type, BytesReference source, XContentType xContentType) {_        Objects.requireNonNull(xContentType)__        try {_            mappings.put(type, XContentHelper.convertToJson(source, false, false, xContentType))__            return this__        } catch (IOException e) {_            throw new UncheckedIOException("failed to convert source to json", e)__        }_    };adds,mapping,that,will,be,added,when,the,index,gets,created,param,type,the,mapping,type,param,source,the,mapping,source,param,x,content,type,the,source,content,type;public,put,index,template,request,mapping,string,type,bytes,reference,source,xcontent,type,x,content,type,objects,require,non,null,x,content,type,try,mappings,put,type,xcontent,helper,convert,to,json,source,false,false,x,content,type,return,this,catch,ioexception,e,throw,new,unchecked,ioexception,failed,to,convert,source,to,json,e
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, BytesReference source, XContentType xContentType);1531179852;Adds mapping that will be added when the index gets created.__@param type   The mapping type_@param source The mapping source_@param xContentType the source content type;public PutIndexTemplateRequest mapping(String type, BytesReference source, XContentType xContentType) {_        Objects.requireNonNull(xContentType)__        try {_            mappings.put(type, XContentHelper.convertToJson(source, false, false, xContentType))__            return this__        } catch (IOException e) {_            throw new UncheckedIOException("failed to convert source to json", e)__        }_    };adds,mapping,that,will,be,added,when,the,index,gets,created,param,type,the,mapping,type,param,source,the,mapping,source,param,x,content,type,the,source,content,type;public,put,index,template,request,mapping,string,type,bytes,reference,source,xcontent,type,x,content,type,objects,require,non,null,x,content,type,try,mappings,put,type,xcontent,helper,convert,to,json,source,false,false,x,content,type,return,this,catch,ioexception,e,throw,new,unchecked,ioexception,failed,to,convert,source,to,json,e
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, BytesReference source, XContentType xContentType);1535139672;Adds mapping that will be added when the index gets created.__@param type   The mapping type_@param source The mapping source_@param xContentType the source content type;public PutIndexTemplateRequest mapping(String type, BytesReference source, XContentType xContentType) {_        Objects.requireNonNull(xContentType)__        try {_            mappings.put(type, XContentHelper.convertToJson(source, false, false, xContentType))__            return this__        } catch (IOException e) {_            throw new UncheckedIOException("failed to convert source to json", e)__        }_    };adds,mapping,that,will,be,added,when,the,index,gets,created,param,type,the,mapping,type,param,source,the,mapping,source,param,x,content,type,the,source,content,type;public,put,index,template,request,mapping,string,type,bytes,reference,source,xcontent,type,x,content,type,objects,require,non,null,x,content,type,try,mappings,put,type,xcontent,helper,convert,to,json,source,false,false,x,content,type,return,this,catch,ioexception,e,throw,new,unchecked,ioexception,failed,to,convert,source,to,json,e
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, BytesReference source, XContentType xContentType);1535666657;Adds mapping that will be added when the index gets created.__@param type   The mapping type_@param source The mapping source_@param xContentType the source content type;public PutIndexTemplateRequest mapping(String type, BytesReference source, XContentType xContentType) {_        Objects.requireNonNull(xContentType)__        try {_            mappings.put(type, XContentHelper.convertToJson(source, false, false, xContentType))__            return this__        } catch (IOException e) {_            throw new UncheckedIOException("failed to convert source to json", e)__        }_    };adds,mapping,that,will,be,added,when,the,index,gets,created,param,type,the,mapping,type,param,source,the,mapping,source,param,x,content,type,the,source,content,type;public,put,index,template,request,mapping,string,type,bytes,reference,source,xcontent,type,x,content,type,objects,require,non,null,x,content,type,try,mappings,put,type,xcontent,helper,convert,to,json,source,false,false,x,content,type,return,this,catch,ioexception,e,throw,new,unchecked,ioexception,failed,to,convert,source,to,json,e
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, BytesReference source, XContentType xContentType);1535723122;Adds mapping that will be added when the index gets created.__@param type   The mapping type_@param source The mapping source_@param xContentType the source content type;public PutIndexTemplateRequest mapping(String type, BytesReference source, XContentType xContentType) {_        Objects.requireNonNull(xContentType)__        try {_            mappings.put(type, XContentHelper.convertToJson(source, false, false, xContentType))__            return this__        } catch (IOException e) {_            throw new UncheckedIOException("failed to convert source to json", e)__        }_    };adds,mapping,that,will,be,added,when,the,index,gets,created,param,type,the,mapping,type,param,source,the,mapping,source,param,x,content,type,the,source,content,type;public,put,index,template,request,mapping,string,type,bytes,reference,source,xcontent,type,x,content,type,objects,require,non,null,x,content,type,try,mappings,put,type,xcontent,helper,convert,to,json,source,false,false,x,content,type,return,this,catch,ioexception,e,throw,new,unchecked,ioexception,failed,to,convert,source,to,json,e
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, BytesReference source, XContentType xContentType);1540486836;Adds mapping that will be added when the index gets created.__@param type   The mapping type_@param source The mapping source_@param xContentType the source content type;public PutIndexTemplateRequest mapping(String type, BytesReference source, XContentType xContentType) {_        Objects.requireNonNull(xContentType)__        try {_            mappings.put(type, XContentHelper.convertToJson(source, false, false, xContentType))__            return this__        } catch (IOException e) {_            throw new UncheckedIOException("failed to convert source to json", e)__        }_    };adds,mapping,that,will,be,added,when,the,index,gets,created,param,type,the,mapping,type,param,source,the,mapping,source,param,x,content,type,the,source,content,type;public,put,index,template,request,mapping,string,type,bytes,reference,source,xcontent,type,x,content,type,objects,require,non,null,x,content,type,try,mappings,put,type,xcontent,helper,convert,to,json,source,false,false,x,content,type,return,this,catch,ioexception,e,throw,new,unchecked,ioexception,failed,to,convert,source,to,json,e
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, BytesReference source, XContentType xContentType);1540583181;Adds mapping that will be added when the index gets created.__@param type   The mapping type_@param source The mapping source_@param xContentType the source content type;public PutIndexTemplateRequest mapping(String type, BytesReference source, XContentType xContentType) {_        Objects.requireNonNull(xContentType)__        try {_            mappings.put(type, XContentHelper.convertToJson(source, false, false, xContentType))__            return this__        } catch (IOException e) {_            throw new UncheckedIOException("failed to convert source to json", e)__        }_    };adds,mapping,that,will,be,added,when,the,index,gets,created,param,type,the,mapping,type,param,source,the,mapping,source,param,x,content,type,the,source,content,type;public,put,index,template,request,mapping,string,type,bytes,reference,source,xcontent,type,x,content,type,objects,require,non,null,x,content,type,try,mappings,put,type,xcontent,helper,convert,to,json,source,false,false,x,content,type,return,this,catch,ioexception,e,throw,new,unchecked,ioexception,failed,to,convert,source,to,json,e
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, BytesReference source, XContentType xContentType);1548265937;Adds mapping that will be added when the index gets created.__@param type   The mapping type_@param source The mapping source_@param xContentType the source content type;public PutIndexTemplateRequest mapping(String type, BytesReference source, XContentType xContentType) {_        Objects.requireNonNull(xContentType)__        try {_            mappings.put(type, XContentHelper.convertToJson(source, false, false, xContentType))__            return this__        } catch (IOException e) {_            throw new UncheckedIOException("failed to convert source to json", e)__        }_    };adds,mapping,that,will,be,added,when,the,index,gets,created,param,type,the,mapping,type,param,source,the,mapping,source,param,x,content,type,the,source,content,type;public,put,index,template,request,mapping,string,type,bytes,reference,source,xcontent,type,x,content,type,objects,require,non,null,x,content,type,try,mappings,put,type,xcontent,helper,convert,to,json,source,false,false,x,content,type,return,this,catch,ioexception,e,throw,new,unchecked,ioexception,failed,to,convert,source,to,json,e
PutIndexTemplateRequest -> public PutIndexTemplateRequest aliases(XContentBuilder source);1524684173;Sets the aliases that will be associated with the index when it gets created;public PutIndexTemplateRequest aliases(XContentBuilder source) {_        return aliases(BytesReference.bytes(source))__    };sets,the,aliases,that,will,be,associated,with,the,index,when,it,gets,created;public,put,index,template,request,aliases,xcontent,builder,source,return,aliases,bytes,reference,bytes,source
PutIndexTemplateRequest -> public PutIndexTemplateRequest aliases(XContentBuilder source);1525334055;Sets the aliases that will be associated with the index when it gets created;public PutIndexTemplateRequest aliases(XContentBuilder source) {_        return aliases(BytesReference.bytes(source))__    };sets,the,aliases,that,will,be,associated,with,the,index,when,it,gets,created;public,put,index,template,request,aliases,xcontent,builder,source,return,aliases,bytes,reference,bytes,source
PutIndexTemplateRequest -> public PutIndexTemplateRequest aliases(XContentBuilder source);1525645056;Sets the aliases that will be associated with the index when it gets created;public PutIndexTemplateRequest aliases(XContentBuilder source) {_        return aliases(BytesReference.bytes(source))__    };sets,the,aliases,that,will,be,associated,with,the,index,when,it,gets,created;public,put,index,template,request,aliases,xcontent,builder,source,return,aliases,bytes,reference,bytes,source
PutIndexTemplateRequest -> public PutIndexTemplateRequest aliases(XContentBuilder source);1526449283;Sets the aliases that will be associated with the index when it gets created;public PutIndexTemplateRequest aliases(XContentBuilder source) {_        return aliases(BytesReference.bytes(source))__    };sets,the,aliases,that,will,be,associated,with,the,index,when,it,gets,created;public,put,index,template,request,aliases,xcontent,builder,source,return,aliases,bytes,reference,bytes,source
PutIndexTemplateRequest -> public PutIndexTemplateRequest aliases(XContentBuilder source);1529916084;Sets the aliases that will be associated with the index when it gets created;public PutIndexTemplateRequest aliases(XContentBuilder source) {_        return aliases(BytesReference.bytes(source))__    };sets,the,aliases,that,will,be,associated,with,the,index,when,it,gets,created;public,put,index,template,request,aliases,xcontent,builder,source,return,aliases,bytes,reference,bytes,source
PutIndexTemplateRequest -> public PutIndexTemplateRequest aliases(XContentBuilder source);1531179852;Sets the aliases that will be associated with the index when it gets created;public PutIndexTemplateRequest aliases(XContentBuilder source) {_        return aliases(BytesReference.bytes(source))__    };sets,the,aliases,that,will,be,associated,with,the,index,when,it,gets,created;public,put,index,template,request,aliases,xcontent,builder,source,return,aliases,bytes,reference,bytes,source
PutIndexTemplateRequest -> public PutIndexTemplateRequest aliases(XContentBuilder source);1535139672;Sets the aliases that will be associated with the index when it gets created;public PutIndexTemplateRequest aliases(XContentBuilder source) {_        return aliases(BytesReference.bytes(source))__    };sets,the,aliases,that,will,be,associated,with,the,index,when,it,gets,created;public,put,index,template,request,aliases,xcontent,builder,source,return,aliases,bytes,reference,bytes,source
PutIndexTemplateRequest -> public PutIndexTemplateRequest aliases(XContentBuilder source);1535666657;Sets the aliases that will be associated with the index when it gets created;public PutIndexTemplateRequest aliases(XContentBuilder source) {_        return aliases(BytesReference.bytes(source))__    };sets,the,aliases,that,will,be,associated,with,the,index,when,it,gets,created;public,put,index,template,request,aliases,xcontent,builder,source,return,aliases,bytes,reference,bytes,source
PutIndexTemplateRequest -> public PutIndexTemplateRequest aliases(XContentBuilder source);1535723122;Sets the aliases that will be associated with the index when it gets created;public PutIndexTemplateRequest aliases(XContentBuilder source) {_        return aliases(BytesReference.bytes(source))__    };sets,the,aliases,that,will,be,associated,with,the,index,when,it,gets,created;public,put,index,template,request,aliases,xcontent,builder,source,return,aliases,bytes,reference,bytes,source
PutIndexTemplateRequest -> public PutIndexTemplateRequest aliases(XContentBuilder source);1540486836;Sets the aliases that will be associated with the index when it gets created;public PutIndexTemplateRequest aliases(XContentBuilder source) {_        return aliases(BytesReference.bytes(source))__    };sets,the,aliases,that,will,be,associated,with,the,index,when,it,gets,created;public,put,index,template,request,aliases,xcontent,builder,source,return,aliases,bytes,reference,bytes,source
PutIndexTemplateRequest -> public PutIndexTemplateRequest aliases(XContentBuilder source);1540583181;Sets the aliases that will be associated with the index when it gets created;public PutIndexTemplateRequest aliases(XContentBuilder source) {_        return aliases(BytesReference.bytes(source))__    };sets,the,aliases,that,will,be,associated,with,the,index,when,it,gets,created;public,put,index,template,request,aliases,xcontent,builder,source,return,aliases,bytes,reference,bytes,source
PutIndexTemplateRequest -> public PutIndexTemplateRequest aliases(XContentBuilder source);1548265937;Sets the aliases that will be associated with the index when it gets created;public PutIndexTemplateRequest aliases(XContentBuilder source) {_        return aliases(BytesReference.bytes(source))__    };sets,the,aliases,that,will,be,associated,with,the,index,when,it,gets,created;public,put,index,template,request,aliases,xcontent,builder,source,return,aliases,bytes,reference,bytes,source
PutIndexTemplateRequest -> public PutIndexTemplateRequest name(String name);1524684173;Sets the name of the index template.;public PutIndexTemplateRequest name(String name) {_        this.name = name__        return this__    };sets,the,name,of,the,index,template;public,put,index,template,request,name,string,name,this,name,name,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest name(String name);1525334055;Sets the name of the index template.;public PutIndexTemplateRequest name(String name) {_        this.name = name__        return this__    };sets,the,name,of,the,index,template;public,put,index,template,request,name,string,name,this,name,name,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest name(String name);1525645056;Sets the name of the index template.;public PutIndexTemplateRequest name(String name) {_        this.name = name__        return this__    };sets,the,name,of,the,index,template;public,put,index,template,request,name,string,name,this,name,name,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest name(String name);1526449283;Sets the name of the index template.;public PutIndexTemplateRequest name(String name) {_        this.name = name__        return this__    };sets,the,name,of,the,index,template;public,put,index,template,request,name,string,name,this,name,name,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest name(String name);1529916084;Sets the name of the index template.;public PutIndexTemplateRequest name(String name) {_        this.name = name__        return this__    };sets,the,name,of,the,index,template;public,put,index,template,request,name,string,name,this,name,name,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest name(String name);1531179852;Sets the name of the index template.;public PutIndexTemplateRequest name(String name) {_        this.name = name__        return this__    };sets,the,name,of,the,index,template;public,put,index,template,request,name,string,name,this,name,name,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest name(String name);1535139672;Sets the name of the index template.;public PutIndexTemplateRequest name(String name) {_        this.name = name__        return this__    };sets,the,name,of,the,index,template;public,put,index,template,request,name,string,name,this,name,name,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest name(String name);1535666657;Sets the name of the index template.;public PutIndexTemplateRequest name(String name) {_        this.name = name__        return this__    };sets,the,name,of,the,index,template;public,put,index,template,request,name,string,name,this,name,name,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest name(String name);1535723122;Sets the name of the index template.;public PutIndexTemplateRequest name(String name) {_        this.name = name__        return this__    };sets,the,name,of,the,index,template;public,put,index,template,request,name,string,name,this,name,name,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest name(String name);1540486836;Sets the name of the index template.;public PutIndexTemplateRequest name(String name) {_        this.name = name__        return this__    };sets,the,name,of,the,index,template;public,put,index,template,request,name,string,name,this,name,name,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest name(String name);1540583181;Sets the name of the index template.;public PutIndexTemplateRequest name(String name) {_        this.name = name__        return this__    };sets,the,name,of,the,index,template;public,put,index,template,request,name,string,name,this,name,name,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest name(String name);1548265937;Sets the name of the index template.;public PutIndexTemplateRequest name(String name) {_        this.name = name__        return this__    };sets,the,name,of,the,index,template;public,put,index,template,request,name,string,name,this,name,name,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, Map<String, Object> source);1524684173;Adds mapping that will be added when the index gets created.__@param type   The mapping type_@param source The mapping source;public PutIndexTemplateRequest mapping(String type, Map<String, Object> source) {_        _        if (source.size() != 1 || !source.containsKey(type)) {_            source = MapBuilder.<String, Object>newMapBuilder().put(type, source).map()__        }_        try {_            XContentBuilder builder = XContentFactory.contentBuilder(XContentType.JSON)__            builder.map(source)__            return mapping(type, builder)__        } catch (IOException e) {_            throw new ElasticsearchGenerationException("Failed to generate [" + source + "]", e)__        }_    };adds,mapping,that,will,be,added,when,the,index,gets,created,param,type,the,mapping,type,param,source,the,mapping,source;public,put,index,template,request,mapping,string,type,map,string,object,source,if,source,size,1,source,contains,key,type,source,map,builder,string,object,new,map,builder,put,type,source,map,try,xcontent,builder,builder,xcontent,factory,content,builder,xcontent,type,json,builder,map,source,return,mapping,type,builder,catch,ioexception,e,throw,new,elasticsearch,generation,exception,failed,to,generate,source,e
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, Map<String, Object> source);1525334055;Adds mapping that will be added when the index gets created.__@param type   The mapping type_@param source The mapping source;public PutIndexTemplateRequest mapping(String type, Map<String, Object> source) {_        _        if (source.size() != 1 || !source.containsKey(type)) {_            source = MapBuilder.<String, Object>newMapBuilder().put(type, source).map()__        }_        try {_            XContentBuilder builder = XContentFactory.contentBuilder(XContentType.JSON)__            builder.map(source)__            return mapping(type, builder)__        } catch (IOException e) {_            throw new ElasticsearchGenerationException("Failed to generate [" + source + "]", e)__        }_    };adds,mapping,that,will,be,added,when,the,index,gets,created,param,type,the,mapping,type,param,source,the,mapping,source;public,put,index,template,request,mapping,string,type,map,string,object,source,if,source,size,1,source,contains,key,type,source,map,builder,string,object,new,map,builder,put,type,source,map,try,xcontent,builder,builder,xcontent,factory,content,builder,xcontent,type,json,builder,map,source,return,mapping,type,builder,catch,ioexception,e,throw,new,elasticsearch,generation,exception,failed,to,generate,source,e
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, Map<String, Object> source);1525645056;Adds mapping that will be added when the index gets created.__@param type   The mapping type_@param source The mapping source;public PutIndexTemplateRequest mapping(String type, Map<String, Object> source) {_        _        if (source.size() != 1 || !source.containsKey(type)) {_            source = MapBuilder.<String, Object>newMapBuilder().put(type, source).map()__        }_        try {_            XContentBuilder builder = XContentFactory.contentBuilder(XContentType.JSON)__            builder.map(source)__            return mapping(type, builder)__        } catch (IOException e) {_            throw new ElasticsearchGenerationException("Failed to generate [" + source + "]", e)__        }_    };adds,mapping,that,will,be,added,when,the,index,gets,created,param,type,the,mapping,type,param,source,the,mapping,source;public,put,index,template,request,mapping,string,type,map,string,object,source,if,source,size,1,source,contains,key,type,source,map,builder,string,object,new,map,builder,put,type,source,map,try,xcontent,builder,builder,xcontent,factory,content,builder,xcontent,type,json,builder,map,source,return,mapping,type,builder,catch,ioexception,e,throw,new,elasticsearch,generation,exception,failed,to,generate,source,e
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, Map<String, Object> source);1526449283;Adds mapping that will be added when the index gets created.__@param type   The mapping type_@param source The mapping source;public PutIndexTemplateRequest mapping(String type, Map<String, Object> source) {_        _        if (source.size() != 1 || !source.containsKey(type)) {_            source = MapBuilder.<String, Object>newMapBuilder().put(type, source).map()__        }_        try {_            XContentBuilder builder = XContentFactory.contentBuilder(XContentType.JSON)__            builder.map(source)__            return mapping(type, builder)__        } catch (IOException e) {_            throw new ElasticsearchGenerationException("Failed to generate [" + source + "]", e)__        }_    };adds,mapping,that,will,be,added,when,the,index,gets,created,param,type,the,mapping,type,param,source,the,mapping,source;public,put,index,template,request,mapping,string,type,map,string,object,source,if,source,size,1,source,contains,key,type,source,map,builder,string,object,new,map,builder,put,type,source,map,try,xcontent,builder,builder,xcontent,factory,content,builder,xcontent,type,json,builder,map,source,return,mapping,type,builder,catch,ioexception,e,throw,new,elasticsearch,generation,exception,failed,to,generate,source,e
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, Map<String, Object> source);1529916084;Adds mapping that will be added when the index gets created.__@param type   The mapping type_@param source The mapping source;public PutIndexTemplateRequest mapping(String type, Map<String, Object> source) {_        _        if (source.size() != 1 || !source.containsKey(type)) {_            source = MapBuilder.<String, Object>newMapBuilder().put(type, source).map()__        }_        try {_            XContentBuilder builder = XContentFactory.contentBuilder(XContentType.JSON)__            builder.map(source)__            return mapping(type, builder)__        } catch (IOException e) {_            throw new ElasticsearchGenerationException("Failed to generate [" + source + "]", e)__        }_    };adds,mapping,that,will,be,added,when,the,index,gets,created,param,type,the,mapping,type,param,source,the,mapping,source;public,put,index,template,request,mapping,string,type,map,string,object,source,if,source,size,1,source,contains,key,type,source,map,builder,string,object,new,map,builder,put,type,source,map,try,xcontent,builder,builder,xcontent,factory,content,builder,xcontent,type,json,builder,map,source,return,mapping,type,builder,catch,ioexception,e,throw,new,elasticsearch,generation,exception,failed,to,generate,source,e
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, Map<String, Object> source);1531179852;Adds mapping that will be added when the index gets created.__@param type   The mapping type_@param source The mapping source;public PutIndexTemplateRequest mapping(String type, Map<String, Object> source) {_        _        if (source.size() != 1 || !source.containsKey(type)) {_            source = MapBuilder.<String, Object>newMapBuilder().put(type, source).map()__        }_        try {_            XContentBuilder builder = XContentFactory.contentBuilder(XContentType.JSON)__            builder.map(source)__            return mapping(type, builder)__        } catch (IOException e) {_            throw new ElasticsearchGenerationException("Failed to generate [" + source + "]", e)__        }_    };adds,mapping,that,will,be,added,when,the,index,gets,created,param,type,the,mapping,type,param,source,the,mapping,source;public,put,index,template,request,mapping,string,type,map,string,object,source,if,source,size,1,source,contains,key,type,source,map,builder,string,object,new,map,builder,put,type,source,map,try,xcontent,builder,builder,xcontent,factory,content,builder,xcontent,type,json,builder,map,source,return,mapping,type,builder,catch,ioexception,e,throw,new,elasticsearch,generation,exception,failed,to,generate,source,e
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, Map<String, Object> source);1535139672;Adds mapping that will be added when the index gets created.__@param type   The mapping type_@param source The mapping source;public PutIndexTemplateRequest mapping(String type, Map<String, Object> source) {_        _        if (source.size() != 1 || !source.containsKey(type)) {_            source = MapBuilder.<String, Object>newMapBuilder().put(type, source).map()__        }_        try {_            XContentBuilder builder = XContentFactory.contentBuilder(XContentType.JSON)__            builder.map(source)__            return mapping(type, builder)__        } catch (IOException e) {_            throw new ElasticsearchGenerationException("Failed to generate [" + source + "]", e)__        }_    };adds,mapping,that,will,be,added,when,the,index,gets,created,param,type,the,mapping,type,param,source,the,mapping,source;public,put,index,template,request,mapping,string,type,map,string,object,source,if,source,size,1,source,contains,key,type,source,map,builder,string,object,new,map,builder,put,type,source,map,try,xcontent,builder,builder,xcontent,factory,content,builder,xcontent,type,json,builder,map,source,return,mapping,type,builder,catch,ioexception,e,throw,new,elasticsearch,generation,exception,failed,to,generate,source,e
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, Map<String, Object> source);1535666657;Adds mapping that will be added when the index gets created.__@param type   The mapping type_@param source The mapping source;public PutIndexTemplateRequest mapping(String type, Map<String, Object> source) {_        _        if (source.size() != 1 || !source.containsKey(type)) {_            source = MapBuilder.<String, Object>newMapBuilder().put(type, source).map()__        }_        try {_            XContentBuilder builder = XContentFactory.contentBuilder(XContentType.JSON)__            builder.map(source)__            return mapping(type, builder)__        } catch (IOException e) {_            throw new ElasticsearchGenerationException("Failed to generate [" + source + "]", e)__        }_    };adds,mapping,that,will,be,added,when,the,index,gets,created,param,type,the,mapping,type,param,source,the,mapping,source;public,put,index,template,request,mapping,string,type,map,string,object,source,if,source,size,1,source,contains,key,type,source,map,builder,string,object,new,map,builder,put,type,source,map,try,xcontent,builder,builder,xcontent,factory,content,builder,xcontent,type,json,builder,map,source,return,mapping,type,builder,catch,ioexception,e,throw,new,elasticsearch,generation,exception,failed,to,generate,source,e
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, Map<String, Object> source);1535723122;Adds mapping that will be added when the index gets created.__@param type   The mapping type_@param source The mapping source;public PutIndexTemplateRequest mapping(String type, Map<String, Object> source) {_        _        if (source.size() != 1 || !source.containsKey(type)) {_            source = MapBuilder.<String, Object>newMapBuilder().put(type, source).map()__        }_        try {_            XContentBuilder builder = XContentFactory.contentBuilder(XContentType.JSON)__            builder.map(source)__            return mapping(type, builder)__        } catch (IOException e) {_            throw new ElasticsearchGenerationException("Failed to generate [" + source + "]", e)__        }_    };adds,mapping,that,will,be,added,when,the,index,gets,created,param,type,the,mapping,type,param,source,the,mapping,source;public,put,index,template,request,mapping,string,type,map,string,object,source,if,source,size,1,source,contains,key,type,source,map,builder,string,object,new,map,builder,put,type,source,map,try,xcontent,builder,builder,xcontent,factory,content,builder,xcontent,type,json,builder,map,source,return,mapping,type,builder,catch,ioexception,e,throw,new,elasticsearch,generation,exception,failed,to,generate,source,e
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, Map<String, Object> source);1540486836;Adds mapping that will be added when the index gets created.__@param type   The mapping type_@param source The mapping source;public PutIndexTemplateRequest mapping(String type, Map<String, Object> source) {_        _        if (source.size() != 1 || !source.containsKey(type)) {_            source = MapBuilder.<String, Object>newMapBuilder().put(type, source).map()__        }_        try {_            XContentBuilder builder = XContentFactory.contentBuilder(XContentType.JSON)__            builder.map(source)__            return mapping(type, builder)__        } catch (IOException e) {_            throw new ElasticsearchGenerationException("Failed to generate [" + source + "]", e)__        }_    };adds,mapping,that,will,be,added,when,the,index,gets,created,param,type,the,mapping,type,param,source,the,mapping,source;public,put,index,template,request,mapping,string,type,map,string,object,source,if,source,size,1,source,contains,key,type,source,map,builder,string,object,new,map,builder,put,type,source,map,try,xcontent,builder,builder,xcontent,factory,content,builder,xcontent,type,json,builder,map,source,return,mapping,type,builder,catch,ioexception,e,throw,new,elasticsearch,generation,exception,failed,to,generate,source,e
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, Map<String, Object> source);1540583181;Adds mapping that will be added when the index gets created.__@param type   The mapping type_@param source The mapping source;public PutIndexTemplateRequest mapping(String type, Map<String, Object> source) {_        _        if (source.size() != 1 || !source.containsKey(type)) {_            source = MapBuilder.<String, Object>newMapBuilder().put(type, source).map()__        }_        try {_            XContentBuilder builder = XContentFactory.contentBuilder(XContentType.JSON)__            builder.map(source)__            return mapping(type, builder)__        } catch (IOException e) {_            throw new ElasticsearchGenerationException("Failed to generate [" + source + "]", e)__        }_    };adds,mapping,that,will,be,added,when,the,index,gets,created,param,type,the,mapping,type,param,source,the,mapping,source;public,put,index,template,request,mapping,string,type,map,string,object,source,if,source,size,1,source,contains,key,type,source,map,builder,string,object,new,map,builder,put,type,source,map,try,xcontent,builder,builder,xcontent,factory,content,builder,xcontent,type,json,builder,map,source,return,mapping,type,builder,catch,ioexception,e,throw,new,elasticsearch,generation,exception,failed,to,generate,source,e
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, Map<String, Object> source);1548265937;Adds mapping that will be added when the index gets created.__@param type   The mapping type_@param source The mapping source;public PutIndexTemplateRequest mapping(String type, Map<String, Object> source) {_        _        if (source.size() != 1 || !source.containsKey(type)) {_            source = MapBuilder.<String, Object>newMapBuilder().put(type, source).map()__        }_        try {_            XContentBuilder builder = XContentFactory.contentBuilder(XContentType.JSON)__            builder.map(source)__            return mapping(type, builder)__        } catch (IOException e) {_            throw new ElasticsearchGenerationException("Failed to generate [" + source + "]", e)__        }_    };adds,mapping,that,will,be,added,when,the,index,gets,created,param,type,the,mapping,type,param,source,the,mapping,source;public,put,index,template,request,mapping,string,type,map,string,object,source,if,source,size,1,source,contains,key,type,source,map,builder,string,object,new,map,builder,put,type,source,map,try,xcontent,builder,builder,xcontent,factory,content,builder,xcontent,type,json,builder,map,source,return,mapping,type,builder,catch,ioexception,e,throw,new,elasticsearch,generation,exception,failed,to,generate,source,e
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(byte[] source, XContentType xContentType);1524684173;The template source definition.;public PutIndexTemplateRequest source(byte[] source, XContentType xContentType) {_        return source(source, 0, source.length, xContentType)__    };the,template,source,definition;public,put,index,template,request,source,byte,source,xcontent,type,x,content,type,return,source,source,0,source,length,x,content,type
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(byte[] source, XContentType xContentType);1525334055;The template source definition.;public PutIndexTemplateRequest source(byte[] source, XContentType xContentType) {_        return source(source, 0, source.length, xContentType)__    };the,template,source,definition;public,put,index,template,request,source,byte,source,xcontent,type,x,content,type,return,source,source,0,source,length,x,content,type
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(byte[] source, XContentType xContentType);1525645056;The template source definition.;public PutIndexTemplateRequest source(byte[] source, XContentType xContentType) {_        return source(source, 0, source.length, xContentType)__    };the,template,source,definition;public,put,index,template,request,source,byte,source,xcontent,type,x,content,type,return,source,source,0,source,length,x,content,type
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(byte[] source, XContentType xContentType);1526449283;The template source definition.;public PutIndexTemplateRequest source(byte[] source, XContentType xContentType) {_        return source(source, 0, source.length, xContentType)__    };the,template,source,definition;public,put,index,template,request,source,byte,source,xcontent,type,x,content,type,return,source,source,0,source,length,x,content,type
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(byte[] source, XContentType xContentType);1529916084;The template source definition.;public PutIndexTemplateRequest source(byte[] source, XContentType xContentType) {_        return source(source, 0, source.length, xContentType)__    };the,template,source,definition;public,put,index,template,request,source,byte,source,xcontent,type,x,content,type,return,source,source,0,source,length,x,content,type
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(byte[] source, XContentType xContentType);1531179852;The template source definition.;public PutIndexTemplateRequest source(byte[] source, XContentType xContentType) {_        return source(source, 0, source.length, xContentType)__    };the,template,source,definition;public,put,index,template,request,source,byte,source,xcontent,type,x,content,type,return,source,source,0,source,length,x,content,type
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(byte[] source, XContentType xContentType);1535139672;The template source definition.;public PutIndexTemplateRequest source(byte[] source, XContentType xContentType) {_        return source(source, 0, source.length, xContentType)__    };the,template,source,definition;public,put,index,template,request,source,byte,source,xcontent,type,x,content,type,return,source,source,0,source,length,x,content,type
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(byte[] source, XContentType xContentType);1535666657;The template source definition.;public PutIndexTemplateRequest source(byte[] source, XContentType xContentType) {_        return source(source, 0, source.length, xContentType)__    };the,template,source,definition;public,put,index,template,request,source,byte,source,xcontent,type,x,content,type,return,source,source,0,source,length,x,content,type
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(byte[] source, XContentType xContentType);1535723122;The template source definition.;public PutIndexTemplateRequest source(byte[] source, XContentType xContentType) {_        return source(source, 0, source.length, xContentType)__    };the,template,source,definition;public,put,index,template,request,source,byte,source,xcontent,type,x,content,type,return,source,source,0,source,length,x,content,type
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(byte[] source, XContentType xContentType);1540486836;The template source definition.;public PutIndexTemplateRequest source(byte[] source, XContentType xContentType) {_        return source(source, 0, source.length, xContentType)__    };the,template,source,definition;public,put,index,template,request,source,byte,source,xcontent,type,x,content,type,return,source,source,0,source,length,x,content,type
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(byte[] source, XContentType xContentType);1540583181;The template source definition.;public PutIndexTemplateRequest source(byte[] source, XContentType xContentType) {_        return source(source, 0, source.length, xContentType)__    };the,template,source,definition;public,put,index,template,request,source,byte,source,xcontent,type,x,content,type,return,source,source,0,source,length,x,content,type
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(byte[] source, XContentType xContentType);1548265937;The template source definition.;public PutIndexTemplateRequest source(byte[] source, XContentType xContentType) {_        return source(source, 0, source.length, xContentType)__    };the,template,source,definition;public,put,index,template,request,source,byte,source,xcontent,type,x,content,type,return,source,source,0,source,length,x,content,type
PutIndexTemplateRequest -> public String name();1524684173;The name of the index template.;public String name() {_        return this.name__    };the,name,of,the,index,template;public,string,name,return,this,name
PutIndexTemplateRequest -> public String name();1525334055;The name of the index template.;public String name() {_        return this.name__    };the,name,of,the,index,template;public,string,name,return,this,name
PutIndexTemplateRequest -> public String name();1525645056;The name of the index template.;public String name() {_        return this.name__    };the,name,of,the,index,template;public,string,name,return,this,name
PutIndexTemplateRequest -> public String name();1526449283;The name of the index template.;public String name() {_        return this.name__    };the,name,of,the,index,template;public,string,name,return,this,name
PutIndexTemplateRequest -> public String name();1529916084;The name of the index template.;public String name() {_        return this.name__    };the,name,of,the,index,template;public,string,name,return,this,name
PutIndexTemplateRequest -> public String name();1531179852;The name of the index template.;public String name() {_        return this.name__    };the,name,of,the,index,template;public,string,name,return,this,name
PutIndexTemplateRequest -> public String name();1535139672;The name of the index template.;public String name() {_        return this.name__    };the,name,of,the,index,template;public,string,name,return,this,name
PutIndexTemplateRequest -> public String name();1535666657;The name of the index template.;public String name() {_        return this.name__    };the,name,of,the,index,template;public,string,name,return,this,name
PutIndexTemplateRequest -> public String name();1535723122;The name of the index template.;public String name() {_        return this.name__    };the,name,of,the,index,template;public,string,name,return,this,name
PutIndexTemplateRequest -> public String name();1540486836;The name of the index template.;public String name() {_        return this.name__    };the,name,of,the,index,template;public,string,name,return,this,name
PutIndexTemplateRequest -> public String name();1540583181;The name of the index template.;public String name() {_        return this.name__    };the,name,of,the,index,template;public,string,name,return,this,name
PutIndexTemplateRequest -> public String name();1548265937;The name of the index template.;public String name() {_        return this.name__    };the,name,of,the,index,template;public,string,name,return,this,name
PutIndexTemplateRequest -> public PutIndexTemplateRequest aliases(String source);1524684173;Sets the aliases that will be associated with the index when it gets created;public PutIndexTemplateRequest aliases(String source) {_        return aliases(new BytesArray(source))__    };sets,the,aliases,that,will,be,associated,with,the,index,when,it,gets,created;public,put,index,template,request,aliases,string,source,return,aliases,new,bytes,array,source
PutIndexTemplateRequest -> public PutIndexTemplateRequest aliases(String source);1525334055;Sets the aliases that will be associated with the index when it gets created;public PutIndexTemplateRequest aliases(String source) {_        return aliases(new BytesArray(source))__    };sets,the,aliases,that,will,be,associated,with,the,index,when,it,gets,created;public,put,index,template,request,aliases,string,source,return,aliases,new,bytes,array,source
PutIndexTemplateRequest -> public PutIndexTemplateRequest aliases(String source);1525645056;Sets the aliases that will be associated with the index when it gets created;public PutIndexTemplateRequest aliases(String source) {_        return aliases(new BytesArray(source))__    };sets,the,aliases,that,will,be,associated,with,the,index,when,it,gets,created;public,put,index,template,request,aliases,string,source,return,aliases,new,bytes,array,source
PutIndexTemplateRequest -> public PutIndexTemplateRequest aliases(String source);1526449283;Sets the aliases that will be associated with the index when it gets created;public PutIndexTemplateRequest aliases(String source) {_        return aliases(new BytesArray(source))__    };sets,the,aliases,that,will,be,associated,with,the,index,when,it,gets,created;public,put,index,template,request,aliases,string,source,return,aliases,new,bytes,array,source
PutIndexTemplateRequest -> public PutIndexTemplateRequest aliases(String source);1529916084;Sets the aliases that will be associated with the index when it gets created;public PutIndexTemplateRequest aliases(String source) {_        return aliases(new BytesArray(source))__    };sets,the,aliases,that,will,be,associated,with,the,index,when,it,gets,created;public,put,index,template,request,aliases,string,source,return,aliases,new,bytes,array,source
PutIndexTemplateRequest -> public PutIndexTemplateRequest aliases(String source);1531179852;Sets the aliases that will be associated with the index when it gets created;public PutIndexTemplateRequest aliases(String source) {_        return aliases(new BytesArray(source))__    };sets,the,aliases,that,will,be,associated,with,the,index,when,it,gets,created;public,put,index,template,request,aliases,string,source,return,aliases,new,bytes,array,source
PutIndexTemplateRequest -> public PutIndexTemplateRequest aliases(String source);1535139672;Sets the aliases that will be associated with the index when it gets created;public PutIndexTemplateRequest aliases(String source) {_        return aliases(new BytesArray(source))__    };sets,the,aliases,that,will,be,associated,with,the,index,when,it,gets,created;public,put,index,template,request,aliases,string,source,return,aliases,new,bytes,array,source
PutIndexTemplateRequest -> public PutIndexTemplateRequest aliases(String source);1535666657;Sets the aliases that will be associated with the index when it gets created;public PutIndexTemplateRequest aliases(String source) {_        return aliases(new BytesArray(source))__    };sets,the,aliases,that,will,be,associated,with,the,index,when,it,gets,created;public,put,index,template,request,aliases,string,source,return,aliases,new,bytes,array,source
PutIndexTemplateRequest -> public PutIndexTemplateRequest aliases(String source);1535723122;Sets the aliases that will be associated with the index when it gets created;public PutIndexTemplateRequest aliases(String source) {_        return aliases(new BytesArray(source))__    };sets,the,aliases,that,will,be,associated,with,the,index,when,it,gets,created;public,put,index,template,request,aliases,string,source,return,aliases,new,bytes,array,source
PutIndexTemplateRequest -> public PutIndexTemplateRequest aliases(String source);1540486836;Sets the aliases that will be associated with the index when it gets created;public PutIndexTemplateRequest aliases(String source) {_        return aliases(new BytesArray(source))__    };sets,the,aliases,that,will,be,associated,with,the,index,when,it,gets,created;public,put,index,template,request,aliases,string,source,return,aliases,new,bytes,array,source
PutIndexTemplateRequest -> public PutIndexTemplateRequest aliases(String source);1540583181;Sets the aliases that will be associated with the index when it gets created;public PutIndexTemplateRequest aliases(String source) {_        return aliases(new BytesArray(source))__    };sets,the,aliases,that,will,be,associated,with,the,index,when,it,gets,created;public,put,index,template,request,aliases,string,source,return,aliases,new,bytes,array,source
PutIndexTemplateRequest -> public PutIndexTemplateRequest aliases(String source);1548265937;Sets the aliases that will be associated with the index when it gets created;public PutIndexTemplateRequest aliases(String source) {_        return aliases(new BytesArray(source))__    };sets,the,aliases,that,will,be,associated,with,the,index,when,it,gets,created;public,put,index,template,request,aliases,string,source,return,aliases,new,bytes,array,source
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, Object... source);1524684173;A specialized simplified mapping source method, takes the form of simple properties definition:_("field1", "type=string,store=true").;public PutIndexTemplateRequest mapping(String type, Object... source) {_        mapping(type, PutMappingRequest.buildFromSimplifiedDef(type, source))__        return this__    };a,specialized,simplified,mapping,source,method,takes,the,form,of,simple,properties,definition,field1,type,string,store,true;public,put,index,template,request,mapping,string,type,object,source,mapping,type,put,mapping,request,build,from,simplified,def,type,source,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, Object... source);1525334055;A specialized simplified mapping source method, takes the form of simple properties definition:_("field1", "type=string,store=true").;public PutIndexTemplateRequest mapping(String type, Object... source) {_        mapping(type, PutMappingRequest.buildFromSimplifiedDef(type, source))__        return this__    };a,specialized,simplified,mapping,source,method,takes,the,form,of,simple,properties,definition,field1,type,string,store,true;public,put,index,template,request,mapping,string,type,object,source,mapping,type,put,mapping,request,build,from,simplified,def,type,source,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, Object... source);1525645056;A specialized simplified mapping source method, takes the form of simple properties definition:_("field1", "type=string,store=true").;public PutIndexTemplateRequest mapping(String type, Object... source) {_        mapping(type, PutMappingRequest.buildFromSimplifiedDef(type, source))__        return this__    };a,specialized,simplified,mapping,source,method,takes,the,form,of,simple,properties,definition,field1,type,string,store,true;public,put,index,template,request,mapping,string,type,object,source,mapping,type,put,mapping,request,build,from,simplified,def,type,source,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, Object... source);1526449283;A specialized simplified mapping source method, takes the form of simple properties definition:_("field1", "type=string,store=true").;public PutIndexTemplateRequest mapping(String type, Object... source) {_        mapping(type, PutMappingRequest.buildFromSimplifiedDef(type, source))__        return this__    };a,specialized,simplified,mapping,source,method,takes,the,form,of,simple,properties,definition,field1,type,string,store,true;public,put,index,template,request,mapping,string,type,object,source,mapping,type,put,mapping,request,build,from,simplified,def,type,source,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, Object... source);1529916084;A specialized simplified mapping source method, takes the form of simple properties definition:_("field1", "type=string,store=true").;public PutIndexTemplateRequest mapping(String type, Object... source) {_        mapping(type, PutMappingRequest.buildFromSimplifiedDef(type, source))__        return this__    };a,specialized,simplified,mapping,source,method,takes,the,form,of,simple,properties,definition,field1,type,string,store,true;public,put,index,template,request,mapping,string,type,object,source,mapping,type,put,mapping,request,build,from,simplified,def,type,source,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, Object... source);1531179852;A specialized simplified mapping source method, takes the form of simple properties definition:_("field1", "type=string,store=true").;public PutIndexTemplateRequest mapping(String type, Object... source) {_        mapping(type, PutMappingRequest.buildFromSimplifiedDef(type, source))__        return this__    };a,specialized,simplified,mapping,source,method,takes,the,form,of,simple,properties,definition,field1,type,string,store,true;public,put,index,template,request,mapping,string,type,object,source,mapping,type,put,mapping,request,build,from,simplified,def,type,source,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, Object... source);1535139672;A specialized simplified mapping source method, takes the form of simple properties definition:_("field1", "type=string,store=true").;public PutIndexTemplateRequest mapping(String type, Object... source) {_        mapping(type, PutMappingRequest.buildFromSimplifiedDef(type, source))__        return this__    };a,specialized,simplified,mapping,source,method,takes,the,form,of,simple,properties,definition,field1,type,string,store,true;public,put,index,template,request,mapping,string,type,object,source,mapping,type,put,mapping,request,build,from,simplified,def,type,source,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, Object... source);1535666657;A specialized simplified mapping source method, takes the form of simple properties definition:_("field1", "type=string,store=true").;public PutIndexTemplateRequest mapping(String type, Object... source) {_        mapping(type, PutMappingRequest.buildFromSimplifiedDef(type, source))__        return this__    };a,specialized,simplified,mapping,source,method,takes,the,form,of,simple,properties,definition,field1,type,string,store,true;public,put,index,template,request,mapping,string,type,object,source,mapping,type,put,mapping,request,build,from,simplified,def,type,source,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, Object... source);1535723122;A specialized simplified mapping source method, takes the form of simple properties definition:_("field1", "type=string,store=true").;public PutIndexTemplateRequest mapping(String type, Object... source) {_        mapping(type, PutMappingRequest.buildFromSimplifiedDef(type, source))__        return this__    };a,specialized,simplified,mapping,source,method,takes,the,form,of,simple,properties,definition,field1,type,string,store,true;public,put,index,template,request,mapping,string,type,object,source,mapping,type,put,mapping,request,build,from,simplified,def,type,source,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, Object... source);1540486836;A specialized simplified mapping source method, takes the form of simple properties definition:_("field1", "type=string,store=true").;public PutIndexTemplateRequest mapping(String type, Object... source) {_        mapping(type, PutMappingRequest.buildFromSimplifiedDef(type, source))__        return this__    };a,specialized,simplified,mapping,source,method,takes,the,form,of,simple,properties,definition,field1,type,string,store,true;public,put,index,template,request,mapping,string,type,object,source,mapping,type,put,mapping,request,build,from,simplified,def,type,source,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, Object... source);1540583181;A specialized simplified mapping source method, takes the form of simple properties definition:_("field1", "type=string,store=true").;public PutIndexTemplateRequest mapping(String type, Object... source) {_        mapping(type, PutMappingRequest.buildFromSimplifiedDef(type, source))__        return this__    };a,specialized,simplified,mapping,source,method,takes,the,form,of,simple,properties,definition,field1,type,string,store,true;public,put,index,template,request,mapping,string,type,object,source,mapping,type,put,mapping,request,build,from,simplified,def,type,source,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, Object... source);1548265937;A specialized simplified mapping source method, takes the form of simple properties definition:_("field1", "type=string,store=true").;public PutIndexTemplateRequest mapping(String type, Object... source) {_        mapping(type, PutMappingRequest.buildFromSimplifiedDef(type, source))__        return this__    };a,specialized,simplified,mapping,source,method,takes,the,form,of,simple,properties,definition,field1,type,string,store,true;public,put,index,template,request,mapping,string,type,object,source,mapping,type,put,mapping,request,build,from,simplified,def,type,source,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest aliases(Map<String, ?> source);1531179852;Sets the aliases that will be associated with the index when it gets created;public PutIndexTemplateRequest aliases(Map<String, ?> source) {_        try {_            XContentBuilder builder = XContentFactory.jsonBuilder()__            builder.map(source)__            return aliases(BytesReference.bytes(builder))__        } catch (IOException e) {_            throw new ElasticsearchGenerationException("Failed to generate [" + source + "]", e)__        }_    };sets,the,aliases,that,will,be,associated,with,the,index,when,it,gets,created;public,put,index,template,request,aliases,map,string,source,try,xcontent,builder,builder,xcontent,factory,json,builder,builder,map,source,return,aliases,bytes,reference,bytes,builder,catch,ioexception,e,throw,new,elasticsearch,generation,exception,failed,to,generate,source,e
PutIndexTemplateRequest -> public PutIndexTemplateRequest aliases(Map<String, ?> source);1535139672;Sets the aliases that will be associated with the index when it gets created;public PutIndexTemplateRequest aliases(Map<String, ?> source) {_        try {_            XContentBuilder builder = XContentFactory.jsonBuilder()__            builder.map(source)__            return aliases(BytesReference.bytes(builder))__        } catch (IOException e) {_            throw new ElasticsearchGenerationException("Failed to generate [" + source + "]", e)__        }_    };sets,the,aliases,that,will,be,associated,with,the,index,when,it,gets,created;public,put,index,template,request,aliases,map,string,source,try,xcontent,builder,builder,xcontent,factory,json,builder,builder,map,source,return,aliases,bytes,reference,bytes,builder,catch,ioexception,e,throw,new,elasticsearch,generation,exception,failed,to,generate,source,e
PutIndexTemplateRequest -> public PutIndexTemplateRequest aliases(Map<String, ?> source);1535666657;Sets the aliases that will be associated with the index when it gets created;public PutIndexTemplateRequest aliases(Map<String, ?> source) {_        try {_            XContentBuilder builder = XContentFactory.jsonBuilder()__            builder.map(source)__            return aliases(BytesReference.bytes(builder))__        } catch (IOException e) {_            throw new ElasticsearchGenerationException("Failed to generate [" + source + "]", e)__        }_    };sets,the,aliases,that,will,be,associated,with,the,index,when,it,gets,created;public,put,index,template,request,aliases,map,string,source,try,xcontent,builder,builder,xcontent,factory,json,builder,builder,map,source,return,aliases,bytes,reference,bytes,builder,catch,ioexception,e,throw,new,elasticsearch,generation,exception,failed,to,generate,source,e
PutIndexTemplateRequest -> public PutIndexTemplateRequest aliases(Map<String, ?> source);1535723122;Sets the aliases that will be associated with the index when it gets created;public PutIndexTemplateRequest aliases(Map<String, ?> source) {_        try {_            XContentBuilder builder = XContentFactory.jsonBuilder()__            builder.map(source)__            return aliases(BytesReference.bytes(builder))__        } catch (IOException e) {_            throw new ElasticsearchGenerationException("Failed to generate [" + source + "]", e)__        }_    };sets,the,aliases,that,will,be,associated,with,the,index,when,it,gets,created;public,put,index,template,request,aliases,map,string,source,try,xcontent,builder,builder,xcontent,factory,json,builder,builder,map,source,return,aliases,bytes,reference,bytes,builder,catch,ioexception,e,throw,new,elasticsearch,generation,exception,failed,to,generate,source,e
PutIndexTemplateRequest -> public PutIndexTemplateRequest aliases(Map<String, ?> source);1540486836;Sets the aliases that will be associated with the index when it gets created;public PutIndexTemplateRequest aliases(Map<String, ?> source) {_        try {_            XContentBuilder builder = XContentFactory.jsonBuilder()__            builder.map(source)__            return aliases(BytesReference.bytes(builder))__        } catch (IOException e) {_            throw new ElasticsearchGenerationException("Failed to generate [" + source + "]", e)__        }_    };sets,the,aliases,that,will,be,associated,with,the,index,when,it,gets,created;public,put,index,template,request,aliases,map,string,source,try,xcontent,builder,builder,xcontent,factory,json,builder,builder,map,source,return,aliases,bytes,reference,bytes,builder,catch,ioexception,e,throw,new,elasticsearch,generation,exception,failed,to,generate,source,e
PutIndexTemplateRequest -> public PutIndexTemplateRequest aliases(Map<String, ?> source);1540583181;Sets the aliases that will be associated with the index when it gets created;public PutIndexTemplateRequest aliases(Map<String, ?> source) {_        try {_            XContentBuilder builder = XContentFactory.jsonBuilder()__            builder.map(source)__            return aliases(BytesReference.bytes(builder))__        } catch (IOException e) {_            throw new ElasticsearchGenerationException("Failed to generate [" + source + "]", e)__        }_    };sets,the,aliases,that,will,be,associated,with,the,index,when,it,gets,created;public,put,index,template,request,aliases,map,string,source,try,xcontent,builder,builder,xcontent,factory,json,builder,builder,map,source,return,aliases,bytes,reference,bytes,builder,catch,ioexception,e,throw,new,elasticsearch,generation,exception,failed,to,generate,source,e
PutIndexTemplateRequest -> public PutIndexTemplateRequest aliases(Map<String, ?> source);1548265937;Sets the aliases that will be associated with the index when it gets created;public PutIndexTemplateRequest aliases(Map<String, ?> source) {_        try {_            XContentBuilder builder = XContentFactory.jsonBuilder()__            builder.map(source)__            return aliases(BytesReference.bytes(builder))__        } catch (IOException e) {_            throw new ElasticsearchGenerationException("Failed to generate [" + source + "]", e)__        }_    };sets,the,aliases,that,will,be,associated,with,the,index,when,it,gets,created;public,put,index,template,request,aliases,map,string,source,try,xcontent,builder,builder,xcontent,factory,json,builder,builder,map,source,return,aliases,bytes,reference,bytes,builder,catch,ioexception,e,throw,new,elasticsearch,generation,exception,failed,to,generate,source,e
PutIndexTemplateRequest -> @SuppressWarnings("unchecked")     public PutIndexTemplateRequest aliases(Map source);1524684173;Sets the aliases that will be associated with the index when it gets created;@SuppressWarnings("unchecked")_    public PutIndexTemplateRequest aliases(Map source) {_        try {_            XContentBuilder builder = XContentFactory.jsonBuilder()__            builder.map(source)__            return aliases(BytesReference.bytes(builder))__        } catch (IOException e) {_            throw new ElasticsearchGenerationException("Failed to generate [" + source + "]", e)__        }_    };sets,the,aliases,that,will,be,associated,with,the,index,when,it,gets,created;suppress,warnings,unchecked,public,put,index,template,request,aliases,map,source,try,xcontent,builder,builder,xcontent,factory,json,builder,builder,map,source,return,aliases,bytes,reference,bytes,builder,catch,ioexception,e,throw,new,elasticsearch,generation,exception,failed,to,generate,source,e
PutIndexTemplateRequest -> @SuppressWarnings("unchecked")     public PutIndexTemplateRequest aliases(Map source);1525334055;Sets the aliases that will be associated with the index when it gets created;@SuppressWarnings("unchecked")_    public PutIndexTemplateRequest aliases(Map source) {_        try {_            XContentBuilder builder = XContentFactory.jsonBuilder()__            builder.map(source)__            return aliases(BytesReference.bytes(builder))__        } catch (IOException e) {_            throw new ElasticsearchGenerationException("Failed to generate [" + source + "]", e)__        }_    };sets,the,aliases,that,will,be,associated,with,the,index,when,it,gets,created;suppress,warnings,unchecked,public,put,index,template,request,aliases,map,source,try,xcontent,builder,builder,xcontent,factory,json,builder,builder,map,source,return,aliases,bytes,reference,bytes,builder,catch,ioexception,e,throw,new,elasticsearch,generation,exception,failed,to,generate,source,e
PutIndexTemplateRequest -> @SuppressWarnings("unchecked")     public PutIndexTemplateRequest aliases(Map source);1525645056;Sets the aliases that will be associated with the index when it gets created;@SuppressWarnings("unchecked")_    public PutIndexTemplateRequest aliases(Map source) {_        try {_            XContentBuilder builder = XContentFactory.jsonBuilder()__            builder.map(source)__            return aliases(BytesReference.bytes(builder))__        } catch (IOException e) {_            throw new ElasticsearchGenerationException("Failed to generate [" + source + "]", e)__        }_    };sets,the,aliases,that,will,be,associated,with,the,index,when,it,gets,created;suppress,warnings,unchecked,public,put,index,template,request,aliases,map,source,try,xcontent,builder,builder,xcontent,factory,json,builder,builder,map,source,return,aliases,bytes,reference,bytes,builder,catch,ioexception,e,throw,new,elasticsearch,generation,exception,failed,to,generate,source,e
PutIndexTemplateRequest -> @SuppressWarnings("unchecked")     public PutIndexTemplateRequest aliases(Map source);1526449283;Sets the aliases that will be associated with the index when it gets created;@SuppressWarnings("unchecked")_    public PutIndexTemplateRequest aliases(Map source) {_        try {_            XContentBuilder builder = XContentFactory.jsonBuilder()__            builder.map(source)__            return aliases(BytesReference.bytes(builder))__        } catch (IOException e) {_            throw new ElasticsearchGenerationException("Failed to generate [" + source + "]", e)__        }_    };sets,the,aliases,that,will,be,associated,with,the,index,when,it,gets,created;suppress,warnings,unchecked,public,put,index,template,request,aliases,map,source,try,xcontent,builder,builder,xcontent,factory,json,builder,builder,map,source,return,aliases,bytes,reference,bytes,builder,catch,ioexception,e,throw,new,elasticsearch,generation,exception,failed,to,generate,source,e
PutIndexTemplateRequest -> @SuppressWarnings("unchecked")     public PutIndexTemplateRequest aliases(Map source);1529916084;Sets the aliases that will be associated with the index when it gets created;@SuppressWarnings("unchecked")_    public PutIndexTemplateRequest aliases(Map source) {_        try {_            XContentBuilder builder = XContentFactory.jsonBuilder()__            builder.map(source)__            return aliases(BytesReference.bytes(builder))__        } catch (IOException e) {_            throw new ElasticsearchGenerationException("Failed to generate [" + source + "]", e)__        }_    };sets,the,aliases,that,will,be,associated,with,the,index,when,it,gets,created;suppress,warnings,unchecked,public,put,index,template,request,aliases,map,source,try,xcontent,builder,builder,xcontent,factory,json,builder,builder,map,source,return,aliases,bytes,reference,bytes,builder,catch,ioexception,e,throw,new,elasticsearch,generation,exception,failed,to,generate,source,e
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(BytesReference source, XContentType xContentType);1524684173;The template source definition.;public PutIndexTemplateRequest source(BytesReference source, XContentType xContentType) {_        return source(XContentHelper.convertToMap(source, true, xContentType).v2())__    };the,template,source,definition;public,put,index,template,request,source,bytes,reference,source,xcontent,type,x,content,type,return,source,xcontent,helper,convert,to,map,source,true,x,content,type,v2
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(BytesReference source, XContentType xContentType);1525334055;The template source definition.;public PutIndexTemplateRequest source(BytesReference source, XContentType xContentType) {_        return source(XContentHelper.convertToMap(source, true, xContentType).v2())__    };the,template,source,definition;public,put,index,template,request,source,bytes,reference,source,xcontent,type,x,content,type,return,source,xcontent,helper,convert,to,map,source,true,x,content,type,v2
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(BytesReference source, XContentType xContentType);1525645056;The template source definition.;public PutIndexTemplateRequest source(BytesReference source, XContentType xContentType) {_        return source(XContentHelper.convertToMap(source, true, xContentType).v2())__    };the,template,source,definition;public,put,index,template,request,source,bytes,reference,source,xcontent,type,x,content,type,return,source,xcontent,helper,convert,to,map,source,true,x,content,type,v2
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(BytesReference source, XContentType xContentType);1526449283;The template source definition.;public PutIndexTemplateRequest source(BytesReference source, XContentType xContentType) {_        return source(XContentHelper.convertToMap(source, true, xContentType).v2())__    };the,template,source,definition;public,put,index,template,request,source,bytes,reference,source,xcontent,type,x,content,type,return,source,xcontent,helper,convert,to,map,source,true,x,content,type,v2
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(BytesReference source, XContentType xContentType);1529916084;The template source definition.;public PutIndexTemplateRequest source(BytesReference source, XContentType xContentType) {_        return source(XContentHelper.convertToMap(source, true, xContentType).v2())__    };the,template,source,definition;public,put,index,template,request,source,bytes,reference,source,xcontent,type,x,content,type,return,source,xcontent,helper,convert,to,map,source,true,x,content,type,v2
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(BytesReference source, XContentType xContentType);1531179852;The template source definition.;public PutIndexTemplateRequest source(BytesReference source, XContentType xContentType) {_        return source(XContentHelper.convertToMap(source, true, xContentType).v2())__    };the,template,source,definition;public,put,index,template,request,source,bytes,reference,source,xcontent,type,x,content,type,return,source,xcontent,helper,convert,to,map,source,true,x,content,type,v2
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(BytesReference source, XContentType xContentType);1535139672;The template source definition.;public PutIndexTemplateRequest source(BytesReference source, XContentType xContentType) {_        return source(XContentHelper.convertToMap(source, true, xContentType).v2())__    };the,template,source,definition;public,put,index,template,request,source,bytes,reference,source,xcontent,type,x,content,type,return,source,xcontent,helper,convert,to,map,source,true,x,content,type,v2
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(BytesReference source, XContentType xContentType);1535666657;The template source definition.;public PutIndexTemplateRequest source(BytesReference source, XContentType xContentType) {_        return source(XContentHelper.convertToMap(source, true, xContentType).v2())__    };the,template,source,definition;public,put,index,template,request,source,bytes,reference,source,xcontent,type,x,content,type,return,source,xcontent,helper,convert,to,map,source,true,x,content,type,v2
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(BytesReference source, XContentType xContentType);1535723122;The template source definition.;public PutIndexTemplateRequest source(BytesReference source, XContentType xContentType) {_        return source(XContentHelper.convertToMap(source, true, xContentType).v2())__    };the,template,source,definition;public,put,index,template,request,source,bytes,reference,source,xcontent,type,x,content,type,return,source,xcontent,helper,convert,to,map,source,true,x,content,type,v2
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(BytesReference source, XContentType xContentType);1540486836;The template source definition.;public PutIndexTemplateRequest source(BytesReference source, XContentType xContentType) {_        return source(XContentHelper.convertToMap(source, true, xContentType).v2())__    };the,template,source,definition;public,put,index,template,request,source,bytes,reference,source,xcontent,type,x,content,type,return,source,xcontent,helper,convert,to,map,source,true,x,content,type,v2
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(BytesReference source, XContentType xContentType);1540583181;The template source definition.;public PutIndexTemplateRequest source(BytesReference source, XContentType xContentType) {_        return source(XContentHelper.convertToMap(source, true, xContentType).v2())__    };the,template,source,definition;public,put,index,template,request,source,bytes,reference,source,xcontent,type,x,content,type,return,source,xcontent,helper,convert,to,map,source,true,x,content,type,v2
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(BytesReference source, XContentType xContentType);1548265937;The template source definition.;public PutIndexTemplateRequest source(BytesReference source, XContentType xContentType) {_        return source(XContentHelper.convertToMap(source, true, xContentType).v2())__    };the,template,source,definition;public,put,index,template,request,source,bytes,reference,source,xcontent,type,x,content,type,return,source,xcontent,helper,convert,to,map,source,true,x,content,type,v2
PutIndexTemplateRequest -> @SuppressWarnings("unchecked")     public PutIndexTemplateRequest source(Map templateSource);1524684173;The template source definition.;@SuppressWarnings("unchecked")_    public PutIndexTemplateRequest source(Map templateSource) {_        Map<String, Object> source = templateSource__        for (Map.Entry<String, Object> entry : source.entrySet()) {_            String name = entry.getKey()__            if (name.equals("template")) {_                _                if(entry.getValue() instanceof String) {_                    DEPRECATION_LOGGER.deprecated("Deprecated field [template] used, replaced by [index_patterns]")__                    patterns(Collections.singletonList((String) entry.getValue()))__                }_            } else if (name.equals("index_patterns")) {_                if(entry.getValue() instanceof String) {_                    patterns(Collections.singletonList((String) entry.getValue()))__                } else if (entry.getValue() instanceof List) {_                    List<String> elements = ((List<?>) entry.getValue()).stream().map(Object::toString).collect(Collectors.toList())__                    patterns(elements)__                } else {_                    throw new IllegalArgumentException("Malformed [template] value, should be a string or a list of strings")__                }_            } else if (name.equals("order")) {_                order(XContentMapValues.nodeIntegerValue(entry.getValue(), order()))__            } else if ("version".equals(name)) {_                if ((entry.getValue() instanceof Integer) == false) {_                    throw new IllegalArgumentException("Malformed [version] value, should be an integer")__                }_                version((Integer)entry.getValue())__            } else if (name.equals("settings")) {_                if ((entry.getValue() instanceof Map) == false) {_                    throw new IllegalArgumentException("Malformed [settings] section, should include an inner object")__                }_                settings((Map<String, Object>) entry.getValue())__            } else if (name.equals("mappings")) {_                Map<String, Object> mappings = (Map<String, Object>) entry.getValue()__                for (Map.Entry<String, Object> entry1 : mappings.entrySet()) {_                    if (!(entry1.getValue() instanceof Map)) {_                        throw new IllegalArgumentException(_                            "Malformed [mappings] section for type [" + entry1.getKey() +_                                "], should include an inner object describing the mapping")__                    }_                    mapping(entry1.getKey(), (Map<String, Object>) entry1.getValue())__                }_            } else if (name.equals("aliases")) {_                aliases((Map<String, Object>) entry.getValue())__            } else {_                _                IndexMetaData.Custom proto = IndexMetaData.lookupPrototype(name)__                if (proto != null) {_                    try {_                        customs.put(name, proto.fromMap((Map<String, Object>) entry.getValue()))__                    } catch (IOException e) {_                        throw new ElasticsearchParseException("failed to parse custom metadata for [{}]", name)__                    }_                }_            }_        }_        return this__    };the,template,source,definition;suppress,warnings,unchecked,public,put,index,template,request,source,map,template,source,map,string,object,source,template,source,for,map,entry,string,object,entry,source,entry,set,string,name,entry,get,key,if,name,equals,template,if,entry,get,value,instanceof,string,deprecated,deprecated,field,template,used,replaced,by,patterns,collections,singleton,list,string,entry,get,value,else,if,name,equals,if,entry,get,value,instanceof,string,patterns,collections,singleton,list,string,entry,get,value,else,if,entry,get,value,instanceof,list,list,string,elements,list,entry,get,value,stream,map,object,to,string,collect,collectors,to,list,patterns,elements,else,throw,new,illegal,argument,exception,malformed,template,value,should,be,a,string,or,a,list,of,strings,else,if,name,equals,order,order,xcontent,map,values,node,integer,value,entry,get,value,order,else,if,version,equals,name,if,entry,get,value,instanceof,integer,false,throw,new,illegal,argument,exception,malformed,version,value,should,be,an,integer,version,integer,entry,get,value,else,if,name,equals,settings,if,entry,get,value,instanceof,map,false,throw,new,illegal,argument,exception,malformed,settings,section,should,include,an,inner,object,settings,map,string,object,entry,get,value,else,if,name,equals,mappings,map,string,object,mappings,map,string,object,entry,get,value,for,map,entry,string,object,entry1,mappings,entry,set,if,entry1,get,value,instanceof,map,throw,new,illegal,argument,exception,malformed,mappings,section,for,type,entry1,get,key,should,include,an,inner,object,describing,the,mapping,mapping,entry1,get,key,map,string,object,entry1,get,value,else,if,name,equals,aliases,aliases,map,string,object,entry,get,value,else,index,meta,data,custom,proto,index,meta,data,lookup,prototype,name,if,proto,null,try,customs,put,name,proto,from,map,map,string,object,entry,get,value,catch,ioexception,e,throw,new,elasticsearch,parse,exception,failed,to,parse,custom,metadata,for,name,return,this
PutIndexTemplateRequest -> @SuppressWarnings("unchecked")     public PutIndexTemplateRequest source(Map templateSource);1525334055;The template source definition.;@SuppressWarnings("unchecked")_    public PutIndexTemplateRequest source(Map templateSource) {_        Map<String, Object> source = templateSource__        for (Map.Entry<String, Object> entry : source.entrySet()) {_            String name = entry.getKey()__            if (name.equals("template")) {_                _                if(entry.getValue() instanceof String) {_                    DEPRECATION_LOGGER.deprecated("Deprecated field [template] used, replaced by [index_patterns]")__                    patterns(Collections.singletonList((String) entry.getValue()))__                }_            } else if (name.equals("index_patterns")) {_                if(entry.getValue() instanceof String) {_                    patterns(Collections.singletonList((String) entry.getValue()))__                } else if (entry.getValue() instanceof List) {_                    List<String> elements = ((List<?>) entry.getValue()).stream().map(Object::toString).collect(Collectors.toList())__                    patterns(elements)__                } else {_                    throw new IllegalArgumentException("Malformed [template] value, should be a string or a list of strings")__                }_            } else if (name.equals("order")) {_                order(XContentMapValues.nodeIntegerValue(entry.getValue(), order()))__            } else if ("version".equals(name)) {_                if ((entry.getValue() instanceof Integer) == false) {_                    throw new IllegalArgumentException("Malformed [version] value, should be an integer")__                }_                version((Integer)entry.getValue())__            } else if (name.equals("settings")) {_                if ((entry.getValue() instanceof Map) == false) {_                    throw new IllegalArgumentException("Malformed [settings] section, should include an inner object")__                }_                settings((Map<String, Object>) entry.getValue())__            } else if (name.equals("mappings")) {_                Map<String, Object> mappings = (Map<String, Object>) entry.getValue()__                for (Map.Entry<String, Object> entry1 : mappings.entrySet()) {_                    if (!(entry1.getValue() instanceof Map)) {_                        throw new IllegalArgumentException(_                            "Malformed [mappings] section for type [" + entry1.getKey() +_                                "], should include an inner object describing the mapping")__                    }_                    mapping(entry1.getKey(), (Map<String, Object>) entry1.getValue())__                }_            } else if (name.equals("aliases")) {_                aliases((Map<String, Object>) entry.getValue())__            } else {_                _                IndexMetaData.Custom proto = IndexMetaData.lookupPrototype(name)__                if (proto != null) {_                    try {_                        customs.put(name, proto.fromMap((Map<String, Object>) entry.getValue()))__                    } catch (IOException e) {_                        throw new ElasticsearchParseException("failed to parse custom metadata for [{}]", name)__                    }_                }_            }_        }_        return this__    };the,template,source,definition;suppress,warnings,unchecked,public,put,index,template,request,source,map,template,source,map,string,object,source,template,source,for,map,entry,string,object,entry,source,entry,set,string,name,entry,get,key,if,name,equals,template,if,entry,get,value,instanceof,string,deprecated,deprecated,field,template,used,replaced,by,patterns,collections,singleton,list,string,entry,get,value,else,if,name,equals,if,entry,get,value,instanceof,string,patterns,collections,singleton,list,string,entry,get,value,else,if,entry,get,value,instanceof,list,list,string,elements,list,entry,get,value,stream,map,object,to,string,collect,collectors,to,list,patterns,elements,else,throw,new,illegal,argument,exception,malformed,template,value,should,be,a,string,or,a,list,of,strings,else,if,name,equals,order,order,xcontent,map,values,node,integer,value,entry,get,value,order,else,if,version,equals,name,if,entry,get,value,instanceof,integer,false,throw,new,illegal,argument,exception,malformed,version,value,should,be,an,integer,version,integer,entry,get,value,else,if,name,equals,settings,if,entry,get,value,instanceof,map,false,throw,new,illegal,argument,exception,malformed,settings,section,should,include,an,inner,object,settings,map,string,object,entry,get,value,else,if,name,equals,mappings,map,string,object,mappings,map,string,object,entry,get,value,for,map,entry,string,object,entry1,mappings,entry,set,if,entry1,get,value,instanceof,map,throw,new,illegal,argument,exception,malformed,mappings,section,for,type,entry1,get,key,should,include,an,inner,object,describing,the,mapping,mapping,entry1,get,key,map,string,object,entry1,get,value,else,if,name,equals,aliases,aliases,map,string,object,entry,get,value,else,index,meta,data,custom,proto,index,meta,data,lookup,prototype,name,if,proto,null,try,customs,put,name,proto,from,map,map,string,object,entry,get,value,catch,ioexception,e,throw,new,elasticsearch,parse,exception,failed,to,parse,custom,metadata,for,name,return,this
PutIndexTemplateRequest -> @SuppressWarnings("unchecked")     public PutIndexTemplateRequest source(Map templateSource);1525645056;The template source definition.;@SuppressWarnings("unchecked")_    public PutIndexTemplateRequest source(Map templateSource) {_        Map<String, Object> source = templateSource__        for (Map.Entry<String, Object> entry : source.entrySet()) {_            String name = entry.getKey()__            if (name.equals("template")) {_                _                if(entry.getValue() instanceof String) {_                    DEPRECATION_LOGGER.deprecated("Deprecated field [template] used, replaced by [index_patterns]")__                    patterns(Collections.singletonList((String) entry.getValue()))__                }_            } else if (name.equals("index_patterns")) {_                if(entry.getValue() instanceof String) {_                    patterns(Collections.singletonList((String) entry.getValue()))__                } else if (entry.getValue() instanceof List) {_                    List<String> elements = ((List<?>) entry.getValue()).stream().map(Object::toString).collect(Collectors.toList())__                    patterns(elements)__                } else {_                    throw new IllegalArgumentException("Malformed [template] value, should be a string or a list of strings")__                }_            } else if (name.equals("order")) {_                order(XContentMapValues.nodeIntegerValue(entry.getValue(), order()))__            } else if ("version".equals(name)) {_                if ((entry.getValue() instanceof Integer) == false) {_                    throw new IllegalArgumentException("Malformed [version] value, should be an integer")__                }_                version((Integer)entry.getValue())__            } else if (name.equals("settings")) {_                if ((entry.getValue() instanceof Map) == false) {_                    throw new IllegalArgumentException("Malformed [settings] section, should include an inner object")__                }_                settings((Map<String, Object>) entry.getValue())__            } else if (name.equals("mappings")) {_                Map<String, Object> mappings = (Map<String, Object>) entry.getValue()__                for (Map.Entry<String, Object> entry1 : mappings.entrySet()) {_                    if (!(entry1.getValue() instanceof Map)) {_                        throw new IllegalArgumentException(_                            "Malformed [mappings] section for type [" + entry1.getKey() +_                                "], should include an inner object describing the mapping")__                    }_                    mapping(entry1.getKey(), (Map<String, Object>) entry1.getValue())__                }_            } else if (name.equals("aliases")) {_                aliases((Map<String, Object>) entry.getValue())__            } else {_                _                IndexMetaData.Custom proto = IndexMetaData.lookupPrototype(name)__                if (proto != null) {_                    try {_                        customs.put(name, proto.fromMap((Map<String, Object>) entry.getValue()))__                    } catch (IOException e) {_                        throw new ElasticsearchParseException("failed to parse custom metadata for [{}]", name)__                    }_                }_            }_        }_        return this__    };the,template,source,definition;suppress,warnings,unchecked,public,put,index,template,request,source,map,template,source,map,string,object,source,template,source,for,map,entry,string,object,entry,source,entry,set,string,name,entry,get,key,if,name,equals,template,if,entry,get,value,instanceof,string,deprecated,deprecated,field,template,used,replaced,by,patterns,collections,singleton,list,string,entry,get,value,else,if,name,equals,if,entry,get,value,instanceof,string,patterns,collections,singleton,list,string,entry,get,value,else,if,entry,get,value,instanceof,list,list,string,elements,list,entry,get,value,stream,map,object,to,string,collect,collectors,to,list,patterns,elements,else,throw,new,illegal,argument,exception,malformed,template,value,should,be,a,string,or,a,list,of,strings,else,if,name,equals,order,order,xcontent,map,values,node,integer,value,entry,get,value,order,else,if,version,equals,name,if,entry,get,value,instanceof,integer,false,throw,new,illegal,argument,exception,malformed,version,value,should,be,an,integer,version,integer,entry,get,value,else,if,name,equals,settings,if,entry,get,value,instanceof,map,false,throw,new,illegal,argument,exception,malformed,settings,section,should,include,an,inner,object,settings,map,string,object,entry,get,value,else,if,name,equals,mappings,map,string,object,mappings,map,string,object,entry,get,value,for,map,entry,string,object,entry1,mappings,entry,set,if,entry1,get,value,instanceof,map,throw,new,illegal,argument,exception,malformed,mappings,section,for,type,entry1,get,key,should,include,an,inner,object,describing,the,mapping,mapping,entry1,get,key,map,string,object,entry1,get,value,else,if,name,equals,aliases,aliases,map,string,object,entry,get,value,else,index,meta,data,custom,proto,index,meta,data,lookup,prototype,name,if,proto,null,try,customs,put,name,proto,from,map,map,string,object,entry,get,value,catch,ioexception,e,throw,new,elasticsearch,parse,exception,failed,to,parse,custom,metadata,for,name,return,this
PutIndexTemplateRequest -> @SuppressWarnings("unchecked")     public PutIndexTemplateRequest source(Map templateSource);1526449283;The template source definition.;@SuppressWarnings("unchecked")_    public PutIndexTemplateRequest source(Map templateSource) {_        Map<String, Object> source = templateSource__        for (Map.Entry<String, Object> entry : source.entrySet()) {_            String name = entry.getKey()__            if (name.equals("template")) {_                _                if(entry.getValue() instanceof String) {_                    DEPRECATION_LOGGER.deprecated("Deprecated field [template] used, replaced by [index_patterns]")__                    patterns(Collections.singletonList((String) entry.getValue()))__                }_            } else if (name.equals("index_patterns")) {_                if(entry.getValue() instanceof String) {_                    patterns(Collections.singletonList((String) entry.getValue()))__                } else if (entry.getValue() instanceof List) {_                    List<String> elements = ((List<?>) entry.getValue()).stream().map(Object::toString).collect(Collectors.toList())__                    patterns(elements)__                } else {_                    throw new IllegalArgumentException("Malformed [template] value, should be a string or a list of strings")__                }_            } else if (name.equals("order")) {_                order(XContentMapValues.nodeIntegerValue(entry.getValue(), order()))__            } else if ("version".equals(name)) {_                if ((entry.getValue() instanceof Integer) == false) {_                    throw new IllegalArgumentException("Malformed [version] value, should be an integer")__                }_                version((Integer)entry.getValue())__            } else if (name.equals("settings")) {_                if ((entry.getValue() instanceof Map) == false) {_                    throw new IllegalArgumentException("Malformed [settings] section, should include an inner object")__                }_                settings((Map<String, Object>) entry.getValue())__            } else if (name.equals("mappings")) {_                Map<String, Object> mappings = (Map<String, Object>) entry.getValue()__                for (Map.Entry<String, Object> entry1 : mappings.entrySet()) {_                    if (!(entry1.getValue() instanceof Map)) {_                        throw new IllegalArgumentException(_                            "Malformed [mappings] section for type [" + entry1.getKey() +_                                "], should include an inner object describing the mapping")__                    }_                    mapping(entry1.getKey(), (Map<String, Object>) entry1.getValue())__                }_            } else if (name.equals("aliases")) {_                aliases((Map<String, Object>) entry.getValue())__            } else {_                _                IndexMetaData.Custom proto = IndexMetaData.lookupPrototype(name)__                if (proto != null) {_                    try {_                        customs.put(name, proto.fromMap((Map<String, Object>) entry.getValue()))__                    } catch (IOException e) {_                        throw new ElasticsearchParseException("failed to parse custom metadata for [{}]", name)__                    }_                }_            }_        }_        return this__    };the,template,source,definition;suppress,warnings,unchecked,public,put,index,template,request,source,map,template,source,map,string,object,source,template,source,for,map,entry,string,object,entry,source,entry,set,string,name,entry,get,key,if,name,equals,template,if,entry,get,value,instanceof,string,deprecated,deprecated,field,template,used,replaced,by,patterns,collections,singleton,list,string,entry,get,value,else,if,name,equals,if,entry,get,value,instanceof,string,patterns,collections,singleton,list,string,entry,get,value,else,if,entry,get,value,instanceof,list,list,string,elements,list,entry,get,value,stream,map,object,to,string,collect,collectors,to,list,patterns,elements,else,throw,new,illegal,argument,exception,malformed,template,value,should,be,a,string,or,a,list,of,strings,else,if,name,equals,order,order,xcontent,map,values,node,integer,value,entry,get,value,order,else,if,version,equals,name,if,entry,get,value,instanceof,integer,false,throw,new,illegal,argument,exception,malformed,version,value,should,be,an,integer,version,integer,entry,get,value,else,if,name,equals,settings,if,entry,get,value,instanceof,map,false,throw,new,illegal,argument,exception,malformed,settings,section,should,include,an,inner,object,settings,map,string,object,entry,get,value,else,if,name,equals,mappings,map,string,object,mappings,map,string,object,entry,get,value,for,map,entry,string,object,entry1,mappings,entry,set,if,entry1,get,value,instanceof,map,throw,new,illegal,argument,exception,malformed,mappings,section,for,type,entry1,get,key,should,include,an,inner,object,describing,the,mapping,mapping,entry1,get,key,map,string,object,entry1,get,value,else,if,name,equals,aliases,aliases,map,string,object,entry,get,value,else,index,meta,data,custom,proto,index,meta,data,lookup,prototype,name,if,proto,null,try,customs,put,name,proto,from,map,map,string,object,entry,get,value,catch,ioexception,e,throw,new,elasticsearch,parse,exception,failed,to,parse,custom,metadata,for,name,return,this
PutIndexTemplateRequest -> @SuppressWarnings("unchecked")     public PutIndexTemplateRequest source(Map templateSource);1529916084;The template source definition.;@SuppressWarnings("unchecked")_    public PutIndexTemplateRequest source(Map templateSource) {_        Map<String, Object> source = templateSource__        for (Map.Entry<String, Object> entry : source.entrySet()) {_            String name = entry.getKey()__            if (name.equals("template")) {_                _                if(entry.getValue() instanceof String) {_                    DEPRECATION_LOGGER.deprecated("Deprecated field [template] used, replaced by [index_patterns]")__                    patterns(Collections.singletonList((String) entry.getValue()))__                }_            } else if (name.equals("index_patterns")) {_                if(entry.getValue() instanceof String) {_                    patterns(Collections.singletonList((String) entry.getValue()))__                } else if (entry.getValue() instanceof List) {_                    List<String> elements = ((List<?>) entry.getValue()).stream().map(Object::toString).collect(Collectors.toList())__                    patterns(elements)__                } else {_                    throw new IllegalArgumentException("Malformed [template] value, should be a string or a list of strings")__                }_            } else if (name.equals("order")) {_                order(XContentMapValues.nodeIntegerValue(entry.getValue(), order()))__            } else if ("version".equals(name)) {_                if ((entry.getValue() instanceof Integer) == false) {_                    throw new IllegalArgumentException("Malformed [version] value, should be an integer")__                }_                version((Integer)entry.getValue())__            } else if (name.equals("settings")) {_                if ((entry.getValue() instanceof Map) == false) {_                    throw new IllegalArgumentException("Malformed [settings] section, should include an inner object")__                }_                settings((Map<String, Object>) entry.getValue())__            } else if (name.equals("mappings")) {_                Map<String, Object> mappings = (Map<String, Object>) entry.getValue()__                for (Map.Entry<String, Object> entry1 : mappings.entrySet()) {_                    if (!(entry1.getValue() instanceof Map)) {_                        throw new IllegalArgumentException(_                            "Malformed [mappings] section for type [" + entry1.getKey() +_                                "], should include an inner object describing the mapping")__                    }_                    mapping(entry1.getKey(), (Map<String, Object>) entry1.getValue())__                }_            } else if (name.equals("aliases")) {_                aliases((Map<String, Object>) entry.getValue())__            } else {_                _                IndexMetaData.Custom proto = IndexMetaData.lookupPrototype(name)__                if (proto != null) {_                    try {_                        customs.put(name, proto.fromMap((Map<String, Object>) entry.getValue()))__                    } catch (IOException e) {_                        throw new ElasticsearchParseException("failed to parse custom metadata for [{}]", name)__                    }_                }_            }_        }_        return this__    };the,template,source,definition;suppress,warnings,unchecked,public,put,index,template,request,source,map,template,source,map,string,object,source,template,source,for,map,entry,string,object,entry,source,entry,set,string,name,entry,get,key,if,name,equals,template,if,entry,get,value,instanceof,string,deprecated,deprecated,field,template,used,replaced,by,patterns,collections,singleton,list,string,entry,get,value,else,if,name,equals,if,entry,get,value,instanceof,string,patterns,collections,singleton,list,string,entry,get,value,else,if,entry,get,value,instanceof,list,list,string,elements,list,entry,get,value,stream,map,object,to,string,collect,collectors,to,list,patterns,elements,else,throw,new,illegal,argument,exception,malformed,template,value,should,be,a,string,or,a,list,of,strings,else,if,name,equals,order,order,xcontent,map,values,node,integer,value,entry,get,value,order,else,if,version,equals,name,if,entry,get,value,instanceof,integer,false,throw,new,illegal,argument,exception,malformed,version,value,should,be,an,integer,version,integer,entry,get,value,else,if,name,equals,settings,if,entry,get,value,instanceof,map,false,throw,new,illegal,argument,exception,malformed,settings,section,should,include,an,inner,object,settings,map,string,object,entry,get,value,else,if,name,equals,mappings,map,string,object,mappings,map,string,object,entry,get,value,for,map,entry,string,object,entry1,mappings,entry,set,if,entry1,get,value,instanceof,map,throw,new,illegal,argument,exception,malformed,mappings,section,for,type,entry1,get,key,should,include,an,inner,object,describing,the,mapping,mapping,entry1,get,key,map,string,object,entry1,get,value,else,if,name,equals,aliases,aliases,map,string,object,entry,get,value,else,index,meta,data,custom,proto,index,meta,data,lookup,prototype,name,if,proto,null,try,customs,put,name,proto,from,map,map,string,object,entry,get,value,catch,ioexception,e,throw,new,elasticsearch,parse,exception,failed,to,parse,custom,metadata,for,name,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest alias(Alias alias);1524684173;Adds an alias that will be added when the index gets created.__@param alias   The metadata for the new alias_@return  the index template creation request;public PutIndexTemplateRequest alias(Alias alias) {_        aliases.add(alias)__        return this__    };adds,an,alias,that,will,be,added,when,the,index,gets,created,param,alias,the,metadata,for,the,new,alias,return,the,index,template,creation,request;public,put,index,template,request,alias,alias,alias,aliases,add,alias,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest alias(Alias alias);1525334055;Adds an alias that will be added when the index gets created.__@param alias   The metadata for the new alias_@return  the index template creation request;public PutIndexTemplateRequest alias(Alias alias) {_        aliases.add(alias)__        return this__    };adds,an,alias,that,will,be,added,when,the,index,gets,created,param,alias,the,metadata,for,the,new,alias,return,the,index,template,creation,request;public,put,index,template,request,alias,alias,alias,aliases,add,alias,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest alias(Alias alias);1525645056;Adds an alias that will be added when the index gets created.__@param alias   The metadata for the new alias_@return  the index template creation request;public PutIndexTemplateRequest alias(Alias alias) {_        aliases.add(alias)__        return this__    };adds,an,alias,that,will,be,added,when,the,index,gets,created,param,alias,the,metadata,for,the,new,alias,return,the,index,template,creation,request;public,put,index,template,request,alias,alias,alias,aliases,add,alias,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest alias(Alias alias);1526449283;Adds an alias that will be added when the index gets created.__@param alias   The metadata for the new alias_@return  the index template creation request;public PutIndexTemplateRequest alias(Alias alias) {_        aliases.add(alias)__        return this__    };adds,an,alias,that,will,be,added,when,the,index,gets,created,param,alias,the,metadata,for,the,new,alias,return,the,index,template,creation,request;public,put,index,template,request,alias,alias,alias,aliases,add,alias,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest alias(Alias alias);1529916084;Adds an alias that will be added when the index gets created.__@param alias   The metadata for the new alias_@return  the index template creation request;public PutIndexTemplateRequest alias(Alias alias) {_        aliases.add(alias)__        return this__    };adds,an,alias,that,will,be,added,when,the,index,gets,created,param,alias,the,metadata,for,the,new,alias,return,the,index,template,creation,request;public,put,index,template,request,alias,alias,alias,aliases,add,alias,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest alias(Alias alias);1531179852;Adds an alias that will be added when the index gets created.__@param alias   The metadata for the new alias_@return  the index template creation request;public PutIndexTemplateRequest alias(Alias alias) {_        aliases.add(alias)__        return this__    };adds,an,alias,that,will,be,added,when,the,index,gets,created,param,alias,the,metadata,for,the,new,alias,return,the,index,template,creation,request;public,put,index,template,request,alias,alias,alias,aliases,add,alias,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest alias(Alias alias);1535139672;Adds an alias that will be added when the index gets created.__@param alias   The metadata for the new alias_@return  the index template creation request;public PutIndexTemplateRequest alias(Alias alias) {_        aliases.add(alias)__        return this__    };adds,an,alias,that,will,be,added,when,the,index,gets,created,param,alias,the,metadata,for,the,new,alias,return,the,index,template,creation,request;public,put,index,template,request,alias,alias,alias,aliases,add,alias,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest alias(Alias alias);1535666657;Adds an alias that will be added when the index gets created.__@param alias   The metadata for the new alias_@return  the index template creation request;public PutIndexTemplateRequest alias(Alias alias) {_        aliases.add(alias)__        return this__    };adds,an,alias,that,will,be,added,when,the,index,gets,created,param,alias,the,metadata,for,the,new,alias,return,the,index,template,creation,request;public,put,index,template,request,alias,alias,alias,aliases,add,alias,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest alias(Alias alias);1535723122;Adds an alias that will be added when the index gets created.__@param alias   The metadata for the new alias_@return  the index template creation request;public PutIndexTemplateRequest alias(Alias alias) {_        aliases.add(alias)__        return this__    };adds,an,alias,that,will,be,added,when,the,index,gets,created,param,alias,the,metadata,for,the,new,alias,return,the,index,template,creation,request;public,put,index,template,request,alias,alias,alias,aliases,add,alias,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest alias(Alias alias);1540486836;Adds an alias that will be added when the index gets created.__@param alias   The metadata for the new alias_@return  the index template creation request;public PutIndexTemplateRequest alias(Alias alias) {_        aliases.add(alias)__        return this__    };adds,an,alias,that,will,be,added,when,the,index,gets,created,param,alias,the,metadata,for,the,new,alias,return,the,index,template,creation,request;public,put,index,template,request,alias,alias,alias,aliases,add,alias,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest alias(Alias alias);1540583181;Adds an alias that will be added when the index gets created.__@param alias   The metadata for the new alias_@return  the index template creation request;public PutIndexTemplateRequest alias(Alias alias) {_        aliases.add(alias)__        return this__    };adds,an,alias,that,will,be,added,when,the,index,gets,created,param,alias,the,metadata,for,the,new,alias,return,the,index,template,creation,request;public,put,index,template,request,alias,alias,alias,aliases,add,alias,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest alias(Alias alias);1548265937;Adds an alias that will be added when the index gets created.__@param alias   The metadata for the new alias_@return  the index template creation request;public PutIndexTemplateRequest alias(Alias alias) {_        aliases.add(alias)__        return this__    };adds,an,alias,that,will,be,added,when,the,index,gets,created,param,alias,the,metadata,for,the,new,alias,return,the,index,template,creation,request;public,put,index,template,request,alias,alias,alias,aliases,add,alias,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, String source, XContentType xContentType);1524684173;Adds mapping that will be added when the index gets created.__@param type   The mapping type_@param source The mapping source_@param xContentType The type of content contained within the source;public PutIndexTemplateRequest mapping(String type, String source, XContentType xContentType) {_        return mapping(type, new BytesArray(source), xContentType)__    };adds,mapping,that,will,be,added,when,the,index,gets,created,param,type,the,mapping,type,param,source,the,mapping,source,param,x,content,type,the,type,of,content,contained,within,the,source;public,put,index,template,request,mapping,string,type,string,source,xcontent,type,x,content,type,return,mapping,type,new,bytes,array,source,x,content,type
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, String source, XContentType xContentType);1525334055;Adds mapping that will be added when the index gets created.__@param type   The mapping type_@param source The mapping source_@param xContentType The type of content contained within the source;public PutIndexTemplateRequest mapping(String type, String source, XContentType xContentType) {_        return mapping(type, new BytesArray(source), xContentType)__    };adds,mapping,that,will,be,added,when,the,index,gets,created,param,type,the,mapping,type,param,source,the,mapping,source,param,x,content,type,the,type,of,content,contained,within,the,source;public,put,index,template,request,mapping,string,type,string,source,xcontent,type,x,content,type,return,mapping,type,new,bytes,array,source,x,content,type
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, String source, XContentType xContentType);1525645056;Adds mapping that will be added when the index gets created.__@param type   The mapping type_@param source The mapping source_@param xContentType The type of content contained within the source;public PutIndexTemplateRequest mapping(String type, String source, XContentType xContentType) {_        return mapping(type, new BytesArray(source), xContentType)__    };adds,mapping,that,will,be,added,when,the,index,gets,created,param,type,the,mapping,type,param,source,the,mapping,source,param,x,content,type,the,type,of,content,contained,within,the,source;public,put,index,template,request,mapping,string,type,string,source,xcontent,type,x,content,type,return,mapping,type,new,bytes,array,source,x,content,type
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, String source, XContentType xContentType);1526449283;Adds mapping that will be added when the index gets created.__@param type   The mapping type_@param source The mapping source_@param xContentType The type of content contained within the source;public PutIndexTemplateRequest mapping(String type, String source, XContentType xContentType) {_        return mapping(type, new BytesArray(source), xContentType)__    };adds,mapping,that,will,be,added,when,the,index,gets,created,param,type,the,mapping,type,param,source,the,mapping,source,param,x,content,type,the,type,of,content,contained,within,the,source;public,put,index,template,request,mapping,string,type,string,source,xcontent,type,x,content,type,return,mapping,type,new,bytes,array,source,x,content,type
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, String source, XContentType xContentType);1529916084;Adds mapping that will be added when the index gets created.__@param type   The mapping type_@param source The mapping source_@param xContentType The type of content contained within the source;public PutIndexTemplateRequest mapping(String type, String source, XContentType xContentType) {_        return mapping(type, new BytesArray(source), xContentType)__    };adds,mapping,that,will,be,added,when,the,index,gets,created,param,type,the,mapping,type,param,source,the,mapping,source,param,x,content,type,the,type,of,content,contained,within,the,source;public,put,index,template,request,mapping,string,type,string,source,xcontent,type,x,content,type,return,mapping,type,new,bytes,array,source,x,content,type
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, String source, XContentType xContentType);1531179852;Adds mapping that will be added when the index gets created.__@param type   The mapping type_@param source The mapping source_@param xContentType The type of content contained within the source;public PutIndexTemplateRequest mapping(String type, String source, XContentType xContentType) {_        return mapping(type, new BytesArray(source), xContentType)__    };adds,mapping,that,will,be,added,when,the,index,gets,created,param,type,the,mapping,type,param,source,the,mapping,source,param,x,content,type,the,type,of,content,contained,within,the,source;public,put,index,template,request,mapping,string,type,string,source,xcontent,type,x,content,type,return,mapping,type,new,bytes,array,source,x,content,type
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, String source, XContentType xContentType);1535139672;Adds mapping that will be added when the index gets created.__@param type   The mapping type_@param source The mapping source_@param xContentType The type of content contained within the source;public PutIndexTemplateRequest mapping(String type, String source, XContentType xContentType) {_        return mapping(type, new BytesArray(source), xContentType)__    };adds,mapping,that,will,be,added,when,the,index,gets,created,param,type,the,mapping,type,param,source,the,mapping,source,param,x,content,type,the,type,of,content,contained,within,the,source;public,put,index,template,request,mapping,string,type,string,source,xcontent,type,x,content,type,return,mapping,type,new,bytes,array,source,x,content,type
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, String source, XContentType xContentType);1535666657;Adds mapping that will be added when the index gets created.__@param type   The mapping type_@param source The mapping source_@param xContentType The type of content contained within the source;public PutIndexTemplateRequest mapping(String type, String source, XContentType xContentType) {_        return mapping(type, new BytesArray(source), xContentType)__    };adds,mapping,that,will,be,added,when,the,index,gets,created,param,type,the,mapping,type,param,source,the,mapping,source,param,x,content,type,the,type,of,content,contained,within,the,source;public,put,index,template,request,mapping,string,type,string,source,xcontent,type,x,content,type,return,mapping,type,new,bytes,array,source,x,content,type
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, String source, XContentType xContentType);1535723122;Adds mapping that will be added when the index gets created.__@param type   The mapping type_@param source The mapping source_@param xContentType The type of content contained within the source;public PutIndexTemplateRequest mapping(String type, String source, XContentType xContentType) {_        return mapping(type, new BytesArray(source), xContentType)__    };adds,mapping,that,will,be,added,when,the,index,gets,created,param,type,the,mapping,type,param,source,the,mapping,source,param,x,content,type,the,type,of,content,contained,within,the,source;public,put,index,template,request,mapping,string,type,string,source,xcontent,type,x,content,type,return,mapping,type,new,bytes,array,source,x,content,type
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, String source, XContentType xContentType);1540486836;Adds mapping that will be added when the index gets created.__@param type   The mapping type_@param source The mapping source_@param xContentType The type of content contained within the source;public PutIndexTemplateRequest mapping(String type, String source, XContentType xContentType) {_        return mapping(type, new BytesArray(source), xContentType)__    };adds,mapping,that,will,be,added,when,the,index,gets,created,param,type,the,mapping,type,param,source,the,mapping,source,param,x,content,type,the,type,of,content,contained,within,the,source;public,put,index,template,request,mapping,string,type,string,source,xcontent,type,x,content,type,return,mapping,type,new,bytes,array,source,x,content,type
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, String source, XContentType xContentType);1540583181;Adds mapping that will be added when the index gets created.__@param type   The mapping type_@param source The mapping source_@param xContentType The type of content contained within the source;public PutIndexTemplateRequest mapping(String type, String source, XContentType xContentType) {_        return mapping(type, new BytesArray(source), xContentType)__    };adds,mapping,that,will,be,added,when,the,index,gets,created,param,type,the,mapping,type,param,source,the,mapping,source,param,x,content,type,the,type,of,content,contained,within,the,source;public,put,index,template,request,mapping,string,type,string,source,xcontent,type,x,content,type,return,mapping,type,new,bytes,array,source,x,content,type
PutIndexTemplateRequest -> public PutIndexTemplateRequest mapping(String type, String source, XContentType xContentType);1548265937;Adds mapping that will be added when the index gets created.__@param type   The mapping type_@param source The mapping source_@param xContentType The type of content contained within the source;public PutIndexTemplateRequest mapping(String type, String source, XContentType xContentType) {_        return mapping(type, new BytesArray(source), xContentType)__    };adds,mapping,that,will,be,added,when,the,index,gets,created,param,type,the,mapping,type,param,source,the,mapping,source,param,x,content,type,the,type,of,content,contained,within,the,source;public,put,index,template,request,mapping,string,type,string,source,xcontent,type,x,content,type,return,mapping,type,new,bytes,array,source,x,content,type
PutIndexTemplateRequest -> public PutIndexTemplateRequest aliases(BytesReference source);1524684173;Sets the aliases that will be associated with the index when it gets created;public PutIndexTemplateRequest aliases(BytesReference source) {_        _        try (XContentParser parser = XContentHelper_                .createParser(NamedXContentRegistry.EMPTY, LoggingDeprecationHandler.INSTANCE, source)) {_            _            parser.nextToken()__            while ((parser.nextToken()) != XContentParser.Token.END_OBJECT) {_                alias(Alias.fromXContent(parser))__            }_            return this__        } catch(IOException e) {_            throw new ElasticsearchParseException("Failed to parse aliases", e)__        }_    };sets,the,aliases,that,will,be,associated,with,the,index,when,it,gets,created;public,put,index,template,request,aliases,bytes,reference,source,try,xcontent,parser,parser,xcontent,helper,create,parser,named,xcontent,registry,empty,logging,deprecation,handler,instance,source,parser,next,token,while,parser,next,token,xcontent,parser,token,alias,alias,from,xcontent,parser,return,this,catch,ioexception,e,throw,new,elasticsearch,parse,exception,failed,to,parse,aliases,e
PutIndexTemplateRequest -> public PutIndexTemplateRequest aliases(BytesReference source);1525334055;Sets the aliases that will be associated with the index when it gets created;public PutIndexTemplateRequest aliases(BytesReference source) {_        _        try (XContentParser parser = XContentHelper_                .createParser(NamedXContentRegistry.EMPTY, LoggingDeprecationHandler.INSTANCE, source)) {_            _            parser.nextToken()__            while ((parser.nextToken()) != XContentParser.Token.END_OBJECT) {_                alias(Alias.fromXContent(parser))__            }_            return this__        } catch(IOException e) {_            throw new ElasticsearchParseException("Failed to parse aliases", e)__        }_    };sets,the,aliases,that,will,be,associated,with,the,index,when,it,gets,created;public,put,index,template,request,aliases,bytes,reference,source,try,xcontent,parser,parser,xcontent,helper,create,parser,named,xcontent,registry,empty,logging,deprecation,handler,instance,source,parser,next,token,while,parser,next,token,xcontent,parser,token,alias,alias,from,xcontent,parser,return,this,catch,ioexception,e,throw,new,elasticsearch,parse,exception,failed,to,parse,aliases,e
PutIndexTemplateRequest -> public PutIndexTemplateRequest aliases(BytesReference source);1525645056;Sets the aliases that will be associated with the index when it gets created;public PutIndexTemplateRequest aliases(BytesReference source) {_        _        try (XContentParser parser = XContentHelper_                .createParser(NamedXContentRegistry.EMPTY, LoggingDeprecationHandler.INSTANCE, source)) {_            _            parser.nextToken()__            while ((parser.nextToken()) != XContentParser.Token.END_OBJECT) {_                alias(Alias.fromXContent(parser))__            }_            return this__        } catch(IOException e) {_            throw new ElasticsearchParseException("Failed to parse aliases", e)__        }_    };sets,the,aliases,that,will,be,associated,with,the,index,when,it,gets,created;public,put,index,template,request,aliases,bytes,reference,source,try,xcontent,parser,parser,xcontent,helper,create,parser,named,xcontent,registry,empty,logging,deprecation,handler,instance,source,parser,next,token,while,parser,next,token,xcontent,parser,token,alias,alias,from,xcontent,parser,return,this,catch,ioexception,e,throw,new,elasticsearch,parse,exception,failed,to,parse,aliases,e
PutIndexTemplateRequest -> public PutIndexTemplateRequest aliases(BytesReference source);1526449283;Sets the aliases that will be associated with the index when it gets created;public PutIndexTemplateRequest aliases(BytesReference source) {_        _        try (XContentParser parser = XContentHelper_                .createParser(NamedXContentRegistry.EMPTY, LoggingDeprecationHandler.INSTANCE, source)) {_            _            parser.nextToken()__            while ((parser.nextToken()) != XContentParser.Token.END_OBJECT) {_                alias(Alias.fromXContent(parser))__            }_            return this__        } catch(IOException e) {_            throw new ElasticsearchParseException("Failed to parse aliases", e)__        }_    };sets,the,aliases,that,will,be,associated,with,the,index,when,it,gets,created;public,put,index,template,request,aliases,bytes,reference,source,try,xcontent,parser,parser,xcontent,helper,create,parser,named,xcontent,registry,empty,logging,deprecation,handler,instance,source,parser,next,token,while,parser,next,token,xcontent,parser,token,alias,alias,from,xcontent,parser,return,this,catch,ioexception,e,throw,new,elasticsearch,parse,exception,failed,to,parse,aliases,e
PutIndexTemplateRequest -> public PutIndexTemplateRequest aliases(BytesReference source);1529916084;Sets the aliases that will be associated with the index when it gets created;public PutIndexTemplateRequest aliases(BytesReference source) {_        _        try (XContentParser parser = XContentHelper_                .createParser(NamedXContentRegistry.EMPTY, LoggingDeprecationHandler.INSTANCE, source)) {_            _            parser.nextToken()__            while ((parser.nextToken()) != XContentParser.Token.END_OBJECT) {_                alias(Alias.fromXContent(parser))__            }_            return this__        } catch(IOException e) {_            throw new ElasticsearchParseException("Failed to parse aliases", e)__        }_    };sets,the,aliases,that,will,be,associated,with,the,index,when,it,gets,created;public,put,index,template,request,aliases,bytes,reference,source,try,xcontent,parser,parser,xcontent,helper,create,parser,named,xcontent,registry,empty,logging,deprecation,handler,instance,source,parser,next,token,while,parser,next,token,xcontent,parser,token,alias,alias,from,xcontent,parser,return,this,catch,ioexception,e,throw,new,elasticsearch,parse,exception,failed,to,parse,aliases,e
PutIndexTemplateRequest -> public PutIndexTemplateRequest aliases(BytesReference source);1531179852;Sets the aliases that will be associated with the index when it gets created;public PutIndexTemplateRequest aliases(BytesReference source) {_        _        try (XContentParser parser = XContentHelper_                .createParser(NamedXContentRegistry.EMPTY, LoggingDeprecationHandler.INSTANCE, source)) {_            _            parser.nextToken()__            while ((parser.nextToken()) != XContentParser.Token.END_OBJECT) {_                alias(Alias.fromXContent(parser))__            }_            return this__        } catch(IOException e) {_            throw new ElasticsearchParseException("Failed to parse aliases", e)__        }_    };sets,the,aliases,that,will,be,associated,with,the,index,when,it,gets,created;public,put,index,template,request,aliases,bytes,reference,source,try,xcontent,parser,parser,xcontent,helper,create,parser,named,xcontent,registry,empty,logging,deprecation,handler,instance,source,parser,next,token,while,parser,next,token,xcontent,parser,token,alias,alias,from,xcontent,parser,return,this,catch,ioexception,e,throw,new,elasticsearch,parse,exception,failed,to,parse,aliases,e
PutIndexTemplateRequest -> public PutIndexTemplateRequest aliases(BytesReference source);1535139672;Sets the aliases that will be associated with the index when it gets created;public PutIndexTemplateRequest aliases(BytesReference source) {_        _        try (XContentParser parser = XContentHelper_                .createParser(NamedXContentRegistry.EMPTY, LoggingDeprecationHandler.INSTANCE, source)) {_            _            parser.nextToken()__            while ((parser.nextToken()) != XContentParser.Token.END_OBJECT) {_                alias(Alias.fromXContent(parser))__            }_            return this__        } catch(IOException e) {_            throw new ElasticsearchParseException("Failed to parse aliases", e)__        }_    };sets,the,aliases,that,will,be,associated,with,the,index,when,it,gets,created;public,put,index,template,request,aliases,bytes,reference,source,try,xcontent,parser,parser,xcontent,helper,create,parser,named,xcontent,registry,empty,logging,deprecation,handler,instance,source,parser,next,token,while,parser,next,token,xcontent,parser,token,alias,alias,from,xcontent,parser,return,this,catch,ioexception,e,throw,new,elasticsearch,parse,exception,failed,to,parse,aliases,e
PutIndexTemplateRequest -> public PutIndexTemplateRequest aliases(BytesReference source);1535666657;Sets the aliases that will be associated with the index when it gets created;public PutIndexTemplateRequest aliases(BytesReference source) {_        _        try (XContentParser parser = XContentHelper_                .createParser(NamedXContentRegistry.EMPTY, LoggingDeprecationHandler.INSTANCE, source)) {_            _            parser.nextToken()__            while ((parser.nextToken()) != XContentParser.Token.END_OBJECT) {_                alias(Alias.fromXContent(parser))__            }_            return this__        } catch(IOException e) {_            throw new ElasticsearchParseException("Failed to parse aliases", e)__        }_    };sets,the,aliases,that,will,be,associated,with,the,index,when,it,gets,created;public,put,index,template,request,aliases,bytes,reference,source,try,xcontent,parser,parser,xcontent,helper,create,parser,named,xcontent,registry,empty,logging,deprecation,handler,instance,source,parser,next,token,while,parser,next,token,xcontent,parser,token,alias,alias,from,xcontent,parser,return,this,catch,ioexception,e,throw,new,elasticsearch,parse,exception,failed,to,parse,aliases,e
PutIndexTemplateRequest -> public PutIndexTemplateRequest aliases(BytesReference source);1535723122;Sets the aliases that will be associated with the index when it gets created;public PutIndexTemplateRequest aliases(BytesReference source) {_        _        try (XContentParser parser = XContentHelper_                .createParser(NamedXContentRegistry.EMPTY, LoggingDeprecationHandler.INSTANCE, source)) {_            _            parser.nextToken()__            while ((parser.nextToken()) != XContentParser.Token.END_OBJECT) {_                alias(Alias.fromXContent(parser))__            }_            return this__        } catch(IOException e) {_            throw new ElasticsearchParseException("Failed to parse aliases", e)__        }_    };sets,the,aliases,that,will,be,associated,with,the,index,when,it,gets,created;public,put,index,template,request,aliases,bytes,reference,source,try,xcontent,parser,parser,xcontent,helper,create,parser,named,xcontent,registry,empty,logging,deprecation,handler,instance,source,parser,next,token,while,parser,next,token,xcontent,parser,token,alias,alias,from,xcontent,parser,return,this,catch,ioexception,e,throw,new,elasticsearch,parse,exception,failed,to,parse,aliases,e
PutIndexTemplateRequest -> public PutIndexTemplateRequest aliases(BytesReference source);1540486836;Sets the aliases that will be associated with the index when it gets created;public PutIndexTemplateRequest aliases(BytesReference source) {_        _        try (XContentParser parser = XContentHelper_                .createParser(NamedXContentRegistry.EMPTY, LoggingDeprecationHandler.INSTANCE, source)) {_            _            parser.nextToken()__            while ((parser.nextToken()) != XContentParser.Token.END_OBJECT) {_                alias(Alias.fromXContent(parser))__            }_            return this__        } catch(IOException e) {_            throw new ElasticsearchParseException("Failed to parse aliases", e)__        }_    };sets,the,aliases,that,will,be,associated,with,the,index,when,it,gets,created;public,put,index,template,request,aliases,bytes,reference,source,try,xcontent,parser,parser,xcontent,helper,create,parser,named,xcontent,registry,empty,logging,deprecation,handler,instance,source,parser,next,token,while,parser,next,token,xcontent,parser,token,alias,alias,from,xcontent,parser,return,this,catch,ioexception,e,throw,new,elasticsearch,parse,exception,failed,to,parse,aliases,e
PutIndexTemplateRequest -> public PutIndexTemplateRequest aliases(BytesReference source);1540583181;Sets the aliases that will be associated with the index when it gets created;public PutIndexTemplateRequest aliases(BytesReference source) {_        _        try (XContentParser parser = XContentHelper_                .createParser(NamedXContentRegistry.EMPTY, LoggingDeprecationHandler.INSTANCE, source)) {_            _            parser.nextToken()__            while ((parser.nextToken()) != XContentParser.Token.END_OBJECT) {_                alias(Alias.fromXContent(parser))__            }_            return this__        } catch(IOException e) {_            throw new ElasticsearchParseException("Failed to parse aliases", e)__        }_    };sets,the,aliases,that,will,be,associated,with,the,index,when,it,gets,created;public,put,index,template,request,aliases,bytes,reference,source,try,xcontent,parser,parser,xcontent,helper,create,parser,named,xcontent,registry,empty,logging,deprecation,handler,instance,source,parser,next,token,while,parser,next,token,xcontent,parser,token,alias,alias,from,xcontent,parser,return,this,catch,ioexception,e,throw,new,elasticsearch,parse,exception,failed,to,parse,aliases,e
PutIndexTemplateRequest -> public PutIndexTemplateRequest aliases(BytesReference source);1548265937;Sets the aliases that will be associated with the index when it gets created;public PutIndexTemplateRequest aliases(BytesReference source) {_        _        try (XContentParser parser = XContentHelper_                .createParser(NamedXContentRegistry.EMPTY, LoggingDeprecationHandler.INSTANCE, source)) {_            _            parser.nextToken()__            while ((parser.nextToken()) != XContentParser.Token.END_OBJECT) {_                alias(Alias.fromXContent(parser))__            }_            return this__        } catch(IOException e) {_            throw new ElasticsearchParseException("Failed to parse aliases", e)__        }_    };sets,the,aliases,that,will,be,associated,with,the,index,when,it,gets,created;public,put,index,template,request,aliases,bytes,reference,source,try,xcontent,parser,parser,xcontent,helper,create,parser,named,xcontent,registry,empty,logging,deprecation,handler,instance,source,parser,next,token,while,parser,next,token,xcontent,parser,token,alias,alias,from,xcontent,parser,return,this,catch,ioexception,e,throw,new,elasticsearch,parse,exception,failed,to,parse,aliases,e
PutIndexTemplateRequest -> @SuppressWarnings("unchecked")     public PutIndexTemplateRequest source(Map<String, Object> templateSource);1531179852;The template source definition.;@SuppressWarnings("unchecked")_    public PutIndexTemplateRequest source(Map<String, Object> templateSource) {_        Map<String, Object> source = templateSource__        for (Map.Entry<String, Object> entry : source.entrySet()) {_            String name = entry.getKey()__            if (name.equals("template")) {_                _                if(entry.getValue() instanceof String) {_                    DEPRECATION_LOGGER.deprecated("Deprecated field [template] used, replaced by [index_patterns]")__                    patterns(Collections.singletonList((String) entry.getValue()))__                }_            } else if (name.equals("index_patterns")) {_                if(entry.getValue() instanceof String) {_                    patterns(Collections.singletonList((String) entry.getValue()))__                } else if (entry.getValue() instanceof List) {_                    List<String> elements = ((List<?>) entry.getValue()).stream().map(Object::toString).collect(Collectors.toList())__                    patterns(elements)__                } else {_                    throw new IllegalArgumentException("Malformed [template] value, should be a string or a list of strings")__                }_            } else if (name.equals("order")) {_                order(XContentMapValues.nodeIntegerValue(entry.getValue(), order()))__            } else if ("version".equals(name)) {_                if ((entry.getValue() instanceof Integer) == false) {_                    throw new IllegalArgumentException("Malformed [version] value, should be an integer")__                }_                version((Integer)entry.getValue())__            } else if (name.equals("settings")) {_                if ((entry.getValue() instanceof Map) == false) {_                    throw new IllegalArgumentException("Malformed [settings] section, should include an inner object")__                }_                settings((Map<String, Object>) entry.getValue())__            } else if (name.equals("mappings")) {_                Map<String, Object> mappings = (Map<String, Object>) entry.getValue()__                for (Map.Entry<String, Object> entry1 : mappings.entrySet()) {_                    if (!(entry1.getValue() instanceof Map)) {_                        throw new IllegalArgumentException(_                            "Malformed [mappings] section for type [" + entry1.getKey() +_                                "], should include an inner object describing the mapping")__                    }_                    mapping(entry1.getKey(), (Map<String, Object>) entry1.getValue())__                }_            } else if (name.equals("aliases")) {_                aliases((Map<String, Object>) entry.getValue())__            } else {_                _                IndexMetaData.Custom proto = IndexMetaData.lookupPrototype(name)__                if (proto != null) {_                    try {_                        customs.put(name, proto.fromMap((Map<String, Object>) entry.getValue()))__                    } catch (IOException e) {_                        throw new ElasticsearchParseException("failed to parse custom metadata for [{}]", name)__                    }_                }_            }_        }_        return this__    };the,template,source,definition;suppress,warnings,unchecked,public,put,index,template,request,source,map,string,object,template,source,map,string,object,source,template,source,for,map,entry,string,object,entry,source,entry,set,string,name,entry,get,key,if,name,equals,template,if,entry,get,value,instanceof,string,deprecated,deprecated,field,template,used,replaced,by,patterns,collections,singleton,list,string,entry,get,value,else,if,name,equals,if,entry,get,value,instanceof,string,patterns,collections,singleton,list,string,entry,get,value,else,if,entry,get,value,instanceof,list,list,string,elements,list,entry,get,value,stream,map,object,to,string,collect,collectors,to,list,patterns,elements,else,throw,new,illegal,argument,exception,malformed,template,value,should,be,a,string,or,a,list,of,strings,else,if,name,equals,order,order,xcontent,map,values,node,integer,value,entry,get,value,order,else,if,version,equals,name,if,entry,get,value,instanceof,integer,false,throw,new,illegal,argument,exception,malformed,version,value,should,be,an,integer,version,integer,entry,get,value,else,if,name,equals,settings,if,entry,get,value,instanceof,map,false,throw,new,illegal,argument,exception,malformed,settings,section,should,include,an,inner,object,settings,map,string,object,entry,get,value,else,if,name,equals,mappings,map,string,object,mappings,map,string,object,entry,get,value,for,map,entry,string,object,entry1,mappings,entry,set,if,entry1,get,value,instanceof,map,throw,new,illegal,argument,exception,malformed,mappings,section,for,type,entry1,get,key,should,include,an,inner,object,describing,the,mapping,mapping,entry1,get,key,map,string,object,entry1,get,value,else,if,name,equals,aliases,aliases,map,string,object,entry,get,value,else,index,meta,data,custom,proto,index,meta,data,lookup,prototype,name,if,proto,null,try,customs,put,name,proto,from,map,map,string,object,entry,get,value,catch,ioexception,e,throw,new,elasticsearch,parse,exception,failed,to,parse,custom,metadata,for,name,return,this
PutIndexTemplateRequest -> @SuppressWarnings("unchecked")     public PutIndexTemplateRequest source(Map<String, Object> templateSource);1535139672;The template source definition.;@SuppressWarnings("unchecked")_    public PutIndexTemplateRequest source(Map<String, Object> templateSource) {_        Map<String, Object> source = templateSource__        for (Map.Entry<String, Object> entry : source.entrySet()) {_            String name = entry.getKey()__            if (name.equals("template")) {_                _                if(entry.getValue() instanceof String) {_                    DEPRECATION_LOGGER.deprecated("Deprecated field [template] used, replaced by [index_patterns]")__                    patterns(Collections.singletonList((String) entry.getValue()))__                }_            } else if (name.equals("index_patterns")) {_                if(entry.getValue() instanceof String) {_                    patterns(Collections.singletonList((String) entry.getValue()))__                } else if (entry.getValue() instanceof List) {_                    List<String> elements = ((List<?>) entry.getValue()).stream().map(Object::toString).collect(Collectors.toList())__                    patterns(elements)__                } else {_                    throw new IllegalArgumentException("Malformed [template] value, should be a string or a list of strings")__                }_            } else if (name.equals("order")) {_                order(XContentMapValues.nodeIntegerValue(entry.getValue(), order()))__            } else if ("version".equals(name)) {_                if ((entry.getValue() instanceof Integer) == false) {_                    throw new IllegalArgumentException("Malformed [version] value, should be an integer")__                }_                version((Integer)entry.getValue())__            } else if (name.equals("settings")) {_                if ((entry.getValue() instanceof Map) == false) {_                    throw new IllegalArgumentException("Malformed [settings] section, should include an inner object")__                }_                settings((Map<String, Object>) entry.getValue())__            } else if (name.equals("mappings")) {_                Map<String, Object> mappings = (Map<String, Object>) entry.getValue()__                for (Map.Entry<String, Object> entry1 : mappings.entrySet()) {_                    if (!(entry1.getValue() instanceof Map)) {_                        throw new IllegalArgumentException(_                            "Malformed [mappings] section for type [" + entry1.getKey() +_                                "], should include an inner object describing the mapping")__                    }_                    mapping(entry1.getKey(), (Map<String, Object>) entry1.getValue())__                }_            } else if (name.equals("aliases")) {_                aliases((Map<String, Object>) entry.getValue())__            } else {_                _                IndexMetaData.Custom proto = IndexMetaData.lookupPrototype(name)__                if (proto != null) {_                    try {_                        customs.put(name, proto.fromMap((Map<String, Object>) entry.getValue()))__                    } catch (IOException e) {_                        throw new ElasticsearchParseException("failed to parse custom metadata for [{}]", name)__                    }_                }_            }_        }_        return this__    };the,template,source,definition;suppress,warnings,unchecked,public,put,index,template,request,source,map,string,object,template,source,map,string,object,source,template,source,for,map,entry,string,object,entry,source,entry,set,string,name,entry,get,key,if,name,equals,template,if,entry,get,value,instanceof,string,deprecated,deprecated,field,template,used,replaced,by,patterns,collections,singleton,list,string,entry,get,value,else,if,name,equals,if,entry,get,value,instanceof,string,patterns,collections,singleton,list,string,entry,get,value,else,if,entry,get,value,instanceof,list,list,string,elements,list,entry,get,value,stream,map,object,to,string,collect,collectors,to,list,patterns,elements,else,throw,new,illegal,argument,exception,malformed,template,value,should,be,a,string,or,a,list,of,strings,else,if,name,equals,order,order,xcontent,map,values,node,integer,value,entry,get,value,order,else,if,version,equals,name,if,entry,get,value,instanceof,integer,false,throw,new,illegal,argument,exception,malformed,version,value,should,be,an,integer,version,integer,entry,get,value,else,if,name,equals,settings,if,entry,get,value,instanceof,map,false,throw,new,illegal,argument,exception,malformed,settings,section,should,include,an,inner,object,settings,map,string,object,entry,get,value,else,if,name,equals,mappings,map,string,object,mappings,map,string,object,entry,get,value,for,map,entry,string,object,entry1,mappings,entry,set,if,entry1,get,value,instanceof,map,throw,new,illegal,argument,exception,malformed,mappings,section,for,type,entry1,get,key,should,include,an,inner,object,describing,the,mapping,mapping,entry1,get,key,map,string,object,entry1,get,value,else,if,name,equals,aliases,aliases,map,string,object,entry,get,value,else,index,meta,data,custom,proto,index,meta,data,lookup,prototype,name,if,proto,null,try,customs,put,name,proto,from,map,map,string,object,entry,get,value,catch,ioexception,e,throw,new,elasticsearch,parse,exception,failed,to,parse,custom,metadata,for,name,return,this
PutIndexTemplateRequest -> @SuppressWarnings("unchecked")     public PutIndexTemplateRequest source(Map<String, Object> templateSource);1535666657;The template source definition.;@SuppressWarnings("unchecked")_    public PutIndexTemplateRequest source(Map<String, Object> templateSource) {_        Map<String, Object> source = templateSource__        for (Map.Entry<String, Object> entry : source.entrySet()) {_            String name = entry.getKey()__            if (name.equals("template")) {_                _                if(entry.getValue() instanceof String) {_                    DEPRECATION_LOGGER.deprecated("Deprecated field [template] used, replaced by [index_patterns]")__                    patterns(Collections.singletonList((String) entry.getValue()))__                }_            } else if (name.equals("index_patterns")) {_                if(entry.getValue() instanceof String) {_                    patterns(Collections.singletonList((String) entry.getValue()))__                } else if (entry.getValue() instanceof List) {_                    List<String> elements = ((List<?>) entry.getValue()).stream().map(Object::toString).collect(Collectors.toList())__                    patterns(elements)__                } else {_                    throw new IllegalArgumentException("Malformed [template] value, should be a string or a list of strings")__                }_            } else if (name.equals("order")) {_                order(XContentMapValues.nodeIntegerValue(entry.getValue(), order()))__            } else if ("version".equals(name)) {_                if ((entry.getValue() instanceof Integer) == false) {_                    throw new IllegalArgumentException("Malformed [version] value, should be an integer")__                }_                version((Integer)entry.getValue())__            } else if (name.equals("settings")) {_                if ((entry.getValue() instanceof Map) == false) {_                    throw new IllegalArgumentException("Malformed [settings] section, should include an inner object")__                }_                settings((Map<String, Object>) entry.getValue())__            } else if (name.equals("mappings")) {_                Map<String, Object> mappings = (Map<String, Object>) entry.getValue()__                for (Map.Entry<String, Object> entry1 : mappings.entrySet()) {_                    if (!(entry1.getValue() instanceof Map)) {_                        throw new IllegalArgumentException(_                            "Malformed [mappings] section for type [" + entry1.getKey() +_                                "], should include an inner object describing the mapping")__                    }_                    mapping(entry1.getKey(), (Map<String, Object>) entry1.getValue())__                }_            } else if (name.equals("aliases")) {_                aliases((Map<String, Object>) entry.getValue())__            } else {_                throw new ElasticsearchParseException("unknown key [{}] in the template ", name)__            }_        }_        return this__    };the,template,source,definition;suppress,warnings,unchecked,public,put,index,template,request,source,map,string,object,template,source,map,string,object,source,template,source,for,map,entry,string,object,entry,source,entry,set,string,name,entry,get,key,if,name,equals,template,if,entry,get,value,instanceof,string,deprecated,deprecated,field,template,used,replaced,by,patterns,collections,singleton,list,string,entry,get,value,else,if,name,equals,if,entry,get,value,instanceof,string,patterns,collections,singleton,list,string,entry,get,value,else,if,entry,get,value,instanceof,list,list,string,elements,list,entry,get,value,stream,map,object,to,string,collect,collectors,to,list,patterns,elements,else,throw,new,illegal,argument,exception,malformed,template,value,should,be,a,string,or,a,list,of,strings,else,if,name,equals,order,order,xcontent,map,values,node,integer,value,entry,get,value,order,else,if,version,equals,name,if,entry,get,value,instanceof,integer,false,throw,new,illegal,argument,exception,malformed,version,value,should,be,an,integer,version,integer,entry,get,value,else,if,name,equals,settings,if,entry,get,value,instanceof,map,false,throw,new,illegal,argument,exception,malformed,settings,section,should,include,an,inner,object,settings,map,string,object,entry,get,value,else,if,name,equals,mappings,map,string,object,mappings,map,string,object,entry,get,value,for,map,entry,string,object,entry1,mappings,entry,set,if,entry1,get,value,instanceof,map,throw,new,illegal,argument,exception,malformed,mappings,section,for,type,entry1,get,key,should,include,an,inner,object,describing,the,mapping,mapping,entry1,get,key,map,string,object,entry1,get,value,else,if,name,equals,aliases,aliases,map,string,object,entry,get,value,else,throw,new,elasticsearch,parse,exception,unknown,key,in,the,template,name,return,this
PutIndexTemplateRequest -> @SuppressWarnings("unchecked")     public PutIndexTemplateRequest source(Map<String, Object> templateSource);1535723122;The template source definition.;@SuppressWarnings("unchecked")_    public PutIndexTemplateRequest source(Map<String, Object> templateSource) {_        Map<String, Object> source = templateSource__        for (Map.Entry<String, Object> entry : source.entrySet()) {_            String name = entry.getKey()__            if (name.equals("template")) {_                _                if(entry.getValue() instanceof String) {_                    DEPRECATION_LOGGER.deprecated("Deprecated field [template] used, replaced by [index_patterns]")__                    patterns(Collections.singletonList((String) entry.getValue()))__                }_            } else if (name.equals("index_patterns")) {_                if(entry.getValue() instanceof String) {_                    patterns(Collections.singletonList((String) entry.getValue()))__                } else if (entry.getValue() instanceof List) {_                    List<String> elements = ((List<?>) entry.getValue()).stream().map(Object::toString).collect(Collectors.toList())__                    patterns(elements)__                } else {_                    throw new IllegalArgumentException("Malformed [template] value, should be a string or a list of strings")__                }_            } else if (name.equals("order")) {_                order(XContentMapValues.nodeIntegerValue(entry.getValue(), order()))__            } else if ("version".equals(name)) {_                if ((entry.getValue() instanceof Integer) == false) {_                    throw new IllegalArgumentException("Malformed [version] value, should be an integer")__                }_                version((Integer)entry.getValue())__            } else if (name.equals("settings")) {_                if ((entry.getValue() instanceof Map) == false) {_                    throw new IllegalArgumentException("Malformed [settings] section, should include an inner object")__                }_                settings((Map<String, Object>) entry.getValue())__            } else if (name.equals("mappings")) {_                Map<String, Object> mappings = (Map<String, Object>) entry.getValue()__                for (Map.Entry<String, Object> entry1 : mappings.entrySet()) {_                    if (!(entry1.getValue() instanceof Map)) {_                        throw new IllegalArgumentException(_                            "Malformed [mappings] section for type [" + entry1.getKey() +_                                "], should include an inner object describing the mapping")__                    }_                    mapping(entry1.getKey(), (Map<String, Object>) entry1.getValue())__                }_            } else if (name.equals("aliases")) {_                aliases((Map<String, Object>) entry.getValue())__            } else {_                throw new ElasticsearchParseException("unknown key [{}] in the template ", name)__            }_        }_        return this__    };the,template,source,definition;suppress,warnings,unchecked,public,put,index,template,request,source,map,string,object,template,source,map,string,object,source,template,source,for,map,entry,string,object,entry,source,entry,set,string,name,entry,get,key,if,name,equals,template,if,entry,get,value,instanceof,string,deprecated,deprecated,field,template,used,replaced,by,patterns,collections,singleton,list,string,entry,get,value,else,if,name,equals,if,entry,get,value,instanceof,string,patterns,collections,singleton,list,string,entry,get,value,else,if,entry,get,value,instanceof,list,list,string,elements,list,entry,get,value,stream,map,object,to,string,collect,collectors,to,list,patterns,elements,else,throw,new,illegal,argument,exception,malformed,template,value,should,be,a,string,or,a,list,of,strings,else,if,name,equals,order,order,xcontent,map,values,node,integer,value,entry,get,value,order,else,if,version,equals,name,if,entry,get,value,instanceof,integer,false,throw,new,illegal,argument,exception,malformed,version,value,should,be,an,integer,version,integer,entry,get,value,else,if,name,equals,settings,if,entry,get,value,instanceof,map,false,throw,new,illegal,argument,exception,malformed,settings,section,should,include,an,inner,object,settings,map,string,object,entry,get,value,else,if,name,equals,mappings,map,string,object,mappings,map,string,object,entry,get,value,for,map,entry,string,object,entry1,mappings,entry,set,if,entry1,get,value,instanceof,map,throw,new,illegal,argument,exception,malformed,mappings,section,for,type,entry1,get,key,should,include,an,inner,object,describing,the,mapping,mapping,entry1,get,key,map,string,object,entry1,get,value,else,if,name,equals,aliases,aliases,map,string,object,entry,get,value,else,throw,new,elasticsearch,parse,exception,unknown,key,in,the,template,name,return,this
PutIndexTemplateRequest -> @SuppressWarnings("unchecked")     public PutIndexTemplateRequest source(Map<String, Object> templateSource);1540486836;The template source definition.;@SuppressWarnings("unchecked")_    public PutIndexTemplateRequest source(Map<String, Object> templateSource) {_        Map<String, Object> source = templateSource__        for (Map.Entry<String, Object> entry : source.entrySet()) {_            String name = entry.getKey()__            if (name.equals("template")) {_                _                if(entry.getValue() instanceof String) {_                    DEPRECATION_LOGGER.deprecated("Deprecated field [template] used, replaced by [index_patterns]")__                    patterns(Collections.singletonList((String) entry.getValue()))__                }_            } else if (name.equals("index_patterns")) {_                if(entry.getValue() instanceof String) {_                    patterns(Collections.singletonList((String) entry.getValue()))__                } else if (entry.getValue() instanceof List) {_                    List<String> elements = ((List<?>) entry.getValue()).stream().map(Object::toString).collect(Collectors.toList())__                    patterns(elements)__                } else {_                    throw new IllegalArgumentException("Malformed [template] value, should be a string or a list of strings")__                }_            } else if (name.equals("order")) {_                order(XContentMapValues.nodeIntegerValue(entry.getValue(), order()))__            } else if ("version".equals(name)) {_                if ((entry.getValue() instanceof Integer) == false) {_                    throw new IllegalArgumentException("Malformed [version] value, should be an integer")__                }_                version((Integer)entry.getValue())__            } else if (name.equals("settings")) {_                if ((entry.getValue() instanceof Map) == false) {_                    throw new IllegalArgumentException("Malformed [settings] section, should include an inner object")__                }_                settings((Map<String, Object>) entry.getValue())__            } else if (name.equals("mappings")) {_                Map<String, Object> mappings = (Map<String, Object>) entry.getValue()__                for (Map.Entry<String, Object> entry1 : mappings.entrySet()) {_                    if (!(entry1.getValue() instanceof Map)) {_                        throw new IllegalArgumentException(_                            "Malformed [mappings] section for type [" + entry1.getKey() +_                                "], should include an inner object describing the mapping")__                    }_                    mapping(entry1.getKey(), (Map<String, Object>) entry1.getValue())__                }_            } else if (name.equals("aliases")) {_                aliases((Map<String, Object>) entry.getValue())__            } else {_                throw new ElasticsearchParseException("unknown key [{}] in the template ", name)__            }_        }_        return this__    };the,template,source,definition;suppress,warnings,unchecked,public,put,index,template,request,source,map,string,object,template,source,map,string,object,source,template,source,for,map,entry,string,object,entry,source,entry,set,string,name,entry,get,key,if,name,equals,template,if,entry,get,value,instanceof,string,deprecated,deprecated,field,template,used,replaced,by,patterns,collections,singleton,list,string,entry,get,value,else,if,name,equals,if,entry,get,value,instanceof,string,patterns,collections,singleton,list,string,entry,get,value,else,if,entry,get,value,instanceof,list,list,string,elements,list,entry,get,value,stream,map,object,to,string,collect,collectors,to,list,patterns,elements,else,throw,new,illegal,argument,exception,malformed,template,value,should,be,a,string,or,a,list,of,strings,else,if,name,equals,order,order,xcontent,map,values,node,integer,value,entry,get,value,order,else,if,version,equals,name,if,entry,get,value,instanceof,integer,false,throw,new,illegal,argument,exception,malformed,version,value,should,be,an,integer,version,integer,entry,get,value,else,if,name,equals,settings,if,entry,get,value,instanceof,map,false,throw,new,illegal,argument,exception,malformed,settings,section,should,include,an,inner,object,settings,map,string,object,entry,get,value,else,if,name,equals,mappings,map,string,object,mappings,map,string,object,entry,get,value,for,map,entry,string,object,entry1,mappings,entry,set,if,entry1,get,value,instanceof,map,throw,new,illegal,argument,exception,malformed,mappings,section,for,type,entry1,get,key,should,include,an,inner,object,describing,the,mapping,mapping,entry1,get,key,map,string,object,entry1,get,value,else,if,name,equals,aliases,aliases,map,string,object,entry,get,value,else,throw,new,elasticsearch,parse,exception,unknown,key,in,the,template,name,return,this
PutIndexTemplateRequest -> @SuppressWarnings("unchecked")     public PutIndexTemplateRequest source(Map<String, Object> templateSource);1540583181;The template source definition.;@SuppressWarnings("unchecked")_    public PutIndexTemplateRequest source(Map<String, Object> templateSource) {_        Map<String, Object> source = templateSource__        for (Map.Entry<String, Object> entry : source.entrySet()) {_            String name = entry.getKey()__            if (name.equals("template")) {_                _                if(entry.getValue() instanceof String) {_                    deprecationLogger.deprecated("Deprecated field [template] used, replaced by [index_patterns]")__                    patterns(Collections.singletonList((String) entry.getValue()))__                }_            } else if (name.equals("index_patterns")) {_                if(entry.getValue() instanceof String) {_                    patterns(Collections.singletonList((String) entry.getValue()))__                } else if (entry.getValue() instanceof List) {_                    List<String> elements = ((List<?>) entry.getValue()).stream().map(Object::toString).collect(Collectors.toList())__                    patterns(elements)__                } else {_                    throw new IllegalArgumentException("Malformed [template] value, should be a string or a list of strings")__                }_            } else if (name.equals("order")) {_                order(XContentMapValues.nodeIntegerValue(entry.getValue(), order()))__            } else if ("version".equals(name)) {_                if ((entry.getValue() instanceof Integer) == false) {_                    throw new IllegalArgumentException("Malformed [version] value, should be an integer")__                }_                version((Integer)entry.getValue())__            } else if (name.equals("settings")) {_                if ((entry.getValue() instanceof Map) == false) {_                    throw new IllegalArgumentException("Malformed [settings] section, should include an inner object")__                }_                settings((Map<String, Object>) entry.getValue())__            } else if (name.equals("mappings")) {_                Map<String, Object> mappings = (Map<String, Object>) entry.getValue()__                for (Map.Entry<String, Object> entry1 : mappings.entrySet()) {_                    if (!(entry1.getValue() instanceof Map)) {_                        throw new IllegalArgumentException(_                            "Malformed [mappings] section for type [" + entry1.getKey() +_                                "], should include an inner object describing the mapping")__                    }_                    mapping(entry1.getKey(), (Map<String, Object>) entry1.getValue())__                }_            } else if (name.equals("aliases")) {_                aliases((Map<String, Object>) entry.getValue())__            } else {_                throw new ElasticsearchParseException("unknown key [{}] in the template ", name)__            }_        }_        return this__    };the,template,source,definition;suppress,warnings,unchecked,public,put,index,template,request,source,map,string,object,template,source,map,string,object,source,template,source,for,map,entry,string,object,entry,source,entry,set,string,name,entry,get,key,if,name,equals,template,if,entry,get,value,instanceof,string,deprecation,logger,deprecated,deprecated,field,template,used,replaced,by,patterns,collections,singleton,list,string,entry,get,value,else,if,name,equals,if,entry,get,value,instanceof,string,patterns,collections,singleton,list,string,entry,get,value,else,if,entry,get,value,instanceof,list,list,string,elements,list,entry,get,value,stream,map,object,to,string,collect,collectors,to,list,patterns,elements,else,throw,new,illegal,argument,exception,malformed,template,value,should,be,a,string,or,a,list,of,strings,else,if,name,equals,order,order,xcontent,map,values,node,integer,value,entry,get,value,order,else,if,version,equals,name,if,entry,get,value,instanceof,integer,false,throw,new,illegal,argument,exception,malformed,version,value,should,be,an,integer,version,integer,entry,get,value,else,if,name,equals,settings,if,entry,get,value,instanceof,map,false,throw,new,illegal,argument,exception,malformed,settings,section,should,include,an,inner,object,settings,map,string,object,entry,get,value,else,if,name,equals,mappings,map,string,object,mappings,map,string,object,entry,get,value,for,map,entry,string,object,entry1,mappings,entry,set,if,entry1,get,value,instanceof,map,throw,new,illegal,argument,exception,malformed,mappings,section,for,type,entry1,get,key,should,include,an,inner,object,describing,the,mapping,mapping,entry1,get,key,map,string,object,entry1,get,value,else,if,name,equals,aliases,aliases,map,string,object,entry,get,value,else,throw,new,elasticsearch,parse,exception,unknown,key,in,the,template,name,return,this
PutIndexTemplateRequest -> @SuppressWarnings("unchecked")     public PutIndexTemplateRequest source(Map<String, Object> templateSource);1548265937;The template source definition.;@SuppressWarnings("unchecked")_    public PutIndexTemplateRequest source(Map<String, Object> templateSource) {_        Map<String, Object> source = templateSource__        for (Map.Entry<String, Object> entry : source.entrySet()) {_            String name = entry.getKey()__            if (name.equals("template")) {_                _                if(entry.getValue() instanceof String) {_                    deprecationLogger.deprecated("Deprecated field [template] used, replaced by [index_patterns]")__                    patterns(Collections.singletonList((String) entry.getValue()))__                }_            } else if (name.equals("index_patterns")) {_                if(entry.getValue() instanceof String) {_                    patterns(Collections.singletonList((String) entry.getValue()))__                } else if (entry.getValue() instanceof List) {_                    List<String> elements = ((List<?>) entry.getValue()).stream().map(Object::toString).collect(Collectors.toList())__                    patterns(elements)__                } else {_                    throw new IllegalArgumentException("Malformed [template] value, should be a string or a list of strings")__                }_            } else if (name.equals("order")) {_                order(XContentMapValues.nodeIntegerValue(entry.getValue(), order()))__            } else if ("version".equals(name)) {_                if ((entry.getValue() instanceof Integer) == false) {_                    throw new IllegalArgumentException("Malformed [version] value, should be an integer")__                }_                version((Integer)entry.getValue())__            } else if (name.equals("settings")) {_                if ((entry.getValue() instanceof Map) == false) {_                    throw new IllegalArgumentException("Malformed [settings] section, should include an inner object")__                }_                settings((Map<String, Object>) entry.getValue())__            } else if (name.equals("mappings")) {_                Map<String, Object> mappings = (Map<String, Object>) entry.getValue()__                for (Map.Entry<String, Object> entry1 : mappings.entrySet()) {_                    if (!(entry1.getValue() instanceof Map)) {_                        throw new IllegalArgumentException(_                            "Malformed [mappings] section for type [" + entry1.getKey() +_                                "], should include an inner object describing the mapping")__                    }_                    mapping(entry1.getKey(), (Map<String, Object>) entry1.getValue())__                }_            } else if (name.equals("aliases")) {_                aliases((Map<String, Object>) entry.getValue())__            } else {_                throw new ElasticsearchParseException("unknown key [{}] in the template ", name)__            }_        }_        return this__    };the,template,source,definition;suppress,warnings,unchecked,public,put,index,template,request,source,map,string,object,template,source,map,string,object,source,template,source,for,map,entry,string,object,entry,source,entry,set,string,name,entry,get,key,if,name,equals,template,if,entry,get,value,instanceof,string,deprecation,logger,deprecated,deprecated,field,template,used,replaced,by,patterns,collections,singleton,list,string,entry,get,value,else,if,name,equals,if,entry,get,value,instanceof,string,patterns,collections,singleton,list,string,entry,get,value,else,if,entry,get,value,instanceof,list,list,string,elements,list,entry,get,value,stream,map,object,to,string,collect,collectors,to,list,patterns,elements,else,throw,new,illegal,argument,exception,malformed,template,value,should,be,a,string,or,a,list,of,strings,else,if,name,equals,order,order,xcontent,map,values,node,integer,value,entry,get,value,order,else,if,version,equals,name,if,entry,get,value,instanceof,integer,false,throw,new,illegal,argument,exception,malformed,version,value,should,be,an,integer,version,integer,entry,get,value,else,if,name,equals,settings,if,entry,get,value,instanceof,map,false,throw,new,illegal,argument,exception,malformed,settings,section,should,include,an,inner,object,settings,map,string,object,entry,get,value,else,if,name,equals,mappings,map,string,object,mappings,map,string,object,entry,get,value,for,map,entry,string,object,entry1,mappings,entry,set,if,entry1,get,value,instanceof,map,throw,new,illegal,argument,exception,malformed,mappings,section,for,type,entry1,get,key,should,include,an,inner,object,describing,the,mapping,mapping,entry1,get,key,map,string,object,entry1,get,value,else,if,name,equals,aliases,aliases,map,string,object,entry,get,value,else,throw,new,elasticsearch,parse,exception,unknown,key,in,the,template,name,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest settings(Settings.Builder settings);1524684173;The settings to create the index template with.;public PutIndexTemplateRequest settings(Settings.Builder settings) {_        this.settings = settings.build()__        return this__    };the,settings,to,create,the,index,template,with;public,put,index,template,request,settings,settings,builder,settings,this,settings,settings,build,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest settings(Settings.Builder settings);1525334055;The settings to create the index template with.;public PutIndexTemplateRequest settings(Settings.Builder settings) {_        this.settings = settings.build()__        return this__    };the,settings,to,create,the,index,template,with;public,put,index,template,request,settings,settings,builder,settings,this,settings,settings,build,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest settings(Settings.Builder settings);1525645056;The settings to create the index template with.;public PutIndexTemplateRequest settings(Settings.Builder settings) {_        this.settings = settings.build()__        return this__    };the,settings,to,create,the,index,template,with;public,put,index,template,request,settings,settings,builder,settings,this,settings,settings,build,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest settings(Settings.Builder settings);1526449283;The settings to create the index template with.;public PutIndexTemplateRequest settings(Settings.Builder settings) {_        this.settings = settings.build()__        return this__    };the,settings,to,create,the,index,template,with;public,put,index,template,request,settings,settings,builder,settings,this,settings,settings,build,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest settings(Settings.Builder settings);1529916084;The settings to create the index template with.;public PutIndexTemplateRequest settings(Settings.Builder settings) {_        this.settings = settings.build()__        return this__    };the,settings,to,create,the,index,template,with;public,put,index,template,request,settings,settings,builder,settings,this,settings,settings,build,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest settings(Settings.Builder settings);1531179852;The settings to create the index template with.;public PutIndexTemplateRequest settings(Settings.Builder settings) {_        this.settings = settings.build()__        return this__    };the,settings,to,create,the,index,template,with;public,put,index,template,request,settings,settings,builder,settings,this,settings,settings,build,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest settings(Settings.Builder settings);1535139672;The settings to create the index template with.;public PutIndexTemplateRequest settings(Settings.Builder settings) {_        this.settings = settings.build()__        return this__    };the,settings,to,create,the,index,template,with;public,put,index,template,request,settings,settings,builder,settings,this,settings,settings,build,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest settings(Settings.Builder settings);1535666657;The settings to create the index template with.;public PutIndexTemplateRequest settings(Settings.Builder settings) {_        this.settings = settings.build()__        return this__    };the,settings,to,create,the,index,template,with;public,put,index,template,request,settings,settings,builder,settings,this,settings,settings,build,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest settings(Settings.Builder settings);1535723122;The settings to create the index template with.;public PutIndexTemplateRequest settings(Settings.Builder settings) {_        this.settings = settings.build()__        return this__    };the,settings,to,create,the,index,template,with;public,put,index,template,request,settings,settings,builder,settings,this,settings,settings,build,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest settings(Settings.Builder settings);1540486836;The settings to create the index template with.;public PutIndexTemplateRequest settings(Settings.Builder settings) {_        this.settings = settings.build()__        return this__    };the,settings,to,create,the,index,template,with;public,put,index,template,request,settings,settings,builder,settings,this,settings,settings,build,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest settings(Settings.Builder settings);1540583181;The settings to create the index template with.;public PutIndexTemplateRequest settings(Settings.Builder settings) {_        this.settings = settings.build()__        return this__    };the,settings,to,create,the,index,template,with;public,put,index,template,request,settings,settings,builder,settings,this,settings,settings,build,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest settings(Settings.Builder settings);1548265937;The settings to create the index template with.;public PutIndexTemplateRequest settings(Settings.Builder settings) {_        this.settings = settings.build()__        return this__    };the,settings,to,create,the,index,template,with;public,put,index,template,request,settings,settings,builder,settings,this,settings,settings,build,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(XContentBuilder templateBuilder);1524684173;The template source definition.;public PutIndexTemplateRequest source(XContentBuilder templateBuilder) {_        try {_            return source(BytesReference.bytes(templateBuilder), templateBuilder.contentType())__        } catch (Exception e) {_            throw new IllegalArgumentException("Failed to build json for template request", e)__        }_    };the,template,source,definition;public,put,index,template,request,source,xcontent,builder,template,builder,try,return,source,bytes,reference,bytes,template,builder,template,builder,content,type,catch,exception,e,throw,new,illegal,argument,exception,failed,to,build,json,for,template,request,e
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(XContentBuilder templateBuilder);1525334055;The template source definition.;public PutIndexTemplateRequest source(XContentBuilder templateBuilder) {_        try {_            return source(BytesReference.bytes(templateBuilder), templateBuilder.contentType())__        } catch (Exception e) {_            throw new IllegalArgumentException("Failed to build json for template request", e)__        }_    };the,template,source,definition;public,put,index,template,request,source,xcontent,builder,template,builder,try,return,source,bytes,reference,bytes,template,builder,template,builder,content,type,catch,exception,e,throw,new,illegal,argument,exception,failed,to,build,json,for,template,request,e
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(XContentBuilder templateBuilder);1525645056;The template source definition.;public PutIndexTemplateRequest source(XContentBuilder templateBuilder) {_        try {_            return source(BytesReference.bytes(templateBuilder), templateBuilder.contentType())__        } catch (Exception e) {_            throw new IllegalArgumentException("Failed to build json for template request", e)__        }_    };the,template,source,definition;public,put,index,template,request,source,xcontent,builder,template,builder,try,return,source,bytes,reference,bytes,template,builder,template,builder,content,type,catch,exception,e,throw,new,illegal,argument,exception,failed,to,build,json,for,template,request,e
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(XContentBuilder templateBuilder);1526449283;The template source definition.;public PutIndexTemplateRequest source(XContentBuilder templateBuilder) {_        try {_            return source(BytesReference.bytes(templateBuilder), templateBuilder.contentType())__        } catch (Exception e) {_            throw new IllegalArgumentException("Failed to build json for template request", e)__        }_    };the,template,source,definition;public,put,index,template,request,source,xcontent,builder,template,builder,try,return,source,bytes,reference,bytes,template,builder,template,builder,content,type,catch,exception,e,throw,new,illegal,argument,exception,failed,to,build,json,for,template,request,e
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(XContentBuilder templateBuilder);1529916084;The template source definition.;public PutIndexTemplateRequest source(XContentBuilder templateBuilder) {_        try {_            return source(BytesReference.bytes(templateBuilder), templateBuilder.contentType())__        } catch (Exception e) {_            throw new IllegalArgumentException("Failed to build json for template request", e)__        }_    };the,template,source,definition;public,put,index,template,request,source,xcontent,builder,template,builder,try,return,source,bytes,reference,bytes,template,builder,template,builder,content,type,catch,exception,e,throw,new,illegal,argument,exception,failed,to,build,json,for,template,request,e
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(XContentBuilder templateBuilder);1531179852;The template source definition.;public PutIndexTemplateRequest source(XContentBuilder templateBuilder) {_        try {_            return source(BytesReference.bytes(templateBuilder), templateBuilder.contentType())__        } catch (Exception e) {_            throw new IllegalArgumentException("Failed to build json for template request", e)__        }_    };the,template,source,definition;public,put,index,template,request,source,xcontent,builder,template,builder,try,return,source,bytes,reference,bytes,template,builder,template,builder,content,type,catch,exception,e,throw,new,illegal,argument,exception,failed,to,build,json,for,template,request,e
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(XContentBuilder templateBuilder);1535139672;The template source definition.;public PutIndexTemplateRequest source(XContentBuilder templateBuilder) {_        try {_            return source(BytesReference.bytes(templateBuilder), templateBuilder.contentType())__        } catch (Exception e) {_            throw new IllegalArgumentException("Failed to build json for template request", e)__        }_    };the,template,source,definition;public,put,index,template,request,source,xcontent,builder,template,builder,try,return,source,bytes,reference,bytes,template,builder,template,builder,content,type,catch,exception,e,throw,new,illegal,argument,exception,failed,to,build,json,for,template,request,e
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(XContentBuilder templateBuilder);1535666657;The template source definition.;public PutIndexTemplateRequest source(XContentBuilder templateBuilder) {_        try {_            return source(BytesReference.bytes(templateBuilder), templateBuilder.contentType())__        } catch (Exception e) {_            throw new IllegalArgumentException("Failed to build json for template request", e)__        }_    };the,template,source,definition;public,put,index,template,request,source,xcontent,builder,template,builder,try,return,source,bytes,reference,bytes,template,builder,template,builder,content,type,catch,exception,e,throw,new,illegal,argument,exception,failed,to,build,json,for,template,request,e
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(XContentBuilder templateBuilder);1535723122;The template source definition.;public PutIndexTemplateRequest source(XContentBuilder templateBuilder) {_        try {_            return source(BytesReference.bytes(templateBuilder), templateBuilder.contentType())__        } catch (Exception e) {_            throw new IllegalArgumentException("Failed to build json for template request", e)__        }_    };the,template,source,definition;public,put,index,template,request,source,xcontent,builder,template,builder,try,return,source,bytes,reference,bytes,template,builder,template,builder,content,type,catch,exception,e,throw,new,illegal,argument,exception,failed,to,build,json,for,template,request,e
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(XContentBuilder templateBuilder);1540486836;The template source definition.;public PutIndexTemplateRequest source(XContentBuilder templateBuilder) {_        try {_            return source(BytesReference.bytes(templateBuilder), templateBuilder.contentType())__        } catch (Exception e) {_            throw new IllegalArgumentException("Failed to build json for template request", e)__        }_    };the,template,source,definition;public,put,index,template,request,source,xcontent,builder,template,builder,try,return,source,bytes,reference,bytes,template,builder,template,builder,content,type,catch,exception,e,throw,new,illegal,argument,exception,failed,to,build,json,for,template,request,e
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(XContentBuilder templateBuilder);1540583181;The template source definition.;public PutIndexTemplateRequest source(XContentBuilder templateBuilder) {_        try {_            return source(BytesReference.bytes(templateBuilder), templateBuilder.contentType())__        } catch (Exception e) {_            throw new IllegalArgumentException("Failed to build json for template request", e)__        }_    };the,template,source,definition;public,put,index,template,request,source,xcontent,builder,template,builder,try,return,source,bytes,reference,bytes,template,builder,template,builder,content,type,catch,exception,e,throw,new,illegal,argument,exception,failed,to,build,json,for,template,request,e
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(XContentBuilder templateBuilder);1548265937;The template source definition.;public PutIndexTemplateRequest source(XContentBuilder templateBuilder) {_        try {_            return source(BytesReference.bytes(templateBuilder), templateBuilder.contentType())__        } catch (Exception e) {_            throw new IllegalArgumentException("Failed to build json for template request", e)__        }_    };the,template,source,definition;public,put,index,template,request,source,xcontent,builder,template,builder,try,return,source,bytes,reference,bytes,template,builder,template,builder,content,type,catch,exception,e,throw,new,illegal,argument,exception,failed,to,build,json,for,template,request,e
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(byte[] source, int offset, int length, XContentType xContentType);1524684173;The template source definition.;public PutIndexTemplateRequest source(byte[] source, int offset, int length, XContentType xContentType) {_        return source(new BytesArray(source, offset, length), xContentType)__    };the,template,source,definition;public,put,index,template,request,source,byte,source,int,offset,int,length,xcontent,type,x,content,type,return,source,new,bytes,array,source,offset,length,x,content,type
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(byte[] source, int offset, int length, XContentType xContentType);1525334055;The template source definition.;public PutIndexTemplateRequest source(byte[] source, int offset, int length, XContentType xContentType) {_        return source(new BytesArray(source, offset, length), xContentType)__    };the,template,source,definition;public,put,index,template,request,source,byte,source,int,offset,int,length,xcontent,type,x,content,type,return,source,new,bytes,array,source,offset,length,x,content,type
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(byte[] source, int offset, int length, XContentType xContentType);1525645056;The template source definition.;public PutIndexTemplateRequest source(byte[] source, int offset, int length, XContentType xContentType) {_        return source(new BytesArray(source, offset, length), xContentType)__    };the,template,source,definition;public,put,index,template,request,source,byte,source,int,offset,int,length,xcontent,type,x,content,type,return,source,new,bytes,array,source,offset,length,x,content,type
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(byte[] source, int offset, int length, XContentType xContentType);1526449283;The template source definition.;public PutIndexTemplateRequest source(byte[] source, int offset, int length, XContentType xContentType) {_        return source(new BytesArray(source, offset, length), xContentType)__    };the,template,source,definition;public,put,index,template,request,source,byte,source,int,offset,int,length,xcontent,type,x,content,type,return,source,new,bytes,array,source,offset,length,x,content,type
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(byte[] source, int offset, int length, XContentType xContentType);1529916084;The template source definition.;public PutIndexTemplateRequest source(byte[] source, int offset, int length, XContentType xContentType) {_        return source(new BytesArray(source, offset, length), xContentType)__    };the,template,source,definition;public,put,index,template,request,source,byte,source,int,offset,int,length,xcontent,type,x,content,type,return,source,new,bytes,array,source,offset,length,x,content,type
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(byte[] source, int offset, int length, XContentType xContentType);1531179852;The template source definition.;public PutIndexTemplateRequest source(byte[] source, int offset, int length, XContentType xContentType) {_        return source(new BytesArray(source, offset, length), xContentType)__    };the,template,source,definition;public,put,index,template,request,source,byte,source,int,offset,int,length,xcontent,type,x,content,type,return,source,new,bytes,array,source,offset,length,x,content,type
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(byte[] source, int offset, int length, XContentType xContentType);1535139672;The template source definition.;public PutIndexTemplateRequest source(byte[] source, int offset, int length, XContentType xContentType) {_        return source(new BytesArray(source, offset, length), xContentType)__    };the,template,source,definition;public,put,index,template,request,source,byte,source,int,offset,int,length,xcontent,type,x,content,type,return,source,new,bytes,array,source,offset,length,x,content,type
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(byte[] source, int offset, int length, XContentType xContentType);1535666657;The template source definition.;public PutIndexTemplateRequest source(byte[] source, int offset, int length, XContentType xContentType) {_        return source(new BytesArray(source, offset, length), xContentType)__    };the,template,source,definition;public,put,index,template,request,source,byte,source,int,offset,int,length,xcontent,type,x,content,type,return,source,new,bytes,array,source,offset,length,x,content,type
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(byte[] source, int offset, int length, XContentType xContentType);1535723122;The template source definition.;public PutIndexTemplateRequest source(byte[] source, int offset, int length, XContentType xContentType) {_        return source(new BytesArray(source, offset, length), xContentType)__    };the,template,source,definition;public,put,index,template,request,source,byte,source,int,offset,int,length,xcontent,type,x,content,type,return,source,new,bytes,array,source,offset,length,x,content,type
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(byte[] source, int offset, int length, XContentType xContentType);1540486836;The template source definition.;public PutIndexTemplateRequest source(byte[] source, int offset, int length, XContentType xContentType) {_        return source(new BytesArray(source, offset, length), xContentType)__    };the,template,source,definition;public,put,index,template,request,source,byte,source,int,offset,int,length,xcontent,type,x,content,type,return,source,new,bytes,array,source,offset,length,x,content,type
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(byte[] source, int offset, int length, XContentType xContentType);1540583181;The template source definition.;public PutIndexTemplateRequest source(byte[] source, int offset, int length, XContentType xContentType) {_        return source(new BytesArray(source, offset, length), xContentType)__    };the,template,source,definition;public,put,index,template,request,source,byte,source,int,offset,int,length,xcontent,type,x,content,type,return,source,new,bytes,array,source,offset,length,x,content,type
PutIndexTemplateRequest -> public PutIndexTemplateRequest source(byte[] source, int offset, int length, XContentType xContentType);1548265937;The template source definition.;public PutIndexTemplateRequest source(byte[] source, int offset, int length, XContentType xContentType) {_        return source(new BytesArray(source, offset, length), xContentType)__    };the,template,source,definition;public,put,index,template,request,source,byte,source,int,offset,int,length,xcontent,type,x,content,type,return,source,new,bytes,array,source,offset,length,x,content,type
PutIndexTemplateRequest -> public PutIndexTemplateRequest settings(Settings settings);1524684173;The settings to create the index template with.;public PutIndexTemplateRequest settings(Settings settings) {_        this.settings = settings__        return this__    };the,settings,to,create,the,index,template,with;public,put,index,template,request,settings,settings,settings,this,settings,settings,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest settings(Settings settings);1525334055;The settings to create the index template with.;public PutIndexTemplateRequest settings(Settings settings) {_        this.settings = settings__        return this__    };the,settings,to,create,the,index,template,with;public,put,index,template,request,settings,settings,settings,this,settings,settings,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest settings(Settings settings);1525645056;The settings to create the index template with.;public PutIndexTemplateRequest settings(Settings settings) {_        this.settings = settings__        return this__    };the,settings,to,create,the,index,template,with;public,put,index,template,request,settings,settings,settings,this,settings,settings,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest settings(Settings settings);1526449283;The settings to create the index template with.;public PutIndexTemplateRequest settings(Settings settings) {_        this.settings = settings__        return this__    };the,settings,to,create,the,index,template,with;public,put,index,template,request,settings,settings,settings,this,settings,settings,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest settings(Settings settings);1529916084;The settings to create the index template with.;public PutIndexTemplateRequest settings(Settings settings) {_        this.settings = settings__        return this__    };the,settings,to,create,the,index,template,with;public,put,index,template,request,settings,settings,settings,this,settings,settings,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest settings(Settings settings);1531179852;The settings to create the index template with.;public PutIndexTemplateRequest settings(Settings settings) {_        this.settings = settings__        return this__    };the,settings,to,create,the,index,template,with;public,put,index,template,request,settings,settings,settings,this,settings,settings,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest settings(Settings settings);1535139672;The settings to create the index template with.;public PutIndexTemplateRequest settings(Settings settings) {_        this.settings = settings__        return this__    };the,settings,to,create,the,index,template,with;public,put,index,template,request,settings,settings,settings,this,settings,settings,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest settings(Settings settings);1535666657;The settings to create the index template with.;public PutIndexTemplateRequest settings(Settings settings) {_        this.settings = settings__        return this__    };the,settings,to,create,the,index,template,with;public,put,index,template,request,settings,settings,settings,this,settings,settings,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest settings(Settings settings);1535723122;The settings to create the index template with.;public PutIndexTemplateRequest settings(Settings settings) {_        this.settings = settings__        return this__    };the,settings,to,create,the,index,template,with;public,put,index,template,request,settings,settings,settings,this,settings,settings,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest settings(Settings settings);1540486836;The settings to create the index template with.;public PutIndexTemplateRequest settings(Settings settings) {_        this.settings = settings__        return this__    };the,settings,to,create,the,index,template,with;public,put,index,template,request,settings,settings,settings,this,settings,settings,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest settings(Settings settings);1540583181;The settings to create the index template with.;public PutIndexTemplateRequest settings(Settings settings) {_        this.settings = settings__        return this__    };the,settings,to,create,the,index,template,with;public,put,index,template,request,settings,settings,settings,this,settings,settings,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest settings(Settings settings);1548265937;The settings to create the index template with.;public PutIndexTemplateRequest settings(Settings settings) {_        this.settings = settings__        return this__    };the,settings,to,create,the,index,template,with;public,put,index,template,request,settings,settings,settings,this,settings,settings,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest cause(String cause);1524684173;The cause for this index template creation.;public PutIndexTemplateRequest cause(String cause) {_        this.cause = cause__        return this__    };the,cause,for,this,index,template,creation;public,put,index,template,request,cause,string,cause,this,cause,cause,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest cause(String cause);1525334055;The cause for this index template creation.;public PutIndexTemplateRequest cause(String cause) {_        this.cause = cause__        return this__    };the,cause,for,this,index,template,creation;public,put,index,template,request,cause,string,cause,this,cause,cause,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest cause(String cause);1525645056;The cause for this index template creation.;public PutIndexTemplateRequest cause(String cause) {_        this.cause = cause__        return this__    };the,cause,for,this,index,template,creation;public,put,index,template,request,cause,string,cause,this,cause,cause,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest cause(String cause);1526449283;The cause for this index template creation.;public PutIndexTemplateRequest cause(String cause) {_        this.cause = cause__        return this__    };the,cause,for,this,index,template,creation;public,put,index,template,request,cause,string,cause,this,cause,cause,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest cause(String cause);1529916084;The cause for this index template creation.;public PutIndexTemplateRequest cause(String cause) {_        this.cause = cause__        return this__    };the,cause,for,this,index,template,creation;public,put,index,template,request,cause,string,cause,this,cause,cause,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest cause(String cause);1531179852;The cause for this index template creation.;public PutIndexTemplateRequest cause(String cause) {_        this.cause = cause__        return this__    };the,cause,for,this,index,template,creation;public,put,index,template,request,cause,string,cause,this,cause,cause,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest cause(String cause);1535139672;The cause for this index template creation.;public PutIndexTemplateRequest cause(String cause) {_        this.cause = cause__        return this__    };the,cause,for,this,index,template,creation;public,put,index,template,request,cause,string,cause,this,cause,cause,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest cause(String cause);1535666657;The cause for this index template creation.;public PutIndexTemplateRequest cause(String cause) {_        this.cause = cause__        return this__    };the,cause,for,this,index,template,creation;public,put,index,template,request,cause,string,cause,this,cause,cause,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest cause(String cause);1535723122;The cause for this index template creation.;public PutIndexTemplateRequest cause(String cause) {_        this.cause = cause__        return this__    };the,cause,for,this,index,template,creation;public,put,index,template,request,cause,string,cause,this,cause,cause,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest cause(String cause);1540486836;The cause for this index template creation.;public PutIndexTemplateRequest cause(String cause) {_        this.cause = cause__        return this__    };the,cause,for,this,index,template,creation;public,put,index,template,request,cause,string,cause,this,cause,cause,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest cause(String cause);1540583181;The cause for this index template creation.;public PutIndexTemplateRequest cause(String cause) {_        this.cause = cause__        return this__    };the,cause,for,this,index,template,creation;public,put,index,template,request,cause,string,cause,this,cause,cause,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest cause(String cause);1548265937;The cause for this index template creation.;public PutIndexTemplateRequest cause(String cause) {_        this.cause = cause__        return this__    };the,cause,for,this,index,template,creation;public,put,index,template,request,cause,string,cause,this,cause,cause,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest settings(Map<String, Object> source);1524684173;The settings to create the index template with (either json or yaml format).;public PutIndexTemplateRequest settings(Map<String, Object> source) {_        try {_            XContentBuilder builder = XContentFactory.contentBuilder(XContentType.JSON)__            builder.map(source)__            settings(Strings.toString(builder), XContentType.JSON)__        } catch (IOException e) {_            throw new ElasticsearchGenerationException("Failed to generate [" + source + "]", e)__        }_        return this__    };the,settings,to,create,the,index,template,with,either,json,or,yaml,format;public,put,index,template,request,settings,map,string,object,source,try,xcontent,builder,builder,xcontent,factory,content,builder,xcontent,type,json,builder,map,source,settings,strings,to,string,builder,xcontent,type,json,catch,ioexception,e,throw,new,elasticsearch,generation,exception,failed,to,generate,source,e,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest settings(Map<String, Object> source);1525334055;The settings to create the index template with (either json or yaml format).;public PutIndexTemplateRequest settings(Map<String, Object> source) {_        try {_            XContentBuilder builder = XContentFactory.contentBuilder(XContentType.JSON)__            builder.map(source)__            settings(Strings.toString(builder), XContentType.JSON)__        } catch (IOException e) {_            throw new ElasticsearchGenerationException("Failed to generate [" + source + "]", e)__        }_        return this__    };the,settings,to,create,the,index,template,with,either,json,or,yaml,format;public,put,index,template,request,settings,map,string,object,source,try,xcontent,builder,builder,xcontent,factory,content,builder,xcontent,type,json,builder,map,source,settings,strings,to,string,builder,xcontent,type,json,catch,ioexception,e,throw,new,elasticsearch,generation,exception,failed,to,generate,source,e,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest settings(Map<String, Object> source);1525645056;The settings to create the index template with (either json or yaml format).;public PutIndexTemplateRequest settings(Map<String, Object> source) {_        try {_            XContentBuilder builder = XContentFactory.contentBuilder(XContentType.JSON)__            builder.map(source)__            settings(Strings.toString(builder), XContentType.JSON)__        } catch (IOException e) {_            throw new ElasticsearchGenerationException("Failed to generate [" + source + "]", e)__        }_        return this__    };the,settings,to,create,the,index,template,with,either,json,or,yaml,format;public,put,index,template,request,settings,map,string,object,source,try,xcontent,builder,builder,xcontent,factory,content,builder,xcontent,type,json,builder,map,source,settings,strings,to,string,builder,xcontent,type,json,catch,ioexception,e,throw,new,elasticsearch,generation,exception,failed,to,generate,source,e,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest settings(Map<String, Object> source);1526449283;The settings to create the index template with (either json or yaml format).;public PutIndexTemplateRequest settings(Map<String, Object> source) {_        try {_            XContentBuilder builder = XContentFactory.contentBuilder(XContentType.JSON)__            builder.map(source)__            settings(Strings.toString(builder), XContentType.JSON)__        } catch (IOException e) {_            throw new ElasticsearchGenerationException("Failed to generate [" + source + "]", e)__        }_        return this__    };the,settings,to,create,the,index,template,with,either,json,or,yaml,format;public,put,index,template,request,settings,map,string,object,source,try,xcontent,builder,builder,xcontent,factory,content,builder,xcontent,type,json,builder,map,source,settings,strings,to,string,builder,xcontent,type,json,catch,ioexception,e,throw,new,elasticsearch,generation,exception,failed,to,generate,source,e,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest settings(Map<String, Object> source);1529916084;The settings to create the index template with (either json or yaml format).;public PutIndexTemplateRequest settings(Map<String, Object> source) {_        try {_            XContentBuilder builder = XContentFactory.contentBuilder(XContentType.JSON)__            builder.map(source)__            settings(Strings.toString(builder), XContentType.JSON)__        } catch (IOException e) {_            throw new ElasticsearchGenerationException("Failed to generate [" + source + "]", e)__        }_        return this__    };the,settings,to,create,the,index,template,with,either,json,or,yaml,format;public,put,index,template,request,settings,map,string,object,source,try,xcontent,builder,builder,xcontent,factory,content,builder,xcontent,type,json,builder,map,source,settings,strings,to,string,builder,xcontent,type,json,catch,ioexception,e,throw,new,elasticsearch,generation,exception,failed,to,generate,source,e,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest settings(Map<String, Object> source);1531179852;The settings to create the index template with (either json or yaml format).;public PutIndexTemplateRequest settings(Map<String, Object> source) {_        try {_            XContentBuilder builder = XContentFactory.contentBuilder(XContentType.JSON)__            builder.map(source)__            settings(Strings.toString(builder), XContentType.JSON)__        } catch (IOException e) {_            throw new ElasticsearchGenerationException("Failed to generate [" + source + "]", e)__        }_        return this__    };the,settings,to,create,the,index,template,with,either,json,or,yaml,format;public,put,index,template,request,settings,map,string,object,source,try,xcontent,builder,builder,xcontent,factory,content,builder,xcontent,type,json,builder,map,source,settings,strings,to,string,builder,xcontent,type,json,catch,ioexception,e,throw,new,elasticsearch,generation,exception,failed,to,generate,source,e,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest settings(Map<String, Object> source);1535139672;The settings to create the index template with (either json or yaml format).;public PutIndexTemplateRequest settings(Map<String, Object> source) {_        try {_            XContentBuilder builder = XContentFactory.contentBuilder(XContentType.JSON)__            builder.map(source)__            settings(Strings.toString(builder), XContentType.JSON)__        } catch (IOException e) {_            throw new ElasticsearchGenerationException("Failed to generate [" + source + "]", e)__        }_        return this__    };the,settings,to,create,the,index,template,with,either,json,or,yaml,format;public,put,index,template,request,settings,map,string,object,source,try,xcontent,builder,builder,xcontent,factory,content,builder,xcontent,type,json,builder,map,source,settings,strings,to,string,builder,xcontent,type,json,catch,ioexception,e,throw,new,elasticsearch,generation,exception,failed,to,generate,source,e,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest settings(Map<String, Object> source);1535666657;The settings to create the index template with (either json or yaml format).;public PutIndexTemplateRequest settings(Map<String, Object> source) {_        try {_            XContentBuilder builder = XContentFactory.contentBuilder(XContentType.JSON)__            builder.map(source)__            settings(Strings.toString(builder), XContentType.JSON)__        } catch (IOException e) {_            throw new ElasticsearchGenerationException("Failed to generate [" + source + "]", e)__        }_        return this__    };the,settings,to,create,the,index,template,with,either,json,or,yaml,format;public,put,index,template,request,settings,map,string,object,source,try,xcontent,builder,builder,xcontent,factory,content,builder,xcontent,type,json,builder,map,source,settings,strings,to,string,builder,xcontent,type,json,catch,ioexception,e,throw,new,elasticsearch,generation,exception,failed,to,generate,source,e,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest settings(Map<String, Object> source);1535723122;The settings to create the index template with (either json or yaml format).;public PutIndexTemplateRequest settings(Map<String, Object> source) {_        try {_            XContentBuilder builder = XContentFactory.contentBuilder(XContentType.JSON)__            builder.map(source)__            settings(Strings.toString(builder), XContentType.JSON)__        } catch (IOException e) {_            throw new ElasticsearchGenerationException("Failed to generate [" + source + "]", e)__        }_        return this__    };the,settings,to,create,the,index,template,with,either,json,or,yaml,format;public,put,index,template,request,settings,map,string,object,source,try,xcontent,builder,builder,xcontent,factory,content,builder,xcontent,type,json,builder,map,source,settings,strings,to,string,builder,xcontent,type,json,catch,ioexception,e,throw,new,elasticsearch,generation,exception,failed,to,generate,source,e,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest settings(Map<String, Object> source);1540486836;The settings to create the index template with (either json or yaml format).;public PutIndexTemplateRequest settings(Map<String, Object> source) {_        try {_            XContentBuilder builder = XContentFactory.contentBuilder(XContentType.JSON)__            builder.map(source)__            settings(Strings.toString(builder), XContentType.JSON)__        } catch (IOException e) {_            throw new ElasticsearchGenerationException("Failed to generate [" + source + "]", e)__        }_        return this__    };the,settings,to,create,the,index,template,with,either,json,or,yaml,format;public,put,index,template,request,settings,map,string,object,source,try,xcontent,builder,builder,xcontent,factory,content,builder,xcontent,type,json,builder,map,source,settings,strings,to,string,builder,xcontent,type,json,catch,ioexception,e,throw,new,elasticsearch,generation,exception,failed,to,generate,source,e,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest settings(Map<String, Object> source);1540583181;The settings to create the index template with (either json or yaml format).;public PutIndexTemplateRequest settings(Map<String, Object> source) {_        try {_            XContentBuilder builder = XContentFactory.contentBuilder(XContentType.JSON)__            builder.map(source)__            settings(Strings.toString(builder), XContentType.JSON)__        } catch (IOException e) {_            throw new ElasticsearchGenerationException("Failed to generate [" + source + "]", e)__        }_        return this__    };the,settings,to,create,the,index,template,with,either,json,or,yaml,format;public,put,index,template,request,settings,map,string,object,source,try,xcontent,builder,builder,xcontent,factory,content,builder,xcontent,type,json,builder,map,source,settings,strings,to,string,builder,xcontent,type,json,catch,ioexception,e,throw,new,elasticsearch,generation,exception,failed,to,generate,source,e,return,this
PutIndexTemplateRequest -> public PutIndexTemplateRequest settings(Map<String, Object> source);1548265937;The settings to create the index template with (either json or yaml format).;public PutIndexTemplateRequest settings(Map<String, Object> source) {_        try {_            XContentBuilder builder = XContentFactory.contentBuilder(XContentType.JSON)__            builder.map(source)__            settings(Strings.toString(builder), XContentType.JSON)__        } catch (IOException e) {_            throw new ElasticsearchGenerationException("Failed to generate [" + source + "]", e)__        }_        return this__    };the,settings,to,create,the,index,template,with,either,json,or,yaml,format;public,put,index,template,request,settings,map,string,object,source,try,xcontent,builder,builder,xcontent,factory,content,builder,xcontent,type,json,builder,map,source,settings,strings,to,string,builder,xcontent,type,json,catch,ioexception,e,throw,new,elasticsearch,generation,exception,failed,to,generate,source,e,return,this
