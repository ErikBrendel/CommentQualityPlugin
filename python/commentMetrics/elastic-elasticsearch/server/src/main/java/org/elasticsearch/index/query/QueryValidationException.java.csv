commented;modifiers;parameterAmount;loc;comment;code
true;public,static;3;8;/**  * Helper method than can be used to add error messages to an existing {@link QueryValidationException}.  * When passing {@code null} as the initial exception, a new exception is created.  *  * @param queryId the query that caused the error  * @param validationError the error message to add to an initial exception  * @param validationException an initial exception. Can be {@code null}, in which case a new exception is created.  * @return a {@link QueryValidationException} with added validation error message  */ ;/**  * Helper method than can be used to add error messages to an existing {@link QueryValidationException}.  * When passing {@code null} as the initial exception, a new exception is created.  *  * @param queryId the query that caused the error  * @param validationError the error message to add to an initial exception  * @param validationException an initial exception. Can be {@code null}, in which case a new exception is created.  * @return a {@link QueryValidationException} with added validation error message  */ public static QueryValidationException addValidationError(String queryId, String validationError, QueryValidationException validationException) {     if (validationException == null) {         validationException = new QueryValidationException().     }     validationException.addValidationError("[" + queryId + "] " + validationError).     return validationException. }
true;public,static;2;8;/**  * Helper method than can be used to add error messages to an existing {@link QueryValidationException}.  * When passing {@code null} as the initial exception, a new exception is created.  * @param validationErrors the error messages to add to an initial exception  * @param validationException an initial exception. Can be {@code null}, in which case a new exception is created.  * @return a {@link QueryValidationException} with added validation error message  */ ;/**  * Helper method than can be used to add error messages to an existing {@link QueryValidationException}.  * When passing {@code null} as the initial exception, a new exception is created.  * @param validationErrors the error messages to add to an initial exception  * @param validationException an initial exception. Can be {@code null}, in which case a new exception is created.  * @return a {@link QueryValidationException} with added validation error message  */ public static QueryValidationException addValidationErrors(List<String> validationErrors, QueryValidationException validationException) {     if (validationException == null) {         validationException = new QueryValidationException().     }     validationException.addValidationErrors(validationErrors).     return validationException. }
