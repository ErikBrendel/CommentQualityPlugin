commented;modifiers;parameterAmount;loc;comment;code
false;protected;1;12;;@Override protected SpanQuery doToQuery(QueryShardContext context) throws IOException {     MappedFieldType mapper = context.fieldMapper(fieldName).     Term term.     if (mapper == null) {         term = new Term(fieldName, BytesRefs.toBytesRef(value)).     } else {         Query termQuery = mapper.termQuery(value, context).         term = MappedFieldType.extractTerm(termQuery).     }     return new SpanTermQuery(term). }
false;public,static;1;42;;public static SpanTermQueryBuilder fromXContent(XContentParser parser) throws IOException, ParsingException {     String fieldName = null.     Object value = null.     float boost = AbstractQueryBuilder.DEFAULT_BOOST.     String queryName = null.     String currentFieldName = null.     XContentParser.Token token.     while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {         if (token == XContentParser.Token.FIELD_NAME) {             currentFieldName = parser.currentName().         } else if (token == XContentParser.Token.START_OBJECT) {             throwParsingExceptionOnMultipleFields(NAME, parser.getTokenLocation(), fieldName, currentFieldName).             fieldName = currentFieldName.             while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {                 if (token == XContentParser.Token.FIELD_NAME) {                     currentFieldName = parser.currentName().                 } else {                     if (TERM_FIELD.match(currentFieldName, parser.getDeprecationHandler())) {                         value = maybeConvertToBytesRef(parser.objectBytes()).                     } else if (BaseTermQueryBuilder.VALUE_FIELD.match(currentFieldName, parser.getDeprecationHandler())) {                         value = maybeConvertToBytesRef(parser.objectBytes()).                     } else if (AbstractQueryBuilder.BOOST_FIELD.match(currentFieldName, parser.getDeprecationHandler())) {                         boost = parser.floatValue().                     } else if (AbstractQueryBuilder.NAME_FIELD.match(currentFieldName, parser.getDeprecationHandler())) {                         queryName = parser.text().                     } else {                         throw new ParsingException(parser.getTokenLocation(), "[span_term] query does not support [" + currentFieldName + "]").                     }                 }             }         } else {             throwParsingExceptionOnMultipleFields(NAME, parser.getTokenLocation(), fieldName, parser.currentName()).             fieldName = parser.currentName().             value = maybeConvertToBytesRef(parser.objectBytes()).         }     }     SpanTermQueryBuilder result = new SpanTermQueryBuilder(fieldName, value).     result.boost(boost).queryName(queryName).     return result. }
false;public;0;4;;@Override public String getWriteableName() {     return NAME. }
