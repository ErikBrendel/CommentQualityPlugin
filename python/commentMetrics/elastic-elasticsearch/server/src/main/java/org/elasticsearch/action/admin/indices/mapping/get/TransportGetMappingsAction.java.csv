commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;5;;@Override protected String executor() {     // very lightweight operation, no need to fork     return ThreadPool.Names.SAME. }
false;protected;2;5;;@Override protected ClusterBlockException checkBlock(GetMappingsRequest request, ClusterState state) {     return state.blocks().indicesBlockedException(ClusterBlockLevel.METADATA_READ, indexNameExpressionResolver.concreteIndexNames(state, request)). }
false;protected;0;4;;@Override protected GetMappingsResponse newResponse() {     return new GetMappingsResponse(). }
false;protected;4;12;;@Override protected void doMasterOperation(final GetMappingsRequest request, String[] concreteIndices, final ClusterState state, final ActionListener<GetMappingsResponse> listener) {     logger.trace("serving getMapping request based on version {}", state.version()).     try {         ImmutableOpenMap<String, ImmutableOpenMap<String, MappingMetaData>> result = state.metaData().findMappings(concreteIndices, request.types(), indicesService.getFieldFilter()).         listener.onResponse(new GetMappingsResponse(result)).     } catch (IOException e) {         listener.onFailure(e).     } }
