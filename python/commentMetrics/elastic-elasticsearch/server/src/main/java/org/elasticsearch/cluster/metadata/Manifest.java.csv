commented;modifiers;parameterAmount;loc;comment;code
false;public,static;2;3;;public static Manifest unknownCurrentTermAndVersion(long globalGeneration, Map<Index, Long> indexGenerations) {     return new Manifest(UNKNOWN_CURRENT_TERM, UNKNOWN_CLUSTER_STATE_VERSION, globalGeneration, indexGenerations). }
true;public;0;3;/**  * Returns global metadata generation.  */ ;/**  * Returns global metadata generation.  */ public long getGlobalGeneration() {     return globalGeneration. }
true;public;0;3;/**  * Returns map from {@link Index} to index metadata generation.  */ ;/**  * Returns map from {@link Index} to index metadata generation.  */ public Map<Index, Long> getIndexGenerations() {     return indexGenerations. }
false;public;0;3;;public long getCurrentTerm() {     return currentTerm. }
false;public;0;3;;public long getClusterStateVersion() {     return clusterStateVersion. }
false;public;1;10;;@Override public boolean equals(Object o) {     if (this == o)         return true.     if (o == null || getClass() != o.getClass())         return false.     Manifest manifest = (Manifest) o.     return currentTerm == manifest.currentTerm && clusterStateVersion == manifest.clusterStateVersion && globalGeneration == manifest.globalGeneration && Objects.equals(indexGenerations, manifest.indexGenerations). }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(currentTerm, clusterStateVersion, globalGeneration, indexGenerations). }
false;public;0;9;;@Override public String toString() {     return "Manifest{" + "currentTerm=" + currentTerm + ", clusterStateVersion=" + clusterStateVersion + ", globalGeneration=" + globalGeneration + ", indexGenerations=" + indexGenerations + '}'. }
false;public;2;4;;@Override public void toXContent(XContentBuilder builder, Manifest state) throws IOException {     state.toXContent(builder, MANIFEST_FORMAT_PARAMS). }
false;public;1;4;;@Override public Manifest fromXContent(XContentParser parser) throws IOException {     return Manifest.fromXContent(parser). }
false;public;2;8;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.field(CURRENT_TERM_PARSE_FIELD.getPreferredName(), currentTerm).     builder.field(CLUSTER_STATE_VERSION_PARSE_FIELD.getPreferredName(), clusterStateVersion).     builder.field(GENERATION_PARSE_FIELD.getPreferredName(), globalGeneration).     builder.array(INDEX_GENERATIONS_PARSE_FIELD.getPreferredName(), indexEntryList().toArray()).     return builder. }
false;private,static;2;3;;private static long requireNonNullElseDefault(Long value, long defaultValue) {     return value != null ? value : defaultValue. }
false;private;0;5;;private List<IndexEntry> indexEntryList() {     return indexGenerations.entrySet().stream().map(entry -> new IndexEntry(entry.getKey(), entry.getValue())).collect(Collectors.toList()). }
false;private,static;1;3;;private static long currentTerm(Object[] manifestFields) {     return requireNonNullElseDefault((Long) manifestFields[0], MISSING_CURRENT_TERM). }
false;private,static;1;3;;private static long clusterStateVersion(Object[] manifestFields) {     return requireNonNullElseDefault((Long) manifestFields[1], MISSING_CLUSTER_STATE_VERSION). }
false;private,static;1;3;;private static long generation(Object[] manifestFields) {     return requireNonNullElseDefault((Long) manifestFields[2], MISSING_GLOBAL_GENERATION). }
false;private,static;1;5;;@SuppressWarnings("unchecked") private static Map<Index, Long> indices(Object[] manifestFields) {     List<IndexEntry> listOfIndices = (List<IndexEntry>) manifestFields[3].     return listOfIndices.stream().collect(Collectors.toMap(IndexEntry::getIndex, IndexEntry::getGeneration)). }
false;public,static;1;3;;public static Manifest fromXContent(XContentParser parser) throws IOException {     return PARSER.parse(parser, null). }
false;public;0;4;;public boolean isEmpty() {     return currentTerm == MISSING_CURRENT_TERM && clusterStateVersion == MISSING_CLUSTER_STATE_VERSION && globalGeneration == MISSING_GLOBAL_GENERATION && indexGenerations.isEmpty(). }
false;public,static;0;3;;public static Manifest empty() {     return new Manifest(MISSING_CURRENT_TERM, MISSING_CLUSTER_STATE_VERSION, MISSING_GLOBAL_GENERATION, Collections.emptyMap()). }
false;public;0;3;;public boolean isGlobalGenerationMissing() {     return globalGeneration == MISSING_GLOBAL_GENERATION. }
false;public;0;3;;public long getGeneration() {     return generation. }
false;public;0;3;;public Index getIndex() {     return index. }
false;public;2;8;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.startObject().     builder.field(INDEX_PARSE_FIELD.getPreferredName(), index).     builder.field(GENERATION_PARSE_FIELD.getPreferredName(), generation).     builder.endObject().     return builder. }
