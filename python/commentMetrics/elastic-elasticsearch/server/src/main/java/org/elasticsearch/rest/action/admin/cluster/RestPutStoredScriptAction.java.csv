commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String getName() {     return "put_stored_script_action". }
false;public;2;13;;@Override public RestChannelConsumer prepareRequest(RestRequest request, NodeClient client) throws IOException {     String id = request.param("id").     String context = request.param("context").     BytesReference content = request.requiredContent().     XContentType xContentType = request.getXContentType().     StoredScriptSource source = StoredScriptSource.parse(content, xContentType).     PutStoredScriptRequest putRequest = new PutStoredScriptRequest(id, context, content, request.getXContentType(), source).     putRequest.masterNodeTimeout(request.paramAsTime("master_timeout", putRequest.masterNodeTimeout())).     putRequest.timeout(request.paramAsTime("timeout", putRequest.timeout())).     return channel -> client.admin().cluster().putStoredScript(putRequest, new RestToXContentListener<>(channel)). }
