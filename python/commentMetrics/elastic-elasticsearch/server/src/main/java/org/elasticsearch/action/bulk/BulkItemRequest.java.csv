commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public int id() {     return id. }
false;public;0;3;;public DocWriteRequest<?> request() {     return request. }
false;public;0;4;;public String index() {     assert request.indices().length == 1.     return request.indices()[0]. }
false;;0;3;;BulkItemResponse getPrimaryResponse() {     return primaryResponse. }
false;;1;3;;void setPrimaryResponse(BulkItemResponse primaryResponse) {     this.primaryResponse = primaryResponse. }
true;public;2;16;/**  * Abort this request, and store a {@link org.elasticsearch.action.bulk.BulkItemResponse.Failure} response.  *  * @param index The concrete index that was resolved for this request  * @param cause The cause of the rejection (may not be null)  * @throws IllegalStateException If a response already exists for this request  */ ;/**  * Abort this request, and store a {@link org.elasticsearch.action.bulk.BulkItemResponse.Failure} response.  *  * @param index The concrete index that was resolved for this request  * @param cause The cause of the rejection (may not be null)  * @throws IllegalStateException If a response already exists for this request  */ public void abort(String index, Exception cause) {     if (primaryResponse == null) {         final BulkItemResponse.Failure failure = new BulkItemResponse.Failure(index, request.type(), request.id(), Objects.requireNonNull(cause), true).         setPrimaryResponse(new BulkItemResponse(id, request.opType(), failure)).     } else {         assert primaryResponse.isFailed() && primaryResponse.getFailure().isAborted() : "response [" + Strings.toString(primaryResponse) + "]. cause [" + cause + "]".         if (primaryResponse.isFailed() && primaryResponse.getFailure().isAborted()) {             primaryResponse.getFailure().getCause().addSuppressed(cause).         } else {             throw new IllegalStateException("aborting item that with response [" + primaryResponse + "] that was previously processed", cause).         }     } }
false;public,static;1;5;;public static BulkItemRequest readBulkItem(StreamInput in) throws IOException {     BulkItemRequest item = new BulkItemRequest().     item.readFrom(in).     return item. }
false;public;1;8;;@Override public void readFrom(StreamInput in) throws IOException {     id = in.readVInt().     request = DocWriteRequest.readDocumentRequest(in).     if (in.readBoolean()) {         primaryResponse = BulkItemResponse.readBulkItem(in).     } }
false;public;1;6;;@Override public void writeTo(StreamOutput out) throws IOException {     out.writeVInt(id).     DocWriteRequest.writeDocumentRequest(out, request).     out.writeOptionalStreamable(primaryResponse). }
