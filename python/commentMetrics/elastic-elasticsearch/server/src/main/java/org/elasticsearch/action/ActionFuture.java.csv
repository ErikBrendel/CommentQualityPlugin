commented;modifiers;parameterAmount;loc;comment;code
true;;0;1;/**  * Similar to {@link #get()}, just catching the {@link InterruptedException} and throwing  * an {@link IllegalStateException} instead. Also catches  * {@link java.util.concurrent.ExecutionException} and throws the actual cause instead.  */ ;/**  * Similar to {@link #get()}, just catching the {@link InterruptedException} and throwing  * an {@link IllegalStateException} instead. Also catches  * {@link java.util.concurrent.ExecutionException} and throws the actual cause instead.  */ T actionGet().
true;;1;1;/**  * Similar to {@link #get(long, java.util.concurrent.TimeUnit)}, just catching the {@link InterruptedException} and throwing  * an {@link IllegalStateException} instead. Also catches  * {@link java.util.concurrent.ExecutionException} and throws the actual cause instead.  */ ;/**  * Similar to {@link #get(long, java.util.concurrent.TimeUnit)}, just catching the {@link InterruptedException} and throwing  * an {@link IllegalStateException} instead. Also catches  * {@link java.util.concurrent.ExecutionException} and throws the actual cause instead.  */ T actionGet(String timeout).
true;;1;1;/**  * Similar to {@link #get(long, java.util.concurrent.TimeUnit)}, just catching the {@link InterruptedException} and throwing  * an {@link IllegalStateException} instead. Also catches  * {@link java.util.concurrent.ExecutionException} and throws the actual cause instead.  *  * @param timeoutMillis Timeout in millis  */ ;/**  * Similar to {@link #get(long, java.util.concurrent.TimeUnit)}, just catching the {@link InterruptedException} and throwing  * an {@link IllegalStateException} instead. Also catches  * {@link java.util.concurrent.ExecutionException} and throws the actual cause instead.  *  * @param timeoutMillis Timeout in millis  */ T actionGet(long timeoutMillis).
true;;2;1;/**  * Similar to {@link #get(long, java.util.concurrent.TimeUnit)}, just catching the {@link InterruptedException} and throwing  * an {@link IllegalStateException} instead. Also catches  * {@link java.util.concurrent.ExecutionException} and throws the actual cause instead.  */ ;/**  * Similar to {@link #get(long, java.util.concurrent.TimeUnit)}, just catching the {@link InterruptedException} and throwing  * an {@link IllegalStateException} instead. Also catches  * {@link java.util.concurrent.ExecutionException} and throws the actual cause instead.  */ T actionGet(long timeout, TimeUnit unit).
true;;1;1;/**  * Similar to {@link #get(long, java.util.concurrent.TimeUnit)}, just catching the {@link InterruptedException} and throwing  * an {@link IllegalStateException} instead. Also catches  * {@link java.util.concurrent.ExecutionException} and throws the actual cause instead.  */ ;/**  * Similar to {@link #get(long, java.util.concurrent.TimeUnit)}, just catching the {@link InterruptedException} and throwing  * an {@link IllegalStateException} instead. Also catches  * {@link java.util.concurrent.ExecutionException} and throws the actual cause instead.  */ T actionGet(TimeValue timeout).
