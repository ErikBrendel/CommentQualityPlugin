# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractSearchAsyncAction -> long buildTookInMillis();1524684173;Builds how long it took to execute the search.;long buildTookInMillis() {_        return TimeUnit.NANOSECONDS.toMillis(_                timeProvider.getRelativeCurrentNanos() - timeProvider.getRelativeStartNanos())__    };builds,how,long,it,took,to,execute,the,search;long,build,took,in,millis,return,time,unit,nanoseconds,to,millis,time,provider,get,relative,current,nanos,time,provider,get,relative,start,nanos
AbstractSearchAsyncAction -> long buildTookInMillis();1524780945;Builds how long it took to execute the search.;long buildTookInMillis() {_        return TimeUnit.NANOSECONDS.toMillis(_                timeProvider.getRelativeCurrentNanos() - timeProvider.getRelativeStartNanos())__    };builds,how,long,it,took,to,execute,the,search;long,build,took,in,millis,return,time,unit,nanoseconds,to,millis,time,provider,get,relative,current,nanos,time,provider,get,relative,start,nanos
AbstractSearchAsyncAction -> long buildTookInMillis();1528706846;Builds how long it took to execute the search.;long buildTookInMillis() {_        return TimeUnit.NANOSECONDS.toMillis(_                timeProvider.getRelativeCurrentNanos() - timeProvider.getRelativeStartNanos())__    };builds,how,long,it,took,to,execute,the,search;long,build,took,in,millis,return,time,unit,nanoseconds,to,millis,time,provider,get,relative,current,nanos,time,provider,get,relative,start,nanos
AbstractSearchAsyncAction -> long buildTookInMillis();1544556269;Builds how long it took to execute the search.;long buildTookInMillis() {_        return TimeUnit.NANOSECONDS.toMillis(_                timeProvider.getRelativeCurrentNanos() - timeProvider.getRelativeStartNanos())__    };builds,how,long,it,took,to,execute,the,search;long,build,took,in,millis,return,time,unit,nanoseconds,to,millis,time,provider,get,relative,current,nanos,time,provider,get,relative,start,nanos
AbstractSearchAsyncAction -> long buildTookInMillis();1545997405;Builds how long it took to execute the search.;long buildTookInMillis() {_        return TimeUnit.NANOSECONDS.toMillis(_                timeProvider.getRelativeCurrentNanos() - timeProvider.getRelativeStartNanos())__    };builds,how,long,it,took,to,execute,the,search;long,build,took,in,millis,return,time,unit,nanoseconds,to,millis,time,provider,get,relative,current,nanos,time,provider,get,relative,start,nanos
AbstractSearchAsyncAction -> long buildTookInMillis();1546418833;Builds how long it took to execute the search.;long buildTookInMillis() {_        return TimeUnit.NANOSECONDS.toMillis(_                timeProvider.getRelativeCurrentNanos() - timeProvider.getRelativeStartNanos())__    };builds,how,long,it,took,to,execute,the,search;long,build,took,in,millis,return,time,unit,nanoseconds,to,millis,time,provider,get,relative,current,nanos,time,provider,get,relative,start,nanos
AbstractSearchAsyncAction -> long buildTookInMillis();1546630609;Builds how long it took to execute the search.;long buildTookInMillis() {_        return TimeUnit.NANOSECONDS.toMillis(_                timeProvider.getRelativeCurrentNanos() - timeProvider.getRelativeStartNanos())__    };builds,how,long,it,took,to,execute,the,search;long,build,took,in,millis,return,time,unit,nanoseconds,to,millis,time,provider,get,relative,current,nanos,time,provider,get,relative,start,nanos
AbstractSearchAsyncAction -> long buildTookInMillis();1548067907;Builds how long it took to execute the search.;long buildTookInMillis() {_        return timeProvider.buildTookInMillis()__    };builds,how,long,it,took,to,execute,the,search;long,build,took,in,millis,return,time,provider,build,took,in,millis
AbstractSearchAsyncAction -> long buildTookInMillis();1548420339;Builds how long it took to execute the search.;long buildTookInMillis() {_        return timeProvider.buildTookInMillis()__    };builds,how,long,it,took,to,execute,the,search;long,build,took,in,millis,return,time,provider,build,took,in,millis
AbstractSearchAsyncAction -> long buildTookInMillis();1549888792;Builds how long it took to execute the search.;long buildTookInMillis() {_        return timeProvider.buildTookInMillis()__    };builds,how,long,it,took,to,execute,the,search;long,build,took,in,millis,return,time,provider,build,took,in,millis
AbstractSearchAsyncAction -> public final void start();1524684173;This is the main entry point for a search. This method starts the search execution of the initial phase.;public final void start() {_        if (getNumShards() == 0) {_            _            _            listener.onResponse(new SearchResponse(InternalSearchResponse.empty(), null, 0, 0, 0, buildTookInMillis(),_                ShardSearchFailure.EMPTY_ARRAY, clusters))__            return__        }_        executePhase(this)__    };this,is,the,main,entry,point,for,a,search,this,method,starts,the,search,execution,of,the,initial,phase;public,final,void,start,if,get,num,shards,0,listener,on,response,new,search,response,internal,search,response,empty,null,0,0,0,build,took,in,millis,shard,search,failure,clusters,return,execute,phase,this
AbstractSearchAsyncAction -> public final void start();1524780945;This is the main entry point for a search. This method starts the search execution of the initial phase.;public final void start() {_        if (getNumShards() == 0) {_            _            _            listener.onResponse(new SearchResponse(InternalSearchResponse.empty(), null, 0, 0, 0, buildTookInMillis(),_                ShardSearchFailure.EMPTY_ARRAY, clusters))__            return__        }_        executePhase(this)__    };this,is,the,main,entry,point,for,a,search,this,method,starts,the,search,execution,of,the,initial,phase;public,final,void,start,if,get,num,shards,0,listener,on,response,new,search,response,internal,search,response,empty,null,0,0,0,build,took,in,millis,shard,search,failure,clusters,return,execute,phase,this
AbstractSearchAsyncAction -> public final void start();1528706846;This is the main entry point for a search. This method starts the search execution of the initial phase.;public final void start() {_        if (getNumShards() == 0) {_            _            _            listener.onResponse(new SearchResponse(InternalSearchResponse.empty(), null, 0, 0, 0, buildTookInMillis(),_                ShardSearchFailure.EMPTY_ARRAY, clusters))__            return__        }_        executePhase(this)__    };this,is,the,main,entry,point,for,a,search,this,method,starts,the,search,execution,of,the,initial,phase;public,final,void,start,if,get,num,shards,0,listener,on,response,new,search,response,internal,search,response,empty,null,0,0,0,build,took,in,millis,shard,search,failure,clusters,return,execute,phase,this
AbstractSearchAsyncAction -> public final void start();1544556269;This is the main entry point for a search. This method starts the search execution of the initial phase.;public final void start() {_        if (getNumShards() == 0) {_            _            _            listener.onResponse(new SearchResponse(InternalSearchResponse.empty(), null, 0, 0, 0, buildTookInMillis(),_                ShardSearchFailure.EMPTY_ARRAY, clusters))__            return__        }_        executePhase(this)__    };this,is,the,main,entry,point,for,a,search,this,method,starts,the,search,execution,of,the,initial,phase;public,final,void,start,if,get,num,shards,0,listener,on,response,new,search,response,internal,search,response,empty,null,0,0,0,build,took,in,millis,shard,search,failure,clusters,return,execute,phase,this
AbstractSearchAsyncAction -> public final void start();1545997405;This is the main entry point for a search. This method starts the search execution of the initial phase.;public final void start() {_        if (getNumShards() == 0) {_            _            _            listener.onResponse(new SearchResponse(InternalSearchResponse.empty(), null, 0, 0, 0, buildTookInMillis(),_                ShardSearchFailure.EMPTY_ARRAY, clusters))__            return__        }_        executePhase(this)__    };this,is,the,main,entry,point,for,a,search,this,method,starts,the,search,execution,of,the,initial,phase;public,final,void,start,if,get,num,shards,0,listener,on,response,new,search,response,internal,search,response,empty,null,0,0,0,build,took,in,millis,shard,search,failure,clusters,return,execute,phase,this
AbstractSearchAsyncAction -> public final void start();1546418833;This is the main entry point for a search. This method starts the search execution of the initial phase.;public final void start() {_        if (getNumShards() == 0) {_            _            _            listener.onResponse(new SearchResponse(InternalSearchResponse.empty(), null, 0, 0, 0, buildTookInMillis(),_                ShardSearchFailure.EMPTY_ARRAY, clusters))__            return__        }_        executePhase(this)__    };this,is,the,main,entry,point,for,a,search,this,method,starts,the,search,execution,of,the,initial,phase;public,final,void,start,if,get,num,shards,0,listener,on,response,new,search,response,internal,search,response,empty,null,0,0,0,build,took,in,millis,shard,search,failure,clusters,return,execute,phase,this
AbstractSearchAsyncAction -> public final void start();1546630609;This is the main entry point for a search. This method starts the search execution of the initial phase.;public final void start() {_        if (getNumShards() == 0) {_            _            __            boolean withTotalHits = request.source() != null ?_                _                request.source().trackTotalHitsUpTo() != SearchContext.TRACK_TOTAL_HITS_DISABLED : true__            listener.onResponse(new SearchResponse(InternalSearchResponse.empty(withTotalHits), null, 0, 0, 0, buildTookInMillis(),_                ShardSearchFailure.EMPTY_ARRAY, clusters))__            return__        }_        executePhase(this)__    };this,is,the,main,entry,point,for,a,search,this,method,starts,the,search,execution,of,the,initial,phase;public,final,void,start,if,get,num,shards,0,boolean,with,total,hits,request,source,null,request,source,track,total,hits,up,to,search,context,true,listener,on,response,new,search,response,internal,search,response,empty,with,total,hits,null,0,0,0,build,took,in,millis,shard,search,failure,clusters,return,execute,phase,this
AbstractSearchAsyncAction -> public final void start();1548067907;This is the main entry point for a search. This method starts the search execution of the initial phase.;public final void start() {_        if (getNumShards() == 0) {_            _            __            boolean withTotalHits = request.source() != null ?_                _                request.source().trackTotalHitsUpTo() != SearchContext.TRACK_TOTAL_HITS_DISABLED : true__            listener.onResponse(new SearchResponse(InternalSearchResponse.empty(withTotalHits), null, 0, 0, 0, buildTookInMillis(),_                ShardSearchFailure.EMPTY_ARRAY, clusters))__            return__        }_        executePhase(this)__    };this,is,the,main,entry,point,for,a,search,this,method,starts,the,search,execution,of,the,initial,phase;public,final,void,start,if,get,num,shards,0,boolean,with,total,hits,request,source,null,request,source,track,total,hits,up,to,search,context,true,listener,on,response,new,search,response,internal,search,response,empty,with,total,hits,null,0,0,0,build,took,in,millis,shard,search,failure,clusters,return,execute,phase,this
AbstractSearchAsyncAction -> public final void start();1548420339;This is the main entry point for a search. This method starts the search execution of the initial phase.;public final void start() {_        if (getNumShards() == 0) {_            _            __            int trackTotalHitsUpTo = request.source() == null ? SearchContext.DEFAULT_TRACK_TOTAL_HITS_UP_TO :_                request.source().trackTotalHitsUpTo() == null ? SearchContext.DEFAULT_TRACK_TOTAL_HITS_UP_TO :_                    request.source().trackTotalHitsUpTo()__            _            boolean withTotalHits = trackTotalHitsUpTo != SearchContext.TRACK_TOTAL_HITS_DISABLED__            listener.onResponse(new SearchResponse(InternalSearchResponse.empty(withTotalHits), null, 0, 0, 0, buildTookInMillis(),_                ShardSearchFailure.EMPTY_ARRAY, clusters))__            return__        }_        executePhase(this)__    };this,is,the,main,entry,point,for,a,search,this,method,starts,the,search,execution,of,the,initial,phase;public,final,void,start,if,get,num,shards,0,int,track,total,hits,up,to,request,source,null,search,context,request,source,track,total,hits,up,to,null,search,context,request,source,track,total,hits,up,to,boolean,with,total,hits,track,total,hits,up,to,search,context,listener,on,response,new,search,response,internal,search,response,empty,with,total,hits,null,0,0,0,build,took,in,millis,shard,search,failure,clusters,return,execute,phase,this
AbstractSearchAsyncAction -> public final void start();1549888792;This is the main entry point for a search. This method starts the search execution of the initial phase.;public final void start() {_        if (getNumShards() == 0) {_            _            __            int trackTotalHitsUpTo = request.source() == null ? SearchContext.DEFAULT_TRACK_TOTAL_HITS_UP_TO :_                request.source().trackTotalHitsUpTo() == null ? SearchContext.DEFAULT_TRACK_TOTAL_HITS_UP_TO :_                    request.source().trackTotalHitsUpTo()__            _            boolean withTotalHits = trackTotalHitsUpTo != SearchContext.TRACK_TOTAL_HITS_DISABLED__            listener.onResponse(new SearchResponse(InternalSearchResponse.empty(withTotalHits), null, 0, 0, 0, buildTookInMillis(),_                ShardSearchFailure.EMPTY_ARRAY, clusters))__            return__        }_        executePhase(this)__    };this,is,the,main,entry,point,for,a,search,this,method,starts,the,search,execution,of,the,initial,phase;public,final,void,start,if,get,num,shards,0,int,track,total,hits,up,to,request,source,null,search,context,request,source,track,total,hits,up,to,null,search,context,request,source,track,total,hits,up,to,boolean,with,total,hits,track,total,hits,up,to,search,context,listener,on,response,new,search,response,internal,search,response,empty,with,total,hits,null,0,0,0,build,took,in,millis,shard,search,failure,clusters,return,execute,phase,this
AbstractSearchAsyncAction -> protected abstract SearchPhase getNextPhase(SearchPhaseResults<Result> results, SearchPhaseContext context)_;1524684173;Returns the next phase based on the results of the initial search phase_@param results the results of the initial search phase. Each non null element in the result array represent a successfully_executed shard request_@param context the search context for the next phase;protected abstract SearchPhase getNextPhase(SearchPhaseResults<Result> results, SearchPhaseContext context)_;returns,the,next,phase,based,on,the,results,of,the,initial,search,phase,param,results,the,results,of,the,initial,search,phase,each,non,null,element,in,the,result,array,represent,a,successfully,executed,shard,request,param,context,the,search,context,for,the,next,phase;protected,abstract,search,phase,get,next,phase,search,phase,results,result,results,search,phase,context,context
AbstractSearchAsyncAction -> protected abstract SearchPhase getNextPhase(SearchPhaseResults<Result> results, SearchPhaseContext context)_;1524780945;Returns the next phase based on the results of the initial search phase_@param results the results of the initial search phase. Each non null element in the result array represent a successfully_executed shard request_@param context the search context for the next phase;protected abstract SearchPhase getNextPhase(SearchPhaseResults<Result> results, SearchPhaseContext context)_;returns,the,next,phase,based,on,the,results,of,the,initial,search,phase,param,results,the,results,of,the,initial,search,phase,each,non,null,element,in,the,result,array,represent,a,successfully,executed,shard,request,param,context,the,search,context,for,the,next,phase;protected,abstract,search,phase,get,next,phase,search,phase,results,result,results,search,phase,context,context
AbstractSearchAsyncAction -> protected abstract SearchPhase getNextPhase(SearchPhaseResults<Result> results, SearchPhaseContext context)_;1528706846;Returns the next phase based on the results of the initial search phase_@param results the results of the initial search phase. Each non null element in the result array represent a successfully_executed shard request_@param context the search context for the next phase;protected abstract SearchPhase getNextPhase(SearchPhaseResults<Result> results, SearchPhaseContext context)_;returns,the,next,phase,based,on,the,results,of,the,initial,search,phase,param,results,the,results,of,the,initial,search,phase,each,non,null,element,in,the,result,array,represent,a,successfully,executed,shard,request,param,context,the,search,context,for,the,next,phase;protected,abstract,search,phase,get,next,phase,search,phase,results,result,results,search,phase,context,context
AbstractSearchAsyncAction -> protected abstract SearchPhase getNextPhase(SearchPhaseResults<Result> results, SearchPhaseContext context)_;1544556269;Returns the next phase based on the results of the initial search phase_@param results the results of the initial search phase. Each non null element in the result array represent a successfully_executed shard request_@param context the search context for the next phase;protected abstract SearchPhase getNextPhase(SearchPhaseResults<Result> results, SearchPhaseContext context)_;returns,the,next,phase,based,on,the,results,of,the,initial,search,phase,param,results,the,results,of,the,initial,search,phase,each,non,null,element,in,the,result,array,represent,a,successfully,executed,shard,request,param,context,the,search,context,for,the,next,phase;protected,abstract,search,phase,get,next,phase,search,phase,results,result,results,search,phase,context,context
AbstractSearchAsyncAction -> protected abstract SearchPhase getNextPhase(SearchPhaseResults<Result> results, SearchPhaseContext context)_;1545997405;Returns the next phase based on the results of the initial search phase_@param results the results of the initial search phase. Each non null element in the result array represent a successfully_executed shard request_@param context the search context for the next phase;protected abstract SearchPhase getNextPhase(SearchPhaseResults<Result> results, SearchPhaseContext context)_;returns,the,next,phase,based,on,the,results,of,the,initial,search,phase,param,results,the,results,of,the,initial,search,phase,each,non,null,element,in,the,result,array,represent,a,successfully,executed,shard,request,param,context,the,search,context,for,the,next,phase;protected,abstract,search,phase,get,next,phase,search,phase,results,result,results,search,phase,context,context
AbstractSearchAsyncAction -> protected abstract SearchPhase getNextPhase(SearchPhaseResults<Result> results, SearchPhaseContext context)_;1546418833;Returns the next phase based on the results of the initial search phase_@param results the results of the initial search phase. Each non null element in the result array represent a successfully_executed shard request_@param context the search context for the next phase;protected abstract SearchPhase getNextPhase(SearchPhaseResults<Result> results, SearchPhaseContext context)_;returns,the,next,phase,based,on,the,results,of,the,initial,search,phase,param,results,the,results,of,the,initial,search,phase,each,non,null,element,in,the,result,array,represent,a,successfully,executed,shard,request,param,context,the,search,context,for,the,next,phase;protected,abstract,search,phase,get,next,phase,search,phase,results,result,results,search,phase,context,context
AbstractSearchAsyncAction -> protected abstract SearchPhase getNextPhase(SearchPhaseResults<Result> results, SearchPhaseContext context)_;1546630609;Returns the next phase based on the results of the initial search phase_@param results the results of the initial search phase. Each non null element in the result array represent a successfully_executed shard request_@param context the search context for the next phase;protected abstract SearchPhase getNextPhase(SearchPhaseResults<Result> results, SearchPhaseContext context)_;returns,the,next,phase,based,on,the,results,of,the,initial,search,phase,param,results,the,results,of,the,initial,search,phase,each,non,null,element,in,the,result,array,represent,a,successfully,executed,shard,request,param,context,the,search,context,for,the,next,phase;protected,abstract,search,phase,get,next,phase,search,phase,results,result,results,search,phase,context,context
AbstractSearchAsyncAction -> protected abstract SearchPhase getNextPhase(SearchPhaseResults<Result> results, SearchPhaseContext context)_;1548067907;Returns the next phase based on the results of the initial search phase_@param results the results of the initial search phase. Each non null element in the result array represent a successfully_executed shard request_@param context the search context for the next phase;protected abstract SearchPhase getNextPhase(SearchPhaseResults<Result> results, SearchPhaseContext context)_;returns,the,next,phase,based,on,the,results,of,the,initial,search,phase,param,results,the,results,of,the,initial,search,phase,each,non,null,element,in,the,result,array,represent,a,successfully,executed,shard,request,param,context,the,search,context,for,the,next,phase;protected,abstract,search,phase,get,next,phase,search,phase,results,result,results,search,phase,context,context
AbstractSearchAsyncAction -> protected abstract SearchPhase getNextPhase(SearchPhaseResults<Result> results, SearchPhaseContext context)_;1548420339;Returns the next phase based on the results of the initial search phase_@param results the results of the initial search phase. Each non null element in the result array represent a successfully_executed shard request_@param context the search context for the next phase;protected abstract SearchPhase getNextPhase(SearchPhaseResults<Result> results, SearchPhaseContext context)_;returns,the,next,phase,based,on,the,results,of,the,initial,search,phase,param,results,the,results,of,the,initial,search,phase,each,non,null,element,in,the,result,array,represent,a,successfully,executed,shard,request,param,context,the,search,context,for,the,next,phase;protected,abstract,search,phase,get,next,phase,search,phase,results,result,results,search,phase,context,context
AbstractSearchAsyncAction -> protected abstract SearchPhase getNextPhase(SearchPhaseResults<Result> results, SearchPhaseContext context)_;1549888792;Returns the next phase based on the results of the initial search phase_@param results the results of the initial search phase. Each non null element in the result array represent a successfully_executed shard request_@param context the search context for the next phase;protected abstract SearchPhase getNextPhase(SearchPhaseResults<Result> results, SearchPhaseContext context)_;returns,the,next,phase,based,on,the,results,of,the,initial,search,phase,param,results,the,results,of,the,initial,search,phase,each,non,null,element,in,the,result,array,represent,a,successfully,executed,shard,request,param,context,the,search,context,for,the,next,phase;protected,abstract,search,phase,get,next,phase,search,phase,results,result,results,search,phase,context,context
AbstractSearchAsyncAction -> private void raisePhaseFailure(SearchPhaseExecutionException exception);1524684173;This method should be called if a search phase failed to ensure all relevant search contexts and resources are released._this method will also notify the listener and sends back a failure to the user.__@param exception the exception explaining or causing the phase failure;private void raisePhaseFailure(SearchPhaseExecutionException exception) {_        results.getSuccessfulResults().forEach((entry) -> {_            try {_                SearchShardTarget searchShardTarget = entry.getSearchShardTarget()__                Transport.Connection connection = getConnection(null, searchShardTarget.getNodeId())__                sendReleaseSearchContext(entry.getRequestId(), connection, searchShardTarget.getOriginalIndices())__            } catch (Exception inner) {_                inner.addSuppressed(exception)__                logger.trace("failed to release context", inner)__            }_        })__        listener.onFailure(exception)__    };this,method,should,be,called,if,a,search,phase,failed,to,ensure,all,relevant,search,contexts,and,resources,are,released,this,method,will,also,notify,the,listener,and,sends,back,a,failure,to,the,user,param,exception,the,exception,explaining,or,causing,the,phase,failure;private,void,raise,phase,failure,search,phase,execution,exception,exception,results,get,successful,results,for,each,entry,try,search,shard,target,search,shard,target,entry,get,search,shard,target,transport,connection,connection,get,connection,null,search,shard,target,get,node,id,send,release,search,context,entry,get,request,id,connection,search,shard,target,get,original,indices,catch,exception,inner,inner,add,suppressed,exception,logger,trace,failed,to,release,context,inner,listener,on,failure,exception
AbstractSearchAsyncAction -> private void raisePhaseFailure(SearchPhaseExecutionException exception);1524780945;This method should be called if a search phase failed to ensure all relevant search contexts and resources are released._this method will also notify the listener and sends back a failure to the user.__@param exception the exception explaining or causing the phase failure;private void raisePhaseFailure(SearchPhaseExecutionException exception) {_        results.getSuccessfulResults().forEach((entry) -> {_            try {_                SearchShardTarget searchShardTarget = entry.getSearchShardTarget()__                Transport.Connection connection = getConnection(null, searchShardTarget.getNodeId())__                sendReleaseSearchContext(entry.getRequestId(), connection, searchShardTarget.getOriginalIndices())__            } catch (Exception inner) {_                inner.addSuppressed(exception)__                logger.trace("failed to release context", inner)__            }_        })__        listener.onFailure(exception)__    };this,method,should,be,called,if,a,search,phase,failed,to,ensure,all,relevant,search,contexts,and,resources,are,released,this,method,will,also,notify,the,listener,and,sends,back,a,failure,to,the,user,param,exception,the,exception,explaining,or,causing,the,phase,failure;private,void,raise,phase,failure,search,phase,execution,exception,exception,results,get,successful,results,for,each,entry,try,search,shard,target,search,shard,target,entry,get,search,shard,target,transport,connection,connection,get,connection,null,search,shard,target,get,node,id,send,release,search,context,entry,get,request,id,connection,search,shard,target,get,original,indices,catch,exception,inner,inner,add,suppressed,exception,logger,trace,failed,to,release,context,inner,listener,on,failure,exception
AbstractSearchAsyncAction -> private void raisePhaseFailure(SearchPhaseExecutionException exception);1528706846;This method should be called if a search phase failed to ensure all relevant search contexts and resources are released._this method will also notify the listener and sends back a failure to the user.__@param exception the exception explaining or causing the phase failure;private void raisePhaseFailure(SearchPhaseExecutionException exception) {_        results.getSuccessfulResults().forEach((entry) -> {_            try {_                SearchShardTarget searchShardTarget = entry.getSearchShardTarget()__                Transport.Connection connection = getConnection(null, searchShardTarget.getNodeId())__                sendReleaseSearchContext(entry.getRequestId(), connection, searchShardTarget.getOriginalIndices())__            } catch (Exception inner) {_                inner.addSuppressed(exception)__                logger.trace("failed to release context", inner)__            }_        })__        listener.onFailure(exception)__    };this,method,should,be,called,if,a,search,phase,failed,to,ensure,all,relevant,search,contexts,and,resources,are,released,this,method,will,also,notify,the,listener,and,sends,back,a,failure,to,the,user,param,exception,the,exception,explaining,or,causing,the,phase,failure;private,void,raise,phase,failure,search,phase,execution,exception,exception,results,get,successful,results,for,each,entry,try,search,shard,target,search,shard,target,entry,get,search,shard,target,transport,connection,connection,get,connection,null,search,shard,target,get,node,id,send,release,search,context,entry,get,request,id,connection,search,shard,target,get,original,indices,catch,exception,inner,inner,add,suppressed,exception,logger,trace,failed,to,release,context,inner,listener,on,failure,exception
AbstractSearchAsyncAction -> private void raisePhaseFailure(SearchPhaseExecutionException exception);1544556269;This method should be called if a search phase failed to ensure all relevant search contexts and resources are released._this method will also notify the listener and sends back a failure to the user.__@param exception the exception explaining or causing the phase failure;private void raisePhaseFailure(SearchPhaseExecutionException exception) {_        results.getSuccessfulResults().forEach((entry) -> {_            try {_                SearchShardTarget searchShardTarget = entry.getSearchShardTarget()__                Transport.Connection connection = getConnection(null, searchShardTarget.getNodeId())__                sendReleaseSearchContext(entry.getRequestId(), connection, searchShardTarget.getOriginalIndices())__            } catch (Exception inner) {_                inner.addSuppressed(exception)__                logger.trace("failed to release context", inner)__            }_        })__        listener.onFailure(exception)__    };this,method,should,be,called,if,a,search,phase,failed,to,ensure,all,relevant,search,contexts,and,resources,are,released,this,method,will,also,notify,the,listener,and,sends,back,a,failure,to,the,user,param,exception,the,exception,explaining,or,causing,the,phase,failure;private,void,raise,phase,failure,search,phase,execution,exception,exception,results,get,successful,results,for,each,entry,try,search,shard,target,search,shard,target,entry,get,search,shard,target,transport,connection,connection,get,connection,null,search,shard,target,get,node,id,send,release,search,context,entry,get,request,id,connection,search,shard,target,get,original,indices,catch,exception,inner,inner,add,suppressed,exception,logger,trace,failed,to,release,context,inner,listener,on,failure,exception
AbstractSearchAsyncAction -> private void raisePhaseFailure(SearchPhaseExecutionException exception);1545997405;This method should be called if a search phase failed to ensure all relevant search contexts and resources are released._this method will also notify the listener and sends back a failure to the user.__@param exception the exception explaining or causing the phase failure;private void raisePhaseFailure(SearchPhaseExecutionException exception) {_        results.getSuccessfulResults().forEach((entry) -> {_            try {_                SearchShardTarget searchShardTarget = entry.getSearchShardTarget()__                Transport.Connection connection = getConnection(null, searchShardTarget.getNodeId())__                sendReleaseSearchContext(entry.getRequestId(), connection, searchShardTarget.getOriginalIndices())__            } catch (Exception inner) {_                inner.addSuppressed(exception)__                logger.trace("failed to release context", inner)__            }_        })__        listener.onFailure(exception)__    };this,method,should,be,called,if,a,search,phase,failed,to,ensure,all,relevant,search,contexts,and,resources,are,released,this,method,will,also,notify,the,listener,and,sends,back,a,failure,to,the,user,param,exception,the,exception,explaining,or,causing,the,phase,failure;private,void,raise,phase,failure,search,phase,execution,exception,exception,results,get,successful,results,for,each,entry,try,search,shard,target,search,shard,target,entry,get,search,shard,target,transport,connection,connection,get,connection,null,search,shard,target,get,node,id,send,release,search,context,entry,get,request,id,connection,search,shard,target,get,original,indices,catch,exception,inner,inner,add,suppressed,exception,logger,trace,failed,to,release,context,inner,listener,on,failure,exception
AbstractSearchAsyncAction -> private void raisePhaseFailure(SearchPhaseExecutionException exception);1546418833;This method should be called if a search phase failed to ensure all relevant search contexts and resources are released._this method will also notify the listener and sends back a failure to the user.__@param exception the exception explaining or causing the phase failure;private void raisePhaseFailure(SearchPhaseExecutionException exception) {_        results.getSuccessfulResults().forEach((entry) -> {_            try {_                SearchShardTarget searchShardTarget = entry.getSearchShardTarget()__                Transport.Connection connection = getConnection(null, searchShardTarget.getNodeId())__                sendReleaseSearchContext(entry.getRequestId(), connection, searchShardTarget.getOriginalIndices())__            } catch (Exception inner) {_                inner.addSuppressed(exception)__                logger.trace("failed to release context", inner)__            }_        })__        listener.onFailure(exception)__    };this,method,should,be,called,if,a,search,phase,failed,to,ensure,all,relevant,search,contexts,and,resources,are,released,this,method,will,also,notify,the,listener,and,sends,back,a,failure,to,the,user,param,exception,the,exception,explaining,or,causing,the,phase,failure;private,void,raise,phase,failure,search,phase,execution,exception,exception,results,get,successful,results,for,each,entry,try,search,shard,target,search,shard,target,entry,get,search,shard,target,transport,connection,connection,get,connection,null,search,shard,target,get,node,id,send,release,search,context,entry,get,request,id,connection,search,shard,target,get,original,indices,catch,exception,inner,inner,add,suppressed,exception,logger,trace,failed,to,release,context,inner,listener,on,failure,exception
AbstractSearchAsyncAction -> private void raisePhaseFailure(SearchPhaseExecutionException exception);1546630609;This method should be called if a search phase failed to ensure all relevant search contexts and resources are released._this method will also notify the listener and sends back a failure to the user.__@param exception the exception explaining or causing the phase failure;private void raisePhaseFailure(SearchPhaseExecutionException exception) {_        results.getSuccessfulResults().forEach((entry) -> {_            try {_                SearchShardTarget searchShardTarget = entry.getSearchShardTarget()__                Transport.Connection connection = getConnection(null, searchShardTarget.getNodeId())__                sendReleaseSearchContext(entry.getRequestId(), connection, searchShardTarget.getOriginalIndices())__            } catch (Exception inner) {_                inner.addSuppressed(exception)__                logger.trace("failed to release context", inner)__            }_        })__        listener.onFailure(exception)__    };this,method,should,be,called,if,a,search,phase,failed,to,ensure,all,relevant,search,contexts,and,resources,are,released,this,method,will,also,notify,the,listener,and,sends,back,a,failure,to,the,user,param,exception,the,exception,explaining,or,causing,the,phase,failure;private,void,raise,phase,failure,search,phase,execution,exception,exception,results,get,successful,results,for,each,entry,try,search,shard,target,search,shard,target,entry,get,search,shard,target,transport,connection,connection,get,connection,null,search,shard,target,get,node,id,send,release,search,context,entry,get,request,id,connection,search,shard,target,get,original,indices,catch,exception,inner,inner,add,suppressed,exception,logger,trace,failed,to,release,context,inner,listener,on,failure,exception
AbstractSearchAsyncAction -> private void raisePhaseFailure(SearchPhaseExecutionException exception);1548067907;This method should be called if a search phase failed to ensure all relevant search contexts and resources are released._this method will also notify the listener and sends back a failure to the user.__@param exception the exception explaining or causing the phase failure;private void raisePhaseFailure(SearchPhaseExecutionException exception) {_        results.getSuccessfulResults().forEach((entry) -> {_            try {_                SearchShardTarget searchShardTarget = entry.getSearchShardTarget()__                Transport.Connection connection = getConnection(null, searchShardTarget.getNodeId())__                sendReleaseSearchContext(entry.getRequestId(), connection, searchShardTarget.getOriginalIndices())__            } catch (Exception inner) {_                inner.addSuppressed(exception)__                logger.trace("failed to release context", inner)__            }_        })__        listener.onFailure(exception)__    };this,method,should,be,called,if,a,search,phase,failed,to,ensure,all,relevant,search,contexts,and,resources,are,released,this,method,will,also,notify,the,listener,and,sends,back,a,failure,to,the,user,param,exception,the,exception,explaining,or,causing,the,phase,failure;private,void,raise,phase,failure,search,phase,execution,exception,exception,results,get,successful,results,for,each,entry,try,search,shard,target,search,shard,target,entry,get,search,shard,target,transport,connection,connection,get,connection,null,search,shard,target,get,node,id,send,release,search,context,entry,get,request,id,connection,search,shard,target,get,original,indices,catch,exception,inner,inner,add,suppressed,exception,logger,trace,failed,to,release,context,inner,listener,on,failure,exception
AbstractSearchAsyncAction -> private void raisePhaseFailure(SearchPhaseExecutionException exception);1548420339;This method should be called if a search phase failed to ensure all relevant search contexts and resources are released._this method will also notify the listener and sends back a failure to the user.__@param exception the exception explaining or causing the phase failure;private void raisePhaseFailure(SearchPhaseExecutionException exception) {_        results.getSuccessfulResults().forEach((entry) -> {_            try {_                SearchShardTarget searchShardTarget = entry.getSearchShardTarget()__                Transport.Connection connection = getConnection(null, searchShardTarget.getNodeId())__                sendReleaseSearchContext(entry.getRequestId(), connection, searchShardTarget.getOriginalIndices())__            } catch (Exception inner) {_                inner.addSuppressed(exception)__                logger.trace("failed to release context", inner)__            }_        })__        listener.onFailure(exception)__    };this,method,should,be,called,if,a,search,phase,failed,to,ensure,all,relevant,search,contexts,and,resources,are,released,this,method,will,also,notify,the,listener,and,sends,back,a,failure,to,the,user,param,exception,the,exception,explaining,or,causing,the,phase,failure;private,void,raise,phase,failure,search,phase,execution,exception,exception,results,get,successful,results,for,each,entry,try,search,shard,target,search,shard,target,entry,get,search,shard,target,transport,connection,connection,get,connection,null,search,shard,target,get,node,id,send,release,search,context,entry,get,request,id,connection,search,shard,target,get,original,indices,catch,exception,inner,inner,add,suppressed,exception,logger,trace,failed,to,release,context,inner,listener,on,failure,exception
AbstractSearchAsyncAction -> private void raisePhaseFailure(SearchPhaseExecutionException exception);1549888792;This method should be called if a search phase failed to ensure all relevant search contexts and resources are released._this method will also notify the listener and sends back a failure to the user.__@param exception the exception explaining or causing the phase failure;private void raisePhaseFailure(SearchPhaseExecutionException exception) {_        results.getSuccessfulResults().forEach((entry) -> {_            try {_                SearchShardTarget searchShardTarget = entry.getSearchShardTarget()__                Transport.Connection connection = getConnection(searchShardTarget.getClusterAlias(), searchShardTarget.getNodeId())__                sendReleaseSearchContext(entry.getRequestId(), connection, searchShardTarget.getOriginalIndices())__            } catch (Exception inner) {_                inner.addSuppressed(exception)__                logger.trace("failed to release context", inner)__            }_        })__        listener.onFailure(exception)__    };this,method,should,be,called,if,a,search,phase,failed,to,ensure,all,relevant,search,contexts,and,resources,are,released,this,method,will,also,notify,the,listener,and,sends,back,a,failure,to,the,user,param,exception,the,exception,explaining,or,causing,the,phase,failure;private,void,raise,phase,failure,search,phase,execution,exception,exception,results,get,successful,results,for,each,entry,try,search,shard,target,search,shard,target,entry,get,search,shard,target,transport,connection,connection,get,connection,search,shard,target,get,cluster,alias,search,shard,target,get,node,id,send,release,search,context,entry,get,request,id,connection,search,shard,target,get,original,indices,catch,exception,inner,inner,add,suppressed,exception,logger,trace,failed,to,release,context,inner,listener,on,failure,exception
