# id;timestamp;commentText;codeText;commentWords;codeWords
BoolQueryBuilder -> public List<QueryBuilder> filter();1524684173;Gets the queries that <b>must</b> appear in the matching documents but don't contribute to scoring;public List<QueryBuilder> filter() {_        return this.filterClauses__    };gets,the,queries,that,b,must,b,appear,in,the,matching,documents,but,don,t,contribute,to,scoring;public,list,query,builder,filter,return,this,filter,clauses
BoolQueryBuilder -> public List<QueryBuilder> filter();1525334055;Gets the queries that <b>must</b> appear in the matching documents but don't contribute to scoring;public List<QueryBuilder> filter() {_        return this.filterClauses__    };gets,the,queries,that,b,must,b,appear,in,the,matching,documents,but,don,t,contribute,to,scoring;public,list,query,builder,filter,return,this,filter,clauses
BoolQueryBuilder -> public List<QueryBuilder> filter();1528762805;Gets the queries that <b>must</b> appear in the matching documents but don't contribute to scoring;public List<QueryBuilder> filter() {_        return this.filterClauses__    };gets,the,queries,that,b,must,b,appear,in,the,matching,documents,but,don,t,contribute,to,scoring;public,list,query,builder,filter,return,this,filter,clauses
BoolQueryBuilder -> public List<QueryBuilder> filter();1543834151;Gets the queries that <b>must</b> appear in the matching documents but don't contribute to scoring;public List<QueryBuilder> filter() {_        return this.filterClauses__    };gets,the,queries,that,b,must,b,appear,in,the,matching,documents,but,don,t,contribute,to,scoring;public,list,query,builder,filter,return,this,filter,clauses
BoolQueryBuilder -> public BoolQueryBuilder minimumShouldMatch(int minimumShouldMatch);1524684173;Specifies a minimum number of the optional (should) boolean clauses which must be satisfied._<p>_By default no optional clauses are necessary for a match_(unless there are no required clauses).  If this method is used,_then the specified number of clauses is required._<p>_Use of this method is totally independent of specifying that_any specific clauses are required (or prohibited).  This number will_only be compared against the number of matching optional clauses.__@param minimumShouldMatch the number of optional clauses that must match;public BoolQueryBuilder minimumShouldMatch(int minimumShouldMatch) {_        this.minimumShouldMatch = Integer.toString(minimumShouldMatch)__        return this__    };specifies,a,minimum,number,of,the,optional,should,boolean,clauses,which,must,be,satisfied,p,by,default,no,optional,clauses,are,necessary,for,a,match,unless,there,are,no,required,clauses,if,this,method,is,used,then,the,specified,number,of,clauses,is,required,p,use,of,this,method,is,totally,independent,of,specifying,that,any,specific,clauses,are,required,or,prohibited,this,number,will,only,be,compared,against,the,number,of,matching,optional,clauses,param,minimum,should,match,the,number,of,optional,clauses,that,must,match;public,bool,query,builder,minimum,should,match,int,minimum,should,match,this,minimum,should,match,integer,to,string,minimum,should,match,return,this
BoolQueryBuilder -> public BoolQueryBuilder minimumShouldMatch(int minimumShouldMatch);1525334055;Specifies a minimum number of the optional (should) boolean clauses which must be satisfied._<p>_By default no optional clauses are necessary for a match_(unless there are no required clauses).  If this method is used,_then the specified number of clauses is required._<p>_Use of this method is totally independent of specifying that_any specific clauses are required (or prohibited).  This number will_only be compared against the number of matching optional clauses.__@param minimumShouldMatch the number of optional clauses that must match;public BoolQueryBuilder minimumShouldMatch(int minimumShouldMatch) {_        this.minimumShouldMatch = Integer.toString(minimumShouldMatch)__        return this__    };specifies,a,minimum,number,of,the,optional,should,boolean,clauses,which,must,be,satisfied,p,by,default,no,optional,clauses,are,necessary,for,a,match,unless,there,are,no,required,clauses,if,this,method,is,used,then,the,specified,number,of,clauses,is,required,p,use,of,this,method,is,totally,independent,of,specifying,that,any,specific,clauses,are,required,or,prohibited,this,number,will,only,be,compared,against,the,number,of,matching,optional,clauses,param,minimum,should,match,the,number,of,optional,clauses,that,must,match;public,bool,query,builder,minimum,should,match,int,minimum,should,match,this,minimum,should,match,integer,to,string,minimum,should,match,return,this
BoolQueryBuilder -> public BoolQueryBuilder minimumShouldMatch(int minimumShouldMatch);1528762805;Specifies a minimum number of the optional (should) boolean clauses which must be satisfied._<p>_By default no optional clauses are necessary for a match_(unless there are no required clauses).  If this method is used,_then the specified number of clauses is required._<p>_Use of this method is totally independent of specifying that_any specific clauses are required (or prohibited).  This number will_only be compared against the number of matching optional clauses.__@param minimumShouldMatch the number of optional clauses that must match;public BoolQueryBuilder minimumShouldMatch(int minimumShouldMatch) {_        this.minimumShouldMatch = Integer.toString(minimumShouldMatch)__        return this__    };specifies,a,minimum,number,of,the,optional,should,boolean,clauses,which,must,be,satisfied,p,by,default,no,optional,clauses,are,necessary,for,a,match,unless,there,are,no,required,clauses,if,this,method,is,used,then,the,specified,number,of,clauses,is,required,p,use,of,this,method,is,totally,independent,of,specifying,that,any,specific,clauses,are,required,or,prohibited,this,number,will,only,be,compared,against,the,number,of,matching,optional,clauses,param,minimum,should,match,the,number,of,optional,clauses,that,must,match;public,bool,query,builder,minimum,should,match,int,minimum,should,match,this,minimum,should,match,integer,to,string,minimum,should,match,return,this
BoolQueryBuilder -> public BoolQueryBuilder minimumShouldMatch(int minimumShouldMatch);1543834151;Specifies a minimum number of the optional (should) boolean clauses which must be satisfied._<p>_By default no optional clauses are necessary for a match_(unless there are no required clauses).  If this method is used,_then the specified number of clauses is required._<p>_Use of this method is totally independent of specifying that_any specific clauses are required (or prohibited).  This number will_only be compared against the number of matching optional clauses.__@param minimumShouldMatch the number of optional clauses that must match;public BoolQueryBuilder minimumShouldMatch(int minimumShouldMatch) {_        this.minimumShouldMatch = Integer.toString(minimumShouldMatch)__        return this__    };specifies,a,minimum,number,of,the,optional,should,boolean,clauses,which,must,be,satisfied,p,by,default,no,optional,clauses,are,necessary,for,a,match,unless,there,are,no,required,clauses,if,this,method,is,used,then,the,specified,number,of,clauses,is,required,p,use,of,this,method,is,totally,independent,of,specifying,that,any,specific,clauses,are,required,or,prohibited,this,number,will,only,be,compared,against,the,number,of,matching,optional,clauses,param,minimum,should,match,the,number,of,optional,clauses,that,must,match;public,bool,query,builder,minimum,should,match,int,minimum,should,match,this,minimum,should,match,integer,to,string,minimum,should,match,return,this
BoolQueryBuilder -> public BoolQueryBuilder filter(QueryBuilder queryBuilder);1524684173;Adds a query that <b>must</b> appear in the matching documents but will_not contribute to scoring. No <tt>null</tt> value allowed.;public BoolQueryBuilder filter(QueryBuilder queryBuilder) {_        if (queryBuilder == null) {_            throw new IllegalArgumentException("inner bool query clause cannot be null")__        }_        filterClauses.add(queryBuilder)__        return this__    };adds,a,query,that,b,must,b,appear,in,the,matching,documents,but,will,not,contribute,to,scoring,no,tt,null,tt,value,allowed;public,bool,query,builder,filter,query,builder,query,builder,if,query,builder,null,throw,new,illegal,argument,exception,inner,bool,query,clause,cannot,be,null,filter,clauses,add,query,builder,return,this
BoolQueryBuilder -> public BoolQueryBuilder filter(QueryBuilder queryBuilder);1525334055;Adds a query that <b>must</b> appear in the matching documents but will_not contribute to scoring. No {@code null} value allowed.;public BoolQueryBuilder filter(QueryBuilder queryBuilder) {_        if (queryBuilder == null) {_            throw new IllegalArgumentException("inner bool query clause cannot be null")__        }_        filterClauses.add(queryBuilder)__        return this__    };adds,a,query,that,b,must,b,appear,in,the,matching,documents,but,will,not,contribute,to,scoring,no,code,null,value,allowed;public,bool,query,builder,filter,query,builder,query,builder,if,query,builder,null,throw,new,illegal,argument,exception,inner,bool,query,clause,cannot,be,null,filter,clauses,add,query,builder,return,this
BoolQueryBuilder -> public BoolQueryBuilder filter(QueryBuilder queryBuilder);1528762805;Adds a query that <b>must</b> appear in the matching documents but will_not contribute to scoring. No {@code null} value allowed.;public BoolQueryBuilder filter(QueryBuilder queryBuilder) {_        if (queryBuilder == null) {_            throw new IllegalArgumentException("inner bool query clause cannot be null")__        }_        filterClauses.add(queryBuilder)__        return this__    };adds,a,query,that,b,must,b,appear,in,the,matching,documents,but,will,not,contribute,to,scoring,no,code,null,value,allowed;public,bool,query,builder,filter,query,builder,query,builder,if,query,builder,null,throw,new,illegal,argument,exception,inner,bool,query,clause,cannot,be,null,filter,clauses,add,query,builder,return,this
BoolQueryBuilder -> public BoolQueryBuilder filter(QueryBuilder queryBuilder);1543834151;Adds a query that <b>must</b> appear in the matching documents but will_not contribute to scoring. No {@code null} value allowed.;public BoolQueryBuilder filter(QueryBuilder queryBuilder) {_        if (queryBuilder == null) {_            throw new IllegalArgumentException("inner bool query clause cannot be null")__        }_        filterClauses.add(queryBuilder)__        return this__    };adds,a,query,that,b,must,b,appear,in,the,matching,documents,but,will,not,contribute,to,scoring,no,code,null,value,allowed;public,bool,query,builder,filter,query,builder,query,builder,if,query,builder,null,throw,new,illegal,argument,exception,inner,bool,query,clause,cannot,be,null,filter,clauses,add,query,builder,return,this
BoolQueryBuilder -> public String minimumShouldMatch();1524684173;@return the string representation of the minimumShouldMatch settings for this query;public String minimumShouldMatch() {_        return this.minimumShouldMatch__    };return,the,string,representation,of,the,minimum,should,match,settings,for,this,query;public,string,minimum,should,match,return,this,minimum,should,match
BoolQueryBuilder -> public String minimumShouldMatch();1525334055;@return the string representation of the minimumShouldMatch settings for this query;public String minimumShouldMatch() {_        return this.minimumShouldMatch__    };return,the,string,representation,of,the,minimum,should,match,settings,for,this,query;public,string,minimum,should,match,return,this,minimum,should,match
BoolQueryBuilder -> public String minimumShouldMatch();1528762805;@return the string representation of the minimumShouldMatch settings for this query;public String minimumShouldMatch() {_        return this.minimumShouldMatch__    };return,the,string,representation,of,the,minimum,should,match,settings,for,this,query;public,string,minimum,should,match,return,this,minimum,should,match
BoolQueryBuilder -> public String minimumShouldMatch();1543834151;@return the string representation of the minimumShouldMatch settings for this query;public String minimumShouldMatch() {_        return this.minimumShouldMatch__    };return,the,string,representation,of,the,minimum,should,match,settings,for,this,query;public,string,minimum,should,match,return,this,minimum,should,match
BoolQueryBuilder -> public List<QueryBuilder> should();1524684173;Gets the list of clauses that <b>should</b> be matched by the returned documents.__@see #should(QueryBuilder)_@see #minimumShouldMatch(int);public List<QueryBuilder> should() {_        return this.shouldClauses__    };gets,the,list,of,clauses,that,b,should,b,be,matched,by,the,returned,documents,see,should,query,builder,see,minimum,should,match,int;public,list,query,builder,should,return,this,should,clauses
BoolQueryBuilder -> public List<QueryBuilder> should();1525334055;Gets the list of clauses that <b>should</b> be matched by the returned documents.__@see #should(QueryBuilder)_@see #minimumShouldMatch(int);public List<QueryBuilder> should() {_        return this.shouldClauses__    };gets,the,list,of,clauses,that,b,should,b,be,matched,by,the,returned,documents,see,should,query,builder,see,minimum,should,match,int;public,list,query,builder,should,return,this,should,clauses
BoolQueryBuilder -> public List<QueryBuilder> should();1528762805;Gets the list of clauses that <b>should</b> be matched by the returned documents.__@see #should(QueryBuilder)_@see #minimumShouldMatch(int);public List<QueryBuilder> should() {_        return this.shouldClauses__    };gets,the,list,of,clauses,that,b,should,b,be,matched,by,the,returned,documents,see,should,query,builder,see,minimum,should,match,int;public,list,query,builder,should,return,this,should,clauses
BoolQueryBuilder -> public List<QueryBuilder> should();1543834151;Gets the list of clauses that <b>should</b> be matched by the returned documents.__@see #should(QueryBuilder)_@see #minimumShouldMatch(int);public List<QueryBuilder> should() {_        return this.shouldClauses__    };gets,the,list,of,clauses,that,b,should,b,be,matched,by,the,returned,documents,see,should,query,builder,see,minimum,should,match,int;public,list,query,builder,should,return,this,should,clauses
BoolQueryBuilder -> public BoolQueryBuilder mustNot(QueryBuilder queryBuilder);1524684173;Adds a query that <b>must not</b> appear in the matching documents._No <tt>null</tt> value allowed.;public BoolQueryBuilder mustNot(QueryBuilder queryBuilder) {_        if (queryBuilder == null) {_            throw new IllegalArgumentException("inner bool query clause cannot be null")__        }_        mustNotClauses.add(queryBuilder)__        return this__    };adds,a,query,that,b,must,not,b,appear,in,the,matching,documents,no,tt,null,tt,value,allowed;public,bool,query,builder,must,not,query,builder,query,builder,if,query,builder,null,throw,new,illegal,argument,exception,inner,bool,query,clause,cannot,be,null,must,not,clauses,add,query,builder,return,this
BoolQueryBuilder -> public BoolQueryBuilder mustNot(QueryBuilder queryBuilder);1525334055;Adds a query that <b>must not</b> appear in the matching documents._No {@code null} value allowed.;public BoolQueryBuilder mustNot(QueryBuilder queryBuilder) {_        if (queryBuilder == null) {_            throw new IllegalArgumentException("inner bool query clause cannot be null")__        }_        mustNotClauses.add(queryBuilder)__        return this__    };adds,a,query,that,b,must,not,b,appear,in,the,matching,documents,no,code,null,value,allowed;public,bool,query,builder,must,not,query,builder,query,builder,if,query,builder,null,throw,new,illegal,argument,exception,inner,bool,query,clause,cannot,be,null,must,not,clauses,add,query,builder,return,this
BoolQueryBuilder -> public BoolQueryBuilder mustNot(QueryBuilder queryBuilder);1528762805;Adds a query that <b>must not</b> appear in the matching documents._No {@code null} value allowed.;public BoolQueryBuilder mustNot(QueryBuilder queryBuilder) {_        if (queryBuilder == null) {_            throw new IllegalArgumentException("inner bool query clause cannot be null")__        }_        mustNotClauses.add(queryBuilder)__        return this__    };adds,a,query,that,b,must,not,b,appear,in,the,matching,documents,no,code,null,value,allowed;public,bool,query,builder,must,not,query,builder,query,builder,if,query,builder,null,throw,new,illegal,argument,exception,inner,bool,query,clause,cannot,be,null,must,not,clauses,add,query,builder,return,this
BoolQueryBuilder -> public BoolQueryBuilder mustNot(QueryBuilder queryBuilder);1543834151;Adds a query that <b>must not</b> appear in the matching documents._No {@code null} value allowed.;public BoolQueryBuilder mustNot(QueryBuilder queryBuilder) {_        if (queryBuilder == null) {_            throw new IllegalArgumentException("inner bool query clause cannot be null")__        }_        mustNotClauses.add(queryBuilder)__        return this__    };adds,a,query,that,b,must,not,b,appear,in,the,matching,documents,no,code,null,value,allowed;public,bool,query,builder,must,not,query,builder,query,builder,if,query,builder,null,throw,new,illegal,argument,exception,inner,bool,query,clause,cannot,be,null,must,not,clauses,add,query,builder,return,this
BoolQueryBuilder -> public BoolQueryBuilder should(QueryBuilder queryBuilder);1524684173;Adds a clause that <i>should</i> be matched by the returned documents. For a boolean query with no_<tt>MUST</tt> clauses one or more <code>SHOULD</code> clauses must match a document_for the BooleanQuery to match. No <tt>null</tt> value allowed.__@see #minimumShouldMatch(int);public BoolQueryBuilder should(QueryBuilder queryBuilder) {_        if (queryBuilder == null) {_            throw new IllegalArgumentException("inner bool query clause cannot be null")__        }_        shouldClauses.add(queryBuilder)__        return this__    };adds,a,clause,that,i,should,i,be,matched,by,the,returned,documents,for,a,boolean,query,with,no,tt,must,tt,clauses,one,or,more,code,should,code,clauses,must,match,a,document,for,the,boolean,query,to,match,no,tt,null,tt,value,allowed,see,minimum,should,match,int;public,bool,query,builder,should,query,builder,query,builder,if,query,builder,null,throw,new,illegal,argument,exception,inner,bool,query,clause,cannot,be,null,should,clauses,add,query,builder,return,this
BoolQueryBuilder -> public BoolQueryBuilder should(QueryBuilder queryBuilder);1525334055;Adds a clause that <i>should</i> be matched by the returned documents. For a boolean query with no_{@code MUST} clauses one or more <code>SHOULD</code> clauses must match a document_for the BooleanQuery to match. No {@code null} value allowed.__@see #minimumShouldMatch(int);public BoolQueryBuilder should(QueryBuilder queryBuilder) {_        if (queryBuilder == null) {_            throw new IllegalArgumentException("inner bool query clause cannot be null")__        }_        shouldClauses.add(queryBuilder)__        return this__    };adds,a,clause,that,i,should,i,be,matched,by,the,returned,documents,for,a,boolean,query,with,no,code,must,clauses,one,or,more,code,should,code,clauses,must,match,a,document,for,the,boolean,query,to,match,no,code,null,value,allowed,see,minimum,should,match,int;public,bool,query,builder,should,query,builder,query,builder,if,query,builder,null,throw,new,illegal,argument,exception,inner,bool,query,clause,cannot,be,null,should,clauses,add,query,builder,return,this
BoolQueryBuilder -> public BoolQueryBuilder should(QueryBuilder queryBuilder);1528762805;Adds a clause that <i>should</i> be matched by the returned documents. For a boolean query with no_{@code MUST} clauses one or more <code>SHOULD</code> clauses must match a document_for the BooleanQuery to match. No {@code null} value allowed.__@see #minimumShouldMatch(int);public BoolQueryBuilder should(QueryBuilder queryBuilder) {_        if (queryBuilder == null) {_            throw new IllegalArgumentException("inner bool query clause cannot be null")__        }_        shouldClauses.add(queryBuilder)__        return this__    };adds,a,clause,that,i,should,i,be,matched,by,the,returned,documents,for,a,boolean,query,with,no,code,must,clauses,one,or,more,code,should,code,clauses,must,match,a,document,for,the,boolean,query,to,match,no,code,null,value,allowed,see,minimum,should,match,int;public,bool,query,builder,should,query,builder,query,builder,if,query,builder,null,throw,new,illegal,argument,exception,inner,bool,query,clause,cannot,be,null,should,clauses,add,query,builder,return,this
BoolQueryBuilder -> public BoolQueryBuilder should(QueryBuilder queryBuilder);1543834151;Adds a clause that <i>should</i> be matched by the returned documents. For a boolean query with no_{@code MUST} clauses one or more <code>SHOULD</code> clauses must match a document_for the BooleanQuery to match. No {@code null} value allowed.__@see #minimumShouldMatch(int);public BoolQueryBuilder should(QueryBuilder queryBuilder) {_        if (queryBuilder == null) {_            throw new IllegalArgumentException("inner bool query clause cannot be null")__        }_        shouldClauses.add(queryBuilder)__        return this__    };adds,a,clause,that,i,should,i,be,matched,by,the,returned,documents,for,a,boolean,query,with,no,code,must,clauses,one,or,more,code,should,code,clauses,must,match,a,document,for,the,boolean,query,to,match,no,code,null,value,allowed,see,minimum,should,match,int;public,bool,query,builder,should,query,builder,query,builder,if,query,builder,null,throw,new,illegal,argument,exception,inner,bool,query,clause,cannot,be,null,should,clauses,add,query,builder,return,this
BoolQueryBuilder -> public BoolQueryBuilder();1524684173;Build an empty bool query.;public BoolQueryBuilder() {_    };build,an,empty,bool,query;public,bool,query,builder
BoolQueryBuilder -> public BoolQueryBuilder();1525334055;Build an empty bool query.;public BoolQueryBuilder() {_    };build,an,empty,bool,query;public,bool,query,builder
BoolQueryBuilder -> public BoolQueryBuilder();1528762805;Build an empty bool query.;public BoolQueryBuilder() {_    };build,an,empty,bool,query;public,bool,query,builder
BoolQueryBuilder -> public BoolQueryBuilder();1543834151;Build an empty bool query.;public BoolQueryBuilder() {_    };build,an,empty,bool,query;public,bool,query,builder
BoolQueryBuilder -> public BoolQueryBuilder must(QueryBuilder queryBuilder);1524684173;Adds a query that <b>must</b> appear in the matching documents and will_contribute to scoring. No <tt>null</tt> value allowed.;public BoolQueryBuilder must(QueryBuilder queryBuilder) {_        if (queryBuilder == null) {_            throw new IllegalArgumentException("inner bool query clause cannot be null")__        }_        mustClauses.add(queryBuilder)__        return this__    };adds,a,query,that,b,must,b,appear,in,the,matching,documents,and,will,contribute,to,scoring,no,tt,null,tt,value,allowed;public,bool,query,builder,must,query,builder,query,builder,if,query,builder,null,throw,new,illegal,argument,exception,inner,bool,query,clause,cannot,be,null,must,clauses,add,query,builder,return,this
BoolQueryBuilder -> public BoolQueryBuilder must(QueryBuilder queryBuilder);1525334055;Adds a query that <b>must</b> appear in the matching documents and will_contribute to scoring. No {@code null} value allowed.;public BoolQueryBuilder must(QueryBuilder queryBuilder) {_        if (queryBuilder == null) {_            throw new IllegalArgumentException("inner bool query clause cannot be null")__        }_        mustClauses.add(queryBuilder)__        return this__    };adds,a,query,that,b,must,b,appear,in,the,matching,documents,and,will,contribute,to,scoring,no,code,null,value,allowed;public,bool,query,builder,must,query,builder,query,builder,if,query,builder,null,throw,new,illegal,argument,exception,inner,bool,query,clause,cannot,be,null,must,clauses,add,query,builder,return,this
BoolQueryBuilder -> public BoolQueryBuilder must(QueryBuilder queryBuilder);1528762805;Adds a query that <b>must</b> appear in the matching documents and will_contribute to scoring. No {@code null} value allowed.;public BoolQueryBuilder must(QueryBuilder queryBuilder) {_        if (queryBuilder == null) {_            throw new IllegalArgumentException("inner bool query clause cannot be null")__        }_        mustClauses.add(queryBuilder)__        return this__    };adds,a,query,that,b,must,b,appear,in,the,matching,documents,and,will,contribute,to,scoring,no,code,null,value,allowed;public,bool,query,builder,must,query,builder,query,builder,if,query,builder,null,throw,new,illegal,argument,exception,inner,bool,query,clause,cannot,be,null,must,clauses,add,query,builder,return,this
BoolQueryBuilder -> public BoolQueryBuilder must(QueryBuilder queryBuilder);1543834151;Adds a query that <b>must</b> appear in the matching documents and will_contribute to scoring. No {@code null} value allowed.;public BoolQueryBuilder must(QueryBuilder queryBuilder) {_        if (queryBuilder == null) {_            throw new IllegalArgumentException("inner bool query clause cannot be null")__        }_        mustClauses.add(queryBuilder)__        return this__    };adds,a,query,that,b,must,b,appear,in,the,matching,documents,and,will,contribute,to,scoring,no,code,null,value,allowed;public,bool,query,builder,must,query,builder,query,builder,if,query,builder,null,throw,new,illegal,argument,exception,inner,bool,query,clause,cannot,be,null,must,clauses,add,query,builder,return,this
BoolQueryBuilder -> public List<QueryBuilder> must();1524684173;Gets the queries that <b>must</b> appear in the matching documents.;public List<QueryBuilder> must() {_        return this.mustClauses__    };gets,the,queries,that,b,must,b,appear,in,the,matching,documents;public,list,query,builder,must,return,this,must,clauses
BoolQueryBuilder -> public List<QueryBuilder> must();1525334055;Gets the queries that <b>must</b> appear in the matching documents.;public List<QueryBuilder> must() {_        return this.mustClauses__    };gets,the,queries,that,b,must,b,appear,in,the,matching,documents;public,list,query,builder,must,return,this,must,clauses
BoolQueryBuilder -> public List<QueryBuilder> must();1528762805;Gets the queries that <b>must</b> appear in the matching documents.;public List<QueryBuilder> must() {_        return this.mustClauses__    };gets,the,queries,that,b,must,b,appear,in,the,matching,documents;public,list,query,builder,must,return,this,must,clauses
BoolQueryBuilder -> public List<QueryBuilder> must();1543834151;Gets the queries that <b>must</b> appear in the matching documents.;public List<QueryBuilder> must() {_        return this.mustClauses__    };gets,the,queries,that,b,must,b,appear,in,the,matching,documents;public,list,query,builder,must,return,this,must,clauses
BoolQueryBuilder -> public BoolQueryBuilder adjustPureNegative(boolean adjustPureNegative);1524684173;If a boolean query contains only negative ("must not") clauses should the_BooleanQuery be enhanced with a {@link MatchAllDocsQuery} in order to act_as a pure exclude. The default is <code>true</code>.;public BoolQueryBuilder adjustPureNegative(boolean adjustPureNegative) {_        this.adjustPureNegative = adjustPureNegative__        return this__    };if,a,boolean,query,contains,only,negative,must,not,clauses,should,the,boolean,query,be,enhanced,with,a,link,match,all,docs,query,in,order,to,act,as,a,pure,exclude,the,default,is,code,true,code;public,bool,query,builder,adjust,pure,negative,boolean,adjust,pure,negative,this,adjust,pure,negative,adjust,pure,negative,return,this
BoolQueryBuilder -> public BoolQueryBuilder adjustPureNegative(boolean adjustPureNegative);1525334055;If a boolean query contains only negative ("must not") clauses should the_BooleanQuery be enhanced with a {@link MatchAllDocsQuery} in order to act_as a pure exclude. The default is <code>true</code>.;public BoolQueryBuilder adjustPureNegative(boolean adjustPureNegative) {_        this.adjustPureNegative = adjustPureNegative__        return this__    };if,a,boolean,query,contains,only,negative,must,not,clauses,should,the,boolean,query,be,enhanced,with,a,link,match,all,docs,query,in,order,to,act,as,a,pure,exclude,the,default,is,code,true,code;public,bool,query,builder,adjust,pure,negative,boolean,adjust,pure,negative,this,adjust,pure,negative,adjust,pure,negative,return,this
BoolQueryBuilder -> public BoolQueryBuilder adjustPureNegative(boolean adjustPureNegative);1528762805;If a boolean query contains only negative ("must not") clauses should the_BooleanQuery be enhanced with a {@link MatchAllDocsQuery} in order to act_as a pure exclude. The default is <code>true</code>.;public BoolQueryBuilder adjustPureNegative(boolean adjustPureNegative) {_        this.adjustPureNegative = adjustPureNegative__        return this__    };if,a,boolean,query,contains,only,negative,must,not,clauses,should,the,boolean,query,be,enhanced,with,a,link,match,all,docs,query,in,order,to,act,as,a,pure,exclude,the,default,is,code,true,code;public,bool,query,builder,adjust,pure,negative,boolean,adjust,pure,negative,this,adjust,pure,negative,adjust,pure,negative,return,this
BoolQueryBuilder -> public BoolQueryBuilder adjustPureNegative(boolean adjustPureNegative);1543834151;If a boolean query contains only negative ("must not") clauses should the_BooleanQuery be enhanced with a {@link MatchAllDocsQuery} in order to act_as a pure exclude. The default is <code>true</code>.;public BoolQueryBuilder adjustPureNegative(boolean adjustPureNegative) {_        this.adjustPureNegative = adjustPureNegative__        return this__    };if,a,boolean,query,contains,only,negative,must,not,clauses,should,the,boolean,query,be,enhanced,with,a,link,match,all,docs,query,in,order,to,act,as,a,pure,exclude,the,default,is,code,true,code;public,bool,query,builder,adjust,pure,negative,boolean,adjust,pure,negative,this,adjust,pure,negative,adjust,pure,negative,return,this
BoolQueryBuilder -> public BoolQueryBuilder(StreamInput in) throws IOException;1524684173;Read from a stream.;public BoolQueryBuilder(StreamInput in) throws IOException {_        super(in)__        mustClauses.addAll(readQueries(in))__        mustNotClauses.addAll(readQueries(in))__        shouldClauses.addAll(readQueries(in))__        filterClauses.addAll(readQueries(in))__        adjustPureNegative = in.readBoolean()__        if (in.getVersion().before(Version.V_6_0_0_alpha1)) {_            in.readBoolean()_ _        }_        minimumShouldMatch = in.readOptionalString()__    };read,from,a,stream;public,bool,query,builder,stream,input,in,throws,ioexception,super,in,must,clauses,add,all,read,queries,in,must,not,clauses,add,all,read,queries,in,should,clauses,add,all,read,queries,in,filter,clauses,add,all,read,queries,in,adjust,pure,negative,in,read,boolean,if,in,get,version,before,version,in,read,boolean,minimum,should,match,in,read,optional,string
BoolQueryBuilder -> public BoolQueryBuilder(StreamInput in) throws IOException;1525334055;Read from a stream.;public BoolQueryBuilder(StreamInput in) throws IOException {_        super(in)__        mustClauses.addAll(readQueries(in))__        mustNotClauses.addAll(readQueries(in))__        shouldClauses.addAll(readQueries(in))__        filterClauses.addAll(readQueries(in))__        adjustPureNegative = in.readBoolean()__        if (in.getVersion().before(Version.V_6_0_0_alpha1)) {_            in.readBoolean()_ _        }_        minimumShouldMatch = in.readOptionalString()__    };read,from,a,stream;public,bool,query,builder,stream,input,in,throws,ioexception,super,in,must,clauses,add,all,read,queries,in,must,not,clauses,add,all,read,queries,in,should,clauses,add,all,read,queries,in,filter,clauses,add,all,read,queries,in,adjust,pure,negative,in,read,boolean,if,in,get,version,before,version,in,read,boolean,minimum,should,match,in,read,optional,string
BoolQueryBuilder -> public BoolQueryBuilder(StreamInput in) throws IOException;1528762805;Read from a stream.;public BoolQueryBuilder(StreamInput in) throws IOException {_        super(in)__        mustClauses.addAll(readQueries(in))__        mustNotClauses.addAll(readQueries(in))__        shouldClauses.addAll(readQueries(in))__        filterClauses.addAll(readQueries(in))__        adjustPureNegative = in.readBoolean()__        if (in.getVersion().before(Version.V_6_0_0_alpha1)) {_            in.readBoolean()_ _        }_        minimumShouldMatch = in.readOptionalString()__    };read,from,a,stream;public,bool,query,builder,stream,input,in,throws,ioexception,super,in,must,clauses,add,all,read,queries,in,must,not,clauses,add,all,read,queries,in,should,clauses,add,all,read,queries,in,filter,clauses,add,all,read,queries,in,adjust,pure,negative,in,read,boolean,if,in,get,version,before,version,in,read,boolean,minimum,should,match,in,read,optional,string
BoolQueryBuilder -> public BoolQueryBuilder(StreamInput in) throws IOException;1543834151;Read from a stream.;public BoolQueryBuilder(StreamInput in) throws IOException {_        super(in)__        mustClauses.addAll(readQueries(in))__        mustNotClauses.addAll(readQueries(in))__        shouldClauses.addAll(readQueries(in))__        filterClauses.addAll(readQueries(in))__        adjustPureNegative = in.readBoolean()__        if (in.getVersion().before(Version.V_6_0_0_alpha1)) {_            in.readBoolean()_ _        }_        minimumShouldMatch = in.readOptionalString()__    };read,from,a,stream;public,bool,query,builder,stream,input,in,throws,ioexception,super,in,must,clauses,add,all,read,queries,in,must,not,clauses,add,all,read,queries,in,should,clauses,add,all,read,queries,in,filter,clauses,add,all,read,queries,in,adjust,pure,negative,in,read,boolean,if,in,get,version,before,version,in,read,boolean,minimum,should,match,in,read,optional,string
BoolQueryBuilder -> public boolean hasClauses();1524684173;Returns <code>true</code> iff this query builder has at least one should, must, must not or filter clause._Otherwise <code>false</code>.;public boolean hasClauses() {_        return !(mustClauses.isEmpty() && shouldClauses.isEmpty() && mustNotClauses.isEmpty() && filterClauses.isEmpty())__    };returns,code,true,code,iff,this,query,builder,has,at,least,one,should,must,must,not,or,filter,clause,otherwise,code,false,code;public,boolean,has,clauses,return,must,clauses,is,empty,should,clauses,is,empty,must,not,clauses,is,empty,filter,clauses,is,empty
BoolQueryBuilder -> public boolean hasClauses();1525334055;Returns <code>true</code> iff this query builder has at least one should, must, must not or filter clause._Otherwise <code>false</code>.;public boolean hasClauses() {_        return !(mustClauses.isEmpty() && shouldClauses.isEmpty() && mustNotClauses.isEmpty() && filterClauses.isEmpty())__    };returns,code,true,code,iff,this,query,builder,has,at,least,one,should,must,must,not,or,filter,clause,otherwise,code,false,code;public,boolean,has,clauses,return,must,clauses,is,empty,should,clauses,is,empty,must,not,clauses,is,empty,filter,clauses,is,empty
BoolQueryBuilder -> public boolean hasClauses();1528762805;Returns <code>true</code> iff this query builder has at least one should, must, must not or filter clause._Otherwise <code>false</code>.;public boolean hasClauses() {_        return !(mustClauses.isEmpty() && shouldClauses.isEmpty() && mustNotClauses.isEmpty() && filterClauses.isEmpty())__    };returns,code,true,code,iff,this,query,builder,has,at,least,one,should,must,must,not,or,filter,clause,otherwise,code,false,code;public,boolean,has,clauses,return,must,clauses,is,empty,should,clauses,is,empty,must,not,clauses,is,empty,filter,clauses,is,empty
BoolQueryBuilder -> public boolean hasClauses();1543834151;Returns <code>true</code> iff this query builder has at least one should, must, must not or filter clause._Otherwise <code>false</code>.;public boolean hasClauses() {_        return !(mustClauses.isEmpty() && shouldClauses.isEmpty() && mustNotClauses.isEmpty() && filterClauses.isEmpty())__    };returns,code,true,code,iff,this,query,builder,has,at,least,one,should,must,must,not,or,filter,clause,otherwise,code,false,code;public,boolean,has,clauses,return,must,clauses,is,empty,should,clauses,is,empty,must,not,clauses,is,empty,filter,clauses,is,empty
BoolQueryBuilder -> public List<QueryBuilder> mustNot();1524684173;Gets the queries that <b>must not</b> appear in the matching documents.;public List<QueryBuilder> mustNot() {_        return this.mustNotClauses__    };gets,the,queries,that,b,must,not,b,appear,in,the,matching,documents;public,list,query,builder,must,not,return,this,must,not,clauses
BoolQueryBuilder -> public List<QueryBuilder> mustNot();1525334055;Gets the queries that <b>must not</b> appear in the matching documents.;public List<QueryBuilder> mustNot() {_        return this.mustNotClauses__    };gets,the,queries,that,b,must,not,b,appear,in,the,matching,documents;public,list,query,builder,must,not,return,this,must,not,clauses
BoolQueryBuilder -> public List<QueryBuilder> mustNot();1528762805;Gets the queries that <b>must not</b> appear in the matching documents.;public List<QueryBuilder> mustNot() {_        return this.mustNotClauses__    };gets,the,queries,that,b,must,not,b,appear,in,the,matching,documents;public,list,query,builder,must,not,return,this,must,not,clauses
BoolQueryBuilder -> public List<QueryBuilder> mustNot();1543834151;Gets the queries that <b>must not</b> appear in the matching documents.;public List<QueryBuilder> mustNot() {_        return this.mustNotClauses__    };gets,the,queries,that,b,must,not,b,appear,in,the,matching,documents;public,list,query,builder,must,not,return,this,must,not,clauses
BoolQueryBuilder -> public BoolQueryBuilder minimumShouldMatch(String minimumShouldMatch);1524684173;Sets the minimum should match parameter using the special syntax (for example, supporting percentage)._@see BoolQueryBuilder#minimumShouldMatch(int);public BoolQueryBuilder minimumShouldMatch(String minimumShouldMatch) {_        this.minimumShouldMatch = minimumShouldMatch__        return this__    };sets,the,minimum,should,match,parameter,using,the,special,syntax,for,example,supporting,percentage,see,bool,query,builder,minimum,should,match,int;public,bool,query,builder,minimum,should,match,string,minimum,should,match,this,minimum,should,match,minimum,should,match,return,this
BoolQueryBuilder -> public BoolQueryBuilder minimumShouldMatch(String minimumShouldMatch);1525334055;Sets the minimum should match parameter using the special syntax (for example, supporting percentage)._@see BoolQueryBuilder#minimumShouldMatch(int);public BoolQueryBuilder minimumShouldMatch(String minimumShouldMatch) {_        this.minimumShouldMatch = minimumShouldMatch__        return this__    };sets,the,minimum,should,match,parameter,using,the,special,syntax,for,example,supporting,percentage,see,bool,query,builder,minimum,should,match,int;public,bool,query,builder,minimum,should,match,string,minimum,should,match,this,minimum,should,match,minimum,should,match,return,this
BoolQueryBuilder -> public BoolQueryBuilder minimumShouldMatch(String minimumShouldMatch);1528762805;Sets the minimum should match parameter using the special syntax (for example, supporting percentage)._@see BoolQueryBuilder#minimumShouldMatch(int);public BoolQueryBuilder minimumShouldMatch(String minimumShouldMatch) {_        this.minimumShouldMatch = minimumShouldMatch__        return this__    };sets,the,minimum,should,match,parameter,using,the,special,syntax,for,example,supporting,percentage,see,bool,query,builder,minimum,should,match,int;public,bool,query,builder,minimum,should,match,string,minimum,should,match,this,minimum,should,match,minimum,should,match,return,this
BoolQueryBuilder -> public BoolQueryBuilder minimumShouldMatch(String minimumShouldMatch);1543834151;Sets the minimum should match parameter using the special syntax (for example, supporting percentage)._@see BoolQueryBuilder#minimumShouldMatch(int);public BoolQueryBuilder minimumShouldMatch(String minimumShouldMatch) {_        this.minimumShouldMatch = minimumShouldMatch__        return this__    };sets,the,minimum,should,match,parameter,using,the,special,syntax,for,example,supporting,percentage,see,bool,query,builder,minimum,should,match,int;public,bool,query,builder,minimum,should,match,string,minimum,should,match,this,minimum,should,match,minimum,should,match,return,this
BoolQueryBuilder -> public boolean adjustPureNegative();1524684173;@return the setting for the adjust_pure_negative setting in this query;public boolean adjustPureNegative() {_        return this.adjustPureNegative__    };return,the,setting,for,the,setting,in,this,query;public,boolean,adjust,pure,negative,return,this,adjust,pure,negative
BoolQueryBuilder -> public boolean adjustPureNegative();1525334055;@return the setting for the adjust_pure_negative setting in this query;public boolean adjustPureNegative() {_        return this.adjustPureNegative__    };return,the,setting,for,the,setting,in,this,query;public,boolean,adjust,pure,negative,return,this,adjust,pure,negative
BoolQueryBuilder -> public boolean adjustPureNegative();1528762805;@return the setting for the adjust_pure_negative setting in this query;public boolean adjustPureNegative() {_        return this.adjustPureNegative__    };return,the,setting,for,the,setting,in,this,query;public,boolean,adjust,pure,negative,return,this,adjust,pure,negative
BoolQueryBuilder -> public boolean adjustPureNegative();1543834151;@return the setting for the adjust_pure_negative setting in this query;public boolean adjustPureNegative() {_        return this.adjustPureNegative__    };return,the,setting,for,the,setting,in,this,query;public,boolean,adjust,pure,negative,return,this,adjust,pure,negative
