commented;modifiers;parameterAmount;loc;comment;code
true;protected;3;4;/**  * Segments goes across *all* active shards.  */ ;/**  * Segments goes across *all* active shards.  */ @Override protected ShardsIterator shards(ClusterState clusterState, IndicesSegmentsRequest request, String[] concreteIndices) {     return clusterState.routingTable().allShards(concreteIndices). }
false;protected;2;4;;@Override protected ClusterBlockException checkGlobalBlock(ClusterState state, IndicesSegmentsRequest request) {     return state.blocks().globalBlockedException(ClusterBlockLevel.METADATA_READ). }
false;protected;3;4;;@Override protected ClusterBlockException checkRequestBlock(ClusterState state, IndicesSegmentsRequest countRequest, String[] concreteIndices) {     return state.blocks().indicesBlockedException(ClusterBlockLevel.METADATA_READ, concreteIndices). }
false;protected;1;4;;@Override protected ShardSegments readShardResult(StreamInput in) throws IOException {     return ShardSegments.readShardSegments(in). }
false;protected;7;7;;@Override protected IndicesSegmentResponse newResponse(IndicesSegmentsRequest request, int totalShards, int successfulShards, int failedShards, List<ShardSegments> results, List<DefaultShardOperationFailedException> shardFailures, ClusterState clusterState) {     return new IndicesSegmentResponse(results.toArray(new ShardSegments[results.size()]), totalShards, successfulShards, failedShards, shardFailures). }
false;protected;1;6;;@Override protected IndicesSegmentsRequest readRequestFrom(StreamInput in) throws IOException {     final IndicesSegmentsRequest request = new IndicesSegmentsRequest().     request.readFrom(in).     return request. }
false;protected;2;6;;@Override protected ShardSegments shardOperation(IndicesSegmentsRequest request, ShardRouting shardRouting) {     IndexService indexService = indicesService.indexServiceSafe(shardRouting.index()).     IndexShard indexShard = indexService.getShard(shardRouting.id()).     return new ShardSegments(indexShard.routingEntry(), indexShard.segments(request.verbose())). }
