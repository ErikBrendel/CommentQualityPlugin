commented;modifiers;parameterAmount;loc;comment;code
false;protected;3;4;;@Override protected void doExecute(Task task, final Request request, final ActionListener<Response> listener) {     bulkAction.execute(task, toSingleItemBulkRequest(request), wrapBulkResponse(listener)). }
false;protected;2;23;;@Override protected WritePrimaryResult<Request, Response> shardOperationOnPrimary(Request request, final IndexShard primary) throws Exception {     BulkItemRequest[] itemRequests = new BulkItemRequest[1].     WriteRequest.RefreshPolicy refreshPolicy = request.getRefreshPolicy().     request.setRefreshPolicy(WriteRequest.RefreshPolicy.NONE).     itemRequests[0] = new BulkItemRequest(0, ((DocWriteRequest<?>) request)).     BulkShardRequest bulkShardRequest = new BulkShardRequest(request.shardId(), refreshPolicy, itemRequests).     WritePrimaryResult<BulkShardRequest, BulkShardResponse> bulkResult = shardBulkAction.shardOperationOnPrimary(bulkShardRequest, primary).     assert bulkResult.finalResponseIfSuccessful.getResponses().length == 1 : "expected only one bulk shard response".     BulkItemResponse itemResponse = bulkResult.finalResponseIfSuccessful.getResponses()[0].     final Response response.     final Exception failure.     if (itemResponse.isFailed()) {         failure = itemResponse.getFailure().getCause().         response = null.     } else {         response = (Response) itemResponse.getResponse().         failure = null.     }     return new WritePrimaryResult<>(request, response, bulkResult.location, failure, primary, logger). }
false;protected;2;12;;@Override protected WriteReplicaResult<Request> shardOperationOnReplica(Request replicaRequest, IndexShard replica) throws Exception {     BulkItemRequest[] itemRequests = new BulkItemRequest[1].     WriteRequest.RefreshPolicy refreshPolicy = replicaRequest.getRefreshPolicy().     itemRequests[0] = new BulkItemRequest(0, ((DocWriteRequest<?>) replicaRequest)).     BulkShardRequest bulkShardRequest = new BulkShardRequest(replicaRequest.shardId(), refreshPolicy, itemRequests).     WriteReplicaResult<BulkShardRequest> result = shardBulkAction.shardOperationOnReplica(bulkShardRequest, replica).     // as the same document has been already indexed successfully in the primary     return new WriteReplicaResult<>(replicaRequest, result.location, null, replica, logger). }
false;public,static;1;13;;public static <Response extends ReplicationResponse & WriteResponse> ActionListener<BulkResponse> wrapBulkResponse(ActionListener<Response> listener) {     return ActionListener.wrap(bulkItemResponses -> {         assert bulkItemResponses.getItems().length == 1 : "expected only one item in bulk request".         BulkItemResponse bulkItemResponse = bulkItemResponses.getItems()[0].         if (bulkItemResponse.isFailed() == false) {             final DocWriteResponse response = bulkItemResponse.getResponse().             listener.onResponse((Response) response).         } else {             listener.onFailure(bulkItemResponse.getFailure().getCause()).         }     }, listener::onFailure). }
false;public,static;1;9;;public static BulkRequest toSingleItemBulkRequest(ReplicatedWriteRequest<?> request) {     BulkRequest bulkRequest = new BulkRequest().     bulkRequest.add(((DocWriteRequest<?>) request)).     bulkRequest.setRefreshPolicy(request.getRefreshPolicy()).     bulkRequest.timeout(request.timeout()).     bulkRequest.waitForActiveShards(request.waitForActiveShards()).     request.setRefreshPolicy(WriteRequest.RefreshPolicy.NONE).     return bulkRequest. }
