# id;timestamp;commentText;codeText;commentWords;codeWords
Bootstrap -> public static void initializeNatives(Path tmpFile, boolean mlockAll, boolean systemCallFilter, boolean ctrlHandler);1524684173;initialize native resources;public static void initializeNatives(Path tmpFile, boolean mlockAll, boolean systemCallFilter, boolean ctrlHandler) {_        final Logger logger = Loggers.getLogger(Bootstrap.class)___        _        if (Natives.definitelyRunningAsRoot()) {_            throw new RuntimeException("can not run elasticsearch as root")__        }__        _        if (systemCallFilter) {_            Natives.tryInstallSystemCallFilter(tmpFile)__        }__        _        if (mlockAll) {_            if (Constants.WINDOWS) {_               Natives.tryVirtualLock()__            } else {_               Natives.tryMlockall()__            }_        }__        _        if (ctrlHandler) {_            Natives.addConsoleCtrlHandler(new ConsoleCtrlHandler() {_                @Override_                public boolean handle(int code) {_                    if (CTRL_CLOSE_EVENT == code) {_                        logger.info("running graceful exit on windows")__                        try {_                            Bootstrap.stop()__                        } catch (IOException e) {_                            throw new ElasticsearchException("failed to stop node", e)__                        }_                        return true__                    }_                    return false__                }_            })__        }__        _        try {_            JNAKernel32Library.getInstance()__        } catch (Exception ignored) {_            _        }__        Natives.trySetMaxNumberOfThreads()__        Natives.trySetMaxSizeVirtualMemory()__        Natives.trySetMaxFileSize()___        _        StringHelper.randomId()__    };initialize,native,resources;public,static,void,initialize,natives,path,tmp,file,boolean,mlock,all,boolean,system,call,filter,boolean,ctrl,handler,final,logger,logger,loggers,get,logger,bootstrap,class,if,natives,definitely,running,as,root,throw,new,runtime,exception,can,not,run,elasticsearch,as,root,if,system,call,filter,natives,try,install,system,call,filter,tmp,file,if,mlock,all,if,constants,windows,natives,try,virtual,lock,else,natives,try,mlockall,if,ctrl,handler,natives,add,console,ctrl,handler,new,console,ctrl,handler,override,public,boolean,handle,int,code,if,code,logger,info,running,graceful,exit,on,windows,try,bootstrap,stop,catch,ioexception,e,throw,new,elasticsearch,exception,failed,to,stop,node,e,return,true,return,false,try,jnakernel32library,get,instance,catch,exception,ignored,natives,try,set,max,number,of,threads,natives,try,set,max,size,virtual,memory,natives,try,set,max,file,size,string,helper,random,id
Bootstrap -> public static void initializeNatives(Path tmpFile, boolean mlockAll, boolean systemCallFilter, boolean ctrlHandler);1533063033;initialize native resources;public static void initializeNatives(Path tmpFile, boolean mlockAll, boolean systemCallFilter, boolean ctrlHandler) {_        final Logger logger = Loggers.getLogger(Bootstrap.class)___        _        if (Natives.definitelyRunningAsRoot()) {_            throw new RuntimeException("can not run elasticsearch as root")__        }__        _        if (systemCallFilter) {_            Natives.tryInstallSystemCallFilter(tmpFile)__        }__        _        if (mlockAll) {_            if (Constants.WINDOWS) {_               Natives.tryVirtualLock()__            } else {_               Natives.tryMlockall()__            }_        }__        _        if (ctrlHandler) {_            Natives.addConsoleCtrlHandler(new ConsoleCtrlHandler() {_                @Override_                public boolean handle(int code) {_                    if (CTRL_CLOSE_EVENT == code) {_                        logger.info("running graceful exit on windows")__                        try {_                            Bootstrap.stop()__                        } catch (IOException e) {_                            throw new ElasticsearchException("failed to stop node", e)__                        }_                        return true__                    }_                    return false__                }_            })__        }__        _        try {_            JNAKernel32Library.getInstance()__        } catch (Exception ignored) {_            _        }__        Natives.trySetMaxNumberOfThreads()__        Natives.trySetMaxSizeVirtualMemory()__        Natives.trySetMaxFileSize()___        _        StringHelper.randomId()__    };initialize,native,resources;public,static,void,initialize,natives,path,tmp,file,boolean,mlock,all,boolean,system,call,filter,boolean,ctrl,handler,final,logger,logger,loggers,get,logger,bootstrap,class,if,natives,definitely,running,as,root,throw,new,runtime,exception,can,not,run,elasticsearch,as,root,if,system,call,filter,natives,try,install,system,call,filter,tmp,file,if,mlock,all,if,constants,windows,natives,try,virtual,lock,else,natives,try,mlockall,if,ctrl,handler,natives,add,console,ctrl,handler,new,console,ctrl,handler,override,public,boolean,handle,int,code,if,code,logger,info,running,graceful,exit,on,windows,try,bootstrap,stop,catch,ioexception,e,throw,new,elasticsearch,exception,failed,to,stop,node,e,return,true,return,false,try,jnakernel32library,get,instance,catch,exception,ignored,natives,try,set,max,number,of,threads,natives,try,set,max,size,virtual,memory,natives,try,set,max,file,size,string,helper,random,id
Bootstrap -> public static void initializeNatives(Path tmpFile, boolean mlockAll, boolean systemCallFilter, boolean ctrlHandler);1533862840;initialize native resources;public static void initializeNatives(Path tmpFile, boolean mlockAll, boolean systemCallFilter, boolean ctrlHandler) {_        final Logger logger = Loggers.getLogger(Bootstrap.class)___        _        if (Natives.definitelyRunningAsRoot()) {_            throw new RuntimeException("can not run elasticsearch as root")__        }__        _        if (systemCallFilter) {_            Natives.tryInstallSystemCallFilter(tmpFile)__        }__        _        if (mlockAll) {_            if (Constants.WINDOWS) {_               Natives.tryVirtualLock()__            } else {_               Natives.tryMlockall()__            }_        }__        _        if (ctrlHandler) {_            Natives.addConsoleCtrlHandler(new ConsoleCtrlHandler() {_                @Override_                public boolean handle(int code) {_                    if (CTRL_CLOSE_EVENT == code) {_                        logger.info("running graceful exit on windows")__                        try {_                            Bootstrap.stop()__                        } catch (IOException e) {_                            throw new ElasticsearchException("failed to stop node", e)__                        }_                        return true__                    }_                    return false__                }_            })__        }__        _        try {_            JNAKernel32Library.getInstance()__        } catch (Exception ignored) {_            _        }__        Natives.trySetMaxNumberOfThreads()__        Natives.trySetMaxSizeVirtualMemory()__        Natives.trySetMaxFileSize()___        _        StringHelper.randomId()__    };initialize,native,resources;public,static,void,initialize,natives,path,tmp,file,boolean,mlock,all,boolean,system,call,filter,boolean,ctrl,handler,final,logger,logger,loggers,get,logger,bootstrap,class,if,natives,definitely,running,as,root,throw,new,runtime,exception,can,not,run,elasticsearch,as,root,if,system,call,filter,natives,try,install,system,call,filter,tmp,file,if,mlock,all,if,constants,windows,natives,try,virtual,lock,else,natives,try,mlockall,if,ctrl,handler,natives,add,console,ctrl,handler,new,console,ctrl,handler,override,public,boolean,handle,int,code,if,code,logger,info,running,graceful,exit,on,windows,try,bootstrap,stop,catch,ioexception,e,throw,new,elasticsearch,exception,failed,to,stop,node,e,return,true,return,false,try,jnakernel32library,get,instance,catch,exception,ignored,natives,try,set,max,number,of,threads,natives,try,set,max,size,virtual,memory,natives,try,set,max,file,size,string,helper,random,id
Bootstrap -> public static void initializeNatives(Path tmpFile, boolean mlockAll, boolean systemCallFilter, boolean ctrlHandler);1536611444;initialize native resources;public static void initializeNatives(Path tmpFile, boolean mlockAll, boolean systemCallFilter, boolean ctrlHandler) {_        final Logger logger = Loggers.getLogger(Bootstrap.class)___        _        if (Natives.definitelyRunningAsRoot()) {_            throw new RuntimeException("can not run elasticsearch as root")__        }__        _        if (systemCallFilter) {_            Natives.tryInstallSystemCallFilter(tmpFile)__        }__        _        if (mlockAll) {_            if (Constants.WINDOWS) {_               Natives.tryVirtualLock()__            } else {_               Natives.tryMlockall()__            }_        }__        _        if (ctrlHandler) {_            Natives.addConsoleCtrlHandler(new ConsoleCtrlHandler() {_                @Override_                public boolean handle(int code) {_                    if (CTRL_CLOSE_EVENT == code) {_                        logger.info("running graceful exit on windows")__                        try {_                            Bootstrap.stop()__                        } catch (IOException e) {_                            throw new ElasticsearchException("failed to stop node", e)__                        }_                        return true__                    }_                    return false__                }_            })__        }__        _        try {_            JNAKernel32Library.getInstance()__        } catch (Exception ignored) {_            _        }__        Natives.trySetMaxNumberOfThreads()__        Natives.trySetMaxSizeVirtualMemory()__        Natives.trySetMaxFileSize()___        _        StringHelper.randomId()__    };initialize,native,resources;public,static,void,initialize,natives,path,tmp,file,boolean,mlock,all,boolean,system,call,filter,boolean,ctrl,handler,final,logger,logger,loggers,get,logger,bootstrap,class,if,natives,definitely,running,as,root,throw,new,runtime,exception,can,not,run,elasticsearch,as,root,if,system,call,filter,natives,try,install,system,call,filter,tmp,file,if,mlock,all,if,constants,windows,natives,try,virtual,lock,else,natives,try,mlockall,if,ctrl,handler,natives,add,console,ctrl,handler,new,console,ctrl,handler,override,public,boolean,handle,int,code,if,code,logger,info,running,graceful,exit,on,windows,try,bootstrap,stop,catch,ioexception,e,throw,new,elasticsearch,exception,failed,to,stop,node,e,return,true,return,false,try,jnakernel32library,get,instance,catch,exception,ignored,natives,try,set,max,number,of,threads,natives,try,set,max,size,virtual,memory,natives,try,set,max,file,size,string,helper,random,id
Bootstrap -> public static void initializeNatives(Path tmpFile, boolean mlockAll, boolean systemCallFilter, boolean ctrlHandler);1537806831;initialize native resources;public static void initializeNatives(Path tmpFile, boolean mlockAll, boolean systemCallFilter, boolean ctrlHandler) {_        final Logger logger = Loggers.getLogger(Bootstrap.class)___        _        if (Natives.definitelyRunningAsRoot()) {_            throw new RuntimeException("can not run elasticsearch as root")__        }__        _        if (systemCallFilter) {_            Natives.tryInstallSystemCallFilter(tmpFile)__        }__        _        if (mlockAll) {_            if (Constants.WINDOWS) {_               Natives.tryVirtualLock()__            } else {_               Natives.tryMlockall()__            }_        }__        _        if (ctrlHandler) {_            Natives.addConsoleCtrlHandler(new ConsoleCtrlHandler() {_                @Override_                public boolean handle(int code) {_                    if (CTRL_CLOSE_EVENT == code) {_                        logger.info("running graceful exit on windows")__                        try {_                            Bootstrap.stop()__                        } catch (IOException e) {_                            throw new ElasticsearchException("failed to stop node", e)__                        }_                        return true__                    }_                    return false__                }_            })__        }__        _        try {_            JNAKernel32Library.getInstance()__        } catch (Exception ignored) {_            _        }__        Natives.trySetMaxNumberOfThreads()__        Natives.trySetMaxSizeVirtualMemory()__        Natives.trySetMaxFileSize()___        _        StringHelper.randomId()__    };initialize,native,resources;public,static,void,initialize,natives,path,tmp,file,boolean,mlock,all,boolean,system,call,filter,boolean,ctrl,handler,final,logger,logger,loggers,get,logger,bootstrap,class,if,natives,definitely,running,as,root,throw,new,runtime,exception,can,not,run,elasticsearch,as,root,if,system,call,filter,natives,try,install,system,call,filter,tmp,file,if,mlock,all,if,constants,windows,natives,try,virtual,lock,else,natives,try,mlockall,if,ctrl,handler,natives,add,console,ctrl,handler,new,console,ctrl,handler,override,public,boolean,handle,int,code,if,code,logger,info,running,graceful,exit,on,windows,try,bootstrap,stop,catch,ioexception,e,throw,new,elasticsearch,exception,failed,to,stop,node,e,return,true,return,false,try,jnakernel32library,get,instance,catch,exception,ignored,natives,try,set,max,number,of,threads,natives,try,set,max,size,virtual,memory,natives,try,set,max,file,size,string,helper,random,id
Bootstrap -> public static void initializeNatives(Path tmpFile, boolean mlockAll, boolean systemCallFilter, boolean ctrlHandler);1538067637;initialize native resources;public static void initializeNatives(Path tmpFile, boolean mlockAll, boolean systemCallFilter, boolean ctrlHandler) {_        final Logger logger = Loggers.getLogger(Bootstrap.class)___        _        if (Natives.definitelyRunningAsRoot()) {_            throw new RuntimeException("can not run elasticsearch as root")__        }__        _        if (systemCallFilter) {_            Natives.tryInstallSystemCallFilter(tmpFile)__        }__        _        if (mlockAll) {_            if (Constants.WINDOWS) {_               Natives.tryVirtualLock()__            } else {_               Natives.tryMlockall()__            }_        }__        _        if (ctrlHandler) {_            Natives.addConsoleCtrlHandler(new ConsoleCtrlHandler() {_                @Override_                public boolean handle(int code) {_                    if (CTRL_CLOSE_EVENT == code) {_                        logger.info("running graceful exit on windows")__                        try {_                            Bootstrap.stop()__                        } catch (IOException e) {_                            throw new ElasticsearchException("failed to stop node", e)__                        }_                        return true__                    }_                    return false__                }_            })__        }__        _        try {_            JNAKernel32Library.getInstance()__        } catch (Exception ignored) {_            _        }__        Natives.trySetMaxNumberOfThreads()__        Natives.trySetMaxSizeVirtualMemory()__        Natives.trySetMaxFileSize()___        _        StringHelper.randomId()__    };initialize,native,resources;public,static,void,initialize,natives,path,tmp,file,boolean,mlock,all,boolean,system,call,filter,boolean,ctrl,handler,final,logger,logger,loggers,get,logger,bootstrap,class,if,natives,definitely,running,as,root,throw,new,runtime,exception,can,not,run,elasticsearch,as,root,if,system,call,filter,natives,try,install,system,call,filter,tmp,file,if,mlock,all,if,constants,windows,natives,try,virtual,lock,else,natives,try,mlockall,if,ctrl,handler,natives,add,console,ctrl,handler,new,console,ctrl,handler,override,public,boolean,handle,int,code,if,code,logger,info,running,graceful,exit,on,windows,try,bootstrap,stop,catch,ioexception,e,throw,new,elasticsearch,exception,failed,to,stop,node,e,return,true,return,false,try,jnakernel32library,get,instance,catch,exception,ignored,natives,try,set,max,number,of,threads,natives,try,set,max,size,virtual,memory,natives,try,set,max,file,size,string,helper,random,id
Bootstrap -> public static void initializeNatives(Path tmpFile, boolean mlockAll, boolean systemCallFilter, boolean ctrlHandler);1539615817;initialize native resources;public static void initializeNatives(Path tmpFile, boolean mlockAll, boolean systemCallFilter, boolean ctrlHandler) {_        final Logger logger = Loggers.getLogger(Bootstrap.class)___        _        if (Natives.definitelyRunningAsRoot()) {_            throw new RuntimeException("can not run elasticsearch as root")__        }__        _        if (systemCallFilter) {_            Natives.tryInstallSystemCallFilter(tmpFile)__        }__        _        if (mlockAll) {_            if (Constants.WINDOWS) {_               Natives.tryVirtualLock()__            } else {_               Natives.tryMlockall()__            }_        }__        _        if (ctrlHandler) {_            Natives.addConsoleCtrlHandler(new ConsoleCtrlHandler() {_                @Override_                public boolean handle(int code) {_                    if (CTRL_CLOSE_EVENT == code) {_                        logger.info("running graceful exit on windows")__                        try {_                            Bootstrap.stop()__                        } catch (IOException e) {_                            throw new ElasticsearchException("failed to stop node", e)__                        }_                        return true__                    }_                    return false__                }_            })__        }__        _        try {_            JNAKernel32Library.getInstance()__        } catch (Exception ignored) {_            _        }__        Natives.trySetMaxNumberOfThreads()__        Natives.trySetMaxSizeVirtualMemory()__        Natives.trySetMaxFileSize()___        _        StringHelper.randomId()__    };initialize,native,resources;public,static,void,initialize,natives,path,tmp,file,boolean,mlock,all,boolean,system,call,filter,boolean,ctrl,handler,final,logger,logger,loggers,get,logger,bootstrap,class,if,natives,definitely,running,as,root,throw,new,runtime,exception,can,not,run,elasticsearch,as,root,if,system,call,filter,natives,try,install,system,call,filter,tmp,file,if,mlock,all,if,constants,windows,natives,try,virtual,lock,else,natives,try,mlockall,if,ctrl,handler,natives,add,console,ctrl,handler,new,console,ctrl,handler,override,public,boolean,handle,int,code,if,code,logger,info,running,graceful,exit,on,windows,try,bootstrap,stop,catch,ioexception,e,throw,new,elasticsearch,exception,failed,to,stop,node,e,return,true,return,false,try,jnakernel32library,get,instance,catch,exception,ignored,natives,try,set,max,number,of,threads,natives,try,set,max,size,virtual,memory,natives,try,set,max,file,size,string,helper,random,id
Bootstrap -> public static void initializeNatives(Path tmpFile, boolean mlockAll, boolean systemCallFilter, boolean ctrlHandler);1540486836;initialize native resources;public static void initializeNatives(Path tmpFile, boolean mlockAll, boolean systemCallFilter, boolean ctrlHandler) {_        final Logger logger = LogManager.getLogger(Bootstrap.class)___        _        if (Natives.definitelyRunningAsRoot()) {_            throw new RuntimeException("can not run elasticsearch as root")__        }__        _        if (systemCallFilter) {_            Natives.tryInstallSystemCallFilter(tmpFile)__        }__        _        if (mlockAll) {_            if (Constants.WINDOWS) {_               Natives.tryVirtualLock()__            } else {_               Natives.tryMlockall()__            }_        }__        _        if (ctrlHandler) {_            Natives.addConsoleCtrlHandler(new ConsoleCtrlHandler() {_                @Override_                public boolean handle(int code) {_                    if (CTRL_CLOSE_EVENT == code) {_                        logger.info("running graceful exit on windows")__                        try {_                            Bootstrap.stop()__                        } catch (IOException e) {_                            throw new ElasticsearchException("failed to stop node", e)__                        }_                        return true__                    }_                    return false__                }_            })__        }__        _        try {_            JNAKernel32Library.getInstance()__        } catch (Exception ignored) {_            _        }__        Natives.trySetMaxNumberOfThreads()__        Natives.trySetMaxSizeVirtualMemory()__        Natives.trySetMaxFileSize()___        _        StringHelper.randomId()__    };initialize,native,resources;public,static,void,initialize,natives,path,tmp,file,boolean,mlock,all,boolean,system,call,filter,boolean,ctrl,handler,final,logger,logger,log,manager,get,logger,bootstrap,class,if,natives,definitely,running,as,root,throw,new,runtime,exception,can,not,run,elasticsearch,as,root,if,system,call,filter,natives,try,install,system,call,filter,tmp,file,if,mlock,all,if,constants,windows,natives,try,virtual,lock,else,natives,try,mlockall,if,ctrl,handler,natives,add,console,ctrl,handler,new,console,ctrl,handler,override,public,boolean,handle,int,code,if,code,logger,info,running,graceful,exit,on,windows,try,bootstrap,stop,catch,ioexception,e,throw,new,elasticsearch,exception,failed,to,stop,node,e,return,true,return,false,try,jnakernel32library,get,instance,catch,exception,ignored,natives,try,set,max,number,of,threads,natives,try,set,max,size,virtual,memory,natives,try,set,max,file,size,string,helper,random,id
Bootstrap -> static void init(             final boolean foreground,             final Path pidFile,             final boolean quiet,             final Environment initialEnv) throws BootstrapException, NodeValidationException, UserException;1524684173;This method is invoked by {@link Elasticsearch#main(String[])} to startup elasticsearch.;static void init(_            final boolean foreground,_            final Path pidFile,_            final boolean quiet,_            final Environment initialEnv) throws BootstrapException, NodeValidationException, UserException {_        _        _        BootstrapInfo.init()___        INSTANCE = new Bootstrap()___        final SecureSettings keystore = loadSecureSettings(initialEnv)__        final Environment environment = createEnvironment(pidFile, keystore, initialEnv.settings(), initialEnv.configFile())__        try {_            LogConfigurator.configure(environment)__        } catch (IOException e) {_            throw new BootstrapException(e)__        }_        if (environment.pidFile() != null) {_            try {_                PidFile.create(environment.pidFile(), true)__            } catch (IOException e) {_                throw new BootstrapException(e)__            }_        }__        final boolean closeStandardStreams = (foreground == false) || quiet__        try {_            if (closeStandardStreams) {_                final Logger rootLogger = ESLoggerFactory.getRootLogger()__                final Appender maybeConsoleAppender = Loggers.findAppender(rootLogger, ConsoleAppender.class)__                if (maybeConsoleAppender != null) {_                    Loggers.removeAppender(rootLogger, maybeConsoleAppender)__                }_                closeSystOut()__            }__            _            checkLucene()___            _            _            _            Thread.setDefaultUncaughtExceptionHandler(_                new ElasticsearchUncaughtExceptionHandler(() -> Node.NODE_NAME_SETTING.get(environment.settings())))___            INSTANCE.setup(true, environment)___            try {_                _                IOUtils.close(keystore)__            } catch (IOException e) {_                throw new BootstrapException(e)__            }__            INSTANCE.start()___            if (closeStandardStreams) {_                closeSysError()__            }_        } catch (NodeValidationException | RuntimeException e) {_            _            final Logger rootLogger = ESLoggerFactory.getRootLogger()__            final Appender maybeConsoleAppender = Loggers.findAppender(rootLogger, ConsoleAppender.class)__            if (foreground && maybeConsoleAppender != null) {_                Loggers.removeAppender(rootLogger, maybeConsoleAppender)__            }_            Logger logger = Loggers.getLogger(Bootstrap.class)__            if (INSTANCE.node != null) {_                logger = Loggers.getLogger(Bootstrap.class, Node.NODE_NAME_SETTING.get(INSTANCE.node.settings()))__            }_            _            if (e instanceof CreationException) {_                _                ByteArrayOutputStream os = new ByteArrayOutputStream()__                PrintStream ps = null__                try {_                    ps = new PrintStream(os, false, "UTF-8")__                } catch (UnsupportedEncodingException uee) {_                    assert false__                    e.addSuppressed(uee)__                }_                new StartupException(e).printStackTrace(ps)__                ps.flush()__                try {_                    logger.error("Guice Exception: {}", os.toString("UTF-8"))__                } catch (UnsupportedEncodingException uee) {_                    assert false__                    e.addSuppressed(uee)__                }_            } else if (e instanceof NodeValidationException) {_                logger.error("node validation exception\n{}", e.getMessage())__            } else {_                _                logger.error("Exception", e)__            }_            _            if (foreground && maybeConsoleAppender != null) {_                Loggers.addAppender(rootLogger, maybeConsoleAppender)__            }__            throw e__        }_    };this,method,is,invoked,by,link,elasticsearch,main,string,to,startup,elasticsearch;static,void,init,final,boolean,foreground,final,path,pid,file,final,boolean,quiet,final,environment,initial,env,throws,bootstrap,exception,node,validation,exception,user,exception,bootstrap,info,init,instance,new,bootstrap,final,secure,settings,keystore,load,secure,settings,initial,env,final,environment,environment,create,environment,pid,file,keystore,initial,env,settings,initial,env,config,file,try,log,configurator,configure,environment,catch,ioexception,e,throw,new,bootstrap,exception,e,if,environment,pid,file,null,try,pid,file,create,environment,pid,file,true,catch,ioexception,e,throw,new,bootstrap,exception,e,final,boolean,close,standard,streams,foreground,false,quiet,try,if,close,standard,streams,final,logger,root,logger,eslogger,factory,get,root,logger,final,appender,maybe,console,appender,loggers,find,appender,root,logger,console,appender,class,if,maybe,console,appender,null,loggers,remove,appender,root,logger,maybe,console,appender,close,syst,out,check,lucene,thread,set,default,uncaught,exception,handler,new,elasticsearch,uncaught,exception,handler,node,get,environment,settings,instance,setup,true,environment,try,ioutils,close,keystore,catch,ioexception,e,throw,new,bootstrap,exception,e,instance,start,if,close,standard,streams,close,sys,error,catch,node,validation,exception,runtime,exception,e,final,logger,root,logger,eslogger,factory,get,root,logger,final,appender,maybe,console,appender,loggers,find,appender,root,logger,console,appender,class,if,foreground,maybe,console,appender,null,loggers,remove,appender,root,logger,maybe,console,appender,logger,logger,loggers,get,logger,bootstrap,class,if,instance,node,null,logger,loggers,get,logger,bootstrap,class,node,get,instance,node,settings,if,e,instanceof,creation,exception,byte,array,output,stream,os,new,byte,array,output,stream,print,stream,ps,null,try,ps,new,print,stream,os,false,utf,8,catch,unsupported,encoding,exception,uee,assert,false,e,add,suppressed,uee,new,startup,exception,e,print,stack,trace,ps,ps,flush,try,logger,error,guice,exception,os,to,string,utf,8,catch,unsupported,encoding,exception,uee,assert,false,e,add,suppressed,uee,else,if,e,instanceof,node,validation,exception,logger,error,node,validation,exception,n,e,get,message,else,logger,error,exception,e,if,foreground,maybe,console,appender,null,loggers,add,appender,root,logger,maybe,console,appender,throw,e
Bootstrap -> static void init(             final boolean foreground,             final Path pidFile,             final boolean quiet,             final Environment initialEnv) throws BootstrapException, NodeValidationException, UserException;1533063033;This method is invoked by {@link Elasticsearch#main(String[])} to startup elasticsearch.;static void init(_            final boolean foreground,_            final Path pidFile,_            final boolean quiet,_            final Environment initialEnv) throws BootstrapException, NodeValidationException, UserException {_        _        _        BootstrapInfo.init()___        INSTANCE = new Bootstrap()___        final SecureSettings keystore = loadSecureSettings(initialEnv)__        final Environment environment = createEnvironment(pidFile, keystore, initialEnv.settings(), initialEnv.configFile())___        String nodeName = Node.NODE_NAME_SETTING.get(environment.settings())__        NodeNamePatternConverter.setNodeName(nodeName)___        try {_            LogConfigurator.configure(environment)__        } catch (IOException e) {_            throw new BootstrapException(e)__        }_        if (environment.pidFile() != null) {_            try {_                PidFile.create(environment.pidFile(), true)__            } catch (IOException e) {_                throw new BootstrapException(e)__            }_        }__        final boolean closeStandardStreams = (foreground == false) || quiet__        try {_            if (closeStandardStreams) {_                final Logger rootLogger = ESLoggerFactory.getRootLogger()__                final Appender maybeConsoleAppender = Loggers.findAppender(rootLogger, ConsoleAppender.class)__                if (maybeConsoleAppender != null) {_                    Loggers.removeAppender(rootLogger, maybeConsoleAppender)__                }_                closeSystOut()__            }__            _            checkLucene()___            _            _            _            Thread.setDefaultUncaughtExceptionHandler(new ElasticsearchUncaughtExceptionHandler())___            INSTANCE.setup(true, environment)___            try {_                _                IOUtils.close(keystore)__            } catch (IOException e) {_                throw new BootstrapException(e)__            }__            INSTANCE.start()___            if (closeStandardStreams) {_                closeSysError()__            }_        } catch (NodeValidationException | RuntimeException e) {_            _            final Logger rootLogger = ESLoggerFactory.getRootLogger()__            final Appender maybeConsoleAppender = Loggers.findAppender(rootLogger, ConsoleAppender.class)__            if (foreground && maybeConsoleAppender != null) {_                Loggers.removeAppender(rootLogger, maybeConsoleAppender)__            }_            Logger logger = Loggers.getLogger(Bootstrap.class)__            if (INSTANCE.node != null) {_                logger = Loggers.getLogger(Bootstrap.class, Node.NODE_NAME_SETTING.get(INSTANCE.node.settings()))__            }_            _            if (e instanceof CreationException) {_                _                ByteArrayOutputStream os = new ByteArrayOutputStream()__                PrintStream ps = null__                try {_                    ps = new PrintStream(os, false, "UTF-8")__                } catch (UnsupportedEncodingException uee) {_                    assert false__                    e.addSuppressed(uee)__                }_                new StartupException(e).printStackTrace(ps)__                ps.flush()__                try {_                    logger.error("Guice Exception: {}", os.toString("UTF-8"))__                } catch (UnsupportedEncodingException uee) {_                    assert false__                    e.addSuppressed(uee)__                }_            } else if (e instanceof NodeValidationException) {_                logger.error("node validation exception\n{}", e.getMessage())__            } else {_                _                logger.error("Exception", e)__            }_            _            if (foreground && maybeConsoleAppender != null) {_                Loggers.addAppender(rootLogger, maybeConsoleAppender)__            }__            throw e__        }_    };this,method,is,invoked,by,link,elasticsearch,main,string,to,startup,elasticsearch;static,void,init,final,boolean,foreground,final,path,pid,file,final,boolean,quiet,final,environment,initial,env,throws,bootstrap,exception,node,validation,exception,user,exception,bootstrap,info,init,instance,new,bootstrap,final,secure,settings,keystore,load,secure,settings,initial,env,final,environment,environment,create,environment,pid,file,keystore,initial,env,settings,initial,env,config,file,string,node,name,node,get,environment,settings,node,name,pattern,converter,set,node,name,node,name,try,log,configurator,configure,environment,catch,ioexception,e,throw,new,bootstrap,exception,e,if,environment,pid,file,null,try,pid,file,create,environment,pid,file,true,catch,ioexception,e,throw,new,bootstrap,exception,e,final,boolean,close,standard,streams,foreground,false,quiet,try,if,close,standard,streams,final,logger,root,logger,eslogger,factory,get,root,logger,final,appender,maybe,console,appender,loggers,find,appender,root,logger,console,appender,class,if,maybe,console,appender,null,loggers,remove,appender,root,logger,maybe,console,appender,close,syst,out,check,lucene,thread,set,default,uncaught,exception,handler,new,elasticsearch,uncaught,exception,handler,instance,setup,true,environment,try,ioutils,close,keystore,catch,ioexception,e,throw,new,bootstrap,exception,e,instance,start,if,close,standard,streams,close,sys,error,catch,node,validation,exception,runtime,exception,e,final,logger,root,logger,eslogger,factory,get,root,logger,final,appender,maybe,console,appender,loggers,find,appender,root,logger,console,appender,class,if,foreground,maybe,console,appender,null,loggers,remove,appender,root,logger,maybe,console,appender,logger,logger,loggers,get,logger,bootstrap,class,if,instance,node,null,logger,loggers,get,logger,bootstrap,class,node,get,instance,node,settings,if,e,instanceof,creation,exception,byte,array,output,stream,os,new,byte,array,output,stream,print,stream,ps,null,try,ps,new,print,stream,os,false,utf,8,catch,unsupported,encoding,exception,uee,assert,false,e,add,suppressed,uee,new,startup,exception,e,print,stack,trace,ps,ps,flush,try,logger,error,guice,exception,os,to,string,utf,8,catch,unsupported,encoding,exception,uee,assert,false,e,add,suppressed,uee,else,if,e,instanceof,node,validation,exception,logger,error,node,validation,exception,n,e,get,message,else,logger,error,exception,e,if,foreground,maybe,console,appender,null,loggers,add,appender,root,logger,maybe,console,appender,throw,e
Bootstrap -> static void init(             final boolean foreground,             final Path pidFile,             final boolean quiet,             final Environment initialEnv) throws BootstrapException, NodeValidationException, UserException;1533862840;This method is invoked by {@link Elasticsearch#main(String[])} to startup elasticsearch.;static void init(_            final boolean foreground,_            final Path pidFile,_            final boolean quiet,_            final Environment initialEnv) throws BootstrapException, NodeValidationException, UserException {_        _        _        BootstrapInfo.init()___        INSTANCE = new Bootstrap()___        final SecureSettings keystore = loadSecureSettings(initialEnv)__        final Environment environment = createEnvironment(pidFile, keystore, initialEnv.settings(), initialEnv.configFile())___        String nodeName = Node.NODE_NAME_SETTING.get(environment.settings())__        NodeNamePatternConverter.setNodeName(nodeName)___        try {_            LogConfigurator.configure(environment)__        } catch (IOException e) {_            throw new BootstrapException(e)__        }_        if (environment.pidFile() != null) {_            try {_                PidFile.create(environment.pidFile(), true)__            } catch (IOException e) {_                throw new BootstrapException(e)__            }_        }__        final boolean closeStandardStreams = (foreground == false) || quiet__        try {_            if (closeStandardStreams) {_                final Logger rootLogger = ESLoggerFactory.getRootLogger()__                final Appender maybeConsoleAppender = Loggers.findAppender(rootLogger, ConsoleAppender.class)__                if (maybeConsoleAppender != null) {_                    Loggers.removeAppender(rootLogger, maybeConsoleAppender)__                }_                closeSystOut()__            }__            _            checkLucene()___            _            _            _            Thread.setDefaultUncaughtExceptionHandler(new ElasticsearchUncaughtExceptionHandler())___            INSTANCE.setup(true, environment)___            try {_                _                IOUtils.close(keystore)__            } catch (IOException e) {_                throw new BootstrapException(e)__            }__            INSTANCE.start()___            if (closeStandardStreams) {_                closeSysError()__            }_        } catch (NodeValidationException | RuntimeException e) {_            _            final Logger rootLogger = ESLoggerFactory.getRootLogger()__            final Appender maybeConsoleAppender = Loggers.findAppender(rootLogger, ConsoleAppender.class)__            if (foreground && maybeConsoleAppender != null) {_                Loggers.removeAppender(rootLogger, maybeConsoleAppender)__            }_            Logger logger = LogManager.getLogger(Bootstrap.class)__            _            if (e instanceof CreationException) {_                _                ByteArrayOutputStream os = new ByteArrayOutputStream()__                PrintStream ps = null__                try {_                    ps = new PrintStream(os, false, "UTF-8")__                } catch (UnsupportedEncodingException uee) {_                    assert false__                    e.addSuppressed(uee)__                }_                new StartupException(e).printStackTrace(ps)__                ps.flush()__                try {_                    logger.error("Guice Exception: {}", os.toString("UTF-8"))__                } catch (UnsupportedEncodingException uee) {_                    assert false__                    e.addSuppressed(uee)__                }_            } else if (e instanceof NodeValidationException) {_                logger.error("node validation exception\n{}", e.getMessage())__            } else {_                _                logger.error("Exception", e)__            }_            _            if (foreground && maybeConsoleAppender != null) {_                Loggers.addAppender(rootLogger, maybeConsoleAppender)__            }__            throw e__        }_    };this,method,is,invoked,by,link,elasticsearch,main,string,to,startup,elasticsearch;static,void,init,final,boolean,foreground,final,path,pid,file,final,boolean,quiet,final,environment,initial,env,throws,bootstrap,exception,node,validation,exception,user,exception,bootstrap,info,init,instance,new,bootstrap,final,secure,settings,keystore,load,secure,settings,initial,env,final,environment,environment,create,environment,pid,file,keystore,initial,env,settings,initial,env,config,file,string,node,name,node,get,environment,settings,node,name,pattern,converter,set,node,name,node,name,try,log,configurator,configure,environment,catch,ioexception,e,throw,new,bootstrap,exception,e,if,environment,pid,file,null,try,pid,file,create,environment,pid,file,true,catch,ioexception,e,throw,new,bootstrap,exception,e,final,boolean,close,standard,streams,foreground,false,quiet,try,if,close,standard,streams,final,logger,root,logger,eslogger,factory,get,root,logger,final,appender,maybe,console,appender,loggers,find,appender,root,logger,console,appender,class,if,maybe,console,appender,null,loggers,remove,appender,root,logger,maybe,console,appender,close,syst,out,check,lucene,thread,set,default,uncaught,exception,handler,new,elasticsearch,uncaught,exception,handler,instance,setup,true,environment,try,ioutils,close,keystore,catch,ioexception,e,throw,new,bootstrap,exception,e,instance,start,if,close,standard,streams,close,sys,error,catch,node,validation,exception,runtime,exception,e,final,logger,root,logger,eslogger,factory,get,root,logger,final,appender,maybe,console,appender,loggers,find,appender,root,logger,console,appender,class,if,foreground,maybe,console,appender,null,loggers,remove,appender,root,logger,maybe,console,appender,logger,logger,log,manager,get,logger,bootstrap,class,if,e,instanceof,creation,exception,byte,array,output,stream,os,new,byte,array,output,stream,print,stream,ps,null,try,ps,new,print,stream,os,false,utf,8,catch,unsupported,encoding,exception,uee,assert,false,e,add,suppressed,uee,new,startup,exception,e,print,stack,trace,ps,ps,flush,try,logger,error,guice,exception,os,to,string,utf,8,catch,unsupported,encoding,exception,uee,assert,false,e,add,suppressed,uee,else,if,e,instanceof,node,validation,exception,logger,error,node,validation,exception,n,e,get,message,else,logger,error,exception,e,if,foreground,maybe,console,appender,null,loggers,add,appender,root,logger,maybe,console,appender,throw,e
Bootstrap -> static void init(             final boolean foreground,             final Path pidFile,             final boolean quiet,             final Environment initialEnv) throws BootstrapException, NodeValidationException, UserException;1536611444;This method is invoked by {@link Elasticsearch#main(String[])} to startup elasticsearch.;static void init(_            final boolean foreground,_            final Path pidFile,_            final boolean quiet,_            final Environment initialEnv) throws BootstrapException, NodeValidationException, UserException {_        _        _        BootstrapInfo.init()___        INSTANCE = new Bootstrap()___        final SecureSettings keystore = loadSecureSettings(initialEnv)__        final Environment environment = createEnvironment(pidFile, keystore, initialEnv.settings(), initialEnv.configFile())___        if (Node.NODE_NAME_SETTING.exists(environment.settings())) {_            LogConfigurator.setNodeName(Node.NODE_NAME_SETTING.get(environment.settings()))__        }_        try {_            LogConfigurator.configure(environment)__        } catch (IOException e) {_            throw new BootstrapException(e)__        }_        if (environment.pidFile() != null) {_            try {_                PidFile.create(environment.pidFile(), true)__            } catch (IOException e) {_                throw new BootstrapException(e)__            }_        }__        final boolean closeStandardStreams = (foreground == false) || quiet__        try {_            if (closeStandardStreams) {_                final Logger rootLogger = ESLoggerFactory.getRootLogger()__                final Appender maybeConsoleAppender = Loggers.findAppender(rootLogger, ConsoleAppender.class)__                if (maybeConsoleAppender != null) {_                    Loggers.removeAppender(rootLogger, maybeConsoleAppender)__                }_                closeSystOut()__            }__            _            checkLucene()___            _            _            _            Thread.setDefaultUncaughtExceptionHandler(new ElasticsearchUncaughtExceptionHandler())___            INSTANCE.setup(true, environment)___            try {_                _                IOUtils.close(keystore)__            } catch (IOException e) {_                throw new BootstrapException(e)__            }__            INSTANCE.start()___            if (closeStandardStreams) {_                closeSysError()__            }_        } catch (NodeValidationException | RuntimeException e) {_            _            final Logger rootLogger = ESLoggerFactory.getRootLogger()__            final Appender maybeConsoleAppender = Loggers.findAppender(rootLogger, ConsoleAppender.class)__            if (foreground && maybeConsoleAppender != null) {_                Loggers.removeAppender(rootLogger, maybeConsoleAppender)__            }_            Logger logger = LogManager.getLogger(Bootstrap.class)__            _            if (e instanceof CreationException) {_                _                ByteArrayOutputStream os = new ByteArrayOutputStream()__                PrintStream ps = null__                try {_                    ps = new PrintStream(os, false, "UTF-8")__                } catch (UnsupportedEncodingException uee) {_                    assert false__                    e.addSuppressed(uee)__                }_                new StartupException(e).printStackTrace(ps)__                ps.flush()__                try {_                    logger.error("Guice Exception: {}", os.toString("UTF-8"))__                } catch (UnsupportedEncodingException uee) {_                    assert false__                    e.addSuppressed(uee)__                }_            } else if (e instanceof NodeValidationException) {_                logger.error("node validation exception\n{}", e.getMessage())__            } else {_                _                logger.error("Exception", e)__            }_            _            if (foreground && maybeConsoleAppender != null) {_                Loggers.addAppender(rootLogger, maybeConsoleAppender)__            }__            throw e__        }_    };this,method,is,invoked,by,link,elasticsearch,main,string,to,startup,elasticsearch;static,void,init,final,boolean,foreground,final,path,pid,file,final,boolean,quiet,final,environment,initial,env,throws,bootstrap,exception,node,validation,exception,user,exception,bootstrap,info,init,instance,new,bootstrap,final,secure,settings,keystore,load,secure,settings,initial,env,final,environment,environment,create,environment,pid,file,keystore,initial,env,settings,initial,env,config,file,if,node,exists,environment,settings,log,configurator,set,node,name,node,get,environment,settings,try,log,configurator,configure,environment,catch,ioexception,e,throw,new,bootstrap,exception,e,if,environment,pid,file,null,try,pid,file,create,environment,pid,file,true,catch,ioexception,e,throw,new,bootstrap,exception,e,final,boolean,close,standard,streams,foreground,false,quiet,try,if,close,standard,streams,final,logger,root,logger,eslogger,factory,get,root,logger,final,appender,maybe,console,appender,loggers,find,appender,root,logger,console,appender,class,if,maybe,console,appender,null,loggers,remove,appender,root,logger,maybe,console,appender,close,syst,out,check,lucene,thread,set,default,uncaught,exception,handler,new,elasticsearch,uncaught,exception,handler,instance,setup,true,environment,try,ioutils,close,keystore,catch,ioexception,e,throw,new,bootstrap,exception,e,instance,start,if,close,standard,streams,close,sys,error,catch,node,validation,exception,runtime,exception,e,final,logger,root,logger,eslogger,factory,get,root,logger,final,appender,maybe,console,appender,loggers,find,appender,root,logger,console,appender,class,if,foreground,maybe,console,appender,null,loggers,remove,appender,root,logger,maybe,console,appender,logger,logger,log,manager,get,logger,bootstrap,class,if,e,instanceof,creation,exception,byte,array,output,stream,os,new,byte,array,output,stream,print,stream,ps,null,try,ps,new,print,stream,os,false,utf,8,catch,unsupported,encoding,exception,uee,assert,false,e,add,suppressed,uee,new,startup,exception,e,print,stack,trace,ps,ps,flush,try,logger,error,guice,exception,os,to,string,utf,8,catch,unsupported,encoding,exception,uee,assert,false,e,add,suppressed,uee,else,if,e,instanceof,node,validation,exception,logger,error,node,validation,exception,n,e,get,message,else,logger,error,exception,e,if,foreground,maybe,console,appender,null,loggers,add,appender,root,logger,maybe,console,appender,throw,e
Bootstrap -> static void init(             final boolean foreground,             final Path pidFile,             final boolean quiet,             final Environment initialEnv) throws BootstrapException, NodeValidationException, UserException;1537806831;This method is invoked by {@link Elasticsearch#main(String[])} to startup elasticsearch.;static void init(_            final boolean foreground,_            final Path pidFile,_            final boolean quiet,_            final Environment initialEnv) throws BootstrapException, NodeValidationException, UserException {_        _        _        BootstrapInfo.init()___        INSTANCE = new Bootstrap()___        final SecureSettings keystore = loadSecureSettings(initialEnv)__        final Environment environment = createEnvironment(pidFile, keystore, initialEnv.settings(), initialEnv.configFile())___        LogConfigurator.setNodeName(Node.NODE_NAME_SETTING.get(environment.settings()))__        try {_            LogConfigurator.configure(environment)__        } catch (IOException e) {_            throw new BootstrapException(e)__        }_        if (environment.pidFile() != null) {_            try {_                PidFile.create(environment.pidFile(), true)__            } catch (IOException e) {_                throw new BootstrapException(e)__            }_        }__        final boolean closeStandardStreams = (foreground == false) || quiet__        try {_            if (closeStandardStreams) {_                final Logger rootLogger = ESLoggerFactory.getRootLogger()__                final Appender maybeConsoleAppender = Loggers.findAppender(rootLogger, ConsoleAppender.class)__                if (maybeConsoleAppender != null) {_                    Loggers.removeAppender(rootLogger, maybeConsoleAppender)__                }_                closeSystOut()__            }__            _            checkLucene()___            _            _            _            Thread.setDefaultUncaughtExceptionHandler(new ElasticsearchUncaughtExceptionHandler())___            INSTANCE.setup(true, environment)___            try {_                _                IOUtils.close(keystore)__            } catch (IOException e) {_                throw new BootstrapException(e)__            }__            INSTANCE.start()___            if (closeStandardStreams) {_                closeSysError()__            }_        } catch (NodeValidationException | RuntimeException e) {_            _            final Logger rootLogger = ESLoggerFactory.getRootLogger()__            final Appender maybeConsoleAppender = Loggers.findAppender(rootLogger, ConsoleAppender.class)__            if (foreground && maybeConsoleAppender != null) {_                Loggers.removeAppender(rootLogger, maybeConsoleAppender)__            }_            Logger logger = LogManager.getLogger(Bootstrap.class)__            _            if (e instanceof CreationException) {_                _                ByteArrayOutputStream os = new ByteArrayOutputStream()__                PrintStream ps = null__                try {_                    ps = new PrintStream(os, false, "UTF-8")__                } catch (UnsupportedEncodingException uee) {_                    assert false__                    e.addSuppressed(uee)__                }_                new StartupException(e).printStackTrace(ps)__                ps.flush()__                try {_                    logger.error("Guice Exception: {}", os.toString("UTF-8"))__                } catch (UnsupportedEncodingException uee) {_                    assert false__                    e.addSuppressed(uee)__                }_            } else if (e instanceof NodeValidationException) {_                logger.error("node validation exception\n{}", e.getMessage())__            } else {_                _                logger.error("Exception", e)__            }_            _            if (foreground && maybeConsoleAppender != null) {_                Loggers.addAppender(rootLogger, maybeConsoleAppender)__            }__            throw e__        }_    };this,method,is,invoked,by,link,elasticsearch,main,string,to,startup,elasticsearch;static,void,init,final,boolean,foreground,final,path,pid,file,final,boolean,quiet,final,environment,initial,env,throws,bootstrap,exception,node,validation,exception,user,exception,bootstrap,info,init,instance,new,bootstrap,final,secure,settings,keystore,load,secure,settings,initial,env,final,environment,environment,create,environment,pid,file,keystore,initial,env,settings,initial,env,config,file,log,configurator,set,node,name,node,get,environment,settings,try,log,configurator,configure,environment,catch,ioexception,e,throw,new,bootstrap,exception,e,if,environment,pid,file,null,try,pid,file,create,environment,pid,file,true,catch,ioexception,e,throw,new,bootstrap,exception,e,final,boolean,close,standard,streams,foreground,false,quiet,try,if,close,standard,streams,final,logger,root,logger,eslogger,factory,get,root,logger,final,appender,maybe,console,appender,loggers,find,appender,root,logger,console,appender,class,if,maybe,console,appender,null,loggers,remove,appender,root,logger,maybe,console,appender,close,syst,out,check,lucene,thread,set,default,uncaught,exception,handler,new,elasticsearch,uncaught,exception,handler,instance,setup,true,environment,try,ioutils,close,keystore,catch,ioexception,e,throw,new,bootstrap,exception,e,instance,start,if,close,standard,streams,close,sys,error,catch,node,validation,exception,runtime,exception,e,final,logger,root,logger,eslogger,factory,get,root,logger,final,appender,maybe,console,appender,loggers,find,appender,root,logger,console,appender,class,if,foreground,maybe,console,appender,null,loggers,remove,appender,root,logger,maybe,console,appender,logger,logger,log,manager,get,logger,bootstrap,class,if,e,instanceof,creation,exception,byte,array,output,stream,os,new,byte,array,output,stream,print,stream,ps,null,try,ps,new,print,stream,os,false,utf,8,catch,unsupported,encoding,exception,uee,assert,false,e,add,suppressed,uee,new,startup,exception,e,print,stack,trace,ps,ps,flush,try,logger,error,guice,exception,os,to,string,utf,8,catch,unsupported,encoding,exception,uee,assert,false,e,add,suppressed,uee,else,if,e,instanceof,node,validation,exception,logger,error,node,validation,exception,n,e,get,message,else,logger,error,exception,e,if,foreground,maybe,console,appender,null,loggers,add,appender,root,logger,maybe,console,appender,throw,e
Bootstrap -> static void init(             final boolean foreground,             final Path pidFile,             final boolean quiet,             final Environment initialEnv) throws BootstrapException, NodeValidationException, UserException;1538067637;This method is invoked by {@link Elasticsearch#main(String[])} to startup elasticsearch.;static void init(_            final boolean foreground,_            final Path pidFile,_            final boolean quiet,_            final Environment initialEnv) throws BootstrapException, NodeValidationException, UserException {_        _        _        BootstrapInfo.init()___        INSTANCE = new Bootstrap()___        final SecureSettings keystore = loadSecureSettings(initialEnv)__        final Environment environment = createEnvironment(pidFile, keystore, initialEnv.settings(), initialEnv.configFile())___        LogConfigurator.setNodeName(Node.NODE_NAME_SETTING.get(environment.settings()))__        try {_            LogConfigurator.configure(environment)__        } catch (IOException e) {_            throw new BootstrapException(e)__        }_        if (environment.pidFile() != null) {_            try {_                PidFile.create(environment.pidFile(), true)__            } catch (IOException e) {_                throw new BootstrapException(e)__            }_        }__        final boolean closeStandardStreams = (foreground == false) || quiet__        try {_            if (closeStandardStreams) {_                final Logger rootLogger = LogManager.getRootLogger()__                final Appender maybeConsoleAppender = Loggers.findAppender(rootLogger, ConsoleAppender.class)__                if (maybeConsoleAppender != null) {_                    Loggers.removeAppender(rootLogger, maybeConsoleAppender)__                }_                closeSystOut()__            }__            _            checkLucene()___            _            _            _            Thread.setDefaultUncaughtExceptionHandler(new ElasticsearchUncaughtExceptionHandler())___            INSTANCE.setup(true, environment)___            try {_                _                IOUtils.close(keystore)__            } catch (IOException e) {_                throw new BootstrapException(e)__            }__            INSTANCE.start()___            if (closeStandardStreams) {_                closeSysError()__            }_        } catch (NodeValidationException | RuntimeException e) {_            _            final Logger rootLogger = LogManager.getRootLogger()__            final Appender maybeConsoleAppender = Loggers.findAppender(rootLogger, ConsoleAppender.class)__            if (foreground && maybeConsoleAppender != null) {_                Loggers.removeAppender(rootLogger, maybeConsoleAppender)__            }_            Logger logger = LogManager.getLogger(Bootstrap.class)__            _            if (e instanceof CreationException) {_                _                ByteArrayOutputStream os = new ByteArrayOutputStream()__                PrintStream ps = null__                try {_                    ps = new PrintStream(os, false, "UTF-8")__                } catch (UnsupportedEncodingException uee) {_                    assert false__                    e.addSuppressed(uee)__                }_                new StartupException(e).printStackTrace(ps)__                ps.flush()__                try {_                    logger.error("Guice Exception: {}", os.toString("UTF-8"))__                } catch (UnsupportedEncodingException uee) {_                    assert false__                    e.addSuppressed(uee)__                }_            } else if (e instanceof NodeValidationException) {_                logger.error("node validation exception\n{}", e.getMessage())__            } else {_                _                logger.error("Exception", e)__            }_            _            if (foreground && maybeConsoleAppender != null) {_                Loggers.addAppender(rootLogger, maybeConsoleAppender)__            }__            throw e__        }_    };this,method,is,invoked,by,link,elasticsearch,main,string,to,startup,elasticsearch;static,void,init,final,boolean,foreground,final,path,pid,file,final,boolean,quiet,final,environment,initial,env,throws,bootstrap,exception,node,validation,exception,user,exception,bootstrap,info,init,instance,new,bootstrap,final,secure,settings,keystore,load,secure,settings,initial,env,final,environment,environment,create,environment,pid,file,keystore,initial,env,settings,initial,env,config,file,log,configurator,set,node,name,node,get,environment,settings,try,log,configurator,configure,environment,catch,ioexception,e,throw,new,bootstrap,exception,e,if,environment,pid,file,null,try,pid,file,create,environment,pid,file,true,catch,ioexception,e,throw,new,bootstrap,exception,e,final,boolean,close,standard,streams,foreground,false,quiet,try,if,close,standard,streams,final,logger,root,logger,log,manager,get,root,logger,final,appender,maybe,console,appender,loggers,find,appender,root,logger,console,appender,class,if,maybe,console,appender,null,loggers,remove,appender,root,logger,maybe,console,appender,close,syst,out,check,lucene,thread,set,default,uncaught,exception,handler,new,elasticsearch,uncaught,exception,handler,instance,setup,true,environment,try,ioutils,close,keystore,catch,ioexception,e,throw,new,bootstrap,exception,e,instance,start,if,close,standard,streams,close,sys,error,catch,node,validation,exception,runtime,exception,e,final,logger,root,logger,log,manager,get,root,logger,final,appender,maybe,console,appender,loggers,find,appender,root,logger,console,appender,class,if,foreground,maybe,console,appender,null,loggers,remove,appender,root,logger,maybe,console,appender,logger,logger,log,manager,get,logger,bootstrap,class,if,e,instanceof,creation,exception,byte,array,output,stream,os,new,byte,array,output,stream,print,stream,ps,null,try,ps,new,print,stream,os,false,utf,8,catch,unsupported,encoding,exception,uee,assert,false,e,add,suppressed,uee,new,startup,exception,e,print,stack,trace,ps,ps,flush,try,logger,error,guice,exception,os,to,string,utf,8,catch,unsupported,encoding,exception,uee,assert,false,e,add,suppressed,uee,else,if,e,instanceof,node,validation,exception,logger,error,node,validation,exception,n,e,get,message,else,logger,error,exception,e,if,foreground,maybe,console,appender,null,loggers,add,appender,root,logger,maybe,console,appender,throw,e
Bootstrap -> static void init(             final boolean foreground,             final Path pidFile,             final boolean quiet,             final Environment initialEnv) throws BootstrapException, NodeValidationException, UserException;1539615817;This method is invoked by {@link Elasticsearch#main(String[])} to startup elasticsearch.;static void init(_            final boolean foreground,_            final Path pidFile,_            final boolean quiet,_            final Environment initialEnv) throws BootstrapException, NodeValidationException, UserException {_        _        _        BootstrapInfo.init()___        INSTANCE = new Bootstrap()___        final SecureSettings keystore = loadSecureSettings(initialEnv)__        final Environment environment = createEnvironment(pidFile, keystore, initialEnv.settings(), initialEnv.configFile())___        LogConfigurator.setNodeName(Node.NODE_NAME_SETTING.get(environment.settings()))__        try {_            LogConfigurator.configure(environment)__        } catch (IOException e) {_            throw new BootstrapException(e)__        }_        if (environment.pidFile() != null) {_            try {_                PidFile.create(environment.pidFile(), true)__            } catch (IOException e) {_                throw new BootstrapException(e)__            }_        }__        final boolean closeStandardStreams = (foreground == false) || quiet__        try {_            if (closeStandardStreams) {_                final Logger rootLogger = LogManager.getRootLogger()__                final Appender maybeConsoleAppender = Loggers.findAppender(rootLogger, ConsoleAppender.class)__                if (maybeConsoleAppender != null) {_                    Loggers.removeAppender(rootLogger, maybeConsoleAppender)__                }_                closeSystOut()__            }__            _            checkLucene()___            _            _            _            Thread.setDefaultUncaughtExceptionHandler(new ElasticsearchUncaughtExceptionHandler())___            INSTANCE.setup(true, environment)___            try {_                _                IOUtils.close(keystore)__            } catch (IOException e) {_                throw new BootstrapException(e)__            }__            INSTANCE.start()___            if (closeStandardStreams) {_                closeSysError()__            }_        } catch (NodeValidationException | RuntimeException e) {_            _            final Logger rootLogger = LogManager.getRootLogger()__            final Appender maybeConsoleAppender = Loggers.findAppender(rootLogger, ConsoleAppender.class)__            if (foreground && maybeConsoleAppender != null) {_                Loggers.removeAppender(rootLogger, maybeConsoleAppender)__            }_            Logger logger = LogManager.getLogger(Bootstrap.class)__            _            if (e instanceof CreationException) {_                _                ByteArrayOutputStream os = new ByteArrayOutputStream()__                PrintStream ps = null__                try {_                    ps = new PrintStream(os, false, "UTF-8")__                } catch (UnsupportedEncodingException uee) {_                    assert false__                    e.addSuppressed(uee)__                }_                new StartupException(e).printStackTrace(ps)__                ps.flush()__                try {_                    logger.error("Guice Exception: {}", os.toString("UTF-8"))__                } catch (UnsupportedEncodingException uee) {_                    assert false__                    e.addSuppressed(uee)__                }_            } else if (e instanceof NodeValidationException) {_                logger.error("node validation exception\n{}", e.getMessage())__            } else {_                _                logger.error("Exception", e)__            }_            _            if (foreground && maybeConsoleAppender != null) {_                Loggers.addAppender(rootLogger, maybeConsoleAppender)__            }__            throw e__        }_    };this,method,is,invoked,by,link,elasticsearch,main,string,to,startup,elasticsearch;static,void,init,final,boolean,foreground,final,path,pid,file,final,boolean,quiet,final,environment,initial,env,throws,bootstrap,exception,node,validation,exception,user,exception,bootstrap,info,init,instance,new,bootstrap,final,secure,settings,keystore,load,secure,settings,initial,env,final,environment,environment,create,environment,pid,file,keystore,initial,env,settings,initial,env,config,file,log,configurator,set,node,name,node,get,environment,settings,try,log,configurator,configure,environment,catch,ioexception,e,throw,new,bootstrap,exception,e,if,environment,pid,file,null,try,pid,file,create,environment,pid,file,true,catch,ioexception,e,throw,new,bootstrap,exception,e,final,boolean,close,standard,streams,foreground,false,quiet,try,if,close,standard,streams,final,logger,root,logger,log,manager,get,root,logger,final,appender,maybe,console,appender,loggers,find,appender,root,logger,console,appender,class,if,maybe,console,appender,null,loggers,remove,appender,root,logger,maybe,console,appender,close,syst,out,check,lucene,thread,set,default,uncaught,exception,handler,new,elasticsearch,uncaught,exception,handler,instance,setup,true,environment,try,ioutils,close,keystore,catch,ioexception,e,throw,new,bootstrap,exception,e,instance,start,if,close,standard,streams,close,sys,error,catch,node,validation,exception,runtime,exception,e,final,logger,root,logger,log,manager,get,root,logger,final,appender,maybe,console,appender,loggers,find,appender,root,logger,console,appender,class,if,foreground,maybe,console,appender,null,loggers,remove,appender,root,logger,maybe,console,appender,logger,logger,log,manager,get,logger,bootstrap,class,if,e,instanceof,creation,exception,byte,array,output,stream,os,new,byte,array,output,stream,print,stream,ps,null,try,ps,new,print,stream,os,false,utf,8,catch,unsupported,encoding,exception,uee,assert,false,e,add,suppressed,uee,new,startup,exception,e,print,stack,trace,ps,ps,flush,try,logger,error,guice,exception,os,to,string,utf,8,catch,unsupported,encoding,exception,uee,assert,false,e,add,suppressed,uee,else,if,e,instanceof,node,validation,exception,logger,error,node,validation,exception,n,e,get,message,else,logger,error,exception,e,if,foreground,maybe,console,appender,null,loggers,add,appender,root,logger,maybe,console,appender,throw,e
Bootstrap -> static void init(             final boolean foreground,             final Path pidFile,             final boolean quiet,             final Environment initialEnv) throws BootstrapException, NodeValidationException, UserException;1540486836;This method is invoked by {@link Elasticsearch#main(String[])} to startup elasticsearch.;static void init(_            final boolean foreground,_            final Path pidFile,_            final boolean quiet,_            final Environment initialEnv) throws BootstrapException, NodeValidationException, UserException {_        _        _        BootstrapInfo.init()___        INSTANCE = new Bootstrap()___        final SecureSettings keystore = loadSecureSettings(initialEnv)__        final Environment environment = createEnvironment(pidFile, keystore, initialEnv.settings(), initialEnv.configFile())___        LogConfigurator.setNodeName(Node.NODE_NAME_SETTING.get(environment.settings()))__        try {_            LogConfigurator.configure(environment)__        } catch (IOException e) {_            throw new BootstrapException(e)__        }_        if (environment.pidFile() != null) {_            try {_                PidFile.create(environment.pidFile(), true)__            } catch (IOException e) {_                throw new BootstrapException(e)__            }_        }__        final boolean closeStandardStreams = (foreground == false) || quiet__        try {_            if (closeStandardStreams) {_                final Logger rootLogger = LogManager.getRootLogger()__                final Appender maybeConsoleAppender = Loggers.findAppender(rootLogger, ConsoleAppender.class)__                if (maybeConsoleAppender != null) {_                    Loggers.removeAppender(rootLogger, maybeConsoleAppender)__                }_                closeSystOut()__            }__            _            checkLucene()___            _            _            _            Thread.setDefaultUncaughtExceptionHandler(new ElasticsearchUncaughtExceptionHandler())___            INSTANCE.setup(true, environment)___            try {_                _                IOUtils.close(keystore)__            } catch (IOException e) {_                throw new BootstrapException(e)__            }__            INSTANCE.start()___            if (closeStandardStreams) {_                closeSysError()__            }_        } catch (NodeValidationException | RuntimeException e) {_            _            final Logger rootLogger = LogManager.getRootLogger()__            final Appender maybeConsoleAppender = Loggers.findAppender(rootLogger, ConsoleAppender.class)__            if (foreground && maybeConsoleAppender != null) {_                Loggers.removeAppender(rootLogger, maybeConsoleAppender)__            }_            Logger logger = LogManager.getLogger(Bootstrap.class)__            _            if (e instanceof CreationException) {_                _                ByteArrayOutputStream os = new ByteArrayOutputStream()__                PrintStream ps = null__                try {_                    ps = new PrintStream(os, false, "UTF-8")__                } catch (UnsupportedEncodingException uee) {_                    assert false__                    e.addSuppressed(uee)__                }_                new StartupException(e).printStackTrace(ps)__                ps.flush()__                try {_                    logger.error("Guice Exception: {}", os.toString("UTF-8"))__                } catch (UnsupportedEncodingException uee) {_                    assert false__                    e.addSuppressed(uee)__                }_            } else if (e instanceof NodeValidationException) {_                logger.error("node validation exception\n{}", e.getMessage())__            } else {_                _                logger.error("Exception", e)__            }_            _            if (foreground && maybeConsoleAppender != null) {_                Loggers.addAppender(rootLogger, maybeConsoleAppender)__            }__            throw e__        }_    };this,method,is,invoked,by,link,elasticsearch,main,string,to,startup,elasticsearch;static,void,init,final,boolean,foreground,final,path,pid,file,final,boolean,quiet,final,environment,initial,env,throws,bootstrap,exception,node,validation,exception,user,exception,bootstrap,info,init,instance,new,bootstrap,final,secure,settings,keystore,load,secure,settings,initial,env,final,environment,environment,create,environment,pid,file,keystore,initial,env,settings,initial,env,config,file,log,configurator,set,node,name,node,get,environment,settings,try,log,configurator,configure,environment,catch,ioexception,e,throw,new,bootstrap,exception,e,if,environment,pid,file,null,try,pid,file,create,environment,pid,file,true,catch,ioexception,e,throw,new,bootstrap,exception,e,final,boolean,close,standard,streams,foreground,false,quiet,try,if,close,standard,streams,final,logger,root,logger,log,manager,get,root,logger,final,appender,maybe,console,appender,loggers,find,appender,root,logger,console,appender,class,if,maybe,console,appender,null,loggers,remove,appender,root,logger,maybe,console,appender,close,syst,out,check,lucene,thread,set,default,uncaught,exception,handler,new,elasticsearch,uncaught,exception,handler,instance,setup,true,environment,try,ioutils,close,keystore,catch,ioexception,e,throw,new,bootstrap,exception,e,instance,start,if,close,standard,streams,close,sys,error,catch,node,validation,exception,runtime,exception,e,final,logger,root,logger,log,manager,get,root,logger,final,appender,maybe,console,appender,loggers,find,appender,root,logger,console,appender,class,if,foreground,maybe,console,appender,null,loggers,remove,appender,root,logger,maybe,console,appender,logger,logger,log,manager,get,logger,bootstrap,class,if,e,instanceof,creation,exception,byte,array,output,stream,os,new,byte,array,output,stream,print,stream,ps,null,try,ps,new,print,stream,os,false,utf,8,catch,unsupported,encoding,exception,uee,assert,false,e,add,suppressed,uee,new,startup,exception,e,print,stack,trace,ps,ps,flush,try,logger,error,guice,exception,os,to,string,utf,8,catch,unsupported,encoding,exception,uee,assert,false,e,add,suppressed,uee,else,if,e,instanceof,node,validation,exception,logger,error,node,validation,exception,n,e,get,message,else,logger,error,exception,e,if,foreground,maybe,console,appender,null,loggers,add,appender,root,logger,maybe,console,appender,throw,e
Bootstrap -> Bootstrap();1524684173;creates a new instance;Bootstrap() {_        keepAliveThread = new Thread(new Runnable() {_            @Override_            public void run() {_                try {_                    keepAliveLatch.await()__                } catch (InterruptedException e) {_                    _                }_            }_        }, "elasticsearch[keepAlive/" + Version.CURRENT + "]")__        keepAliveThread.setDaemon(false)__        _        Runtime.getRuntime().addShutdownHook(new Thread() {_            @Override_            public void run() {_                keepAliveLatch.countDown()__            }_        })__    };creates,a,new,instance;bootstrap,keep,alive,thread,new,thread,new,runnable,override,public,void,run,try,keep,alive,latch,await,catch,interrupted,exception,e,elasticsearch,keep,alive,version,current,keep,alive,thread,set,daemon,false,runtime,get,runtime,add,shutdown,hook,new,thread,override,public,void,run,keep,alive,latch,count,down
Bootstrap -> Bootstrap();1533063033;creates a new instance;Bootstrap() {_        keepAliveThread = new Thread(new Runnable() {_            @Override_            public void run() {_                try {_                    keepAliveLatch.await()__                } catch (InterruptedException e) {_                    _                }_            }_        }, "elasticsearch[keepAlive/" + Version.CURRENT + "]")__        keepAliveThread.setDaemon(false)__        _        Runtime.getRuntime().addShutdownHook(new Thread() {_            @Override_            public void run() {_                keepAliveLatch.countDown()__            }_        })__    };creates,a,new,instance;bootstrap,keep,alive,thread,new,thread,new,runnable,override,public,void,run,try,keep,alive,latch,await,catch,interrupted,exception,e,elasticsearch,keep,alive,version,current,keep,alive,thread,set,daemon,false,runtime,get,runtime,add,shutdown,hook,new,thread,override,public,void,run,keep,alive,latch,count,down
Bootstrap -> Bootstrap();1533862840;creates a new instance;Bootstrap() {_        keepAliveThread = new Thread(new Runnable() {_            @Override_            public void run() {_                try {_                    keepAliveLatch.await()__                } catch (InterruptedException e) {_                    _                }_            }_        }, "elasticsearch[keepAlive/" + Version.CURRENT + "]")__        keepAliveThread.setDaemon(false)__        _        Runtime.getRuntime().addShutdownHook(new Thread() {_            @Override_            public void run() {_                keepAliveLatch.countDown()__            }_        })__    };creates,a,new,instance;bootstrap,keep,alive,thread,new,thread,new,runnable,override,public,void,run,try,keep,alive,latch,await,catch,interrupted,exception,e,elasticsearch,keep,alive,version,current,keep,alive,thread,set,daemon,false,runtime,get,runtime,add,shutdown,hook,new,thread,override,public,void,run,keep,alive,latch,count,down
Bootstrap -> Bootstrap();1536611444;creates a new instance;Bootstrap() {_        keepAliveThread = new Thread(new Runnable() {_            @Override_            public void run() {_                try {_                    keepAliveLatch.await()__                } catch (InterruptedException e) {_                    _                }_            }_        }, "elasticsearch[keepAlive/" + Version.CURRENT + "]")__        keepAliveThread.setDaemon(false)__        _        Runtime.getRuntime().addShutdownHook(new Thread() {_            @Override_            public void run() {_                keepAliveLatch.countDown()__            }_        })__    };creates,a,new,instance;bootstrap,keep,alive,thread,new,thread,new,runnable,override,public,void,run,try,keep,alive,latch,await,catch,interrupted,exception,e,elasticsearch,keep,alive,version,current,keep,alive,thread,set,daemon,false,runtime,get,runtime,add,shutdown,hook,new,thread,override,public,void,run,keep,alive,latch,count,down
Bootstrap -> Bootstrap();1537806831;creates a new instance;Bootstrap() {_        keepAliveThread = new Thread(new Runnable() {_            @Override_            public void run() {_                try {_                    keepAliveLatch.await()__                } catch (InterruptedException e) {_                    _                }_            }_        }, "elasticsearch[keepAlive/" + Version.CURRENT + "]")__        keepAliveThread.setDaemon(false)__        _        Runtime.getRuntime().addShutdownHook(new Thread() {_            @Override_            public void run() {_                keepAliveLatch.countDown()__            }_        })__    };creates,a,new,instance;bootstrap,keep,alive,thread,new,thread,new,runnable,override,public,void,run,try,keep,alive,latch,await,catch,interrupted,exception,e,elasticsearch,keep,alive,version,current,keep,alive,thread,set,daemon,false,runtime,get,runtime,add,shutdown,hook,new,thread,override,public,void,run,keep,alive,latch,count,down
Bootstrap -> Bootstrap();1538067637;creates a new instance;Bootstrap() {_        keepAliveThread = new Thread(new Runnable() {_            @Override_            public void run() {_                try {_                    keepAliveLatch.await()__                } catch (InterruptedException e) {_                    _                }_            }_        }, "elasticsearch[keepAlive/" + Version.CURRENT + "]")__        keepAliveThread.setDaemon(false)__        _        Runtime.getRuntime().addShutdownHook(new Thread() {_            @Override_            public void run() {_                keepAliveLatch.countDown()__            }_        })__    };creates,a,new,instance;bootstrap,keep,alive,thread,new,thread,new,runnable,override,public,void,run,try,keep,alive,latch,await,catch,interrupted,exception,e,elasticsearch,keep,alive,version,current,keep,alive,thread,set,daemon,false,runtime,get,runtime,add,shutdown,hook,new,thread,override,public,void,run,keep,alive,latch,count,down
Bootstrap -> Bootstrap();1539615817;creates a new instance;Bootstrap() {_        keepAliveThread = new Thread(new Runnable() {_            @Override_            public void run() {_                try {_                    keepAliveLatch.await()__                } catch (InterruptedException e) {_                    _                }_            }_        }, "elasticsearch[keepAlive/" + Version.CURRENT + "]")__        keepAliveThread.setDaemon(false)__        _        Runtime.getRuntime().addShutdownHook(new Thread() {_            @Override_            public void run() {_                keepAliveLatch.countDown()__            }_        })__    };creates,a,new,instance;bootstrap,keep,alive,thread,new,thread,new,runnable,override,public,void,run,try,keep,alive,latch,await,catch,interrupted,exception,e,elasticsearch,keep,alive,version,current,keep,alive,thread,set,daemon,false,runtime,get,runtime,add,shutdown,hook,new,thread,override,public,void,run,keep,alive,latch,count,down
Bootstrap -> Bootstrap();1540486836;creates a new instance;Bootstrap() {_        keepAliveThread = new Thread(new Runnable() {_            @Override_            public void run() {_                try {_                    keepAliveLatch.await()__                } catch (InterruptedException e) {_                    _                }_            }_        }, "elasticsearch[keepAlive/" + Version.CURRENT + "]")__        keepAliveThread.setDaemon(false)__        _        Runtime.getRuntime().addShutdownHook(new Thread() {_            @Override_            public void run() {_                keepAliveLatch.countDown()__            }_        })__    };creates,a,new,instance;bootstrap,keep,alive,thread,new,thread,new,runnable,override,public,void,run,try,keep,alive,latch,await,catch,interrupted,exception,e,elasticsearch,keep,alive,version,current,keep,alive,thread,set,daemon,false,runtime,get,runtime,add,shutdown,hook,new,thread,override,public,void,run,keep,alive,latch,count,down
