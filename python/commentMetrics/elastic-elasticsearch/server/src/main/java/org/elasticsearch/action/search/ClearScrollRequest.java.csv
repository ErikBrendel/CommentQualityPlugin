commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public List<String> getScrollIds() {     return scrollIds. }
false;public;1;3;;public void setScrollIds(List<String> scrollIds) {     this.scrollIds = scrollIds. }
false;public;1;6;;public void addScrollId(String scrollId) {     if (scrollIds == null) {         scrollIds = new ArrayList<>().     }     scrollIds.add(scrollId). }
false;public;0;3;;public List<String> scrollIds() {     return scrollIds. }
false;public;1;3;;public void scrollIds(List<String> scrollIds) {     this.scrollIds = scrollIds. }
false;public;0;8;;@Override public ActionRequestValidationException validate() {     ActionRequestValidationException validationException = null.     if (scrollIds == null || scrollIds.isEmpty()) {         validationException = addValidationError("no scroll ids specified", validationException).     }     return validationException. }
false;public;1;5;;@Override public void readFrom(StreamInput in) throws IOException {     super.readFrom(in).     scrollIds = Arrays.asList(in.readStringArray()). }
false;public;1;9;;@Override public void writeTo(StreamOutput out) throws IOException {     super.writeTo(out).     if (scrollIds == null) {         out.writeVInt(0).     } else {         out.writeStringArray(scrollIds.toArray(new String[scrollIds.size()])).     } }
false;public;2;11;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.startObject().     builder.startArray("scroll_id").     for (String scrollId : scrollIds) {         builder.value(scrollId).     }     builder.endArray().     builder.endObject().     return builder. }
false;public;1;31;;public void fromXContent(XContentParser parser) throws IOException {     scrollIds = null.     if (parser.nextToken() != XContentParser.Token.START_OBJECT) {         throw new IllegalArgumentException("Malformed content, must start with an object").     } else {         XContentParser.Token token.         String currentFieldName = null.         while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {             if (token == XContentParser.Token.FIELD_NAME) {                 currentFieldName = parser.currentName().             } else if ("scroll_id".equals(currentFieldName)) {                 if (token == XContentParser.Token.START_ARRAY) {                     while ((token = parser.nextToken()) != XContentParser.Token.END_ARRAY) {                         if (token.isValue() == false) {                             throw new IllegalArgumentException("scroll_id array element should only contain scroll_id").                         }                         addScrollId(parser.text()).                     }                 } else {                     if (token.isValue() == false) {                         throw new IllegalArgumentException("scroll_id element should only contain scroll_id").                     }                     addScrollId(parser.text()).                 }             } else {                 throw new IllegalArgumentException("Unknown parameter [" + currentFieldName + "] in request body or parameter is of the wrong type[" + token + "] ").             }         }     } }
