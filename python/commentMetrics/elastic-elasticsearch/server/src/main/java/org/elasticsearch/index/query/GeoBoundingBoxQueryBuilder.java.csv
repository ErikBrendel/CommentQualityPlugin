# id;timestamp;commentText;codeText;commentWords;codeWords
GeoBoundingBoxQueryBuilder -> public GeoBoundingBoxQueryBuilder(String fieldName);1524684173;Create new bounding box query._@param fieldName name of index field containing geo coordinates to operate on.;public GeoBoundingBoxQueryBuilder(String fieldName) {_        if (fieldName == null) {_            throw new IllegalArgumentException("Field name must not be empty.")__        }_        this.fieldName = fieldName__    };create,new,bounding,box,query,param,field,name,name,of,index,field,containing,geo,coordinates,to,operate,on;public,geo,bounding,box,query,builder,string,field,name,if,field,name,null,throw,new,illegal,argument,exception,field,name,must,not,be,empty,this,field,name,field,name
GeoBoundingBoxQueryBuilder -> public GeoBoundingBoxQueryBuilder(String fieldName);1527207653;Create new bounding box query._@param fieldName name of index field containing geo coordinates to operate on.;public GeoBoundingBoxQueryBuilder(String fieldName) {_        if (fieldName == null) {_            throw new IllegalArgumentException("Field name must not be empty.")__        }_        this.fieldName = fieldName__    };create,new,bounding,box,query,param,field,name,name,of,index,field,containing,geo,coordinates,to,operate,on;public,geo,bounding,box,query,builder,string,field,name,if,field,name,null,throw,new,illegal,argument,exception,field,name,must,not,be,empty,this,field,name,field,name
GeoBoundingBoxQueryBuilder -> public GeoBoundingBoxQueryBuilder(String fieldName);1531179852;Create new bounding box query._@param fieldName name of index field containing geo coordinates to operate on.;public GeoBoundingBoxQueryBuilder(String fieldName) {_        if (fieldName == null) {_            throw new IllegalArgumentException("Field name must not be empty.")__        }_        this.fieldName = fieldName__    };create,new,bounding,box,query,param,field,name,name,of,index,field,containing,geo,coordinates,to,operate,on;public,geo,bounding,box,query,builder,string,field,name,if,field,name,null,throw,new,illegal,argument,exception,field,name,must,not,be,empty,this,field,name,field,name
GeoBoundingBoxQueryBuilder -> public GeoBoundingBoxQueryBuilder(String fieldName);1542820501;Create new bounding box query._@param fieldName name of index field containing geo coordinates to operate on.;public GeoBoundingBoxQueryBuilder(String fieldName) {_        if (fieldName == null) {_            throw new IllegalArgumentException("Field name must not be empty.")__        }_        this.fieldName = fieldName__    };create,new,bounding,box,query,param,field,name,name,of,index,field,containing,geo,coordinates,to,operate,on;public,geo,bounding,box,query,builder,string,field,name,if,field,name,null,throw,new,illegal,argument,exception,field,name,must,not,be,empty,this,field,name,field,name
GeoBoundingBoxQueryBuilder -> public GeoBoundingBoxQueryBuilder ignoreUnmapped(boolean ignoreUnmapped);1524684173;Sets whether the query builder should ignore unmapped fields (and run a_{@link MatchNoDocsQuery} in place of this query) or throw an exception if_the field is unmapped.;public GeoBoundingBoxQueryBuilder ignoreUnmapped(boolean ignoreUnmapped) {_        this.ignoreUnmapped = ignoreUnmapped__        return this__    };sets,whether,the,query,builder,should,ignore,unmapped,fields,and,run,a,link,match,no,docs,query,in,place,of,this,query,or,throw,an,exception,if,the,field,is,unmapped;public,geo,bounding,box,query,builder,ignore,unmapped,boolean,ignore,unmapped,this,ignore,unmapped,ignore,unmapped,return,this
GeoBoundingBoxQueryBuilder -> public GeoBoundingBoxQueryBuilder ignoreUnmapped(boolean ignoreUnmapped);1527207653;Sets whether the query builder should ignore unmapped fields (and run a_{@link MatchNoDocsQuery} in place of this query) or throw an exception if_the field is unmapped.;public GeoBoundingBoxQueryBuilder ignoreUnmapped(boolean ignoreUnmapped) {_        this.ignoreUnmapped = ignoreUnmapped__        return this__    };sets,whether,the,query,builder,should,ignore,unmapped,fields,and,run,a,link,match,no,docs,query,in,place,of,this,query,or,throw,an,exception,if,the,field,is,unmapped;public,geo,bounding,box,query,builder,ignore,unmapped,boolean,ignore,unmapped,this,ignore,unmapped,ignore,unmapped,return,this
GeoBoundingBoxQueryBuilder -> public GeoBoundingBoxQueryBuilder ignoreUnmapped(boolean ignoreUnmapped);1531179852;Sets whether the query builder should ignore unmapped fields (and run a_{@link MatchNoDocsQuery} in place of this query) or throw an exception if_the field is unmapped.;public GeoBoundingBoxQueryBuilder ignoreUnmapped(boolean ignoreUnmapped) {_        this.ignoreUnmapped = ignoreUnmapped__        return this__    };sets,whether,the,query,builder,should,ignore,unmapped,fields,and,run,a,link,match,no,docs,query,in,place,of,this,query,or,throw,an,exception,if,the,field,is,unmapped;public,geo,bounding,box,query,builder,ignore,unmapped,boolean,ignore,unmapped,this,ignore,unmapped,ignore,unmapped,return,this
GeoBoundingBoxQueryBuilder -> public GeoBoundingBoxQueryBuilder ignoreUnmapped(boolean ignoreUnmapped);1542820501;Sets whether the query builder should ignore unmapped fields (and run a_{@link MatchNoDocsQuery} in place of this query) or throw an exception if_the field is unmapped.;public GeoBoundingBoxQueryBuilder ignoreUnmapped(boolean ignoreUnmapped) {_        this.ignoreUnmapped = ignoreUnmapped__        return this__    };sets,whether,the,query,builder,should,ignore,unmapped,fields,and,run,a,link,match,no,docs,query,in,place,of,this,query,or,throw,an,exception,if,the,field,is,unmapped;public,geo,bounding,box,query,builder,ignore,unmapped,boolean,ignore,unmapped,this,ignore,unmapped,ignore,unmapped,return,this
GeoBoundingBoxQueryBuilder -> public GeoBoundingBoxQueryBuilder setValidationMethod(GeoValidationMethod method);1524684173;Specify whether or not to ignore validation errors of bounding boxes._Can only be set if coerce set to false, otherwise calling this_method has no effect.;public GeoBoundingBoxQueryBuilder setValidationMethod(GeoValidationMethod method) {_        this.validationMethod = method__        return this__    };specify,whether,or,not,to,ignore,validation,errors,of,bounding,boxes,can,only,be,set,if,coerce,set,to,false,otherwise,calling,this,method,has,no,effect;public,geo,bounding,box,query,builder,set,validation,method,geo,validation,method,method,this,validation,method,method,return,this
GeoBoundingBoxQueryBuilder -> public GeoBoundingBoxQueryBuilder setValidationMethod(GeoValidationMethod method);1527207653;Specify whether or not to ignore validation errors of bounding boxes._Can only be set if coerce set to false, otherwise calling this_method has no effect.;public GeoBoundingBoxQueryBuilder setValidationMethod(GeoValidationMethod method) {_        this.validationMethod = method__        return this__    };specify,whether,or,not,to,ignore,validation,errors,of,bounding,boxes,can,only,be,set,if,coerce,set,to,false,otherwise,calling,this,method,has,no,effect;public,geo,bounding,box,query,builder,set,validation,method,geo,validation,method,method,this,validation,method,method,return,this
GeoBoundingBoxQueryBuilder -> public GeoBoundingBoxQueryBuilder setValidationMethod(GeoValidationMethod method);1531179852;Specify whether or not to ignore validation errors of bounding boxes._Can only be set if coerce set to false, otherwise calling this_method has no effect.;public GeoBoundingBoxQueryBuilder setValidationMethod(GeoValidationMethod method) {_        this.validationMethod = method__        return this__    };specify,whether,or,not,to,ignore,validation,errors,of,bounding,boxes,can,only,be,set,if,coerce,set,to,false,otherwise,calling,this,method,has,no,effect;public,geo,bounding,box,query,builder,set,validation,method,geo,validation,method,method,this,validation,method,method,return,this
GeoBoundingBoxQueryBuilder -> public GeoBoundingBoxQueryBuilder setValidationMethod(GeoValidationMethod method);1542820501;Specify whether or not to ignore validation errors of bounding boxes._Can only be set if coerce set to false, otherwise calling this_method has no effect.;public GeoBoundingBoxQueryBuilder setValidationMethod(GeoValidationMethod method) {_        this.validationMethod = method__        return this__    };specify,whether,or,not,to,ignore,validation,errors,of,bounding,boxes,can,only,be,set,if,coerce,set,to,false,otherwise,calling,this,method,has,no,effect;public,geo,bounding,box,query,builder,set,validation,method,geo,validation,method,method,this,validation,method,method,return,this
GeoBoundingBoxQueryBuilder -> public String fieldName();1524684173;Returns the name of the field to base the bounding box computation on.;public String fieldName() {_        return this.fieldName__    };returns,the,name,of,the,field,to,base,the,bounding,box,computation,on;public,string,field,name,return,this,field,name
GeoBoundingBoxQueryBuilder -> public String fieldName();1527207653;Returns the name of the field to base the bounding box computation on.;public String fieldName() {_        return this.fieldName__    };returns,the,name,of,the,field,to,base,the,bounding,box,computation,on;public,string,field,name,return,this,field,name
GeoBoundingBoxQueryBuilder -> public String fieldName();1531179852;Returns the name of the field to base the bounding box computation on.;public String fieldName() {_        return this.fieldName__    };returns,the,name,of,the,field,to,base,the,bounding,box,computation,on;public,string,field,name,return,this,field,name
GeoBoundingBoxQueryBuilder -> public String fieldName();1542820501;Returns the name of the field to base the bounding box computation on.;public String fieldName() {_        return this.fieldName__    };returns,the,name,of,the,field,to,base,the,bounding,box,computation,on;public,string,field,name,return,this,field,name
GeoBoundingBoxQueryBuilder -> public GeoBoundingBoxQueryBuilder setCorners(String topLeft, String bottomRight);1524684173;Adds points._@param topLeft topLeft point to add as geohash._@param bottomRight bottomRight point to add as geohash.;public GeoBoundingBoxQueryBuilder setCorners(String topLeft, String bottomRight) {_        return setCorners(GeoPoint.fromGeohash(topLeft), GeoPoint.fromGeohash(bottomRight))__    };adds,points,param,top,left,top,left,point,to,add,as,geohash,param,bottom,right,bottom,right,point,to,add,as,geohash;public,geo,bounding,box,query,builder,set,corners,string,top,left,string,bottom,right,return,set,corners,geo,point,from,geohash,top,left,geo,point,from,geohash,bottom,right
GeoBoundingBoxQueryBuilder -> public GeoBoundingBoxQueryBuilder setCorners(String topLeft, String bottomRight);1527207653;Adds points._@param topLeft topLeft point to add as geohash._@param bottomRight bottomRight point to add as geohash.;public GeoBoundingBoxQueryBuilder setCorners(String topLeft, String bottomRight) {_        return setCorners(GeoPoint.fromGeohash(topLeft), GeoPoint.fromGeohash(bottomRight))__    };adds,points,param,top,left,top,left,point,to,add,as,geohash,param,bottom,right,bottom,right,point,to,add,as,geohash;public,geo,bounding,box,query,builder,set,corners,string,top,left,string,bottom,right,return,set,corners,geo,point,from,geohash,top,left,geo,point,from,geohash,bottom,right
GeoBoundingBoxQueryBuilder -> public GeoBoundingBoxQueryBuilder setCorners(String topLeft, String bottomRight);1531179852;Adds points._@param topLeft topLeft point to add as geohash._@param bottomRight bottomRight point to add as geohash.;public GeoBoundingBoxQueryBuilder setCorners(String topLeft, String bottomRight) {_        return setCorners(GeoPoint.fromGeohash(topLeft), GeoPoint.fromGeohash(bottomRight))__    };adds,points,param,top,left,top,left,point,to,add,as,geohash,param,bottom,right,bottom,right,point,to,add,as,geohash;public,geo,bounding,box,query,builder,set,corners,string,top,left,string,bottom,right,return,set,corners,geo,point,from,geohash,top,left,geo,point,from,geohash,bottom,right
GeoBoundingBoxQueryBuilder -> public GeoBoundingBoxQueryBuilder setCorners(String topLeft, String bottomRight);1542820501;Adds points._@param topLeft topLeft point to add as geohash._@param bottomRight bottomRight point to add as geohash.;public GeoBoundingBoxQueryBuilder setCorners(String topLeft, String bottomRight) {_        return setCorners(GeoPoint.fromGeohash(topLeft), GeoPoint.fromGeohash(bottomRight))__    };adds,points,param,top,left,top,left,point,to,add,as,geohash,param,bottom,right,bottom,right,point,to,add,as,geohash;public,geo,bounding,box,query,builder,set,corners,string,top,left,string,bottom,right,return,set,corners,geo,point,from,geohash,top,left,geo,point,from,geohash,bottom,right
GeoBoundingBoxQueryBuilder -> public GeoBoundingBoxQueryBuilder type(GeoExecType type);1524684173;Sets the type of executing of the geo bounding box. Can be either `memory` or `indexed`. Defaults_to `memory`.;public GeoBoundingBoxQueryBuilder type(GeoExecType type) {_        if (type == null) {_            throw new IllegalArgumentException("Type is not allowed to be null.")__        }_        this.type = type__        return this__    };sets,the,type,of,executing,of,the,geo,bounding,box,can,be,either,memory,or,indexed,defaults,to,memory;public,geo,bounding,box,query,builder,type,geo,exec,type,type,if,type,null,throw,new,illegal,argument,exception,type,is,not,allowed,to,be,null,this,type,type,return,this
GeoBoundingBoxQueryBuilder -> public GeoBoundingBoxQueryBuilder type(GeoExecType type);1527207653;Sets the type of executing of the geo bounding box. Can be either `memory` or `indexed`. Defaults_to `memory`.;public GeoBoundingBoxQueryBuilder type(GeoExecType type) {_        if (type == null) {_            throw new IllegalArgumentException("Type is not allowed to be null.")__        }_        this.type = type__        return this__    };sets,the,type,of,executing,of,the,geo,bounding,box,can,be,either,memory,or,indexed,defaults,to,memory;public,geo,bounding,box,query,builder,type,geo,exec,type,type,if,type,null,throw,new,illegal,argument,exception,type,is,not,allowed,to,be,null,this,type,type,return,this
GeoBoundingBoxQueryBuilder -> public GeoBoundingBoxQueryBuilder type(GeoExecType type);1531179852;Sets the type of executing of the geo bounding box. Can be either `memory` or `indexed`. Defaults_to `memory`.;public GeoBoundingBoxQueryBuilder type(GeoExecType type) {_        if (type == null) {_            throw new IllegalArgumentException("Type is not allowed to be null.")__        }_        this.type = type__        return this__    };sets,the,type,of,executing,of,the,geo,bounding,box,can,be,either,memory,or,indexed,defaults,to,memory;public,geo,bounding,box,query,builder,type,geo,exec,type,type,if,type,null,throw,new,illegal,argument,exception,type,is,not,allowed,to,be,null,this,type,type,return,this
GeoBoundingBoxQueryBuilder -> public GeoBoundingBoxQueryBuilder type(GeoExecType type);1542820501;Sets the type of executing of the geo bounding box. Can be either `memory` or `indexed`. Defaults_to `memory`.;public GeoBoundingBoxQueryBuilder type(GeoExecType type) {_        if (type == null) {_            throw new IllegalArgumentException("Type is not allowed to be null.")__        }_        this.type = type__        return this__    };sets,the,type,of,executing,of,the,geo,bounding,box,can,be,either,memory,or,indexed,defaults,to,memory;public,geo,bounding,box,query,builder,type,geo,exec,type,type,if,type,null,throw,new,illegal,argument,exception,type,is,not,allowed,to,be,null,this,type,type,return,this
GeoBoundingBoxQueryBuilder -> public static double[] parseBoundingBox(XContentParser parser) throws IOException, ElasticsearchParseException;1531179852;Parses the bounding box and returns bottom, top, left, right coordinates;public static double[] parseBoundingBox(XContentParser parser) throws IOException, ElasticsearchParseException {_        XContentParser.Token token = parser.currentToken()__        if (token != XContentParser.Token.START_OBJECT) {_            throw new ElasticsearchParseException("failed to parse bounding box. Expected start object but found [{}]", token)__        }__        double top = Double.NaN__        double bottom = Double.NaN__        double left = Double.NaN__        double right = Double.NaN___        String currentFieldName__        GeoPoint sparse = new GeoPoint()__        EnvelopeBuilder envelope = null___        while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {_            if (token == XContentParser.Token.FIELD_NAME) {_                currentFieldName = parser.currentName()__                token = parser.nextToken()__                if (WKT_FIELD.match(currentFieldName, parser.getDeprecationHandler())) {_                    envelope = (EnvelopeBuilder)(GeoWKTParser.parseExpectedType(parser, GeoShapeType.ENVELOPE))__                } else if (TOP_FIELD.match(currentFieldName, parser.getDeprecationHandler())) {_                    top = parser.doubleValue()__                } else if (BOTTOM_FIELD.match(currentFieldName, parser.getDeprecationHandler())) {_                    bottom = parser.doubleValue()__                } else if (LEFT_FIELD.match(currentFieldName, parser.getDeprecationHandler())) {_                    left = parser.doubleValue()__                } else if (RIGHT_FIELD.match(currentFieldName, parser.getDeprecationHandler())) {_                    right = parser.doubleValue()__                } else {_                    if (TOP_LEFT_FIELD.match(currentFieldName, parser.getDeprecationHandler())) {_                        GeoUtils.parseGeoPoint(parser, sparse, false, GeoUtils.EffectivePoint.TOP_LEFT)__                        top = sparse.getLat()__                        left = sparse.getLon()__                    } else if (BOTTOM_RIGHT_FIELD.match(currentFieldName, parser.getDeprecationHandler())) {_                        GeoUtils.parseGeoPoint(parser, sparse, false, GeoUtils.EffectivePoint.BOTTOM_RIGHT)__                        bottom = sparse.getLat()__                        right = sparse.getLon()__                    } else if (TOP_RIGHT_FIELD.match(currentFieldName, parser.getDeprecationHandler())) {_                        GeoUtils.parseGeoPoint(parser, sparse, false, GeoUtils.EffectivePoint.TOP_RIGHT)__                        top = sparse.getLat()__                        right = sparse.getLon()__                    } else if (BOTTOM_LEFT_FIELD.match(currentFieldName, parser.getDeprecationHandler())) {_                        GeoUtils.parseGeoPoint(parser, sparse, false, GeoUtils.EffectivePoint.BOTTOM_LEFT)__                        bottom = sparse.getLat()__                        left = sparse.getLon()__                    } else {_                        throw new ElasticsearchParseException("failed to parse bounding box. unexpected field [{}]", currentFieldName)__                    }_                }_            } else {_                throw new ElasticsearchParseException("failed to parse bounding box. field name expected but [{}] found", token)__            }_        }_        if (envelope != null) {_            if (Double.isNaN(top) == false || Double.isNaN(bottom) == false || Double.isNaN(left) == false ||_                Double.isNaN(right) == false) {_                throw new ElasticsearchParseException("failed to parse bounding box. Conflicting definition found "_                    + "using well-known text and explicit corners.")__            }_            org.locationtech.spatial4j.shape.Rectangle r = envelope.build()__            return new double[]{r.getMinY(), r.getMaxY(), r.getMinX(), r.getMaxX()}__        }_        return new double[]{bottom, top, left, right}__    };parses,the,bounding,box,and,returns,bottom,top,left,right,coordinates;public,static,double,parse,bounding,box,xcontent,parser,parser,throws,ioexception,elasticsearch,parse,exception,xcontent,parser,token,token,parser,current,token,if,token,xcontent,parser,token,throw,new,elasticsearch,parse,exception,failed,to,parse,bounding,box,expected,start,object,but,found,token,double,top,double,na,n,double,bottom,double,na,n,double,left,double,na,n,double,right,double,na,n,string,current,field,name,geo,point,sparse,new,geo,point,envelope,builder,envelope,null,while,token,parser,next,token,xcontent,parser,token,if,token,xcontent,parser,token,current,field,name,parser,current,name,token,parser,next,token,if,match,current,field,name,parser,get,deprecation,handler,envelope,envelope,builder,geo,wktparser,parse,expected,type,parser,geo,shape,type,envelope,else,if,match,current,field,name,parser,get,deprecation,handler,top,parser,double,value,else,if,match,current,field,name,parser,get,deprecation,handler,bottom,parser,double,value,else,if,match,current,field,name,parser,get,deprecation,handler,left,parser,double,value,else,if,match,current,field,name,parser,get,deprecation,handler,right,parser,double,value,else,if,match,current,field,name,parser,get,deprecation,handler,geo,utils,parse,geo,point,parser,sparse,false,geo,utils,effective,point,top,sparse,get,lat,left,sparse,get,lon,else,if,match,current,field,name,parser,get,deprecation,handler,geo,utils,parse,geo,point,parser,sparse,false,geo,utils,effective,point,bottom,sparse,get,lat,right,sparse,get,lon,else,if,match,current,field,name,parser,get,deprecation,handler,geo,utils,parse,geo,point,parser,sparse,false,geo,utils,effective,point,top,sparse,get,lat,right,sparse,get,lon,else,if,match,current,field,name,parser,get,deprecation,handler,geo,utils,parse,geo,point,parser,sparse,false,geo,utils,effective,point,bottom,sparse,get,lat,left,sparse,get,lon,else,throw,new,elasticsearch,parse,exception,failed,to,parse,bounding,box,unexpected,field,current,field,name,else,throw,new,elasticsearch,parse,exception,failed,to,parse,bounding,box,field,name,expected,but,found,token,if,envelope,null,if,double,is,na,n,top,false,double,is,na,n,bottom,false,double,is,na,n,left,false,double,is,na,n,right,false,throw,new,elasticsearch,parse,exception,failed,to,parse,bounding,box,conflicting,definition,found,using,well,known,text,and,explicit,corners,org,locationtech,spatial4j,shape,rectangle,r,envelope,build,return,new,double,r,get,min,y,r,get,max,y,r,get,min,x,r,get,max,x,return,new,double,bottom,top,left,right
GeoBoundingBoxQueryBuilder -> public static double[] parseBoundingBox(XContentParser parser) throws IOException, ElasticsearchParseException;1542820501;Parses the bounding box and returns bottom, top, left, right coordinates;public static double[] parseBoundingBox(XContentParser parser) throws IOException, ElasticsearchParseException {_        XContentParser.Token token = parser.currentToken()__        if (token != XContentParser.Token.START_OBJECT) {_            throw new ElasticsearchParseException("failed to parse bounding box. Expected start object but found [{}]", token)__        }__        double top = Double.NaN__        double bottom = Double.NaN__        double left = Double.NaN__        double right = Double.NaN___        String currentFieldName__        GeoPoint sparse = new GeoPoint()__        EnvelopeBuilder envelope = null___        while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {_            if (token == XContentParser.Token.FIELD_NAME) {_                currentFieldName = parser.currentName()__                token = parser.nextToken()__                if (WKT_FIELD.match(currentFieldName, parser.getDeprecationHandler())) {_                    envelope = (EnvelopeBuilder)(GeoWKTParser.parseExpectedType(parser, GeoShapeType.ENVELOPE))__                } else if (TOP_FIELD.match(currentFieldName, parser.getDeprecationHandler())) {_                    top = parser.doubleValue()__                } else if (BOTTOM_FIELD.match(currentFieldName, parser.getDeprecationHandler())) {_                    bottom = parser.doubleValue()__                } else if (LEFT_FIELD.match(currentFieldName, parser.getDeprecationHandler())) {_                    left = parser.doubleValue()__                } else if (RIGHT_FIELD.match(currentFieldName, parser.getDeprecationHandler())) {_                    right = parser.doubleValue()__                } else {_                    if (TOP_LEFT_FIELD.match(currentFieldName, parser.getDeprecationHandler())) {_                        GeoUtils.parseGeoPoint(parser, sparse, false, GeoUtils.EffectivePoint.TOP_LEFT)__                        top = sparse.getLat()__                        left = sparse.getLon()__                    } else if (BOTTOM_RIGHT_FIELD.match(currentFieldName, parser.getDeprecationHandler())) {_                        GeoUtils.parseGeoPoint(parser, sparse, false, GeoUtils.EffectivePoint.BOTTOM_RIGHT)__                        bottom = sparse.getLat()__                        right = sparse.getLon()__                    } else if (TOP_RIGHT_FIELD.match(currentFieldName, parser.getDeprecationHandler())) {_                        GeoUtils.parseGeoPoint(parser, sparse, false, GeoUtils.EffectivePoint.TOP_RIGHT)__                        top = sparse.getLat()__                        right = sparse.getLon()__                    } else if (BOTTOM_LEFT_FIELD.match(currentFieldName, parser.getDeprecationHandler())) {_                        GeoUtils.parseGeoPoint(parser, sparse, false, GeoUtils.EffectivePoint.BOTTOM_LEFT)__                        bottom = sparse.getLat()__                        left = sparse.getLon()__                    } else {_                        throw new ElasticsearchParseException("failed to parse bounding box. unexpected field [{}]", currentFieldName)__                    }_                }_            } else {_                throw new ElasticsearchParseException("failed to parse bounding box. field name expected but [{}] found", token)__            }_        }_        if (envelope != null) {_            if (Double.isNaN(top) == false || Double.isNaN(bottom) == false || Double.isNaN(left) == false ||_                Double.isNaN(right) == false) {_                throw new ElasticsearchParseException("failed to parse bounding box. Conflicting definition found "_                    + "using well-known text and explicit corners.")__            }_            org.locationtech.spatial4j.shape.Rectangle r = envelope.buildS4J()__            return new double[]{r.getMinY(), r.getMaxY(), r.getMinX(), r.getMaxX()}__        }_        return new double[]{bottom, top, left, right}__    };parses,the,bounding,box,and,returns,bottom,top,left,right,coordinates;public,static,double,parse,bounding,box,xcontent,parser,parser,throws,ioexception,elasticsearch,parse,exception,xcontent,parser,token,token,parser,current,token,if,token,xcontent,parser,token,throw,new,elasticsearch,parse,exception,failed,to,parse,bounding,box,expected,start,object,but,found,token,double,top,double,na,n,double,bottom,double,na,n,double,left,double,na,n,double,right,double,na,n,string,current,field,name,geo,point,sparse,new,geo,point,envelope,builder,envelope,null,while,token,parser,next,token,xcontent,parser,token,if,token,xcontent,parser,token,current,field,name,parser,current,name,token,parser,next,token,if,match,current,field,name,parser,get,deprecation,handler,envelope,envelope,builder,geo,wktparser,parse,expected,type,parser,geo,shape,type,envelope,else,if,match,current,field,name,parser,get,deprecation,handler,top,parser,double,value,else,if,match,current,field,name,parser,get,deprecation,handler,bottom,parser,double,value,else,if,match,current,field,name,parser,get,deprecation,handler,left,parser,double,value,else,if,match,current,field,name,parser,get,deprecation,handler,right,parser,double,value,else,if,match,current,field,name,parser,get,deprecation,handler,geo,utils,parse,geo,point,parser,sparse,false,geo,utils,effective,point,top,sparse,get,lat,left,sparse,get,lon,else,if,match,current,field,name,parser,get,deprecation,handler,geo,utils,parse,geo,point,parser,sparse,false,geo,utils,effective,point,bottom,sparse,get,lat,right,sparse,get,lon,else,if,match,current,field,name,parser,get,deprecation,handler,geo,utils,parse,geo,point,parser,sparse,false,geo,utils,effective,point,top,sparse,get,lat,right,sparse,get,lon,else,if,match,current,field,name,parser,get,deprecation,handler,geo,utils,parse,geo,point,parser,sparse,false,geo,utils,effective,point,bottom,sparse,get,lat,left,sparse,get,lon,else,throw,new,elasticsearch,parse,exception,failed,to,parse,bounding,box,unexpected,field,current,field,name,else,throw,new,elasticsearch,parse,exception,failed,to,parse,bounding,box,field,name,expected,but,found,token,if,envelope,null,if,double,is,na,n,top,false,double,is,na,n,bottom,false,double,is,na,n,left,false,double,is,na,n,right,false,throw,new,elasticsearch,parse,exception,failed,to,parse,bounding,box,conflicting,definition,found,using,well,known,text,and,explicit,corners,org,locationtech,spatial4j,shape,rectangle,r,envelope,build,s4j,return,new,double,r,get,min,y,r,get,max,y,r,get,min,x,r,get,max,x,return,new,double,bottom,top,left,right
GeoBoundingBoxQueryBuilder -> public GeoBoundingBoxQueryBuilder setCorners(GeoPoint topLeft, GeoPoint bottomRight);1524684173;Adds points._@param topLeft topLeft point to add._@param bottomRight bottomRight point to add.;public GeoBoundingBoxQueryBuilder setCorners(GeoPoint topLeft, GeoPoint bottomRight) {_        return setCorners(topLeft.getLat(), topLeft.getLon(), bottomRight.getLat(), bottomRight.getLon())__    };adds,points,param,top,left,top,left,point,to,add,param,bottom,right,bottom,right,point,to,add;public,geo,bounding,box,query,builder,set,corners,geo,point,top,left,geo,point,bottom,right,return,set,corners,top,left,get,lat,top,left,get,lon,bottom,right,get,lat,bottom,right,get,lon
GeoBoundingBoxQueryBuilder -> public GeoBoundingBoxQueryBuilder setCorners(GeoPoint topLeft, GeoPoint bottomRight);1527207653;Adds points._@param topLeft topLeft point to add._@param bottomRight bottomRight point to add.;public GeoBoundingBoxQueryBuilder setCorners(GeoPoint topLeft, GeoPoint bottomRight) {_        return setCorners(topLeft.getLat(), topLeft.getLon(), bottomRight.getLat(), bottomRight.getLon())__    };adds,points,param,top,left,top,left,point,to,add,param,bottom,right,bottom,right,point,to,add;public,geo,bounding,box,query,builder,set,corners,geo,point,top,left,geo,point,bottom,right,return,set,corners,top,left,get,lat,top,left,get,lon,bottom,right,get,lat,bottom,right,get,lon
GeoBoundingBoxQueryBuilder -> public GeoBoundingBoxQueryBuilder setCorners(GeoPoint topLeft, GeoPoint bottomRight);1531179852;Adds points._@param topLeft topLeft point to add._@param bottomRight bottomRight point to add.;public GeoBoundingBoxQueryBuilder setCorners(GeoPoint topLeft, GeoPoint bottomRight) {_        return setCorners(topLeft.getLat(), topLeft.getLon(), bottomRight.getLat(), bottomRight.getLon())__    };adds,points,param,top,left,top,left,point,to,add,param,bottom,right,bottom,right,point,to,add;public,geo,bounding,box,query,builder,set,corners,geo,point,top,left,geo,point,bottom,right,return,set,corners,top,left,get,lat,top,left,get,lon,bottom,right,get,lat,bottom,right,get,lon
GeoBoundingBoxQueryBuilder -> public GeoBoundingBoxQueryBuilder setCorners(GeoPoint topLeft, GeoPoint bottomRight);1542820501;Adds points._@param topLeft topLeft point to add._@param bottomRight bottomRight point to add.;public GeoBoundingBoxQueryBuilder setCorners(GeoPoint topLeft, GeoPoint bottomRight) {_        return setCorners(topLeft.getLat(), topLeft.getLon(), bottomRight.getLat(), bottomRight.getLon())__    };adds,points,param,top,left,top,left,point,to,add,param,bottom,right,bottom,right,point,to,add;public,geo,bounding,box,query,builder,set,corners,geo,point,top,left,geo,point,bottom,right,return,set,corners,top,left,get,lat,top,left,get,lon,bottom,right,get,lat,bottom,right,get,lon
GeoBoundingBoxQueryBuilder -> public GeoPoint topLeft();1524684173;Returns the top left corner of the bounding box.;public GeoPoint topLeft() {_        return topLeft__    };returns,the,top,left,corner,of,the,bounding,box;public,geo,point,top,left,return,top,left
GeoBoundingBoxQueryBuilder -> public GeoPoint topLeft();1527207653;Returns the top left corner of the bounding box.;public GeoPoint topLeft() {_        return topLeft__    };returns,the,top,left,corner,of,the,bounding,box;public,geo,point,top,left,return,top,left
GeoBoundingBoxQueryBuilder -> public GeoPoint topLeft();1531179852;Returns the top left corner of the bounding box.;public GeoPoint topLeft() {_        return topLeft__    };returns,the,top,left,corner,of,the,bounding,box;public,geo,point,top,left,return,top,left
GeoBoundingBoxQueryBuilder -> public GeoPoint topLeft();1542820501;Returns the top left corner of the bounding box.;public GeoPoint topLeft() {_        return topLeft__    };returns,the,top,left,corner,of,the,bounding,box;public,geo,point,top,left,return,top,left
GeoBoundingBoxQueryBuilder -> public GeoBoundingBoxQueryBuilder setCornersOGC(String bottomLeft, String topRight);1524684173;Adds corners in OGC standard bbox/ envelop format.__@param bottomLeft bottom left corner geohash._@param topRight top right corner geohash.;public GeoBoundingBoxQueryBuilder setCornersOGC(String bottomLeft, String topRight) {_        return setCornersOGC(GeoPoint.fromGeohash(bottomLeft), GeoPoint.fromGeohash(topRight))__    };adds,corners,in,ogc,standard,bbox,envelop,format,param,bottom,left,bottom,left,corner,geohash,param,top,right,top,right,corner,geohash;public,geo,bounding,box,query,builder,set,corners,ogc,string,bottom,left,string,top,right,return,set,corners,ogc,geo,point,from,geohash,bottom,left,geo,point,from,geohash,top,right
GeoBoundingBoxQueryBuilder -> public GeoBoundingBoxQueryBuilder setCornersOGC(String bottomLeft, String topRight);1527207653;Adds corners in OGC standard bbox/ envelop format.__@param bottomLeft bottom left corner geohash._@param topRight top right corner geohash.;public GeoBoundingBoxQueryBuilder setCornersOGC(String bottomLeft, String topRight) {_        return setCornersOGC(GeoPoint.fromGeohash(bottomLeft), GeoPoint.fromGeohash(topRight))__    };adds,corners,in,ogc,standard,bbox,envelop,format,param,bottom,left,bottom,left,corner,geohash,param,top,right,top,right,corner,geohash;public,geo,bounding,box,query,builder,set,corners,ogc,string,bottom,left,string,top,right,return,set,corners,ogc,geo,point,from,geohash,bottom,left,geo,point,from,geohash,top,right
GeoBoundingBoxQueryBuilder -> public GeoBoundingBoxQueryBuilder setCornersOGC(String bottomLeft, String topRight);1531179852;Adds corners in OGC standard bbox/ envelop format.__@param bottomLeft bottom left corner geohash._@param topRight top right corner geohash.;public GeoBoundingBoxQueryBuilder setCornersOGC(String bottomLeft, String topRight) {_        return setCornersOGC(GeoPoint.fromGeohash(bottomLeft), GeoPoint.fromGeohash(topRight))__    };adds,corners,in,ogc,standard,bbox,envelop,format,param,bottom,left,bottom,left,corner,geohash,param,top,right,top,right,corner,geohash;public,geo,bounding,box,query,builder,set,corners,ogc,string,bottom,left,string,top,right,return,set,corners,ogc,geo,point,from,geohash,bottom,left,geo,point,from,geohash,top,right
GeoBoundingBoxQueryBuilder -> public GeoBoundingBoxQueryBuilder setCornersOGC(String bottomLeft, String topRight);1542820501;Adds corners in OGC standard bbox/ envelop format.__@param bottomLeft bottom left corner geohash._@param topRight top right corner geohash.;public GeoBoundingBoxQueryBuilder setCornersOGC(String bottomLeft, String topRight) {_        return setCornersOGC(GeoPoint.fromGeohash(bottomLeft), GeoPoint.fromGeohash(topRight))__    };adds,corners,in,ogc,standard,bbox,envelop,format,param,bottom,left,bottom,left,corner,geohash,param,top,right,top,right,corner,geohash;public,geo,bounding,box,query,builder,set,corners,ogc,string,bottom,left,string,top,right,return,set,corners,ogc,geo,point,from,geohash,bottom,left,geo,point,from,geohash,top,right
GeoBoundingBoxQueryBuilder -> public GeoPoint bottomRight();1524684173;Returns the bottom right corner of the bounding box.;public GeoPoint bottomRight() {_        return bottomRight__    };returns,the,bottom,right,corner,of,the,bounding,box;public,geo,point,bottom,right,return,bottom,right
GeoBoundingBoxQueryBuilder -> public GeoPoint bottomRight();1527207653;Returns the bottom right corner of the bounding box.;public GeoPoint bottomRight() {_        return bottomRight__    };returns,the,bottom,right,corner,of,the,bounding,box;public,geo,point,bottom,right,return,bottom,right
GeoBoundingBoxQueryBuilder -> public GeoPoint bottomRight();1531179852;Returns the bottom right corner of the bounding box.;public GeoPoint bottomRight() {_        return bottomRight__    };returns,the,bottom,right,corner,of,the,bounding,box;public,geo,point,bottom,right,return,bottom,right
GeoBoundingBoxQueryBuilder -> public GeoPoint bottomRight();1542820501;Returns the bottom right corner of the bounding box.;public GeoPoint bottomRight() {_        return bottomRight__    };returns,the,bottom,right,corner,of,the,bounding,box;public,geo,point,bottom,right,return,bottom,right
GeoBoundingBoxQueryBuilder -> public GeoBoundingBoxQueryBuilder type(String type);1524684173;For BWC: Parse type from type name.;public GeoBoundingBoxQueryBuilder type(String type) {_        this.type = GeoExecType.fromString(type)__        return this__    };for,bwc,parse,type,from,type,name;public,geo,bounding,box,query,builder,type,string,type,this,type,geo,exec,type,from,string,type,return,this
GeoBoundingBoxQueryBuilder -> public GeoBoundingBoxQueryBuilder type(String type);1527207653;For BWC: Parse type from type name.;public GeoBoundingBoxQueryBuilder type(String type) {_        this.type = GeoExecType.fromString(type)__        return this__    };for,bwc,parse,type,from,type,name;public,geo,bounding,box,query,builder,type,string,type,this,type,geo,exec,type,from,string,type,return,this
GeoBoundingBoxQueryBuilder -> public GeoBoundingBoxQueryBuilder type(String type);1531179852;For BWC: Parse type from type name.;public GeoBoundingBoxQueryBuilder type(String type) {_        this.type = GeoExecType.fromString(type)__        return this__    };for,bwc,parse,type,from,type,name;public,geo,bounding,box,query,builder,type,string,type,this,type,geo,exec,type,from,string,type,return,this
GeoBoundingBoxQueryBuilder -> public GeoBoundingBoxQueryBuilder type(String type);1542820501;For BWC: Parse type from type name.;public GeoBoundingBoxQueryBuilder type(String type) {_        this.type = GeoExecType.fromString(type)__        return this__    };for,bwc,parse,type,from,type,name;public,geo,bounding,box,query,builder,type,string,type,this,type,geo,exec,type,from,string,type,return,this
GeoBoundingBoxQueryBuilder -> public GeoBoundingBoxQueryBuilder setCorners(double top, double left, double bottom, double right);1524684173;Adds top left point._@param top The top latitude_@param left The left longitude_@param bottom The bottom latitude_@param right The right longitude;public GeoBoundingBoxQueryBuilder setCorners(double top, double left, double bottom, double right) {_        if (GeoValidationMethod.isIgnoreMalformed(validationMethod) == false) {_            if (Numbers.isValidDouble(top) == false) {_                throw new IllegalArgumentException("top latitude is invalid: " + top)__            }_            if (Numbers.isValidDouble(left) == false) {_                throw new IllegalArgumentException("left longitude is invalid: " + left)__            }_            if (Numbers.isValidDouble(bottom) == false) {_                throw new IllegalArgumentException("bottom latitude is invalid: " + bottom)__            }_            if (Numbers.isValidDouble(right) == false) {_                throw new IllegalArgumentException("right longitude is invalid: " + right)__            }__            _            if (top < bottom) {_                throw new IllegalArgumentException("top is below bottom corner: " +_                            top + " vs. " + bottom)__            } else if (top == bottom) {_                throw new IllegalArgumentException("top cannot be the same as bottom: " +_                    top + " == " + bottom)__            } else if (left == right) {_                throw new IllegalArgumentException("left cannot be the same as right: " +_                    left + " == " + right)__            }__                _        }__        topLeft.reset(top, left)__        bottomRight.reset(bottom, right)__        return this__    };adds,top,left,point,param,top,the,top,latitude,param,left,the,left,longitude,param,bottom,the,bottom,latitude,param,right,the,right,longitude;public,geo,bounding,box,query,builder,set,corners,double,top,double,left,double,bottom,double,right,if,geo,validation,method,is,ignore,malformed,validation,method,false,if,numbers,is,valid,double,top,false,throw,new,illegal,argument,exception,top,latitude,is,invalid,top,if,numbers,is,valid,double,left,false,throw,new,illegal,argument,exception,left,longitude,is,invalid,left,if,numbers,is,valid,double,bottom,false,throw,new,illegal,argument,exception,bottom,latitude,is,invalid,bottom,if,numbers,is,valid,double,right,false,throw,new,illegal,argument,exception,right,longitude,is,invalid,right,if,top,bottom,throw,new,illegal,argument,exception,top,is,below,bottom,corner,top,vs,bottom,else,if,top,bottom,throw,new,illegal,argument,exception,top,cannot,be,the,same,as,bottom,top,bottom,else,if,left,right,throw,new,illegal,argument,exception,left,cannot,be,the,same,as,right,left,right,top,left,reset,top,left,bottom,right,reset,bottom,right,return,this
GeoBoundingBoxQueryBuilder -> public GeoBoundingBoxQueryBuilder setCorners(double top, double left, double bottom, double right);1527207653;Adds top left point._@param top The top latitude_@param left The left longitude_@param bottom The bottom latitude_@param right The right longitude;public GeoBoundingBoxQueryBuilder setCorners(double top, double left, double bottom, double right) {_        if (GeoValidationMethod.isIgnoreMalformed(validationMethod) == false) {_            if (Numbers.isValidDouble(top) == false) {_                throw new IllegalArgumentException("top latitude is invalid: " + top)__            }_            if (Numbers.isValidDouble(left) == false) {_                throw new IllegalArgumentException("left longitude is invalid: " + left)__            }_            if (Numbers.isValidDouble(bottom) == false) {_                throw new IllegalArgumentException("bottom latitude is invalid: " + bottom)__            }_            if (Numbers.isValidDouble(right) == false) {_                throw new IllegalArgumentException("right longitude is invalid: " + right)__            }__            _            if (top < bottom) {_                throw new IllegalArgumentException("top is below bottom corner: " +_                            top + " vs. " + bottom)__            } else if (top == bottom) {_                throw new IllegalArgumentException("top cannot be the same as bottom: " +_                    top + " == " + bottom)__            } else if (left == right) {_                throw new IllegalArgumentException("left cannot be the same as right: " +_                    left + " == " + right)__            }__                _        }__        topLeft.reset(top, left)__        bottomRight.reset(bottom, right)__        return this__    };adds,top,left,point,param,top,the,top,latitude,param,left,the,left,longitude,param,bottom,the,bottom,latitude,param,right,the,right,longitude;public,geo,bounding,box,query,builder,set,corners,double,top,double,left,double,bottom,double,right,if,geo,validation,method,is,ignore,malformed,validation,method,false,if,numbers,is,valid,double,top,false,throw,new,illegal,argument,exception,top,latitude,is,invalid,top,if,numbers,is,valid,double,left,false,throw,new,illegal,argument,exception,left,longitude,is,invalid,left,if,numbers,is,valid,double,bottom,false,throw,new,illegal,argument,exception,bottom,latitude,is,invalid,bottom,if,numbers,is,valid,double,right,false,throw,new,illegal,argument,exception,right,longitude,is,invalid,right,if,top,bottom,throw,new,illegal,argument,exception,top,is,below,bottom,corner,top,vs,bottom,else,if,top,bottom,throw,new,illegal,argument,exception,top,cannot,be,the,same,as,bottom,top,bottom,else,if,left,right,throw,new,illegal,argument,exception,left,cannot,be,the,same,as,right,left,right,top,left,reset,top,left,bottom,right,reset,bottom,right,return,this
GeoBoundingBoxQueryBuilder -> public GeoBoundingBoxQueryBuilder setCorners(double top, double left, double bottom, double right);1531179852;Adds top left point._@param top The top latitude_@param left The left longitude_@param bottom The bottom latitude_@param right The right longitude;public GeoBoundingBoxQueryBuilder setCorners(double top, double left, double bottom, double right) {_        if (GeoValidationMethod.isIgnoreMalformed(validationMethod) == false) {_            if (Numbers.isValidDouble(top) == false) {_                throw new IllegalArgumentException("top latitude is invalid: " + top)__            }_            if (Numbers.isValidDouble(left) == false) {_                throw new IllegalArgumentException("left longitude is invalid: " + left)__            }_            if (Numbers.isValidDouble(bottom) == false) {_                throw new IllegalArgumentException("bottom latitude is invalid: " + bottom)__            }_            if (Numbers.isValidDouble(right) == false) {_                throw new IllegalArgumentException("right longitude is invalid: " + right)__            }__            _            if (top < bottom) {_                throw new IllegalArgumentException("top is below bottom corner: " +_                            top + " vs. " + bottom)__            } else if (top == bottom) {_                throw new IllegalArgumentException("top cannot be the same as bottom: " +_                    top + " == " + bottom)__            } else if (left == right) {_                throw new IllegalArgumentException("left cannot be the same as right: " +_                    left + " == " + right)__            }__                _        }__        topLeft.reset(top, left)__        bottomRight.reset(bottom, right)__        return this__    };adds,top,left,point,param,top,the,top,latitude,param,left,the,left,longitude,param,bottom,the,bottom,latitude,param,right,the,right,longitude;public,geo,bounding,box,query,builder,set,corners,double,top,double,left,double,bottom,double,right,if,geo,validation,method,is,ignore,malformed,validation,method,false,if,numbers,is,valid,double,top,false,throw,new,illegal,argument,exception,top,latitude,is,invalid,top,if,numbers,is,valid,double,left,false,throw,new,illegal,argument,exception,left,longitude,is,invalid,left,if,numbers,is,valid,double,bottom,false,throw,new,illegal,argument,exception,bottom,latitude,is,invalid,bottom,if,numbers,is,valid,double,right,false,throw,new,illegal,argument,exception,right,longitude,is,invalid,right,if,top,bottom,throw,new,illegal,argument,exception,top,is,below,bottom,corner,top,vs,bottom,else,if,top,bottom,throw,new,illegal,argument,exception,top,cannot,be,the,same,as,bottom,top,bottom,else,if,left,right,throw,new,illegal,argument,exception,left,cannot,be,the,same,as,right,left,right,top,left,reset,top,left,bottom,right,reset,bottom,right,return,this
GeoBoundingBoxQueryBuilder -> public GeoBoundingBoxQueryBuilder setCorners(double top, double left, double bottom, double right);1542820501;Adds top left point._@param top The top latitude_@param left The left longitude_@param bottom The bottom latitude_@param right The right longitude;public GeoBoundingBoxQueryBuilder setCorners(double top, double left, double bottom, double right) {_        if (GeoValidationMethod.isIgnoreMalformed(validationMethod) == false) {_            if (Numbers.isValidDouble(top) == false) {_                throw new IllegalArgumentException("top latitude is invalid: " + top)__            }_            if (Numbers.isValidDouble(left) == false) {_                throw new IllegalArgumentException("left longitude is invalid: " + left)__            }_            if (Numbers.isValidDouble(bottom) == false) {_                throw new IllegalArgumentException("bottom latitude is invalid: " + bottom)__            }_            if (Numbers.isValidDouble(right) == false) {_                throw new IllegalArgumentException("right longitude is invalid: " + right)__            }__            _            if (top < bottom) {_                throw new IllegalArgumentException("top is below bottom corner: " +_                            top + " vs. " + bottom)__            } else if (top == bottom) {_                throw new IllegalArgumentException("top cannot be the same as bottom: " +_                    top + " == " + bottom)__            } else if (left == right) {_                throw new IllegalArgumentException("left cannot be the same as right: " +_                    left + " == " + right)__            }__                _        }__        topLeft.reset(top, left)__        bottomRight.reset(bottom, right)__        return this__    };adds,top,left,point,param,top,the,top,latitude,param,left,the,left,longitude,param,bottom,the,bottom,latitude,param,right,the,right,longitude;public,geo,bounding,box,query,builder,set,corners,double,top,double,left,double,bottom,double,right,if,geo,validation,method,is,ignore,malformed,validation,method,false,if,numbers,is,valid,double,top,false,throw,new,illegal,argument,exception,top,latitude,is,invalid,top,if,numbers,is,valid,double,left,false,throw,new,illegal,argument,exception,left,longitude,is,invalid,left,if,numbers,is,valid,double,bottom,false,throw,new,illegal,argument,exception,bottom,latitude,is,invalid,bottom,if,numbers,is,valid,double,right,false,throw,new,illegal,argument,exception,right,longitude,is,invalid,right,if,top,bottom,throw,new,illegal,argument,exception,top,is,below,bottom,corner,top,vs,bottom,else,if,top,bottom,throw,new,illegal,argument,exception,top,cannot,be,the,same,as,bottom,top,bottom,else,if,left,right,throw,new,illegal,argument,exception,left,cannot,be,the,same,as,right,left,right,top,left,reset,top,left,bottom,right,reset,bottom,right,return,this
GeoBoundingBoxQueryBuilder -> public GeoBoundingBoxQueryBuilder setCornersOGC(GeoPoint bottomLeft, GeoPoint topRight);1524684173;Adds corners in OGC standard bbox/ envelop format.__@param bottomLeft bottom left corner of bounding box._@param topRight top right corner of bounding box.;public GeoBoundingBoxQueryBuilder setCornersOGC(GeoPoint bottomLeft, GeoPoint topRight) {_        return setCorners(topRight.getLat(), bottomLeft.getLon(), bottomLeft.getLat(), topRight.getLon())__    };adds,corners,in,ogc,standard,bbox,envelop,format,param,bottom,left,bottom,left,corner,of,bounding,box,param,top,right,top,right,corner,of,bounding,box;public,geo,bounding,box,query,builder,set,corners,ogc,geo,point,bottom,left,geo,point,top,right,return,set,corners,top,right,get,lat,bottom,left,get,lon,bottom,left,get,lat,top,right,get,lon
GeoBoundingBoxQueryBuilder -> public GeoBoundingBoxQueryBuilder setCornersOGC(GeoPoint bottomLeft, GeoPoint topRight);1527207653;Adds corners in OGC standard bbox/ envelop format.__@param bottomLeft bottom left corner of bounding box._@param topRight top right corner of bounding box.;public GeoBoundingBoxQueryBuilder setCornersOGC(GeoPoint bottomLeft, GeoPoint topRight) {_        return setCorners(topRight.getLat(), bottomLeft.getLon(), bottomLeft.getLat(), topRight.getLon())__    };adds,corners,in,ogc,standard,bbox,envelop,format,param,bottom,left,bottom,left,corner,of,bounding,box,param,top,right,top,right,corner,of,bounding,box;public,geo,bounding,box,query,builder,set,corners,ogc,geo,point,bottom,left,geo,point,top,right,return,set,corners,top,right,get,lat,bottom,left,get,lon,bottom,left,get,lat,top,right,get,lon
GeoBoundingBoxQueryBuilder -> public GeoBoundingBoxQueryBuilder setCornersOGC(GeoPoint bottomLeft, GeoPoint topRight);1531179852;Adds corners in OGC standard bbox/ envelop format.__@param bottomLeft bottom left corner of bounding box._@param topRight top right corner of bounding box.;public GeoBoundingBoxQueryBuilder setCornersOGC(GeoPoint bottomLeft, GeoPoint topRight) {_        return setCorners(topRight.getLat(), bottomLeft.getLon(), bottomLeft.getLat(), topRight.getLon())__    };adds,corners,in,ogc,standard,bbox,envelop,format,param,bottom,left,bottom,left,corner,of,bounding,box,param,top,right,top,right,corner,of,bounding,box;public,geo,bounding,box,query,builder,set,corners,ogc,geo,point,bottom,left,geo,point,top,right,return,set,corners,top,right,get,lat,bottom,left,get,lon,bottom,left,get,lat,top,right,get,lon
GeoBoundingBoxQueryBuilder -> public GeoBoundingBoxQueryBuilder setCornersOGC(GeoPoint bottomLeft, GeoPoint topRight);1542820501;Adds corners in OGC standard bbox/ envelop format.__@param bottomLeft bottom left corner of bounding box._@param topRight top right corner of bounding box.;public GeoBoundingBoxQueryBuilder setCornersOGC(GeoPoint bottomLeft, GeoPoint topRight) {_        return setCorners(topRight.getLat(), bottomLeft.getLon(), bottomLeft.getLat(), topRight.getLon())__    };adds,corners,in,ogc,standard,bbox,envelop,format,param,bottom,left,bottom,left,corner,of,bounding,box,param,top,right,top,right,corner,of,bounding,box;public,geo,bounding,box,query,builder,set,corners,ogc,geo,point,bottom,left,geo,point,top,right,return,set,corners,top,right,get,lat,bottom,left,get,lon,bottom,left,get,lat,top,right,get,lon
GeoBoundingBoxQueryBuilder -> public GeoExecType type();1524684173;Returns the execution type of the geo bounding box.;public GeoExecType type() {_        return type__    };returns,the,execution,type,of,the,geo,bounding,box;public,geo,exec,type,type,return,type
GeoBoundingBoxQueryBuilder -> public GeoExecType type();1527207653;Returns the execution type of the geo bounding box.;public GeoExecType type() {_        return type__    };returns,the,execution,type,of,the,geo,bounding,box;public,geo,exec,type,type,return,type
GeoBoundingBoxQueryBuilder -> public GeoExecType type();1531179852;Returns the execution type of the geo bounding box.;public GeoExecType type() {_        return type__    };returns,the,execution,type,of,the,geo,bounding,box;public,geo,exec,type,type,return,type
GeoBoundingBoxQueryBuilder -> public GeoExecType type();1542820501;Returns the execution type of the geo bounding box.;public GeoExecType type() {_        return type__    };returns,the,execution,type,of,the,geo,bounding,box;public,geo,exec,type,type,return,type
GeoBoundingBoxQueryBuilder -> public GeoBoundingBoxQueryBuilder setCorners(final String geohash);1524684173;Adds points from a single geohash._@param geohash The geohash for computing the bounding box.;public GeoBoundingBoxQueryBuilder setCorners(final String geohash) {_        _        Rectangle ghBBox = GeoHashUtils.bbox(geohash)__        return setCorners(new GeoPoint(ghBBox.maxLat, ghBBox.minLon), new GeoPoint(ghBBox.minLat, ghBBox.maxLon))__    };adds,points,from,a,single,geohash,param,geohash,the,geohash,for,computing,the,bounding,box;public,geo,bounding,box,query,builder,set,corners,final,string,geohash,rectangle,gh,bbox,geo,hash,utils,bbox,geohash,return,set,corners,new,geo,point,gh,bbox,max,lat,gh,bbox,min,lon,new,geo,point,gh,bbox,min,lat,gh,bbox,max,lon
GeoBoundingBoxQueryBuilder -> public GeoBoundingBoxQueryBuilder setCorners(final String geohash);1527207653;Adds points from a single geohash._@param geohash The geohash for computing the bounding box.;public GeoBoundingBoxQueryBuilder setCorners(final String geohash) {_        _        Rectangle ghBBox = GeoHashUtils.bbox(geohash)__        return setCorners(new GeoPoint(ghBBox.maxLat, ghBBox.minLon), new GeoPoint(ghBBox.minLat, ghBBox.maxLon))__    };adds,points,from,a,single,geohash,param,geohash,the,geohash,for,computing,the,bounding,box;public,geo,bounding,box,query,builder,set,corners,final,string,geohash,rectangle,gh,bbox,geo,hash,utils,bbox,geohash,return,set,corners,new,geo,point,gh,bbox,max,lat,gh,bbox,min,lon,new,geo,point,gh,bbox,min,lat,gh,bbox,max,lon
GeoBoundingBoxQueryBuilder -> public GeoBoundingBoxQueryBuilder setCorners(final String geohash);1531179852;Adds points from a single geohash._@param geohash The geohash for computing the bounding box.;public GeoBoundingBoxQueryBuilder setCorners(final String geohash) {_        _        Rectangle ghBBox = GeoHashUtils.bbox(geohash)__        return setCorners(new GeoPoint(ghBBox.maxLat, ghBBox.minLon), new GeoPoint(ghBBox.minLat, ghBBox.maxLon))__    };adds,points,from,a,single,geohash,param,geohash,the,geohash,for,computing,the,bounding,box;public,geo,bounding,box,query,builder,set,corners,final,string,geohash,rectangle,gh,bbox,geo,hash,utils,bbox,geohash,return,set,corners,new,geo,point,gh,bbox,max,lat,gh,bbox,min,lon,new,geo,point,gh,bbox,min,lat,gh,bbox,max,lon
GeoBoundingBoxQueryBuilder -> public GeoBoundingBoxQueryBuilder setCorners(final String geohash);1542820501;Adds points from a single geohash._@param geohash The geohash for computing the bounding box.;public GeoBoundingBoxQueryBuilder setCorners(final String geohash) {_        _        Rectangle ghBBox = GeoHashUtils.bbox(geohash)__        return setCorners(new GeoPoint(ghBBox.maxLat, ghBBox.minLon), new GeoPoint(ghBBox.minLat, ghBBox.maxLon))__    };adds,points,from,a,single,geohash,param,geohash,the,geohash,for,computing,the,bounding,box;public,geo,bounding,box,query,builder,set,corners,final,string,geohash,rectangle,gh,bbox,geo,hash,utils,bbox,geohash,return,set,corners,new,geo,point,gh,bbox,max,lat,gh,bbox,min,lon,new,geo,point,gh,bbox,min,lat,gh,bbox,max,lon
GeoBoundingBoxQueryBuilder -> public GeoValidationMethod getValidationMethod();1524684173;Returns geo coordinate validation method to use.;public GeoValidationMethod getValidationMethod() {_        return this.validationMethod__    };returns,geo,coordinate,validation,method,to,use;public,geo,validation,method,get,validation,method,return,this,validation,method
GeoBoundingBoxQueryBuilder -> public GeoValidationMethod getValidationMethod();1527207653;Returns geo coordinate validation method to use.;public GeoValidationMethod getValidationMethod() {_        return this.validationMethod__    };returns,geo,coordinate,validation,method,to,use;public,geo,validation,method,get,validation,method,return,this,validation,method
GeoBoundingBoxQueryBuilder -> public GeoValidationMethod getValidationMethod();1531179852;Returns geo coordinate validation method to use.;public GeoValidationMethod getValidationMethod() {_        return this.validationMethod__    };returns,geo,coordinate,validation,method,to,use;public,geo,validation,method,get,validation,method,return,this,validation,method
GeoBoundingBoxQueryBuilder -> public GeoValidationMethod getValidationMethod();1542820501;Returns geo coordinate validation method to use.;public GeoValidationMethod getValidationMethod() {_        return this.validationMethod__    };returns,geo,coordinate,validation,method,to,use;public,geo,validation,method,get,validation,method,return,this,validation,method
GeoBoundingBoxQueryBuilder -> public GeoBoundingBoxQueryBuilder(StreamInput in) throws IOException;1524684173;Read from a stream.;public GeoBoundingBoxQueryBuilder(StreamInput in) throws IOException {_        super(in)__        fieldName = in.readString()__        topLeft = in.readGeoPoint()__        bottomRight = in.readGeoPoint()__        type = GeoExecType.readFromStream(in)__        validationMethod = GeoValidationMethod.readFromStream(in)__        ignoreUnmapped = in.readBoolean()__    };read,from,a,stream;public,geo,bounding,box,query,builder,stream,input,in,throws,ioexception,super,in,field,name,in,read,string,top,left,in,read,geo,point,bottom,right,in,read,geo,point,type,geo,exec,type,read,from,stream,in,validation,method,geo,validation,method,read,from,stream,in,ignore,unmapped,in,read,boolean
GeoBoundingBoxQueryBuilder -> public GeoBoundingBoxQueryBuilder(StreamInput in) throws IOException;1527207653;Read from a stream.;public GeoBoundingBoxQueryBuilder(StreamInput in) throws IOException {_        super(in)__        fieldName = in.readString()__        topLeft = in.readGeoPoint()__        bottomRight = in.readGeoPoint()__        type = GeoExecType.readFromStream(in)__        validationMethod = GeoValidationMethod.readFromStream(in)__        ignoreUnmapped = in.readBoolean()__    };read,from,a,stream;public,geo,bounding,box,query,builder,stream,input,in,throws,ioexception,super,in,field,name,in,read,string,top,left,in,read,geo,point,bottom,right,in,read,geo,point,type,geo,exec,type,read,from,stream,in,validation,method,geo,validation,method,read,from,stream,in,ignore,unmapped,in,read,boolean
GeoBoundingBoxQueryBuilder -> public GeoBoundingBoxQueryBuilder(StreamInput in) throws IOException;1531179852;Read from a stream.;public GeoBoundingBoxQueryBuilder(StreamInput in) throws IOException {_        super(in)__        fieldName = in.readString()__        topLeft = in.readGeoPoint()__        bottomRight = in.readGeoPoint()__        type = GeoExecType.readFromStream(in)__        validationMethod = GeoValidationMethod.readFromStream(in)__        ignoreUnmapped = in.readBoolean()__    };read,from,a,stream;public,geo,bounding,box,query,builder,stream,input,in,throws,ioexception,super,in,field,name,in,read,string,top,left,in,read,geo,point,bottom,right,in,read,geo,point,type,geo,exec,type,read,from,stream,in,validation,method,geo,validation,method,read,from,stream,in,ignore,unmapped,in,read,boolean
GeoBoundingBoxQueryBuilder -> public GeoBoundingBoxQueryBuilder(StreamInput in) throws IOException;1542820501;Read from a stream.;public GeoBoundingBoxQueryBuilder(StreamInput in) throws IOException {_        super(in)__        fieldName = in.readString()__        topLeft = in.readGeoPoint()__        bottomRight = in.readGeoPoint()__        type = GeoExecType.readFromStream(in)__        validationMethod = GeoValidationMethod.readFromStream(in)__        ignoreUnmapped = in.readBoolean()__    };read,from,a,stream;public,geo,bounding,box,query,builder,stream,input,in,throws,ioexception,super,in,field,name,in,read,string,top,left,in,read,geo,point,bottom,right,in,read,geo,point,type,geo,exec,type,read,from,stream,in,validation,method,geo,validation,method,read,from,stream,in,ignore,unmapped,in,read,boolean
GeoBoundingBoxQueryBuilder -> public boolean ignoreUnmapped();1524684173;Gets whether the query builder will ignore unmapped fields (and run a_{@link MatchNoDocsQuery} in place of this query) or throw an exception if_the field is unmapped.;public boolean ignoreUnmapped() {_        return ignoreUnmapped__    };gets,whether,the,query,builder,will,ignore,unmapped,fields,and,run,a,link,match,no,docs,query,in,place,of,this,query,or,throw,an,exception,if,the,field,is,unmapped;public,boolean,ignore,unmapped,return,ignore,unmapped
GeoBoundingBoxQueryBuilder -> public boolean ignoreUnmapped();1527207653;Gets whether the query builder will ignore unmapped fields (and run a_{@link MatchNoDocsQuery} in place of this query) or throw an exception if_the field is unmapped.;public boolean ignoreUnmapped() {_        return ignoreUnmapped__    };gets,whether,the,query,builder,will,ignore,unmapped,fields,and,run,a,link,match,no,docs,query,in,place,of,this,query,or,throw,an,exception,if,the,field,is,unmapped;public,boolean,ignore,unmapped,return,ignore,unmapped
GeoBoundingBoxQueryBuilder -> public boolean ignoreUnmapped();1531179852;Gets whether the query builder will ignore unmapped fields (and run a_{@link MatchNoDocsQuery} in place of this query) or throw an exception if_the field is unmapped.;public boolean ignoreUnmapped() {_        return ignoreUnmapped__    };gets,whether,the,query,builder,will,ignore,unmapped,fields,and,run,a,link,match,no,docs,query,in,place,of,this,query,or,throw,an,exception,if,the,field,is,unmapped;public,boolean,ignore,unmapped,return,ignore,unmapped
GeoBoundingBoxQueryBuilder -> public boolean ignoreUnmapped();1542820501;Gets whether the query builder will ignore unmapped fields (and run a_{@link MatchNoDocsQuery} in place of this query) or throw an exception if_the field is unmapped.;public boolean ignoreUnmapped() {_        return ignoreUnmapped__    };gets,whether,the,query,builder,will,ignore,unmapped,fields,and,run,a,link,match,no,docs,query,in,place,of,this,query,or,throw,an,exception,if,the,field,is,unmapped;public,boolean,ignore,unmapped,return,ignore,unmapped
