commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public SortField.Type reducedType() {     return SortField.Type.LONG. }
false;protected;2;14;;@Override protected NumericDocValues getNumericDocValues(LeafReaderContext context, String field) throws IOException {     final SortedNumericDocValues values = indexFieldData.load(context).getLongValues().     final NumericDocValues selectedValues.     if (nested == null) {         selectedValues = FieldData.replaceMissing(sortMode.select(values), dMissingValue).     } else {         final BitSet rootDocs = nested.rootDocs(context).         final DocIdSetIterator innerDocs = nested.innerDocs(context).         final int maxChildren = nested.getNestedSort() != null ? nested.getNestedSort().getMaxChildren() : Integer.MAX_VALUE.         selectedValues = sortMode.select(values, dMissingValue, rootDocs, innerDocs, context.reader().maxDoc(), maxChildren).     }     return selectedValues. }
false;public;4;25;;@Override public FieldComparator<?> newComparator(String fieldname, int numHits, int sortPos, boolean reversed) {     assert indexFieldData == null || fieldname.equals(indexFieldData.getFieldName()).     final Long dMissingValue = (Long) missingObject(missingValue, reversed).     // the comparator doesn't check docsWithField since we replace missing values in select()     return new FieldComparator.LongComparator(numHits, null, null) {          @Override         protected NumericDocValues getNumericDocValues(LeafReaderContext context, String field) throws IOException {             final SortedNumericDocValues values = indexFieldData.load(context).getLongValues().             final NumericDocValues selectedValues.             if (nested == null) {                 selectedValues = FieldData.replaceMissing(sortMode.select(values), dMissingValue).             } else {                 final BitSet rootDocs = nested.rootDocs(context).                 final DocIdSetIterator innerDocs = nested.innerDocs(context).                 final int maxChildren = nested.getNestedSort() != null ? nested.getNestedSort().getMaxChildren() : Integer.MAX_VALUE.                 selectedValues = sortMode.select(values, dMissingValue, rootDocs, innerDocs, context.reader().maxDoc(), maxChildren).             }             return selectedValues.         }     }. }
