commented;modifiers;parameterAmount;loc;comment;code
false;public;3;4;;public MultiGetRequestBuilder add(String index, @Nullable String type, String id) {     request.add(index, type, id).     return this. }
false;public;3;6;;public MultiGetRequestBuilder add(String index, @Nullable String type, Iterable<String> ids) {     for (String id : ids) {         request.add(index, type, id).     }     return this. }
false;public;3;6;;public MultiGetRequestBuilder add(String index, @Nullable String type, String... ids) {     for (String id : ids) {         request.add(index, type, id).     }     return this. }
false;public;1;4;;public MultiGetRequestBuilder add(MultiGetRequest.Item item) {     request.add(item).     return this. }
true;public;1;4;/**  * Sets the preference to execute the search. Defaults to randomize across shards. Can be set to  * {@code _local} to prefer local shards or a custom value, which guarantees that the same order  * will be used across different requests.  */ ;/**  * Sets the preference to execute the search. Defaults to randomize across shards. Can be set to  * {@code _local} to prefer local shards or a custom value, which guarantees that the same order  * will be used across different requests.  */ public MultiGetRequestBuilder setPreference(String preference) {     request.preference(preference).     return this. }
true;public;1;4;/**  * Should a refresh be executed before this get operation causing the operation to  * return the latest value. Note, heavy get should not set this to {@code true}. Defaults  * to {@code false}.  */ ;/**  * Should a refresh be executed before this get operation causing the operation to  * return the latest value. Note, heavy get should not set this to {@code true}. Defaults  * to {@code false}.  */ public MultiGetRequestBuilder setRefresh(boolean refresh) {     request.refresh(refresh).     return this. }
false;public;1;4;;public MultiGetRequestBuilder setRealtime(boolean realtime) {     request.realtime(realtime).     return this. }
