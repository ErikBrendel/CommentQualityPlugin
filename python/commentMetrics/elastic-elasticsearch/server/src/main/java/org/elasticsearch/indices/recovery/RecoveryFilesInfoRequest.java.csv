commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public long recoveryId() {     return this.recoveryId. }
false;public;0;3;;public ShardId shardId() {     return shardId. }
false;public;1;30;;@Override public void readFrom(StreamInput in) throws IOException {     super.readFrom(in).     recoveryId = in.readLong().     shardId = ShardId.readShardId(in).     int size = in.readVInt().     phase1FileNames = new ArrayList<>(size).     for (int i = 0. i < size. i++) {         phase1FileNames.add(in.readString()).     }     size = in.readVInt().     phase1FileSizes = new ArrayList<>(size).     for (int i = 0. i < size. i++) {         phase1FileSizes.add(in.readVLong()).     }     size = in.readVInt().     phase1ExistingFileNames = new ArrayList<>(size).     for (int i = 0. i < size. i++) {         phase1ExistingFileNames.add(in.readString()).     }     size = in.readVInt().     phase1ExistingFileSizes = new ArrayList<>(size).     for (int i = 0. i < size. i++) {         phase1ExistingFileSizes.add(in.readVLong()).     }     totalTranslogOps = in.readVInt(). }
false;public;1;27;;@Override public void writeTo(StreamOutput out) throws IOException {     super.writeTo(out).     out.writeLong(recoveryId).     shardId.writeTo(out).     out.writeVInt(phase1FileNames.size()).     for (String phase1FileName : phase1FileNames) {         out.writeString(phase1FileName).     }     out.writeVInt(phase1FileSizes.size()).     for (Long phase1FileSize : phase1FileSizes) {         out.writeVLong(phase1FileSize).     }     out.writeVInt(phase1ExistingFileNames.size()).     for (String phase1ExistingFileName : phase1ExistingFileNames) {         out.writeString(phase1ExistingFileName).     }     out.writeVInt(phase1ExistingFileSizes.size()).     for (Long phase1ExistingFileSize : phase1ExistingFileSizes) {         out.writeVLong(phase1ExistingFileSize).     }     out.writeVInt(totalTranslogOps). }
