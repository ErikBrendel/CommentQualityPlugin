commented;modifiers;parameterAmount;loc;comment;code
true;public;0;3;/**  * The name of the action. Must be unique across actions.  */ ;/**  * The name of the action. Must be unique across actions.  */ public String name() {     return this.name. }
true;public,abstract;0;2;/**  * Creates a new response instance.  * @deprecated Implement {@link #getResponseReader()} instead and make this method throw an  *             {@link UnsupportedOperationException}  */ ;/**  * Creates a new response instance.  * @deprecated Implement {@link #getResponseReader()} instead and make this method throw an  *             {@link UnsupportedOperationException}  */ @Deprecated public abstract Response newResponse().
true;public;0;7;/**  * Get a reader that can create a new instance of the class from a {@link org.elasticsearch.common.io.stream.StreamInput}  */ ;/**  * Get a reader that can create a new instance of the class from a {@link org.elasticsearch.common.io.stream.StreamInput}  */ public Writeable.Reader<Response> getResponseReader() {     return in -> {         Response response = newResponse().         response.readFrom(in).         return response.     }. }
true;public;1;3;/**  * Optional request options for the action.  */ ;/**  * Optional request options for the action.  */ public TransportRequestOptions transportOptions(Settings settings) {     return TransportRequestOptions.EMPTY. }
false;public;1;4;;@Override public boolean equals(Object o) {     return o instanceof Action && name.equals(((Action<?>) o).name()). }
false;public;0;4;;@Override public int hashCode() {     return name.hashCode(). }
