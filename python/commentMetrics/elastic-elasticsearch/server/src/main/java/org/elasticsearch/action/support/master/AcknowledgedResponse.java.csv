commented;modifiers;parameterAmount;loc;comment;code
false;protected,static;1;4;;protected static <T extends AcknowledgedResponse> void declareAcknowledgedField(ConstructingObjectParser<T, Void> objectParser) {     objectParser.declareField(constructorArg(), (parser, context) -> parser.booleanValue(), ACKNOWLEDGED, ObjectParser.ValueType.BOOLEAN). }
true;public,final;0;3;/**  * Returns whether the response is acknowledged or not  * @return true if the response is acknowledged, false otherwise  */ ;/**  * Returns whether the response is acknowledged or not  * @return true if the response is acknowledged, false otherwise  */ public final boolean isAcknowledged() {     return acknowledged. }
false;public;1;5;;@Override public void readFrom(StreamInput in) throws IOException {     super.readFrom(in).     acknowledged = in.readBoolean(). }
false;public;1;5;;@Override public void writeTo(StreamOutput out) throws IOException {     super.writeTo(out).     out.writeBoolean(acknowledged). }
false;public,final;2;8;;@Override public final XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.startObject().     builder.field(ACKNOWLEDGED.getPreferredName(), isAcknowledged()).     addCustomFields(builder, params).     builder.endObject().     return builder. }
false;protected;2;3;;protected void addCustomFields(XContentBuilder builder, Params params) throws IOException { }
false;public,static;1;3;;public static AcknowledgedResponse fromXContent(XContentParser parser) throws IOException {     return new AcknowledgedResponse(ACKNOWLEDGED_FLAG_PARSER.apply(parser, null)). }
false;public;1;11;;@Override public boolean equals(Object o) {     if (this == o) {         return true.     }     if (o == null || getClass() != o.getClass()) {         return false.     }     AcknowledgedResponse that = (AcknowledgedResponse) o.     return isAcknowledged() == that.isAcknowledged(). }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(isAcknowledged()). }
