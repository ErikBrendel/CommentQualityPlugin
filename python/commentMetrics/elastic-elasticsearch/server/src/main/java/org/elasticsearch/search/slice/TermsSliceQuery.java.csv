# id;timestamp;commentText;codeText;commentWords;codeWords
TermsSliceQuery -> private DocIdSet build(LeafReader reader) throws IOException;1524684173;Returns a DocIdSet per segments containing the matching docs for the specified slice.;private DocIdSet build(LeafReader reader) throws IOException {_        final DocIdSetBuilder builder = new DocIdSetBuilder(reader.maxDoc())__        final Terms terms = reader.terms(getField())__        final TermsEnum te = terms.iterator()__        PostingsEnum docsEnum = null__        for (BytesRef term = te.next()_ term != null_ term = te.next()) {_            _            _            int hashCode = StringHelper.murmurhash3_x86_32(term, SEED)__            if (contains(hashCode)) {_                docsEnum = te.postings(docsEnum, PostingsEnum.NONE)__                builder.add(docsEnum)__            }_        }_        return builder.build()__    };returns,a,doc,id,set,per,segments,containing,the,matching,docs,for,the,specified,slice;private,doc,id,set,build,leaf,reader,reader,throws,ioexception,final,doc,id,set,builder,builder,new,doc,id,set,builder,reader,max,doc,final,terms,terms,reader,terms,get,field,final,terms,enum,te,terms,iterator,postings,enum,docs,enum,null,for,bytes,ref,term,te,next,term,null,term,te,next,int,hash,code,string,helper,term,seed,if,contains,hash,code,docs,enum,te,postings,docs,enum,postings,enum,none,builder,add,docs,enum,return,builder,build
TermsSliceQuery -> private DocIdSet build(LeafReader reader) throws IOException;1536314350;Returns a DocIdSet per segments containing the matching docs for the specified slice.;private DocIdSet build(LeafReader reader) throws IOException {_        final DocIdSetBuilder builder = new DocIdSetBuilder(reader.maxDoc())__        final Terms terms = reader.terms(getField())__        final TermsEnum te = terms.iterator()__        PostingsEnum docsEnum = null__        for (BytesRef term = te.next()_ term != null_ term = te.next()) {_            _            _            int hashCode = StringHelper.murmurhash3_x86_32(term, SEED)__            if (contains(hashCode)) {_                docsEnum = te.postings(docsEnum, PostingsEnum.NONE)__                builder.add(docsEnum)__            }_        }_        return builder.build()__    };returns,a,doc,id,set,per,segments,containing,the,matching,docs,for,the,specified,slice;private,doc,id,set,build,leaf,reader,reader,throws,ioexception,final,doc,id,set,builder,builder,new,doc,id,set,builder,reader,max,doc,final,terms,terms,reader,terms,get,field,final,terms,enum,te,terms,iterator,postings,enum,docs,enum,null,for,bytes,ref,term,te,next,term,null,term,te,next,int,hash,code,string,helper,term,seed,if,contains,hash,code,docs,enum,te,postings,docs,enum,postings,enum,none,builder,add,docs,enum,return,builder,build
TermsSliceQuery -> private DocIdSet build(LeafReader reader) throws IOException;1542897779;Returns a DocIdSet per segments containing the matching docs for the specified slice.;private DocIdSet build(LeafReader reader) throws IOException {_        final DocIdSetBuilder builder = new DocIdSetBuilder(reader.maxDoc())__        final Terms terms = reader.terms(getField())__        final TermsEnum te = terms.iterator()__        PostingsEnum docsEnum = null__        for (BytesRef term = te.next()_ term != null_ term = te.next()) {_            _            _            int hashCode = StringHelper.murmurhash3_x86_32(term, SEED)__            if (contains(hashCode)) {_                docsEnum = te.postings(docsEnum, PostingsEnum.NONE)__                builder.add(docsEnum)__            }_        }_        return builder.build()__    };returns,a,doc,id,set,per,segments,containing,the,matching,docs,for,the,specified,slice;private,doc,id,set,build,leaf,reader,reader,throws,ioexception,final,doc,id,set,builder,builder,new,doc,id,set,builder,reader,max,doc,final,terms,terms,reader,terms,get,field,final,terms,enum,te,terms,iterator,postings,enum,docs,enum,null,for,bytes,ref,term,te,next,term,null,term,te,next,int,hash,code,string,helper,term,seed,if,contains,hash,code,docs,enum,te,postings,docs,enum,postings,enum,none,builder,add,docs,enum,return,builder,build
