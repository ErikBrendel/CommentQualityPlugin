commented;modifiers;parameterAmount;loc;comment;code
false;public,static;1;11;;public static ClusterRebalanceType parseString(String typeString) {     if ("always".equalsIgnoreCase(typeString)) {         return ClusterRebalanceType.ALWAYS.     } else if ("indices_primaries_active".equalsIgnoreCase(typeString) || "indicesPrimariesActive".equalsIgnoreCase(typeString)) {         return ClusterRebalanceType.INDICES_PRIMARIES_ACTIVE.     } else if ("indices_all_active".equalsIgnoreCase(typeString) || "indicesAllActive".equalsIgnoreCase(typeString)) {         return ClusterRebalanceType.INDICES_ALL_ACTIVE.     }     throw new IllegalArgumentException("Illegal value for " + CLUSTER_ROUTING_ALLOCATION_ALLOW_REBALANCE_SETTING + ": " + typeString). }
false;public;0;4;;@Override public String toString() {     return name().toLowerCase(Locale.ROOT). }
false;private;1;3;;private void setType(ClusterRebalanceType type) {     this.type = type. }
false;public;2;4;;@Override public Decision canRebalance(ShardRouting shardRouting, RoutingAllocation allocation) {     return canRebalance(allocation). }
false;public;1;36;;@Override public Decision canRebalance(RoutingAllocation allocation) {     if (type == ClusterRebalanceType.INDICES_PRIMARIES_ACTIVE) {         // check if there are unassigned primaries.         if (allocation.routingNodes().hasUnassignedPrimaries()) {             return allocation.decision(Decision.NO, NAME, "the cluster has unassigned primary shards and cluster setting [%s] is set to [%s]", CLUSTER_ROUTING_ALLOCATION_ALLOW_REBALANCE, type).         }         // check if there are initializing primaries that don't have a relocatingNodeId entry.         if (allocation.routingNodes().hasInactivePrimaries()) {             return allocation.decision(Decision.NO, NAME, "the cluster has inactive primary shards and cluster setting [%s] is set to [%s]", CLUSTER_ROUTING_ALLOCATION_ALLOW_REBALANCE, type).         }         return allocation.decision(Decision.YES, NAME, "all primary shards are active").     }     if (type == ClusterRebalanceType.INDICES_ALL_ACTIVE) {         // check if there are unassigned shards.         if (allocation.routingNodes().hasUnassignedShards()) {             return allocation.decision(Decision.NO, NAME, "the cluster has unassigned shards and cluster setting [%s] is set to [%s]", CLUSTER_ROUTING_ALLOCATION_ALLOW_REBALANCE, type).         }         // are not relocating?         if (allocation.routingNodes().hasInactiveShards()) {             return allocation.decision(Decision.NO, NAME, "the cluster has inactive shards and cluster setting [%s] is set to [%s]", CLUSTER_ROUTING_ALLOCATION_ALLOW_REBALANCE, type).         }     }     // type == Type.ALWAYS     return allocation.decision(Decision.YES, NAME, "all shards are active"). }
