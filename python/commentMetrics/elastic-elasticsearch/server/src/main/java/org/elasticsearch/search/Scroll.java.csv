commented;modifiers;parameterAmount;loc;comment;code
true;public;0;3;/**  * How long the resources will be kept open to support the scroll request.  */ ;/**  * How long the resources will be kept open to support the scroll request.  */ public TimeValue keepAlive() {     return keepAlive. }
false;public;1;4;;@Override public void writeTo(StreamOutput out) throws IOException {     out.writeTimeValue(keepAlive). }
false;public;1;11;;@Override public boolean equals(Object o) {     if (this == o) {         return true.     }     if (o == null || getClass() != o.getClass()) {         return false.     }     Scroll scroll = (Scroll) o.     return Objects.equals(keepAlive, scroll.keepAlive). }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(keepAlive). }
false;public;0;4;;@Override public String toString() {     return "Scroll{keepAlive=" + keepAlive + '}'. }
