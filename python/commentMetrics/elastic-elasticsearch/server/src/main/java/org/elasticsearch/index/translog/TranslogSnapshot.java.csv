commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public int totalOperations() {     return totalOperations. }
false;;0;3;;int skippedOperations() {     return skippedOperations. }
false;;0;4;;@Override Checkpoint getCheckpoint() {     return checkpoint. }
false;public;0;10;;public Translog.Operation next() throws IOException {     while (readOperations < totalOperations) {         final Translog.Operation operation = readOperation().         if (operation.seqNo() <= checkpoint.trimmedAboveSeqNo || checkpoint.trimmedAboveSeqNo == SequenceNumbers.UNASSIGNED_SEQ_NO) {             return operation.         }         skippedOperations++.     }     return null. }
false;protected;0;8;;protected Translog.Operation readOperation() throws IOException {     final int opSize = readSize(reusableBuffer, position).     reuse = checksummedStream(reusableBuffer, position, opSize, reuse).     Translog.Operation op = read(reuse).     position += opSize.     readOperations++.     return op. }
false;public;0;3;;public long sizeInBytes() {     return length. }
true;protected;2;11;/**  * reads an operation at the given position into the given buffer.  */ ;/**  * reads an operation at the given position into the given buffer.  */ protected void readBytes(ByteBuffer buffer, long position) throws IOException {     if (position >= length) {         throw new EOFException("read requested past EOF. pos [" + position + "] end: [" + length + "], generation: [" + getGeneration() + "], path: [" + path + "]").     }     if (position < getFirstOperationOffset()) {         throw new IOException("read requested before position of first ops. pos [" + position + "] first op on: [" + getFirstOperationOffset() + "], generation: [" + getGeneration() + "], path: [" + path + "]").     }     Channels.readFromFileChannelWithEofException(channel, position, buffer). }
false;public;0;11;;@Override public String toString() {     return "TranslogSnapshot{" + "readOperations=" + readOperations + ", position=" + position + ", estimateTotalOperations=" + totalOperations + ", length=" + length + ", generation=" + generation + ", reusableBuffer=" + reusableBuffer + '}'. }
