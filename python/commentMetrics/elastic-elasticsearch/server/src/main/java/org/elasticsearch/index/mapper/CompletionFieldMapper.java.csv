# id;timestamp;commentText;codeText;commentWords;codeWords
CompletionFieldMapper -> private void parse(ParseContext parseContext, Token token, XContentParser parser, Map<String, CompletionInputMetaData> inputMap) throws IOException;1524684173;Acceptable inputs:_"STRING" - interpreted as the field value (input)_"OBJECT" - { "input": STRING|ARRAY, "weight": STRING|INT, "contexts": ARRAY|OBJECT };private void parse(ParseContext parseContext, Token token, XContentParser parser, Map<String, CompletionInputMetaData> inputMap) throws IOException {_        String currentFieldName = null__        if (token == Token.VALUE_STRING) {_            inputMap.put(parser.text(), new CompletionInputMetaData(Collections.<String, Set<CharSequence>>emptyMap(), 1))__        } else if (token == Token.START_OBJECT) {_            Set<String> inputs = new HashSet<>()__            int weight = 1__            Map<String, Set<CharSequence>> contextsMap = new HashMap<>()__            while ((token = parser.nextToken()) != Token.END_OBJECT) {_                if (token == Token.FIELD_NAME) {_                    currentFieldName = parser.currentName()__                    if (!ALLOWED_CONTENT_FIELD_NAMES.contains(currentFieldName)) {_                        throw new IllegalArgumentException("unknown field name [" + currentFieldName + "], must be one of " + ALLOWED_CONTENT_FIELD_NAMES)__                    }_                } else if (currentFieldName != null) {_                    if (Fields.CONTENT_FIELD_NAME_INPUT.equals(currentFieldName)) {_                        if (token == Token.VALUE_STRING) {_                            inputs.add(parser.text())__                        } else if (token == Token.START_ARRAY) {_                            while ((token = parser.nextToken()) != Token.END_ARRAY) {_                                if (token == Token.VALUE_STRING) {_                                    inputs.add(parser.text())__                                } else {_                                    throw new IllegalArgumentException("input array must have string values, but was [" + token.name() + "]")__                                }_                            }_                        } else {_                            throw new IllegalArgumentException("input must be a string or array, but was [" + token.name() + "]")__                        }_                    } else if (Fields.CONTENT_FIELD_NAME_WEIGHT.equals(currentFieldName)) {_                        final Number weightValue__                        if (token == Token.VALUE_STRING) {_                            try {_                                weightValue = Long.parseLong(parser.text())__                            } catch (NumberFormatException e) {_                                throw new IllegalArgumentException("weight must be an integer, but was [" + parser.text() + "]")__                            }_                        } else if (token == Token.VALUE_NUMBER) {_                            NumberType numberType = parser.numberType()__                            if (NumberType.LONG != numberType && NumberType.INT != numberType) {_                                throw new IllegalArgumentException("weight must be an integer, but was [" + parser.numberValue() + "]")__                            }_                            weightValue = parser.numberValue()__                        } else {_                            throw new IllegalArgumentException("weight must be a number or string, but was [" + token.name() + "]")__                        }_                        if (weightValue.longValue() < 0 || weightValue.longValue() > Integer.MAX_VALUE) { _                            throw new IllegalArgumentException("weight must be in the interval [0..2147483647], but was [" + weightValue.longValue() + "]")__                        }_                        weight = weightValue.intValue()__                    } else if (Fields.CONTENT_FIELD_NAME_CONTEXTS.equals(currentFieldName)) {_                        if (fieldType().hasContextMappings() == false) {_                            throw new IllegalArgumentException("contexts field is not supported for field: [" + fieldType().name() + "]")__                        }_                        ContextMappings contextMappings = fieldType().getContextMappings()__                        XContentParser.Token currentToken = parser.currentToken()__                        if (currentToken == XContentParser.Token.START_OBJECT) {_                            ContextMapping contextMapping = null__                            String fieldName = null__                            while ((currentToken = parser.nextToken()) != XContentParser.Token.END_OBJECT) {_                                if (currentToken == XContentParser.Token.FIELD_NAME) {_                                    fieldName = parser.currentName()__                                    contextMapping = contextMappings.get(fieldName)__                                } else {_                                    assert fieldName != null__                                    assert !contextsMap.containsKey(fieldName)__                                    contextsMap.put(fieldName, contextMapping.parseContext(parseContext, parser))__                                }_                            }_                        } else {_                            throw new IllegalArgumentException("contexts must be an object or an array , but was [" + currentToken + "]")__                        }_                    }_                }_            }_            for (String input : inputs) {_                if (inputMap.containsKey(input) == false || inputMap.get(input).weight < weight) {_                    inputMap.put(input, new CompletionInputMetaData(contextsMap, weight))__                }_            }_        } else {_            throw new ParsingException(parser.getTokenLocation(), "failed to parse [" + parser.currentName() + "]: expected text or object, but got " + token.name())__        }_    };acceptable,inputs,string,interpreted,as,the,field,value,input,object,input,string,array,weight,string,int,contexts,array,object;private,void,parse,parse,context,parse,context,token,token,xcontent,parser,parser,map,string,completion,input,meta,data,input,map,throws,ioexception,string,current,field,name,null,if,token,token,input,map,put,parser,text,new,completion,input,meta,data,collections,string,set,char,sequence,empty,map,1,else,if,token,token,set,string,inputs,new,hash,set,int,weight,1,map,string,set,char,sequence,contexts,map,new,hash,map,while,token,parser,next,token,token,if,token,token,current,field,name,parser,current,name,if,contains,current,field,name,throw,new,illegal,argument,exception,unknown,field,name,current,field,name,must,be,one,of,else,if,current,field,name,null,if,fields,equals,current,field,name,if,token,token,inputs,add,parser,text,else,if,token,token,while,token,parser,next,token,token,if,token,token,inputs,add,parser,text,else,throw,new,illegal,argument,exception,input,array,must,have,string,values,but,was,token,name,else,throw,new,illegal,argument,exception,input,must,be,a,string,or,array,but,was,token,name,else,if,fields,equals,current,field,name,final,number,weight,value,if,token,token,try,weight,value,long,parse,long,parser,text,catch,number,format,exception,e,throw,new,illegal,argument,exception,weight,must,be,an,integer,but,was,parser,text,else,if,token,token,number,type,number,type,parser,number,type,if,number,type,long,number,type,number,type,int,number,type,throw,new,illegal,argument,exception,weight,must,be,an,integer,but,was,parser,number,value,weight,value,parser,number,value,else,throw,new,illegal,argument,exception,weight,must,be,a,number,or,string,but,was,token,name,if,weight,value,long,value,0,weight,value,long,value,integer,throw,new,illegal,argument,exception,weight,must,be,in,the,interval,0,2147483647,but,was,weight,value,long,value,weight,weight,value,int,value,else,if,fields,equals,current,field,name,if,field,type,has,context,mappings,false,throw,new,illegal,argument,exception,contexts,field,is,not,supported,for,field,field,type,name,context,mappings,context,mappings,field,type,get,context,mappings,xcontent,parser,token,current,token,parser,current,token,if,current,token,xcontent,parser,token,context,mapping,context,mapping,null,string,field,name,null,while,current,token,parser,next,token,xcontent,parser,token,if,current,token,xcontent,parser,token,field,name,parser,current,name,context,mapping,context,mappings,get,field,name,else,assert,field,name,null,assert,contexts,map,contains,key,field,name,contexts,map,put,field,name,context,mapping,parse,context,parse,context,parser,else,throw,new,illegal,argument,exception,contexts,must,be,an,object,or,an,array,but,was,current,token,for,string,input,inputs,if,input,map,contains,key,input,false,input,map,get,input,weight,weight,input,map,put,input,new,completion,input,meta,data,contexts,map,weight,else,throw,new,parsing,exception,parser,get,token,location,failed,to,parse,parser,current,name,expected,text,or,object,but,got,token,name
CompletionFieldMapper -> private void parse(ParseContext parseContext, Token token, XContentParser parser, Map<String, CompletionInputMetaData> inputMap) throws IOException;1526981569;Acceptable inputs:_"STRING" - interpreted as the field value (input)_"OBJECT" - { "input": STRING|ARRAY, "weight": STRING|INT, "contexts": ARRAY|OBJECT };private void parse(ParseContext parseContext, Token token, XContentParser parser, Map<String, CompletionInputMetaData> inputMap) throws IOException {_        String currentFieldName = null__        if (token == Token.VALUE_STRING) {_            inputMap.put(parser.text(), new CompletionInputMetaData(Collections.<String, Set<CharSequence>>emptyMap(), 1))__        } else if (token == Token.START_OBJECT) {_            Set<String> inputs = new HashSet<>()__            int weight = 1__            Map<String, Set<CharSequence>> contextsMap = new HashMap<>()__            while ((token = parser.nextToken()) != Token.END_OBJECT) {_                if (token == Token.FIELD_NAME) {_                    currentFieldName = parser.currentName()__                    if (!ALLOWED_CONTENT_FIELD_NAMES.contains(currentFieldName)) {_                        throw new IllegalArgumentException("unknown field name [" + currentFieldName + "], must be one of " + ALLOWED_CONTENT_FIELD_NAMES)__                    }_                } else if (currentFieldName != null) {_                    if (Fields.CONTENT_FIELD_NAME_INPUT.equals(currentFieldName)) {_                        if (token == Token.VALUE_STRING) {_                            inputs.add(parser.text())__                        } else if (token == Token.START_ARRAY) {_                            while ((token = parser.nextToken()) != Token.END_ARRAY) {_                                if (token == Token.VALUE_STRING) {_                                    inputs.add(parser.text())__                                } else {_                                    throw new IllegalArgumentException("input array must have string values, but was [" + token.name() + "]")__                                }_                            }_                        } else {_                            throw new IllegalArgumentException("input must be a string or array, but was [" + token.name() + "]")__                        }_                    } else if (Fields.CONTENT_FIELD_NAME_WEIGHT.equals(currentFieldName)) {_                        final Number weightValue__                        if (token == Token.VALUE_STRING) {_                            try {_                                weightValue = Long.parseLong(parser.text())__                            } catch (NumberFormatException e) {_                                throw new IllegalArgumentException("weight must be an integer, but was [" + parser.text() + "]")__                            }_                        } else if (token == Token.VALUE_NUMBER) {_                            NumberType numberType = parser.numberType()__                            if (NumberType.LONG != numberType && NumberType.INT != numberType) {_                                throw new IllegalArgumentException("weight must be an integer, but was [" + parser.numberValue() + "]")__                            }_                            weightValue = parser.numberValue()__                        } else {_                            throw new IllegalArgumentException("weight must be a number or string, but was [" + token.name() + "]")__                        }_                        if (weightValue.longValue() < 0 || weightValue.longValue() > Integer.MAX_VALUE) { _                            throw new IllegalArgumentException("weight must be in the interval [0..2147483647], but was [" + weightValue.longValue() + "]")__                        }_                        weight = weightValue.intValue()__                    } else if (Fields.CONTENT_FIELD_NAME_CONTEXTS.equals(currentFieldName)) {_                        if (fieldType().hasContextMappings() == false) {_                            throw new IllegalArgumentException("contexts field is not supported for field: [" + fieldType().name() + "]")__                        }_                        ContextMappings contextMappings = fieldType().getContextMappings()__                        XContentParser.Token currentToken = parser.currentToken()__                        if (currentToken == XContentParser.Token.START_OBJECT) {_                            ContextMapping contextMapping = null__                            String fieldName = null__                            while ((currentToken = parser.nextToken()) != XContentParser.Token.END_OBJECT) {_                                if (currentToken == XContentParser.Token.FIELD_NAME) {_                                    fieldName = parser.currentName()__                                    contextMapping = contextMappings.get(fieldName)__                                } else {_                                    assert fieldName != null__                                    assert !contextsMap.containsKey(fieldName)__                                    contextsMap.put(fieldName, contextMapping.parseContext(parseContext, parser))__                                }_                            }_                        } else {_                            throw new IllegalArgumentException("contexts must be an object or an array , but was [" + currentToken + "]")__                        }_                    }_                }_            }_            for (String input : inputs) {_                if (inputMap.containsKey(input) == false || inputMap.get(input).weight < weight) {_                    inputMap.put(input, new CompletionInputMetaData(contextsMap, weight))__                }_            }_        } else {_            throw new ParsingException(parser.getTokenLocation(), "failed to parse [" + parser.currentName() + "]: expected text or object, but got " + token.name())__        }_    };acceptable,inputs,string,interpreted,as,the,field,value,input,object,input,string,array,weight,string,int,contexts,array,object;private,void,parse,parse,context,parse,context,token,token,xcontent,parser,parser,map,string,completion,input,meta,data,input,map,throws,ioexception,string,current,field,name,null,if,token,token,input,map,put,parser,text,new,completion,input,meta,data,collections,string,set,char,sequence,empty,map,1,else,if,token,token,set,string,inputs,new,hash,set,int,weight,1,map,string,set,char,sequence,contexts,map,new,hash,map,while,token,parser,next,token,token,if,token,token,current,field,name,parser,current,name,if,contains,current,field,name,throw,new,illegal,argument,exception,unknown,field,name,current,field,name,must,be,one,of,else,if,current,field,name,null,if,fields,equals,current,field,name,if,token,token,inputs,add,parser,text,else,if,token,token,while,token,parser,next,token,token,if,token,token,inputs,add,parser,text,else,throw,new,illegal,argument,exception,input,array,must,have,string,values,but,was,token,name,else,throw,new,illegal,argument,exception,input,must,be,a,string,or,array,but,was,token,name,else,if,fields,equals,current,field,name,final,number,weight,value,if,token,token,try,weight,value,long,parse,long,parser,text,catch,number,format,exception,e,throw,new,illegal,argument,exception,weight,must,be,an,integer,but,was,parser,text,else,if,token,token,number,type,number,type,parser,number,type,if,number,type,long,number,type,number,type,int,number,type,throw,new,illegal,argument,exception,weight,must,be,an,integer,but,was,parser,number,value,weight,value,parser,number,value,else,throw,new,illegal,argument,exception,weight,must,be,a,number,or,string,but,was,token,name,if,weight,value,long,value,0,weight,value,long,value,integer,throw,new,illegal,argument,exception,weight,must,be,in,the,interval,0,2147483647,but,was,weight,value,long,value,weight,weight,value,int,value,else,if,fields,equals,current,field,name,if,field,type,has,context,mappings,false,throw,new,illegal,argument,exception,contexts,field,is,not,supported,for,field,field,type,name,context,mappings,context,mappings,field,type,get,context,mappings,xcontent,parser,token,current,token,parser,current,token,if,current,token,xcontent,parser,token,context,mapping,context,mapping,null,string,field,name,null,while,current,token,parser,next,token,xcontent,parser,token,if,current,token,xcontent,parser,token,field,name,parser,current,name,context,mapping,context,mappings,get,field,name,else,assert,field,name,null,assert,contexts,map,contains,key,field,name,contexts,map,put,field,name,context,mapping,parse,context,parse,context,parser,else,throw,new,illegal,argument,exception,contexts,must,be,an,object,or,an,array,but,was,current,token,for,string,input,inputs,if,input,map,contains,key,input,false,input,map,get,input,weight,weight,input,map,put,input,new,completion,input,meta,data,contexts,map,weight,else,throw,new,parsing,exception,parser,get,token,location,failed,to,parse,parser,current,name,expected,text,or,object,but,got,token,name
CompletionFieldMapper -> private void parse(ParseContext parseContext, Token token, XContentParser parser, Map<String, CompletionInputMetaData> inputMap) throws IOException;1527840262;Acceptable inputs:_"STRING" - interpreted as the field value (input)_"OBJECT" - { "input": STRING|ARRAY, "weight": STRING|INT, "contexts": ARRAY|OBJECT };private void parse(ParseContext parseContext, Token token, XContentParser parser, Map<String, CompletionInputMetaData> inputMap) throws IOException {_        String currentFieldName = null__        if (token == Token.VALUE_STRING) {_            inputMap.put(parser.text(), new CompletionInputMetaData(Collections.<String, Set<CharSequence>>emptyMap(), 1))__        } else if (token == Token.START_OBJECT) {_            Set<String> inputs = new HashSet<>()__            int weight = 1__            Map<String, Set<CharSequence>> contextsMap = new HashMap<>()__            while ((token = parser.nextToken()) != Token.END_OBJECT) {_                if (token == Token.FIELD_NAME) {_                    currentFieldName = parser.currentName()__                    if (!ALLOWED_CONTENT_FIELD_NAMES.contains(currentFieldName)) {_                        throw new IllegalArgumentException("unknown field name [" + currentFieldName + "], must be one of " + ALLOWED_CONTENT_FIELD_NAMES)__                    }_                } else if (currentFieldName != null) {_                    if (Fields.CONTENT_FIELD_NAME_INPUT.equals(currentFieldName)) {_                        if (token == Token.VALUE_STRING) {_                            inputs.add(parser.text())__                        } else if (token == Token.START_ARRAY) {_                            while ((token = parser.nextToken()) != Token.END_ARRAY) {_                                if (token == Token.VALUE_STRING) {_                                    inputs.add(parser.text())__                                } else {_                                    throw new IllegalArgumentException("input array must have string values, but was [" + token.name() + "]")__                                }_                            }_                        } else {_                            throw new IllegalArgumentException("input must be a string or array, but was [" + token.name() + "]")__                        }_                    } else if (Fields.CONTENT_FIELD_NAME_WEIGHT.equals(currentFieldName)) {_                        final Number weightValue__                        if (token == Token.VALUE_STRING) {_                            try {_                                weightValue = Long.parseLong(parser.text())__                            } catch (NumberFormatException e) {_                                throw new IllegalArgumentException("weight must be an integer, but was [" + parser.text() + "]")__                            }_                        } else if (token == Token.VALUE_NUMBER) {_                            NumberType numberType = parser.numberType()__                            if (NumberType.LONG != numberType && NumberType.INT != numberType) {_                                throw new IllegalArgumentException("weight must be an integer, but was [" + parser.numberValue() + "]")__                            }_                            weightValue = parser.numberValue()__                        } else {_                            throw new IllegalArgumentException("weight must be a number or string, but was [" + token.name() + "]")__                        }_                        if (weightValue.longValue() < 0 || weightValue.longValue() > Integer.MAX_VALUE) { _                            throw new IllegalArgumentException("weight must be in the interval [0..2147483647], but was [" + weightValue.longValue() + "]")__                        }_                        weight = weightValue.intValue()__                    } else if (Fields.CONTENT_FIELD_NAME_CONTEXTS.equals(currentFieldName)) {_                        if (fieldType().hasContextMappings() == false) {_                            throw new IllegalArgumentException("contexts field is not supported for field: [" + fieldType().name() + "]")__                        }_                        ContextMappings contextMappings = fieldType().getContextMappings()__                        XContentParser.Token currentToken = parser.currentToken()__                        if (currentToken == XContentParser.Token.START_OBJECT) {_                            ContextMapping contextMapping = null__                            String fieldName = null__                            while ((currentToken = parser.nextToken()) != XContentParser.Token.END_OBJECT) {_                                if (currentToken == XContentParser.Token.FIELD_NAME) {_                                    fieldName = parser.currentName()__                                    contextMapping = contextMappings.get(fieldName)__                                } else {_                                    assert fieldName != null__                                    assert !contextsMap.containsKey(fieldName)__                                    contextsMap.put(fieldName, contextMapping.parseContext(parseContext, parser))__                                }_                            }_                        } else {_                            throw new IllegalArgumentException("contexts must be an object or an array , but was [" + currentToken + "]")__                        }_                    }_                }_            }_            for (String input : inputs) {_                if (inputMap.containsKey(input) == false || inputMap.get(input).weight < weight) {_                    inputMap.put(input, new CompletionInputMetaData(contextsMap, weight))__                }_            }_        } else {_            throw new ParsingException(parser.getTokenLocation(), "failed to parse [" + parser.currentName() + "]: expected text or object, but got " + token.name())__        }_    };acceptable,inputs,string,interpreted,as,the,field,value,input,object,input,string,array,weight,string,int,contexts,array,object;private,void,parse,parse,context,parse,context,token,token,xcontent,parser,parser,map,string,completion,input,meta,data,input,map,throws,ioexception,string,current,field,name,null,if,token,token,input,map,put,parser,text,new,completion,input,meta,data,collections,string,set,char,sequence,empty,map,1,else,if,token,token,set,string,inputs,new,hash,set,int,weight,1,map,string,set,char,sequence,contexts,map,new,hash,map,while,token,parser,next,token,token,if,token,token,current,field,name,parser,current,name,if,contains,current,field,name,throw,new,illegal,argument,exception,unknown,field,name,current,field,name,must,be,one,of,else,if,current,field,name,null,if,fields,equals,current,field,name,if,token,token,inputs,add,parser,text,else,if,token,token,while,token,parser,next,token,token,if,token,token,inputs,add,parser,text,else,throw,new,illegal,argument,exception,input,array,must,have,string,values,but,was,token,name,else,throw,new,illegal,argument,exception,input,must,be,a,string,or,array,but,was,token,name,else,if,fields,equals,current,field,name,final,number,weight,value,if,token,token,try,weight,value,long,parse,long,parser,text,catch,number,format,exception,e,throw,new,illegal,argument,exception,weight,must,be,an,integer,but,was,parser,text,else,if,token,token,number,type,number,type,parser,number,type,if,number,type,long,number,type,number,type,int,number,type,throw,new,illegal,argument,exception,weight,must,be,an,integer,but,was,parser,number,value,weight,value,parser,number,value,else,throw,new,illegal,argument,exception,weight,must,be,a,number,or,string,but,was,token,name,if,weight,value,long,value,0,weight,value,long,value,integer,throw,new,illegal,argument,exception,weight,must,be,in,the,interval,0,2147483647,but,was,weight,value,long,value,weight,weight,value,int,value,else,if,fields,equals,current,field,name,if,field,type,has,context,mappings,false,throw,new,illegal,argument,exception,contexts,field,is,not,supported,for,field,field,type,name,context,mappings,context,mappings,field,type,get,context,mappings,xcontent,parser,token,current,token,parser,current,token,if,current,token,xcontent,parser,token,context,mapping,context,mapping,null,string,field,name,null,while,current,token,parser,next,token,xcontent,parser,token,if,current,token,xcontent,parser,token,field,name,parser,current,name,context,mapping,context,mappings,get,field,name,else,assert,field,name,null,assert,contexts,map,contains,key,field,name,contexts,map,put,field,name,context,mapping,parse,context,parse,context,parser,else,throw,new,illegal,argument,exception,contexts,must,be,an,object,or,an,array,but,was,current,token,for,string,input,inputs,if,input,map,contains,key,input,false,input,map,get,input,weight,weight,input,map,put,input,new,completion,input,meta,data,contexts,map,weight,else,throw,new,parsing,exception,parser,get,token,location,failed,to,parse,parser,current,name,expected,text,or,object,but,got,token,name
CompletionFieldMapper -> private void parse(ParseContext parseContext, Token token, XContentParser parser, Map<String, CompletionInputMetaData> inputMap) throws IOException;1536137328;Acceptable inputs:_"STRING" - interpreted as the field value (input)_"OBJECT" - { "input": STRING|ARRAY, "weight": STRING|INT, "contexts": ARRAY|OBJECT };private void parse(ParseContext parseContext, Token token, XContentParser parser, Map<String, CompletionInputMetaData> inputMap) throws IOException {_        String currentFieldName = null__        if (token == Token.VALUE_STRING) {_            inputMap.put(parser.text(), new CompletionInputMetaData(Collections.<String, Set<CharSequence>>emptyMap(), 1))__        } else if (token == Token.START_OBJECT) {_            Set<String> inputs = new HashSet<>()__            int weight = 1__            Map<String, Set<CharSequence>> contextsMap = new HashMap<>()__            while ((token = parser.nextToken()) != Token.END_OBJECT) {_                if (token == Token.FIELD_NAME) {_                    currentFieldName = parser.currentName()__                    if (!ALLOWED_CONTENT_FIELD_NAMES.contains(currentFieldName)) {_                        throw new IllegalArgumentException("unknown field name [" + currentFieldName + "], must be one of " + ALLOWED_CONTENT_FIELD_NAMES)__                    }_                } else if (currentFieldName != null) {_                    if (Fields.CONTENT_FIELD_NAME_INPUT.equals(currentFieldName)) {_                        if (token == Token.VALUE_STRING) {_                            inputs.add(parser.text())__                        } else if (token == Token.START_ARRAY) {_                            while ((token = parser.nextToken()) != Token.END_ARRAY) {_                                if (token == Token.VALUE_STRING) {_                                    inputs.add(parser.text())__                                } else {_                                    throw new IllegalArgumentException("input array must have string values, but was [" + token.name() + "]")__                                }_                            }_                        } else {_                            throw new IllegalArgumentException("input must be a string or array, but was [" + token.name() + "]")__                        }_                    } else if (Fields.CONTENT_FIELD_NAME_WEIGHT.equals(currentFieldName)) {_                        final Number weightValue__                        if (token == Token.VALUE_STRING) {_                            try {_                                weightValue = Long.parseLong(parser.text())__                            } catch (NumberFormatException e) {_                                throw new IllegalArgumentException("weight must be an integer, but was [" + parser.text() + "]")__                            }_                        } else if (token == Token.VALUE_NUMBER) {_                            NumberType numberType = parser.numberType()__                            if (NumberType.LONG != numberType && NumberType.INT != numberType) {_                                throw new IllegalArgumentException("weight must be an integer, but was [" + parser.numberValue() + "]")__                            }_                            weightValue = parser.numberValue()__                        } else {_                            throw new IllegalArgumentException("weight must be a number or string, but was [" + token.name() + "]")__                        }_                        if (weightValue.longValue() < 0 || weightValue.longValue() > Integer.MAX_VALUE) { _                            throw new IllegalArgumentException("weight must be in the interval [0..2147483647], but was [" + weightValue.longValue() + "]")__                        }_                        weight = weightValue.intValue()__                    } else if (Fields.CONTENT_FIELD_NAME_CONTEXTS.equals(currentFieldName)) {_                        if (fieldType().hasContextMappings() == false) {_                            throw new IllegalArgumentException("contexts field is not supported for field: [" + fieldType().name() + "]")__                        }_                        ContextMappings contextMappings = fieldType().getContextMappings()__                        XContentParser.Token currentToken = parser.currentToken()__                        if (currentToken == XContentParser.Token.START_OBJECT) {_                            ContextMapping contextMapping = null__                            String fieldName = null__                            while ((currentToken = parser.nextToken()) != XContentParser.Token.END_OBJECT) {_                                if (currentToken == XContentParser.Token.FIELD_NAME) {_                                    fieldName = parser.currentName()__                                    contextMapping = contextMappings.get(fieldName)__                                } else {_                                    assert fieldName != null__                                    assert !contextsMap.containsKey(fieldName)__                                    contextsMap.put(fieldName, contextMapping.parseContext(parseContext, parser))__                                }_                            }_                        } else {_                            throw new IllegalArgumentException("contexts must be an object or an array , but was [" + currentToken + "]")__                        }_                    }_                }_            }_            for (String input : inputs) {_                if (inputMap.containsKey(input) == false || inputMap.get(input).weight < weight) {_                    inputMap.put(input, new CompletionInputMetaData(contextsMap, weight))__                }_            }_        } else {_            throw new ParsingException(parser.getTokenLocation(), "failed to parse [" + parser.currentName() + "]: expected text or object, but got " + token.name())__        }_    };acceptable,inputs,string,interpreted,as,the,field,value,input,object,input,string,array,weight,string,int,contexts,array,object;private,void,parse,parse,context,parse,context,token,token,xcontent,parser,parser,map,string,completion,input,meta,data,input,map,throws,ioexception,string,current,field,name,null,if,token,token,input,map,put,parser,text,new,completion,input,meta,data,collections,string,set,char,sequence,empty,map,1,else,if,token,token,set,string,inputs,new,hash,set,int,weight,1,map,string,set,char,sequence,contexts,map,new,hash,map,while,token,parser,next,token,token,if,token,token,current,field,name,parser,current,name,if,contains,current,field,name,throw,new,illegal,argument,exception,unknown,field,name,current,field,name,must,be,one,of,else,if,current,field,name,null,if,fields,equals,current,field,name,if,token,token,inputs,add,parser,text,else,if,token,token,while,token,parser,next,token,token,if,token,token,inputs,add,parser,text,else,throw,new,illegal,argument,exception,input,array,must,have,string,values,but,was,token,name,else,throw,new,illegal,argument,exception,input,must,be,a,string,or,array,but,was,token,name,else,if,fields,equals,current,field,name,final,number,weight,value,if,token,token,try,weight,value,long,parse,long,parser,text,catch,number,format,exception,e,throw,new,illegal,argument,exception,weight,must,be,an,integer,but,was,parser,text,else,if,token,token,number,type,number,type,parser,number,type,if,number,type,long,number,type,number,type,int,number,type,throw,new,illegal,argument,exception,weight,must,be,an,integer,but,was,parser,number,value,weight,value,parser,number,value,else,throw,new,illegal,argument,exception,weight,must,be,a,number,or,string,but,was,token,name,if,weight,value,long,value,0,weight,value,long,value,integer,throw,new,illegal,argument,exception,weight,must,be,in,the,interval,0,2147483647,but,was,weight,value,long,value,weight,weight,value,int,value,else,if,fields,equals,current,field,name,if,field,type,has,context,mappings,false,throw,new,illegal,argument,exception,contexts,field,is,not,supported,for,field,field,type,name,context,mappings,context,mappings,field,type,get,context,mappings,xcontent,parser,token,current,token,parser,current,token,if,current,token,xcontent,parser,token,context,mapping,context,mapping,null,string,field,name,null,while,current,token,parser,next,token,xcontent,parser,token,if,current,token,xcontent,parser,token,field,name,parser,current,name,context,mapping,context,mappings,get,field,name,else,assert,field,name,null,assert,contexts,map,contains,key,field,name,contexts,map,put,field,name,context,mapping,parse,context,parse,context,parser,else,throw,new,illegal,argument,exception,contexts,must,be,an,object,or,an,array,but,was,current,token,for,string,input,inputs,if,input,map,contains,key,input,false,input,map,get,input,weight,weight,input,map,put,input,new,completion,input,meta,data,contexts,map,weight,else,throw,new,parsing,exception,parser,get,token,location,failed,to,parse,parser,current,name,expected,text,or,object,but,got,token,name
CompletionFieldMapper -> private void parse(ParseContext parseContext, Token token, XContentParser parser, Map<String, CompletionInputMetaData> inputMap) throws IOException;1538509426;Acceptable inputs:_"STRING" - interpreted as the field value (input)_"OBJECT" - { "input": STRING|ARRAY, "weight": STRING|INT, "contexts": ARRAY|OBJECT };private void parse(ParseContext parseContext, Token token, XContentParser parser, Map<String, CompletionInputMetaData> inputMap) throws IOException {_        String currentFieldName = null__        if (token == Token.VALUE_STRING) {_            inputMap.put(parser.text(), new CompletionInputMetaData(parser.text(), Collections.emptyMap(), 1))__        } else if (token == Token.START_OBJECT) {_            Set<String> inputs = new HashSet<>()__            int weight = 1__            Map<String, Set<CharSequence>> contextsMap = new HashMap<>()__            while ((token = parser.nextToken()) != Token.END_OBJECT) {_                if (token == Token.FIELD_NAME) {_                    currentFieldName = parser.currentName()__                    if (!ALLOWED_CONTENT_FIELD_NAMES.contains(currentFieldName)) {_                        throw new IllegalArgumentException("unknown field name [" + currentFieldName + "], must be one of " + ALLOWED_CONTENT_FIELD_NAMES)__                    }_                } else if (currentFieldName != null) {_                    if (Fields.CONTENT_FIELD_NAME_INPUT.equals(currentFieldName)) {_                        if (token == Token.VALUE_STRING) {_                            inputs.add(parser.text())__                        } else if (token == Token.START_ARRAY) {_                            while ((token = parser.nextToken()) != Token.END_ARRAY) {_                                if (token == Token.VALUE_STRING) {_                                    inputs.add(parser.text())__                                } else {_                                    throw new IllegalArgumentException("input array must have string values, but was [" + token.name() + "]")__                                }_                            }_                        } else {_                            throw new IllegalArgumentException("input must be a string or array, but was [" + token.name() + "]")__                        }_                    } else if (Fields.CONTENT_FIELD_NAME_WEIGHT.equals(currentFieldName)) {_                        final Number weightValue__                        if (token == Token.VALUE_STRING) {_                            try {_                                weightValue = Long.parseLong(parser.text())__                            } catch (NumberFormatException e) {_                                throw new IllegalArgumentException("weight must be an integer, but was [" + parser.text() + "]")__                            }_                        } else if (token == Token.VALUE_NUMBER) {_                            NumberType numberType = parser.numberType()__                            if (NumberType.LONG != numberType && NumberType.INT != numberType) {_                                throw new IllegalArgumentException("weight must be an integer, but was [" + parser.numberValue() + "]")__                            }_                            weightValue = parser.numberValue()__                        } else {_                            throw new IllegalArgumentException("weight must be a number or string, but was [" + token.name() + "]")__                        }_                        if (weightValue.longValue() < 0 || weightValue.longValue() > Integer.MAX_VALUE) { _                            throw new IllegalArgumentException("weight must be in the interval [0..2147483647], but was [" + weightValue.longValue() + "]")__                        }_                        weight = weightValue.intValue()__                    } else if (Fields.CONTENT_FIELD_NAME_CONTEXTS.equals(currentFieldName)) {_                        if (fieldType().hasContextMappings() == false) {_                            throw new IllegalArgumentException("contexts field is not supported for field: [" + fieldType().name() + "]")__                        }_                        ContextMappings contextMappings = fieldType().getContextMappings()__                        XContentParser.Token currentToken = parser.currentToken()__                        if (currentToken == XContentParser.Token.START_OBJECT) {_                            ContextMapping contextMapping = null__                            String fieldName = null__                            while ((currentToken = parser.nextToken()) != XContentParser.Token.END_OBJECT) {_                                if (currentToken == XContentParser.Token.FIELD_NAME) {_                                    fieldName = parser.currentName()__                                    contextMapping = contextMappings.get(fieldName)__                                } else {_                                    assert fieldName != null__                                    assert !contextsMap.containsKey(fieldName)__                                    contextsMap.put(fieldName, contextMapping.parseContext(parseContext, parser))__                                }_                            }_                        } else {_                            throw new IllegalArgumentException("contexts must be an object or an array , but was [" + currentToken + "]")__                        }_                    }_                }_            }_            for (String input : inputs) {_                if (inputMap.containsKey(input) == false || inputMap.get(input).weight < weight) {_                    inputMap.put(input, new CompletionInputMetaData(input, contextsMap, weight))__                }_            }_        } else {_            throw new ParsingException(parser.getTokenLocation(), "failed to parse [" + parser.currentName() + "]: expected text or object, but got " + token.name())__        }_    };acceptable,inputs,string,interpreted,as,the,field,value,input,object,input,string,array,weight,string,int,contexts,array,object;private,void,parse,parse,context,parse,context,token,token,xcontent,parser,parser,map,string,completion,input,meta,data,input,map,throws,ioexception,string,current,field,name,null,if,token,token,input,map,put,parser,text,new,completion,input,meta,data,parser,text,collections,empty,map,1,else,if,token,token,set,string,inputs,new,hash,set,int,weight,1,map,string,set,char,sequence,contexts,map,new,hash,map,while,token,parser,next,token,token,if,token,token,current,field,name,parser,current,name,if,contains,current,field,name,throw,new,illegal,argument,exception,unknown,field,name,current,field,name,must,be,one,of,else,if,current,field,name,null,if,fields,equals,current,field,name,if,token,token,inputs,add,parser,text,else,if,token,token,while,token,parser,next,token,token,if,token,token,inputs,add,parser,text,else,throw,new,illegal,argument,exception,input,array,must,have,string,values,but,was,token,name,else,throw,new,illegal,argument,exception,input,must,be,a,string,or,array,but,was,token,name,else,if,fields,equals,current,field,name,final,number,weight,value,if,token,token,try,weight,value,long,parse,long,parser,text,catch,number,format,exception,e,throw,new,illegal,argument,exception,weight,must,be,an,integer,but,was,parser,text,else,if,token,token,number,type,number,type,parser,number,type,if,number,type,long,number,type,number,type,int,number,type,throw,new,illegal,argument,exception,weight,must,be,an,integer,but,was,parser,number,value,weight,value,parser,number,value,else,throw,new,illegal,argument,exception,weight,must,be,a,number,or,string,but,was,token,name,if,weight,value,long,value,0,weight,value,long,value,integer,throw,new,illegal,argument,exception,weight,must,be,in,the,interval,0,2147483647,but,was,weight,value,long,value,weight,weight,value,int,value,else,if,fields,equals,current,field,name,if,field,type,has,context,mappings,false,throw,new,illegal,argument,exception,contexts,field,is,not,supported,for,field,field,type,name,context,mappings,context,mappings,field,type,get,context,mappings,xcontent,parser,token,current,token,parser,current,token,if,current,token,xcontent,parser,token,context,mapping,context,mapping,null,string,field,name,null,while,current,token,parser,next,token,xcontent,parser,token,if,current,token,xcontent,parser,token,field,name,parser,current,name,context,mapping,context,mappings,get,field,name,else,assert,field,name,null,assert,contexts,map,contains,key,field,name,contexts,map,put,field,name,context,mapping,parse,context,parse,context,parser,else,throw,new,illegal,argument,exception,contexts,must,be,an,object,or,an,array,but,was,current,token,for,string,input,inputs,if,input,map,contains,key,input,false,input,map,get,input,weight,weight,input,map,put,input,new,completion,input,meta,data,input,contexts,map,weight,else,throw,new,parsing,exception,parser,get,token,location,failed,to,parse,parser,current,name,expected,text,or,object,but,got,token,name
CompletionFieldMapper -> CompletionFieldType -> public CompletionQuery prefixQuery(Object value);1524684173;Completion prefix query;public CompletionQuery prefixQuery(Object value) {_            return new PrefixCompletionQuery(searchAnalyzer().analyzer(), new Term(name(), indexedValueForSearch(value)))__        };completion,prefix,query;public,completion,query,prefix,query,object,value,return,new,prefix,completion,query,search,analyzer,analyzer,new,term,name,indexed,value,for,search,value
CompletionFieldMapper -> CompletionFieldType -> public CompletionQuery prefixQuery(Object value);1526981569;Completion prefix query;public CompletionQuery prefixQuery(Object value) {_            return new PrefixCompletionQuery(searchAnalyzer().analyzer(), new Term(name(), indexedValueForSearch(value)))__        };completion,prefix,query;public,completion,query,prefix,query,object,value,return,new,prefix,completion,query,search,analyzer,analyzer,new,term,name,indexed,value,for,search,value
CompletionFieldMapper -> CompletionFieldType -> public CompletionQuery prefixQuery(Object value);1527840262;Completion prefix query;public CompletionQuery prefixQuery(Object value) {_            return new PrefixCompletionQuery(searchAnalyzer().analyzer(), new Term(name(), indexedValueForSearch(value)))__        };completion,prefix,query;public,completion,query,prefix,query,object,value,return,new,prefix,completion,query,search,analyzer,analyzer,new,term,name,indexed,value,for,search,value
CompletionFieldMapper -> CompletionFieldType -> public CompletionQuery prefixQuery(Object value);1536137328;Completion prefix query;public CompletionQuery prefixQuery(Object value) {_            return new PrefixCompletionQuery(searchAnalyzer().analyzer(), new Term(name(), indexedValueForSearch(value)))__        };completion,prefix,query;public,completion,query,prefix,query,object,value,return,new,prefix,completion,query,search,analyzer,analyzer,new,term,name,indexed,value,for,search,value
CompletionFieldMapper -> CompletionFieldType -> public CompletionQuery prefixQuery(Object value);1538509426;Completion prefix query;public CompletionQuery prefixQuery(Object value) {_            return new PrefixCompletionQuery(searchAnalyzer().analyzer(), new Term(name(), indexedValueForSearch(value)))__        };completion,prefix,query;public,completion,query,prefix,query,object,value,return,new,prefix,completion,query,search,analyzer,analyzer,new,term,name,indexed,value,for,search,value
CompletionFieldMapper -> CompletionFieldType -> public CompletionQuery prefixQuery(Object value);1541008027;Completion prefix query;public CompletionQuery prefixQuery(Object value) {_            return new PrefixCompletionQuery(searchAnalyzer().analyzer(), new Term(name(), indexedValueForSearch(value)))__        };completion,prefix,query;public,completion,query,prefix,query,object,value,return,new,prefix,completion,query,search,analyzer,analyzer,new,term,name,indexed,value,for,search,value
CompletionFieldMapper -> CompletionFieldType -> public CompletionQuery prefixQuery(Object value);1542357322;Completion prefix query;public CompletionQuery prefixQuery(Object value) {_            return new PrefixCompletionQuery(searchAnalyzer().analyzer(), new Term(name(), indexedValueForSearch(value)))__        };completion,prefix,query;public,completion,query,prefix,query,object,value,return,new,prefix,completion,query,search,analyzer,analyzer,new,term,name,indexed,value,for,search,value
CompletionFieldMapper -> CompletionFieldType -> public CompletionQuery prefixQuery(Object value);1550490699;Completion prefix query;public CompletionQuery prefixQuery(Object value) {_            return new PrefixCompletionQuery(searchAnalyzer().analyzer(), new Term(name(), indexedValueForSearch(value)))__        };completion,prefix,query;public,completion,query,prefix,query,object,value,return,new,prefix,completion,query,search,analyzer,analyzer,new,term,name,indexed,value,for,search,value
CompletionFieldMapper -> CompletionFieldType -> public CompletionQuery fuzzyQuery(String value, Fuzziness fuzziness, int nonFuzzyPrefixLength,                                           int minFuzzyPrefixLength, int maxExpansions, boolean transpositions,                                           boolean unicodeAware);1524684173;Completion prefix fuzzy query;public CompletionQuery fuzzyQuery(String value, Fuzziness fuzziness, int nonFuzzyPrefixLength,_                                          int minFuzzyPrefixLength, int maxExpansions, boolean transpositions,_                                          boolean unicodeAware) {_            return new FuzzyCompletionQuery(searchAnalyzer().analyzer(), new Term(name(), indexedValueForSearch(value)), null,_                    fuzziness.asDistance(), transpositions, nonFuzzyPrefixLength, minFuzzyPrefixLength,_                    unicodeAware, maxExpansions)__        };completion,prefix,fuzzy,query;public,completion,query,fuzzy,query,string,value,fuzziness,fuzziness,int,non,fuzzy,prefix,length,int,min,fuzzy,prefix,length,int,max,expansions,boolean,transpositions,boolean,unicode,aware,return,new,fuzzy,completion,query,search,analyzer,analyzer,new,term,name,indexed,value,for,search,value,null,fuzziness,as,distance,transpositions,non,fuzzy,prefix,length,min,fuzzy,prefix,length,unicode,aware,max,expansions
CompletionFieldMapper -> CompletionFieldType -> public CompletionQuery fuzzyQuery(String value, Fuzziness fuzziness, int nonFuzzyPrefixLength,                                           int minFuzzyPrefixLength, int maxExpansions, boolean transpositions,                                           boolean unicodeAware);1526981569;Completion prefix fuzzy query;public CompletionQuery fuzzyQuery(String value, Fuzziness fuzziness, int nonFuzzyPrefixLength,_                                          int minFuzzyPrefixLength, int maxExpansions, boolean transpositions,_                                          boolean unicodeAware) {_            return new FuzzyCompletionQuery(searchAnalyzer().analyzer(), new Term(name(), indexedValueForSearch(value)), null,_                    fuzziness.asDistance(), transpositions, nonFuzzyPrefixLength, minFuzzyPrefixLength,_                    unicodeAware, maxExpansions)__        };completion,prefix,fuzzy,query;public,completion,query,fuzzy,query,string,value,fuzziness,fuzziness,int,non,fuzzy,prefix,length,int,min,fuzzy,prefix,length,int,max,expansions,boolean,transpositions,boolean,unicode,aware,return,new,fuzzy,completion,query,search,analyzer,analyzer,new,term,name,indexed,value,for,search,value,null,fuzziness,as,distance,transpositions,non,fuzzy,prefix,length,min,fuzzy,prefix,length,unicode,aware,max,expansions
CompletionFieldMapper -> CompletionFieldType -> public CompletionQuery fuzzyQuery(String value, Fuzziness fuzziness, int nonFuzzyPrefixLength,                                           int minFuzzyPrefixLength, int maxExpansions, boolean transpositions,                                           boolean unicodeAware);1527840262;Completion prefix fuzzy query;public CompletionQuery fuzzyQuery(String value, Fuzziness fuzziness, int nonFuzzyPrefixLength,_                                          int minFuzzyPrefixLength, int maxExpansions, boolean transpositions,_                                          boolean unicodeAware) {_            return new FuzzyCompletionQuery(searchAnalyzer().analyzer(), new Term(name(), indexedValueForSearch(value)), null,_                    fuzziness.asDistance(), transpositions, nonFuzzyPrefixLength, minFuzzyPrefixLength,_                    unicodeAware, maxExpansions)__        };completion,prefix,fuzzy,query;public,completion,query,fuzzy,query,string,value,fuzziness,fuzziness,int,non,fuzzy,prefix,length,int,min,fuzzy,prefix,length,int,max,expansions,boolean,transpositions,boolean,unicode,aware,return,new,fuzzy,completion,query,search,analyzer,analyzer,new,term,name,indexed,value,for,search,value,null,fuzziness,as,distance,transpositions,non,fuzzy,prefix,length,min,fuzzy,prefix,length,unicode,aware,max,expansions
CompletionFieldMapper -> CompletionFieldType -> public CompletionQuery fuzzyQuery(String value, Fuzziness fuzziness, int nonFuzzyPrefixLength,                                           int minFuzzyPrefixLength, int maxExpansions, boolean transpositions,                                           boolean unicodeAware);1536137328;Completion prefix fuzzy query;public CompletionQuery fuzzyQuery(String value, Fuzziness fuzziness, int nonFuzzyPrefixLength,_                                          int minFuzzyPrefixLength, int maxExpansions, boolean transpositions,_                                          boolean unicodeAware) {_            return new FuzzyCompletionQuery(searchAnalyzer().analyzer(), new Term(name(), indexedValueForSearch(value)), null,_                    fuzziness.asDistance(), transpositions, nonFuzzyPrefixLength, minFuzzyPrefixLength,_                    unicodeAware, maxExpansions)__        };completion,prefix,fuzzy,query;public,completion,query,fuzzy,query,string,value,fuzziness,fuzziness,int,non,fuzzy,prefix,length,int,min,fuzzy,prefix,length,int,max,expansions,boolean,transpositions,boolean,unicode,aware,return,new,fuzzy,completion,query,search,analyzer,analyzer,new,term,name,indexed,value,for,search,value,null,fuzziness,as,distance,transpositions,non,fuzzy,prefix,length,min,fuzzy,prefix,length,unicode,aware,max,expansions
CompletionFieldMapper -> CompletionFieldType -> public CompletionQuery fuzzyQuery(String value, Fuzziness fuzziness, int nonFuzzyPrefixLength,                                           int minFuzzyPrefixLength, int maxExpansions, boolean transpositions,                                           boolean unicodeAware);1538509426;Completion prefix fuzzy query;public CompletionQuery fuzzyQuery(String value, Fuzziness fuzziness, int nonFuzzyPrefixLength,_                                          int minFuzzyPrefixLength, int maxExpansions, boolean transpositions,_                                          boolean unicodeAware) {_            return new FuzzyCompletionQuery(searchAnalyzer().analyzer(), new Term(name(), indexedValueForSearch(value)), null,_                    fuzziness.asDistance(), transpositions, nonFuzzyPrefixLength, minFuzzyPrefixLength,_                    unicodeAware, maxExpansions)__        };completion,prefix,fuzzy,query;public,completion,query,fuzzy,query,string,value,fuzziness,fuzziness,int,non,fuzzy,prefix,length,int,min,fuzzy,prefix,length,int,max,expansions,boolean,transpositions,boolean,unicode,aware,return,new,fuzzy,completion,query,search,analyzer,analyzer,new,term,name,indexed,value,for,search,value,null,fuzziness,as,distance,transpositions,non,fuzzy,prefix,length,min,fuzzy,prefix,length,unicode,aware,max,expansions
CompletionFieldMapper -> CompletionFieldType -> public CompletionQuery fuzzyQuery(String value, Fuzziness fuzziness, int nonFuzzyPrefixLength,                                           int minFuzzyPrefixLength, int maxExpansions, boolean transpositions,                                           boolean unicodeAware);1541008027;Completion prefix fuzzy query;public CompletionQuery fuzzyQuery(String value, Fuzziness fuzziness, int nonFuzzyPrefixLength,_                                          int minFuzzyPrefixLength, int maxExpansions, boolean transpositions,_                                          boolean unicodeAware) {_            return new FuzzyCompletionQuery(searchAnalyzer().analyzer(), new Term(name(), indexedValueForSearch(value)), null,_                    fuzziness.asDistance(), transpositions, nonFuzzyPrefixLength, minFuzzyPrefixLength,_                    unicodeAware, maxExpansions)__        };completion,prefix,fuzzy,query;public,completion,query,fuzzy,query,string,value,fuzziness,fuzziness,int,non,fuzzy,prefix,length,int,min,fuzzy,prefix,length,int,max,expansions,boolean,transpositions,boolean,unicode,aware,return,new,fuzzy,completion,query,search,analyzer,analyzer,new,term,name,indexed,value,for,search,value,null,fuzziness,as,distance,transpositions,non,fuzzy,prefix,length,min,fuzzy,prefix,length,unicode,aware,max,expansions
CompletionFieldMapper -> CompletionFieldType -> public CompletionQuery fuzzyQuery(String value, Fuzziness fuzziness, int nonFuzzyPrefixLength,                                           int minFuzzyPrefixLength, int maxExpansions, boolean transpositions,                                           boolean unicodeAware);1542357322;Completion prefix fuzzy query;public CompletionQuery fuzzyQuery(String value, Fuzziness fuzziness, int nonFuzzyPrefixLength,_                                          int minFuzzyPrefixLength, int maxExpansions, boolean transpositions,_                                          boolean unicodeAware) {_            return new FuzzyCompletionQuery(searchAnalyzer().analyzer(), new Term(name(), indexedValueForSearch(value)), null,_                    fuzziness.asDistance(), transpositions, nonFuzzyPrefixLength, minFuzzyPrefixLength,_                    unicodeAware, maxExpansions)__        };completion,prefix,fuzzy,query;public,completion,query,fuzzy,query,string,value,fuzziness,fuzziness,int,non,fuzzy,prefix,length,int,min,fuzzy,prefix,length,int,max,expansions,boolean,transpositions,boolean,unicode,aware,return,new,fuzzy,completion,query,search,analyzer,analyzer,new,term,name,indexed,value,for,search,value,null,fuzziness,as,distance,transpositions,non,fuzzy,prefix,length,min,fuzzy,prefix,length,unicode,aware,max,expansions
CompletionFieldMapper -> CompletionFieldType -> public CompletionQuery fuzzyQuery(String value, Fuzziness fuzziness, int nonFuzzyPrefixLength,                                           int minFuzzyPrefixLength, int maxExpansions, boolean transpositions,                                           boolean unicodeAware);1550490699;Completion prefix fuzzy query;public CompletionQuery fuzzyQuery(String value, Fuzziness fuzziness, int nonFuzzyPrefixLength,_                                          int minFuzzyPrefixLength, int maxExpansions, boolean transpositions,_                                          boolean unicodeAware) {_            return new FuzzyCompletionQuery(searchAnalyzer().analyzer(), new Term(name(), indexedValueForSearch(value)), null,_                    fuzziness.asDistance(), transpositions, nonFuzzyPrefixLength, minFuzzyPrefixLength,_                    unicodeAware, maxExpansions)__        };completion,prefix,fuzzy,query;public,completion,query,fuzzy,query,string,value,fuzziness,fuzziness,int,non,fuzzy,prefix,length,int,min,fuzzy,prefix,length,int,max,expansions,boolean,transpositions,boolean,unicode,aware,return,new,fuzzy,completion,query,search,analyzer,analyzer,new,term,name,indexed,value,for,search,value,null,fuzziness,as,distance,transpositions,non,fuzzy,prefix,length,min,fuzzy,prefix,length,unicode,aware,max,expansions
CompletionFieldMapper -> private void parse(ParseContext parseContext, Token token,                        XContentParser parser, Map<String, CompletionInputMetaData> inputMap) throws IOException;1541008027;Acceptable inputs:_"STRING" - interpreted as the field value (input)_"OBJECT" - { "input": STRING|ARRAY, "weight": STRING|INT, "contexts": ARRAY|OBJECT };private void parse(ParseContext parseContext, Token token,_                       XContentParser parser, Map<String, CompletionInputMetaData> inputMap) throws IOException {_        String currentFieldName = null__        if (token == Token.VALUE_STRING) {_            inputMap.put(parser.text(), new CompletionInputMetaData(parser.text(), Collections.emptyMap(), 1))__        } else if (token == Token.START_OBJECT) {_            Set<String> inputs = new HashSet<>()__            int weight = 1__            Map<String, Set<CharSequence>> contextsMap = new HashMap<>()__            while ((token = parser.nextToken()) != Token.END_OBJECT) {_                if (token == Token.FIELD_NAME) {_                    currentFieldName = parser.currentName()__                    if (!ALLOWED_CONTENT_FIELD_NAMES.contains(currentFieldName)) {_                        throw new IllegalArgumentException("unknown field name [" + currentFieldName_                            + "], must be one of " + ALLOWED_CONTENT_FIELD_NAMES)__                    }_                } else if (currentFieldName != null) {_                    if (Fields.CONTENT_FIELD_NAME_INPUT.equals(currentFieldName)) {_                        if (token == Token.VALUE_STRING) {_                            inputs.add(parser.text())__                        } else if (token == Token.START_ARRAY) {_                            while ((token = parser.nextToken()) != Token.END_ARRAY) {_                                if (token == Token.VALUE_STRING) {_                                    inputs.add(parser.text())__                                } else {_                                    throw new IllegalArgumentException("input array must have string values, but was ["_                                        + token.name() + "]")__                                }_                            }_                        } else {_                            throw new IllegalArgumentException("input must be a string or array, but was [" + token.name() + "]")__                        }_                    } else if (Fields.CONTENT_FIELD_NAME_WEIGHT.equals(currentFieldName)) {_                        final Number weightValue__                        if (token == Token.VALUE_STRING) {_                            try {_                                weightValue = Long.parseLong(parser.text())__                            } catch (NumberFormatException e) {_                                throw new IllegalArgumentException("weight must be an integer, but was [" + parser.text() + "]")__                            }_                        } else if (token == Token.VALUE_NUMBER) {_                            NumberType numberType = parser.numberType()__                            if (NumberType.LONG != numberType && NumberType.INT != numberType) {_                                throw new IllegalArgumentException("weight must be an integer, but was [" + parser.numberValue() + "]")__                            }_                            weightValue = parser.numberValue()__                        } else {_                            throw new IllegalArgumentException("weight must be a number or string, but was [" + token.name() + "]")__                        }_                        _                        if (weightValue.longValue() < 0 || weightValue.longValue() > Integer.MAX_VALUE) {_                            throw new IllegalArgumentException("weight must be in the interval [0..2147483647], but was ["_                                + weightValue.longValue() + "]")__                        }_                        weight = weightValue.intValue()__                    } else if (Fields.CONTENT_FIELD_NAME_CONTEXTS.equals(currentFieldName)) {_                        if (fieldType().hasContextMappings() == false) {_                            throw new IllegalArgumentException("contexts field is not supported for field: [" + fieldType().name() + "]")__                        }_                        ContextMappings contextMappings = fieldType().getContextMappings()__                        XContentParser.Token currentToken = parser.currentToken()__                        if (currentToken == XContentParser.Token.START_OBJECT) {_                            ContextMapping contextMapping = null__                            String fieldName = null__                            while ((currentToken = parser.nextToken()) != XContentParser.Token.END_OBJECT) {_                                if (currentToken == XContentParser.Token.FIELD_NAME) {_                                    fieldName = parser.currentName()__                                    contextMapping = contextMappings.get(fieldName)__                                } else {_                                    assert fieldName != null__                                    assert !contextsMap.containsKey(fieldName)__                                    contextsMap.put(fieldName, contextMapping.parseContext(parseContext, parser))__                                }_                            }_                        } else {_                            throw new IllegalArgumentException("contexts must be an object or an array , but was [" + currentToken + "]")__                        }_                    }_                }_            }_            for (String input : inputs) {_                if (inputMap.containsKey(input) == false || inputMap.get(input).weight < weight) {_                    inputMap.put(input, new CompletionInputMetaData(input, contextsMap, weight))__                }_            }_        } else {_            throw new ParsingException(parser.getTokenLocation(), "failed to parse [" + parser.currentName()_                + "]: expected text or object, but got " + token.name())__        }_    };acceptable,inputs,string,interpreted,as,the,field,value,input,object,input,string,array,weight,string,int,contexts,array,object;private,void,parse,parse,context,parse,context,token,token,xcontent,parser,parser,map,string,completion,input,meta,data,input,map,throws,ioexception,string,current,field,name,null,if,token,token,input,map,put,parser,text,new,completion,input,meta,data,parser,text,collections,empty,map,1,else,if,token,token,set,string,inputs,new,hash,set,int,weight,1,map,string,set,char,sequence,contexts,map,new,hash,map,while,token,parser,next,token,token,if,token,token,current,field,name,parser,current,name,if,contains,current,field,name,throw,new,illegal,argument,exception,unknown,field,name,current,field,name,must,be,one,of,else,if,current,field,name,null,if,fields,equals,current,field,name,if,token,token,inputs,add,parser,text,else,if,token,token,while,token,parser,next,token,token,if,token,token,inputs,add,parser,text,else,throw,new,illegal,argument,exception,input,array,must,have,string,values,but,was,token,name,else,throw,new,illegal,argument,exception,input,must,be,a,string,or,array,but,was,token,name,else,if,fields,equals,current,field,name,final,number,weight,value,if,token,token,try,weight,value,long,parse,long,parser,text,catch,number,format,exception,e,throw,new,illegal,argument,exception,weight,must,be,an,integer,but,was,parser,text,else,if,token,token,number,type,number,type,parser,number,type,if,number,type,long,number,type,number,type,int,number,type,throw,new,illegal,argument,exception,weight,must,be,an,integer,but,was,parser,number,value,weight,value,parser,number,value,else,throw,new,illegal,argument,exception,weight,must,be,a,number,or,string,but,was,token,name,if,weight,value,long,value,0,weight,value,long,value,integer,throw,new,illegal,argument,exception,weight,must,be,in,the,interval,0,2147483647,but,was,weight,value,long,value,weight,weight,value,int,value,else,if,fields,equals,current,field,name,if,field,type,has,context,mappings,false,throw,new,illegal,argument,exception,contexts,field,is,not,supported,for,field,field,type,name,context,mappings,context,mappings,field,type,get,context,mappings,xcontent,parser,token,current,token,parser,current,token,if,current,token,xcontent,parser,token,context,mapping,context,mapping,null,string,field,name,null,while,current,token,parser,next,token,xcontent,parser,token,if,current,token,xcontent,parser,token,field,name,parser,current,name,context,mapping,context,mappings,get,field,name,else,assert,field,name,null,assert,contexts,map,contains,key,field,name,contexts,map,put,field,name,context,mapping,parse,context,parse,context,parser,else,throw,new,illegal,argument,exception,contexts,must,be,an,object,or,an,array,but,was,current,token,for,string,input,inputs,if,input,map,contains,key,input,false,input,map,get,input,weight,weight,input,map,put,input,new,completion,input,meta,data,input,contexts,map,weight,else,throw,new,parsing,exception,parser,get,token,location,failed,to,parse,parser,current,name,expected,text,or,object,but,got,token,name
CompletionFieldMapper -> private void parse(ParseContext parseContext, Token token,                        XContentParser parser, Map<String, CompletionInputMetaData> inputMap) throws IOException;1542357322;Acceptable inputs:_"STRING" - interpreted as the field value (input)_"OBJECT" - { "input": STRING|ARRAY, "weight": STRING|INT, "contexts": ARRAY|OBJECT };private void parse(ParseContext parseContext, Token token,_                       XContentParser parser, Map<String, CompletionInputMetaData> inputMap) throws IOException {_        String currentFieldName = null__        if (token == Token.VALUE_STRING) {_            inputMap.put(parser.text(), new CompletionInputMetaData(parser.text(), Collections.<String, Set<String>>emptyMap(), 1))__        } else if (token == Token.START_OBJECT) {_            Set<String> inputs = new HashSet<>()__            int weight = 1__            Map<String, Set<String>> contextsMap = new HashMap<>()__            while ((token = parser.nextToken()) != Token.END_OBJECT) {_                if (token == Token.FIELD_NAME) {_                    currentFieldName = parser.currentName()__                    if (!ALLOWED_CONTENT_FIELD_NAMES.contains(currentFieldName)) {_                        throw new IllegalArgumentException("unknown field name [" + currentFieldName_                            + "], must be one of " + ALLOWED_CONTENT_FIELD_NAMES)__                    }_                } else if (currentFieldName != null) {_                    if (Fields.CONTENT_FIELD_NAME_INPUT.equals(currentFieldName)) {_                        if (token == Token.VALUE_STRING) {_                            inputs.add(parser.text())__                        } else if (token == Token.START_ARRAY) {_                            while ((token = parser.nextToken()) != Token.END_ARRAY) {_                                if (token == Token.VALUE_STRING) {_                                    inputs.add(parser.text())__                                } else {_                                    throw new IllegalArgumentException("input array must have string values, but was ["_                                        + token.name() + "]")__                                }_                            }_                        } else {_                            throw new IllegalArgumentException("input must be a string or array, but was [" + token.name() + "]")__                        }_                    } else if (Fields.CONTENT_FIELD_NAME_WEIGHT.equals(currentFieldName)) {_                        final Number weightValue__                        if (token == Token.VALUE_STRING) {_                            try {_                                weightValue = Long.parseLong(parser.text())__                            } catch (NumberFormatException e) {_                                throw new IllegalArgumentException("weight must be an integer, but was [" + parser.text() + "]")__                            }_                        } else if (token == Token.VALUE_NUMBER) {_                            NumberType numberType = parser.numberType()__                            if (NumberType.LONG != numberType && NumberType.INT != numberType) {_                                throw new IllegalArgumentException("weight must be an integer, but was [" + parser.numberValue() + "]")__                            }_                            weightValue = parser.numberValue()__                        } else {_                            throw new IllegalArgumentException("weight must be a number or string, but was [" + token.name() + "]")__                        }_                        _                        if (weightValue.longValue() < 0 || weightValue.longValue() > Integer.MAX_VALUE) {_                            throw new IllegalArgumentException("weight must be in the interval [0..2147483647], but was ["_                                + weightValue.longValue() + "]")__                        }_                        weight = weightValue.intValue()__                    } else if (Fields.CONTENT_FIELD_NAME_CONTEXTS.equals(currentFieldName)) {_                        if (fieldType().hasContextMappings() == false) {_                            throw new IllegalArgumentException("contexts field is not supported for field: [" + fieldType().name() + "]")__                        }_                        ContextMappings contextMappings = fieldType().getContextMappings()__                        XContentParser.Token currentToken = parser.currentToken()__                        if (currentToken == XContentParser.Token.START_OBJECT) {_                            ContextMapping contextMapping = null__                            String fieldName = null__                            while ((currentToken = parser.nextToken()) != XContentParser.Token.END_OBJECT) {_                                if (currentToken == XContentParser.Token.FIELD_NAME) {_                                    fieldName = parser.currentName()__                                    contextMapping = contextMappings.get(fieldName)__                                } else {_                                    assert fieldName != null__                                    assert !contextsMap.containsKey(fieldName)__                                    contextsMap.put(fieldName, contextMapping.parseContext(parseContext, parser))__                                }_                            }_                        } else {_                            throw new IllegalArgumentException("contexts must be an object or an array , but was [" + currentToken + "]")__                        }_                    }_                }_            }_            for (String input : inputs) {_                if (inputMap.containsKey(input) == false || inputMap.get(input).weight < weight) {_                    inputMap.put(input, new CompletionInputMetaData(input, contextsMap, weight))__                }_            }_        } else {_            throw new ParsingException(parser.getTokenLocation(), "failed to parse [" + parser.currentName()_                + "]: expected text or object, but got " + token.name())__        }_    };acceptable,inputs,string,interpreted,as,the,field,value,input,object,input,string,array,weight,string,int,contexts,array,object;private,void,parse,parse,context,parse,context,token,token,xcontent,parser,parser,map,string,completion,input,meta,data,input,map,throws,ioexception,string,current,field,name,null,if,token,token,input,map,put,parser,text,new,completion,input,meta,data,parser,text,collections,string,set,string,empty,map,1,else,if,token,token,set,string,inputs,new,hash,set,int,weight,1,map,string,set,string,contexts,map,new,hash,map,while,token,parser,next,token,token,if,token,token,current,field,name,parser,current,name,if,contains,current,field,name,throw,new,illegal,argument,exception,unknown,field,name,current,field,name,must,be,one,of,else,if,current,field,name,null,if,fields,equals,current,field,name,if,token,token,inputs,add,parser,text,else,if,token,token,while,token,parser,next,token,token,if,token,token,inputs,add,parser,text,else,throw,new,illegal,argument,exception,input,array,must,have,string,values,but,was,token,name,else,throw,new,illegal,argument,exception,input,must,be,a,string,or,array,but,was,token,name,else,if,fields,equals,current,field,name,final,number,weight,value,if,token,token,try,weight,value,long,parse,long,parser,text,catch,number,format,exception,e,throw,new,illegal,argument,exception,weight,must,be,an,integer,but,was,parser,text,else,if,token,token,number,type,number,type,parser,number,type,if,number,type,long,number,type,number,type,int,number,type,throw,new,illegal,argument,exception,weight,must,be,an,integer,but,was,parser,number,value,weight,value,parser,number,value,else,throw,new,illegal,argument,exception,weight,must,be,a,number,or,string,but,was,token,name,if,weight,value,long,value,0,weight,value,long,value,integer,throw,new,illegal,argument,exception,weight,must,be,in,the,interval,0,2147483647,but,was,weight,value,long,value,weight,weight,value,int,value,else,if,fields,equals,current,field,name,if,field,type,has,context,mappings,false,throw,new,illegal,argument,exception,contexts,field,is,not,supported,for,field,field,type,name,context,mappings,context,mappings,field,type,get,context,mappings,xcontent,parser,token,current,token,parser,current,token,if,current,token,xcontent,parser,token,context,mapping,context,mapping,null,string,field,name,null,while,current,token,parser,next,token,xcontent,parser,token,if,current,token,xcontent,parser,token,field,name,parser,current,name,context,mapping,context,mappings,get,field,name,else,assert,field,name,null,assert,contexts,map,contains,key,field,name,contexts,map,put,field,name,context,mapping,parse,context,parse,context,parser,else,throw,new,illegal,argument,exception,contexts,must,be,an,object,or,an,array,but,was,current,token,for,string,input,inputs,if,input,map,contains,key,input,false,input,map,get,input,weight,weight,input,map,put,input,new,completion,input,meta,data,input,contexts,map,weight,else,throw,new,parsing,exception,parser,get,token,location,failed,to,parse,parser,current,name,expected,text,or,object,but,got,token,name
CompletionFieldMapper -> private void parse(ParseContext parseContext, Token token,                        XContentParser parser, Map<String, CompletionInputMetaData> inputMap) throws IOException;1550490699;Acceptable inputs:_"STRING" - interpreted as the field value (input)_"OBJECT" - { "input": STRING|ARRAY, "weight": STRING|INT, "contexts": ARRAY|OBJECT };private void parse(ParseContext parseContext, Token token,_                       XContentParser parser, Map<String, CompletionInputMetaData> inputMap) throws IOException {_        String currentFieldName = null__        if (token == Token.VALUE_STRING) {_            inputMap.put(parser.text(), new CompletionInputMetaData(parser.text(), Collections.<String, Set<String>>emptyMap(), 1))__        } else if (token == Token.START_OBJECT) {_            Set<String> inputs = new HashSet<>()__            int weight = 1__            Map<String, Set<String>> contextsMap = new HashMap<>()__            while ((token = parser.nextToken()) != Token.END_OBJECT) {_                if (token == Token.FIELD_NAME) {_                    currentFieldName = parser.currentName()__                    if (!ALLOWED_CONTENT_FIELD_NAMES.contains(currentFieldName)) {_                        throw new IllegalArgumentException("unknown field name [" + currentFieldName_                            + "], must be one of " + ALLOWED_CONTENT_FIELD_NAMES)__                    }_                } else if (currentFieldName != null) {_                    if (Fields.CONTENT_FIELD_NAME_INPUT.equals(currentFieldName)) {_                        if (token == Token.VALUE_STRING) {_                            inputs.add(parser.text())__                        } else if (token == Token.START_ARRAY) {_                            while ((token = parser.nextToken()) != Token.END_ARRAY) {_                                if (token == Token.VALUE_STRING) {_                                    inputs.add(parser.text())__                                } else {_                                    throw new IllegalArgumentException("input array must have string values, but was ["_                                        + token.name() + "]")__                                }_                            }_                        } else {_                            throw new IllegalArgumentException("input must be a string or array, but was [" + token.name() + "]")__                        }_                    } else if (Fields.CONTENT_FIELD_NAME_WEIGHT.equals(currentFieldName)) {_                        final Number weightValue__                        if (token == Token.VALUE_STRING) {_                            try {_                                weightValue = Long.parseLong(parser.text())__                            } catch (NumberFormatException e) {_                                throw new IllegalArgumentException("weight must be an integer, but was [" + parser.text() + "]")__                            }_                        } else if (token == Token.VALUE_NUMBER) {_                            NumberType numberType = parser.numberType()__                            if (NumberType.LONG != numberType && NumberType.INT != numberType) {_                                throw new IllegalArgumentException("weight must be an integer, but was [" + parser.numberValue() + "]")__                            }_                            weightValue = parser.numberValue()__                        } else {_                            throw new IllegalArgumentException("weight must be a number or string, but was [" + token.name() + "]")__                        }_                        _                        if (weightValue.longValue() < 0 || weightValue.longValue() > Integer.MAX_VALUE) {_                            throw new IllegalArgumentException("weight must be in the interval [0..2147483647], but was ["_                                + weightValue.longValue() + "]")__                        }_                        weight = weightValue.intValue()__                    } else if (Fields.CONTENT_FIELD_NAME_CONTEXTS.equals(currentFieldName)) {_                        if (fieldType().hasContextMappings() == false) {_                            throw new IllegalArgumentException("contexts field is not supported for field: [" + fieldType().name() + "]")__                        }_                        ContextMappings contextMappings = fieldType().getContextMappings()__                        XContentParser.Token currentToken = parser.currentToken()__                        if (currentToken == XContentParser.Token.START_OBJECT) {_                            ContextMapping contextMapping = null__                            String fieldName = null__                            while ((currentToken = parser.nextToken()) != XContentParser.Token.END_OBJECT) {_                                if (currentToken == XContentParser.Token.FIELD_NAME) {_                                    fieldName = parser.currentName()__                                    contextMapping = contextMappings.get(fieldName)__                                } else {_                                    assert fieldName != null__                                    assert !contextsMap.containsKey(fieldName)__                                    contextsMap.put(fieldName, contextMapping.parseContext(parseContext, parser))__                                }_                            }_                        } else {_                            throw new IllegalArgumentException("contexts must be an object or an array , but was [" + currentToken + "]")__                        }_                    }_                }_            }_            for (String input : inputs) {_                if (inputMap.containsKey(input) == false || inputMap.get(input).weight < weight) {_                    inputMap.put(input, new CompletionInputMetaData(input, contextsMap, weight))__                }_            }_        } else {_            throw new ParsingException(parser.getTokenLocation(), "failed to parse [" + parser.currentName()_                + "]: expected text or object, but got " + token.name())__        }_    };acceptable,inputs,string,interpreted,as,the,field,value,input,object,input,string,array,weight,string,int,contexts,array,object;private,void,parse,parse,context,parse,context,token,token,xcontent,parser,parser,map,string,completion,input,meta,data,input,map,throws,ioexception,string,current,field,name,null,if,token,token,input,map,put,parser,text,new,completion,input,meta,data,parser,text,collections,string,set,string,empty,map,1,else,if,token,token,set,string,inputs,new,hash,set,int,weight,1,map,string,set,string,contexts,map,new,hash,map,while,token,parser,next,token,token,if,token,token,current,field,name,parser,current,name,if,contains,current,field,name,throw,new,illegal,argument,exception,unknown,field,name,current,field,name,must,be,one,of,else,if,current,field,name,null,if,fields,equals,current,field,name,if,token,token,inputs,add,parser,text,else,if,token,token,while,token,parser,next,token,token,if,token,token,inputs,add,parser,text,else,throw,new,illegal,argument,exception,input,array,must,have,string,values,but,was,token,name,else,throw,new,illegal,argument,exception,input,must,be,a,string,or,array,but,was,token,name,else,if,fields,equals,current,field,name,final,number,weight,value,if,token,token,try,weight,value,long,parse,long,parser,text,catch,number,format,exception,e,throw,new,illegal,argument,exception,weight,must,be,an,integer,but,was,parser,text,else,if,token,token,number,type,number,type,parser,number,type,if,number,type,long,number,type,number,type,int,number,type,throw,new,illegal,argument,exception,weight,must,be,an,integer,but,was,parser,number,value,weight,value,parser,number,value,else,throw,new,illegal,argument,exception,weight,must,be,a,number,or,string,but,was,token,name,if,weight,value,long,value,0,weight,value,long,value,integer,throw,new,illegal,argument,exception,weight,must,be,in,the,interval,0,2147483647,but,was,weight,value,long,value,weight,weight,value,int,value,else,if,fields,equals,current,field,name,if,field,type,has,context,mappings,false,throw,new,illegal,argument,exception,contexts,field,is,not,supported,for,field,field,type,name,context,mappings,context,mappings,field,type,get,context,mappings,xcontent,parser,token,current,token,parser,current,token,if,current,token,xcontent,parser,token,context,mapping,context,mapping,null,string,field,name,null,while,current,token,parser,next,token,xcontent,parser,token,if,current,token,xcontent,parser,token,field,name,parser,current,name,context,mapping,context,mappings,get,field,name,else,assert,field,name,null,assert,contexts,map,contains,key,field,name,contexts,map,put,field,name,context,mapping,parse,context,parse,context,parser,else,throw,new,illegal,argument,exception,contexts,must,be,an,object,or,an,array,but,was,current,token,for,string,input,inputs,if,input,map,contains,key,input,false,input,map,get,input,weight,weight,input,map,put,input,new,completion,input,meta,data,input,contexts,map,weight,else,throw,new,parsing,exception,parser,get,token,location,failed,to,parse,parser,current,name,expected,text,or,object,but,got,token,name
CompletionFieldMapper -> CompletionFieldType -> public boolean hasContextMappings();1524684173;@return true if there are one or more context mappings defined_for this field type;public boolean hasContextMappings() {_            return contextMappings != null__        };return,true,if,there,are,one,or,more,context,mappings,defined,for,this,field,type;public,boolean,has,context,mappings,return,context,mappings,null
CompletionFieldMapper -> CompletionFieldType -> public boolean hasContextMappings();1526981569;@return true if there are one or more context mappings defined_for this field type;public boolean hasContextMappings() {_            return contextMappings != null__        };return,true,if,there,are,one,or,more,context,mappings,defined,for,this,field,type;public,boolean,has,context,mappings,return,context,mappings,null
CompletionFieldMapper -> CompletionFieldType -> public boolean hasContextMappings();1527840262;@return true if there are one or more context mappings defined_for this field type;public boolean hasContextMappings() {_            return contextMappings != null__        };return,true,if,there,are,one,or,more,context,mappings,defined,for,this,field,type;public,boolean,has,context,mappings,return,context,mappings,null
CompletionFieldMapper -> CompletionFieldType -> public boolean hasContextMappings();1536137328;@return true if there are one or more context mappings defined_for this field type;public boolean hasContextMappings() {_            return contextMappings != null__        };return,true,if,there,are,one,or,more,context,mappings,defined,for,this,field,type;public,boolean,has,context,mappings,return,context,mappings,null
CompletionFieldMapper -> CompletionFieldType -> public boolean hasContextMappings();1538509426;@return true if there are one or more context mappings defined_for this field type;public boolean hasContextMappings() {_            return contextMappings != null__        };return,true,if,there,are,one,or,more,context,mappings,defined,for,this,field,type;public,boolean,has,context,mappings,return,context,mappings,null
CompletionFieldMapper -> CompletionFieldType -> public boolean hasContextMappings();1541008027;@return true if there are one or more context mappings defined_for this field type;public boolean hasContextMappings() {_            return contextMappings != null__        };return,true,if,there,are,one,or,more,context,mappings,defined,for,this,field,type;public,boolean,has,context,mappings,return,context,mappings,null
CompletionFieldMapper -> CompletionFieldType -> public boolean hasContextMappings();1542357322;@return true if there are one or more context mappings defined_for this field type;public boolean hasContextMappings() {_            return contextMappings != null__        };return,true,if,there,are,one,or,more,context,mappings,defined,for,this,field,type;public,boolean,has,context,mappings,return,context,mappings,null
CompletionFieldMapper -> CompletionFieldType -> public boolean hasContextMappings();1550490699;@return true if there are one or more context mappings defined_for this field type;public boolean hasContextMappings() {_            return contextMappings != null__        };return,true,if,there,are,one,or,more,context,mappings,defined,for,this,field,type;public,boolean,has,context,mappings,return,context,mappings,null
CompletionFieldMapper -> @Override     public void parse(ParseContext context) throws IOException;1536137328;Parses and indexes inputs__Parsing:_Acceptable format:_"STRING" - interpreted as field value (input)_"ARRAY" - each element can be one of "OBJECT" (see below)_"OBJECT" - { "input": STRING|ARRAY, "weight": STRING|INT, "contexts": ARRAY|OBJECT }__Indexing:_if context mappings are defined, delegates to {@link ContextMappings#addField(ParseContext.Document, String, String, int, Map)}_else adds inputs as a {@link org.apache.lucene.search.suggest.document.SuggestField};@Override_    public void parse(ParseContext context) throws IOException {_        _        XContentParser parser = context.parser()__        Token token = parser.currentToken()__        Map<String, CompletionInputMetaData> inputMap = new HashMap<>(1)___        _        if (token == Token.VALUE_NULL) {_            return__        } else if (token == Token.START_ARRAY) {_            while ((token = parser.nextToken()) != Token.END_ARRAY) {_                parse(context, token, parser, inputMap)__            }_        } else {_            parse(context, token, parser, inputMap)__        }__        _        for (Map.Entry<String, CompletionInputMetaData> completionInput : inputMap.entrySet()) {_            String input = completionInput.getKey()__            if (input.trim().isEmpty()) {_                context.addIgnoredField(fieldType.name())__                continue__            }_            _            if (input.length() > maxInputLength) {_                int len = Math.min(maxInputLength, input.length())__                if (Character.isHighSurrogate(input.charAt(len - 1))) {_                    assert input.length() >= len + 1 && Character.isLowSurrogate(input.charAt(len))__                    len += 1__                }_                input = input.substring(0, len)__            }_            CompletionInputMetaData metaData = completionInput.getValue()__            if (fieldType().hasContextMappings()) {_                fieldType().getContextMappings().addField(context.doc(), fieldType().name(),_                        input, metaData.weight, metaData.contexts)__            } else {_                context.doc().add(new SuggestField(fieldType().name(), input, metaData.weight))__            }_        }_        List<IndexableField> fields = new ArrayList<>(1)__        createFieldNamesField(context, fields)__        for (IndexableField field : fields) {_            context.doc().add(field)__        }_        multiFields.parse(this, context)__    };parses,and,indexes,inputs,parsing,acceptable,format,string,interpreted,as,field,value,input,array,each,element,can,be,one,of,object,see,below,object,input,string,array,weight,string,int,contexts,array,object,indexing,if,context,mappings,are,defined,delegates,to,link,context,mappings,add,field,parse,context,document,string,string,int,map,else,adds,inputs,as,a,link,org,apache,lucene,search,suggest,document,suggest,field;override,public,void,parse,parse,context,context,throws,ioexception,xcontent,parser,parser,context,parser,token,token,parser,current,token,map,string,completion,input,meta,data,input,map,new,hash,map,1,if,token,token,return,else,if,token,token,while,token,parser,next,token,token,parse,context,token,parser,input,map,else,parse,context,token,parser,input,map,for,map,entry,string,completion,input,meta,data,completion,input,input,map,entry,set,string,input,completion,input,get,key,if,input,trim,is,empty,context,add,ignored,field,field,type,name,continue,if,input,length,max,input,length,int,len,math,min,max,input,length,input,length,if,character,is,high,surrogate,input,char,at,len,1,assert,input,length,len,1,character,is,low,surrogate,input,char,at,len,len,1,input,input,substring,0,len,completion,input,meta,data,meta,data,completion,input,get,value,if,field,type,has,context,mappings,field,type,get,context,mappings,add,field,context,doc,field,type,name,input,meta,data,weight,meta,data,contexts,else,context,doc,add,new,suggest,field,field,type,name,input,meta,data,weight,list,indexable,field,fields,new,array,list,1,create,field,names,field,context,fields,for,indexable,field,field,fields,context,doc,add,field,multi,fields,parse,this,context
CompletionFieldMapper -> @Override     public void parse(ParseContext context) throws IOException;1538509426;Parses and indexes inputs__Parsing:_Acceptable format:_"STRING" - interpreted as field value (input)_"ARRAY" - each element can be one of "OBJECT" (see below)_"OBJECT" - { "input": STRING|ARRAY, "weight": STRING|INT, "contexts": ARRAY|OBJECT }__Indexing:_if context mappings are defined, delegates to {@link ContextMappings#addField(ParseContext.Document, String, String, int, Map)}_else adds inputs as a {@link org.apache.lucene.search.suggest.document.SuggestField};@Override_    public void parse(ParseContext context) throws IOException {_        _        XContentParser parser = context.parser()__        Token token = parser.currentToken()__        Map<String, CompletionInputMetaData> inputMap = new HashMap<>(1)___        if (context.externalValueSet()) {_            inputMap = getInputMapFromExternalValue(context)__        } else if (token == Token.VALUE_NULL) { _            return__        } else if (token == Token.START_ARRAY) {_            while ((token = parser.nextToken()) != Token.END_ARRAY) {_                parse(context, token, parser, inputMap)__            }_        } else {_            parse(context, token, parser, inputMap)__        }__        _        for (Map.Entry<String, CompletionInputMetaData> completionInput : inputMap.entrySet()) {_            String input = completionInput.getKey()__            if (input.trim().isEmpty()) {_                context.addIgnoredField(fieldType.name())__                continue__            }_            _            if (input.length() > maxInputLength) {_                int len = Math.min(maxInputLength, input.length())__                if (Character.isHighSurrogate(input.charAt(len - 1))) {_                    assert input.length() >= len + 1 && Character.isLowSurrogate(input.charAt(len))__                    len += 1__                }_                input = input.substring(0, len)__            }_            CompletionInputMetaData metaData = completionInput.getValue()__            if (fieldType().hasContextMappings()) {_                fieldType().getContextMappings().addField(context.doc(), fieldType().name(),_                        input, metaData.weight, metaData.contexts)__            } else {_                context.doc().add(new SuggestField(fieldType().name(), input, metaData.weight))__            }_        }__        List<IndexableField> fields = new ArrayList<>(1)__        createFieldNamesField(context, fields)__        for (IndexableField field : fields) {_            context.doc().add(field)__        }__        for (CompletionInputMetaData metaData: inputMap.values()) {_            ParseContext externalValueContext = context.createExternalValueContext(metaData)__            multiFields.parse(this, externalValueContext)__        }_    };parses,and,indexes,inputs,parsing,acceptable,format,string,interpreted,as,field,value,input,array,each,element,can,be,one,of,object,see,below,object,input,string,array,weight,string,int,contexts,array,object,indexing,if,context,mappings,are,defined,delegates,to,link,context,mappings,add,field,parse,context,document,string,string,int,map,else,adds,inputs,as,a,link,org,apache,lucene,search,suggest,document,suggest,field;override,public,void,parse,parse,context,context,throws,ioexception,xcontent,parser,parser,context,parser,token,token,parser,current,token,map,string,completion,input,meta,data,input,map,new,hash,map,1,if,context,external,value,set,input,map,get,input,map,from,external,value,context,else,if,token,token,return,else,if,token,token,while,token,parser,next,token,token,parse,context,token,parser,input,map,else,parse,context,token,parser,input,map,for,map,entry,string,completion,input,meta,data,completion,input,input,map,entry,set,string,input,completion,input,get,key,if,input,trim,is,empty,context,add,ignored,field,field,type,name,continue,if,input,length,max,input,length,int,len,math,min,max,input,length,input,length,if,character,is,high,surrogate,input,char,at,len,1,assert,input,length,len,1,character,is,low,surrogate,input,char,at,len,len,1,input,input,substring,0,len,completion,input,meta,data,meta,data,completion,input,get,value,if,field,type,has,context,mappings,field,type,get,context,mappings,add,field,context,doc,field,type,name,input,meta,data,weight,meta,data,contexts,else,context,doc,add,new,suggest,field,field,type,name,input,meta,data,weight,list,indexable,field,fields,new,array,list,1,create,field,names,field,context,fields,for,indexable,field,field,fields,context,doc,add,field,for,completion,input,meta,data,meta,data,input,map,values,parse,context,external,value,context,context,create,external,value,context,meta,data,multi,fields,parse,this,external,value,context
CompletionFieldMapper -> @Override     public void parse(ParseContext context) throws IOException;1541008027;Parses and indexes inputs__Parsing:_Acceptable format:_"STRING" - interpreted as field value (input)_"ARRAY" - each element can be one of "OBJECT" (see below)_"OBJECT" - { "input": STRING|ARRAY, "weight": STRING|INT, "contexts": ARRAY|OBJECT }__Indexing:_if context mappings are defined, delegates to {@link ContextMappings#addField(ParseContext.Document, String, String, int, Map)}_else adds inputs as a {@link org.apache.lucene.search.suggest.document.SuggestField};@Override_    public void parse(ParseContext context) throws IOException {_        _        XContentParser parser = context.parser()__        Token token = parser.currentToken()__        Map<String, CompletionInputMetaData> inputMap = new HashMap<>(1)___        if (context.externalValueSet()) {_            inputMap = getInputMapFromExternalValue(context)__        } else if (token == Token.VALUE_NULL) { _            return__        } else if (token == Token.START_ARRAY) {_            while ((token = parser.nextToken()) != Token.END_ARRAY) {_                parse(context, token, parser, inputMap)__            }_        } else {_            parse(context, token, parser, inputMap)__        }__        _        for (Map.Entry<String, CompletionInputMetaData> completionInput : inputMap.entrySet()) {_            String input = completionInput.getKey()__            if (input.trim().isEmpty()) {_                context.addIgnoredField(fieldType.name())__                continue__            }_            _            if (input.length() > maxInputLength) {_                int len = Math.min(maxInputLength, input.length())__                if (Character.isHighSurrogate(input.charAt(len - 1))) {_                    assert input.length() >= len + 1 && Character.isLowSurrogate(input.charAt(len))__                    len += 1__                }_                input = input.substring(0, len)__            }_            CompletionInputMetaData metaData = completionInput.getValue()__            if (fieldType().hasContextMappings()) {_                fieldType().getContextMappings().addField(context.doc(), fieldType().name(),_                        input, metaData.weight, metaData.contexts)__            } else {_                context.doc().add(new SuggestField(fieldType().name(), input, metaData.weight))__            }_        }__        List<IndexableField> fields = new ArrayList<>(1)__        createFieldNamesField(context, fields)__        for (IndexableField field : fields) {_            context.doc().add(field)__        }__        for (CompletionInputMetaData metaData: inputMap.values()) {_            ParseContext externalValueContext = context.createExternalValueContext(metaData)__            multiFields.parse(this, externalValueContext)__        }_    };parses,and,indexes,inputs,parsing,acceptable,format,string,interpreted,as,field,value,input,array,each,element,can,be,one,of,object,see,below,object,input,string,array,weight,string,int,contexts,array,object,indexing,if,context,mappings,are,defined,delegates,to,link,context,mappings,add,field,parse,context,document,string,string,int,map,else,adds,inputs,as,a,link,org,apache,lucene,search,suggest,document,suggest,field;override,public,void,parse,parse,context,context,throws,ioexception,xcontent,parser,parser,context,parser,token,token,parser,current,token,map,string,completion,input,meta,data,input,map,new,hash,map,1,if,context,external,value,set,input,map,get,input,map,from,external,value,context,else,if,token,token,return,else,if,token,token,while,token,parser,next,token,token,parse,context,token,parser,input,map,else,parse,context,token,parser,input,map,for,map,entry,string,completion,input,meta,data,completion,input,input,map,entry,set,string,input,completion,input,get,key,if,input,trim,is,empty,context,add,ignored,field,field,type,name,continue,if,input,length,max,input,length,int,len,math,min,max,input,length,input,length,if,character,is,high,surrogate,input,char,at,len,1,assert,input,length,len,1,character,is,low,surrogate,input,char,at,len,len,1,input,input,substring,0,len,completion,input,meta,data,meta,data,completion,input,get,value,if,field,type,has,context,mappings,field,type,get,context,mappings,add,field,context,doc,field,type,name,input,meta,data,weight,meta,data,contexts,else,context,doc,add,new,suggest,field,field,type,name,input,meta,data,weight,list,indexable,field,fields,new,array,list,1,create,field,names,field,context,fields,for,indexable,field,field,fields,context,doc,add,field,for,completion,input,meta,data,meta,data,input,map,values,parse,context,external,value,context,context,create,external,value,context,meta,data,multi,fields,parse,this,external,value,context
CompletionFieldMapper -> @Override     public void parse(ParseContext context) throws IOException;1542357322;Parses and indexes inputs__Parsing:_Acceptable format:_"STRING" - interpreted as field value (input)_"ARRAY" - each element can be one of "OBJECT" (see below)_"OBJECT" - { "input": STRING|ARRAY, "weight": STRING|INT, "contexts": ARRAY|OBJECT }__Indexing:_if context mappings are defined, delegates to {@link ContextMappings#addField(ParseContext.Document, String, String, int, Map)}_else adds inputs as a {@link org.apache.lucene.search.suggest.document.SuggestField};@Override_    public void parse(ParseContext context) throws IOException {_        _        XContentParser parser = context.parser()__        Token token = parser.currentToken()__        Map<String, CompletionInputMetaData> inputMap = new HashMap<>(1)___        if (context.externalValueSet()) {_            inputMap = getInputMapFromExternalValue(context)__        } else if (token == Token.VALUE_NULL) { _            return__        } else if (token == Token.START_ARRAY) {_            while ((token = parser.nextToken()) != Token.END_ARRAY) {_                parse(context, token, parser, inputMap)__            }_        } else {_            parse(context, token, parser, inputMap)__        }__        _        for (Map.Entry<String, CompletionInputMetaData> completionInput : inputMap.entrySet()) {_            String input = completionInput.getKey()__            if (input.trim().isEmpty()) {_                context.addIgnoredField(fieldType.name())__                continue__            }_            _            if (input.length() > maxInputLength) {_                int len = Math.min(maxInputLength, input.length())__                if (Character.isHighSurrogate(input.charAt(len - 1))) {_                    assert input.length() >= len + 1 && Character.isLowSurrogate(input.charAt(len))__                    len += 1__                }_                input = input.substring(0, len)__            }_            CompletionInputMetaData metaData = completionInput.getValue()__            if (fieldType().hasContextMappings()) {_                fieldType().getContextMappings().addField(context.doc(), fieldType().name(),_                        input, metaData.weight, metaData.contexts)__            } else {_                context.doc().add(new SuggestField(fieldType().name(), input, metaData.weight))__            }_        }__        List<IndexableField> fields = new ArrayList<>(1)__        createFieldNamesField(context, fields)__        for (IndexableField field : fields) {_            context.doc().add(field)__        }__        for (CompletionInputMetaData metaData: inputMap.values()) {_            ParseContext externalValueContext = context.createExternalValueContext(metaData)__            multiFields.parse(this, externalValueContext)__        }_    };parses,and,indexes,inputs,parsing,acceptable,format,string,interpreted,as,field,value,input,array,each,element,can,be,one,of,object,see,below,object,input,string,array,weight,string,int,contexts,array,object,indexing,if,context,mappings,are,defined,delegates,to,link,context,mappings,add,field,parse,context,document,string,string,int,map,else,adds,inputs,as,a,link,org,apache,lucene,search,suggest,document,suggest,field;override,public,void,parse,parse,context,context,throws,ioexception,xcontent,parser,parser,context,parser,token,token,parser,current,token,map,string,completion,input,meta,data,input,map,new,hash,map,1,if,context,external,value,set,input,map,get,input,map,from,external,value,context,else,if,token,token,return,else,if,token,token,while,token,parser,next,token,token,parse,context,token,parser,input,map,else,parse,context,token,parser,input,map,for,map,entry,string,completion,input,meta,data,completion,input,input,map,entry,set,string,input,completion,input,get,key,if,input,trim,is,empty,context,add,ignored,field,field,type,name,continue,if,input,length,max,input,length,int,len,math,min,max,input,length,input,length,if,character,is,high,surrogate,input,char,at,len,1,assert,input,length,len,1,character,is,low,surrogate,input,char,at,len,len,1,input,input,substring,0,len,completion,input,meta,data,meta,data,completion,input,get,value,if,field,type,has,context,mappings,field,type,get,context,mappings,add,field,context,doc,field,type,name,input,meta,data,weight,meta,data,contexts,else,context,doc,add,new,suggest,field,field,type,name,input,meta,data,weight,list,indexable,field,fields,new,array,list,1,create,field,names,field,context,fields,for,indexable,field,field,fields,context,doc,add,field,for,completion,input,meta,data,meta,data,input,map,values,parse,context,external,value,context,context,create,external,value,context,meta,data,multi,fields,parse,this,external,value,context
CompletionFieldMapper -> @Override     public void parse(ParseContext context) throws IOException;1550490699;Parses and indexes inputs__Parsing:_Acceptable format:_"STRING" - interpreted as field value (input)_"ARRAY" - each element can be one of "OBJECT" (see below)_"OBJECT" - { "input": STRING|ARRAY, "weight": STRING|INT, "contexts": ARRAY|OBJECT }__Indexing:_if context mappings are defined, delegates to {@link ContextMappings#addField(ParseContext.Document, String, String, int, Map)}_else adds inputs as a {@link org.apache.lucene.search.suggest.document.SuggestField};@Override_    public void parse(ParseContext context) throws IOException {_        _        XContentParser parser = context.parser()__        Token token = parser.currentToken()__        Map<String, CompletionInputMetaData> inputMap = new HashMap<>(1)___        if (context.externalValueSet()) {_            inputMap = getInputMapFromExternalValue(context)__        } else if (token == Token.VALUE_NULL) { _            return__        } else if (token == Token.START_ARRAY) {_            while ((token = parser.nextToken()) != Token.END_ARRAY) {_                parse(context, token, parser, inputMap)__            }_        } else {_            parse(context, token, parser, inputMap)__        }__        _        for (Map.Entry<String, CompletionInputMetaData> completionInput : inputMap.entrySet()) {_            String input = completionInput.getKey()__            if (input.trim().isEmpty()) {_                context.addIgnoredField(fieldType.name())__                continue__            }_            _            if (input.length() > maxInputLength) {_                int len = Math.min(maxInputLength, input.length())__                if (Character.isHighSurrogate(input.charAt(len - 1))) {_                    assert input.length() >= len + 1 && Character.isLowSurrogate(input.charAt(len))__                    len += 1__                }_                input = input.substring(0, len)__            }_            CompletionInputMetaData metaData = completionInput.getValue()__            if (fieldType().hasContextMappings()) {_                fieldType().getContextMappings().addField(context.doc(), fieldType().name(),_                        input, metaData.weight, metaData.contexts)__            } else {_                context.doc().add(new SuggestField(fieldType().name(), input, metaData.weight))__            }_        }__        List<IndexableField> fields = new ArrayList<>(1)__        createFieldNamesField(context, fields)__        for (IndexableField field : fields) {_            context.doc().add(field)__        }__        for (CompletionInputMetaData metaData: inputMap.values()) {_            ParseContext externalValueContext = context.createExternalValueContext(metaData)__            multiFields.parse(this, externalValueContext)__        }_    };parses,and,indexes,inputs,parsing,acceptable,format,string,interpreted,as,field,value,input,array,each,element,can,be,one,of,object,see,below,object,input,string,array,weight,string,int,contexts,array,object,indexing,if,context,mappings,are,defined,delegates,to,link,context,mappings,add,field,parse,context,document,string,string,int,map,else,adds,inputs,as,a,link,org,apache,lucene,search,suggest,document,suggest,field;override,public,void,parse,parse,context,context,throws,ioexception,xcontent,parser,parser,context,parser,token,token,parser,current,token,map,string,completion,input,meta,data,input,map,new,hash,map,1,if,context,external,value,set,input,map,get,input,map,from,external,value,context,else,if,token,token,return,else,if,token,token,while,token,parser,next,token,token,parse,context,token,parser,input,map,else,parse,context,token,parser,input,map,for,map,entry,string,completion,input,meta,data,completion,input,input,map,entry,set,string,input,completion,input,get,key,if,input,trim,is,empty,context,add,ignored,field,field,type,name,continue,if,input,length,max,input,length,int,len,math,min,max,input,length,input,length,if,character,is,high,surrogate,input,char,at,len,1,assert,input,length,len,1,character,is,low,surrogate,input,char,at,len,len,1,input,input,substring,0,len,completion,input,meta,data,meta,data,completion,input,get,value,if,field,type,has,context,mappings,field,type,get,context,mappings,add,field,context,doc,field,type,name,input,meta,data,weight,meta,data,contexts,else,context,doc,add,new,suggest,field,field,type,name,input,meta,data,weight,list,indexable,field,fields,new,array,list,1,create,field,names,field,context,fields,for,indexable,field,field,fields,context,doc,add,field,for,completion,input,meta,data,meta,data,input,map,values,parse,context,external,value,context,context,create,external,value,context,meta,data,multi,fields,parse,this,external,value,context
CompletionFieldMapper -> Builder -> public Builder maxInputLength(int maxInputLength);1524684173;@param maxInputLength maximum expected prefix length_NOTE: prefixes longer than this will_be truncated;public Builder maxInputLength(int maxInputLength) {_            if (maxInputLength <= 0) {_                throw new IllegalArgumentException(Fields.MAX_INPUT_LENGTH.getPreferredName() + " must be > 0 but was [" + maxInputLength + "]")__            }_            this.maxInputLength = maxInputLength__            return this__        };param,max,input,length,maximum,expected,prefix,length,note,prefixes,longer,than,this,will,be,truncated;public,builder,max,input,length,int,max,input,length,if,max,input,length,0,throw,new,illegal,argument,exception,fields,get,preferred,name,must,be,0,but,was,max,input,length,this,max,input,length,max,input,length,return,this
CompletionFieldMapper -> Builder -> public Builder maxInputLength(int maxInputLength);1526981569;@param maxInputLength maximum expected prefix length_NOTE: prefixes longer than this will_be truncated;public Builder maxInputLength(int maxInputLength) {_            if (maxInputLength <= 0) {_                throw new IllegalArgumentException(Fields.MAX_INPUT_LENGTH.getPreferredName() + " must be > 0 but was [" + maxInputLength + "]")__            }_            this.maxInputLength = maxInputLength__            return this__        };param,max,input,length,maximum,expected,prefix,length,note,prefixes,longer,than,this,will,be,truncated;public,builder,max,input,length,int,max,input,length,if,max,input,length,0,throw,new,illegal,argument,exception,fields,get,preferred,name,must,be,0,but,was,max,input,length,this,max,input,length,max,input,length,return,this
CompletionFieldMapper -> Builder -> public Builder maxInputLength(int maxInputLength);1527840262;@param maxInputLength maximum expected prefix length_NOTE: prefixes longer than this will_be truncated;public Builder maxInputLength(int maxInputLength) {_            if (maxInputLength <= 0) {_                throw new IllegalArgumentException(Fields.MAX_INPUT_LENGTH.getPreferredName() + " must be > 0 but was [" + maxInputLength + "]")__            }_            this.maxInputLength = maxInputLength__            return this__        };param,max,input,length,maximum,expected,prefix,length,note,prefixes,longer,than,this,will,be,truncated;public,builder,max,input,length,int,max,input,length,if,max,input,length,0,throw,new,illegal,argument,exception,fields,get,preferred,name,must,be,0,but,was,max,input,length,this,max,input,length,max,input,length,return,this
CompletionFieldMapper -> Builder -> public Builder maxInputLength(int maxInputLength);1536137328;@param maxInputLength maximum expected prefix length_NOTE: prefixes longer than this will_be truncated;public Builder maxInputLength(int maxInputLength) {_            if (maxInputLength <= 0) {_                throw new IllegalArgumentException(Fields.MAX_INPUT_LENGTH.getPreferredName() + " must be > 0 but was [" + maxInputLength + "]")__            }_            this.maxInputLength = maxInputLength__            return this__        };param,max,input,length,maximum,expected,prefix,length,note,prefixes,longer,than,this,will,be,truncated;public,builder,max,input,length,int,max,input,length,if,max,input,length,0,throw,new,illegal,argument,exception,fields,get,preferred,name,must,be,0,but,was,max,input,length,this,max,input,length,max,input,length,return,this
CompletionFieldMapper -> Builder -> public Builder maxInputLength(int maxInputLength);1538509426;@param maxInputLength maximum expected prefix length_NOTE: prefixes longer than this will_be truncated;public Builder maxInputLength(int maxInputLength) {_            if (maxInputLength <= 0) {_                throw new IllegalArgumentException(Fields.MAX_INPUT_LENGTH.getPreferredName() + " must be > 0 but was [" + maxInputLength + "]")__            }_            this.maxInputLength = maxInputLength__            return this__        };param,max,input,length,maximum,expected,prefix,length,note,prefixes,longer,than,this,will,be,truncated;public,builder,max,input,length,int,max,input,length,if,max,input,length,0,throw,new,illegal,argument,exception,fields,get,preferred,name,must,be,0,but,was,max,input,length,this,max,input,length,max,input,length,return,this
CompletionFieldMapper -> Builder -> public Builder maxInputLength(int maxInputLength);1541008027;@param maxInputLength maximum expected prefix length_NOTE: prefixes longer than this will_be truncated;public Builder maxInputLength(int maxInputLength) {_            if (maxInputLength <= 0) {_                throw new IllegalArgumentException(Fields.MAX_INPUT_LENGTH.getPreferredName()_                    + " must be > 0 but was [" + maxInputLength + "]")__            }_            this.maxInputLength = maxInputLength__            return this__        };param,max,input,length,maximum,expected,prefix,length,note,prefixes,longer,than,this,will,be,truncated;public,builder,max,input,length,int,max,input,length,if,max,input,length,0,throw,new,illegal,argument,exception,fields,get,preferred,name,must,be,0,but,was,max,input,length,this,max,input,length,max,input,length,return,this
CompletionFieldMapper -> Builder -> public Builder maxInputLength(int maxInputLength);1542357322;@param maxInputLength maximum expected prefix length_NOTE: prefixes longer than this will_be truncated;public Builder maxInputLength(int maxInputLength) {_            if (maxInputLength <= 0) {_                throw new IllegalArgumentException(Fields.MAX_INPUT_LENGTH.getPreferredName()_                    + " must be > 0 but was [" + maxInputLength + "]")__            }_            this.maxInputLength = maxInputLength__            return this__        };param,max,input,length,maximum,expected,prefix,length,note,prefixes,longer,than,this,will,be,truncated;public,builder,max,input,length,int,max,input,length,if,max,input,length,0,throw,new,illegal,argument,exception,fields,get,preferred,name,must,be,0,but,was,max,input,length,this,max,input,length,max,input,length,return,this
CompletionFieldMapper -> Builder -> public Builder maxInputLength(int maxInputLength);1550490699;@param maxInputLength maximum expected prefix length_NOTE: prefixes longer than this will_be truncated;public Builder maxInputLength(int maxInputLength) {_            if (maxInputLength <= 0) {_                throw new IllegalArgumentException(Fields.MAX_INPUT_LENGTH.getPreferredName()_                    + " must be > 0 but was [" + maxInputLength + "]")__            }_            this.maxInputLength = maxInputLength__            return this__        };param,max,input,length,maximum,expected,prefix,length,note,prefixes,longer,than,this,will,be,truncated;public,builder,max,input,length,int,max,input,length,if,max,input,length,0,throw,new,illegal,argument,exception,fields,get,preferred,name,must,be,0,but,was,max,input,length,this,max,input,length,max,input,length,return,this
CompletionFieldMapper -> Builder -> public Builder contextMappings(ContextMappings contextMappings);1524684173;Add context mapping to this field_@param contextMappings see {@link ContextMappings#load(Object, Version)};public Builder contextMappings(ContextMappings contextMappings) {_            this.contextMappings = contextMappings__            return this__        };add,context,mapping,to,this,field,param,context,mappings,see,link,context,mappings,load,object,version;public,builder,context,mappings,context,mappings,context,mappings,this,context,mappings,context,mappings,return,this
CompletionFieldMapper -> Builder -> public Builder contextMappings(ContextMappings contextMappings);1526981569;Add context mapping to this field_@param contextMappings see {@link ContextMappings#load(Object, Version)};public Builder contextMappings(ContextMappings contextMappings) {_            this.contextMappings = contextMappings__            return this__        };add,context,mapping,to,this,field,param,context,mappings,see,link,context,mappings,load,object,version;public,builder,context,mappings,context,mappings,context,mappings,this,context,mappings,context,mappings,return,this
CompletionFieldMapper -> Builder -> public Builder contextMappings(ContextMappings contextMappings);1527840262;Add context mapping to this field_@param contextMappings see {@link ContextMappings#load(Object, Version)};public Builder contextMappings(ContextMappings contextMappings) {_            this.contextMappings = contextMappings__            return this__        };add,context,mapping,to,this,field,param,context,mappings,see,link,context,mappings,load,object,version;public,builder,context,mappings,context,mappings,context,mappings,this,context,mappings,context,mappings,return,this
CompletionFieldMapper -> Builder -> public Builder contextMappings(ContextMappings contextMappings);1536137328;Add context mapping to this field_@param contextMappings see {@link ContextMappings#load(Object, Version)};public Builder contextMappings(ContextMappings contextMappings) {_            this.contextMappings = contextMappings__            return this__        };add,context,mapping,to,this,field,param,context,mappings,see,link,context,mappings,load,object,version;public,builder,context,mappings,context,mappings,context,mappings,this,context,mappings,context,mappings,return,this
CompletionFieldMapper -> Builder -> public Builder contextMappings(ContextMappings contextMappings);1538509426;Add context mapping to this field_@param contextMappings see {@link ContextMappings#load(Object, Version)};public Builder contextMappings(ContextMappings contextMappings) {_            this.contextMappings = contextMappings__            return this__        };add,context,mapping,to,this,field,param,context,mappings,see,link,context,mappings,load,object,version;public,builder,context,mappings,context,mappings,context,mappings,this,context,mappings,context,mappings,return,this
CompletionFieldMapper -> Builder -> public Builder contextMappings(ContextMappings contextMappings);1541008027;Add context mapping to this field_@param contextMappings see {@link ContextMappings#load(Object, Version)};public Builder contextMappings(ContextMappings contextMappings) {_            this.contextMappings = contextMappings__            return this__        };add,context,mapping,to,this,field,param,context,mappings,see,link,context,mappings,load,object,version;public,builder,context,mappings,context,mappings,context,mappings,this,context,mappings,context,mappings,return,this
CompletionFieldMapper -> Builder -> public Builder contextMappings(ContextMappings contextMappings);1542357322;Add context mapping to this field_@param contextMappings see {@link ContextMappings#load(Object, Version)};public Builder contextMappings(ContextMappings contextMappings) {_            this.contextMappings = contextMappings__            return this__        };add,context,mapping,to,this,field,param,context,mappings,see,link,context,mappings,load,object,version;public,builder,context,mappings,context,mappings,context,mappings,this,context,mappings,context,mappings,return,this
CompletionFieldMapper -> Builder -> public Builder contextMappings(ContextMappings contextMappings);1550490699;Add context mapping to this field_@param contextMappings see {@link ContextMappings#load(Object, Version)};public Builder contextMappings(ContextMappings contextMappings) {_            this.contextMappings = contextMappings__            return this__        };add,context,mapping,to,this,field,param,context,mappings,see,link,context,mappings,load,object,version;public,builder,context,mappings,context,mappings,context,mappings,this,context,mappings,context,mappings,return,this
CompletionFieldMapper -> @Override     public Mapper parse(ParseContext context) throws IOException;1524684173;Parses and indexes inputs__Parsing:_Acceptable format:_"STRING" - interpreted as field value (input)_"ARRAY" - each element can be one of "OBJECT" (see below)_"OBJECT" - { "input": STRING|ARRAY, "weight": STRING|INT, "contexts": ARRAY|OBJECT }__Indexing:_if context mappings are defined, delegates to {@link ContextMappings#addField(ParseContext.Document, String, String, int, Map)}_else adds inputs as a {@link org.apache.lucene.search.suggest.document.SuggestField};@Override_    public Mapper parse(ParseContext context) throws IOException {_        _        XContentParser parser = context.parser()__        Token token = parser.currentToken()__        Map<String, CompletionInputMetaData> inputMap = new HashMap<>(1)__        if (token == Token.VALUE_NULL) {_            throw new MapperParsingException("completion field [" + fieldType().name() + "] does not support null values")__        } else if (token == Token.START_ARRAY) {_            while ((token = parser.nextToken()) != Token.END_ARRAY) {_                parse(context, token, parser, inputMap)__            }_        } else {_            parse(context, token, parser, inputMap)__        }__        _        for (Map.Entry<String, CompletionInputMetaData> completionInput : inputMap.entrySet()) {_            String input = completionInput.getKey()__            _            if (input.length() > maxInputLength) {_                int len = Math.min(maxInputLength, input.length())__                if (Character.isHighSurrogate(input.charAt(len - 1))) {_                    assert input.length() >= len + 1 && Character.isLowSurrogate(input.charAt(len))__                    len += 1__                }_                input = input.substring(0, len)__            }_            CompletionInputMetaData metaData = completionInput.getValue()__            if (fieldType().hasContextMappings()) {_                fieldType().getContextMappings().addField(context.doc(), fieldType().name(),_                        input, metaData.weight, metaData.contexts)__            } else {_                context.doc().add(new SuggestField(fieldType().name(), input, metaData.weight))__            }_        }_        List<IndexableField> fields = new ArrayList<>(1)__        createFieldNamesField(context, fields)__        for (IndexableField field : fields) {_            context.doc().add(field)__        }_        multiFields.parse(this, context)__        return null__    };parses,and,indexes,inputs,parsing,acceptable,format,string,interpreted,as,field,value,input,array,each,element,can,be,one,of,object,see,below,object,input,string,array,weight,string,int,contexts,array,object,indexing,if,context,mappings,are,defined,delegates,to,link,context,mappings,add,field,parse,context,document,string,string,int,map,else,adds,inputs,as,a,link,org,apache,lucene,search,suggest,document,suggest,field;override,public,mapper,parse,parse,context,context,throws,ioexception,xcontent,parser,parser,context,parser,token,token,parser,current,token,map,string,completion,input,meta,data,input,map,new,hash,map,1,if,token,token,throw,new,mapper,parsing,exception,completion,field,field,type,name,does,not,support,null,values,else,if,token,token,while,token,parser,next,token,token,parse,context,token,parser,input,map,else,parse,context,token,parser,input,map,for,map,entry,string,completion,input,meta,data,completion,input,input,map,entry,set,string,input,completion,input,get,key,if,input,length,max,input,length,int,len,math,min,max,input,length,input,length,if,character,is,high,surrogate,input,char,at,len,1,assert,input,length,len,1,character,is,low,surrogate,input,char,at,len,len,1,input,input,substring,0,len,completion,input,meta,data,meta,data,completion,input,get,value,if,field,type,has,context,mappings,field,type,get,context,mappings,add,field,context,doc,field,type,name,input,meta,data,weight,meta,data,contexts,else,context,doc,add,new,suggest,field,field,type,name,input,meta,data,weight,list,indexable,field,fields,new,array,list,1,create,field,names,field,context,fields,for,indexable,field,field,fields,context,doc,add,field,multi,fields,parse,this,context,return,null
CompletionFieldMapper -> @Override     public Mapper parse(ParseContext context) throws IOException;1526981569;Parses and indexes inputs__Parsing:_Acceptable format:_"STRING" - interpreted as field value (input)_"ARRAY" - each element can be one of "OBJECT" (see below)_"OBJECT" - { "input": STRING|ARRAY, "weight": STRING|INT, "contexts": ARRAY|OBJECT }__Indexing:_if context mappings are defined, delegates to {@link ContextMappings#addField(ParseContext.Document, String, String, int, Map)}_else adds inputs as a {@link org.apache.lucene.search.suggest.document.SuggestField};@Override_    public Mapper parse(ParseContext context) throws IOException {_        _        XContentParser parser = context.parser()__        Token token = parser.currentToken()__        Map<String, CompletionInputMetaData> inputMap = new HashMap<>(1)__        if (token == Token.VALUE_NULL) {_            throw new MapperParsingException("completion field [" + fieldType().name() + "] does not support null values")__        } else if (token == Token.START_ARRAY) {_            while ((token = parser.nextToken()) != Token.END_ARRAY) {_                parse(context, token, parser, inputMap)__            }_        } else {_            parse(context, token, parser, inputMap)__        }__        _        for (Map.Entry<String, CompletionInputMetaData> completionInput : inputMap.entrySet()) {_            String input = completionInput.getKey()__            if (input.trim().isEmpty()) {_                context.addIgnoredField(fieldType.name())__                continue__            }_            _            if (input.length() > maxInputLength) {_                int len = Math.min(maxInputLength, input.length())__                if (Character.isHighSurrogate(input.charAt(len - 1))) {_                    assert input.length() >= len + 1 && Character.isLowSurrogate(input.charAt(len))__                    len += 1__                }_                input = input.substring(0, len)__            }_            CompletionInputMetaData metaData = completionInput.getValue()__            if (fieldType().hasContextMappings()) {_                fieldType().getContextMappings().addField(context.doc(), fieldType().name(),_                        input, metaData.weight, metaData.contexts)__            } else {_                context.doc().add(new SuggestField(fieldType().name(), input, metaData.weight))__            }_        }_        List<IndexableField> fields = new ArrayList<>(1)__        createFieldNamesField(context, fields)__        for (IndexableField field : fields) {_            context.doc().add(field)__        }_        multiFields.parse(this, context)__        return null__    };parses,and,indexes,inputs,parsing,acceptable,format,string,interpreted,as,field,value,input,array,each,element,can,be,one,of,object,see,below,object,input,string,array,weight,string,int,contexts,array,object,indexing,if,context,mappings,are,defined,delegates,to,link,context,mappings,add,field,parse,context,document,string,string,int,map,else,adds,inputs,as,a,link,org,apache,lucene,search,suggest,document,suggest,field;override,public,mapper,parse,parse,context,context,throws,ioexception,xcontent,parser,parser,context,parser,token,token,parser,current,token,map,string,completion,input,meta,data,input,map,new,hash,map,1,if,token,token,throw,new,mapper,parsing,exception,completion,field,field,type,name,does,not,support,null,values,else,if,token,token,while,token,parser,next,token,token,parse,context,token,parser,input,map,else,parse,context,token,parser,input,map,for,map,entry,string,completion,input,meta,data,completion,input,input,map,entry,set,string,input,completion,input,get,key,if,input,trim,is,empty,context,add,ignored,field,field,type,name,continue,if,input,length,max,input,length,int,len,math,min,max,input,length,input,length,if,character,is,high,surrogate,input,char,at,len,1,assert,input,length,len,1,character,is,low,surrogate,input,char,at,len,len,1,input,input,substring,0,len,completion,input,meta,data,meta,data,completion,input,get,value,if,field,type,has,context,mappings,field,type,get,context,mappings,add,field,context,doc,field,type,name,input,meta,data,weight,meta,data,contexts,else,context,doc,add,new,suggest,field,field,type,name,input,meta,data,weight,list,indexable,field,fields,new,array,list,1,create,field,names,field,context,fields,for,indexable,field,field,fields,context,doc,add,field,multi,fields,parse,this,context,return,null
CompletionFieldMapper -> @Override     public Mapper parse(ParseContext context) throws IOException;1527840262;Parses and indexes inputs__Parsing:_Acceptable format:_"STRING" - interpreted as field value (input)_"ARRAY" - each element can be one of "OBJECT" (see below)_"OBJECT" - { "input": STRING|ARRAY, "weight": STRING|INT, "contexts": ARRAY|OBJECT }__Indexing:_if context mappings are defined, delegates to {@link ContextMappings#addField(ParseContext.Document, String, String, int, Map)}_else adds inputs as a {@link org.apache.lucene.search.suggest.document.SuggestField};@Override_    public Mapper parse(ParseContext context) throws IOException {_        _        XContentParser parser = context.parser()__        Token token = parser.currentToken()__        Map<String, CompletionInputMetaData> inputMap = new HashMap<>(1)__        if (token == Token.VALUE_NULL) {_            throw new MapperParsingException("completion field [" + fieldType().name() + "] does not support null values")__        } else if (token == Token.START_ARRAY) {_            while ((token = parser.nextToken()) != Token.END_ARRAY) {_                parse(context, token, parser, inputMap)__            }_        } else {_            parse(context, token, parser, inputMap)__        }__        _        for (Map.Entry<String, CompletionInputMetaData> completionInput : inputMap.entrySet()) {_            String input = completionInput.getKey()__            if (input.trim().isEmpty()) {_                context.addIgnoredField(fieldType.name())__                continue__            }_            _            if (input.length() > maxInputLength) {_                int len = Math.min(maxInputLength, input.length())__                if (Character.isHighSurrogate(input.charAt(len - 1))) {_                    assert input.length() >= len + 1 && Character.isLowSurrogate(input.charAt(len))__                    len += 1__                }_                input = input.substring(0, len)__            }_            CompletionInputMetaData metaData = completionInput.getValue()__            if (fieldType().hasContextMappings()) {_                fieldType().getContextMappings().addField(context.doc(), fieldType().name(),_                        input, metaData.weight, metaData.contexts)__            } else {_                context.doc().add(new SuggestField(fieldType().name(), input, metaData.weight))__            }_        }_        List<IndexableField> fields = new ArrayList<>(1)__        createFieldNamesField(context, fields)__        for (IndexableField field : fields) {_            context.doc().add(field)__        }_        multiFields.parse(this, context)__        return null__    };parses,and,indexes,inputs,parsing,acceptable,format,string,interpreted,as,field,value,input,array,each,element,can,be,one,of,object,see,below,object,input,string,array,weight,string,int,contexts,array,object,indexing,if,context,mappings,are,defined,delegates,to,link,context,mappings,add,field,parse,context,document,string,string,int,map,else,adds,inputs,as,a,link,org,apache,lucene,search,suggest,document,suggest,field;override,public,mapper,parse,parse,context,context,throws,ioexception,xcontent,parser,parser,context,parser,token,token,parser,current,token,map,string,completion,input,meta,data,input,map,new,hash,map,1,if,token,token,throw,new,mapper,parsing,exception,completion,field,field,type,name,does,not,support,null,values,else,if,token,token,while,token,parser,next,token,token,parse,context,token,parser,input,map,else,parse,context,token,parser,input,map,for,map,entry,string,completion,input,meta,data,completion,input,input,map,entry,set,string,input,completion,input,get,key,if,input,trim,is,empty,context,add,ignored,field,field,type,name,continue,if,input,length,max,input,length,int,len,math,min,max,input,length,input,length,if,character,is,high,surrogate,input,char,at,len,1,assert,input,length,len,1,character,is,low,surrogate,input,char,at,len,len,1,input,input,substring,0,len,completion,input,meta,data,meta,data,completion,input,get,value,if,field,type,has,context,mappings,field,type,get,context,mappings,add,field,context,doc,field,type,name,input,meta,data,weight,meta,data,contexts,else,context,doc,add,new,suggest,field,field,type,name,input,meta,data,weight,list,indexable,field,fields,new,array,list,1,create,field,names,field,context,fields,for,indexable,field,field,fields,context,doc,add,field,multi,fields,parse,this,context,return,null
CompletionFieldMapper -> CompletionFieldType -> public static synchronized PostingsFormat postingsFormat();1524684173;@return postings format to use for this field-type;public static synchronized PostingsFormat postingsFormat() {_            if (postingsFormat == null) {_                postingsFormat = new Completion50PostingsFormat()__            }_            return postingsFormat__        };return,postings,format,to,use,for,this,field,type;public,static,synchronized,postings,format,postings,format,if,postings,format,null,postings,format,new,completion50postings,format,return,postings,format
CompletionFieldMapper -> CompletionFieldType -> public static synchronized PostingsFormat postingsFormat();1526981569;@return postings format to use for this field-type;public static synchronized PostingsFormat postingsFormat() {_            if (postingsFormat == null) {_                postingsFormat = new Completion50PostingsFormat()__            }_            return postingsFormat__        };return,postings,format,to,use,for,this,field,type;public,static,synchronized,postings,format,postings,format,if,postings,format,null,postings,format,new,completion50postings,format,return,postings,format
CompletionFieldMapper -> CompletionFieldType -> public static synchronized PostingsFormat postingsFormat();1527840262;@return postings format to use for this field-type;public static synchronized PostingsFormat postingsFormat() {_            if (postingsFormat == null) {_                postingsFormat = new Completion50PostingsFormat()__            }_            return postingsFormat__        };return,postings,format,to,use,for,this,field,type;public,static,synchronized,postings,format,postings,format,if,postings,format,null,postings,format,new,completion50postings,format,return,postings,format
CompletionFieldMapper -> CompletionFieldType -> public static synchronized PostingsFormat postingsFormat();1536137328;@return postings format to use for this field-type;public static synchronized PostingsFormat postingsFormat() {_            if (postingsFormat == null) {_                postingsFormat = new Completion50PostingsFormat()__            }_            return postingsFormat__        };return,postings,format,to,use,for,this,field,type;public,static,synchronized,postings,format,postings,format,if,postings,format,null,postings,format,new,completion50postings,format,return,postings,format
CompletionFieldMapper -> CompletionFieldType -> public static synchronized PostingsFormat postingsFormat();1538509426;@return postings format to use for this field-type;public static synchronized PostingsFormat postingsFormat() {_            if (postingsFormat == null) {_                postingsFormat = new Completion50PostingsFormat()__            }_            return postingsFormat__        };return,postings,format,to,use,for,this,field,type;public,static,synchronized,postings,format,postings,format,if,postings,format,null,postings,format,new,completion50postings,format,return,postings,format
CompletionFieldMapper -> CompletionFieldType -> public static synchronized PostingsFormat postingsFormat();1541008027;@return postings format to use for this field-type;public static synchronized PostingsFormat postingsFormat() {_            if (postingsFormat == null) {_                postingsFormat = new Completion50PostingsFormat()__            }_            return postingsFormat__        };return,postings,format,to,use,for,this,field,type;public,static,synchronized,postings,format,postings,format,if,postings,format,null,postings,format,new,completion50postings,format,return,postings,format
CompletionFieldMapper -> CompletionFieldType -> public static synchronized PostingsFormat postingsFormat();1542357322;@return postings format to use for this field-type;public static synchronized PostingsFormat postingsFormat() {_            if (postingsFormat == null) {_                postingsFormat = new Completion50PostingsFormat()__            }_            return postingsFormat__        };return,postings,format,to,use,for,this,field,type;public,static,synchronized,postings,format,postings,format,if,postings,format,null,postings,format,new,completion50postings,format,return,postings,format
CompletionFieldMapper -> CompletionFieldType -> public static synchronized PostingsFormat postingsFormat();1550490699;@return postings format to use for this field-type;public static synchronized PostingsFormat postingsFormat() {_            if (postingsFormat == null) {_                postingsFormat = new Completion50PostingsFormat()__            }_            return postingsFormat__        };return,postings,format,to,use,for,this,field,type;public,static,synchronized,postings,format,postings,format,if,postings,format,null,postings,format,new,completion50postings,format,return,postings,format
CompletionFieldMapper -> CompletionFieldType -> public CompletionQuery regexpQuery(Object value, int flags, int maxDeterminizedStates);1524684173;Completion prefix regular expression query;public CompletionQuery regexpQuery(Object value, int flags, int maxDeterminizedStates) {_            return new RegexCompletionQuery(new Term(name(), indexedValueForSearch(value)), flags, maxDeterminizedStates)__        };completion,prefix,regular,expression,query;public,completion,query,regexp,query,object,value,int,flags,int,max,determinized,states,return,new,regex,completion,query,new,term,name,indexed,value,for,search,value,flags,max,determinized,states
CompletionFieldMapper -> CompletionFieldType -> public CompletionQuery regexpQuery(Object value, int flags, int maxDeterminizedStates);1526981569;Completion prefix regular expression query;public CompletionQuery regexpQuery(Object value, int flags, int maxDeterminizedStates) {_            return new RegexCompletionQuery(new Term(name(), indexedValueForSearch(value)), flags, maxDeterminizedStates)__        };completion,prefix,regular,expression,query;public,completion,query,regexp,query,object,value,int,flags,int,max,determinized,states,return,new,regex,completion,query,new,term,name,indexed,value,for,search,value,flags,max,determinized,states
CompletionFieldMapper -> CompletionFieldType -> public CompletionQuery regexpQuery(Object value, int flags, int maxDeterminizedStates);1527840262;Completion prefix regular expression query;public CompletionQuery regexpQuery(Object value, int flags, int maxDeterminizedStates) {_            return new RegexCompletionQuery(new Term(name(), indexedValueForSearch(value)), flags, maxDeterminizedStates)__        };completion,prefix,regular,expression,query;public,completion,query,regexp,query,object,value,int,flags,int,max,determinized,states,return,new,regex,completion,query,new,term,name,indexed,value,for,search,value,flags,max,determinized,states
CompletionFieldMapper -> CompletionFieldType -> public CompletionQuery regexpQuery(Object value, int flags, int maxDeterminizedStates);1536137328;Completion prefix regular expression query;public CompletionQuery regexpQuery(Object value, int flags, int maxDeterminizedStates) {_            return new RegexCompletionQuery(new Term(name(), indexedValueForSearch(value)), flags, maxDeterminizedStates)__        };completion,prefix,regular,expression,query;public,completion,query,regexp,query,object,value,int,flags,int,max,determinized,states,return,new,regex,completion,query,new,term,name,indexed,value,for,search,value,flags,max,determinized,states
CompletionFieldMapper -> CompletionFieldType -> public CompletionQuery regexpQuery(Object value, int flags, int maxDeterminizedStates);1538509426;Completion prefix regular expression query;public CompletionQuery regexpQuery(Object value, int flags, int maxDeterminizedStates) {_            return new RegexCompletionQuery(new Term(name(), indexedValueForSearch(value)), flags, maxDeterminizedStates)__        };completion,prefix,regular,expression,query;public,completion,query,regexp,query,object,value,int,flags,int,max,determinized,states,return,new,regex,completion,query,new,term,name,indexed,value,for,search,value,flags,max,determinized,states
CompletionFieldMapper -> CompletionFieldType -> public CompletionQuery regexpQuery(Object value, int flags, int maxDeterminizedStates);1541008027;Completion prefix regular expression query;public CompletionQuery regexpQuery(Object value, int flags, int maxDeterminizedStates) {_            return new RegexCompletionQuery(new Term(name(), indexedValueForSearch(value)), flags, maxDeterminizedStates)__        };completion,prefix,regular,expression,query;public,completion,query,regexp,query,object,value,int,flags,int,max,determinized,states,return,new,regex,completion,query,new,term,name,indexed,value,for,search,value,flags,max,determinized,states
CompletionFieldMapper -> CompletionFieldType -> public CompletionQuery regexpQuery(Object value, int flags, int maxDeterminizedStates);1542357322;Completion prefix regular expression query;public CompletionQuery regexpQuery(Object value, int flags, int maxDeterminizedStates) {_            return new RegexCompletionQuery(new Term(name(), indexedValueForSearch(value)), flags, maxDeterminizedStates)__        };completion,prefix,regular,expression,query;public,completion,query,regexp,query,object,value,int,flags,int,max,determinized,states,return,new,regex,completion,query,new,term,name,indexed,value,for,search,value,flags,max,determinized,states
CompletionFieldMapper -> CompletionFieldType -> public CompletionQuery regexpQuery(Object value, int flags, int maxDeterminizedStates);1550490699;Completion prefix regular expression query;public CompletionQuery regexpQuery(Object value, int flags, int maxDeterminizedStates) {_            return new RegexCompletionQuery(new Term(name(), indexedValueForSearch(value)), flags, maxDeterminizedStates)__        };completion,prefix,regular,expression,query;public,completion,query,regexp,query,object,value,int,flags,int,max,determinized,states,return,new,regex,completion,query,new,term,name,indexed,value,for,search,value,flags,max,determinized,states
CompletionFieldMapper -> Builder -> public Builder(String name);1524684173;@param name of the completion field to build;public Builder(String name) {_            super(name, Defaults.FIELD_TYPE, Defaults.FIELD_TYPE)__            builder = this__        };param,name,of,the,completion,field,to,build;public,builder,string,name,super,name,defaults,defaults,builder,this
CompletionFieldMapper -> Builder -> public Builder(String name);1526981569;@param name of the completion field to build;public Builder(String name) {_            super(name, Defaults.FIELD_TYPE, Defaults.FIELD_TYPE)__            builder = this__        };param,name,of,the,completion,field,to,build;public,builder,string,name,super,name,defaults,defaults,builder,this
CompletionFieldMapper -> Builder -> public Builder(String name);1527840262;@param name of the completion field to build;public Builder(String name) {_            super(name, Defaults.FIELD_TYPE, Defaults.FIELD_TYPE)__            builder = this__        };param,name,of,the,completion,field,to,build;public,builder,string,name,super,name,defaults,defaults,builder,this
CompletionFieldMapper -> Builder -> public Builder(String name);1536137328;@param name of the completion field to build;public Builder(String name) {_            super(name, Defaults.FIELD_TYPE, Defaults.FIELD_TYPE)__            builder = this__        };param,name,of,the,completion,field,to,build;public,builder,string,name,super,name,defaults,defaults,builder,this
CompletionFieldMapper -> Builder -> public Builder(String name);1538509426;@param name of the completion field to build;public Builder(String name) {_            super(name, Defaults.FIELD_TYPE, Defaults.FIELD_TYPE)__            builder = this__        };param,name,of,the,completion,field,to,build;public,builder,string,name,super,name,defaults,defaults,builder,this
CompletionFieldMapper -> Builder -> public Builder(String name);1541008027;@param name of the completion field to build;public Builder(String name) {_            super(name, Defaults.FIELD_TYPE, Defaults.FIELD_TYPE)__            builder = this__        };param,name,of,the,completion,field,to,build;public,builder,string,name,super,name,defaults,defaults,builder,this
CompletionFieldMapper -> Builder -> public Builder(String name);1542357322;@param name of the completion field to build;public Builder(String name) {_            super(name, Defaults.FIELD_TYPE, Defaults.FIELD_TYPE)__            builder = this__        };param,name,of,the,completion,field,to,build;public,builder,string,name,super,name,defaults,defaults,builder,this
CompletionFieldMapper -> Builder -> public Builder(String name);1550490699;@param name of the completion field to build;public Builder(String name) {_            super(name, Defaults.FIELD_TYPE, Defaults.FIELD_TYPE)__            builder = this__        };param,name,of,the,completion,field,to,build;public,builder,string,name,super,name,defaults,defaults,builder,this
CompletionFieldMapper -> CompletionFieldType -> public ContextMappings getContextMappings();1524684173;@return associated context mappings for this field type;public ContextMappings getContextMappings() {_            return contextMappings__        };return,associated,context,mappings,for,this,field,type;public,context,mappings,get,context,mappings,return,context,mappings
CompletionFieldMapper -> CompletionFieldType -> public ContextMappings getContextMappings();1526981569;@return associated context mappings for this field type;public ContextMappings getContextMappings() {_            return contextMappings__        };return,associated,context,mappings,for,this,field,type;public,context,mappings,get,context,mappings,return,context,mappings
CompletionFieldMapper -> CompletionFieldType -> public ContextMappings getContextMappings();1527840262;@return associated context mappings for this field type;public ContextMappings getContextMappings() {_            return contextMappings__        };return,associated,context,mappings,for,this,field,type;public,context,mappings,get,context,mappings,return,context,mappings
CompletionFieldMapper -> CompletionFieldType -> public ContextMappings getContextMappings();1536137328;@return associated context mappings for this field type;public ContextMappings getContextMappings() {_            return contextMappings__        };return,associated,context,mappings,for,this,field,type;public,context,mappings,get,context,mappings,return,context,mappings
CompletionFieldMapper -> CompletionFieldType -> public ContextMappings getContextMappings();1538509426;@return associated context mappings for this field type;public ContextMappings getContextMappings() {_            return contextMappings__        };return,associated,context,mappings,for,this,field,type;public,context,mappings,get,context,mappings,return,context,mappings
CompletionFieldMapper -> CompletionFieldType -> public ContextMappings getContextMappings();1541008027;@return associated context mappings for this field type;public ContextMappings getContextMappings() {_            return contextMappings__        };return,associated,context,mappings,for,this,field,type;public,context,mappings,get,context,mappings,return,context,mappings
CompletionFieldMapper -> CompletionFieldType -> public ContextMappings getContextMappings();1542357322;@return associated context mappings for this field type;public ContextMappings getContextMappings() {_            return contextMappings__        };return,associated,context,mappings,for,this,field,type;public,context,mappings,get,context,mappings,return,context,mappings
CompletionFieldMapper -> CompletionFieldType -> public ContextMappings getContextMappings();1550490699;@return associated context mappings for this field type;public ContextMappings getContextMappings() {_            return contextMappings__        };return,associated,context,mappings,for,this,field,type;public,context,mappings,get,context,mappings,return,context,mappings
