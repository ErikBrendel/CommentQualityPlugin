# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractClient -> @Override     public final <Request extends ActionRequest, Response extends ActionResponse> void execute(             Action<Request, Response> action, Request request, ActionListener<Response> listener);1527840262;This is the single execution point of *all* clients.;@Override_    public final <Request extends ActionRequest, Response extends ActionResponse> void execute(_            Action<Request, Response> action, Request request, ActionListener<Response> listener) {_        listener = threadedWrapper.wrap(listener)__        doExecute(action, request, listener)__    };this,is,the,single,execution,point,of,all,clients;override,public,final,request,extends,action,request,response,extends,action,response,void,execute,action,request,response,action,request,request,action,listener,response,listener,listener,threaded,wrapper,wrap,listener,do,execute,action,request,listener
AbstractClient -> @Override     public final <Request extends ActionRequest, Response extends ActionResponse> void execute(             Action<Request, Response> action, Request request, ActionListener<Response> listener);1529341607;This is the single execution point of *all* clients.;@Override_    public final <Request extends ActionRequest, Response extends ActionResponse> void execute(_            Action<Request, Response> action, Request request, ActionListener<Response> listener) {_        listener = threadedWrapper.wrap(listener)__        doExecute(action, request, listener)__    };this,is,the,single,execution,point,of,all,clients;override,public,final,request,extends,action,request,response,extends,action,response,void,execute,action,request,response,action,request,request,action,listener,response,listener,listener,threaded,wrapper,wrap,listener,do,execute,action,request,listener
AbstractClient -> @Override     public final <Request extends ActionRequest, Response extends ActionResponse> void execute(         Action<Response> action, Request request, ActionListener<Response> listener);1529433467;This is the single execution point of *all* clients.;@Override_    public final <Request extends ActionRequest, Response extends ActionResponse> void execute(_        Action<Response> action, Request request, ActionListener<Response> listener) {_        listener = threadedWrapper.wrap(listener)__        doExecute(action, request, listener)__    };this,is,the,single,execution,point,of,all,clients;override,public,final,request,extends,action,request,response,extends,action,response,void,execute,action,response,action,request,request,action,listener,response,listener,listener,threaded,wrapper,wrap,listener,do,execute,action,request,listener
AbstractClient -> @Override     public final <Request extends ActionRequest, Response extends ActionResponse> void execute(         Action<Response> action, Request request, ActionListener<Response> listener);1529600205;This is the single execution point of *all* clients.;@Override_    public final <Request extends ActionRequest, Response extends ActionResponse> void execute(_        Action<Response> action, Request request, ActionListener<Response> listener) {_        listener = threadedWrapper.wrap(listener)__        doExecute(action, request, listener)__    };this,is,the,single,execution,point,of,all,clients;override,public,final,request,extends,action,request,response,extends,action,response,void,execute,action,response,action,request,request,action,listener,response,listener,listener,threaded,wrapper,wrap,listener,do,execute,action,request,listener
AbstractClient -> @Override     public final <Request extends ActionRequest, Response extends ActionResponse> void execute(         Action<Response> action, Request request, ActionListener<Response> listener);1533815246;This is the single execution point of *all* clients.;@Override_    public final <Request extends ActionRequest, Response extends ActionResponse> void execute(_        Action<Response> action, Request request, ActionListener<Response> listener) {_        listener = threadedWrapper.wrap(listener)__        doExecute(action, request, listener)__    };this,is,the,single,execution,point,of,all,clients;override,public,final,request,extends,action,request,response,extends,action,response,void,execute,action,response,action,request,request,action,listener,response,listener,listener,threaded,wrapper,wrap,listener,do,execute,action,request,listener
AbstractClient -> @Override     public final <Request extends ActionRequest, Response extends ActionResponse> void execute(         Action<Response> action, Request request, ActionListener<Response> listener);1534362961;This is the single execution point of *all* clients.;@Override_    public final <Request extends ActionRequest, Response extends ActionResponse> void execute(_        Action<Response> action, Request request, ActionListener<Response> listener) {_        listener = threadedWrapper.wrap(listener)__        doExecute(action, request, listener)__    };this,is,the,single,execution,point,of,all,clients;override,public,final,request,extends,action,request,response,extends,action,response,void,execute,action,response,action,request,request,action,listener,response,listener,listener,threaded,wrapper,wrap,listener,do,execute,action,request,listener
AbstractClient -> @Override     public final <Request extends ActionRequest, Response extends ActionResponse> void execute(         Action<Response> action, Request request, ActionListener<Response> listener);1535666657;This is the single execution point of *all* clients.;@Override_    public final <Request extends ActionRequest, Response extends ActionResponse> void execute(_        Action<Response> action, Request request, ActionListener<Response> listener) {_        listener = threadedWrapper.wrap(listener)__        doExecute(action, request, listener)__    };this,is,the,single,execution,point,of,all,clients;override,public,final,request,extends,action,request,response,extends,action,response,void,execute,action,response,action,request,request,action,listener,response,listener,listener,threaded,wrapper,wrap,listener,do,execute,action,request,listener
AbstractClient -> @Override     public final <Request extends ActionRequest, Response extends ActionResponse> void execute(         Action<Response> action, Request request, ActionListener<Response> listener);1540238977;This is the single execution point of *all* clients.;@Override_    public final <Request extends ActionRequest, Response extends ActionResponse> void execute(_        Action<Response> action, Request request, ActionListener<Response> listener) {_        listener = threadedWrapper.wrap(listener)__        doExecute(action, request, listener)__    };this,is,the,single,execution,point,of,all,clients;override,public,final,request,extends,action,request,response,extends,action,response,void,execute,action,response,action,request,request,action,listener,response,listener,listener,threaded,wrapper,wrap,listener,do,execute,action,request,listener
AbstractClient -> @Override     public final <Request extends ActionRequest, Response extends ActionResponse> void execute(         Action<Response> action, Request request, ActionListener<Response> listener);1540847035;This is the single execution point of *all* clients.;@Override_    public final <Request extends ActionRequest, Response extends ActionResponse> void execute(_        Action<Response> action, Request request, ActionListener<Response> listener) {_        listener = threadedWrapper.wrap(listener)__        doExecute(action, request, listener)__    };this,is,the,single,execution,point,of,all,clients;override,public,final,request,extends,action,request,response,extends,action,response,void,execute,action,response,action,request,request,action,listener,response,listener,listener,threaded,wrapper,wrap,listener,do,execute,action,request,listener
AbstractClient -> @Override     public final <Request extends ActionRequest, Response extends ActionResponse> void execute(         Action<Response> action, Request request, ActionListener<Response> listener);1540912197;This is the single execution point of *all* clients.;@Override_    public final <Request extends ActionRequest, Response extends ActionResponse> void execute(_        Action<Response> action, Request request, ActionListener<Response> listener) {_        listener = threadedWrapper.wrap(listener)__        doExecute(action, request, listener)__    };this,is,the,single,execution,point,of,all,clients;override,public,final,request,extends,action,request,response,extends,action,response,void,execute,action,response,action,request,request,action,listener,response,listener,listener,threaded,wrapper,wrap,listener,do,execute,action,request,listener
AbstractClient -> @Override     public final <Request extends ActionRequest, Response extends ActionResponse> void execute(         Action<Response> action, Request request, ActionListener<Response> listener);1541008027;This is the single execution point of *all* clients.;@Override_    public final <Request extends ActionRequest, Response extends ActionResponse> void execute(_        Action<Response> action, Request request, ActionListener<Response> listener) {_        listener = threadedWrapper.wrap(listener)__        doExecute(action, request, listener)__    };this,is,the,single,execution,point,of,all,clients;override,public,final,request,extends,action,request,response,extends,action,response,void,execute,action,response,action,request,request,action,listener,response,listener,listener,threaded,wrapper,wrap,listener,do,execute,action,request,listener
AbstractClient -> @Override     public final <Request extends ActionRequest, Response extends ActionResponse> void execute(         Action<Response> action, Request request, ActionListener<Response> listener);1541092382;This is the single execution point of *all* clients.;@Override_    public final <Request extends ActionRequest, Response extends ActionResponse> void execute(_        Action<Response> action, Request request, ActionListener<Response> listener) {_        listener = threadedWrapper.wrap(listener)__        doExecute(action, request, listener)__    };this,is,the,single,execution,point,of,all,clients;override,public,final,request,extends,action,request,response,extends,action,response,void,execute,action,response,action,request,request,action,listener,response,listener,listener,threaded,wrapper,wrap,listener,do,execute,action,request,listener
AbstractClient -> @Override     public final <Request extends ActionRequest, Response extends ActionResponse> void execute(         Action<Response> action, Request request, ActionListener<Response> listener);1542402632;This is the single execution point of *all* clients.;@Override_    public final <Request extends ActionRequest, Response extends ActionResponse> void execute(_        Action<Response> action, Request request, ActionListener<Response> listener) {_        listener = threadedWrapper.wrap(listener)__        doExecute(action, request, listener)__    };this,is,the,single,execution,point,of,all,clients;override,public,final,request,extends,action,request,response,extends,action,response,void,execute,action,response,action,request,request,action,listener,response,listener,listener,threaded,wrapper,wrap,listener,do,execute,action,request,listener
AbstractClient -> @Override     public final <Request extends ActionRequest, Response extends ActionResponse> void execute(         Action<Response> action, Request request, ActionListener<Response> listener);1543861362;This is the single execution point of *all* clients.;@Override_    public final <Request extends ActionRequest, Response extends ActionResponse> void execute(_        Action<Response> action, Request request, ActionListener<Response> listener) {_        listener = threadedWrapper.wrap(listener)__        doExecute(action, request, listener)__    };this,is,the,single,execution,point,of,all,clients;override,public,final,request,extends,action,request,response,extends,action,response,void,execute,action,response,action,request,request,action,listener,response,listener,listener,threaded,wrapper,wrap,listener,do,execute,action,request,listener
AbstractClient -> @Override     public final <Request extends ActionRequest, Response extends ActionResponse> void execute(         Action<Response> action, Request request, ActionListener<Response> listener);1547460878;This is the single execution point of *all* clients.;@Override_    public final <Request extends ActionRequest, Response extends ActionResponse> void execute(_        Action<Response> action, Request request, ActionListener<Response> listener) {_        listener = threadedWrapper.wrap(listener)__        doExecute(action, request, listener)__    };this,is,the,single,execution,point,of,all,clients;override,public,final,request,extends,action,request,response,extends,action,response,void,execute,action,response,action,request,request,action,listener,response,listener,listener,threaded,wrapper,wrap,listener,do,execute,action,request,listener
