commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public TransportAddress[] boundAddresses() {     return boundAddresses. }
false;public;0;3;;public TransportAddress publishAddress() {     return publishAddress. }
false;public,static;1;5;;public static BoundTransportAddress readBoundTransportAddress(StreamInput in) throws IOException {     BoundTransportAddress addr = new BoundTransportAddress().     addr.readFrom(in).     return addr. }
false;public;1;9;;@Override public void readFrom(StreamInput in) throws IOException {     int boundAddressLength = in.readInt().     boundAddresses = new TransportAddress[boundAddressLength].     for (int i = 0. i < boundAddressLength. i++) {         boundAddresses[i] = new TransportAddress(in).     }     publishAddress = new TransportAddress(in). }
false;public;1;8;;@Override public void writeTo(StreamOutput out) throws IOException {     out.writeInt(boundAddresses.length).     for (TransportAddress address : boundAddresses) {         address.writeTo(out).     }     publishAddress.writeTo(out). }
false;public;0;17;;@Override public String toString() {     StringBuilder builder = new StringBuilder("publish_address {").     builder.append(publishAddress).     builder.append("}, bound_addresses ").     boolean firstAdded = false.     for (TransportAddress address : boundAddresses) {         if (firstAdded) {             builder.append(", ").         } else {             firstAdded = true.         }         builder.append("{").append(address).append("}").     }     return builder.toString(). }
