commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;5;;@Override protected String executor() {     // we go async right away     return ThreadPool.Names.SAME. }
false;protected;0;4;;@Override protected AcknowledgedResponse newResponse() {     return new AcknowledgedResponse(). }
false;protected;2;10;;@Override protected ClusterBlockException checkBlock(PutMappingRequest request, ClusterState state) {     String[] indices.     if (request.getConcreteIndex() == null) {         indices = indexNameExpressionResolver.concreteIndexNames(state, request).     } else {         indices = new String[] { request.getConcreteIndex().getName() }.     }     return state.blocks().indicesBlockedException(ClusterBlockLevel.METADATA_WRITE, indices). }
false;public;1;4;;@Override public void onResponse(ClusterStateUpdateResponse response) {     listener.onResponse(new AcknowledgedResponse(response.isAcknowledged())). }
false;public;1;6;;@Override public void onFailure(Exception t) {     logger.debug(() -> new ParameterizedMessage("failed to put mappings on indices [{}], type [{}]", concreteIndices, request.type()), t).     listener.onFailure(t). }
false;protected;3;37;;@Override protected void masterOperation(final PutMappingRequest request, final ClusterState state, final ActionListener<AcknowledgedResponse> listener) {     try {         final Index[] concreteIndices = request.getConcreteIndex() == null ? indexNameExpressionResolver.concreteIndices(state, request) : new Index[] { request.getConcreteIndex() }.         final Exception validationException = requestValidators.validateRequest(request, state, concreteIndices).         if (validationException != null) {             listener.onFailure(validationException).             return.         }         PutMappingClusterStateUpdateRequest updateRequest = new PutMappingClusterStateUpdateRequest().ackTimeout(request.timeout()).masterNodeTimeout(request.masterNodeTimeout()).indices(concreteIndices).type(request.type()).source(request.source()).         metaDataMappingService.putMapping(updateRequest, new ActionListener<ClusterStateUpdateResponse>() {              @Override             public void onResponse(ClusterStateUpdateResponse response) {                 listener.onResponse(new AcknowledgedResponse(response.isAcknowledged())).             }              @Override             public void onFailure(Exception t) {                 logger.debug(() -> new ParameterizedMessage("failed to put mappings on indices [{}], type [{}]", concreteIndices, request.type()), t).                 listener.onFailure(t).             }         }).     } catch (IndexNotFoundException ex) {         logger.debug(() -> new ParameterizedMessage("failed to put mappings on indices [{}], type [{}]", request.indices(), request.type()), ex).         throw ex.     } }
false;private;3;12;;private Exception validateRequest(PutMappingRequest request, ClusterState state, Index[] indices) {     Exception firstException = null.     for (MappingRequestValidator validator : validators) {         final Exception e = validator.validateRequest(request, state, indices).         if (firstException == null) {             firstException = e.         } else {             firstException.addSuppressed(e).         }     }     return firstException. }
