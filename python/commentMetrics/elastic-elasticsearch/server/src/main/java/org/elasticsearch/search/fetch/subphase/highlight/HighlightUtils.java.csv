commented;modifiers;parameterAmount;loc;comment;code
true;public,static;4;23;/**  * Load field values for highlighting.  */ ;/**  * Load field values for highlighting.  */ public static List<Object> loadFieldValues(SearchContextHighlight.Field field, MappedFieldType fieldType, SearchContext searchContext, FetchSubPhase.HitContext hitContext) throws IOException {     // percolator needs to always load from source, thus it sets the global force source to true     boolean forceSource = searchContext.highlight().forceSource(field).     List<Object> textsToHighlight.     if (!forceSource && fieldType.stored()) {         CustomFieldsVisitor fieldVisitor = new CustomFieldsVisitor(singleton(fieldType.name()), false).         hitContext.reader().document(hitContext.docId(), fieldVisitor).         textsToHighlight = fieldVisitor.fields().get(fieldType.name()).         if (textsToHighlight == null) {             // Can happen if the document doesn't have the field to highlight             textsToHighlight = Collections.emptyList().         }     } else {         SourceLookup sourceLookup = searchContext.lookup().source().         sourceLookup.setSegmentAndDocument(hitContext.readerContext(), hitContext.docId()).         textsToHighlight = sourceLookup.extractRawValues(fieldType.name()).     }     assert textsToHighlight != null.     return textsToHighlight. }
false;static;2;9;;static Analyzer getAnalyzer(DocumentMapper docMapper, MappedFieldType type) {     if (type instanceof KeywordFieldMapper.KeywordFieldType) {         KeywordFieldMapper.KeywordFieldType keywordFieldType = (KeywordFieldMapper.KeywordFieldType) type.         if (keywordFieldType.normalizer() != null) {             return keywordFieldType.normalizer().         }     }     return docMapper.mappers().indexAnalyzer(). }
