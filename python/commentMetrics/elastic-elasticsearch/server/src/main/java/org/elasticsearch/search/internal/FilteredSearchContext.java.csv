commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public boolean hasStoredFields() {     return in.hasStoredFields(). }
false;public;0;4;;@Override public boolean hasStoredFieldsContext() {     return in.hasStoredFieldsContext(). }
false;public;0;4;;@Override public boolean storedFieldsRequested() {     return in.storedFieldsRequested(). }
false;public;0;4;;@Override public StoredFieldsContext storedFieldsContext() {     return in.storedFieldsContext(). }
false;public;1;4;;@Override public SearchContext storedFieldsContext(StoredFieldsContext storedFieldsContext) {     return in.storedFieldsContext(storedFieldsContext). }
false;protected;0;4;;@Override protected void doClose() {     in.doClose(). }
false;public;1;4;;@Override public void preProcess(boolean rewrite) {     in.preProcess(rewrite). }
false;public;1;4;;@Override public Query buildFilteredQuery(Query query) {     return in.buildFilteredQuery(query). }
false;public;0;4;;@Override public long id() {     return in.id(). }
false;public;0;4;;@Override public String source() {     return in.source(). }
false;public;0;4;;@Override public ShardSearchRequest request() {     return in.request(). }
false;public;0;4;;@Override public SearchType searchType() {     return in.searchType(). }
false;public;0;4;;@Override public SearchShardTarget shardTarget() {     return in.shardTarget(). }
false;public;0;4;;@Override public int numberOfShards() {     return in.numberOfShards(). }
false;public;0;4;;@Override public float queryBoost() {     return in.queryBoost(). }
false;public;0;4;;@Override public long getOriginNanoTime() {     return in.getOriginNanoTime(). }
false;public;0;4;;@Override public ScrollContext scrollContext() {     return in.scrollContext(). }
false;public;1;4;;@Override public SearchContext scrollContext(ScrollContext scroll) {     return in.scrollContext(scroll). }
false;public;0;4;;@Override public SearchContextAggregations aggregations() {     return in.aggregations(). }
false;public;1;4;;@Override public SearchContext aggregations(SearchContextAggregations aggregations) {     return in.aggregations(aggregations). }
false;public;0;4;;@Override public SearchContextHighlight highlight() {     return in.highlight(). }
false;public;1;4;;@Override public void highlight(SearchContextHighlight highlight) {     in.highlight(highlight). }
false;public;0;4;;@Override public InnerHitsContext innerHits() {     return in.innerHits(). }
false;public;0;4;;@Override public SuggestionSearchContext suggest() {     return in.suggest(). }
false;public;1;4;;@Override public void suggest(SuggestionSearchContext suggest) {     in.suggest(suggest). }
false;public;0;4;;@Override public List<RescoreContext> rescore() {     return in.rescore(). }
false;public;1;4;;@Override public void addRescore(RescoreContext rescore) {     in.addRescore(rescore). }
false;public;0;4;;@Override public boolean hasScriptFields() {     return in.hasScriptFields(). }
false;public;0;4;;@Override public ScriptFieldsContext scriptFields() {     return in.scriptFields(). }
false;public;0;4;;@Override public boolean sourceRequested() {     return in.sourceRequested(). }
false;public;0;4;;@Override public boolean hasFetchSourceContext() {     return in.hasFetchSourceContext(). }
false;public;0;4;;@Override public FetchSourceContext fetchSourceContext() {     return in.fetchSourceContext(). }
false;public;1;4;;@Override public SearchContext fetchSourceContext(FetchSourceContext fetchSourceContext) {     return in.fetchSourceContext(fetchSourceContext). }
false;public;0;4;;@Override public ContextIndexSearcher searcher() {     return in.searcher(). }
false;public;0;4;;@Override public IndexShard indexShard() {     return in.indexShard(). }
false;public;0;4;;@Override public MapperService mapperService() {     return in.mapperService(). }
false;public;0;4;;@Override public SimilarityService similarityService() {     return in.similarityService(). }
false;public;0;4;;@Override public BigArrays bigArrays() {     return in.bigArrays(). }
false;public;0;4;;@Override public BitsetFilterCache bitsetFilterCache() {     return in.bitsetFilterCache(). }
false;public;1;4;;@Override public <IFD extends IndexFieldData<?>> IFD getForField(MappedFieldType fieldType) {     return in.getForField(fieldType). }
false;public;0;4;;@Override public TimeValue timeout() {     return in.timeout(). }
false;public;1;4;;@Override public void timeout(TimeValue timeout) {     in.timeout(timeout). }
false;public;0;4;;@Override public int terminateAfter() {     return in.terminateAfter(). }
false;public;1;4;;@Override public void terminateAfter(int terminateAfter) {     in.terminateAfter(terminateAfter). }
false;public;0;4;;@Override public boolean lowLevelCancellation() {     return in.lowLevelCancellation(). }
false;public;1;4;;@Override public SearchContext minimumScore(float minimumScore) {     return in.minimumScore(minimumScore). }
false;public;0;4;;@Override public Float minimumScore() {     return in.minimumScore(). }
false;public;1;4;;@Override public SearchContext sort(SortAndFormats sort) {     return in.sort(sort). }
false;public;0;4;;@Override public SortAndFormats sort() {     return in.sort(). }
false;public;1;4;;@Override public SearchContext trackScores(boolean trackScores) {     return in.trackScores(trackScores). }
false;public;0;4;;@Override public boolean trackScores() {     return in.trackScores(). }
false;public;1;4;;@Override public SearchContext trackTotalHitsUpTo(int trackTotalHitsUpTo) {     return in.trackTotalHitsUpTo(trackTotalHitsUpTo). }
false;public;0;4;;@Override public int trackTotalHitsUpTo() {     return in.trackTotalHitsUpTo(). }
false;public;1;4;;@Override public SearchContext searchAfter(FieldDoc searchAfter) {     return in.searchAfter(searchAfter). }
false;public;0;4;;@Override public FieldDoc searchAfter() {     return in.searchAfter(). }
false;public;1;4;;@Override public SearchContext parsedPostFilter(ParsedQuery postFilter) {     return in.parsedPostFilter(postFilter). }
false;public;0;4;;@Override public ParsedQuery parsedPostFilter() {     return in.parsedPostFilter(). }
false;public;0;4;;@Override public Query aliasFilter() {     return in.aliasFilter(). }
false;public;1;4;;@Override public SearchContext parsedQuery(ParsedQuery query) {     return in.parsedQuery(query). }
false;public;0;4;;@Override public ParsedQuery parsedQuery() {     return in.parsedQuery(). }
false;public;0;4;;@Override public Query query() {     return in.query(). }
false;public;0;4;;@Override public int from() {     return in.from(). }
false;public;1;4;;@Override public SearchContext from(int from) {     return in.from(from). }
false;public;0;4;;@Override public int size() {     return in.size(). }
false;public;1;4;;@Override public SearchContext size(int size) {     return in.size(size). }
false;public;0;4;;@Override public boolean explain() {     return in.explain(). }
false;public;1;4;;@Override public void explain(boolean explain) {     in.explain(explain). }
false;public;0;4;;@Override public List<String> groupStats() {     return in.groupStats(). }
false;public;1;4;;@Override public void groupStats(List<String> groupStats) {     in.groupStats(groupStats). }
false;public;0;4;;@Override public boolean version() {     return in.version(). }
false;public;1;4;;@Override public void version(boolean version) {     in.version(version). }
false;public;0;4;;@Override public boolean seqNoAndPrimaryTerm() {     return in.seqNoAndPrimaryTerm(). }
false;public;1;4;;@Override public void seqNoAndPrimaryTerm(boolean seqNoAndPrimaryTerm) {     in.seqNoAndPrimaryTerm(seqNoAndPrimaryTerm). }
false;public;0;4;;@Override public int[] docIdsToLoad() {     return in.docIdsToLoad(). }
false;public;0;4;;@Override public int docIdsToLoadFrom() {     return in.docIdsToLoadFrom(). }
false;public;0;4;;@Override public int docIdsToLoadSize() {     return in.docIdsToLoadSize(). }
false;public;3;4;;@Override public SearchContext docIdsToLoad(int[] docIdsToLoad, int docsIdsToLoadFrom, int docsIdsToLoadSize) {     return in.docIdsToLoad(docIdsToLoad, docsIdsToLoadFrom, docsIdsToLoadSize). }
false;public;1;4;;@Override public void accessed(long accessTime) {     in.accessed(accessTime). }
false;public;0;4;;@Override public long lastAccessTime() {     return in.lastAccessTime(). }
false;public;0;4;;@Override public long keepAlive() {     return in.keepAlive(). }
false;public;1;4;;@Override public void keepAlive(long keepAlive) {     in.keepAlive(keepAlive). }
false;public;0;4;;@Override public SearchLookup lookup() {     return in.lookup(). }
false;public;0;4;;@Override public DfsSearchResult dfsResult() {     return in.dfsResult(). }
false;public;0;4;;@Override public QuerySearchResult queryResult() {     return in.queryResult(). }
false;public;0;4;;@Override public FetchSearchResult fetchResult() {     return in.fetchResult(). }
false;public;0;4;;@Override public FetchPhase fetchPhase() {     return in.fetchPhase(). }
false;public;1;4;;@Override public MappedFieldType smartNameFieldType(String name) {     return in.smartNameFieldType(name). }
false;public;1;4;;@Override public ObjectMapper getObjectMapper(String name) {     return in.getObjectMapper(name). }
false;public;0;4;;@Override public long getRelativeTimeInMillis() {     return in.getRelativeTimeInMillis(). }
false;public;1;4;;@Override public void addSearchExt(SearchExtBuilder searchExtBuilder) {     in.addSearchExt(searchExtBuilder). }
false;public;1;4;;@Override public SearchExtBuilder getSearchExt(String name) {     return in.getSearchExt(name). }
false;public;0;4;;@Override public Profilers getProfilers() {     return in.getProfilers(). }
false;public;0;2;;@Override public Map<Class<?>, Collector> queryCollectors() {     return in.queryCollectors(). }
false;public;0;4;;@Override public QueryShardContext getQueryShardContext() {     return in.getQueryShardContext(). }
false;public;1;4;;@Override public void setTask(SearchTask task) {     in.setTask(task). }
false;public;0;4;;@Override public SearchTask getTask() {     return in.getTask(). }
false;public;0;4;;@Override public boolean isCancelled() {     return in.isCancelled(). }
false;public;1;4;;@Override public SearchContext collapse(CollapseContext collapse) {     return in.collapse(collapse). }
false;public;0;4;;@Override public CollapseContext collapse() {     return in.collapse(). }
