# id;timestamp;commentText;codeText;commentWords;codeWords
RandomScoreFunction -> public RandomScoreFunction(int seed, int salt, IndexFieldData<?> uidFieldData);1524684173;Creates a RandomScoreFunction.__@param seed A seed for randomness_@param salt A value to salt the seed with, ideally unique to the running node/index_@param uidFieldData The field data for _uid to use for generating consistent random values for the same id;public RandomScoreFunction(int seed, int salt, IndexFieldData<?> uidFieldData) {_        super(CombineFunction.MULTIPLY)__        this.originalSeed = seed__        this.saltedSeed = BitMixer.mix(seed, salt)__        this.fieldData = uidFieldData__    };creates,a,random,score,function,param,seed,a,seed,for,randomness,param,salt,a,value,to,salt,the,seed,with,ideally,unique,to,the,running,node,index,param,uid,field,data,the,field,data,for,to,use,for,generating,consistent,random,values,for,the,same,id;public,random,score,function,int,seed,int,salt,index,field,data,uid,field,data,super,combine,function,multiply,this,original,seed,seed,this,salted,seed,bit,mixer,mix,seed,salt,this,field,data,uid,field,data
RandomScoreFunction -> public RandomScoreFunction(int seed, int salt, IndexFieldData<?> uidFieldData);1536314350;Creates a RandomScoreFunction.__@param seed A seed for randomness_@param salt A value to salt the seed with, ideally unique to the running node/index_@param uidFieldData The field data for _uid to use for generating consistent random values for the same id;public RandomScoreFunction(int seed, int salt, IndexFieldData<?> uidFieldData) {_        super(CombineFunction.MULTIPLY)__        this.originalSeed = seed__        this.saltedSeed = BitMixer.mix(seed, salt)__        this.fieldData = uidFieldData__    };creates,a,random,score,function,param,seed,a,seed,for,randomness,param,salt,a,value,to,salt,the,seed,with,ideally,unique,to,the,running,node,index,param,uid,field,data,the,field,data,for,to,use,for,generating,consistent,random,values,for,the,same,id;public,random,score,function,int,seed,int,salt,index,field,data,uid,field,data,super,combine,function,multiply,this,original,seed,seed,this,salted,seed,bit,mixer,mix,seed,salt,this,field,data,uid,field,data
RandomScoreFunction -> public RandomScoreFunction(int seed, int salt, IndexFieldData<?> uidFieldData);1537371806;Creates a RandomScoreFunction.__@param seed A seed for randomness_@param salt A value to salt the seed with, ideally unique to the running node/index_@param uidFieldData The field data for _uid to use for generating consistent random values for the same id;public RandomScoreFunction(int seed, int salt, IndexFieldData<?> uidFieldData) {_        super(CombineFunction.MULTIPLY)__        this.originalSeed = seed__        this.saltedSeed = BitMixer.mix(seed, salt)__        this.fieldData = uidFieldData__    };creates,a,random,score,function,param,seed,a,seed,for,randomness,param,salt,a,value,to,salt,the,seed,with,ideally,unique,to,the,running,node,index,param,uid,field,data,the,field,data,for,to,use,for,generating,consistent,random,values,for,the,same,id;public,random,score,function,int,seed,int,salt,index,field,data,uid,field,data,super,combine,function,multiply,this,original,seed,seed,this,salted,seed,bit,mixer,mix,seed,salt,this,field,data,uid,field,data
