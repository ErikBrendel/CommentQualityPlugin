commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String getName() {     return "get_settings_action". }
false;public;2;16;;@Override public RestChannelConsumer prepareRequest(final RestRequest request, final NodeClient client) throws IOException {     final String[] names = request.paramAsStringArrayOrEmptyIfAll("name").     final boolean renderDefaults = request.paramAsBoolean("include_defaults", false).     // This is required so the "flat_settings" parameter counts as consumed     request.paramAsBoolean("flat_settings", false).     GetSettingsRequest getSettingsRequest = new GetSettingsRequest().indices(Strings.splitStringByCommaToArray(request.param("index"))).indicesOptions(IndicesOptions.fromRequest(request, IndicesOptions.strictExpandOpen())).humanReadable(request.hasParam("human")).includeDefaults(renderDefaults).names(names).     getSettingsRequest.local(request.paramAsBoolean("local", getSettingsRequest.local())).     getSettingsRequest.masterNodeTimeout(request.paramAsTime("master_timeout", getSettingsRequest.masterNodeTimeout())).     return channel -> client.admin().indices().getSettings(getSettingsRequest, new RestToXContentListener<>(channel)). }
