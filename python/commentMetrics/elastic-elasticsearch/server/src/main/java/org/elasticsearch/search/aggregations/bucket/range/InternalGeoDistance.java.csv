commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected InternalRange.Factory<Bucket, ?> getFactory() {     return FACTORY. }
false;;0;3;;boolean keyed() {     return keyed. }
false;public;0;4;;@Override public ValuesSourceType getValueSourceType() {     return ValuesSourceType.GEOPOINT. }
false;public;0;4;;@Override public ValueType getValueType() {     return ValueType.GEOPOINT. }
false;public;6;5;;@Override public InternalGeoDistance create(String name, List<Bucket> ranges, DocValueFormat format, boolean keyed, List<PipelineAggregator> pipelineAggregators, Map<String, Object> metaData) {     return new InternalGeoDistance(name, ranges, keyed, pipelineAggregators, metaData). }
false;public;2;5;;@Override public InternalGeoDistance create(List<Bucket> ranges, InternalGeoDistance prototype) {     return new InternalGeoDistance(prototype.name, ranges, prototype.keyed, prototype.pipelineAggregators(), prototype.metaData). }
false;public;7;5;;@Override public Bucket createBucket(String key, double from, double to, long docCount, InternalAggregations aggregations, boolean keyed, DocValueFormat format) {     return new Bucket(key, from, to, docCount, aggregations, keyed). }
false;public;2;5;;@Override public Bucket createBucket(InternalAggregations aggregations, Bucket prototype) {     return new Bucket(prototype.getKey(), ((Number) prototype.getFrom()).doubleValue(), ((Number) prototype.getTo()).doubleValue(), prototype.getDocCount(), aggregations, prototype.getKeyed()). }
false;public;0;4;;@Override public InternalRange.Factory<Bucket, InternalGeoDistance> getFactory() {     return FACTORY. }
false;public;0;4;;@Override public String getWriteableName() {     return GeoDistanceAggregationBuilder.NAME. }
