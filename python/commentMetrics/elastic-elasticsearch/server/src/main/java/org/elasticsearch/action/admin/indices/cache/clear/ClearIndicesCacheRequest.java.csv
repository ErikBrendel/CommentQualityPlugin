commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public boolean queryCache() {     return queryCache. }
false;public;1;4;;public ClearIndicesCacheRequest queryCache(boolean queryCache) {     this.queryCache = queryCache.     return this. }
false;public;0;3;;public boolean requestCache() {     return this.requestCache. }
false;public;1;4;;public ClearIndicesCacheRequest requestCache(boolean requestCache) {     this.requestCache = requestCache.     return this. }
false;public;0;3;;public boolean fieldDataCache() {     return this.fieldDataCache. }
false;public;1;4;;public ClearIndicesCacheRequest fieldDataCache(boolean fieldDataCache) {     this.fieldDataCache = fieldDataCache.     return this. }
false;public;1;4;;public ClearIndicesCacheRequest fields(String... fields) {     this.fields = fields == null ? Strings.EMPTY_ARRAY : fields.     return this. }
false;public;0;3;;public String[] fields() {     return this.fields. }
false;public;1;11;;@Override public void readFrom(StreamInput in) throws IOException {     super.readFrom(in).     queryCache = in.readBoolean().     fieldDataCache = in.readBoolean().     if (in.getVersion().before(Version.V_6_0_0_beta1)) {         // recycler         in.readBoolean().     }     fields = in.readStringArray().     requestCache = in.readBoolean(). }
false;public;1;11;;@Override public void writeTo(StreamOutput out) throws IOException {     super.writeTo(out).     out.writeBoolean(queryCache).     out.writeBoolean(fieldDataCache).     if (out.getVersion().before(Version.V_6_0_0_beta1)) {         // recycler         out.writeBoolean(false).     }     out.writeStringArrayNullable(fields).     out.writeBoolean(requestCache). }
