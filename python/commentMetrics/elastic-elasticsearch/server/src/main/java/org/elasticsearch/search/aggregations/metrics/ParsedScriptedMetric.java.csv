commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String getType() {     return ScriptedMetricAggregationBuilder.NAME. }
false;public;0;5;;@Override public Object aggregation() {     // see InternalScriptedMetric#aggregations() for why we can assume this     assert aggregation.size() == 1.     return aggregation.get(0). }
false;public;2;4;;@Override public XContentBuilder doXContentBody(XContentBuilder builder, Params params) throws IOException {     return builder.field(CommonFields.VALUE.getPreferredName(), aggregation()). }
false;private,static;1;24;;private static Object parseValue(XContentParser parser) throws IOException {     Token token = parser.currentToken().     Object value = null.     if (token == XContentParser.Token.VALUE_NULL) {         value = null.     } else if (token.isValue()) {         if (token == XContentParser.Token.VALUE_STRING) {             // binary values will be parsed back and returned as base64 strings when reading from json and yaml             value = parser.text().         } else if (token == XContentParser.Token.VALUE_NUMBER) {             value = parser.numberValue().         } else if (token == XContentParser.Token.VALUE_BOOLEAN) {             value = parser.booleanValue().         } else if (token == XContentParser.Token.VALUE_EMBEDDED_OBJECT) {             // binary values will be parsed back and returned as BytesArray when reading from cbor and smile             value = new BytesArray(parser.binaryValue()).         }     } else if (token == XContentParser.Token.START_OBJECT) {         value = parser.map().     } else if (token == XContentParser.Token.START_ARRAY) {         value = parser.list().     }     return value. }
false;public,static;2;5;;public static ParsedScriptedMetric fromXContent(XContentParser parser, final String name) {     ParsedScriptedMetric aggregation = PARSER.apply(parser, null).     aggregation.setName(name).     return aggregation. }
