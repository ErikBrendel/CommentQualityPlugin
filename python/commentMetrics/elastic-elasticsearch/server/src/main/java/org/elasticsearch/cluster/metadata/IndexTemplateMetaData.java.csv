# id;timestamp;commentText;codeText;commentWords;codeWords
IndexTemplateMetaData -> Builder -> public static void toXContentWithTypes(IndexTemplateMetaData indexTemplateMetaData,                                                XContentBuilder builder,                                                ToXContent.Params params) throws IOException;1547500081;Serializes the template to xContent, using the legacy format where the mappings are_nested under the type name.__This method is used for serializing templates before storing them in the cluster metadata,_and also in the REST layer when returning a deprecated typed response.;public static void toXContentWithTypes(IndexTemplateMetaData indexTemplateMetaData,_                                               XContentBuilder builder,_                                               ToXContent.Params params) throws IOException {_            builder.startObject(indexTemplateMetaData.name())__            toInnerXContent(indexTemplateMetaData, builder, params, true)__            builder.endObject()__        };serializes,the,template,to,x,content,using,the,legacy,format,where,the,mappings,are,nested,under,the,type,name,this,method,is,used,for,serializing,templates,before,storing,them,in,the,cluster,metadata,and,also,in,the,rest,layer,when,returning,a,deprecated,typed,response;public,static,void,to,xcontent,with,types,index,template,meta,data,index,template,meta,data,xcontent,builder,builder,to,xcontent,params,params,throws,ioexception,builder,start,object,index,template,meta,data,name,to,inner,xcontent,index,template,meta,data,builder,params,true,builder,end,object
IndexTemplateMetaData -> Builder -> public static void toXContentWithTypes(IndexTemplateMetaData indexTemplateMetaData,                                                XContentBuilder builder,                                                ToXContent.Params params) throws IOException;1548265937;Serializes the template to xContent, using the legacy format where the mappings are_nested under the type name.__This method is used for serializing templates before storing them in the cluster metadata,_and also in the REST layer when returning a deprecated typed response.;public static void toXContentWithTypes(IndexTemplateMetaData indexTemplateMetaData,_                                               XContentBuilder builder,_                                               ToXContent.Params params) throws IOException {_            builder.startObject(indexTemplateMetaData.name())__            toInnerXContent(indexTemplateMetaData, builder, params, true)__            builder.endObject()__        };serializes,the,template,to,x,content,using,the,legacy,format,where,the,mappings,are,nested,under,the,type,name,this,method,is,used,for,serializing,templates,before,storing,them,in,the,cluster,metadata,and,also,in,the,rest,layer,when,returning,a,deprecated,typed,response;public,static,void,to,xcontent,with,types,index,template,meta,data,index,template,meta,data,xcontent,builder,builder,to,xcontent,params,params,throws,ioexception,builder,start,object,index,template,meta,data,name,to,inner,xcontent,index,template,meta,data,builder,params,true,builder,end,object
IndexTemplateMetaData -> Builder -> public static void toXContent(IndexTemplateMetaData indexTemplateMetaData,                                       XContentBuilder builder,                                       ToXContent.Params params) throws IOException;1547500081;Serializes the template to xContent, making sure not to nest mappings under the_type name.__Note that this method should currently only be used for creating REST responses,_and not when directly updating stored templates. Index templates are still stored_in the old, typed format, and have yet to be migrated to be typeless.;public static void toXContent(IndexTemplateMetaData indexTemplateMetaData,_                                      XContentBuilder builder,_                                      ToXContent.Params params) throws IOException {_            builder.startObject(indexTemplateMetaData.name())__            toInnerXContent(indexTemplateMetaData, builder, params, false)__            builder.endObject()__        };serializes,the,template,to,x,content,making,sure,not,to,nest,mappings,under,the,type,name,note,that,this,method,should,currently,only,be,used,for,creating,rest,responses,and,not,when,directly,updating,stored,templates,index,templates,are,still,stored,in,the,old,typed,format,and,have,yet,to,be,migrated,to,be,typeless;public,static,void,to,xcontent,index,template,meta,data,index,template,meta,data,xcontent,builder,builder,to,xcontent,params,params,throws,ioexception,builder,start,object,index,template,meta,data,name,to,inner,xcontent,index,template,meta,data,builder,params,false,builder,end,object
IndexTemplateMetaData -> Builder -> public static void toXContent(IndexTemplateMetaData indexTemplateMetaData,                                       XContentBuilder builder,                                       ToXContent.Params params) throws IOException;1548265937;Serializes the template to xContent, making sure not to nest mappings under the_type name.__Note that this method should currently only be used for creating REST responses,_and not when directly updating stored templates. Index templates are still stored_in the old, typed format, and have yet to be migrated to be typeless.;public static void toXContent(IndexTemplateMetaData indexTemplateMetaData,_                                      XContentBuilder builder,_                                      ToXContent.Params params) throws IOException {_            builder.startObject(indexTemplateMetaData.name())__            toInnerXContent(indexTemplateMetaData, builder, params, false)__            builder.endObject()__        };serializes,the,template,to,x,content,making,sure,not,to,nest,mappings,under,the,type,name,note,that,this,method,should,currently,only,be,used,for,creating,rest,responses,and,not,when,directly,updating,stored,templates,index,templates,are,still,stored,in,the,old,typed,format,and,have,yet,to,be,migrated,to,be,typeless;public,static,void,to,xcontent,index,template,meta,data,index,template,meta,data,xcontent,builder,builder,to,xcontent,params,params,throws,ioexception,builder,start,object,index,template,meta,data,name,to,inner,xcontent,index,template,meta,data,builder,params,false,builder,end,object
