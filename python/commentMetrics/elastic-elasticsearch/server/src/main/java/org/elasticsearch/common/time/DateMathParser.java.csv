# id;timestamp;commentText;codeText;commentWords;codeWords
DateMathParser -> public long parse(String text, LongSupplier now, boolean roundUp, ZoneId timeZone);1533921794;Parse text, that potentially contains date math into the milliseconds since the epoch__Examples are__<code>2014-11-18||-2y</code> substracts two years from the input date_<code>now/m</code>           rounds the current time to minute granularity__Supported rounding units are_y    year_M    month_w    week (beginning on a monday)_d    day_h/H  hour_m    minute_s    second___@param text      the input_@param now       a supplier to retrieve the current date in milliseconds, if needed for additions_@param roundUp   should the result be rounded up_@param timeZone  an optional timezone that should be applied before returning the milliseconds since the epoch_@return          the parsed date in milliseconds since the epoch;public long parse(String text, LongSupplier now, boolean roundUp, ZoneId timeZone) {_        long time__        String mathString__        if (text.startsWith("now")) {_            try {_                time = now.getAsLong()__            } catch (Exception e) {_                throw new ElasticsearchParseException("could not read the current timestamp", e)__            }_            mathString = text.substring("now".length())__        } else {_            int index = text.indexOf("||")__            if (index == -1) {_                return parseDateTime(text, timeZone, roundUp)__            }_            time = parseDateTime(text.substring(0, index), timeZone, false)__            mathString = text.substring(index + 2)__        }__        return parseMath(mathString, time, roundUp, timeZone)__    };parse,text,that,potentially,contains,date,math,into,the,milliseconds,since,the,epoch,examples,are,code,2014,11,18,2y,code,substracts,two,years,from,the,input,date,code,now,m,code,rounds,the,current,time,to,minute,granularity,supported,rounding,units,are,y,year,m,month,w,week,beginning,on,a,monday,d,day,h,h,hour,m,minute,s,second,param,text,the,input,param,now,a,supplier,to,retrieve,the,current,date,in,milliseconds,if,needed,for,additions,param,round,up,should,the,result,be,rounded,up,param,time,zone,an,optional,timezone,that,should,be,applied,before,returning,the,milliseconds,since,the,epoch,return,the,parsed,date,in,milliseconds,since,the,epoch;public,long,parse,string,text,long,supplier,now,boolean,round,up,zone,id,time,zone,long,time,string,math,string,if,text,starts,with,now,try,time,now,get,as,long,catch,exception,e,throw,new,elasticsearch,parse,exception,could,not,read,the,current,timestamp,e,math,string,text,substring,now,length,else,int,index,text,index,of,if,index,1,return,parse,date,time,text,time,zone,round,up,time,parse,date,time,text,substring,0,index,time,zone,false,math,string,text,substring,index,2,return,parse,math,math,string,time,round,up,time,zone
DateMathParser -> public long parse(String text, LongSupplier now, boolean roundUp, ZoneId timeZone);1536964057;Parse text, that potentially contains date math into the milliseconds since the epoch__Examples are__<code>2014-11-18||-2y</code> substracts two years from the input date_<code>now/m</code>           rounds the current time to minute granularity__Supported rounding units are_y    year_M    month_w    week (beginning on a monday)_d    day_h/H  hour_m    minute_s    second___@param text      the input_@param now       a supplier to retrieve the current date in milliseconds, if needed for additions_@param roundUp   should the result be rounded up_@param timeZone  an optional timezone that should be applied before returning the milliseconds since the epoch_@return          the parsed date in milliseconds since the epoch;public long parse(String text, LongSupplier now, boolean roundUp, ZoneId timeZone) {_        long time__        String mathString__        if (text.startsWith("now")) {_            try {_                time = now.getAsLong()__            } catch (Exception e) {_                throw new ElasticsearchParseException("could not read the current timestamp", e)__            }_            mathString = text.substring("now".length())__        } else {_            int index = text.indexOf("||")__            if (index == -1) {_                return parseDateTime(text, timeZone, roundUp)__            }_            time = parseDateTime(text.substring(0, index), timeZone, false)__            mathString = text.substring(index + 2)__        }__        return parseMath(mathString, time, roundUp, timeZone)__    };parse,text,that,potentially,contains,date,math,into,the,milliseconds,since,the,epoch,examples,are,code,2014,11,18,2y,code,substracts,two,years,from,the,input,date,code,now,m,code,rounds,the,current,time,to,minute,granularity,supported,rounding,units,are,y,year,m,month,w,week,beginning,on,a,monday,d,day,h,h,hour,m,minute,s,second,param,text,the,input,param,now,a,supplier,to,retrieve,the,current,date,in,milliseconds,if,needed,for,additions,param,round,up,should,the,result,be,rounded,up,param,time,zone,an,optional,timezone,that,should,be,applied,before,returning,the,milliseconds,since,the,epoch,return,the,parsed,date,in,milliseconds,since,the,epoch;public,long,parse,string,text,long,supplier,now,boolean,round,up,zone,id,time,zone,long,time,string,math,string,if,text,starts,with,now,try,time,now,get,as,long,catch,exception,e,throw,new,elasticsearch,parse,exception,could,not,read,the,current,timestamp,e,math,string,text,substring,now,length,else,int,index,text,index,of,if,index,1,return,parse,date,time,text,time,zone,round,up,time,parse,date,time,text,substring,0,index,time,zone,false,math,string,text,substring,index,2,return,parse,math,math,string,time,round,up,time,zone
DateMathParser -> long parse(String text, LongSupplier now, boolean roundUp, ZoneId tz)_;1538067637;Parse text, that potentially contains date math into the milliseconds since the epoch__Examples are__<code>2014-11-18||-2y</code> substracts two years from the input date_<code>now/m</code>           rounds the current time to minute granularity__Supported rounding units are_y    year_M    month_w    week (beginning on a monday)_d    day_h/H  hour_m    minute_s    second___@param text      the input_@param now       a supplier to retrieve the current date in milliseconds, if needed for additions_@param roundUp   should the result be rounded up_@param tz        an optional timezone that should be applied before returning the milliseconds since the epoch_@return          the parsed date in milliseconds since the epoch;long parse(String text, LongSupplier now, boolean roundUp, ZoneId tz)_;parse,text,that,potentially,contains,date,math,into,the,milliseconds,since,the,epoch,examples,are,code,2014,11,18,2y,code,substracts,two,years,from,the,input,date,code,now,m,code,rounds,the,current,time,to,minute,granularity,supported,rounding,units,are,y,year,m,month,w,week,beginning,on,a,monday,d,day,h,h,hour,m,minute,s,second,param,text,the,input,param,now,a,supplier,to,retrieve,the,current,date,in,milliseconds,if,needed,for,additions,param,round,up,should,the,result,be,rounded,up,param,tz,an,optional,timezone,that,should,be,applied,before,returning,the,milliseconds,since,the,epoch,return,the,parsed,date,in,milliseconds,since,the,epoch;long,parse,string,text,long,supplier,now,boolean,round,up,zone,id,tz
DateMathParser -> long parse(String text, LongSupplier now, boolean roundUp, ZoneId tz)_;1539615817;Parse text, that potentially contains date math into the milliseconds since the epoch__Examples are__<code>2014-11-18||-2y</code> subtracts two years from the input date_<code>now/m</code>           rounds the current time to minute granularity__Supported rounding units are_y    year_M    month_w    week (beginning on a monday)_d    day_h/H  hour_m    minute_s    second___@param text      the input_@param now       a supplier to retrieve the current date in milliseconds, if needed for additions_@param roundUp   should the result be rounded up_@param tz        an optional timezone that should be applied before returning the milliseconds since the epoch_@return          the parsed date in milliseconds since the epoch;long parse(String text, LongSupplier now, boolean roundUp, ZoneId tz)_;parse,text,that,potentially,contains,date,math,into,the,milliseconds,since,the,epoch,examples,are,code,2014,11,18,2y,code,subtracts,two,years,from,the,input,date,code,now,m,code,rounds,the,current,time,to,minute,granularity,supported,rounding,units,are,y,year,m,month,w,week,beginning,on,a,monday,d,day,h,h,hour,m,minute,s,second,param,text,the,input,param,now,a,supplier,to,retrieve,the,current,date,in,milliseconds,if,needed,for,additions,param,round,up,should,the,result,be,rounded,up,param,tz,an,optional,timezone,that,should,be,applied,before,returning,the,milliseconds,since,the,epoch,return,the,parsed,date,in,milliseconds,since,the,epoch;long,parse,string,text,long,supplier,now,boolean,round,up,zone,id,tz
DateMathParser -> default long parse(String text, LongSupplier now);1538067637;Parse a date math expression without timzeone info and rounding down.;default long parse(String text, LongSupplier now) {_        return parse(text, now, false, (ZoneId) null)__    };parse,a,date,math,expression,without,timzeone,info,and,rounding,down;default,long,parse,string,text,long,supplier,now,return,parse,text,now,false,zone,id,null
DateMathParser -> default long parse(String text, LongSupplier now);1539615817;Parse a date math expression without timzeone info and rounding down.;default long parse(String text, LongSupplier now) {_        return parse(text, now, false, (ZoneId) null)__    };parse,a,date,math,expression,without,timzeone,info,and,rounding,down;default,long,parse,string,text,long,supplier,now,return,parse,text,now,false,zone,id,null
