commented;modifiers;parameterAmount;loc;comment;code
true;default;2;3;/**  * Parse a date math expression without timzeone info and rounding down.  */ ;/**  * Parse a date math expression without timzeone info and rounding down.  */ default Instant parse(String text, LongSupplier now) {     return parse(text, now, false, (ZoneId) null). }
true;default;4;4;// exists for backcompat, do not use! ;// Note: we take a callable here for the timestamp in order to be able to figure out // if it has been used. For instance, the request cache does not cache requests that make // use of `now`. // exists for backcompat, do not use! @Deprecated default Instant parse(String text, LongSupplier now, boolean roundUp, DateTimeZone tz) {     return parse(text, now, roundUp, tz == null ? null : ZoneId.of(tz.getID())). }
true;;4;1;/**  * Parse text, that potentially contains date math into the milliseconds since the epoch  *  * Examples are  *  * <code>2014-11-18||-2y</code> subtracts two years from the input date  * <code>now/m</code>           rounds the current time to minute granularity  *  * Supported rounding units are  * y    year  * M    month  * w    week (beginning on a monday)  * d    day  * h/H  hour  * m    minute  * s    second  *  * @param text      the input  * @param now       a supplier to retrieve the current date in milliseconds, if needed for additions  * @param roundUp   should the result be rounded up  * @param tz        an optional timezone that should be applied before returning the milliseconds since the epoch  * @return          the parsed date as an Instant since the epoch  */ ;/**  * Parse text, that potentially contains date math into the milliseconds since the epoch  *  * Examples are  *  * <code>2014-11-18||-2y</code> subtracts two years from the input date  * <code>now/m</code>           rounds the current time to minute granularity  *  * Supported rounding units are  * y    year  * M    month  * w    week (beginning on a monday)  * d    day  * h/H  hour  * m    minute  * s    second  *  * @param text      the input  * @param now       a supplier to retrieve the current date in milliseconds, if needed for additions  * @param roundUp   should the result be rounded up  * @param tz        an optional timezone that should be applied before returning the milliseconds since the epoch  * @return          the parsed date as an Instant since the epoch  */ Instant parse(String text, LongSupplier now, boolean roundUp, ZoneId tz).
