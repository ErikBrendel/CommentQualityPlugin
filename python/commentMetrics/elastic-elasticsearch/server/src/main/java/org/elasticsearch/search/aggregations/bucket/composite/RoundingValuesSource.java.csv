commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public boolean isFloatingPoint() {     return false. }
false;public;1;3;;public long round(long value) {     return rounding.round(value). }
false;public;0;4;;@Override public long nextValue() throws IOException {     return round(values.nextValue()). }
false;public;0;4;;@Override public int docValueCount() {     return values.docValueCount(). }
false;public;1;4;;@Override public boolean advanceExact(int target) throws IOException {     return values.advanceExact(target). }
false;public;0;4;;@Override public int docID() {     return values.docID(). }
false;public;0;4;;@Override public int nextDoc() throws IOException {     return values.nextDoc(). }
false;public;1;4;;@Override public int advance(int target) throws IOException {     return values.advance(target). }
false;public;0;4;;@Override public long cost() {     return values.cost(). }
false;public;1;40;;@Override public SortedNumericDocValues longValues(LeafReaderContext context) throws IOException {     SortedNumericDocValues values = vs.longValues(context).     return new SortedNumericDocValues() {          @Override         public long nextValue() throws IOException {             return round(values.nextValue()).         }          @Override         public int docValueCount() {             return values.docValueCount().         }          @Override         public boolean advanceExact(int target) throws IOException {             return values.advanceExact(target).         }          @Override         public int docID() {             return values.docID().         }          @Override         public int nextDoc() throws IOException {             return values.nextDoc().         }          @Override         public int advance(int target) throws IOException {             return values.advance(target).         }          @Override         public long cost() {             return values.cost().         }     }. }
false;public;1;4;;@Override public SortedBinaryDocValues bytesValues(LeafReaderContext context) throws IOException {     throw new UnsupportedOperationException("not applicable"). }
false;public;1;4;;@Override public SortedNumericDoubleValues doubleValues(LeafReaderContext context) throws IOException {     throw new UnsupportedOperationException("not applicable"). }
