commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public String getIndex() {     return this.index. }
false;public;0;3;;public int getShard() {     return this.shard. }
false;public;0;3;;public boolean isValid() {     return this.valid. }
false;public;0;3;;public String getError() {     return this.error. }
false;public;0;3;;public String getExplanation() {     return this.explanation. }
false;public;1;12;;@Override public void readFrom(StreamInput in) throws IOException {     if (in.getVersion().onOrAfter(Version.V_6_4_0)) {         index = in.readOptionalString().     } else {         index = in.readString().     }     shard = in.readInt().     valid = in.readBoolean().     explanation = in.readOptionalString().     error = in.readOptionalString(). }
false;public;1;12;;@Override public void writeTo(StreamOutput out) throws IOException {     if (out.getVersion().onOrAfter(Version.V_6_4_0)) {         out.writeOptionalString(index).     } else {         out.writeString(index).     }     out.writeInt(shard).     out.writeBoolean(valid).     out.writeOptionalString(explanation).     out.writeOptionalString(error). }
false;public,static;1;5;;public static QueryExplanation readQueryExplanation(StreamInput in) throws IOException {     QueryExplanation exp = new QueryExplanation().     exp.readFrom(in).     return exp. }
false;public;2;17;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     if (getIndex() != null) {         builder.field(INDEX_FIELD, getIndex()).     }     if (getShard() >= 0) {         builder.field(SHARD_FIELD, getShard()).     }     builder.field(VALID_FIELD, isValid()).     if (getError() != null) {         builder.field(ERROR_FIELD, getError()).     }     if (getExplanation() != null) {         builder.field(EXPLANATION_FIELD, getExplanation()).     }     return builder. }
false;public,static;1;3;;public static QueryExplanation fromXContent(XContentParser parser) {     return PARSER.apply(parser, null). }
false;public;1;11;;@Override public boolean equals(Object o) {     if (this == o)         return true.     if (o == null || getClass() != o.getClass())         return false.     QueryExplanation other = (QueryExplanation) o.     return Objects.equals(getIndex(), other.getIndex()) && Objects.equals(getShard(), other.getShard()) && Objects.equals(isValid(), other.isValid()) && Objects.equals(getError(), other.getError()) && Objects.equals(getExplanation(), other.getExplanation()). }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(getIndex(), getShard(), isValid(), getError(), getExplanation()). }
