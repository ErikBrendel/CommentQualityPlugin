commented;modifiers;parameterAmount;loc;comment;code
false;public;1;5;;@Override public void readFrom(StreamInput in) throws IOException {     super.readFrom(in).     task = in.readOptionalWriteable(PersistentTask::new). }
false;public;1;5;;@Override public void writeTo(StreamOutput out) throws IOException {     super.writeTo(out).     out.writeOptionalWriteable(task). }
false;public;0;3;;public PersistentTask<?> getTask() {     return task. }
false;public;1;7;;@Override public boolean equals(Object o) {     if (this == o)         return true.     if (o == null || getClass() != o.getClass())         return false.     PersistentTaskResponse that = (PersistentTaskResponse) o.     return Objects.equals(task, that.task). }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(task). }
