commented;modifiers;parameterAmount;loc;comment;code
true;public;0;7;/**  * Returns the total number of shards within all groups  * @return total number of shards  */ ;/**  * Returns the total number of shards within all groups  * @return total number of shards  */ public int totalSize() {     int size = 0.     for (ShardIterator shard : iterators) {         size += shard.size().     }     return size. }
true;public;0;7;/**  * Returns the total number of shards plus the number of empty groups  * @return number of shards and empty groups  */ ;/**  * Returns the total number of shards plus the number of empty groups  * @return number of shards and empty groups  */ public int totalSizeWith1ForEmpty() {     int size = 0.     for (ShardIt shard : iterators) {         size += Math.max(1, shard.size()).     }     return size. }
true;public;0;3;/**  * Return the number of groups  * @return number of groups  */ ;/**  * Return the number of groups  * @return number of groups  */ public int size() {     return iterators.size(). }
false;public;0;4;;@Override public Iterator<ShardIt> iterator() {     return iterators.iterator(). }
false;public;1;3;;public ShardIt get(int index) {     return iterators.get(index). }
