# id;timestamp;commentText;codeText;commentWords;codeWords
MatchQueryBuilder -> public MatchQueryBuilder(StreamInput in) throws IOException;1524684173;Read from a stream.;public MatchQueryBuilder(StreamInput in) throws IOException {_        super(in)__        fieldName = in.readString()__        value = in.readGenericValue()__        if (in.getVersion().before(Version.V_6_0_0_rc1)) {_            MatchQuery.Type.readFromStream(in)_  _        }_        operator = Operator.readFromStream(in)__        if (in.getVersion().before(Version.V_6_0_0_rc1)) {_            in.readVInt()_ _        }_        prefixLength = in.readVInt()__        maxExpansions = in.readVInt()__        fuzzyTranspositions = in.readBoolean()__        lenient = in.readBoolean()__        zeroTermsQuery = MatchQuery.ZeroTermsQuery.readFromStream(in)__        _        analyzer = in.readOptionalString()__        minimumShouldMatch = in.readOptionalString()__        fuzzyRewrite = in.readOptionalString()__        fuzziness = in.readOptionalWriteable(Fuzziness::new)__        cutoffFrequency = in.readOptionalFloat()__        if (in.getVersion().onOrAfter(Version.V_6_1_0)) {_            autoGenerateSynonymsPhraseQuery = in.readBoolean()__        }_    };read,from,a,stream;public,match,query,builder,stream,input,in,throws,ioexception,super,in,field,name,in,read,string,value,in,read,generic,value,if,in,get,version,before,version,match,query,type,read,from,stream,in,operator,operator,read,from,stream,in,if,in,get,version,before,version,in,read,vint,prefix,length,in,read,vint,max,expansions,in,read,vint,fuzzy,transpositions,in,read,boolean,lenient,in,read,boolean,zero,terms,query,match,query,zero,terms,query,read,from,stream,in,analyzer,in,read,optional,string,minimum,should,match,in,read,optional,string,fuzzy,rewrite,in,read,optional,string,fuzziness,in,read,optional,writeable,fuzziness,new,cutoff,frequency,in,read,optional,float,if,in,get,version,on,or,after,version,auto,generate,synonyms,phrase,query,in,read,boolean
MatchQueryBuilder -> public MatchQueryBuilder(StreamInput in) throws IOException;1525334055;Read from a stream.;public MatchQueryBuilder(StreamInput in) throws IOException {_        super(in)__        fieldName = in.readString()__        value = in.readGenericValue()__        if (in.getVersion().before(Version.V_6_0_0_rc1)) {_            MatchQuery.Type.readFromStream(in)_  _        }_        operator = Operator.readFromStream(in)__        if (in.getVersion().before(Version.V_6_0_0_rc1)) {_            in.readVInt()_ _        }_        prefixLength = in.readVInt()__        maxExpansions = in.readVInt()__        fuzzyTranspositions = in.readBoolean()__        lenient = in.readBoolean()__        zeroTermsQuery = MatchQuery.ZeroTermsQuery.readFromStream(in)__        _        analyzer = in.readOptionalString()__        minimumShouldMatch = in.readOptionalString()__        fuzzyRewrite = in.readOptionalString()__        fuzziness = in.readOptionalWriteable(Fuzziness::new)__        cutoffFrequency = in.readOptionalFloat()__        if (in.getVersion().onOrAfter(Version.V_6_1_0)) {_            autoGenerateSynonymsPhraseQuery = in.readBoolean()__        }_    };read,from,a,stream;public,match,query,builder,stream,input,in,throws,ioexception,super,in,field,name,in,read,string,value,in,read,generic,value,if,in,get,version,before,version,match,query,type,read,from,stream,in,operator,operator,read,from,stream,in,if,in,get,version,before,version,in,read,vint,prefix,length,in,read,vint,max,expansions,in,read,vint,fuzzy,transpositions,in,read,boolean,lenient,in,read,boolean,zero,terms,query,match,query,zero,terms,query,read,from,stream,in,analyzer,in,read,optional,string,minimum,should,match,in,read,optional,string,fuzzy,rewrite,in,read,optional,string,fuzziness,in,read,optional,writeable,fuzziness,new,cutoff,frequency,in,read,optional,float,if,in,get,version,on,or,after,version,auto,generate,synonyms,phrase,query,in,read,boolean
MatchQueryBuilder -> public MatchQueryBuilder(StreamInput in) throws IOException;1544177681;Read from a stream.;public MatchQueryBuilder(StreamInput in) throws IOException {_        super(in)__        fieldName = in.readString()__        value = in.readGenericValue()__        if (in.getVersion().before(Version.V_6_0_0_rc1)) {_            MatchQuery.Type.readFromStream(in)_  _        }_        operator = Operator.readFromStream(in)__        if (in.getVersion().before(Version.V_6_0_0_rc1)) {_            in.readVInt()_ _        }_        prefixLength = in.readVInt()__        maxExpansions = in.readVInt()__        fuzzyTranspositions = in.readBoolean()__        lenient = in.readBoolean()__        zeroTermsQuery = MatchQuery.ZeroTermsQuery.readFromStream(in)__        _        analyzer = in.readOptionalString()__        minimumShouldMatch = in.readOptionalString()__        fuzzyRewrite = in.readOptionalString()__        fuzziness = in.readOptionalWriteable(Fuzziness::new)__        cutoffFrequency = in.readOptionalFloat()__        if (in.getVersion().onOrAfter(Version.V_6_1_0)) {_            autoGenerateSynonymsPhraseQuery = in.readBoolean()__        }_    };read,from,a,stream;public,match,query,builder,stream,input,in,throws,ioexception,super,in,field,name,in,read,string,value,in,read,generic,value,if,in,get,version,before,version,match,query,type,read,from,stream,in,operator,operator,read,from,stream,in,if,in,get,version,before,version,in,read,vint,prefix,length,in,read,vint,max,expansions,in,read,vint,fuzzy,transpositions,in,read,boolean,lenient,in,read,boolean,zero,terms,query,match,query,zero,terms,query,read,from,stream,in,analyzer,in,read,optional,string,minimum,should,match,in,read,optional,string,fuzzy,rewrite,in,read,optional,string,fuzziness,in,read,optional,writeable,fuzziness,new,cutoff,frequency,in,read,optional,float,if,in,get,version,on,or,after,version,auto,generate,synonyms,phrase,query,in,read,boolean
MatchQueryBuilder -> public MatchQueryBuilder(String fieldName, Object value);1524684173;Constructs a new match query.;public MatchQueryBuilder(String fieldName, Object value) {_        if (fieldName == null) {_            throw new IllegalArgumentException("[" + NAME + "] requires fieldName")__        }_        if (value == null) {_            throw new IllegalArgumentException("[" + NAME + "] requires query value")__        }_        this.fieldName = fieldName__        this.value = value__    };constructs,a,new,match,query;public,match,query,builder,string,field,name,object,value,if,field,name,null,throw,new,illegal,argument,exception,name,requires,field,name,if,value,null,throw,new,illegal,argument,exception,name,requires,query,value,this,field,name,field,name,this,value,value
MatchQueryBuilder -> public MatchQueryBuilder(String fieldName, Object value);1525334055;Constructs a new match query.;public MatchQueryBuilder(String fieldName, Object value) {_        if (fieldName == null) {_            throw new IllegalArgumentException("[" + NAME + "] requires fieldName")__        }_        if (value == null) {_            throw new IllegalArgumentException("[" + NAME + "] requires query value")__        }_        this.fieldName = fieldName__        this.value = value__    };constructs,a,new,match,query;public,match,query,builder,string,field,name,object,value,if,field,name,null,throw,new,illegal,argument,exception,name,requires,field,name,if,value,null,throw,new,illegal,argument,exception,name,requires,query,value,this,field,name,field,name,this,value,value
MatchQueryBuilder -> public MatchQueryBuilder(String fieldName, Object value);1544177681;Constructs a new match query.;public MatchQueryBuilder(String fieldName, Object value) {_        if (fieldName == null) {_            throw new IllegalArgumentException("[" + NAME + "] requires fieldName")__        }_        if (value == null) {_            throw new IllegalArgumentException("[" + NAME + "] requires query value")__        }_        this.fieldName = fieldName__        this.value = value__    };constructs,a,new,match,query;public,match,query,builder,string,field,name,object,value,if,field,name,null,throw,new,illegal,argument,exception,name,requires,field,name,if,value,null,throw,new,illegal,argument,exception,name,requires,query,value,this,field,name,field,name,this,value,value
MatchQueryBuilder -> public boolean autoGenerateSynonymsPhraseQuery();1524684173;Whether phrase queries should be automatically generated for multi terms synonyms._Defaults to <tt>true</tt>.;public boolean autoGenerateSynonymsPhraseQuery() {_        return autoGenerateSynonymsPhraseQuery__    };whether,phrase,queries,should,be,automatically,generated,for,multi,terms,synonyms,defaults,to,tt,true,tt;public,boolean,auto,generate,synonyms,phrase,query,return,auto,generate,synonyms,phrase,query
MatchQueryBuilder -> public boolean autoGenerateSynonymsPhraseQuery();1525334055;Whether phrase queries should be automatically generated for multi terms synonyms._Defaults to {@code true}.;public boolean autoGenerateSynonymsPhraseQuery() {_        return autoGenerateSynonymsPhraseQuery__    };whether,phrase,queries,should,be,automatically,generated,for,multi,terms,synonyms,defaults,to,code,true;public,boolean,auto,generate,synonyms,phrase,query,return,auto,generate,synonyms,phrase,query
MatchQueryBuilder -> public boolean autoGenerateSynonymsPhraseQuery();1544177681;Whether phrase queries should be automatically generated for multi terms synonyms._Defaults to {@code true}.;public boolean autoGenerateSynonymsPhraseQuery() {_        return autoGenerateSynonymsPhraseQuery__    };whether,phrase,queries,should,be,automatically,generated,for,multi,terms,synonyms,defaults,to,code,true;public,boolean,auto,generate,synonyms,phrase,query,return,auto,generate,synonyms,phrase,query
MatchQueryBuilder -> public MatchQueryBuilder operator(Operator operator);1524684173;Sets the operator to use when using a boolean query. Defaults to <tt>OR</tt>.;public MatchQueryBuilder operator(Operator operator) {_        if (operator == null) {_            throw new IllegalArgumentException("[" + NAME + "] requires operator to be non-null")__        }_        this.operator = operator__        return this__    };sets,the,operator,to,use,when,using,a,boolean,query,defaults,to,tt,or,tt;public,match,query,builder,operator,operator,operator,if,operator,null,throw,new,illegal,argument,exception,name,requires,operator,to,be,non,null,this,operator,operator,return,this
MatchQueryBuilder -> public MatchQueryBuilder operator(Operator operator);1525334055;Sets the operator to use when using a boolean query. Defaults to {@code OR}.;public MatchQueryBuilder operator(Operator operator) {_        if (operator == null) {_            throw new IllegalArgumentException("[" + NAME + "] requires operator to be non-null")__        }_        this.operator = operator__        return this__    };sets,the,operator,to,use,when,using,a,boolean,query,defaults,to,code,or;public,match,query,builder,operator,operator,operator,if,operator,null,throw,new,illegal,argument,exception,name,requires,operator,to,be,non,null,this,operator,operator,return,this
MatchQueryBuilder -> public MatchQueryBuilder operator(Operator operator);1544177681;Sets the operator to use when using a boolean query. Defaults to {@code OR}.;public MatchQueryBuilder operator(Operator operator) {_        if (operator == null) {_            throw new IllegalArgumentException("[" + NAME + "] requires operator to be non-null")__        }_        this.operator = operator__        return this__    };sets,the,operator,to,use,when,using,a,boolean,query,defaults,to,code,or;public,match,query,builder,operator,operator,operator,if,operator,null,throw,new,illegal,argument,exception,name,requires,operator,to,be,non,null,this,operator,operator,return,this
MatchQueryBuilder -> public String analyzer();1524684173;Get the analyzer to use, if previously set, otherwise <tt>null</tt>;public String analyzer() {_        return this.analyzer__    };get,the,analyzer,to,use,if,previously,set,otherwise,tt,null,tt;public,string,analyzer,return,this,analyzer
MatchQueryBuilder -> public String analyzer();1525334055;Get the analyzer to use, if previously set, otherwise {@code null};public String analyzer() {_        return this.analyzer__    };get,the,analyzer,to,use,if,previously,set,otherwise,code,null;public,string,analyzer,return,this,analyzer
MatchQueryBuilder -> public String analyzer();1544177681;Get the analyzer to use, if previously set, otherwise {@code null};public String analyzer() {_        return this.analyzer__    };get,the,analyzer,to,use,if,previously,set,otherwise,code,null;public,string,analyzer,return,this,analyzer
MatchQueryBuilder -> public int maxExpansions();1524684173;Get the (optional) number of term expansions when using fuzzy or prefix type query.;public int maxExpansions() {_        return this.maxExpansions__    };get,the,optional,number,of,term,expansions,when,using,fuzzy,or,prefix,type,query;public,int,max,expansions,return,this,max,expansions
MatchQueryBuilder -> public int maxExpansions();1525334055;Get the (optional) number of term expansions when using fuzzy or prefix type query.;public int maxExpansions() {_        return this.maxExpansions__    };get,the,optional,number,of,term,expansions,when,using,fuzzy,or,prefix,type,query;public,int,max,expansions,return,this,max,expansions
MatchQueryBuilder -> public int maxExpansions();1544177681;Get the (optional) number of term expansions when using fuzzy or prefix type query.;public int maxExpansions() {_        return this.maxExpansions__    };get,the,optional,number,of,term,expansions,when,using,fuzzy,or,prefix,type,query;public,int,max,expansions,return,this,max,expansions
MatchQueryBuilder -> public MatchQueryBuilder fuzziness(Object fuzziness);1524684173;Sets the fuzziness used when evaluated to a fuzzy query type. Defaults to "AUTO".;public MatchQueryBuilder fuzziness(Object fuzziness) {_        this.fuzziness = Fuzziness.build(fuzziness)__        return this__    };sets,the,fuzziness,used,when,evaluated,to,a,fuzzy,query,type,defaults,to,auto;public,match,query,builder,fuzziness,object,fuzziness,this,fuzziness,fuzziness,build,fuzziness,return,this
MatchQueryBuilder -> public MatchQueryBuilder fuzziness(Object fuzziness);1525334055;Sets the fuzziness used when evaluated to a fuzzy query type. Defaults to "AUTO".;public MatchQueryBuilder fuzziness(Object fuzziness) {_        this.fuzziness = Fuzziness.build(fuzziness)__        return this__    };sets,the,fuzziness,used,when,evaluated,to,a,fuzzy,query,type,defaults,to,auto;public,match,query,builder,fuzziness,object,fuzziness,this,fuzziness,fuzziness,build,fuzziness,return,this
MatchQueryBuilder -> public MatchQueryBuilder fuzziness(Object fuzziness);1544177681;Sets the fuzziness used when evaluated to a fuzzy query type. Defaults to "AUTO".;public MatchQueryBuilder fuzziness(Object fuzziness) {_        this.fuzziness = Fuzziness.build(fuzziness)__        return this__    };sets,the,fuzziness,used,when,evaluated,to,a,fuzzy,query,type,defaults,to,auto;public,match,query,builder,fuzziness,object,fuzziness,this,fuzziness,fuzziness,build,fuzziness,return,this
MatchQueryBuilder -> public MatchQueryBuilder analyzer(String analyzer);1524684173;Explicitly set the analyzer to use. Defaults to use explicit mapping config for the field, or, if not_set, the default search analyzer.;public MatchQueryBuilder analyzer(String analyzer) {_        this.analyzer = analyzer__        return this__    };explicitly,set,the,analyzer,to,use,defaults,to,use,explicit,mapping,config,for,the,field,or,if,not,set,the,default,search,analyzer;public,match,query,builder,analyzer,string,analyzer,this,analyzer,analyzer,return,this
MatchQueryBuilder -> public MatchQueryBuilder analyzer(String analyzer);1525334055;Explicitly set the analyzer to use. Defaults to use explicit mapping config for the field, or, if not_set, the default search analyzer.;public MatchQueryBuilder analyzer(String analyzer) {_        this.analyzer = analyzer__        return this__    };explicitly,set,the,analyzer,to,use,defaults,to,use,explicit,mapping,config,for,the,field,or,if,not,set,the,default,search,analyzer;public,match,query,builder,analyzer,string,analyzer,this,analyzer,analyzer,return,this
MatchQueryBuilder -> public MatchQueryBuilder analyzer(String analyzer);1544177681;Explicitly set the analyzer to use. Defaults to use explicit mapping config for the field, or, if not_set, the default search analyzer.;public MatchQueryBuilder analyzer(String analyzer) {_        this.analyzer = analyzer__        return this__    };explicitly,set,the,analyzer,to,use,defaults,to,use,explicit,mapping,config,for,the,field,or,if,not,set,the,default,search,analyzer;public,match,query,builder,analyzer,string,analyzer,this,analyzer,analyzer,return,this
MatchQueryBuilder -> public Operator operator();1524684173;Returns the operator to use in a boolean query.;public Operator operator() {_        return this.operator__    };returns,the,operator,to,use,in,a,boolean,query;public,operator,operator,return,this,operator
MatchQueryBuilder -> public Operator operator();1525334055;Returns the operator to use in a boolean query.;public Operator operator() {_        return this.operator__    };returns,the,operator,to,use,in,a,boolean,query;public,operator,operator,return,this,operator
MatchQueryBuilder -> public Operator operator();1544177681;Returns the operator to use in a boolean query.;public Operator operator() {_        return this.operator__    };returns,the,operator,to,use,in,a,boolean,query;public,operator,operator,return,this,operator
MatchQueryBuilder -> public boolean lenient();1524684173;Gets leniency setting that controls if format based failures will be ignored.;public boolean lenient() {_        return this.lenient__    };gets,leniency,setting,that,controls,if,format,based,failures,will,be,ignored;public,boolean,lenient,return,this,lenient
MatchQueryBuilder -> public boolean lenient();1525334055;Gets leniency setting that controls if format based failures will be ignored.;public boolean lenient() {_        return this.lenient__    };gets,leniency,setting,that,controls,if,format,based,failures,will,be,ignored;public,boolean,lenient,return,this,lenient
MatchQueryBuilder -> public boolean lenient();1544177681;Gets leniency setting that controls if format based failures will be ignored.;public boolean lenient() {_        return this.lenient__    };gets,leniency,setting,that,controls,if,format,based,failures,will,be,ignored;public,boolean,lenient,return,this,lenient
MatchQueryBuilder -> public Float cutoffFrequency();1524684173;Gets the optional cutoff value, can be <tt>null</tt> if not set previously;public Float cutoffFrequency() {_        return this.cutoffFrequency__    };gets,the,optional,cutoff,value,can,be,tt,null,tt,if,not,set,previously;public,float,cutoff,frequency,return,this,cutoff,frequency
MatchQueryBuilder -> public Float cutoffFrequency();1525334055;Gets the optional cutoff value, can be {@code null} if not set previously;public Float cutoffFrequency() {_        return this.cutoffFrequency__    };gets,the,optional,cutoff,value,can,be,code,null,if,not,set,previously;public,float,cutoff,frequency,return,this,cutoff,frequency
MatchQueryBuilder -> public Float cutoffFrequency();1544177681;Gets the optional cutoff value, can be {@code null} if not set previously;public Float cutoffFrequency() {_        return this.cutoffFrequency__    };gets,the,optional,cutoff,value,can,be,code,null,if,not,set,previously;public,float,cutoff,frequency,return,this,cutoff,frequency
MatchQueryBuilder -> public String fuzzyRewrite();1524684173;Get the fuzzy_rewrite parameter_@see #fuzzyRewrite(String);public String fuzzyRewrite() {_        return this.fuzzyRewrite__    };get,the,parameter,see,fuzzy,rewrite,string;public,string,fuzzy,rewrite,return,this,fuzzy,rewrite
MatchQueryBuilder -> public String fuzzyRewrite();1525334055;Get the fuzzy_rewrite parameter_@see #fuzzyRewrite(String);public String fuzzyRewrite() {_        return this.fuzzyRewrite__    };get,the,parameter,see,fuzzy,rewrite,string;public,string,fuzzy,rewrite,return,this,fuzzy,rewrite
MatchQueryBuilder -> public String fuzzyRewrite();1544177681;Get the fuzzy_rewrite parameter_@see #fuzzyRewrite(String);public String fuzzyRewrite() {_        return this.fuzzyRewrite__    };get,the,parameter,see,fuzzy,rewrite,string;public,string,fuzzy,rewrite,return,this,fuzzy,rewrite
MatchQueryBuilder -> public MatchQueryBuilder minimumShouldMatch(String minimumShouldMatch);1524684173;Sets optional minimumShouldMatch value to apply to the query;public MatchQueryBuilder minimumShouldMatch(String minimumShouldMatch) {_        this.minimumShouldMatch = minimumShouldMatch__        return this__    };sets,optional,minimum,should,match,value,to,apply,to,the,query;public,match,query,builder,minimum,should,match,string,minimum,should,match,this,minimum,should,match,minimum,should,match,return,this
MatchQueryBuilder -> public MatchQueryBuilder minimumShouldMatch(String minimumShouldMatch);1525334055;Sets optional minimumShouldMatch value to apply to the query;public MatchQueryBuilder minimumShouldMatch(String minimumShouldMatch) {_        this.minimumShouldMatch = minimumShouldMatch__        return this__    };sets,optional,minimum,should,match,value,to,apply,to,the,query;public,match,query,builder,minimum,should,match,string,minimum,should,match,this,minimum,should,match,minimum,should,match,return,this
MatchQueryBuilder -> public MatchQueryBuilder minimumShouldMatch(String minimumShouldMatch);1544177681;Sets optional minimumShouldMatch value to apply to the query;public MatchQueryBuilder minimumShouldMatch(String minimumShouldMatch) {_        this.minimumShouldMatch = minimumShouldMatch__        return this__    };sets,optional,minimum,should,match,value,to,apply,to,the,query;public,match,query,builder,minimum,should,match,string,minimum,should,match,this,minimum,should,match,minimum,should,match,return,this
MatchQueryBuilder -> public String fieldName();1524684173;Returns the field name used in this query.;public String fieldName() {_        return this.fieldName__    };returns,the,field,name,used,in,this,query;public,string,field,name,return,this,field,name
MatchQueryBuilder -> public String fieldName();1525334055;Returns the field name used in this query.;public String fieldName() {_        return this.fieldName__    };returns,the,field,name,used,in,this,query;public,string,field,name,return,this,field,name
MatchQueryBuilder -> public String fieldName();1544177681;Returns the field name used in this query.;public String fieldName() {_        return this.fieldName__    };returns,the,field,name,used,in,this,query;public,string,field,name,return,this,field,name
MatchQueryBuilder -> public MatchQueryBuilder zeroTermsQuery(MatchQuery.ZeroTermsQuery zeroTermsQuery);1524684173;Sets query to use in case no query terms are available, e.g. after analysis removed them._Defaults to {@link MatchQuery.ZeroTermsQuery#NONE}, but can be set to_{@link MatchQuery.ZeroTermsQuery#ALL} instead.;public MatchQueryBuilder zeroTermsQuery(MatchQuery.ZeroTermsQuery zeroTermsQuery) {_        if (zeroTermsQuery == null) {_            throw new IllegalArgumentException("[" + NAME + "] requires zeroTermsQuery to be non-null")__        }_        this.zeroTermsQuery = zeroTermsQuery__        return this__    };sets,query,to,use,in,case,no,query,terms,are,available,e,g,after,analysis,removed,them,defaults,to,link,match,query,zero,terms,query,none,but,can,be,set,to,link,match,query,zero,terms,query,all,instead;public,match,query,builder,zero,terms,query,match,query,zero,terms,query,zero,terms,query,if,zero,terms,query,null,throw,new,illegal,argument,exception,name,requires,zero,terms,query,to,be,non,null,this,zero,terms,query,zero,terms,query,return,this
MatchQueryBuilder -> public MatchQueryBuilder zeroTermsQuery(MatchQuery.ZeroTermsQuery zeroTermsQuery);1525334055;Sets query to use in case no query terms are available, e.g. after analysis removed them._Defaults to {@link MatchQuery.ZeroTermsQuery#NONE}, but can be set to_{@link MatchQuery.ZeroTermsQuery#ALL} instead.;public MatchQueryBuilder zeroTermsQuery(MatchQuery.ZeroTermsQuery zeroTermsQuery) {_        if (zeroTermsQuery == null) {_            throw new IllegalArgumentException("[" + NAME + "] requires zeroTermsQuery to be non-null")__        }_        this.zeroTermsQuery = zeroTermsQuery__        return this__    };sets,query,to,use,in,case,no,query,terms,are,available,e,g,after,analysis,removed,them,defaults,to,link,match,query,zero,terms,query,none,but,can,be,set,to,link,match,query,zero,terms,query,all,instead;public,match,query,builder,zero,terms,query,match,query,zero,terms,query,zero,terms,query,if,zero,terms,query,null,throw,new,illegal,argument,exception,name,requires,zero,terms,query,to,be,non,null,this,zero,terms,query,zero,terms,query,return,this
MatchQueryBuilder -> public MatchQueryBuilder zeroTermsQuery(MatchQuery.ZeroTermsQuery zeroTermsQuery);1544177681;Sets query to use in case no query terms are available, e.g. after analysis removed them._Defaults to {@link MatchQuery.ZeroTermsQuery#NONE}, but can be set to_{@link MatchQuery.ZeroTermsQuery#ALL} instead.;public MatchQueryBuilder zeroTermsQuery(MatchQuery.ZeroTermsQuery zeroTermsQuery) {_        if (zeroTermsQuery == null) {_            throw new IllegalArgumentException("[" + NAME + "] requires zeroTermsQuery to be non-null")__        }_        this.zeroTermsQuery = zeroTermsQuery__        return this__    };sets,query,to,use,in,case,no,query,terms,are,available,e,g,after,analysis,removed,them,defaults,to,link,match,query,zero,terms,query,none,but,can,be,set,to,link,match,query,zero,terms,query,all,instead;public,match,query,builder,zero,terms,query,match,query,zero,terms,query,zero,terms,query,if,zero,terms,query,null,throw,new,illegal,argument,exception,name,requires,zero,terms,query,to,be,non,null,this,zero,terms,query,zero,terms,query,return,this
MatchQueryBuilder -> public MatchQueryBuilder fuzzyTranspositions(boolean fuzzyTranspositions);1524684173;Sets whether transpositions are supported in fuzzy queries.<p>_The default metric used by fuzzy queries to determine a match is the Damerau-Levenshtein_distance formula which supports transpositions. Setting transposition to false will_switch to classic Levenshtein distance.<br>_If not set, Damerau-Levenshtein distance metric will be used.;public MatchQueryBuilder fuzzyTranspositions(boolean fuzzyTranspositions) {_        this.fuzzyTranspositions = fuzzyTranspositions__        return this__    };sets,whether,transpositions,are,supported,in,fuzzy,queries,p,the,default,metric,used,by,fuzzy,queries,to,determine,a,match,is,the,damerau,levenshtein,distance,formula,which,supports,transpositions,setting,transposition,to,false,will,switch,to,classic,levenshtein,distance,br,if,not,set,damerau,levenshtein,distance,metric,will,be,used;public,match,query,builder,fuzzy,transpositions,boolean,fuzzy,transpositions,this,fuzzy,transpositions,fuzzy,transpositions,return,this
MatchQueryBuilder -> public MatchQueryBuilder fuzzyTranspositions(boolean fuzzyTranspositions);1525334055;Sets whether transpositions are supported in fuzzy queries.<p>_The default metric used by fuzzy queries to determine a match is the Damerau-Levenshtein_distance formula which supports transpositions. Setting transposition to false will_switch to classic Levenshtein distance.<br>_If not set, Damerau-Levenshtein distance metric will be used.;public MatchQueryBuilder fuzzyTranspositions(boolean fuzzyTranspositions) {_        this.fuzzyTranspositions = fuzzyTranspositions__        return this__    };sets,whether,transpositions,are,supported,in,fuzzy,queries,p,the,default,metric,used,by,fuzzy,queries,to,determine,a,match,is,the,damerau,levenshtein,distance,formula,which,supports,transpositions,setting,transposition,to,false,will,switch,to,classic,levenshtein,distance,br,if,not,set,damerau,levenshtein,distance,metric,will,be,used;public,match,query,builder,fuzzy,transpositions,boolean,fuzzy,transpositions,this,fuzzy,transpositions,fuzzy,transpositions,return,this
MatchQueryBuilder -> public MatchQueryBuilder fuzzyTranspositions(boolean fuzzyTranspositions);1544177681;Sets whether transpositions are supported in fuzzy queries.<p>_The default metric used by fuzzy queries to determine a match is the Damerau-Levenshtein_distance formula which supports transpositions. Setting transposition to false will_switch to classic Levenshtein distance.<br>_If not set, Damerau-Levenshtein distance metric will be used.;public MatchQueryBuilder fuzzyTranspositions(boolean fuzzyTranspositions) {_        this.fuzzyTranspositions = fuzzyTranspositions__        return this__    };sets,whether,transpositions,are,supported,in,fuzzy,queries,p,the,default,metric,used,by,fuzzy,queries,to,determine,a,match,is,the,damerau,levenshtein,distance,formula,which,supports,transpositions,setting,transposition,to,false,will,switch,to,classic,levenshtein,distance,br,if,not,set,damerau,levenshtein,distance,metric,will,be,used;public,match,query,builder,fuzzy,transpositions,boolean,fuzzy,transpositions,this,fuzzy,transpositions,fuzzy,transpositions,return,this
MatchQueryBuilder -> public Fuzziness fuzziness();1524684173;Gets the fuzziness used when evaluated to a fuzzy query type.;public Fuzziness fuzziness() {_        return this.fuzziness__    };gets,the,fuzziness,used,when,evaluated,to,a,fuzzy,query,type;public,fuzziness,fuzziness,return,this,fuzziness
MatchQueryBuilder -> public Fuzziness fuzziness();1525334055;Gets the fuzziness used when evaluated to a fuzzy query type.;public Fuzziness fuzziness() {_        return this.fuzziness__    };gets,the,fuzziness,used,when,evaluated,to,a,fuzzy,query,type;public,fuzziness,fuzziness,return,this,fuzziness
MatchQueryBuilder -> public Fuzziness fuzziness();1544177681;Gets the fuzziness used when evaluated to a fuzzy query type.;public Fuzziness fuzziness() {_        return this.fuzziness__    };gets,the,fuzziness,used,when,evaluated,to,a,fuzzy,query,type;public,fuzziness,fuzziness,return,this,fuzziness
MatchQueryBuilder -> public MatchQueryBuilder fuzzyRewrite(String fuzzyRewrite);1524684173;Sets the fuzzy_rewrite parameter controlling how the fuzzy query will get rewritten;public MatchQueryBuilder fuzzyRewrite(String fuzzyRewrite) {_        this.fuzzyRewrite = fuzzyRewrite__        return this__    };sets,the,parameter,controlling,how,the,fuzzy,query,will,get,rewritten;public,match,query,builder,fuzzy,rewrite,string,fuzzy,rewrite,this,fuzzy,rewrite,fuzzy,rewrite,return,this
MatchQueryBuilder -> public MatchQueryBuilder fuzzyRewrite(String fuzzyRewrite);1525334055;Sets the fuzzy_rewrite parameter controlling how the fuzzy query will get rewritten;public MatchQueryBuilder fuzzyRewrite(String fuzzyRewrite) {_        this.fuzzyRewrite = fuzzyRewrite__        return this__    };sets,the,parameter,controlling,how,the,fuzzy,query,will,get,rewritten;public,match,query,builder,fuzzy,rewrite,string,fuzzy,rewrite,this,fuzzy,rewrite,fuzzy,rewrite,return,this
MatchQueryBuilder -> public MatchQueryBuilder fuzzyRewrite(String fuzzyRewrite);1544177681;Sets the fuzzy_rewrite parameter controlling how the fuzzy query will get rewritten;public MatchQueryBuilder fuzzyRewrite(String fuzzyRewrite) {_        this.fuzzyRewrite = fuzzyRewrite__        return this__    };sets,the,parameter,controlling,how,the,fuzzy,query,will,get,rewritten;public,match,query,builder,fuzzy,rewrite,string,fuzzy,rewrite,this,fuzzy,rewrite,fuzzy,rewrite,return,this
MatchQueryBuilder -> public MatchQueryBuilder maxExpansions(int maxExpansions);1524684173;When using fuzzy or prefix type query, the number of term expansions to use.;public MatchQueryBuilder maxExpansions(int maxExpansions) {_        if (maxExpansions <= 0 ) {_            throw new IllegalArgumentException("[" + NAME + "] requires maxExpansions to be positive.")__        }_        this.maxExpansions = maxExpansions__        return this__    };when,using,fuzzy,or,prefix,type,query,the,number,of,term,expansions,to,use;public,match,query,builder,max,expansions,int,max,expansions,if,max,expansions,0,throw,new,illegal,argument,exception,name,requires,max,expansions,to,be,positive,this,max,expansions,max,expansions,return,this
MatchQueryBuilder -> public MatchQueryBuilder maxExpansions(int maxExpansions);1525334055;When using fuzzy or prefix type query, the number of term expansions to use.;public MatchQueryBuilder maxExpansions(int maxExpansions) {_        if (maxExpansions <= 0 ) {_            throw new IllegalArgumentException("[" + NAME + "] requires maxExpansions to be positive.")__        }_        this.maxExpansions = maxExpansions__        return this__    };when,using,fuzzy,or,prefix,type,query,the,number,of,term,expansions,to,use;public,match,query,builder,max,expansions,int,max,expansions,if,max,expansions,0,throw,new,illegal,argument,exception,name,requires,max,expansions,to,be,positive,this,max,expansions,max,expansions,return,this
MatchQueryBuilder -> public MatchQueryBuilder maxExpansions(int maxExpansions);1544177681;When using fuzzy or prefix type query, the number of term expansions to use.;public MatchQueryBuilder maxExpansions(int maxExpansions) {_        if (maxExpansions <= 0 ) {_            throw new IllegalArgumentException("[" + NAME + "] requires maxExpansions to be positive.")__        }_        this.maxExpansions = maxExpansions__        return this__    };when,using,fuzzy,or,prefix,type,query,the,number,of,term,expansions,to,use;public,match,query,builder,max,expansions,int,max,expansions,if,max,expansions,0,throw,new,illegal,argument,exception,name,requires,max,expansions,to,be,positive,this,max,expansions,max,expansions,return,this
MatchQueryBuilder -> public MatchQueryBuilder lenient(boolean lenient);1524684173;Sets whether format based failures will be ignored.;public MatchQueryBuilder lenient(boolean lenient) {_        this.lenient = lenient__        return this__    };sets,whether,format,based,failures,will,be,ignored;public,match,query,builder,lenient,boolean,lenient,this,lenient,lenient,return,this
MatchQueryBuilder -> public MatchQueryBuilder lenient(boolean lenient);1525334055;Sets whether format based failures will be ignored.;public MatchQueryBuilder lenient(boolean lenient) {_        this.lenient = lenient__        return this__    };sets,whether,format,based,failures,will,be,ignored;public,match,query,builder,lenient,boolean,lenient,this,lenient,lenient,return,this
MatchQueryBuilder -> public MatchQueryBuilder lenient(boolean lenient);1544177681;Sets whether format based failures will be ignored.;public MatchQueryBuilder lenient(boolean lenient) {_        this.lenient = lenient__        return this__    };sets,whether,format,based,failures,will,be,ignored;public,match,query,builder,lenient,boolean,lenient,this,lenient,lenient,return,this
MatchQueryBuilder -> public int prefixLength();1524684173;Gets the length of a length of common (non-fuzzy) prefix for fuzzy match queries;public int prefixLength() {_        return this.prefixLength__    };gets,the,length,of,a,length,of,common,non,fuzzy,prefix,for,fuzzy,match,queries;public,int,prefix,length,return,this,prefix,length
MatchQueryBuilder -> public int prefixLength();1525334055;Gets the length of a length of common (non-fuzzy) prefix for fuzzy match queries;public int prefixLength() {_        return this.prefixLength__    };gets,the,length,of,a,length,of,common,non,fuzzy,prefix,for,fuzzy,match,queries;public,int,prefix,length,return,this,prefix,length
MatchQueryBuilder -> public int prefixLength();1544177681;Gets the length of a length of common (non-fuzzy) prefix for fuzzy match queries;public int prefixLength() {_        return this.prefixLength__    };gets,the,length,of,a,length,of,common,non,fuzzy,prefix,for,fuzzy,match,queries;public,int,prefix,length,return,this,prefix,length
MatchQueryBuilder -> public String minimumShouldMatch();1524684173;Gets the minimumShouldMatch value;public String minimumShouldMatch() {_        return this.minimumShouldMatch__    };gets,the,minimum,should,match,value;public,string,minimum,should,match,return,this,minimum,should,match
MatchQueryBuilder -> public String minimumShouldMatch();1525334055;Gets the minimumShouldMatch value;public String minimumShouldMatch() {_        return this.minimumShouldMatch__    };gets,the,minimum,should,match,value;public,string,minimum,should,match,return,this,minimum,should,match
MatchQueryBuilder -> public String minimumShouldMatch();1544177681;Gets the minimumShouldMatch value;public String minimumShouldMatch() {_        return this.minimumShouldMatch__    };gets,the,minimum,should,match,value;public,string,minimum,should,match,return,this,minimum,should,match
MatchQueryBuilder -> public boolean fuzzyTranspositions();1524684173;Gets the fuzzy query transposition setting.;public boolean fuzzyTranspositions() {_        return this.fuzzyTranspositions__    };gets,the,fuzzy,query,transposition,setting;public,boolean,fuzzy,transpositions,return,this,fuzzy,transpositions
MatchQueryBuilder -> public boolean fuzzyTranspositions();1525334055;Gets the fuzzy query transposition setting.;public boolean fuzzyTranspositions() {_        return this.fuzzyTranspositions__    };gets,the,fuzzy,query,transposition,setting;public,boolean,fuzzy,transpositions,return,this,fuzzy,transpositions
MatchQueryBuilder -> public boolean fuzzyTranspositions();1544177681;Gets the fuzzy query transposition setting.;public boolean fuzzyTranspositions() {_        return this.fuzzyTranspositions__    };gets,the,fuzzy,query,transposition,setting;public,boolean,fuzzy,transpositions,return,this,fuzzy,transpositions
MatchQueryBuilder -> public MatchQuery.ZeroTermsQuery zeroTermsQuery();1524684173;Returns the setting for handling zero terms queries.;public MatchQuery.ZeroTermsQuery zeroTermsQuery() {_        return this.zeroTermsQuery__    };returns,the,setting,for,handling,zero,terms,queries;public,match,query,zero,terms,query,zero,terms,query,return,this,zero,terms,query
MatchQueryBuilder -> public MatchQuery.ZeroTermsQuery zeroTermsQuery();1525334055;Returns the setting for handling zero terms queries.;public MatchQuery.ZeroTermsQuery zeroTermsQuery() {_        return this.zeroTermsQuery__    };returns,the,setting,for,handling,zero,terms,queries;public,match,query,zero,terms,query,zero,terms,query,return,this,zero,terms,query
MatchQueryBuilder -> public MatchQuery.ZeroTermsQuery zeroTermsQuery();1544177681;Returns the setting for handling zero terms queries.;public MatchQuery.ZeroTermsQuery zeroTermsQuery() {_        return this.zeroTermsQuery__    };returns,the,setting,for,handling,zero,terms,queries;public,match,query,zero,terms,query,zero,terms,query,return,this,zero,terms,query
MatchQueryBuilder -> public Object value();1524684173;Returns the value used in this query.;public Object value() {_        return this.value__    };returns,the,value,used,in,this,query;public,object,value,return,this,value
MatchQueryBuilder -> public Object value();1525334055;Returns the value used in this query.;public Object value() {_        return this.value__    };returns,the,value,used,in,this,query;public,object,value,return,this,value
MatchQueryBuilder -> public Object value();1544177681;Returns the value used in this query.;public Object value() {_        return this.value__    };returns,the,value,used,in,this,query;public,object,value,return,this,value
MatchQueryBuilder -> public MatchQueryBuilder prefixLength(int prefixLength);1524684173;Sets the length of a length of common (non-fuzzy) prefix for fuzzy match queries_@param prefixLength non-negative length of prefix_@throws IllegalArgumentException in case the prefix is negative;public MatchQueryBuilder prefixLength(int prefixLength) {_        if (prefixLength < 0 ) {_            throw new IllegalArgumentException("[" + NAME + "] requires prefix length to be non-negative.")__        }_        this.prefixLength = prefixLength__        return this__    };sets,the,length,of,a,length,of,common,non,fuzzy,prefix,for,fuzzy,match,queries,param,prefix,length,non,negative,length,of,prefix,throws,illegal,argument,exception,in,case,the,prefix,is,negative;public,match,query,builder,prefix,length,int,prefix,length,if,prefix,length,0,throw,new,illegal,argument,exception,name,requires,prefix,length,to,be,non,negative,this,prefix,length,prefix,length,return,this
MatchQueryBuilder -> public MatchQueryBuilder prefixLength(int prefixLength);1525334055;Sets the length of a length of common (non-fuzzy) prefix for fuzzy match queries_@param prefixLength non-negative length of prefix_@throws IllegalArgumentException in case the prefix is negative;public MatchQueryBuilder prefixLength(int prefixLength) {_        if (prefixLength < 0 ) {_            throw new IllegalArgumentException("[" + NAME + "] requires prefix length to be non-negative.")__        }_        this.prefixLength = prefixLength__        return this__    };sets,the,length,of,a,length,of,common,non,fuzzy,prefix,for,fuzzy,match,queries,param,prefix,length,non,negative,length,of,prefix,throws,illegal,argument,exception,in,case,the,prefix,is,negative;public,match,query,builder,prefix,length,int,prefix,length,if,prefix,length,0,throw,new,illegal,argument,exception,name,requires,prefix,length,to,be,non,negative,this,prefix,length,prefix,length,return,this
MatchQueryBuilder -> public MatchQueryBuilder prefixLength(int prefixLength);1544177681;Sets the length of a length of common (non-fuzzy) prefix for fuzzy match queries_@param prefixLength non-negative length of prefix_@throws IllegalArgumentException in case the prefix is negative;public MatchQueryBuilder prefixLength(int prefixLength) {_        if (prefixLength < 0 ) {_            throw new IllegalArgumentException("[" + NAME + "] requires prefix length to be non-negative.")__        }_        this.prefixLength = prefixLength__        return this__    };sets,the,length,of,a,length,of,common,non,fuzzy,prefix,for,fuzzy,match,queries,param,prefix,length,non,negative,length,of,prefix,throws,illegal,argument,exception,in,case,the,prefix,is,negative;public,match,query,builder,prefix,length,int,prefix,length,if,prefix,length,0,throw,new,illegal,argument,exception,name,requires,prefix,length,to,be,non,negative,this,prefix,length,prefix,length,return,this
MatchQueryBuilder -> @Deprecated     public MatchQueryBuilder setLenient(boolean lenient);1524684173;Sets whether format based failures will be ignored._@deprecated use #lenient() instead;@Deprecated_    public MatchQueryBuilder setLenient(boolean lenient) {_        return lenient(lenient)__    };sets,whether,format,based,failures,will,be,ignored,deprecated,use,lenient,instead;deprecated,public,match,query,builder,set,lenient,boolean,lenient,return,lenient,lenient
MatchQueryBuilder -> @Deprecated     public MatchQueryBuilder setLenient(boolean lenient);1525334055;Sets whether format based failures will be ignored._@deprecated use #lenient() instead;@Deprecated_    public MatchQueryBuilder setLenient(boolean lenient) {_        return lenient(lenient)__    };sets,whether,format,based,failures,will,be,ignored,deprecated,use,lenient,instead;deprecated,public,match,query,builder,set,lenient,boolean,lenient,return,lenient,lenient
MatchQueryBuilder -> public MatchQueryBuilder cutoffFrequency(float cutoff);1524684173;Set a cutoff value in [0..1] (or absolute number &gt_=1) representing the_maximum threshold of a terms document frequency to be considered a low_frequency term.;public MatchQueryBuilder cutoffFrequency(float cutoff) {_        this.cutoffFrequency = cutoff__        return this__    };set,a,cutoff,value,in,0,1,or,absolute,number,gt,1,representing,the,maximum,threshold,of,a,terms,document,frequency,to,be,considered,a,low,frequency,term;public,match,query,builder,cutoff,frequency,float,cutoff,this,cutoff,frequency,cutoff,return,this
MatchQueryBuilder -> public MatchQueryBuilder cutoffFrequency(float cutoff);1525334055;Set a cutoff value in [0..1] (or absolute number &gt_=1) representing the_maximum threshold of a terms document frequency to be considered a low_frequency term.;public MatchQueryBuilder cutoffFrequency(float cutoff) {_        this.cutoffFrequency = cutoff__        return this__    };set,a,cutoff,value,in,0,1,or,absolute,number,gt,1,representing,the,maximum,threshold,of,a,terms,document,frequency,to,be,considered,a,low,frequency,term;public,match,query,builder,cutoff,frequency,float,cutoff,this,cutoff,frequency,cutoff,return,this
MatchQueryBuilder -> public MatchQueryBuilder cutoffFrequency(float cutoff);1544177681;Set a cutoff value in [0..1] (or absolute number &gt_=1) representing the_maximum threshold of a terms document frequency to be considered a low_frequency term.;public MatchQueryBuilder cutoffFrequency(float cutoff) {_        this.cutoffFrequency = cutoff__        return this__    };set,a,cutoff,value,in,0,1,or,absolute,number,gt,1,representing,the,maximum,threshold,of,a,terms,document,frequency,to,be,considered,a,low,frequency,term;public,match,query,builder,cutoff,frequency,float,cutoff,this,cutoff,frequency,cutoff,return,this
