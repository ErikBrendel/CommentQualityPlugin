# id;timestamp;commentText;codeText;commentWords;codeWords
RangeQueryBuilder -> public RangeQueryBuilder(String fieldName);1524684173;A Query that matches documents within an range of terms.__@param fieldName The field name;public RangeQueryBuilder(String fieldName) {_        if (Strings.isEmpty(fieldName)) {_            throw new IllegalArgumentException("field name is null or empty")__        }_        this.fieldName = fieldName__    };a,query,that,matches,documents,within,an,range,of,terms,param,field,name,the,field,name;public,range,query,builder,string,field,name,if,strings,is,empty,field,name,throw,new,illegal,argument,exception,field,name,is,null,or,empty,this,field,name,field,name
RangeQueryBuilder -> public RangeQueryBuilder(String fieldName);1525334055;A Query that matches documents within an range of terms.__@param fieldName The field name;public RangeQueryBuilder(String fieldName) {_        if (Strings.isEmpty(fieldName)) {_            throw new IllegalArgumentException("field name is null or empty")__        }_        this.fieldName = fieldName__    };a,query,that,matches,documents,within,an,range,of,terms,param,field,name,the,field,name;public,range,query,builder,string,field,name,if,strings,is,empty,field,name,throw,new,illegal,argument,exception,field,name,is,null,or,empty,this,field,name,field,name
RangeQueryBuilder -> public RangeQueryBuilder(String fieldName);1535139672;A Query that matches documents within an range of terms.__@param fieldName The field name;public RangeQueryBuilder(String fieldName) {_        if (Strings.isEmpty(fieldName)) {_            throw new IllegalArgumentException("field name is null or empty")__        }_        this.fieldName = fieldName__    };a,query,that,matches,documents,within,an,range,of,terms,param,field,name,the,field,name;public,range,query,builder,string,field,name,if,strings,is,empty,field,name,throw,new,illegal,argument,exception,field,name,is,null,or,empty,this,field,name,field,name
RangeQueryBuilder -> public RangeQueryBuilder(String fieldName);1538067637;A Query that matches documents within an range of terms.__@param fieldName The field name;public RangeQueryBuilder(String fieldName) {_        if (Strings.isEmpty(fieldName)) {_            throw new IllegalArgumentException("field name is null or empty")__        }_        this.fieldName = fieldName__    };a,query,that,matches,documents,within,an,range,of,terms,param,field,name,the,field,name;public,range,query,builder,string,field,name,if,strings,is,empty,field,name,throw,new,illegal,argument,exception,field,name,is,null,or,empty,this,field,name,field,name
RangeQueryBuilder -> public RangeQueryBuilder(String fieldName);1541619687;A Query that matches documents within an range of terms.__@param fieldName The field name;public RangeQueryBuilder(String fieldName) {_        if (Strings.isEmpty(fieldName)) {_            throw new IllegalArgumentException("field name is null or empty")__        }_        this.fieldName = fieldName__    };a,query,that,matches,documents,within,an,range,of,terms,param,field,name,the,field,name;public,range,query,builder,string,field,name,if,strings,is,empty,field,name,throw,new,illegal,argument,exception,field,name,is,null,or,empty,this,field,name,field,name
RangeQueryBuilder -> public RangeQueryBuilder(String fieldName);1544232221;A Query that matches documents within an range of terms.__@param fieldName The field name;public RangeQueryBuilder(String fieldName) {_        if (Strings.isEmpty(fieldName)) {_            throw new IllegalArgumentException("field name is null or empty")__        }_        this.fieldName = fieldName__    };a,query,that,matches,documents,within,an,range,of,terms,param,field,name,the,field,name;public,range,query,builder,string,field,name,if,strings,is,empty,field,name,throw,new,illegal,argument,exception,field,name,is,null,or,empty,this,field,name,field,name
RangeQueryBuilder -> public RangeQueryBuilder(String fieldName);1544458001;A Query that matches documents within an range of terms.__@param fieldName The field name;public RangeQueryBuilder(String fieldName) {_        if (Strings.isEmpty(fieldName)) {_            throw new IllegalArgumentException("field name is null or empty")__        }_        this.fieldName = fieldName__    };a,query,that,matches,documents,within,an,range,of,terms,param,field,name,the,field,name;public,range,query,builder,string,field,name,if,strings,is,empty,field,name,throw,new,illegal,argument,exception,field,name,is,null,or,empty,this,field,name,field,name
RangeQueryBuilder -> public RangeQueryBuilder(String fieldName);1544600864;A Query that matches documents within an range of terms.__@param fieldName The field name;public RangeQueryBuilder(String fieldName) {_        if (Strings.isEmpty(fieldName)) {_            throw new IllegalArgumentException("field name is null or empty")__        }_        this.fieldName = fieldName__    };a,query,that,matches,documents,within,an,range,of,terms,param,field,name,the,field,name;public,range,query,builder,string,field,name,if,strings,is,empty,field,name,throw,new,illegal,argument,exception,field,name,is,null,or,empty,this,field,name,field,name
RangeQueryBuilder -> public RangeQueryBuilder(String fieldName);1548236405;A Query that matches documents within an range of terms.__@param fieldName The field name;public RangeQueryBuilder(String fieldName) {_        if (Strings.isEmpty(fieldName)) {_            throw new IllegalArgumentException("field name is null or empty")__        }_        this.fieldName = fieldName__    };a,query,that,matches,documents,within,an,range,of,terms,param,field,name,the,field,name;public,range,query,builder,string,field,name,if,strings,is,empty,field,name,throw,new,illegal,argument,exception,field,name,is,null,or,empty,this,field,name,field,name
RangeQueryBuilder -> public Object from();1524684173;Gets the lower range value for this query.;public Object from() {_        return maybeConvertToString(this.from)__    };gets,the,lower,range,value,for,this,query;public,object,from,return,maybe,convert,to,string,this,from
RangeQueryBuilder -> public Object from();1525334055;Gets the lower range value for this query.;public Object from() {_        return maybeConvertToString(this.from)__    };gets,the,lower,range,value,for,this,query;public,object,from,return,maybe,convert,to,string,this,from
RangeQueryBuilder -> public Object from();1535139672;Gets the lower range value for this query.;public Object from() {_        return maybeConvertToString(this.from)__    };gets,the,lower,range,value,for,this,query;public,object,from,return,maybe,convert,to,string,this,from
RangeQueryBuilder -> public Object from();1538067637;Gets the lower range value for this query.;public Object from() {_        return maybeConvertToString(this.from)__    };gets,the,lower,range,value,for,this,query;public,object,from,return,maybe,convert,to,string,this,from
RangeQueryBuilder -> public Object from();1541619687;Gets the lower range value for this query.;public Object from() {_        return maybeConvertToString(this.from)__    };gets,the,lower,range,value,for,this,query;public,object,from,return,maybe,convert,to,string,this,from
RangeQueryBuilder -> public Object from();1544232221;Gets the lower range value for this query.;public Object from() {_        return maybeConvertToString(this.from)__    };gets,the,lower,range,value,for,this,query;public,object,from,return,maybe,convert,to,string,this,from
RangeQueryBuilder -> public Object from();1544458001;Gets the lower range value for this query.;public Object from() {_        return maybeConvertToString(this.from)__    };gets,the,lower,range,value,for,this,query;public,object,from,return,maybe,convert,to,string,this,from
RangeQueryBuilder -> public Object from();1544600864;Gets the lower range value for this query.;public Object from() {_        return maybeConvertToString(this.from)__    };gets,the,lower,range,value,for,this,query;public,object,from,return,maybe,convert,to,string,this,from
RangeQueryBuilder -> public Object from();1548236405;Gets the lower range value for this query.;public Object from() {_        return maybeConvertToString(this.from)__    };gets,the,lower,range,value,for,this,query;public,object,from,return,maybe,convert,to,string,this,from
RangeQueryBuilder -> public RangeQueryBuilder includeUpper(boolean includeUpper);1524684173;Should the upper bound be included or not. Defaults to <tt>true</tt>.;public RangeQueryBuilder includeUpper(boolean includeUpper) {_        this.includeUpper = includeUpper__        return this__    };should,the,upper,bound,be,included,or,not,defaults,to,tt,true,tt;public,range,query,builder,include,upper,boolean,include,upper,this,include,upper,include,upper,return,this
RangeQueryBuilder -> public RangeQueryBuilder includeUpper(boolean includeUpper);1525334055;Should the upper bound be included or not. Defaults to {@code true}.;public RangeQueryBuilder includeUpper(boolean includeUpper) {_        this.includeUpper = includeUpper__        return this__    };should,the,upper,bound,be,included,or,not,defaults,to,code,true;public,range,query,builder,include,upper,boolean,include,upper,this,include,upper,include,upper,return,this
RangeQueryBuilder -> public RangeQueryBuilder includeUpper(boolean includeUpper);1535139672;Should the upper bound be included or not. Defaults to {@code true}.;public RangeQueryBuilder includeUpper(boolean includeUpper) {_        this.includeUpper = includeUpper__        return this__    };should,the,upper,bound,be,included,or,not,defaults,to,code,true;public,range,query,builder,include,upper,boolean,include,upper,this,include,upper,include,upper,return,this
RangeQueryBuilder -> public RangeQueryBuilder includeUpper(boolean includeUpper);1538067637;Should the upper bound be included or not. Defaults to {@code true}.;public RangeQueryBuilder includeUpper(boolean includeUpper) {_        this.includeUpper = includeUpper__        return this__    };should,the,upper,bound,be,included,or,not,defaults,to,code,true;public,range,query,builder,include,upper,boolean,include,upper,this,include,upper,include,upper,return,this
RangeQueryBuilder -> public RangeQueryBuilder includeUpper(boolean includeUpper);1541619687;Should the upper bound be included or not. Defaults to {@code true}.;public RangeQueryBuilder includeUpper(boolean includeUpper) {_        this.includeUpper = includeUpper__        return this__    };should,the,upper,bound,be,included,or,not,defaults,to,code,true;public,range,query,builder,include,upper,boolean,include,upper,this,include,upper,include,upper,return,this
RangeQueryBuilder -> public RangeQueryBuilder includeUpper(boolean includeUpper);1544232221;Should the upper bound be included or not. Defaults to {@code true}.;public RangeQueryBuilder includeUpper(boolean includeUpper) {_        this.includeUpper = includeUpper__        return this__    };should,the,upper,bound,be,included,or,not,defaults,to,code,true;public,range,query,builder,include,upper,boolean,include,upper,this,include,upper,include,upper,return,this
RangeQueryBuilder -> public RangeQueryBuilder includeUpper(boolean includeUpper);1544458001;Should the upper bound be included or not. Defaults to {@code true}.;public RangeQueryBuilder includeUpper(boolean includeUpper) {_        this.includeUpper = includeUpper__        return this__    };should,the,upper,bound,be,included,or,not,defaults,to,code,true;public,range,query,builder,include,upper,boolean,include,upper,this,include,upper,include,upper,return,this
RangeQueryBuilder -> public RangeQueryBuilder includeUpper(boolean includeUpper);1544600864;Should the upper bound be included or not. Defaults to {@code true}.;public RangeQueryBuilder includeUpper(boolean includeUpper) {_        this.includeUpper = includeUpper__        return this__    };should,the,upper,bound,be,included,or,not,defaults,to,code,true;public,range,query,builder,include,upper,boolean,include,upper,this,include,upper,include,upper,return,this
RangeQueryBuilder -> public RangeQueryBuilder includeUpper(boolean includeUpper);1548236405;Should the upper bound be included or not. Defaults to {@code true}.;public RangeQueryBuilder includeUpper(boolean includeUpper) {_        this.includeUpper = includeUpper__        return this__    };should,the,upper,bound,be,included,or,not,defaults,to,code,true;public,range,query,builder,include,upper,boolean,include,upper,this,include,upper,include,upper,return,this
RangeQueryBuilder -> public RangeQueryBuilder timeZone(String timeZone);1524684173;In case of date field, we can adjust the from/to fields using a timezone;public RangeQueryBuilder timeZone(String timeZone) {_        if (timeZone == null) {_            throw new IllegalArgumentException("timezone cannot be null")__        }_        this.timeZone = DateTimeZone.forID(timeZone)__        return this__    };in,case,of,date,field,we,can,adjust,the,from,to,fields,using,a,timezone;public,range,query,builder,time,zone,string,time,zone,if,time,zone,null,throw,new,illegal,argument,exception,timezone,cannot,be,null,this,time,zone,date,time,zone,for,id,time,zone,return,this
RangeQueryBuilder -> public RangeQueryBuilder timeZone(String timeZone);1525334055;In case of date field, we can adjust the from/to fields using a timezone;public RangeQueryBuilder timeZone(String timeZone) {_        if (timeZone == null) {_            throw new IllegalArgumentException("timezone cannot be null")__        }_        this.timeZone = DateTimeZone.forID(timeZone)__        return this__    };in,case,of,date,field,we,can,adjust,the,from,to,fields,using,a,timezone;public,range,query,builder,time,zone,string,time,zone,if,time,zone,null,throw,new,illegal,argument,exception,timezone,cannot,be,null,this,time,zone,date,time,zone,for,id,time,zone,return,this
RangeQueryBuilder -> public RangeQueryBuilder timeZone(String timeZone);1535139672;In case of date field, we can adjust the from/to fields using a timezone;public RangeQueryBuilder timeZone(String timeZone) {_        if (timeZone == null) {_            throw new IllegalArgumentException("timezone cannot be null")__        }_        this.timeZone = DateTimeZone.forID(timeZone)__        return this__    };in,case,of,date,field,we,can,adjust,the,from,to,fields,using,a,timezone;public,range,query,builder,time,zone,string,time,zone,if,time,zone,null,throw,new,illegal,argument,exception,timezone,cannot,be,null,this,time,zone,date,time,zone,for,id,time,zone,return,this
RangeQueryBuilder -> public RangeQueryBuilder timeZone(String timeZone);1538067637;In case of date field, we can adjust the from/to fields using a timezone;public RangeQueryBuilder timeZone(String timeZone) {_        if (timeZone == null) {_            throw new IllegalArgumentException("timezone cannot be null")__        }_        this.timeZone = DateTimeZone.forID(timeZone)__        return this__    };in,case,of,date,field,we,can,adjust,the,from,to,fields,using,a,timezone;public,range,query,builder,time,zone,string,time,zone,if,time,zone,null,throw,new,illegal,argument,exception,timezone,cannot,be,null,this,time,zone,date,time,zone,for,id,time,zone,return,this
RangeQueryBuilder -> public RangeQueryBuilder timeZone(String timeZone);1541619687;In case of date field, we can adjust the from/to fields using a timezone;public RangeQueryBuilder timeZone(String timeZone) {_        if (timeZone == null) {_            throw new IllegalArgumentException("timezone cannot be null")__        }_        this.timeZone = DateTimeZone.forID(timeZone)__        return this__    };in,case,of,date,field,we,can,adjust,the,from,to,fields,using,a,timezone;public,range,query,builder,time,zone,string,time,zone,if,time,zone,null,throw,new,illegal,argument,exception,timezone,cannot,be,null,this,time,zone,date,time,zone,for,id,time,zone,return,this
RangeQueryBuilder -> public RangeQueryBuilder timeZone(String timeZone);1544232221;In case of date field, we can adjust the from/to fields using a timezone;public RangeQueryBuilder timeZone(String timeZone) {_        if (timeZone == null) {_            throw new IllegalArgumentException("timezone cannot be null")__        }_        this.timeZone = DateTimeZone.forID(timeZone)__        return this__    };in,case,of,date,field,we,can,adjust,the,from,to,fields,using,a,timezone;public,range,query,builder,time,zone,string,time,zone,if,time,zone,null,throw,new,illegal,argument,exception,timezone,cannot,be,null,this,time,zone,date,time,zone,for,id,time,zone,return,this
RangeQueryBuilder -> public RangeQueryBuilder timeZone(String timeZone);1544458001;In case of date field, we can adjust the from/to fields using a timezone;public RangeQueryBuilder timeZone(String timeZone) {_        if (timeZone == null) {_            throw new IllegalArgumentException("timezone cannot be null")__        }_        this.timeZone = DateTimeZone.forID(timeZone)__        return this__    };in,case,of,date,field,we,can,adjust,the,from,to,fields,using,a,timezone;public,range,query,builder,time,zone,string,time,zone,if,time,zone,null,throw,new,illegal,argument,exception,timezone,cannot,be,null,this,time,zone,date,time,zone,for,id,time,zone,return,this
RangeQueryBuilder -> public RangeQueryBuilder timeZone(String timeZone);1544600864;In case of date field, we can adjust the from/to fields using a timezone;public RangeQueryBuilder timeZone(String timeZone) {_        if (timeZone == null) {_            throw new IllegalArgumentException("timezone cannot be null")__        }_        this.timeZone = DateTimeZone.forID(timeZone)__        return this__    };in,case,of,date,field,we,can,adjust,the,from,to,fields,using,a,timezone;public,range,query,builder,time,zone,string,time,zone,if,time,zone,null,throw,new,illegal,argument,exception,timezone,cannot,be,null,this,time,zone,date,time,zone,for,id,time,zone,return,this
RangeQueryBuilder -> public RangeQueryBuilder timeZone(String timeZone);1548236405;In case of date field, we can adjust the from/to fields using a timezone;public RangeQueryBuilder timeZone(String timeZone) {_        if (timeZone == null) {_            throw new IllegalArgumentException("timezone cannot be null")__        }_        try {_            this.timeZone = ZoneId.of(timeZone)__        } catch (DateTimeException e) {_            throw new IllegalArgumentException(e)__        }_        return this__    };in,case,of,date,field,we,can,adjust,the,from,to,fields,using,a,timezone;public,range,query,builder,time,zone,string,time,zone,if,time,zone,null,throw,new,illegal,argument,exception,timezone,cannot,be,null,try,this,time,zone,zone,id,of,time,zone,catch,date,time,exception,e,throw,new,illegal,argument,exception,e,return,this
RangeQueryBuilder -> public String fieldName();1524684173;Get the field name for this query.;public String fieldName() {_        return this.fieldName__    };get,the,field,name,for,this,query;public,string,field,name,return,this,field,name
RangeQueryBuilder -> public String fieldName();1525334055;Get the field name for this query.;public String fieldName() {_        return this.fieldName__    };get,the,field,name,for,this,query;public,string,field,name,return,this,field,name
RangeQueryBuilder -> public String fieldName();1535139672;Get the field name for this query.;public String fieldName() {_        return this.fieldName__    };get,the,field,name,for,this,query;public,string,field,name,return,this,field,name
RangeQueryBuilder -> public Object to();1524684173;Gets the upper range value for this query._In case upper bound is assigned to a string, we internally convert it to a {@link BytesRef} because_in {@link RangeQueryBuilder} field are later parsed as {@link BytesRef} and we need internal representation_of query to be equal regardless of whether it was created from XContent or via Java API.;public Object to() {_        return maybeConvertToString(this.to)__    };gets,the,upper,range,value,for,this,query,in,case,upper,bound,is,assigned,to,a,string,we,internally,convert,it,to,a,link,bytes,ref,because,in,link,range,query,builder,field,are,later,parsed,as,link,bytes,ref,and,we,need,internal,representation,of,query,to,be,equal,regardless,of,whether,it,was,created,from,xcontent,or,via,java,api;public,object,to,return,maybe,convert,to,string,this,to
RangeQueryBuilder -> public Object to();1525334055;Gets the upper range value for this query._In case upper bound is assigned to a string, we internally convert it to a {@link BytesRef} because_in {@link RangeQueryBuilder} field are later parsed as {@link BytesRef} and we need internal representation_of query to be equal regardless of whether it was created from XContent or via Java API.;public Object to() {_        return maybeConvertToString(this.to)__    };gets,the,upper,range,value,for,this,query,in,case,upper,bound,is,assigned,to,a,string,we,internally,convert,it,to,a,link,bytes,ref,because,in,link,range,query,builder,field,are,later,parsed,as,link,bytes,ref,and,we,need,internal,representation,of,query,to,be,equal,regardless,of,whether,it,was,created,from,xcontent,or,via,java,api;public,object,to,return,maybe,convert,to,string,this,to
RangeQueryBuilder -> public Object to();1535139672;Gets the upper range value for this query._In case upper bound is assigned to a string, we internally convert it to a {@link BytesRef} because_in {@link RangeQueryBuilder} field are later parsed as {@link BytesRef} and we need internal representation_of query to be equal regardless of whether it was created from XContent or via Java API.;public Object to() {_        return maybeConvertToString(this.to)__    };gets,the,upper,range,value,for,this,query,in,case,upper,bound,is,assigned,to,a,string,we,internally,convert,it,to,a,link,bytes,ref,because,in,link,range,query,builder,field,are,later,parsed,as,link,bytes,ref,and,we,need,internal,representation,of,query,to,be,equal,regardless,of,whether,it,was,created,from,xcontent,or,via,java,api;public,object,to,return,maybe,convert,to,string,this,to
RangeQueryBuilder -> public Object to();1538067637;Gets the upper range value for this query._In case upper bound is assigned to a string, we internally convert it to a {@link BytesRef} because_in {@link RangeQueryBuilder} field are later parsed as {@link BytesRef} and we need internal representation_of query to be equal regardless of whether it was created from XContent or via Java API.;public Object to() {_        return maybeConvertToString(this.to)__    };gets,the,upper,range,value,for,this,query,in,case,upper,bound,is,assigned,to,a,string,we,internally,convert,it,to,a,link,bytes,ref,because,in,link,range,query,builder,field,are,later,parsed,as,link,bytes,ref,and,we,need,internal,representation,of,query,to,be,equal,regardless,of,whether,it,was,created,from,xcontent,or,via,java,api;public,object,to,return,maybe,convert,to,string,this,to
RangeQueryBuilder -> public Object to();1541619687;Gets the upper range value for this query._In case upper bound is assigned to a string, we internally convert it to a {@link BytesRef} because_in {@link RangeQueryBuilder} field are later parsed as {@link BytesRef} and we need internal representation_of query to be equal regardless of whether it was created from XContent or via Java API.;public Object to() {_        return maybeConvertToString(this.to)__    };gets,the,upper,range,value,for,this,query,in,case,upper,bound,is,assigned,to,a,string,we,internally,convert,it,to,a,link,bytes,ref,because,in,link,range,query,builder,field,are,later,parsed,as,link,bytes,ref,and,we,need,internal,representation,of,query,to,be,equal,regardless,of,whether,it,was,created,from,xcontent,or,via,java,api;public,object,to,return,maybe,convert,to,string,this,to
RangeQueryBuilder -> public Object to();1544232221;Gets the upper range value for this query._In case upper bound is assigned to a string, we internally convert it to a {@link BytesRef} because_in {@link RangeQueryBuilder} field are later parsed as {@link BytesRef} and we need internal representation_of query to be equal regardless of whether it was created from XContent or via Java API.;public Object to() {_        return maybeConvertToString(this.to)__    };gets,the,upper,range,value,for,this,query,in,case,upper,bound,is,assigned,to,a,string,we,internally,convert,it,to,a,link,bytes,ref,because,in,link,range,query,builder,field,are,later,parsed,as,link,bytes,ref,and,we,need,internal,representation,of,query,to,be,equal,regardless,of,whether,it,was,created,from,xcontent,or,via,java,api;public,object,to,return,maybe,convert,to,string,this,to
RangeQueryBuilder -> public Object to();1544458001;Gets the upper range value for this query._In case upper bound is assigned to a string, we internally convert it to a {@link BytesRef} because_in {@link RangeQueryBuilder} field are later parsed as {@link BytesRef} and we need internal representation_of query to be equal regardless of whether it was created from XContent or via Java API.;public Object to() {_        return maybeConvertToString(this.to)__    };gets,the,upper,range,value,for,this,query,in,case,upper,bound,is,assigned,to,a,string,we,internally,convert,it,to,a,link,bytes,ref,because,in,link,range,query,builder,field,are,later,parsed,as,link,bytes,ref,and,we,need,internal,representation,of,query,to,be,equal,regardless,of,whether,it,was,created,from,xcontent,or,via,java,api;public,object,to,return,maybe,convert,to,string,this,to
RangeQueryBuilder -> public Object to();1544600864;Gets the upper range value for this query._In case upper bound is assigned to a string, we internally convert it to a {@link BytesRef} because_in {@link RangeQueryBuilder} field are later parsed as {@link BytesRef} and we need internal representation_of query to be equal regardless of whether it was created from XContent or via Java API.;public Object to() {_        return maybeConvertToString(this.to)__    };gets,the,upper,range,value,for,this,query,in,case,upper,bound,is,assigned,to,a,string,we,internally,convert,it,to,a,link,bytes,ref,because,in,link,range,query,builder,field,are,later,parsed,as,link,bytes,ref,and,we,need,internal,representation,of,query,to,be,equal,regardless,of,whether,it,was,created,from,xcontent,or,via,java,api;public,object,to,return,maybe,convert,to,string,this,to
RangeQueryBuilder -> public Object to();1548236405;Gets the upper range value for this query._In case upper bound is assigned to a string, we internally convert it to a {@link BytesRef} because_in {@link RangeQueryBuilder} field are later parsed as {@link BytesRef} and we need internal representation_of query to be equal regardless of whether it was created from XContent or via Java API.;public Object to() {_        return maybeConvertToString(this.to)__    };gets,the,upper,range,value,for,this,query,in,case,upper,bound,is,assigned,to,a,string,we,internally,convert,it,to,a,link,bytes,ref,because,in,link,range,query,builder,field,are,later,parsed,as,link,bytes,ref,and,we,need,internal,representation,of,query,to,be,equal,regardless,of,whether,it,was,created,from,xcontent,or,via,java,api;public,object,to,return,maybe,convert,to,string,this,to
RangeQueryBuilder -> public RangeQueryBuilder gte(Object from);1524684173;The from part of the range query. Null indicates unbounded.;public RangeQueryBuilder gte(Object from) {_        return from(from, true)__    };the,from,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,gte,object,from,return,from,from,true
RangeQueryBuilder -> public RangeQueryBuilder gte(Object from);1525334055;The from part of the range query. Null indicates unbounded.;public RangeQueryBuilder gte(Object from) {_        return from(from, true)__    };the,from,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,gte,object,from,return,from,from,true
RangeQueryBuilder -> public RangeQueryBuilder gte(Object from);1535139672;The from part of the range query. Null indicates unbounded.;public RangeQueryBuilder gte(Object from) {_        return from(from, true)__    };the,from,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,gte,object,from,return,from,from,true
RangeQueryBuilder -> public RangeQueryBuilder gte(Object from);1538067637;The from part of the range query. Null indicates unbounded.;public RangeQueryBuilder gte(Object from) {_        return from(from, true)__    };the,from,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,gte,object,from,return,from,from,true
RangeQueryBuilder -> public RangeQueryBuilder gte(Object from);1541619687;The from part of the range query. Null indicates unbounded.;public RangeQueryBuilder gte(Object from) {_        return from(from, true)__    };the,from,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,gte,object,from,return,from,from,true
RangeQueryBuilder -> public RangeQueryBuilder gte(Object from);1544232221;The from part of the range query. Null indicates unbounded.;public RangeQueryBuilder gte(Object from) {_        return from(from, true)__    };the,from,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,gte,object,from,return,from,from,true
RangeQueryBuilder -> public RangeQueryBuilder gte(Object from);1544458001;The from part of the range query. Null indicates unbounded.;public RangeQueryBuilder gte(Object from) {_        return from(from, true)__    };the,from,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,gte,object,from,return,from,from,true
RangeQueryBuilder -> public RangeQueryBuilder gte(Object from);1544600864;The from part of the range query. Null indicates unbounded.;public RangeQueryBuilder gte(Object from) {_        return from(from, true)__    };the,from,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,gte,object,from,return,from,from,true
RangeQueryBuilder -> public RangeQueryBuilder gte(Object from);1548236405;The from part of the range query. Null indicates unbounded.;public RangeQueryBuilder gte(Object from) {_        return from(from, true)__    };the,from,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,gte,object,from,return,from,from,true
RangeQueryBuilder -> public RangeQueryBuilder format(String format);1524684173;In case of format field, we can parse the from/to fields using this time format;public RangeQueryBuilder format(String format) {_        if (format == null) {_            throw new IllegalArgumentException("format cannot be null")__        }_        this.format = Joda.forPattern(format)__        return this__    };in,case,of,format,field,we,can,parse,the,from,to,fields,using,this,time,format;public,range,query,builder,format,string,format,if,format,null,throw,new,illegal,argument,exception,format,cannot,be,null,this,format,joda,for,pattern,format,return,this
RangeQueryBuilder -> public RangeQueryBuilder format(String format);1525334055;In case of format field, we can parse the from/to fields using this time format;public RangeQueryBuilder format(String format) {_        if (format == null) {_            throw new IllegalArgumentException("format cannot be null")__        }_        this.format = Joda.forPattern(format)__        return this__    };in,case,of,format,field,we,can,parse,the,from,to,fields,using,this,time,format;public,range,query,builder,format,string,format,if,format,null,throw,new,illegal,argument,exception,format,cannot,be,null,this,format,joda,for,pattern,format,return,this
RangeQueryBuilder -> public RangeQueryBuilder format(String format);1535139672;In case of format field, we can parse the from/to fields using this time format;public RangeQueryBuilder format(String format) {_        if (format == null) {_            throw new IllegalArgumentException("format cannot be null")__        }_        this.format = Joda.forPattern(format)__        return this__    };in,case,of,format,field,we,can,parse,the,from,to,fields,using,this,time,format;public,range,query,builder,format,string,format,if,format,null,throw,new,illegal,argument,exception,format,cannot,be,null,this,format,joda,for,pattern,format,return,this
RangeQueryBuilder -> public RangeQueryBuilder format(String format);1538067637;In case of format field, we can parse the from/to fields using this time format;public RangeQueryBuilder format(String format) {_        if (format == null) {_            throw new IllegalArgumentException("format cannot be null")__        }_        this.format = Joda.forPattern(format)__        return this__    };in,case,of,format,field,we,can,parse,the,from,to,fields,using,this,time,format;public,range,query,builder,format,string,format,if,format,null,throw,new,illegal,argument,exception,format,cannot,be,null,this,format,joda,for,pattern,format,return,this
RangeQueryBuilder -> public RangeQueryBuilder format(String format);1541619687;In case of format field, we can parse the from/to fields using this time format;public RangeQueryBuilder format(String format) {_        if (format == null) {_            throw new IllegalArgumentException("format cannot be null")__        }_        this.format = Joda.forPattern(format)__        return this__    };in,case,of,format,field,we,can,parse,the,from,to,fields,using,this,time,format;public,range,query,builder,format,string,format,if,format,null,throw,new,illegal,argument,exception,format,cannot,be,null,this,format,joda,for,pattern,format,return,this
RangeQueryBuilder -> public RangeQueryBuilder format(String format);1544232221;In case of format field, we can parse the from/to fields using this time format;public RangeQueryBuilder format(String format) {_        if (format == null) {_            throw new IllegalArgumentException("format cannot be null")__        }_        this.format = Joda.forPattern(format)__        return this__    };in,case,of,format,field,we,can,parse,the,from,to,fields,using,this,time,format;public,range,query,builder,format,string,format,if,format,null,throw,new,illegal,argument,exception,format,cannot,be,null,this,format,joda,for,pattern,format,return,this
RangeQueryBuilder -> public RangeQueryBuilder format(String format);1544458001;In case of format field, we can parse the from/to fields using this time format;public RangeQueryBuilder format(String format) {_        if (format == null) {_            throw new IllegalArgumentException("format cannot be null")__        }_        this.format = Joda.forPattern(format)__        return this__    };in,case,of,format,field,we,can,parse,the,from,to,fields,using,this,time,format;public,range,query,builder,format,string,format,if,format,null,throw,new,illegal,argument,exception,format,cannot,be,null,this,format,joda,for,pattern,format,return,this
RangeQueryBuilder -> public RangeQueryBuilder format(String format);1544600864;In case of format field, we can parse the from/to fields using this time format;public RangeQueryBuilder format(String format) {_        if (format == null) {_            throw new IllegalArgumentException("format cannot be null")__        }_        this.format = DateFormatter.forPattern(format)__        return this__    };in,case,of,format,field,we,can,parse,the,from,to,fields,using,this,time,format;public,range,query,builder,format,string,format,if,format,null,throw,new,illegal,argument,exception,format,cannot,be,null,this,format,date,formatter,for,pattern,format,return,this
RangeQueryBuilder -> public RangeQueryBuilder format(String format);1548236405;In case of format field, we can parse the from/to fields using this time format;public RangeQueryBuilder format(String format) {_        if (format == null) {_            throw new IllegalArgumentException("format cannot be null")__        }_        _        DateFormatter.forPattern(format)__        this.format = format__        return this__    };in,case,of,format,field,we,can,parse,the,from,to,fields,using,this,time,format;public,range,query,builder,format,string,format,if,format,null,throw,new,illegal,argument,exception,format,cannot,be,null,date,formatter,for,pattern,format,this,format,format,return,this
RangeQueryBuilder -> public RangeQueryBuilder from(Object from);1524684173;The from part of the range query. Null indicates unbounded.;public RangeQueryBuilder from(Object from) {_        return from(from, this.includeLower)__    };the,from,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,from,object,from,return,from,from,this,include,lower
RangeQueryBuilder -> public RangeQueryBuilder from(Object from);1525334055;The from part of the range query. Null indicates unbounded.;public RangeQueryBuilder from(Object from) {_        return from(from, this.includeLower)__    };the,from,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,from,object,from,return,from,from,this,include,lower
RangeQueryBuilder -> public RangeQueryBuilder from(Object from);1535139672;The from part of the range query. Null indicates unbounded.;public RangeQueryBuilder from(Object from) {_        return from(from, this.includeLower)__    };the,from,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,from,object,from,return,from,from,this,include,lower
RangeQueryBuilder -> public RangeQueryBuilder from(Object from);1538067637;The from part of the range query. Null indicates unbounded.;public RangeQueryBuilder from(Object from) {_        return from(from, this.includeLower)__    };the,from,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,from,object,from,return,from,from,this,include,lower
RangeQueryBuilder -> public RangeQueryBuilder from(Object from);1541619687;The from part of the range query. Null indicates unbounded.;public RangeQueryBuilder from(Object from) {_        return from(from, this.includeLower)__    };the,from,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,from,object,from,return,from,from,this,include,lower
RangeQueryBuilder -> public RangeQueryBuilder from(Object from);1544232221;The from part of the range query. Null indicates unbounded.;public RangeQueryBuilder from(Object from) {_        return from(from, this.includeLower)__    };the,from,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,from,object,from,return,from,from,this,include,lower
RangeQueryBuilder -> public RangeQueryBuilder from(Object from);1544458001;The from part of the range query. Null indicates unbounded.;public RangeQueryBuilder from(Object from) {_        return from(from, this.includeLower)__    };the,from,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,from,object,from,return,from,from,this,include,lower
RangeQueryBuilder -> public RangeQueryBuilder from(Object from);1544600864;The from part of the range query. Null indicates unbounded.;public RangeQueryBuilder from(Object from) {_        return from(from, this.includeLower)__    };the,from,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,from,object,from,return,from,from,this,include,lower
RangeQueryBuilder -> public RangeQueryBuilder from(Object from);1548236405;The from part of the range query. Null indicates unbounded.;public RangeQueryBuilder from(Object from) {_        return from(from, this.includeLower)__    };the,from,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,from,object,from,return,from,from,this,include,lower
RangeQueryBuilder -> public boolean includeUpper();1524684173;Gets the includeUpper flag for this query.;public boolean includeUpper() {_        return this.includeUpper__    };gets,the,include,upper,flag,for,this,query;public,boolean,include,upper,return,this,include,upper
RangeQueryBuilder -> public boolean includeUpper();1525334055;Gets the includeUpper flag for this query.;public boolean includeUpper() {_        return this.includeUpper__    };gets,the,include,upper,flag,for,this,query;public,boolean,include,upper,return,this,include,upper
RangeQueryBuilder -> public boolean includeUpper();1535139672;Gets the includeUpper flag for this query.;public boolean includeUpper() {_        return this.includeUpper__    };gets,the,include,upper,flag,for,this,query;public,boolean,include,upper,return,this,include,upper
RangeQueryBuilder -> public boolean includeUpper();1538067637;Gets the includeUpper flag for this query.;public boolean includeUpper() {_        return this.includeUpper__    };gets,the,include,upper,flag,for,this,query;public,boolean,include,upper,return,this,include,upper
RangeQueryBuilder -> public boolean includeUpper();1541619687;Gets the includeUpper flag for this query.;public boolean includeUpper() {_        return this.includeUpper__    };gets,the,include,upper,flag,for,this,query;public,boolean,include,upper,return,this,include,upper
RangeQueryBuilder -> public boolean includeUpper();1544232221;Gets the includeUpper flag for this query.;public boolean includeUpper() {_        return this.includeUpper__    };gets,the,include,upper,flag,for,this,query;public,boolean,include,upper,return,this,include,upper
RangeQueryBuilder -> public boolean includeUpper();1544458001;Gets the includeUpper flag for this query.;public boolean includeUpper() {_        return this.includeUpper__    };gets,the,include,upper,flag,for,this,query;public,boolean,include,upper,return,this,include,upper
RangeQueryBuilder -> public boolean includeUpper();1544600864;Gets the includeUpper flag for this query.;public boolean includeUpper() {_        return this.includeUpper__    };gets,the,include,upper,flag,for,this,query;public,boolean,include,upper,return,this,include,upper
RangeQueryBuilder -> public boolean includeUpper();1548236405;Gets the includeUpper flag for this query.;public boolean includeUpper() {_        return this.includeUpper__    };gets,the,include,upper,flag,for,this,query;public,boolean,include,upper,return,this,include,upper
RangeQueryBuilder -> public RangeQueryBuilder lt(Object to);1524684173;The to part of the range query. Null indicates unbounded.;public RangeQueryBuilder lt(Object to) {_        return to(to, false)__    };the,to,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,lt,object,to,return,to,to,false
RangeQueryBuilder -> public RangeQueryBuilder lt(Object to);1525334055;The to part of the range query. Null indicates unbounded.;public RangeQueryBuilder lt(Object to) {_        return to(to, false)__    };the,to,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,lt,object,to,return,to,to,false
RangeQueryBuilder -> public RangeQueryBuilder lt(Object to);1535139672;The to part of the range query. Null indicates unbounded.;public RangeQueryBuilder lt(Object to) {_        return to(to, false)__    };the,to,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,lt,object,to,return,to,to,false
RangeQueryBuilder -> public RangeQueryBuilder lt(Object to);1538067637;The to part of the range query. Null indicates unbounded.;public RangeQueryBuilder lt(Object to) {_        return to(to, false)__    };the,to,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,lt,object,to,return,to,to,false
RangeQueryBuilder -> public RangeQueryBuilder lt(Object to);1541619687;The to part of the range query. Null indicates unbounded.;public RangeQueryBuilder lt(Object to) {_        return to(to, false)__    };the,to,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,lt,object,to,return,to,to,false
RangeQueryBuilder -> public RangeQueryBuilder lt(Object to);1544232221;The to part of the range query. Null indicates unbounded.;public RangeQueryBuilder lt(Object to) {_        return to(to, false)__    };the,to,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,lt,object,to,return,to,to,false
RangeQueryBuilder -> public RangeQueryBuilder lt(Object to);1544458001;The to part of the range query. Null indicates unbounded.;public RangeQueryBuilder lt(Object to) {_        return to(to, false)__    };the,to,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,lt,object,to,return,to,to,false
RangeQueryBuilder -> public RangeQueryBuilder lt(Object to);1544600864;The to part of the range query. Null indicates unbounded.;public RangeQueryBuilder lt(Object to) {_        return to(to, false)__    };the,to,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,lt,object,to,return,to,to,false
RangeQueryBuilder -> public RangeQueryBuilder lt(Object to);1548236405;The to part of the range query. Null indicates unbounded.;public RangeQueryBuilder lt(Object to) {_        return to(to, false)__    };the,to,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,lt,object,to,return,to,to,false
RangeQueryBuilder -> public String timeZone();1524684173;In case of date field, gets the from/to fields timezone adjustment;public String timeZone() {_        return this.timeZone == null ? null : this.timeZone.getID()__    };in,case,of,date,field,gets,the,from,to,fields,timezone,adjustment;public,string,time,zone,return,this,time,zone,null,null,this,time,zone,get,id
RangeQueryBuilder -> public String timeZone();1525334055;In case of date field, gets the from/to fields timezone adjustment;public String timeZone() {_        return this.timeZone == null ? null : this.timeZone.getID()__    };in,case,of,date,field,gets,the,from,to,fields,timezone,adjustment;public,string,time,zone,return,this,time,zone,null,null,this,time,zone,get,id
RangeQueryBuilder -> public String timeZone();1535139672;In case of date field, gets the from/to fields timezone adjustment;public String timeZone() {_        return this.timeZone == null ? null : this.timeZone.getID()__    };in,case,of,date,field,gets,the,from,to,fields,timezone,adjustment;public,string,time,zone,return,this,time,zone,null,null,this,time,zone,get,id
RangeQueryBuilder -> public String timeZone();1538067637;In case of date field, gets the from/to fields timezone adjustment;public String timeZone() {_        return this.timeZone == null ? null : this.timeZone.getID()__    };in,case,of,date,field,gets,the,from,to,fields,timezone,adjustment;public,string,time,zone,return,this,time,zone,null,null,this,time,zone,get,id
RangeQueryBuilder -> public String timeZone();1541619687;In case of date field, gets the from/to fields timezone adjustment;public String timeZone() {_        return this.timeZone == null ? null : this.timeZone.getID()__    };in,case,of,date,field,gets,the,from,to,fields,timezone,adjustment;public,string,time,zone,return,this,time,zone,null,null,this,time,zone,get,id
RangeQueryBuilder -> public String timeZone();1544232221;In case of date field, gets the from/to fields timezone adjustment;public String timeZone() {_        return this.timeZone == null ? null : this.timeZone.getID()__    };in,case,of,date,field,gets,the,from,to,fields,timezone,adjustment;public,string,time,zone,return,this,time,zone,null,null,this,time,zone,get,id
RangeQueryBuilder -> public String timeZone();1544458001;In case of date field, gets the from/to fields timezone adjustment;public String timeZone() {_        return this.timeZone == null ? null : this.timeZone.getID()__    };in,case,of,date,field,gets,the,from,to,fields,timezone,adjustment;public,string,time,zone,return,this,time,zone,null,null,this,time,zone,get,id
RangeQueryBuilder -> public String timeZone();1544600864;In case of date field, gets the from/to fields timezone adjustment;public String timeZone() {_        return this.timeZone == null ? null : this.timeZone.getID()__    };in,case,of,date,field,gets,the,from,to,fields,timezone,adjustment;public,string,time,zone,return,this,time,zone,null,null,this,time,zone,get,id
RangeQueryBuilder -> public String timeZone();1548236405;In case of date field, gets the from/to fields timezone adjustment;public String timeZone() {_        return this.timeZone == null ? null : this.timeZone.getId()__    };in,case,of,date,field,gets,the,from,to,fields,timezone,adjustment;public,string,time,zone,return,this,time,zone,null,null,this,time,zone,get,id
RangeQueryBuilder -> public RangeQueryBuilder to(Object to, boolean includeUpper);1524684173;The to part of the range query. Null indicates unbounded.;public RangeQueryBuilder to(Object to, boolean includeUpper) {_        this.to = maybeConvertToBytesRef(to)__        this.includeUpper = includeUpper__        return this__    };the,to,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,to,object,to,boolean,include,upper,this,to,maybe,convert,to,bytes,ref,to,this,include,upper,include,upper,return,this
RangeQueryBuilder -> public RangeQueryBuilder to(Object to, boolean includeUpper);1525334055;The to part of the range query. Null indicates unbounded.;public RangeQueryBuilder to(Object to, boolean includeUpper) {_        this.to = maybeConvertToBytesRef(to)__        this.includeUpper = includeUpper__        return this__    };the,to,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,to,object,to,boolean,include,upper,this,to,maybe,convert,to,bytes,ref,to,this,include,upper,include,upper,return,this
RangeQueryBuilder -> public RangeQueryBuilder to(Object to, boolean includeUpper);1535139672;The to part of the range query. Null indicates unbounded.;public RangeQueryBuilder to(Object to, boolean includeUpper) {_        this.to = maybeConvertToBytesRef(to)__        this.includeUpper = includeUpper__        return this__    };the,to,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,to,object,to,boolean,include,upper,this,to,maybe,convert,to,bytes,ref,to,this,include,upper,include,upper,return,this
RangeQueryBuilder -> public RangeQueryBuilder to(Object to, boolean includeUpper);1538067637;The to part of the range query. Null indicates unbounded.;public RangeQueryBuilder to(Object to, boolean includeUpper) {_        this.to = maybeConvertToBytesRef(to)__        this.includeUpper = includeUpper__        return this__    };the,to,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,to,object,to,boolean,include,upper,this,to,maybe,convert,to,bytes,ref,to,this,include,upper,include,upper,return,this
RangeQueryBuilder -> public RangeQueryBuilder to(Object to, boolean includeUpper);1541619687;The to part of the range query. Null indicates unbounded.;public RangeQueryBuilder to(Object to, boolean includeUpper) {_        this.to = maybeConvertToBytesRef(to)__        this.includeUpper = includeUpper__        return this__    };the,to,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,to,object,to,boolean,include,upper,this,to,maybe,convert,to,bytes,ref,to,this,include,upper,include,upper,return,this
RangeQueryBuilder -> public RangeQueryBuilder to(Object to, boolean includeUpper);1544232221;The to part of the range query. Null indicates unbounded.;public RangeQueryBuilder to(Object to, boolean includeUpper) {_        this.to = maybeConvertToBytesRef(to)__        this.includeUpper = includeUpper__        return this__    };the,to,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,to,object,to,boolean,include,upper,this,to,maybe,convert,to,bytes,ref,to,this,include,upper,include,upper,return,this
RangeQueryBuilder -> public RangeQueryBuilder to(Object to, boolean includeUpper);1544458001;The to part of the range query. Null indicates unbounded.;public RangeQueryBuilder to(Object to, boolean includeUpper) {_        this.to = maybeConvertToBytesRef(to)__        this.includeUpper = includeUpper__        return this__    };the,to,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,to,object,to,boolean,include,upper,this,to,maybe,convert,to,bytes,ref,to,this,include,upper,include,upper,return,this
RangeQueryBuilder -> public RangeQueryBuilder to(Object to, boolean includeUpper);1544600864;The to part of the range query. Null indicates unbounded.;public RangeQueryBuilder to(Object to, boolean includeUpper) {_        this.to = maybeConvertToBytesRef(to)__        this.includeUpper = includeUpper__        return this__    };the,to,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,to,object,to,boolean,include,upper,this,to,maybe,convert,to,bytes,ref,to,this,include,upper,include,upper,return,this
RangeQueryBuilder -> public RangeQueryBuilder to(Object to, boolean includeUpper);1548236405;The to part of the range query. Null indicates unbounded.;public RangeQueryBuilder to(Object to, boolean includeUpper) {_        this.to = maybeConvertToBytesRef(to)__        this.includeUpper = includeUpper__        return this__    };the,to,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,to,object,to,boolean,include,upper,this,to,maybe,convert,to,bytes,ref,to,this,include,upper,include,upper,return,this
RangeQueryBuilder -> public String format();1524684173;Gets the format field to parse the from/to fields;public String format() {_        return this.format == null ? null : this.format.format()__    };gets,the,format,field,to,parse,the,from,to,fields;public,string,format,return,this,format,null,null,this,format,format
RangeQueryBuilder -> public String format();1525334055;Gets the format field to parse the from/to fields;public String format() {_        return this.format == null ? null : this.format.format()__    };gets,the,format,field,to,parse,the,from,to,fields;public,string,format,return,this,format,null,null,this,format,format
RangeQueryBuilder -> public String format();1535139672;Gets the format field to parse the from/to fields;public String format() {_        return this.format == null ? null : this.format.format()__    };gets,the,format,field,to,parse,the,from,to,fields;public,string,format,return,this,format,null,null,this,format,format
RangeQueryBuilder -> public String format();1538067637;Gets the format field to parse the from/to fields;public String format() {_        return this.format == null ? null : this.format.format()__    };gets,the,format,field,to,parse,the,from,to,fields;public,string,format,return,this,format,null,null,this,format,format
RangeQueryBuilder -> public String format();1541619687;Gets the format field to parse the from/to fields;public String format() {_        return this.format == null ? null : this.format.format()__    };gets,the,format,field,to,parse,the,from,to,fields;public,string,format,return,this,format,null,null,this,format,format
RangeQueryBuilder -> public String format();1544232221;Gets the format field to parse the from/to fields;public String format() {_        return this.format == null ? null : this.format.pattern()__    };gets,the,format,field,to,parse,the,from,to,fields;public,string,format,return,this,format,null,null,this,format,pattern
RangeQueryBuilder -> public String format();1544458001;Gets the format field to parse the from/to fields;public String format() {_        return this.format == null ? null : this.format.pattern()__    };gets,the,format,field,to,parse,the,from,to,fields;public,string,format,return,this,format,null,null,this,format,pattern
RangeQueryBuilder -> public String format();1544600864;Gets the format field to parse the from/to fields;public String format() {_        return this.format == null ? null : this.format.pattern()__    };gets,the,format,field,to,parse,the,from,to,fields;public,string,format,return,this,format,null,null,this,format,pattern
RangeQueryBuilder -> public String format();1548236405;Gets the format field to parse the from/to fields;public String format() {_        return format__    };gets,the,format,field,to,parse,the,from,to,fields;public,string,format,return,format
RangeQueryBuilder -> public RangeQueryBuilder from(Object from, boolean includeLower);1524684173;The from part of the range query. Null indicates unbounded._In case lower bound is assigned to a string, we internally convert it to a {@link BytesRef} because_in {@link RangeQueryBuilder} field are later parsed as {@link BytesRef} and we need internal representation_of query to be equal regardless of whether it was created from XContent or via Java API.;public RangeQueryBuilder from(Object from, boolean includeLower) {_        this.from = maybeConvertToBytesRef(from)__        this.includeLower = includeLower__        return this__    };the,from,part,of,the,range,query,null,indicates,unbounded,in,case,lower,bound,is,assigned,to,a,string,we,internally,convert,it,to,a,link,bytes,ref,because,in,link,range,query,builder,field,are,later,parsed,as,link,bytes,ref,and,we,need,internal,representation,of,query,to,be,equal,regardless,of,whether,it,was,created,from,xcontent,or,via,java,api;public,range,query,builder,from,object,from,boolean,include,lower,this,from,maybe,convert,to,bytes,ref,from,this,include,lower,include,lower,return,this
RangeQueryBuilder -> public RangeQueryBuilder from(Object from, boolean includeLower);1525334055;The from part of the range query. Null indicates unbounded._In case lower bound is assigned to a string, we internally convert it to a {@link BytesRef} because_in {@link RangeQueryBuilder} field are later parsed as {@link BytesRef} and we need internal representation_of query to be equal regardless of whether it was created from XContent or via Java API.;public RangeQueryBuilder from(Object from, boolean includeLower) {_        this.from = maybeConvertToBytesRef(from)__        this.includeLower = includeLower__        return this__    };the,from,part,of,the,range,query,null,indicates,unbounded,in,case,lower,bound,is,assigned,to,a,string,we,internally,convert,it,to,a,link,bytes,ref,because,in,link,range,query,builder,field,are,later,parsed,as,link,bytes,ref,and,we,need,internal,representation,of,query,to,be,equal,regardless,of,whether,it,was,created,from,xcontent,or,via,java,api;public,range,query,builder,from,object,from,boolean,include,lower,this,from,maybe,convert,to,bytes,ref,from,this,include,lower,include,lower,return,this
RangeQueryBuilder -> public RangeQueryBuilder from(Object from, boolean includeLower);1535139672;The from part of the range query. Null indicates unbounded._In case lower bound is assigned to a string, we internally convert it to a {@link BytesRef} because_in {@link RangeQueryBuilder} field are later parsed as {@link BytesRef} and we need internal representation_of query to be equal regardless of whether it was created from XContent or via Java API.;public RangeQueryBuilder from(Object from, boolean includeLower) {_        this.from = maybeConvertToBytesRef(from)__        this.includeLower = includeLower__        return this__    };the,from,part,of,the,range,query,null,indicates,unbounded,in,case,lower,bound,is,assigned,to,a,string,we,internally,convert,it,to,a,link,bytes,ref,because,in,link,range,query,builder,field,are,later,parsed,as,link,bytes,ref,and,we,need,internal,representation,of,query,to,be,equal,regardless,of,whether,it,was,created,from,xcontent,or,via,java,api;public,range,query,builder,from,object,from,boolean,include,lower,this,from,maybe,convert,to,bytes,ref,from,this,include,lower,include,lower,return,this
RangeQueryBuilder -> public RangeQueryBuilder from(Object from, boolean includeLower);1538067637;The from part of the range query. Null indicates unbounded._In case lower bound is assigned to a string, we internally convert it to a {@link BytesRef} because_in {@link RangeQueryBuilder} field are later parsed as {@link BytesRef} and we need internal representation_of query to be equal regardless of whether it was created from XContent or via Java API.;public RangeQueryBuilder from(Object from, boolean includeLower) {_        this.from = maybeConvertToBytesRef(from)__        this.includeLower = includeLower__        return this__    };the,from,part,of,the,range,query,null,indicates,unbounded,in,case,lower,bound,is,assigned,to,a,string,we,internally,convert,it,to,a,link,bytes,ref,because,in,link,range,query,builder,field,are,later,parsed,as,link,bytes,ref,and,we,need,internal,representation,of,query,to,be,equal,regardless,of,whether,it,was,created,from,xcontent,or,via,java,api;public,range,query,builder,from,object,from,boolean,include,lower,this,from,maybe,convert,to,bytes,ref,from,this,include,lower,include,lower,return,this
RangeQueryBuilder -> public RangeQueryBuilder from(Object from, boolean includeLower);1541619687;The from part of the range query. Null indicates unbounded._In case lower bound is assigned to a string, we internally convert it to a {@link BytesRef} because_in {@link RangeQueryBuilder} field are later parsed as {@link BytesRef} and we need internal representation_of query to be equal regardless of whether it was created from XContent or via Java API.;public RangeQueryBuilder from(Object from, boolean includeLower) {_        this.from = maybeConvertToBytesRef(from)__        this.includeLower = includeLower__        return this__    };the,from,part,of,the,range,query,null,indicates,unbounded,in,case,lower,bound,is,assigned,to,a,string,we,internally,convert,it,to,a,link,bytes,ref,because,in,link,range,query,builder,field,are,later,parsed,as,link,bytes,ref,and,we,need,internal,representation,of,query,to,be,equal,regardless,of,whether,it,was,created,from,xcontent,or,via,java,api;public,range,query,builder,from,object,from,boolean,include,lower,this,from,maybe,convert,to,bytes,ref,from,this,include,lower,include,lower,return,this
RangeQueryBuilder -> public RangeQueryBuilder from(Object from, boolean includeLower);1544232221;The from part of the range query. Null indicates unbounded._In case lower bound is assigned to a string, we internally convert it to a {@link BytesRef} because_in {@link RangeQueryBuilder} field are later parsed as {@link BytesRef} and we need internal representation_of query to be equal regardless of whether it was created from XContent or via Java API.;public RangeQueryBuilder from(Object from, boolean includeLower) {_        this.from = maybeConvertToBytesRef(from)__        this.includeLower = includeLower__        return this__    };the,from,part,of,the,range,query,null,indicates,unbounded,in,case,lower,bound,is,assigned,to,a,string,we,internally,convert,it,to,a,link,bytes,ref,because,in,link,range,query,builder,field,are,later,parsed,as,link,bytes,ref,and,we,need,internal,representation,of,query,to,be,equal,regardless,of,whether,it,was,created,from,xcontent,or,via,java,api;public,range,query,builder,from,object,from,boolean,include,lower,this,from,maybe,convert,to,bytes,ref,from,this,include,lower,include,lower,return,this
RangeQueryBuilder -> public RangeQueryBuilder from(Object from, boolean includeLower);1544458001;The from part of the range query. Null indicates unbounded._In case lower bound is assigned to a string, we internally convert it to a {@link BytesRef} because_in {@link RangeQueryBuilder} field are later parsed as {@link BytesRef} and we need internal representation_of query to be equal regardless of whether it was created from XContent or via Java API.;public RangeQueryBuilder from(Object from, boolean includeLower) {_        this.from = maybeConvertToBytesRef(from)__        this.includeLower = includeLower__        return this__    };the,from,part,of,the,range,query,null,indicates,unbounded,in,case,lower,bound,is,assigned,to,a,string,we,internally,convert,it,to,a,link,bytes,ref,because,in,link,range,query,builder,field,are,later,parsed,as,link,bytes,ref,and,we,need,internal,representation,of,query,to,be,equal,regardless,of,whether,it,was,created,from,xcontent,or,via,java,api;public,range,query,builder,from,object,from,boolean,include,lower,this,from,maybe,convert,to,bytes,ref,from,this,include,lower,include,lower,return,this
RangeQueryBuilder -> public RangeQueryBuilder from(Object from, boolean includeLower);1544600864;The from part of the range query. Null indicates unbounded._In case lower bound is assigned to a string, we internally convert it to a {@link BytesRef} because_in {@link RangeQueryBuilder} field are later parsed as {@link BytesRef} and we need internal representation_of query to be equal regardless of whether it was created from XContent or via Java API.;public RangeQueryBuilder from(Object from, boolean includeLower) {_        this.from = maybeConvertToBytesRef(from)__        this.includeLower = includeLower__        return this__    };the,from,part,of,the,range,query,null,indicates,unbounded,in,case,lower,bound,is,assigned,to,a,string,we,internally,convert,it,to,a,link,bytes,ref,because,in,link,range,query,builder,field,are,later,parsed,as,link,bytes,ref,and,we,need,internal,representation,of,query,to,be,equal,regardless,of,whether,it,was,created,from,xcontent,or,via,java,api;public,range,query,builder,from,object,from,boolean,include,lower,this,from,maybe,convert,to,bytes,ref,from,this,include,lower,include,lower,return,this
RangeQueryBuilder -> public RangeQueryBuilder from(Object from, boolean includeLower);1548236405;The from part of the range query. Null indicates unbounded._In case lower bound is assigned to a string, we internally convert it to a {@link BytesRef} because_in {@link RangeQueryBuilder} field are later parsed as {@link BytesRef} and we need internal representation_of query to be equal regardless of whether it was created from XContent or via Java API.;public RangeQueryBuilder from(Object from, boolean includeLower) {_        this.from = maybeConvertToBytesRef(from)__        this.includeLower = includeLower__        return this__    };the,from,part,of,the,range,query,null,indicates,unbounded,in,case,lower,bound,is,assigned,to,a,string,we,internally,convert,it,to,a,link,bytes,ref,because,in,link,range,query,builder,field,are,later,parsed,as,link,bytes,ref,and,we,need,internal,representation,of,query,to,be,equal,regardless,of,whether,it,was,created,from,xcontent,or,via,java,api;public,range,query,builder,from,object,from,boolean,include,lower,this,from,maybe,convert,to,bytes,ref,from,this,include,lower,include,lower,return,this
RangeQueryBuilder -> public RangeQueryBuilder gt(Object from);1524684173;The from part of the range query. Null indicates unbounded.;public RangeQueryBuilder gt(Object from) {_        return from(from, false)__    };the,from,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,gt,object,from,return,from,from,false
RangeQueryBuilder -> public RangeQueryBuilder gt(Object from);1525334055;The from part of the range query. Null indicates unbounded.;public RangeQueryBuilder gt(Object from) {_        return from(from, false)__    };the,from,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,gt,object,from,return,from,from,false
RangeQueryBuilder -> public RangeQueryBuilder gt(Object from);1535139672;The from part of the range query. Null indicates unbounded.;public RangeQueryBuilder gt(Object from) {_        return from(from, false)__    };the,from,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,gt,object,from,return,from,from,false
RangeQueryBuilder -> public RangeQueryBuilder gt(Object from);1538067637;The from part of the range query. Null indicates unbounded.;public RangeQueryBuilder gt(Object from) {_        return from(from, false)__    };the,from,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,gt,object,from,return,from,from,false
RangeQueryBuilder -> public RangeQueryBuilder gt(Object from);1541619687;The from part of the range query. Null indicates unbounded.;public RangeQueryBuilder gt(Object from) {_        return from(from, false)__    };the,from,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,gt,object,from,return,from,from,false
RangeQueryBuilder -> public RangeQueryBuilder gt(Object from);1544232221;The from part of the range query. Null indicates unbounded.;public RangeQueryBuilder gt(Object from) {_        return from(from, false)__    };the,from,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,gt,object,from,return,from,from,false
RangeQueryBuilder -> public RangeQueryBuilder gt(Object from);1544458001;The from part of the range query. Null indicates unbounded.;public RangeQueryBuilder gt(Object from) {_        return from(from, false)__    };the,from,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,gt,object,from,return,from,from,false
RangeQueryBuilder -> public RangeQueryBuilder gt(Object from);1544600864;The from part of the range query. Null indicates unbounded.;public RangeQueryBuilder gt(Object from) {_        return from(from, false)__    };the,from,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,gt,object,from,return,from,from,false
RangeQueryBuilder -> public RangeQueryBuilder gt(Object from);1548236405;The from part of the range query. Null indicates unbounded.;public RangeQueryBuilder gt(Object from) {_        return from(from, false)__    };the,from,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,gt,object,from,return,from,from,false
RangeQueryBuilder -> public RangeQueryBuilder(StreamInput in) throws IOException;1524684173;Read from a stream.;public RangeQueryBuilder(StreamInput in) throws IOException {_        super(in)__        fieldName = in.readString()__        from = in.readGenericValue()__        to = in.readGenericValue()__        includeLower = in.readBoolean()__        includeUpper = in.readBoolean()__        timeZone = in.readOptionalTimeZone()__        String formatString = in.readOptionalString()__        if (formatString != null) {_            format = Joda.forPattern(formatString)__        }_        if (in.getVersion().onOrAfter(Version.V_5_2_0)) {_            String relationString = in.readOptionalString()__            if (relationString != null) {_                relation = ShapeRelation.getRelationByName(relationString)__                if (relation != null && !isRelationAllowed(relation)) {_                    throw new IllegalArgumentException(_                        "[range] query does not support relation [" + relationString + "]")__                }_            }_        }_    };read,from,a,stream;public,range,query,builder,stream,input,in,throws,ioexception,super,in,field,name,in,read,string,from,in,read,generic,value,to,in,read,generic,value,include,lower,in,read,boolean,include,upper,in,read,boolean,time,zone,in,read,optional,time,zone,string,format,string,in,read,optional,string,if,format,string,null,format,joda,for,pattern,format,string,if,in,get,version,on,or,after,version,string,relation,string,in,read,optional,string,if,relation,string,null,relation,shape,relation,get,relation,by,name,relation,string,if,relation,null,is,relation,allowed,relation,throw,new,illegal,argument,exception,range,query,does,not,support,relation,relation,string
RangeQueryBuilder -> public RangeQueryBuilder(StreamInput in) throws IOException;1525334055;Read from a stream.;public RangeQueryBuilder(StreamInput in) throws IOException {_        super(in)__        fieldName = in.readString()__        from = in.readGenericValue()__        to = in.readGenericValue()__        includeLower = in.readBoolean()__        includeUpper = in.readBoolean()__        timeZone = in.readOptionalTimeZone()__        String formatString = in.readOptionalString()__        if (formatString != null) {_            format = Joda.forPattern(formatString)__        }_        if (in.getVersion().onOrAfter(Version.V_5_2_0)) {_            String relationString = in.readOptionalString()__            if (relationString != null) {_                relation = ShapeRelation.getRelationByName(relationString)__                if (relation != null && !isRelationAllowed(relation)) {_                    throw new IllegalArgumentException(_                        "[range] query does not support relation [" + relationString + "]")__                }_            }_        }_    };read,from,a,stream;public,range,query,builder,stream,input,in,throws,ioexception,super,in,field,name,in,read,string,from,in,read,generic,value,to,in,read,generic,value,include,lower,in,read,boolean,include,upper,in,read,boolean,time,zone,in,read,optional,time,zone,string,format,string,in,read,optional,string,if,format,string,null,format,joda,for,pattern,format,string,if,in,get,version,on,or,after,version,string,relation,string,in,read,optional,string,if,relation,string,null,relation,shape,relation,get,relation,by,name,relation,string,if,relation,null,is,relation,allowed,relation,throw,new,illegal,argument,exception,range,query,does,not,support,relation,relation,string
RangeQueryBuilder -> public RangeQueryBuilder(StreamInput in) throws IOException;1535139672;Read from a stream.;public RangeQueryBuilder(StreamInput in) throws IOException {_        super(in)__        fieldName = in.readString()__        from = in.readGenericValue()__        to = in.readGenericValue()__        includeLower = in.readBoolean()__        includeUpper = in.readBoolean()__        timeZone = in.readOptionalTimeZone()__        String formatString = in.readOptionalString()__        if (formatString != null) {_            format = Joda.forPattern(formatString)__        }_        String relationString = in.readOptionalString()__        if (relationString != null) {_            relation = ShapeRelation.getRelationByName(relationString)__            if (relation != null && !isRelationAllowed(relation)) {_                throw new IllegalArgumentException(_                    "[range] query does not support relation [" + relationString + "]")__            }_        }_    };read,from,a,stream;public,range,query,builder,stream,input,in,throws,ioexception,super,in,field,name,in,read,string,from,in,read,generic,value,to,in,read,generic,value,include,lower,in,read,boolean,include,upper,in,read,boolean,time,zone,in,read,optional,time,zone,string,format,string,in,read,optional,string,if,format,string,null,format,joda,for,pattern,format,string,string,relation,string,in,read,optional,string,if,relation,string,null,relation,shape,relation,get,relation,by,name,relation,string,if,relation,null,is,relation,allowed,relation,throw,new,illegal,argument,exception,range,query,does,not,support,relation,relation,string
RangeQueryBuilder -> public RangeQueryBuilder(StreamInput in) throws IOException;1538067637;Read from a stream.;public RangeQueryBuilder(StreamInput in) throws IOException {_        super(in)__        fieldName = in.readString()__        from = in.readGenericValue()__        to = in.readGenericValue()__        includeLower = in.readBoolean()__        includeUpper = in.readBoolean()__        timeZone = in.readOptionalTimeZone()__        String formatString = in.readOptionalString()__        if (formatString != null) {_            format = Joda.forPattern(formatString)__        }_        String relationString = in.readOptionalString()__        if (relationString != null) {_            relation = ShapeRelation.getRelationByName(relationString)__            if (relation != null && !isRelationAllowed(relation)) {_                throw new IllegalArgumentException(_                    "[range] query does not support relation [" + relationString + "]")__            }_        }_    };read,from,a,stream;public,range,query,builder,stream,input,in,throws,ioexception,super,in,field,name,in,read,string,from,in,read,generic,value,to,in,read,generic,value,include,lower,in,read,boolean,include,upper,in,read,boolean,time,zone,in,read,optional,time,zone,string,format,string,in,read,optional,string,if,format,string,null,format,joda,for,pattern,format,string,string,relation,string,in,read,optional,string,if,relation,string,null,relation,shape,relation,get,relation,by,name,relation,string,if,relation,null,is,relation,allowed,relation,throw,new,illegal,argument,exception,range,query,does,not,support,relation,relation,string
RangeQueryBuilder -> public RangeQueryBuilder(StreamInput in) throws IOException;1541619687;Read from a stream.;public RangeQueryBuilder(StreamInput in) throws IOException {_        super(in)__        fieldName = in.readString()__        from = in.readGenericValue()__        to = in.readGenericValue()__        includeLower = in.readBoolean()__        includeUpper = in.readBoolean()__        timeZone = in.readOptionalTimeZone()__        String formatString = in.readOptionalString()__        if (formatString != null) {_            format = Joda.forPattern(formatString)__        }_        String relationString = in.readOptionalString()__        if (relationString != null) {_            relation = ShapeRelation.getRelationByName(relationString)__            if (relation != null && !isRelationAllowed(relation)) {_                throw new IllegalArgumentException(_                    "[range] query does not support relation [" + relationString + "]")__            }_        }_    };read,from,a,stream;public,range,query,builder,stream,input,in,throws,ioexception,super,in,field,name,in,read,string,from,in,read,generic,value,to,in,read,generic,value,include,lower,in,read,boolean,include,upper,in,read,boolean,time,zone,in,read,optional,time,zone,string,format,string,in,read,optional,string,if,format,string,null,format,joda,for,pattern,format,string,string,relation,string,in,read,optional,string,if,relation,string,null,relation,shape,relation,get,relation,by,name,relation,string,if,relation,null,is,relation,allowed,relation,throw,new,illegal,argument,exception,range,query,does,not,support,relation,relation,string
RangeQueryBuilder -> public RangeQueryBuilder(StreamInput in) throws IOException;1544232221;Read from a stream.;public RangeQueryBuilder(StreamInput in) throws IOException {_        super(in)__        fieldName = in.readString()__        from = in.readGenericValue()__        to = in.readGenericValue()__        includeLower = in.readBoolean()__        includeUpper = in.readBoolean()__        timeZone = in.readOptionalTimeZone()__        String formatString = in.readOptionalString()__        if (formatString != null) {_            format = Joda.forPattern(formatString)__        }_        String relationString = in.readOptionalString()__        if (relationString != null) {_            relation = ShapeRelation.getRelationByName(relationString)__            if (relation != null && !isRelationAllowed(relation)) {_                throw new IllegalArgumentException(_                    "[range] query does not support relation [" + relationString + "]")__            }_        }_    };read,from,a,stream;public,range,query,builder,stream,input,in,throws,ioexception,super,in,field,name,in,read,string,from,in,read,generic,value,to,in,read,generic,value,include,lower,in,read,boolean,include,upper,in,read,boolean,time,zone,in,read,optional,time,zone,string,format,string,in,read,optional,string,if,format,string,null,format,joda,for,pattern,format,string,string,relation,string,in,read,optional,string,if,relation,string,null,relation,shape,relation,get,relation,by,name,relation,string,if,relation,null,is,relation,allowed,relation,throw,new,illegal,argument,exception,range,query,does,not,support,relation,relation,string
RangeQueryBuilder -> public RangeQueryBuilder(StreamInput in) throws IOException;1544458001;Read from a stream.;public RangeQueryBuilder(StreamInput in) throws IOException {_        super(in)__        fieldName = in.readString()__        from = in.readGenericValue()__        to = in.readGenericValue()__        includeLower = in.readBoolean()__        includeUpper = in.readBoolean()__        timeZone = in.readOptionalTimeZone()__        String formatString = in.readOptionalString()__        if (formatString != null) {_            format = Joda.forPattern(formatString)__        }_        String relationString = in.readOptionalString()__        if (relationString != null) {_            relation = ShapeRelation.getRelationByName(relationString)__            if (relation != null && !isRelationAllowed(relation)) {_                throw new IllegalArgumentException(_                    "[range] query does not support relation [" + relationString + "]")__            }_        }_    };read,from,a,stream;public,range,query,builder,stream,input,in,throws,ioexception,super,in,field,name,in,read,string,from,in,read,generic,value,to,in,read,generic,value,include,lower,in,read,boolean,include,upper,in,read,boolean,time,zone,in,read,optional,time,zone,string,format,string,in,read,optional,string,if,format,string,null,format,joda,for,pattern,format,string,string,relation,string,in,read,optional,string,if,relation,string,null,relation,shape,relation,get,relation,by,name,relation,string,if,relation,null,is,relation,allowed,relation,throw,new,illegal,argument,exception,range,query,does,not,support,relation,relation,string
RangeQueryBuilder -> public RangeQueryBuilder(StreamInput in) throws IOException;1544600864;Read from a stream.;public RangeQueryBuilder(StreamInput in) throws IOException {_        super(in)__        fieldName = in.readString()__        from = in.readGenericValue()__        to = in.readGenericValue()__        includeLower = in.readBoolean()__        includeUpper = in.readBoolean()__        timeZone = in.readOptionalTimeZone()__        String formatString = in.readOptionalString()__        if (formatString != null) {_            format = DateFormatter.forPattern(formatString)__        }_        String relationString = in.readOptionalString()__        if (relationString != null) {_            relation = ShapeRelation.getRelationByName(relationString)__            if (relation != null && !isRelationAllowed(relation)) {_                throw new IllegalArgumentException(_                    "[range] query does not support relation [" + relationString + "]")__            }_        }_    };read,from,a,stream;public,range,query,builder,stream,input,in,throws,ioexception,super,in,field,name,in,read,string,from,in,read,generic,value,to,in,read,generic,value,include,lower,in,read,boolean,include,upper,in,read,boolean,time,zone,in,read,optional,time,zone,string,format,string,in,read,optional,string,if,format,string,null,format,date,formatter,for,pattern,format,string,string,relation,string,in,read,optional,string,if,relation,string,null,relation,shape,relation,get,relation,by,name,relation,string,if,relation,null,is,relation,allowed,relation,throw,new,illegal,argument,exception,range,query,does,not,support,relation,relation,string
RangeQueryBuilder -> public RangeQueryBuilder(StreamInput in) throws IOException;1548236405;Read from a stream.;public RangeQueryBuilder(StreamInput in) throws IOException {_        super(in)__        fieldName = in.readString()__        from = in.readGenericValue()__        to = in.readGenericValue()__        includeLower = in.readBoolean()__        includeUpper = in.readBoolean()__        timeZone = in.readOptionalZoneId()__        format = in.readOptionalString()__        String relationString = in.readOptionalString()__        if (relationString != null) {_            relation = ShapeRelation.getRelationByName(relationString)__            if (relation != null && !isRelationAllowed(relation)) {_                throw new IllegalArgumentException(_                    "[range] query does not support relation [" + relationString + "]")__            }_        }_    };read,from,a,stream;public,range,query,builder,stream,input,in,throws,ioexception,super,in,field,name,in,read,string,from,in,read,generic,value,to,in,read,generic,value,include,lower,in,read,boolean,include,upper,in,read,boolean,time,zone,in,read,optional,zone,id,format,in,read,optional,string,string,relation,string,in,read,optional,string,if,relation,string,null,relation,shape,relation,get,relation,by,name,relation,string,if,relation,null,is,relation,allowed,relation,throw,new,illegal,argument,exception,range,query,does,not,support,relation,relation,string
RangeQueryBuilder -> public RangeQueryBuilder includeLower(boolean includeLower);1524684173;Should the lower bound be included or not. Defaults to <tt>true</tt>.;public RangeQueryBuilder includeLower(boolean includeLower) {_        this.includeLower = includeLower__        return this__    };should,the,lower,bound,be,included,or,not,defaults,to,tt,true,tt;public,range,query,builder,include,lower,boolean,include,lower,this,include,lower,include,lower,return,this
RangeQueryBuilder -> public RangeQueryBuilder includeLower(boolean includeLower);1525334055;Should the lower bound be included or not. Defaults to {@code true}.;public RangeQueryBuilder includeLower(boolean includeLower) {_        this.includeLower = includeLower__        return this__    };should,the,lower,bound,be,included,or,not,defaults,to,code,true;public,range,query,builder,include,lower,boolean,include,lower,this,include,lower,include,lower,return,this
RangeQueryBuilder -> public RangeQueryBuilder includeLower(boolean includeLower);1535139672;Should the lower bound be included or not. Defaults to {@code true}.;public RangeQueryBuilder includeLower(boolean includeLower) {_        this.includeLower = includeLower__        return this__    };should,the,lower,bound,be,included,or,not,defaults,to,code,true;public,range,query,builder,include,lower,boolean,include,lower,this,include,lower,include,lower,return,this
RangeQueryBuilder -> public RangeQueryBuilder includeLower(boolean includeLower);1538067637;Should the lower bound be included or not. Defaults to {@code true}.;public RangeQueryBuilder includeLower(boolean includeLower) {_        this.includeLower = includeLower__        return this__    };should,the,lower,bound,be,included,or,not,defaults,to,code,true;public,range,query,builder,include,lower,boolean,include,lower,this,include,lower,include,lower,return,this
RangeQueryBuilder -> public RangeQueryBuilder includeLower(boolean includeLower);1541619687;Should the lower bound be included or not. Defaults to {@code true}.;public RangeQueryBuilder includeLower(boolean includeLower) {_        this.includeLower = includeLower__        return this__    };should,the,lower,bound,be,included,or,not,defaults,to,code,true;public,range,query,builder,include,lower,boolean,include,lower,this,include,lower,include,lower,return,this
RangeQueryBuilder -> public RangeQueryBuilder includeLower(boolean includeLower);1544232221;Should the lower bound be included or not. Defaults to {@code true}.;public RangeQueryBuilder includeLower(boolean includeLower) {_        this.includeLower = includeLower__        return this__    };should,the,lower,bound,be,included,or,not,defaults,to,code,true;public,range,query,builder,include,lower,boolean,include,lower,this,include,lower,include,lower,return,this
RangeQueryBuilder -> public RangeQueryBuilder includeLower(boolean includeLower);1544458001;Should the lower bound be included or not. Defaults to {@code true}.;public RangeQueryBuilder includeLower(boolean includeLower) {_        this.includeLower = includeLower__        return this__    };should,the,lower,bound,be,included,or,not,defaults,to,code,true;public,range,query,builder,include,lower,boolean,include,lower,this,include,lower,include,lower,return,this
RangeQueryBuilder -> public RangeQueryBuilder includeLower(boolean includeLower);1544600864;Should the lower bound be included or not. Defaults to {@code true}.;public RangeQueryBuilder includeLower(boolean includeLower) {_        this.includeLower = includeLower__        return this__    };should,the,lower,bound,be,included,or,not,defaults,to,code,true;public,range,query,builder,include,lower,boolean,include,lower,this,include,lower,include,lower,return,this
RangeQueryBuilder -> public RangeQueryBuilder includeLower(boolean includeLower);1548236405;Should the lower bound be included or not. Defaults to {@code true}.;public RangeQueryBuilder includeLower(boolean includeLower) {_        this.includeLower = includeLower__        return this__    };should,the,lower,bound,be,included,or,not,defaults,to,code,true;public,range,query,builder,include,lower,boolean,include,lower,this,include,lower,include,lower,return,this
RangeQueryBuilder -> @Override     public String fieldName();1538067637;Get the field name for this query.;@Override_    public String fieldName() {_        return this.fieldName__    };get,the,field,name,for,this,query;override,public,string,field,name,return,this,field,name
RangeQueryBuilder -> @Override     public String fieldName();1541619687;Get the field name for this query.;@Override_    public String fieldName() {_        return this.fieldName__    };get,the,field,name,for,this,query;override,public,string,field,name,return,this,field,name
RangeQueryBuilder -> @Override     public String fieldName();1544232221;Get the field name for this query.;@Override_    public String fieldName() {_        return this.fieldName__    };get,the,field,name,for,this,query;override,public,string,field,name,return,this,field,name
RangeQueryBuilder -> @Override     public String fieldName();1544458001;Get the field name for this query.;@Override_    public String fieldName() {_        return this.fieldName__    };get,the,field,name,for,this,query;override,public,string,field,name,return,this,field,name
RangeQueryBuilder -> @Override     public String fieldName();1544600864;Get the field name for this query.;@Override_    public String fieldName() {_        return this.fieldName__    };get,the,field,name,for,this,query;override,public,string,field,name,return,this,field,name
RangeQueryBuilder -> @Override     public String fieldName();1548236405;Get the field name for this query.;@Override_    public String fieldName() {_        return this.fieldName__    };get,the,field,name,for,this,query;override,public,string,field,name,return,this,field,name
RangeQueryBuilder -> public RangeQueryBuilder to(Object to);1524684173;The to part of the range query. Null indicates unbounded.;public RangeQueryBuilder to(Object to) {_        return to(to, this.includeUpper)__    };the,to,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,to,object,to,return,to,to,this,include,upper
RangeQueryBuilder -> public RangeQueryBuilder to(Object to);1525334055;The to part of the range query. Null indicates unbounded.;public RangeQueryBuilder to(Object to) {_        return to(to, this.includeUpper)__    };the,to,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,to,object,to,return,to,to,this,include,upper
RangeQueryBuilder -> public RangeQueryBuilder to(Object to);1535139672;The to part of the range query. Null indicates unbounded.;public RangeQueryBuilder to(Object to) {_        return to(to, this.includeUpper)__    };the,to,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,to,object,to,return,to,to,this,include,upper
RangeQueryBuilder -> public RangeQueryBuilder to(Object to);1538067637;The to part of the range query. Null indicates unbounded.;public RangeQueryBuilder to(Object to) {_        return to(to, this.includeUpper)__    };the,to,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,to,object,to,return,to,to,this,include,upper
RangeQueryBuilder -> public RangeQueryBuilder to(Object to);1541619687;The to part of the range query. Null indicates unbounded.;public RangeQueryBuilder to(Object to) {_        return to(to, this.includeUpper)__    };the,to,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,to,object,to,return,to,to,this,include,upper
RangeQueryBuilder -> public RangeQueryBuilder to(Object to);1544232221;The to part of the range query. Null indicates unbounded.;public RangeQueryBuilder to(Object to) {_        return to(to, this.includeUpper)__    };the,to,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,to,object,to,return,to,to,this,include,upper
RangeQueryBuilder -> public RangeQueryBuilder to(Object to);1544458001;The to part of the range query. Null indicates unbounded.;public RangeQueryBuilder to(Object to) {_        return to(to, this.includeUpper)__    };the,to,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,to,object,to,return,to,to,this,include,upper
RangeQueryBuilder -> public RangeQueryBuilder to(Object to);1544600864;The to part of the range query. Null indicates unbounded.;public RangeQueryBuilder to(Object to) {_        return to(to, this.includeUpper)__    };the,to,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,to,object,to,return,to,to,this,include,upper
RangeQueryBuilder -> public RangeQueryBuilder to(Object to);1548236405;The to part of the range query. Null indicates unbounded.;public RangeQueryBuilder to(Object to) {_        return to(to, this.includeUpper)__    };the,to,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,to,object,to,return,to,to,this,include,upper
RangeQueryBuilder -> public boolean includeLower();1524684173;Gets the includeLower flag for this query.;public boolean includeLower() {_        return this.includeLower__    };gets,the,include,lower,flag,for,this,query;public,boolean,include,lower,return,this,include,lower
RangeQueryBuilder -> public boolean includeLower();1525334055;Gets the includeLower flag for this query.;public boolean includeLower() {_        return this.includeLower__    };gets,the,include,lower,flag,for,this,query;public,boolean,include,lower,return,this,include,lower
RangeQueryBuilder -> public boolean includeLower();1535139672;Gets the includeLower flag for this query.;public boolean includeLower() {_        return this.includeLower__    };gets,the,include,lower,flag,for,this,query;public,boolean,include,lower,return,this,include,lower
RangeQueryBuilder -> public boolean includeLower();1538067637;Gets the includeLower flag for this query.;public boolean includeLower() {_        return this.includeLower__    };gets,the,include,lower,flag,for,this,query;public,boolean,include,lower,return,this,include,lower
RangeQueryBuilder -> public boolean includeLower();1541619687;Gets the includeLower flag for this query.;public boolean includeLower() {_        return this.includeLower__    };gets,the,include,lower,flag,for,this,query;public,boolean,include,lower,return,this,include,lower
RangeQueryBuilder -> public boolean includeLower();1544232221;Gets the includeLower flag for this query.;public boolean includeLower() {_        return this.includeLower__    };gets,the,include,lower,flag,for,this,query;public,boolean,include,lower,return,this,include,lower
RangeQueryBuilder -> public boolean includeLower();1544458001;Gets the includeLower flag for this query.;public boolean includeLower() {_        return this.includeLower__    };gets,the,include,lower,flag,for,this,query;public,boolean,include,lower,return,this,include,lower
RangeQueryBuilder -> public boolean includeLower();1544600864;Gets the includeLower flag for this query.;public boolean includeLower() {_        return this.includeLower__    };gets,the,include,lower,flag,for,this,query;public,boolean,include,lower,return,this,include,lower
RangeQueryBuilder -> public boolean includeLower();1548236405;Gets the includeLower flag for this query.;public boolean includeLower() {_        return this.includeLower__    };gets,the,include,lower,flag,for,this,query;public,boolean,include,lower,return,this,include,lower
RangeQueryBuilder -> public RangeQueryBuilder lte(Object to);1524684173;The to part of the range query. Null indicates unbounded.;public RangeQueryBuilder lte(Object to) {_        return to(to, true)__    };the,to,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,lte,object,to,return,to,to,true
RangeQueryBuilder -> public RangeQueryBuilder lte(Object to);1525334055;The to part of the range query. Null indicates unbounded.;public RangeQueryBuilder lte(Object to) {_        return to(to, true)__    };the,to,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,lte,object,to,return,to,to,true
RangeQueryBuilder -> public RangeQueryBuilder lte(Object to);1535139672;The to part of the range query. Null indicates unbounded.;public RangeQueryBuilder lte(Object to) {_        return to(to, true)__    };the,to,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,lte,object,to,return,to,to,true
RangeQueryBuilder -> public RangeQueryBuilder lte(Object to);1538067637;The to part of the range query. Null indicates unbounded.;public RangeQueryBuilder lte(Object to) {_        return to(to, true)__    };the,to,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,lte,object,to,return,to,to,true
RangeQueryBuilder -> public RangeQueryBuilder lte(Object to);1541619687;The to part of the range query. Null indicates unbounded.;public RangeQueryBuilder lte(Object to) {_        return to(to, true)__    };the,to,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,lte,object,to,return,to,to,true
RangeQueryBuilder -> public RangeQueryBuilder lte(Object to);1544232221;The to part of the range query. Null indicates unbounded.;public RangeQueryBuilder lte(Object to) {_        return to(to, true)__    };the,to,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,lte,object,to,return,to,to,true
RangeQueryBuilder -> public RangeQueryBuilder lte(Object to);1544458001;The to part of the range query. Null indicates unbounded.;public RangeQueryBuilder lte(Object to) {_        return to(to, true)__    };the,to,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,lte,object,to,return,to,to,true
RangeQueryBuilder -> public RangeQueryBuilder lte(Object to);1544600864;The to part of the range query. Null indicates unbounded.;public RangeQueryBuilder lte(Object to) {_        return to(to, true)__    };the,to,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,lte,object,to,return,to,to,true
RangeQueryBuilder -> public RangeQueryBuilder lte(Object to);1548236405;The to part of the range query. Null indicates unbounded.;public RangeQueryBuilder lte(Object to) {_        return to(to, true)__    };the,to,part,of,the,range,query,null,indicates,unbounded;public,range,query,builder,lte,object,to,return,to,to,true
