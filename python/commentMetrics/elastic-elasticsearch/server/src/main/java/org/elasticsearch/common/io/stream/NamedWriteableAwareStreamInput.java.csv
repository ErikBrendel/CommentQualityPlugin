commented;modifiers;parameterAmount;loc;comment;code
false;public;1;5;;@Override public <C extends NamedWriteable> C readNamedWriteable(Class<C> categoryClass) throws IOException {     String name = readString().     return readNamedWriteable(categoryClass, name). }
false;public;2;13;;@Override public <C extends NamedWriteable> C readNamedWriteable(@SuppressWarnings("unused") Class<C> categoryClass, @SuppressWarnings("unused") String name) throws IOException {     Writeable.Reader<? extends C> reader = namedWriteableRegistry.getReader(categoryClass, name).     C c = reader.read(this).     if (c == null) {         throw new IOException("Writeable.Reader [" + reader + "] returned null which is not allowed and probably means it screwed up the stream.").     }     assert name.equals(c.getWriteableName()) : c + " claims to have a different name [" + c.getWriteableName() + "] than it was read from [" + name + "].".     return c. }
