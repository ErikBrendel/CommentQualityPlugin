commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String getName() {     return "rollover_index_action". }
false;public;2;15;;@Override public RestChannelConsumer prepareRequest(final RestRequest request, final NodeClient client) throws IOException {     final boolean includeTypeName = request.paramAsBoolean(INCLUDE_TYPE_NAME_PARAMETER, DEFAULT_INCLUDE_TYPE_NAME_POLICY).     if (request.hasParam(INCLUDE_TYPE_NAME_PARAMETER)) {         deprecationLogger.deprecatedAndMaybeLog("index_rollover_with_types", TYPES_DEPRECATION_MESSAGE).     }     RolloverRequest rolloverIndexRequest = new RolloverRequest(request.param("index"), request.param("new_index")).     request.applyContentParser(parser -> rolloverIndexRequest.fromXContent(includeTypeName, parser)).     rolloverIndexRequest.dryRun(request.paramAsBoolean("dry_run", false)).     rolloverIndexRequest.timeout(request.paramAsTime("timeout", rolloverIndexRequest.timeout())).     rolloverIndexRequest.masterNodeTimeout(request.paramAsTime("master_timeout", rolloverIndexRequest.masterNodeTimeout())).     rolloverIndexRequest.getCreateIndexRequest().waitForActiveShards(ActiveShardCount.parseString(request.param("wait_for_active_shards"))).     return channel -> client.admin().indices().rolloverIndex(rolloverIndexRequest, new RestToXContentListener<>(channel)). }
