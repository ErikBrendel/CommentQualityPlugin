commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String getType() {     return SignificantLongTerms.NAME. }
false;public,static;2;3;;public static ParsedSignificantLongTerms fromXContent(XContentParser parser, String name) throws IOException {     return parseSignificantTermsXContent(() -> PARSER.parse(parser, null), name). }
false;public;0;4;;@Override public Object getKey() {     return key. }
false;public;0;8;;@Override public String getKeyAsString() {     String keyAsString = super.getKeyAsString().     if (keyAsString != null) {         return keyAsString.     }     return Long.toString(key). }
false;public;0;3;;public Number getKeyAsNumber() {     return key. }
false;protected;1;8;;@Override protected XContentBuilder keyToXContent(XContentBuilder builder) throws IOException {     builder.field(CommonFields.KEY.getPreferredName(), key).     if (super.getKeyAsString() != null) {         builder.field(CommonFields.KEY_AS_STRING.getPreferredName(), getKeyAsString()).     }     return builder. }
false;static;1;3;;static ParsedBucket fromXContent(XContentParser parser) throws IOException {     return parseSignificantTermsBucketXContent(parser, new ParsedBucket(), (p, bucket) -> bucket.key = p.longValue()). }
