commented;modifiers;parameterAmount;loc;comment;code
true;public,static;5;6;/**  * Wraps a listener with a listener that can timeout. After the timeout period the  * {@link ActionListener#onFailure(Exception)} will be called with a  * {@link ElasticsearchTimeoutException} if the listener has not already been completed.  *  * @param threadPool used to schedule the timeout  * @param listener to that can timeout  * @param timeout period before listener failed  * @param executor to use for scheduling timeout  * @param listenerName name of the listener for timeout exception  * @return the wrapped listener that will timeout  */ ;/**  * Wraps a listener with a listener that can timeout. After the timeout period the  * {@link ActionListener#onFailure(Exception)} will be called with a  * {@link ElasticsearchTimeoutException} if the listener has not already been completed.  *  * @param threadPool used to schedule the timeout  * @param listener to that can timeout  * @param timeout period before listener failed  * @param executor to use for scheduling timeout  * @param listenerName name of the listener for timeout exception  * @return the wrapped listener that will timeout  */ public static <Response> ActionListener<Response> wrapWithTimeout(ThreadPool threadPool, ActionListener<Response> listener, TimeValue timeout, String executor, String listenerName) {     TimeoutableListener<Response> wrappedListener = new TimeoutableListener<>(listener, timeout, listenerName).     wrappedListener.cancellable = threadPool.schedule(wrappedListener, timeout, executor).     return wrappedListener. }
false;public;1;7;;@Override public void onResponse(Response response) {     if (isDone.compareAndSet(false, true)) {         cancellable.cancel().         delegate.onResponse(response).     } }
false;public;1;7;;@Override public void onFailure(Exception e) {     if (isDone.compareAndSet(false, true)) {         cancellable.cancel().         delegate.onFailure(e).     } }
false;public;0;7;;@Override public void run() {     if (isDone.compareAndSet(false, true)) {         String timeoutMessage = "[" + listenerName + "]" + " timed out after [" + timeout + "]".         delegate.onFailure(new ElasticsearchTimeoutException(timeoutMessage)).     } }
