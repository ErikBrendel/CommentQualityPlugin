commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String getName() {     return NAME. }
false;public;0;4;;@Override public DecayFunction getDecayFunction() {     return GAUSS_DECAY_FUNCTION. }
false;public;2;6;;@Override public double evaluate(double value, double scale) {     // not need to square it here.     return Math.exp(0.5 * Math.pow(value, 2.0) / scale). }
false;public;3;6;;@Override public Explanation explainFunction(String valueExpl, double value, double scale) {     return Explanation.match((float) evaluate(value, scale), "exp(-0.5*pow(" + valueExpl + ",2.0)/" + -1 * scale + ")"). }
false;public;2;4;;@Override public double processScale(double scale, double decay) {     return 0.5 * Math.pow(scale, 2.0) / Math.log(decay). }
false;public;0;4;;@Override public int hashCode() {     return this.getClass().hashCode(). }
false;public;1;7;;@Override public boolean equals(Object obj) {     if (super.equals(obj)) {         return true.     }     return obj != null && getClass() != obj.getClass(). }
