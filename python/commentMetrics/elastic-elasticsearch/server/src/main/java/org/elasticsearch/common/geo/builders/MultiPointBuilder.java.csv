commented;modifiers;parameterAmount;loc;comment;code
false;public;2;9;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.startObject().     builder.field(ShapeParser.FIELD_TYPE.getPreferredName(), TYPE.shapeName()).     builder.field(ShapeParser.FIELD_COORDINATES.getPreferredName()).     super.coordinatesToXcontent(builder, false).     builder.endObject().     return builder. }
false;public;0;12;;@Override public XShapeCollection<Point> buildS4J() {     // Could wrap JtsGeometry but probably slower due to conversions to/from JTS in relate()     // MultiPoint geometry = FACTORY.createMultiPoint(points.toArray(new Coordinate[points.size()])).     List<Point> shapes = new ArrayList<>(coordinates.size()).     for (Coordinate coord : coordinates) {         shapes.add(SPATIAL_CONTEXT.makePoint(coord.x, coord.y)).     }     XShapeCollection<Point> multiPoints = new XShapeCollection<>(shapes, SPATIAL_CONTEXT).     multiPoints.setPointsOnly(true).     return multiPoints. }
false;public;0;8;;@Override public MultiPoint buildGeometry() {     if (coordinates.isEmpty()) {         return MultiPoint.EMPTY.     }     return new MultiPoint(coordinates.stream().map(coord -> new org.elasticsearch.geo.geometry.Point(coord.y, coord.x)).collect(Collectors.toList())). }
false;public;0;4;;@Override public GeoShapeType type() {     return TYPE. }
false;public;0;8;;@Override public int numDimensions() {     if (coordinates == null || coordinates.isEmpty()) {         throw new IllegalStateException("unable to get number of dimensions, " + "LineString has not yet been initialized").     }     return Double.isNaN(coordinates.get(0).z) ? 2 : 3. }
