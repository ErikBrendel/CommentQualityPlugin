# id;timestamp;commentText;codeText;commentWords;codeWords
AnalysisModule -> AnalysisProvider -> default T get(Environment environment, String name) throws IOException;1524684173;Creates a new global scope analysis provider without index specific settings not settings for the provider itself._This can be used to get a default instance of an analysis factory without binding to an index.__@param environment the nodes environment to load resources from persistent storage_@param name        the name of the analysis component_@return a new provider instance_@throws IOException              if an {@link IOException} occurs_@throws IllegalArgumentException if the provider requires analysis settings ie. if {@link #requiresAnalysisSettings()} returns_<code>true</code>;default T get(Environment environment, String name) throws IOException {_            if (requiresAnalysisSettings()) {_                throw new IllegalArgumentException("Analysis settings required - can't instantiate analysis factory")__            }_            return get(NA_INDEX_SETTINGS, environment, name, NA_INDEX_SETTINGS.getSettings())__        };creates,a,new,global,scope,analysis,provider,without,index,specific,settings,not,settings,for,the,provider,itself,this,can,be,used,to,get,a,default,instance,of,an,analysis,factory,without,binding,to,an,index,param,environment,the,nodes,environment,to,load,resources,from,persistent,storage,param,name,the,name,of,the,analysis,component,return,a,new,provider,instance,throws,ioexception,if,an,link,ioexception,occurs,throws,illegal,argument,exception,if,the,provider,requires,analysis,settings,ie,if,link,requires,analysis,settings,returns,code,true,code;default,t,get,environment,environment,string,name,throws,ioexception,if,requires,analysis,settings,throw,new,illegal,argument,exception,analysis,settings,required,can,t,instantiate,analysis,factory,return,get,environment,name,get,settings
AnalysisModule -> AnalysisProvider -> default T get(Environment environment, String name) throws IOException;1526289033;Creates a new global scope analysis provider without index specific settings not settings for the provider itself._This can be used to get a default instance of an analysis factory without binding to an index.__@param environment the nodes environment to load resources from persistent storage_@param name        the name of the analysis component_@return a new provider instance_@throws IOException              if an {@link IOException} occurs_@throws IllegalArgumentException if the provider requires analysis settings ie. if {@link #requiresAnalysisSettings()} returns_<code>true</code>;default T get(Environment environment, String name) throws IOException {_            if (requiresAnalysisSettings()) {_                throw new IllegalArgumentException("Analysis settings required - can't instantiate analysis factory")__            }_            return get(NA_INDEX_SETTINGS, environment, name, NA_INDEX_SETTINGS.getSettings())__        };creates,a,new,global,scope,analysis,provider,without,index,specific,settings,not,settings,for,the,provider,itself,this,can,be,used,to,get,a,default,instance,of,an,analysis,factory,without,binding,to,an,index,param,environment,the,nodes,environment,to,load,resources,from,persistent,storage,param,name,the,name,of,the,analysis,component,return,a,new,provider,instance,throws,ioexception,if,an,link,ioexception,occurs,throws,illegal,argument,exception,if,the,provider,requires,analysis,settings,ie,if,link,requires,analysis,settings,returns,code,true,code;default,t,get,environment,environment,string,name,throws,ioexception,if,requires,analysis,settings,throw,new,illegal,argument,exception,analysis,settings,required,can,t,instantiate,analysis,factory,return,get,environment,name,get,settings
AnalysisModule -> AnalysisProvider -> default T get(Environment environment, String name) throws IOException;1527622193;Creates a new global scope analysis provider without index specific settings not settings for the provider itself._This can be used to get a default instance of an analysis factory without binding to an index.__@param environment the nodes environment to load resources from persistent storage_@param name        the name of the analysis component_@return a new provider instance_@throws IOException              if an {@link IOException} occurs_@throws IllegalArgumentException if the provider requires analysis settings ie. if {@link #requiresAnalysisSettings()} returns_<code>true</code>;default T get(Environment environment, String name) throws IOException {_            if (requiresAnalysisSettings()) {_                throw new IllegalArgumentException("Analysis settings required - can't instantiate analysis factory")__            }_            return get(NA_INDEX_SETTINGS, environment, name, NA_INDEX_SETTINGS.getSettings())__        };creates,a,new,global,scope,analysis,provider,without,index,specific,settings,not,settings,for,the,provider,itself,this,can,be,used,to,get,a,default,instance,of,an,analysis,factory,without,binding,to,an,index,param,environment,the,nodes,environment,to,load,resources,from,persistent,storage,param,name,the,name,of,the,analysis,component,return,a,new,provider,instance,throws,ioexception,if,an,link,ioexception,occurs,throws,illegal,argument,exception,if,the,provider,requires,analysis,settings,ie,if,link,requires,analysis,settings,returns,code,true,code;default,t,get,environment,environment,string,name,throws,ioexception,if,requires,analysis,settings,throw,new,illegal,argument,exception,analysis,settings,required,can,t,instantiate,analysis,factory,return,get,environment,name,get,settings
AnalysisModule -> AnalysisProvider -> default T get(Environment environment, String name) throws IOException;1528304883;Creates a new global scope analysis provider without index specific settings not settings for the provider itself._This can be used to get a default instance of an analysis factory without binding to an index.__@param environment the nodes environment to load resources from persistent storage_@param name        the name of the analysis component_@return a new provider instance_@throws IOException              if an {@link IOException} occurs_@throws IllegalArgumentException if the provider requires analysis settings ie. if {@link #requiresAnalysisSettings()} returns_<code>true</code>;default T get(Environment environment, String name) throws IOException {_            if (requiresAnalysisSettings()) {_                throw new IllegalArgumentException("Analysis settings required - can't instantiate analysis factory")__            }_            return get(NA_INDEX_SETTINGS, environment, name, NA_INDEX_SETTINGS.getSettings())__        };creates,a,new,global,scope,analysis,provider,without,index,specific,settings,not,settings,for,the,provider,itself,this,can,be,used,to,get,a,default,instance,of,an,analysis,factory,without,binding,to,an,index,param,environment,the,nodes,environment,to,load,resources,from,persistent,storage,param,name,the,name,of,the,analysis,component,return,a,new,provider,instance,throws,ioexception,if,an,link,ioexception,occurs,throws,illegal,argument,exception,if,the,provider,requires,analysis,settings,ie,if,link,requires,analysis,settings,returns,code,true,code;default,t,get,environment,environment,string,name,throws,ioexception,if,requires,analysis,settings,throw,new,illegal,argument,exception,analysis,settings,required,can,t,instantiate,analysis,factory,return,get,environment,name,get,settings
AnalysisModule -> AnalysisProvider -> default T get(Environment environment, String name) throws IOException;1528706846;Creates a new global scope analysis provider without index specific settings not settings for the provider itself._This can be used to get a default instance of an analysis factory without binding to an index.__@param environment the nodes environment to load resources from persistent storage_@param name        the name of the analysis component_@return a new provider instance_@throws IOException              if an {@link IOException} occurs_@throws IllegalArgumentException if the provider requires analysis settings ie. if {@link #requiresAnalysisSettings()} returns_<code>true</code>;default T get(Environment environment, String name) throws IOException {_            if (requiresAnalysisSettings()) {_                throw new IllegalArgumentException("Analysis settings required - can't instantiate analysis factory")__            }_            return get(NA_INDEX_SETTINGS, environment, name, NA_INDEX_SETTINGS.getSettings())__        };creates,a,new,global,scope,analysis,provider,without,index,specific,settings,not,settings,for,the,provider,itself,this,can,be,used,to,get,a,default,instance,of,an,analysis,factory,without,binding,to,an,index,param,environment,the,nodes,environment,to,load,resources,from,persistent,storage,param,name,the,name,of,the,analysis,component,return,a,new,provider,instance,throws,ioexception,if,an,link,ioexception,occurs,throws,illegal,argument,exception,if,the,provider,requires,analysis,settings,ie,if,link,requires,analysis,settings,returns,code,true,code;default,t,get,environment,environment,string,name,throws,ioexception,if,requires,analysis,settings,throw,new,illegal,argument,exception,analysis,settings,required,can,t,instantiate,analysis,factory,return,get,environment,name,get,settings
AnalysisModule -> AnalysisProvider -> default T get(Environment environment, String name) throws IOException;1529341607;Creates a new global scope analysis provider without index specific settings not settings for the provider itself._This can be used to get a default instance of an analysis factory without binding to an index.__@param environment the nodes environment to load resources from persistent storage_@param name        the name of the analysis component_@return a new provider instance_@throws IOException              if an {@link IOException} occurs_@throws IllegalArgumentException if the provider requires analysis settings ie. if {@link #requiresAnalysisSettings()} returns_<code>true</code>;default T get(Environment environment, String name) throws IOException {_            if (requiresAnalysisSettings()) {_                throw new IllegalArgumentException("Analysis settings required - can't instantiate analysis factory")__            }_            return get(NA_INDEX_SETTINGS, environment, name, NA_INDEX_SETTINGS.getSettings())__        };creates,a,new,global,scope,analysis,provider,without,index,specific,settings,not,settings,for,the,provider,itself,this,can,be,used,to,get,a,default,instance,of,an,analysis,factory,without,binding,to,an,index,param,environment,the,nodes,environment,to,load,resources,from,persistent,storage,param,name,the,name,of,the,analysis,component,return,a,new,provider,instance,throws,ioexception,if,an,link,ioexception,occurs,throws,illegal,argument,exception,if,the,provider,requires,analysis,settings,ie,if,link,requires,analysis,settings,returns,code,true,code;default,t,get,environment,environment,string,name,throws,ioexception,if,requires,analysis,settings,throw,new,illegal,argument,exception,analysis,settings,required,can,t,instantiate,analysis,factory,return,get,environment,name,get,settings
AnalysisModule -> AnalysisProvider -> default T get(Environment environment, String name) throws IOException;1531729807;Creates a new global scope analysis provider without index specific settings not settings for the provider itself._This can be used to get a default instance of an analysis factory without binding to an index.__@param environment the nodes environment to load resources from persistent storage_@param name        the name of the analysis component_@return a new provider instance_@throws IOException              if an {@link IOException} occurs_@throws IllegalArgumentException if the provider requires analysis settings ie. if {@link #requiresAnalysisSettings()} returns_<code>true</code>;default T get(Environment environment, String name) throws IOException {_            if (requiresAnalysisSettings()) {_                throw new IllegalArgumentException("Analysis settings required - can't instantiate analysis factory")__            }_            return get(NA_INDEX_SETTINGS, environment, name, NA_INDEX_SETTINGS.getSettings())__        };creates,a,new,global,scope,analysis,provider,without,index,specific,settings,not,settings,for,the,provider,itself,this,can,be,used,to,get,a,default,instance,of,an,analysis,factory,without,binding,to,an,index,param,environment,the,nodes,environment,to,load,resources,from,persistent,storage,param,name,the,name,of,the,analysis,component,return,a,new,provider,instance,throws,ioexception,if,an,link,ioexception,occurs,throws,illegal,argument,exception,if,the,provider,requires,analysis,settings,ie,if,link,requires,analysis,settings,returns,code,true,code;default,t,get,environment,environment,string,name,throws,ioexception,if,requires,analysis,settings,throw,new,illegal,argument,exception,analysis,settings,required,can,t,instantiate,analysis,factory,return,get,environment,name,get,settings
AnalysisModule -> AnalysisProvider -> default T get(Environment environment, String name) throws IOException;1536314350;Creates a new global scope analysis provider without index specific settings not settings for the provider itself._This can be used to get a default instance of an analysis factory without binding to an index.__@param environment the nodes environment to load resources from persistent storage_@param name        the name of the analysis component_@return a new provider instance_@throws IOException              if an {@link IOException} occurs_@throws IllegalArgumentException if the provider requires analysis settings ie. if {@link #requiresAnalysisSettings()} returns_<code>true</code>;default T get(Environment environment, String name) throws IOException {_            if (requiresAnalysisSettings()) {_                throw new IllegalArgumentException("Analysis settings required - can't instantiate analysis factory")__            }_            return get(NA_INDEX_SETTINGS, environment, name, NA_INDEX_SETTINGS.getSettings())__        };creates,a,new,global,scope,analysis,provider,without,index,specific,settings,not,settings,for,the,provider,itself,this,can,be,used,to,get,a,default,instance,of,an,analysis,factory,without,binding,to,an,index,param,environment,the,nodes,environment,to,load,resources,from,persistent,storage,param,name,the,name,of,the,analysis,component,return,a,new,provider,instance,throws,ioexception,if,an,link,ioexception,occurs,throws,illegal,argument,exception,if,the,provider,requires,analysis,settings,ie,if,link,requires,analysis,settings,returns,code,true,code;default,t,get,environment,environment,string,name,throws,ioexception,if,requires,analysis,settings,throw,new,illegal,argument,exception,analysis,settings,required,can,t,instantiate,analysis,factory,return,get,environment,name,get,settings
AnalysisModule -> AnalysisProvider -> default T get(Environment environment, String name) throws IOException;1540583181;Creates a new global scope analysis provider without index specific settings not settings for the provider itself._This can be used to get a default instance of an analysis factory without binding to an index.__@param environment the nodes environment to load resources from persistent storage_@param name        the name of the analysis component_@return a new provider instance_@throws IOException              if an {@link IOException} occurs_@throws IllegalArgumentException if the provider requires analysis settings ie. if {@link #requiresAnalysisSettings()} returns_<code>true</code>;default T get(Environment environment, String name) throws IOException {_            if (requiresAnalysisSettings()) {_                throw new IllegalArgumentException("Analysis settings required - can't instantiate analysis factory")__            }_            return get(NA_INDEX_SETTINGS, environment, name, NA_INDEX_SETTINGS.getSettings())__        };creates,a,new,global,scope,analysis,provider,without,index,specific,settings,not,settings,for,the,provider,itself,this,can,be,used,to,get,a,default,instance,of,an,analysis,factory,without,binding,to,an,index,param,environment,the,nodes,environment,to,load,resources,from,persistent,storage,param,name,the,name,of,the,analysis,component,return,a,new,provider,instance,throws,ioexception,if,an,link,ioexception,occurs,throws,illegal,argument,exception,if,the,provider,requires,analysis,settings,ie,if,link,requires,analysis,settings,returns,code,true,code;default,t,get,environment,environment,string,name,throws,ioexception,if,requires,analysis,settings,throw,new,illegal,argument,exception,analysis,settings,required,can,t,instantiate,analysis,factory,return,get,environment,name,get,settings
AnalysisModule -> AnalysisProvider -> default T get(Environment environment, String name) throws IOException;1541592065;Creates a new global scope analysis provider without index specific settings not settings for the provider itself._This can be used to get a default instance of an analysis factory without binding to an index.__@param environment the nodes environment to load resources from persistent storage_@param name        the name of the analysis component_@return a new provider instance_@throws IOException              if an {@link IOException} occurs_@throws IllegalArgumentException if the provider requires analysis settings ie. if {@link #requiresAnalysisSettings()} returns_<code>true</code>;default T get(Environment environment, String name) throws IOException {_            if (requiresAnalysisSettings()) {_                throw new IllegalArgumentException("Analysis settings required - can't instantiate analysis factory")__            }_            return get(NA_INDEX_SETTINGS, environment, name, NA_INDEX_SETTINGS.getSettings())__        };creates,a,new,global,scope,analysis,provider,without,index,specific,settings,not,settings,for,the,provider,itself,this,can,be,used,to,get,a,default,instance,of,an,analysis,factory,without,binding,to,an,index,param,environment,the,nodes,environment,to,load,resources,from,persistent,storage,param,name,the,name,of,the,analysis,component,return,a,new,provider,instance,throws,ioexception,if,an,link,ioexception,occurs,throws,illegal,argument,exception,if,the,provider,requires,analysis,settings,ie,if,link,requires,analysis,settings,returns,code,true,code;default,t,get,environment,environment,string,name,throws,ioexception,if,requires,analysis,settings,throw,new,illegal,argument,exception,analysis,settings,required,can,t,instantiate,analysis,factory,return,get,environment,name,get,settings
AnalysisModule -> AnalysisProvider -> default T get(Environment environment, String name) throws IOException;1542897779;Creates a new global scope analysis provider without index specific settings not settings for the provider itself._This can be used to get a default instance of an analysis factory without binding to an index.__@param environment the nodes environment to load resources from persistent storage_@param name        the name of the analysis component_@return a new provider instance_@throws IOException              if an {@link IOException} occurs_@throws IllegalArgumentException if the provider requires analysis settings ie. if {@link #requiresAnalysisSettings()} returns_<code>true</code>;default T get(Environment environment, String name) throws IOException {_            if (requiresAnalysisSettings()) {_                throw new IllegalArgumentException("Analysis settings required - can't instantiate analysis factory")__            }_            return get(NA_INDEX_SETTINGS, environment, name, NA_INDEX_SETTINGS.getSettings())__        };creates,a,new,global,scope,analysis,provider,without,index,specific,settings,not,settings,for,the,provider,itself,this,can,be,used,to,get,a,default,instance,of,an,analysis,factory,without,binding,to,an,index,param,environment,the,nodes,environment,to,load,resources,from,persistent,storage,param,name,the,name,of,the,analysis,component,return,a,new,provider,instance,throws,ioexception,if,an,link,ioexception,occurs,throws,illegal,argument,exception,if,the,provider,requires,analysis,settings,ie,if,link,requires,analysis,settings,returns,code,true,code;default,t,get,environment,environment,string,name,throws,ioexception,if,requires,analysis,settings,throw,new,illegal,argument,exception,analysis,settings,required,can,t,instantiate,analysis,factory,return,get,environment,name,get,settings
AnalysisModule -> AnalysisProvider -> T get(IndexSettings indexSettings, Environment environment, String name, Settings settings) throws IOException_;1524684173;Creates a new analysis provider.__@param indexSettings the index settings for the index this provider is created for_@param environment   the nodes environment to load resources from persistent storage_@param name          the name of the analysis component_@param settings      the component specific settings without context prefixes_@return a new provider instance_@throws IOException if an {@link IOException} occurs;T get(IndexSettings indexSettings, Environment environment, String name, Settings settings) throws IOException_;creates,a,new,analysis,provider,param,index,settings,the,index,settings,for,the,index,this,provider,is,created,for,param,environment,the,nodes,environment,to,load,resources,from,persistent,storage,param,name,the,name,of,the,analysis,component,param,settings,the,component,specific,settings,without,context,prefixes,return,a,new,provider,instance,throws,ioexception,if,an,link,ioexception,occurs;t,get,index,settings,index,settings,environment,environment,string,name,settings,settings,throws,ioexception
AnalysisModule -> AnalysisProvider -> T get(IndexSettings indexSettings, Environment environment, String name, Settings settings) throws IOException_;1526289033;Creates a new analysis provider.__@param indexSettings the index settings for the index this provider is created for_@param environment   the nodes environment to load resources from persistent storage_@param name          the name of the analysis component_@param settings      the component specific settings without context prefixes_@return a new provider instance_@throws IOException if an {@link IOException} occurs;T get(IndexSettings indexSettings, Environment environment, String name, Settings settings) throws IOException_;creates,a,new,analysis,provider,param,index,settings,the,index,settings,for,the,index,this,provider,is,created,for,param,environment,the,nodes,environment,to,load,resources,from,persistent,storage,param,name,the,name,of,the,analysis,component,param,settings,the,component,specific,settings,without,context,prefixes,return,a,new,provider,instance,throws,ioexception,if,an,link,ioexception,occurs;t,get,index,settings,index,settings,environment,environment,string,name,settings,settings,throws,ioexception
AnalysisModule -> AnalysisProvider -> T get(IndexSettings indexSettings, Environment environment, String name, Settings settings) throws IOException_;1527622193;Creates a new analysis provider.__@param indexSettings the index settings for the index this provider is created for_@param environment   the nodes environment to load resources from persistent storage_@param name          the name of the analysis component_@param settings      the component specific settings without context prefixes_@return a new provider instance_@throws IOException if an {@link IOException} occurs;T get(IndexSettings indexSettings, Environment environment, String name, Settings settings) throws IOException_;creates,a,new,analysis,provider,param,index,settings,the,index,settings,for,the,index,this,provider,is,created,for,param,environment,the,nodes,environment,to,load,resources,from,persistent,storage,param,name,the,name,of,the,analysis,component,param,settings,the,component,specific,settings,without,context,prefixes,return,a,new,provider,instance,throws,ioexception,if,an,link,ioexception,occurs;t,get,index,settings,index,settings,environment,environment,string,name,settings,settings,throws,ioexception
AnalysisModule -> AnalysisProvider -> T get(IndexSettings indexSettings, Environment environment, String name, Settings settings) throws IOException_;1528304883;Creates a new analysis provider.__@param indexSettings the index settings for the index this provider is created for_@param environment   the nodes environment to load resources from persistent storage_@param name          the name of the analysis component_@param settings      the component specific settings without context prefixes_@return a new provider instance_@throws IOException if an {@link IOException} occurs;T get(IndexSettings indexSettings, Environment environment, String name, Settings settings) throws IOException_;creates,a,new,analysis,provider,param,index,settings,the,index,settings,for,the,index,this,provider,is,created,for,param,environment,the,nodes,environment,to,load,resources,from,persistent,storage,param,name,the,name,of,the,analysis,component,param,settings,the,component,specific,settings,without,context,prefixes,return,a,new,provider,instance,throws,ioexception,if,an,link,ioexception,occurs;t,get,index,settings,index,settings,environment,environment,string,name,settings,settings,throws,ioexception
AnalysisModule -> AnalysisProvider -> T get(IndexSettings indexSettings, Environment environment, String name, Settings settings) throws IOException_;1528706846;Creates a new analysis provider.__@param indexSettings the index settings for the index this provider is created for_@param environment   the nodes environment to load resources from persistent storage_@param name          the name of the analysis component_@param settings      the component specific settings without context prefixes_@return a new provider instance_@throws IOException if an {@link IOException} occurs;T get(IndexSettings indexSettings, Environment environment, String name, Settings settings) throws IOException_;creates,a,new,analysis,provider,param,index,settings,the,index,settings,for,the,index,this,provider,is,created,for,param,environment,the,nodes,environment,to,load,resources,from,persistent,storage,param,name,the,name,of,the,analysis,component,param,settings,the,component,specific,settings,without,context,prefixes,return,a,new,provider,instance,throws,ioexception,if,an,link,ioexception,occurs;t,get,index,settings,index,settings,environment,environment,string,name,settings,settings,throws,ioexception
AnalysisModule -> AnalysisProvider -> T get(IndexSettings indexSettings, Environment environment, String name, Settings settings) throws IOException_;1529341607;Creates a new analysis provider.__@param indexSettings the index settings for the index this provider is created for_@param environment   the nodes environment to load resources from persistent storage_@param name          the name of the analysis component_@param settings      the component specific settings without context prefixes_@return a new provider instance_@throws IOException if an {@link IOException} occurs;T get(IndexSettings indexSettings, Environment environment, String name, Settings settings) throws IOException_;creates,a,new,analysis,provider,param,index,settings,the,index,settings,for,the,index,this,provider,is,created,for,param,environment,the,nodes,environment,to,load,resources,from,persistent,storage,param,name,the,name,of,the,analysis,component,param,settings,the,component,specific,settings,without,context,prefixes,return,a,new,provider,instance,throws,ioexception,if,an,link,ioexception,occurs;t,get,index,settings,index,settings,environment,environment,string,name,settings,settings,throws,ioexception
AnalysisModule -> AnalysisProvider -> T get(IndexSettings indexSettings, Environment environment, String name, Settings settings) throws IOException_;1531729807;Creates a new analysis provider.__@param indexSettings the index settings for the index this provider is created for_@param environment   the nodes environment to load resources from persistent storage_@param name          the name of the analysis component_@param settings      the component specific settings without context prefixes_@return a new provider instance_@throws IOException if an {@link IOException} occurs;T get(IndexSettings indexSettings, Environment environment, String name, Settings settings) throws IOException_;creates,a,new,analysis,provider,param,index,settings,the,index,settings,for,the,index,this,provider,is,created,for,param,environment,the,nodes,environment,to,load,resources,from,persistent,storage,param,name,the,name,of,the,analysis,component,param,settings,the,component,specific,settings,without,context,prefixes,return,a,new,provider,instance,throws,ioexception,if,an,link,ioexception,occurs;t,get,index,settings,index,settings,environment,environment,string,name,settings,settings,throws,ioexception
AnalysisModule -> AnalysisProvider -> T get(IndexSettings indexSettings, Environment environment, String name, Settings settings) throws IOException_;1536314350;Creates a new analysis provider.__@param indexSettings the index settings for the index this provider is created for_@param environment   the nodes environment to load resources from persistent storage_@param name          the name of the analysis component_@param settings      the component specific settings without context prefixes_@return a new provider instance_@throws IOException if an {@link IOException} occurs;T get(IndexSettings indexSettings, Environment environment, String name, Settings settings) throws IOException_;creates,a,new,analysis,provider,param,index,settings,the,index,settings,for,the,index,this,provider,is,created,for,param,environment,the,nodes,environment,to,load,resources,from,persistent,storage,param,name,the,name,of,the,analysis,component,param,settings,the,component,specific,settings,without,context,prefixes,return,a,new,provider,instance,throws,ioexception,if,an,link,ioexception,occurs;t,get,index,settings,index,settings,environment,environment,string,name,settings,settings,throws,ioexception
AnalysisModule -> AnalysisProvider -> T get(IndexSettings indexSettings, Environment environment, String name, Settings settings) throws IOException_;1540583181;Creates a new analysis provider.__@param indexSettings the index settings for the index this provider is created for_@param environment   the nodes environment to load resources from persistent storage_@param name          the name of the analysis component_@param settings      the component specific settings without context prefixes_@return a new provider instance_@throws IOException if an {@link IOException} occurs;T get(IndexSettings indexSettings, Environment environment, String name, Settings settings) throws IOException_;creates,a,new,analysis,provider,param,index,settings,the,index,settings,for,the,index,this,provider,is,created,for,param,environment,the,nodes,environment,to,load,resources,from,persistent,storage,param,name,the,name,of,the,analysis,component,param,settings,the,component,specific,settings,without,context,prefixes,return,a,new,provider,instance,throws,ioexception,if,an,link,ioexception,occurs;t,get,index,settings,index,settings,environment,environment,string,name,settings,settings,throws,ioexception
AnalysisModule -> AnalysisProvider -> T get(IndexSettings indexSettings, Environment environment, String name, Settings settings) throws IOException_;1541592065;Creates a new analysis provider.__@param indexSettings the index settings for the index this provider is created for_@param environment   the nodes environment to load resources from persistent storage_@param name          the name of the analysis component_@param settings      the component specific settings without context prefixes_@return a new provider instance_@throws IOException if an {@link IOException} occurs;T get(IndexSettings indexSettings, Environment environment, String name, Settings settings) throws IOException_;creates,a,new,analysis,provider,param,index,settings,the,index,settings,for,the,index,this,provider,is,created,for,param,environment,the,nodes,environment,to,load,resources,from,persistent,storage,param,name,the,name,of,the,analysis,component,param,settings,the,component,specific,settings,without,context,prefixes,return,a,new,provider,instance,throws,ioexception,if,an,link,ioexception,occurs;t,get,index,settings,index,settings,environment,environment,string,name,settings,settings,throws,ioexception
AnalysisModule -> AnalysisProvider -> T get(IndexSettings indexSettings, Environment environment, String name, Settings settings) throws IOException_;1542897779;Creates a new analysis provider.__@param indexSettings the index settings for the index this provider is created for_@param environment   the nodes environment to load resources from persistent storage_@param name          the name of the analysis component_@param settings      the component specific settings without context prefixes_@return a new provider instance_@throws IOException if an {@link IOException} occurs;T get(IndexSettings indexSettings, Environment environment, String name, Settings settings) throws IOException_;creates,a,new,analysis,provider,param,index,settings,the,index,settings,for,the,index,this,provider,is,created,for,param,environment,the,nodes,environment,to,load,resources,from,persistent,storage,param,name,the,name,of,the,analysis,component,param,settings,the,component,specific,settings,without,context,prefixes,return,a,new,provider,instance,throws,ioexception,if,an,link,ioexception,occurs;t,get,index,settings,index,settings,environment,environment,string,name,settings,settings,throws,ioexception
AnalysisModule -> AnalysisProvider -> default boolean requiresAnalysisSettings();1524684173;If <code>true</code> the analysis component created by this provider requires certain settings to be instantiated._it can't be created with defaults. The default is <code>false</code>.;default boolean requiresAnalysisSettings() {_            return false__        };if,code,true,code,the,analysis,component,created,by,this,provider,requires,certain,settings,to,be,instantiated,it,can,t,be,created,with,defaults,the,default,is,code,false,code;default,boolean,requires,analysis,settings,return,false
AnalysisModule -> AnalysisProvider -> default boolean requiresAnalysisSettings();1526289033;If <code>true</code> the analysis component created by this provider requires certain settings to be instantiated._it can't be created with defaults. The default is <code>false</code>.;default boolean requiresAnalysisSettings() {_            return false__        };if,code,true,code,the,analysis,component,created,by,this,provider,requires,certain,settings,to,be,instantiated,it,can,t,be,created,with,defaults,the,default,is,code,false,code;default,boolean,requires,analysis,settings,return,false
AnalysisModule -> AnalysisProvider -> default boolean requiresAnalysisSettings();1527622193;If <code>true</code> the analysis component created by this provider requires certain settings to be instantiated._it can't be created with defaults. The default is <code>false</code>.;default boolean requiresAnalysisSettings() {_            return false__        };if,code,true,code,the,analysis,component,created,by,this,provider,requires,certain,settings,to,be,instantiated,it,can,t,be,created,with,defaults,the,default,is,code,false,code;default,boolean,requires,analysis,settings,return,false
AnalysisModule -> AnalysisProvider -> default boolean requiresAnalysisSettings();1528304883;If <code>true</code> the analysis component created by this provider requires certain settings to be instantiated._it can't be created with defaults. The default is <code>false</code>.;default boolean requiresAnalysisSettings() {_            return false__        };if,code,true,code,the,analysis,component,created,by,this,provider,requires,certain,settings,to,be,instantiated,it,can,t,be,created,with,defaults,the,default,is,code,false,code;default,boolean,requires,analysis,settings,return,false
AnalysisModule -> AnalysisProvider -> default boolean requiresAnalysisSettings();1528706846;If <code>true</code> the analysis component created by this provider requires certain settings to be instantiated._it can't be created with defaults. The default is <code>false</code>.;default boolean requiresAnalysisSettings() {_            return false__        };if,code,true,code,the,analysis,component,created,by,this,provider,requires,certain,settings,to,be,instantiated,it,can,t,be,created,with,defaults,the,default,is,code,false,code;default,boolean,requires,analysis,settings,return,false
AnalysisModule -> AnalysisProvider -> default boolean requiresAnalysisSettings();1529341607;If <code>true</code> the analysis component created by this provider requires certain settings to be instantiated._it can't be created with defaults. The default is <code>false</code>.;default boolean requiresAnalysisSettings() {_            return false__        };if,code,true,code,the,analysis,component,created,by,this,provider,requires,certain,settings,to,be,instantiated,it,can,t,be,created,with,defaults,the,default,is,code,false,code;default,boolean,requires,analysis,settings,return,false
AnalysisModule -> AnalysisProvider -> default boolean requiresAnalysisSettings();1531729807;If <code>true</code> the analysis component created by this provider requires certain settings to be instantiated._it can't be created with defaults. The default is <code>false</code>.;default boolean requiresAnalysisSettings() {_            return false__        };if,code,true,code,the,analysis,component,created,by,this,provider,requires,certain,settings,to,be,instantiated,it,can,t,be,created,with,defaults,the,default,is,code,false,code;default,boolean,requires,analysis,settings,return,false
AnalysisModule -> AnalysisProvider -> default boolean requiresAnalysisSettings();1536314350;If <code>true</code> the analysis component created by this provider requires certain settings to be instantiated._it can't be created with defaults. The default is <code>false</code>.;default boolean requiresAnalysisSettings() {_            return false__        };if,code,true,code,the,analysis,component,created,by,this,provider,requires,certain,settings,to,be,instantiated,it,can,t,be,created,with,defaults,the,default,is,code,false,code;default,boolean,requires,analysis,settings,return,false
AnalysisModule -> AnalysisProvider -> default boolean requiresAnalysisSettings();1540583181;If <code>true</code> the analysis component created by this provider requires certain settings to be instantiated._it can't be created with defaults. The default is <code>false</code>.;default boolean requiresAnalysisSettings() {_            return false__        };if,code,true,code,the,analysis,component,created,by,this,provider,requires,certain,settings,to,be,instantiated,it,can,t,be,created,with,defaults,the,default,is,code,false,code;default,boolean,requires,analysis,settings,return,false
AnalysisModule -> AnalysisProvider -> default boolean requiresAnalysisSettings();1541592065;If <code>true</code> the analysis component created by this provider requires certain settings to be instantiated._it can't be created with defaults. The default is <code>false</code>.;default boolean requiresAnalysisSettings() {_            return false__        };if,code,true,code,the,analysis,component,created,by,this,provider,requires,certain,settings,to,be,instantiated,it,can,t,be,created,with,defaults,the,default,is,code,false,code;default,boolean,requires,analysis,settings,return,false
AnalysisModule -> AnalysisProvider -> default boolean requiresAnalysisSettings();1542897779;If <code>true</code> the analysis component created by this provider requires certain settings to be instantiated._it can't be created with defaults. The default is <code>false</code>.;default boolean requiresAnalysisSettings() {_            return false__        };if,code,true,code,the,analysis,component,created,by,this,provider,requires,certain,settings,to,be,instantiated,it,can,t,be,created,with,defaults,the,default,is,code,false,code;default,boolean,requires,analysis,settings,return,false
