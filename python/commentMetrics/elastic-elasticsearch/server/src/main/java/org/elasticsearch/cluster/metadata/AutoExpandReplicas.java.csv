# id;timestamp;commentText;codeText;commentWords;codeWords
AutoExpandReplicas -> public static Map<Integer, List<String>> getAutoExpandReplicaChanges(MetaData metaData, DiscoveryNodes discoveryNodes);1525798022;Checks if the are replicas with the auto-expand feature that need to be adapted._Returns a map of updates, which maps the indices to be updated to the desired number of replicas._The map has the desired number of replicas as key and the indices to update as value, as this allows the result_of this method to be directly applied to RoutingTable.Builder#updateNumberOfReplicas.;public static Map<Integer, List<String>> getAutoExpandReplicaChanges(MetaData metaData, DiscoveryNodes discoveryNodes) {_        _        final int dataNodeCount = discoveryNodes.getDataNodes().size()___        Map<Integer, List<String>> nrReplicasChanged = new HashMap<>()___        for (final IndexMetaData indexMetaData : metaData) {_            if (indexMetaData.getState() != IndexMetaData.State.CLOSE) {_                AutoExpandReplicas autoExpandReplicas = SETTING.get(indexMetaData.getSettings())__                autoExpandReplicas.getDesiredNumberOfReplicas(dataNodeCount).ifPresent(numberOfReplicas -> {_                    if (numberOfReplicas != indexMetaData.getNumberOfReplicas()) {_                        nrReplicasChanged.computeIfAbsent(numberOfReplicas, ArrayList::new).add(indexMetaData.getIndex().getName())__                    }_                })__            }_        }_        return nrReplicasChanged__    };checks,if,the,are,replicas,with,the,auto,expand,feature,that,need,to,be,adapted,returns,a,map,of,updates,which,maps,the,indices,to,be,updated,to,the,desired,number,of,replicas,the,map,has,the,desired,number,of,replicas,as,key,and,the,indices,to,update,as,value,as,this,allows,the,result,of,this,method,to,be,directly,applied,to,routing,table,builder,update,number,of,replicas;public,static,map,integer,list,string,get,auto,expand,replica,changes,meta,data,meta,data,discovery,nodes,discovery,nodes,final,int,data,node,count,discovery,nodes,get,data,nodes,size,map,integer,list,string,nr,replicas,changed,new,hash,map,for,final,index,meta,data,index,meta,data,meta,data,if,index,meta,data,get,state,index,meta,data,state,close,auto,expand,replicas,auto,expand,replicas,setting,get,index,meta,data,get,settings,auto,expand,replicas,get,desired,number,of,replicas,data,node,count,if,present,number,of,replicas,if,number,of,replicas,index,meta,data,get,number,of,replicas,nr,replicas,changed,compute,if,absent,number,of,replicas,array,list,new,add,index,meta,data,get,index,get,name,return,nr,replicas,changed
AutoExpandReplicas -> public static Map<Integer, List<String>> getAutoExpandReplicaChanges(MetaData metaData, DiscoveryNodes discoveryNodes);1538509426;Checks if the are replicas with the auto-expand feature that need to be adapted._Returns a map of updates, which maps the indices to be updated to the desired number of replicas._The map has the desired number of replicas as key and the indices to update as value, as this allows the result_of this method to be directly applied to RoutingTable.Builder#updateNumberOfReplicas.;public static Map<Integer, List<String>> getAutoExpandReplicaChanges(MetaData metaData, DiscoveryNodes discoveryNodes) {_        _        final int dataNodeCount = discoveryNodes.getDataNodes().size()___        Map<Integer, List<String>> nrReplicasChanged = new HashMap<>()___        for (final IndexMetaData indexMetaData : metaData) {_            if (indexMetaData.getState() != IndexMetaData.State.CLOSE) {_                AutoExpandReplicas autoExpandReplicas = SETTING.get(indexMetaData.getSettings())__                autoExpandReplicas.getDesiredNumberOfReplicas(dataNodeCount).ifPresent(numberOfReplicas -> {_                    if (numberOfReplicas != indexMetaData.getNumberOfReplicas()) {_                        nrReplicasChanged.computeIfAbsent(numberOfReplicas, ArrayList::new).add(indexMetaData.getIndex().getName())__                    }_                })__            }_        }_        return nrReplicasChanged__    };checks,if,the,are,replicas,with,the,auto,expand,feature,that,need,to,be,adapted,returns,a,map,of,updates,which,maps,the,indices,to,be,updated,to,the,desired,number,of,replicas,the,map,has,the,desired,number,of,replicas,as,key,and,the,indices,to,update,as,value,as,this,allows,the,result,of,this,method,to,be,directly,applied,to,routing,table,builder,update,number,of,replicas;public,static,map,integer,list,string,get,auto,expand,replica,changes,meta,data,meta,data,discovery,nodes,discovery,nodes,final,int,data,node,count,discovery,nodes,get,data,nodes,size,map,integer,list,string,nr,replicas,changed,new,hash,map,for,final,index,meta,data,index,meta,data,meta,data,if,index,meta,data,get,state,index,meta,data,state,close,auto,expand,replicas,auto,expand,replicas,setting,get,index,meta,data,get,settings,auto,expand,replicas,get,desired,number,of,replicas,data,node,count,if,present,number,of,replicas,if,number,of,replicas,index,meta,data,get,number,of,replicas,nr,replicas,changed,compute,if,absent,number,of,replicas,array,list,new,add,index,meta,data,get,index,get,name,return,nr,replicas,changed
AutoExpandReplicas -> public static Map<Integer, List<String>> getAutoExpandReplicaChanges(MetaData metaData, DiscoveryNodes discoveryNodes);1540847035;Checks if the are replicas with the auto-expand feature that need to be adapted._Returns a map of updates, which maps the indices to be updated to the desired number of replicas._The map has the desired number of replicas as key and the indices to update as value, as this allows the result_of this method to be directly applied to RoutingTable.Builder#updateNumberOfReplicas.;public static Map<Integer, List<String>> getAutoExpandReplicaChanges(MetaData metaData, DiscoveryNodes discoveryNodes) {_        _        final int dataNodeCount = discoveryNodes.getDataNodes().size()___        Map<Integer, List<String>> nrReplicasChanged = new HashMap<>()___        for (final IndexMetaData indexMetaData : metaData) {_            if (indexMetaData.getState() != IndexMetaData.State.CLOSE) {_                AutoExpandReplicas autoExpandReplicas = SETTING.get(indexMetaData.getSettings())__                autoExpandReplicas.getDesiredNumberOfReplicas(dataNodeCount).ifPresent(numberOfReplicas -> {_                    if (numberOfReplicas != indexMetaData.getNumberOfReplicas()) {_                        nrReplicasChanged.computeIfAbsent(numberOfReplicas, ArrayList::new).add(indexMetaData.getIndex().getName())__                    }_                })__            }_        }_        return nrReplicasChanged__    };checks,if,the,are,replicas,with,the,auto,expand,feature,that,need,to,be,adapted,returns,a,map,of,updates,which,maps,the,indices,to,be,updated,to,the,desired,number,of,replicas,the,map,has,the,desired,number,of,replicas,as,key,and,the,indices,to,update,as,value,as,this,allows,the,result,of,this,method,to,be,directly,applied,to,routing,table,builder,update,number,of,replicas;public,static,map,integer,list,string,get,auto,expand,replica,changes,meta,data,meta,data,discovery,nodes,discovery,nodes,final,int,data,node,count,discovery,nodes,get,data,nodes,size,map,integer,list,string,nr,replicas,changed,new,hash,map,for,final,index,meta,data,index,meta,data,meta,data,if,index,meta,data,get,state,index,meta,data,state,close,auto,expand,replicas,auto,expand,replicas,setting,get,index,meta,data,get,settings,auto,expand,replicas,get,desired,number,of,replicas,data,node,count,if,present,number,of,replicas,if,number,of,replicas,index,meta,data,get,number,of,replicas,nr,replicas,changed,compute,if,absent,number,of,replicas,array,list,new,add,index,meta,data,get,index,get,name,return,nr,replicas,changed
AutoExpandReplicas -> public static Map<Integer, List<String>> getAutoExpandReplicaChanges(MetaData metaData, DiscoveryNodes discoveryNodes);1544702062;Checks if the are replicas with the auto-expand feature that need to be adapted._Returns a map of updates, which maps the indices to be updated to the desired number of replicas._The map has the desired number of replicas as key and the indices to update as value, as this allows the result_of this method to be directly applied to RoutingTable.Builder#updateNumberOfReplicas.;public static Map<Integer, List<String>> getAutoExpandReplicaChanges(MetaData metaData, DiscoveryNodes discoveryNodes) {_        _        final int dataNodeCount = discoveryNodes.getDataNodes().size()___        Map<Integer, List<String>> nrReplicasChanged = new HashMap<>()___        for (final IndexMetaData indexMetaData : metaData) {_            if (indexMetaData.getState() != IndexMetaData.State.CLOSE) {_                AutoExpandReplicas autoExpandReplicas = SETTING.get(indexMetaData.getSettings())__                autoExpandReplicas.getDesiredNumberOfReplicas(dataNodeCount).ifPresent(numberOfReplicas -> {_                    if (numberOfReplicas != indexMetaData.getNumberOfReplicas()) {_                        nrReplicasChanged.computeIfAbsent(numberOfReplicas, ArrayList::new).add(indexMetaData.getIndex().getName())__                    }_                })__            }_        }_        return nrReplicasChanged__    };checks,if,the,are,replicas,with,the,auto,expand,feature,that,need,to,be,adapted,returns,a,map,of,updates,which,maps,the,indices,to,be,updated,to,the,desired,number,of,replicas,the,map,has,the,desired,number,of,replicas,as,key,and,the,indices,to,update,as,value,as,this,allows,the,result,of,this,method,to,be,directly,applied,to,routing,table,builder,update,number,of,replicas;public,static,map,integer,list,string,get,auto,expand,replica,changes,meta,data,meta,data,discovery,nodes,discovery,nodes,final,int,data,node,count,discovery,nodes,get,data,nodes,size,map,integer,list,string,nr,replicas,changed,new,hash,map,for,final,index,meta,data,index,meta,data,meta,data,if,index,meta,data,get,state,index,meta,data,state,close,auto,expand,replicas,auto,expand,replicas,setting,get,index,meta,data,get,settings,auto,expand,replicas,get,desired,number,of,replicas,data,node,count,if,present,number,of,replicas,if,number,of,replicas,index,meta,data,get,number,of,replicas,nr,replicas,changed,compute,if,absent,number,of,replicas,array,list,new,add,index,meta,data,get,index,get,name,return,nr,replicas,changed
