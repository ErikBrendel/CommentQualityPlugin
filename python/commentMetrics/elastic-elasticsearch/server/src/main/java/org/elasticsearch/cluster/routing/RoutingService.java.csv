# id;timestamp;commentText;codeText;commentWords;codeWords
RoutingService -> public final void reroute(String reason);1524684173;Initiates a reroute.;public final void reroute(String reason) {_        performReroute(reason)__    };initiates,a,reroute;public,final,void,reroute,string,reason,perform,reroute,reason
RoutingService -> public final void reroute(String reason);1540847035;Initiates a reroute.;public final void reroute(String reason) {_        performReroute(reason)__    };initiates,a,reroute;public,final,void,reroute,string,reason,perform,reroute,reason
RoutingService -> public final void reroute(String reason);1542646292;Initiates a reroute.;public final void reroute(String reason) {_        performReroute(reason)__    };initiates,a,reroute;public,final,void,reroute,string,reason,perform,reroute,reason
RoutingService -> public final void reroute(String reason);1547625930;Initiates a reroute.;public final void reroute(String reason) {_        performReroute(reason)__    };initiates,a,reroute;public,final,void,reroute,string,reason,perform,reroute,reason
RoutingService -> public final void reroute(String reason);1548257942;Initiates a reroute.;public final void reroute(String reason) {_        try {_            if (lifecycle.stopped()) {_                return__            }_            if (rerouting.compareAndSet(false, true) == false) {_                logger.trace("already has pending reroute, ignoring {}", reason)__                return__            }_            logger.trace("rerouting {}", reason)__            clusterService.submitStateUpdateTask(CLUSTER_UPDATE_TASK_SOURCE + "(" + reason + ")",_                new ClusterStateUpdateTask(Priority.HIGH) {_                    @Override_                    public ClusterState execute(ClusterState currentState) {_                        rerouting.set(false)__                        return allocationService.reroute(currentState, reason)__                    }__                    @Override_                    public void onNoLongerMaster(String source) {_                        rerouting.set(false)__                        _                    }__                    @Override_                    public void onFailure(String source, Exception e) {_                        rerouting.set(false)__                        ClusterState state = clusterService.state()__                        if (logger.isTraceEnabled()) {_                            logger.error(() -> new ParameterizedMessage("unexpected failure during [{}], current state:\n{}",_                                source, state), e)__                        } else {_                            logger.error(() -> new ParameterizedMessage("unexpected failure during [{}], current state version [{}]",_                                source, state.version()), e)__                        }_                    }_                })__        } catch (Exception e) {_            rerouting.set(false)__            ClusterState state = clusterService.state()__            logger.warn(() -> new ParameterizedMessage("failed to reroute routing table, current state:\n{}", state), e)__        }_    };initiates,a,reroute;public,final,void,reroute,string,reason,try,if,lifecycle,stopped,return,if,rerouting,compare,and,set,false,true,false,logger,trace,already,has,pending,reroute,ignoring,reason,return,logger,trace,rerouting,reason,cluster,service,submit,state,update,task,reason,new,cluster,state,update,task,priority,high,override,public,cluster,state,execute,cluster,state,current,state,rerouting,set,false,return,allocation,service,reroute,current,state,reason,override,public,void,on,no,longer,master,string,source,rerouting,set,false,override,public,void,on,failure,string,source,exception,e,rerouting,set,false,cluster,state,state,cluster,service,state,if,logger,is,trace,enabled,logger,error,new,parameterized,message,unexpected,failure,during,current,state,n,source,state,e,else,logger,error,new,parameterized,message,unexpected,failure,during,current,state,version,source,state,version,e,catch,exception,e,rerouting,set,false,cluster,state,state,cluster,service,state,logger,warn,new,parameterized,message,failed,to,reroute,routing,table,current,state,n,state,e
