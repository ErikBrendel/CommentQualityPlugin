commented;modifiers;parameterAmount;loc;comment;code
true;public,static;1;5;/**  * Determine the name of the package of the given class:  * e.g. "java.lang" for the <code>java.lang.String</code> class.  *  * @param clazz the class  * @return the package name, or the empty String if the class  *         is defined in the default package  */ ;/**  * Determine the name of the package of the given class:  * e.g. "java.lang" for the <code>java.lang.String</code> class.  *  * @param clazz the class  * @return the package name, or the empty String if the class  *         is defined in the default package  */ public static String getPackageName(Class<?> clazz) {     String className = clazz.getName().     int lastDotIndex = className.lastIndexOf(PACKAGE_SEPARATOR).     return (lastDotIndex != -1 ? className.substring(0, lastDotIndex) : ""). }
false;public,static;1;4;;public static boolean isInnerClass(Class<?> clazz) {     return !Modifier.isStatic(clazz.getModifiers()) && clazz.getEnclosingClass() != null. }
false;public,static;1;4;;public static boolean isConcrete(Class<?> clazz) {     int modifiers = clazz.getModifiers().     return !clazz.isInterface() && !Modifier.isAbstract(modifiers). }
