# id;timestamp;commentText;codeText;commentWords;codeWords
DocWriteResponse -> public String getId();1524684173;The id of the document changed.;public String getId() {_        return this.id__    };the,id,of,the,document,changed;public,string,get,id,return,this,id
DocWriteResponse -> public String getId();1525162917;The id of the document changed.;public String getId() {_        return this.id__    };the,id,of,the,document,changed;public,string,get,id,return,this,id
DocWriteResponse -> public String getId();1541543628;The id of the document changed.;public String getId() {_        return this.id__    };the,id,of,the,document,changed;public,string,get,id,return,this,id
DocWriteResponse -> public String getId();1543619489;The id of the document changed.;public String getId() {_        return this.id__    };the,id,of,the,document,changed;public,string,get,id,return,this,id
DocWriteResponse -> public String getId();1545221705;The id of the document changed.;public String getId() {_        return this.id__    };the,id,of,the,document,changed;public,string,get,id,return,this,id
DocWriteResponse -> public long getSeqNo();1524684173;Returns the sequence number assigned for this change. Returns {@link SequenceNumbers#UNASSIGNED_SEQ_NO} if the operation_wasn't performed (i.e., an update operation that resulted in a NOOP).;public long getSeqNo() {_        return seqNo__    };returns,the,sequence,number,assigned,for,this,change,returns,link,sequence,numbers,if,the,operation,wasn,t,performed,i,e,an,update,operation,that,resulted,in,a,noop;public,long,get,seq,no,return,seq,no
DocWriteResponse -> public long getSeqNo();1525162917;Returns the sequence number assigned for this change. Returns {@link SequenceNumbers#UNASSIGNED_SEQ_NO} if the operation_wasn't performed (i.e., an update operation that resulted in a NOOP).;public long getSeqNo() {_        return seqNo__    };returns,the,sequence,number,assigned,for,this,change,returns,link,sequence,numbers,if,the,operation,wasn,t,performed,i,e,an,update,operation,that,resulted,in,a,noop;public,long,get,seq,no,return,seq,no
DocWriteResponse -> public long getSeqNo();1541543628;Returns the sequence number assigned for this change. Returns {@link SequenceNumbers#UNASSIGNED_SEQ_NO} if the operation_wasn't performed (i.e., an update operation that resulted in a NOOP).;public long getSeqNo() {_        return seqNo__    };returns,the,sequence,number,assigned,for,this,change,returns,link,sequence,numbers,if,the,operation,wasn,t,performed,i,e,an,update,operation,that,resulted,in,a,noop;public,long,get,seq,no,return,seq,no
DocWriteResponse -> public long getSeqNo();1543619489;Returns the sequence number assigned for this change. Returns {@link SequenceNumbers#UNASSIGNED_SEQ_NO} if the operation_wasn't performed (i.e., an update operation that resulted in a NOOP).;public long getSeqNo() {_        return seqNo__    };returns,the,sequence,number,assigned,for,this,change,returns,link,sequence,numbers,if,the,operation,wasn,t,performed,i,e,an,update,operation,that,resulted,in,a,noop;public,long,get,seq,no,return,seq,no
DocWriteResponse -> public long getSeqNo();1545221705;Returns the sequence number assigned for this change. Returns {@link SequenceNumbers#UNASSIGNED_SEQ_NO} if the operation_wasn't performed (i.e., an update operation that resulted in a NOOP).;public long getSeqNo() {_        return seqNo__    };returns,the,sequence,number,assigned,for,this,change,returns,link,sequence,numbers,if,the,operation,wasn,t,performed,i,e,an,update,operation,that,resulted,in,a,noop;public,long,get,seq,no,return,seq,no
DocWriteResponse -> @Deprecated     public String getType();1543619489;The type of the document changed.__@deprecated Types are in the process of being removed.;@Deprecated_    public String getType() {_        return this.type__    };the,type,of,the,document,changed,deprecated,types,are,in,the,process,of,being,removed;deprecated,public,string,get,type,return,this,type
DocWriteResponse -> @Deprecated     public String getType();1545221705;The type of the document changed.__@deprecated Types are in the process of being removed.;@Deprecated_    public String getType() {_        return this.type__    };the,type,of,the,document,changed,deprecated,types,are,in,the,process,of,being,removed;deprecated,public,string,get,type,return,this,type
DocWriteResponse -> public long getPrimaryTerm();1524684173;The primary term for this change.__@return the primary term;public long getPrimaryTerm() {_        return primaryTerm__    };the,primary,term,for,this,change,return,the,primary,term;public,long,get,primary,term,return,primary,term
DocWriteResponse -> public long getPrimaryTerm();1525162917;The primary term for this change.__@return the primary term;public long getPrimaryTerm() {_        return primaryTerm__    };the,primary,term,for,this,change,return,the,primary,term;public,long,get,primary,term,return,primary,term
DocWriteResponse -> public long getPrimaryTerm();1541543628;The primary term for this change.__@return the primary term;public long getPrimaryTerm() {_        return primaryTerm__    };the,primary,term,for,this,change,return,the,primary,term;public,long,get,primary,term,return,primary,term
DocWriteResponse -> public long getPrimaryTerm();1543619489;The primary term for this change.__@return the primary term;public long getPrimaryTerm() {_        return primaryTerm__    };the,primary,term,for,this,change,return,the,primary,term;public,long,get,primary,term,return,primary,term
DocWriteResponse -> public long getPrimaryTerm();1545221705;The primary term for this change.__@return the primary term;public long getPrimaryTerm() {_        return primaryTerm__    };the,primary,term,for,this,change,return,the,primary,term;public,long,get,primary,term,return,primary,term
DocWriteResponse -> public boolean forcedRefresh();1524684173;Did this request force a refresh? Requests that set {@link WriteRequest#setRefreshPolicy(RefreshPolicy)} to_{@link RefreshPolicy#IMMEDIATE} will always return true for this. Requests that set it to {@link RefreshPolicy#WAIT_UNTIL} will_only return true here if they run out of refresh listener slots (see {@link IndexSettings#MAX_REFRESH_LISTENERS_PER_SHARD}).;public boolean forcedRefresh() {_        return forcedRefresh__    };did,this,request,force,a,refresh,requests,that,set,link,write,request,set,refresh,policy,refresh,policy,to,link,refresh,policy,immediate,will,always,return,true,for,this,requests,that,set,it,to,link,refresh,policy,will,only,return,true,here,if,they,run,out,of,refresh,listener,slots,see,link,index,settings;public,boolean,forced,refresh,return,forced,refresh
DocWriteResponse -> public boolean forcedRefresh();1525162917;Did this request force a refresh? Requests that set {@link WriteRequest#setRefreshPolicy(RefreshPolicy)} to_{@link RefreshPolicy#IMMEDIATE} will always return true for this. Requests that set it to {@link RefreshPolicy#WAIT_UNTIL} will_only return true here if they run out of refresh listener slots (see {@link IndexSettings#MAX_REFRESH_LISTENERS_PER_SHARD}).;public boolean forcedRefresh() {_        return forcedRefresh__    };did,this,request,force,a,refresh,requests,that,set,link,write,request,set,refresh,policy,refresh,policy,to,link,refresh,policy,immediate,will,always,return,true,for,this,requests,that,set,it,to,link,refresh,policy,will,only,return,true,here,if,they,run,out,of,refresh,listener,slots,see,link,index,settings;public,boolean,forced,refresh,return,forced,refresh
DocWriteResponse -> public boolean forcedRefresh();1541543628;Did this request force a refresh? Requests that set {@link WriteRequest#setRefreshPolicy(RefreshPolicy)} to_{@link RefreshPolicy#IMMEDIATE} will always return true for this. Requests that set it to {@link RefreshPolicy#WAIT_UNTIL} will_only return true here if they run out of refresh listener slots (see {@link IndexSettings#MAX_REFRESH_LISTENERS_PER_SHARD}).;public boolean forcedRefresh() {_        return forcedRefresh__    };did,this,request,force,a,refresh,requests,that,set,link,write,request,set,refresh,policy,refresh,policy,to,link,refresh,policy,immediate,will,always,return,true,for,this,requests,that,set,it,to,link,refresh,policy,will,only,return,true,here,if,they,run,out,of,refresh,listener,slots,see,link,index,settings;public,boolean,forced,refresh,return,forced,refresh
DocWriteResponse -> public boolean forcedRefresh();1543619489;Did this request force a refresh? Requests that set {@link WriteRequest#setRefreshPolicy(RefreshPolicy)} to_{@link RefreshPolicy#IMMEDIATE} will always return true for this. Requests that set it to {@link RefreshPolicy#WAIT_UNTIL} will_only return true here if they run out of refresh listener slots (see {@link IndexSettings#MAX_REFRESH_LISTENERS_PER_SHARD}).;public boolean forcedRefresh() {_        return forcedRefresh__    };did,this,request,force,a,refresh,requests,that,set,link,write,request,set,refresh,policy,refresh,policy,to,link,refresh,policy,immediate,will,always,return,true,for,this,requests,that,set,it,to,link,refresh,policy,will,only,return,true,here,if,they,run,out,of,refresh,listener,slots,see,link,index,settings;public,boolean,forced,refresh,return,forced,refresh
DocWriteResponse -> public boolean forcedRefresh();1545221705;Did this request force a refresh? Requests that set {@link WriteRequest#setRefreshPolicy(RefreshPolicy)} to_{@link RefreshPolicy#IMMEDIATE} will always return true for this. Requests that set it to {@link RefreshPolicy#WAIT_UNTIL} will_only return true here if they run out of refresh listener slots (see {@link IndexSettings#MAX_REFRESH_LISTENERS_PER_SHARD}).;public boolean forcedRefresh() {_        return forcedRefresh__    };did,this,request,force,a,refresh,requests,that,set,link,write,request,set,refresh,policy,refresh,policy,to,link,refresh,policy,immediate,will,always,return,true,for,this,requests,that,set,it,to,link,refresh,policy,will,only,return,true,here,if,they,run,out,of,refresh,listener,slots,see,link,index,settings;public,boolean,forced,refresh,return,forced,refresh
DocWriteResponse -> public ShardId getShardId();1524684173;The exact shard the document was changed in.;public ShardId getShardId() {_        return this.shardId__    };the,exact,shard,the,document,was,changed,in;public,shard,id,get,shard,id,return,this,shard,id
DocWriteResponse -> public ShardId getShardId();1525162917;The exact shard the document was changed in.;public ShardId getShardId() {_        return this.shardId__    };the,exact,shard,the,document,was,changed,in;public,shard,id,get,shard,id,return,this,shard,id
DocWriteResponse -> public ShardId getShardId();1541543628;The exact shard the document was changed in.;public ShardId getShardId() {_        return this.shardId__    };the,exact,shard,the,document,was,changed,in;public,shard,id,get,shard,id,return,this,shard,id
DocWriteResponse -> public ShardId getShardId();1543619489;The exact shard the document was changed in.;public ShardId getShardId() {_        return this.shardId__    };the,exact,shard,the,document,was,changed,in;public,shard,id,get,shard,id,return,this,shard,id
DocWriteResponse -> public ShardId getShardId();1545221705;The exact shard the document was changed in.;public ShardId getShardId() {_        return this.shardId__    };the,exact,shard,the,document,was,changed,in;public,shard,id,get,shard,id,return,this,shard,id
DocWriteResponse -> public String getIndex();1524684173;The index the document was changed in.;public String getIndex() {_        return this.shardId.getIndexName()__    };the,index,the,document,was,changed,in;public,string,get,index,return,this,shard,id,get,index,name
DocWriteResponse -> public String getIndex();1525162917;The index the document was changed in.;public String getIndex() {_        return this.shardId.getIndexName()__    };the,index,the,document,was,changed,in;public,string,get,index,return,this,shard,id,get,index,name
DocWriteResponse -> public String getIndex();1541543628;The index the document was changed in.;public String getIndex() {_        return this.shardId.getIndexName()__    };the,index,the,document,was,changed,in;public,string,get,index,return,this,shard,id,get,index,name
DocWriteResponse -> public String getIndex();1543619489;The index the document was changed in.;public String getIndex() {_        return this.shardId.getIndexName()__    };the,index,the,document,was,changed,in;public,string,get,index,return,this,shard,id,get,index,name
DocWriteResponse -> public String getIndex();1545221705;The index the document was changed in.;public String getIndex() {_        return this.shardId.getIndexName()__    };the,index,the,document,was,changed,in;public,string,get,index,return,this,shard,id,get,index,name
DocWriteResponse -> public long getVersion();1524684173;Returns the current version of the doc.;public long getVersion() {_        return this.version__    };returns,the,current,version,of,the,doc;public,long,get,version,return,this,version
DocWriteResponse -> public long getVersion();1525162917;Returns the current version of the doc.;public long getVersion() {_        return this.version__    };returns,the,current,version,of,the,doc;public,long,get,version,return,this,version
DocWriteResponse -> public long getVersion();1541543628;Returns the current version of the doc.;public long getVersion() {_        return this.version__    };returns,the,current,version,of,the,doc;public,long,get,version,return,this,version
DocWriteResponse -> public long getVersion();1543619489;Returns the current version of the doc.;public long getVersion() {_        return this.version__    };returns,the,current,version,of,the,doc;public,long,get,version,return,this,version
DocWriteResponse -> public long getVersion();1545221705;Returns the current version of the doc.;public long getVersion() {_        return this.version__    };returns,the,current,version,of,the,doc;public,long,get,version,return,this,version
DocWriteResponse -> public String getLocation(@Nullable String routing);1524684173;Return the relative URI for the location of the document suitable for use in the {@code Location} header. The use of relative URIs is_permitted as of HTTP/1.1 (cf. https://tools.ietf.org/html/rfc7231#section-7.1.2).__@param routing custom routing or {@code null} if custom routing is not used_@return the relative URI for the location of the document;public String getLocation(@Nullable String routing) {_        final String encodedIndex__        final String encodedType__        final String encodedId__        final String encodedRouting__        try {_            _            encodedIndex = URLEncoder.encode(getIndex(), "UTF-8")__            encodedType = URLEncoder.encode(getType(), "UTF-8")__            encodedId = URLEncoder.encode(getId(), "UTF-8")__            encodedRouting = routing == null ? null : URLEncoder.encode(routing, "UTF-8")__        } catch (final UnsupportedEncodingException e) {_            throw new AssertionError(e)__        }_        final String routingStart = "?routing="__        final int bufferSizeExcludingRouting = 3 + encodedIndex.length() + encodedType.length() + encodedId.length()__        final int bufferSize__        if (encodedRouting == null) {_            bufferSize = bufferSizeExcludingRouting__        } else {_            bufferSize = bufferSizeExcludingRouting + routingStart.length() + encodedRouting.length()__        }_        final StringBuilder location = new StringBuilder(bufferSize)__        location.append('/').append(encodedIndex)__        location.append('/').append(encodedType)__        location.append('/').append(encodedId)__        if (encodedRouting != null) {_            location.append(routingStart).append(encodedRouting)__        }__        return location.toString()__    };return,the,relative,uri,for,the,location,of,the,document,suitable,for,use,in,the,code,location,header,the,use,of,relative,uris,is,permitted,as,of,http,1,1,cf,https,tools,ietf,org,html,rfc7231,section,7,1,2,param,routing,custom,routing,or,code,null,if,custom,routing,is,not,used,return,the,relative,uri,for,the,location,of,the,document;public,string,get,location,nullable,string,routing,final,string,encoded,index,final,string,encoded,type,final,string,encoded,id,final,string,encoded,routing,try,encoded,index,urlencoder,encode,get,index,utf,8,encoded,type,urlencoder,encode,get,type,utf,8,encoded,id,urlencoder,encode,get,id,utf,8,encoded,routing,routing,null,null,urlencoder,encode,routing,utf,8,catch,final,unsupported,encoding,exception,e,throw,new,assertion,error,e,final,string,routing,start,routing,final,int,buffer,size,excluding,routing,3,encoded,index,length,encoded,type,length,encoded,id,length,final,int,buffer,size,if,encoded,routing,null,buffer,size,buffer,size,excluding,routing,else,buffer,size,buffer,size,excluding,routing,routing,start,length,encoded,routing,length,final,string,builder,location,new,string,builder,buffer,size,location,append,append,encoded,index,location,append,append,encoded,type,location,append,append,encoded,id,if,encoded,routing,null,location,append,routing,start,append,encoded,routing,return,location,to,string
DocWriteResponse -> public String getLocation(@Nullable String routing);1525162917;Return the relative URI for the location of the document suitable for use in the {@code Location} header. The use of relative URIs is_permitted as of HTTP/1.1 (cf. https://tools.ietf.org/html/rfc7231#section-7.1.2).__@param routing custom routing or {@code null} if custom routing is not used_@return the relative URI for the location of the document;public String getLocation(@Nullable String routing) {_        final String encodedIndex__        final String encodedType__        final String encodedId__        final String encodedRouting__        try {_            _            encodedIndex = URLEncoder.encode(getIndex(), "UTF-8")__            encodedType = URLEncoder.encode(getType(), "UTF-8")__            encodedId = URLEncoder.encode(getId(), "UTF-8")__            encodedRouting = routing == null ? null : URLEncoder.encode(routing, "UTF-8")__        } catch (final UnsupportedEncodingException e) {_            throw new AssertionError(e)__        }_        final String routingStart = "?routing="__        final int bufferSizeExcludingRouting = 3 + encodedIndex.length() + encodedType.length() + encodedId.length()__        final int bufferSize__        if (encodedRouting == null) {_            bufferSize = bufferSizeExcludingRouting__        } else {_            bufferSize = bufferSizeExcludingRouting + routingStart.length() + encodedRouting.length()__        }_        final StringBuilder location = new StringBuilder(bufferSize)__        location.append('/').append(encodedIndex)__        location.append('/').append(encodedType)__        location.append('/').append(encodedId)__        if (encodedRouting != null) {_            location.append(routingStart).append(encodedRouting)__        }__        return location.toString()__    };return,the,relative,uri,for,the,location,of,the,document,suitable,for,use,in,the,code,location,header,the,use,of,relative,uris,is,permitted,as,of,http,1,1,cf,https,tools,ietf,org,html,rfc7231,section,7,1,2,param,routing,custom,routing,or,code,null,if,custom,routing,is,not,used,return,the,relative,uri,for,the,location,of,the,document;public,string,get,location,nullable,string,routing,final,string,encoded,index,final,string,encoded,type,final,string,encoded,id,final,string,encoded,routing,try,encoded,index,urlencoder,encode,get,index,utf,8,encoded,type,urlencoder,encode,get,type,utf,8,encoded,id,urlencoder,encode,get,id,utf,8,encoded,routing,routing,null,null,urlencoder,encode,routing,utf,8,catch,final,unsupported,encoding,exception,e,throw,new,assertion,error,e,final,string,routing,start,routing,final,int,buffer,size,excluding,routing,3,encoded,index,length,encoded,type,length,encoded,id,length,final,int,buffer,size,if,encoded,routing,null,buffer,size,buffer,size,excluding,routing,else,buffer,size,buffer,size,excluding,routing,routing,start,length,encoded,routing,length,final,string,builder,location,new,string,builder,buffer,size,location,append,append,encoded,index,location,append,append,encoded,type,location,append,append,encoded,id,if,encoded,routing,null,location,append,routing,start,append,encoded,routing,return,location,to,string
DocWriteResponse -> public String getLocation(@Nullable String routing);1541543628;Return the relative URI for the location of the document suitable for use in the {@code Location} header. The use of relative URIs is_permitted as of HTTP/1.1 (cf. https://tools.ietf.org/html/rfc7231#section-7.1.2).__@param routing custom routing or {@code null} if custom routing is not used_@return the relative URI for the location of the document;public String getLocation(@Nullable String routing) {_        final String encodedIndex__        final String encodedType__        final String encodedId__        final String encodedRouting__        try {_            _            encodedIndex = URLEncoder.encode(getIndex(), "UTF-8")__            encodedType = URLEncoder.encode(getType(), "UTF-8")__            encodedId = URLEncoder.encode(getId(), "UTF-8")__            encodedRouting = routing == null ? null : URLEncoder.encode(routing, "UTF-8")__        } catch (final UnsupportedEncodingException e) {_            throw new AssertionError(e)__        }_        final String routingStart = "?routing="__        final int bufferSizeExcludingRouting = 3 + encodedIndex.length() + encodedType.length() + encodedId.length()__        final int bufferSize__        if (encodedRouting == null) {_            bufferSize = bufferSizeExcludingRouting__        } else {_            bufferSize = bufferSizeExcludingRouting + routingStart.length() + encodedRouting.length()__        }_        final StringBuilder location = new StringBuilder(bufferSize)__        location.append('/').append(encodedIndex)__        location.append('/').append(encodedType)__        location.append('/').append(encodedId)__        if (encodedRouting != null) {_            location.append(routingStart).append(encodedRouting)__        }__        return location.toString()__    };return,the,relative,uri,for,the,location,of,the,document,suitable,for,use,in,the,code,location,header,the,use,of,relative,uris,is,permitted,as,of,http,1,1,cf,https,tools,ietf,org,html,rfc7231,section,7,1,2,param,routing,custom,routing,or,code,null,if,custom,routing,is,not,used,return,the,relative,uri,for,the,location,of,the,document;public,string,get,location,nullable,string,routing,final,string,encoded,index,final,string,encoded,type,final,string,encoded,id,final,string,encoded,routing,try,encoded,index,urlencoder,encode,get,index,utf,8,encoded,type,urlencoder,encode,get,type,utf,8,encoded,id,urlencoder,encode,get,id,utf,8,encoded,routing,routing,null,null,urlencoder,encode,routing,utf,8,catch,final,unsupported,encoding,exception,e,throw,new,assertion,error,e,final,string,routing,start,routing,final,int,buffer,size,excluding,routing,3,encoded,index,length,encoded,type,length,encoded,id,length,final,int,buffer,size,if,encoded,routing,null,buffer,size,buffer,size,excluding,routing,else,buffer,size,buffer,size,excluding,routing,routing,start,length,encoded,routing,length,final,string,builder,location,new,string,builder,buffer,size,location,append,append,encoded,index,location,append,append,encoded,type,location,append,append,encoded,id,if,encoded,routing,null,location,append,routing,start,append,encoded,routing,return,location,to,string
DocWriteResponse -> public String getLocation(@Nullable String routing);1543619489;Return the relative URI for the location of the document suitable for use in the {@code Location} header. The use of relative URIs is_permitted as of HTTP/1.1 (cf. https://tools.ietf.org/html/rfc7231#section-7.1.2).__@param routing custom routing or {@code null} if custom routing is not used_@return the relative URI for the location of the document;public String getLocation(@Nullable String routing) {_        final String encodedIndex__        final String encodedType__        final String encodedId__        final String encodedRouting__        try {_            _            encodedIndex = URLEncoder.encode(getIndex(), "UTF-8")__            encodedType = URLEncoder.encode(getType(), "UTF-8")__            encodedId = URLEncoder.encode(getId(), "UTF-8")__            encodedRouting = routing == null ? null : URLEncoder.encode(routing, "UTF-8")__        } catch (final UnsupportedEncodingException e) {_            throw new AssertionError(e)__        }_        final String routingStart = "?routing="__        final int bufferSizeExcludingRouting = 3 + encodedIndex.length() + encodedType.length() + encodedId.length()__        final int bufferSize__        if (encodedRouting == null) {_            bufferSize = bufferSizeExcludingRouting__        } else {_            bufferSize = bufferSizeExcludingRouting + routingStart.length() + encodedRouting.length()__        }_        final StringBuilder location = new StringBuilder(bufferSize)__        location.append('/').append(encodedIndex)__        location.append('/').append(encodedType)__        location.append('/').append(encodedId)__        if (encodedRouting != null) {_            location.append(routingStart).append(encodedRouting)__        }__        return location.toString()__    };return,the,relative,uri,for,the,location,of,the,document,suitable,for,use,in,the,code,location,header,the,use,of,relative,uris,is,permitted,as,of,http,1,1,cf,https,tools,ietf,org,html,rfc7231,section,7,1,2,param,routing,custom,routing,or,code,null,if,custom,routing,is,not,used,return,the,relative,uri,for,the,location,of,the,document;public,string,get,location,nullable,string,routing,final,string,encoded,index,final,string,encoded,type,final,string,encoded,id,final,string,encoded,routing,try,encoded,index,urlencoder,encode,get,index,utf,8,encoded,type,urlencoder,encode,get,type,utf,8,encoded,id,urlencoder,encode,get,id,utf,8,encoded,routing,routing,null,null,urlencoder,encode,routing,utf,8,catch,final,unsupported,encoding,exception,e,throw,new,assertion,error,e,final,string,routing,start,routing,final,int,buffer,size,excluding,routing,3,encoded,index,length,encoded,type,length,encoded,id,length,final,int,buffer,size,if,encoded,routing,null,buffer,size,buffer,size,excluding,routing,else,buffer,size,buffer,size,excluding,routing,routing,start,length,encoded,routing,length,final,string,builder,location,new,string,builder,buffer,size,location,append,append,encoded,index,location,append,append,encoded,type,location,append,append,encoded,id,if,encoded,routing,null,location,append,routing,start,append,encoded,routing,return,location,to,string
DocWriteResponse -> public String getLocation(@Nullable String routing);1545221705;Return the relative URI for the location of the document suitable for use in the {@code Location} header. The use of relative URIs is_permitted as of HTTP/1.1 (cf. https://tools.ietf.org/html/rfc7231#section-7.1.2).__@param routing custom routing or {@code null} if custom routing is not used_@return the relative URI for the location of the document;public String getLocation(@Nullable String routing) {_        final String encodedIndex__        final String encodedType__        final String encodedId__        final String encodedRouting__        try {_            _            encodedIndex = URLEncoder.encode(getIndex(), "UTF-8")__            encodedType = URLEncoder.encode(getType(), "UTF-8")__            encodedId = URLEncoder.encode(getId(), "UTF-8")__            encodedRouting = routing == null ? null : URLEncoder.encode(routing, "UTF-8")__        } catch (final UnsupportedEncodingException e) {_            throw new AssertionError(e)__        }_        final String routingStart = "?routing="__        final int bufferSizeExcludingRouting = 3 + encodedIndex.length() + encodedType.length() + encodedId.length()__        final int bufferSize__        if (encodedRouting == null) {_            bufferSize = bufferSizeExcludingRouting__        } else {_            bufferSize = bufferSizeExcludingRouting + routingStart.length() + encodedRouting.length()__        }_        final StringBuilder location = new StringBuilder(bufferSize)__        location.append('/').append(encodedIndex)__        location.append('/').append(encodedType)__        location.append('/').append(encodedId)__        if (encodedRouting != null) {_            location.append(routingStart).append(encodedRouting)__        }__        return location.toString()__    };return,the,relative,uri,for,the,location,of,the,document,suitable,for,use,in,the,code,location,header,the,use,of,relative,uris,is,permitted,as,of,http,1,1,cf,https,tools,ietf,org,html,rfc7231,section,7,1,2,param,routing,custom,routing,or,code,null,if,custom,routing,is,not,used,return,the,relative,uri,for,the,location,of,the,document;public,string,get,location,nullable,string,routing,final,string,encoded,index,final,string,encoded,type,final,string,encoded,id,final,string,encoded,routing,try,encoded,index,urlencoder,encode,get,index,utf,8,encoded,type,urlencoder,encode,get,type,utf,8,encoded,id,urlencoder,encode,get,id,utf,8,encoded,routing,routing,null,null,urlencoder,encode,routing,utf,8,catch,final,unsupported,encoding,exception,e,throw,new,assertion,error,e,final,string,routing,start,routing,final,int,buffer,size,excluding,routing,3,encoded,index,length,encoded,type,length,encoded,id,length,final,int,buffer,size,if,encoded,routing,null,buffer,size,buffer,size,excluding,routing,else,buffer,size,buffer,size,excluding,routing,routing,start,length,encoded,routing,length,final,string,builder,location,new,string,builder,buffer,size,location,append,append,encoded,index,location,append,append,encoded,type,location,append,append,encoded,id,if,encoded,routing,null,location,append,routing,start,append,encoded,routing,return,location,to,string
DocWriteResponse -> protected static void parseInnerToXContent(XContentParser parser, Builder context) throws IOException;1524684173;Parse the output of the {@link #innerToXContent(XContentBuilder, Params)} method.__This method is intended to be called by subclasses and must be called multiple times to parse all the information concerning_{@link DocWriteResponse} objects. It always parses the current token, updates the given parsing context accordingly_if needed and then immediately returns.;protected static void parseInnerToXContent(XContentParser parser, Builder context) throws IOException {_        XContentParser.Token token = parser.currentToken()__        ensureExpectedToken(XContentParser.Token.FIELD_NAME, token, parser::getTokenLocation)___        String currentFieldName = parser.currentName()__        token = parser.nextToken()___        if (token.isValue()) {_            if (_INDEX.equals(currentFieldName)) {_                _                context.setShardId(new ShardId(new Index(parser.text(), IndexMetaData.INDEX_UUID_NA_VALUE), -1))__            } else if (_TYPE.equals(currentFieldName)) {_                context.setType(parser.text())__            } else if (_ID.equals(currentFieldName)) {_                context.setId(parser.text())__            } else if (_VERSION.equals(currentFieldName)) {_                context.setVersion(parser.longValue())__            } else if (RESULT.equals(currentFieldName)) {_                String result = parser.text()__                for (Result r :  Result.values()) {_                    if (r.getLowercase().equals(result)) {_                        context.setResult(r)__                        break__                    }_                }_            } else if (FORCED_REFRESH.equals(currentFieldName)) {_                context.setForcedRefresh(parser.booleanValue())__            } else if (_SEQ_NO.equals(currentFieldName)) {_                context.setSeqNo(parser.longValue())__            } else if (_PRIMARY_TERM.equals(currentFieldName)) {_                context.setPrimaryTerm(parser.longValue())__            }_        } else if (token == XContentParser.Token.START_OBJECT) {_            if (_SHARDS.equals(currentFieldName)) {_                context.setShardInfo(ShardInfo.fromXContent(parser))__            } else {_                parser.skipChildren()_ _            }_        } else if (token == XContentParser.Token.START_ARRAY) {_            parser.skipChildren()_ _        }_    };parse,the,output,of,the,link,inner,to,xcontent,xcontent,builder,params,method,this,method,is,intended,to,be,called,by,subclasses,and,must,be,called,multiple,times,to,parse,all,the,information,concerning,link,doc,write,response,objects,it,always,parses,the,current,token,updates,the,given,parsing,context,accordingly,if,needed,and,then,immediately,returns;protected,static,void,parse,inner,to,xcontent,xcontent,parser,parser,builder,context,throws,ioexception,xcontent,parser,token,token,parser,current,token,ensure,expected,token,xcontent,parser,token,token,parser,get,token,location,string,current,field,name,parser,current,name,token,parser,next,token,if,token,is,value,if,equals,current,field,name,context,set,shard,id,new,shard,id,new,index,parser,text,index,meta,data,1,else,if,equals,current,field,name,context,set,type,parser,text,else,if,equals,current,field,name,context,set,id,parser,text,else,if,equals,current,field,name,context,set,version,parser,long,value,else,if,result,equals,current,field,name,string,result,parser,text,for,result,r,result,values,if,r,get,lowercase,equals,result,context,set,result,r,break,else,if,equals,current,field,name,context,set,forced,refresh,parser,boolean,value,else,if,equals,current,field,name,context,set,seq,no,parser,long,value,else,if,equals,current,field,name,context,set,primary,term,parser,long,value,else,if,token,xcontent,parser,token,if,equals,current,field,name,context,set,shard,info,shard,info,from,xcontent,parser,else,parser,skip,children,else,if,token,xcontent,parser,token,parser,skip,children
DocWriteResponse -> protected static void parseInnerToXContent(XContentParser parser, Builder context) throws IOException;1525162917;Parse the output of the {@link #innerToXContent(XContentBuilder, Params)} method.__This method is intended to be called by subclasses and must be called multiple times to parse all the information concerning_{@link DocWriteResponse} objects. It always parses the current token, updates the given parsing context accordingly_if needed and then immediately returns.;protected static void parseInnerToXContent(XContentParser parser, Builder context) throws IOException {_        XContentParser.Token token = parser.currentToken()__        ensureExpectedToken(XContentParser.Token.FIELD_NAME, token, parser::getTokenLocation)___        String currentFieldName = parser.currentName()__        token = parser.nextToken()___        if (token.isValue()) {_            if (_INDEX.equals(currentFieldName)) {_                _                context.setShardId(new ShardId(new Index(parser.text(), IndexMetaData.INDEX_UUID_NA_VALUE), -1))__            } else if (_TYPE.equals(currentFieldName)) {_                context.setType(parser.text())__            } else if (_ID.equals(currentFieldName)) {_                context.setId(parser.text())__            } else if (_VERSION.equals(currentFieldName)) {_                context.setVersion(parser.longValue())__            } else if (RESULT.equals(currentFieldName)) {_                String result = parser.text()__                for (Result r :  Result.values()) {_                    if (r.getLowercase().equals(result)) {_                        context.setResult(r)__                        break__                    }_                }_            } else if (FORCED_REFRESH.equals(currentFieldName)) {_                context.setForcedRefresh(parser.booleanValue())__            } else if (_SEQ_NO.equals(currentFieldName)) {_                context.setSeqNo(parser.longValue())__            } else if (_PRIMARY_TERM.equals(currentFieldName)) {_                context.setPrimaryTerm(parser.longValue())__            }_        } else if (token == XContentParser.Token.START_OBJECT) {_            if (_SHARDS.equals(currentFieldName)) {_                context.setShardInfo(ShardInfo.fromXContent(parser))__            } else {_                parser.skipChildren()_ _            }_        } else if (token == XContentParser.Token.START_ARRAY) {_            parser.skipChildren()_ _        }_    };parse,the,output,of,the,link,inner,to,xcontent,xcontent,builder,params,method,this,method,is,intended,to,be,called,by,subclasses,and,must,be,called,multiple,times,to,parse,all,the,information,concerning,link,doc,write,response,objects,it,always,parses,the,current,token,updates,the,given,parsing,context,accordingly,if,needed,and,then,immediately,returns;protected,static,void,parse,inner,to,xcontent,xcontent,parser,parser,builder,context,throws,ioexception,xcontent,parser,token,token,parser,current,token,ensure,expected,token,xcontent,parser,token,token,parser,get,token,location,string,current,field,name,parser,current,name,token,parser,next,token,if,token,is,value,if,equals,current,field,name,context,set,shard,id,new,shard,id,new,index,parser,text,index,meta,data,1,else,if,equals,current,field,name,context,set,type,parser,text,else,if,equals,current,field,name,context,set,id,parser,text,else,if,equals,current,field,name,context,set,version,parser,long,value,else,if,result,equals,current,field,name,string,result,parser,text,for,result,r,result,values,if,r,get,lowercase,equals,result,context,set,result,r,break,else,if,equals,current,field,name,context,set,forced,refresh,parser,boolean,value,else,if,equals,current,field,name,context,set,seq,no,parser,long,value,else,if,equals,current,field,name,context,set,primary,term,parser,long,value,else,if,token,xcontent,parser,token,if,equals,current,field,name,context,set,shard,info,shard,info,from,xcontent,parser,else,parser,skip,children,else,if,token,xcontent,parser,token,parser,skip,children
DocWriteResponse -> protected static void parseInnerToXContent(XContentParser parser, Builder context) throws IOException;1541543628;Parse the output of the {@link #innerToXContent(XContentBuilder, Params)} method.__This method is intended to be called by subclasses and must be called multiple times to parse all the information concerning_{@link DocWriteResponse} objects. It always parses the current token, updates the given parsing context accordingly_if needed and then immediately returns.;protected static void parseInnerToXContent(XContentParser parser, Builder context) throws IOException {_        XContentParser.Token token = parser.currentToken()__        ensureExpectedToken(XContentParser.Token.FIELD_NAME, token, parser::getTokenLocation)___        String currentFieldName = parser.currentName()__        token = parser.nextToken()___        if (token.isValue()) {_            if (_INDEX.equals(currentFieldName)) {_                _                context.setShardId(new ShardId(new Index(parser.text(), IndexMetaData.INDEX_UUID_NA_VALUE), -1))__            } else if (_TYPE.equals(currentFieldName)) {_                context.setType(parser.text())__            } else if (_ID.equals(currentFieldName)) {_                context.setId(parser.text())__            } else if (_VERSION.equals(currentFieldName)) {_                context.setVersion(parser.longValue())__            } else if (RESULT.equals(currentFieldName)) {_                String result = parser.text()__                for (Result r :  Result.values()) {_                    if (r.getLowercase().equals(result)) {_                        context.setResult(r)__                        break__                    }_                }_            } else if (FORCED_REFRESH.equals(currentFieldName)) {_                context.setForcedRefresh(parser.booleanValue())__            } else if (_SEQ_NO.equals(currentFieldName)) {_                context.setSeqNo(parser.longValue())__            } else if (_PRIMARY_TERM.equals(currentFieldName)) {_                context.setPrimaryTerm(parser.longValue())__            }_        } else if (token == XContentParser.Token.START_OBJECT) {_            if (_SHARDS.equals(currentFieldName)) {_                context.setShardInfo(ShardInfo.fromXContent(parser))__            } else {_                parser.skipChildren()_ _            }_        } else if (token == XContentParser.Token.START_ARRAY) {_            parser.skipChildren()_ _        }_    };parse,the,output,of,the,link,inner,to,xcontent,xcontent,builder,params,method,this,method,is,intended,to,be,called,by,subclasses,and,must,be,called,multiple,times,to,parse,all,the,information,concerning,link,doc,write,response,objects,it,always,parses,the,current,token,updates,the,given,parsing,context,accordingly,if,needed,and,then,immediately,returns;protected,static,void,parse,inner,to,xcontent,xcontent,parser,parser,builder,context,throws,ioexception,xcontent,parser,token,token,parser,current,token,ensure,expected,token,xcontent,parser,token,token,parser,get,token,location,string,current,field,name,parser,current,name,token,parser,next,token,if,token,is,value,if,equals,current,field,name,context,set,shard,id,new,shard,id,new,index,parser,text,index,meta,data,1,else,if,equals,current,field,name,context,set,type,parser,text,else,if,equals,current,field,name,context,set,id,parser,text,else,if,equals,current,field,name,context,set,version,parser,long,value,else,if,result,equals,current,field,name,string,result,parser,text,for,result,r,result,values,if,r,get,lowercase,equals,result,context,set,result,r,break,else,if,equals,current,field,name,context,set,forced,refresh,parser,boolean,value,else,if,equals,current,field,name,context,set,seq,no,parser,long,value,else,if,equals,current,field,name,context,set,primary,term,parser,long,value,else,if,token,xcontent,parser,token,if,equals,current,field,name,context,set,shard,info,shard,info,from,xcontent,parser,else,parser,skip,children,else,if,token,xcontent,parser,token,parser,skip,children
DocWriteResponse -> protected static void parseInnerToXContent(XContentParser parser, Builder context) throws IOException;1543619489;Parse the output of the {@link #innerToXContent(XContentBuilder, Params)} method.__This method is intended to be called by subclasses and must be called multiple times to parse all the information concerning_{@link DocWriteResponse} objects. It always parses the current token, updates the given parsing context accordingly_if needed and then immediately returns.;protected static void parseInnerToXContent(XContentParser parser, Builder context) throws IOException {_        XContentParser.Token token = parser.currentToken()__        ensureExpectedToken(XContentParser.Token.FIELD_NAME, token, parser::getTokenLocation)___        String currentFieldName = parser.currentName()__        token = parser.nextToken()___        if (token.isValue()) {_            if (_INDEX.equals(currentFieldName)) {_                _                context.setShardId(new ShardId(new Index(parser.text(), IndexMetaData.INDEX_UUID_NA_VALUE), -1))__            } else if (_TYPE.equals(currentFieldName)) {_                context.setType(parser.text())__            } else if (_ID.equals(currentFieldName)) {_                context.setId(parser.text())__            } else if (_VERSION.equals(currentFieldName)) {_                context.setVersion(parser.longValue())__            } else if (RESULT.equals(currentFieldName)) {_                String result = parser.text()__                for (Result r :  Result.values()) {_                    if (r.getLowercase().equals(result)) {_                        context.setResult(r)__                        break__                    }_                }_            } else if (FORCED_REFRESH.equals(currentFieldName)) {_                context.setForcedRefresh(parser.booleanValue())__            } else if (_SEQ_NO.equals(currentFieldName)) {_                context.setSeqNo(parser.longValue())__            } else if (_PRIMARY_TERM.equals(currentFieldName)) {_                context.setPrimaryTerm(parser.longValue())__            }_        } else if (token == XContentParser.Token.START_OBJECT) {_            if (_SHARDS.equals(currentFieldName)) {_                context.setShardInfo(ShardInfo.fromXContent(parser))__            } else {_                parser.skipChildren()_ _            }_        } else if (token == XContentParser.Token.START_ARRAY) {_            parser.skipChildren()_ _        }_    };parse,the,output,of,the,link,inner,to,xcontent,xcontent,builder,params,method,this,method,is,intended,to,be,called,by,subclasses,and,must,be,called,multiple,times,to,parse,all,the,information,concerning,link,doc,write,response,objects,it,always,parses,the,current,token,updates,the,given,parsing,context,accordingly,if,needed,and,then,immediately,returns;protected,static,void,parse,inner,to,xcontent,xcontent,parser,parser,builder,context,throws,ioexception,xcontent,parser,token,token,parser,current,token,ensure,expected,token,xcontent,parser,token,token,parser,get,token,location,string,current,field,name,parser,current,name,token,parser,next,token,if,token,is,value,if,equals,current,field,name,context,set,shard,id,new,shard,id,new,index,parser,text,index,meta,data,1,else,if,equals,current,field,name,context,set,type,parser,text,else,if,equals,current,field,name,context,set,id,parser,text,else,if,equals,current,field,name,context,set,version,parser,long,value,else,if,result,equals,current,field,name,string,result,parser,text,for,result,r,result,values,if,r,get,lowercase,equals,result,context,set,result,r,break,else,if,equals,current,field,name,context,set,forced,refresh,parser,boolean,value,else,if,equals,current,field,name,context,set,seq,no,parser,long,value,else,if,equals,current,field,name,context,set,primary,term,parser,long,value,else,if,token,xcontent,parser,token,if,equals,current,field,name,context,set,shard,info,shard,info,from,xcontent,parser,else,parser,skip,children,else,if,token,xcontent,parser,token,parser,skip,children
DocWriteResponse -> protected static void parseInnerToXContent(XContentParser parser, Builder context) throws IOException;1545221705;Parse the output of the {@link #innerToXContent(XContentBuilder, Params)} method.__This method is intended to be called by subclasses and must be called multiple times to parse all the information concerning_{@link DocWriteResponse} objects. It always parses the current token, updates the given parsing context accordingly_if needed and then immediately returns.;protected static void parseInnerToXContent(XContentParser parser, Builder context) throws IOException {_        XContentParser.Token token = parser.currentToken()__        ensureExpectedToken(XContentParser.Token.FIELD_NAME, token, parser::getTokenLocation)___        String currentFieldName = parser.currentName()__        token = parser.nextToken()___        if (token.isValue()) {_            if (_INDEX.equals(currentFieldName)) {_                _                context.setShardId(new ShardId(new Index(parser.text(), IndexMetaData.INDEX_UUID_NA_VALUE), -1))__            } else if (_TYPE.equals(currentFieldName)) {_                context.setType(parser.text())__            } else if (_ID.equals(currentFieldName)) {_                context.setId(parser.text())__            } else if (_VERSION.equals(currentFieldName)) {_                context.setVersion(parser.longValue())__            } else if (RESULT.equals(currentFieldName)) {_                String result = parser.text()__                for (Result r :  Result.values()) {_                    if (r.getLowercase().equals(result)) {_                        context.setResult(r)__                        break__                    }_                }_            } else if (FORCED_REFRESH.equals(currentFieldName)) {_                context.setForcedRefresh(parser.booleanValue())__            } else if (_SEQ_NO.equals(currentFieldName)) {_                context.setSeqNo(parser.longValue())__            } else if (_PRIMARY_TERM.equals(currentFieldName)) {_                context.setPrimaryTerm(parser.longValue())__            }_        } else if (token == XContentParser.Token.START_OBJECT) {_            if (_SHARDS.equals(currentFieldName)) {_                context.setShardInfo(ShardInfo.fromXContent(parser))__            } else {_                parser.skipChildren()_ _            }_        } else if (token == XContentParser.Token.START_ARRAY) {_            parser.skipChildren()_ _        }_    };parse,the,output,of,the,link,inner,to,xcontent,xcontent,builder,params,method,this,method,is,intended,to,be,called,by,subclasses,and,must,be,called,multiple,times,to,parse,all,the,information,concerning,link,doc,write,response,objects,it,always,parses,the,current,token,updates,the,given,parsing,context,accordingly,if,needed,and,then,immediately,returns;protected,static,void,parse,inner,to,xcontent,xcontent,parser,parser,builder,context,throws,ioexception,xcontent,parser,token,token,parser,current,token,ensure,expected,token,xcontent,parser,token,token,parser,get,token,location,string,current,field,name,parser,current,name,token,parser,next,token,if,token,is,value,if,equals,current,field,name,context,set,shard,id,new,shard,id,new,index,parser,text,index,meta,data,1,else,if,equals,current,field,name,context,set,type,parser,text,else,if,equals,current,field,name,context,set,id,parser,text,else,if,equals,current,field,name,context,set,version,parser,long,value,else,if,result,equals,current,field,name,string,result,parser,text,for,result,r,result,values,if,r,get,lowercase,equals,result,context,set,result,r,break,else,if,equals,current,field,name,context,set,forced,refresh,parser,boolean,value,else,if,equals,current,field,name,context,set,seq,no,parser,long,value,else,if,equals,current,field,name,context,set,primary,term,parser,long,value,else,if,token,xcontent,parser,token,if,equals,current,field,name,context,set,shard,info,shard,info,from,xcontent,parser,else,parser,skip,children,else,if,token,xcontent,parser,token,parser,skip,children
DocWriteResponse -> public Result getResult();1524684173;The change that occurred to the document.;public Result getResult() {_        return result__    };the,change,that,occurred,to,the,document;public,result,get,result,return,result
DocWriteResponse -> public Result getResult();1525162917;The change that occurred to the document.;public Result getResult() {_        return result__    };the,change,that,occurred,to,the,document;public,result,get,result,return,result
DocWriteResponse -> public Result getResult();1541543628;The change that occurred to the document.;public Result getResult() {_        return result__    };the,change,that,occurred,to,the,document;public,result,get,result,return,result
DocWriteResponse -> public Result getResult();1543619489;The change that occurred to the document.;public Result getResult() {_        return result__    };the,change,that,occurred,to,the,document;public,result,get,result,return,result
DocWriteResponse -> public Result getResult();1545221705;The change that occurred to the document.;public Result getResult() {_        return result__    };the,change,that,occurred,to,the,document;public,result,get,result,return,result
DocWriteResponse -> public String getType();1524684173;The type of the document changed.;public String getType() {_        return this.type__    };the,type,of,the,document,changed;public,string,get,type,return,this,type
DocWriteResponse -> public String getType();1525162917;The type of the document changed.;public String getType() {_        return this.type__    };the,type,of,the,document,changed;public,string,get,type,return,this,type
DocWriteResponse -> public String getType();1541543628;The type of the document changed.;public String getType() {_        return this.type__    };the,type,of,the,document,changed;public,string,get,type,return,this,type
DocWriteResponse -> @Override     public RestStatus status();1524684173;returns the rest status for this response (based on {@link ShardInfo#status()};@Override_    public RestStatus status() {_        return getShardInfo().status()__    };returns,the,rest,status,for,this,response,based,on,link,shard,info,status;override,public,rest,status,status,return,get,shard,info,status
DocWriteResponse -> @Override     public RestStatus status();1525162917;returns the rest status for this response (based on {@link ShardInfo#status()};@Override_    public RestStatus status() {_        return getShardInfo().status()__    };returns,the,rest,status,for,this,response,based,on,link,shard,info,status;override,public,rest,status,status,return,get,shard,info,status
DocWriteResponse -> @Override     public RestStatus status();1541543628;returns the rest status for this response (based on {@link ShardInfo#status()};@Override_    public RestStatus status() {_        return getShardInfo().status()__    };returns,the,rest,status,for,this,response,based,on,link,shard,info,status;override,public,rest,status,status,return,get,shard,info,status
DocWriteResponse -> @Override     public RestStatus status();1543619489;returns the rest status for this response (based on {@link ShardInfo#status()};@Override_    public RestStatus status() {_        return getShardInfo().status()__    };returns,the,rest,status,for,this,response,based,on,link,shard,info,status;override,public,rest,status,status,return,get,shard,info,status
DocWriteResponse -> @Override     public RestStatus status();1545221705;returns the rest status for this response (based on {@link ShardInfo#status()};@Override_    public RestStatus status() {_        return getShardInfo().status()__    };returns,the,rest,status,for,this,response,based,on,link,shard,info,status;override,public,rest,status,status,return,get,shard,info,status
