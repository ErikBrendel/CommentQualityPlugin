# id;timestamp;commentText;codeText;commentWords;codeWords
Coordinator -> private boolean handleJoinIgnoringExceptions(Join join);1544081506;@return true iff the join was from a new node and was successfully added;private boolean handleJoinIgnoringExceptions(Join join) {_        try {_            return coordinationState.get().handleJoin(join)__        } catch (CoordinationStateRejectedException e) {_            logger.debug(new ParameterizedMessage("failed to add {} - ignoring", join), e)__            return false__        }_    };return,true,iff,the,join,was,from,a,new,node,and,was,successfully,added;private,boolean,handle,join,ignoring,exceptions,join,join,try,return,coordination,state,get,handle,join,join,catch,coordination,state,rejected,exception,e,logger,debug,new,parameterized,message,failed,to,add,ignoring,join,e,return,false
Coordinator -> private boolean handleJoinIgnoringExceptions(Join join);1544170511;@return true iff the join was from a new node and was successfully added;private boolean handleJoinIgnoringExceptions(Join join) {_        try {_            return coordinationState.get().handleJoin(join)__        } catch (CoordinationStateRejectedException e) {_            logger.debug(new ParameterizedMessage("failed to add {} - ignoring", join), e)__            return false__        }_    };return,true,iff,the,join,was,from,a,new,node,and,was,successfully,added;private,boolean,handle,join,ignoring,exceptions,join,join,try,return,coordination,state,get,handle,join,join,catch,coordination,state,rejected,exception,e,logger,debug,new,parameterized,message,failed,to,add,ignoring,join,e,return,false
Coordinator -> private boolean handleJoinIgnoringExceptions(Join join);1544186829;@return true iff the join was from a new node and was successfully added;private boolean handleJoinIgnoringExceptions(Join join) {_        try {_            return coordinationState.get().handleJoin(join)__        } catch (CoordinationStateRejectedException e) {_            logger.debug(new ParameterizedMessage("failed to add {} - ignoring", join), e)__            return false__        }_    };return,true,iff,the,join,was,from,a,new,node,and,was,successfully,added;private,boolean,handle,join,ignoring,exceptions,join,join,try,return,coordination,state,get,handle,join,join,catch,coordination,state,rejected,exception,e,logger,debug,new,parameterized,message,failed,to,add,ignoring,join,e,return,false
Coordinator -> private boolean handleJoinIgnoringExceptions(Join join);1544203400;@return true iff the join was from a new node and was successfully added;private boolean handleJoinIgnoringExceptions(Join join) {_        try {_            return coordinationState.get().handleJoin(join)__        } catch (CoordinationStateRejectedException e) {_            logger.debug(new ParameterizedMessage("failed to add {} - ignoring", join), e)__            return false__        }_    };return,true,iff,the,join,was,from,a,new,node,and,was,successfully,added;private,boolean,handle,join,ignoring,exceptions,join,join,try,return,coordination,state,get,handle,join,join,catch,coordination,state,rejected,exception,e,logger,debug,new,parameterized,message,failed,to,add,ignoring,join,e,return,false
Coordinator -> private boolean handleJoinIgnoringExceptions(Join join);1544254415;@return true iff the join was from a new node and was successfully added;private boolean handleJoinIgnoringExceptions(Join join) {_        try {_            return coordinationState.get().handleJoin(join)__        } catch (CoordinationStateRejectedException e) {_            logger.debug(new ParameterizedMessage("failed to add {} - ignoring", join), e)__            return false__        }_    };return,true,iff,the,join,was,from,a,new,node,and,was,successfully,added;private,boolean,handle,join,ignoring,exceptions,join,join,try,return,coordination,state,get,handle,join,join,catch,coordination,state,rejected,exception,e,logger,debug,new,parameterized,message,failed,to,add,ignoring,join,e,return,false
Coordinator -> private boolean handleJoinIgnoringExceptions(Join join);1544462583;@return true iff the join was from a new node and was successfully added;private boolean handleJoinIgnoringExceptions(Join join) {_        try {_            return coordinationState.get().handleJoin(join)__        } catch (CoordinationStateRejectedException e) {_            logger.debug(new ParameterizedMessage("failed to add {} - ignoring", join), e)__            return false__        }_    };return,true,iff,the,join,was,from,a,new,node,and,was,successfully,added;private,boolean,handle,join,ignoring,exceptions,join,join,try,return,coordination,state,get,handle,join,join,catch,coordination,state,rejected,exception,e,logger,debug,new,parameterized,message,failed,to,add,ignoring,join,e,return,false
Coordinator -> private boolean handleJoinIgnoringExceptions(Join join);1544523743;@return true iff the join was from a new node and was successfully added;private boolean handleJoinIgnoringExceptions(Join join) {_        try {_            return coordinationState.get().handleJoin(join)__        } catch (CoordinationStateRejectedException e) {_            logger.debug(new ParameterizedMessage("failed to add {} - ignoring", join), e)__            return false__        }_    };return,true,iff,the,join,was,from,a,new,node,and,was,successfully,added;private,boolean,handle,join,ignoring,exceptions,join,join,try,return,coordination,state,get,handle,join,join,catch,coordination,state,rejected,exception,e,logger,debug,new,parameterized,message,failed,to,add,ignoring,join,e,return,false
Coordinator -> private boolean handleJoinIgnoringExceptions(Join join);1544546419;@return true iff the join was from a new node and was successfully added;private boolean handleJoinIgnoringExceptions(Join join) {_        try {_            return coordinationState.get().handleJoin(join)__        } catch (CoordinationStateRejectedException e) {_            logger.debug(new ParameterizedMessage("failed to add {} - ignoring", join), e)__            return false__        }_    };return,true,iff,the,join,was,from,a,new,node,and,was,successfully,added;private,boolean,handle,join,ignoring,exceptions,join,join,try,return,coordination,state,get,handle,join,join,catch,coordination,state,rejected,exception,e,logger,debug,new,parameterized,message,failed,to,add,ignoring,join,e,return,false
Coordinator -> private boolean handleJoinIgnoringExceptions(Join join);1545319912;@return true iff the join was from a new node and was successfully added;private boolean handleJoinIgnoringExceptions(Join join) {_        try {_            return coordinationState.get().handleJoin(join)__        } catch (CoordinationStateRejectedException e) {_            logger.debug(new ParameterizedMessage("failed to add {} - ignoring", join), e)__            return false__        }_    };return,true,iff,the,join,was,from,a,new,node,and,was,successfully,added;private,boolean,handle,join,ignoring,exceptions,join,join,try,return,coordination,state,get,handle,join,join,catch,coordination,state,rejected,exception,e,logger,debug,new,parameterized,message,failed,to,add,ignoring,join,e,return,false
Coordinator -> private boolean handleJoinIgnoringExceptions(Join join);1545982624;@return true iff the join was from a new node and was successfully added;private boolean handleJoinIgnoringExceptions(Join join) {_        try {_            return coordinationState.get().handleJoin(join)__        } catch (CoordinationStateRejectedException e) {_            logger.debug(new ParameterizedMessage("failed to add {} - ignoring", join), e)__            return false__        }_    };return,true,iff,the,join,was,from,a,new,node,and,was,successfully,added;private,boolean,handle,join,ignoring,exceptions,join,join,try,return,coordination,state,get,handle,join,join,catch,coordination,state,rejected,exception,e,logger,debug,new,parameterized,message,failed,to,add,ignoring,join,e,return,false
Coordinator -> private boolean handleJoinIgnoringExceptions(Join join);1546592956;@return true iff the join was from a new node and was successfully added;private boolean handleJoinIgnoringExceptions(Join join) {_        try {_            return coordinationState.get().handleJoin(join)__        } catch (CoordinationStateRejectedException e) {_            logger.debug(new ParameterizedMessage("failed to add {} - ignoring", join), e)__            return false__        }_    };return,true,iff,the,join,was,from,a,new,node,and,was,successfully,added;private,boolean,handle,join,ignoring,exceptions,join,join,try,return,coordination,state,get,handle,join,join,catch,coordination,state,rejected,exception,e,logger,debug,new,parameterized,message,failed,to,add,ignoring,join,e,return,false
Coordinator -> private boolean handleJoinIgnoringExceptions(Join join);1546850547;@return true iff the join was from a new node and was successfully added;private boolean handleJoinIgnoringExceptions(Join join) {_        try {_            return coordinationState.get().handleJoin(join)__        } catch (CoordinationStateRejectedException e) {_            logger.debug(new ParameterizedMessage("failed to add {} - ignoring", join), e)__            return false__        }_    };return,true,iff,the,join,was,from,a,new,node,and,was,successfully,added;private,boolean,handle,join,ignoring,exceptions,join,join,try,return,coordination,state,get,handle,join,join,catch,coordination,state,rejected,exception,e,logger,debug,new,parameterized,message,failed,to,add,ignoring,join,e,return,false
Coordinator -> private boolean handleJoinIgnoringExceptions(Join join);1547049229;@return true iff the join was from a new node and was successfully added;private boolean handleJoinIgnoringExceptions(Join join) {_        try {_            return coordinationState.get().handleJoin(join)__        } catch (CoordinationStateRejectedException e) {_            logger.debug(new ParameterizedMessage("failed to add {} - ignoring", join), e)__            return false__        }_    };return,true,iff,the,join,was,from,a,new,node,and,was,successfully,added;private,boolean,handle,join,ignoring,exceptions,join,join,try,return,coordination,state,get,handle,join,join,catch,coordination,state,rejected,exception,e,logger,debug,new,parameterized,message,failed,to,add,ignoring,join,e,return,false
Coordinator -> private boolean handleJoinIgnoringExceptions(Join join);1547121470;@return true iff the join was from a new node and was successfully added;private boolean handleJoinIgnoringExceptions(Join join) {_        try {_            return coordinationState.get().handleJoin(join)__        } catch (CoordinationStateRejectedException e) {_            logger.debug(new ParameterizedMessage("failed to add {} - ignoring", join), e)__            return false__        }_    };return,true,iff,the,join,was,from,a,new,node,and,was,successfully,added;private,boolean,handle,join,ignoring,exceptions,join,join,try,return,coordination,state,get,handle,join,join,catch,coordination,state,rejected,exception,e,logger,debug,new,parameterized,message,failed,to,add,ignoring,join,e,return,false
Coordinator -> private boolean handleJoinIgnoringExceptions(Join join);1547219208;@return true iff the join was from a new node and was successfully added;private boolean handleJoinIgnoringExceptions(Join join) {_        try {_            return coordinationState.get().handleJoin(join)__        } catch (CoordinationStateRejectedException e) {_            logger.debug(new ParameterizedMessage("failed to add {} - ignoring", join), e)__            return false__        }_    };return,true,iff,the,join,was,from,a,new,node,and,was,successfully,added;private,boolean,handle,join,ignoring,exceptions,join,join,try,return,coordination,state,get,handle,join,join,catch,coordination,state,rejected,exception,e,logger,debug,new,parameterized,message,failed,to,add,ignoring,join,e,return,false
Coordinator -> private boolean handleJoinIgnoringExceptions(Join join);1547573528;@return true iff the join was from a new node and was successfully added;private boolean handleJoinIgnoringExceptions(Join join) {_        try {_            return coordinationState.get().handleJoin(join)__        } catch (CoordinationStateRejectedException e) {_            logger.debug(new ParameterizedMessage("failed to add {} - ignoring", join), e)__            return false__        }_    };return,true,iff,the,join,was,from,a,new,node,and,was,successfully,added;private,boolean,handle,join,ignoring,exceptions,join,join,try,return,coordination,state,get,handle,join,join,catch,coordination,state,rejected,exception,e,logger,debug,new,parameterized,message,failed,to,add,ignoring,join,e,return,false
Coordinator -> private boolean handleJoinIgnoringExceptions(Join join);1547625930;@return true iff the join was from a new node and was successfully added;private boolean handleJoinIgnoringExceptions(Join join) {_        try {_            return coordinationState.get().handleJoin(join)__        } catch (CoordinationStateRejectedException e) {_            logger.debug(new ParameterizedMessage("failed to add {} - ignoring", join), e)__            return false__        }_    };return,true,iff,the,join,was,from,a,new,node,and,was,successfully,added;private,boolean,handle,join,ignoring,exceptions,join,join,try,return,coordination,state,get,handle,join,join,catch,coordination,state,rejected,exception,e,logger,debug,new,parameterized,message,failed,to,add,ignoring,join,e,return,false
Coordinator -> private boolean handleJoinIgnoringExceptions(Join join);1548155031;@return true iff the join was from a new node and was successfully added;private boolean handleJoinIgnoringExceptions(Join join) {_        try {_            return coordinationState.get().handleJoin(join)__        } catch (CoordinationStateRejectedException e) {_            logger.debug(new ParameterizedMessage("failed to add {} - ignoring", join), e)__            return false__        }_    };return,true,iff,the,join,was,from,a,new,node,and,was,successfully,added;private,boolean,handle,join,ignoring,exceptions,join,join,try,return,coordination,state,get,handle,join,join,catch,coordination,state,rejected,exception,e,logger,debug,new,parameterized,message,failed,to,add,ignoring,join,e,return,false
Coordinator -> private boolean handleJoinIgnoringExceptions(Join join);1548157863;@return true iff the join was from a new node and was successfully added;private boolean handleJoinIgnoringExceptions(Join join) {_        try {_            return coordinationState.get().handleJoin(join)__        } catch (CoordinationStateRejectedException e) {_            logger.debug(new ParameterizedMessage("failed to add {} - ignoring", join), e)__            return false__        }_    };return,true,iff,the,join,was,from,a,new,node,and,was,successfully,added;private,boolean,handle,join,ignoring,exceptions,join,join,try,return,coordination,state,get,handle,join,join,catch,coordination,state,rejected,exception,e,logger,debug,new,parameterized,message,failed,to,add,ignoring,join,e,return,false
Coordinator -> private boolean handleJoinIgnoringExceptions(Join join);1548245411;@return true iff the join was from a new node and was successfully added;private boolean handleJoinIgnoringExceptions(Join join) {_        try {_            return coordinationState.get().handleJoin(join)__        } catch (CoordinationStateRejectedException e) {_            logger.debug(new ParameterizedMessage("failed to add {} - ignoring", join), e)__            return false__        }_    };return,true,iff,the,join,was,from,a,new,node,and,was,successfully,added;private,boolean,handle,join,ignoring,exceptions,join,join,try,return,coordination,state,get,handle,join,join,catch,coordination,state,rejected,exception,e,logger,debug,new,parameterized,message,failed,to,add,ignoring,join,e,return,false
Coordinator -> private boolean handleJoinIgnoringExceptions(Join join);1548320260;@return true iff the join was from a new node and was successfully added;private boolean handleJoinIgnoringExceptions(Join join) {_        try {_            return coordinationState.get().handleJoin(join)__        } catch (CoordinationStateRejectedException e) {_            logger.debug(new ParameterizedMessage("failed to add {} - ignoring", join), e)__            return false__        }_    };return,true,iff,the,join,was,from,a,new,node,and,was,successfully,added;private,boolean,handle,join,ignoring,exceptions,join,join,try,return,coordination,state,get,handle,join,join,catch,coordination,state,rejected,exception,e,logger,debug,new,parameterized,message,failed,to,add,ignoring,join,e,return,false
Coordinator -> private boolean handleJoinIgnoringExceptions(Join join);1548411429;@return true iff the join was from a new node and was successfully added;private boolean handleJoinIgnoringExceptions(Join join) {_        try {_            return coordinationState.get().handleJoin(join)__        } catch (CoordinationStateRejectedException e) {_            logger.debug(new ParameterizedMessage("failed to add {} - ignoring", join), e)__            return false__        }_    };return,true,iff,the,join,was,from,a,new,node,and,was,successfully,added;private,boolean,handle,join,ignoring,exceptions,join,join,try,return,coordination,state,get,handle,join,join,catch,coordination,state,rejected,exception,e,logger,debug,new,parameterized,message,failed,to,add,ignoring,join,e,return,false
Coordinator -> private boolean handleJoinIgnoringExceptions(Join join);1548762184;@return true iff the join was from a new node and was successfully added;private boolean handleJoinIgnoringExceptions(Join join) {_        try {_            return coordinationState.get().handleJoin(join)__        } catch (CoordinationStateRejectedException e) {_            logger.debug(new ParameterizedMessage("failed to add {} - ignoring", join), e)__            return false__        }_    };return,true,iff,the,join,was,from,a,new,node,and,was,successfully,added;private,boolean,handle,join,ignoring,exceptions,join,join,try,return,coordination,state,get,handle,join,join,catch,coordination,state,rejected,exception,e,logger,debug,new,parameterized,message,failed,to,add,ignoring,join,e,return,false
Coordinator -> private boolean handleJoinIgnoringExceptions(Join join);1548772865;@return true iff the join was from a new node and was successfully added;private boolean handleJoinIgnoringExceptions(Join join) {_        try {_            return coordinationState.get().handleJoin(join)__        } catch (CoordinationStateRejectedException e) {_            logger.debug(new ParameterizedMessage("failed to add {} - ignoring", join), e)__            return false__        }_    };return,true,iff,the,join,was,from,a,new,node,and,was,successfully,added;private,boolean,handle,join,ignoring,exceptions,join,join,try,return,coordination,state,get,handle,join,join,catch,coordination,state,rejected,exception,e,logger,debug,new,parameterized,message,failed,to,add,ignoring,join,e,return,false
Coordinator -> private boolean handleJoinIgnoringExceptions(Join join);1548952864;@return true iff the join was from a new node and was successfully added;private boolean handleJoinIgnoringExceptions(Join join) {_        try {_            return coordinationState.get().handleJoin(join)__        } catch (CoordinationStateRejectedException e) {_            logger.debug(new ParameterizedMessage("failed to add {} - ignoring", join), e)__            return false__        }_    };return,true,iff,the,join,was,from,a,new,node,and,was,successfully,added;private,boolean,handle,join,ignoring,exceptions,join,join,try,return,coordination,state,get,handle,join,join,catch,coordination,state,rejected,exception,e,logger,debug,new,parameterized,message,failed,to,add,ignoring,join,e,return,false
Coordinator -> private boolean handleJoinIgnoringExceptions(Join join);1548953505;@return true iff the join was from a new node and was successfully added;private boolean handleJoinIgnoringExceptions(Join join) {_        try {_            return coordinationState.get().handleJoin(join)__        } catch (CoordinationStateRejectedException e) {_            logger.debug(new ParameterizedMessage("failed to add {} - ignoring", join), e)__            return false__        }_    };return,true,iff,the,join,was,from,a,new,node,and,was,successfully,added;private,boolean,handle,join,ignoring,exceptions,join,join,try,return,coordination,state,get,handle,join,join,catch,coordination,state,rejected,exception,e,logger,debug,new,parameterized,message,failed,to,add,ignoring,join,e,return,false
Coordinator -> private boolean handleJoinIgnoringExceptions(Join join);1549041491;@return true iff the join was from a new node and was successfully added;private boolean handleJoinIgnoringExceptions(Join join) {_        try {_            return coordinationState.get().handleJoin(join)__        } catch (CoordinationStateRejectedException e) {_            logger.debug(new ParameterizedMessage("failed to add {} - ignoring", join), e)__            return false__        }_    };return,true,iff,the,join,was,from,a,new,node,and,was,successfully,added;private,boolean,handle,join,ignoring,exceptions,join,join,try,return,coordination,state,get,handle,join,join,catch,coordination,state,rejected,exception,e,logger,debug,new,parameterized,message,failed,to,add,ignoring,join,e,return,false
Coordinator -> private boolean handleJoinIgnoringExceptions(Join join);1549094096;@return true iff the join was from a new node and was successfully added;private boolean handleJoinIgnoringExceptions(Join join) {_        try {_            return coordinationState.get().handleJoin(join)__        } catch (CoordinationStateRejectedException e) {_            logger.debug(new ParameterizedMessage("failed to add {} - ignoring", join), e)__            return false__        }_    };return,true,iff,the,join,was,from,a,new,node,and,was,successfully,added;private,boolean,handle,join,ignoring,exceptions,join,join,try,return,coordination,state,get,handle,join,join,catch,coordination,state,rejected,exception,e,logger,debug,new,parameterized,message,failed,to,add,ignoring,join,e,return,false
Coordinator -> private boolean handleJoinIgnoringExceptions(Join join);1549356476;@return true iff the join was from a new node and was successfully added;private boolean handleJoinIgnoringExceptions(Join join) {_        try {_            return coordinationState.get().handleJoin(join)__        } catch (CoordinationStateRejectedException e) {_            logger.debug(new ParameterizedMessage("failed to add {} - ignoring", join), e)__            return false__        }_    };return,true,iff,the,join,was,from,a,new,node,and,was,successfully,added;private,boolean,handle,join,ignoring,exceptions,join,join,try,return,coordination,state,get,handle,join,join,catch,coordination,state,rejected,exception,e,logger,debug,new,parameterized,message,failed,to,add,ignoring,join,e,return,false
Coordinator -> private boolean handleJoinIgnoringExceptions(Join join);1549452878;@return true iff the join was from a new node and was successfully added;private boolean handleJoinIgnoringExceptions(Join join) {_        try {_            return coordinationState.get().handleJoin(join)__        } catch (CoordinationStateRejectedException e) {_            logger.debug(new ParameterizedMessage("failed to add {} - ignoring", join), e)__            return false__        }_    };return,true,iff,the,join,was,from,a,new,node,and,was,successfully,added;private,boolean,handle,join,ignoring,exceptions,join,join,try,return,coordination,state,get,handle,join,join,catch,coordination,state,rejected,exception,e,logger,debug,new,parameterized,message,failed,to,add,ignoring,join,e,return,false
Coordinator -> private boolean handleJoinIgnoringExceptions(Join join);1549608646;@return true iff the join was from a new node and was successfully added;private boolean handleJoinIgnoringExceptions(Join join) {_        try {_            return coordinationState.get().handleJoin(join)__        } catch (CoordinationStateRejectedException e) {_            logger.debug(new ParameterizedMessage("failed to add {} - ignoring", join), e)__            return false__        }_    };return,true,iff,the,join,was,from,a,new,node,and,was,successfully,added;private,boolean,handle,join,ignoring,exceptions,join,join,try,return,coordination,state,get,handle,join,join,catch,coordination,state,rejected,exception,e,logger,debug,new,parameterized,message,failed,to,add,ignoring,join,e,return,false
Coordinator -> private boolean handleJoinIgnoringExceptions(Join join);1551086646;@return true iff the join was from a new node and was successfully added;private boolean handleJoinIgnoringExceptions(Join join) {_        try {_            return coordinationState.get().handleJoin(join)__        } catch (CoordinationStateRejectedException e) {_            logger.debug(new ParameterizedMessage("failed to add {} - ignoring", join), e)__            return false__        }_    };return,true,iff,the,join,was,from,a,new,node,and,was,successfully,added;private,boolean,handle,join,ignoring,exceptions,join,join,try,return,coordination,state,get,handle,join,join,catch,coordination,state,rejected,exception,e,logger,debug,new,parameterized,message,failed,to,add,ignoring,join,e,return,false
Coordinator -> public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration);1544081506;Sets the initial configuration to the given {@link VotingConfiguration}. This method is safe to call_more than once, as long as the argument to each call is the same.__@param votingConfiguration The nodes that should form the initial configuration._@return whether this call successfully set the initial configuration - if false, the cluster has already been bootstrapped.;public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration) {_        synchronized (mutex) {_            final ClusterState currentState = getStateForMasterService()___            if (isInitialConfigurationSet()) {_                return false__            }__            assert currentState.term() == 0 : currentState__            assert currentState.version() == 0 : currentState___            if (mode != Mode.CANDIDATE) {_                throw new CoordinationStateRejectedException("Cannot set initial configuration in mode " + mode)__            }__            final List<DiscoveryNode> knownNodes = new ArrayList<>()__            knownNodes.add(getLocalNode())__            peerFinder.getFoundPeers().forEach(knownNodes::add)__            if (votingConfiguration.hasQuorum(knownNodes.stream().map(DiscoveryNode::getId).collect(Collectors.toList())) == false) {_                throw new CoordinationStateRejectedException("not enough nodes discovered to form a quorum in the initial configuration " +_                    "[knownNodes=" + knownNodes + ", " + votingConfiguration + "]")__            }__            logger.info("setting initial configuration to {}", votingConfiguration)__            final Builder builder = masterService.incrementVersion(currentState)__            final CoordinationMetaData coordinationMetaData = CoordinationMetaData.builder(currentState.coordinationMetaData())_                .lastAcceptedConfiguration(votingConfiguration)_                .lastCommittedConfiguration(votingConfiguration)_                .build()___            MetaData.Builder metaDataBuilder = MetaData.builder()__            _            metaDataBuilder.generateClusterUuidIfNeeded()_ _            metaDataBuilder.coordinationMetaData(coordinationMetaData)__            builder.metaData(metaDataBuilder)__            coordinationState.get().setInitialState(builder.build())__            preVoteCollector.update(getPreVoteResponse(), null)_ _            startElectionScheduler()__            return true__        }_    };sets,the,initial,configuration,to,the,given,link,voting,configuration,this,method,is,safe,to,call,more,than,once,as,long,as,the,argument,to,each,call,is,the,same,param,voting,configuration,the,nodes,that,should,form,the,initial,configuration,return,whether,this,call,successfully,set,the,initial,configuration,if,false,the,cluster,has,already,been,bootstrapped;public,boolean,set,initial,configuration,final,voting,configuration,voting,configuration,synchronized,mutex,final,cluster,state,current,state,get,state,for,master,service,if,is,initial,configuration,set,return,false,assert,current,state,term,0,current,state,assert,current,state,version,0,current,state,if,mode,mode,candidate,throw,new,coordination,state,rejected,exception,cannot,set,initial,configuration,in,mode,mode,final,list,discovery,node,known,nodes,new,array,list,known,nodes,add,get,local,node,peer,finder,get,found,peers,for,each,known,nodes,add,if,voting,configuration,has,quorum,known,nodes,stream,map,discovery,node,get,id,collect,collectors,to,list,false,throw,new,coordination,state,rejected,exception,not,enough,nodes,discovered,to,form,a,quorum,in,the,initial,configuration,known,nodes,known,nodes,voting,configuration,logger,info,setting,initial,configuration,to,voting,configuration,final,builder,builder,master,service,increment,version,current,state,final,coordination,meta,data,coordination,meta,data,coordination,meta,data,builder,current,state,coordination,meta,data,last,accepted,configuration,voting,configuration,last,committed,configuration,voting,configuration,build,meta,data,builder,meta,data,builder,meta,data,builder,meta,data,builder,generate,cluster,uuid,if,needed,meta,data,builder,coordination,meta,data,coordination,meta,data,builder,meta,data,meta,data,builder,coordination,state,get,set,initial,state,builder,build,pre,vote,collector,update,get,pre,vote,response,null,start,election,scheduler,return,true
Coordinator -> public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration);1544170511;Sets the initial configuration to the given {@link VotingConfiguration}. This method is safe to call_more than once, as long as the argument to each call is the same.__@param votingConfiguration The nodes that should form the initial configuration._@return whether this call successfully set the initial configuration - if false, the cluster has already been bootstrapped.;public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration) {_        synchronized (mutex) {_            final ClusterState currentState = getStateForMasterService()___            if (isInitialConfigurationSet()) {_                return false__            }__            assert currentState.term() == 0 : currentState__            assert currentState.version() == 0 : currentState___            if (mode != Mode.CANDIDATE) {_                throw new CoordinationStateRejectedException("Cannot set initial configuration in mode " + mode)__            }__            final List<DiscoveryNode> knownNodes = new ArrayList<>()__            knownNodes.add(getLocalNode())__            peerFinder.getFoundPeers().forEach(knownNodes::add)__            if (votingConfiguration.hasQuorum(knownNodes.stream().map(DiscoveryNode::getId).collect(Collectors.toList())) == false) {_                throw new CoordinationStateRejectedException("not enough nodes discovered to form a quorum in the initial configuration " +_                    "[knownNodes=" + knownNodes + ", " + votingConfiguration + "]")__            }__            logger.info("setting initial configuration to {}", votingConfiguration)__            final Builder builder = masterService.incrementVersion(currentState)__            final CoordinationMetaData coordinationMetaData = CoordinationMetaData.builder(currentState.coordinationMetaData())_                .lastAcceptedConfiguration(votingConfiguration)_                .lastCommittedConfiguration(votingConfiguration)_                .build()___            MetaData.Builder metaDataBuilder = MetaData.builder(currentState.metaData())__            _            metaDataBuilder.generateClusterUuidIfNeeded()_ _            metaDataBuilder.coordinationMetaData(coordinationMetaData)__            builder.metaData(metaDataBuilder)__            coordinationState.get().setInitialState(builder.build())__            preVoteCollector.update(getPreVoteResponse(), null)_ _            startElectionScheduler()__            return true__        }_    };sets,the,initial,configuration,to,the,given,link,voting,configuration,this,method,is,safe,to,call,more,than,once,as,long,as,the,argument,to,each,call,is,the,same,param,voting,configuration,the,nodes,that,should,form,the,initial,configuration,return,whether,this,call,successfully,set,the,initial,configuration,if,false,the,cluster,has,already,been,bootstrapped;public,boolean,set,initial,configuration,final,voting,configuration,voting,configuration,synchronized,mutex,final,cluster,state,current,state,get,state,for,master,service,if,is,initial,configuration,set,return,false,assert,current,state,term,0,current,state,assert,current,state,version,0,current,state,if,mode,mode,candidate,throw,new,coordination,state,rejected,exception,cannot,set,initial,configuration,in,mode,mode,final,list,discovery,node,known,nodes,new,array,list,known,nodes,add,get,local,node,peer,finder,get,found,peers,for,each,known,nodes,add,if,voting,configuration,has,quorum,known,nodes,stream,map,discovery,node,get,id,collect,collectors,to,list,false,throw,new,coordination,state,rejected,exception,not,enough,nodes,discovered,to,form,a,quorum,in,the,initial,configuration,known,nodes,known,nodes,voting,configuration,logger,info,setting,initial,configuration,to,voting,configuration,final,builder,builder,master,service,increment,version,current,state,final,coordination,meta,data,coordination,meta,data,coordination,meta,data,builder,current,state,coordination,meta,data,last,accepted,configuration,voting,configuration,last,committed,configuration,voting,configuration,build,meta,data,builder,meta,data,builder,meta,data,builder,current,state,meta,data,meta,data,builder,generate,cluster,uuid,if,needed,meta,data,builder,coordination,meta,data,coordination,meta,data,builder,meta,data,meta,data,builder,coordination,state,get,set,initial,state,builder,build,pre,vote,collector,update,get,pre,vote,response,null,start,election,scheduler,return,true
Coordinator -> public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration);1544186829;Sets the initial configuration to the given {@link VotingConfiguration}. This method is safe to call_more than once, as long as the argument to each call is the same.__@param votingConfiguration The nodes that should form the initial configuration._@return whether this call successfully set the initial configuration - if false, the cluster has already been bootstrapped.;public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration) {_        synchronized (mutex) {_            final ClusterState currentState = getStateForMasterService()___            if (isInitialConfigurationSet()) {_                return false__            }__            assert currentState.term() == 0 : currentState__            assert currentState.version() == 0 : currentState___            if (mode != Mode.CANDIDATE) {_                throw new CoordinationStateRejectedException("Cannot set initial configuration in mode " + mode)__            }__            final List<DiscoveryNode> knownNodes = new ArrayList<>()__            knownNodes.add(getLocalNode())__            peerFinder.getFoundPeers().forEach(knownNodes::add)__            if (votingConfiguration.hasQuorum(knownNodes.stream().map(DiscoveryNode::getId).collect(Collectors.toList())) == false) {_                throw new CoordinationStateRejectedException("not enough nodes discovered to form a quorum in the initial configuration " +_                    "[knownNodes=" + knownNodes + ", " + votingConfiguration + "]")__            }__            logger.info("setting initial configuration to {}", votingConfiguration)__            final Builder builder = masterService.incrementVersion(currentState)__            final CoordinationMetaData coordinationMetaData = CoordinationMetaData.builder(currentState.coordinationMetaData())_                .lastAcceptedConfiguration(votingConfiguration)_                .lastCommittedConfiguration(votingConfiguration)_                .build()___            MetaData.Builder metaDataBuilder = MetaData.builder(currentState.metaData())__            _            metaDataBuilder.generateClusterUuidIfNeeded()_ _            metaDataBuilder.coordinationMetaData(coordinationMetaData)__            builder.metaData(metaDataBuilder)__            coordinationState.get().setInitialState(builder.build())__            preVoteCollector.update(getPreVoteResponse(), null)_ _            startElectionScheduler()__            return true__        }_    };sets,the,initial,configuration,to,the,given,link,voting,configuration,this,method,is,safe,to,call,more,than,once,as,long,as,the,argument,to,each,call,is,the,same,param,voting,configuration,the,nodes,that,should,form,the,initial,configuration,return,whether,this,call,successfully,set,the,initial,configuration,if,false,the,cluster,has,already,been,bootstrapped;public,boolean,set,initial,configuration,final,voting,configuration,voting,configuration,synchronized,mutex,final,cluster,state,current,state,get,state,for,master,service,if,is,initial,configuration,set,return,false,assert,current,state,term,0,current,state,assert,current,state,version,0,current,state,if,mode,mode,candidate,throw,new,coordination,state,rejected,exception,cannot,set,initial,configuration,in,mode,mode,final,list,discovery,node,known,nodes,new,array,list,known,nodes,add,get,local,node,peer,finder,get,found,peers,for,each,known,nodes,add,if,voting,configuration,has,quorum,known,nodes,stream,map,discovery,node,get,id,collect,collectors,to,list,false,throw,new,coordination,state,rejected,exception,not,enough,nodes,discovered,to,form,a,quorum,in,the,initial,configuration,known,nodes,known,nodes,voting,configuration,logger,info,setting,initial,configuration,to,voting,configuration,final,builder,builder,master,service,increment,version,current,state,final,coordination,meta,data,coordination,meta,data,coordination,meta,data,builder,current,state,coordination,meta,data,last,accepted,configuration,voting,configuration,last,committed,configuration,voting,configuration,build,meta,data,builder,meta,data,builder,meta,data,builder,current,state,meta,data,meta,data,builder,generate,cluster,uuid,if,needed,meta,data,builder,coordination,meta,data,coordination,meta,data,builder,meta,data,meta,data,builder,coordination,state,get,set,initial,state,builder,build,pre,vote,collector,update,get,pre,vote,response,null,start,election,scheduler,return,true
Coordinator -> public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration);1544203400;Sets the initial configuration to the given {@link VotingConfiguration}. This method is safe to call_more than once, as long as the argument to each call is the same.__@param votingConfiguration The nodes that should form the initial configuration._@return whether this call successfully set the initial configuration - if false, the cluster has already been bootstrapped.;public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration) {_        synchronized (mutex) {_            final ClusterState currentState = getStateForMasterService()___            if (isInitialConfigurationSet()) {_                return false__            }__            assert currentState.term() == 0 : currentState__            assert currentState.version() == 0 : currentState___            if (mode != Mode.CANDIDATE) {_                throw new CoordinationStateRejectedException("Cannot set initial configuration in mode " + mode)__            }__            final List<DiscoveryNode> knownNodes = new ArrayList<>()__            knownNodes.add(getLocalNode())__            peerFinder.getFoundPeers().forEach(knownNodes::add)__            if (votingConfiguration.hasQuorum(knownNodes.stream().map(DiscoveryNode::getId).collect(Collectors.toList())) == false) {_                throw new CoordinationStateRejectedException("not enough nodes discovered to form a quorum in the initial configuration " +_                    "[knownNodes=" + knownNodes + ", " + votingConfiguration + "]")__            }__            logger.info("setting initial configuration to {}", votingConfiguration)__            final Builder builder = masterService.incrementVersion(currentState)__            final CoordinationMetaData coordinationMetaData = CoordinationMetaData.builder(currentState.coordinationMetaData())_                .lastAcceptedConfiguration(votingConfiguration)_                .lastCommittedConfiguration(votingConfiguration)_                .build()___            MetaData.Builder metaDataBuilder = MetaData.builder(currentState.metaData())__            _            metaDataBuilder.generateClusterUuidIfNeeded()_ _            metaDataBuilder.coordinationMetaData(coordinationMetaData)__            builder.metaData(metaDataBuilder)__            coordinationState.get().setInitialState(builder.build())__            preVoteCollector.update(getPreVoteResponse(), null)_ _            startElectionScheduler()__            return true__        }_    };sets,the,initial,configuration,to,the,given,link,voting,configuration,this,method,is,safe,to,call,more,than,once,as,long,as,the,argument,to,each,call,is,the,same,param,voting,configuration,the,nodes,that,should,form,the,initial,configuration,return,whether,this,call,successfully,set,the,initial,configuration,if,false,the,cluster,has,already,been,bootstrapped;public,boolean,set,initial,configuration,final,voting,configuration,voting,configuration,synchronized,mutex,final,cluster,state,current,state,get,state,for,master,service,if,is,initial,configuration,set,return,false,assert,current,state,term,0,current,state,assert,current,state,version,0,current,state,if,mode,mode,candidate,throw,new,coordination,state,rejected,exception,cannot,set,initial,configuration,in,mode,mode,final,list,discovery,node,known,nodes,new,array,list,known,nodes,add,get,local,node,peer,finder,get,found,peers,for,each,known,nodes,add,if,voting,configuration,has,quorum,known,nodes,stream,map,discovery,node,get,id,collect,collectors,to,list,false,throw,new,coordination,state,rejected,exception,not,enough,nodes,discovered,to,form,a,quorum,in,the,initial,configuration,known,nodes,known,nodes,voting,configuration,logger,info,setting,initial,configuration,to,voting,configuration,final,builder,builder,master,service,increment,version,current,state,final,coordination,meta,data,coordination,meta,data,coordination,meta,data,builder,current,state,coordination,meta,data,last,accepted,configuration,voting,configuration,last,committed,configuration,voting,configuration,build,meta,data,builder,meta,data,builder,meta,data,builder,current,state,meta,data,meta,data,builder,generate,cluster,uuid,if,needed,meta,data,builder,coordination,meta,data,coordination,meta,data,builder,meta,data,meta,data,builder,coordination,state,get,set,initial,state,builder,build,pre,vote,collector,update,get,pre,vote,response,null,start,election,scheduler,return,true
Coordinator -> public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration);1544254415;Sets the initial configuration to the given {@link VotingConfiguration}. This method is safe to call_more than once, as long as the argument to each call is the same.__@param votingConfiguration The nodes that should form the initial configuration._@return whether this call successfully set the initial configuration - if false, the cluster has already been bootstrapped.;public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration) {_        synchronized (mutex) {_            final ClusterState currentState = getStateForMasterService()___            if (isInitialConfigurationSet()) {_                return false__            }__            if (mode != Mode.CANDIDATE) {_                throw new CoordinationStateRejectedException("Cannot set initial configuration in mode " + mode)__            }__            final List<DiscoveryNode> knownNodes = new ArrayList<>()__            knownNodes.add(getLocalNode())__            peerFinder.getFoundPeers().forEach(knownNodes::add)__            if (votingConfiguration.hasQuorum(knownNodes.stream().map(DiscoveryNode::getId).collect(Collectors.toList())) == false) {_                throw new CoordinationStateRejectedException("not enough nodes discovered to form a quorum in the initial configuration " +_                    "[knownNodes=" + knownNodes + ", " + votingConfiguration + "]")__            }__            logger.info("setting initial configuration to {}", votingConfiguration)__            final Builder builder = masterService.incrementVersion(currentState)__            final CoordinationMetaData coordinationMetaData = CoordinationMetaData.builder(currentState.coordinationMetaData())_                .lastAcceptedConfiguration(votingConfiguration)_                .lastCommittedConfiguration(votingConfiguration)_                .build()___            MetaData.Builder metaDataBuilder = MetaData.builder(currentState.metaData())__            _            metaDataBuilder.generateClusterUuidIfNeeded()_ _            metaDataBuilder.coordinationMetaData(coordinationMetaData)__            builder.metaData(metaDataBuilder)__            coordinationState.get().setInitialState(builder.build())__            preVoteCollector.update(getPreVoteResponse(), null)_ _            startElectionScheduler()__            return true__        }_    };sets,the,initial,configuration,to,the,given,link,voting,configuration,this,method,is,safe,to,call,more,than,once,as,long,as,the,argument,to,each,call,is,the,same,param,voting,configuration,the,nodes,that,should,form,the,initial,configuration,return,whether,this,call,successfully,set,the,initial,configuration,if,false,the,cluster,has,already,been,bootstrapped;public,boolean,set,initial,configuration,final,voting,configuration,voting,configuration,synchronized,mutex,final,cluster,state,current,state,get,state,for,master,service,if,is,initial,configuration,set,return,false,if,mode,mode,candidate,throw,new,coordination,state,rejected,exception,cannot,set,initial,configuration,in,mode,mode,final,list,discovery,node,known,nodes,new,array,list,known,nodes,add,get,local,node,peer,finder,get,found,peers,for,each,known,nodes,add,if,voting,configuration,has,quorum,known,nodes,stream,map,discovery,node,get,id,collect,collectors,to,list,false,throw,new,coordination,state,rejected,exception,not,enough,nodes,discovered,to,form,a,quorum,in,the,initial,configuration,known,nodes,known,nodes,voting,configuration,logger,info,setting,initial,configuration,to,voting,configuration,final,builder,builder,master,service,increment,version,current,state,final,coordination,meta,data,coordination,meta,data,coordination,meta,data,builder,current,state,coordination,meta,data,last,accepted,configuration,voting,configuration,last,committed,configuration,voting,configuration,build,meta,data,builder,meta,data,builder,meta,data,builder,current,state,meta,data,meta,data,builder,generate,cluster,uuid,if,needed,meta,data,builder,coordination,meta,data,coordination,meta,data,builder,meta,data,meta,data,builder,coordination,state,get,set,initial,state,builder,build,pre,vote,collector,update,get,pre,vote,response,null,start,election,scheduler,return,true
Coordinator -> public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration);1544462583;Sets the initial configuration to the given {@link VotingConfiguration}. This method is safe to call_more than once, as long as the argument to each call is the same.__@param votingConfiguration The nodes that should form the initial configuration._@return whether this call successfully set the initial configuration - if false, the cluster has already been bootstrapped.;public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration) {_        synchronized (mutex) {_            final ClusterState currentState = getStateForMasterService()___            if (isInitialConfigurationSet()) {_                return false__            }__            if (mode != Mode.CANDIDATE) {_                throw new CoordinationStateRejectedException("Cannot set initial configuration in mode " + mode)__            }__            final List<DiscoveryNode> knownNodes = new ArrayList<>()__            knownNodes.add(getLocalNode())__            peerFinder.getFoundPeers().forEach(knownNodes::add)__            if (votingConfiguration.hasQuorum(knownNodes.stream().map(DiscoveryNode::getId).collect(Collectors.toList())) == false) {_                throw new CoordinationStateRejectedException("not enough nodes discovered to form a quorum in the initial configuration " +_                    "[knownNodes=" + knownNodes + ", " + votingConfiguration + "]")__            }__            logger.info("setting initial configuration to {}", votingConfiguration)__            final Builder builder = masterService.incrementVersion(currentState)__            final CoordinationMetaData coordinationMetaData = CoordinationMetaData.builder(currentState.coordinationMetaData())_                .lastAcceptedConfiguration(votingConfiguration)_                .lastCommittedConfiguration(votingConfiguration)_                .build()___            MetaData.Builder metaDataBuilder = MetaData.builder(currentState.metaData())__            _            metaDataBuilder.generateClusterUuidIfNeeded()_ _            metaDataBuilder.coordinationMetaData(coordinationMetaData)__            builder.metaData(metaDataBuilder)__            coordinationState.get().setInitialState(builder.build())__            preVoteCollector.update(getPreVoteResponse(), null)_ _            startElectionScheduler()__            return true__        }_    };sets,the,initial,configuration,to,the,given,link,voting,configuration,this,method,is,safe,to,call,more,than,once,as,long,as,the,argument,to,each,call,is,the,same,param,voting,configuration,the,nodes,that,should,form,the,initial,configuration,return,whether,this,call,successfully,set,the,initial,configuration,if,false,the,cluster,has,already,been,bootstrapped;public,boolean,set,initial,configuration,final,voting,configuration,voting,configuration,synchronized,mutex,final,cluster,state,current,state,get,state,for,master,service,if,is,initial,configuration,set,return,false,if,mode,mode,candidate,throw,new,coordination,state,rejected,exception,cannot,set,initial,configuration,in,mode,mode,final,list,discovery,node,known,nodes,new,array,list,known,nodes,add,get,local,node,peer,finder,get,found,peers,for,each,known,nodes,add,if,voting,configuration,has,quorum,known,nodes,stream,map,discovery,node,get,id,collect,collectors,to,list,false,throw,new,coordination,state,rejected,exception,not,enough,nodes,discovered,to,form,a,quorum,in,the,initial,configuration,known,nodes,known,nodes,voting,configuration,logger,info,setting,initial,configuration,to,voting,configuration,final,builder,builder,master,service,increment,version,current,state,final,coordination,meta,data,coordination,meta,data,coordination,meta,data,builder,current,state,coordination,meta,data,last,accepted,configuration,voting,configuration,last,committed,configuration,voting,configuration,build,meta,data,builder,meta,data,builder,meta,data,builder,current,state,meta,data,meta,data,builder,generate,cluster,uuid,if,needed,meta,data,builder,coordination,meta,data,coordination,meta,data,builder,meta,data,meta,data,builder,coordination,state,get,set,initial,state,builder,build,pre,vote,collector,update,get,pre,vote,response,null,start,election,scheduler,return,true
Coordinator -> public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration);1544523743;Sets the initial configuration to the given {@link VotingConfiguration}. This method is safe to call_more than once, as long as the argument to each call is the same.__@param votingConfiguration The nodes that should form the initial configuration._@return whether this call successfully set the initial configuration - if false, the cluster has already been bootstrapped.;public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration) {_        synchronized (mutex) {_            final ClusterState currentState = getStateForMasterService()___            if (isInitialConfigurationSet()) {_                return false__            }__            if (mode != Mode.CANDIDATE) {_                throw new CoordinationStateRejectedException("Cannot set initial configuration in mode " + mode)__            }__            final List<DiscoveryNode> knownNodes = new ArrayList<>()__            knownNodes.add(getLocalNode())__            peerFinder.getFoundPeers().forEach(knownNodes::add)__            if (votingConfiguration.hasQuorum(knownNodes.stream().map(DiscoveryNode::getId).collect(Collectors.toList())) == false) {_                throw new CoordinationStateRejectedException("not enough nodes discovered to form a quorum in the initial configuration " +_                    "[knownNodes=" + knownNodes + ", " + votingConfiguration + "]")__            }__            logger.info("setting initial configuration to {}", votingConfiguration)__            final Builder builder = masterService.incrementVersion(currentState)__            final CoordinationMetaData coordinationMetaData = CoordinationMetaData.builder(currentState.coordinationMetaData())_                .lastAcceptedConfiguration(votingConfiguration)_                .lastCommittedConfiguration(votingConfiguration)_                .build()___            MetaData.Builder metaDataBuilder = MetaData.builder(currentState.metaData())__            _            metaDataBuilder.generateClusterUuidIfNeeded()_ _            metaDataBuilder.coordinationMetaData(coordinationMetaData)__            builder.metaData(metaDataBuilder)__            coordinationState.get().setInitialState(builder.build())__            preVoteCollector.update(getPreVoteResponse(), null)_ _            startElectionScheduler()__            return true__        }_    };sets,the,initial,configuration,to,the,given,link,voting,configuration,this,method,is,safe,to,call,more,than,once,as,long,as,the,argument,to,each,call,is,the,same,param,voting,configuration,the,nodes,that,should,form,the,initial,configuration,return,whether,this,call,successfully,set,the,initial,configuration,if,false,the,cluster,has,already,been,bootstrapped;public,boolean,set,initial,configuration,final,voting,configuration,voting,configuration,synchronized,mutex,final,cluster,state,current,state,get,state,for,master,service,if,is,initial,configuration,set,return,false,if,mode,mode,candidate,throw,new,coordination,state,rejected,exception,cannot,set,initial,configuration,in,mode,mode,final,list,discovery,node,known,nodes,new,array,list,known,nodes,add,get,local,node,peer,finder,get,found,peers,for,each,known,nodes,add,if,voting,configuration,has,quorum,known,nodes,stream,map,discovery,node,get,id,collect,collectors,to,list,false,throw,new,coordination,state,rejected,exception,not,enough,nodes,discovered,to,form,a,quorum,in,the,initial,configuration,known,nodes,known,nodes,voting,configuration,logger,info,setting,initial,configuration,to,voting,configuration,final,builder,builder,master,service,increment,version,current,state,final,coordination,meta,data,coordination,meta,data,coordination,meta,data,builder,current,state,coordination,meta,data,last,accepted,configuration,voting,configuration,last,committed,configuration,voting,configuration,build,meta,data,builder,meta,data,builder,meta,data,builder,current,state,meta,data,meta,data,builder,generate,cluster,uuid,if,needed,meta,data,builder,coordination,meta,data,coordination,meta,data,builder,meta,data,meta,data,builder,coordination,state,get,set,initial,state,builder,build,pre,vote,collector,update,get,pre,vote,response,null,start,election,scheduler,return,true
Coordinator -> public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration);1544546419;Sets the initial configuration to the given {@link VotingConfiguration}. This method is safe to call_more than once, as long as the argument to each call is the same.__@param votingConfiguration The nodes that should form the initial configuration._@return whether this call successfully set the initial configuration - if false, the cluster has already been bootstrapped.;public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration) {_        synchronized (mutex) {_            final ClusterState currentState = getStateForMasterService()___            if (isInitialConfigurationSet()) {_                return false__            }__            if (mode != Mode.CANDIDATE) {_                throw new CoordinationStateRejectedException("Cannot set initial configuration in mode " + mode)__            }__            final List<DiscoveryNode> knownNodes = new ArrayList<>()__            knownNodes.add(getLocalNode())__            peerFinder.getFoundPeers().forEach(knownNodes::add)__            if (votingConfiguration.hasQuorum(knownNodes.stream().map(DiscoveryNode::getId).collect(Collectors.toList())) == false) {_                throw new CoordinationStateRejectedException("not enough nodes discovered to form a quorum in the initial configuration " +_                    "[knownNodes=" + knownNodes + ", " + votingConfiguration + "]")__            }__            logger.info("setting initial configuration to {}", votingConfiguration)__            final Builder builder = masterService.incrementVersion(currentState)__            final CoordinationMetaData coordinationMetaData = CoordinationMetaData.builder(currentState.coordinationMetaData())_                .lastAcceptedConfiguration(votingConfiguration)_                .lastCommittedConfiguration(votingConfiguration)_                .build()___            MetaData.Builder metaDataBuilder = MetaData.builder(currentState.metaData())__            _            metaDataBuilder.generateClusterUuidIfNeeded()_ _            metaDataBuilder.coordinationMetaData(coordinationMetaData)__            builder.metaData(metaDataBuilder)__            coordinationState.get().setInitialState(builder.build())__            preVoteCollector.update(getPreVoteResponse(), null)_ _            startElectionScheduler()__            return true__        }_    };sets,the,initial,configuration,to,the,given,link,voting,configuration,this,method,is,safe,to,call,more,than,once,as,long,as,the,argument,to,each,call,is,the,same,param,voting,configuration,the,nodes,that,should,form,the,initial,configuration,return,whether,this,call,successfully,set,the,initial,configuration,if,false,the,cluster,has,already,been,bootstrapped;public,boolean,set,initial,configuration,final,voting,configuration,voting,configuration,synchronized,mutex,final,cluster,state,current,state,get,state,for,master,service,if,is,initial,configuration,set,return,false,if,mode,mode,candidate,throw,new,coordination,state,rejected,exception,cannot,set,initial,configuration,in,mode,mode,final,list,discovery,node,known,nodes,new,array,list,known,nodes,add,get,local,node,peer,finder,get,found,peers,for,each,known,nodes,add,if,voting,configuration,has,quorum,known,nodes,stream,map,discovery,node,get,id,collect,collectors,to,list,false,throw,new,coordination,state,rejected,exception,not,enough,nodes,discovered,to,form,a,quorum,in,the,initial,configuration,known,nodes,known,nodes,voting,configuration,logger,info,setting,initial,configuration,to,voting,configuration,final,builder,builder,master,service,increment,version,current,state,final,coordination,meta,data,coordination,meta,data,coordination,meta,data,builder,current,state,coordination,meta,data,last,accepted,configuration,voting,configuration,last,committed,configuration,voting,configuration,build,meta,data,builder,meta,data,builder,meta,data,builder,current,state,meta,data,meta,data,builder,generate,cluster,uuid,if,needed,meta,data,builder,coordination,meta,data,coordination,meta,data,builder,meta,data,meta,data,builder,coordination,state,get,set,initial,state,builder,build,pre,vote,collector,update,get,pre,vote,response,null,start,election,scheduler,return,true
Coordinator -> public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration);1545319912;Sets the initial configuration to the given {@link VotingConfiguration}. This method is safe to call_more than once, as long as the argument to each call is the same.__@param votingConfiguration The nodes that should form the initial configuration._@return whether this call successfully set the initial configuration - if false, the cluster has already been bootstrapped.;public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration) {_        synchronized (mutex) {_            final ClusterState currentState = getStateForMasterService()___            if (isInitialConfigurationSet()) {_                return false__            }__            if (mode != Mode.CANDIDATE) {_                throw new CoordinationStateRejectedException("Cannot set initial configuration in mode " + mode)__            }__            final List<DiscoveryNode> knownNodes = new ArrayList<>()__            knownNodes.add(getLocalNode())__            peerFinder.getFoundPeers().forEach(knownNodes::add)__            if (votingConfiguration.hasQuorum(knownNodes.stream().map(DiscoveryNode::getId).collect(Collectors.toList())) == false) {_                throw new CoordinationStateRejectedException("not enough nodes discovered to form a quorum in the initial configuration " +_                    "[knownNodes=" + knownNodes + ", " + votingConfiguration + "]")__            }__            logger.info("setting initial configuration to {}", votingConfiguration)__            final Builder builder = masterService.incrementVersion(currentState)__            final CoordinationMetaData coordinationMetaData = CoordinationMetaData.builder(currentState.coordinationMetaData())_                .lastAcceptedConfiguration(votingConfiguration)_                .lastCommittedConfiguration(votingConfiguration)_                .build()___            MetaData.Builder metaDataBuilder = MetaData.builder(currentState.metaData())__            _            metaDataBuilder.generateClusterUuidIfNeeded()_ _            metaDataBuilder.coordinationMetaData(coordinationMetaData)__            builder.metaData(metaDataBuilder)__            coordinationState.get().setInitialState(builder.build())__            preVoteCollector.update(getPreVoteResponse(), null)_ _            startElectionScheduler()__            return true__        }_    };sets,the,initial,configuration,to,the,given,link,voting,configuration,this,method,is,safe,to,call,more,than,once,as,long,as,the,argument,to,each,call,is,the,same,param,voting,configuration,the,nodes,that,should,form,the,initial,configuration,return,whether,this,call,successfully,set,the,initial,configuration,if,false,the,cluster,has,already,been,bootstrapped;public,boolean,set,initial,configuration,final,voting,configuration,voting,configuration,synchronized,mutex,final,cluster,state,current,state,get,state,for,master,service,if,is,initial,configuration,set,return,false,if,mode,mode,candidate,throw,new,coordination,state,rejected,exception,cannot,set,initial,configuration,in,mode,mode,final,list,discovery,node,known,nodes,new,array,list,known,nodes,add,get,local,node,peer,finder,get,found,peers,for,each,known,nodes,add,if,voting,configuration,has,quorum,known,nodes,stream,map,discovery,node,get,id,collect,collectors,to,list,false,throw,new,coordination,state,rejected,exception,not,enough,nodes,discovered,to,form,a,quorum,in,the,initial,configuration,known,nodes,known,nodes,voting,configuration,logger,info,setting,initial,configuration,to,voting,configuration,final,builder,builder,master,service,increment,version,current,state,final,coordination,meta,data,coordination,meta,data,coordination,meta,data,builder,current,state,coordination,meta,data,last,accepted,configuration,voting,configuration,last,committed,configuration,voting,configuration,build,meta,data,builder,meta,data,builder,meta,data,builder,current,state,meta,data,meta,data,builder,generate,cluster,uuid,if,needed,meta,data,builder,coordination,meta,data,coordination,meta,data,builder,meta,data,meta,data,builder,coordination,state,get,set,initial,state,builder,build,pre,vote,collector,update,get,pre,vote,response,null,start,election,scheduler,return,true
Coordinator -> public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration);1545982624;Sets the initial configuration to the given {@link VotingConfiguration}. This method is safe to call_more than once, as long as the argument to each call is the same.__@param votingConfiguration The nodes that should form the initial configuration._@return whether this call successfully set the initial configuration - if false, the cluster has already been bootstrapped.;public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration) {_        synchronized (mutex) {_            final ClusterState currentState = getStateForMasterService()___            if (isInitialConfigurationSet()) {_                return false__            }__            if (mode != Mode.CANDIDATE) {_                throw new CoordinationStateRejectedException("Cannot set initial configuration in mode " + mode)__            }__            final List<DiscoveryNode> knownNodes = new ArrayList<>()__            knownNodes.add(getLocalNode())__            peerFinder.getFoundPeers().forEach(knownNodes::add)__            if (votingConfiguration.hasQuorum(knownNodes.stream().map(DiscoveryNode::getId).collect(Collectors.toList())) == false) {_                throw new CoordinationStateRejectedException("not enough nodes discovered to form a quorum in the initial configuration " +_                    "[knownNodes=" + knownNodes + ", " + votingConfiguration + "]")__            }__            logger.info("setting initial configuration to {}", votingConfiguration)__            final Builder builder = masterService.incrementVersion(currentState)__            final CoordinationMetaData coordinationMetaData = CoordinationMetaData.builder(currentState.coordinationMetaData())_                .lastAcceptedConfiguration(votingConfiguration)_                .lastCommittedConfiguration(votingConfiguration)_                .build()___            MetaData.Builder metaDataBuilder = MetaData.builder(currentState.metaData())__            _            metaDataBuilder.generateClusterUuidIfNeeded()_ _            metaDataBuilder.coordinationMetaData(coordinationMetaData)__            builder.metaData(metaDataBuilder)__            coordinationState.get().setInitialState(builder.build())__            preVoteCollector.update(getPreVoteResponse(), null)_ _            startElectionScheduler()__            return true__        }_    };sets,the,initial,configuration,to,the,given,link,voting,configuration,this,method,is,safe,to,call,more,than,once,as,long,as,the,argument,to,each,call,is,the,same,param,voting,configuration,the,nodes,that,should,form,the,initial,configuration,return,whether,this,call,successfully,set,the,initial,configuration,if,false,the,cluster,has,already,been,bootstrapped;public,boolean,set,initial,configuration,final,voting,configuration,voting,configuration,synchronized,mutex,final,cluster,state,current,state,get,state,for,master,service,if,is,initial,configuration,set,return,false,if,mode,mode,candidate,throw,new,coordination,state,rejected,exception,cannot,set,initial,configuration,in,mode,mode,final,list,discovery,node,known,nodes,new,array,list,known,nodes,add,get,local,node,peer,finder,get,found,peers,for,each,known,nodes,add,if,voting,configuration,has,quorum,known,nodes,stream,map,discovery,node,get,id,collect,collectors,to,list,false,throw,new,coordination,state,rejected,exception,not,enough,nodes,discovered,to,form,a,quorum,in,the,initial,configuration,known,nodes,known,nodes,voting,configuration,logger,info,setting,initial,configuration,to,voting,configuration,final,builder,builder,master,service,increment,version,current,state,final,coordination,meta,data,coordination,meta,data,coordination,meta,data,builder,current,state,coordination,meta,data,last,accepted,configuration,voting,configuration,last,committed,configuration,voting,configuration,build,meta,data,builder,meta,data,builder,meta,data,builder,current,state,meta,data,meta,data,builder,generate,cluster,uuid,if,needed,meta,data,builder,coordination,meta,data,coordination,meta,data,builder,meta,data,meta,data,builder,coordination,state,get,set,initial,state,builder,build,pre,vote,collector,update,get,pre,vote,response,null,start,election,scheduler,return,true
Coordinator -> public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration);1546592956;Sets the initial configuration to the given {@link VotingConfiguration}. This method is safe to call_more than once, as long as the argument to each call is the same.__@param votingConfiguration The nodes that should form the initial configuration._@return whether this call successfully set the initial configuration - if false, the cluster has already been bootstrapped.;public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration) {_        synchronized (mutex) {_            final ClusterState currentState = getStateForMasterService()___            if (isInitialConfigurationSet()) {_                return false__            }__            if (mode != Mode.CANDIDATE) {_                throw new CoordinationStateRejectedException("Cannot set initial configuration in mode " + mode)__            }__            final List<DiscoveryNode> knownNodes = new ArrayList<>()__            knownNodes.add(getLocalNode())__            peerFinder.getFoundPeers().forEach(knownNodes::add)__            if (votingConfiguration.hasQuorum(knownNodes.stream().map(DiscoveryNode::getId).collect(Collectors.toList())) == false) {_                throw new CoordinationStateRejectedException("not enough nodes discovered to form a quorum in the initial configuration " +_                    "[knownNodes=" + knownNodes + ", " + votingConfiguration + "]")__            }__            logger.info("setting initial configuration to {}", votingConfiguration)__            final CoordinationMetaData coordinationMetaData = CoordinationMetaData.builder(currentState.coordinationMetaData())_                .lastAcceptedConfiguration(votingConfiguration)_                .lastCommittedConfiguration(votingConfiguration)_                .build()___            MetaData.Builder metaDataBuilder = MetaData.builder(currentState.metaData())__            _            metaDataBuilder.generateClusterUuidIfNeeded()_ _            metaDataBuilder.coordinationMetaData(coordinationMetaData)___            coordinationState.get().setInitialState(ClusterState.builder(currentState).metaData(metaDataBuilder).build())__            preVoteCollector.update(getPreVoteResponse(), null)_ _            startElectionScheduler()__            return true__        }_    };sets,the,initial,configuration,to,the,given,link,voting,configuration,this,method,is,safe,to,call,more,than,once,as,long,as,the,argument,to,each,call,is,the,same,param,voting,configuration,the,nodes,that,should,form,the,initial,configuration,return,whether,this,call,successfully,set,the,initial,configuration,if,false,the,cluster,has,already,been,bootstrapped;public,boolean,set,initial,configuration,final,voting,configuration,voting,configuration,synchronized,mutex,final,cluster,state,current,state,get,state,for,master,service,if,is,initial,configuration,set,return,false,if,mode,mode,candidate,throw,new,coordination,state,rejected,exception,cannot,set,initial,configuration,in,mode,mode,final,list,discovery,node,known,nodes,new,array,list,known,nodes,add,get,local,node,peer,finder,get,found,peers,for,each,known,nodes,add,if,voting,configuration,has,quorum,known,nodes,stream,map,discovery,node,get,id,collect,collectors,to,list,false,throw,new,coordination,state,rejected,exception,not,enough,nodes,discovered,to,form,a,quorum,in,the,initial,configuration,known,nodes,known,nodes,voting,configuration,logger,info,setting,initial,configuration,to,voting,configuration,final,coordination,meta,data,coordination,meta,data,coordination,meta,data,builder,current,state,coordination,meta,data,last,accepted,configuration,voting,configuration,last,committed,configuration,voting,configuration,build,meta,data,builder,meta,data,builder,meta,data,builder,current,state,meta,data,meta,data,builder,generate,cluster,uuid,if,needed,meta,data,builder,coordination,meta,data,coordination,meta,data,coordination,state,get,set,initial,state,cluster,state,builder,current,state,meta,data,meta,data,builder,build,pre,vote,collector,update,get,pre,vote,response,null,start,election,scheduler,return,true
Coordinator -> public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration);1546850547;Sets the initial configuration to the given {@link VotingConfiguration}. This method is safe to call_more than once, as long as the argument to each call is the same.__@param votingConfiguration The nodes that should form the initial configuration._@return whether this call successfully set the initial configuration - if false, the cluster has already been bootstrapped.;public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration) {_        synchronized (mutex) {_            final ClusterState currentState = getStateForMasterService()___            if (isInitialConfigurationSet()) {_                return false__            }__            if (mode != Mode.CANDIDATE) {_                throw new CoordinationStateRejectedException("Cannot set initial configuration in mode " + mode)__            }__            final List<DiscoveryNode> knownNodes = new ArrayList<>()__            knownNodes.add(getLocalNode())__            peerFinder.getFoundPeers().forEach(knownNodes::add)__            if (votingConfiguration.hasQuorum(knownNodes.stream().map(DiscoveryNode::getId).collect(Collectors.toList())) == false) {_                throw new CoordinationStateRejectedException("not enough nodes discovered to form a quorum in the initial configuration " +_                    "[knownNodes=" + knownNodes + ", " + votingConfiguration + "]")__            }__            logger.info("setting initial configuration to {}", votingConfiguration)__            final CoordinationMetaData coordinationMetaData = CoordinationMetaData.builder(currentState.coordinationMetaData())_                .lastAcceptedConfiguration(votingConfiguration)_                .lastCommittedConfiguration(votingConfiguration)_                .build()___            MetaData.Builder metaDataBuilder = MetaData.builder(currentState.metaData())__            _            metaDataBuilder.generateClusterUuidIfNeeded()_ _            metaDataBuilder.coordinationMetaData(coordinationMetaData)___            coordinationState.get().setInitialState(ClusterState.builder(currentState).metaData(metaDataBuilder).build())__            preVoteCollector.update(getPreVoteResponse(), null)_ _            startElectionScheduler()__            return true__        }_    };sets,the,initial,configuration,to,the,given,link,voting,configuration,this,method,is,safe,to,call,more,than,once,as,long,as,the,argument,to,each,call,is,the,same,param,voting,configuration,the,nodes,that,should,form,the,initial,configuration,return,whether,this,call,successfully,set,the,initial,configuration,if,false,the,cluster,has,already,been,bootstrapped;public,boolean,set,initial,configuration,final,voting,configuration,voting,configuration,synchronized,mutex,final,cluster,state,current,state,get,state,for,master,service,if,is,initial,configuration,set,return,false,if,mode,mode,candidate,throw,new,coordination,state,rejected,exception,cannot,set,initial,configuration,in,mode,mode,final,list,discovery,node,known,nodes,new,array,list,known,nodes,add,get,local,node,peer,finder,get,found,peers,for,each,known,nodes,add,if,voting,configuration,has,quorum,known,nodes,stream,map,discovery,node,get,id,collect,collectors,to,list,false,throw,new,coordination,state,rejected,exception,not,enough,nodes,discovered,to,form,a,quorum,in,the,initial,configuration,known,nodes,known,nodes,voting,configuration,logger,info,setting,initial,configuration,to,voting,configuration,final,coordination,meta,data,coordination,meta,data,coordination,meta,data,builder,current,state,coordination,meta,data,last,accepted,configuration,voting,configuration,last,committed,configuration,voting,configuration,build,meta,data,builder,meta,data,builder,meta,data,builder,current,state,meta,data,meta,data,builder,generate,cluster,uuid,if,needed,meta,data,builder,coordination,meta,data,coordination,meta,data,coordination,state,get,set,initial,state,cluster,state,builder,current,state,meta,data,meta,data,builder,build,pre,vote,collector,update,get,pre,vote,response,null,start,election,scheduler,return,true
Coordinator -> public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration);1547049229;Sets the initial configuration to the given {@link VotingConfiguration}. This method is safe to call_more than once, as long as the argument to each call is the same.__@param votingConfiguration The nodes that should form the initial configuration._@return whether this call successfully set the initial configuration - if false, the cluster has already been bootstrapped.;public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration) {_        synchronized (mutex) {_            final ClusterState currentState = getStateForMasterService()___            if (isInitialConfigurationSet()) {_                return false__            }__            if (mode != Mode.CANDIDATE) {_                throw new CoordinationStateRejectedException("Cannot set initial configuration in mode " + mode)__            }__            final List<DiscoveryNode> knownNodes = new ArrayList<>()__            knownNodes.add(getLocalNode())__            peerFinder.getFoundPeers().forEach(knownNodes::add)__            if (votingConfiguration.hasQuorum(knownNodes.stream().map(DiscoveryNode::getId).collect(Collectors.toList())) == false) {_                throw new CoordinationStateRejectedException("not enough nodes discovered to form a quorum in the initial configuration " +_                    "[knownNodes=" + knownNodes + ", " + votingConfiguration + "]")__            }__            logger.info("setting initial configuration to {}", votingConfiguration)__            final CoordinationMetaData coordinationMetaData = CoordinationMetaData.builder(currentState.coordinationMetaData())_                .lastAcceptedConfiguration(votingConfiguration)_                .lastCommittedConfiguration(votingConfiguration)_                .build()___            MetaData.Builder metaDataBuilder = MetaData.builder(currentState.metaData())__            _            metaDataBuilder.generateClusterUuidIfNeeded()_ _            metaDataBuilder.coordinationMetaData(coordinationMetaData)___            coordinationState.get().setInitialState(ClusterState.builder(currentState).metaData(metaDataBuilder).build())__            preVoteCollector.update(getPreVoteResponse(), null)_ _            startElectionScheduler()__            return true__        }_    };sets,the,initial,configuration,to,the,given,link,voting,configuration,this,method,is,safe,to,call,more,than,once,as,long,as,the,argument,to,each,call,is,the,same,param,voting,configuration,the,nodes,that,should,form,the,initial,configuration,return,whether,this,call,successfully,set,the,initial,configuration,if,false,the,cluster,has,already,been,bootstrapped;public,boolean,set,initial,configuration,final,voting,configuration,voting,configuration,synchronized,mutex,final,cluster,state,current,state,get,state,for,master,service,if,is,initial,configuration,set,return,false,if,mode,mode,candidate,throw,new,coordination,state,rejected,exception,cannot,set,initial,configuration,in,mode,mode,final,list,discovery,node,known,nodes,new,array,list,known,nodes,add,get,local,node,peer,finder,get,found,peers,for,each,known,nodes,add,if,voting,configuration,has,quorum,known,nodes,stream,map,discovery,node,get,id,collect,collectors,to,list,false,throw,new,coordination,state,rejected,exception,not,enough,nodes,discovered,to,form,a,quorum,in,the,initial,configuration,known,nodes,known,nodes,voting,configuration,logger,info,setting,initial,configuration,to,voting,configuration,final,coordination,meta,data,coordination,meta,data,coordination,meta,data,builder,current,state,coordination,meta,data,last,accepted,configuration,voting,configuration,last,committed,configuration,voting,configuration,build,meta,data,builder,meta,data,builder,meta,data,builder,current,state,meta,data,meta,data,builder,generate,cluster,uuid,if,needed,meta,data,builder,coordination,meta,data,coordination,meta,data,coordination,state,get,set,initial,state,cluster,state,builder,current,state,meta,data,meta,data,builder,build,pre,vote,collector,update,get,pre,vote,response,null,start,election,scheduler,return,true
Coordinator -> public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration);1547121470;Sets the initial configuration to the given {@link VotingConfiguration}. This method is safe to call_more than once, as long as the argument to each call is the same.__@param votingConfiguration The nodes that should form the initial configuration._@return whether this call successfully set the initial configuration - if false, the cluster has already been bootstrapped.;public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration) {_        synchronized (mutex) {_            final ClusterState currentState = getStateForMasterService()___            if (isInitialConfigurationSet()) {_                return false__            }__            if (mode != Mode.CANDIDATE) {_                throw new CoordinationStateRejectedException("Cannot set initial configuration in mode " + mode)__            }__            final List<DiscoveryNode> knownNodes = new ArrayList<>()__            knownNodes.add(getLocalNode())__            peerFinder.getFoundPeers().forEach(knownNodes::add)__            if (votingConfiguration.hasQuorum(knownNodes.stream().map(DiscoveryNode::getId).collect(Collectors.toList())) == false) {_                throw new CoordinationStateRejectedException("not enough nodes discovered to form a quorum in the initial configuration " +_                    "[knownNodes=" + knownNodes + ", " + votingConfiguration + "]")__            }__            logger.info("setting initial configuration to {}", votingConfiguration)__            final CoordinationMetaData coordinationMetaData = CoordinationMetaData.builder(currentState.coordinationMetaData())_                .lastAcceptedConfiguration(votingConfiguration)_                .lastCommittedConfiguration(votingConfiguration)_                .build()___            MetaData.Builder metaDataBuilder = MetaData.builder(currentState.metaData())__            _            metaDataBuilder.generateClusterUuidIfNeeded()_ _            metaDataBuilder.coordinationMetaData(coordinationMetaData)___            coordinationState.get().setInitialState(ClusterState.builder(currentState).metaData(metaDataBuilder).build())__            preVoteCollector.update(getPreVoteResponse(), null)_ _            startElectionScheduler()__            return true__        }_    };sets,the,initial,configuration,to,the,given,link,voting,configuration,this,method,is,safe,to,call,more,than,once,as,long,as,the,argument,to,each,call,is,the,same,param,voting,configuration,the,nodes,that,should,form,the,initial,configuration,return,whether,this,call,successfully,set,the,initial,configuration,if,false,the,cluster,has,already,been,bootstrapped;public,boolean,set,initial,configuration,final,voting,configuration,voting,configuration,synchronized,mutex,final,cluster,state,current,state,get,state,for,master,service,if,is,initial,configuration,set,return,false,if,mode,mode,candidate,throw,new,coordination,state,rejected,exception,cannot,set,initial,configuration,in,mode,mode,final,list,discovery,node,known,nodes,new,array,list,known,nodes,add,get,local,node,peer,finder,get,found,peers,for,each,known,nodes,add,if,voting,configuration,has,quorum,known,nodes,stream,map,discovery,node,get,id,collect,collectors,to,list,false,throw,new,coordination,state,rejected,exception,not,enough,nodes,discovered,to,form,a,quorum,in,the,initial,configuration,known,nodes,known,nodes,voting,configuration,logger,info,setting,initial,configuration,to,voting,configuration,final,coordination,meta,data,coordination,meta,data,coordination,meta,data,builder,current,state,coordination,meta,data,last,accepted,configuration,voting,configuration,last,committed,configuration,voting,configuration,build,meta,data,builder,meta,data,builder,meta,data,builder,current,state,meta,data,meta,data,builder,generate,cluster,uuid,if,needed,meta,data,builder,coordination,meta,data,coordination,meta,data,coordination,state,get,set,initial,state,cluster,state,builder,current,state,meta,data,meta,data,builder,build,pre,vote,collector,update,get,pre,vote,response,null,start,election,scheduler,return,true
Coordinator -> public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration);1547219208;Sets the initial configuration to the given {@link VotingConfiguration}. This method is safe to call_more than once, as long as the argument to each call is the same.__@param votingConfiguration The nodes that should form the initial configuration._@return whether this call successfully set the initial configuration - if false, the cluster has already been bootstrapped.;public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration) {_        synchronized (mutex) {_            final ClusterState currentState = getStateForMasterService()___            if (isInitialConfigurationSet()) {_                return false__            }__            if (mode != Mode.CANDIDATE) {_                throw new CoordinationStateRejectedException("Cannot set initial configuration in mode " + mode)__            }__            final List<DiscoveryNode> knownNodes = new ArrayList<>()__            knownNodes.add(getLocalNode())__            peerFinder.getFoundPeers().forEach(knownNodes::add)__            if (votingConfiguration.hasQuorum(knownNodes.stream().map(DiscoveryNode::getId).collect(Collectors.toList())) == false) {_                throw new CoordinationStateRejectedException("not enough nodes discovered to form a quorum in the initial configuration " +_                    "[knownNodes=" + knownNodes + ", " + votingConfiguration + "]")__            }__            logger.info("setting initial configuration to {}", votingConfiguration)__            final CoordinationMetaData coordinationMetaData = CoordinationMetaData.builder(currentState.coordinationMetaData())_                .lastAcceptedConfiguration(votingConfiguration)_                .lastCommittedConfiguration(votingConfiguration)_                .build()___            MetaData.Builder metaDataBuilder = MetaData.builder(currentState.metaData())__            _            metaDataBuilder.generateClusterUuidIfNeeded()_ _            metaDataBuilder.coordinationMetaData(coordinationMetaData)___            coordinationState.get().setInitialState(ClusterState.builder(currentState).metaData(metaDataBuilder).build())__            preVoteCollector.update(getPreVoteResponse(), null)_ _            startElectionScheduler()__            return true__        }_    };sets,the,initial,configuration,to,the,given,link,voting,configuration,this,method,is,safe,to,call,more,than,once,as,long,as,the,argument,to,each,call,is,the,same,param,voting,configuration,the,nodes,that,should,form,the,initial,configuration,return,whether,this,call,successfully,set,the,initial,configuration,if,false,the,cluster,has,already,been,bootstrapped;public,boolean,set,initial,configuration,final,voting,configuration,voting,configuration,synchronized,mutex,final,cluster,state,current,state,get,state,for,master,service,if,is,initial,configuration,set,return,false,if,mode,mode,candidate,throw,new,coordination,state,rejected,exception,cannot,set,initial,configuration,in,mode,mode,final,list,discovery,node,known,nodes,new,array,list,known,nodes,add,get,local,node,peer,finder,get,found,peers,for,each,known,nodes,add,if,voting,configuration,has,quorum,known,nodes,stream,map,discovery,node,get,id,collect,collectors,to,list,false,throw,new,coordination,state,rejected,exception,not,enough,nodes,discovered,to,form,a,quorum,in,the,initial,configuration,known,nodes,known,nodes,voting,configuration,logger,info,setting,initial,configuration,to,voting,configuration,final,coordination,meta,data,coordination,meta,data,coordination,meta,data,builder,current,state,coordination,meta,data,last,accepted,configuration,voting,configuration,last,committed,configuration,voting,configuration,build,meta,data,builder,meta,data,builder,meta,data,builder,current,state,meta,data,meta,data,builder,generate,cluster,uuid,if,needed,meta,data,builder,coordination,meta,data,coordination,meta,data,coordination,state,get,set,initial,state,cluster,state,builder,current,state,meta,data,meta,data,builder,build,pre,vote,collector,update,get,pre,vote,response,null,start,election,scheduler,return,true
Coordinator -> public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration);1547573528;Sets the initial configuration to the given {@link VotingConfiguration}. This method is safe to call_more than once, as long as the argument to each call is the same.__@param votingConfiguration The nodes that should form the initial configuration._@return whether this call successfully set the initial configuration - if false, the cluster has already been bootstrapped.;public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration) {_        synchronized (mutex) {_            final ClusterState currentState = getStateForMasterService()___            if (isInitialConfigurationSet()) {_                return false__            }__            if (mode != Mode.CANDIDATE) {_                throw new CoordinationStateRejectedException("Cannot set initial configuration in mode " + mode)__            }__            final List<DiscoveryNode> knownNodes = new ArrayList<>()__            knownNodes.add(getLocalNode())__            peerFinder.getFoundPeers().forEach(knownNodes::add)__            if (votingConfiguration.hasQuorum(knownNodes.stream().map(DiscoveryNode::getId).collect(Collectors.toList())) == false) {_                throw new CoordinationStateRejectedException("not enough nodes discovered to form a quorum in the initial configuration " +_                    "[knownNodes=" + knownNodes + ", " + votingConfiguration + "]")__            }__            logger.info("setting initial configuration to {}", votingConfiguration)__            final CoordinationMetaData coordinationMetaData = CoordinationMetaData.builder(currentState.coordinationMetaData())_                .lastAcceptedConfiguration(votingConfiguration)_                .lastCommittedConfiguration(votingConfiguration)_                .build()___            MetaData.Builder metaDataBuilder = MetaData.builder(currentState.metaData())__            _            metaDataBuilder.generateClusterUuidIfNeeded()_ _            metaDataBuilder.coordinationMetaData(coordinationMetaData)___            coordinationState.get().setInitialState(ClusterState.builder(currentState).metaData(metaDataBuilder).build())__            preVoteCollector.update(getPreVoteResponse(), null)_ _            startElectionScheduler()__            return true__        }_    };sets,the,initial,configuration,to,the,given,link,voting,configuration,this,method,is,safe,to,call,more,than,once,as,long,as,the,argument,to,each,call,is,the,same,param,voting,configuration,the,nodes,that,should,form,the,initial,configuration,return,whether,this,call,successfully,set,the,initial,configuration,if,false,the,cluster,has,already,been,bootstrapped;public,boolean,set,initial,configuration,final,voting,configuration,voting,configuration,synchronized,mutex,final,cluster,state,current,state,get,state,for,master,service,if,is,initial,configuration,set,return,false,if,mode,mode,candidate,throw,new,coordination,state,rejected,exception,cannot,set,initial,configuration,in,mode,mode,final,list,discovery,node,known,nodes,new,array,list,known,nodes,add,get,local,node,peer,finder,get,found,peers,for,each,known,nodes,add,if,voting,configuration,has,quorum,known,nodes,stream,map,discovery,node,get,id,collect,collectors,to,list,false,throw,new,coordination,state,rejected,exception,not,enough,nodes,discovered,to,form,a,quorum,in,the,initial,configuration,known,nodes,known,nodes,voting,configuration,logger,info,setting,initial,configuration,to,voting,configuration,final,coordination,meta,data,coordination,meta,data,coordination,meta,data,builder,current,state,coordination,meta,data,last,accepted,configuration,voting,configuration,last,committed,configuration,voting,configuration,build,meta,data,builder,meta,data,builder,meta,data,builder,current,state,meta,data,meta,data,builder,generate,cluster,uuid,if,needed,meta,data,builder,coordination,meta,data,coordination,meta,data,coordination,state,get,set,initial,state,cluster,state,builder,current,state,meta,data,meta,data,builder,build,pre,vote,collector,update,get,pre,vote,response,null,start,election,scheduler,return,true
Coordinator -> public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration);1547625930;Sets the initial configuration to the given {@link VotingConfiguration}. This method is safe to call_more than once, as long as the argument to each call is the same.__@param votingConfiguration The nodes that should form the initial configuration._@return whether this call successfully set the initial configuration - if false, the cluster has already been bootstrapped.;public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration) {_        synchronized (mutex) {_            final ClusterState currentState = getStateForMasterService()___            if (isInitialConfigurationSet()) {_                return false__            }__            if (mode != Mode.CANDIDATE) {_                throw new CoordinationStateRejectedException("Cannot set initial configuration in mode " + mode)__            }__            final List<DiscoveryNode> knownNodes = new ArrayList<>()__            knownNodes.add(getLocalNode())__            peerFinder.getFoundPeers().forEach(knownNodes::add)__            if (votingConfiguration.hasQuorum(knownNodes.stream().map(DiscoveryNode::getId).collect(Collectors.toList())) == false) {_                throw new CoordinationStateRejectedException("not enough nodes discovered to form a quorum in the initial configuration " +_                    "[knownNodes=" + knownNodes + ", " + votingConfiguration + "]")__            }__            logger.info("setting initial configuration to {}", votingConfiguration)__            final CoordinationMetaData coordinationMetaData = CoordinationMetaData.builder(currentState.coordinationMetaData())_                .lastAcceptedConfiguration(votingConfiguration)_                .lastCommittedConfiguration(votingConfiguration)_                .build()___            MetaData.Builder metaDataBuilder = MetaData.builder(currentState.metaData())__            _            metaDataBuilder.generateClusterUuidIfNeeded()_ _            metaDataBuilder.coordinationMetaData(coordinationMetaData)___            coordinationState.get().setInitialState(ClusterState.builder(currentState).metaData(metaDataBuilder).build())__            preVoteCollector.update(getPreVoteResponse(), null)_ _            startElectionScheduler()__            return true__        }_    };sets,the,initial,configuration,to,the,given,link,voting,configuration,this,method,is,safe,to,call,more,than,once,as,long,as,the,argument,to,each,call,is,the,same,param,voting,configuration,the,nodes,that,should,form,the,initial,configuration,return,whether,this,call,successfully,set,the,initial,configuration,if,false,the,cluster,has,already,been,bootstrapped;public,boolean,set,initial,configuration,final,voting,configuration,voting,configuration,synchronized,mutex,final,cluster,state,current,state,get,state,for,master,service,if,is,initial,configuration,set,return,false,if,mode,mode,candidate,throw,new,coordination,state,rejected,exception,cannot,set,initial,configuration,in,mode,mode,final,list,discovery,node,known,nodes,new,array,list,known,nodes,add,get,local,node,peer,finder,get,found,peers,for,each,known,nodes,add,if,voting,configuration,has,quorum,known,nodes,stream,map,discovery,node,get,id,collect,collectors,to,list,false,throw,new,coordination,state,rejected,exception,not,enough,nodes,discovered,to,form,a,quorum,in,the,initial,configuration,known,nodes,known,nodes,voting,configuration,logger,info,setting,initial,configuration,to,voting,configuration,final,coordination,meta,data,coordination,meta,data,coordination,meta,data,builder,current,state,coordination,meta,data,last,accepted,configuration,voting,configuration,last,committed,configuration,voting,configuration,build,meta,data,builder,meta,data,builder,meta,data,builder,current,state,meta,data,meta,data,builder,generate,cluster,uuid,if,needed,meta,data,builder,coordination,meta,data,coordination,meta,data,coordination,state,get,set,initial,state,cluster,state,builder,current,state,meta,data,meta,data,builder,build,pre,vote,collector,update,get,pre,vote,response,null,start,election,scheduler,return,true
Coordinator -> public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration);1548155031;Sets the initial configuration to the given {@link VotingConfiguration}. This method is safe to call_more than once, as long as the argument to each call is the same.__@param votingConfiguration The nodes that should form the initial configuration._@return whether this call successfully set the initial configuration - if false, the cluster has already been bootstrapped.;public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration) {_        synchronized (mutex) {_            final ClusterState currentState = getStateForMasterService()___            if (isInitialConfigurationSet()) {_                logger.debug("initial configuration already set, ignoring {}", votingConfiguration)__                return false__            }__            final List<DiscoveryNode> knownNodes = new ArrayList<>()__            knownNodes.add(getLocalNode())__            peerFinder.getFoundPeers().forEach(knownNodes::add)__            if (votingConfiguration.hasQuorum(knownNodes.stream().map(DiscoveryNode::getId).collect(Collectors.toList())) == false) {_                throw new CoordinationStateRejectedException("not enough nodes discovered to form a quorum in the initial configuration " +_                    "[knownNodes=" + knownNodes + ", " + votingConfiguration + "]")__            }__            logger.info("setting initial configuration to {}", votingConfiguration)__            final CoordinationMetaData coordinationMetaData = CoordinationMetaData.builder(currentState.coordinationMetaData())_                .lastAcceptedConfiguration(votingConfiguration)_                .lastCommittedConfiguration(votingConfiguration)_                .build()___            MetaData.Builder metaDataBuilder = MetaData.builder(currentState.metaData())__            _            metaDataBuilder.generateClusterUuidIfNeeded()_ _            metaDataBuilder.coordinationMetaData(coordinationMetaData)___            coordinationState.get().setInitialState(ClusterState.builder(currentState).metaData(metaDataBuilder).build())__            preVoteCollector.update(getPreVoteResponse(), null)_ _            startElectionScheduler()__            return true__        }_    };sets,the,initial,configuration,to,the,given,link,voting,configuration,this,method,is,safe,to,call,more,than,once,as,long,as,the,argument,to,each,call,is,the,same,param,voting,configuration,the,nodes,that,should,form,the,initial,configuration,return,whether,this,call,successfully,set,the,initial,configuration,if,false,the,cluster,has,already,been,bootstrapped;public,boolean,set,initial,configuration,final,voting,configuration,voting,configuration,synchronized,mutex,final,cluster,state,current,state,get,state,for,master,service,if,is,initial,configuration,set,logger,debug,initial,configuration,already,set,ignoring,voting,configuration,return,false,final,list,discovery,node,known,nodes,new,array,list,known,nodes,add,get,local,node,peer,finder,get,found,peers,for,each,known,nodes,add,if,voting,configuration,has,quorum,known,nodes,stream,map,discovery,node,get,id,collect,collectors,to,list,false,throw,new,coordination,state,rejected,exception,not,enough,nodes,discovered,to,form,a,quorum,in,the,initial,configuration,known,nodes,known,nodes,voting,configuration,logger,info,setting,initial,configuration,to,voting,configuration,final,coordination,meta,data,coordination,meta,data,coordination,meta,data,builder,current,state,coordination,meta,data,last,accepted,configuration,voting,configuration,last,committed,configuration,voting,configuration,build,meta,data,builder,meta,data,builder,meta,data,builder,current,state,meta,data,meta,data,builder,generate,cluster,uuid,if,needed,meta,data,builder,coordination,meta,data,coordination,meta,data,coordination,state,get,set,initial,state,cluster,state,builder,current,state,meta,data,meta,data,builder,build,pre,vote,collector,update,get,pre,vote,response,null,start,election,scheduler,return,true
Coordinator -> public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration);1548157863;Sets the initial configuration to the given {@link VotingConfiguration}. This method is safe to call_more than once, as long as the argument to each call is the same.__@param votingConfiguration The nodes that should form the initial configuration._@return whether this call successfully set the initial configuration - if false, the cluster has already been bootstrapped.;public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration) {_        synchronized (mutex) {_            final ClusterState currentState = getStateForMasterService()___            if (isInitialConfigurationSet()) {_                logger.debug("initial configuration already set, ignoring {}", votingConfiguration)__                return false__            }__            final List<DiscoveryNode> knownNodes = new ArrayList<>()__            knownNodes.add(getLocalNode())__            peerFinder.getFoundPeers().forEach(knownNodes::add)__            if (votingConfiguration.hasQuorum(knownNodes.stream().map(DiscoveryNode::getId).collect(Collectors.toList())) == false) {_                throw new CoordinationStateRejectedException("not enough nodes discovered to form a quorum in the initial configuration " +_                    "[knownNodes=" + knownNodes + ", " + votingConfiguration + "]")__            }__            logger.info("setting initial configuration to {}", votingConfiguration)__            final CoordinationMetaData coordinationMetaData = CoordinationMetaData.builder(currentState.coordinationMetaData())_                .lastAcceptedConfiguration(votingConfiguration)_                .lastCommittedConfiguration(votingConfiguration)_                .build()___            MetaData.Builder metaDataBuilder = MetaData.builder(currentState.metaData())__            _            metaDataBuilder.generateClusterUuidIfNeeded()_ _            metaDataBuilder.coordinationMetaData(coordinationMetaData)___            coordinationState.get().setInitialState(ClusterState.builder(currentState).metaData(metaDataBuilder).build())__            preVoteCollector.update(getPreVoteResponse(), null)_ _            startElectionScheduler()__            return true__        }_    };sets,the,initial,configuration,to,the,given,link,voting,configuration,this,method,is,safe,to,call,more,than,once,as,long,as,the,argument,to,each,call,is,the,same,param,voting,configuration,the,nodes,that,should,form,the,initial,configuration,return,whether,this,call,successfully,set,the,initial,configuration,if,false,the,cluster,has,already,been,bootstrapped;public,boolean,set,initial,configuration,final,voting,configuration,voting,configuration,synchronized,mutex,final,cluster,state,current,state,get,state,for,master,service,if,is,initial,configuration,set,logger,debug,initial,configuration,already,set,ignoring,voting,configuration,return,false,final,list,discovery,node,known,nodes,new,array,list,known,nodes,add,get,local,node,peer,finder,get,found,peers,for,each,known,nodes,add,if,voting,configuration,has,quorum,known,nodes,stream,map,discovery,node,get,id,collect,collectors,to,list,false,throw,new,coordination,state,rejected,exception,not,enough,nodes,discovered,to,form,a,quorum,in,the,initial,configuration,known,nodes,known,nodes,voting,configuration,logger,info,setting,initial,configuration,to,voting,configuration,final,coordination,meta,data,coordination,meta,data,coordination,meta,data,builder,current,state,coordination,meta,data,last,accepted,configuration,voting,configuration,last,committed,configuration,voting,configuration,build,meta,data,builder,meta,data,builder,meta,data,builder,current,state,meta,data,meta,data,builder,generate,cluster,uuid,if,needed,meta,data,builder,coordination,meta,data,coordination,meta,data,coordination,state,get,set,initial,state,cluster,state,builder,current,state,meta,data,meta,data,builder,build,pre,vote,collector,update,get,pre,vote,response,null,start,election,scheduler,return,true
Coordinator -> public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration);1548245411;Sets the initial configuration to the given {@link VotingConfiguration}. This method is safe to call_more than once, as long as the argument to each call is the same.__@param votingConfiguration The nodes that should form the initial configuration._@return whether this call successfully set the initial configuration - if false, the cluster has already been bootstrapped.;public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration) {_        synchronized (mutex) {_            final ClusterState currentState = getStateForMasterService()___            if (isInitialConfigurationSet()) {_                logger.debug("initial configuration already set, ignoring {}", votingConfiguration)__                return false__            }__            if (getLocalNode().isMasterNode() == false) {_                logger.debug("skip setting initial configuration as local node is not a master-eligible node")__                throw new CoordinationStateRejectedException(_                    "this node is not master-eligible, but cluster bootstrapping can only happen on a master-eligible node")__            }__            if (votingConfiguration.getNodeIds().contains(getLocalNode().getId()) == false) {_                logger.debug("skip setting initial configuration as local node is not part of initial configuration")__                throw new CoordinationStateRejectedException("local node is not part of initial configuration")__            }__            final List<DiscoveryNode> knownNodes = new ArrayList<>()__            knownNodes.add(getLocalNode())__            peerFinder.getFoundPeers().forEach(knownNodes::add)___            if (votingConfiguration.hasQuorum(knownNodes.stream().map(DiscoveryNode::getId).collect(Collectors.toList())) == false) {_                logger.debug("skip setting initial configuration as not enough nodes discovered to form a quorum in the " +_                    "initial configuration [knownNodes={}, {}]", knownNodes, votingConfiguration)__                throw new CoordinationStateRejectedException("not enough nodes discovered to form a quorum in the initial configuration " +_                    "[knownNodes=" + knownNodes + ", " + votingConfiguration + "]")__            }__            logger.info("setting initial configuration to {}", votingConfiguration)__            final CoordinationMetaData coordinationMetaData = CoordinationMetaData.builder(currentState.coordinationMetaData())_                .lastAcceptedConfiguration(votingConfiguration)_                .lastCommittedConfiguration(votingConfiguration)_                .build()___            MetaData.Builder metaDataBuilder = MetaData.builder(currentState.metaData())__            _            metaDataBuilder.generateClusterUuidIfNeeded()_ _            metaDataBuilder.coordinationMetaData(coordinationMetaData)___            coordinationState.get().setInitialState(ClusterState.builder(currentState).metaData(metaDataBuilder).build())__            assert electionQuorumContainsLocalNode(getLastAcceptedState()) :_                "initial state does not have local node in its election quorum: " + getLastAcceptedState().coordinationMetaData()__            preVoteCollector.update(getPreVoteResponse(), null)_ _            startElectionScheduler()__            return true__        }_    };sets,the,initial,configuration,to,the,given,link,voting,configuration,this,method,is,safe,to,call,more,than,once,as,long,as,the,argument,to,each,call,is,the,same,param,voting,configuration,the,nodes,that,should,form,the,initial,configuration,return,whether,this,call,successfully,set,the,initial,configuration,if,false,the,cluster,has,already,been,bootstrapped;public,boolean,set,initial,configuration,final,voting,configuration,voting,configuration,synchronized,mutex,final,cluster,state,current,state,get,state,for,master,service,if,is,initial,configuration,set,logger,debug,initial,configuration,already,set,ignoring,voting,configuration,return,false,if,get,local,node,is,master,node,false,logger,debug,skip,setting,initial,configuration,as,local,node,is,not,a,master,eligible,node,throw,new,coordination,state,rejected,exception,this,node,is,not,master,eligible,but,cluster,bootstrapping,can,only,happen,on,a,master,eligible,node,if,voting,configuration,get,node,ids,contains,get,local,node,get,id,false,logger,debug,skip,setting,initial,configuration,as,local,node,is,not,part,of,initial,configuration,throw,new,coordination,state,rejected,exception,local,node,is,not,part,of,initial,configuration,final,list,discovery,node,known,nodes,new,array,list,known,nodes,add,get,local,node,peer,finder,get,found,peers,for,each,known,nodes,add,if,voting,configuration,has,quorum,known,nodes,stream,map,discovery,node,get,id,collect,collectors,to,list,false,logger,debug,skip,setting,initial,configuration,as,not,enough,nodes,discovered,to,form,a,quorum,in,the,initial,configuration,known,nodes,known,nodes,voting,configuration,throw,new,coordination,state,rejected,exception,not,enough,nodes,discovered,to,form,a,quorum,in,the,initial,configuration,known,nodes,known,nodes,voting,configuration,logger,info,setting,initial,configuration,to,voting,configuration,final,coordination,meta,data,coordination,meta,data,coordination,meta,data,builder,current,state,coordination,meta,data,last,accepted,configuration,voting,configuration,last,committed,configuration,voting,configuration,build,meta,data,builder,meta,data,builder,meta,data,builder,current,state,meta,data,meta,data,builder,generate,cluster,uuid,if,needed,meta,data,builder,coordination,meta,data,coordination,meta,data,coordination,state,get,set,initial,state,cluster,state,builder,current,state,meta,data,meta,data,builder,build,assert,election,quorum,contains,local,node,get,last,accepted,state,initial,state,does,not,have,local,node,in,its,election,quorum,get,last,accepted,state,coordination,meta,data,pre,vote,collector,update,get,pre,vote,response,null,start,election,scheduler,return,true
Coordinator -> public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration);1548320260;Sets the initial configuration to the given {@link VotingConfiguration}. This method is safe to call_more than once, as long as the argument to each call is the same.__@param votingConfiguration The nodes that should form the initial configuration._@return whether this call successfully set the initial configuration - if false, the cluster has already been bootstrapped.;public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration) {_        synchronized (mutex) {_            final ClusterState currentState = getStateForMasterService()___            if (isInitialConfigurationSet()) {_                logger.debug("initial configuration already set, ignoring {}", votingConfiguration)__                return false__            }__            if (getLocalNode().isMasterNode() == false) {_                logger.debug("skip setting initial configuration as local node is not a master-eligible node")__                throw new CoordinationStateRejectedException(_                    "this node is not master-eligible, but cluster bootstrapping can only happen on a master-eligible node")__            }__            if (votingConfiguration.getNodeIds().contains(getLocalNode().getId()) == false) {_                logger.debug("skip setting initial configuration as local node is not part of initial configuration")__                throw new CoordinationStateRejectedException("local node is not part of initial configuration")__            }__            final List<DiscoveryNode> knownNodes = new ArrayList<>()__            knownNodes.add(getLocalNode())__            peerFinder.getFoundPeers().forEach(knownNodes::add)___            if (votingConfiguration.hasQuorum(knownNodes.stream().map(DiscoveryNode::getId).collect(Collectors.toList())) == false) {_                logger.debug("skip setting initial configuration as not enough nodes discovered to form a quorum in the " +_                    "initial configuration [knownNodes={}, {}]", knownNodes, votingConfiguration)__                throw new CoordinationStateRejectedException("not enough nodes discovered to form a quorum in the initial configuration " +_                    "[knownNodes=" + knownNodes + ", " + votingConfiguration + "]")__            }__            logger.info("setting initial configuration to {}", votingConfiguration)__            final CoordinationMetaData coordinationMetaData = CoordinationMetaData.builder(currentState.coordinationMetaData())_                .lastAcceptedConfiguration(votingConfiguration)_                .lastCommittedConfiguration(votingConfiguration)_                .build()___            MetaData.Builder metaDataBuilder = MetaData.builder(currentState.metaData())__            _            metaDataBuilder.generateClusterUuidIfNeeded()_ _            metaDataBuilder.coordinationMetaData(coordinationMetaData)___            coordinationState.get().setInitialState(ClusterState.builder(currentState).metaData(metaDataBuilder).build())__            assert electionQuorumContainsLocalNode(getLastAcceptedState()) :_                "initial state does not have local node in its election quorum: " + getLastAcceptedState().coordinationMetaData()__            preVoteCollector.update(getPreVoteResponse(), null)_ _            startElectionScheduler()__            return true__        }_    };sets,the,initial,configuration,to,the,given,link,voting,configuration,this,method,is,safe,to,call,more,than,once,as,long,as,the,argument,to,each,call,is,the,same,param,voting,configuration,the,nodes,that,should,form,the,initial,configuration,return,whether,this,call,successfully,set,the,initial,configuration,if,false,the,cluster,has,already,been,bootstrapped;public,boolean,set,initial,configuration,final,voting,configuration,voting,configuration,synchronized,mutex,final,cluster,state,current,state,get,state,for,master,service,if,is,initial,configuration,set,logger,debug,initial,configuration,already,set,ignoring,voting,configuration,return,false,if,get,local,node,is,master,node,false,logger,debug,skip,setting,initial,configuration,as,local,node,is,not,a,master,eligible,node,throw,new,coordination,state,rejected,exception,this,node,is,not,master,eligible,but,cluster,bootstrapping,can,only,happen,on,a,master,eligible,node,if,voting,configuration,get,node,ids,contains,get,local,node,get,id,false,logger,debug,skip,setting,initial,configuration,as,local,node,is,not,part,of,initial,configuration,throw,new,coordination,state,rejected,exception,local,node,is,not,part,of,initial,configuration,final,list,discovery,node,known,nodes,new,array,list,known,nodes,add,get,local,node,peer,finder,get,found,peers,for,each,known,nodes,add,if,voting,configuration,has,quorum,known,nodes,stream,map,discovery,node,get,id,collect,collectors,to,list,false,logger,debug,skip,setting,initial,configuration,as,not,enough,nodes,discovered,to,form,a,quorum,in,the,initial,configuration,known,nodes,known,nodes,voting,configuration,throw,new,coordination,state,rejected,exception,not,enough,nodes,discovered,to,form,a,quorum,in,the,initial,configuration,known,nodes,known,nodes,voting,configuration,logger,info,setting,initial,configuration,to,voting,configuration,final,coordination,meta,data,coordination,meta,data,coordination,meta,data,builder,current,state,coordination,meta,data,last,accepted,configuration,voting,configuration,last,committed,configuration,voting,configuration,build,meta,data,builder,meta,data,builder,meta,data,builder,current,state,meta,data,meta,data,builder,generate,cluster,uuid,if,needed,meta,data,builder,coordination,meta,data,coordination,meta,data,coordination,state,get,set,initial,state,cluster,state,builder,current,state,meta,data,meta,data,builder,build,assert,election,quorum,contains,local,node,get,last,accepted,state,initial,state,does,not,have,local,node,in,its,election,quorum,get,last,accepted,state,coordination,meta,data,pre,vote,collector,update,get,pre,vote,response,null,start,election,scheduler,return,true
Coordinator -> public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration);1548411429;Sets the initial configuration to the given {@link VotingConfiguration}. This method is safe to call_more than once, as long as the argument to each call is the same.__@param votingConfiguration The nodes that should form the initial configuration._@return whether this call successfully set the initial configuration - if false, the cluster has already been bootstrapped.;public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration) {_        synchronized (mutex) {_            final ClusterState currentState = getStateForMasterService()___            if (isInitialConfigurationSet()) {_                logger.debug("initial configuration already set, ignoring {}", votingConfiguration)__                return false__            }__            if (getLocalNode().isMasterNode() == false) {_                logger.debug("skip setting initial configuration as local node is not a master-eligible node")__                throw new CoordinationStateRejectedException(_                    "this node is not master-eligible, but cluster bootstrapping can only happen on a master-eligible node")__            }__            if (votingConfiguration.getNodeIds().contains(getLocalNode().getId()) == false) {_                logger.debug("skip setting initial configuration as local node is not part of initial configuration")__                throw new CoordinationStateRejectedException("local node is not part of initial configuration")__            }__            final List<DiscoveryNode> knownNodes = new ArrayList<>()__            knownNodes.add(getLocalNode())__            peerFinder.getFoundPeers().forEach(knownNodes::add)___            if (votingConfiguration.hasQuorum(knownNodes.stream().map(DiscoveryNode::getId).collect(Collectors.toList())) == false) {_                logger.debug("skip setting initial configuration as not enough nodes discovered to form a quorum in the " +_                    "initial configuration [knownNodes={}, {}]", knownNodes, votingConfiguration)__                throw new CoordinationStateRejectedException("not enough nodes discovered to form a quorum in the initial configuration " +_                    "[knownNodes=" + knownNodes + ", " + votingConfiguration + "]")__            }__            logger.info("setting initial configuration to {}", votingConfiguration)__            final CoordinationMetaData coordinationMetaData = CoordinationMetaData.builder(currentState.coordinationMetaData())_                .lastAcceptedConfiguration(votingConfiguration)_                .lastCommittedConfiguration(votingConfiguration)_                .build()___            MetaData.Builder metaDataBuilder = MetaData.builder(currentState.metaData())__            _            metaDataBuilder.generateClusterUuidIfNeeded()_ _            metaDataBuilder.coordinationMetaData(coordinationMetaData)___            coordinationState.get().setInitialState(ClusterState.builder(currentState).metaData(metaDataBuilder).build())__            assert electionQuorumContainsLocalNode(getLastAcceptedState()) :_                "initial state does not have local node in its election quorum: " + getLastAcceptedState().coordinationMetaData()__            preVoteCollector.update(getPreVoteResponse(), null)_ _            startElectionScheduler()__            return true__        }_    };sets,the,initial,configuration,to,the,given,link,voting,configuration,this,method,is,safe,to,call,more,than,once,as,long,as,the,argument,to,each,call,is,the,same,param,voting,configuration,the,nodes,that,should,form,the,initial,configuration,return,whether,this,call,successfully,set,the,initial,configuration,if,false,the,cluster,has,already,been,bootstrapped;public,boolean,set,initial,configuration,final,voting,configuration,voting,configuration,synchronized,mutex,final,cluster,state,current,state,get,state,for,master,service,if,is,initial,configuration,set,logger,debug,initial,configuration,already,set,ignoring,voting,configuration,return,false,if,get,local,node,is,master,node,false,logger,debug,skip,setting,initial,configuration,as,local,node,is,not,a,master,eligible,node,throw,new,coordination,state,rejected,exception,this,node,is,not,master,eligible,but,cluster,bootstrapping,can,only,happen,on,a,master,eligible,node,if,voting,configuration,get,node,ids,contains,get,local,node,get,id,false,logger,debug,skip,setting,initial,configuration,as,local,node,is,not,part,of,initial,configuration,throw,new,coordination,state,rejected,exception,local,node,is,not,part,of,initial,configuration,final,list,discovery,node,known,nodes,new,array,list,known,nodes,add,get,local,node,peer,finder,get,found,peers,for,each,known,nodes,add,if,voting,configuration,has,quorum,known,nodes,stream,map,discovery,node,get,id,collect,collectors,to,list,false,logger,debug,skip,setting,initial,configuration,as,not,enough,nodes,discovered,to,form,a,quorum,in,the,initial,configuration,known,nodes,known,nodes,voting,configuration,throw,new,coordination,state,rejected,exception,not,enough,nodes,discovered,to,form,a,quorum,in,the,initial,configuration,known,nodes,known,nodes,voting,configuration,logger,info,setting,initial,configuration,to,voting,configuration,final,coordination,meta,data,coordination,meta,data,coordination,meta,data,builder,current,state,coordination,meta,data,last,accepted,configuration,voting,configuration,last,committed,configuration,voting,configuration,build,meta,data,builder,meta,data,builder,meta,data,builder,current,state,meta,data,meta,data,builder,generate,cluster,uuid,if,needed,meta,data,builder,coordination,meta,data,coordination,meta,data,coordination,state,get,set,initial,state,cluster,state,builder,current,state,meta,data,meta,data,builder,build,assert,election,quorum,contains,local,node,get,last,accepted,state,initial,state,does,not,have,local,node,in,its,election,quorum,get,last,accepted,state,coordination,meta,data,pre,vote,collector,update,get,pre,vote,response,null,start,election,scheduler,return,true
Coordinator -> public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration);1548762184;Sets the initial configuration to the given {@link VotingConfiguration}. This method is safe to call_more than once, as long as the argument to each call is the same.__@param votingConfiguration The nodes that should form the initial configuration._@return whether this call successfully set the initial configuration - if false, the cluster has already been bootstrapped.;public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration) {_        synchronized (mutex) {_            final ClusterState currentState = getStateForMasterService()___            if (isInitialConfigurationSet()) {_                logger.debug("initial configuration already set, ignoring {}", votingConfiguration)__                return false__            }__            if (getLocalNode().isMasterNode() == false) {_                logger.debug("skip setting initial configuration as local node is not a master-eligible node")__                throw new CoordinationStateRejectedException(_                    "this node is not master-eligible, but cluster bootstrapping can only happen on a master-eligible node")__            }__            if (votingConfiguration.getNodeIds().contains(getLocalNode().getId()) == false) {_                logger.debug("skip setting initial configuration as local node is not part of initial configuration")__                throw new CoordinationStateRejectedException("local node is not part of initial configuration")__            }__            final List<DiscoveryNode> knownNodes = new ArrayList<>()__            knownNodes.add(getLocalNode())__            peerFinder.getFoundPeers().forEach(knownNodes::add)___            if (votingConfiguration.hasQuorum(knownNodes.stream().map(DiscoveryNode::getId).collect(Collectors.toList())) == false) {_                logger.debug("skip setting initial configuration as not enough nodes discovered to form a quorum in the " +_                    "initial configuration [knownNodes={}, {}]", knownNodes, votingConfiguration)__                throw new CoordinationStateRejectedException("not enough nodes discovered to form a quorum in the initial configuration " +_                    "[knownNodes=" + knownNodes + ", " + votingConfiguration + "]")__            }__            logger.info("setting initial configuration to {}", votingConfiguration)__            final CoordinationMetaData coordinationMetaData = CoordinationMetaData.builder(currentState.coordinationMetaData())_                .lastAcceptedConfiguration(votingConfiguration)_                .lastCommittedConfiguration(votingConfiguration)_                .build()___            MetaData.Builder metaDataBuilder = MetaData.builder(currentState.metaData())__            _            metaDataBuilder.generateClusterUuidIfNeeded()_ _            metaDataBuilder.coordinationMetaData(coordinationMetaData)___            coordinationState.get().setInitialState(ClusterState.builder(currentState).metaData(metaDataBuilder).build())__            assert electionQuorumContainsLocalNode(getLastAcceptedState()) :_                "initial state does not have local node in its election quorum: " + getLastAcceptedState().coordinationMetaData()__            preVoteCollector.update(getPreVoteResponse(), null)_ _            startElectionScheduler()__            return true__        }_    };sets,the,initial,configuration,to,the,given,link,voting,configuration,this,method,is,safe,to,call,more,than,once,as,long,as,the,argument,to,each,call,is,the,same,param,voting,configuration,the,nodes,that,should,form,the,initial,configuration,return,whether,this,call,successfully,set,the,initial,configuration,if,false,the,cluster,has,already,been,bootstrapped;public,boolean,set,initial,configuration,final,voting,configuration,voting,configuration,synchronized,mutex,final,cluster,state,current,state,get,state,for,master,service,if,is,initial,configuration,set,logger,debug,initial,configuration,already,set,ignoring,voting,configuration,return,false,if,get,local,node,is,master,node,false,logger,debug,skip,setting,initial,configuration,as,local,node,is,not,a,master,eligible,node,throw,new,coordination,state,rejected,exception,this,node,is,not,master,eligible,but,cluster,bootstrapping,can,only,happen,on,a,master,eligible,node,if,voting,configuration,get,node,ids,contains,get,local,node,get,id,false,logger,debug,skip,setting,initial,configuration,as,local,node,is,not,part,of,initial,configuration,throw,new,coordination,state,rejected,exception,local,node,is,not,part,of,initial,configuration,final,list,discovery,node,known,nodes,new,array,list,known,nodes,add,get,local,node,peer,finder,get,found,peers,for,each,known,nodes,add,if,voting,configuration,has,quorum,known,nodes,stream,map,discovery,node,get,id,collect,collectors,to,list,false,logger,debug,skip,setting,initial,configuration,as,not,enough,nodes,discovered,to,form,a,quorum,in,the,initial,configuration,known,nodes,known,nodes,voting,configuration,throw,new,coordination,state,rejected,exception,not,enough,nodes,discovered,to,form,a,quorum,in,the,initial,configuration,known,nodes,known,nodes,voting,configuration,logger,info,setting,initial,configuration,to,voting,configuration,final,coordination,meta,data,coordination,meta,data,coordination,meta,data,builder,current,state,coordination,meta,data,last,accepted,configuration,voting,configuration,last,committed,configuration,voting,configuration,build,meta,data,builder,meta,data,builder,meta,data,builder,current,state,meta,data,meta,data,builder,generate,cluster,uuid,if,needed,meta,data,builder,coordination,meta,data,coordination,meta,data,coordination,state,get,set,initial,state,cluster,state,builder,current,state,meta,data,meta,data,builder,build,assert,election,quorum,contains,local,node,get,last,accepted,state,initial,state,does,not,have,local,node,in,its,election,quorum,get,last,accepted,state,coordination,meta,data,pre,vote,collector,update,get,pre,vote,response,null,start,election,scheduler,return,true
Coordinator -> public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration);1548772865;Sets the initial configuration to the given {@link VotingConfiguration}. This method is safe to call_more than once, as long as the argument to each call is the same.__@param votingConfiguration The nodes that should form the initial configuration._@return whether this call successfully set the initial configuration - if false, the cluster has already been bootstrapped.;public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration) {_        synchronized (mutex) {_            final ClusterState currentState = getStateForMasterService()___            if (isInitialConfigurationSet()) {_                logger.debug("initial configuration already set, ignoring {}", votingConfiguration)__                return false__            }__            if (getLocalNode().isMasterNode() == false) {_                logger.debug("skip setting initial configuration as local node is not a master-eligible node")__                throw new CoordinationStateRejectedException(_                    "this node is not master-eligible, but cluster bootstrapping can only happen on a master-eligible node")__            }__            if (votingConfiguration.getNodeIds().contains(getLocalNode().getId()) == false) {_                logger.debug("skip setting initial configuration as local node is not part of initial configuration")__                throw new CoordinationStateRejectedException("local node is not part of initial configuration")__            }__            final List<DiscoveryNode> knownNodes = new ArrayList<>()__            knownNodes.add(getLocalNode())__            peerFinder.getFoundPeers().forEach(knownNodes::add)___            if (votingConfiguration.hasQuorum(knownNodes.stream().map(DiscoveryNode::getId).collect(Collectors.toList())) == false) {_                logger.debug("skip setting initial configuration as not enough nodes discovered to form a quorum in the " +_                    "initial configuration [knownNodes={}, {}]", knownNodes, votingConfiguration)__                throw new CoordinationStateRejectedException("not enough nodes discovered to form a quorum in the initial configuration " +_                    "[knownNodes=" + knownNodes + ", " + votingConfiguration + "]")__            }__            logger.info("setting initial configuration to {}", votingConfiguration)__            final CoordinationMetaData coordinationMetaData = CoordinationMetaData.builder(currentState.coordinationMetaData())_                .lastAcceptedConfiguration(votingConfiguration)_                .lastCommittedConfiguration(votingConfiguration)_                .build()___            MetaData.Builder metaDataBuilder = MetaData.builder(currentState.metaData())__            _            metaDataBuilder.generateClusterUuidIfNeeded()_ _            metaDataBuilder.coordinationMetaData(coordinationMetaData)___            coordinationState.get().setInitialState(ClusterState.builder(currentState).metaData(metaDataBuilder).build())__            assert electionQuorumContainsLocalNode(getLastAcceptedState()) :_                "initial state does not have local node in its election quorum: " + getLastAcceptedState().coordinationMetaData()__            preVoteCollector.update(getPreVoteResponse(), null)_ _            startElectionScheduler()__            return true__        }_    };sets,the,initial,configuration,to,the,given,link,voting,configuration,this,method,is,safe,to,call,more,than,once,as,long,as,the,argument,to,each,call,is,the,same,param,voting,configuration,the,nodes,that,should,form,the,initial,configuration,return,whether,this,call,successfully,set,the,initial,configuration,if,false,the,cluster,has,already,been,bootstrapped;public,boolean,set,initial,configuration,final,voting,configuration,voting,configuration,synchronized,mutex,final,cluster,state,current,state,get,state,for,master,service,if,is,initial,configuration,set,logger,debug,initial,configuration,already,set,ignoring,voting,configuration,return,false,if,get,local,node,is,master,node,false,logger,debug,skip,setting,initial,configuration,as,local,node,is,not,a,master,eligible,node,throw,new,coordination,state,rejected,exception,this,node,is,not,master,eligible,but,cluster,bootstrapping,can,only,happen,on,a,master,eligible,node,if,voting,configuration,get,node,ids,contains,get,local,node,get,id,false,logger,debug,skip,setting,initial,configuration,as,local,node,is,not,part,of,initial,configuration,throw,new,coordination,state,rejected,exception,local,node,is,not,part,of,initial,configuration,final,list,discovery,node,known,nodes,new,array,list,known,nodes,add,get,local,node,peer,finder,get,found,peers,for,each,known,nodes,add,if,voting,configuration,has,quorum,known,nodes,stream,map,discovery,node,get,id,collect,collectors,to,list,false,logger,debug,skip,setting,initial,configuration,as,not,enough,nodes,discovered,to,form,a,quorum,in,the,initial,configuration,known,nodes,known,nodes,voting,configuration,throw,new,coordination,state,rejected,exception,not,enough,nodes,discovered,to,form,a,quorum,in,the,initial,configuration,known,nodes,known,nodes,voting,configuration,logger,info,setting,initial,configuration,to,voting,configuration,final,coordination,meta,data,coordination,meta,data,coordination,meta,data,builder,current,state,coordination,meta,data,last,accepted,configuration,voting,configuration,last,committed,configuration,voting,configuration,build,meta,data,builder,meta,data,builder,meta,data,builder,current,state,meta,data,meta,data,builder,generate,cluster,uuid,if,needed,meta,data,builder,coordination,meta,data,coordination,meta,data,coordination,state,get,set,initial,state,cluster,state,builder,current,state,meta,data,meta,data,builder,build,assert,election,quorum,contains,local,node,get,last,accepted,state,initial,state,does,not,have,local,node,in,its,election,quorum,get,last,accepted,state,coordination,meta,data,pre,vote,collector,update,get,pre,vote,response,null,start,election,scheduler,return,true
Coordinator -> public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration);1548952864;Sets the initial configuration to the given {@link VotingConfiguration}. This method is safe to call_more than once, as long as the argument to each call is the same.__@param votingConfiguration The nodes that should form the initial configuration._@return whether this call successfully set the initial configuration - if false, the cluster has already been bootstrapped.;public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration) {_        synchronized (mutex) {_            final ClusterState currentState = getStateForMasterService()___            if (isInitialConfigurationSet()) {_                logger.debug("initial configuration already set, ignoring {}", votingConfiguration)__                return false__            }__            if (getLocalNode().isMasterNode() == false) {_                logger.debug("skip setting initial configuration as local node is not a master-eligible node")__                throw new CoordinationStateRejectedException(_                    "this node is not master-eligible, but cluster bootstrapping can only happen on a master-eligible node")__            }__            if (votingConfiguration.getNodeIds().contains(getLocalNode().getId()) == false) {_                logger.debug("skip setting initial configuration as local node is not part of initial configuration")__                throw new CoordinationStateRejectedException("local node is not part of initial configuration")__            }__            final List<DiscoveryNode> knownNodes = new ArrayList<>()__            knownNodes.add(getLocalNode())__            peerFinder.getFoundPeers().forEach(knownNodes::add)___            if (votingConfiguration.hasQuorum(knownNodes.stream().map(DiscoveryNode::getId).collect(Collectors.toList())) == false) {_                logger.debug("skip setting initial configuration as not enough nodes discovered to form a quorum in the " +_                    "initial configuration [knownNodes={}, {}]", knownNodes, votingConfiguration)__                throw new CoordinationStateRejectedException("not enough nodes discovered to form a quorum in the initial configuration " +_                    "[knownNodes=" + knownNodes + ", " + votingConfiguration + "]")__            }__            logger.info("setting initial configuration to {}", votingConfiguration)__            final CoordinationMetaData coordinationMetaData = CoordinationMetaData.builder(currentState.coordinationMetaData())_                .lastAcceptedConfiguration(votingConfiguration)_                .lastCommittedConfiguration(votingConfiguration)_                .build()___            MetaData.Builder metaDataBuilder = MetaData.builder(currentState.metaData())__            _            metaDataBuilder.generateClusterUuidIfNeeded()_ _            metaDataBuilder.coordinationMetaData(coordinationMetaData)___            coordinationState.get().setInitialState(ClusterState.builder(currentState).metaData(metaDataBuilder).build())__            assert electionQuorumContainsLocalNode(getLastAcceptedState()) :_                "initial state does not have local node in its election quorum: " + getLastAcceptedState().coordinationMetaData()__            preVoteCollector.update(getPreVoteResponse(), null)_ _            startElectionScheduler()__            return true__        }_    };sets,the,initial,configuration,to,the,given,link,voting,configuration,this,method,is,safe,to,call,more,than,once,as,long,as,the,argument,to,each,call,is,the,same,param,voting,configuration,the,nodes,that,should,form,the,initial,configuration,return,whether,this,call,successfully,set,the,initial,configuration,if,false,the,cluster,has,already,been,bootstrapped;public,boolean,set,initial,configuration,final,voting,configuration,voting,configuration,synchronized,mutex,final,cluster,state,current,state,get,state,for,master,service,if,is,initial,configuration,set,logger,debug,initial,configuration,already,set,ignoring,voting,configuration,return,false,if,get,local,node,is,master,node,false,logger,debug,skip,setting,initial,configuration,as,local,node,is,not,a,master,eligible,node,throw,new,coordination,state,rejected,exception,this,node,is,not,master,eligible,but,cluster,bootstrapping,can,only,happen,on,a,master,eligible,node,if,voting,configuration,get,node,ids,contains,get,local,node,get,id,false,logger,debug,skip,setting,initial,configuration,as,local,node,is,not,part,of,initial,configuration,throw,new,coordination,state,rejected,exception,local,node,is,not,part,of,initial,configuration,final,list,discovery,node,known,nodes,new,array,list,known,nodes,add,get,local,node,peer,finder,get,found,peers,for,each,known,nodes,add,if,voting,configuration,has,quorum,known,nodes,stream,map,discovery,node,get,id,collect,collectors,to,list,false,logger,debug,skip,setting,initial,configuration,as,not,enough,nodes,discovered,to,form,a,quorum,in,the,initial,configuration,known,nodes,known,nodes,voting,configuration,throw,new,coordination,state,rejected,exception,not,enough,nodes,discovered,to,form,a,quorum,in,the,initial,configuration,known,nodes,known,nodes,voting,configuration,logger,info,setting,initial,configuration,to,voting,configuration,final,coordination,meta,data,coordination,meta,data,coordination,meta,data,builder,current,state,coordination,meta,data,last,accepted,configuration,voting,configuration,last,committed,configuration,voting,configuration,build,meta,data,builder,meta,data,builder,meta,data,builder,current,state,meta,data,meta,data,builder,generate,cluster,uuid,if,needed,meta,data,builder,coordination,meta,data,coordination,meta,data,coordination,state,get,set,initial,state,cluster,state,builder,current,state,meta,data,meta,data,builder,build,assert,election,quorum,contains,local,node,get,last,accepted,state,initial,state,does,not,have,local,node,in,its,election,quorum,get,last,accepted,state,coordination,meta,data,pre,vote,collector,update,get,pre,vote,response,null,start,election,scheduler,return,true
Coordinator -> public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration);1548953505;Sets the initial configuration to the given {@link VotingConfiguration}. This method is safe to call_more than once, as long as the argument to each call is the same.__@param votingConfiguration The nodes that should form the initial configuration._@return whether this call successfully set the initial configuration - if false, the cluster has already been bootstrapped.;public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration) {_        synchronized (mutex) {_            final ClusterState currentState = getStateForMasterService()___            if (isInitialConfigurationSet()) {_                logger.debug("initial configuration already set, ignoring {}", votingConfiguration)__                return false__            }__            if (getLocalNode().isMasterNode() == false) {_                logger.debug("skip setting initial configuration as local node is not a master-eligible node")__                throw new CoordinationStateRejectedException(_                    "this node is not master-eligible, but cluster bootstrapping can only happen on a master-eligible node")__            }__            if (votingConfiguration.getNodeIds().contains(getLocalNode().getId()) == false) {_                logger.debug("skip setting initial configuration as local node is not part of initial configuration")__                throw new CoordinationStateRejectedException("local node is not part of initial configuration")__            }__            final List<DiscoveryNode> knownNodes = new ArrayList<>()__            knownNodes.add(getLocalNode())__            peerFinder.getFoundPeers().forEach(knownNodes::add)___            if (votingConfiguration.hasQuorum(knownNodes.stream().map(DiscoveryNode::getId).collect(Collectors.toList())) == false) {_                logger.debug("skip setting initial configuration as not enough nodes discovered to form a quorum in the " +_                    "initial configuration [knownNodes={}, {}]", knownNodes, votingConfiguration)__                throw new CoordinationStateRejectedException("not enough nodes discovered to form a quorum in the initial configuration " +_                    "[knownNodes=" + knownNodes + ", " + votingConfiguration + "]")__            }__            logger.info("setting initial configuration to {}", votingConfiguration)__            final CoordinationMetaData coordinationMetaData = CoordinationMetaData.builder(currentState.coordinationMetaData())_                .lastAcceptedConfiguration(votingConfiguration)_                .lastCommittedConfiguration(votingConfiguration)_                .build()___            MetaData.Builder metaDataBuilder = MetaData.builder(currentState.metaData())__            _            metaDataBuilder.generateClusterUuidIfNeeded()_ _            metaDataBuilder.coordinationMetaData(coordinationMetaData)___            coordinationState.get().setInitialState(ClusterState.builder(currentState).metaData(metaDataBuilder).build())__            assert electionQuorumContainsLocalNode(getLastAcceptedState()) :_                "initial state does not have local node in its election quorum: " + getLastAcceptedState().coordinationMetaData()__            preVoteCollector.update(getPreVoteResponse(), null)_ _            startElectionScheduler()__            return true__        }_    };sets,the,initial,configuration,to,the,given,link,voting,configuration,this,method,is,safe,to,call,more,than,once,as,long,as,the,argument,to,each,call,is,the,same,param,voting,configuration,the,nodes,that,should,form,the,initial,configuration,return,whether,this,call,successfully,set,the,initial,configuration,if,false,the,cluster,has,already,been,bootstrapped;public,boolean,set,initial,configuration,final,voting,configuration,voting,configuration,synchronized,mutex,final,cluster,state,current,state,get,state,for,master,service,if,is,initial,configuration,set,logger,debug,initial,configuration,already,set,ignoring,voting,configuration,return,false,if,get,local,node,is,master,node,false,logger,debug,skip,setting,initial,configuration,as,local,node,is,not,a,master,eligible,node,throw,new,coordination,state,rejected,exception,this,node,is,not,master,eligible,but,cluster,bootstrapping,can,only,happen,on,a,master,eligible,node,if,voting,configuration,get,node,ids,contains,get,local,node,get,id,false,logger,debug,skip,setting,initial,configuration,as,local,node,is,not,part,of,initial,configuration,throw,new,coordination,state,rejected,exception,local,node,is,not,part,of,initial,configuration,final,list,discovery,node,known,nodes,new,array,list,known,nodes,add,get,local,node,peer,finder,get,found,peers,for,each,known,nodes,add,if,voting,configuration,has,quorum,known,nodes,stream,map,discovery,node,get,id,collect,collectors,to,list,false,logger,debug,skip,setting,initial,configuration,as,not,enough,nodes,discovered,to,form,a,quorum,in,the,initial,configuration,known,nodes,known,nodes,voting,configuration,throw,new,coordination,state,rejected,exception,not,enough,nodes,discovered,to,form,a,quorum,in,the,initial,configuration,known,nodes,known,nodes,voting,configuration,logger,info,setting,initial,configuration,to,voting,configuration,final,coordination,meta,data,coordination,meta,data,coordination,meta,data,builder,current,state,coordination,meta,data,last,accepted,configuration,voting,configuration,last,committed,configuration,voting,configuration,build,meta,data,builder,meta,data,builder,meta,data,builder,current,state,meta,data,meta,data,builder,generate,cluster,uuid,if,needed,meta,data,builder,coordination,meta,data,coordination,meta,data,coordination,state,get,set,initial,state,cluster,state,builder,current,state,meta,data,meta,data,builder,build,assert,election,quorum,contains,local,node,get,last,accepted,state,initial,state,does,not,have,local,node,in,its,election,quorum,get,last,accepted,state,coordination,meta,data,pre,vote,collector,update,get,pre,vote,response,null,start,election,scheduler,return,true
Coordinator -> public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration);1549041491;Sets the initial configuration to the given {@link VotingConfiguration}. This method is safe to call_more than once, as long as the argument to each call is the same.__@param votingConfiguration The nodes that should form the initial configuration._@return whether this call successfully set the initial configuration - if false, the cluster has already been bootstrapped.;public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration) {_        synchronized (mutex) {_            final ClusterState currentState = getStateForMasterService()___            if (isInitialConfigurationSet()) {_                logger.debug("initial configuration already set, ignoring {}", votingConfiguration)__                return false__            }__            if (getLocalNode().isMasterNode() == false) {_                logger.debug("skip setting initial configuration as local node is not a master-eligible node")__                throw new CoordinationStateRejectedException(_                    "this node is not master-eligible, but cluster bootstrapping can only happen on a master-eligible node")__            }__            if (votingConfiguration.getNodeIds().contains(getLocalNode().getId()) == false) {_                logger.debug("skip setting initial configuration as local node is not part of initial configuration")__                throw new CoordinationStateRejectedException("local node is not part of initial configuration")__            }__            final List<DiscoveryNode> knownNodes = new ArrayList<>()__            knownNodes.add(getLocalNode())__            peerFinder.getFoundPeers().forEach(knownNodes::add)___            if (votingConfiguration.hasQuorum(knownNodes.stream().map(DiscoveryNode::getId).collect(Collectors.toList())) == false) {_                logger.debug("skip setting initial configuration as not enough nodes discovered to form a quorum in the " +_                    "initial configuration [knownNodes={}, {}]", knownNodes, votingConfiguration)__                throw new CoordinationStateRejectedException("not enough nodes discovered to form a quorum in the initial configuration " +_                    "[knownNodes=" + knownNodes + ", " + votingConfiguration + "]")__            }__            logger.info("setting initial configuration to {}", votingConfiguration)__            final CoordinationMetaData coordinationMetaData = CoordinationMetaData.builder(currentState.coordinationMetaData())_                .lastAcceptedConfiguration(votingConfiguration)_                .lastCommittedConfiguration(votingConfiguration)_                .build()___            MetaData.Builder metaDataBuilder = MetaData.builder(currentState.metaData())__            _            metaDataBuilder.generateClusterUuidIfNeeded()_ _            metaDataBuilder.coordinationMetaData(coordinationMetaData)___            coordinationState.get().setInitialState(ClusterState.builder(currentState).metaData(metaDataBuilder).build())__            assert electionQuorumContainsLocalNode(getLastAcceptedState()) :_                "initial state does not have local node in its election quorum: " + getLastAcceptedState().coordinationMetaData()__            preVoteCollector.update(getPreVoteResponse(), null)_ _            startElectionScheduler()__            return true__        }_    };sets,the,initial,configuration,to,the,given,link,voting,configuration,this,method,is,safe,to,call,more,than,once,as,long,as,the,argument,to,each,call,is,the,same,param,voting,configuration,the,nodes,that,should,form,the,initial,configuration,return,whether,this,call,successfully,set,the,initial,configuration,if,false,the,cluster,has,already,been,bootstrapped;public,boolean,set,initial,configuration,final,voting,configuration,voting,configuration,synchronized,mutex,final,cluster,state,current,state,get,state,for,master,service,if,is,initial,configuration,set,logger,debug,initial,configuration,already,set,ignoring,voting,configuration,return,false,if,get,local,node,is,master,node,false,logger,debug,skip,setting,initial,configuration,as,local,node,is,not,a,master,eligible,node,throw,new,coordination,state,rejected,exception,this,node,is,not,master,eligible,but,cluster,bootstrapping,can,only,happen,on,a,master,eligible,node,if,voting,configuration,get,node,ids,contains,get,local,node,get,id,false,logger,debug,skip,setting,initial,configuration,as,local,node,is,not,part,of,initial,configuration,throw,new,coordination,state,rejected,exception,local,node,is,not,part,of,initial,configuration,final,list,discovery,node,known,nodes,new,array,list,known,nodes,add,get,local,node,peer,finder,get,found,peers,for,each,known,nodes,add,if,voting,configuration,has,quorum,known,nodes,stream,map,discovery,node,get,id,collect,collectors,to,list,false,logger,debug,skip,setting,initial,configuration,as,not,enough,nodes,discovered,to,form,a,quorum,in,the,initial,configuration,known,nodes,known,nodes,voting,configuration,throw,new,coordination,state,rejected,exception,not,enough,nodes,discovered,to,form,a,quorum,in,the,initial,configuration,known,nodes,known,nodes,voting,configuration,logger,info,setting,initial,configuration,to,voting,configuration,final,coordination,meta,data,coordination,meta,data,coordination,meta,data,builder,current,state,coordination,meta,data,last,accepted,configuration,voting,configuration,last,committed,configuration,voting,configuration,build,meta,data,builder,meta,data,builder,meta,data,builder,current,state,meta,data,meta,data,builder,generate,cluster,uuid,if,needed,meta,data,builder,coordination,meta,data,coordination,meta,data,coordination,state,get,set,initial,state,cluster,state,builder,current,state,meta,data,meta,data,builder,build,assert,election,quorum,contains,local,node,get,last,accepted,state,initial,state,does,not,have,local,node,in,its,election,quorum,get,last,accepted,state,coordination,meta,data,pre,vote,collector,update,get,pre,vote,response,null,start,election,scheduler,return,true
Coordinator -> public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration);1549094096;Sets the initial configuration to the given {@link VotingConfiguration}. This method is safe to call_more than once, as long as the argument to each call is the same.__@param votingConfiguration The nodes that should form the initial configuration._@return whether this call successfully set the initial configuration - if false, the cluster has already been bootstrapped.;public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration) {_        synchronized (mutex) {_            final ClusterState currentState = getStateForMasterService()___            if (isInitialConfigurationSet()) {_                logger.debug("initial configuration already set, ignoring {}", votingConfiguration)__                return false__            }__            if (getLocalNode().isMasterNode() == false) {_                logger.debug("skip setting initial configuration as local node is not a master-eligible node")__                throw new CoordinationStateRejectedException(_                    "this node is not master-eligible, but cluster bootstrapping can only happen on a master-eligible node")__            }__            if (votingConfiguration.getNodeIds().contains(getLocalNode().getId()) == false) {_                logger.debug("skip setting initial configuration as local node is not part of initial configuration")__                throw new CoordinationStateRejectedException("local node is not part of initial configuration")__            }__            final List<DiscoveryNode> knownNodes = new ArrayList<>()__            knownNodes.add(getLocalNode())__            peerFinder.getFoundPeers().forEach(knownNodes::add)___            if (votingConfiguration.hasQuorum(knownNodes.stream().map(DiscoveryNode::getId).collect(Collectors.toList())) == false) {_                logger.debug("skip setting initial configuration as not enough nodes discovered to form a quorum in the " +_                    "initial configuration [knownNodes={}, {}]", knownNodes, votingConfiguration)__                throw new CoordinationStateRejectedException("not enough nodes discovered to form a quorum in the initial configuration " +_                    "[knownNodes=" + knownNodes + ", " + votingConfiguration + "]")__            }__            logger.info("setting initial configuration to {}", votingConfiguration)__            final CoordinationMetaData coordinationMetaData = CoordinationMetaData.builder(currentState.coordinationMetaData())_                .lastAcceptedConfiguration(votingConfiguration)_                .lastCommittedConfiguration(votingConfiguration)_                .build()___            MetaData.Builder metaDataBuilder = MetaData.builder(currentState.metaData())__            _            metaDataBuilder.generateClusterUuidIfNeeded()_ _            metaDataBuilder.coordinationMetaData(coordinationMetaData)___            coordinationState.get().setInitialState(ClusterState.builder(currentState).metaData(metaDataBuilder).build())__            assert electionQuorumContainsLocalNode(getLastAcceptedState()) :_                "initial state does not have local node in its election quorum: " + getLastAcceptedState().coordinationMetaData()__            preVoteCollector.update(getPreVoteResponse(), null)_ _            startElectionScheduler()__            return true__        }_    };sets,the,initial,configuration,to,the,given,link,voting,configuration,this,method,is,safe,to,call,more,than,once,as,long,as,the,argument,to,each,call,is,the,same,param,voting,configuration,the,nodes,that,should,form,the,initial,configuration,return,whether,this,call,successfully,set,the,initial,configuration,if,false,the,cluster,has,already,been,bootstrapped;public,boolean,set,initial,configuration,final,voting,configuration,voting,configuration,synchronized,mutex,final,cluster,state,current,state,get,state,for,master,service,if,is,initial,configuration,set,logger,debug,initial,configuration,already,set,ignoring,voting,configuration,return,false,if,get,local,node,is,master,node,false,logger,debug,skip,setting,initial,configuration,as,local,node,is,not,a,master,eligible,node,throw,new,coordination,state,rejected,exception,this,node,is,not,master,eligible,but,cluster,bootstrapping,can,only,happen,on,a,master,eligible,node,if,voting,configuration,get,node,ids,contains,get,local,node,get,id,false,logger,debug,skip,setting,initial,configuration,as,local,node,is,not,part,of,initial,configuration,throw,new,coordination,state,rejected,exception,local,node,is,not,part,of,initial,configuration,final,list,discovery,node,known,nodes,new,array,list,known,nodes,add,get,local,node,peer,finder,get,found,peers,for,each,known,nodes,add,if,voting,configuration,has,quorum,known,nodes,stream,map,discovery,node,get,id,collect,collectors,to,list,false,logger,debug,skip,setting,initial,configuration,as,not,enough,nodes,discovered,to,form,a,quorum,in,the,initial,configuration,known,nodes,known,nodes,voting,configuration,throw,new,coordination,state,rejected,exception,not,enough,nodes,discovered,to,form,a,quorum,in,the,initial,configuration,known,nodes,known,nodes,voting,configuration,logger,info,setting,initial,configuration,to,voting,configuration,final,coordination,meta,data,coordination,meta,data,coordination,meta,data,builder,current,state,coordination,meta,data,last,accepted,configuration,voting,configuration,last,committed,configuration,voting,configuration,build,meta,data,builder,meta,data,builder,meta,data,builder,current,state,meta,data,meta,data,builder,generate,cluster,uuid,if,needed,meta,data,builder,coordination,meta,data,coordination,meta,data,coordination,state,get,set,initial,state,cluster,state,builder,current,state,meta,data,meta,data,builder,build,assert,election,quorum,contains,local,node,get,last,accepted,state,initial,state,does,not,have,local,node,in,its,election,quorum,get,last,accepted,state,coordination,meta,data,pre,vote,collector,update,get,pre,vote,response,null,start,election,scheduler,return,true
Coordinator -> public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration);1549356476;Sets the initial configuration to the given {@link VotingConfiguration}. This method is safe to call_more than once, as long as the argument to each call is the same.__@param votingConfiguration The nodes that should form the initial configuration._@return whether this call successfully set the initial configuration - if false, the cluster has already been bootstrapped.;public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration) {_        synchronized (mutex) {_            final ClusterState currentState = getStateForMasterService()___            if (isInitialConfigurationSet()) {_                logger.debug("initial configuration already set, ignoring {}", votingConfiguration)__                return false__            }__            if (getLocalNode().isMasterNode() == false) {_                logger.debug("skip setting initial configuration as local node is not a master-eligible node")__                throw new CoordinationStateRejectedException(_                    "this node is not master-eligible, but cluster bootstrapping can only happen on a master-eligible node")__            }__            if (votingConfiguration.getNodeIds().contains(getLocalNode().getId()) == false) {_                logger.debug("skip setting initial configuration as local node is not part of initial configuration")__                throw new CoordinationStateRejectedException("local node is not part of initial configuration")__            }__            final List<DiscoveryNode> knownNodes = new ArrayList<>()__            knownNodes.add(getLocalNode())__            peerFinder.getFoundPeers().forEach(knownNodes::add)___            if (votingConfiguration.hasQuorum(knownNodes.stream().map(DiscoveryNode::getId).collect(Collectors.toList())) == false) {_                logger.debug("skip setting initial configuration as not enough nodes discovered to form a quorum in the " +_                    "initial configuration [knownNodes={}, {}]", knownNodes, votingConfiguration)__                throw new CoordinationStateRejectedException("not enough nodes discovered to form a quorum in the initial configuration " +_                    "[knownNodes=" + knownNodes + ", " + votingConfiguration + "]")__            }__            logger.info("setting initial configuration to {}", votingConfiguration)__            final CoordinationMetaData coordinationMetaData = CoordinationMetaData.builder(currentState.coordinationMetaData())_                .lastAcceptedConfiguration(votingConfiguration)_                .lastCommittedConfiguration(votingConfiguration)_                .build()___            MetaData.Builder metaDataBuilder = MetaData.builder(currentState.metaData())__            _            metaDataBuilder.generateClusterUuidIfNeeded()_ _            metaDataBuilder.coordinationMetaData(coordinationMetaData)___            coordinationState.get().setInitialState(ClusterState.builder(currentState).metaData(metaDataBuilder).build())__            assert electionQuorumContainsLocalNode(getLastAcceptedState()) :_                "initial state does not have local node in its election quorum: " + getLastAcceptedState().coordinationMetaData()__            preVoteCollector.update(getPreVoteResponse(), null)_ _            startElectionScheduler()__            return true__        }_    };sets,the,initial,configuration,to,the,given,link,voting,configuration,this,method,is,safe,to,call,more,than,once,as,long,as,the,argument,to,each,call,is,the,same,param,voting,configuration,the,nodes,that,should,form,the,initial,configuration,return,whether,this,call,successfully,set,the,initial,configuration,if,false,the,cluster,has,already,been,bootstrapped;public,boolean,set,initial,configuration,final,voting,configuration,voting,configuration,synchronized,mutex,final,cluster,state,current,state,get,state,for,master,service,if,is,initial,configuration,set,logger,debug,initial,configuration,already,set,ignoring,voting,configuration,return,false,if,get,local,node,is,master,node,false,logger,debug,skip,setting,initial,configuration,as,local,node,is,not,a,master,eligible,node,throw,new,coordination,state,rejected,exception,this,node,is,not,master,eligible,but,cluster,bootstrapping,can,only,happen,on,a,master,eligible,node,if,voting,configuration,get,node,ids,contains,get,local,node,get,id,false,logger,debug,skip,setting,initial,configuration,as,local,node,is,not,part,of,initial,configuration,throw,new,coordination,state,rejected,exception,local,node,is,not,part,of,initial,configuration,final,list,discovery,node,known,nodes,new,array,list,known,nodes,add,get,local,node,peer,finder,get,found,peers,for,each,known,nodes,add,if,voting,configuration,has,quorum,known,nodes,stream,map,discovery,node,get,id,collect,collectors,to,list,false,logger,debug,skip,setting,initial,configuration,as,not,enough,nodes,discovered,to,form,a,quorum,in,the,initial,configuration,known,nodes,known,nodes,voting,configuration,throw,new,coordination,state,rejected,exception,not,enough,nodes,discovered,to,form,a,quorum,in,the,initial,configuration,known,nodes,known,nodes,voting,configuration,logger,info,setting,initial,configuration,to,voting,configuration,final,coordination,meta,data,coordination,meta,data,coordination,meta,data,builder,current,state,coordination,meta,data,last,accepted,configuration,voting,configuration,last,committed,configuration,voting,configuration,build,meta,data,builder,meta,data,builder,meta,data,builder,current,state,meta,data,meta,data,builder,generate,cluster,uuid,if,needed,meta,data,builder,coordination,meta,data,coordination,meta,data,coordination,state,get,set,initial,state,cluster,state,builder,current,state,meta,data,meta,data,builder,build,assert,election,quorum,contains,local,node,get,last,accepted,state,initial,state,does,not,have,local,node,in,its,election,quorum,get,last,accepted,state,coordination,meta,data,pre,vote,collector,update,get,pre,vote,response,null,start,election,scheduler,return,true
Coordinator -> public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration);1549452878;Sets the initial configuration to the given {@link VotingConfiguration}. This method is safe to call_more than once, as long as the argument to each call is the same.__@param votingConfiguration The nodes that should form the initial configuration._@return whether this call successfully set the initial configuration - if false, the cluster has already been bootstrapped.;public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration) {_        synchronized (mutex) {_            final ClusterState currentState = getStateForMasterService()___            if (isInitialConfigurationSet()) {_                logger.debug("initial configuration already set, ignoring {}", votingConfiguration)__                return false__            }__            if (getLocalNode().isMasterNode() == false) {_                logger.debug("skip setting initial configuration as local node is not a master-eligible node")__                throw new CoordinationStateRejectedException(_                    "this node is not master-eligible, but cluster bootstrapping can only happen on a master-eligible node")__            }__            if (votingConfiguration.getNodeIds().contains(getLocalNode().getId()) == false) {_                logger.debug("skip setting initial configuration as local node is not part of initial configuration")__                throw new CoordinationStateRejectedException("local node is not part of initial configuration")__            }__            final List<DiscoveryNode> knownNodes = new ArrayList<>()__            knownNodes.add(getLocalNode())__            peerFinder.getFoundPeers().forEach(knownNodes::add)___            if (votingConfiguration.hasQuorum(knownNodes.stream().map(DiscoveryNode::getId).collect(Collectors.toList())) == false) {_                logger.debug("skip setting initial configuration as not enough nodes discovered to form a quorum in the " +_                    "initial configuration [knownNodes={}, {}]", knownNodes, votingConfiguration)__                throw new CoordinationStateRejectedException("not enough nodes discovered to form a quorum in the initial configuration " +_                    "[knownNodes=" + knownNodes + ", " + votingConfiguration + "]")__            }__            logger.info("setting initial configuration to {}", votingConfiguration)__            final CoordinationMetaData coordinationMetaData = CoordinationMetaData.builder(currentState.coordinationMetaData())_                .lastAcceptedConfiguration(votingConfiguration)_                .lastCommittedConfiguration(votingConfiguration)_                .build()___            MetaData.Builder metaDataBuilder = MetaData.builder(currentState.metaData())__            _            metaDataBuilder.generateClusterUuidIfNeeded()_ _            metaDataBuilder.coordinationMetaData(coordinationMetaData)___            coordinationState.get().setInitialState(ClusterState.builder(currentState).metaData(metaDataBuilder).build())__            assert electionQuorumContainsLocalNode(getLastAcceptedState()) :_                "initial state does not have local node in its election quorum: " + getLastAcceptedState().coordinationMetaData()__            preVoteCollector.update(getPreVoteResponse(), null)_ _            startElectionScheduler()__            return true__        }_    };sets,the,initial,configuration,to,the,given,link,voting,configuration,this,method,is,safe,to,call,more,than,once,as,long,as,the,argument,to,each,call,is,the,same,param,voting,configuration,the,nodes,that,should,form,the,initial,configuration,return,whether,this,call,successfully,set,the,initial,configuration,if,false,the,cluster,has,already,been,bootstrapped;public,boolean,set,initial,configuration,final,voting,configuration,voting,configuration,synchronized,mutex,final,cluster,state,current,state,get,state,for,master,service,if,is,initial,configuration,set,logger,debug,initial,configuration,already,set,ignoring,voting,configuration,return,false,if,get,local,node,is,master,node,false,logger,debug,skip,setting,initial,configuration,as,local,node,is,not,a,master,eligible,node,throw,new,coordination,state,rejected,exception,this,node,is,not,master,eligible,but,cluster,bootstrapping,can,only,happen,on,a,master,eligible,node,if,voting,configuration,get,node,ids,contains,get,local,node,get,id,false,logger,debug,skip,setting,initial,configuration,as,local,node,is,not,part,of,initial,configuration,throw,new,coordination,state,rejected,exception,local,node,is,not,part,of,initial,configuration,final,list,discovery,node,known,nodes,new,array,list,known,nodes,add,get,local,node,peer,finder,get,found,peers,for,each,known,nodes,add,if,voting,configuration,has,quorum,known,nodes,stream,map,discovery,node,get,id,collect,collectors,to,list,false,logger,debug,skip,setting,initial,configuration,as,not,enough,nodes,discovered,to,form,a,quorum,in,the,initial,configuration,known,nodes,known,nodes,voting,configuration,throw,new,coordination,state,rejected,exception,not,enough,nodes,discovered,to,form,a,quorum,in,the,initial,configuration,known,nodes,known,nodes,voting,configuration,logger,info,setting,initial,configuration,to,voting,configuration,final,coordination,meta,data,coordination,meta,data,coordination,meta,data,builder,current,state,coordination,meta,data,last,accepted,configuration,voting,configuration,last,committed,configuration,voting,configuration,build,meta,data,builder,meta,data,builder,meta,data,builder,current,state,meta,data,meta,data,builder,generate,cluster,uuid,if,needed,meta,data,builder,coordination,meta,data,coordination,meta,data,coordination,state,get,set,initial,state,cluster,state,builder,current,state,meta,data,meta,data,builder,build,assert,election,quorum,contains,local,node,get,last,accepted,state,initial,state,does,not,have,local,node,in,its,election,quorum,get,last,accepted,state,coordination,meta,data,pre,vote,collector,update,get,pre,vote,response,null,start,election,scheduler,return,true
Coordinator -> public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration);1549608646;Sets the initial configuration to the given {@link VotingConfiguration}. This method is safe to call_more than once, as long as the argument to each call is the same.__@param votingConfiguration The nodes that should form the initial configuration._@return whether this call successfully set the initial configuration - if false, the cluster has already been bootstrapped.;public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration) {_        synchronized (mutex) {_            final ClusterState currentState = getStateForMasterService()___            if (isInitialConfigurationSet()) {_                logger.debug("initial configuration already set, ignoring {}", votingConfiguration)__                return false__            }__            if (getLocalNode().isMasterNode() == false) {_                logger.debug("skip setting initial configuration as local node is not a master-eligible node")__                throw new CoordinationStateRejectedException(_                    "this node is not master-eligible, but cluster bootstrapping can only happen on a master-eligible node")__            }__            if (votingConfiguration.getNodeIds().contains(getLocalNode().getId()) == false) {_                logger.debug("skip setting initial configuration as local node is not part of initial configuration")__                throw new CoordinationStateRejectedException("local node is not part of initial configuration")__            }__            final List<DiscoveryNode> knownNodes = new ArrayList<>()__            knownNodes.add(getLocalNode())__            peerFinder.getFoundPeers().forEach(knownNodes::add)___            if (votingConfiguration.hasQuorum(knownNodes.stream().map(DiscoveryNode::getId).collect(Collectors.toList())) == false) {_                logger.debug("skip setting initial configuration as not enough nodes discovered to form a quorum in the " +_                    "initial configuration [knownNodes={}, {}]", knownNodes, votingConfiguration)__                throw new CoordinationStateRejectedException("not enough nodes discovered to form a quorum in the initial configuration " +_                    "[knownNodes=" + knownNodes + ", " + votingConfiguration + "]")__            }__            logger.info("setting initial configuration to {}", votingConfiguration)__            final CoordinationMetaData coordinationMetaData = CoordinationMetaData.builder(currentState.coordinationMetaData())_                .lastAcceptedConfiguration(votingConfiguration)_                .lastCommittedConfiguration(votingConfiguration)_                .build()___            MetaData.Builder metaDataBuilder = MetaData.builder(currentState.metaData())__            _            metaDataBuilder.generateClusterUuidIfNeeded()_ _            metaDataBuilder.coordinationMetaData(coordinationMetaData)___            coordinationState.get().setInitialState(ClusterState.builder(currentState).metaData(metaDataBuilder).build())__            assert electionQuorumContainsLocalNode(getLastAcceptedState()) :_                "initial state does not have local node in its election quorum: " + getLastAcceptedState().coordinationMetaData()__            preVoteCollector.update(getPreVoteResponse(), null)_ _            startElectionScheduler()__            return true__        }_    };sets,the,initial,configuration,to,the,given,link,voting,configuration,this,method,is,safe,to,call,more,than,once,as,long,as,the,argument,to,each,call,is,the,same,param,voting,configuration,the,nodes,that,should,form,the,initial,configuration,return,whether,this,call,successfully,set,the,initial,configuration,if,false,the,cluster,has,already,been,bootstrapped;public,boolean,set,initial,configuration,final,voting,configuration,voting,configuration,synchronized,mutex,final,cluster,state,current,state,get,state,for,master,service,if,is,initial,configuration,set,logger,debug,initial,configuration,already,set,ignoring,voting,configuration,return,false,if,get,local,node,is,master,node,false,logger,debug,skip,setting,initial,configuration,as,local,node,is,not,a,master,eligible,node,throw,new,coordination,state,rejected,exception,this,node,is,not,master,eligible,but,cluster,bootstrapping,can,only,happen,on,a,master,eligible,node,if,voting,configuration,get,node,ids,contains,get,local,node,get,id,false,logger,debug,skip,setting,initial,configuration,as,local,node,is,not,part,of,initial,configuration,throw,new,coordination,state,rejected,exception,local,node,is,not,part,of,initial,configuration,final,list,discovery,node,known,nodes,new,array,list,known,nodes,add,get,local,node,peer,finder,get,found,peers,for,each,known,nodes,add,if,voting,configuration,has,quorum,known,nodes,stream,map,discovery,node,get,id,collect,collectors,to,list,false,logger,debug,skip,setting,initial,configuration,as,not,enough,nodes,discovered,to,form,a,quorum,in,the,initial,configuration,known,nodes,known,nodes,voting,configuration,throw,new,coordination,state,rejected,exception,not,enough,nodes,discovered,to,form,a,quorum,in,the,initial,configuration,known,nodes,known,nodes,voting,configuration,logger,info,setting,initial,configuration,to,voting,configuration,final,coordination,meta,data,coordination,meta,data,coordination,meta,data,builder,current,state,coordination,meta,data,last,accepted,configuration,voting,configuration,last,committed,configuration,voting,configuration,build,meta,data,builder,meta,data,builder,meta,data,builder,current,state,meta,data,meta,data,builder,generate,cluster,uuid,if,needed,meta,data,builder,coordination,meta,data,coordination,meta,data,coordination,state,get,set,initial,state,cluster,state,builder,current,state,meta,data,meta,data,builder,build,assert,election,quorum,contains,local,node,get,last,accepted,state,initial,state,does,not,have,local,node,in,its,election,quorum,get,last,accepted,state,coordination,meta,data,pre,vote,collector,update,get,pre,vote,response,null,start,election,scheduler,return,true
Coordinator -> public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration);1551086646;Sets the initial configuration to the given {@link VotingConfiguration}. This method is safe to call_more than once, as long as the argument to each call is the same.__@param votingConfiguration The nodes that should form the initial configuration._@return whether this call successfully set the initial configuration - if false, the cluster has already been bootstrapped.;public boolean setInitialConfiguration(final VotingConfiguration votingConfiguration) {_        synchronized (mutex) {_            final ClusterState currentState = getStateForMasterService()___            if (isInitialConfigurationSet()) {_                logger.debug("initial configuration already set, ignoring {}", votingConfiguration)__                return false__            }__            if (getLocalNode().isMasterNode() == false) {_                logger.debug("skip setting initial configuration as local node is not a master-eligible node")__                throw new CoordinationStateRejectedException(_                    "this node is not master-eligible, but cluster bootstrapping can only happen on a master-eligible node")__            }__            if (votingConfiguration.getNodeIds().contains(getLocalNode().getId()) == false) {_                logger.debug("skip setting initial configuration as local node is not part of initial configuration")__                throw new CoordinationStateRejectedException("local node is not part of initial configuration")__            }__            final List<DiscoveryNode> knownNodes = new ArrayList<>()__            knownNodes.add(getLocalNode())__            peerFinder.getFoundPeers().forEach(knownNodes::add)___            if (votingConfiguration.hasQuorum(knownNodes.stream().map(DiscoveryNode::getId).collect(Collectors.toList())) == false) {_                logger.debug("skip setting initial configuration as not enough nodes discovered to form a quorum in the " +_                    "initial configuration [knownNodes={}, {}]", knownNodes, votingConfiguration)__                throw new CoordinationStateRejectedException("not enough nodes discovered to form a quorum in the initial configuration " +_                    "[knownNodes=" + knownNodes + ", " + votingConfiguration + "]")__            }__            logger.info("setting initial configuration to {}", votingConfiguration)__            final CoordinationMetaData coordinationMetaData = CoordinationMetaData.builder(currentState.coordinationMetaData())_                .lastAcceptedConfiguration(votingConfiguration)_                .lastCommittedConfiguration(votingConfiguration)_                .build()___            MetaData.Builder metaDataBuilder = MetaData.builder(currentState.metaData())__            _            metaDataBuilder.generateClusterUuidIfNeeded()_ _            metaDataBuilder.coordinationMetaData(coordinationMetaData)___            coordinationState.get().setInitialState(ClusterState.builder(currentState).metaData(metaDataBuilder).build())__            assert electionQuorumContainsLocalNode(getLastAcceptedState()) :_                "initial state does not have local node in its election quorum: " + getLastAcceptedState().coordinationMetaData()__            preVoteCollector.update(getPreVoteResponse(), null)_ _            startElectionScheduler()__            return true__        }_    };sets,the,initial,configuration,to,the,given,link,voting,configuration,this,method,is,safe,to,call,more,than,once,as,long,as,the,argument,to,each,call,is,the,same,param,voting,configuration,the,nodes,that,should,form,the,initial,configuration,return,whether,this,call,successfully,set,the,initial,configuration,if,false,the,cluster,has,already,been,bootstrapped;public,boolean,set,initial,configuration,final,voting,configuration,voting,configuration,synchronized,mutex,final,cluster,state,current,state,get,state,for,master,service,if,is,initial,configuration,set,logger,debug,initial,configuration,already,set,ignoring,voting,configuration,return,false,if,get,local,node,is,master,node,false,logger,debug,skip,setting,initial,configuration,as,local,node,is,not,a,master,eligible,node,throw,new,coordination,state,rejected,exception,this,node,is,not,master,eligible,but,cluster,bootstrapping,can,only,happen,on,a,master,eligible,node,if,voting,configuration,get,node,ids,contains,get,local,node,get,id,false,logger,debug,skip,setting,initial,configuration,as,local,node,is,not,part,of,initial,configuration,throw,new,coordination,state,rejected,exception,local,node,is,not,part,of,initial,configuration,final,list,discovery,node,known,nodes,new,array,list,known,nodes,add,get,local,node,peer,finder,get,found,peers,for,each,known,nodes,add,if,voting,configuration,has,quorum,known,nodes,stream,map,discovery,node,get,id,collect,collectors,to,list,false,logger,debug,skip,setting,initial,configuration,as,not,enough,nodes,discovered,to,form,a,quorum,in,the,initial,configuration,known,nodes,known,nodes,voting,configuration,throw,new,coordination,state,rejected,exception,not,enough,nodes,discovered,to,form,a,quorum,in,the,initial,configuration,known,nodes,known,nodes,voting,configuration,logger,info,setting,initial,configuration,to,voting,configuration,final,coordination,meta,data,coordination,meta,data,coordination,meta,data,builder,current,state,coordination,meta,data,last,accepted,configuration,voting,configuration,last,committed,configuration,voting,configuration,build,meta,data,builder,meta,data,builder,meta,data,builder,current,state,meta,data,meta,data,builder,generate,cluster,uuid,if,needed,meta,data,builder,coordination,meta,data,coordination,meta,data,coordination,state,get,set,initial,state,cluster,state,builder,current,state,meta,data,meta,data,builder,build,assert,election,quorum,contains,local,node,get,last,accepted,state,initial,state,does,not,have,local,node,in,its,election,quorum,get,last,accepted,state,coordination,meta,data,pre,vote,collector,update,get,pre,vote,response,null,start,election,scheduler,return,true
Coordinator -> public boolean setInitialConfiguration(final BootstrapConfiguration bootstrapConfiguration);1544081506;Sets the initial configuration by resolving the given {@link BootstrapConfiguration} to concrete nodes. This method is safe to call_more than once, as long as each call's bootstrap configuration resolves to the same set of nodes.__@param bootstrapConfiguration A description of the nodes that should form the initial configuration._@return whether this call successfully set the initial configuration - if false, the cluster has already been bootstrapped.;public boolean setInitialConfiguration(final BootstrapConfiguration bootstrapConfiguration) {_        final List<DiscoveryNode> selfAndDiscoveredPeers = new ArrayList<>()__        selfAndDiscoveredPeers.add(getLocalNode())__        getFoundPeers().forEach(selfAndDiscoveredPeers::add)__        final VotingConfiguration votingConfiguration = bootstrapConfiguration.resolve(selfAndDiscoveredPeers)__        return setInitialConfiguration(votingConfiguration)__    };sets,the,initial,configuration,by,resolving,the,given,link,bootstrap,configuration,to,concrete,nodes,this,method,is,safe,to,call,more,than,once,as,long,as,each,call,s,bootstrap,configuration,resolves,to,the,same,set,of,nodes,param,bootstrap,configuration,a,description,of,the,nodes,that,should,form,the,initial,configuration,return,whether,this,call,successfully,set,the,initial,configuration,if,false,the,cluster,has,already,been,bootstrapped;public,boolean,set,initial,configuration,final,bootstrap,configuration,bootstrap,configuration,final,list,discovery,node,self,and,discovered,peers,new,array,list,self,and,discovered,peers,add,get,local,node,get,found,peers,for,each,self,and,discovered,peers,add,final,voting,configuration,voting,configuration,bootstrap,configuration,resolve,self,and,discovered,peers,return,set,initial,configuration,voting,configuration
Coordinator -> public boolean setInitialConfiguration(final BootstrapConfiguration bootstrapConfiguration);1544170511;Sets the initial configuration by resolving the given {@link BootstrapConfiguration} to concrete nodes. This method is safe to call_more than once, as long as each call's bootstrap configuration resolves to the same set of nodes.__@param bootstrapConfiguration A description of the nodes that should form the initial configuration._@return whether this call successfully set the initial configuration - if false, the cluster has already been bootstrapped.;public boolean setInitialConfiguration(final BootstrapConfiguration bootstrapConfiguration) {_        final List<DiscoveryNode> selfAndDiscoveredPeers = new ArrayList<>()__        selfAndDiscoveredPeers.add(getLocalNode())__        getFoundPeers().forEach(selfAndDiscoveredPeers::add)__        final VotingConfiguration votingConfiguration = bootstrapConfiguration.resolve(selfAndDiscoveredPeers)__        return setInitialConfiguration(votingConfiguration)__    };sets,the,initial,configuration,by,resolving,the,given,link,bootstrap,configuration,to,concrete,nodes,this,method,is,safe,to,call,more,than,once,as,long,as,each,call,s,bootstrap,configuration,resolves,to,the,same,set,of,nodes,param,bootstrap,configuration,a,description,of,the,nodes,that,should,form,the,initial,configuration,return,whether,this,call,successfully,set,the,initial,configuration,if,false,the,cluster,has,already,been,bootstrapped;public,boolean,set,initial,configuration,final,bootstrap,configuration,bootstrap,configuration,final,list,discovery,node,self,and,discovered,peers,new,array,list,self,and,discovered,peers,add,get,local,node,get,found,peers,for,each,self,and,discovered,peers,add,final,voting,configuration,voting,configuration,bootstrap,configuration,resolve,self,and,discovered,peers,return,set,initial,configuration,voting,configuration
Coordinator -> public boolean setInitialConfiguration(final BootstrapConfiguration bootstrapConfiguration);1544186829;Sets the initial configuration by resolving the given {@link BootstrapConfiguration} to concrete nodes. This method is safe to call_more than once, as long as each call's bootstrap configuration resolves to the same set of nodes.__@param bootstrapConfiguration A description of the nodes that should form the initial configuration._@return whether this call successfully set the initial configuration - if false, the cluster has already been bootstrapped.;public boolean setInitialConfiguration(final BootstrapConfiguration bootstrapConfiguration) {_        final List<DiscoveryNode> selfAndDiscoveredPeers = new ArrayList<>()__        selfAndDiscoveredPeers.add(getLocalNode())__        getFoundPeers().forEach(selfAndDiscoveredPeers::add)__        final VotingConfiguration votingConfiguration = bootstrapConfiguration.resolve(selfAndDiscoveredPeers)__        return setInitialConfiguration(votingConfiguration)__    };sets,the,initial,configuration,by,resolving,the,given,link,bootstrap,configuration,to,concrete,nodes,this,method,is,safe,to,call,more,than,once,as,long,as,each,call,s,bootstrap,configuration,resolves,to,the,same,set,of,nodes,param,bootstrap,configuration,a,description,of,the,nodes,that,should,form,the,initial,configuration,return,whether,this,call,successfully,set,the,initial,configuration,if,false,the,cluster,has,already,been,bootstrapped;public,boolean,set,initial,configuration,final,bootstrap,configuration,bootstrap,configuration,final,list,discovery,node,self,and,discovered,peers,new,array,list,self,and,discovered,peers,add,get,local,node,get,found,peers,for,each,self,and,discovered,peers,add,final,voting,configuration,voting,configuration,bootstrap,configuration,resolve,self,and,discovered,peers,return,set,initial,configuration,voting,configuration
Coordinator -> public boolean setInitialConfiguration(final BootstrapConfiguration bootstrapConfiguration);1544203400;Sets the initial configuration by resolving the given {@link BootstrapConfiguration} to concrete nodes. This method is safe to call_more than once, as long as each call's bootstrap configuration resolves to the same set of nodes.__@param bootstrapConfiguration A description of the nodes that should form the initial configuration._@return whether this call successfully set the initial configuration - if false, the cluster has already been bootstrapped.;public boolean setInitialConfiguration(final BootstrapConfiguration bootstrapConfiguration) {_        final List<DiscoveryNode> selfAndDiscoveredPeers = new ArrayList<>()__        selfAndDiscoveredPeers.add(getLocalNode())__        getFoundPeers().forEach(selfAndDiscoveredPeers::add)__        final VotingConfiguration votingConfiguration = bootstrapConfiguration.resolve(selfAndDiscoveredPeers)__        return setInitialConfiguration(votingConfiguration)__    };sets,the,initial,configuration,by,resolving,the,given,link,bootstrap,configuration,to,concrete,nodes,this,method,is,safe,to,call,more,than,once,as,long,as,each,call,s,bootstrap,configuration,resolves,to,the,same,set,of,nodes,param,bootstrap,configuration,a,description,of,the,nodes,that,should,form,the,initial,configuration,return,whether,this,call,successfully,set,the,initial,configuration,if,false,the,cluster,has,already,been,bootstrapped;public,boolean,set,initial,configuration,final,bootstrap,configuration,bootstrap,configuration,final,list,discovery,node,self,and,discovered,peers,new,array,list,self,and,discovered,peers,add,get,local,node,get,found,peers,for,each,self,and,discovered,peers,add,final,voting,configuration,voting,configuration,bootstrap,configuration,resolve,self,and,discovered,peers,return,set,initial,configuration,voting,configuration
Coordinator -> public boolean setInitialConfiguration(final BootstrapConfiguration bootstrapConfiguration);1544254415;Sets the initial configuration by resolving the given {@link BootstrapConfiguration} to concrete nodes. This method is safe to call_more than once, as long as each call's bootstrap configuration resolves to the same set of nodes.__@param bootstrapConfiguration A description of the nodes that should form the initial configuration._@return whether this call successfully set the initial configuration - if false, the cluster has already been bootstrapped.;public boolean setInitialConfiguration(final BootstrapConfiguration bootstrapConfiguration) {_        final List<DiscoveryNode> selfAndDiscoveredPeers = new ArrayList<>()__        selfAndDiscoveredPeers.add(getLocalNode())__        getFoundPeers().forEach(selfAndDiscoveredPeers::add)__        final VotingConfiguration votingConfiguration = bootstrapConfiguration.resolve(selfAndDiscoveredPeers)__        return setInitialConfiguration(votingConfiguration)__    };sets,the,initial,configuration,by,resolving,the,given,link,bootstrap,configuration,to,concrete,nodes,this,method,is,safe,to,call,more,than,once,as,long,as,each,call,s,bootstrap,configuration,resolves,to,the,same,set,of,nodes,param,bootstrap,configuration,a,description,of,the,nodes,that,should,form,the,initial,configuration,return,whether,this,call,successfully,set,the,initial,configuration,if,false,the,cluster,has,already,been,bootstrapped;public,boolean,set,initial,configuration,final,bootstrap,configuration,bootstrap,configuration,final,list,discovery,node,self,and,discovered,peers,new,array,list,self,and,discovered,peers,add,get,local,node,get,found,peers,for,each,self,and,discovered,peers,add,final,voting,configuration,voting,configuration,bootstrap,configuration,resolve,self,and,discovered,peers,return,set,initial,configuration,voting,configuration
Coordinator -> public boolean setInitialConfiguration(final BootstrapConfiguration bootstrapConfiguration);1544462583;Sets the initial configuration by resolving the given {@link BootstrapConfiguration} to concrete nodes. This method is safe to call_more than once, as long as each call's bootstrap configuration resolves to the same set of nodes.__@param bootstrapConfiguration A description of the nodes that should form the initial configuration._@return whether this call successfully set the initial configuration - if false, the cluster has already been bootstrapped.;public boolean setInitialConfiguration(final BootstrapConfiguration bootstrapConfiguration) {_        final List<DiscoveryNode> selfAndDiscoveredPeers = new ArrayList<>()__        selfAndDiscoveredPeers.add(getLocalNode())__        getFoundPeers().forEach(selfAndDiscoveredPeers::add)__        final VotingConfiguration votingConfiguration = bootstrapConfiguration.resolve(selfAndDiscoveredPeers)__        return setInitialConfiguration(votingConfiguration)__    };sets,the,initial,configuration,by,resolving,the,given,link,bootstrap,configuration,to,concrete,nodes,this,method,is,safe,to,call,more,than,once,as,long,as,each,call,s,bootstrap,configuration,resolves,to,the,same,set,of,nodes,param,bootstrap,configuration,a,description,of,the,nodes,that,should,form,the,initial,configuration,return,whether,this,call,successfully,set,the,initial,configuration,if,false,the,cluster,has,already,been,bootstrapped;public,boolean,set,initial,configuration,final,bootstrap,configuration,bootstrap,configuration,final,list,discovery,node,self,and,discovered,peers,new,array,list,self,and,discovered,peers,add,get,local,node,get,found,peers,for,each,self,and,discovered,peers,add,final,voting,configuration,voting,configuration,bootstrap,configuration,resolve,self,and,discovered,peers,return,set,initial,configuration,voting,configuration
Coordinator -> public boolean setInitialConfiguration(final BootstrapConfiguration bootstrapConfiguration);1544523743;Sets the initial configuration by resolving the given {@link BootstrapConfiguration} to concrete nodes. This method is safe to call_more than once, as long as each call's bootstrap configuration resolves to the same set of nodes.__@param bootstrapConfiguration A description of the nodes that should form the initial configuration._@return whether this call successfully set the initial configuration - if false, the cluster has already been bootstrapped.;public boolean setInitialConfiguration(final BootstrapConfiguration bootstrapConfiguration) {_        final List<DiscoveryNode> selfAndDiscoveredPeers = new ArrayList<>()__        selfAndDiscoveredPeers.add(getLocalNode())__        getFoundPeers().forEach(selfAndDiscoveredPeers::add)__        final VotingConfiguration votingConfiguration = bootstrapConfiguration.resolve(selfAndDiscoveredPeers)__        return setInitialConfiguration(votingConfiguration)__    };sets,the,initial,configuration,by,resolving,the,given,link,bootstrap,configuration,to,concrete,nodes,this,method,is,safe,to,call,more,than,once,as,long,as,each,call,s,bootstrap,configuration,resolves,to,the,same,set,of,nodes,param,bootstrap,configuration,a,description,of,the,nodes,that,should,form,the,initial,configuration,return,whether,this,call,successfully,set,the,initial,configuration,if,false,the,cluster,has,already,been,bootstrapped;public,boolean,set,initial,configuration,final,bootstrap,configuration,bootstrap,configuration,final,list,discovery,node,self,and,discovered,peers,new,array,list,self,and,discovered,peers,add,get,local,node,get,found,peers,for,each,self,and,discovered,peers,add,final,voting,configuration,voting,configuration,bootstrap,configuration,resolve,self,and,discovered,peers,return,set,initial,configuration,voting,configuration
Coordinator -> public boolean setInitialConfiguration(final BootstrapConfiguration bootstrapConfiguration);1544546419;Sets the initial configuration by resolving the given {@link BootstrapConfiguration} to concrete nodes. This method is safe to call_more than once, as long as each call's bootstrap configuration resolves to the same set of nodes.__@param bootstrapConfiguration A description of the nodes that should form the initial configuration._@return whether this call successfully set the initial configuration - if false, the cluster has already been bootstrapped.;public boolean setInitialConfiguration(final BootstrapConfiguration bootstrapConfiguration) {_        final List<DiscoveryNode> selfAndDiscoveredPeers = new ArrayList<>()__        selfAndDiscoveredPeers.add(getLocalNode())__        getFoundPeers().forEach(selfAndDiscoveredPeers::add)__        final VotingConfiguration votingConfiguration = bootstrapConfiguration.resolve(selfAndDiscoveredPeers)__        return setInitialConfiguration(votingConfiguration)__    };sets,the,initial,configuration,by,resolving,the,given,link,bootstrap,configuration,to,concrete,nodes,this,method,is,safe,to,call,more,than,once,as,long,as,each,call,s,bootstrap,configuration,resolves,to,the,same,set,of,nodes,param,bootstrap,configuration,a,description,of,the,nodes,that,should,form,the,initial,configuration,return,whether,this,call,successfully,set,the,initial,configuration,if,false,the,cluster,has,already,been,bootstrapped;public,boolean,set,initial,configuration,final,bootstrap,configuration,bootstrap,configuration,final,list,discovery,node,self,and,discovered,peers,new,array,list,self,and,discovered,peers,add,get,local,node,get,found,peers,for,each,self,and,discovered,peers,add,final,voting,configuration,voting,configuration,bootstrap,configuration,resolve,self,and,discovered,peers,return,set,initial,configuration,voting,configuration
Coordinator -> public boolean setInitialConfiguration(final BootstrapConfiguration bootstrapConfiguration);1545319912;Sets the initial configuration by resolving the given {@link BootstrapConfiguration} to concrete nodes. This method is safe to call_more than once, as long as each call's bootstrap configuration resolves to the same set of nodes.__@param bootstrapConfiguration A description of the nodes that should form the initial configuration._@return whether this call successfully set the initial configuration - if false, the cluster has already been bootstrapped.;public boolean setInitialConfiguration(final BootstrapConfiguration bootstrapConfiguration) {_        final List<DiscoveryNode> selfAndDiscoveredPeers = new ArrayList<>()__        selfAndDiscoveredPeers.add(getLocalNode())__        getFoundPeers().forEach(selfAndDiscoveredPeers::add)__        final VotingConfiguration votingConfiguration = bootstrapConfiguration.resolve(selfAndDiscoveredPeers)__        return setInitialConfiguration(votingConfiguration)__    };sets,the,initial,configuration,by,resolving,the,given,link,bootstrap,configuration,to,concrete,nodes,this,method,is,safe,to,call,more,than,once,as,long,as,each,call,s,bootstrap,configuration,resolves,to,the,same,set,of,nodes,param,bootstrap,configuration,a,description,of,the,nodes,that,should,form,the,initial,configuration,return,whether,this,call,successfully,set,the,initial,configuration,if,false,the,cluster,has,already,been,bootstrapped;public,boolean,set,initial,configuration,final,bootstrap,configuration,bootstrap,configuration,final,list,discovery,node,self,and,discovered,peers,new,array,list,self,and,discovered,peers,add,get,local,node,get,found,peers,for,each,self,and,discovered,peers,add,final,voting,configuration,voting,configuration,bootstrap,configuration,resolve,self,and,discovered,peers,return,set,initial,configuration,voting,configuration
Coordinator -> public boolean setInitialConfiguration(final BootstrapConfiguration bootstrapConfiguration);1545982624;Sets the initial configuration by resolving the given {@link BootstrapConfiguration} to concrete nodes. This method is safe to call_more than once, as long as each call's bootstrap configuration resolves to the same set of nodes.__@param bootstrapConfiguration A description of the nodes that should form the initial configuration._@return whether this call successfully set the initial configuration - if false, the cluster has already been bootstrapped.;public boolean setInitialConfiguration(final BootstrapConfiguration bootstrapConfiguration) {_        final List<DiscoveryNode> selfAndDiscoveredPeers = new ArrayList<>()__        selfAndDiscoveredPeers.add(getLocalNode())__        getFoundPeers().forEach(selfAndDiscoveredPeers::add)__        final VotingConfiguration votingConfiguration = bootstrapConfiguration.resolve(selfAndDiscoveredPeers)__        return setInitialConfiguration(votingConfiguration)__    };sets,the,initial,configuration,by,resolving,the,given,link,bootstrap,configuration,to,concrete,nodes,this,method,is,safe,to,call,more,than,once,as,long,as,each,call,s,bootstrap,configuration,resolves,to,the,same,set,of,nodes,param,bootstrap,configuration,a,description,of,the,nodes,that,should,form,the,initial,configuration,return,whether,this,call,successfully,set,the,initial,configuration,if,false,the,cluster,has,already,been,bootstrapped;public,boolean,set,initial,configuration,final,bootstrap,configuration,bootstrap,configuration,final,list,discovery,node,self,and,discovered,peers,new,array,list,self,and,discovered,peers,add,get,local,node,get,found,peers,for,each,self,and,discovered,peers,add,final,voting,configuration,voting,configuration,bootstrap,configuration,resolve,self,and,discovered,peers,return,set,initial,configuration,voting,configuration
Coordinator -> public boolean setInitialConfiguration(final BootstrapConfiguration bootstrapConfiguration);1546592956;Sets the initial configuration by resolving the given {@link BootstrapConfiguration} to concrete nodes. This method is safe to call_more than once, as long as each call's bootstrap configuration resolves to the same set of nodes.__@param bootstrapConfiguration A description of the nodes that should form the initial configuration._@return whether this call successfully set the initial configuration - if false, the cluster has already been bootstrapped.;public boolean setInitialConfiguration(final BootstrapConfiguration bootstrapConfiguration) {_        final List<DiscoveryNode> selfAndDiscoveredPeers = new ArrayList<>()__        selfAndDiscoveredPeers.add(getLocalNode())__        getFoundPeers().forEach(selfAndDiscoveredPeers::add)__        final VotingConfiguration votingConfiguration = bootstrapConfiguration.resolve(selfAndDiscoveredPeers)__        return setInitialConfiguration(votingConfiguration)__    };sets,the,initial,configuration,by,resolving,the,given,link,bootstrap,configuration,to,concrete,nodes,this,method,is,safe,to,call,more,than,once,as,long,as,each,call,s,bootstrap,configuration,resolves,to,the,same,set,of,nodes,param,bootstrap,configuration,a,description,of,the,nodes,that,should,form,the,initial,configuration,return,whether,this,call,successfully,set,the,initial,configuration,if,false,the,cluster,has,already,been,bootstrapped;public,boolean,set,initial,configuration,final,bootstrap,configuration,bootstrap,configuration,final,list,discovery,node,self,and,discovered,peers,new,array,list,self,and,discovered,peers,add,get,local,node,get,found,peers,for,each,self,and,discovered,peers,add,final,voting,configuration,voting,configuration,bootstrap,configuration,resolve,self,and,discovered,peers,return,set,initial,configuration,voting,configuration
Coordinator -> public boolean setInitialConfiguration(final BootstrapConfiguration bootstrapConfiguration);1546850547;Sets the initial configuration by resolving the given {@link BootstrapConfiguration} to concrete nodes. This method is safe to call_more than once, as long as each call's bootstrap configuration resolves to the same set of nodes.__@param bootstrapConfiguration A description of the nodes that should form the initial configuration._@return whether this call successfully set the initial configuration - if false, the cluster has already been bootstrapped.;public boolean setInitialConfiguration(final BootstrapConfiguration bootstrapConfiguration) {_        final List<DiscoveryNode> selfAndDiscoveredPeers = new ArrayList<>()__        selfAndDiscoveredPeers.add(getLocalNode())__        getFoundPeers().forEach(selfAndDiscoveredPeers::add)__        final VotingConfiguration votingConfiguration = bootstrapConfiguration.resolve(selfAndDiscoveredPeers)__        return setInitialConfiguration(votingConfiguration)__    };sets,the,initial,configuration,by,resolving,the,given,link,bootstrap,configuration,to,concrete,nodes,this,method,is,safe,to,call,more,than,once,as,long,as,each,call,s,bootstrap,configuration,resolves,to,the,same,set,of,nodes,param,bootstrap,configuration,a,description,of,the,nodes,that,should,form,the,initial,configuration,return,whether,this,call,successfully,set,the,initial,configuration,if,false,the,cluster,has,already,been,bootstrapped;public,boolean,set,initial,configuration,final,bootstrap,configuration,bootstrap,configuration,final,list,discovery,node,self,and,discovered,peers,new,array,list,self,and,discovered,peers,add,get,local,node,get,found,peers,for,each,self,and,discovered,peers,add,final,voting,configuration,voting,configuration,bootstrap,configuration,resolve,self,and,discovered,peers,return,set,initial,configuration,voting,configuration
Coordinator -> public boolean setInitialConfiguration(final BootstrapConfiguration bootstrapConfiguration);1547049229;Sets the initial configuration by resolving the given {@link BootstrapConfiguration} to concrete nodes. This method is safe to call_more than once, as long as each call's bootstrap configuration resolves to the same set of nodes.__@param bootstrapConfiguration A description of the nodes that should form the initial configuration._@return whether this call successfully set the initial configuration - if false, the cluster has already been bootstrapped.;public boolean setInitialConfiguration(final BootstrapConfiguration bootstrapConfiguration) {_        final List<DiscoveryNode> selfAndDiscoveredPeers = new ArrayList<>()__        selfAndDiscoveredPeers.add(getLocalNode())__        getFoundPeers().forEach(selfAndDiscoveredPeers::add)__        final VotingConfiguration votingConfiguration = bootstrapConfiguration.resolve(selfAndDiscoveredPeers)__        return setInitialConfiguration(votingConfiguration)__    };sets,the,initial,configuration,by,resolving,the,given,link,bootstrap,configuration,to,concrete,nodes,this,method,is,safe,to,call,more,than,once,as,long,as,each,call,s,bootstrap,configuration,resolves,to,the,same,set,of,nodes,param,bootstrap,configuration,a,description,of,the,nodes,that,should,form,the,initial,configuration,return,whether,this,call,successfully,set,the,initial,configuration,if,false,the,cluster,has,already,been,bootstrapped;public,boolean,set,initial,configuration,final,bootstrap,configuration,bootstrap,configuration,final,list,discovery,node,self,and,discovered,peers,new,array,list,self,and,discovered,peers,add,get,local,node,get,found,peers,for,each,self,and,discovered,peers,add,final,voting,configuration,voting,configuration,bootstrap,configuration,resolve,self,and,discovered,peers,return,set,initial,configuration,voting,configuration
Coordinator -> public boolean setInitialConfiguration(final BootstrapConfiguration bootstrapConfiguration);1547121470;Sets the initial configuration by resolving the given {@link BootstrapConfiguration} to concrete nodes. This method is safe to call_more than once, as long as each call's bootstrap configuration resolves to the same set of nodes.__@param bootstrapConfiguration A description of the nodes that should form the initial configuration._@return whether this call successfully set the initial configuration - if false, the cluster has already been bootstrapped.;public boolean setInitialConfiguration(final BootstrapConfiguration bootstrapConfiguration) {_        final List<DiscoveryNode> selfAndDiscoveredPeers = new ArrayList<>()__        selfAndDiscoveredPeers.add(getLocalNode())__        getFoundPeers().forEach(selfAndDiscoveredPeers::add)__        final VotingConfiguration votingConfiguration = bootstrapConfiguration.resolve(selfAndDiscoveredPeers)__        return setInitialConfiguration(votingConfiguration)__    };sets,the,initial,configuration,by,resolving,the,given,link,bootstrap,configuration,to,concrete,nodes,this,method,is,safe,to,call,more,than,once,as,long,as,each,call,s,bootstrap,configuration,resolves,to,the,same,set,of,nodes,param,bootstrap,configuration,a,description,of,the,nodes,that,should,form,the,initial,configuration,return,whether,this,call,successfully,set,the,initial,configuration,if,false,the,cluster,has,already,been,bootstrapped;public,boolean,set,initial,configuration,final,bootstrap,configuration,bootstrap,configuration,final,list,discovery,node,self,and,discovered,peers,new,array,list,self,and,discovered,peers,add,get,local,node,get,found,peers,for,each,self,and,discovered,peers,add,final,voting,configuration,voting,configuration,bootstrap,configuration,resolve,self,and,discovered,peers,return,set,initial,configuration,voting,configuration
Coordinator -> public boolean setInitialConfiguration(final BootstrapConfiguration bootstrapConfiguration);1547219208;Sets the initial configuration by resolving the given {@link BootstrapConfiguration} to concrete nodes. This method is safe to call_more than once, as long as each call's bootstrap configuration resolves to the same set of nodes.__@param bootstrapConfiguration A description of the nodes that should form the initial configuration._@return whether this call successfully set the initial configuration - if false, the cluster has already been bootstrapped.;public boolean setInitialConfiguration(final BootstrapConfiguration bootstrapConfiguration) {_        final List<DiscoveryNode> selfAndDiscoveredPeers = new ArrayList<>()__        selfAndDiscoveredPeers.add(getLocalNode())__        getFoundPeers().forEach(selfAndDiscoveredPeers::add)__        final VotingConfiguration votingConfiguration = bootstrapConfiguration.resolve(selfAndDiscoveredPeers)__        return setInitialConfiguration(votingConfiguration)__    };sets,the,initial,configuration,by,resolving,the,given,link,bootstrap,configuration,to,concrete,nodes,this,method,is,safe,to,call,more,than,once,as,long,as,each,call,s,bootstrap,configuration,resolves,to,the,same,set,of,nodes,param,bootstrap,configuration,a,description,of,the,nodes,that,should,form,the,initial,configuration,return,whether,this,call,successfully,set,the,initial,configuration,if,false,the,cluster,has,already,been,bootstrapped;public,boolean,set,initial,configuration,final,bootstrap,configuration,bootstrap,configuration,final,list,discovery,node,self,and,discovered,peers,new,array,list,self,and,discovered,peers,add,get,local,node,get,found,peers,for,each,self,and,discovered,peers,add,final,voting,configuration,voting,configuration,bootstrap,configuration,resolve,self,and,discovered,peers,return,set,initial,configuration,voting,configuration
Coordinator -> public boolean setInitialConfiguration(final BootstrapConfiguration bootstrapConfiguration);1547573528;Sets the initial configuration by resolving the given {@link BootstrapConfiguration} to concrete nodes. This method is safe to call_more than once, as long as each call's bootstrap configuration resolves to the same set of nodes.__@param bootstrapConfiguration A description of the nodes that should form the initial configuration._@return whether this call successfully set the initial configuration - if false, the cluster has already been bootstrapped.;public boolean setInitialConfiguration(final BootstrapConfiguration bootstrapConfiguration) {_        final List<DiscoveryNode> selfAndDiscoveredPeers = new ArrayList<>()__        selfAndDiscoveredPeers.add(getLocalNode())__        getFoundPeers().forEach(selfAndDiscoveredPeers::add)__        final VotingConfiguration votingConfiguration = bootstrapConfiguration.resolve(selfAndDiscoveredPeers)__        return setInitialConfiguration(votingConfiguration)__    };sets,the,initial,configuration,by,resolving,the,given,link,bootstrap,configuration,to,concrete,nodes,this,method,is,safe,to,call,more,than,once,as,long,as,each,call,s,bootstrap,configuration,resolves,to,the,same,set,of,nodes,param,bootstrap,configuration,a,description,of,the,nodes,that,should,form,the,initial,configuration,return,whether,this,call,successfully,set,the,initial,configuration,if,false,the,cluster,has,already,been,bootstrapped;public,boolean,set,initial,configuration,final,bootstrap,configuration,bootstrap,configuration,final,list,discovery,node,self,and,discovered,peers,new,array,list,self,and,discovered,peers,add,get,local,node,get,found,peers,for,each,self,and,discovered,peers,add,final,voting,configuration,voting,configuration,bootstrap,configuration,resolve,self,and,discovered,peers,return,set,initial,configuration,voting,configuration
Coordinator -> public boolean setInitialConfiguration(final BootstrapConfiguration bootstrapConfiguration);1547625930;Sets the initial configuration by resolving the given {@link BootstrapConfiguration} to concrete nodes. This method is safe to call_more than once, as long as each call's bootstrap configuration resolves to the same set of nodes.__@param bootstrapConfiguration A description of the nodes that should form the initial configuration._@return whether this call successfully set the initial configuration - if false, the cluster has already been bootstrapped.;public boolean setInitialConfiguration(final BootstrapConfiguration bootstrapConfiguration) {_        final List<DiscoveryNode> selfAndDiscoveredPeers = new ArrayList<>()__        selfAndDiscoveredPeers.add(getLocalNode())__        getFoundPeers().forEach(selfAndDiscoveredPeers::add)__        final VotingConfiguration votingConfiguration = bootstrapConfiguration.resolve(selfAndDiscoveredPeers)__        return setInitialConfiguration(votingConfiguration)__    };sets,the,initial,configuration,by,resolving,the,given,link,bootstrap,configuration,to,concrete,nodes,this,method,is,safe,to,call,more,than,once,as,long,as,each,call,s,bootstrap,configuration,resolves,to,the,same,set,of,nodes,param,bootstrap,configuration,a,description,of,the,nodes,that,should,form,the,initial,configuration,return,whether,this,call,successfully,set,the,initial,configuration,if,false,the,cluster,has,already,been,bootstrapped;public,boolean,set,initial,configuration,final,bootstrap,configuration,bootstrap,configuration,final,list,discovery,node,self,and,discovered,peers,new,array,list,self,and,discovered,peers,add,get,local,node,get,found,peers,for,each,self,and,discovered,peers,add,final,voting,configuration,voting,configuration,bootstrap,configuration,resolve,self,and,discovered,peers,return,set,initial,configuration,voting,configuration
Coordinator -> boolean cancelCommittedPublication();1549041491;If there is any current committed publication, this method cancels it._This method is used exclusively by tests._@return true if publication was cancelled, false if there is no current committed publication.;boolean cancelCommittedPublication() {_        synchronized (mutex) {_            if (currentPublication.isPresent() && currentPublication.get().isCommitted()) {_                currentPublication.get().cancel("cancelCommittedPublication")__                return true__            }_            return false__        }_    };if,there,is,any,current,committed,publication,this,method,cancels,it,this,method,is,used,exclusively,by,tests,return,true,if,publication,was,cancelled,false,if,there,is,no,current,committed,publication;boolean,cancel,committed,publication,synchronized,mutex,if,current,publication,is,present,current,publication,get,is,committed,current,publication,get,cancel,cancel,committed,publication,return,true,return,false
Coordinator -> boolean cancelCommittedPublication();1549094096;If there is any current committed publication, this method cancels it._This method is used exclusively by tests._@return true if publication was cancelled, false if there is no current committed publication.;boolean cancelCommittedPublication() {_        synchronized (mutex) {_            if (currentPublication.isPresent() && currentPublication.get().isCommitted()) {_                currentPublication.get().cancel("cancelCommittedPublication")__                return true__            }_            return false__        }_    };if,there,is,any,current,committed,publication,this,method,cancels,it,this,method,is,used,exclusively,by,tests,return,true,if,publication,was,cancelled,false,if,there,is,no,current,committed,publication;boolean,cancel,committed,publication,synchronized,mutex,if,current,publication,is,present,current,publication,get,is,committed,current,publication,get,cancel,cancel,committed,publication,return,true,return,false
Coordinator -> boolean cancelCommittedPublication();1549356476;If there is any current committed publication, this method cancels it._This method is used exclusively by tests._@return true if publication was cancelled, false if there is no current committed publication.;boolean cancelCommittedPublication() {_        synchronized (mutex) {_            if (currentPublication.isPresent() && currentPublication.get().isCommitted()) {_                currentPublication.get().cancel("cancelCommittedPublication")__                return true__            }_            return false__        }_    };if,there,is,any,current,committed,publication,this,method,cancels,it,this,method,is,used,exclusively,by,tests,return,true,if,publication,was,cancelled,false,if,there,is,no,current,committed,publication;boolean,cancel,committed,publication,synchronized,mutex,if,current,publication,is,present,current,publication,get,is,committed,current,publication,get,cancel,cancel,committed,publication,return,true,return,false
Coordinator -> boolean cancelCommittedPublication();1549452878;If there is any current committed publication, this method cancels it._This method is used exclusively by tests._@return true if publication was cancelled, false if there is no current committed publication.;boolean cancelCommittedPublication() {_        synchronized (mutex) {_            if (currentPublication.isPresent() && currentPublication.get().isCommitted()) {_                currentPublication.get().cancel("cancelCommittedPublication")__                return true__            }_            return false__        }_    };if,there,is,any,current,committed,publication,this,method,cancels,it,this,method,is,used,exclusively,by,tests,return,true,if,publication,was,cancelled,false,if,there,is,no,current,committed,publication;boolean,cancel,committed,publication,synchronized,mutex,if,current,publication,is,present,current,publication,get,is,committed,current,publication,get,cancel,cancel,committed,publication,return,true,return,false
Coordinator -> boolean cancelCommittedPublication();1549608646;If there is any current committed publication, this method cancels it._This method is used exclusively by tests._@return true if publication was cancelled, false if there is no current committed publication.;boolean cancelCommittedPublication() {_        synchronized (mutex) {_            if (currentPublication.isPresent() && currentPublication.get().isCommitted()) {_                currentPublication.get().cancel("cancelCommittedPublication")__                return true__            }_            return false__        }_    };if,there,is,any,current,committed,publication,this,method,cancels,it,this,method,is,used,exclusively,by,tests,return,true,if,publication,was,cancelled,false,if,there,is,no,current,committed,publication;boolean,cancel,committed,publication,synchronized,mutex,if,current,publication,is,present,current,publication,get,is,committed,current,publication,get,cancel,cancel,committed,publication,return,true,return,false
Coordinator -> boolean cancelCommittedPublication();1551086646;If there is any current committed publication, this method cancels it._This method is used exclusively by tests._@return true if publication was cancelled, false if there is no current committed publication.;boolean cancelCommittedPublication() {_        synchronized (mutex) {_            if (currentPublication.isPresent() && currentPublication.get().isCommitted()) {_                currentPublication.get().cancel("cancelCommittedPublication")__                return true__            }_            return false__        }_    };if,there,is,any,current,committed,publication,this,method,cancels,it,this,method,is,used,exclusively,by,tests,return,true,if,publication,was,cancelled,false,if,there,is,no,current,committed,publication;boolean,cancel,committed,publication,synchronized,mutex,if,current,publication,is,present,current,publication,get,is,committed,current,publication,get,cancel,cancel,committed,publication,return,true,return,false
