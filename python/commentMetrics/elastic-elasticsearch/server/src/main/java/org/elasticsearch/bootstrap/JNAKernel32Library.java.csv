commented;modifiers;parameterAmount;loc;comment;code
false;static;0;3;;static JNAKernel32Library getInstance() {     return Holder.instance. }
true;;1;11;/**  * Adds a Console Ctrl Handler.  *  * @return true if the handler is correctly set  * @throws java.lang.UnsatisfiedLinkError if the Kernel32 library is not loaded or if the native function is not found  * @throws java.lang.NoClassDefFoundError if the library for native calls is missing  */ ;/**  * Adds a Console Ctrl Handler.  *  * @return true if the handler is correctly set  * @throws java.lang.UnsatisfiedLinkError if the Kernel32 library is not loaded or if the native function is not found  * @throws java.lang.NoClassDefFoundError if the library for native calls is missing  */ boolean addConsoleCtrlHandler(ConsoleCtrlHandler handler) {     boolean result = false.     if (handler != null) {         NativeHandlerCallback callback = new NativeHandlerCallback(handler).         result = SetConsoleCtrlHandler(callback, true).         if (result) {             callbacks.add(callback).         }     }     return result. }
false;;0;3;;List<Object> getCallbacks() {     return Collections.<Object>unmodifiableList(callbacks). }
true;native;2;1;/**  * Native call to the Kernel32 API to set a new Console Ctrl Handler.  *  * @return true if the handler is correctly set  * @throws java.lang.UnsatisfiedLinkError if the Kernel32 library is not loaded or if the native function is not found  * @throws java.lang.NoClassDefFoundError if the library for native calls is missing  */ ;/**  * Native call to the Kernel32 API to set a new Console Ctrl Handler.  *  * @return true if the handler is correctly set  * @throws java.lang.UnsatisfiedLinkError if the Kernel32 library is not loaded or if the native function is not found  * @throws java.lang.NoClassDefFoundError if the library for native calls is missing  */ native boolean SetConsoleCtrlHandler(StdCallLibrary.StdCallCallback handler, boolean add).
false;public;1;8;;public boolean callback(long dwCtrlType) {     int event = (int) dwCtrlType.     if (logger.isDebugEnabled()) {         logger.debug("console control handler receives event [{}@{}]", event, dwCtrlType).     }     return handler.handle(event). }
false;protected;0;4;;@Override protected List<String> getFieldOrder() {     return Arrays.asList("BaseAddress", "AllocationBase", "AllocationProtect", "RegionSize", "State", "Protect", "Type"). }
true;native;2;1;/**  * Locks the specified region of the process's virtual address space into physical  * memory, ensuring that subsequent access to the region will not incur a page fault.  *  * https://msdn.microsoft.com/en-us/library/windows/desktop/aa366895%28v=vs.85%29.aspx  *  * @param address A pointer to the base address of the region of pages to be locked.  * @param size The size of the region to be locked, in bytes.  * @return true if the function succeeds  */ ;/**  * Locks the specified region of the process's virtual address space into physical  * memory, ensuring that subsequent access to the region will not incur a page fault.  *  * https://msdn.microsoft.com/en-us/library/windows/desktop/aa366895%28v=vs.85%29.aspx  *  * @param address A pointer to the base address of the region of pages to be locked.  * @param size The size of the region to be locked, in bytes.  * @return true if the function succeeds  */ native boolean VirtualLock(Pointer address, SizeT size).
true;native;4;1;/**  * Retrieves information about a range of pages within the virtual address space of a specified process.  *  * https://msdn.microsoft.com/en-us/library/windows/desktop/aa366907%28v=vs.85%29.aspx  *  * @param handle A handle to the process whose memory information is queried.  * @param address A pointer to the base address of the region of pages to be queried.  * @param memoryInfo A pointer to a structure in which information about the specified page range is returned.  * @param length The size of the buffer pointed to by the memoryInfo parameter, in bytes.  * @return the actual number of bytes returned in the information buffer.  */ ;/**  * Retrieves information about a range of pages within the virtual address space of a specified process.  *  * https://msdn.microsoft.com/en-us/library/windows/desktop/aa366907%28v=vs.85%29.aspx  *  * @param handle A handle to the process whose memory information is queried.  * @param address A pointer to the base address of the region of pages to be queried.  * @param memoryInfo A pointer to a structure in which information about the specified page range is returned.  * @param length The size of the buffer pointed to by the memoryInfo parameter, in bytes.  * @return the actual number of bytes returned in the information buffer.  */ native int VirtualQueryEx(Pointer handle, Pointer address, MemoryBasicInformation memoryInfo, int length).
true;native;3;1;/**  * Sets the minimum and maximum working set sizes for the specified process.  *  * https://msdn.microsoft.com/en-us/library/windows/desktop/ms686234%28v=vs.85%29.aspx  *  * @param handle A handle to the process whose working set sizes is to be set.  * @param minSize The minimum working set size for the process, in bytes.  * @param maxSize The maximum working set size for the process, in bytes.  * @return true if the function succeeds.  */ ;/**  * Sets the minimum and maximum working set sizes for the specified process.  *  * https://msdn.microsoft.com/en-us/library/windows/desktop/ms686234%28v=vs.85%29.aspx  *  * @param handle A handle to the process whose working set sizes is to be set.  * @param minSize The minimum working set size for the process, in bytes.  * @param maxSize The maximum working set size for the process, in bytes.  * @return true if the function succeeds.  */ native boolean SetProcessWorkingSetSize(Pointer handle, SizeT minSize, SizeT maxSize).
true;native;0;1;/**  * Retrieves a pseudo handle for the current process.  *  * https://msdn.microsoft.com/en-us/library/windows/desktop/ms683179%28v=vs.85%29.aspx  *  * @return a pseudo handle to the current process.  */ ;/**  * Retrieves a pseudo handle for the current process.  *  * https://msdn.microsoft.com/en-us/library/windows/desktop/ms683179%28v=vs.85%29.aspx  *  * @return a pseudo handle to the current process.  */ native Pointer GetCurrentProcess().
true;native;1;1;/**  * Closes an open object handle.  *  * https://msdn.microsoft.com/en-us/library/windows/desktop/ms724211%28v=vs.85%29.aspx  *  * @param handle A valid handle to an open object.  * @return true if the function succeeds.  */ ;/**  * Closes an open object handle.  *  * https://msdn.microsoft.com/en-us/library/windows/desktop/ms724211%28v=vs.85%29.aspx  *  * @param handle A valid handle to an open object.  * @return true if the function succeeds.  */ native boolean CloseHandle(Pointer handle).
true;native;3;1;/**  * Retrieves the short path form of the specified path. See  * <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa364989.aspx">{@code GetShortPathName}</a>.  *  * @param lpszLongPath  the path string  * @param lpszShortPath a buffer to receive the short name  * @param cchBuffer     the size of the buffer  * @return the length of the string copied into {@code lpszShortPath}, otherwise zero for failure  */ ;/**  * Retrieves the short path form of the specified path. See  * <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa364989.aspx">{@code GetShortPathName}</a>.  *  * @param lpszLongPath  the path string  * @param lpszShortPath a buffer to receive the short name  * @param cchBuffer     the size of the buffer  * @return the length of the string copied into {@code lpszShortPath}, otherwise zero for failure  */ native int GetShortPathNameW(WString lpszLongPath, char[] lpszShortPath, int cchBuffer).
true;native;2;1;/**  * Creates or opens a new job object  *  * https://msdn.microsoft.com/en-us/library/windows/desktop/ms682409%28v=vs.85%29.aspx  *  * @param jobAttributes security attributes  * @param name job name  * @return job handle if the function succeeds  */ ;/**  * Creates or opens a new job object  *  * https://msdn.microsoft.com/en-us/library/windows/desktop/ms682409%28v=vs.85%29.aspx  *  * @param jobAttributes security attributes  * @param name job name  * @return job handle if the function succeeds  */ native Pointer CreateJobObjectW(Pointer jobAttributes, String name).
true;native;2;1;/**  * Associates a process with an existing job  *  * https://msdn.microsoft.com/en-us/library/windows/desktop/ms681949%28v=vs.85%29.aspx  *  * @param job job handle  * @param process process handle  * @return true if the function succeeds  */ ;/**  * Associates a process with an existing job  *  * https://msdn.microsoft.com/en-us/library/windows/desktop/ms681949%28v=vs.85%29.aspx  *  * @param job job handle  * @param process process handle  * @return true if the function succeeds  */ native boolean AssignProcessToJobObject(Pointer job, Pointer process).
false;protected;0;5;;@Override protected List<String> getFieldOrder() {     return Arrays.asList("PerProcessUserTimeLimit", "PerJobUserTimeLimit", "LimitFlags", "MinimumWorkingSetSize", "MaximumWorkingSetSize", "ActiveProcessLimit", "Affinity", "PriorityClass", "SchedulingClass"). }
true;native;5;1;/**  * Get job limit and state information  *  * https://msdn.microsoft.com/en-us/library/windows/desktop/ms684925%28v=vs.85%29.aspx  *  * @param job job handle  * @param infoClass information class constant  * @param info pointer to information structure  * @param infoLength size of information structure  * @param returnLength length of data written back to structure (or null if not wanted)  * @return true if the function succeeds  */ ;/**  * Get job limit and state information  *  * https://msdn.microsoft.com/en-us/library/windows/desktop/ms684925%28v=vs.85%29.aspx  *  * @param job job handle  * @param infoClass information class constant  * @param info pointer to information structure  * @param infoLength size of information structure  * @param returnLength length of data written back to structure (or null if not wanted)  * @return true if the function succeeds  */ native boolean QueryInformationJobObject(Pointer job, int infoClass, Pointer info, int infoLength, Pointer returnLength).
true;native;4;1;/**  * Set job limit and state information  *  * https://msdn.microsoft.com/en-us/library/windows/desktop/ms686216%28v=vs.85%29.aspx  *  * @param job job handle  * @param infoClass information class constant  * @param info pointer to information structure  * @param infoLength size of information structure  * @return true if the function succeeds  */ ;/**  * Set job limit and state information  *  * https://msdn.microsoft.com/en-us/library/windows/desktop/ms686216%28v=vs.85%29.aspx  *  * @param job job handle  * @param infoClass information class constant  * @param info pointer to information structure  * @param infoLength size of information structure  * @return true if the function succeeds  */ native boolean SetInformationJobObject(Pointer job, int infoClass, Pointer info, int infoLength).
