# id;timestamp;commentText;codeText;commentWords;codeWords
IndexEventListener -> default void afterIndexShardClosed(ShardId shardId, @Nullable IndexShard indexShard, Settings indexSettings);1524684173;Called after the index shard has been closed.__@param shardId The shard id;default void afterIndexShardClosed(ShardId shardId, @Nullable IndexShard indexShard, Settings indexSettings) {};called,after,the,index,shard,has,been,closed,param,shard,id,the,shard,id;default,void,after,index,shard,closed,shard,id,shard,id,nullable,index,shard,index,shard,settings,index,settings
IndexEventListener -> default void afterIndexShardClosed(ShardId shardId, @Nullable IndexShard indexShard, Settings indexSettings);1542697754;Called after the index shard has been closed.__@param shardId The shard id;default void afterIndexShardClosed(ShardId shardId, @Nullable IndexShard indexShard, Settings indexSettings) {};called,after,the,index,shard,has,been,closed,param,shard,id,the,shard,id;default,void,after,index,shard,closed,shard,id,shard,id,nullable,index,shard,index,shard,settings,index,settings
IndexEventListener -> default void afterIndexShardClosed(ShardId shardId, @Nullable IndexShard indexShard, Settings indexSettings);1550483271;Called after the index shard has been closed.__@param shardId The shard id;default void afterIndexShardClosed(ShardId shardId, @Nullable IndexShard indexShard, Settings indexSettings) {};called,after,the,index,shard,has,been,closed,param,shard,id,the,shard,id;default,void,after,index,shard,closed,shard,id,shard,id,nullable,index,shard,index,shard,settings,index,settings
IndexEventListener -> default void beforeIndexShardCreated(ShardId shardId, Settings indexSettings);1524684173;Called before the index shard gets created.;default void beforeIndexShardCreated(ShardId shardId, Settings indexSettings) {_    };called,before,the,index,shard,gets,created;default,void,before,index,shard,created,shard,id,shard,id,settings,index,settings
IndexEventListener -> default void beforeIndexShardCreated(ShardId shardId, Settings indexSettings);1542697754;Called before the index shard gets created.;default void beforeIndexShardCreated(ShardId shardId, Settings indexSettings) {_    };called,before,the,index,shard,gets,created;default,void,before,index,shard,created,shard,id,shard,id,settings,index,settings
IndexEventListener -> default void beforeIndexShardCreated(ShardId shardId, Settings indexSettings);1550483271;Called before the index shard gets created.;default void beforeIndexShardCreated(ShardId shardId, Settings indexSettings) {_    };called,before,the,index,shard,gets,created;default,void,before,index,shard,created,shard,id,shard,id,settings,index,settings
IndexEventListener -> default void onShardInactive(IndexShard indexShard);1524684173;Called when a shard is marked as inactive__@param indexShard The shard that was marked inactive;default void onShardInactive(IndexShard indexShard) {};called,when,a,shard,is,marked,as,inactive,param,index,shard,the,shard,that,was,marked,inactive;default,void,on,shard,inactive,index,shard,index,shard
IndexEventListener -> default void onShardInactive(IndexShard indexShard);1542697754;Called when a shard is marked as inactive__@param indexShard The shard that was marked inactive;default void onShardInactive(IndexShard indexShard) {};called,when,a,shard,is,marked,as,inactive,param,index,shard,the,shard,that,was,marked,inactive;default,void,on,shard,inactive,index,shard,index,shard
IndexEventListener -> default void onShardInactive(IndexShard indexShard);1550483271;Called when a shard is marked as inactive__@param indexShard The shard that was marked inactive;default void onShardInactive(IndexShard indexShard) {};called,when,a,shard,is,marked,as,inactive,param,index,shard,the,shard,that,was,marked,inactive;default,void,on,shard,inactive,index,shard,index,shard
IndexEventListener -> default void afterIndexCreated(IndexService indexService);1524684173;Called after the index has been created.;default void afterIndexCreated(IndexService indexService) {__    };called,after,the,index,has,been,created;default,void,after,index,created,index,service,index,service
IndexEventListener -> default void afterIndexCreated(IndexService indexService);1542697754;Called after the index has been created.;default void afterIndexCreated(IndexService indexService) {__    };called,after,the,index,has,been,created;default,void,after,index,created,index,service,index,service
IndexEventListener -> default void afterIndexCreated(IndexService indexService);1550483271;Called after the index has been created.;default void afterIndexCreated(IndexService indexService) {__    };called,after,the,index,has,been,created;default,void,after,index,created,index,service,index,service
IndexEventListener -> default void shardRoutingChanged(IndexShard indexShard, @Nullable ShardRouting oldRouting, ShardRouting newRouting);1524684173;Called when the shard routing has changed state.__@param indexShard The index shard_@param oldRouting The old routing state (can be null)_@param newRouting The new routing state;default void shardRoutingChanged(IndexShard indexShard, @Nullable ShardRouting oldRouting, ShardRouting newRouting) {};called,when,the,shard,routing,has,changed,state,param,index,shard,the,index,shard,param,old,routing,the,old,routing,state,can,be,null,param,new,routing,the,new,routing,state;default,void,shard,routing,changed,index,shard,index,shard,nullable,shard,routing,old,routing,shard,routing,new,routing
IndexEventListener -> default void shardRoutingChanged(IndexShard indexShard, @Nullable ShardRouting oldRouting, ShardRouting newRouting);1542697754;Called when the shard routing has changed state.__@param indexShard The index shard_@param oldRouting The old routing state (can be null)_@param newRouting The new routing state;default void shardRoutingChanged(IndexShard indexShard, @Nullable ShardRouting oldRouting, ShardRouting newRouting) {};called,when,the,shard,routing,has,changed,state,param,index,shard,the,index,shard,param,old,routing,the,old,routing,state,can,be,null,param,new,routing,the,new,routing,state;default,void,shard,routing,changed,index,shard,index,shard,nullable,shard,routing,old,routing,shard,routing,new,routing
IndexEventListener -> default void shardRoutingChanged(IndexShard indexShard, @Nullable ShardRouting oldRouting, ShardRouting newRouting);1550483271;Called when the shard routing has changed state.__@param indexShard The index shard_@param oldRouting The old routing state (can be null)_@param newRouting The new routing state;default void shardRoutingChanged(IndexShard indexShard, @Nullable ShardRouting oldRouting, ShardRouting newRouting) {};called,when,the,shard,routing,has,changed,state,param,index,shard,the,index,shard,param,old,routing,the,old,routing,state,can,be,null,param,new,routing,the,new,routing,state;default,void,shard,routing,changed,index,shard,index,shard,nullable,shard,routing,old,routing,shard,routing,new,routing
IndexEventListener -> default void afterIndexShardCreated(IndexShard indexShard);1524684173;Called after the index shard has been created.;default void afterIndexShardCreated(IndexShard indexShard) {};called,after,the,index,shard,has,been,created;default,void,after,index,shard,created,index,shard,index,shard
IndexEventListener -> default void afterIndexShardCreated(IndexShard indexShard);1542697754;Called after the index shard has been created.;default void afterIndexShardCreated(IndexShard indexShard) {};called,after,the,index,shard,has,been,created;default,void,after,index,shard,created,index,shard,index,shard
IndexEventListener -> default void afterIndexShardCreated(IndexShard indexShard);1550483271;Called after the index shard has been created.;default void afterIndexShardCreated(IndexShard indexShard) {};called,after,the,index,shard,has,been,created;default,void,after,index,shard,created,index,shard,index,shard
IndexEventListener -> default void afterIndexShardStarted(IndexShard indexShard);1524684173;Called after the index shard has been started.;default void afterIndexShardStarted(IndexShard indexShard) {};called,after,the,index,shard,has,been,started;default,void,after,index,shard,started,index,shard,index,shard
IndexEventListener -> default void afterIndexShardStarted(IndexShard indexShard);1542697754;Called after the index shard has been started.;default void afterIndexShardStarted(IndexShard indexShard) {};called,after,the,index,shard,has,been,started;default,void,after,index,shard,started,index,shard,index,shard
IndexEventListener -> default void afterIndexShardStarted(IndexShard indexShard);1550483271;Called after the index shard has been started.;default void afterIndexShardStarted(IndexShard indexShard) {};called,after,the,index,shard,has,been,started;default,void,after,index,shard,started,index,shard,index,shard
IndexEventListener -> default void afterIndexRemoved(Index index, IndexSettings indexSettings, IndexRemovalReason reason);1524684173;Called after the index has been removed.__@param index The index_@param reason       the reason for index removal;default void afterIndexRemoved(Index index, IndexSettings indexSettings, IndexRemovalReason reason) {__    };called,after,the,index,has,been,removed,param,index,the,index,param,reason,the,reason,for,index,removal;default,void,after,index,removed,index,index,index,settings,index,settings,index,removal,reason,reason
IndexEventListener -> default void afterIndexRemoved(Index index, IndexSettings indexSettings, IndexRemovalReason reason);1542697754;Called after the index has been removed.__@param index The index_@param reason       the reason for index removal;default void afterIndexRemoved(Index index, IndexSettings indexSettings, IndexRemovalReason reason) {__    };called,after,the,index,has,been,removed,param,index,the,index,param,reason,the,reason,for,index,removal;default,void,after,index,removed,index,index,index,settings,index,settings,index,removal,reason,reason
IndexEventListener -> default void afterIndexRemoved(Index index, IndexSettings indexSettings, IndexRemovalReason reason);1550483271;Called after the index has been removed.__@param index The index_@param reason       the reason for index removal;default void afterIndexRemoved(Index index, IndexSettings indexSettings, IndexRemovalReason reason) {__    };called,after,the,index,has,been,removed,param,index,the,index,param,reason,the,reason,for,index,removal;default,void,after,index,removed,index,index,index,settings,index,settings,index,removal,reason,reason
IndexEventListener -> default void beforeIndexAddedToCluster(Index index, Settings indexSettings);1524684173;Called on the Master node only before the {@link IndexService} instances is created to simulate an index creation._This happens right before the index and it's metadata is registered in the cluster state;default void beforeIndexAddedToCluster(Index index, Settings indexSettings) {_    };called,on,the,master,node,only,before,the,link,index,service,instances,is,created,to,simulate,an,index,creation,this,happens,right,before,the,index,and,it,s,metadata,is,registered,in,the,cluster,state;default,void,before,index,added,to,cluster,index,index,settings,index,settings
IndexEventListener -> default void beforeIndexAddedToCluster(Index index, Settings indexSettings);1542697754;Called on the Master node only before the {@link IndexService} instances is created to simulate an index creation._This happens right before the index and it's metadata is registered in the cluster state;default void beforeIndexAddedToCluster(Index index, Settings indexSettings) {_    };called,on,the,master,node,only,before,the,link,index,service,instances,is,created,to,simulate,an,index,creation,this,happens,right,before,the,index,and,it,s,metadata,is,registered,in,the,cluster,state;default,void,before,index,added,to,cluster,index,index,settings,index,settings
IndexEventListener -> default void beforeIndexAddedToCluster(Index index, Settings indexSettings);1550483271;Called on the Master node only before the {@link IndexService} instances is created to simulate an index creation._This happens right before the index and it's metadata is registered in the cluster state;default void beforeIndexAddedToCluster(Index index, Settings indexSettings) {_    };called,on,the,master,node,only,before,the,link,index,service,instances,is,created,to,simulate,an,index,creation,this,happens,right,before,the,index,and,it,s,metadata,is,registered,in,the,cluster,state;default,void,before,index,added,to,cluster,index,index,settings,index,settings
IndexEventListener -> default void afterIndexShardDeleted(ShardId shardId, Settings indexSettings);1524684173;Called after the index shard has been deleted from disk.__Note: this method is only called if the deletion of the shard did finish without an exception__@param shardId The shard id_@param indexSettings the shards index settings;default void afterIndexShardDeleted(ShardId shardId, Settings indexSettings) {_    };called,after,the,index,shard,has,been,deleted,from,disk,note,this,method,is,only,called,if,the,deletion,of,the,shard,did,finish,without,an,exception,param,shard,id,the,shard,id,param,index,settings,the,shards,index,settings;default,void,after,index,shard,deleted,shard,id,shard,id,settings,index,settings
IndexEventListener -> default void afterIndexShardDeleted(ShardId shardId, Settings indexSettings);1542697754;Called after the index shard has been deleted from disk.__Note: this method is only called if the deletion of the shard did finish without an exception__@param shardId The shard id_@param indexSettings the shards index settings;default void afterIndexShardDeleted(ShardId shardId, Settings indexSettings) {_    };called,after,the,index,shard,has,been,deleted,from,disk,note,this,method,is,only,called,if,the,deletion,of,the,shard,did,finish,without,an,exception,param,shard,id,the,shard,id,param,index,settings,the,shards,index,settings;default,void,after,index,shard,deleted,shard,id,shard,id,settings,index,settings
IndexEventListener -> default void afterIndexShardDeleted(ShardId shardId, Settings indexSettings);1550483271;Called after the index shard has been deleted from disk.__Note: this method is only called if the deletion of the shard did finish without an exception__@param shardId The shard id_@param indexSettings the shards index settings;default void afterIndexShardDeleted(ShardId shardId, Settings indexSettings) {_    };called,after,the,index,shard,has,been,deleted,from,disk,note,this,method,is,only,called,if,the,deletion,of,the,shard,did,finish,without,an,exception,param,shard,id,the,shard,id,param,index,settings,the,shards,index,settings;default,void,after,index,shard,deleted,shard,id,shard,id,settings,index,settings
IndexEventListener -> default void indexShardStateChanged(IndexShard indexShard, @Nullable IndexShardState previousState,                                             IndexShardState currentState, @Nullable String reason);1542697754;Called after a shard's {@link org.elasticsearch.index.shard.IndexShardState} changes._The order of concurrent events is preserved. The execution must be lightweight.__@param indexShard the shard the new state was applied to_@param previousState the previous index shard state if there was one, null otherwise_@param currentState the new shard state_@param reason the reason for the state change if there is one, null otherwise;default void indexShardStateChanged(IndexShard indexShard, @Nullable IndexShardState previousState,_                                            IndexShardState currentState, @Nullable String reason) {};called,after,a,shard,s,link,org,elasticsearch,index,shard,index,shard,state,changes,the,order,of,concurrent,events,is,preserved,the,execution,must,be,lightweight,param,index,shard,the,shard,the,new,state,was,applied,to,param,previous,state,the,previous,index,shard,state,if,there,was,one,null,otherwise,param,current,state,the,new,shard,state,param,reason,the,reason,for,the,state,change,if,there,is,one,null,otherwise;default,void,index,shard,state,changed,index,shard,index,shard,nullable,index,shard,state,previous,state,index,shard,state,current,state,nullable,string,reason
IndexEventListener -> default void indexShardStateChanged(IndexShard indexShard, @Nullable IndexShardState previousState,                                             IndexShardState currentState, @Nullable String reason);1550483271;Called after a shard's {@link org.elasticsearch.index.shard.IndexShardState} changes._The order of concurrent events is preserved. The execution must be lightweight.__@param indexShard the shard the new state was applied to_@param previousState the previous index shard state if there was one, null otherwise_@param currentState the new shard state_@param reason the reason for the state change if there is one, null otherwise;default void indexShardStateChanged(IndexShard indexShard, @Nullable IndexShardState previousState,_                                            IndexShardState currentState, @Nullable String reason) {};called,after,a,shard,s,link,org,elasticsearch,index,shard,index,shard,state,changes,the,order,of,concurrent,events,is,preserved,the,execution,must,be,lightweight,param,index,shard,the,shard,the,new,state,was,applied,to,param,previous,state,the,previous,index,shard,state,if,there,was,one,null,otherwise,param,current,state,the,new,shard,state,param,reason,the,reason,for,the,state,change,if,there,is,one,null,otherwise;default,void,index,shard,state,changed,index,shard,index,shard,nullable,index,shard,state,previous,state,index,shard,state,current,state,nullable,string,reason
IndexEventListener -> default void beforeIndexCreated(Index index, Settings indexSettings);1524684173;Called before the index gets created. Note that this is also called_when the index is created on data nodes;default void beforeIndexCreated(Index index, Settings indexSettings) {__    };called,before,the,index,gets,created,note,that,this,is,also,called,when,the,index,is,created,on,data,nodes;default,void,before,index,created,index,index,settings,index,settings
IndexEventListener -> default void beforeIndexCreated(Index index, Settings indexSettings);1542697754;Called before the index gets created. Note that this is also called_when the index is created on data nodes;default void beforeIndexCreated(Index index, Settings indexSettings) {__    };called,before,the,index,gets,created,note,that,this,is,also,called,when,the,index,is,created,on,data,nodes;default,void,before,index,created,index,index,settings,index,settings
IndexEventListener -> default void beforeIndexCreated(Index index, Settings indexSettings);1550483271;Called before the index gets created. Note that this is also called_when the index is created on data nodes;default void beforeIndexCreated(Index index, Settings indexSettings) {__    };called,before,the,index,gets,created,note,that,this,is,also,called,when,the,index,is,created,on,data,nodes;default,void,before,index,created,index,index,settings,index,settings
IndexEventListener -> default void beforeIndexRemoved(IndexService indexService, IndexRemovalReason reason);1524684173;Called before the index get closed.__@param indexService The index service_@param reason       the reason for index removal;default void beforeIndexRemoved(IndexService indexService, IndexRemovalReason reason) {__    };called,before,the,index,get,closed,param,index,service,the,index,service,param,reason,the,reason,for,index,removal;default,void,before,index,removed,index,service,index,service,index,removal,reason,reason
IndexEventListener -> default void beforeIndexRemoved(IndexService indexService, IndexRemovalReason reason);1542697754;Called before the index get closed.__@param indexService The index service_@param reason       the reason for index removal;default void beforeIndexRemoved(IndexService indexService, IndexRemovalReason reason) {__    };called,before,the,index,get,closed,param,index,service,the,index,service,param,reason,the,reason,for,index,removal;default,void,before,index,removed,index,service,index,service,index,removal,reason,reason
IndexEventListener -> default void beforeIndexRemoved(IndexService indexService, IndexRemovalReason reason);1550483271;Called before the index get closed.__@param indexService The index service_@param reason       the reason for index removal;default void beforeIndexRemoved(IndexService indexService, IndexRemovalReason reason) {__    };called,before,the,index,get,closed,param,index,service,the,index,service,param,reason,the,reason,for,index,removal;default,void,before,index,removed,index,service,index,service,index,removal,reason,reason
IndexEventListener -> default void onStoreClosed(ShardId shardId);1524684173;Called when the given shards store is closed. The store is closed once all resource have been released on the store._This implies that all index readers are closed and no recoveries are running.__@param shardId the shard ID the store belongs to;default void onStoreClosed(ShardId shardId) {};called,when,the,given,shards,store,is,closed,the,store,is,closed,once,all,resource,have,been,released,on,the,store,this,implies,that,all,index,readers,are,closed,and,no,recoveries,are,running,param,shard,id,the,shard,id,the,store,belongs,to;default,void,on,store,closed,shard,id,shard,id
IndexEventListener -> default void onStoreClosed(ShardId shardId);1542697754;Called when the given shards store is closed. The store is closed once all resource have been released on the store._This implies that all index readers are closed and no recoveries are running.__@param shardId the shard ID the store belongs to;default void onStoreClosed(ShardId shardId) {};called,when,the,given,shards,store,is,closed,the,store,is,closed,once,all,resource,have,been,released,on,the,store,this,implies,that,all,index,readers,are,closed,and,no,recoveries,are,running,param,shard,id,the,shard,id,the,store,belongs,to;default,void,on,store,closed,shard,id,shard,id
IndexEventListener -> default void onStoreClosed(ShardId shardId);1550483271;Called when the given shards store is closed. The store is closed once all resource have been released on the store._This implies that all index readers are closed and no recoveries are running.__@param shardId the shard ID the store belongs to;default void onStoreClosed(ShardId shardId) {};called,when,the,given,shards,store,is,closed,the,store,is,closed,once,all,resource,have,been,released,on,the,store,this,implies,that,all,index,readers,are,closed,and,no,recoveries,are,running,param,shard,id,the,shard,id,the,store,belongs,to;default,void,on,store,closed,shard,id,shard,id
IndexEventListener -> default void beforeIndexShardClosed(ShardId shardId, @Nullable IndexShard indexShard, Settings indexSettings);1524684173;Called before the index shard gets closed.__@param indexShard The index shard;default void beforeIndexShardClosed(ShardId shardId, @Nullable IndexShard indexShard, Settings indexSettings) {};called,before,the,index,shard,gets,closed,param,index,shard,the,index,shard;default,void,before,index,shard,closed,shard,id,shard,id,nullable,index,shard,index,shard,settings,index,settings
IndexEventListener -> default void beforeIndexShardClosed(ShardId shardId, @Nullable IndexShard indexShard, Settings indexSettings);1542697754;Called before the index shard gets closed.__@param indexShard The index shard;default void beforeIndexShardClosed(ShardId shardId, @Nullable IndexShard indexShard, Settings indexSettings) {};called,before,the,index,shard,gets,closed,param,index,shard,the,index,shard;default,void,before,index,shard,closed,shard,id,shard,id,nullable,index,shard,index,shard,settings,index,settings
IndexEventListener -> default void beforeIndexShardClosed(ShardId shardId, @Nullable IndexShard indexShard, Settings indexSettings);1550483271;Called before the index shard gets closed.__@param indexShard The index shard;default void beforeIndexShardClosed(ShardId shardId, @Nullable IndexShard indexShard, Settings indexSettings) {};called,before,the,index,shard,gets,closed,param,index,shard,the,index,shard;default,void,before,index,shard,closed,shard,id,shard,id,nullable,index,shard,index,shard,settings,index,settings
IndexEventListener -> default void beforeIndexShardDeleted(ShardId shardId, Settings indexSettings);1524684173;Called before the index shard gets deleted from disk_Note: this method is only executed on the first attempt of deleting the shard. Retries are will not invoke_this method._@param shardId The shard id_@param indexSettings the shards index settings;default void beforeIndexShardDeleted(ShardId shardId, Settings indexSettings) {_    };called,before,the,index,shard,gets,deleted,from,disk,note,this,method,is,only,executed,on,the,first,attempt,of,deleting,the,shard,retries,are,will,not,invoke,this,method,param,shard,id,the,shard,id,param,index,settings,the,shards,index,settings;default,void,before,index,shard,deleted,shard,id,shard,id,settings,index,settings
IndexEventListener -> default void beforeIndexShardDeleted(ShardId shardId, Settings indexSettings);1542697754;Called before the index shard gets deleted from disk_Note: this method is only executed on the first attempt of deleting the shard. Retries are will not invoke_this method._@param shardId The shard id_@param indexSettings the shards index settings;default void beforeIndexShardDeleted(ShardId shardId, Settings indexSettings) {_    };called,before,the,index,shard,gets,deleted,from,disk,note,this,method,is,only,executed,on,the,first,attempt,of,deleting,the,shard,retries,are,will,not,invoke,this,method,param,shard,id,the,shard,id,param,index,settings,the,shards,index,settings;default,void,before,index,shard,deleted,shard,id,shard,id,settings,index,settings
IndexEventListener -> default void beforeIndexShardDeleted(ShardId shardId, Settings indexSettings);1550483271;Called before the index shard gets deleted from disk_Note: this method is only executed on the first attempt of deleting the shard. Retries are will not invoke_this method._@param shardId The shard id_@param indexSettings the shards index settings;default void beforeIndexShardDeleted(ShardId shardId, Settings indexSettings) {_    };called,before,the,index,shard,gets,deleted,from,disk,note,this,method,is,only,executed,on,the,first,attempt,of,deleting,the,shard,retries,are,will,not,invoke,this,method,param,shard,id,the,shard,id,param,index,settings,the,shards,index,settings;default,void,before,index,shard,deleted,shard,id,shard,id,settings,index,settings
