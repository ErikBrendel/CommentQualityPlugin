commented;modifiers;parameterAmount;loc;comment;code
true;;1;3;/**  * Returns the contexts associated with the provided <code>doc</code>.  */ ;/**  * Returns the contexts associated with the provided <code>doc</code>.  */ List<CharSequence> getContexts(int doc) {     return docContexts.getOrDefault(doc, Collections.emptyList()). }
false;public;4;12;;@Override public void collect(int docID, CharSequence key, CharSequence context, float score) throws IOException {     int globalDoc = docID + docBase.     boolean isNewDoc = docContexts.containsKey(globalDoc) == false.     List<CharSequence> contexts = docContexts.computeIfAbsent(globalDoc, k -> new ArrayList<>()).     if (context != null) {         contexts.add(context).     }     if (isNewDoc) {         super.collect(docID, key, context, score).     } }
