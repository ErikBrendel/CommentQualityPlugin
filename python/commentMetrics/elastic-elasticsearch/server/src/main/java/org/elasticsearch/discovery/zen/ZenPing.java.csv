# id;timestamp;commentText;codeText;commentWords;codeWords
ZenPing -> PingResponse -> public DiscoveryNode master();1524684173;the current master of the node;public DiscoveryNode master() {_            return master__        };the,current,master,of,the,node;public,discovery,node,master,return,master
ZenPing -> PingResponse -> public DiscoveryNode master();1544081506;the current master of the node;public DiscoveryNode master() {_            return master__        };the,current,master,of,the,node;public,discovery,node,master,return,master
ZenPing -> PingResponse -> public DiscoveryNode master();1544254415;the current master of the node;public DiscoveryNode master() {_            return master__        };the,current,master,of,the,node;public,discovery,node,master,return,master
ZenPing -> PingResponse -> public long getClusterStateVersion();1524684173;the current cluster state version of that node ({@link ElectMasterService.MasterCandidate#UNRECOVERED_CLUSTER_VERSION}_for not recovered);public long getClusterStateVersion() {_            return clusterStateVersion__        };the,current,cluster,state,version,of,that,node,link,elect,master,service,master,candidate,for,not,recovered;public,long,get,cluster,state,version,return,cluster,state,version
ZenPing -> PingResponse -> public long getClusterStateVersion();1544081506;the current cluster state version of that node ({@link ElectMasterService.MasterCandidate#UNRECOVERED_CLUSTER_VERSION}_for not recovered);public long getClusterStateVersion() {_            return clusterStateVersion__        };the,current,cluster,state,version,of,that,node,link,elect,master,service,master,candidate,for,not,recovered;public,long,get,cluster,state,version,return,cluster,state,version
ZenPing -> PingResponse -> public long getClusterStateVersion();1544254415;the current cluster state version of that node ({@link ElectMasterService.MasterCandidate#UNRECOVERED_CLUSTER_VERSION}_for not recovered);public long getClusterStateVersion() {_            return clusterStateVersion__        };the,current,cluster,state,version,of,that,node,link,elect,master,service,master,candidate,for,not,recovered;public,long,get,cluster,state,version,return,cluster,state,version
ZenPing -> PingCollection -> public synchronized List<PingResponse> toList();1524684173;serialize current pings to a list. It is guaranteed that the list contains one ping response per node;public synchronized List<PingResponse> toList() {_            return new ArrayList<>(pings.values())__        };serialize,current,pings,to,a,list,it,is,guaranteed,that,the,list,contains,one,ping,response,per,node;public,synchronized,list,ping,response,to,list,return,new,array,list,pings,values
ZenPing -> PingCollection -> public synchronized List<PingResponse> toList();1544081506;serialize current pings to a list. It is guaranteed that the list contains one ping response per node;public synchronized List<PingResponse> toList() {_            return new ArrayList<>(pings.values())__        };serialize,current,pings,to,a,list,it,is,guaranteed,that,the,list,contains,one,ping,response,per,node;public,synchronized,list,ping,response,to,list,return,new,array,list,pings,values
ZenPing -> PingCollection -> public synchronized List<PingResponse> toList();1544254415;serialize current pings to a list. It is guaranteed that the list contains one ping response per node;public synchronized List<PingResponse> toList() {_            return new ArrayList<>(pings.values())__        };serialize,current,pings,to,a,list,it,is,guaranteed,that,the,list,contains,one,ping,response,per,node;public,synchronized,list,ping,response,to,list,return,new,array,list,pings,values
ZenPing -> PingResponse -> public ClusterName clusterName();1524684173;the name of the cluster this node belongs to;public ClusterName clusterName() {_            return this.clusterName__        };the,name,of,the,cluster,this,node,belongs,to;public,cluster,name,cluster,name,return,this,cluster,name
ZenPing -> PingResponse -> public ClusterName clusterName();1544081506;the name of the cluster this node belongs to;public ClusterName clusterName() {_            return this.clusterName__        };the,name,of,the,cluster,this,node,belongs,to;public,cluster,name,cluster,name,return,this,cluster,name
ZenPing -> PingResponse -> public ClusterName clusterName();1544254415;the name of the cluster this node belongs to;public ClusterName clusterName() {_            return this.clusterName__        };the,name,of,the,cluster,this,node,belongs,to;public,cluster,name,cluster,name,return,this,cluster,name
ZenPing -> PingResponse -> public DiscoveryNode node();1524684173;the node which this ping describes;public DiscoveryNode node() {_            return node__        };the,node,which,this,ping,describes;public,discovery,node,node,return,node
ZenPing -> PingResponse -> public DiscoveryNode node();1544081506;the node which this ping describes;public DiscoveryNode node() {_            return node__        };the,node,which,this,ping,describes;public,discovery,node,node,return,node
ZenPing -> PingResponse -> public DiscoveryNode node();1544254415;the node which this ping describes;public DiscoveryNode node() {_            return node__        };the,node,which,this,ping,describes;public,discovery,node,node,return,node
ZenPing -> PingResponse -> public PingResponse(DiscoveryNode node, DiscoveryNode master, ClusterName clusterName, long clusterStateVersion);1544081506;@param node                the node which this ping describes_@param master              the current master of the node_@param clusterName         the cluster name of the node_@param clusterStateVersion the current cluster state version of that node_({@link ElectMasterService.MasterCandidate#UNRECOVERED_CLUSTER_VERSION} for not recovered);public PingResponse(DiscoveryNode node, DiscoveryNode master, ClusterName clusterName, long clusterStateVersion) {_            this.id = idGenerator.incrementAndGet()__            this.node = node__            this.master = master__            this.clusterName = clusterName__            this.clusterStateVersion = clusterStateVersion__        };param,node,the,node,which,this,ping,describes,param,master,the,current,master,of,the,node,param,cluster,name,the,cluster,name,of,the,node,param,cluster,state,version,the,current,cluster,state,version,of,that,node,link,elect,master,service,master,candidate,for,not,recovered;public,ping,response,discovery,node,node,discovery,node,master,cluster,name,cluster,name,long,cluster,state,version,this,id,id,generator,increment,and,get,this,node,node,this,master,master,this,cluster,name,cluster,name,this,cluster,state,version,cluster,state,version
ZenPing -> PingResponse -> public PingResponse(DiscoveryNode node, DiscoveryNode master, ClusterName clusterName, long clusterStateVersion);1544254415;@param node                the node which this ping describes_@param master              the current master of the node_@param clusterName         the cluster name of the node_@param clusterStateVersion the current cluster state version of that node_({@link ElectMasterService.MasterCandidate#UNRECOVERED_CLUSTER_VERSION} for not recovered);public PingResponse(DiscoveryNode node, DiscoveryNode master, ClusterName clusterName, long clusterStateVersion) {_            this(idGenerator.incrementAndGet(), node, master, clusterName, clusterStateVersion)__        };param,node,the,node,which,this,ping,describes,param,master,the,current,master,of,the,node,param,cluster,name,the,cluster,name,of,the,node,param,cluster,state,version,the,current,cluster,state,version,of,that,node,link,elect,master,service,master,candidate,for,not,recovered;public,ping,response,discovery,node,node,discovery,node,master,cluster,name,cluster,name,long,cluster,state,version,this,id,generator,increment,and,get,node,master,cluster,name,cluster,state,version
ZenPing -> PingResponse -> public long id();1524684173;an always increasing unique identifier for this ping response._lower values means older pings.;public long id() {_            return this.id__        };an,always,increasing,unique,identifier,for,this,ping,response,lower,values,means,older,pings;public,long,id,return,this,id
ZenPing -> PingResponse -> public long id();1544081506;an always increasing unique identifier for this ping response._lower values means older pings.;public long id() {_            return this.id__        };an,always,increasing,unique,identifier,for,this,ping,response,lower,values,means,older,pings;public,long,id,return,this,id
ZenPing -> PingResponse -> public long id();1544254415;an always increasing unique identifier for this ping response._lower values means older pings.;public long id() {_            return this.id__        };an,always,increasing,unique,identifier,for,this,ping,response,lower,values,means,older,pings;public,long,id,return,this,id
ZenPing -> PingCollection -> public synchronized int size();1524684173;the number of nodes for which there are known pings;public synchronized int size() {_            return pings.size()__        };the,number,of,nodes,for,which,there,are,known,pings;public,synchronized,int,size,return,pings,size
ZenPing -> PingCollection -> public synchronized int size();1544081506;the number of nodes for which there are known pings;public synchronized int size() {_            return pings.size()__        };the,number,of,nodes,for,which,there,are,known,pings;public,synchronized,int,size,return,pings,size
ZenPing -> PingCollection -> public synchronized int size();1544254415;the number of nodes for which there are known pings;public synchronized int size() {_            return pings.size()__        };the,number,of,nodes,for,which,there,are,known,pings;public,synchronized,int,size,return,pings,size
ZenPing -> PingCollection -> public synchronized boolean addPing(PingResponse ping);1524684173;adds a ping if newer than previous pings from the same node__@return true if added, false o.w.;public synchronized boolean addPing(PingResponse ping) {_            PingResponse existingResponse = pings.get(ping.node())__            _            _            if (existingResponse == null || existingResponse.id() <= ping.id()) {_                pings.put(ping.node(), ping)__                return true__            }_            return false__        };adds,a,ping,if,newer,than,previous,pings,from,the,same,node,return,true,if,added,false,o,w;public,synchronized,boolean,add,ping,ping,response,ping,ping,response,existing,response,pings,get,ping,node,if,existing,response,null,existing,response,id,ping,id,pings,put,ping,node,ping,return,true,return,false
ZenPing -> PingCollection -> public synchronized boolean addPing(PingResponse ping);1544081506;adds a ping if newer than previous pings from the same node__@return true if added, false o.w.;public synchronized boolean addPing(PingResponse ping) {_            PingResponse existingResponse = pings.get(ping.node())__            _            _            if (existingResponse == null || existingResponse.id() <= ping.id()) {_                pings.put(ping.node(), ping)__                return true__            }_            return false__        };adds,a,ping,if,newer,than,previous,pings,from,the,same,node,return,true,if,added,false,o,w;public,synchronized,boolean,add,ping,ping,response,ping,ping,response,existing,response,pings,get,ping,node,if,existing,response,null,existing,response,id,ping,id,pings,put,ping,node,ping,return,true,return,false
ZenPing -> PingCollection -> public synchronized boolean addPing(PingResponse ping);1544254415;adds a ping if newer than previous pings from the same node__@return true if added, false o.w.;public synchronized boolean addPing(PingResponse ping) {_            PingResponse existingResponse = pings.get(ping.node())__            _            _            if (existingResponse == null || existingResponse.id() <= ping.id()) {_                pings.put(ping.node(), ping)__                return true__            }_            return false__        };adds,a,ping,if,newer,than,previous,pings,from,the,same,node,return,true,if,added,false,o,w;public,synchronized,boolean,add,ping,ping,response,ping,ping,response,existing,response,pings,get,ping,node,if,existing,response,null,existing,response,id,ping,id,pings,put,ping,node,ping,return,true,return,false
