commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String getName() {     return "cat_fielddata_action". }
false;public;1;4;;@Override public RestResponse buildResponse(NodesStatsResponse nodeStatses) throws Exception {     return RestTable.buildResponse(buildTable(request, nodeStatses), channel). }
false;protected;2;15;;@Override protected RestChannelConsumer doCatRequest(final RestRequest request, final NodeClient client) {     final NodesStatsRequest nodesStatsRequest = new NodesStatsRequest("data:true").     nodesStatsRequest.clear().     nodesStatsRequest.indices(true).     String[] fields = request.paramAsStringArray("fields", null).     nodesStatsRequest.indices().fieldDataFields(fields == null ? new String[] { "*" } : fields).     return channel -> client.admin().cluster().nodesStats(nodesStatsRequest, new RestResponseListener<NodesStatsResponse>(channel) {          @Override         public RestResponse buildResponse(NodesStatsResponse nodeStatses) throws Exception {             return RestTable.buildResponse(buildTable(request, nodeStatses), channel).         }     }). }
false;protected;1;5;;@Override protected void documentation(StringBuilder sb) {     sb.append("/_cat/fielddata\n").     sb.append("/_cat/fielddata/{fields}\n"). }
false;protected;1;13;;@Override protected Table getTableWithHeader(RestRequest request) {     Table table = new Table().     table.startHeaders().addCell("id", "desc:node id").addCell("host", "alias:h.desc:host name").addCell("ip", "desc:ip address").addCell("node", "alias:n.desc:node name").addCell("field", "alias:f.desc:field name").addCell("size", "text-align:right.alias:s.desc:field data usage").endHeaders().     return table. }
false;private;2;20;;private Table buildTable(final RestRequest request, final NodesStatsResponse nodeStatses) {     Table table = getTableWithHeader(request).     for (NodeStats nodeStats : nodeStatses.getNodes()) {         if (nodeStats.getIndices().getFieldData().getFields() != null) {             for (ObjectLongCursor<String> cursor : nodeStats.getIndices().getFieldData().getFields()) {                 table.startRow().                 table.addCell(nodeStats.getNode().getId()).                 table.addCell(nodeStats.getNode().getHostName()).                 table.addCell(nodeStats.getNode().getHostAddress()).                 table.addCell(nodeStats.getNode().getName()).                 table.addCell(cursor.key).                 table.addCell(new ByteSizeValue(cursor.value)).                 table.endRow().             }         }     }     return table. }
