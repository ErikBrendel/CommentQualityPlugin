commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String getWriteableName() {     return TYPE. }
false;public;0;4;;@Override public Version getMinimalSupportedVersion() {     return Version.CURRENT.minimumCompatibilityVersion(). }
false;public;0;3;;public Map<String, PipelineConfiguration> getPipelines() {     return pipelines. }
false;public;1;7;;@Override public void writeTo(StreamOutput out) throws IOException {     out.writeVInt(pipelines.size()).     for (PipelineConfiguration pipeline : pipelines.values()) {         pipeline.writeTo(out).     } }
false;public,static;1;8;;public static IngestMetadata fromXContent(XContentParser parser) throws IOException {     Map<String, PipelineConfiguration> pipelines = new HashMap<>().     List<PipelineConfiguration> configs = INGEST_METADATA_PARSER.parse(parser, null).     for (PipelineConfiguration pipeline : configs) {         pipelines.put(pipeline.getId(), pipeline).     }     return new IngestMetadata(pipelines). }
false;public;2;9;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.startArray(PIPELINES_FIELD.getPreferredName()).     for (PipelineConfiguration pipeline : pipelines.values()) {         pipeline.toXContent(builder, params).     }     builder.endArray().     return builder. }
false;public;0;4;;@Override public EnumSet<MetaData.XContentContext> context() {     return MetaData.ALL_CONTEXTS. }
false;public;1;4;;@Override public Diff<MetaData.Custom> diff(MetaData.Custom before) {     return new IngestMetadataDiff((IngestMetadata) before, this). }
false;public,static;1;3;;public static NamedDiff<MetaData.Custom> readDiffFrom(StreamInput in) throws IOException {     return new IngestMetadataDiff(in). }
false;public;1;4;;@Override public MetaData.Custom apply(MetaData.Custom part) {     return new IngestMetadata(pipelines.apply(((IngestMetadata) part).pipelines)). }
false;public;1;4;;@Override public void writeTo(StreamOutput out) throws IOException {     pipelines.writeTo(out). }
false;public;0;4;;@Override public String getWriteableName() {     return TYPE. }
false;public;1;10;;@Override public boolean equals(Object o) {     if (this == o)         return true.     if (o == null || getClass() != o.getClass())         return false.     IngestMetadata that = (IngestMetadata) o.     return pipelines.equals(that.pipelines). }
false;public;0;4;;@Override public int hashCode() {     return pipelines.hashCode(). }
