commented;modifiers;parameterAmount;loc;comment;code
true;public;0;3;/**  * Returns the index name  */ ;/**  * Returns the index name  */ public String getIndex() {     return this.index. }
true;public;0;3;/**  * A shard id to index snapshot shard status map  */ ;/**  * A shard id to index snapshot shard status map  */ public Map<Integer, SnapshotIndexShardStatus> getShards() {     return this.indexShards. }
true;public;0;3;/**  * Shards stats  */ ;/**  * Shards stats  */ public SnapshotShardsStats getShardsStats() {     return shardsStats. }
true;public;0;3;/**  * Returns snapshot stats  */ ;/**  * Returns snapshot stats  */ public SnapshotStats getStats() {     return stats. }
false;public;0;4;;@Override public Iterator<SnapshotIndexShardStatus> iterator() {     return indexShards.values().iterator(). }
false;public;2;13;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.startObject(getIndex()).     builder.field(SnapshotShardsStats.Fields.SHARDS_STATS, shardsStats, params).     builder.field(SnapshotStats.Fields.STATS, stats, params).     builder.startObject(Fields.SHARDS).     for (SnapshotIndexShardStatus shard : indexShards.values()) {         shard.toXContent(builder, params).     }     builder.endObject().     builder.endObject().     return builder. }
false;public,static;1;4;;public static SnapshotIndexStatus fromXContent(XContentParser parser) throws IOException {     XContentParserUtils.ensureExpectedToken(XContentParser.Token.FIELD_NAME, parser.currentToken(), parser::getTokenLocation).     return PARSER.parse(parser, null, parser.currentName()). }
false;public;1;12;;@Override public boolean equals(Object o) {     if (this == o)         return true.     if (o == null || getClass() != o.getClass())         return false.     SnapshotIndexStatus that = (SnapshotIndexStatus) o.     if (index != null ? !index.equals(that.index) : that.index != null)         return false.     if (indexShards != null ? !indexShards.equals(that.indexShards) : that.indexShards != null)         return false.     if (shardsStats != null ? !shardsStats.equals(that.shardsStats) : that.shardsStats != null)         return false.     return stats != null ? stats.equals(that.stats) : that.stats == null. }
false;public;0;8;;@Override public int hashCode() {     int result = index != null ? index.hashCode() : 0.     result = 31 * result + (indexShards != null ? indexShards.hashCode() : 0).     result = 31 * result + (shardsStats != null ? shardsStats.hashCode() : 0).     result = 31 * result + (stats != null ? stats.hashCode() : 0).     return result. }
