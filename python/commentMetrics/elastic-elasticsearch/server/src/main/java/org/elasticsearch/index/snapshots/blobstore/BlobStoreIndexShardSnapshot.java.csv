# id;timestamp;commentText;codeText;commentWords;codeWords
BlobStoreIndexShardSnapshot -> FileInfo -> public static void toXContent(FileInfo file, XContentBuilder builder, ToXContent.Params params) throws IOException;1524684173;Serializes file info into JSON__@param file    file info_@param builder XContent builder_@param params  parameters;public static void toXContent(FileInfo file, XContentBuilder builder, ToXContent.Params params) throws IOException {_            builder.startObject()__            builder.field(NAME, file.name)__            builder.field(PHYSICAL_NAME, file.metadata.name())__            builder.field(LENGTH, file.metadata.length())__            if (file.metadata.checksum().equals(UNKNOWN_CHECKSUM) == false) {_                builder.field(CHECKSUM, file.metadata.checksum())__            }_            if (file.partSize != null) {_                builder.field(PART_SIZE, file.partSize.getBytes())__            }__            if (file.metadata.writtenBy() != null) {_                builder.field(WRITTEN_BY, file.metadata.writtenBy())__            }__            if (file.metadata.hash() != null && file.metadata().hash().length > 0) {_                BytesRef br = file.metadata.hash()__                builder.field(META_HASH, br.bytes, br.offset, br.length)__            }_            builder.endObject()__        };serializes,file,info,into,json,param,file,file,info,param,builder,xcontent,builder,param,params,parameters;public,static,void,to,xcontent,file,info,file,xcontent,builder,builder,to,xcontent,params,params,throws,ioexception,builder,start,object,builder,field,name,file,name,builder,field,file,metadata,name,builder,field,length,file,metadata,length,if,file,metadata,checksum,equals,false,builder,field,checksum,file,metadata,checksum,if,file,part,size,null,builder,field,file,part,size,get,bytes,if,file,metadata,written,by,null,builder,field,file,metadata,written,by,if,file,metadata,hash,null,file,metadata,hash,length,0,bytes,ref,br,file,metadata,hash,builder,field,br,bytes,br,offset,br,length,builder,end,object
BlobStoreIndexShardSnapshot -> FileInfo -> public static void toXContent(FileInfo file, XContentBuilder builder, ToXContent.Params params) throws IOException;1527583663;Serializes file info into JSON__@param file    file info_@param builder XContent builder_@param params  parameters;public static void toXContent(FileInfo file, XContentBuilder builder, ToXContent.Params params) throws IOException {_            builder.startObject()__            builder.field(NAME, file.name)__            builder.field(PHYSICAL_NAME, file.metadata.name())__            builder.field(LENGTH, file.metadata.length())__            if (file.metadata.checksum().equals(UNKNOWN_CHECKSUM) == false) {_                builder.field(CHECKSUM, file.metadata.checksum())__            }_            if (file.partSize != null) {_                builder.field(PART_SIZE, file.partSize.getBytes())__            }__            if (file.metadata.writtenBy() != null) {_                builder.field(WRITTEN_BY, file.metadata.writtenBy())__            }__            if (file.metadata.hash() != null && file.metadata().hash().length > 0) {_                BytesRef br = file.metadata.hash()__                builder.field(META_HASH, br.bytes, br.offset, br.length)__            }_            builder.endObject()__        };serializes,file,info,into,json,param,file,file,info,param,builder,xcontent,builder,param,params,parameters;public,static,void,to,xcontent,file,info,file,xcontent,builder,builder,to,xcontent,params,params,throws,ioexception,builder,start,object,builder,field,name,file,name,builder,field,file,metadata,name,builder,field,length,file,metadata,length,if,file,metadata,checksum,equals,false,builder,field,checksum,file,metadata,checksum,if,file,part,size,null,builder,field,file,part,size,get,bytes,if,file,metadata,written,by,null,builder,field,file,metadata,written,by,if,file,metadata,hash,null,file,metadata,hash,length,0,bytes,ref,br,file,metadata,hash,builder,field,br,bytes,br,offset,br,length,builder,end,object
BlobStoreIndexShardSnapshot -> FileInfo -> public static void toXContent(FileInfo file, XContentBuilder builder, ToXContent.Params params) throws IOException;1531179852;Serializes file info into JSON__@param file    file info_@param builder XContent builder_@param params  parameters;public static void toXContent(FileInfo file, XContentBuilder builder, ToXContent.Params params) throws IOException {_            builder.startObject()__            builder.field(NAME, file.name)__            builder.field(PHYSICAL_NAME, file.metadata.name())__            builder.field(LENGTH, file.metadata.length())__            if (file.metadata.checksum().equals(UNKNOWN_CHECKSUM) == false) {_                builder.field(CHECKSUM, file.metadata.checksum())__            }_            if (file.partSize != null) {_                builder.field(PART_SIZE, file.partSize.getBytes())__            }__            if (file.metadata.writtenBy() != null) {_                builder.field(WRITTEN_BY, file.metadata.writtenBy())__            }__            if (file.metadata.hash() != null && file.metadata().hash().length > 0) {_                BytesRef br = file.metadata.hash()__                builder.field(META_HASH, br.bytes, br.offset, br.length)__            }_            builder.endObject()__        };serializes,file,info,into,json,param,file,file,info,param,builder,xcontent,builder,param,params,parameters;public,static,void,to,xcontent,file,info,file,xcontent,builder,builder,to,xcontent,params,params,throws,ioexception,builder,start,object,builder,field,name,file,name,builder,field,file,metadata,name,builder,field,length,file,metadata,length,if,file,metadata,checksum,equals,false,builder,field,checksum,file,metadata,checksum,if,file,part,size,null,builder,field,file,part,size,get,bytes,if,file,metadata,written,by,null,builder,field,file,metadata,written,by,if,file,metadata,hash,null,file,metadata,hash,length,0,bytes,ref,br,file,metadata,hash,builder,field,br,bytes,br,offset,br,length,builder,end,object
BlobStoreIndexShardSnapshot -> FileInfo -> public long numberOfParts();1524684173;Returns number of parts__@return number of parts;public long numberOfParts() {_            return numberOfParts__        };returns,number,of,parts,return,number,of,parts;public,long,number,of,parts,return,number,of,parts
BlobStoreIndexShardSnapshot -> FileInfo -> public long numberOfParts();1527583663;Returns number of parts__@return number of parts;public long numberOfParts() {_            return numberOfParts__        };returns,number,of,parts,return,number,of,parts;public,long,number,of,parts,return,number,of,parts
BlobStoreIndexShardSnapshot -> FileInfo -> public long numberOfParts();1531179852;Returns number of parts__@return number of parts;public long numberOfParts() {_            return numberOfParts__        };returns,number,of,parts,return,number,of,parts;public,long,number,of,parts,return,number,of,parts
BlobStoreIndexShardSnapshot -> public long startTime();1524684173;Returns snapshot start time;public long startTime() {_        return startTime__    };returns,snapshot,start,time;public,long,start,time,return,start,time
BlobStoreIndexShardSnapshot -> public long startTime();1527583663;Returns snapshot start time;public long startTime() {_        return startTime__    };returns,snapshot,start,time;public,long,start,time,return,start,time
BlobStoreIndexShardSnapshot -> public long startTime();1531179852;Returns snapshot start time;public long startTime() {_        return startTime__    };returns,snapshot,start,time;public,long,start,time,return,start,time
BlobStoreIndexShardSnapshot -> FileInfo -> public boolean isSame(StoreFileMetaData md);1524684173;Checks if a file in a store is the same file__@param md file in a store_@return true if file in a store this this file have the same checksum and length;public boolean isSame(StoreFileMetaData md) {_            return metadata.isSame(md)__        };checks,if,a,file,in,a,store,is,the,same,file,param,md,file,in,a,store,return,true,if,file,in,a,store,this,this,file,have,the,same,checksum,and,length;public,boolean,is,same,store,file,meta,data,md,return,metadata,is,same,md
BlobStoreIndexShardSnapshot -> FileInfo -> public boolean isSame(StoreFileMetaData md);1527583663;Checks if a file in a store is the same file__@param md file in a store_@return true if file in a store this this file have the same checksum and length;public boolean isSame(StoreFileMetaData md) {_            return metadata.isSame(md)__        };checks,if,a,file,in,a,store,is,the,same,file,param,md,file,in,a,store,return,true,if,file,in,a,store,this,this,file,have,the,same,checksum,and,length;public,boolean,is,same,store,file,meta,data,md,return,metadata,is,same,md
BlobStoreIndexShardSnapshot -> FileInfo -> public boolean isSame(StoreFileMetaData md);1531179852;Checks if a file in a store is the same file__@param md file in a store_@return true if file in a store this this file have the same checksum and length;public boolean isSame(StoreFileMetaData md) {_            return metadata.isSame(md)__        };checks,if,a,file,in,a,store,is,the,same,file,param,md,file,in,a,store,return,true,if,file,in,a,store,this,this,file,have,the,same,checksum,and,length;public,boolean,is,same,store,file,meta,data,md,return,metadata,is,same,md
BlobStoreIndexShardSnapshot -> public int totalFileCount();1527583663;Returns total number of files that are referenced by this snapshot;public int totalFileCount() {_        return indexFiles.size()__    };returns,total,number,of,files,that,are,referenced,by,this,snapshot;public,int,total,file,count,return,index,files,size
BlobStoreIndexShardSnapshot -> public int totalFileCount();1531179852;Returns total number of files that are referenced by this snapshot;public int totalFileCount() {_        return indexFiles.size()__    };returns,total,number,of,files,that,are,referenced,by,this,snapshot;public,int,total,file,count,return,index,files,size
BlobStoreIndexShardSnapshot -> public long incrementalSize();1527583663;Returns incremental of files size that were snapshotted;public long incrementalSize() {_        return incrementalSize__    };returns,incremental,of,files,size,that,were,snapshotted;public,long,incremental,size,return,incremental,size
BlobStoreIndexShardSnapshot -> public long incrementalSize();1531179852;Returns incremental of files size that were snapshotted;public long incrementalSize() {_        return incrementalSize__    };returns,incremental,of,files,size,that,were,snapshotted;public,long,incremental,size,return,incremental,size
BlobStoreIndexShardSnapshot -> public String snapshot();1524684173;Returns snapshot id__@return snapshot id;public String snapshot() {_        return snapshot__    };returns,snapshot,id,return,snapshot,id;public,string,snapshot,return,snapshot
BlobStoreIndexShardSnapshot -> public String snapshot();1527583663;Returns snapshot id__@return snapshot id;public String snapshot() {_        return snapshot__    };returns,snapshot,id,return,snapshot,id;public,string,snapshot,return,snapshot
BlobStoreIndexShardSnapshot -> public String snapshot();1531179852;Returns snapshot id__@return snapshot id;public String snapshot() {_        return snapshot__    };returns,snapshot,id,return,snapshot,id;public,string,snapshot,return,snapshot
BlobStoreIndexShardSnapshot -> public long indexVersion();1524684173;Returns index version__@return index version;public long indexVersion() {_        return indexVersion__    };returns,index,version,return,index,version;public,long,index,version,return,index,version
BlobStoreIndexShardSnapshot -> public long indexVersion();1527583663;Returns index version__@return index version;public long indexVersion() {_        return indexVersion__    };returns,index,version,return,index,version;public,long,index,version,return,index,version
BlobStoreIndexShardSnapshot -> public long indexVersion();1531179852;Returns index version__@return index version;public long indexVersion() {_        return indexVersion__    };returns,index,version,return,index,version;public,long,index,version,return,index,version
BlobStoreIndexShardSnapshot -> FileInfo -> public String partName(long part);1524684173;Returns part name if file is stored as multiple parts__@param part part number_@return part name;public String partName(long part) {_            if (numberOfParts > 1) {_                return name + ".part" + part__            } else {_                return name__            }_        };returns,part,name,if,file,is,stored,as,multiple,parts,param,part,part,number,return,part,name;public,string,part,name,long,part,if,number,of,parts,1,return,name,part,part,else,return,name
BlobStoreIndexShardSnapshot -> FileInfo -> public String partName(long part);1527583663;Returns part name if file is stored as multiple parts__@param part part number_@return part name;public String partName(long part) {_            if (numberOfParts > 1) {_                return name + ".part" + part__            } else {_                return name__            }_        };returns,part,name,if,file,is,stored,as,multiple,parts,param,part,part,number,return,part,name;public,string,part,name,long,part,if,number,of,parts,1,return,name,part,part,else,return,name
BlobStoreIndexShardSnapshot -> FileInfo -> public String partName(long part);1531179852;Returns part name if file is stored as multiple parts__@param part part number_@return part name;public String partName(long part) {_            if (numberOfParts > 1) {_                return name + ".part" + part__            } else {_                return name__            }_        };returns,part,name,if,file,is,stored,as,multiple,parts,param,part,part,number,return,part,name;public,string,part,name,long,part,if,number,of,parts,1,return,name,part,part,else,return,name
BlobStoreIndexShardSnapshot -> public long time();1524684173;Returns snapshot running time;public long time() {_        return time__    };returns,snapshot,running,time;public,long,time,return,time
BlobStoreIndexShardSnapshot -> public long time();1527583663;Returns snapshot running time;public long time() {_        return time__    };returns,snapshot,running,time;public,long,time,return,time
BlobStoreIndexShardSnapshot -> public long time();1531179852;Returns snapshot running time;public long time() {_        return time__    };returns,snapshot,running,time;public,long,time,return,time
BlobStoreIndexShardSnapshot -> @Override     public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException;1524684173;Serializes shard snapshot metadata info into JSON__@param builder  XContent builder_@param params   parameters;@Override_    public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {_        builder.field(NAME, snapshot)__        builder.field(INDEX_VERSION, indexVersion)__        builder.field(START_TIME, startTime)__        builder.field(TIME, time)__        builder.field(NUMBER_OF_FILES, numberOfFiles)__        builder.field(TOTAL_SIZE, totalSize)__        builder.startArray(FILES)__        for (FileInfo fileInfo : indexFiles) {_            FileInfo.toXContent(fileInfo, builder, params)__        }_        builder.endArray()__        return builder__    };serializes,shard,snapshot,metadata,info,into,json,param,builder,xcontent,builder,param,params,parameters;override,public,xcontent,builder,to,xcontent,xcontent,builder,builder,params,params,throws,ioexception,builder,field,name,snapshot,builder,field,index,version,builder,field,start,time,builder,field,time,time,builder,field,number,of,files,builder,field,total,size,builder,start,array,files,for,file,info,file,info,index,files,file,info,to,xcontent,file,info,builder,params,builder,end,array,return,builder
BlobStoreIndexShardSnapshot -> @Override     public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException;1527583663;Serializes shard snapshot metadata info into JSON__@param builder  XContent builder_@param params   parameters;@Override_    public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {_        builder.field(NAME, snapshot)__        builder.field(INDEX_VERSION, indexVersion)__        builder.field(START_TIME, startTime)__        builder.field(TIME, time)__        builder.field(INCREMENTAL_FILE_COUNT, incrementalFileCount)__        builder.field(INCREMENTAL_SIZE, incrementalSize)__        builder.startArray(FILES)__        for (FileInfo fileInfo : indexFiles) {_            FileInfo.toXContent(fileInfo, builder, params)__        }_        builder.endArray()__        return builder__    };serializes,shard,snapshot,metadata,info,into,json,param,builder,xcontent,builder,param,params,parameters;override,public,xcontent,builder,to,xcontent,xcontent,builder,builder,params,params,throws,ioexception,builder,field,name,snapshot,builder,field,index,version,builder,field,start,time,builder,field,time,time,builder,field,incremental,file,count,builder,field,incremental,size,builder,start,array,files,for,file,info,file,info,index,files,file,info,to,xcontent,file,info,builder,params,builder,end,array,return,builder
BlobStoreIndexShardSnapshot -> @Override     public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException;1531179852;Serializes shard snapshot metadata info into JSON__@param builder  XContent builder_@param params   parameters;@Override_    public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {_        builder.field(NAME, snapshot)__        builder.field(INDEX_VERSION, indexVersion)__        builder.field(START_TIME, startTime)__        builder.field(TIME, time)__        builder.field(INCREMENTAL_FILE_COUNT, incrementalFileCount)__        builder.field(INCREMENTAL_SIZE, incrementalSize)__        builder.startArray(FILES)__        for (FileInfo fileInfo : indexFiles) {_            FileInfo.toXContent(fileInfo, builder, params)__        }_        builder.endArray()__        return builder__    };serializes,shard,snapshot,metadata,info,into,json,param,builder,xcontent,builder,param,params,parameters;override,public,xcontent,builder,to,xcontent,xcontent,builder,builder,params,params,throws,ioexception,builder,field,name,snapshot,builder,field,index,version,builder,field,start,time,builder,field,time,time,builder,field,incremental,file,count,builder,field,incremental,size,builder,start,array,files,for,file,info,file,info,index,files,file,info,to,xcontent,file,info,builder,params,builder,end,array,return,builder
BlobStoreIndexShardSnapshot -> FileInfo -> public boolean hasUnknownChecksum();1524684173;Checks if the checksum for the file is unknown. This only is possible on an empty shard's_segments_N file which was created in older Lucene versions.;public boolean hasUnknownChecksum() {_            return metadata.checksum().equals(UNKNOWN_CHECKSUM)__        };checks,if,the,checksum,for,the,file,is,unknown,this,only,is,possible,on,an,empty,shard,s,file,which,was,created,in,older,lucene,versions;public,boolean,has,unknown,checksum,return,metadata,checksum,equals
BlobStoreIndexShardSnapshot -> FileInfo -> public boolean hasUnknownChecksum();1527583663;Checks if the checksum for the file is unknown. This only is possible on an empty shard's_segments_N file which was created in older Lucene versions.;public boolean hasUnknownChecksum() {_            return metadata.checksum().equals(UNKNOWN_CHECKSUM)__        };checks,if,the,checksum,for,the,file,is,unknown,this,only,is,possible,on,an,empty,shard,s,file,which,was,created,in,older,lucene,versions;public,boolean,has,unknown,checksum,return,metadata,checksum,equals
BlobStoreIndexShardSnapshot -> FileInfo -> public boolean hasUnknownChecksum();1531179852;Checks if the checksum for the file is unknown. This only is possible on an empty shard's_segments_N file which was created in older Lucene versions.;public boolean hasUnknownChecksum() {_            return metadata.checksum().equals(UNKNOWN_CHECKSUM)__        };checks,if,the,checksum,for,the,file,is,unknown,this,only,is,possible,on,an,empty,shard,s,file,which,was,created,in,older,lucene,versions;public,boolean,has,unknown,checksum,return,metadata,checksum,equals
BlobStoreIndexShardSnapshot -> private BlobStoreIndexShardSnapshot();1524684173;Special constructor for the prototype;private BlobStoreIndexShardSnapshot() {_        this.snapshot = ""__        this.indexVersion = 0__        this.indexFiles = Collections.emptyList()__        this.startTime = 0__        this.time = 0__        this.numberOfFiles = 0__        this.totalSize = 0__    };special,constructor,for,the,prototype;private,blob,store,index,shard,snapshot,this,snapshot,this,index,version,0,this,index,files,collections,empty,list,this,start,time,0,this,time,0,this,number,of,files,0,this,total,size,0
BlobStoreIndexShardSnapshot -> private BlobStoreIndexShardSnapshot();1527583663;Special constructor for the prototype;private BlobStoreIndexShardSnapshot() {_        this.snapshot = ""__        this.indexVersion = 0__        this.indexFiles = Collections.emptyList()__        this.startTime = 0__        this.time = 0__        this.incrementalFileCount = 0__        this.incrementalSize = 0__    };special,constructor,for,the,prototype;private,blob,store,index,shard,snapshot,this,snapshot,this,index,version,0,this,index,files,collections,empty,list,this,start,time,0,this,time,0,this,incremental,file,count,0,this,incremental,size,0
BlobStoreIndexShardSnapshot -> FileInfo -> public long partBytes(int part);1524684173;Returns the size (in bytes) of a given part__@return the size (in bytes) of a given part;public long partBytes(int part) {_            if (numberOfParts == 1) {_                return length()__            }_            _            if (part < (numberOfParts - 1)) {_                return partBytes__            }_            _            return length() - (partBytes * (numberOfParts-1))__        };returns,the,size,in,bytes,of,a,given,part,return,the,size,in,bytes,of,a,given,part;public,long,part,bytes,int,part,if,number,of,parts,1,return,length,if,part,number,of,parts,1,return,part,bytes,return,length,part,bytes,number,of,parts,1
BlobStoreIndexShardSnapshot -> FileInfo -> public long partBytes(int part);1527583663;Returns the size (in bytes) of a given part__@return the size (in bytes) of a given part;public long partBytes(int part) {_            if (numberOfParts == 1) {_                return length()__            }_            _            if (part < (numberOfParts - 1)) {_                return partBytes__            }_            _            return length() - (partBytes * (numberOfParts-1))__        };returns,the,size,in,bytes,of,a,given,part,return,the,size,in,bytes,of,a,given,part;public,long,part,bytes,int,part,if,number,of,parts,1,return,length,if,part,number,of,parts,1,return,part,bytes,return,length,part,bytes,number,of,parts,1
BlobStoreIndexShardSnapshot -> FileInfo -> public long partBytes(int part);1531179852;Returns the size (in bytes) of a given part__@return the size (in bytes) of a given part;public long partBytes(int part) {_            if (numberOfParts == 1) {_                return length()__            }_            _            if (part < (numberOfParts - 1)) {_                return partBytes__            }_            _            return length() - (partBytes * (numberOfParts-1))__        };returns,the,size,in,bytes,of,a,given,part,return,the,size,in,bytes,of,a,given,part;public,long,part,bytes,int,part,if,number,of,parts,1,return,length,if,part,number,of,parts,1,return,part,bytes,return,length,part,bytes,number,of,parts,1
BlobStoreIndexShardSnapshot -> FileInfo -> public static String canonicalName(String blobName);1524684173;Returns base file name from part name__@param blobName part name_@return base file name;public static String canonicalName(String blobName) {_            if (blobName.contains(".part")) {_                return blobName.substring(0, blobName.indexOf(".part"))__            }_            return blobName__        };returns,base,file,name,from,part,name,param,blob,name,part,name,return,base,file,name;public,static,string,canonical,name,string,blob,name,if,blob,name,contains,part,return,blob,name,substring,0,blob,name,index,of,part,return,blob,name
BlobStoreIndexShardSnapshot -> FileInfo -> public static String canonicalName(String blobName);1527583663;Returns base file name from part name__@param blobName part name_@return base file name;public static String canonicalName(String blobName) {_            if (blobName.contains(".part")) {_                return blobName.substring(0, blobName.indexOf(".part"))__            }_            return blobName__        };returns,base,file,name,from,part,name,param,blob,name,part,name,return,base,file,name;public,static,string,canonical,name,string,blob,name,if,blob,name,contains,part,return,blob,name,substring,0,blob,name,index,of,part,return,blob,name
BlobStoreIndexShardSnapshot -> FileInfo -> public static String canonicalName(String blobName);1531179852;Returns base file name from part name__@param blobName part name_@return base file name;public static String canonicalName(String blobName) {_            if (blobName.contains(".part")) {_                return blobName.substring(0, blobName.indexOf(".part"))__            }_            return blobName__        };returns,base,file,name,from,part,name,param,blob,name,part,name,return,base,file,name;public,static,string,canonical,name,string,blob,name,if,blob,name,contains,part,return,blob,name,substring,0,blob,name,index,of,part,return,blob,name
BlobStoreIndexShardSnapshot -> FileInfo -> public String checksum();1524684173;Returns file md5 checksum provided by {@link org.elasticsearch.index.store.Store}__@return file checksum;public String checksum() {_            return metadata.checksum()__        };returns,file,md5,checksum,provided,by,link,org,elasticsearch,index,store,store,return,file,checksum;public,string,checksum,return,metadata,checksum
BlobStoreIndexShardSnapshot -> FileInfo -> public String checksum();1527583663;Returns file md5 checksum provided by {@link org.elasticsearch.index.store.Store}__@return file checksum;public String checksum() {_            return metadata.checksum()__        };returns,file,md5,checksum,provided,by,link,org,elasticsearch,index,store,store,return,file,checksum;public,string,checksum,return,metadata,checksum
BlobStoreIndexShardSnapshot -> FileInfo -> public String checksum();1531179852;Returns file md5 checksum provided by {@link org.elasticsearch.index.store.Store}__@return file checksum;public String checksum() {_            return metadata.checksum()__        };returns,file,md5,checksum,provided,by,link,org,elasticsearch,index,store,store,return,file,checksum;public,string,checksum,return,metadata,checksum
BlobStoreIndexShardSnapshot -> public int incrementalFileCount();1527583663;Returns incremental of files that were snapshotted;public int incrementalFileCount() {_        return incrementalFileCount__    };returns,incremental,of,files,that,were,snapshotted;public,int,incremental,file,count,return,incremental,file,count
BlobStoreIndexShardSnapshot -> public int incrementalFileCount();1531179852;Returns incremental of files that were snapshotted;public int incrementalFileCount() {_        return incrementalFileCount__    };returns,incremental,of,files,that,were,snapshotted;public,int,incremental,file,count,return,incremental,file,count
BlobStoreIndexShardSnapshot -> FileInfo -> public long length();1524684173;File length__@return file length;public long length() {_            return metadata.length()__        };file,length,return,file,length;public,long,length,return,metadata,length
BlobStoreIndexShardSnapshot -> FileInfo -> public long length();1527583663;File length__@return file length;public long length() {_            return metadata.length()__        };file,length,return,file,length;public,long,length,return,metadata,length
BlobStoreIndexShardSnapshot -> FileInfo -> public long length();1531179852;File length__@return file length;public long length() {_            return metadata.length()__        };file,length,return,file,length;public,long,length,return,metadata,length
BlobStoreIndexShardSnapshot -> public static BlobStoreIndexShardSnapshot fromXContent(XContentParser parser) throws IOException;1524684173;Parses shard snapshot metadata__@param parser parser_@return shard snapshot metadata;public static BlobStoreIndexShardSnapshot fromXContent(XContentParser parser) throws IOException {_        String snapshot = null__        long indexVersion = -1__        long startTime = 0__        long time = 0__        int numberOfFiles = 0__        long totalSize = 0___        List<FileInfo> indexFiles = new ArrayList<>()__        if (parser.currentToken() == null) { _            parser.nextToken()__        }_        XContentParser.Token token = parser.currentToken()__        if (token == XContentParser.Token.START_OBJECT) {_            while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {_                if (token == XContentParser.Token.FIELD_NAME) {_                    String currentFieldName = parser.currentName()__                    token = parser.nextToken()__                    if (token.isValue()) {_                        if (PARSE_NAME.match(currentFieldName, parser.getDeprecationHandler())) {_                            snapshot = parser.text()__                        } else if (PARSE_INDEX_VERSION.match(currentFieldName, parser.getDeprecationHandler())) {_                            _                            indexVersion = parser.longValue()__                        } else if (PARSE_START_TIME.match(currentFieldName, parser.getDeprecationHandler())) {_                            startTime = parser.longValue()__                        } else if (PARSE_TIME.match(currentFieldName, parser.getDeprecationHandler())) {_                            time = parser.longValue()__                        } else if (PARSE_NUMBER_OF_FILES.match(currentFieldName, parser.getDeprecationHandler())) {_                            numberOfFiles = parser.intValue()__                        } else if (PARSE_TOTAL_SIZE.match(currentFieldName, parser.getDeprecationHandler())) {_                            totalSize = parser.longValue()__                        } else {_                            throw new ElasticsearchParseException("unknown parameter [{}]", currentFieldName)__                        }_                    } else if (token == XContentParser.Token.START_ARRAY) {_                        if (PARSE_FILES.match(currentFieldName, parser.getDeprecationHandler())) {_                            while ((parser.nextToken()) != XContentParser.Token.END_ARRAY) {_                                indexFiles.add(FileInfo.fromXContent(parser))__                            }_                        } else {_                            throw new ElasticsearchParseException("unknown parameter [{}]", currentFieldName)__                        }_                    } else {_                        throw new ElasticsearchParseException("unexpected token  [{}]", token)__                    }_                } else {_                    throw new ElasticsearchParseException("unexpected token [{}]", token)__                }_            }_        }_        return new BlobStoreIndexShardSnapshot(snapshot, indexVersion, Collections.unmodifiableList(indexFiles),_                                               startTime, time, numberOfFiles, totalSize)__    };parses,shard,snapshot,metadata,param,parser,parser,return,shard,snapshot,metadata;public,static,blob,store,index,shard,snapshot,from,xcontent,xcontent,parser,parser,throws,ioexception,string,snapshot,null,long,index,version,1,long,start,time,0,long,time,0,int,number,of,files,0,long,total,size,0,list,file,info,index,files,new,array,list,if,parser,current,token,null,parser,next,token,xcontent,parser,token,token,parser,current,token,if,token,xcontent,parser,token,while,token,parser,next,token,xcontent,parser,token,if,token,xcontent,parser,token,string,current,field,name,parser,current,name,token,parser,next,token,if,token,is,value,if,match,current,field,name,parser,get,deprecation,handler,snapshot,parser,text,else,if,match,current,field,name,parser,get,deprecation,handler,index,version,parser,long,value,else,if,match,current,field,name,parser,get,deprecation,handler,start,time,parser,long,value,else,if,match,current,field,name,parser,get,deprecation,handler,time,parser,long,value,else,if,match,current,field,name,parser,get,deprecation,handler,number,of,files,parser,int,value,else,if,match,current,field,name,parser,get,deprecation,handler,total,size,parser,long,value,else,throw,new,elasticsearch,parse,exception,unknown,parameter,current,field,name,else,if,token,xcontent,parser,token,if,match,current,field,name,parser,get,deprecation,handler,while,parser,next,token,xcontent,parser,token,index,files,add,file,info,from,xcontent,parser,else,throw,new,elasticsearch,parse,exception,unknown,parameter,current,field,name,else,throw,new,elasticsearch,parse,exception,unexpected,token,token,else,throw,new,elasticsearch,parse,exception,unexpected,token,token,return,new,blob,store,index,shard,snapshot,snapshot,index,version,collections,unmodifiable,list,index,files,start,time,time,number,of,files,total,size
BlobStoreIndexShardSnapshot -> public static BlobStoreIndexShardSnapshot fromXContent(XContentParser parser) throws IOException;1527583663;Parses shard snapshot metadata__@param parser parser_@return shard snapshot metadata;public static BlobStoreIndexShardSnapshot fromXContent(XContentParser parser) throws IOException {_        String snapshot = null__        long indexVersion = -1__        long startTime = 0__        long time = 0__        int incrementalFileCount = 0__        long incrementalSize = 0___        List<FileInfo> indexFiles = new ArrayList<>()__        if (parser.currentToken() == null) { _            parser.nextToken()__        }_        XContentParser.Token token = parser.currentToken()__        if (token == XContentParser.Token.START_OBJECT) {_            while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {_                if (token == XContentParser.Token.FIELD_NAME) {_                    String currentFieldName = parser.currentName()__                    token = parser.nextToken()__                    if (token.isValue()) {_                        if (PARSE_NAME.match(currentFieldName, parser.getDeprecationHandler())) {_                            snapshot = parser.text()__                        } else if (PARSE_INDEX_VERSION.match(currentFieldName, parser.getDeprecationHandler())) {_                            _                            indexVersion = parser.longValue()__                        } else if (PARSE_START_TIME.match(currentFieldName, parser.getDeprecationHandler())) {_                            startTime = parser.longValue()__                        } else if (PARSE_TIME.match(currentFieldName, parser.getDeprecationHandler())) {_                            time = parser.longValue()__                        } else if (PARSE_INCREMENTAL_FILE_COUNT.match(currentFieldName, parser.getDeprecationHandler())) {_                            incrementalFileCount = parser.intValue()__                        } else if (PARSE_INCREMENTAL_SIZE.match(currentFieldName, parser.getDeprecationHandler())) {_                            incrementalSize = parser.longValue()__                        } else {_                            throw new ElasticsearchParseException("unknown parameter [{}]", currentFieldName)__                        }_                    } else if (token == XContentParser.Token.START_ARRAY) {_                        if (PARSE_FILES.match(currentFieldName, parser.getDeprecationHandler())) {_                            while ((parser.nextToken()) != XContentParser.Token.END_ARRAY) {_                                indexFiles.add(FileInfo.fromXContent(parser))__                            }_                        } else {_                            throw new ElasticsearchParseException("unknown parameter [{}]", currentFieldName)__                        }_                    } else {_                        throw new ElasticsearchParseException("unexpected token  [{}]", token)__                    }_                } else {_                    throw new ElasticsearchParseException("unexpected token [{}]", token)__                }_            }_        }__        return new BlobStoreIndexShardSnapshot(snapshot, indexVersion, Collections.unmodifiableList(indexFiles),_                                               startTime, time, incrementalFileCount, incrementalSize)__    };parses,shard,snapshot,metadata,param,parser,parser,return,shard,snapshot,metadata;public,static,blob,store,index,shard,snapshot,from,xcontent,xcontent,parser,parser,throws,ioexception,string,snapshot,null,long,index,version,1,long,start,time,0,long,time,0,int,incremental,file,count,0,long,incremental,size,0,list,file,info,index,files,new,array,list,if,parser,current,token,null,parser,next,token,xcontent,parser,token,token,parser,current,token,if,token,xcontent,parser,token,while,token,parser,next,token,xcontent,parser,token,if,token,xcontent,parser,token,string,current,field,name,parser,current,name,token,parser,next,token,if,token,is,value,if,match,current,field,name,parser,get,deprecation,handler,snapshot,parser,text,else,if,match,current,field,name,parser,get,deprecation,handler,index,version,parser,long,value,else,if,match,current,field,name,parser,get,deprecation,handler,start,time,parser,long,value,else,if,match,current,field,name,parser,get,deprecation,handler,time,parser,long,value,else,if,match,current,field,name,parser,get,deprecation,handler,incremental,file,count,parser,int,value,else,if,match,current,field,name,parser,get,deprecation,handler,incremental,size,parser,long,value,else,throw,new,elasticsearch,parse,exception,unknown,parameter,current,field,name,else,if,token,xcontent,parser,token,if,match,current,field,name,parser,get,deprecation,handler,while,parser,next,token,xcontent,parser,token,index,files,add,file,info,from,xcontent,parser,else,throw,new,elasticsearch,parse,exception,unknown,parameter,current,field,name,else,throw,new,elasticsearch,parse,exception,unexpected,token,token,else,throw,new,elasticsearch,parse,exception,unexpected,token,token,return,new,blob,store,index,shard,snapshot,snapshot,index,version,collections,unmodifiable,list,index,files,start,time,time,incremental,file,count,incremental,size
BlobStoreIndexShardSnapshot -> public static BlobStoreIndexShardSnapshot fromXContent(XContentParser parser) throws IOException;1531179852;Parses shard snapshot metadata__@param parser parser_@return shard snapshot metadata;public static BlobStoreIndexShardSnapshot fromXContent(XContentParser parser) throws IOException {_        String snapshot = null__        long indexVersion = -1__        long startTime = 0__        long time = 0__        int incrementalFileCount = 0__        long incrementalSize = 0___        List<FileInfo> indexFiles = new ArrayList<>()__        if (parser.currentToken() == null) { _            parser.nextToken()__        }_        XContentParser.Token token = parser.currentToken()__        if (token == XContentParser.Token.START_OBJECT) {_            while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {_                if (token == XContentParser.Token.FIELD_NAME) {_                    String currentFieldName = parser.currentName()__                    token = parser.nextToken()__                    if (token.isValue()) {_                        if (PARSE_NAME.match(currentFieldName, parser.getDeprecationHandler())) {_                            snapshot = parser.text()__                        } else if (PARSE_INDEX_VERSION.match(currentFieldName, parser.getDeprecationHandler())) {_                            _                            indexVersion = parser.longValue()__                        } else if (PARSE_START_TIME.match(currentFieldName, parser.getDeprecationHandler())) {_                            startTime = parser.longValue()__                        } else if (PARSE_TIME.match(currentFieldName, parser.getDeprecationHandler())) {_                            time = parser.longValue()__                        } else if (PARSE_INCREMENTAL_FILE_COUNT.match(currentFieldName, parser.getDeprecationHandler())) {_                            incrementalFileCount = parser.intValue()__                        } else if (PARSE_INCREMENTAL_SIZE.match(currentFieldName, parser.getDeprecationHandler())) {_                            incrementalSize = parser.longValue()__                        } else {_                            throw new ElasticsearchParseException("unknown parameter [{}]", currentFieldName)__                        }_                    } else if (token == XContentParser.Token.START_ARRAY) {_                        if (PARSE_FILES.match(currentFieldName, parser.getDeprecationHandler())) {_                            while ((parser.nextToken()) != XContentParser.Token.END_ARRAY) {_                                indexFiles.add(FileInfo.fromXContent(parser))__                            }_                        } else {_                            throw new ElasticsearchParseException("unknown parameter [{}]", currentFieldName)__                        }_                    } else {_                        throw new ElasticsearchParseException("unexpected token  [{}]", token)__                    }_                } else {_                    throw new ElasticsearchParseException("unexpected token [{}]", token)__                }_            }_        }__        return new BlobStoreIndexShardSnapshot(snapshot, indexVersion, Collections.unmodifiableList(indexFiles),_                                               startTime, time, incrementalFileCount, incrementalSize)__    };parses,shard,snapshot,metadata,param,parser,parser,return,shard,snapshot,metadata;public,static,blob,store,index,shard,snapshot,from,xcontent,xcontent,parser,parser,throws,ioexception,string,snapshot,null,long,index,version,1,long,start,time,0,long,time,0,int,incremental,file,count,0,long,incremental,size,0,list,file,info,index,files,new,array,list,if,parser,current,token,null,parser,next,token,xcontent,parser,token,token,parser,current,token,if,token,xcontent,parser,token,while,token,parser,next,token,xcontent,parser,token,if,token,xcontent,parser,token,string,current,field,name,parser,current,name,token,parser,next,token,if,token,is,value,if,match,current,field,name,parser,get,deprecation,handler,snapshot,parser,text,else,if,match,current,field,name,parser,get,deprecation,handler,index,version,parser,long,value,else,if,match,current,field,name,parser,get,deprecation,handler,start,time,parser,long,value,else,if,match,current,field,name,parser,get,deprecation,handler,time,parser,long,value,else,if,match,current,field,name,parser,get,deprecation,handler,incremental,file,count,parser,int,value,else,if,match,current,field,name,parser,get,deprecation,handler,incremental,size,parser,long,value,else,throw,new,elasticsearch,parse,exception,unknown,parameter,current,field,name,else,if,token,xcontent,parser,token,if,match,current,field,name,parser,get,deprecation,handler,while,parser,next,token,xcontent,parser,token,index,files,add,file,info,from,xcontent,parser,else,throw,new,elasticsearch,parse,exception,unknown,parameter,current,field,name,else,throw,new,elasticsearch,parse,exception,unexpected,token,token,else,throw,new,elasticsearch,parse,exception,unexpected,token,token,return,new,blob,store,index,shard,snapshot,snapshot,index,version,collections,unmodifiable,list,index,files,start,time,time,incremental,file,count,incremental,size
BlobStoreIndexShardSnapshot -> FileInfo -> public StoreFileMetaData metadata();1524684173;Returns the StoreFileMetaData for this file info.;public StoreFileMetaData metadata() {_            return metadata__        };returns,the,store,file,meta,data,for,this,file,info;public,store,file,meta,data,metadata,return,metadata
BlobStoreIndexShardSnapshot -> FileInfo -> public StoreFileMetaData metadata();1527583663;Returns the StoreFileMetaData for this file info.;public StoreFileMetaData metadata() {_            return metadata__        };returns,the,store,file,meta,data,for,this,file,info;public,store,file,meta,data,metadata,return,metadata
BlobStoreIndexShardSnapshot -> FileInfo -> public StoreFileMetaData metadata();1531179852;Returns the StoreFileMetaData for this file info.;public StoreFileMetaData metadata() {_            return metadata__        };returns,the,store,file,meta,data,for,this,file,info;public,store,file,meta,data,metadata,return,metadata
BlobStoreIndexShardSnapshot -> FileInfo -> public boolean isSame(FileInfo fileInfo);1524684173;Checks if a file in a store is the same file__@param fileInfo file in a store_@return true if file in a store this this file have the same checksum and length;public boolean isSame(FileInfo fileInfo) {_            if (numberOfParts != fileInfo.numberOfParts) {_                return false__            }_            if (partBytes != fileInfo.partBytes) {_                return false__            }_            if (!name.equals(fileInfo.name)) {_                return false__            }_            if (partSize != null) {_                if (!partSize.equals(fileInfo.partSize)) {_                    return false__                }_            } else {_                if (fileInfo.partSize != null) {_                    return false__                }_            }_            return metadata.isSame(fileInfo.metadata)__        };checks,if,a,file,in,a,store,is,the,same,file,param,file,info,file,in,a,store,return,true,if,file,in,a,store,this,this,file,have,the,same,checksum,and,length;public,boolean,is,same,file,info,file,info,if,number,of,parts,file,info,number,of,parts,return,false,if,part,bytes,file,info,part,bytes,return,false,if,name,equals,file,info,name,return,false,if,part,size,null,if,part,size,equals,file,info,part,size,return,false,else,if,file,info,part,size,null,return,false,return,metadata,is,same,file,info,metadata
BlobStoreIndexShardSnapshot -> FileInfo -> public boolean isSame(FileInfo fileInfo);1527583663;Checks if a file in a store is the same file__@param fileInfo file in a store_@return true if file in a store this this file have the same checksum and length;public boolean isSame(FileInfo fileInfo) {_            if (numberOfParts != fileInfo.numberOfParts) {_                return false__            }_            if (partBytes != fileInfo.partBytes) {_                return false__            }_            if (!name.equals(fileInfo.name)) {_                return false__            }_            if (partSize != null) {_                if (!partSize.equals(fileInfo.partSize)) {_                    return false__                }_            } else {_                if (fileInfo.partSize != null) {_                    return false__                }_            }_            return metadata.isSame(fileInfo.metadata)__        };checks,if,a,file,in,a,store,is,the,same,file,param,file,info,file,in,a,store,return,true,if,file,in,a,store,this,this,file,have,the,same,checksum,and,length;public,boolean,is,same,file,info,file,info,if,number,of,parts,file,info,number,of,parts,return,false,if,part,bytes,file,info,part,bytes,return,false,if,name,equals,file,info,name,return,false,if,part,size,null,if,part,size,equals,file,info,part,size,return,false,else,if,file,info,part,size,null,return,false,return,metadata,is,same,file,info,metadata
BlobStoreIndexShardSnapshot -> FileInfo -> public boolean isSame(FileInfo fileInfo);1531179852;Checks if a file in a store is the same file__@param fileInfo file in a store_@return true if file in a store this this file have the same checksum and length;public boolean isSame(FileInfo fileInfo) {_            if (numberOfParts != fileInfo.numberOfParts) {_                return false__            }_            if (partBytes != fileInfo.partBytes) {_                return false__            }_            if (!name.equals(fileInfo.name)) {_                return false__            }_            if (partSize != null) {_                if (!partSize.equals(fileInfo.partSize)) {_                    return false__                }_            } else {_                if (fileInfo.partSize != null) {_                    return false__                }_            }_            return metadata.isSame(fileInfo.metadata)__        };checks,if,a,file,in,a,store,is,the,same,file,param,file,info,file,in,a,store,return,true,if,file,in,a,store,this,this,file,have,the,same,checksum,and,length;public,boolean,is,same,file,info,file,info,if,number,of,parts,file,info,number,of,parts,return,false,if,part,bytes,file,info,part,bytes,return,false,if,name,equals,file,info,name,return,false,if,part,size,null,if,part,size,equals,file,info,part,size,return,false,else,if,file,info,part,size,null,return,false,return,metadata,is,same,file,info,metadata
BlobStoreIndexShardSnapshot -> public List<FileInfo> indexFiles();1524684173;Returns list of files in the shard__@return list of files;public List<FileInfo> indexFiles() {_        return indexFiles__    };returns,list,of,files,in,the,shard,return,list,of,files;public,list,file,info,index,files,return,index,files
BlobStoreIndexShardSnapshot -> public List<FileInfo> indexFiles();1527583663;Returns list of files in the shard__@return list of files;public List<FileInfo> indexFiles() {_        return indexFiles__    };returns,list,of,files,in,the,shard,return,list,of,files;public,list,file,info,index,files,return,index,files
BlobStoreIndexShardSnapshot -> public List<FileInfo> indexFiles();1531179852;Returns list of files in the shard__@return list of files;public List<FileInfo> indexFiles() {_        return indexFiles__    };returns,list,of,files,in,the,shard,return,list,of,files;public,list,file,info,index,files,return,index,files
BlobStoreIndexShardSnapshot -> public long totalSize();1524684173;Returns total size of all files that where snapshotted;public long totalSize() {_        return totalSize__    };returns,total,size,of,all,files,that,where,snapshotted;public,long,total,size,return,total,size
BlobStoreIndexShardSnapshot -> public long totalSize();1527583663;Returns total size of all files that where snapshotted;public long totalSize() {_        return indexFiles.stream().mapToLong(fi -> fi.metadata().length()).sum()__    };returns,total,size,of,all,files,that,where,snapshotted;public,long,total,size,return,index,files,stream,map,to,long,fi,fi,metadata,length,sum
BlobStoreIndexShardSnapshot -> public long totalSize();1531179852;Returns total size of all files that where snapshotted;public long totalSize() {_        return indexFiles.stream().mapToLong(fi -> fi.metadata().length()).sum()__    };returns,total,size,of,all,files,that,where,snapshotted;public,long,total,size,return,index,files,stream,map,to,long,fi,fi,metadata,length,sum
BlobStoreIndexShardSnapshot -> public BlobStoreIndexShardSnapshot(String snapshot, long indexVersion, List<FileInfo> indexFiles,                                        long startTime, long time,                                        int incrementalFileCount,                                        long incrementalSize     );1527583663;Constructs new shard snapshot metadata from snapshot metadata__@param snapshot              snapshot id_@param indexVersion          index version_@param indexFiles            list of files in the shard_@param startTime             snapshot start time_@param time                  snapshot running time_@param incrementalFileCount  incremental of files that were snapshotted_@param incrementalSize       incremental size of snapshot;public BlobStoreIndexShardSnapshot(String snapshot, long indexVersion, List<FileInfo> indexFiles,_                                       long startTime, long time,_                                       int incrementalFileCount,_                                       long incrementalSize_    ) {_        assert snapshot != null__        assert indexVersion >= 0__        this.snapshot = snapshot__        this.indexVersion = indexVersion__        this.indexFiles = Collections.unmodifiableList(new ArrayList<>(indexFiles))__        this.startTime = startTime__        this.time = time__        this.incrementalFileCount = incrementalFileCount__        this.incrementalSize = incrementalSize__    };constructs,new,shard,snapshot,metadata,from,snapshot,metadata,param,snapshot,snapshot,id,param,index,version,index,version,param,index,files,list,of,files,in,the,shard,param,start,time,snapshot,start,time,param,time,snapshot,running,time,param,incremental,file,count,incremental,of,files,that,were,snapshotted,param,incremental,size,incremental,size,of,snapshot;public,blob,store,index,shard,snapshot,string,snapshot,long,index,version,list,file,info,index,files,long,start,time,long,time,int,incremental,file,count,long,incremental,size,assert,snapshot,null,assert,index,version,0,this,snapshot,snapshot,this,index,version,index,version,this,index,files,collections,unmodifiable,list,new,array,list,index,files,this,start,time,start,time,this,time,time,this,incremental,file,count,incremental,file,count,this,incremental,size,incremental,size
BlobStoreIndexShardSnapshot -> public BlobStoreIndexShardSnapshot(String snapshot, long indexVersion, List<FileInfo> indexFiles,                                        long startTime, long time,                                        int incrementalFileCount,                                        long incrementalSize     );1531179852;Constructs new shard snapshot metadata from snapshot metadata__@param snapshot              snapshot id_@param indexVersion          index version_@param indexFiles            list of files in the shard_@param startTime             snapshot start time_@param time                  snapshot running time_@param incrementalFileCount  incremental of files that were snapshotted_@param incrementalSize       incremental size of snapshot;public BlobStoreIndexShardSnapshot(String snapshot, long indexVersion, List<FileInfo> indexFiles,_                                       long startTime, long time,_                                       int incrementalFileCount,_                                       long incrementalSize_    ) {_        assert snapshot != null__        assert indexVersion >= 0__        this.snapshot = snapshot__        this.indexVersion = indexVersion__        this.indexFiles = Collections.unmodifiableList(new ArrayList<>(indexFiles))__        this.startTime = startTime__        this.time = time__        this.incrementalFileCount = incrementalFileCount__        this.incrementalSize = incrementalSize__    };constructs,new,shard,snapshot,metadata,from,snapshot,metadata,param,snapshot,snapshot,id,param,index,version,index,version,param,index,files,list,of,files,in,the,shard,param,start,time,snapshot,start,time,param,time,snapshot,running,time,param,incremental,file,count,incremental,of,files,that,were,snapshotted,param,incremental,size,incremental,size,of,snapshot;public,blob,store,index,shard,snapshot,string,snapshot,long,index,version,list,file,info,index,files,long,start,time,long,time,int,incremental,file,count,long,incremental,size,assert,snapshot,null,assert,index,version,0,this,snapshot,snapshot,this,index,version,index,version,this,index,files,collections,unmodifiable,list,new,array,list,index,files,this,start,time,start,time,this,time,time,this,incremental,file,count,incremental,file,count,this,incremental,size,incremental,size
BlobStoreIndexShardSnapshot -> FileInfo -> public ByteSizeValue partSize();1524684173;Returns part size__@return part size;public ByteSizeValue partSize() {_            return partSize__        };returns,part,size,return,part,size;public,byte,size,value,part,size,return,part,size
BlobStoreIndexShardSnapshot -> FileInfo -> public ByteSizeValue partSize();1527583663;Returns part size__@return part size;public ByteSizeValue partSize() {_            return partSize__        };returns,part,size,return,part,size;public,byte,size,value,part,size,return,part,size
BlobStoreIndexShardSnapshot -> FileInfo -> public ByteSizeValue partSize();1531179852;Returns part size__@return part size;public ByteSizeValue partSize() {_            return partSize__        };returns,part,size,return,part,size;public,byte,size,value,part,size,return,part,size
BlobStoreIndexShardSnapshot -> FileInfo -> public String name();1524684173;Returns the base file name__@return file name;public String name() {_            return name__        };returns,the,base,file,name,return,file,name;public,string,name,return,name
BlobStoreIndexShardSnapshot -> FileInfo -> public String name();1527583663;Returns the base file name__@return file name;public String name() {_            return name__        };returns,the,base,file,name,return,file,name;public,string,name,return,name
BlobStoreIndexShardSnapshot -> FileInfo -> public String name();1531179852;Returns the base file name__@return file name;public String name() {_            return name__        };returns,the,base,file,name,return,file,name;public,string,name,return,name
BlobStoreIndexShardSnapshot -> FileInfo -> public FileInfo(String name, StoreFileMetaData metaData, ByteSizeValue partSize);1524684173;Constructs a new instance of file info__@param name         file name as stored in the blob store_@param metaData  the files meta data_@param partSize     size of the single chunk;public FileInfo(String name, StoreFileMetaData metaData, ByteSizeValue partSize) {_            this.name = name__            this.metadata = metaData___            long partBytes = Long.MAX_VALUE__            if (partSize != null && partSize.getBytes() > 0) {_                partBytes = partSize.getBytes()__            }__            long totalLength = metaData.length()__            long numberOfParts = totalLength / partBytes__            if (totalLength % partBytes > 0) {_                numberOfParts++__            }_            if (numberOfParts == 0) {_                numberOfParts++__            }_            this.numberOfParts = numberOfParts__            this.partSize = partSize__            this.partBytes = partBytes__        };constructs,a,new,instance,of,file,info,param,name,file,name,as,stored,in,the,blob,store,param,meta,data,the,files,meta,data,param,part,size,size,of,the,single,chunk;public,file,info,string,name,store,file,meta,data,meta,data,byte,size,value,part,size,this,name,name,this,metadata,meta,data,long,part,bytes,long,if,part,size,null,part,size,get,bytes,0,part,bytes,part,size,get,bytes,long,total,length,meta,data,length,long,number,of,parts,total,length,part,bytes,if,total,length,part,bytes,0,number,of,parts,if,number,of,parts,0,number,of,parts,this,number,of,parts,number,of,parts,this,part,size,part,size,this,part,bytes,part,bytes
BlobStoreIndexShardSnapshot -> FileInfo -> public FileInfo(String name, StoreFileMetaData metaData, ByteSizeValue partSize);1527583663;Constructs a new instance of file info__@param name         file name as stored in the blob store_@param metaData  the files meta data_@param partSize     size of the single chunk;public FileInfo(String name, StoreFileMetaData metaData, ByteSizeValue partSize) {_            this.name = name__            this.metadata = metaData___            long partBytes = Long.MAX_VALUE__            if (partSize != null && partSize.getBytes() > 0) {_                partBytes = partSize.getBytes()__            }__            long totalLength = metaData.length()__            long numberOfParts = totalLength / partBytes__            if (totalLength % partBytes > 0) {_                numberOfParts++__            }_            if (numberOfParts == 0) {_                numberOfParts++__            }_            this.numberOfParts = numberOfParts__            this.partSize = partSize__            this.partBytes = partBytes__        };constructs,a,new,instance,of,file,info,param,name,file,name,as,stored,in,the,blob,store,param,meta,data,the,files,meta,data,param,part,size,size,of,the,single,chunk;public,file,info,string,name,store,file,meta,data,meta,data,byte,size,value,part,size,this,name,name,this,metadata,meta,data,long,part,bytes,long,if,part,size,null,part,size,get,bytes,0,part,bytes,part,size,get,bytes,long,total,length,meta,data,length,long,number,of,parts,total,length,part,bytes,if,total,length,part,bytes,0,number,of,parts,if,number,of,parts,0,number,of,parts,this,number,of,parts,number,of,parts,this,part,size,part,size,this,part,bytes,part,bytes
BlobStoreIndexShardSnapshot -> FileInfo -> public FileInfo(String name, StoreFileMetaData metaData, ByteSizeValue partSize);1531179852;Constructs a new instance of file info__@param name         file name as stored in the blob store_@param metaData  the files meta data_@param partSize     size of the single chunk;public FileInfo(String name, StoreFileMetaData metaData, ByteSizeValue partSize) {_            this.name = name__            this.metadata = metaData___            long partBytes = Long.MAX_VALUE__            if (partSize != null && partSize.getBytes() > 0) {_                partBytes = partSize.getBytes()__            }__            long totalLength = metaData.length()__            long numberOfParts = totalLength / partBytes__            if (totalLength % partBytes > 0) {_                numberOfParts++__            }_            if (numberOfParts == 0) {_                numberOfParts++__            }_            this.numberOfParts = numberOfParts__            this.partSize = partSize__            this.partBytes = partBytes__        };constructs,a,new,instance,of,file,info,param,name,file,name,as,stored,in,the,blob,store,param,meta,data,the,files,meta,data,param,part,size,size,of,the,single,chunk;public,file,info,string,name,store,file,meta,data,meta,data,byte,size,value,part,size,this,name,name,this,metadata,meta,data,long,part,bytes,long,if,part,size,null,part,size,get,bytes,0,part,bytes,part,size,get,bytes,long,total,length,meta,data,length,long,number,of,parts,total,length,part,bytes,if,total,length,part,bytes,0,number,of,parts,if,number,of,parts,0,number,of,parts,this,number,of,parts,number,of,parts,this,part,size,part,size,this,part,bytes,part,bytes
BlobStoreIndexShardSnapshot -> FileInfo -> public String physicalName();1524684173;Returns original file name__@return original file name;public String physicalName() {_            return metadata.name()__        };returns,original,file,name,return,original,file,name;public,string,physical,name,return,metadata,name
BlobStoreIndexShardSnapshot -> FileInfo -> public String physicalName();1527583663;Returns original file name__@return original file name;public String physicalName() {_            return metadata.name()__        };returns,original,file,name,return,original,file,name;public,string,physical,name,return,metadata,name
BlobStoreIndexShardSnapshot -> FileInfo -> public String physicalName();1531179852;Returns original file name__@return original file name;public String physicalName() {_            return metadata.name()__        };returns,original,file,name,return,original,file,name;public,string,physical,name,return,metadata,name
BlobStoreIndexShardSnapshot -> FileInfo -> public static FileInfo fromXContent(XContentParser parser) throws IOException;1524684173;Parses JSON that represents file info__@param parser parser_@return file info;public static FileInfo fromXContent(XContentParser parser) throws IOException {_            XContentParser.Token token = parser.currentToken()__            String name = null__            String physicalName = null__            long length = -1__            String checksum = null__            ByteSizeValue partSize = null__            Version writtenBy = null__            String writtenByStr = null__            BytesRef metaHash = new BytesRef()__            if (token == XContentParser.Token.START_OBJECT) {_                while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {_                    if (token == XContentParser.Token.FIELD_NAME) {_                        String currentFieldName = parser.currentName()__                        token = parser.nextToken()__                        if (token.isValue()) {_                            if (NAME.equals(currentFieldName)) {_                                name = parser.text()__                            } else if (PHYSICAL_NAME.equals(currentFieldName)) {_                                physicalName = parser.text()__                            } else if (LENGTH.equals(currentFieldName)) {_                                length = parser.longValue()__                            } else if (CHECKSUM.equals(currentFieldName)) {_                                checksum = parser.text()__                            } else if (PART_SIZE.equals(currentFieldName)) {_                                partSize = new ByteSizeValue(parser.longValue())__                            } else if (WRITTEN_BY.equals(currentFieldName)) {_                                writtenByStr = parser.text()__                                writtenBy = Lucene.parseVersionLenient(writtenByStr, null)__                            } else if (META_HASH.equals(currentFieldName)) {_                                metaHash.bytes = parser.binaryValue()__                                metaHash.offset = 0__                                metaHash.length = metaHash.bytes.length__                            } else {_                                throw new ElasticsearchParseException("unknown parameter [{}]", currentFieldName)__                            }_                        } else {_                            throw new ElasticsearchParseException("unexpected token  [{}]", token)__                        }_                    } else {_                        throw new ElasticsearchParseException("unexpected token [{}]",token)__                    }_                }_            }__            _            if (name == null || Strings.validFileName(name) == false) {_                throw new ElasticsearchParseException("missing or invalid file name [" + name + "]")__            } else if (physicalName == null || Strings.validFileName(physicalName) == false) {_                throw new ElasticsearchParseException("missing or invalid physical file name [" + physicalName + "]")__            } else if (length < 0) {_                throw new ElasticsearchParseException("missing or invalid file length")__            } else if (writtenBy == null) {_                throw new ElasticsearchParseException("missing or invalid written_by [" + writtenByStr + "]")__            } else if (checksum == null) {_                throw new ElasticsearchParseException("missing checksum for name [" + name + "]")__            }_            return new FileInfo(name, new StoreFileMetaData(physicalName, length, checksum, writtenBy, metaHash), partSize)__        };parses,json,that,represents,file,info,param,parser,parser,return,file,info;public,static,file,info,from,xcontent,xcontent,parser,parser,throws,ioexception,xcontent,parser,token,token,parser,current,token,string,name,null,string,physical,name,null,long,length,1,string,checksum,null,byte,size,value,part,size,null,version,written,by,null,string,written,by,str,null,bytes,ref,meta,hash,new,bytes,ref,if,token,xcontent,parser,token,while,token,parser,next,token,xcontent,parser,token,if,token,xcontent,parser,token,string,current,field,name,parser,current,name,token,parser,next,token,if,token,is,value,if,name,equals,current,field,name,name,parser,text,else,if,equals,current,field,name,physical,name,parser,text,else,if,length,equals,current,field,name,length,parser,long,value,else,if,checksum,equals,current,field,name,checksum,parser,text,else,if,equals,current,field,name,part,size,new,byte,size,value,parser,long,value,else,if,equals,current,field,name,written,by,str,parser,text,written,by,lucene,parse,version,lenient,written,by,str,null,else,if,equals,current,field,name,meta,hash,bytes,parser,binary,value,meta,hash,offset,0,meta,hash,length,meta,hash,bytes,length,else,throw,new,elasticsearch,parse,exception,unknown,parameter,current,field,name,else,throw,new,elasticsearch,parse,exception,unexpected,token,token,else,throw,new,elasticsearch,parse,exception,unexpected,token,token,if,name,null,strings,valid,file,name,name,false,throw,new,elasticsearch,parse,exception,missing,or,invalid,file,name,name,else,if,physical,name,null,strings,valid,file,name,physical,name,false,throw,new,elasticsearch,parse,exception,missing,or,invalid,physical,file,name,physical,name,else,if,length,0,throw,new,elasticsearch,parse,exception,missing,or,invalid,file,length,else,if,written,by,null,throw,new,elasticsearch,parse,exception,missing,or,invalid,written,by,str,else,if,checksum,null,throw,new,elasticsearch,parse,exception,missing,checksum,for,name,name,return,new,file,info,name,new,store,file,meta,data,physical,name,length,checksum,written,by,meta,hash,part,size
BlobStoreIndexShardSnapshot -> FileInfo -> public static FileInfo fromXContent(XContentParser parser) throws IOException;1527583663;Parses JSON that represents file info__@param parser parser_@return file info;public static FileInfo fromXContent(XContentParser parser) throws IOException {_            XContentParser.Token token = parser.currentToken()__            String name = null__            String physicalName = null__            long length = -1__            String checksum = null__            ByteSizeValue partSize = null__            Version writtenBy = null__            String writtenByStr = null__            BytesRef metaHash = new BytesRef()__            if (token == XContentParser.Token.START_OBJECT) {_                while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {_                    if (token == XContentParser.Token.FIELD_NAME) {_                        String currentFieldName = parser.currentName()__                        token = parser.nextToken()__                        if (token.isValue()) {_                            if (NAME.equals(currentFieldName)) {_                                name = parser.text()__                            } else if (PHYSICAL_NAME.equals(currentFieldName)) {_                                physicalName = parser.text()__                            } else if (LENGTH.equals(currentFieldName)) {_                                length = parser.longValue()__                            } else if (CHECKSUM.equals(currentFieldName)) {_                                checksum = parser.text()__                            } else if (PART_SIZE.equals(currentFieldName)) {_                                partSize = new ByteSizeValue(parser.longValue())__                            } else if (WRITTEN_BY.equals(currentFieldName)) {_                                writtenByStr = parser.text()__                                writtenBy = Lucene.parseVersionLenient(writtenByStr, null)__                            } else if (META_HASH.equals(currentFieldName)) {_                                metaHash.bytes = parser.binaryValue()__                                metaHash.offset = 0__                                metaHash.length = metaHash.bytes.length__                            } else {_                                throw new ElasticsearchParseException("unknown parameter [{}]", currentFieldName)__                            }_                        } else {_                            throw new ElasticsearchParseException("unexpected token  [{}]", token)__                        }_                    } else {_                        throw new ElasticsearchParseException("unexpected token [{}]",token)__                    }_                }_            }__            _            if (name == null || Strings.validFileName(name) == false) {_                throw new ElasticsearchParseException("missing or invalid file name [" + name + "]")__            } else if (physicalName == null || Strings.validFileName(physicalName) == false) {_                throw new ElasticsearchParseException("missing or invalid physical file name [" + physicalName + "]")__            } else if (length < 0) {_                throw new ElasticsearchParseException("missing or invalid file length")__            } else if (writtenBy == null) {_                throw new ElasticsearchParseException("missing or invalid written_by [" + writtenByStr + "]")__            } else if (checksum == null) {_                throw new ElasticsearchParseException("missing checksum for name [" + name + "]")__            }_            return new FileInfo(name, new StoreFileMetaData(physicalName, length, checksum, writtenBy, metaHash), partSize)__        };parses,json,that,represents,file,info,param,parser,parser,return,file,info;public,static,file,info,from,xcontent,xcontent,parser,parser,throws,ioexception,xcontent,parser,token,token,parser,current,token,string,name,null,string,physical,name,null,long,length,1,string,checksum,null,byte,size,value,part,size,null,version,written,by,null,string,written,by,str,null,bytes,ref,meta,hash,new,bytes,ref,if,token,xcontent,parser,token,while,token,parser,next,token,xcontent,parser,token,if,token,xcontent,parser,token,string,current,field,name,parser,current,name,token,parser,next,token,if,token,is,value,if,name,equals,current,field,name,name,parser,text,else,if,equals,current,field,name,physical,name,parser,text,else,if,length,equals,current,field,name,length,parser,long,value,else,if,checksum,equals,current,field,name,checksum,parser,text,else,if,equals,current,field,name,part,size,new,byte,size,value,parser,long,value,else,if,equals,current,field,name,written,by,str,parser,text,written,by,lucene,parse,version,lenient,written,by,str,null,else,if,equals,current,field,name,meta,hash,bytes,parser,binary,value,meta,hash,offset,0,meta,hash,length,meta,hash,bytes,length,else,throw,new,elasticsearch,parse,exception,unknown,parameter,current,field,name,else,throw,new,elasticsearch,parse,exception,unexpected,token,token,else,throw,new,elasticsearch,parse,exception,unexpected,token,token,if,name,null,strings,valid,file,name,name,false,throw,new,elasticsearch,parse,exception,missing,or,invalid,file,name,name,else,if,physical,name,null,strings,valid,file,name,physical,name,false,throw,new,elasticsearch,parse,exception,missing,or,invalid,physical,file,name,physical,name,else,if,length,0,throw,new,elasticsearch,parse,exception,missing,or,invalid,file,length,else,if,written,by,null,throw,new,elasticsearch,parse,exception,missing,or,invalid,written,by,str,else,if,checksum,null,throw,new,elasticsearch,parse,exception,missing,checksum,for,name,name,return,new,file,info,name,new,store,file,meta,data,physical,name,length,checksum,written,by,meta,hash,part,size
BlobStoreIndexShardSnapshot -> FileInfo -> public static FileInfo fromXContent(XContentParser parser) throws IOException;1531179852;Parses JSON that represents file info__@param parser parser_@return file info;public static FileInfo fromXContent(XContentParser parser) throws IOException {_            XContentParser.Token token = parser.currentToken()__            String name = null__            String physicalName = null__            long length = -1__            String checksum = null__            ByteSizeValue partSize = null__            Version writtenBy = null__            String writtenByStr = null__            BytesRef metaHash = new BytesRef()__            if (token == XContentParser.Token.START_OBJECT) {_                while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {_                    if (token == XContentParser.Token.FIELD_NAME) {_                        String currentFieldName = parser.currentName()__                        token = parser.nextToken()__                        if (token.isValue()) {_                            if (NAME.equals(currentFieldName)) {_                                name = parser.text()__                            } else if (PHYSICAL_NAME.equals(currentFieldName)) {_                                physicalName = parser.text()__                            } else if (LENGTH.equals(currentFieldName)) {_                                length = parser.longValue()__                            } else if (CHECKSUM.equals(currentFieldName)) {_                                checksum = parser.text()__                            } else if (PART_SIZE.equals(currentFieldName)) {_                                partSize = new ByteSizeValue(parser.longValue())__                            } else if (WRITTEN_BY.equals(currentFieldName)) {_                                writtenByStr = parser.text()__                                writtenBy = Lucene.parseVersionLenient(writtenByStr, null)__                            } else if (META_HASH.equals(currentFieldName)) {_                                metaHash.bytes = parser.binaryValue()__                                metaHash.offset = 0__                                metaHash.length = metaHash.bytes.length__                            } else {_                                throw new ElasticsearchParseException("unknown parameter [{}]", currentFieldName)__                            }_                        } else {_                            throw new ElasticsearchParseException("unexpected token  [{}]", token)__                        }_                    } else {_                        throw new ElasticsearchParseException("unexpected token [{}]",token)__                    }_                }_            }__            _            if (name == null || Strings.validFileName(name) == false) {_                throw new ElasticsearchParseException("missing or invalid file name [" + name + "]")__            } else if (physicalName == null || Strings.validFileName(physicalName) == false) {_                throw new ElasticsearchParseException("missing or invalid physical file name [" + physicalName + "]")__            } else if (length < 0) {_                throw new ElasticsearchParseException("missing or invalid file length")__            } else if (writtenBy == null) {_                throw new ElasticsearchParseException("missing or invalid written_by [" + writtenByStr + "]")__            } else if (checksum == null) {_                throw new ElasticsearchParseException("missing checksum for name [" + name + "]")__            }_            return new FileInfo(name, new StoreFileMetaData(physicalName, length, checksum, writtenBy, metaHash), partSize)__        };parses,json,that,represents,file,info,param,parser,parser,return,file,info;public,static,file,info,from,xcontent,xcontent,parser,parser,throws,ioexception,xcontent,parser,token,token,parser,current,token,string,name,null,string,physical,name,null,long,length,1,string,checksum,null,byte,size,value,part,size,null,version,written,by,null,string,written,by,str,null,bytes,ref,meta,hash,new,bytes,ref,if,token,xcontent,parser,token,while,token,parser,next,token,xcontent,parser,token,if,token,xcontent,parser,token,string,current,field,name,parser,current,name,token,parser,next,token,if,token,is,value,if,name,equals,current,field,name,name,parser,text,else,if,equals,current,field,name,physical,name,parser,text,else,if,length,equals,current,field,name,length,parser,long,value,else,if,checksum,equals,current,field,name,checksum,parser,text,else,if,equals,current,field,name,part,size,new,byte,size,value,parser,long,value,else,if,equals,current,field,name,written,by,str,parser,text,written,by,lucene,parse,version,lenient,written,by,str,null,else,if,equals,current,field,name,meta,hash,bytes,parser,binary,value,meta,hash,offset,0,meta,hash,length,meta,hash,bytes,length,else,throw,new,elasticsearch,parse,exception,unknown,parameter,current,field,name,else,throw,new,elasticsearch,parse,exception,unexpected,token,token,else,throw,new,elasticsearch,parse,exception,unexpected,token,token,if,name,null,strings,valid,file,name,name,false,throw,new,elasticsearch,parse,exception,missing,or,invalid,file,name,name,else,if,physical,name,null,strings,valid,file,name,physical,name,false,throw,new,elasticsearch,parse,exception,missing,or,invalid,physical,file,name,physical,name,else,if,length,0,throw,new,elasticsearch,parse,exception,missing,or,invalid,file,length,else,if,written,by,null,throw,new,elasticsearch,parse,exception,missing,or,invalid,written,by,str,else,if,checksum,null,throw,new,elasticsearch,parse,exception,missing,checksum,for,name,name,return,new,file,info,name,new,store,file,meta,data,physical,name,length,checksum,written,by,meta,hash,part,size
