commented;modifiers;parameterAmount;loc;comment;code
true;public;1;4;/**  * Indicate whether the receiving node should operate based on local index information or forward requests,  * where needed, to other nodes. If running locally, request will not raise errors if running locally &amp. missing indices.  */ ;/**  * Indicate whether the receiving node should operate based on local index information or forward requests,  * where needed, to other nodes. If running locally, request will not raise errors if running locally &amp. missing indices.  */ public GetFieldMappingsRequest local(boolean local) {     this.local = local.     return this. }
false;public;0;3;;public boolean local() {     return local. }
false;public;1;5;;@Override public GetFieldMappingsRequest indices(String... indices) {     this.indices = indices.     return this. }
false;public;1;4;;public GetFieldMappingsRequest types(String... types) {     this.types = types.     return this. }
false;public;1;4;;public GetFieldMappingsRequest indicesOptions(IndicesOptions indicesOptions) {     this.indicesOptions = indicesOptions.     return this. }
false;public;0;4;;@Override public String[] indices() {     return indices. }
false;public;0;3;;public String[] types() {     return types. }
false;public;0;4;;@Override public IndicesOptions indicesOptions() {     return indicesOptions. }
true;public;1;4;/**  * @param fields a list of fields to retrieve the mapping for  */ ;/**  * @param fields a list of fields to retrieve the mapping for  */ public GetFieldMappingsRequest fields(String... fields) {     this.fields = fields.     return this. }
false;public;0;3;;public String[] fields() {     return fields. }
false;public;0;3;;public boolean includeDefaults() {     return includeDefaults. }
true;public;1;4;/**  * Indicates whether default mapping settings should be returned  */ ;/**  * Indicates whether default mapping settings should be returned  */ public GetFieldMappingsRequest includeDefaults(boolean includeDefaults) {     this.includeDefaults = includeDefaults.     return this. }
false;public;0;4;;@Override public ActionRequestValidationException validate() {     return null. }
false;public;1;10;;@Override public void writeTo(StreamOutput out) throws IOException {     super.writeTo(out).     out.writeStringArray(indices).     out.writeStringArray(types).     indicesOptions.writeIndicesOptions(out).     out.writeBoolean(local).     out.writeStringArray(fields).     out.writeBoolean(includeDefaults). }
false;public;1;10;;@Override public void readFrom(StreamInput in) throws IOException {     super.readFrom(in).     indices = in.readStringArray().     types = in.readStringArray().     indicesOptions = IndicesOptions.readIndicesOptions(in).     local = in.readBoolean().     fields = in.readStringArray().     includeDefaults = in.readBoolean(). }
