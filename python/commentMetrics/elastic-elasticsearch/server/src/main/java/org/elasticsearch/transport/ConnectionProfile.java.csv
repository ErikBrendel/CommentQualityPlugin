# id;timestamp;commentText;codeText;commentWords;codeWords
ConnectionProfile -> Builder -> public Builder();1524684173;create an empty builder;public Builder() {_        };create,an,empty,builder;public,builder
ConnectionProfile -> Builder -> public Builder();1534362961;create an empty builder;public Builder() {_        };create,an,empty,builder;public,builder
ConnectionProfile -> Builder -> public Builder();1540503333;create an empty builder;public Builder() {_        };create,an,empty,builder;public,builder
ConnectionProfile -> Builder -> public Builder();1541698679;create an empty builder;public Builder() {_        };create,an,empty,builder;public,builder
ConnectionProfile -> Builder -> public Builder();1543506953;create an empty builder;public Builder() {_        };create,an,empty,builder;public,builder
ConnectionProfile -> Builder -> public Builder();1544823664;create an empty builder;public Builder() {_        };create,an,empty,builder;public,builder
ConnectionProfile -> Builder -> public Builder();1550575247;create an empty builder;public Builder() {_        };create,an,empty,builder;public,builder
ConnectionProfile -> public static ConnectionProfile buildSingleChannelProfile(TransportRequestOptions.Type channelType, boolean compressionEnabled);1541698679;Builds a connection profile that is dedicated to a single channel type. Allows passing compression_settings.;public static ConnectionProfile buildSingleChannelProfile(TransportRequestOptions.Type channelType, boolean compressionEnabled) {_        return buildSingleChannelProfile(channelType, null, null, compressionEnabled)__    };builds,a,connection,profile,that,is,dedicated,to,a,single,channel,type,allows,passing,compression,settings;public,static,connection,profile,build,single,channel,profile,transport,request,options,type,channel,type,boolean,compression,enabled,return,build,single,channel,profile,channel,type,null,null,compression,enabled
ConnectionProfile -> public static ConnectionProfile buildSingleChannelProfile(TransportRequestOptions.Type channelType, boolean compressionEnabled);1543506953;Builds a connection profile that is dedicated to a single channel type. Allows passing compression_settings.;public static ConnectionProfile buildSingleChannelProfile(TransportRequestOptions.Type channelType, boolean compressionEnabled) {_        return buildSingleChannelProfile(channelType, null, null, null, compressionEnabled)__    };builds,a,connection,profile,that,is,dedicated,to,a,single,channel,type,allows,passing,compression,settings;public,static,connection,profile,build,single,channel,profile,transport,request,options,type,channel,type,boolean,compression,enabled,return,build,single,channel,profile,channel,type,null,null,null,compression,enabled
ConnectionProfile -> public static ConnectionProfile buildSingleChannelProfile(TransportRequestOptions.Type channelType, boolean compressionEnabled);1544823664;Builds a connection profile that is dedicated to a single channel type. Allows passing compression_settings.;public static ConnectionProfile buildSingleChannelProfile(TransportRequestOptions.Type channelType, boolean compressionEnabled) {_        return buildSingleChannelProfile(channelType, null, null, null, compressionEnabled)__    };builds,a,connection,profile,that,is,dedicated,to,a,single,channel,type,allows,passing,compression,settings;public,static,connection,profile,build,single,channel,profile,transport,request,options,type,channel,type,boolean,compression,enabled,return,build,single,channel,profile,channel,type,null,null,null,compression,enabled
ConnectionProfile -> Builder -> public Builder setPingInterval(TimeValue pingInterval);1543506953;Sets a ping interval for this connection profile;public Builder setPingInterval(TimeValue pingInterval) {_            this.pingInterval = pingInterval__            return this__        };sets,a,ping,interval,for,this,connection,profile;public,builder,set,ping,interval,time,value,ping,interval,this,ping,interval,ping,interval,return,this
ConnectionProfile -> Builder -> public Builder setPingInterval(TimeValue pingInterval);1544823664;Sets a ping interval for this connection profile;public Builder setPingInterval(TimeValue pingInterval) {_            this.pingInterval = pingInterval__            return this__        };sets,a,ping,interval,for,this,connection,profile;public,builder,set,ping,interval,time,value,ping,interval,this,ping,interval,ping,interval,return,this
ConnectionProfile -> Builder -> public Builder setPingInterval(TimeValue pingInterval);1550575247;Sets a ping interval for this connection profile;public Builder setPingInterval(TimeValue pingInterval) {_            this.pingInterval = pingInterval__            return this__        };sets,a,ping,interval,for,this,connection,profile;public,builder,set,ping,interval,time,value,ping,interval,this,ping,interval,ping,interval,return,this
ConnectionProfile -> public static ConnectionProfile buildDefaultConnectionProfile(Settings settings);1540503333;Builds a default connection profile based on the provided settings.__@param settings to build the connection profile from_@return the connection profile;public static ConnectionProfile buildDefaultConnectionProfile(Settings settings) {_        int connectionsPerNodeRecovery = TransportService.CONNECTIONS_PER_NODE_RECOVERY.get(settings)__        int connectionsPerNodeBulk = TransportService.CONNECTIONS_PER_NODE_BULK.get(settings)__        int connectionsPerNodeReg = TransportService.CONNECTIONS_PER_NODE_REG.get(settings)__        int connectionsPerNodeState = TransportService.CONNECTIONS_PER_NODE_STATE.get(settings)__        int connectionsPerNodePing = TransportService.CONNECTIONS_PER_NODE_PING.get(settings)__        Builder builder = new Builder()__        builder.setConnectTimeout(TransportService.TCP_CONNECT_TIMEOUT.get(settings))__        builder.setHandshakeTimeout(TransportService.TCP_CONNECT_TIMEOUT.get(settings))__        builder.addConnections(connectionsPerNodeBulk, TransportRequestOptions.Type.BULK)__        builder.addConnections(connectionsPerNodePing, TransportRequestOptions.Type.PING)__        _        builder.addConnections(DiscoveryNode.isMasterNode(settings) ? connectionsPerNodeState : 0, TransportRequestOptions.Type.STATE)__        _        builder.addConnections(DiscoveryNode.isDataNode(settings) ? connectionsPerNodeRecovery : 0, TransportRequestOptions.Type.RECOVERY)__        builder.addConnections(connectionsPerNodeReg, TransportRequestOptions.Type.REG)__        return builder.build()__    };builds,a,default,connection,profile,based,on,the,provided,settings,param,settings,to,build,the,connection,profile,from,return,the,connection,profile;public,static,connection,profile,build,default,connection,profile,settings,settings,int,connections,per,node,recovery,transport,service,get,settings,int,connections,per,node,bulk,transport,service,get,settings,int,connections,per,node,reg,transport,service,get,settings,int,connections,per,node,state,transport,service,get,settings,int,connections,per,node,ping,transport,service,get,settings,builder,builder,new,builder,builder,set,connect,timeout,transport,service,get,settings,builder,set,handshake,timeout,transport,service,get,settings,builder,add,connections,connections,per,node,bulk,transport,request,options,type,bulk,builder,add,connections,connections,per,node,ping,transport,request,options,type,ping,builder,add,connections,discovery,node,is,master,node,settings,connections,per,node,state,0,transport,request,options,type,state,builder,add,connections,discovery,node,is,data,node,settings,connections,per,node,recovery,0,transport,request,options,type,recovery,builder,add,connections,connections,per,node,reg,transport,request,options,type,reg,return,builder,build
ConnectionProfile -> public static ConnectionProfile buildDefaultConnectionProfile(Settings settings);1541698679;Builds a default connection profile based on the provided settings.__@param settings to build the connection profile from_@return the connection profile;public static ConnectionProfile buildDefaultConnectionProfile(Settings settings) {_        int connectionsPerNodeRecovery = TransportService.CONNECTIONS_PER_NODE_RECOVERY.get(settings)__        int connectionsPerNodeBulk = TransportService.CONNECTIONS_PER_NODE_BULK.get(settings)__        int connectionsPerNodeReg = TransportService.CONNECTIONS_PER_NODE_REG.get(settings)__        int connectionsPerNodeState = TransportService.CONNECTIONS_PER_NODE_STATE.get(settings)__        int connectionsPerNodePing = TransportService.CONNECTIONS_PER_NODE_PING.get(settings)__        Builder builder = new Builder()__        builder.setConnectTimeout(TransportService.TCP_CONNECT_TIMEOUT.get(settings))__        builder.setHandshakeTimeout(TransportService.TCP_CONNECT_TIMEOUT.get(settings))__        builder.setCompressionEnabled(Transport.TRANSPORT_TCP_COMPRESS.get(settings))__        builder.addConnections(connectionsPerNodeBulk, TransportRequestOptions.Type.BULK)__        builder.addConnections(connectionsPerNodePing, TransportRequestOptions.Type.PING)__        _        builder.addConnections(DiscoveryNode.isMasterNode(settings) ? connectionsPerNodeState : 0, TransportRequestOptions.Type.STATE)__        _        builder.addConnections(DiscoveryNode.isDataNode(settings) ? connectionsPerNodeRecovery : 0, TransportRequestOptions.Type.RECOVERY)__        builder.addConnections(connectionsPerNodeReg, TransportRequestOptions.Type.REG)__        return builder.build()__    };builds,a,default,connection,profile,based,on,the,provided,settings,param,settings,to,build,the,connection,profile,from,return,the,connection,profile;public,static,connection,profile,build,default,connection,profile,settings,settings,int,connections,per,node,recovery,transport,service,get,settings,int,connections,per,node,bulk,transport,service,get,settings,int,connections,per,node,reg,transport,service,get,settings,int,connections,per,node,state,transport,service,get,settings,int,connections,per,node,ping,transport,service,get,settings,builder,builder,new,builder,builder,set,connect,timeout,transport,service,get,settings,builder,set,handshake,timeout,transport,service,get,settings,builder,set,compression,enabled,transport,get,settings,builder,add,connections,connections,per,node,bulk,transport,request,options,type,bulk,builder,add,connections,connections,per,node,ping,transport,request,options,type,ping,builder,add,connections,discovery,node,is,master,node,settings,connections,per,node,state,0,transport,request,options,type,state,builder,add,connections,discovery,node,is,data,node,settings,connections,per,node,recovery,0,transport,request,options,type,recovery,builder,add,connections,connections,per,node,reg,transport,request,options,type,reg,return,builder,build
ConnectionProfile -> public static ConnectionProfile buildDefaultConnectionProfile(Settings settings);1543506953;Builds a default connection profile based on the provided settings.__@param settings to build the connection profile from_@return the connection profile;public static ConnectionProfile buildDefaultConnectionProfile(Settings settings) {_        int connectionsPerNodeRecovery = TransportService.CONNECTIONS_PER_NODE_RECOVERY.get(settings)__        int connectionsPerNodeBulk = TransportService.CONNECTIONS_PER_NODE_BULK.get(settings)__        int connectionsPerNodeReg = TransportService.CONNECTIONS_PER_NODE_REG.get(settings)__        int connectionsPerNodeState = TransportService.CONNECTIONS_PER_NODE_STATE.get(settings)__        int connectionsPerNodePing = TransportService.CONNECTIONS_PER_NODE_PING.get(settings)__        Builder builder = new Builder()__        builder.setConnectTimeout(TransportService.TCP_CONNECT_TIMEOUT.get(settings))__        builder.setHandshakeTimeout(TransportService.TCP_CONNECT_TIMEOUT.get(settings))__        builder.setPingInterval(TcpTransport.PING_SCHEDULE.get(settings))__        builder.setCompressionEnabled(Transport.TRANSPORT_TCP_COMPRESS.get(settings))__        builder.addConnections(connectionsPerNodeBulk, TransportRequestOptions.Type.BULK)__        builder.addConnections(connectionsPerNodePing, TransportRequestOptions.Type.PING)__        _        builder.addConnections(DiscoveryNode.isMasterNode(settings) ? connectionsPerNodeState : 0, TransportRequestOptions.Type.STATE)__        _        builder.addConnections(DiscoveryNode.isDataNode(settings) ? connectionsPerNodeRecovery : 0, TransportRequestOptions.Type.RECOVERY)__        builder.addConnections(connectionsPerNodeReg, TransportRequestOptions.Type.REG)__        return builder.build()__    };builds,a,default,connection,profile,based,on,the,provided,settings,param,settings,to,build,the,connection,profile,from,return,the,connection,profile;public,static,connection,profile,build,default,connection,profile,settings,settings,int,connections,per,node,recovery,transport,service,get,settings,int,connections,per,node,bulk,transport,service,get,settings,int,connections,per,node,reg,transport,service,get,settings,int,connections,per,node,state,transport,service,get,settings,int,connections,per,node,ping,transport,service,get,settings,builder,builder,new,builder,builder,set,connect,timeout,transport,service,get,settings,builder,set,handshake,timeout,transport,service,get,settings,builder,set,ping,interval,tcp,transport,get,settings,builder,set,compression,enabled,transport,get,settings,builder,add,connections,connections,per,node,bulk,transport,request,options,type,bulk,builder,add,connections,connections,per,node,ping,transport,request,options,type,ping,builder,add,connections,discovery,node,is,master,node,settings,connections,per,node,state,0,transport,request,options,type,state,builder,add,connections,discovery,node,is,data,node,settings,connections,per,node,recovery,0,transport,request,options,type,recovery,builder,add,connections,connections,per,node,reg,transport,request,options,type,reg,return,builder,build
ConnectionProfile -> public static ConnectionProfile buildDefaultConnectionProfile(Settings settings);1544823664;Builds a default connection profile based on the provided settings.__@param settings to build the connection profile from_@return the connection profile;public static ConnectionProfile buildDefaultConnectionProfile(Settings settings) {_        int connectionsPerNodeRecovery = TransportSettings.CONNECTIONS_PER_NODE_RECOVERY.get(settings)__        int connectionsPerNodeBulk = TransportSettings.CONNECTIONS_PER_NODE_BULK.get(settings)__        int connectionsPerNodeReg = TransportSettings.CONNECTIONS_PER_NODE_REG.get(settings)__        int connectionsPerNodeState = TransportSettings.CONNECTIONS_PER_NODE_STATE.get(settings)__        int connectionsPerNodePing = TransportSettings.CONNECTIONS_PER_NODE_PING.get(settings)__        Builder builder = new Builder()__        builder.setConnectTimeout(TransportSettings.CONNECT_TIMEOUT.get(settings))__        builder.setHandshakeTimeout(TransportSettings.CONNECT_TIMEOUT.get(settings))__        builder.setPingInterval(TransportSettings.PING_SCHEDULE.get(settings))__        builder.setCompressionEnabled(TransportSettings.TRANSPORT_COMPRESS.get(settings))__        builder.addConnections(connectionsPerNodeBulk, TransportRequestOptions.Type.BULK)__        builder.addConnections(connectionsPerNodePing, TransportRequestOptions.Type.PING)__        _        builder.addConnections(DiscoveryNode.isMasterNode(settings) ? connectionsPerNodeState : 0, TransportRequestOptions.Type.STATE)__        _        builder.addConnections(DiscoveryNode.isDataNode(settings) ? connectionsPerNodeRecovery : 0, TransportRequestOptions.Type.RECOVERY)__        builder.addConnections(connectionsPerNodeReg, TransportRequestOptions.Type.REG)__        return builder.build()__    };builds,a,default,connection,profile,based,on,the,provided,settings,param,settings,to,build,the,connection,profile,from,return,the,connection,profile;public,static,connection,profile,build,default,connection,profile,settings,settings,int,connections,per,node,recovery,transport,settings,get,settings,int,connections,per,node,bulk,transport,settings,get,settings,int,connections,per,node,reg,transport,settings,get,settings,int,connections,per,node,state,transport,settings,get,settings,int,connections,per,node,ping,transport,settings,get,settings,builder,builder,new,builder,builder,set,connect,timeout,transport,settings,get,settings,builder,set,handshake,timeout,transport,settings,get,settings,builder,set,ping,interval,transport,settings,get,settings,builder,set,compression,enabled,transport,settings,get,settings,builder,add,connections,connections,per,node,bulk,transport,request,options,type,bulk,builder,add,connections,connections,per,node,ping,transport,request,options,type,ping,builder,add,connections,discovery,node,is,master,node,settings,connections,per,node,state,0,transport,request,options,type,state,builder,add,connections,discovery,node,is,data,node,settings,connections,per,node,recovery,0,transport,request,options,type,recovery,builder,add,connections,connections,per,node,reg,transport,request,options,type,reg,return,builder,build
ConnectionProfile -> public static ConnectionProfile buildDefaultConnectionProfile(Settings settings);1550575247;Builds a default connection profile based on the provided settings.__@param settings to build the connection profile from_@return the connection profile;public static ConnectionProfile buildDefaultConnectionProfile(Settings settings) {_        int connectionsPerNodeRecovery = TransportSettings.CONNECTIONS_PER_NODE_RECOVERY.get(settings)__        int connectionsPerNodeBulk = TransportSettings.CONNECTIONS_PER_NODE_BULK.get(settings)__        int connectionsPerNodeReg = TransportSettings.CONNECTIONS_PER_NODE_REG.get(settings)__        int connectionsPerNodeState = TransportSettings.CONNECTIONS_PER_NODE_STATE.get(settings)__        int connectionsPerNodePing = TransportSettings.CONNECTIONS_PER_NODE_PING.get(settings)__        Builder builder = new Builder()__        builder.setConnectTimeout(TransportSettings.CONNECT_TIMEOUT.get(settings))__        builder.setHandshakeTimeout(TransportSettings.CONNECT_TIMEOUT.get(settings))__        builder.setPingInterval(TransportSettings.PING_SCHEDULE.get(settings))__        builder.setCompressionEnabled(TransportSettings.TRANSPORT_COMPRESS.get(settings))__        builder.addConnections(connectionsPerNodeBulk, TransportRequestOptions.Type.BULK)__        builder.addConnections(connectionsPerNodePing, TransportRequestOptions.Type.PING)__        _        builder.addConnections(DiscoveryNode.isMasterNode(settings) ? connectionsPerNodeState : 0, TransportRequestOptions.Type.STATE)__        _        builder.addConnections(DiscoveryNode.isDataNode(settings) ? connectionsPerNodeRecovery : 0, TransportRequestOptions.Type.RECOVERY)__        builder.addConnections(connectionsPerNodeReg, TransportRequestOptions.Type.REG)__        return builder.build()__    };builds,a,default,connection,profile,based,on,the,provided,settings,param,settings,to,build,the,connection,profile,from,return,the,connection,profile;public,static,connection,profile,build,default,connection,profile,settings,settings,int,connections,per,node,recovery,transport,settings,get,settings,int,connections,per,node,bulk,transport,settings,get,settings,int,connections,per,node,reg,transport,settings,get,settings,int,connections,per,node,state,transport,settings,get,settings,int,connections,per,node,ping,transport,settings,get,settings,builder,builder,new,builder,builder,set,connect,timeout,transport,settings,get,settings,builder,set,handshake,timeout,transport,settings,get,settings,builder,set,ping,interval,transport,settings,get,settings,builder,set,compression,enabled,transport,settings,get,settings,builder,add,connections,connections,per,node,bulk,transport,request,options,type,bulk,builder,add,connections,connections,per,node,ping,transport,request,options,type,ping,builder,add,connections,discovery,node,is,master,node,settings,connections,per,node,state,0,transport,request,options,type,state,builder,add,connections,discovery,node,is,data,node,settings,connections,per,node,recovery,0,transport,request,options,type,recovery,builder,add,connections,connections,per,node,reg,transport,request,options,type,reg,return,builder,build
ConnectionProfile -> public static ConnectionProfile buildSingleChannelProfile(TransportRequestOptions.Type channelType,                                                               @Nullable TimeValue connectTimeout,                                                               @Nullable TimeValue handshakeTimeout);1524684173;Builds a connection profile that is dedicated to a single channel type. Use this_when opening single use connections;public static ConnectionProfile buildSingleChannelProfile(TransportRequestOptions.Type channelType,_                                                              @Nullable TimeValue connectTimeout,_                                                              @Nullable TimeValue handshakeTimeout) {_        Builder builder = new Builder()__        builder.addConnections(1, channelType)__        final EnumSet<TransportRequestOptions.Type> otherTypes = EnumSet.allOf(TransportRequestOptions.Type.class)__        otherTypes.remove(channelType)__        builder.addConnections(0, otherTypes.stream().toArray(TransportRequestOptions.Type[]::new))__        if (connectTimeout != null) {_            builder.setConnectTimeout(connectTimeout)__        }_        if (handshakeTimeout != null) {_            builder.setHandshakeTimeout(handshakeTimeout)__        }_        return builder.build()__    };builds,a,connection,profile,that,is,dedicated,to,a,single,channel,type,use,this,when,opening,single,use,connections;public,static,connection,profile,build,single,channel,profile,transport,request,options,type,channel,type,nullable,time,value,connect,timeout,nullable,time,value,handshake,timeout,builder,builder,new,builder,builder,add,connections,1,channel,type,final,enum,set,transport,request,options,type,other,types,enum,set,all,of,transport,request,options,type,class,other,types,remove,channel,type,builder,add,connections,0,other,types,stream,to,array,transport,request,options,type,new,if,connect,timeout,null,builder,set,connect,timeout,connect,timeout,if,handshake,timeout,null,builder,set,handshake,timeout,handshake,timeout,return,builder,build
ConnectionProfile -> public static ConnectionProfile buildSingleChannelProfile(TransportRequestOptions.Type channelType,                                                               @Nullable TimeValue connectTimeout,                                                               @Nullable TimeValue handshakeTimeout);1534362961;Builds a connection profile that is dedicated to a single channel type. Use this_when opening single use connections;public static ConnectionProfile buildSingleChannelProfile(TransportRequestOptions.Type channelType,_                                                              @Nullable TimeValue connectTimeout,_                                                              @Nullable TimeValue handshakeTimeout) {_        Builder builder = new Builder()__        builder.addConnections(1, channelType)__        final EnumSet<TransportRequestOptions.Type> otherTypes = EnumSet.allOf(TransportRequestOptions.Type.class)__        otherTypes.remove(channelType)__        builder.addConnections(0, otherTypes.stream().toArray(TransportRequestOptions.Type[]::new))__        if (connectTimeout != null) {_            builder.setConnectTimeout(connectTimeout)__        }_        if (handshakeTimeout != null) {_            builder.setHandshakeTimeout(handshakeTimeout)__        }_        return builder.build()__    };builds,a,connection,profile,that,is,dedicated,to,a,single,channel,type,use,this,when,opening,single,use,connections;public,static,connection,profile,build,single,channel,profile,transport,request,options,type,channel,type,nullable,time,value,connect,timeout,nullable,time,value,handshake,timeout,builder,builder,new,builder,builder,add,connections,1,channel,type,final,enum,set,transport,request,options,type,other,types,enum,set,all,of,transport,request,options,type,class,other,types,remove,channel,type,builder,add,connections,0,other,types,stream,to,array,transport,request,options,type,new,if,connect,timeout,null,builder,set,connect,timeout,connect,timeout,if,handshake,timeout,null,builder,set,handshake,timeout,handshake,timeout,return,builder,build
ConnectionProfile -> public static ConnectionProfile buildSingleChannelProfile(TransportRequestOptions.Type channelType,                                                               @Nullable TimeValue connectTimeout,                                                               @Nullable TimeValue handshakeTimeout);1540503333;Builds a connection profile that is dedicated to a single channel type. Use this_when opening single use connections;public static ConnectionProfile buildSingleChannelProfile(TransportRequestOptions.Type channelType,_                                                              @Nullable TimeValue connectTimeout,_                                                              @Nullable TimeValue handshakeTimeout) {_        Builder builder = new Builder()__        builder.addConnections(1, channelType)__        final EnumSet<TransportRequestOptions.Type> otherTypes = EnumSet.allOf(TransportRequestOptions.Type.class)__        otherTypes.remove(channelType)__        builder.addConnections(0, otherTypes.stream().toArray(TransportRequestOptions.Type[]::new))__        if (connectTimeout != null) {_            builder.setConnectTimeout(connectTimeout)__        }_        if (handshakeTimeout != null) {_            builder.setHandshakeTimeout(handshakeTimeout)__        }_        return builder.build()__    };builds,a,connection,profile,that,is,dedicated,to,a,single,channel,type,use,this,when,opening,single,use,connections;public,static,connection,profile,build,single,channel,profile,transport,request,options,type,channel,type,nullable,time,value,connect,timeout,nullable,time,value,handshake,timeout,builder,builder,new,builder,builder,add,connections,1,channel,type,final,enum,set,transport,request,options,type,other,types,enum,set,all,of,transport,request,options,type,class,other,types,remove,channel,type,builder,add,connections,0,other,types,stream,to,array,transport,request,options,type,new,if,connect,timeout,null,builder,set,connect,timeout,connect,timeout,if,handshake,timeout,null,builder,set,handshake,timeout,handshake,timeout,return,builder,build
ConnectionProfile -> Builder -> public ConnectionProfile build();1524684173;Creates a new {@link ConnectionProfile} based on the added connections._@throws IllegalStateException if any of the {@link org.elasticsearch.transport.TransportRequestOptions.Type} enum is missing;public ConnectionProfile build() {_            EnumSet<TransportRequestOptions.Type> types = EnumSet.allOf(TransportRequestOptions.Type.class)__            types.removeAll(addedTypes)__            if (types.isEmpty() == false) {_                throw new IllegalStateException("not all types are added for this connection profile - missing types: " + types)__            }_            return new ConnectionProfile(Collections.unmodifiableList(handles), offset, connectTimeout, handshakeTimeout)__        };creates,a,new,link,connection,profile,based,on,the,added,connections,throws,illegal,state,exception,if,any,of,the,link,org,elasticsearch,transport,transport,request,options,type,enum,is,missing;public,connection,profile,build,enum,set,transport,request,options,type,types,enum,set,all,of,transport,request,options,type,class,types,remove,all,added,types,if,types,is,empty,false,throw,new,illegal,state,exception,not,all,types,are,added,for,this,connection,profile,missing,types,types,return,new,connection,profile,collections,unmodifiable,list,handles,offset,connect,timeout,handshake,timeout
ConnectionProfile -> Builder -> public ConnectionProfile build();1534362961;Creates a new {@link ConnectionProfile} based on the added connections._@throws IllegalStateException if any of the {@link org.elasticsearch.transport.TransportRequestOptions.Type} enum is missing;public ConnectionProfile build() {_            EnumSet<TransportRequestOptions.Type> types = EnumSet.allOf(TransportRequestOptions.Type.class)__            types.removeAll(addedTypes)__            if (types.isEmpty() == false) {_                throw new IllegalStateException("not all types are added for this connection profile - missing types: " + types)__            }_            return new ConnectionProfile(Collections.unmodifiableList(handles), offset, connectTimeout, handshakeTimeout)__        };creates,a,new,link,connection,profile,based,on,the,added,connections,throws,illegal,state,exception,if,any,of,the,link,org,elasticsearch,transport,transport,request,options,type,enum,is,missing;public,connection,profile,build,enum,set,transport,request,options,type,types,enum,set,all,of,transport,request,options,type,class,types,remove,all,added,types,if,types,is,empty,false,throw,new,illegal,state,exception,not,all,types,are,added,for,this,connection,profile,missing,types,types,return,new,connection,profile,collections,unmodifiable,list,handles,offset,connect,timeout,handshake,timeout
ConnectionProfile -> Builder -> public ConnectionProfile build();1540503333;Creates a new {@link ConnectionProfile} based on the added connections._@throws IllegalStateException if any of the {@link org.elasticsearch.transport.TransportRequestOptions.Type} enum is missing;public ConnectionProfile build() {_            EnumSet<TransportRequestOptions.Type> types = EnumSet.allOf(TransportRequestOptions.Type.class)__            types.removeAll(addedTypes)__            if (types.isEmpty() == false) {_                throw new IllegalStateException("not all types are added for this connection profile - missing types: " + types)__            }_            return new ConnectionProfile(Collections.unmodifiableList(handles), offset, connectTimeout, handshakeTimeout)__        };creates,a,new,link,connection,profile,based,on,the,added,connections,throws,illegal,state,exception,if,any,of,the,link,org,elasticsearch,transport,transport,request,options,type,enum,is,missing;public,connection,profile,build,enum,set,transport,request,options,type,types,enum,set,all,of,transport,request,options,type,class,types,remove,all,added,types,if,types,is,empty,false,throw,new,illegal,state,exception,not,all,types,are,added,for,this,connection,profile,missing,types,types,return,new,connection,profile,collections,unmodifiable,list,handles,offset,connect,timeout,handshake,timeout
ConnectionProfile -> Builder -> public ConnectionProfile build();1541698679;Creates a new {@link ConnectionProfile} based on the added connections._@throws IllegalStateException if any of the {@link org.elasticsearch.transport.TransportRequestOptions.Type} enum is missing;public ConnectionProfile build() {_            EnumSet<TransportRequestOptions.Type> types = EnumSet.allOf(TransportRequestOptions.Type.class)__            types.removeAll(addedTypes)__            if (types.isEmpty() == false) {_                throw new IllegalStateException("not all types are added for this connection profile - missing types: " + types)__            }_            return new ConnectionProfile(Collections.unmodifiableList(handles), numConnections, connectTimeout, handshakeTimeout,_                compressionEnabled)__        };creates,a,new,link,connection,profile,based,on,the,added,connections,throws,illegal,state,exception,if,any,of,the,link,org,elasticsearch,transport,transport,request,options,type,enum,is,missing;public,connection,profile,build,enum,set,transport,request,options,type,types,enum,set,all,of,transport,request,options,type,class,types,remove,all,added,types,if,types,is,empty,false,throw,new,illegal,state,exception,not,all,types,are,added,for,this,connection,profile,missing,types,types,return,new,connection,profile,collections,unmodifiable,list,handles,num,connections,connect,timeout,handshake,timeout,compression,enabled
ConnectionProfile -> Builder -> public ConnectionProfile build();1543506953;Creates a new {@link ConnectionProfile} based on the added connections._@throws IllegalStateException if any of the {@link org.elasticsearch.transport.TransportRequestOptions.Type} enum is missing;public ConnectionProfile build() {_            EnumSet<TransportRequestOptions.Type> types = EnumSet.allOf(TransportRequestOptions.Type.class)__            types.removeAll(addedTypes)__            if (types.isEmpty() == false) {_                throw new IllegalStateException("not all types are added for this connection profile - missing types: " + types)__            }_            return new ConnectionProfile(Collections.unmodifiableList(handles), numConnections, connectTimeout, handshakeTimeout,_                pingInterval, compressionEnabled)__        };creates,a,new,link,connection,profile,based,on,the,added,connections,throws,illegal,state,exception,if,any,of,the,link,org,elasticsearch,transport,transport,request,options,type,enum,is,missing;public,connection,profile,build,enum,set,transport,request,options,type,types,enum,set,all,of,transport,request,options,type,class,types,remove,all,added,types,if,types,is,empty,false,throw,new,illegal,state,exception,not,all,types,are,added,for,this,connection,profile,missing,types,types,return,new,connection,profile,collections,unmodifiable,list,handles,num,connections,connect,timeout,handshake,timeout,ping,interval,compression,enabled
ConnectionProfile -> Builder -> public ConnectionProfile build();1544823664;Creates a new {@link ConnectionProfile} based on the added connections._@throws IllegalStateException if any of the {@link org.elasticsearch.transport.TransportRequestOptions.Type} enum is missing;public ConnectionProfile build() {_            EnumSet<TransportRequestOptions.Type> types = EnumSet.allOf(TransportRequestOptions.Type.class)__            types.removeAll(addedTypes)__            if (types.isEmpty() == false) {_                throw new IllegalStateException("not all types are added for this connection profile - missing types: " + types)__            }_            return new ConnectionProfile(Collections.unmodifiableList(handles), numConnections, connectTimeout, handshakeTimeout,_                pingInterval, compressionEnabled)__        };creates,a,new,link,connection,profile,based,on,the,added,connections,throws,illegal,state,exception,if,any,of,the,link,org,elasticsearch,transport,transport,request,options,type,enum,is,missing;public,connection,profile,build,enum,set,transport,request,options,type,types,enum,set,all,of,transport,request,options,type,class,types,remove,all,added,types,if,types,is,empty,false,throw,new,illegal,state,exception,not,all,types,are,added,for,this,connection,profile,missing,types,types,return,new,connection,profile,collections,unmodifiable,list,handles,num,connections,connect,timeout,handshake,timeout,ping,interval,compression,enabled
ConnectionProfile -> Builder -> public ConnectionProfile build();1550575247;Creates a new {@link ConnectionProfile} based on the added connections._@throws IllegalStateException if any of the {@link org.elasticsearch.transport.TransportRequestOptions.Type} enum is missing;public ConnectionProfile build() {_            EnumSet<TransportRequestOptions.Type> types = EnumSet.allOf(TransportRequestOptions.Type.class)__            types.removeAll(addedTypes)__            if (types.isEmpty() == false) {_                throw new IllegalStateException("not all types are added for this connection profile - missing types: " + types)__            }_            return new ConnectionProfile(Collections.unmodifiableList(handles), numConnections, connectTimeout, handshakeTimeout,_                pingInterval, compressionEnabled)__        };creates,a,new,link,connection,profile,based,on,the,added,connections,throws,illegal,state,exception,if,any,of,the,link,org,elasticsearch,transport,transport,request,options,type,enum,is,missing;public,connection,profile,build,enum,set,transport,request,options,type,types,enum,set,all,of,transport,request,options,type,class,types,remove,all,added,types,if,types,is,empty,false,throw,new,illegal,state,exception,not,all,types,are,added,for,this,connection,profile,missing,types,types,return,new,connection,profile,collections,unmodifiable,list,handles,num,connections,connect,timeout,handshake,timeout,ping,interval,compression,enabled
ConnectionProfile -> ConnectionTypeHandle -> <T> T getChannel(List<T> channels);1524684173;Returns one of the channels out configured for this handle. The channel is selected in a round-robin_fashion.;<T> T getChannel(List<T> channels) {_            if (length == 0) {_                throw new IllegalStateException("can't select channel size is 0 for types: " + types)__            }_            assert channels.size() >= offset + length : "illegal size: " + channels.size() + " expected >= " + (offset + length)__            return channels.get(offset + Math.floorMod(counter.incrementAndGet(), length))__        };returns,one,of,the,channels,out,configured,for,this,handle,the,channel,is,selected,in,a,round,robin,fashion;t,t,get,channel,list,t,channels,if,length,0,throw,new,illegal,state,exception,can,t,select,channel,size,is,0,for,types,types,assert,channels,size,offset,length,illegal,size,channels,size,expected,offset,length,return,channels,get,offset,math,floor,mod,counter,increment,and,get,length
ConnectionProfile -> ConnectionTypeHandle -> <T> T getChannel(List<T> channels);1534362961;Returns one of the channels out configured for this handle. The channel is selected in a round-robin_fashion.;<T> T getChannel(List<T> channels) {_            if (length == 0) {_                throw new IllegalStateException("can't select channel size is 0 for types: " + types)__            }_            assert channels.size() >= offset + length : "illegal size: " + channels.size() + " expected >= " + (offset + length)__            return channels.get(offset + Math.floorMod(counter.incrementAndGet(), length))__        };returns,one,of,the,channels,out,configured,for,this,handle,the,channel,is,selected,in,a,round,robin,fashion;t,t,get,channel,list,t,channels,if,length,0,throw,new,illegal,state,exception,can,t,select,channel,size,is,0,for,types,types,assert,channels,size,offset,length,illegal,size,channels,size,expected,offset,length,return,channels,get,offset,math,floor,mod,counter,increment,and,get,length
ConnectionProfile -> ConnectionTypeHandle -> <T> T getChannel(List<T> channels);1540503333;Returns one of the channels out configured for this handle. The channel is selected in a round-robin_fashion.;<T> T getChannel(List<T> channels) {_            if (length == 0) {_                throw new IllegalStateException("can't select channel size is 0 for types: " + types)__            }_            assert channels.size() >= offset + length : "illegal size: " + channels.size() + " expected >= " + (offset + length)__            return channels.get(offset + Math.floorMod(counter.incrementAndGet(), length))__        };returns,one,of,the,channels,out,configured,for,this,handle,the,channel,is,selected,in,a,round,robin,fashion;t,t,get,channel,list,t,channels,if,length,0,throw,new,illegal,state,exception,can,t,select,channel,size,is,0,for,types,types,assert,channels,size,offset,length,illegal,size,channels,size,expected,offset,length,return,channels,get,offset,math,floor,mod,counter,increment,and,get,length
ConnectionProfile -> ConnectionTypeHandle -> <T> T getChannel(List<T> channels);1541698679;Returns one of the channels out configured for this handle. The channel is selected in a round-robin_fashion.;<T> T getChannel(List<T> channels) {_            if (length == 0) {_                throw new IllegalStateException("can't select channel size is 0 for types: " + types)__            }_            assert channels.size() >= offset + length : "illegal size: " + channels.size() + " expected >= " + (offset + length)__            return channels.get(offset + Math.floorMod(counter.incrementAndGet(), length))__        };returns,one,of,the,channels,out,configured,for,this,handle,the,channel,is,selected,in,a,round,robin,fashion;t,t,get,channel,list,t,channels,if,length,0,throw,new,illegal,state,exception,can,t,select,channel,size,is,0,for,types,types,assert,channels,size,offset,length,illegal,size,channels,size,expected,offset,length,return,channels,get,offset,math,floor,mod,counter,increment,and,get,length
ConnectionProfile -> ConnectionTypeHandle -> <T> T getChannel(List<T> channels);1543506953;Returns one of the channels out configured for this handle. The channel is selected in a round-robin_fashion.;<T> T getChannel(List<T> channels) {_            if (length == 0) {_                throw new IllegalStateException("can't select channel size is 0 for types: " + types)__            }_            assert channels.size() >= offset + length : "illegal size: " + channels.size() + " expected >= " + (offset + length)__            return channels.get(offset + Math.floorMod(counter.incrementAndGet(), length))__        };returns,one,of,the,channels,out,configured,for,this,handle,the,channel,is,selected,in,a,round,robin,fashion;t,t,get,channel,list,t,channels,if,length,0,throw,new,illegal,state,exception,can,t,select,channel,size,is,0,for,types,types,assert,channels,size,offset,length,illegal,size,channels,size,expected,offset,length,return,channels,get,offset,math,floor,mod,counter,increment,and,get,length
ConnectionProfile -> ConnectionTypeHandle -> <T> T getChannel(List<T> channels);1544823664;Returns one of the channels out configured for this handle. The channel is selected in a round-robin_fashion.;<T> T getChannel(List<T> channels) {_            if (length == 0) {_                throw new IllegalStateException("can't select channel size is 0 for types: " + types)__            }_            assert channels.size() >= offset + length : "illegal size: " + channels.size() + " expected >= " + (offset + length)__            return channels.get(offset + Math.floorMod(counter.incrementAndGet(), length))__        };returns,one,of,the,channels,out,configured,for,this,handle,the,channel,is,selected,in,a,round,robin,fashion;t,t,get,channel,list,t,channels,if,length,0,throw,new,illegal,state,exception,can,t,select,channel,size,is,0,for,types,types,assert,channels,size,offset,length,illegal,size,channels,size,expected,offset,length,return,channels,get,offset,math,floor,mod,counter,increment,and,get,length
ConnectionProfile -> ConnectionTypeHandle -> <T> T getChannel(List<T> channels);1550575247;Returns one of the channels out configured for this handle. The channel is selected in a round-robin_fashion.;<T> T getChannel(List<T> channels) {_            if (length == 0) {_                throw new IllegalStateException("can't select channel size is 0 for types: " + types)__            }_            assert channels.size() >= offset + length : "illegal size: " + channels.size() + " expected >= " + (offset + length)__            return channels.get(offset + Math.floorMod(counter.incrementAndGet(), length))__        };returns,one,of,the,channels,out,configured,for,this,handle,the,channel,is,selected,in,a,round,robin,fashion;t,t,get,channel,list,t,channels,if,length,0,throw,new,illegal,state,exception,can,t,select,channel,size,is,0,for,types,types,assert,channels,size,offset,length,illegal,size,channels,size,expected,offset,length,return,channels,get,offset,math,floor,mod,counter,increment,and,get,length
ConnectionProfile -> Builder -> public Builder setHandshakeTimeout(TimeValue handshakeTimeout);1543506953;Sets a handshake timeout for this connection profile;public Builder setHandshakeTimeout(TimeValue handshakeTimeout) {_            if (handshakeTimeout.millis() < 0) {_                throw new IllegalArgumentException("handshakeTimeout must be non-negative but was: " + handshakeTimeout)__            }_            this.handshakeTimeout = handshakeTimeout__            return this__        };sets,a,handshake,timeout,for,this,connection,profile;public,builder,set,handshake,timeout,time,value,handshake,timeout,if,handshake,timeout,millis,0,throw,new,illegal,argument,exception,handshake,timeout,must,be,non,negative,but,was,handshake,timeout,this,handshake,timeout,handshake,timeout,return,this
ConnectionProfile -> Builder -> public Builder setHandshakeTimeout(TimeValue handshakeTimeout);1544823664;Sets a handshake timeout for this connection profile;public Builder setHandshakeTimeout(TimeValue handshakeTimeout) {_            if (handshakeTimeout.millis() < 0) {_                throw new IllegalArgumentException("handshakeTimeout must be non-negative but was: " + handshakeTimeout)__            }_            this.handshakeTimeout = handshakeTimeout__            return this__        };sets,a,handshake,timeout,for,this,connection,profile;public,builder,set,handshake,timeout,time,value,handshake,timeout,if,handshake,timeout,millis,0,throw,new,illegal,argument,exception,handshake,timeout,must,be,non,negative,but,was,handshake,timeout,this,handshake,timeout,handshake,timeout,return,this
ConnectionProfile -> Builder -> public Builder setHandshakeTimeout(TimeValue handshakeTimeout);1550575247;Sets a handshake timeout for this connection profile;public Builder setHandshakeTimeout(TimeValue handshakeTimeout) {_            if (handshakeTimeout.millis() < 0) {_                throw new IllegalArgumentException("handshakeTimeout must be non-negative but was: " + handshakeTimeout)__            }_            this.handshakeTimeout = handshakeTimeout__            return this__        };sets,a,handshake,timeout,for,this,connection,profile;public,builder,set,handshake,timeout,time,value,handshake,timeout,if,handshake,timeout,millis,0,throw,new,illegal,argument,exception,handshake,timeout,must,be,non,negative,but,was,handshake,timeout,this,handshake,timeout,handshake,timeout,return,this
ConnectionProfile -> Builder -> public Builder(ConnectionProfile source);1524684173;copy constructor, using another profile as a base;public Builder(ConnectionProfile source) {_            handles.addAll(source.getHandles())__            offset = source.getNumConnections()__            handles.forEach(th -> addedTypes.addAll(th.types))__            connectTimeout = source.getConnectTimeout()__            handshakeTimeout = source.getHandshakeTimeout()__        };copy,constructor,using,another,profile,as,a,base;public,builder,connection,profile,source,handles,add,all,source,get,handles,offset,source,get,num,connections,handles,for,each,th,added,types,add,all,th,types,connect,timeout,source,get,connect,timeout,handshake,timeout,source,get,handshake,timeout
ConnectionProfile -> Builder -> public Builder(ConnectionProfile source);1534362961;copy constructor, using another profile as a base;public Builder(ConnectionProfile source) {_            handles.addAll(source.getHandles())__            offset = source.getNumConnections()__            handles.forEach(th -> addedTypes.addAll(th.types))__            connectTimeout = source.getConnectTimeout()__            handshakeTimeout = source.getHandshakeTimeout()__        };copy,constructor,using,another,profile,as,a,base;public,builder,connection,profile,source,handles,add,all,source,get,handles,offset,source,get,num,connections,handles,for,each,th,added,types,add,all,th,types,connect,timeout,source,get,connect,timeout,handshake,timeout,source,get,handshake,timeout
ConnectionProfile -> Builder -> public Builder(ConnectionProfile source);1540503333;copy constructor, using another profile as a base;public Builder(ConnectionProfile source) {_            handles.addAll(source.getHandles())__            offset = source.getNumConnections()__            handles.forEach(th -> addedTypes.addAll(th.types))__            connectTimeout = source.getConnectTimeout()__            handshakeTimeout = source.getHandshakeTimeout()__        };copy,constructor,using,another,profile,as,a,base;public,builder,connection,profile,source,handles,add,all,source,get,handles,offset,source,get,num,connections,handles,for,each,th,added,types,add,all,th,types,connect,timeout,source,get,connect,timeout,handshake,timeout,source,get,handshake,timeout
ConnectionProfile -> Builder -> public Builder(ConnectionProfile source);1541698679;copy constructor, using another profile as a base;public Builder(ConnectionProfile source) {_            handles.addAll(source.getHandles())__            numConnections = source.getNumConnections()__            handles.forEach(th -> addedTypes.addAll(th.types))__            connectTimeout = source.getConnectTimeout()__            handshakeTimeout = source.getHandshakeTimeout()__            compressionEnabled = source.getCompressionEnabled()__        };copy,constructor,using,another,profile,as,a,base;public,builder,connection,profile,source,handles,add,all,source,get,handles,num,connections,source,get,num,connections,handles,for,each,th,added,types,add,all,th,types,connect,timeout,source,get,connect,timeout,handshake,timeout,source,get,handshake,timeout,compression,enabled,source,get,compression,enabled
ConnectionProfile -> Builder -> public Builder(ConnectionProfile source);1543506953;copy constructor, using another profile as a base;public Builder(ConnectionProfile source) {_            handles.addAll(source.getHandles())__            numConnections = source.getNumConnections()__            handles.forEach(th -> addedTypes.addAll(th.types))__            connectTimeout = source.getConnectTimeout()__            handshakeTimeout = source.getHandshakeTimeout()__            compressionEnabled = source.getCompressionEnabled()__            pingInterval = source.getPingInterval()__        };copy,constructor,using,another,profile,as,a,base;public,builder,connection,profile,source,handles,add,all,source,get,handles,num,connections,source,get,num,connections,handles,for,each,th,added,types,add,all,th,types,connect,timeout,source,get,connect,timeout,handshake,timeout,source,get,handshake,timeout,compression,enabled,source,get,compression,enabled,ping,interval,source,get,ping,interval
ConnectionProfile -> Builder -> public Builder(ConnectionProfile source);1544823664;copy constructor, using another profile as a base;public Builder(ConnectionProfile source) {_            handles.addAll(source.getHandles())__            numConnections = source.getNumConnections()__            handles.forEach(th -> addedTypes.addAll(th.types))__            connectTimeout = source.getConnectTimeout()__            handshakeTimeout = source.getHandshakeTimeout()__            compressionEnabled = source.getCompressionEnabled()__            pingInterval = source.getPingInterval()__        };copy,constructor,using,another,profile,as,a,base;public,builder,connection,profile,source,handles,add,all,source,get,handles,num,connections,source,get,num,connections,handles,for,each,th,added,types,add,all,th,types,connect,timeout,source,get,connect,timeout,handshake,timeout,source,get,handshake,timeout,compression,enabled,source,get,compression,enabled,ping,interval,source,get,ping,interval
ConnectionProfile -> Builder -> public Builder(ConnectionProfile source);1550575247;copy constructor, using another profile as a base;public Builder(ConnectionProfile source) {_            handles.addAll(source.getHandles())__            numConnections = source.getNumConnections()__            handles.forEach(th -> addedTypes.addAll(th.types))__            connectTimeout = source.getConnectTimeout()__            handshakeTimeout = source.getHandshakeTimeout()__            compressionEnabled = source.getCompressionEnabled()__            pingInterval = source.getPingInterval()__        };copy,constructor,using,another,profile,as,a,base;public,builder,connection,profile,source,handles,add,all,source,get,handles,num,connections,source,get,num,connections,handles,for,each,th,added,types,add,all,th,types,connect,timeout,source,get,connect,timeout,handshake,timeout,source,get,handshake,timeout,compression,enabled,source,get,compression,enabled,ping,interval,source,get,ping,interval
ConnectionProfile -> Builder -> public void addConnections(int numConnections, TransportRequestOptions.Type... types);1524684173;Adds a number of connections for one or more types. Each type can only be added once._@param numConnections the number of connections to use in the pool for the given connection types_@param types a set of types that should share the given number of connections;public void addConnections(int numConnections, TransportRequestOptions.Type... types) {_            if (types == null || types.length == 0) {_                throw new IllegalArgumentException("types must not be null")__            }_            for (TransportRequestOptions.Type type : types) {_                if (addedTypes.contains(type)) {_                    throw new IllegalArgumentException("type [" + type + "] is already registered")__                }_            }_            addedTypes.addAll(Arrays.asList(types))__            handles.add(new ConnectionTypeHandle(offset, numConnections, EnumSet.copyOf(Arrays.asList(types))))__            offset += numConnections__        };adds,a,number,of,connections,for,one,or,more,types,each,type,can,only,be,added,once,param,num,connections,the,number,of,connections,to,use,in,the,pool,for,the,given,connection,types,param,types,a,set,of,types,that,should,share,the,given,number,of,connections;public,void,add,connections,int,num,connections,transport,request,options,type,types,if,types,null,types,length,0,throw,new,illegal,argument,exception,types,must,not,be,null,for,transport,request,options,type,type,types,if,added,types,contains,type,throw,new,illegal,argument,exception,type,type,is,already,registered,added,types,add,all,arrays,as,list,types,handles,add,new,connection,type,handle,offset,num,connections,enum,set,copy,of,arrays,as,list,types,offset,num,connections
ConnectionProfile -> Builder -> public void addConnections(int numConnections, TransportRequestOptions.Type... types);1534362961;Adds a number of connections for one or more types. Each type can only be added once._@param numConnections the number of connections to use in the pool for the given connection types_@param types a set of types that should share the given number of connections;public void addConnections(int numConnections, TransportRequestOptions.Type... types) {_            if (types == null || types.length == 0) {_                throw new IllegalArgumentException("types must not be null")__            }_            for (TransportRequestOptions.Type type : types) {_                if (addedTypes.contains(type)) {_                    throw new IllegalArgumentException("type [" + type + "] is already registered")__                }_            }_            addedTypes.addAll(Arrays.asList(types))__            handles.add(new ConnectionTypeHandle(offset, numConnections, EnumSet.copyOf(Arrays.asList(types))))__            offset += numConnections__        };adds,a,number,of,connections,for,one,or,more,types,each,type,can,only,be,added,once,param,num,connections,the,number,of,connections,to,use,in,the,pool,for,the,given,connection,types,param,types,a,set,of,types,that,should,share,the,given,number,of,connections;public,void,add,connections,int,num,connections,transport,request,options,type,types,if,types,null,types,length,0,throw,new,illegal,argument,exception,types,must,not,be,null,for,transport,request,options,type,type,types,if,added,types,contains,type,throw,new,illegal,argument,exception,type,type,is,already,registered,added,types,add,all,arrays,as,list,types,handles,add,new,connection,type,handle,offset,num,connections,enum,set,copy,of,arrays,as,list,types,offset,num,connections
ConnectionProfile -> Builder -> public void addConnections(int numConnections, TransportRequestOptions.Type... types);1540503333;Adds a number of connections for one or more types. Each type can only be added once._@param numConnections the number of connections to use in the pool for the given connection types_@param types a set of types that should share the given number of connections;public void addConnections(int numConnections, TransportRequestOptions.Type... types) {_            if (types == null || types.length == 0) {_                throw new IllegalArgumentException("types must not be null")__            }_            for (TransportRequestOptions.Type type : types) {_                if (addedTypes.contains(type)) {_                    throw new IllegalArgumentException("type [" + type + "] is already registered")__                }_            }_            addedTypes.addAll(Arrays.asList(types))__            handles.add(new ConnectionTypeHandle(offset, numConnections, EnumSet.copyOf(Arrays.asList(types))))__            offset += numConnections__        };adds,a,number,of,connections,for,one,or,more,types,each,type,can,only,be,added,once,param,num,connections,the,number,of,connections,to,use,in,the,pool,for,the,given,connection,types,param,types,a,set,of,types,that,should,share,the,given,number,of,connections;public,void,add,connections,int,num,connections,transport,request,options,type,types,if,types,null,types,length,0,throw,new,illegal,argument,exception,types,must,not,be,null,for,transport,request,options,type,type,types,if,added,types,contains,type,throw,new,illegal,argument,exception,type,type,is,already,registered,added,types,add,all,arrays,as,list,types,handles,add,new,connection,type,handle,offset,num,connections,enum,set,copy,of,arrays,as,list,types,offset,num,connections
ConnectionProfile -> Builder -> public void addConnections(int numConnections, TransportRequestOptions.Type... types);1541698679;Adds a number of connections for one or more types. Each type can only be added once._@param numConnections the number of connections to use in the pool for the given connection types_@param types a set of types that should share the given number of connections;public void addConnections(int numConnections, TransportRequestOptions.Type... types) {_            if (types == null || types.length == 0) {_                throw new IllegalArgumentException("types must not be null")__            }_            for (TransportRequestOptions.Type type : types) {_                if (addedTypes.contains(type)) {_                    throw new IllegalArgumentException("type [" + type + "] is already registered")__                }_            }_            addedTypes.addAll(Arrays.asList(types))__            handles.add(new ConnectionTypeHandle(this.numConnections, numConnections, EnumSet.copyOf(Arrays.asList(types))))__            this.numConnections += numConnections__        };adds,a,number,of,connections,for,one,or,more,types,each,type,can,only,be,added,once,param,num,connections,the,number,of,connections,to,use,in,the,pool,for,the,given,connection,types,param,types,a,set,of,types,that,should,share,the,given,number,of,connections;public,void,add,connections,int,num,connections,transport,request,options,type,types,if,types,null,types,length,0,throw,new,illegal,argument,exception,types,must,not,be,null,for,transport,request,options,type,type,types,if,added,types,contains,type,throw,new,illegal,argument,exception,type,type,is,already,registered,added,types,add,all,arrays,as,list,types,handles,add,new,connection,type,handle,this,num,connections,num,connections,enum,set,copy,of,arrays,as,list,types,this,num,connections,num,connections
ConnectionProfile -> List<ConnectionTypeHandle> getHandles();1524684173;Returns the type handles for this connection profile;List<ConnectionTypeHandle> getHandles() {_        return Collections.unmodifiableList(handles)__    };returns,the,type,handles,for,this,connection,profile;list,connection,type,handle,get,handles,return,collections,unmodifiable,list,handles
ConnectionProfile -> List<ConnectionTypeHandle> getHandles();1534362961;Returns the type handles for this connection profile;List<ConnectionTypeHandle> getHandles() {_        return Collections.unmodifiableList(handles)__    };returns,the,type,handles,for,this,connection,profile;list,connection,type,handle,get,handles,return,collections,unmodifiable,list,handles
ConnectionProfile -> List<ConnectionTypeHandle> getHandles();1540503333;Returns the type handles for this connection profile;List<ConnectionTypeHandle> getHandles() {_        return Collections.unmodifiableList(handles)__    };returns,the,type,handles,for,this,connection,profile;list,connection,type,handle,get,handles,return,collections,unmodifiable,list,handles
ConnectionProfile -> List<ConnectionTypeHandle> getHandles();1541698679;Returns the type handles for this connection profile;List<ConnectionTypeHandle> getHandles() {_        return Collections.unmodifiableList(handles)__    };returns,the,type,handles,for,this,connection,profile;list,connection,type,handle,get,handles,return,collections,unmodifiable,list,handles
ConnectionProfile -> List<ConnectionTypeHandle> getHandles();1543506953;Returns the type handles for this connection profile;List<ConnectionTypeHandle> getHandles() {_        return Collections.unmodifiableList(handles)__    };returns,the,type,handles,for,this,connection,profile;list,connection,type,handle,get,handles,return,collections,unmodifiable,list,handles
ConnectionProfile -> List<ConnectionTypeHandle> getHandles();1544823664;Returns the type handles for this connection profile;List<ConnectionTypeHandle> getHandles() {_        return Collections.unmodifiableList(handles)__    };returns,the,type,handles,for,this,connection,profile;list,connection,type,handle,get,handles,return,collections,unmodifiable,list,handles
ConnectionProfile -> List<ConnectionTypeHandle> getHandles();1550575247;Returns the type handles for this connection profile;List<ConnectionTypeHandle> getHandles() {_        return Collections.unmodifiableList(handles)__    };returns,the,type,handles,for,this,connection,profile;list,connection,type,handle,get,handles,return,collections,unmodifiable,list,handles
ConnectionProfile -> public TimeValue getPingInterval();1543506953;Returns the ping interval or <code>null</code> if no explicit ping interval is set on this profile.;public TimeValue getPingInterval() {_        return pingInterval__    };returns,the,ping,interval,or,code,null,code,if,no,explicit,ping,interval,is,set,on,this,profile;public,time,value,get,ping,interval,return,ping,interval
ConnectionProfile -> public TimeValue getPingInterval();1544823664;Returns the ping interval or <code>null</code> if no explicit ping interval is set on this profile.;public TimeValue getPingInterval() {_        return pingInterval__    };returns,the,ping,interval,or,code,null,code,if,no,explicit,ping,interval,is,set,on,this,profile;public,time,value,get,ping,interval,return,ping,interval
ConnectionProfile -> public TimeValue getPingInterval();1550575247;Returns the ping interval or <code>null</code> if no explicit ping interval is set on this profile.;public TimeValue getPingInterval() {_        return pingInterval__    };returns,the,ping,interval,or,code,null,code,if,no,explicit,ping,interval,is,set,on,this,profile;public,time,value,get,ping,interval,return,ping,interval
ConnectionProfile -> Builder -> public void setConnectTimeout(TimeValue connectTimeout);1524684173;Sets a connect timeout for this connection profile;public void setConnectTimeout(TimeValue connectTimeout) {_            if (connectTimeout.millis() < 0) {_                throw new IllegalArgumentException("connectTimeout must be non-negative but was: " + connectTimeout)__            }_            this.connectTimeout = connectTimeout__        };sets,a,connect,timeout,for,this,connection,profile;public,void,set,connect,timeout,time,value,connect,timeout,if,connect,timeout,millis,0,throw,new,illegal,argument,exception,connect,timeout,must,be,non,negative,but,was,connect,timeout,this,connect,timeout,connect,timeout
ConnectionProfile -> Builder -> public void setConnectTimeout(TimeValue connectTimeout);1534362961;Sets a connect timeout for this connection profile;public void setConnectTimeout(TimeValue connectTimeout) {_            if (connectTimeout.millis() < 0) {_                throw new IllegalArgumentException("connectTimeout must be non-negative but was: " + connectTimeout)__            }_            this.connectTimeout = connectTimeout__        };sets,a,connect,timeout,for,this,connection,profile;public,void,set,connect,timeout,time,value,connect,timeout,if,connect,timeout,millis,0,throw,new,illegal,argument,exception,connect,timeout,must,be,non,negative,but,was,connect,timeout,this,connect,timeout,connect,timeout
ConnectionProfile -> Builder -> public void setConnectTimeout(TimeValue connectTimeout);1540503333;Sets a connect timeout for this connection profile;public void setConnectTimeout(TimeValue connectTimeout) {_            if (connectTimeout.millis() < 0) {_                throw new IllegalArgumentException("connectTimeout must be non-negative but was: " + connectTimeout)__            }_            this.connectTimeout = connectTimeout__        };sets,a,connect,timeout,for,this,connection,profile;public,void,set,connect,timeout,time,value,connect,timeout,if,connect,timeout,millis,0,throw,new,illegal,argument,exception,connect,timeout,must,be,non,negative,but,was,connect,timeout,this,connect,timeout,connect,timeout
ConnectionProfile -> Builder -> public void setConnectTimeout(TimeValue connectTimeout);1541698679;Sets a connect timeout for this connection profile;public void setConnectTimeout(TimeValue connectTimeout) {_            if (connectTimeout.millis() < 0) {_                throw new IllegalArgumentException("connectTimeout must be non-negative but was: " + connectTimeout)__            }_            this.connectTimeout = connectTimeout__        };sets,a,connect,timeout,for,this,connection,profile;public,void,set,connect,timeout,time,value,connect,timeout,if,connect,timeout,millis,0,throw,new,illegal,argument,exception,connect,timeout,must,be,non,negative,but,was,connect,timeout,this,connect,timeout,connect,timeout
ConnectionProfile -> public TimeValue getHandshakeTimeout();1524684173;Returns the handshake timeout or <code>null</code> if no explicit timeout is set on this profile.;public TimeValue getHandshakeTimeout() {_        return handshakeTimeout__    };returns,the,handshake,timeout,or,code,null,code,if,no,explicit,timeout,is,set,on,this,profile;public,time,value,get,handshake,timeout,return,handshake,timeout
ConnectionProfile -> public TimeValue getHandshakeTimeout();1534362961;Returns the handshake timeout or <code>null</code> if no explicit timeout is set on this profile.;public TimeValue getHandshakeTimeout() {_        return handshakeTimeout__    };returns,the,handshake,timeout,or,code,null,code,if,no,explicit,timeout,is,set,on,this,profile;public,time,value,get,handshake,timeout,return,handshake,timeout
ConnectionProfile -> public TimeValue getHandshakeTimeout();1540503333;Returns the handshake timeout or <code>null</code> if no explicit timeout is set on this profile.;public TimeValue getHandshakeTimeout() {_        return handshakeTimeout__    };returns,the,handshake,timeout,or,code,null,code,if,no,explicit,timeout,is,set,on,this,profile;public,time,value,get,handshake,timeout,return,handshake,timeout
ConnectionProfile -> public TimeValue getHandshakeTimeout();1541698679;Returns the handshake timeout or <code>null</code> if no explicit timeout is set on this profile.;public TimeValue getHandshakeTimeout() {_        return handshakeTimeout__    };returns,the,handshake,timeout,or,code,null,code,if,no,explicit,timeout,is,set,on,this,profile;public,time,value,get,handshake,timeout,return,handshake,timeout
ConnectionProfile -> public TimeValue getHandshakeTimeout();1543506953;Returns the handshake timeout or <code>null</code> if no explicit timeout is set on this profile.;public TimeValue getHandshakeTimeout() {_        return handshakeTimeout__    };returns,the,handshake,timeout,or,code,null,code,if,no,explicit,timeout,is,set,on,this,profile;public,time,value,get,handshake,timeout,return,handshake,timeout
ConnectionProfile -> public TimeValue getHandshakeTimeout();1544823664;Returns the handshake timeout or <code>null</code> if no explicit timeout is set on this profile.;public TimeValue getHandshakeTimeout() {_        return handshakeTimeout__    };returns,the,handshake,timeout,or,code,null,code,if,no,explicit,timeout,is,set,on,this,profile;public,time,value,get,handshake,timeout,return,handshake,timeout
ConnectionProfile -> public TimeValue getHandshakeTimeout();1550575247;Returns the handshake timeout or <code>null</code> if no explicit timeout is set on this profile.;public TimeValue getHandshakeTimeout() {_        return handshakeTimeout__    };returns,the,handshake,timeout,or,code,null,code,if,no,explicit,timeout,is,set,on,this,profile;public,time,value,get,handshake,timeout,return,handshake,timeout
ConnectionProfile -> ConnectionTypeHandle -> Set<TransportRequestOptions.Type> getTypes();1524684173;Returns all types for this handle;Set<TransportRequestOptions.Type> getTypes() {_            return types__        };returns,all,types,for,this,handle;set,transport,request,options,type,get,types,return,types
ConnectionProfile -> ConnectionTypeHandle -> Set<TransportRequestOptions.Type> getTypes();1534362961;Returns all types for this handle;Set<TransportRequestOptions.Type> getTypes() {_            return types__        };returns,all,types,for,this,handle;set,transport,request,options,type,get,types,return,types
ConnectionProfile -> ConnectionTypeHandle -> Set<TransportRequestOptions.Type> getTypes();1540503333;Returns all types for this handle;Set<TransportRequestOptions.Type> getTypes() {_            return types__        };returns,all,types,for,this,handle;set,transport,request,options,type,get,types,return,types
ConnectionProfile -> ConnectionTypeHandle -> Set<TransportRequestOptions.Type> getTypes();1541698679;Returns all types for this handle;Set<TransportRequestOptions.Type> getTypes() {_            return types__        };returns,all,types,for,this,handle;set,transport,request,options,type,get,types,return,types
ConnectionProfile -> ConnectionTypeHandle -> Set<TransportRequestOptions.Type> getTypes();1543506953;Returns all types for this handle;Set<TransportRequestOptions.Type> getTypes() {_            return types__        };returns,all,types,for,this,handle;set,transport,request,options,type,get,types,return,types
ConnectionProfile -> ConnectionTypeHandle -> Set<TransportRequestOptions.Type> getTypes();1544823664;Returns all types for this handle;Set<TransportRequestOptions.Type> getTypes() {_            return types__        };returns,all,types,for,this,handle;set,transport,request,options,type,get,types,return,types
ConnectionProfile -> ConnectionTypeHandle -> Set<TransportRequestOptions.Type> getTypes();1550575247;Returns all types for this handle;Set<TransportRequestOptions.Type> getTypes() {_            return types__        };returns,all,types,for,this,handle;set,transport,request,options,type,get,types,return,types
ConnectionProfile -> public int getNumConnections();1524684173;Returns the total number of connections for this profile;public int getNumConnections() {_        return numConnections__    };returns,the,total,number,of,connections,for,this,profile;public,int,get,num,connections,return,num,connections
ConnectionProfile -> public int getNumConnections();1534362961;Returns the total number of connections for this profile;public int getNumConnections() {_        return numConnections__    };returns,the,total,number,of,connections,for,this,profile;public,int,get,num,connections,return,num,connections
ConnectionProfile -> public int getNumConnections();1540503333;Returns the total number of connections for this profile;public int getNumConnections() {_        return numConnections__    };returns,the,total,number,of,connections,for,this,profile;public,int,get,num,connections,return,num,connections
ConnectionProfile -> public int getNumConnections();1541698679;Returns the total number of connections for this profile;public int getNumConnections() {_        return numConnections__    };returns,the,total,number,of,connections,for,this,profile;public,int,get,num,connections,return,num,connections
ConnectionProfile -> public int getNumConnections();1543506953;Returns the total number of connections for this profile;public int getNumConnections() {_        return numConnections__    };returns,the,total,number,of,connections,for,this,profile;public,int,get,num,connections,return,num,connections
ConnectionProfile -> public int getNumConnections();1544823664;Returns the total number of connections for this profile;public int getNumConnections() {_        return numConnections__    };returns,the,total,number,of,connections,for,this,profile;public,int,get,num,connections,return,num,connections
ConnectionProfile -> public int getNumConnections();1550575247;Returns the total number of connections for this profile;public int getNumConnections() {_        return numConnections__    };returns,the,total,number,of,connections,for,this,profile;public,int,get,num,connections,return,num,connections
ConnectionProfile -> Builder -> public Builder setConnectTimeout(TimeValue connectTimeout);1543506953;Sets a connect timeout for this connection profile;public Builder setConnectTimeout(TimeValue connectTimeout) {_            if (connectTimeout.millis() < 0) {_                throw new IllegalArgumentException("connectTimeout must be non-negative but was: " + connectTimeout)__            }_            this.connectTimeout = connectTimeout__            return this__        };sets,a,connect,timeout,for,this,connection,profile;public,builder,set,connect,timeout,time,value,connect,timeout,if,connect,timeout,millis,0,throw,new,illegal,argument,exception,connect,timeout,must,be,non,negative,but,was,connect,timeout,this,connect,timeout,connect,timeout,return,this
ConnectionProfile -> Builder -> public Builder setConnectTimeout(TimeValue connectTimeout);1544823664;Sets a connect timeout for this connection profile;public Builder setConnectTimeout(TimeValue connectTimeout) {_            if (connectTimeout.millis() < 0) {_                throw new IllegalArgumentException("connectTimeout must be non-negative but was: " + connectTimeout)__            }_            this.connectTimeout = connectTimeout__            return this__        };sets,a,connect,timeout,for,this,connection,profile;public,builder,set,connect,timeout,time,value,connect,timeout,if,connect,timeout,millis,0,throw,new,illegal,argument,exception,connect,timeout,must,be,non,negative,but,was,connect,timeout,this,connect,timeout,connect,timeout,return,this
ConnectionProfile -> Builder -> public Builder setConnectTimeout(TimeValue connectTimeout);1550575247;Sets a connect timeout for this connection profile;public Builder setConnectTimeout(TimeValue connectTimeout) {_            if (connectTimeout.millis() < 0) {_                throw new IllegalArgumentException("connectTimeout must be non-negative but was: " + connectTimeout)__            }_            this.connectTimeout = connectTimeout__            return this__        };sets,a,connect,timeout,for,this,connection,profile;public,builder,set,connect,timeout,time,value,connect,timeout,if,connect,timeout,millis,0,throw,new,illegal,argument,exception,connect,timeout,must,be,non,negative,but,was,connect,timeout,this,connect,timeout,connect,timeout,return,this
ConnectionProfile -> public static ConnectionProfile buildSingleChannelProfile(TransportRequestOptions.Type channelType, @Nullable TimeValue connectTimeout,                                                               @Nullable TimeValue handshakeTimeout);1541698679;Builds a connection profile that is dedicated to a single channel type. Allows passing connection and_handshake timeouts.;public static ConnectionProfile buildSingleChannelProfile(TransportRequestOptions.Type channelType, @Nullable TimeValue connectTimeout,_                                                              @Nullable TimeValue handshakeTimeout) {_        return buildSingleChannelProfile(channelType, connectTimeout, handshakeTimeout, null)__    };builds,a,connection,profile,that,is,dedicated,to,a,single,channel,type,allows,passing,connection,and,handshake,timeouts;public,static,connection,profile,build,single,channel,profile,transport,request,options,type,channel,type,nullable,time,value,connect,timeout,nullable,time,value,handshake,timeout,return,build,single,channel,profile,channel,type,connect,timeout,handshake,timeout,null
ConnectionProfile -> public static ConnectionProfile buildSingleChannelProfile(TransportRequestOptions.Type channelType, @Nullable TimeValue connectTimeout,                                                               @Nullable TimeValue handshakeTimeout);1543506953;Builds a connection profile that is dedicated to a single channel type. Allows passing connection and_handshake timeouts.;public static ConnectionProfile buildSingleChannelProfile(TransportRequestOptions.Type channelType, @Nullable TimeValue connectTimeout,_                                                              @Nullable TimeValue handshakeTimeout) {_        return buildSingleChannelProfile(channelType, connectTimeout, handshakeTimeout, null, null)__    };builds,a,connection,profile,that,is,dedicated,to,a,single,channel,type,allows,passing,connection,and,handshake,timeouts;public,static,connection,profile,build,single,channel,profile,transport,request,options,type,channel,type,nullable,time,value,connect,timeout,nullable,time,value,handshake,timeout,return,build,single,channel,profile,channel,type,connect,timeout,handshake,timeout,null,null
ConnectionProfile -> public static ConnectionProfile buildSingleChannelProfile(TransportRequestOptions.Type channelType, @Nullable TimeValue connectTimeout,                                                               @Nullable TimeValue handshakeTimeout);1544823664;Builds a connection profile that is dedicated to a single channel type. Allows passing connection and_handshake timeouts.;public static ConnectionProfile buildSingleChannelProfile(TransportRequestOptions.Type channelType, @Nullable TimeValue connectTimeout,_                                                              @Nullable TimeValue handshakeTimeout) {_        return buildSingleChannelProfile(channelType, connectTimeout, handshakeTimeout, null, null)__    };builds,a,connection,profile,that,is,dedicated,to,a,single,channel,type,allows,passing,connection,and,handshake,timeouts;public,static,connection,profile,build,single,channel,profile,transport,request,options,type,channel,type,nullable,time,value,connect,timeout,nullable,time,value,handshake,timeout,return,build,single,channel,profile,channel,type,connect,timeout,handshake,timeout,null,null
ConnectionProfile -> public static ConnectionProfile buildSingleChannelProfile(TransportRequestOptions.Type channelType, @Nullable TimeValue connectTimeout,                                                               @Nullable TimeValue handshakeTimeout, @Nullable TimeValue pingInterval,                                                               @Nullable Boolean compressionEnabled);1543506953;Builds a connection profile that is dedicated to a single channel type. Allows passing connection and_handshake timeouts and compression settings.;public static ConnectionProfile buildSingleChannelProfile(TransportRequestOptions.Type channelType, @Nullable TimeValue connectTimeout,_                                                              @Nullable TimeValue handshakeTimeout, @Nullable TimeValue pingInterval,_                                                              @Nullable Boolean compressionEnabled) {_        Builder builder = new Builder()__        builder.addConnections(1, channelType)__        final EnumSet<TransportRequestOptions.Type> otherTypes = EnumSet.allOf(TransportRequestOptions.Type.class)__        otherTypes.remove(channelType)__        builder.addConnections(0, otherTypes.toArray(new TransportRequestOptions.Type[0]))__        if (connectTimeout != null) {_            builder.setConnectTimeout(connectTimeout)__        }_        if (handshakeTimeout != null) {_            builder.setHandshakeTimeout(handshakeTimeout)__        }_        if (pingInterval != null) {_            builder.setPingInterval(pingInterval)__        }_        if (compressionEnabled != null) {_            builder.setCompressionEnabled(compressionEnabled)__        }_        return builder.build()__    };builds,a,connection,profile,that,is,dedicated,to,a,single,channel,type,allows,passing,connection,and,handshake,timeouts,and,compression,settings;public,static,connection,profile,build,single,channel,profile,transport,request,options,type,channel,type,nullable,time,value,connect,timeout,nullable,time,value,handshake,timeout,nullable,time,value,ping,interval,nullable,boolean,compression,enabled,builder,builder,new,builder,builder,add,connections,1,channel,type,final,enum,set,transport,request,options,type,other,types,enum,set,all,of,transport,request,options,type,class,other,types,remove,channel,type,builder,add,connections,0,other,types,to,array,new,transport,request,options,type,0,if,connect,timeout,null,builder,set,connect,timeout,connect,timeout,if,handshake,timeout,null,builder,set,handshake,timeout,handshake,timeout,if,ping,interval,null,builder,set,ping,interval,ping,interval,if,compression,enabled,null,builder,set,compression,enabled,compression,enabled,return,builder,build
ConnectionProfile -> public static ConnectionProfile buildSingleChannelProfile(TransportRequestOptions.Type channelType, @Nullable TimeValue connectTimeout,                                                               @Nullable TimeValue handshakeTimeout, @Nullable TimeValue pingInterval,                                                               @Nullable Boolean compressionEnabled);1544823664;Builds a connection profile that is dedicated to a single channel type. Allows passing connection and_handshake timeouts and compression settings.;public static ConnectionProfile buildSingleChannelProfile(TransportRequestOptions.Type channelType, @Nullable TimeValue connectTimeout,_                                                              @Nullable TimeValue handshakeTimeout, @Nullable TimeValue pingInterval,_                                                              @Nullable Boolean compressionEnabled) {_        Builder builder = new Builder()__        builder.addConnections(1, channelType)__        final EnumSet<TransportRequestOptions.Type> otherTypes = EnumSet.allOf(TransportRequestOptions.Type.class)__        otherTypes.remove(channelType)__        builder.addConnections(0, otherTypes.toArray(new TransportRequestOptions.Type[0]))__        if (connectTimeout != null) {_            builder.setConnectTimeout(connectTimeout)__        }_        if (handshakeTimeout != null) {_            builder.setHandshakeTimeout(handshakeTimeout)__        }_        if (pingInterval != null) {_            builder.setPingInterval(pingInterval)__        }_        if (compressionEnabled != null) {_            builder.setCompressionEnabled(compressionEnabled)__        }_        return builder.build()__    };builds,a,connection,profile,that,is,dedicated,to,a,single,channel,type,allows,passing,connection,and,handshake,timeouts,and,compression,settings;public,static,connection,profile,build,single,channel,profile,transport,request,options,type,channel,type,nullable,time,value,connect,timeout,nullable,time,value,handshake,timeout,nullable,time,value,ping,interval,nullable,boolean,compression,enabled,builder,builder,new,builder,builder,add,connections,1,channel,type,final,enum,set,transport,request,options,type,other,types,enum,set,all,of,transport,request,options,type,class,other,types,remove,channel,type,builder,add,connections,0,other,types,to,array,new,transport,request,options,type,0,if,connect,timeout,null,builder,set,connect,timeout,connect,timeout,if,handshake,timeout,null,builder,set,handshake,timeout,handshake,timeout,if,ping,interval,null,builder,set,ping,interval,ping,interval,if,compression,enabled,null,builder,set,compression,enabled,compression,enabled,return,builder,build
ConnectionProfile -> public static ConnectionProfile buildSingleChannelProfile(TransportRequestOptions.Type channelType, @Nullable TimeValue connectTimeout,                                                               @Nullable TimeValue handshakeTimeout, @Nullable TimeValue pingInterval,                                                               @Nullable Boolean compressionEnabled);1550575247;Builds a connection profile that is dedicated to a single channel type. Allows passing connection and_handshake timeouts and compression settings.;public static ConnectionProfile buildSingleChannelProfile(TransportRequestOptions.Type channelType, @Nullable TimeValue connectTimeout,_                                                              @Nullable TimeValue handshakeTimeout, @Nullable TimeValue pingInterval,_                                                              @Nullable Boolean compressionEnabled) {_        Builder builder = new Builder()__        builder.addConnections(1, channelType)__        final EnumSet<TransportRequestOptions.Type> otherTypes = EnumSet.allOf(TransportRequestOptions.Type.class)__        otherTypes.remove(channelType)__        builder.addConnections(0, otherTypes.toArray(new TransportRequestOptions.Type[0]))__        if (connectTimeout != null) {_            builder.setConnectTimeout(connectTimeout)__        }_        if (handshakeTimeout != null) {_            builder.setHandshakeTimeout(handshakeTimeout)__        }_        if (pingInterval != null) {_            builder.setPingInterval(pingInterval)__        }_        if (compressionEnabled != null) {_            builder.setCompressionEnabled(compressionEnabled)__        }_        return builder.build()__    };builds,a,connection,profile,that,is,dedicated,to,a,single,channel,type,allows,passing,connection,and,handshake,timeouts,and,compression,settings;public,static,connection,profile,build,single,channel,profile,transport,request,options,type,channel,type,nullable,time,value,connect,timeout,nullable,time,value,handshake,timeout,nullable,time,value,ping,interval,nullable,boolean,compression,enabled,builder,builder,new,builder,builder,add,connections,1,channel,type,final,enum,set,transport,request,options,type,other,types,enum,set,all,of,transport,request,options,type,class,other,types,remove,channel,type,builder,add,connections,0,other,types,to,array,new,transport,request,options,type,0,if,connect,timeout,null,builder,set,connect,timeout,connect,timeout,if,handshake,timeout,null,builder,set,handshake,timeout,handshake,timeout,if,ping,interval,null,builder,set,ping,interval,ping,interval,if,compression,enabled,null,builder,set,compression,enabled,compression,enabled,return,builder,build
ConnectionProfile -> Builder -> public Builder setCompressionEnabled(boolean compressionEnabled);1543506953;Sets compression enabled for this connection profile;public Builder setCompressionEnabled(boolean compressionEnabled) {_            this.compressionEnabled = compressionEnabled__            return this__        };sets,compression,enabled,for,this,connection,profile;public,builder,set,compression,enabled,boolean,compression,enabled,this,compression,enabled,compression,enabled,return,this
ConnectionProfile -> Builder -> public Builder setCompressionEnabled(boolean compressionEnabled);1544823664;Sets compression enabled for this connection profile;public Builder setCompressionEnabled(boolean compressionEnabled) {_            this.compressionEnabled = compressionEnabled__            return this__        };sets,compression,enabled,for,this,connection,profile;public,builder,set,compression,enabled,boolean,compression,enabled,this,compression,enabled,compression,enabled,return,this
ConnectionProfile -> Builder -> public Builder setCompressionEnabled(boolean compressionEnabled);1550575247;Sets compression enabled for this connection profile;public Builder setCompressionEnabled(boolean compressionEnabled) {_            this.compressionEnabled = compressionEnabled__            return this__        };sets,compression,enabled,for,this,connection,profile;public,builder,set,compression,enabled,boolean,compression,enabled,this,compression,enabled,compression,enabled,return,this
ConnectionProfile -> public int getNumConnectionsPerType(TransportRequestOptions.Type type);1524684173;Returns the number of connections per type for this profile. This might return a count that is shared with other types such_that the sum of all connections per type might be higher than {@link #getNumConnections()}. For instance if_{@link org.elasticsearch.transport.TransportRequestOptions.Type#BULK} shares connections with_{@link org.elasticsearch.transport.TransportRequestOptions.Type#REG} they will return both the same number of connections from_this method but the connections are not distinct.;public int getNumConnectionsPerType(TransportRequestOptions.Type type) {_        for (ConnectionTypeHandle handle : handles) {_            if (handle.getTypes().contains(type)) {_                return handle.length__            }_        }_        throw new AssertionError("no handle found for type: "  + type)__    };returns,the,number,of,connections,per,type,for,this,profile,this,might,return,a,count,that,is,shared,with,other,types,such,that,the,sum,of,all,connections,per,type,might,be,higher,than,link,get,num,connections,for,instance,if,link,org,elasticsearch,transport,transport,request,options,type,bulk,shares,connections,with,link,org,elasticsearch,transport,transport,request,options,type,reg,they,will,return,both,the,same,number,of,connections,from,this,method,but,the,connections,are,not,distinct;public,int,get,num,connections,per,type,transport,request,options,type,type,for,connection,type,handle,handle,handles,if,handle,get,types,contains,type,return,handle,length,throw,new,assertion,error,no,handle,found,for,type,type
ConnectionProfile -> public int getNumConnectionsPerType(TransportRequestOptions.Type type);1534362961;Returns the number of connections per type for this profile. This might return a count that is shared with other types such_that the sum of all connections per type might be higher than {@link #getNumConnections()}. For instance if_{@link org.elasticsearch.transport.TransportRequestOptions.Type#BULK} shares connections with_{@link org.elasticsearch.transport.TransportRequestOptions.Type#REG} they will return both the same number of connections from_this method but the connections are not distinct.;public int getNumConnectionsPerType(TransportRequestOptions.Type type) {_        for (ConnectionTypeHandle handle : handles) {_            if (handle.getTypes().contains(type)) {_                return handle.length__            }_        }_        throw new AssertionError("no handle found for type: "  + type)__    };returns,the,number,of,connections,per,type,for,this,profile,this,might,return,a,count,that,is,shared,with,other,types,such,that,the,sum,of,all,connections,per,type,might,be,higher,than,link,get,num,connections,for,instance,if,link,org,elasticsearch,transport,transport,request,options,type,bulk,shares,connections,with,link,org,elasticsearch,transport,transport,request,options,type,reg,they,will,return,both,the,same,number,of,connections,from,this,method,but,the,connections,are,not,distinct;public,int,get,num,connections,per,type,transport,request,options,type,type,for,connection,type,handle,handle,handles,if,handle,get,types,contains,type,return,handle,length,throw,new,assertion,error,no,handle,found,for,type,type
ConnectionProfile -> public int getNumConnectionsPerType(TransportRequestOptions.Type type);1540503333;Returns the number of connections per type for this profile. This might return a count that is shared with other types such_that the sum of all connections per type might be higher than {@link #getNumConnections()}. For instance if_{@link org.elasticsearch.transport.TransportRequestOptions.Type#BULK} shares connections with_{@link org.elasticsearch.transport.TransportRequestOptions.Type#REG} they will return both the same number of connections from_this method but the connections are not distinct.;public int getNumConnectionsPerType(TransportRequestOptions.Type type) {_        for (ConnectionTypeHandle handle : handles) {_            if (handle.getTypes().contains(type)) {_                return handle.length__            }_        }_        throw new AssertionError("no handle found for type: "  + type)__    };returns,the,number,of,connections,per,type,for,this,profile,this,might,return,a,count,that,is,shared,with,other,types,such,that,the,sum,of,all,connections,per,type,might,be,higher,than,link,get,num,connections,for,instance,if,link,org,elasticsearch,transport,transport,request,options,type,bulk,shares,connections,with,link,org,elasticsearch,transport,transport,request,options,type,reg,they,will,return,both,the,same,number,of,connections,from,this,method,but,the,connections,are,not,distinct;public,int,get,num,connections,per,type,transport,request,options,type,type,for,connection,type,handle,handle,handles,if,handle,get,types,contains,type,return,handle,length,throw,new,assertion,error,no,handle,found,for,type,type
ConnectionProfile -> public int getNumConnectionsPerType(TransportRequestOptions.Type type);1541698679;Returns the number of connections per type for this profile. This might return a count that is shared with other types such_that the sum of all connections per type might be higher than {@link #getNumConnections()}. For instance if_{@link org.elasticsearch.transport.TransportRequestOptions.Type#BULK} shares connections with_{@link org.elasticsearch.transport.TransportRequestOptions.Type#REG} they will return both the same number of connections from_this method but the connections are not distinct.;public int getNumConnectionsPerType(TransportRequestOptions.Type type) {_        for (ConnectionTypeHandle handle : handles) {_            if (handle.getTypes().contains(type)) {_                return handle.length__            }_        }_        throw new AssertionError("no handle found for type: "  + type)__    };returns,the,number,of,connections,per,type,for,this,profile,this,might,return,a,count,that,is,shared,with,other,types,such,that,the,sum,of,all,connections,per,type,might,be,higher,than,link,get,num,connections,for,instance,if,link,org,elasticsearch,transport,transport,request,options,type,bulk,shares,connections,with,link,org,elasticsearch,transport,transport,request,options,type,reg,they,will,return,both,the,same,number,of,connections,from,this,method,but,the,connections,are,not,distinct;public,int,get,num,connections,per,type,transport,request,options,type,type,for,connection,type,handle,handle,handles,if,handle,get,types,contains,type,return,handle,length,throw,new,assertion,error,no,handle,found,for,type,type
ConnectionProfile -> public int getNumConnectionsPerType(TransportRequestOptions.Type type);1543506953;Returns the number of connections per type for this profile. This might return a count that is shared with other types such_that the sum of all connections per type might be higher than {@link #getNumConnections()}. For instance if_{@link org.elasticsearch.transport.TransportRequestOptions.Type#BULK} shares connections with_{@link org.elasticsearch.transport.TransportRequestOptions.Type#REG} they will return both the same number of connections from_this method but the connections are not distinct.;public int getNumConnectionsPerType(TransportRequestOptions.Type type) {_        for (ConnectionTypeHandle handle : handles) {_            if (handle.getTypes().contains(type)) {_                return handle.length__            }_        }_        throw new AssertionError("no handle found for type: "  + type)__    };returns,the,number,of,connections,per,type,for,this,profile,this,might,return,a,count,that,is,shared,with,other,types,such,that,the,sum,of,all,connections,per,type,might,be,higher,than,link,get,num,connections,for,instance,if,link,org,elasticsearch,transport,transport,request,options,type,bulk,shares,connections,with,link,org,elasticsearch,transport,transport,request,options,type,reg,they,will,return,both,the,same,number,of,connections,from,this,method,but,the,connections,are,not,distinct;public,int,get,num,connections,per,type,transport,request,options,type,type,for,connection,type,handle,handle,handles,if,handle,get,types,contains,type,return,handle,length,throw,new,assertion,error,no,handle,found,for,type,type
ConnectionProfile -> public int getNumConnectionsPerType(TransportRequestOptions.Type type);1544823664;Returns the number of connections per type for this profile. This might return a count that is shared with other types such_that the sum of all connections per type might be higher than {@link #getNumConnections()}. For instance if_{@link org.elasticsearch.transport.TransportRequestOptions.Type#BULK} shares connections with_{@link org.elasticsearch.transport.TransportRequestOptions.Type#REG} they will return both the same number of connections from_this method but the connections are not distinct.;public int getNumConnectionsPerType(TransportRequestOptions.Type type) {_        for (ConnectionTypeHandle handle : handles) {_            if (handle.getTypes().contains(type)) {_                return handle.length__            }_        }_        throw new AssertionError("no handle found for type: "  + type)__    };returns,the,number,of,connections,per,type,for,this,profile,this,might,return,a,count,that,is,shared,with,other,types,such,that,the,sum,of,all,connections,per,type,might,be,higher,than,link,get,num,connections,for,instance,if,link,org,elasticsearch,transport,transport,request,options,type,bulk,shares,connections,with,link,org,elasticsearch,transport,transport,request,options,type,reg,they,will,return,both,the,same,number,of,connections,from,this,method,but,the,connections,are,not,distinct;public,int,get,num,connections,per,type,transport,request,options,type,type,for,connection,type,handle,handle,handles,if,handle,get,types,contains,type,return,handle,length,throw,new,assertion,error,no,handle,found,for,type,type
ConnectionProfile -> public int getNumConnectionsPerType(TransportRequestOptions.Type type);1550575247;Returns the number of connections per type for this profile. This might return a count that is shared with other types such_that the sum of all connections per type might be higher than {@link #getNumConnections()}. For instance if_{@link org.elasticsearch.transport.TransportRequestOptions.Type#BULK} shares connections with_{@link org.elasticsearch.transport.TransportRequestOptions.Type#REG} they will return both the same number of connections from_this method but the connections are not distinct.;public int getNumConnectionsPerType(TransportRequestOptions.Type type) {_        for (ConnectionTypeHandle handle : handles) {_            if (handle.getTypes().contains(type)) {_                return handle.length__            }_        }_        throw new AssertionError("no handle found for type: "  + type)__    };returns,the,number,of,connections,per,type,for,this,profile,this,might,return,a,count,that,is,shared,with,other,types,such,that,the,sum,of,all,connections,per,type,might,be,higher,than,link,get,num,connections,for,instance,if,link,org,elasticsearch,transport,transport,request,options,type,bulk,shares,connections,with,link,org,elasticsearch,transport,transport,request,options,type,reg,they,will,return,both,the,same,number,of,connections,from,this,method,but,the,connections,are,not,distinct;public,int,get,num,connections,per,type,transport,request,options,type,type,for,connection,type,handle,handle,handles,if,handle,get,types,contains,type,return,handle,length,throw,new,assertion,error,no,handle,found,for,type,type
ConnectionProfile -> public static ConnectionProfile buildSingleChannelProfile(TransportRequestOptions.Type channelType);1541698679;Builds a connection profile that is dedicated to a single channel type. Use this_when opening single use connections;public static ConnectionProfile buildSingleChannelProfile(TransportRequestOptions.Type channelType) {_        return buildSingleChannelProfile(channelType, null, null, null)__    };builds,a,connection,profile,that,is,dedicated,to,a,single,channel,type,use,this,when,opening,single,use,connections;public,static,connection,profile,build,single,channel,profile,transport,request,options,type,channel,type,return,build,single,channel,profile,channel,type,null,null,null
ConnectionProfile -> public static ConnectionProfile buildSingleChannelProfile(TransportRequestOptions.Type channelType);1543506953;Builds a connection profile that is dedicated to a single channel type. Use this_when opening single use connections;public static ConnectionProfile buildSingleChannelProfile(TransportRequestOptions.Type channelType) {_        return buildSingleChannelProfile(channelType, null, null, null, null)__    };builds,a,connection,profile,that,is,dedicated,to,a,single,channel,type,use,this,when,opening,single,use,connections;public,static,connection,profile,build,single,channel,profile,transport,request,options,type,channel,type,return,build,single,channel,profile,channel,type,null,null,null,null
ConnectionProfile -> public static ConnectionProfile buildSingleChannelProfile(TransportRequestOptions.Type channelType);1544823664;Builds a connection profile that is dedicated to a single channel type. Use this_when opening single use connections;public static ConnectionProfile buildSingleChannelProfile(TransportRequestOptions.Type channelType) {_        return buildSingleChannelProfile(channelType, null, null, null, null)__    };builds,a,connection,profile,that,is,dedicated,to,a,single,channel,type,use,this,when,opening,single,use,connections;public,static,connection,profile,build,single,channel,profile,transport,request,options,type,channel,type,return,build,single,channel,profile,channel,type,null,null,null,null
ConnectionProfile -> public static ConnectionProfile buildSingleChannelProfile(TransportRequestOptions.Type channelType);1550575247;Builds a connection profile that is dedicated to a single channel type. Use this_when opening single use connections;public static ConnectionProfile buildSingleChannelProfile(TransportRequestOptions.Type channelType) {_        return buildSingleChannelProfile(channelType, null, null, null, null)__    };builds,a,connection,profile,that,is,dedicated,to,a,single,channel,type,use,this,when,opening,single,use,connections;public,static,connection,profile,build,single,channel,profile,transport,request,options,type,channel,type,return,build,single,channel,profile,channel,type,null,null,null,null
ConnectionProfile -> public Boolean getCompressionEnabled();1541698679;Returns boolean indicating if compression is enabled or <code>null</code> if no explicit compression_is set on this profile.;public Boolean getCompressionEnabled() {_        return compressionEnabled__    };returns,boolean,indicating,if,compression,is,enabled,or,code,null,code,if,no,explicit,compression,is,set,on,this,profile;public,boolean,get,compression,enabled,return,compression,enabled
ConnectionProfile -> public Boolean getCompressionEnabled();1543506953;Returns boolean indicating if compression is enabled or <code>null</code> if no explicit compression_is set on this profile.;public Boolean getCompressionEnabled() {_        return compressionEnabled__    };returns,boolean,indicating,if,compression,is,enabled,or,code,null,code,if,no,explicit,compression,is,set,on,this,profile;public,boolean,get,compression,enabled,return,compression,enabled
ConnectionProfile -> public Boolean getCompressionEnabled();1544823664;Returns boolean indicating if compression is enabled or <code>null</code> if no explicit compression_is set on this profile.;public Boolean getCompressionEnabled() {_        return compressionEnabled__    };returns,boolean,indicating,if,compression,is,enabled,or,code,null,code,if,no,explicit,compression,is,set,on,this,profile;public,boolean,get,compression,enabled,return,compression,enabled
ConnectionProfile -> public Boolean getCompressionEnabled();1550575247;Returns boolean indicating if compression is enabled or <code>null</code> if no explicit compression_is set on this profile.;public Boolean getCompressionEnabled() {_        return compressionEnabled__    };returns,boolean,indicating,if,compression,is,enabled,or,code,null,code,if,no,explicit,compression,is,set,on,this,profile;public,boolean,get,compression,enabled,return,compression,enabled
ConnectionProfile -> public static ConnectionProfile resolveConnectionProfile(@Nullable ConnectionProfile profile, ConnectionProfile fallbackProfile);1534362961;takes a {@link ConnectionProfile} resolves it to a fully specified (i.e., no nulls) profile;public static ConnectionProfile resolveConnectionProfile(@Nullable ConnectionProfile profile, ConnectionProfile fallbackProfile) {_        Objects.requireNonNull(fallbackProfile)__        if (profile == null) {_            return fallbackProfile__        } else if (profile.getConnectTimeout() != null && profile.getHandshakeTimeout() != null) {_            return profile__        } else {_            ConnectionProfile.Builder builder = new ConnectionProfile.Builder(profile)__            if (profile.getConnectTimeout() == null) {_                builder.setConnectTimeout(fallbackProfile.getConnectTimeout())__            }_            if (profile.getHandshakeTimeout() == null) {_                builder.setHandshakeTimeout(fallbackProfile.getHandshakeTimeout())__            }_            return builder.build()__        }_    };takes,a,link,connection,profile,resolves,it,to,a,fully,specified,i,e,no,nulls,profile;public,static,connection,profile,resolve,connection,profile,nullable,connection,profile,profile,connection,profile,fallback,profile,objects,require,non,null,fallback,profile,if,profile,null,return,fallback,profile,else,if,profile,get,connect,timeout,null,profile,get,handshake,timeout,null,return,profile,else,connection,profile,builder,builder,new,connection,profile,builder,profile,if,profile,get,connect,timeout,null,builder,set,connect,timeout,fallback,profile,get,connect,timeout,if,profile,get,handshake,timeout,null,builder,set,handshake,timeout,fallback,profile,get,handshake,timeout,return,builder,build
ConnectionProfile -> public static ConnectionProfile resolveConnectionProfile(@Nullable ConnectionProfile profile, ConnectionProfile fallbackProfile);1540503333;takes a {@link ConnectionProfile} resolves it to a fully specified (i.e., no nulls) profile;public static ConnectionProfile resolveConnectionProfile(@Nullable ConnectionProfile profile, ConnectionProfile fallbackProfile) {_        Objects.requireNonNull(fallbackProfile)__        if (profile == null) {_            return fallbackProfile__        } else if (profile.getConnectTimeout() != null && profile.getHandshakeTimeout() != null) {_            return profile__        } else {_            ConnectionProfile.Builder builder = new ConnectionProfile.Builder(profile)__            if (profile.getConnectTimeout() == null) {_                builder.setConnectTimeout(fallbackProfile.getConnectTimeout())__            }_            if (profile.getHandshakeTimeout() == null) {_                builder.setHandshakeTimeout(fallbackProfile.getHandshakeTimeout())__            }_            return builder.build()__        }_    };takes,a,link,connection,profile,resolves,it,to,a,fully,specified,i,e,no,nulls,profile;public,static,connection,profile,resolve,connection,profile,nullable,connection,profile,profile,connection,profile,fallback,profile,objects,require,non,null,fallback,profile,if,profile,null,return,fallback,profile,else,if,profile,get,connect,timeout,null,profile,get,handshake,timeout,null,return,profile,else,connection,profile,builder,builder,new,connection,profile,builder,profile,if,profile,get,connect,timeout,null,builder,set,connect,timeout,fallback,profile,get,connect,timeout,if,profile,get,handshake,timeout,null,builder,set,handshake,timeout,fallback,profile,get,handshake,timeout,return,builder,build
ConnectionProfile -> public static ConnectionProfile resolveConnectionProfile(@Nullable ConnectionProfile profile, ConnectionProfile fallbackProfile);1541698679;takes a {@link ConnectionProfile} resolves it to a fully specified (i.e., no nulls) profile;public static ConnectionProfile resolveConnectionProfile(@Nullable ConnectionProfile profile, ConnectionProfile fallbackProfile) {_        Objects.requireNonNull(fallbackProfile)__        if (profile == null) {_            return fallbackProfile__        } else if (profile.getConnectTimeout() != null && profile.getHandshakeTimeout() != null_            && profile.getCompressionEnabled() != null) {_            return profile__        } else {_            ConnectionProfile.Builder builder = new ConnectionProfile.Builder(profile)__            if (profile.getConnectTimeout() == null) {_                builder.setConnectTimeout(fallbackProfile.getConnectTimeout())__            }_            if (profile.getHandshakeTimeout() == null) {_                builder.setHandshakeTimeout(fallbackProfile.getHandshakeTimeout())__            }_            if (profile.getCompressionEnabled() == null) {_                builder.setCompressionEnabled(fallbackProfile.getCompressionEnabled())__            }_            return builder.build()__        }_    };takes,a,link,connection,profile,resolves,it,to,a,fully,specified,i,e,no,nulls,profile;public,static,connection,profile,resolve,connection,profile,nullable,connection,profile,profile,connection,profile,fallback,profile,objects,require,non,null,fallback,profile,if,profile,null,return,fallback,profile,else,if,profile,get,connect,timeout,null,profile,get,handshake,timeout,null,profile,get,compression,enabled,null,return,profile,else,connection,profile,builder,builder,new,connection,profile,builder,profile,if,profile,get,connect,timeout,null,builder,set,connect,timeout,fallback,profile,get,connect,timeout,if,profile,get,handshake,timeout,null,builder,set,handshake,timeout,fallback,profile,get,handshake,timeout,if,profile,get,compression,enabled,null,builder,set,compression,enabled,fallback,profile,get,compression,enabled,return,builder,build
ConnectionProfile -> public static ConnectionProfile resolveConnectionProfile(@Nullable ConnectionProfile profile, ConnectionProfile fallbackProfile);1543506953;takes a {@link ConnectionProfile} resolves it to a fully specified (i.e., no nulls) profile;public static ConnectionProfile resolveConnectionProfile(@Nullable ConnectionProfile profile, ConnectionProfile fallbackProfile) {_        Objects.requireNonNull(fallbackProfile)__        if (profile == null) {_            return fallbackProfile__        } else if (profile.getConnectTimeout() != null && profile.getHandshakeTimeout() != null_            && profile.getPingInterval() != null && profile.getCompressionEnabled() != null) {_            return profile__        } else {_            ConnectionProfile.Builder builder = new ConnectionProfile.Builder(profile)__            if (profile.getConnectTimeout() == null) {_                builder.setConnectTimeout(fallbackProfile.getConnectTimeout())__            }_            if (profile.getHandshakeTimeout() == null) {_                builder.setHandshakeTimeout(fallbackProfile.getHandshakeTimeout())__            }_            if (profile.getPingInterval() == null) {_                builder.setPingInterval(fallbackProfile.getPingInterval())__            }_            if (profile.getCompressionEnabled() == null) {_                builder.setCompressionEnabled(fallbackProfile.getCompressionEnabled())__            }_            return builder.build()__        }_    };takes,a,link,connection,profile,resolves,it,to,a,fully,specified,i,e,no,nulls,profile;public,static,connection,profile,resolve,connection,profile,nullable,connection,profile,profile,connection,profile,fallback,profile,objects,require,non,null,fallback,profile,if,profile,null,return,fallback,profile,else,if,profile,get,connect,timeout,null,profile,get,handshake,timeout,null,profile,get,ping,interval,null,profile,get,compression,enabled,null,return,profile,else,connection,profile,builder,builder,new,connection,profile,builder,profile,if,profile,get,connect,timeout,null,builder,set,connect,timeout,fallback,profile,get,connect,timeout,if,profile,get,handshake,timeout,null,builder,set,handshake,timeout,fallback,profile,get,handshake,timeout,if,profile,get,ping,interval,null,builder,set,ping,interval,fallback,profile,get,ping,interval,if,profile,get,compression,enabled,null,builder,set,compression,enabled,fallback,profile,get,compression,enabled,return,builder,build
ConnectionProfile -> public static ConnectionProfile resolveConnectionProfile(@Nullable ConnectionProfile profile, ConnectionProfile fallbackProfile);1544823664;takes a {@link ConnectionProfile} resolves it to a fully specified (i.e., no nulls) profile;public static ConnectionProfile resolveConnectionProfile(@Nullable ConnectionProfile profile, ConnectionProfile fallbackProfile) {_        Objects.requireNonNull(fallbackProfile)__        if (profile == null) {_            return fallbackProfile__        } else if (profile.getConnectTimeout() != null && profile.getHandshakeTimeout() != null_            && profile.getPingInterval() != null && profile.getCompressionEnabled() != null) {_            return profile__        } else {_            ConnectionProfile.Builder builder = new ConnectionProfile.Builder(profile)__            if (profile.getConnectTimeout() == null) {_                builder.setConnectTimeout(fallbackProfile.getConnectTimeout())__            }_            if (profile.getHandshakeTimeout() == null) {_                builder.setHandshakeTimeout(fallbackProfile.getHandshakeTimeout())__            }_            if (profile.getPingInterval() == null) {_                builder.setPingInterval(fallbackProfile.getPingInterval())__            }_            if (profile.getCompressionEnabled() == null) {_                builder.setCompressionEnabled(fallbackProfile.getCompressionEnabled())__            }_            return builder.build()__        }_    };takes,a,link,connection,profile,resolves,it,to,a,fully,specified,i,e,no,nulls,profile;public,static,connection,profile,resolve,connection,profile,nullable,connection,profile,profile,connection,profile,fallback,profile,objects,require,non,null,fallback,profile,if,profile,null,return,fallback,profile,else,if,profile,get,connect,timeout,null,profile,get,handshake,timeout,null,profile,get,ping,interval,null,profile,get,compression,enabled,null,return,profile,else,connection,profile,builder,builder,new,connection,profile,builder,profile,if,profile,get,connect,timeout,null,builder,set,connect,timeout,fallback,profile,get,connect,timeout,if,profile,get,handshake,timeout,null,builder,set,handshake,timeout,fallback,profile,get,handshake,timeout,if,profile,get,ping,interval,null,builder,set,ping,interval,fallback,profile,get,ping,interval,if,profile,get,compression,enabled,null,builder,set,compression,enabled,fallback,profile,get,compression,enabled,return,builder,build
ConnectionProfile -> public static ConnectionProfile resolveConnectionProfile(@Nullable ConnectionProfile profile, ConnectionProfile fallbackProfile);1550575247;takes a {@link ConnectionProfile} resolves it to a fully specified (i.e., no nulls) profile;public static ConnectionProfile resolveConnectionProfile(@Nullable ConnectionProfile profile, ConnectionProfile fallbackProfile) {_        Objects.requireNonNull(fallbackProfile)__        if (profile == null) {_            return fallbackProfile__        } else if (profile.getConnectTimeout() != null && profile.getHandshakeTimeout() != null_            && profile.getPingInterval() != null && profile.getCompressionEnabled() != null) {_            return profile__        } else {_            ConnectionProfile.Builder builder = new ConnectionProfile.Builder(profile)__            if (profile.getConnectTimeout() == null) {_                builder.setConnectTimeout(fallbackProfile.getConnectTimeout())__            }_            if (profile.getHandshakeTimeout() == null) {_                builder.setHandshakeTimeout(fallbackProfile.getHandshakeTimeout())__            }_            if (profile.getPingInterval() == null) {_                builder.setPingInterval(fallbackProfile.getPingInterval())__            }_            if (profile.getCompressionEnabled() == null) {_                builder.setCompressionEnabled(fallbackProfile.getCompressionEnabled())__            }_            return builder.build()__        }_    };takes,a,link,connection,profile,resolves,it,to,a,fully,specified,i,e,no,nulls,profile;public,static,connection,profile,resolve,connection,profile,nullable,connection,profile,profile,connection,profile,fallback,profile,objects,require,non,null,fallback,profile,if,profile,null,return,fallback,profile,else,if,profile,get,connect,timeout,null,profile,get,handshake,timeout,null,profile,get,ping,interval,null,profile,get,compression,enabled,null,return,profile,else,connection,profile,builder,builder,new,connection,profile,builder,profile,if,profile,get,connect,timeout,null,builder,set,connect,timeout,fallback,profile,get,connect,timeout,if,profile,get,handshake,timeout,null,builder,set,handshake,timeout,fallback,profile,get,handshake,timeout,if,profile,get,ping,interval,null,builder,set,ping,interval,fallback,profile,get,ping,interval,if,profile,get,compression,enabled,null,builder,set,compression,enabled,fallback,profile,get,compression,enabled,return,builder,build
ConnectionProfile -> Builder -> public Builder addConnections(int numConnections, TransportRequestOptions.Type... types);1543506953;Adds a number of connections for one or more types. Each type can only be added once._@param numConnections the number of connections to use in the pool for the given connection types_@param types a set of types that should share the given number of connections;public Builder addConnections(int numConnections, TransportRequestOptions.Type... types) {_            if (types == null || types.length == 0) {_                throw new IllegalArgumentException("types must not be null")__            }_            for (TransportRequestOptions.Type type : types) {_                if (addedTypes.contains(type)) {_                    throw new IllegalArgumentException("type [" + type + "] is already registered")__                }_            }_            addedTypes.addAll(Arrays.asList(types))__            handles.add(new ConnectionTypeHandle(this.numConnections, numConnections, EnumSet.copyOf(Arrays.asList(types))))__            this.numConnections += numConnections__            return this__        };adds,a,number,of,connections,for,one,or,more,types,each,type,can,only,be,added,once,param,num,connections,the,number,of,connections,to,use,in,the,pool,for,the,given,connection,types,param,types,a,set,of,types,that,should,share,the,given,number,of,connections;public,builder,add,connections,int,num,connections,transport,request,options,type,types,if,types,null,types,length,0,throw,new,illegal,argument,exception,types,must,not,be,null,for,transport,request,options,type,type,types,if,added,types,contains,type,throw,new,illegal,argument,exception,type,type,is,already,registered,added,types,add,all,arrays,as,list,types,handles,add,new,connection,type,handle,this,num,connections,num,connections,enum,set,copy,of,arrays,as,list,types,this,num,connections,num,connections,return,this
ConnectionProfile -> Builder -> public Builder addConnections(int numConnections, TransportRequestOptions.Type... types);1544823664;Adds a number of connections for one or more types. Each type can only be added once._@param numConnections the number of connections to use in the pool for the given connection types_@param types a set of types that should share the given number of connections;public Builder addConnections(int numConnections, TransportRequestOptions.Type... types) {_            if (types == null || types.length == 0) {_                throw new IllegalArgumentException("types must not be null")__            }_            for (TransportRequestOptions.Type type : types) {_                if (addedTypes.contains(type)) {_                    throw new IllegalArgumentException("type [" + type + "] is already registered")__                }_            }_            addedTypes.addAll(Arrays.asList(types))__            handles.add(new ConnectionTypeHandle(this.numConnections, numConnections, EnumSet.copyOf(Arrays.asList(types))))__            this.numConnections += numConnections__            return this__        };adds,a,number,of,connections,for,one,or,more,types,each,type,can,only,be,added,once,param,num,connections,the,number,of,connections,to,use,in,the,pool,for,the,given,connection,types,param,types,a,set,of,types,that,should,share,the,given,number,of,connections;public,builder,add,connections,int,num,connections,transport,request,options,type,types,if,types,null,types,length,0,throw,new,illegal,argument,exception,types,must,not,be,null,for,transport,request,options,type,type,types,if,added,types,contains,type,throw,new,illegal,argument,exception,type,type,is,already,registered,added,types,add,all,arrays,as,list,types,handles,add,new,connection,type,handle,this,num,connections,num,connections,enum,set,copy,of,arrays,as,list,types,this,num,connections,num,connections,return,this
ConnectionProfile -> Builder -> public Builder addConnections(int numConnections, TransportRequestOptions.Type... types);1550575247;Adds a number of connections for one or more types. Each type can only be added once._@param numConnections the number of connections to use in the pool for the given connection types_@param types a set of types that should share the given number of connections;public Builder addConnections(int numConnections, TransportRequestOptions.Type... types) {_            if (types == null || types.length == 0) {_                throw new IllegalArgumentException("types must not be null")__            }_            for (TransportRequestOptions.Type type : types) {_                if (addedTypes.contains(type)) {_                    throw new IllegalArgumentException("type [" + type + "] is already registered")__                }_            }_            addedTypes.addAll(Arrays.asList(types))__            handles.add(new ConnectionTypeHandle(this.numConnections, numConnections, EnumSet.copyOf(Arrays.asList(types))))__            this.numConnections += numConnections__            return this__        };adds,a,number,of,connections,for,one,or,more,types,each,type,can,only,be,added,once,param,num,connections,the,number,of,connections,to,use,in,the,pool,for,the,given,connection,types,param,types,a,set,of,types,that,should,share,the,given,number,of,connections;public,builder,add,connections,int,num,connections,transport,request,options,type,types,if,types,null,types,length,0,throw,new,illegal,argument,exception,types,must,not,be,null,for,transport,request,options,type,type,types,if,added,types,contains,type,throw,new,illegal,argument,exception,type,type,is,already,registered,added,types,add,all,arrays,as,list,types,handles,add,new,connection,type,handle,this,num,connections,num,connections,enum,set,copy,of,arrays,as,list,types,this,num,connections,num,connections,return,this
ConnectionProfile -> public TimeValue getConnectTimeout();1524684173;Returns the connect timeout or <code>null</code> if no explicit timeout is set on this profile.;public TimeValue getConnectTimeout() {_        return connectTimeout__    };returns,the,connect,timeout,or,code,null,code,if,no,explicit,timeout,is,set,on,this,profile;public,time,value,get,connect,timeout,return,connect,timeout
ConnectionProfile -> public TimeValue getConnectTimeout();1534362961;Returns the connect timeout or <code>null</code> if no explicit timeout is set on this profile.;public TimeValue getConnectTimeout() {_        return connectTimeout__    };returns,the,connect,timeout,or,code,null,code,if,no,explicit,timeout,is,set,on,this,profile;public,time,value,get,connect,timeout,return,connect,timeout
ConnectionProfile -> public TimeValue getConnectTimeout();1540503333;Returns the connect timeout or <code>null</code> if no explicit timeout is set on this profile.;public TimeValue getConnectTimeout() {_        return connectTimeout__    };returns,the,connect,timeout,or,code,null,code,if,no,explicit,timeout,is,set,on,this,profile;public,time,value,get,connect,timeout,return,connect,timeout
ConnectionProfile -> public TimeValue getConnectTimeout();1541698679;Returns the connect timeout or <code>null</code> if no explicit timeout is set on this profile.;public TimeValue getConnectTimeout() {_        return connectTimeout__    };returns,the,connect,timeout,or,code,null,code,if,no,explicit,timeout,is,set,on,this,profile;public,time,value,get,connect,timeout,return,connect,timeout
ConnectionProfile -> public TimeValue getConnectTimeout();1543506953;Returns the connect timeout or <code>null</code> if no explicit timeout is set on this profile.;public TimeValue getConnectTimeout() {_        return connectTimeout__    };returns,the,connect,timeout,or,code,null,code,if,no,explicit,timeout,is,set,on,this,profile;public,time,value,get,connect,timeout,return,connect,timeout
ConnectionProfile -> public TimeValue getConnectTimeout();1544823664;Returns the connect timeout or <code>null</code> if no explicit timeout is set on this profile.;public TimeValue getConnectTimeout() {_        return connectTimeout__    };returns,the,connect,timeout,or,code,null,code,if,no,explicit,timeout,is,set,on,this,profile;public,time,value,get,connect,timeout,return,connect,timeout
ConnectionProfile -> public TimeValue getConnectTimeout();1550575247;Returns the connect timeout or <code>null</code> if no explicit timeout is set on this profile.;public TimeValue getConnectTimeout() {_        return connectTimeout__    };returns,the,connect,timeout,or,code,null,code,if,no,explicit,timeout,is,set,on,this,profile;public,time,value,get,connect,timeout,return,connect,timeout
ConnectionProfile -> Builder -> public void setHandshakeTimeout(TimeValue handshakeTimeout);1524684173;Sets a handshake timeout for this connection profile;public void setHandshakeTimeout(TimeValue handshakeTimeout) {_            if (handshakeTimeout.millis() < 0) {_                throw new IllegalArgumentException("handshakeTimeout must be non-negative but was: " + handshakeTimeout)__            }_            this.handshakeTimeout = handshakeTimeout__        };sets,a,handshake,timeout,for,this,connection,profile;public,void,set,handshake,timeout,time,value,handshake,timeout,if,handshake,timeout,millis,0,throw,new,illegal,argument,exception,handshake,timeout,must,be,non,negative,but,was,handshake,timeout,this,handshake,timeout,handshake,timeout
ConnectionProfile -> Builder -> public void setHandshakeTimeout(TimeValue handshakeTimeout);1534362961;Sets a handshake timeout for this connection profile;public void setHandshakeTimeout(TimeValue handshakeTimeout) {_            if (handshakeTimeout.millis() < 0) {_                throw new IllegalArgumentException("handshakeTimeout must be non-negative but was: " + handshakeTimeout)__            }_            this.handshakeTimeout = handshakeTimeout__        };sets,a,handshake,timeout,for,this,connection,profile;public,void,set,handshake,timeout,time,value,handshake,timeout,if,handshake,timeout,millis,0,throw,new,illegal,argument,exception,handshake,timeout,must,be,non,negative,but,was,handshake,timeout,this,handshake,timeout,handshake,timeout
ConnectionProfile -> Builder -> public void setHandshakeTimeout(TimeValue handshakeTimeout);1540503333;Sets a handshake timeout for this connection profile;public void setHandshakeTimeout(TimeValue handshakeTimeout) {_            if (handshakeTimeout.millis() < 0) {_                throw new IllegalArgumentException("handshakeTimeout must be non-negative but was: " + handshakeTimeout)__            }_            this.handshakeTimeout = handshakeTimeout__        };sets,a,handshake,timeout,for,this,connection,profile;public,void,set,handshake,timeout,time,value,handshake,timeout,if,handshake,timeout,millis,0,throw,new,illegal,argument,exception,handshake,timeout,must,be,non,negative,but,was,handshake,timeout,this,handshake,timeout,handshake,timeout
ConnectionProfile -> Builder -> public void setHandshakeTimeout(TimeValue handshakeTimeout);1541698679;Sets a handshake timeout for this connection profile;public void setHandshakeTimeout(TimeValue handshakeTimeout) {_            if (handshakeTimeout.millis() < 0) {_                throw new IllegalArgumentException("handshakeTimeout must be non-negative but was: " + handshakeTimeout)__            }_            this.handshakeTimeout = handshakeTimeout__        };sets,a,handshake,timeout,for,this,connection,profile;public,void,set,handshake,timeout,time,value,handshake,timeout,if,handshake,timeout,millis,0,throw,new,illegal,argument,exception,handshake,timeout,must,be,non,negative,but,was,handshake,timeout,this,handshake,timeout,handshake,timeout
