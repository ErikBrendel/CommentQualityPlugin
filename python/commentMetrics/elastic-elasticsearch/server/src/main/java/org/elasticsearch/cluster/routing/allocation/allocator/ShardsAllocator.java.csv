commented;modifiers;parameterAmount;loc;comment;code
true;;1;1;/**  * Allocates shards to nodes in the cluster. An implementation of this method should:  * - assign unassigned shards  * - relocate shards that cannot stay on a node anymore  * - relocate shards to find a good shard balance in the cluster  *  * @param allocation current node allocation  */ ;/**  * Allocates shards to nodes in the cluster. An implementation of this method should:  * - assign unassigned shards  * - relocate shards that cannot stay on a node anymore  * - relocate shards to find a good shard balance in the cluster  *  * @param allocation current node allocation  */ void allocate(RoutingAllocation allocation).
true;;2;1;/**  * Returns the decision for where a shard should reside in the cluster.  If the shard is unassigned,  * then the {@link AllocateUnassignedDecision} will be non-null.  If the shard is not in the unassigned  * state, then the {@link MoveDecision} will be non-null.  *  * This method is primarily used by the cluster allocation explain API to provide detailed explanations  * for the allocation of a single shard.  Implementations of the {@link #allocate(RoutingAllocation)} method  * may use the results of this method implementation to decide on allocating shards in the routing table  * to the cluster.  *  * If an implementation of this interface does not support explaining decisions for a single shard through  * the cluster explain API, then this method should throw a {@code UnsupportedOperationException}.  */ ;/**  * Returns the decision for where a shard should reside in the cluster.  If the shard is unassigned,  * then the {@link AllocateUnassignedDecision} will be non-null.  If the shard is not in the unassigned  * state, then the {@link MoveDecision} will be non-null.  *  * This method is primarily used by the cluster allocation explain API to provide detailed explanations  * for the allocation of a single shard.  Implementations of the {@link #allocate(RoutingAllocation)} method  * may use the results of this method implementation to decide on allocating shards in the routing table  * to the cluster.  *  * If an implementation of this interface does not support explaining decisions for a single shard through  * the cluster explain API, then this method should throw a {@code UnsupportedOperationException}.  */ ShardAllocationDecision decideShardAllocation(ShardRouting shard, RoutingAllocation allocation).
