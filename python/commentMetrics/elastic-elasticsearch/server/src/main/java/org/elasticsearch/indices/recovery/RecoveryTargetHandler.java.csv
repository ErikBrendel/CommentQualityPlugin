# id;timestamp;commentText;codeText;commentWords;codeWords
RecoveryTargetHandler -> void prepareForTranslogOperations(boolean fileBasedRecovery, int totalTranslogOps) throws IOException_;1524684173;Prepares the target to receive translog operations, after all file have been copied_@param fileBasedRecovery whether or not this call is part of an file based recovery_@param totalTranslogOps    total translog operations expected to be sent;void prepareForTranslogOperations(boolean fileBasedRecovery, int totalTranslogOps) throws IOException_;prepares,the,target,to,receive,translog,operations,after,all,file,have,been,copied,param,file,based,recovery,whether,or,not,this,call,is,part,of,an,file,based,recovery,param,total,translog,ops,total,translog,operations,expected,to,be,sent;void,prepare,for,translog,operations,boolean,file,based,recovery,int,total,translog,ops,throws,ioexception
RecoveryTargetHandler -> void prepareForTranslogOperations(boolean fileBasedRecovery, int totalTranslogOps) throws IOException_;1537806831;Prepares the target to receive translog operations, after all file have been copied_@param fileBasedRecovery whether or not this call is part of an file based recovery_@param totalTranslogOps    total translog operations expected to be sent;void prepareForTranslogOperations(boolean fileBasedRecovery, int totalTranslogOps) throws IOException_;prepares,the,target,to,receive,translog,operations,after,all,file,have,been,copied,param,file,based,recovery,whether,or,not,this,call,is,part,of,an,file,based,recovery,param,total,translog,ops,total,translog,operations,expected,to,be,sent;void,prepare,for,translog,operations,boolean,file,based,recovery,int,total,translog,ops,throws,ioexception
RecoveryTargetHandler -> void prepareForTranslogOperations(boolean fileBasedRecovery, int totalTranslogOps) throws IOException_;1538067637;Prepares the target to receive translog operations, after all file have been copied_@param fileBasedRecovery whether or not this call is part of an file based recovery_@param totalTranslogOps    total translog operations expected to be sent;void prepareForTranslogOperations(boolean fileBasedRecovery, int totalTranslogOps) throws IOException_;prepares,the,target,to,receive,translog,operations,after,all,file,have,been,copied,param,file,based,recovery,whether,or,not,this,call,is,part,of,an,file,based,recovery,param,total,translog,ops,total,translog,operations,expected,to,be,sent;void,prepare,for,translog,operations,boolean,file,based,recovery,int,total,translog,ops,throws,ioexception
RecoveryTargetHandler -> void prepareForTranslogOperations(boolean fileBasedRecovery, int totalTranslogOps) throws IOException_;1547496886;Prepares the target to receive translog operations, after all file have been copied_@param fileBasedRecovery whether or not this call is part of an file based recovery_@param totalTranslogOps    total translog operations expected to be sent;void prepareForTranslogOperations(boolean fileBasedRecovery, int totalTranslogOps) throws IOException_;prepares,the,target,to,receive,translog,operations,after,all,file,have,been,copied,param,file,based,recovery,whether,or,not,this,call,is,part,of,an,file,based,recovery,param,total,translog,ops,total,translog,operations,expected,to,be,sent;void,prepare,for,translog,operations,boolean,file,based,recovery,int,total,translog,ops,throws,ioexception
RecoveryTargetHandler -> void prepareForTranslogOperations(boolean fileBasedRecovery, int totalTranslogOps) throws IOException_;1547508054;Prepares the target to receive translog operations, after all file have been copied_@param fileBasedRecovery whether or not this call is part of an file based recovery_@param totalTranslogOps    total translog operations expected to be sent;void prepareForTranslogOperations(boolean fileBasedRecovery, int totalTranslogOps) throws IOException_;prepares,the,target,to,receive,translog,operations,after,all,file,have,been,copied,param,file,based,recovery,whether,or,not,this,call,is,part,of,an,file,based,recovery,param,total,translog,ops,total,translog,operations,expected,to,be,sent;void,prepare,for,translog,operations,boolean,file,based,recovery,int,total,translog,ops,throws,ioexception
RecoveryTargetHandler -> void prepareForTranslogOperations(boolean fileBasedRecovery, int totalTranslogOps) throws IOException_;1547576245;Prepares the target to receive translog operations, after all file have been copied_@param fileBasedRecovery whether or not this call is part of an file based recovery_@param totalTranslogOps    total translog operations expected to be sent;void prepareForTranslogOperations(boolean fileBasedRecovery, int totalTranslogOps) throws IOException_;prepares,the,target,to,receive,translog,operations,after,all,file,have,been,copied,param,file,based,recovery,whether,or,not,this,call,is,part,of,an,file,based,recovery,param,total,translog,ops,total,translog,operations,expected,to,be,sent;void,prepare,for,translog,operations,boolean,file,based,recovery,int,total,translog,ops,throws,ioexception
RecoveryTargetHandler -> void prepareForTranslogOperations(boolean fileBasedRecovery, int totalTranslogOps, ActionListener<Void> listener)_;1548124510;Prepares the target to receive translog operations, after all file have been copied_@param fileBasedRecovery whether or not this call is part of an file based recovery_@param totalTranslogOps    total translog operations expected to be sent;void prepareForTranslogOperations(boolean fileBasedRecovery, int totalTranslogOps, ActionListener<Void> listener)_;prepares,the,target,to,receive,translog,operations,after,all,file,have,been,copied,param,file,based,recovery,whether,or,not,this,call,is,part,of,an,file,based,recovery,param,total,translog,ops,total,translog,operations,expected,to,be,sent;void,prepare,for,translog,operations,boolean,file,based,recovery,int,total,translog,ops,action,listener,void,listener
RecoveryTargetHandler -> void prepareForTranslogOperations(boolean fileBasedRecovery, int totalTranslogOps, ActionListener<Void> listener)_;1549406621;Prepares the target to receive translog operations, after all file have been copied__@param fileBasedRecovery whether or not this call is part of an file based recovery_@param totalTranslogOps  total translog operations expected to be sent;void prepareForTranslogOperations(boolean fileBasedRecovery, int totalTranslogOps, ActionListener<Void> listener)_;prepares,the,target,to,receive,translog,operations,after,all,file,have,been,copied,param,file,based,recovery,whether,or,not,this,call,is,part,of,an,file,based,recovery,param,total,translog,ops,total,translog,operations,expected,to,be,sent;void,prepare,for,translog,operations,boolean,file,based,recovery,int,total,translog,ops,action,listener,void,listener
RecoveryTargetHandler -> void cleanFiles(int totalTranslogOps, Store.MetadataSnapshot sourceMetaData) throws IOException_;1524684173;After all source files has been sent over, this command is sent to the target so it can clean any local_files that are not part of the source store_@param totalTranslogOps an update number of translog operations that will be replayed later on_@param sourceMetaData meta data of the source store;void cleanFiles(int totalTranslogOps, Store.MetadataSnapshot sourceMetaData) throws IOException_;after,all,source,files,has,been,sent,over,this,command,is,sent,to,the,target,so,it,can,clean,any,local,files,that,are,not,part,of,the,source,store,param,total,translog,ops,an,update,number,of,translog,operations,that,will,be,replayed,later,on,param,source,meta,data,meta,data,of,the,source,store;void,clean,files,int,total,translog,ops,store,metadata,snapshot,source,meta,data,throws,ioexception
RecoveryTargetHandler -> void cleanFiles(int totalTranslogOps, Store.MetadataSnapshot sourceMetaData) throws IOException_;1537806831;After all source files has been sent over, this command is sent to the target so it can clean any local_files that are not part of the source store_@param totalTranslogOps an update number of translog operations that will be replayed later on_@param sourceMetaData meta data of the source store;void cleanFiles(int totalTranslogOps, Store.MetadataSnapshot sourceMetaData) throws IOException_;after,all,source,files,has,been,sent,over,this,command,is,sent,to,the,target,so,it,can,clean,any,local,files,that,are,not,part,of,the,source,store,param,total,translog,ops,an,update,number,of,translog,operations,that,will,be,replayed,later,on,param,source,meta,data,meta,data,of,the,source,store;void,clean,files,int,total,translog,ops,store,metadata,snapshot,source,meta,data,throws,ioexception
RecoveryTargetHandler -> void cleanFiles(int totalTranslogOps, Store.MetadataSnapshot sourceMetaData) throws IOException_;1538067637;After all source files has been sent over, this command is sent to the target so it can clean any local_files that are not part of the source store_@param totalTranslogOps an update number of translog operations that will be replayed later on_@param sourceMetaData meta data of the source store;void cleanFiles(int totalTranslogOps, Store.MetadataSnapshot sourceMetaData) throws IOException_;after,all,source,files,has,been,sent,over,this,command,is,sent,to,the,target,so,it,can,clean,any,local,files,that,are,not,part,of,the,source,store,param,total,translog,ops,an,update,number,of,translog,operations,that,will,be,replayed,later,on,param,source,meta,data,meta,data,of,the,source,store;void,clean,files,int,total,translog,ops,store,metadata,snapshot,source,meta,data,throws,ioexception
RecoveryTargetHandler -> void cleanFiles(int totalTranslogOps, Store.MetadataSnapshot sourceMetaData) throws IOException_;1547496886;After all source files has been sent over, this command is sent to the target so it can clean any local_files that are not part of the source store_@param totalTranslogOps an update number of translog operations that will be replayed later on_@param sourceMetaData meta data of the source store;void cleanFiles(int totalTranslogOps, Store.MetadataSnapshot sourceMetaData) throws IOException_;after,all,source,files,has,been,sent,over,this,command,is,sent,to,the,target,so,it,can,clean,any,local,files,that,are,not,part,of,the,source,store,param,total,translog,ops,an,update,number,of,translog,operations,that,will,be,replayed,later,on,param,source,meta,data,meta,data,of,the,source,store;void,clean,files,int,total,translog,ops,store,metadata,snapshot,source,meta,data,throws,ioexception
RecoveryTargetHandler -> void cleanFiles(int totalTranslogOps, Store.MetadataSnapshot sourceMetaData) throws IOException_;1547508054;After all source files has been sent over, this command is sent to the target so it can clean any local_files that are not part of the source store_@param totalTranslogOps an update number of translog operations that will be replayed later on_@param sourceMetaData meta data of the source store;void cleanFiles(int totalTranslogOps, Store.MetadataSnapshot sourceMetaData) throws IOException_;after,all,source,files,has,been,sent,over,this,command,is,sent,to,the,target,so,it,can,clean,any,local,files,that,are,not,part,of,the,source,store,param,total,translog,ops,an,update,number,of,translog,operations,that,will,be,replayed,later,on,param,source,meta,data,meta,data,of,the,source,store;void,clean,files,int,total,translog,ops,store,metadata,snapshot,source,meta,data,throws,ioexception
RecoveryTargetHandler -> void cleanFiles(int totalTranslogOps, Store.MetadataSnapshot sourceMetaData) throws IOException_;1547576245;After all source files has been sent over, this command is sent to the target so it can clean any local_files that are not part of the source store_@param totalTranslogOps an update number of translog operations that will be replayed later on_@param sourceMetaData meta data of the source store;void cleanFiles(int totalTranslogOps, Store.MetadataSnapshot sourceMetaData) throws IOException_;after,all,source,files,has,been,sent,over,this,command,is,sent,to,the,target,so,it,can,clean,any,local,files,that,are,not,part,of,the,source,store,param,total,translog,ops,an,update,number,of,translog,operations,that,will,be,replayed,later,on,param,source,meta,data,meta,data,of,the,source,store;void,clean,files,int,total,translog,ops,store,metadata,snapshot,source,meta,data,throws,ioexception
RecoveryTargetHandler -> void cleanFiles(int totalTranslogOps, Store.MetadataSnapshot sourceMetaData) throws IOException_;1548124510;After all source files has been sent over, this command is sent to the target so it can clean any local_files that are not part of the source store_@param totalTranslogOps an update number of translog operations that will be replayed later on_@param sourceMetaData meta data of the source store;void cleanFiles(int totalTranslogOps, Store.MetadataSnapshot sourceMetaData) throws IOException_;after,all,source,files,has,been,sent,over,this,command,is,sent,to,the,target,so,it,can,clean,any,local,files,that,are,not,part,of,the,source,store,param,total,translog,ops,an,update,number,of,translog,operations,that,will,be,replayed,later,on,param,source,meta,data,meta,data,of,the,source,store;void,clean,files,int,total,translog,ops,store,metadata,snapshot,source,meta,data,throws,ioexception
RecoveryTargetHandler -> void cleanFiles(int totalTranslogOps, Store.MetadataSnapshot sourceMetaData) throws IOException_;1549406621;After all source files has been sent over, this command is sent to the target so it can clean any local_files that are not part of the source store_@param totalTranslogOps an update number of translog operations that will be replayed later on_@param sourceMetaData meta data of the source store;void cleanFiles(int totalTranslogOps, Store.MetadataSnapshot sourceMetaData) throws IOException_;after,all,source,files,has,been,sent,over,this,command,is,sent,to,the,target,so,it,can,clean,any,local,files,that,are,not,part,of,the,source,store,param,total,translog,ops,an,update,number,of,translog,operations,that,will,be,replayed,later,on,param,source,meta,data,meta,data,of,the,source,store;void,clean,files,int,total,translog,ops,store,metadata,snapshot,source,meta,data,throws,ioexception
RecoveryTargetHandler -> void finalizeRecovery(long globalCheckpoint, ActionListener<Void> listener)_;1547508054;The finalize request refreshes the engine now that new segments are available, enables garbage collection of tombstone files, and_updates the global checkpoint.__@param globalCheckpoint the global checkpoint on the recovery source_@param listener         the listener which will be notified when this method is completed;void finalizeRecovery(long globalCheckpoint, ActionListener<Void> listener)_;the,finalize,request,refreshes,the,engine,now,that,new,segments,are,available,enables,garbage,collection,of,tombstone,files,and,updates,the,global,checkpoint,param,global,checkpoint,the,global,checkpoint,on,the,recovery,source,param,listener,the,listener,which,will,be,notified,when,this,method,is,completed;void,finalize,recovery,long,global,checkpoint,action,listener,void,listener
RecoveryTargetHandler -> void finalizeRecovery(long globalCheckpoint, ActionListener<Void> listener)_;1547576245;The finalize request refreshes the engine now that new segments are available, enables garbage collection of tombstone files, and_updates the global checkpoint.__@param globalCheckpoint the global checkpoint on the recovery source_@param listener         the listener which will be notified when this method is completed;void finalizeRecovery(long globalCheckpoint, ActionListener<Void> listener)_;the,finalize,request,refreshes,the,engine,now,that,new,segments,are,available,enables,garbage,collection,of,tombstone,files,and,updates,the,global,checkpoint,param,global,checkpoint,the,global,checkpoint,on,the,recovery,source,param,listener,the,listener,which,will,be,notified,when,this,method,is,completed;void,finalize,recovery,long,global,checkpoint,action,listener,void,listener
RecoveryTargetHandler -> void finalizeRecovery(long globalCheckpoint, ActionListener<Void> listener)_;1548124510;The finalize request refreshes the engine now that new segments are available, enables garbage collection of tombstone files, and_updates the global checkpoint.__@param globalCheckpoint the global checkpoint on the recovery source_@param listener         the listener which will be notified when this method is completed;void finalizeRecovery(long globalCheckpoint, ActionListener<Void> listener)_;the,finalize,request,refreshes,the,engine,now,that,new,segments,are,available,enables,garbage,collection,of,tombstone,files,and,updates,the,global,checkpoint,param,global,checkpoint,the,global,checkpoint,on,the,recovery,source,param,listener,the,listener,which,will,be,notified,when,this,method,is,completed;void,finalize,recovery,long,global,checkpoint,action,listener,void,listener
RecoveryTargetHandler -> void finalizeRecovery(long globalCheckpoint, ActionListener<Void> listener)_;1549406621;The finalize request refreshes the engine now that new segments are available, enables garbage collection of tombstone files, updates_the global checkpoint.__@param globalCheckpoint the global checkpoint on the recovery source_@param listener         the listener which will be notified when this method is completed;void finalizeRecovery(long globalCheckpoint, ActionListener<Void> listener)_;the,finalize,request,refreshes,the,engine,now,that,new,segments,are,available,enables,garbage,collection,of,tombstone,files,updates,the,global,checkpoint,param,global,checkpoint,the,global,checkpoint,on,the,recovery,source,param,listener,the,listener,which,will,be,notified,when,this,method,is,completed;void,finalize,recovery,long,global,checkpoint,action,listener,void,listener
RecoveryTargetHandler -> void writeFileChunk(StoreFileMetaData fileMetaData, long position, BytesReference content,                         boolean lastChunk, int totalTranslogOps, ActionListener<Void> listener)_;1547496886;writes a partial file chunk to the target store;void writeFileChunk(StoreFileMetaData fileMetaData, long position, BytesReference content,_                        boolean lastChunk, int totalTranslogOps, ActionListener<Void> listener)_;writes,a,partial,file,chunk,to,the,target,store;void,write,file,chunk,store,file,meta,data,file,meta,data,long,position,bytes,reference,content,boolean,last,chunk,int,total,translog,ops,action,listener,void,listener
RecoveryTargetHandler -> void writeFileChunk(StoreFileMetaData fileMetaData, long position, BytesReference content,                         boolean lastChunk, int totalTranslogOps, ActionListener<Void> listener)_;1547508054;writes a partial file chunk to the target store;void writeFileChunk(StoreFileMetaData fileMetaData, long position, BytesReference content,_                        boolean lastChunk, int totalTranslogOps, ActionListener<Void> listener)_;writes,a,partial,file,chunk,to,the,target,store;void,write,file,chunk,store,file,meta,data,file,meta,data,long,position,bytes,reference,content,boolean,last,chunk,int,total,translog,ops,action,listener,void,listener
RecoveryTargetHandler -> void writeFileChunk(StoreFileMetaData fileMetaData, long position, BytesReference content,                         boolean lastChunk, int totalTranslogOps, ActionListener<Void> listener)_;1547576245;writes a partial file chunk to the target store;void writeFileChunk(StoreFileMetaData fileMetaData, long position, BytesReference content,_                        boolean lastChunk, int totalTranslogOps, ActionListener<Void> listener)_;writes,a,partial,file,chunk,to,the,target,store;void,write,file,chunk,store,file,meta,data,file,meta,data,long,position,bytes,reference,content,boolean,last,chunk,int,total,translog,ops,action,listener,void,listener
RecoveryTargetHandler -> void writeFileChunk(StoreFileMetaData fileMetaData, long position, BytesReference content,                         boolean lastChunk, int totalTranslogOps, ActionListener<Void> listener)_;1548124510;writes a partial file chunk to the target store;void writeFileChunk(StoreFileMetaData fileMetaData, long position, BytesReference content,_                        boolean lastChunk, int totalTranslogOps, ActionListener<Void> listener)_;writes,a,partial,file,chunk,to,the,target,store;void,write,file,chunk,store,file,meta,data,file,meta,data,long,position,bytes,reference,content,boolean,last,chunk,int,total,translog,ops,action,listener,void,listener
RecoveryTargetHandler -> void writeFileChunk(StoreFileMetaData fileMetaData, long position, BytesReference content,                         boolean lastChunk, int totalTranslogOps, ActionListener<Void> listener)_;1549406621;writes a partial file chunk to the target store;void writeFileChunk(StoreFileMetaData fileMetaData, long position, BytesReference content,_                        boolean lastChunk, int totalTranslogOps, ActionListener<Void> listener)_;writes,a,partial,file,chunk,to,the,target,store;void,write,file,chunk,store,file,meta,data,file,meta,data,long,position,bytes,reference,content,boolean,last,chunk,int,total,translog,ops,action,listener,void,listener
RecoveryTargetHandler -> void finalizeRecovery(long globalCheckpoint) throws IOException_;1524684173;The finalize request refreshes the engine now that new segments are available, enables garbage collection of tombstone files, and_updates the global checkpoint.__@param globalCheckpoint the global checkpoint on the recovery source;void finalizeRecovery(long globalCheckpoint) throws IOException_;the,finalize,request,refreshes,the,engine,now,that,new,segments,are,available,enables,garbage,collection,of,tombstone,files,and,updates,the,global,checkpoint,param,global,checkpoint,the,global,checkpoint,on,the,recovery,source;void,finalize,recovery,long,global,checkpoint,throws,ioexception
RecoveryTargetHandler -> void finalizeRecovery(long globalCheckpoint) throws IOException_;1537806831;The finalize request refreshes the engine now that new segments are available, enables garbage collection of tombstone files, and_updates the global checkpoint.__@param globalCheckpoint the global checkpoint on the recovery source;void finalizeRecovery(long globalCheckpoint) throws IOException_;the,finalize,request,refreshes,the,engine,now,that,new,segments,are,available,enables,garbage,collection,of,tombstone,files,and,updates,the,global,checkpoint,param,global,checkpoint,the,global,checkpoint,on,the,recovery,source;void,finalize,recovery,long,global,checkpoint,throws,ioexception
RecoveryTargetHandler -> void finalizeRecovery(long globalCheckpoint) throws IOException_;1538067637;The finalize request refreshes the engine now that new segments are available, enables garbage collection of tombstone files, and_updates the global checkpoint.__@param globalCheckpoint the global checkpoint on the recovery source;void finalizeRecovery(long globalCheckpoint) throws IOException_;the,finalize,request,refreshes,the,engine,now,that,new,segments,are,available,enables,garbage,collection,of,tombstone,files,and,updates,the,global,checkpoint,param,global,checkpoint,the,global,checkpoint,on,the,recovery,source;void,finalize,recovery,long,global,checkpoint,throws,ioexception
RecoveryTargetHandler -> void finalizeRecovery(long globalCheckpoint) throws IOException_;1547496886;The finalize request refreshes the engine now that new segments are available, enables garbage collection of tombstone files, and_updates the global checkpoint.__@param globalCheckpoint the global checkpoint on the recovery source;void finalizeRecovery(long globalCheckpoint) throws IOException_;the,finalize,request,refreshes,the,engine,now,that,new,segments,are,available,enables,garbage,collection,of,tombstone,files,and,updates,the,global,checkpoint,param,global,checkpoint,the,global,checkpoint,on,the,recovery,source;void,finalize,recovery,long,global,checkpoint,throws,ioexception
RecoveryTargetHandler -> void handoffPrimaryContext(ReplicationTracker.PrimaryContext primaryContext)_;1524684173;Handoff the primary context between the relocation source and the relocation target.__@param primaryContext the primary context from the relocation source;void handoffPrimaryContext(ReplicationTracker.PrimaryContext primaryContext)_;handoff,the,primary,context,between,the,relocation,source,and,the,relocation,target,param,primary,context,the,primary,context,from,the,relocation,source;void,handoff,primary,context,replication,tracker,primary,context,primary,context
RecoveryTargetHandler -> void handoffPrimaryContext(ReplicationTracker.PrimaryContext primaryContext)_;1537806831;Handoff the primary context between the relocation source and the relocation target.__@param primaryContext the primary context from the relocation source;void handoffPrimaryContext(ReplicationTracker.PrimaryContext primaryContext)_;handoff,the,primary,context,between,the,relocation,source,and,the,relocation,target,param,primary,context,the,primary,context,from,the,relocation,source;void,handoff,primary,context,replication,tracker,primary,context,primary,context
RecoveryTargetHandler -> void handoffPrimaryContext(ReplicationTracker.PrimaryContext primaryContext)_;1538067637;Handoff the primary context between the relocation source and the relocation target.__@param primaryContext the primary context from the relocation source;void handoffPrimaryContext(ReplicationTracker.PrimaryContext primaryContext)_;handoff,the,primary,context,between,the,relocation,source,and,the,relocation,target,param,primary,context,the,primary,context,from,the,relocation,source;void,handoff,primary,context,replication,tracker,primary,context,primary,context
RecoveryTargetHandler -> void handoffPrimaryContext(ReplicationTracker.PrimaryContext primaryContext)_;1547496886;Handoff the primary context between the relocation source and the relocation target.__@param primaryContext the primary context from the relocation source;void handoffPrimaryContext(ReplicationTracker.PrimaryContext primaryContext)_;handoff,the,primary,context,between,the,relocation,source,and,the,relocation,target,param,primary,context,the,primary,context,from,the,relocation,source;void,handoff,primary,context,replication,tracker,primary,context,primary,context
RecoveryTargetHandler -> void handoffPrimaryContext(ReplicationTracker.PrimaryContext primaryContext)_;1547508054;Handoff the primary context between the relocation source and the relocation target.__@param primaryContext the primary context from the relocation source;void handoffPrimaryContext(ReplicationTracker.PrimaryContext primaryContext)_;handoff,the,primary,context,between,the,relocation,source,and,the,relocation,target,param,primary,context,the,primary,context,from,the,relocation,source;void,handoff,primary,context,replication,tracker,primary,context,primary,context
RecoveryTargetHandler -> void handoffPrimaryContext(ReplicationTracker.PrimaryContext primaryContext)_;1547576245;Handoff the primary context between the relocation source and the relocation target.__@param primaryContext the primary context from the relocation source;void handoffPrimaryContext(ReplicationTracker.PrimaryContext primaryContext)_;handoff,the,primary,context,between,the,relocation,source,and,the,relocation,target,param,primary,context,the,primary,context,from,the,relocation,source;void,handoff,primary,context,replication,tracker,primary,context,primary,context
RecoveryTargetHandler -> void handoffPrimaryContext(ReplicationTracker.PrimaryContext primaryContext)_;1548124510;Handoff the primary context between the relocation source and the relocation target.__@param primaryContext the primary context from the relocation source;void handoffPrimaryContext(ReplicationTracker.PrimaryContext primaryContext)_;handoff,the,primary,context,between,the,relocation,source,and,the,relocation,target,param,primary,context,the,primary,context,from,the,relocation,source;void,handoff,primary,context,replication,tracker,primary,context,primary,context
RecoveryTargetHandler -> void handoffPrimaryContext(ReplicationTracker.PrimaryContext primaryContext)_;1549406621;Handoff the primary context between the relocation source and the relocation target.__@param primaryContext the primary context from the relocation source;void handoffPrimaryContext(ReplicationTracker.PrimaryContext primaryContext)_;handoff,the,primary,context,between,the,relocation,source,and,the,relocation,target,param,primary,context,the,primary,context,from,the,relocation,source;void,handoff,primary,context,replication,tracker,primary,context,primary,context
RecoveryTargetHandler -> void ensureClusterStateVersion(long clusterStateVersion)_;1524684173;Blockingly waits for cluster state with at least clusterStateVersion to be available;void ensureClusterStateVersion(long clusterStateVersion)_;blockingly,waits,for,cluster,state,with,at,least,cluster,state,version,to,be,available;void,ensure,cluster,state,version,long,cluster,state,version
RecoveryTargetHandler -> void ensureClusterStateVersion(long clusterStateVersion)_;1537806831;Blockingly waits for cluster state with at least clusterStateVersion to be available;void ensureClusterStateVersion(long clusterStateVersion)_;blockingly,waits,for,cluster,state,with,at,least,cluster,state,version,to,be,available;void,ensure,cluster,state,version,long,cluster,state,version
RecoveryTargetHandler -> void ensureClusterStateVersion(long clusterStateVersion)_;1538067637;Blockingly waits for cluster state with at least clusterStateVersion to be available;void ensureClusterStateVersion(long clusterStateVersion)_;blockingly,waits,for,cluster,state,with,at,least,cluster,state,version,to,be,available;void,ensure,cluster,state,version,long,cluster,state,version
RecoveryTargetHandler -> void ensureClusterStateVersion(long clusterStateVersion)_;1547496886;Blockingly waits for cluster state with at least clusterStateVersion to be available;void ensureClusterStateVersion(long clusterStateVersion)_;blockingly,waits,for,cluster,state,with,at,least,cluster,state,version,to,be,available;void,ensure,cluster,state,version,long,cluster,state,version
RecoveryTargetHandler -> void ensureClusterStateVersion(long clusterStateVersion)_;1547508054;Blockingly waits for cluster state with at least clusterStateVersion to be available;void ensureClusterStateVersion(long clusterStateVersion)_;blockingly,waits,for,cluster,state,with,at,least,cluster,state,version,to,be,available;void,ensure,cluster,state,version,long,cluster,state,version
RecoveryTargetHandler -> void ensureClusterStateVersion(long clusterStateVersion)_;1547576245;Blockingly waits for cluster state with at least clusterStateVersion to be available;void ensureClusterStateVersion(long clusterStateVersion)_;blockingly,waits,for,cluster,state,with,at,least,cluster,state,version,to,be,available;void,ensure,cluster,state,version,long,cluster,state,version
RecoveryTargetHandler -> void ensureClusterStateVersion(long clusterStateVersion)_;1548124510;Blockingly waits for cluster state with at least clusterStateVersion to be available;void ensureClusterStateVersion(long clusterStateVersion)_;blockingly,waits,for,cluster,state,with,at,least,cluster,state,version,to,be,available;void,ensure,cluster,state,version,long,cluster,state,version
RecoveryTargetHandler -> void ensureClusterStateVersion(long clusterStateVersion)_;1549406621;Blockingly waits for cluster state with at least clusterStateVersion to be available;void ensureClusterStateVersion(long clusterStateVersion)_;blockingly,waits,for,cluster,state,with,at,least,cluster,state,version,to,be,available;void,ensure,cluster,state,version,long,cluster,state,version
RecoveryTargetHandler -> void writeFileChunk(StoreFileMetaData fileMetaData, long position, BytesReference content,                         boolean lastChunk, int totalTranslogOps) throws IOException_;1524684173;writes a partial file chunk to the target store;void writeFileChunk(StoreFileMetaData fileMetaData, long position, BytesReference content,_                        boolean lastChunk, int totalTranslogOps) throws IOException_;writes,a,partial,file,chunk,to,the,target,store;void,write,file,chunk,store,file,meta,data,file,meta,data,long,position,bytes,reference,content,boolean,last,chunk,int,total,translog,ops,throws,ioexception
RecoveryTargetHandler -> void writeFileChunk(StoreFileMetaData fileMetaData, long position, BytesReference content,                         boolean lastChunk, int totalTranslogOps) throws IOException_;1537806831;writes a partial file chunk to the target store;void writeFileChunk(StoreFileMetaData fileMetaData, long position, BytesReference content,_                        boolean lastChunk, int totalTranslogOps) throws IOException_;writes,a,partial,file,chunk,to,the,target,store;void,write,file,chunk,store,file,meta,data,file,meta,data,long,position,bytes,reference,content,boolean,last,chunk,int,total,translog,ops,throws,ioexception
RecoveryTargetHandler -> void writeFileChunk(StoreFileMetaData fileMetaData, long position, BytesReference content,                         boolean lastChunk, int totalTranslogOps) throws IOException_;1538067637;writes a partial file chunk to the target store;void writeFileChunk(StoreFileMetaData fileMetaData, long position, BytesReference content,_                        boolean lastChunk, int totalTranslogOps) throws IOException_;writes,a,partial,file,chunk,to,the,target,store;void,write,file,chunk,store,file,meta,data,file,meta,data,long,position,bytes,reference,content,boolean,last,chunk,int,total,translog,ops,throws,ioexception
RecoveryTargetHandler -> void indexTranslogOperations(List<Translog.Operation> operations, int totalTranslogOps, long maxSeenAutoIdTimestampOnPrimary,                                  long maxSeqNoOfUpdatesOrDeletesOnPrimary, ActionListener<Long> listener)_;1547576245;Index a set of translog operations on the target__@param operations                          operations to index_@param totalTranslogOps                    current number of total operations expected to be indexed_@param maxSeenAutoIdTimestampOnPrimary     the maximum auto_id_timestamp of all append-only requests processed by the primary shard_@param maxSeqNoOfUpdatesOrDeletesOnPrimary the max seq_no of update operations (index operations overwrite Lucene) or delete ops on_the primary shard when capturing these operations. This value is at least as high as the_max_seq_no_of_updates on the primary was when any of these ops were processed on it._@param listener                            a listener which will be notified with the local checkpoint on the target_after these operations are successfully indexed on the target.;void indexTranslogOperations(List<Translog.Operation> operations, int totalTranslogOps, long maxSeenAutoIdTimestampOnPrimary,_                                 long maxSeqNoOfUpdatesOrDeletesOnPrimary, ActionListener<Long> listener)_;index,a,set,of,translog,operations,on,the,target,param,operations,operations,to,index,param,total,translog,ops,current,number,of,total,operations,expected,to,be,indexed,param,max,seen,auto,id,timestamp,on,primary,the,maximum,of,all,append,only,requests,processed,by,the,primary,shard,param,max,seq,no,of,updates,or,deletes,on,primary,the,max,of,update,operations,index,operations,overwrite,lucene,or,delete,ops,on,the,primary,shard,when,capturing,these,operations,this,value,is,at,least,as,high,as,the,on,the,primary,was,when,any,of,these,ops,were,processed,on,it,param,listener,a,listener,which,will,be,notified,with,the,local,checkpoint,on,the,target,after,these,operations,are,successfully,indexed,on,the,target;void,index,translog,operations,list,translog,operation,operations,int,total,translog,ops,long,max,seen,auto,id,timestamp,on,primary,long,max,seq,no,of,updates,or,deletes,on,primary,action,listener,long,listener
RecoveryTargetHandler -> void indexTranslogOperations(List<Translog.Operation> operations, int totalTranslogOps, long maxSeenAutoIdTimestampOnPrimary,                                  long maxSeqNoOfUpdatesOrDeletesOnPrimary, ActionListener<Long> listener)_;1548124510;Index a set of translog operations on the target__@param operations                          operations to index_@param totalTranslogOps                    current number of total operations expected to be indexed_@param maxSeenAutoIdTimestampOnPrimary     the maximum auto_id_timestamp of all append-only requests processed by the primary shard_@param maxSeqNoOfUpdatesOrDeletesOnPrimary the max seq_no of update operations (index operations overwrite Lucene) or delete ops on_the primary shard when capturing these operations. This value is at least as high as the_max_seq_no_of_updates on the primary was when any of these ops were processed on it._@param listener                            a listener which will be notified with the local checkpoint on the target_after these operations are successfully indexed on the target.;void indexTranslogOperations(List<Translog.Operation> operations, int totalTranslogOps, long maxSeenAutoIdTimestampOnPrimary,_                                 long maxSeqNoOfUpdatesOrDeletesOnPrimary, ActionListener<Long> listener)_;index,a,set,of,translog,operations,on,the,target,param,operations,operations,to,index,param,total,translog,ops,current,number,of,total,operations,expected,to,be,indexed,param,max,seen,auto,id,timestamp,on,primary,the,maximum,of,all,append,only,requests,processed,by,the,primary,shard,param,max,seq,no,of,updates,or,deletes,on,primary,the,max,of,update,operations,index,operations,overwrite,lucene,or,delete,ops,on,the,primary,shard,when,capturing,these,operations,this,value,is,at,least,as,high,as,the,on,the,primary,was,when,any,of,these,ops,were,processed,on,it,param,listener,a,listener,which,will,be,notified,with,the,local,checkpoint,on,the,target,after,these,operations,are,successfully,indexed,on,the,target;void,index,translog,operations,list,translog,operation,operations,int,total,translog,ops,long,max,seen,auto,id,timestamp,on,primary,long,max,seq,no,of,updates,or,deletes,on,primary,action,listener,long,listener
RecoveryTargetHandler -> long indexTranslogOperations(List<Translog.Operation> operations, int totalTranslogOps,                                  long maxSeenAutoIdTimestampOnPrimary, long maxSeqNoOfUpdatesOrDeletesOnPrimary) throws IOException_;1538067637;Index a set of translog operations on the target__@param operations                          operations to index_@param totalTranslogOps                    current number of total operations expected to be indexed_@param maxSeenAutoIdTimestampOnPrimary     the maximum auto_id_timestamp of all append-only requests processed by the primary shard_@param maxSeqNoOfUpdatesOrDeletesOnPrimary the max seq_no of update operations (index operations overwrite Lucene) or delete ops on_the primary shard when capturing these operations. This value is at least as high as the_max_seq_no_of_updates on the primary was when any of these ops were processed on it._@return the local checkpoint on the target shard;long indexTranslogOperations(List<Translog.Operation> operations, int totalTranslogOps,_                                 long maxSeenAutoIdTimestampOnPrimary, long maxSeqNoOfUpdatesOrDeletesOnPrimary) throws IOException_;index,a,set,of,translog,operations,on,the,target,param,operations,operations,to,index,param,total,translog,ops,current,number,of,total,operations,expected,to,be,indexed,param,max,seen,auto,id,timestamp,on,primary,the,maximum,of,all,append,only,requests,processed,by,the,primary,shard,param,max,seq,no,of,updates,or,deletes,on,primary,the,max,of,update,operations,index,operations,overwrite,lucene,or,delete,ops,on,the,primary,shard,when,capturing,these,operations,this,value,is,at,least,as,high,as,the,on,the,primary,was,when,any,of,these,ops,were,processed,on,it,return,the,local,checkpoint,on,the,target,shard;long,index,translog,operations,list,translog,operation,operations,int,total,translog,ops,long,max,seen,auto,id,timestamp,on,primary,long,max,seq,no,of,updates,or,deletes,on,primary,throws,ioexception
RecoveryTargetHandler -> long indexTranslogOperations(List<Translog.Operation> operations, int totalTranslogOps,                                  long maxSeenAutoIdTimestampOnPrimary, long maxSeqNoOfUpdatesOrDeletesOnPrimary) throws IOException_;1547496886;Index a set of translog operations on the target__@param operations                          operations to index_@param totalTranslogOps                    current number of total operations expected to be indexed_@param maxSeenAutoIdTimestampOnPrimary     the maximum auto_id_timestamp of all append-only requests processed by the primary shard_@param maxSeqNoOfUpdatesOrDeletesOnPrimary the max seq_no of update operations (index operations overwrite Lucene) or delete ops on_the primary shard when capturing these operations. This value is at least as high as the_max_seq_no_of_updates on the primary was when any of these ops were processed on it._@return the local checkpoint on the target shard;long indexTranslogOperations(List<Translog.Operation> operations, int totalTranslogOps,_                                 long maxSeenAutoIdTimestampOnPrimary, long maxSeqNoOfUpdatesOrDeletesOnPrimary) throws IOException_;index,a,set,of,translog,operations,on,the,target,param,operations,operations,to,index,param,total,translog,ops,current,number,of,total,operations,expected,to,be,indexed,param,max,seen,auto,id,timestamp,on,primary,the,maximum,of,all,append,only,requests,processed,by,the,primary,shard,param,max,seq,no,of,updates,or,deletes,on,primary,the,max,of,update,operations,index,operations,overwrite,lucene,or,delete,ops,on,the,primary,shard,when,capturing,these,operations,this,value,is,at,least,as,high,as,the,on,the,primary,was,when,any,of,these,ops,were,processed,on,it,return,the,local,checkpoint,on,the,target,shard;long,index,translog,operations,list,translog,operation,operations,int,total,translog,ops,long,max,seen,auto,id,timestamp,on,primary,long,max,seq,no,of,updates,or,deletes,on,primary,throws,ioexception
RecoveryTargetHandler -> long indexTranslogOperations(List<Translog.Operation> operations, int totalTranslogOps,                                  long maxSeenAutoIdTimestampOnPrimary, long maxSeqNoOfUpdatesOrDeletesOnPrimary) throws IOException_;1547508054;Index a set of translog operations on the target__@param operations                          operations to index_@param totalTranslogOps                    current number of total operations expected to be indexed_@param maxSeenAutoIdTimestampOnPrimary     the maximum auto_id_timestamp of all append-only requests processed by the primary shard_@param maxSeqNoOfUpdatesOrDeletesOnPrimary the max seq_no of update operations (index operations overwrite Lucene) or delete ops on_the primary shard when capturing these operations. This value is at least as high as the_max_seq_no_of_updates on the primary was when any of these ops were processed on it._@return the local checkpoint on the target shard;long indexTranslogOperations(List<Translog.Operation> operations, int totalTranslogOps,_                                 long maxSeenAutoIdTimestampOnPrimary, long maxSeqNoOfUpdatesOrDeletesOnPrimary) throws IOException_;index,a,set,of,translog,operations,on,the,target,param,operations,operations,to,index,param,total,translog,ops,current,number,of,total,operations,expected,to,be,indexed,param,max,seen,auto,id,timestamp,on,primary,the,maximum,of,all,append,only,requests,processed,by,the,primary,shard,param,max,seq,no,of,updates,or,deletes,on,primary,the,max,of,update,operations,index,operations,overwrite,lucene,or,delete,ops,on,the,primary,shard,when,capturing,these,operations,this,value,is,at,least,as,high,as,the,on,the,primary,was,when,any,of,these,ops,were,processed,on,it,return,the,local,checkpoint,on,the,target,shard;long,index,translog,operations,list,translog,operation,operations,int,total,translog,ops,long,max,seen,auto,id,timestamp,on,primary,long,max,seq,no,of,updates,or,deletes,on,primary,throws,ioexception
RecoveryTargetHandler -> void receiveFileInfo(List<String> phase1FileNames,                          List<Long> phase1FileSizes,                          List<String> phase1ExistingFileNames,                          List<Long> phase1ExistingFileSizes,                          int totalTranslogOps)_;1524684173;Notifies the target of the files it is going to receive;void receiveFileInfo(List<String> phase1FileNames,_                         List<Long> phase1FileSizes,_                         List<String> phase1ExistingFileNames,_                         List<Long> phase1ExistingFileSizes,_                         int totalTranslogOps)_;notifies,the,target,of,the,files,it,is,going,to,receive;void,receive,file,info,list,string,phase1file,names,list,long,phase1file,sizes,list,string,phase1existing,file,names,list,long,phase1existing,file,sizes,int,total,translog,ops
RecoveryTargetHandler -> void receiveFileInfo(List<String> phase1FileNames,                          List<Long> phase1FileSizes,                          List<String> phase1ExistingFileNames,                          List<Long> phase1ExistingFileSizes,                          int totalTranslogOps)_;1537806831;Notifies the target of the files it is going to receive;void receiveFileInfo(List<String> phase1FileNames,_                         List<Long> phase1FileSizes,_                         List<String> phase1ExistingFileNames,_                         List<Long> phase1ExistingFileSizes,_                         int totalTranslogOps)_;notifies,the,target,of,the,files,it,is,going,to,receive;void,receive,file,info,list,string,phase1file,names,list,long,phase1file,sizes,list,string,phase1existing,file,names,list,long,phase1existing,file,sizes,int,total,translog,ops
RecoveryTargetHandler -> void receiveFileInfo(List<String> phase1FileNames,                          List<Long> phase1FileSizes,                          List<String> phase1ExistingFileNames,                          List<Long> phase1ExistingFileSizes,                          int totalTranslogOps)_;1538067637;Notifies the target of the files it is going to receive;void receiveFileInfo(List<String> phase1FileNames,_                         List<Long> phase1FileSizes,_                         List<String> phase1ExistingFileNames,_                         List<Long> phase1ExistingFileSizes,_                         int totalTranslogOps)_;notifies,the,target,of,the,files,it,is,going,to,receive;void,receive,file,info,list,string,phase1file,names,list,long,phase1file,sizes,list,string,phase1existing,file,names,list,long,phase1existing,file,sizes,int,total,translog,ops
RecoveryTargetHandler -> void receiveFileInfo(List<String> phase1FileNames,                          List<Long> phase1FileSizes,                          List<String> phase1ExistingFileNames,                          List<Long> phase1ExistingFileSizes,                          int totalTranslogOps)_;1547496886;Notifies the target of the files it is going to receive;void receiveFileInfo(List<String> phase1FileNames,_                         List<Long> phase1FileSizes,_                         List<String> phase1ExistingFileNames,_                         List<Long> phase1ExistingFileSizes,_                         int totalTranslogOps)_;notifies,the,target,of,the,files,it,is,going,to,receive;void,receive,file,info,list,string,phase1file,names,list,long,phase1file,sizes,list,string,phase1existing,file,names,list,long,phase1existing,file,sizes,int,total,translog,ops
RecoveryTargetHandler -> void receiveFileInfo(List<String> phase1FileNames,                          List<Long> phase1FileSizes,                          List<String> phase1ExistingFileNames,                          List<Long> phase1ExistingFileSizes,                          int totalTranslogOps)_;1547508054;Notifies the target of the files it is going to receive;void receiveFileInfo(List<String> phase1FileNames,_                         List<Long> phase1FileSizes,_                         List<String> phase1ExistingFileNames,_                         List<Long> phase1ExistingFileSizes,_                         int totalTranslogOps)_;notifies,the,target,of,the,files,it,is,going,to,receive;void,receive,file,info,list,string,phase1file,names,list,long,phase1file,sizes,list,string,phase1existing,file,names,list,long,phase1existing,file,sizes,int,total,translog,ops
RecoveryTargetHandler -> void receiveFileInfo(List<String> phase1FileNames,                          List<Long> phase1FileSizes,                          List<String> phase1ExistingFileNames,                          List<Long> phase1ExistingFileSizes,                          int totalTranslogOps)_;1547576245;Notifies the target of the files it is going to receive;void receiveFileInfo(List<String> phase1FileNames,_                         List<Long> phase1FileSizes,_                         List<String> phase1ExistingFileNames,_                         List<Long> phase1ExistingFileSizes,_                         int totalTranslogOps)_;notifies,the,target,of,the,files,it,is,going,to,receive;void,receive,file,info,list,string,phase1file,names,list,long,phase1file,sizes,list,string,phase1existing,file,names,list,long,phase1existing,file,sizes,int,total,translog,ops
RecoveryTargetHandler -> void receiveFileInfo(List<String> phase1FileNames,                          List<Long> phase1FileSizes,                          List<String> phase1ExistingFileNames,                          List<Long> phase1ExistingFileSizes,                          int totalTranslogOps)_;1548124510;Notifies the target of the files it is going to receive;void receiveFileInfo(List<String> phase1FileNames,_                         List<Long> phase1FileSizes,_                         List<String> phase1ExistingFileNames,_                         List<Long> phase1ExistingFileSizes,_                         int totalTranslogOps)_;notifies,the,target,of,the,files,it,is,going,to,receive;void,receive,file,info,list,string,phase1file,names,list,long,phase1file,sizes,list,string,phase1existing,file,names,list,long,phase1existing,file,sizes,int,total,translog,ops
RecoveryTargetHandler -> void receiveFileInfo(List<String> phase1FileNames,                          List<Long> phase1FileSizes,                          List<String> phase1ExistingFileNames,                          List<Long> phase1ExistingFileSizes,                          int totalTranslogOps)_;1549406621;Notifies the target of the files it is going to receive;void receiveFileInfo(List<String> phase1FileNames,_                         List<Long> phase1FileSizes,_                         List<String> phase1ExistingFileNames,_                         List<Long> phase1ExistingFileSizes,_                         int totalTranslogOps)_;notifies,the,target,of,the,files,it,is,going,to,receive;void,receive,file,info,list,string,phase1file,names,list,long,phase1file,sizes,list,string,phase1existing,file,names,list,long,phase1existing,file,sizes,int,total,translog,ops
