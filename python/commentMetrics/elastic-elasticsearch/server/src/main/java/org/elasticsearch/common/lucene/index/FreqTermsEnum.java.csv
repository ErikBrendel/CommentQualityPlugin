commented;modifiers;parameterAmount;loc;comment;code
false;public;1;33;;@Override public boolean seekExact(BytesRef text) throws IOException {     // Check cache     long currentTermOrd = cachedTermOrds.add(text).     if (currentTermOrd < 0) {         // already seen, initialize instance data with the cached frequencies         currentTermOrd = -1 - currentTermOrd.         boolean found = true.         if (needDocFreqs) {             currentDocFreq = termDocFreqs.get(currentTermOrd).             found = currentDocFreq != NOT_FOUND.         }         if (needTotalTermFreqs) {             currentTotalTermFreq = termsTotalFreqs.get(currentTermOrd).             found = currentTotalTermFreq != NOT_FOUND.         }         current = found ? text : null.         return found.     }     // Cache miss - gather stats     final boolean found = super.seekExact(text).     // Cache the result - found or not.     if (needDocFreqs) {         termDocFreqs = bigArrays.grow(termDocFreqs, currentTermOrd + 1).         termDocFreqs.set(currentTermOrd, currentDocFreq).     }     if (needTotalTermFreqs) {         termsTotalFreqs = bigArrays.grow(termsTotalFreqs, currentTermOrd + 1).         termsTotalFreqs.set(currentTermOrd, currentTotalTermFreq).     }     return found. }
false;public;0;10;;@Override public void close() {     try {         Releasables.close(cachedTermOrds, termDocFreqs, termsTotalFreqs).     } finally {         cachedTermOrds = null.         termDocFreqs = null.         termsTotalFreqs = null.     } }
