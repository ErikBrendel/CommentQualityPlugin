# id;timestamp;commentText;codeText;commentWords;codeWords
Plugin -> public Collection<Object> createComponents(Client client, ClusterService clusterService, ThreadPool threadPool,                                                ResourceWatcherService resourceWatcherService, ScriptService scriptService,                                                NamedXContentRegistry xContentRegistry, Environment environment,                                                NodeEnvironment nodeEnvironment, NamedWriteableRegistry namedWriteableRegistry);1524684173;Returns components added by this plugin.__Any components returned that implement {@link LifecycleComponent} will have their lifecycle managed._Note: To aid in the migration away from guice, all objects returned as components will be bound in guice_to themselves.__@param client A client to make requests to the system_@param clusterService A service to allow watching and updating cluster state_@param threadPool A service to allow retrieving an executor to run an async action_@param resourceWatcherService A service to watch for changes to node local files_@param scriptService A service to allow running scripts on the local node_@param xContentRegistry the registry for extensible xContent parsing_@param environment the environment for path and setting configurations_@param nodeEnvironment the node environment used coordinate access to the data paths_@param namedWriteableRegistry the registry for {@link NamedWriteable} object parsing;public Collection<Object> createComponents(Client client, ClusterService clusterService, ThreadPool threadPool,_                                               ResourceWatcherService resourceWatcherService, ScriptService scriptService,_                                               NamedXContentRegistry xContentRegistry, Environment environment,_                                               NodeEnvironment nodeEnvironment, NamedWriteableRegistry namedWriteableRegistry) {_        return Collections.emptyList()__    };returns,components,added,by,this,plugin,any,components,returned,that,implement,link,lifecycle,component,will,have,their,lifecycle,managed,note,to,aid,in,the,migration,away,from,guice,all,objects,returned,as,components,will,be,bound,in,guice,to,themselves,param,client,a,client,to,make,requests,to,the,system,param,cluster,service,a,service,to,allow,watching,and,updating,cluster,state,param,thread,pool,a,service,to,allow,retrieving,an,executor,to,run,an,async,action,param,resource,watcher,service,a,service,to,watch,for,changes,to,node,local,files,param,script,service,a,service,to,allow,running,scripts,on,the,local,node,param,x,content,registry,the,registry,for,extensible,x,content,parsing,param,environment,the,environment,for,path,and,setting,configurations,param,node,environment,the,node,environment,used,coordinate,access,to,the,data,paths,param,named,writeable,registry,the,registry,for,link,named,writeable,object,parsing;public,collection,object,create,components,client,client,cluster,service,cluster,service,thread,pool,thread,pool,resource,watcher,service,resource,watcher,service,script,service,script,service,named,xcontent,registry,x,content,registry,environment,environment,node,environment,node,environment,named,writeable,registry,named,writeable,registry,return,collections,empty,list
Plugin -> public Collection<Object> createComponents(Client client, ClusterService clusterService, ThreadPool threadPool,                                                ResourceWatcherService resourceWatcherService, ScriptService scriptService,                                                NamedXContentRegistry xContentRegistry, Environment environment,                                                NodeEnvironment nodeEnvironment, NamedWriteableRegistry namedWriteableRegistry);1527878678;Returns components added by this plugin.__Any components returned that implement {@link LifecycleComponent} will have their lifecycle managed._Note: To aid in the migration away from guice, all objects returned as components will be bound in guice_to themselves.__@param client A client to make requests to the system_@param clusterService A service to allow watching and updating cluster state_@param threadPool A service to allow retrieving an executor to run an async action_@param resourceWatcherService A service to watch for changes to node local files_@param scriptService A service to allow running scripts on the local node_@param xContentRegistry the registry for extensible xContent parsing_@param environment the environment for path and setting configurations_@param nodeEnvironment the node environment used coordinate access to the data paths_@param namedWriteableRegistry the registry for {@link NamedWriteable} object parsing;public Collection<Object> createComponents(Client client, ClusterService clusterService, ThreadPool threadPool,_                                               ResourceWatcherService resourceWatcherService, ScriptService scriptService,_                                               NamedXContentRegistry xContentRegistry, Environment environment,_                                               NodeEnvironment nodeEnvironment, NamedWriteableRegistry namedWriteableRegistry) {_        return Collections.emptyList()__    };returns,components,added,by,this,plugin,any,components,returned,that,implement,link,lifecycle,component,will,have,their,lifecycle,managed,note,to,aid,in,the,migration,away,from,guice,all,objects,returned,as,components,will,be,bound,in,guice,to,themselves,param,client,a,client,to,make,requests,to,the,system,param,cluster,service,a,service,to,allow,watching,and,updating,cluster,state,param,thread,pool,a,service,to,allow,retrieving,an,executor,to,run,an,async,action,param,resource,watcher,service,a,service,to,watch,for,changes,to,node,local,files,param,script,service,a,service,to,allow,running,scripts,on,the,local,node,param,x,content,registry,the,registry,for,extensible,x,content,parsing,param,environment,the,environment,for,path,and,setting,configurations,param,node,environment,the,node,environment,used,coordinate,access,to,the,data,paths,param,named,writeable,registry,the,registry,for,link,named,writeable,object,parsing;public,collection,object,create,components,client,client,cluster,service,cluster,service,thread,pool,thread,pool,resource,watcher,service,resource,watcher,service,script,service,script,service,named,xcontent,registry,x,content,registry,environment,environment,node,environment,node,environment,named,writeable,registry,named,writeable,registry,return,collections,empty,list
Plugin -> public Collection<Object> createComponents(Client client, ClusterService clusterService, ThreadPool threadPool,                                                ResourceWatcherService resourceWatcherService, ScriptService scriptService,                                                NamedXContentRegistry xContentRegistry, Environment environment,                                                NodeEnvironment nodeEnvironment, NamedWriteableRegistry namedWriteableRegistry);1529341607;Returns components added by this plugin.__Any components returned that implement {@link LifecycleComponent} will have their lifecycle managed._Note: To aid in the migration away from guice, all objects returned as components will be bound in guice_to themselves.__@param client A client to make requests to the system_@param clusterService A service to allow watching and updating cluster state_@param threadPool A service to allow retrieving an executor to run an async action_@param resourceWatcherService A service to watch for changes to node local files_@param scriptService A service to allow running scripts on the local node_@param xContentRegistry the registry for extensible xContent parsing_@param environment the environment for path and setting configurations_@param nodeEnvironment the node environment used coordinate access to the data paths_@param namedWriteableRegistry the registry for {@link NamedWriteable} object parsing;public Collection<Object> createComponents(Client client, ClusterService clusterService, ThreadPool threadPool,_                                               ResourceWatcherService resourceWatcherService, ScriptService scriptService,_                                               NamedXContentRegistry xContentRegistry, Environment environment,_                                               NodeEnvironment nodeEnvironment, NamedWriteableRegistry namedWriteableRegistry) {_        return Collections.emptyList()__    };returns,components,added,by,this,plugin,any,components,returned,that,implement,link,lifecycle,component,will,have,their,lifecycle,managed,note,to,aid,in,the,migration,away,from,guice,all,objects,returned,as,components,will,be,bound,in,guice,to,themselves,param,client,a,client,to,make,requests,to,the,system,param,cluster,service,a,service,to,allow,watching,and,updating,cluster,state,param,thread,pool,a,service,to,allow,retrieving,an,executor,to,run,an,async,action,param,resource,watcher,service,a,service,to,watch,for,changes,to,node,local,files,param,script,service,a,service,to,allow,running,scripts,on,the,local,node,param,x,content,registry,the,registry,for,extensible,x,content,parsing,param,environment,the,environment,for,path,and,setting,configurations,param,node,environment,the,node,environment,used,coordinate,access,to,the,data,paths,param,named,writeable,registry,the,registry,for,link,named,writeable,object,parsing;public,collection,object,create,components,client,client,cluster,service,cluster,service,thread,pool,thread,pool,resource,watcher,service,resource,watcher,service,script,service,script,service,named,xcontent,registry,x,content,registry,environment,environment,node,environment,node,environment,named,writeable,registry,named,writeable,registry,return,collections,empty,list
Plugin -> public Collection<Object> createComponents(Client client, ClusterService clusterService, ThreadPool threadPool,                                                ResourceWatcherService resourceWatcherService, ScriptService scriptService,                                                NamedXContentRegistry xContentRegistry, Environment environment,                                                NodeEnvironment nodeEnvironment, NamedWriteableRegistry namedWriteableRegistry);1536611444;Returns components added by this plugin.__Any components returned that implement {@link LifecycleComponent} will have their lifecycle managed._Note: To aid in the migration away from guice, all objects returned as components will be bound in guice_to themselves.__@param client A client to make requests to the system_@param clusterService A service to allow watching and updating cluster state_@param threadPool A service to allow retrieving an executor to run an async action_@param resourceWatcherService A service to watch for changes to node local files_@param scriptService A service to allow running scripts on the local node_@param xContentRegistry the registry for extensible xContent parsing_@param environment the environment for path and setting configurations_@param nodeEnvironment the node environment used coordinate access to the data paths_@param namedWriteableRegistry the registry for {@link NamedWriteable} object parsing;public Collection<Object> createComponents(Client client, ClusterService clusterService, ThreadPool threadPool,_                                               ResourceWatcherService resourceWatcherService, ScriptService scriptService,_                                               NamedXContentRegistry xContentRegistry, Environment environment,_                                               NodeEnvironment nodeEnvironment, NamedWriteableRegistry namedWriteableRegistry) {_        return Collections.emptyList()__    };returns,components,added,by,this,plugin,any,components,returned,that,implement,link,lifecycle,component,will,have,their,lifecycle,managed,note,to,aid,in,the,migration,away,from,guice,all,objects,returned,as,components,will,be,bound,in,guice,to,themselves,param,client,a,client,to,make,requests,to,the,system,param,cluster,service,a,service,to,allow,watching,and,updating,cluster,state,param,thread,pool,a,service,to,allow,retrieving,an,executor,to,run,an,async,action,param,resource,watcher,service,a,service,to,watch,for,changes,to,node,local,files,param,script,service,a,service,to,allow,running,scripts,on,the,local,node,param,x,content,registry,the,registry,for,extensible,x,content,parsing,param,environment,the,environment,for,path,and,setting,configurations,param,node,environment,the,node,environment,used,coordinate,access,to,the,data,paths,param,named,writeable,registry,the,registry,for,link,named,writeable,object,parsing;public,collection,object,create,components,client,client,cluster,service,cluster,service,thread,pool,thread,pool,resource,watcher,service,resource,watcher,service,script,service,script,service,named,xcontent,registry,x,content,registry,environment,environment,node,environment,node,environment,named,writeable,registry,named,writeable,registry,return,collections,empty,list
Plugin -> public Collection<Object> createComponents(Client client, ClusterService clusterService, ThreadPool threadPool,                                                ResourceWatcherService resourceWatcherService, ScriptService scriptService,                                                NamedXContentRegistry xContentRegistry, Environment environment,                                                NodeEnvironment nodeEnvironment, NamedWriteableRegistry namedWriteableRegistry);1548865074;Returns components added by this plugin.__Any components returned that implement {@link LifecycleComponent} will have their lifecycle managed._Note: To aid in the migration away from guice, all objects returned as components will be bound in guice_to themselves.__@param client A client to make requests to the system_@param clusterService A service to allow watching and updating cluster state_@param threadPool A service to allow retrieving an executor to run an async action_@param resourceWatcherService A service to watch for changes to node local files_@param scriptService A service to allow running scripts on the local node_@param xContentRegistry the registry for extensible xContent parsing_@param environment the environment for path and setting configurations_@param nodeEnvironment the node environment used coordinate access to the data paths_@param namedWriteableRegistry the registry for {@link NamedWriteable} object parsing;public Collection<Object> createComponents(Client client, ClusterService clusterService, ThreadPool threadPool,_                                               ResourceWatcherService resourceWatcherService, ScriptService scriptService,_                                               NamedXContentRegistry xContentRegistry, Environment environment,_                                               NodeEnvironment nodeEnvironment, NamedWriteableRegistry namedWriteableRegistry) {_        return Collections.emptyList()__    };returns,components,added,by,this,plugin,any,components,returned,that,implement,link,lifecycle,component,will,have,their,lifecycle,managed,note,to,aid,in,the,migration,away,from,guice,all,objects,returned,as,components,will,be,bound,in,guice,to,themselves,param,client,a,client,to,make,requests,to,the,system,param,cluster,service,a,service,to,allow,watching,and,updating,cluster,state,param,thread,pool,a,service,to,allow,retrieving,an,executor,to,run,an,async,action,param,resource,watcher,service,a,service,to,watch,for,changes,to,node,local,files,param,script,service,a,service,to,allow,running,scripts,on,the,local,node,param,x,content,registry,the,registry,for,extensible,x,content,parsing,param,environment,the,environment,for,path,and,setting,configurations,param,node,environment,the,node,environment,used,coordinate,access,to,the,data,paths,param,named,writeable,registry,the,registry,for,link,named,writeable,object,parsing;public,collection,object,create,components,client,client,cluster,service,cluster,service,thread,pool,thread,pool,resource,watcher,service,resource,watcher,service,script,service,script,service,named,xcontent,registry,x,content,registry,environment,environment,node,environment,node,environment,named,writeable,registry,named,writeable,registry,return,collections,empty,list
Plugin -> public List<Setting<?>> getSettings();1524684173;Returns a list of additional {@link Setting} definitions for this plugin.;public List<Setting<?>> getSettings() { return Collections.emptyList()_ };returns,a,list,of,additional,link,setting,definitions,for,this,plugin;public,list,setting,get,settings,return,collections,empty,list
Plugin -> public List<Setting<?>> getSettings();1527878678;Returns a list of additional {@link Setting} definitions for this plugin.;public List<Setting<?>> getSettings() { return Collections.emptyList()_ };returns,a,list,of,additional,link,setting,definitions,for,this,plugin;public,list,setting,get,settings,return,collections,empty,list
Plugin -> public List<Setting<?>> getSettings();1529341607;Returns a list of additional {@link Setting} definitions for this plugin.;public List<Setting<?>> getSettings() { return Collections.emptyList()_ };returns,a,list,of,additional,link,setting,definitions,for,this,plugin;public,list,setting,get,settings,return,collections,empty,list
Plugin -> public List<Setting<?>> getSettings();1536611444;Returns a list of additional {@link Setting} definitions for this plugin.;public List<Setting<?>> getSettings() { return Collections.emptyList()_ };returns,a,list,of,additional,link,setting,definitions,for,this,plugin;public,list,setting,get,settings,return,collections,empty,list
Plugin -> public List<Setting<?>> getSettings();1548865074;Returns a list of additional {@link Setting} definitions for this plugin.;public List<Setting<?>> getSettings() { return Collections.emptyList()_ };returns,a,list,of,additional,link,setting,definitions,for,this,plugin;public,list,setting,get,settings,return,collections,empty,list
Plugin -> @Deprecated     public final void onModule(RepositoriesModule module);1524684173;Old-style snapshot/restore extension point. {@code @Deprecated} and {@code final} to act as a signpost for plugin authors upgrading_from 2.x.__@deprecated implement {@link RepositoryPlugin} instead;@Deprecated_    public final void onModule(RepositoriesModule module) {};old,style,snapshot,restore,extension,point,code,deprecated,and,code,final,to,act,as,a,signpost,for,plugin,authors,upgrading,from,2,x,deprecated,implement,link,repository,plugin,instead;deprecated,public,final,void,on,module,repositories,module,module
Plugin -> @Deprecated     public final void onModule(RepositoriesModule module);1527878678;Old-style snapshot/restore extension point. {@code @Deprecated} and {@code final} to act as a signpost for plugin authors upgrading_from 2.x.__@deprecated implement {@link RepositoryPlugin} instead;@Deprecated_    public final void onModule(RepositoriesModule module) {};old,style,snapshot,restore,extension,point,code,deprecated,and,code,final,to,act,as,a,signpost,for,plugin,authors,upgrading,from,2,x,deprecated,implement,link,repository,plugin,instead;deprecated,public,final,void,on,module,repositories,module,module
Plugin -> @Deprecated     public final void onModule(RepositoriesModule module);1529341607;Old-style snapshot/restore extension point. {@code @Deprecated} and {@code final} to act as a signpost for plugin authors upgrading_from 2.x.__@deprecated implement {@link RepositoryPlugin} instead;@Deprecated_    public final void onModule(RepositoriesModule module) {};old,style,snapshot,restore,extension,point,code,deprecated,and,code,final,to,act,as,a,signpost,for,plugin,authors,upgrading,from,2,x,deprecated,implement,link,repository,plugin,instead;deprecated,public,final,void,on,module,repositories,module,module
Plugin -> @Deprecated     public final void onModule(RepositoriesModule module);1536611444;Old-style snapshot/restore extension point. {@code @Deprecated} and {@code final} to act as a signpost for plugin authors upgrading_from 2.x.__@deprecated implement {@link RepositoryPlugin} instead;@Deprecated_    public final void onModule(RepositoriesModule module) {};old,style,snapshot,restore,extension,point,code,deprecated,and,code,final,to,act,as,a,signpost,for,plugin,authors,upgrading,from,2,x,deprecated,implement,link,repository,plugin,instead;deprecated,public,final,void,on,module,repositories,module,module
Plugin -> @Deprecated     public final void onModule(ClusterModule module);1524684173;Old-style cluster extension point. {@code @Deprecated} and {@code final} to act as a signpost for plugin authors upgrading_from 2.x.__@deprecated implement {@link ClusterPlugin} instead;@Deprecated_    public final void onModule(ClusterModule module) {};old,style,cluster,extension,point,code,deprecated,and,code,final,to,act,as,a,signpost,for,plugin,authors,upgrading,from,2,x,deprecated,implement,link,cluster,plugin,instead;deprecated,public,final,void,on,module,cluster,module,module
Plugin -> @Deprecated     public final void onModule(ClusterModule module);1527878678;Old-style cluster extension point. {@code @Deprecated} and {@code final} to act as a signpost for plugin authors upgrading_from 2.x.__@deprecated implement {@link ClusterPlugin} instead;@Deprecated_    public final void onModule(ClusterModule module) {};old,style,cluster,extension,point,code,deprecated,and,code,final,to,act,as,a,signpost,for,plugin,authors,upgrading,from,2,x,deprecated,implement,link,cluster,plugin,instead;deprecated,public,final,void,on,module,cluster,module,module
Plugin -> @Deprecated     public final void onModule(ClusterModule module);1529341607;Old-style cluster extension point. {@code @Deprecated} and {@code final} to act as a signpost for plugin authors upgrading_from 2.x.__@deprecated implement {@link ClusterPlugin} instead;@Deprecated_    public final void onModule(ClusterModule module) {};old,style,cluster,extension,point,code,deprecated,and,code,final,to,act,as,a,signpost,for,plugin,authors,upgrading,from,2,x,deprecated,implement,link,cluster,plugin,instead;deprecated,public,final,void,on,module,cluster,module,module
Plugin -> @Deprecated     public final void onModule(ClusterModule module);1536611444;Old-style cluster extension point. {@code @Deprecated} and {@code final} to act as a signpost for plugin authors upgrading_from 2.x.__@deprecated implement {@link ClusterPlugin} instead;@Deprecated_    public final void onModule(ClusterModule module) {};old,style,cluster,extension,point,code,deprecated,and,code,final,to,act,as,a,signpost,for,plugin,authors,upgrading,from,2,x,deprecated,implement,link,cluster,plugin,instead;deprecated,public,final,void,on,module,cluster,module,module
Plugin -> @Deprecated     public final void onModule(ActionModule module);1524684173;Old-style action extension point. {@code @Deprecated} and {@code final} to act as a signpost for plugin authors upgrading_from 2.x.__@deprecated implement {@link ActionPlugin} instead;@Deprecated_    public final void onModule(ActionModule module) {};old,style,action,extension,point,code,deprecated,and,code,final,to,act,as,a,signpost,for,plugin,authors,upgrading,from,2,x,deprecated,implement,link,action,plugin,instead;deprecated,public,final,void,on,module,action,module,module
Plugin -> @Deprecated     public final void onModule(ActionModule module);1527878678;Old-style action extension point. {@code @Deprecated} and {@code final} to act as a signpost for plugin authors upgrading_from 2.x.__@deprecated implement {@link ActionPlugin} instead;@Deprecated_    public final void onModule(ActionModule module) {};old,style,action,extension,point,code,deprecated,and,code,final,to,act,as,a,signpost,for,plugin,authors,upgrading,from,2,x,deprecated,implement,link,action,plugin,instead;deprecated,public,final,void,on,module,action,module,module
Plugin -> @Deprecated     public final void onModule(ActionModule module);1529341607;Old-style action extension point. {@code @Deprecated} and {@code final} to act as a signpost for plugin authors upgrading_from 2.x.__@deprecated implement {@link ActionPlugin} instead;@Deprecated_    public final void onModule(ActionModule module) {};old,style,action,extension,point,code,deprecated,and,code,final,to,act,as,a,signpost,for,plugin,authors,upgrading,from,2,x,deprecated,implement,link,action,plugin,instead;deprecated,public,final,void,on,module,action,module,module
Plugin -> @Deprecated     public final void onModule(ActionModule module);1536611444;Old-style action extension point. {@code @Deprecated} and {@code final} to act as a signpost for plugin authors upgrading_from 2.x.__@deprecated implement {@link ActionPlugin} instead;@Deprecated_    public final void onModule(ActionModule module) {};old,style,action,extension,point,code,deprecated,and,code,final,to,act,as,a,signpost,for,plugin,authors,upgrading,from,2,x,deprecated,implement,link,action,plugin,instead;deprecated,public,final,void,on,module,action,module,module
Plugin -> public List<SettingUpgrader<?>> getSettingUpgraders();1536611444;Get the setting upgraders provided by this plugin.__@return the settings upgraders;public List<SettingUpgrader<?>> getSettingUpgraders() {_        return Collections.emptyList()__    };get,the,setting,upgraders,provided,by,this,plugin,return,the,settings,upgraders;public,list,setting,upgrader,get,setting,upgraders,return,collections,empty,list
Plugin -> public List<SettingUpgrader<?>> getSettingUpgraders();1548865074;Get the setting upgraders provided by this plugin.__@return the settings upgraders;public List<SettingUpgrader<?>> getSettingUpgraders() {_        return Collections.emptyList()__    };get,the,setting,upgraders,provided,by,this,plugin,return,the,settings,upgraders;public,list,setting,upgrader,get,setting,upgraders,return,collections,empty,list
Plugin -> @Deprecated     public final void onModule(DiscoveryModule module);1524684173;Old-style discovery extension point. {@code @Deprecated} and {@code final} to act as a signpost for plugin authors upgrading_from 2.x.__@deprecated implement {@link DiscoveryPlugin} instead;@Deprecated_    public final void onModule(DiscoveryModule module) {};old,style,discovery,extension,point,code,deprecated,and,code,final,to,act,as,a,signpost,for,plugin,authors,upgrading,from,2,x,deprecated,implement,link,discovery,plugin,instead;deprecated,public,final,void,on,module,discovery,module,module
Plugin -> @Deprecated     public final void onModule(DiscoveryModule module);1527878678;Old-style discovery extension point. {@code @Deprecated} and {@code final} to act as a signpost for plugin authors upgrading_from 2.x.__@deprecated implement {@link DiscoveryPlugin} instead;@Deprecated_    public final void onModule(DiscoveryModule module) {};old,style,discovery,extension,point,code,deprecated,and,code,final,to,act,as,a,signpost,for,plugin,authors,upgrading,from,2,x,deprecated,implement,link,discovery,plugin,instead;deprecated,public,final,void,on,module,discovery,module,module
Plugin -> @Deprecated     public final void onModule(DiscoveryModule module);1529341607;Old-style discovery extension point. {@code @Deprecated} and {@code final} to act as a signpost for plugin authors upgrading_from 2.x.__@deprecated implement {@link DiscoveryPlugin} instead;@Deprecated_    public final void onModule(DiscoveryModule module) {};old,style,discovery,extension,point,code,deprecated,and,code,final,to,act,as,a,signpost,for,plugin,authors,upgrading,from,2,x,deprecated,implement,link,discovery,plugin,instead;deprecated,public,final,void,on,module,discovery,module,module
Plugin -> @Deprecated     public final void onModule(DiscoveryModule module);1536611444;Old-style discovery extension point. {@code @Deprecated} and {@code final} to act as a signpost for plugin authors upgrading_from 2.x.__@deprecated implement {@link DiscoveryPlugin} instead;@Deprecated_    public final void onModule(DiscoveryModule module) {};old,style,discovery,extension,point,code,deprecated,and,code,final,to,act,as,a,signpost,for,plugin,authors,upgrading,from,2,x,deprecated,implement,link,discovery,plugin,instead;deprecated,public,final,void,on,module,discovery,module,module
Plugin -> @Deprecated     public final void onModule(NetworkModule module);1524684173;Old-style network extension point. {@code @Deprecated} and {@code final} to act as a signpost for plugin authors upgrading_from 2.x.__@deprecated implement {@link NetworkPlugin} instead;@Deprecated_    public final void onModule(NetworkModule module) {};old,style,network,extension,point,code,deprecated,and,code,final,to,act,as,a,signpost,for,plugin,authors,upgrading,from,2,x,deprecated,implement,link,network,plugin,instead;deprecated,public,final,void,on,module,network,module,module
Plugin -> @Deprecated     public final void onModule(NetworkModule module);1527878678;Old-style network extension point. {@code @Deprecated} and {@code final} to act as a signpost for plugin authors upgrading_from 2.x.__@deprecated implement {@link NetworkPlugin} instead;@Deprecated_    public final void onModule(NetworkModule module) {};old,style,network,extension,point,code,deprecated,and,code,final,to,act,as,a,signpost,for,plugin,authors,upgrading,from,2,x,deprecated,implement,link,network,plugin,instead;deprecated,public,final,void,on,module,network,module,module
Plugin -> @Deprecated     public final void onModule(NetworkModule module);1529341607;Old-style network extension point. {@code @Deprecated} and {@code final} to act as a signpost for plugin authors upgrading_from 2.x.__@deprecated implement {@link NetworkPlugin} instead;@Deprecated_    public final void onModule(NetworkModule module) {};old,style,network,extension,point,code,deprecated,and,code,final,to,act,as,a,signpost,for,plugin,authors,upgrading,from,2,x,deprecated,implement,link,network,plugin,instead;deprecated,public,final,void,on,module,network,module,module
Plugin -> @Deprecated     public final void onModule(NetworkModule module);1536611444;Old-style network extension point. {@code @Deprecated} and {@code final} to act as a signpost for plugin authors upgrading_from 2.x.__@deprecated implement {@link NetworkPlugin} instead;@Deprecated_    public final void onModule(NetworkModule module) {};old,style,network,extension,point,code,deprecated,and,code,final,to,act,as,a,signpost,for,plugin,authors,upgrading,from,2,x,deprecated,implement,link,network,plugin,instead;deprecated,public,final,void,on,module,network,module,module
Plugin -> protected Optional<String> getFeature();1527878678;A feature exposed by the plugin. This should be used if a plugin exposes {@link ClusterState.Custom} or {@link MetaData.Custom}_ see_also {@link ClusterState.FeatureAware}.__@return a feature set represented by this plugin, or the empty optional if the plugin does not expose cluster state or metadata_customs;protected Optional<String> getFeature() {_        return Optional.empty()__    };a,feature,exposed,by,the,plugin,this,should,be,used,if,a,plugin,exposes,link,cluster,state,custom,or,link,meta,data,custom,see,also,link,cluster,state,feature,aware,return,a,feature,set,represented,by,this,plugin,or,the,empty,optional,if,the,plugin,does,not,expose,cluster,state,or,metadata,customs;protected,optional,string,get,feature,return,optional,empty
Plugin -> protected Optional<String> getFeature();1529341607;A feature exposed by the plugin. This should be used if a plugin exposes {@link ClusterState.Custom} or {@link MetaData.Custom}_ see_also {@link ClusterState.FeatureAware}.__@return a feature set represented by this plugin, or the empty optional if the plugin does not expose cluster state or metadata_customs;protected Optional<String> getFeature() {_        return Optional.empty()__    };a,feature,exposed,by,the,plugin,this,should,be,used,if,a,plugin,exposes,link,cluster,state,custom,or,link,meta,data,custom,see,also,link,cluster,state,feature,aware,return,a,feature,set,represented,by,this,plugin,or,the,empty,optional,if,the,plugin,does,not,expose,cluster,state,or,metadata,customs;protected,optional,string,get,feature,return,optional,empty
Plugin -> protected Optional<String> getFeature();1536611444;A feature exposed by the plugin. This should be used if a plugin exposes {@link ClusterState.Custom} or {@link MetaData.Custom}_ see_also {@link ClusterState.FeatureAware}.__@return a feature set represented by this plugin, or the empty optional if the plugin does not expose cluster state or metadata_customs;protected Optional<String> getFeature() {_        return Optional.empty()__    };a,feature,exposed,by,the,plugin,this,should,be,used,if,a,plugin,exposes,link,cluster,state,custom,or,link,meta,data,custom,see,also,link,cluster,state,feature,aware,return,a,feature,set,represented,by,this,plugin,or,the,empty,optional,if,the,plugin,does,not,expose,cluster,state,or,metadata,customs;protected,optional,string,get,feature,return,optional,empty
Plugin -> protected Optional<String> getFeature();1548865074;A feature exposed by the plugin. This should be used if a plugin exposes {@link ClusterState.Custom} or {@link MetaData.Custom}_ see_also {@link ClusterState.FeatureAware}.__@return a feature set represented by this plugin, or the empty optional if the plugin does not expose cluster state or metadata_customs;protected Optional<String> getFeature() {_        return Optional.empty()__    };a,feature,exposed,by,the,plugin,this,should,be,used,if,a,plugin,exposes,link,cluster,state,custom,or,link,meta,data,custom,see,also,link,cluster,state,feature,aware,return,a,feature,set,represented,by,this,plugin,or,the,empty,optional,if,the,plugin,does,not,expose,cluster,state,or,metadata,customs;protected,optional,string,get,feature,return,optional,empty
Plugin -> public UnaryOperator<Map<String, MetaData.Custom>> getCustomMetaDataUpgrader();1524684173;Provides a function to modify global custom meta data on startup._<p>_Plugins should return the input custom map via {@link UnaryOperator#identity()} if no upgrade is required._<p>_The order of custom meta data upgraders calls is undefined and can change between runs so, it is expected that_plugins will modify only data owned by them to avoid conflicts._<p>_@return Never {@code null}. The same or upgraded {@code MetaData.Custom} map._@throws IllegalStateException if the node should not start because at least one {@code MetaData.Custom}_is unsupported;public UnaryOperator<Map<String, MetaData.Custom>> getCustomMetaDataUpgrader() {_        return UnaryOperator.identity()__    };provides,a,function,to,modify,global,custom,meta,data,on,startup,p,plugins,should,return,the,input,custom,map,via,link,unary,operator,identity,if,no,upgrade,is,required,p,the,order,of,custom,meta,data,upgraders,calls,is,undefined,and,can,change,between,runs,so,it,is,expected,that,plugins,will,modify,only,data,owned,by,them,to,avoid,conflicts,p,return,never,code,null,the,same,or,upgraded,code,meta,data,custom,map,throws,illegal,state,exception,if,the,node,should,not,start,because,at,least,one,code,meta,data,custom,is,unsupported;public,unary,operator,map,string,meta,data,custom,get,custom,meta,data,upgrader,return,unary,operator,identity
Plugin -> public UnaryOperator<Map<String, MetaData.Custom>> getCustomMetaDataUpgrader();1527878678;Provides a function to modify global custom meta data on startup._<p>_Plugins should return the input custom map via {@link UnaryOperator#identity()} if no upgrade is required._<p>_The order of custom meta data upgraders calls is undefined and can change between runs so, it is expected that_plugins will modify only data owned by them to avoid conflicts._<p>_@return Never {@code null}. The same or upgraded {@code MetaData.Custom} map._@throws IllegalStateException if the node should not start because at least one {@code MetaData.Custom}_is unsupported;public UnaryOperator<Map<String, MetaData.Custom>> getCustomMetaDataUpgrader() {_        return UnaryOperator.identity()__    };provides,a,function,to,modify,global,custom,meta,data,on,startup,p,plugins,should,return,the,input,custom,map,via,link,unary,operator,identity,if,no,upgrade,is,required,p,the,order,of,custom,meta,data,upgraders,calls,is,undefined,and,can,change,between,runs,so,it,is,expected,that,plugins,will,modify,only,data,owned,by,them,to,avoid,conflicts,p,return,never,code,null,the,same,or,upgraded,code,meta,data,custom,map,throws,illegal,state,exception,if,the,node,should,not,start,because,at,least,one,code,meta,data,custom,is,unsupported;public,unary,operator,map,string,meta,data,custom,get,custom,meta,data,upgrader,return,unary,operator,identity
Plugin -> public UnaryOperator<Map<String, MetaData.Custom>> getCustomMetaDataUpgrader();1529341607;Provides a function to modify global custom meta data on startup._<p>_Plugins should return the input custom map via {@link UnaryOperator#identity()} if no upgrade is required._<p>_The order of custom meta data upgraders calls is undefined and can change between runs so, it is expected that_plugins will modify only data owned by them to avoid conflicts._<p>_@return Never {@code null}. The same or upgraded {@code MetaData.Custom} map._@throws IllegalStateException if the node should not start because at least one {@code MetaData.Custom}_is unsupported;public UnaryOperator<Map<String, MetaData.Custom>> getCustomMetaDataUpgrader() {_        return UnaryOperator.identity()__    };provides,a,function,to,modify,global,custom,meta,data,on,startup,p,plugins,should,return,the,input,custom,map,via,link,unary,operator,identity,if,no,upgrade,is,required,p,the,order,of,custom,meta,data,upgraders,calls,is,undefined,and,can,change,between,runs,so,it,is,expected,that,plugins,will,modify,only,data,owned,by,them,to,avoid,conflicts,p,return,never,code,null,the,same,or,upgraded,code,meta,data,custom,map,throws,illegal,state,exception,if,the,node,should,not,start,because,at,least,one,code,meta,data,custom,is,unsupported;public,unary,operator,map,string,meta,data,custom,get,custom,meta,data,upgrader,return,unary,operator,identity
Plugin -> public UnaryOperator<Map<String, MetaData.Custom>> getCustomMetaDataUpgrader();1536611444;Provides a function to modify global custom meta data on startup._<p>_Plugins should return the input custom map via {@link UnaryOperator#identity()} if no upgrade is required._<p>_The order of custom meta data upgraders calls is undefined and can change between runs so, it is expected that_plugins will modify only data owned by them to avoid conflicts._<p>_@return Never {@code null}. The same or upgraded {@code MetaData.Custom} map._@throws IllegalStateException if the node should not start because at least one {@code MetaData.Custom}_is unsupported;public UnaryOperator<Map<String, MetaData.Custom>> getCustomMetaDataUpgrader() {_        return UnaryOperator.identity()__    };provides,a,function,to,modify,global,custom,meta,data,on,startup,p,plugins,should,return,the,input,custom,map,via,link,unary,operator,identity,if,no,upgrade,is,required,p,the,order,of,custom,meta,data,upgraders,calls,is,undefined,and,can,change,between,runs,so,it,is,expected,that,plugins,will,modify,only,data,owned,by,them,to,avoid,conflicts,p,return,never,code,null,the,same,or,upgraded,code,meta,data,custom,map,throws,illegal,state,exception,if,the,node,should,not,start,because,at,least,one,code,meta,data,custom,is,unsupported;public,unary,operator,map,string,meta,data,custom,get,custom,meta,data,upgrader,return,unary,operator,identity
Plugin -> public UnaryOperator<Map<String, MetaData.Custom>> getCustomMetaDataUpgrader();1548865074;Provides a function to modify global custom meta data on startup._<p>_Plugins should return the input custom map via {@link UnaryOperator#identity()} if no upgrade is required._<p>_The order of custom meta data upgraders calls is undefined and can change between runs so, it is expected that_plugins will modify only data owned by them to avoid conflicts._<p>_@return Never {@code null}. The same or upgraded {@code MetaData.Custom} map._@throws IllegalStateException if the node should not start because at least one {@code MetaData.Custom}_is unsupported;public UnaryOperator<Map<String, MetaData.Custom>> getCustomMetaDataUpgrader() {_        return UnaryOperator.identity()__    };provides,a,function,to,modify,global,custom,meta,data,on,startup,p,plugins,should,return,the,input,custom,map,via,link,unary,operator,identity,if,no,upgrade,is,required,p,the,order,of,custom,meta,data,upgraders,calls,is,undefined,and,can,change,between,runs,so,it,is,expected,that,plugins,will,modify,only,data,owned,by,them,to,avoid,conflicts,p,return,never,code,null,the,same,or,upgraded,code,meta,data,custom,map,throws,illegal,state,exception,if,the,node,should,not,start,because,at,least,one,code,meta,data,custom,is,unsupported;public,unary,operator,map,string,meta,data,custom,get,custom,meta,data,upgrader,return,unary,operator,identity
Plugin -> @Deprecated     public final void onModule(ScriptModule module);1524684173;Old-style guice scripting extension point. {@code @Deprecated} and {@code final} to act as a signpost for plugin authors upgrading_from 2.x.__@deprecated implement {@link ScriptPlugin} instead;@Deprecated_    public final void onModule(ScriptModule module) {};old,style,guice,scripting,extension,point,code,deprecated,and,code,final,to,act,as,a,signpost,for,plugin,authors,upgrading,from,2,x,deprecated,implement,link,script,plugin,instead;deprecated,public,final,void,on,module,script,module,module
Plugin -> @Deprecated     public final void onModule(ScriptModule module);1527878678;Old-style guice scripting extension point. {@code @Deprecated} and {@code final} to act as a signpost for plugin authors upgrading_from 2.x.__@deprecated implement {@link ScriptPlugin} instead;@Deprecated_    public final void onModule(ScriptModule module) {};old,style,guice,scripting,extension,point,code,deprecated,and,code,final,to,act,as,a,signpost,for,plugin,authors,upgrading,from,2,x,deprecated,implement,link,script,plugin,instead;deprecated,public,final,void,on,module,script,module,module
Plugin -> @Deprecated     public final void onModule(ScriptModule module);1529341607;Old-style guice scripting extension point. {@code @Deprecated} and {@code final} to act as a signpost for plugin authors upgrading_from 2.x.__@deprecated implement {@link ScriptPlugin} instead;@Deprecated_    public final void onModule(ScriptModule module) {};old,style,guice,scripting,extension,point,code,deprecated,and,code,final,to,act,as,a,signpost,for,plugin,authors,upgrading,from,2,x,deprecated,implement,link,script,plugin,instead;deprecated,public,final,void,on,module,script,module,module
Plugin -> @Deprecated     public final void onModule(ScriptModule module);1536611444;Old-style guice scripting extension point. {@code @Deprecated} and {@code final} to act as a signpost for plugin authors upgrading_from 2.x.__@deprecated implement {@link ScriptPlugin} instead;@Deprecated_    public final void onModule(ScriptModule module) {};old,style,guice,scripting,extension,point,code,deprecated,and,code,final,to,act,as,a,signpost,for,plugin,authors,upgrading,from,2,x,deprecated,implement,link,script,plugin,instead;deprecated,public,final,void,on,module,script,module,module
Plugin -> @Deprecated     public final void onModule(SearchModule module);1524684173;Old-style search extension point. {@code @Deprecated} and {@code final} to act as a signpost for plugin authors upgrading_from 2.x.__@deprecated implement {@link SearchPlugin} instead;@Deprecated_    public final void onModule(SearchModule module) {};old,style,search,extension,point,code,deprecated,and,code,final,to,act,as,a,signpost,for,plugin,authors,upgrading,from,2,x,deprecated,implement,link,search,plugin,instead;deprecated,public,final,void,on,module,search,module,module
Plugin -> @Deprecated     public final void onModule(SearchModule module);1527878678;Old-style search extension point. {@code @Deprecated} and {@code final} to act as a signpost for plugin authors upgrading_from 2.x.__@deprecated implement {@link SearchPlugin} instead;@Deprecated_    public final void onModule(SearchModule module) {};old,style,search,extension,point,code,deprecated,and,code,final,to,act,as,a,signpost,for,plugin,authors,upgrading,from,2,x,deprecated,implement,link,search,plugin,instead;deprecated,public,final,void,on,module,search,module,module
Plugin -> @Deprecated     public final void onModule(SearchModule module);1529341607;Old-style search extension point. {@code @Deprecated} and {@code final} to act as a signpost for plugin authors upgrading_from 2.x.__@deprecated implement {@link SearchPlugin} instead;@Deprecated_    public final void onModule(SearchModule module) {};old,style,search,extension,point,code,deprecated,and,code,final,to,act,as,a,signpost,for,plugin,authors,upgrading,from,2,x,deprecated,implement,link,search,plugin,instead;deprecated,public,final,void,on,module,search,module,module
Plugin -> @Deprecated     public final void onModule(SearchModule module);1536611444;Old-style search extension point. {@code @Deprecated} and {@code final} to act as a signpost for plugin authors upgrading_from 2.x.__@deprecated implement {@link SearchPlugin} instead;@Deprecated_    public final void onModule(SearchModule module) {};old,style,search,extension,point,code,deprecated,and,code,final,to,act,as,a,signpost,for,plugin,authors,upgrading,from,2,x,deprecated,implement,link,search,plugin,instead;deprecated,public,final,void,on,module,search,module,module
Plugin -> public UnaryOperator<IndexMetaData> getIndexMetaDataUpgrader();1524684173;Provides a function to modify index meta data when an index is introduced into the cluster state for the first time._<p>_Plugins should return the input index metadata via {@link UnaryOperator#identity()} if no upgrade is required._<p>_The order of the index upgrader calls for the same index is undefined and can change between runs so, it is expected that_plugins will modify only indices owned by them to avoid conflicts._<p>_@return Never {@code null}. The same or upgraded {@code IndexMetaData}._@throws IllegalStateException if the node should not start because the index is unsupported;public UnaryOperator<IndexMetaData> getIndexMetaDataUpgrader() {_        return UnaryOperator.identity()__    };provides,a,function,to,modify,index,meta,data,when,an,index,is,introduced,into,the,cluster,state,for,the,first,time,p,plugins,should,return,the,input,index,metadata,via,link,unary,operator,identity,if,no,upgrade,is,required,p,the,order,of,the,index,upgrader,calls,for,the,same,index,is,undefined,and,can,change,between,runs,so,it,is,expected,that,plugins,will,modify,only,indices,owned,by,them,to,avoid,conflicts,p,return,never,code,null,the,same,or,upgraded,code,index,meta,data,throws,illegal,state,exception,if,the,node,should,not,start,because,the,index,is,unsupported;public,unary,operator,index,meta,data,get,index,meta,data,upgrader,return,unary,operator,identity
Plugin -> public UnaryOperator<IndexMetaData> getIndexMetaDataUpgrader();1527878678;Provides a function to modify index meta data when an index is introduced into the cluster state for the first time._<p>_Plugins should return the input index metadata via {@link UnaryOperator#identity()} if no upgrade is required._<p>_The order of the index upgrader calls for the same index is undefined and can change between runs so, it is expected that_plugins will modify only indices owned by them to avoid conflicts._<p>_@return Never {@code null}. The same or upgraded {@code IndexMetaData}._@throws IllegalStateException if the node should not start because the index is unsupported;public UnaryOperator<IndexMetaData> getIndexMetaDataUpgrader() {_        return UnaryOperator.identity()__    };provides,a,function,to,modify,index,meta,data,when,an,index,is,introduced,into,the,cluster,state,for,the,first,time,p,plugins,should,return,the,input,index,metadata,via,link,unary,operator,identity,if,no,upgrade,is,required,p,the,order,of,the,index,upgrader,calls,for,the,same,index,is,undefined,and,can,change,between,runs,so,it,is,expected,that,plugins,will,modify,only,indices,owned,by,them,to,avoid,conflicts,p,return,never,code,null,the,same,or,upgraded,code,index,meta,data,throws,illegal,state,exception,if,the,node,should,not,start,because,the,index,is,unsupported;public,unary,operator,index,meta,data,get,index,meta,data,upgrader,return,unary,operator,identity
Plugin -> public UnaryOperator<IndexMetaData> getIndexMetaDataUpgrader();1529341607;Provides a function to modify index meta data when an index is introduced into the cluster state for the first time._<p>_Plugins should return the input index metadata via {@link UnaryOperator#identity()} if no upgrade is required._<p>_The order of the index upgrader calls for the same index is undefined and can change between runs so, it is expected that_plugins will modify only indices owned by them to avoid conflicts._<p>_@return Never {@code null}. The same or upgraded {@code IndexMetaData}._@throws IllegalStateException if the node should not start because the index is unsupported;public UnaryOperator<IndexMetaData> getIndexMetaDataUpgrader() {_        return UnaryOperator.identity()__    };provides,a,function,to,modify,index,meta,data,when,an,index,is,introduced,into,the,cluster,state,for,the,first,time,p,plugins,should,return,the,input,index,metadata,via,link,unary,operator,identity,if,no,upgrade,is,required,p,the,order,of,the,index,upgrader,calls,for,the,same,index,is,undefined,and,can,change,between,runs,so,it,is,expected,that,plugins,will,modify,only,indices,owned,by,them,to,avoid,conflicts,p,return,never,code,null,the,same,or,upgraded,code,index,meta,data,throws,illegal,state,exception,if,the,node,should,not,start,because,the,index,is,unsupported;public,unary,operator,index,meta,data,get,index,meta,data,upgrader,return,unary,operator,identity
Plugin -> public UnaryOperator<IndexMetaData> getIndexMetaDataUpgrader();1536611444;Provides a function to modify index meta data when an index is introduced into the cluster state for the first time._<p>_Plugins should return the input index metadata via {@link UnaryOperator#identity()} if no upgrade is required._<p>_The order of the index upgrader calls for the same index is undefined and can change between runs so, it is expected that_plugins will modify only indices owned by them to avoid conflicts._<p>_@return Never {@code null}. The same or upgraded {@code IndexMetaData}._@throws IllegalStateException if the node should not start because the index is unsupported;public UnaryOperator<IndexMetaData> getIndexMetaDataUpgrader() {_        return UnaryOperator.identity()__    };provides,a,function,to,modify,index,meta,data,when,an,index,is,introduced,into,the,cluster,state,for,the,first,time,p,plugins,should,return,the,input,index,metadata,via,link,unary,operator,identity,if,no,upgrade,is,required,p,the,order,of,the,index,upgrader,calls,for,the,same,index,is,undefined,and,can,change,between,runs,so,it,is,expected,that,plugins,will,modify,only,indices,owned,by,them,to,avoid,conflicts,p,return,never,code,null,the,same,or,upgraded,code,index,meta,data,throws,illegal,state,exception,if,the,node,should,not,start,because,the,index,is,unsupported;public,unary,operator,index,meta,data,get,index,meta,data,upgrader,return,unary,operator,identity
Plugin -> public UnaryOperator<IndexMetaData> getIndexMetaDataUpgrader();1548865074;Provides a function to modify index meta data when an index is introduced into the cluster state for the first time._<p>_Plugins should return the input index metadata via {@link UnaryOperator#identity()} if no upgrade is required._<p>_The order of the index upgrader calls for the same index is undefined and can change between runs so, it is expected that_plugins will modify only indices owned by them to avoid conflicts._<p>_@return Never {@code null}. The same or upgraded {@code IndexMetaData}._@throws IllegalStateException if the node should not start because the index is unsupported;public UnaryOperator<IndexMetaData> getIndexMetaDataUpgrader() {_        return UnaryOperator.identity()__    };provides,a,function,to,modify,index,meta,data,when,an,index,is,introduced,into,the,cluster,state,for,the,first,time,p,plugins,should,return,the,input,index,metadata,via,link,unary,operator,identity,if,no,upgrade,is,required,p,the,order,of,the,index,upgrader,calls,for,the,same,index,is,undefined,and,can,change,between,runs,so,it,is,expected,that,plugins,will,modify,only,indices,owned,by,them,to,avoid,conflicts,p,return,never,code,null,the,same,or,upgraded,code,index,meta,data,throws,illegal,state,exception,if,the,node,should,not,start,because,the,index,is,unsupported;public,unary,operator,index,meta,data,get,index,meta,data,upgrader,return,unary,operator,identity
Plugin -> public List<ExecutorBuilder<?>> getExecutorBuilders(Settings settings);1524684173;Provides the list of this plugin's custom thread pools, empty if_none.__@param settings the current settings_@return executors builders for this plugin's custom thread pools;public List<ExecutorBuilder<?>> getExecutorBuilders(Settings settings) {_        return Collections.emptyList()__    };provides,the,list,of,this,plugin,s,custom,thread,pools,empty,if,none,param,settings,the,current,settings,return,executors,builders,for,this,plugin,s,custom,thread,pools;public,list,executor,builder,get,executor,builders,settings,settings,return,collections,empty,list
Plugin -> public List<ExecutorBuilder<?>> getExecutorBuilders(Settings settings);1527878678;Provides the list of this plugin's custom thread pools, empty if_none.__@param settings the current settings_@return executors builders for this plugin's custom thread pools;public List<ExecutorBuilder<?>> getExecutorBuilders(Settings settings) {_        return Collections.emptyList()__    };provides,the,list,of,this,plugin,s,custom,thread,pools,empty,if,none,param,settings,the,current,settings,return,executors,builders,for,this,plugin,s,custom,thread,pools;public,list,executor,builder,get,executor,builders,settings,settings,return,collections,empty,list
Plugin -> public List<ExecutorBuilder<?>> getExecutorBuilders(Settings settings);1529341607;Provides the list of this plugin's custom thread pools, empty if_none.__@param settings the current settings_@return executors builders for this plugin's custom thread pools;public List<ExecutorBuilder<?>> getExecutorBuilders(Settings settings) {_        return Collections.emptyList()__    };provides,the,list,of,this,plugin,s,custom,thread,pools,empty,if,none,param,settings,the,current,settings,return,executors,builders,for,this,plugin,s,custom,thread,pools;public,list,executor,builder,get,executor,builders,settings,settings,return,collections,empty,list
Plugin -> public List<ExecutorBuilder<?>> getExecutorBuilders(Settings settings);1536611444;Provides the list of this plugin's custom thread pools, empty if_none.__@param settings the current settings_@return executors builders for this plugin's custom thread pools;public List<ExecutorBuilder<?>> getExecutorBuilders(Settings settings) {_        return Collections.emptyList()__    };provides,the,list,of,this,plugin,s,custom,thread,pools,empty,if,none,param,settings,the,current,settings,return,executors,builders,for,this,plugin,s,custom,thread,pools;public,list,executor,builder,get,executor,builders,settings,settings,return,collections,empty,list
Plugin -> public List<ExecutorBuilder<?>> getExecutorBuilders(Settings settings);1548865074;Provides the list of this plugin's custom thread pools, empty if_none.__@param settings the current settings_@return executors builders for this plugin's custom thread pools;public List<ExecutorBuilder<?>> getExecutorBuilders(Settings settings) {_        return Collections.emptyList()__    };provides,the,list,of,this,plugin,s,custom,thread,pools,empty,if,none,param,settings,the,current,settings,return,executors,builders,for,this,plugin,s,custom,thread,pools;public,list,executor,builder,get,executor,builders,settings,settings,return,collections,empty,list
Plugin -> @Deprecated     public final void onModule(SettingsModule settingsModule);1524684173;Old-style guice settings extension point. {@code @Deprecated} and {@code final} to act as a signpost for plugin authors upgrading_from 2.x.__@deprecated use #getSettings and #getSettingsFilter instead;@Deprecated_    public final void onModule(SettingsModule settingsModule) {};old,style,guice,settings,extension,point,code,deprecated,and,code,final,to,act,as,a,signpost,for,plugin,authors,upgrading,from,2,x,deprecated,use,get,settings,and,get,settings,filter,instead;deprecated,public,final,void,on,module,settings,module,settings,module
Plugin -> @Deprecated     public final void onModule(SettingsModule settingsModule);1527878678;Old-style guice settings extension point. {@code @Deprecated} and {@code final} to act as a signpost for plugin authors upgrading_from 2.x.__@deprecated use #getSettings and #getSettingsFilter instead;@Deprecated_    public final void onModule(SettingsModule settingsModule) {};old,style,guice,settings,extension,point,code,deprecated,and,code,final,to,act,as,a,signpost,for,plugin,authors,upgrading,from,2,x,deprecated,use,get,settings,and,get,settings,filter,instead;deprecated,public,final,void,on,module,settings,module,settings,module
Plugin -> @Deprecated     public final void onModule(SettingsModule settingsModule);1529341607;Old-style guice settings extension point. {@code @Deprecated} and {@code final} to act as a signpost for plugin authors upgrading_from 2.x.__@deprecated use #getSettings and #getSettingsFilter instead;@Deprecated_    public final void onModule(SettingsModule settingsModule) {};old,style,guice,settings,extension,point,code,deprecated,and,code,final,to,act,as,a,signpost,for,plugin,authors,upgrading,from,2,x,deprecated,use,get,settings,and,get,settings,filter,instead;deprecated,public,final,void,on,module,settings,module,settings,module
Plugin -> @Deprecated     public final void onModule(SettingsModule settingsModule);1536611444;Old-style guice settings extension point. {@code @Deprecated} and {@code final} to act as a signpost for plugin authors upgrading_from 2.x.__@deprecated use #getSettings and #getSettingsFilter instead;@Deprecated_    public final void onModule(SettingsModule settingsModule) {};old,style,guice,settings,extension,point,code,deprecated,and,code,final,to,act,as,a,signpost,for,plugin,authors,upgrading,from,2,x,deprecated,use,get,settings,and,get,settings,filter,instead;deprecated,public,final,void,on,module,settings,module,settings,module
Plugin -> public List<BootstrapCheck> getBootstrapChecks();1524684173;Returns a list of checks that are enforced when a node starts up once a node has the transport protocol bound to a non-loopback_interface. In this case we assume the node is running in production and all bootstrap checks must pass. This allows plugins_to provide a better out of the box experience by pre-configuring otherwise (in production) mandatory settings or to enforce certain_configurations like OS settings or 3rd party resources.;public List<BootstrapCheck> getBootstrapChecks() { return Collections.emptyList()_ };returns,a,list,of,checks,that,are,enforced,when,a,node,starts,up,once,a,node,has,the,transport,protocol,bound,to,a,non,loopback,interface,in,this,case,we,assume,the,node,is,running,in,production,and,all,bootstrap,checks,must,pass,this,allows,plugins,to,provide,a,better,out,of,the,box,experience,by,pre,configuring,otherwise,in,production,mandatory,settings,or,to,enforce,certain,configurations,like,os,settings,or,3rd,party,resources;public,list,bootstrap,check,get,bootstrap,checks,return,collections,empty,list
Plugin -> public List<BootstrapCheck> getBootstrapChecks();1527878678;Returns a list of checks that are enforced when a node starts up once a node has the transport protocol bound to a non-loopback_interface. In this case we assume the node is running in production and all bootstrap checks must pass. This allows plugins_to provide a better out of the box experience by pre-configuring otherwise (in production) mandatory settings or to enforce certain_configurations like OS settings or 3rd party resources.;public List<BootstrapCheck> getBootstrapChecks() { return Collections.emptyList()_ };returns,a,list,of,checks,that,are,enforced,when,a,node,starts,up,once,a,node,has,the,transport,protocol,bound,to,a,non,loopback,interface,in,this,case,we,assume,the,node,is,running,in,production,and,all,bootstrap,checks,must,pass,this,allows,plugins,to,provide,a,better,out,of,the,box,experience,by,pre,configuring,otherwise,in,production,mandatory,settings,or,to,enforce,certain,configurations,like,os,settings,or,3rd,party,resources;public,list,bootstrap,check,get,bootstrap,checks,return,collections,empty,list
Plugin -> public List<BootstrapCheck> getBootstrapChecks();1529341607;Returns a list of checks that are enforced when a node starts up once a node has the transport protocol bound to a non-loopback_interface. In this case we assume the node is running in production and all bootstrap checks must pass. This allows plugins_to provide a better out of the box experience by pre-configuring otherwise (in production) mandatory settings or to enforce certain_configurations like OS settings or 3rd party resources.;public List<BootstrapCheck> getBootstrapChecks() { return Collections.emptyList()_ };returns,a,list,of,checks,that,are,enforced,when,a,node,starts,up,once,a,node,has,the,transport,protocol,bound,to,a,non,loopback,interface,in,this,case,we,assume,the,node,is,running,in,production,and,all,bootstrap,checks,must,pass,this,allows,plugins,to,provide,a,better,out,of,the,box,experience,by,pre,configuring,otherwise,in,production,mandatory,settings,or,to,enforce,certain,configurations,like,os,settings,or,3rd,party,resources;public,list,bootstrap,check,get,bootstrap,checks,return,collections,empty,list
Plugin -> public List<BootstrapCheck> getBootstrapChecks();1536611444;Returns a list of checks that are enforced when a node starts up once a node has the transport protocol bound to a non-loopback_interface. In this case we assume the node is running in production and all bootstrap checks must pass. This allows plugins_to provide a better out of the box experience by pre-configuring otherwise (in production) mandatory settings or to enforce certain_configurations like OS settings or 3rd party resources.;public List<BootstrapCheck> getBootstrapChecks() { return Collections.emptyList()_ };returns,a,list,of,checks,that,are,enforced,when,a,node,starts,up,once,a,node,has,the,transport,protocol,bound,to,a,non,loopback,interface,in,this,case,we,assume,the,node,is,running,in,production,and,all,bootstrap,checks,must,pass,this,allows,plugins,to,provide,a,better,out,of,the,box,experience,by,pre,configuring,otherwise,in,production,mandatory,settings,or,to,enforce,certain,configurations,like,os,settings,or,3rd,party,resources;public,list,bootstrap,check,get,bootstrap,checks,return,collections,empty,list
Plugin -> public List<BootstrapCheck> getBootstrapChecks();1548865074;Returns a list of checks that are enforced when a node starts up once a node has the transport protocol bound to a non-loopback_interface. In this case we assume the node is running in production and all bootstrap checks must pass. This allows plugins_to provide a better out of the box experience by pre-configuring otherwise (in production) mandatory settings or to enforce certain_configurations like OS settings or 3rd party resources.;public List<BootstrapCheck> getBootstrapChecks() { return Collections.emptyList()_ };returns,a,list,of,checks,that,are,enforced,when,a,node,starts,up,once,a,node,has,the,transport,protocol,bound,to,a,non,loopback,interface,in,this,case,we,assume,the,node,is,running,in,production,and,all,bootstrap,checks,must,pass,this,allows,plugins,to,provide,a,better,out,of,the,box,experience,by,pre,configuring,otherwise,in,production,mandatory,settings,or,to,enforce,certain,configurations,like,os,settings,or,3rd,party,resources;public,list,bootstrap,check,get,bootstrap,checks,return,collections,empty,list
Plugin -> public Collection<Class<? extends LifecycleComponent>> getGuiceServiceClasses();1524684173;Node level services that will be automatically started/stopped/closed. This classes must be constructed_by injection with guice.;public Collection<Class<? extends LifecycleComponent>> getGuiceServiceClasses() {_        return Collections.emptyList()__    };node,level,services,that,will,be,automatically,started,stopped,closed,this,classes,must,be,constructed,by,injection,with,guice;public,collection,class,extends,lifecycle,component,get,guice,service,classes,return,collections,empty,list
Plugin -> public Collection<Class<? extends LifecycleComponent>> getGuiceServiceClasses();1527878678;Node level services that will be automatically started/stopped/closed. This classes must be constructed_by injection with guice.;public Collection<Class<? extends LifecycleComponent>> getGuiceServiceClasses() {_        return Collections.emptyList()__    };node,level,services,that,will,be,automatically,started,stopped,closed,this,classes,must,be,constructed,by,injection,with,guice;public,collection,class,extends,lifecycle,component,get,guice,service,classes,return,collections,empty,list
Plugin -> public Collection<Class<? extends LifecycleComponent>> getGuiceServiceClasses();1529341607;Node level services that will be automatically started/stopped/closed. This classes must be constructed_by injection with guice.;public Collection<Class<? extends LifecycleComponent>> getGuiceServiceClasses() {_        return Collections.emptyList()__    };node,level,services,that,will,be,automatically,started,stopped,closed,this,classes,must,be,constructed,by,injection,with,guice;public,collection,class,extends,lifecycle,component,get,guice,service,classes,return,collections,empty,list
Plugin -> public Collection<Class<? extends LifecycleComponent>> getGuiceServiceClasses();1536611444;Node level services that will be automatically started/stopped/closed. This classes must be constructed_by injection with guice.;public Collection<Class<? extends LifecycleComponent>> getGuiceServiceClasses() {_        return Collections.emptyList()__    };node,level,services,that,will,be,automatically,started,stopped,closed,this,classes,must,be,constructed,by,injection,with,guice;public,collection,class,extends,lifecycle,component,get,guice,service,classes,return,collections,empty,list
Plugin -> public Collection<Class<? extends LifecycleComponent>> getGuiceServiceClasses();1548865074;Node level services that will be automatically started/stopped/closed. This classes must be constructed_by injection with guice.;public Collection<Class<? extends LifecycleComponent>> getGuiceServiceClasses() {_        return Collections.emptyList()__    };node,level,services,that,will,be,automatically,started,stopped,closed,this,classes,must,be,constructed,by,injection,with,guice;public,collection,class,extends,lifecycle,component,get,guice,service,classes,return,collections,empty,list
Plugin -> @Deprecated     public final void onModule(AnalysisModule module);1524684173;Old-style analysis extension point. {@code @Deprecated} and {@code final} to act as a signpost for plugin authors upgrading_from 2.x.__@deprecated implement {@link AnalysisPlugin} instead;@Deprecated_    public final void onModule(AnalysisModule module) {};old,style,analysis,extension,point,code,deprecated,and,code,final,to,act,as,a,signpost,for,plugin,authors,upgrading,from,2,x,deprecated,implement,link,analysis,plugin,instead;deprecated,public,final,void,on,module,analysis,module,module
Plugin -> @Deprecated     public final void onModule(AnalysisModule module);1527878678;Old-style analysis extension point. {@code @Deprecated} and {@code final} to act as a signpost for plugin authors upgrading_from 2.x.__@deprecated implement {@link AnalysisPlugin} instead;@Deprecated_    public final void onModule(AnalysisModule module) {};old,style,analysis,extension,point,code,deprecated,and,code,final,to,act,as,a,signpost,for,plugin,authors,upgrading,from,2,x,deprecated,implement,link,analysis,plugin,instead;deprecated,public,final,void,on,module,analysis,module,module
Plugin -> @Deprecated     public final void onModule(AnalysisModule module);1529341607;Old-style analysis extension point. {@code @Deprecated} and {@code final} to act as a signpost for plugin authors upgrading_from 2.x.__@deprecated implement {@link AnalysisPlugin} instead;@Deprecated_    public final void onModule(AnalysisModule module) {};old,style,analysis,extension,point,code,deprecated,and,code,final,to,act,as,a,signpost,for,plugin,authors,upgrading,from,2,x,deprecated,implement,link,analysis,plugin,instead;deprecated,public,final,void,on,module,analysis,module,module
Plugin -> @Deprecated     public final void onModule(AnalysisModule module);1536611444;Old-style analysis extension point. {@code @Deprecated} and {@code final} to act as a signpost for plugin authors upgrading_from 2.x.__@deprecated implement {@link AnalysisPlugin} instead;@Deprecated_    public final void onModule(AnalysisModule module) {};old,style,analysis,extension,point,code,deprecated,and,code,final,to,act,as,a,signpost,for,plugin,authors,upgrading,from,2,x,deprecated,implement,link,analysis,plugin,instead;deprecated,public,final,void,on,module,analysis,module,module
Plugin -> public Settings additionalSettings();1524684173;Additional node settings loaded by the plugin. Note that settings that are explicit in the nodes settings can't be_overwritten with the additional settings. These settings added if they don't exist.;public Settings additionalSettings() {_        return Settings.Builder.EMPTY_SETTINGS__    };additional,node,settings,loaded,by,the,plugin,note,that,settings,that,are,explicit,in,the,nodes,settings,can,t,be,overwritten,with,the,additional,settings,these,settings,added,if,they,don,t,exist;public,settings,additional,settings,return,settings,builder
Plugin -> public Settings additionalSettings();1527878678;Additional node settings loaded by the plugin. Note that settings that are explicit in the nodes settings can't be_overwritten with the additional settings. These settings added if they don't exist.;public Settings additionalSettings() {_        return Settings.Builder.EMPTY_SETTINGS__    };additional,node,settings,loaded,by,the,plugin,note,that,settings,that,are,explicit,in,the,nodes,settings,can,t,be,overwritten,with,the,additional,settings,these,settings,added,if,they,don,t,exist;public,settings,additional,settings,return,settings,builder
Plugin -> public Settings additionalSettings();1529341607;Additional node settings loaded by the plugin. Note that settings that are explicit in the nodes settings can't be_overwritten with the additional settings. These settings added if they don't exist.;public Settings additionalSettings() {_        return Settings.Builder.EMPTY_SETTINGS__    };additional,node,settings,loaded,by,the,plugin,note,that,settings,that,are,explicit,in,the,nodes,settings,can,t,be,overwritten,with,the,additional,settings,these,settings,added,if,they,don,t,exist;public,settings,additional,settings,return,settings,builder
Plugin -> public Settings additionalSettings();1536611444;Additional node settings loaded by the plugin. Note that settings that are explicit in the nodes settings can't be_overwritten with the additional settings. These settings added if they don't exist.;public Settings additionalSettings() {_        return Settings.Builder.EMPTY_SETTINGS__    };additional,node,settings,loaded,by,the,plugin,note,that,settings,that,are,explicit,in,the,nodes,settings,can,t,be,overwritten,with,the,additional,settings,these,settings,added,if,they,don,t,exist;public,settings,additional,settings,return,settings,builder
Plugin -> public Settings additionalSettings();1548865074;Additional node settings loaded by the plugin. Note that settings that are explicit in the nodes settings can't be_overwritten with the additional settings. These settings added if they don't exist.;public Settings additionalSettings() {_        return Settings.Builder.EMPTY_SETTINGS__    };additional,node,settings,loaded,by,the,plugin,note,that,settings,that,are,explicit,in,the,nodes,settings,can,t,be,overwritten,with,the,additional,settings,these,settings,added,if,they,don,t,exist;public,settings,additional,settings,return,settings,builder
Plugin -> public List<String> getSettingsFilter();1524684173;Returns a list of additional settings filter for this plugin;public List<String> getSettingsFilter() { return Collections.emptyList()_ };returns,a,list,of,additional,settings,filter,for,this,plugin;public,list,string,get,settings,filter,return,collections,empty,list
Plugin -> public List<String> getSettingsFilter();1527878678;Returns a list of additional settings filter for this plugin;public List<String> getSettingsFilter() { return Collections.emptyList()_ };returns,a,list,of,additional,settings,filter,for,this,plugin;public,list,string,get,settings,filter,return,collections,empty,list
Plugin -> public List<String> getSettingsFilter();1529341607;Returns a list of additional settings filter for this plugin;public List<String> getSettingsFilter() { return Collections.emptyList()_ };returns,a,list,of,additional,settings,filter,for,this,plugin;public,list,string,get,settings,filter,return,collections,empty,list
Plugin -> public List<String> getSettingsFilter();1536611444;Returns a list of additional settings filter for this plugin;public List<String> getSettingsFilter() { return Collections.emptyList()_ };returns,a,list,of,additional,settings,filter,for,this,plugin;public,list,string,get,settings,filter,return,collections,empty,list
Plugin -> public List<String> getSettingsFilter();1548865074;Returns a list of additional settings filter for this plugin;public List<String> getSettingsFilter() { return Collections.emptyList()_ };returns,a,list,of,additional,settings,filter,for,this,plugin;public,list,string,get,settings,filter,return,collections,empty,list
Plugin -> public Collection<Module> createGuiceModules();1524684173;Node level guice modules.;public Collection<Module> createGuiceModules() {_        return Collections.emptyList()__    };node,level,guice,modules;public,collection,module,create,guice,modules,return,collections,empty,list
Plugin -> public Collection<Module> createGuiceModules();1527878678;Node level guice modules.;public Collection<Module> createGuiceModules() {_        return Collections.emptyList()__    };node,level,guice,modules;public,collection,module,create,guice,modules,return,collections,empty,list
Plugin -> public Collection<Module> createGuiceModules();1529341607;Node level guice modules.;public Collection<Module> createGuiceModules() {_        return Collections.emptyList()__    };node,level,guice,modules;public,collection,module,create,guice,modules,return,collections,empty,list
Plugin -> public Collection<Module> createGuiceModules();1536611444;Node level guice modules.;public Collection<Module> createGuiceModules() {_        return Collections.emptyList()__    };node,level,guice,modules;public,collection,module,create,guice,modules,return,collections,empty,list
Plugin -> public Collection<Module> createGuiceModules();1548865074;Node level guice modules.;public Collection<Module> createGuiceModules() {_        return Collections.emptyList()__    };node,level,guice,modules;public,collection,module,create,guice,modules,return,collections,empty,list
Plugin -> @Override     public void close() throws IOException;1524684173;Close the resources opened by this plugin.__@throws IOException if the plugin failed to close its resources;@Override_    public void close() throws IOException {__    };close,the,resources,opened,by,this,plugin,throws,ioexception,if,the,plugin,failed,to,close,its,resources;override,public,void,close,throws,ioexception
Plugin -> @Override     public void close() throws IOException;1527878678;Close the resources opened by this plugin.__@throws IOException if the plugin failed to close its resources;@Override_    public void close() throws IOException {__    };close,the,resources,opened,by,this,plugin,throws,ioexception,if,the,plugin,failed,to,close,its,resources;override,public,void,close,throws,ioexception
Plugin -> @Override     public void close() throws IOException;1529341607;Close the resources opened by this plugin.__@throws IOException if the plugin failed to close its resources;@Override_    public void close() throws IOException {__    };close,the,resources,opened,by,this,plugin,throws,ioexception,if,the,plugin,failed,to,close,its,resources;override,public,void,close,throws,ioexception
Plugin -> @Override     public void close() throws IOException;1536611444;Close the resources opened by this plugin.__@throws IOException if the plugin failed to close its resources;@Override_    public void close() throws IOException {__    };close,the,resources,opened,by,this,plugin,throws,ioexception,if,the,plugin,failed,to,close,its,resources;override,public,void,close,throws,ioexception
Plugin -> @Override     public void close() throws IOException;1548865074;Close the resources opened by this plugin.__@throws IOException if the plugin failed to close its resources;@Override_    public void close() throws IOException {__    };close,the,resources,opened,by,this,plugin,throws,ioexception,if,the,plugin,failed,to,close,its,resources;override,public,void,close,throws,ioexception
Plugin -> public void onIndexModule(IndexModule indexModule);1524684173;Called before a new index is created on a node. The given module can be used to register index-level_extensions.;public void onIndexModule(IndexModule indexModule) {};called,before,a,new,index,is,created,on,a,node,the,given,module,can,be,used,to,register,index,level,extensions;public,void,on,index,module,index,module,index,module
Plugin -> public void onIndexModule(IndexModule indexModule);1527878678;Called before a new index is created on a node. The given module can be used to register index-level_extensions.;public void onIndexModule(IndexModule indexModule) {};called,before,a,new,index,is,created,on,a,node,the,given,module,can,be,used,to,register,index,level,extensions;public,void,on,index,module,index,module,index,module
Plugin -> public void onIndexModule(IndexModule indexModule);1529341607;Called before a new index is created on a node. The given module can be used to register index-level_extensions.;public void onIndexModule(IndexModule indexModule) {};called,before,a,new,index,is,created,on,a,node,the,given,module,can,be,used,to,register,index,level,extensions;public,void,on,index,module,index,module,index,module
Plugin -> public void onIndexModule(IndexModule indexModule);1536611444;Called before a new index is created on a node. The given module can be used to register index-level_extensions.;public void onIndexModule(IndexModule indexModule) {};called,before,a,new,index,is,created,on,a,node,the,given,module,can,be,used,to,register,index,level,extensions;public,void,on,index,module,index,module,index,module
Plugin -> public void onIndexModule(IndexModule indexModule);1548865074;Called before a new index is created on a node. The given module can be used to register index-level_extensions.;public void onIndexModule(IndexModule indexModule) {};called,before,a,new,index,is,created,on,a,node,the,given,module,can,be,used,to,register,index,level,extensions;public,void,on,index,module,index,module,index,module
Plugin -> @Deprecated     public final void onModule(IndexModule indexModule);1524684173;Old-style guice index level extension point. {@code @Deprecated} and {@code final} to act as a signpost for plugin authors upgrading_from 2.x.__@deprecated use #onIndexModule instead;@Deprecated_    public final void onModule(IndexModule indexModule) {};old,style,guice,index,level,extension,point,code,deprecated,and,code,final,to,act,as,a,signpost,for,plugin,authors,upgrading,from,2,x,deprecated,use,on,index,module,instead;deprecated,public,final,void,on,module,index,module,index,module
Plugin -> @Deprecated     public final void onModule(IndexModule indexModule);1527878678;Old-style guice index level extension point. {@code @Deprecated} and {@code final} to act as a signpost for plugin authors upgrading_from 2.x.__@deprecated use #onIndexModule instead;@Deprecated_    public final void onModule(IndexModule indexModule) {};old,style,guice,index,level,extension,point,code,deprecated,and,code,final,to,act,as,a,signpost,for,plugin,authors,upgrading,from,2,x,deprecated,use,on,index,module,instead;deprecated,public,final,void,on,module,index,module,index,module
Plugin -> @Deprecated     public final void onModule(IndexModule indexModule);1529341607;Old-style guice index level extension point. {@code @Deprecated} and {@code final} to act as a signpost for plugin authors upgrading_from 2.x.__@deprecated use #onIndexModule instead;@Deprecated_    public final void onModule(IndexModule indexModule) {};old,style,guice,index,level,extension,point,code,deprecated,and,code,final,to,act,as,a,signpost,for,plugin,authors,upgrading,from,2,x,deprecated,use,on,index,module,instead;deprecated,public,final,void,on,module,index,module,index,module
Plugin -> @Deprecated     public final void onModule(IndexModule indexModule);1536611444;Old-style guice index level extension point. {@code @Deprecated} and {@code final} to act as a signpost for plugin authors upgrading_from 2.x.__@deprecated use #onIndexModule instead;@Deprecated_    public final void onModule(IndexModule indexModule) {};old,style,guice,index,level,extension,point,code,deprecated,and,code,final,to,act,as,a,signpost,for,plugin,authors,upgrading,from,2,x,deprecated,use,on,index,module,instead;deprecated,public,final,void,on,module,index,module,index,module
Plugin -> public UnaryOperator<Map<String, IndexTemplateMetaData>> getIndexTemplateMetaDataUpgrader();1524684173;Provides a function to modify index template meta data on startup._<p>_Plugins should return the input template map via {@link UnaryOperator#identity()} if no upgrade is required._<p>_The order of the template upgrader calls is undefined and can change between runs so, it is expected that_plugins will modify only templates owned by them to avoid conflicts._<p>_@return Never {@code null}. The same or upgraded {@code IndexTemplateMetaData} map._@throws IllegalStateException if the node should not start because at least one {@code IndexTemplateMetaData}_cannot be upgraded;public UnaryOperator<Map<String, IndexTemplateMetaData>> getIndexTemplateMetaDataUpgrader() {_        return UnaryOperator.identity()__    };provides,a,function,to,modify,index,template,meta,data,on,startup,p,plugins,should,return,the,input,template,map,via,link,unary,operator,identity,if,no,upgrade,is,required,p,the,order,of,the,template,upgrader,calls,is,undefined,and,can,change,between,runs,so,it,is,expected,that,plugins,will,modify,only,templates,owned,by,them,to,avoid,conflicts,p,return,never,code,null,the,same,or,upgraded,code,index,template,meta,data,map,throws,illegal,state,exception,if,the,node,should,not,start,because,at,least,one,code,index,template,meta,data,cannot,be,upgraded;public,unary,operator,map,string,index,template,meta,data,get,index,template,meta,data,upgrader,return,unary,operator,identity
Plugin -> public UnaryOperator<Map<String, IndexTemplateMetaData>> getIndexTemplateMetaDataUpgrader();1527878678;Provides a function to modify index template meta data on startup._<p>_Plugins should return the input template map via {@link UnaryOperator#identity()} if no upgrade is required._<p>_The order of the template upgrader calls is undefined and can change between runs so, it is expected that_plugins will modify only templates owned by them to avoid conflicts._<p>_@return Never {@code null}. The same or upgraded {@code IndexTemplateMetaData} map._@throws IllegalStateException if the node should not start because at least one {@code IndexTemplateMetaData}_cannot be upgraded;public UnaryOperator<Map<String, IndexTemplateMetaData>> getIndexTemplateMetaDataUpgrader() {_        return UnaryOperator.identity()__    };provides,a,function,to,modify,index,template,meta,data,on,startup,p,plugins,should,return,the,input,template,map,via,link,unary,operator,identity,if,no,upgrade,is,required,p,the,order,of,the,template,upgrader,calls,is,undefined,and,can,change,between,runs,so,it,is,expected,that,plugins,will,modify,only,templates,owned,by,them,to,avoid,conflicts,p,return,never,code,null,the,same,or,upgraded,code,index,template,meta,data,map,throws,illegal,state,exception,if,the,node,should,not,start,because,at,least,one,code,index,template,meta,data,cannot,be,upgraded;public,unary,operator,map,string,index,template,meta,data,get,index,template,meta,data,upgrader,return,unary,operator,identity
Plugin -> public UnaryOperator<Map<String, IndexTemplateMetaData>> getIndexTemplateMetaDataUpgrader();1529341607;Provides a function to modify index template meta data on startup._<p>_Plugins should return the input template map via {@link UnaryOperator#identity()} if no upgrade is required._<p>_The order of the template upgrader calls is undefined and can change between runs so, it is expected that_plugins will modify only templates owned by them to avoid conflicts._<p>_@return Never {@code null}. The same or upgraded {@code IndexTemplateMetaData} map._@throws IllegalStateException if the node should not start because at least one {@code IndexTemplateMetaData}_cannot be upgraded;public UnaryOperator<Map<String, IndexTemplateMetaData>> getIndexTemplateMetaDataUpgrader() {_        return UnaryOperator.identity()__    };provides,a,function,to,modify,index,template,meta,data,on,startup,p,plugins,should,return,the,input,template,map,via,link,unary,operator,identity,if,no,upgrade,is,required,p,the,order,of,the,template,upgrader,calls,is,undefined,and,can,change,between,runs,so,it,is,expected,that,plugins,will,modify,only,templates,owned,by,them,to,avoid,conflicts,p,return,never,code,null,the,same,or,upgraded,code,index,template,meta,data,map,throws,illegal,state,exception,if,the,node,should,not,start,because,at,least,one,code,index,template,meta,data,cannot,be,upgraded;public,unary,operator,map,string,index,template,meta,data,get,index,template,meta,data,upgrader,return,unary,operator,identity
Plugin -> public UnaryOperator<Map<String, IndexTemplateMetaData>> getIndexTemplateMetaDataUpgrader();1536611444;Provides a function to modify index template meta data on startup._<p>_Plugins should return the input template map via {@link UnaryOperator#identity()} if no upgrade is required._<p>_The order of the template upgrader calls is undefined and can change between runs so, it is expected that_plugins will modify only templates owned by them to avoid conflicts._<p>_@return Never {@code null}. The same or upgraded {@code IndexTemplateMetaData} map._@throws IllegalStateException if the node should not start because at least one {@code IndexTemplateMetaData}_cannot be upgraded;public UnaryOperator<Map<String, IndexTemplateMetaData>> getIndexTemplateMetaDataUpgrader() {_        return UnaryOperator.identity()__    };provides,a,function,to,modify,index,template,meta,data,on,startup,p,plugins,should,return,the,input,template,map,via,link,unary,operator,identity,if,no,upgrade,is,required,p,the,order,of,the,template,upgrader,calls,is,undefined,and,can,change,between,runs,so,it,is,expected,that,plugins,will,modify,only,templates,owned,by,them,to,avoid,conflicts,p,return,never,code,null,the,same,or,upgraded,code,index,template,meta,data,map,throws,illegal,state,exception,if,the,node,should,not,start,because,at,least,one,code,index,template,meta,data,cannot,be,upgraded;public,unary,operator,map,string,index,template,meta,data,get,index,template,meta,data,upgrader,return,unary,operator,identity
Plugin -> public UnaryOperator<Map<String, IndexTemplateMetaData>> getIndexTemplateMetaDataUpgrader();1548865074;Provides a function to modify index template meta data on startup._<p>_Plugins should return the input template map via {@link UnaryOperator#identity()} if no upgrade is required._<p>_The order of the template upgrader calls is undefined and can change between runs so, it is expected that_plugins will modify only templates owned by them to avoid conflicts._<p>_@return Never {@code null}. The same or upgraded {@code IndexTemplateMetaData} map._@throws IllegalStateException if the node should not start because at least one {@code IndexTemplateMetaData}_cannot be upgraded;public UnaryOperator<Map<String, IndexTemplateMetaData>> getIndexTemplateMetaDataUpgrader() {_        return UnaryOperator.identity()__    };provides,a,function,to,modify,index,template,meta,data,on,startup,p,plugins,should,return,the,input,template,map,via,link,unary,operator,identity,if,no,upgrade,is,required,p,the,order,of,the,template,upgrader,calls,is,undefined,and,can,change,between,runs,so,it,is,expected,that,plugins,will,modify,only,templates,owned,by,them,to,avoid,conflicts,p,return,never,code,null,the,same,or,upgraded,code,index,template,meta,data,map,throws,illegal,state,exception,if,the,node,should,not,start,because,at,least,one,code,index,template,meta,data,cannot,be,upgraded;public,unary,operator,map,string,index,template,meta,data,get,index,template,meta,data,upgrader,return,unary,operator,identity
Plugin -> public List<NamedWriteableRegistry.Entry> getNamedWriteables();1524684173;Returns parsers for {@link NamedWriteable} this plugin will use over the transport protocol._@see NamedWriteableRegistry;public List<NamedWriteableRegistry.Entry> getNamedWriteables() {_        return Collections.emptyList()__    };returns,parsers,for,link,named,writeable,this,plugin,will,use,over,the,transport,protocol,see,named,writeable,registry;public,list,named,writeable,registry,entry,get,named,writeables,return,collections,empty,list
Plugin -> public List<NamedWriteableRegistry.Entry> getNamedWriteables();1527878678;Returns parsers for {@link NamedWriteable} this plugin will use over the transport protocol._@see NamedWriteableRegistry;public List<NamedWriteableRegistry.Entry> getNamedWriteables() {_        return Collections.emptyList()__    };returns,parsers,for,link,named,writeable,this,plugin,will,use,over,the,transport,protocol,see,named,writeable,registry;public,list,named,writeable,registry,entry,get,named,writeables,return,collections,empty,list
Plugin -> public List<NamedWriteableRegistry.Entry> getNamedWriteables();1529341607;Returns parsers for {@link NamedWriteable} this plugin will use over the transport protocol._@see NamedWriteableRegistry;public List<NamedWriteableRegistry.Entry> getNamedWriteables() {_        return Collections.emptyList()__    };returns,parsers,for,link,named,writeable,this,plugin,will,use,over,the,transport,protocol,see,named,writeable,registry;public,list,named,writeable,registry,entry,get,named,writeables,return,collections,empty,list
Plugin -> public List<NamedWriteableRegistry.Entry> getNamedWriteables();1536611444;Returns parsers for {@link NamedWriteable} this plugin will use over the transport protocol._@see NamedWriteableRegistry;public List<NamedWriteableRegistry.Entry> getNamedWriteables() {_        return Collections.emptyList()__    };returns,parsers,for,link,named,writeable,this,plugin,will,use,over,the,transport,protocol,see,named,writeable,registry;public,list,named,writeable,registry,entry,get,named,writeables,return,collections,empty,list
Plugin -> public List<NamedWriteableRegistry.Entry> getNamedWriteables();1548865074;Returns parsers for {@link NamedWriteable} this plugin will use over the transport protocol._@see NamedWriteableRegistry;public List<NamedWriteableRegistry.Entry> getNamedWriteables() {_        return Collections.emptyList()__    };returns,parsers,for,link,named,writeable,this,plugin,will,use,over,the,transport,protocol,see,named,writeable,registry;public,list,named,writeable,registry,entry,get,named,writeables,return,collections,empty,list
Plugin -> public List<NamedXContentRegistry.Entry> getNamedXContent();1524684173;Returns parsers for named objects this plugin will parse from {@link XContentParser#namedObject(Class, String, Object)}._@see NamedWriteableRegistry;public List<NamedXContentRegistry.Entry> getNamedXContent() {_        return Collections.emptyList()__    };returns,parsers,for,named,objects,this,plugin,will,parse,from,link,xcontent,parser,named,object,class,string,object,see,named,writeable,registry;public,list,named,xcontent,registry,entry,get,named,xcontent,return,collections,empty,list
Plugin -> public List<NamedXContentRegistry.Entry> getNamedXContent();1527878678;Returns parsers for named objects this plugin will parse from {@link XContentParser#namedObject(Class, String, Object)}._@see NamedWriteableRegistry;public List<NamedXContentRegistry.Entry> getNamedXContent() {_        return Collections.emptyList()__    };returns,parsers,for,named,objects,this,plugin,will,parse,from,link,xcontent,parser,named,object,class,string,object,see,named,writeable,registry;public,list,named,xcontent,registry,entry,get,named,xcontent,return,collections,empty,list
Plugin -> public List<NamedXContentRegistry.Entry> getNamedXContent();1529341607;Returns parsers for named objects this plugin will parse from {@link XContentParser#namedObject(Class, String, Object)}._@see NamedWriteableRegistry;public List<NamedXContentRegistry.Entry> getNamedXContent() {_        return Collections.emptyList()__    };returns,parsers,for,named,objects,this,plugin,will,parse,from,link,xcontent,parser,named,object,class,string,object,see,named,writeable,registry;public,list,named,xcontent,registry,entry,get,named,xcontent,return,collections,empty,list
Plugin -> public List<NamedXContentRegistry.Entry> getNamedXContent();1536611444;Returns parsers for named objects this plugin will parse from {@link XContentParser#namedObject(Class, String, Object)}._@see NamedWriteableRegistry;public List<NamedXContentRegistry.Entry> getNamedXContent() {_        return Collections.emptyList()__    };returns,parsers,for,named,objects,this,plugin,will,parse,from,link,xcontent,parser,named,object,class,string,object,see,named,writeable,registry;public,list,named,xcontent,registry,entry,get,named,xcontent,return,collections,empty,list
Plugin -> public List<NamedXContentRegistry.Entry> getNamedXContent();1548865074;Returns parsers for named objects this plugin will parse from {@link XContentParser#namedObject(Class, String, Object)}._@see NamedWriteableRegistry;public List<NamedXContentRegistry.Entry> getNamedXContent() {_        return Collections.emptyList()__    };returns,parsers,for,named,objects,this,plugin,will,parse,from,link,xcontent,parser,named,object,class,string,object,see,named,writeable,registry;public,list,named,xcontent,registry,entry,get,named,xcontent,return,collections,empty,list
