commented;modifiers;parameterAmount;loc;comment;code
false;public,static;1;3;;public static BiFunction<Transport.Connection, SearchActionListener, ActionListener> makeWrapper(ResponseCollectorService service) {     return (connection, originalListener) -> new SearchExecutionStatsCollector(originalListener, service, connection.getNode().getId()). }
false;public;1;14;;@Override public void onResponse(SearchPhaseResult response) {     QuerySearchResult queryResult = response.queryResult().     if (nodeId != null && queryResult != null) {         final long serviceTimeEWMA = queryResult.serviceTimeEWMA().         final int queueSize = queryResult.nodeQueueSize().         final long responseDuration = System.nanoTime() - startNanos.         // EWMA/queue size may be -1 if the query node doesn't support capturing it         if (serviceTimeEWMA > 0 && queueSize >= 0) {             collector.addNodeStatistics(nodeId, queueSize, responseDuration, serviceTimeEWMA).         }     }     listener.onResponse(response). }
false;public;1;4;;@Override public void onFailure(Exception e) {     listener.onFailure(e). }
