# id;timestamp;commentText;codeText;commentWords;codeWords
AggregatorFactory -> public final Aggregator create(Aggregator parent, boolean collectsFromSingleBucket) throws IOException;1524684173;Creates the aggregator__@param parent_The parent aggregator (if this is a top level factory, the_parent will be {@code null})_@param collectsFromSingleBucket_If true then the created aggregator will only be collected_with <tt>0</tt> as a bucket ordinal. Some factories can take_advantage of this in order to return more optimized_implementations.__@return The created aggregator;public final Aggregator create(Aggregator parent, boolean collectsFromSingleBucket) throws IOException {_        return createInternal(parent, collectsFromSingleBucket, this.factories.createPipelineAggregators(), this.metaData)__    };creates,the,aggregator,param,parent,the,parent,aggregator,if,this,is,a,top,level,factory,the,parent,will,be,code,null,param,collects,from,single,bucket,if,true,then,the,created,aggregator,will,only,be,collected,with,tt,0,tt,as,a,bucket,ordinal,some,factories,can,take,advantage,of,this,in,order,to,return,more,optimized,implementations,return,the,created,aggregator;public,final,aggregator,create,aggregator,parent,boolean,collects,from,single,bucket,throws,ioexception,return,create,internal,parent,collects,from,single,bucket,this,factories,create,pipeline,aggregators,this,meta,data
AggregatorFactory -> public final Aggregator create(Aggregator parent, boolean collectsFromSingleBucket) throws IOException;1525334055;Creates the aggregator__@param parent_The parent aggregator (if this is a top level factory, the_parent will be {@code null})_@param collectsFromSingleBucket_If true then the created aggregator will only be collected_with {@code 0} as a bucket ordinal. Some factories can take_advantage of this in order to return more optimized_implementations.__@return The created aggregator;public final Aggregator create(Aggregator parent, boolean collectsFromSingleBucket) throws IOException {_        return createInternal(parent, collectsFromSingleBucket, this.factories.createPipelineAggregators(), this.metaData)__    };creates,the,aggregator,param,parent,the,parent,aggregator,if,this,is,a,top,level,factory,the,parent,will,be,code,null,param,collects,from,single,bucket,if,true,then,the,created,aggregator,will,only,be,collected,with,code,0,as,a,bucket,ordinal,some,factories,can,take,advantage,of,this,in,order,to,return,more,optimized,implementations,return,the,created,aggregator;public,final,aggregator,create,aggregator,parent,boolean,collects,from,single,bucket,throws,ioexception,return,create,internal,parent,collects,from,single,bucket,this,factories,create,pipeline,aggregators,this,meta,data
AggregatorFactory -> public final Aggregator create(Aggregator parent, boolean collectsFromSingleBucket) throws IOException;1536314350;Creates the aggregator__@param parent_The parent aggregator (if this is a top level factory, the_parent will be {@code null})_@param collectsFromSingleBucket_If true then the created aggregator will only be collected_with {@code 0} as a bucket ordinal. Some factories can take_advantage of this in order to return more optimized_implementations.__@return The created aggregator;public final Aggregator create(Aggregator parent, boolean collectsFromSingleBucket) throws IOException {_        return createInternal(parent, collectsFromSingleBucket, this.factories.createPipelineAggregators(), this.metaData)__    };creates,the,aggregator,param,parent,the,parent,aggregator,if,this,is,a,top,level,factory,the,parent,will,be,code,null,param,collects,from,single,bucket,if,true,then,the,created,aggregator,will,only,be,collected,with,code,0,as,a,bucket,ordinal,some,factories,can,take,advantage,of,this,in,order,to,return,more,optimized,implementations,return,the,created,aggregator;public,final,aggregator,create,aggregator,parent,boolean,collects,from,single,bucket,throws,ioexception,return,create,internal,parent,collects,from,single,bucket,this,factories,create,pipeline,aggregators,this,meta,data
AggregatorFactory -> public final Aggregator create(Aggregator parent, boolean collectsFromSingleBucket) throws IOException;1536611444;Creates the aggregator__@param parent_The parent aggregator (if this is a top level factory, the_parent will be {@code null})_@param collectsFromSingleBucket_If true then the created aggregator will only be collected_with {@code 0} as a bucket ordinal. Some factories can take_advantage of this in order to return more optimized_implementations.__@return The created aggregator;public final Aggregator create(Aggregator parent, boolean collectsFromSingleBucket) throws IOException {_        return createInternal(parent, collectsFromSingleBucket, this.factories.createPipelineAggregators(), this.metaData)__    };creates,the,aggregator,param,parent,the,parent,aggregator,if,this,is,a,top,level,factory,the,parent,will,be,code,null,param,collects,from,single,bucket,if,true,then,the,created,aggregator,will,only,be,collected,with,code,0,as,a,bucket,ordinal,some,factories,can,take,advantage,of,this,in,order,to,return,more,optimized,implementations,return,the,created,aggregator;public,final,aggregator,create,aggregator,parent,boolean,collects,from,single,bucket,throws,ioexception,return,create,internal,parent,collects,from,single,bucket,this,factories,create,pipeline,aggregators,this,meta,data
AggregatorFactory -> protected static Aggregator asMultiBucketAggregator(final AggregatorFactory<?> factory, final SearchContext context,             final Aggregator parent) throws IOException;1524684173;Utility method. Given an {@link AggregatorFactory} that creates_{@link Aggregator}s that only know how to collect bucket <tt>0</tt>, this_returns an aggregator that can collect any bucket.;protected static Aggregator asMultiBucketAggregator(final AggregatorFactory<?> factory, final SearchContext context,_            final Aggregator parent) throws IOException {_        final Aggregator first = factory.create(parent, true)__        final BigArrays bigArrays = context.bigArrays()__        return new MultiBucketAggregatorWrapper(bigArrays, context, parent, factory, first)__    };utility,method,given,an,link,aggregator,factory,that,creates,link,aggregator,s,that,only,know,how,to,collect,bucket,tt,0,tt,this,returns,an,aggregator,that,can,collect,any,bucket;protected,static,aggregator,as,multi,bucket,aggregator,final,aggregator,factory,factory,final,search,context,context,final,aggregator,parent,throws,ioexception,final,aggregator,first,factory,create,parent,true,final,big,arrays,big,arrays,context,big,arrays,return,new,multi,bucket,aggregator,wrapper,big,arrays,context,parent,factory,first
AggregatorFactory -> protected static Aggregator asMultiBucketAggregator(final AggregatorFactory<?> factory, final SearchContext context,             final Aggregator parent) throws IOException;1525334055;Utility method. Given an {@link AggregatorFactory} that creates_{@link Aggregator}s that only know how to collect bucket {@code 0}, this_returns an aggregator that can collect any bucket.;protected static Aggregator asMultiBucketAggregator(final AggregatorFactory<?> factory, final SearchContext context,_            final Aggregator parent) throws IOException {_        final Aggregator first = factory.create(parent, true)__        final BigArrays bigArrays = context.bigArrays()__        return new MultiBucketAggregatorWrapper(bigArrays, context, parent, factory, first)__    };utility,method,given,an,link,aggregator,factory,that,creates,link,aggregator,s,that,only,know,how,to,collect,bucket,code,0,this,returns,an,aggregator,that,can,collect,any,bucket;protected,static,aggregator,as,multi,bucket,aggregator,final,aggregator,factory,factory,final,search,context,context,final,aggregator,parent,throws,ioexception,final,aggregator,first,factory,create,parent,true,final,big,arrays,big,arrays,context,big,arrays,return,new,multi,bucket,aggregator,wrapper,big,arrays,context,parent,factory,first
AggregatorFactory -> protected static Aggregator asMultiBucketAggregator(final AggregatorFactory<?> factory, final SearchContext context,             final Aggregator parent) throws IOException;1536314350;Utility method. Given an {@link AggregatorFactory} that creates_{@link Aggregator}s that only know how to collect bucket {@code 0}, this_returns an aggregator that can collect any bucket.;protected static Aggregator asMultiBucketAggregator(final AggregatorFactory<?> factory, final SearchContext context,_            final Aggregator parent) throws IOException {_        final Aggregator first = factory.create(parent, true)__        final BigArrays bigArrays = context.bigArrays()__        return new MultiBucketAggregatorWrapper(bigArrays, context, parent, factory, first)__    };utility,method,given,an,link,aggregator,factory,that,creates,link,aggregator,s,that,only,know,how,to,collect,bucket,code,0,this,returns,an,aggregator,that,can,collect,any,bucket;protected,static,aggregator,as,multi,bucket,aggregator,final,aggregator,factory,factory,final,search,context,context,final,aggregator,parent,throws,ioexception,final,aggregator,first,factory,create,parent,true,final,big,arrays,big,arrays,context,big,arrays,return,new,multi,bucket,aggregator,wrapper,big,arrays,context,parent,factory,first
AggregatorFactory -> protected static Aggregator asMultiBucketAggregator(final AggregatorFactory<?> factory, final SearchContext context,             final Aggregator parent) throws IOException;1536611444;Utility method. Given an {@link AggregatorFactory} that creates_{@link Aggregator}s that only know how to collect bucket {@code 0}, this_returns an aggregator that can collect any bucket.;protected static Aggregator asMultiBucketAggregator(final AggregatorFactory<?> factory, final SearchContext context,_            final Aggregator parent) throws IOException {_        final Aggregator first = factory.create(parent, true)__        final BigArrays bigArrays = context.bigArrays()__        return new MultiBucketAggregatorWrapper(bigArrays, context, parent, factory, first)__    };utility,method,given,an,link,aggregator,factory,that,creates,link,aggregator,s,that,only,know,how,to,collect,bucket,code,0,this,returns,an,aggregator,that,can,collect,any,bucket;protected,static,aggregator,as,multi,bucket,aggregator,final,aggregator,factory,factory,final,search,context,context,final,aggregator,parent,throws,ioexception,final,aggregator,first,factory,create,parent,true,final,big,arrays,big,arrays,context,big,arrays,return,new,multi,bucket,aggregator,wrapper,big,arrays,context,parent,factory,first
AggregatorFactory -> public AggregatorFactory(String name, SearchContext context, AggregatorFactory<?> parent,             AggregatorFactories.Builder subFactoriesBuilder, Map<String, Object> metaData) throws IOException;1524684173;Constructs a new aggregator factory.__@param name_The aggregation name_@throws IOException_if an error occurs creating the factory;public AggregatorFactory(String name, SearchContext context, AggregatorFactory<?> parent,_            AggregatorFactories.Builder subFactoriesBuilder, Map<String, Object> metaData) throws IOException {_        this.name = name__        this.context = context__        this.parent = parent__        this.factories = subFactoriesBuilder.build(context, this)__        this.metaData = metaData__    };constructs,a,new,aggregator,factory,param,name,the,aggregation,name,throws,ioexception,if,an,error,occurs,creating,the,factory;public,aggregator,factory,string,name,search,context,context,aggregator,factory,parent,aggregator,factories,builder,sub,factories,builder,map,string,object,meta,data,throws,ioexception,this,name,name,this,context,context,this,parent,parent,this,factories,sub,factories,builder,build,context,this,this,meta,data,meta,data
AggregatorFactory -> public AggregatorFactory(String name, SearchContext context, AggregatorFactory<?> parent,             AggregatorFactories.Builder subFactoriesBuilder, Map<String, Object> metaData) throws IOException;1525334055;Constructs a new aggregator factory.__@param name_The aggregation name_@throws IOException_if an error occurs creating the factory;public AggregatorFactory(String name, SearchContext context, AggregatorFactory<?> parent,_            AggregatorFactories.Builder subFactoriesBuilder, Map<String, Object> metaData) throws IOException {_        this.name = name__        this.context = context__        this.parent = parent__        this.factories = subFactoriesBuilder.build(context, this)__        this.metaData = metaData__    };constructs,a,new,aggregator,factory,param,name,the,aggregation,name,throws,ioexception,if,an,error,occurs,creating,the,factory;public,aggregator,factory,string,name,search,context,context,aggregator,factory,parent,aggregator,factories,builder,sub,factories,builder,map,string,object,meta,data,throws,ioexception,this,name,name,this,context,context,this,parent,parent,this,factories,sub,factories,builder,build,context,this,this,meta,data,meta,data
AggregatorFactory -> public AggregatorFactory(String name, SearchContext context, AggregatorFactory<?> parent,             AggregatorFactories.Builder subFactoriesBuilder, Map<String, Object> metaData) throws IOException;1536314350;Constructs a new aggregator factory.__@param name_The aggregation name_@throws IOException_if an error occurs creating the factory;public AggregatorFactory(String name, SearchContext context, AggregatorFactory<?> parent,_            AggregatorFactories.Builder subFactoriesBuilder, Map<String, Object> metaData) throws IOException {_        this.name = name__        this.context = context__        this.parent = parent__        this.factories = subFactoriesBuilder.build(context, this)__        this.metaData = metaData__    };constructs,a,new,aggregator,factory,param,name,the,aggregation,name,throws,ioexception,if,an,error,occurs,creating,the,factory;public,aggregator,factory,string,name,search,context,context,aggregator,factory,parent,aggregator,factories,builder,sub,factories,builder,map,string,object,meta,data,throws,ioexception,this,name,name,this,context,context,this,parent,parent,this,factories,sub,factories,builder,build,context,this,this,meta,data,meta,data
AggregatorFactory -> public AggregatorFactory(String name, SearchContext context, AggregatorFactory<?> parent,             AggregatorFactories.Builder subFactoriesBuilder, Map<String, Object> metaData) throws IOException;1536611444;Constructs a new aggregator factory.__@param name_The aggregation name_@throws IOException_if an error occurs creating the factory;public AggregatorFactory(String name, SearchContext context, AggregatorFactory<?> parent,_            AggregatorFactories.Builder subFactoriesBuilder, Map<String, Object> metaData) throws IOException {_        this.name = name__        this.context = context__        this.parent = parent__        this.factories = subFactoriesBuilder.build(context, this)__        this.metaData = metaData__    };constructs,a,new,aggregator,factory,param,name,the,aggregation,name,throws,ioexception,if,an,error,occurs,creating,the,factory;public,aggregator,factory,string,name,search,context,context,aggregator,factory,parent,aggregator,factories,builder,sub,factories,builder,map,string,object,meta,data,throws,ioexception,this,name,name,this,context,context,this,parent,parent,this,factories,sub,factories,builder,build,context,this,this,meta,data,meta,data
