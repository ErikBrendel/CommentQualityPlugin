commented;modifiers;parameterAmount;loc;comment;code
true;public;0;3;/**  * Returns the persistent settings for the cluster  * @return Settings  */ ;/**  * Returns the persistent settings for the cluster  * @return Settings  */ public Settings getPersistentSettings() {     return persistentSettings. }
true;public;0;3;/**  * Returns the transient settings for the cluster  * @return Settings  */ ;/**  * Returns the transient settings for the cluster  * @return Settings  */ public Settings getTransientSettings() {     return transientSettings. }
true;public;0;3;/**  * Returns the default settings for the cluster (only if {@code include_defaults} was set to true in the request)  * @return Settings  */ ;/**  * Returns the default settings for the cluster (only if {@code include_defaults} was set to true in the request)  * @return Settings  */ public Settings getDefaultSettings() {     return defaultSettings. }
true;public;1;11;/**  * Returns the string value of the setting for the specified index. The order of search is first  * in persistent settings the transient settings and finally the default settings.  * @param setting the name of the setting to get  * @return String  */ ;/**  * Returns the string value of the setting for the specified index. The order of search is first  * in persistent settings the transient settings and finally the default settings.  * @param setting the name of the setting to get  * @return String  */ public String getSetting(String setting) {     if (persistentSettings.hasValue(setting)) {         return persistentSettings.get(setting).     } else if (transientSettings.hasValue(setting)) {         return transientSettings.get(setting).     } else if (defaultSettings.hasValue(setting)) {         return defaultSettings.get(setting).     } else {         return null.     } }
false;public;2;20;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.startObject().     builder.startObject(PERSISTENT_FIELD).     persistentSettings.toXContent(builder, params).     builder.endObject().     builder.startObject(TRANSIENT_FIELD).     transientSettings.toXContent(builder, params).     builder.endObject().     if (defaultSettings.isEmpty() == false) {         builder.startObject(DEFAULTS_FIELD).         defaultSettings.toXContent(builder, params).         builder.endObject().     }     builder.endObject().     return builder. }
false;public,static;1;3;;public static ClusterGetSettingsResponse fromXContent(XContentParser parser) {     return PARSER.apply(parser, null). }
false;public;1;9;;@Override public boolean equals(Object o) {     if (this == o)         return true.     if (o == null || getClass() != o.getClass())         return false.     ClusterGetSettingsResponse that = (ClusterGetSettingsResponse) o.     return Objects.equals(transientSettings, that.transientSettings) && Objects.equals(persistentSettings, that.persistentSettings) && Objects.equals(defaultSettings, that.defaultSettings). }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(transientSettings, persistentSettings, defaultSettings). }
false;public;0;4;;@Override public String toString() {     return Strings.toString(this). }
