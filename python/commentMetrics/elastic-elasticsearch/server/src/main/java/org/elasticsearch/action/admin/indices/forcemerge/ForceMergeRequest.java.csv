commented;modifiers;parameterAmount;loc;comment;code
true;public;0;3;/**  * Will merge the index down to &lt.= maxNumSegments. By default, will cause the merge  * process to merge down to half the configured number of segments.  */ ;/**  * Will merge the index down to &lt.= maxNumSegments. By default, will cause the merge  * process to merge down to half the configured number of segments.  */ public int maxNumSegments() {     return maxNumSegments. }
true;public;1;4;/**  * Will merge the index down to &lt.= maxNumSegments. By default, will cause the merge  * process to merge down to half the configured number of segments.  */ ;/**  * Will merge the index down to &lt.= maxNumSegments. By default, will cause the merge  * process to merge down to half the configured number of segments.  */ public ForceMergeRequest maxNumSegments(int maxNumSegments) {     this.maxNumSegments = maxNumSegments.     return this. }
true;public;0;3;/**  * Should the merge only expunge deletes from the index, without full merging.  * Defaults to full merging ({@code false}).  */ ;/**  * Should the merge only expunge deletes from the index, without full merging.  * Defaults to full merging ({@code false}).  */ public boolean onlyExpungeDeletes() {     return onlyExpungeDeletes. }
true;public;1;4;/**  * Should the merge only expunge deletes from the index, without full merge.  * Defaults to full merging ({@code false}).  */ ;/**  * Should the merge only expunge deletes from the index, without full merge.  * Defaults to full merging ({@code false}).  */ public ForceMergeRequest onlyExpungeDeletes(boolean onlyExpungeDeletes) {     this.onlyExpungeDeletes = onlyExpungeDeletes.     return this. }
true;public;0;3;/**  * Should flush be performed after the merge. Defaults to {@code true}.  */ ;/**  * Should flush be performed after the merge. Defaults to {@code true}.  */ public boolean flush() {     return flush. }
true;public;1;4;/**  * Should flush be performed after the merge. Defaults to {@code true}.  */ ;/**  * Should flush be performed after the merge. Defaults to {@code true}.  */ public ForceMergeRequest flush(boolean flush) {     this.flush = flush.     return this. }
false;public;1;7;;@Override public void readFrom(StreamInput in) throws IOException {     super.readFrom(in).     maxNumSegments = in.readInt().     onlyExpungeDeletes = in.readBoolean().     flush = in.readBoolean(). }
false;public;1;7;;@Override public void writeTo(StreamOutput out) throws IOException {     super.writeTo(out).     out.writeInt(maxNumSegments).     out.writeBoolean(onlyExpungeDeletes).     out.writeBoolean(flush). }
false;public;0;8;;@Override public String toString() {     return "ForceMergeRequest{" + "maxNumSegments=" + maxNumSegments + ", onlyExpungeDeletes=" + onlyExpungeDeletes + ", flush=" + flush + '}'. }
