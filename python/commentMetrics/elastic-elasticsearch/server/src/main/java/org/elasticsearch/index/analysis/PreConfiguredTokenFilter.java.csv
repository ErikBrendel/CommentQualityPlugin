# id;timestamp;commentText;codeText;commentWords;codeWords
PreConfiguredTokenFilter -> public static PreConfiguredTokenFilter singleton(String name, boolean useFilterForMultitermQueries,             Function<TokenStream, TokenStream> create);1524684173;Create a pre-configured token filter that may not vary at all.;public static PreConfiguredTokenFilter singleton(String name, boolean useFilterForMultitermQueries,_            Function<TokenStream, TokenStream> create) {_        return new PreConfiguredTokenFilter(name, useFilterForMultitermQueries, CachingStrategy.ONE,_                (tokenStream, version) -> create.apply(tokenStream))__    };create,a,pre,configured,token,filter,that,may,not,vary,at,all;public,static,pre,configured,token,filter,singleton,string,name,boolean,use,filter,for,multiterm,queries,function,token,stream,token,stream,create,return,new,pre,configured,token,filter,name,use,filter,for,multiterm,queries,caching,strategy,one,token,stream,version,create,apply,token,stream
PreConfiguredTokenFilter -> public static PreConfiguredTokenFilter singleton(String name, boolean useFilterForMultitermQueries,             Function<TokenStream, TokenStream> create);1526574077;Create a pre-configured token filter that may not vary at all.;public static PreConfiguredTokenFilter singleton(String name, boolean useFilterForMultitermQueries,_            Function<TokenStream, TokenStream> create) {_        return new PreConfiguredTokenFilter(name, useFilterForMultitermQueries, CachingStrategy.ONE,_                (tokenStream, version) -> create.apply(tokenStream))__    };create,a,pre,configured,token,filter,that,may,not,vary,at,all;public,static,pre,configured,token,filter,singleton,string,name,boolean,use,filter,for,multiterm,queries,function,token,stream,token,stream,create,return,new,pre,configured,token,filter,name,use,filter,for,multiterm,queries,caching,strategy,one,token,stream,version,create,apply,token,stream
PreConfiguredTokenFilter -> public static PreConfiguredTokenFilter singleton(String name, boolean useFilterForMultitermQueries,             Function<TokenStream, TokenStream> create);1542897779;Create a pre-configured token filter that may not vary at all.;public static PreConfiguredTokenFilter singleton(String name, boolean useFilterForMultitermQueries,_            Function<TokenStream, TokenStream> create) {_        return new PreConfiguredTokenFilter(name, useFilterForMultitermQueries, CachingStrategy.ONE,_                (tokenStream, version) -> create.apply(tokenStream))__    };create,a,pre,configured,token,filter,that,may,not,vary,at,all;public,static,pre,configured,token,filter,singleton,string,name,boolean,use,filter,for,multiterm,queries,function,token,stream,token,stream,create,return,new,pre,configured,token,filter,name,use,filter,for,multiterm,queries,caching,strategy,one,token,stream,version,create,apply,token,stream
PreConfiguredTokenFilter -> public static PreConfiguredTokenFilter singleton(String name, boolean useFilterForMultitermQueries,             Function<TokenStream, TokenStream> create);1543487738;Create a pre-configured token filter that may not vary at all.;public static PreConfiguredTokenFilter singleton(String name, boolean useFilterForMultitermQueries,_            Function<TokenStream, TokenStream> create) {_        return new PreConfiguredTokenFilter(name, useFilterForMultitermQueries, false, CachingStrategy.ONE,_                (tokenStream, version) -> create.apply(tokenStream))__    };create,a,pre,configured,token,filter,that,may,not,vary,at,all;public,static,pre,configured,token,filter,singleton,string,name,boolean,use,filter,for,multiterm,queries,function,token,stream,token,stream,create,return,new,pre,configured,token,filter,name,use,filter,for,multiterm,queries,false,caching,strategy,one,token,stream,version,create,apply,token,stream
PreConfiguredTokenFilter -> public static PreConfiguredTokenFilter singleton(String name, boolean useFilterForMultitermQueries,             Function<TokenStream, TokenStream> create);1550074496;Create a pre-configured token filter that may not vary at all.;public static PreConfiguredTokenFilter singleton(String name, boolean useFilterForMultitermQueries,_            Function<TokenStream, TokenStream> create) {_        return new PreConfiguredTokenFilter(name, useFilterForMultitermQueries, true, CachingStrategy.ONE,_                (tokenStream, version) -> create.apply(tokenStream))__    };create,a,pre,configured,token,filter,that,may,not,vary,at,all;public,static,pre,configured,token,filter,singleton,string,name,boolean,use,filter,for,multiterm,queries,function,token,stream,token,stream,create,return,new,pre,configured,token,filter,name,use,filter,for,multiterm,queries,true,caching,strategy,one,token,stream,version,create,apply,token,stream
PreConfiguredTokenFilter -> public boolean shouldUseFilterForMultitermQueries();1524684173;Can this {@link TokenFilter} be used in multi-term queries?;public boolean shouldUseFilterForMultitermQueries() {_        return useFilterForMultitermQueries__    };can,this,link,token,filter,be,used,in,multi,term,queries;public,boolean,should,use,filter,for,multiterm,queries,return,use,filter,for,multiterm,queries
PreConfiguredTokenFilter -> public boolean shouldUseFilterForMultitermQueries();1526574077;Can this {@link TokenFilter} be used in multi-term queries?;public boolean shouldUseFilterForMultitermQueries() {_        return useFilterForMultitermQueries__    };can,this,link,token,filter,be,used,in,multi,term,queries;public,boolean,should,use,filter,for,multiterm,queries,return,use,filter,for,multiterm,queries
PreConfiguredTokenFilter -> public boolean shouldUseFilterForMultitermQueries();1542897779;Can this {@link TokenFilter} be used in multi-term queries?;public boolean shouldUseFilterForMultitermQueries() {_        return useFilterForMultitermQueries__    };can,this,link,token,filter,be,used,in,multi,term,queries;public,boolean,should,use,filter,for,multiterm,queries,return,use,filter,for,multiterm,queries
PreConfiguredTokenFilter -> public boolean shouldUseFilterForMultitermQueries();1543487738;Can this {@link TokenFilter} be used in multi-term queries?;public boolean shouldUseFilterForMultitermQueries() {_        return useFilterForMultitermQueries__    };can,this,link,token,filter,be,used,in,multi,term,queries;public,boolean,should,use,filter,for,multiterm,queries,return,use,filter,for,multiterm,queries
PreConfiguredTokenFilter -> public boolean shouldUseFilterForMultitermQueries();1550074496;Can this {@link TokenFilter} be used in multi-term queries?;public boolean shouldUseFilterForMultitermQueries() {_        return useFilterForMultitermQueries__    };can,this,link,token,filter,be,used,in,multi,term,queries;public,boolean,should,use,filter,for,multiterm,queries,return,use,filter,for,multiterm,queries
PreConfiguredTokenFilter -> public static PreConfiguredTokenFilter elasticsearchVersion(String name, boolean useFilterForMultitermQueries,             BiFunction<TokenStream, org.elasticsearch.Version, TokenStream> create);1524684173;Create a pre-configured token filter that may vary based on the Elasticsearch version.;public static PreConfiguredTokenFilter elasticsearchVersion(String name, boolean useFilterForMultitermQueries,_            BiFunction<TokenStream, org.elasticsearch.Version, TokenStream> create) {_        return new PreConfiguredTokenFilter(name, useFilterForMultitermQueries, CachingStrategy.ELASTICSEARCH, create)__    };create,a,pre,configured,token,filter,that,may,vary,based,on,the,elasticsearch,version;public,static,pre,configured,token,filter,elasticsearch,version,string,name,boolean,use,filter,for,multiterm,queries,bi,function,token,stream,org,elasticsearch,version,token,stream,create,return,new,pre,configured,token,filter,name,use,filter,for,multiterm,queries,caching,strategy,elasticsearch,create
PreConfiguredTokenFilter -> public static PreConfiguredTokenFilter elasticsearchVersion(String name, boolean useFilterForMultitermQueries,             BiFunction<TokenStream, org.elasticsearch.Version, TokenStream> create);1526574077;Create a pre-configured token filter that may vary based on the Elasticsearch version.;public static PreConfiguredTokenFilter elasticsearchVersion(String name, boolean useFilterForMultitermQueries,_            BiFunction<TokenStream, org.elasticsearch.Version, TokenStream> create) {_        return new PreConfiguredTokenFilter(name, useFilterForMultitermQueries, CachingStrategy.ELASTICSEARCH, create)__    };create,a,pre,configured,token,filter,that,may,vary,based,on,the,elasticsearch,version;public,static,pre,configured,token,filter,elasticsearch,version,string,name,boolean,use,filter,for,multiterm,queries,bi,function,token,stream,org,elasticsearch,version,token,stream,create,return,new,pre,configured,token,filter,name,use,filter,for,multiterm,queries,caching,strategy,elasticsearch,create
PreConfiguredTokenFilter -> public static PreConfiguredTokenFilter elasticsearchVersion(String name, boolean useFilterForMultitermQueries,             BiFunction<TokenStream, org.elasticsearch.Version, TokenStream> create);1542897779;Create a pre-configured token filter that may vary based on the Elasticsearch version.;public static PreConfiguredTokenFilter elasticsearchVersion(String name, boolean useFilterForMultitermQueries,_            BiFunction<TokenStream, org.elasticsearch.Version, TokenStream> create) {_        return new PreConfiguredTokenFilter(name, useFilterForMultitermQueries, CachingStrategy.ELASTICSEARCH, create)__    };create,a,pre,configured,token,filter,that,may,vary,based,on,the,elasticsearch,version;public,static,pre,configured,token,filter,elasticsearch,version,string,name,boolean,use,filter,for,multiterm,queries,bi,function,token,stream,org,elasticsearch,version,token,stream,create,return,new,pre,configured,token,filter,name,use,filter,for,multiterm,queries,caching,strategy,elasticsearch,create
PreConfiguredTokenFilter -> public static PreConfiguredTokenFilter elasticsearchVersion(String name, boolean useFilterForMultitermQueries,             BiFunction<TokenStream, org.elasticsearch.Version, TokenStream> create);1543487738;Create a pre-configured token filter that may vary based on the Elasticsearch version.;public static PreConfiguredTokenFilter elasticsearchVersion(String name, boolean useFilterForMultitermQueries,_            BiFunction<TokenStream, org.elasticsearch.Version, TokenStream> create) {_        return new PreConfiguredTokenFilter(name, useFilterForMultitermQueries, false, CachingStrategy.ELASTICSEARCH, create)__    };create,a,pre,configured,token,filter,that,may,vary,based,on,the,elasticsearch,version;public,static,pre,configured,token,filter,elasticsearch,version,string,name,boolean,use,filter,for,multiterm,queries,bi,function,token,stream,org,elasticsearch,version,token,stream,create,return,new,pre,configured,token,filter,name,use,filter,for,multiterm,queries,false,caching,strategy,elasticsearch,create
PreConfiguredTokenFilter -> public static PreConfiguredTokenFilter elasticsearchVersion(String name, boolean useFilterForMultitermQueries,             BiFunction<TokenStream, org.elasticsearch.Version, TokenStream> create);1550074496;Create a pre-configured token filter that may vary based on the Elasticsearch version.;public static PreConfiguredTokenFilter elasticsearchVersion(String name, boolean useFilterForMultitermQueries,_            BiFunction<TokenStream, org.elasticsearch.Version, TokenStream> create) {_        return new PreConfiguredTokenFilter(name, useFilterForMultitermQueries, true, CachingStrategy.ELASTICSEARCH, create)__    };create,a,pre,configured,token,filter,that,may,vary,based,on,the,elasticsearch,version;public,static,pre,configured,token,filter,elasticsearch,version,string,name,boolean,use,filter,for,multiterm,queries,bi,function,token,stream,org,elasticsearch,version,token,stream,create,return,new,pre,configured,token,filter,name,use,filter,for,multiterm,queries,true,caching,strategy,elasticsearch,create
PreConfiguredTokenFilter -> public static PreConfiguredTokenFilter luceneVersion(String name, boolean useFilterForMultitermQueries,             BiFunction<TokenStream, org.apache.lucene.util.Version, TokenStream> create);1524684173;Create a pre-configured token filter that may vary based on the Lucene version.;public static PreConfiguredTokenFilter luceneVersion(String name, boolean useFilterForMultitermQueries,_            BiFunction<TokenStream, org.apache.lucene.util.Version, TokenStream> create) {_        return new PreConfiguredTokenFilter(name, useFilterForMultitermQueries, CachingStrategy.LUCENE,_                (tokenStream, version) -> create.apply(tokenStream, version.luceneVersion))__    };create,a,pre,configured,token,filter,that,may,vary,based,on,the,lucene,version;public,static,pre,configured,token,filter,lucene,version,string,name,boolean,use,filter,for,multiterm,queries,bi,function,token,stream,org,apache,lucene,util,version,token,stream,create,return,new,pre,configured,token,filter,name,use,filter,for,multiterm,queries,caching,strategy,lucene,token,stream,version,create,apply,token,stream,version,lucene,version
PreConfiguredTokenFilter -> public static PreConfiguredTokenFilter luceneVersion(String name, boolean useFilterForMultitermQueries,             BiFunction<TokenStream, org.apache.lucene.util.Version, TokenStream> create);1526574077;Create a pre-configured token filter that may vary based on the Lucene version.;public static PreConfiguredTokenFilter luceneVersion(String name, boolean useFilterForMultitermQueries,_            BiFunction<TokenStream, org.apache.lucene.util.Version, TokenStream> create) {_        return new PreConfiguredTokenFilter(name, useFilterForMultitermQueries, CachingStrategy.LUCENE,_                (tokenStream, version) -> create.apply(tokenStream, version.luceneVersion))__    };create,a,pre,configured,token,filter,that,may,vary,based,on,the,lucene,version;public,static,pre,configured,token,filter,lucene,version,string,name,boolean,use,filter,for,multiterm,queries,bi,function,token,stream,org,apache,lucene,util,version,token,stream,create,return,new,pre,configured,token,filter,name,use,filter,for,multiterm,queries,caching,strategy,lucene,token,stream,version,create,apply,token,stream,version,lucene,version
PreConfiguredTokenFilter -> public static PreConfiguredTokenFilter luceneVersion(String name, boolean useFilterForMultitermQueries,             BiFunction<TokenStream, org.apache.lucene.util.Version, TokenStream> create);1542897779;Create a pre-configured token filter that may vary based on the Lucene version.;public static PreConfiguredTokenFilter luceneVersion(String name, boolean useFilterForMultitermQueries,_            BiFunction<TokenStream, org.apache.lucene.util.Version, TokenStream> create) {_        return new PreConfiguredTokenFilter(name, useFilterForMultitermQueries, CachingStrategy.LUCENE,_                (tokenStream, version) -> create.apply(tokenStream, version.luceneVersion))__    };create,a,pre,configured,token,filter,that,may,vary,based,on,the,lucene,version;public,static,pre,configured,token,filter,lucene,version,string,name,boolean,use,filter,for,multiterm,queries,bi,function,token,stream,org,apache,lucene,util,version,token,stream,create,return,new,pre,configured,token,filter,name,use,filter,for,multiterm,queries,caching,strategy,lucene,token,stream,version,create,apply,token,stream,version,lucene,version
PreConfiguredTokenFilter -> public static PreConfiguredTokenFilter luceneVersion(String name, boolean useFilterForMultitermQueries,             BiFunction<TokenStream, org.apache.lucene.util.Version, TokenStream> create);1543487738;Create a pre-configured token filter that may vary based on the Lucene version.;public static PreConfiguredTokenFilter luceneVersion(String name, boolean useFilterForMultitermQueries,_            BiFunction<TokenStream, org.apache.lucene.util.Version, TokenStream> create) {_        return new PreConfiguredTokenFilter(name, useFilterForMultitermQueries, false, CachingStrategy.LUCENE,_                (tokenStream, version) -> create.apply(tokenStream, version.luceneVersion))__    };create,a,pre,configured,token,filter,that,may,vary,based,on,the,lucene,version;public,static,pre,configured,token,filter,lucene,version,string,name,boolean,use,filter,for,multiterm,queries,bi,function,token,stream,org,apache,lucene,util,version,token,stream,create,return,new,pre,configured,token,filter,name,use,filter,for,multiterm,queries,false,caching,strategy,lucene,token,stream,version,create,apply,token,stream,version,lucene,version
PreConfiguredTokenFilter -> public static PreConfiguredTokenFilter luceneVersion(String name, boolean useFilterForMultitermQueries,             BiFunction<TokenStream, org.apache.lucene.util.Version, TokenStream> create);1550074496;Create a pre-configured token filter that may vary based on the Lucene version.;public static PreConfiguredTokenFilter luceneVersion(String name, boolean useFilterForMultitermQueries,_            BiFunction<TokenStream, org.apache.lucene.util.Version, TokenStream> create) {_        return new PreConfiguredTokenFilter(name, useFilterForMultitermQueries, true, CachingStrategy.LUCENE,_                (tokenStream, version) -> create.apply(tokenStream, version.luceneVersion))__    };create,a,pre,configured,token,filter,that,may,vary,based,on,the,lucene,version;public,static,pre,configured,token,filter,lucene,version,string,name,boolean,use,filter,for,multiterm,queries,bi,function,token,stream,org,apache,lucene,util,version,token,stream,create,return,new,pre,configured,token,filter,name,use,filter,for,multiterm,queries,true,caching,strategy,lucene,token,stream,version,create,apply,token,stream,version,lucene,version
PreConfiguredTokenFilter -> public static PreConfiguredTokenFilter singletonWithVersion(String name, boolean useFilterForMultitermQueries,             BiFunction<TokenStream, Version, TokenStream> create);1526574077;Create a pre-configured token filter that may not vary at all.;public static PreConfiguredTokenFilter singletonWithVersion(String name, boolean useFilterForMultitermQueries,_            BiFunction<TokenStream, Version, TokenStream> create) {_        return new PreConfiguredTokenFilter(name, useFilterForMultitermQueries, CachingStrategy.ONE,_                (tokenStream, version) -> create.apply(tokenStream, version))__    };create,a,pre,configured,token,filter,that,may,not,vary,at,all;public,static,pre,configured,token,filter,singleton,with,version,string,name,boolean,use,filter,for,multiterm,queries,bi,function,token,stream,version,token,stream,create,return,new,pre,configured,token,filter,name,use,filter,for,multiterm,queries,caching,strategy,one,token,stream,version,create,apply,token,stream,version
PreConfiguredTokenFilter -> public static PreConfiguredTokenFilter singletonWithVersion(String name, boolean useFilterForMultitermQueries,             BiFunction<TokenStream, Version, TokenStream> create);1542897779;Create a pre-configured token filter that may not vary at all.;public static PreConfiguredTokenFilter singletonWithVersion(String name, boolean useFilterForMultitermQueries,_            BiFunction<TokenStream, Version, TokenStream> create) {_        return new PreConfiguredTokenFilter(name, useFilterForMultitermQueries, CachingStrategy.ONE,_                (tokenStream, version) -> create.apply(tokenStream, version))__    };create,a,pre,configured,token,filter,that,may,not,vary,at,all;public,static,pre,configured,token,filter,singleton,with,version,string,name,boolean,use,filter,for,multiterm,queries,bi,function,token,stream,version,token,stream,create,return,new,pre,configured,token,filter,name,use,filter,for,multiterm,queries,caching,strategy,one,token,stream,version,create,apply,token,stream,version
PreConfiguredTokenFilter -> public static PreConfiguredTokenFilter singletonWithVersion(String name, boolean useFilterForMultitermQueries,             BiFunction<TokenStream, Version, TokenStream> create);1543487738;Create a pre-configured token filter that may not vary at all.;public static PreConfiguredTokenFilter singletonWithVersion(String name, boolean useFilterForMultitermQueries,_            BiFunction<TokenStream, Version, TokenStream> create) {_        return new PreConfiguredTokenFilter(name, useFilterForMultitermQueries, false, CachingStrategy.ONE,_                (tokenStream, version) -> create.apply(tokenStream, version))__    };create,a,pre,configured,token,filter,that,may,not,vary,at,all;public,static,pre,configured,token,filter,singleton,with,version,string,name,boolean,use,filter,for,multiterm,queries,bi,function,token,stream,version,token,stream,create,return,new,pre,configured,token,filter,name,use,filter,for,multiterm,queries,false,caching,strategy,one,token,stream,version,create,apply,token,stream,version
PreConfiguredTokenFilter -> public static PreConfiguredTokenFilter singletonWithVersion(String name, boolean useFilterForMultitermQueries,             BiFunction<TokenStream, Version, TokenStream> create);1550074496;Create a pre-configured token filter that may vary based on the Elasticsearch version.;public static PreConfiguredTokenFilter singletonWithVersion(String name, boolean useFilterForMultitermQueries,_            BiFunction<TokenStream, Version, TokenStream> create) {_        return new PreConfiguredTokenFilter(name, useFilterForMultitermQueries, true, CachingStrategy.ONE,_                (tokenStream, version) -> create.apply(tokenStream, version))__    };create,a,pre,configured,token,filter,that,may,vary,based,on,the,elasticsearch,version;public,static,pre,configured,token,filter,singleton,with,version,string,name,boolean,use,filter,for,multiterm,queries,bi,function,token,stream,version,token,stream,create,return,new,pre,configured,token,filter,name,use,filter,for,multiterm,queries,true,caching,strategy,one,token,stream,version,create,apply,token,stream,version
