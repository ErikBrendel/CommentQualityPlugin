# id;timestamp;commentText;codeText;commentWords;codeWords
ClusterHealthRequest -> public ClusterHealthRequest waitForNodes(String waitForNodes);1524684173;Waits for N number of nodes. Use "12" for exact mapping, "&gt_12" and "&lt_12" for range.;public ClusterHealthRequest waitForNodes(String waitForNodes) {_        this.waitForNodes = waitForNodes__        return this__    };waits,for,n,number,of,nodes,use,12,for,exact,mapping,gt,12,and,lt,12,for,range;public,cluster,health,request,wait,for,nodes,string,wait,for,nodes,this,wait,for,nodes,wait,for,nodes,return,this
ClusterHealthRequest -> public ClusterHealthRequest waitForNodes(String waitForNodes);1528804324;Waits for N number of nodes. Use "12" for exact mapping, "&gt_12" and "&lt_12" for range.;public ClusterHealthRequest waitForNodes(String waitForNodes) {_        this.waitForNodes = waitForNodes__        return this__    };waits,for,n,number,of,nodes,use,12,for,exact,mapping,gt,12,and,lt,12,for,range;public,cluster,health,request,wait,for,nodes,string,wait,for,nodes,this,wait,for,nodes,wait,for,nodes,return,this
ClusterHealthRequest -> public ClusterHealthRequest waitForNodes(String waitForNodes);1528904315;Waits for N number of nodes. Use "12" for exact mapping, "&gt_12" and "&lt_12" for range.;public ClusterHealthRequest waitForNodes(String waitForNodes) {_        this.waitForNodes = waitForNodes__        return this__    };waits,for,n,number,of,nodes,use,12,for,exact,mapping,gt,12,and,lt,12,for,range;public,cluster,health,request,wait,for,nodes,string,wait,for,nodes,this,wait,for,nodes,wait,for,nodes,return,this
ClusterHealthRequest -> public ClusterHealthRequest waitForNoRelocatingShards(boolean waitForNoRelocatingShards);1524684173;Sets whether the request should wait for there to be no relocating shards before_retrieving the cluster health status.  Defaults to {@code false}, meaning the_operation does not wait on there being no more relocating shards.  Set to <code>true</code>_to wait until the number of relocating shards in the cluster is 0.;public ClusterHealthRequest waitForNoRelocatingShards(boolean waitForNoRelocatingShards) {_        this.waitForNoRelocatingShards = waitForNoRelocatingShards__        return this__    };sets,whether,the,request,should,wait,for,there,to,be,no,relocating,shards,before,retrieving,the,cluster,health,status,defaults,to,code,false,meaning,the,operation,does,not,wait,on,there,being,no,more,relocating,shards,set,to,code,true,code,to,wait,until,the,number,of,relocating,shards,in,the,cluster,is,0;public,cluster,health,request,wait,for,no,relocating,shards,boolean,wait,for,no,relocating,shards,this,wait,for,no,relocating,shards,wait,for,no,relocating,shards,return,this
ClusterHealthRequest -> public ClusterHealthRequest waitForNoRelocatingShards(boolean waitForNoRelocatingShards);1528804324;Sets whether the request should wait for there to be no relocating shards before_retrieving the cluster health status.  Defaults to {@code false}, meaning the_operation does not wait on there being no more relocating shards.  Set to <code>true</code>_to wait until the number of relocating shards in the cluster is 0.;public ClusterHealthRequest waitForNoRelocatingShards(boolean waitForNoRelocatingShards) {_        this.waitForNoRelocatingShards = waitForNoRelocatingShards__        return this__    };sets,whether,the,request,should,wait,for,there,to,be,no,relocating,shards,before,retrieving,the,cluster,health,status,defaults,to,code,false,meaning,the,operation,does,not,wait,on,there,being,no,more,relocating,shards,set,to,code,true,code,to,wait,until,the,number,of,relocating,shards,in,the,cluster,is,0;public,cluster,health,request,wait,for,no,relocating,shards,boolean,wait,for,no,relocating,shards,this,wait,for,no,relocating,shards,wait,for,no,relocating,shards,return,this
ClusterHealthRequest -> public ClusterHealthRequest waitForNoRelocatingShards(boolean waitForNoRelocatingShards);1528904315;Sets whether the request should wait for there to be no relocating shards before_retrieving the cluster health status.  Defaults to {@code false}, meaning the_operation does not wait on there being no more relocating shards.  Set to <code>true</code>_to wait until the number of relocating shards in the cluster is 0.;public ClusterHealthRequest waitForNoRelocatingShards(boolean waitForNoRelocatingShards) {_        this.waitForNoRelocatingShards = waitForNoRelocatingShards__        return this__    };sets,whether,the,request,should,wait,for,there,to,be,no,relocating,shards,before,retrieving,the,cluster,health,status,defaults,to,code,false,meaning,the,operation,does,not,wait,on,there,being,no,more,relocating,shards,set,to,code,true,code,to,wait,until,the,number,of,relocating,shards,in,the,cluster,is,0;public,cluster,health,request,wait,for,no,relocating,shards,boolean,wait,for,no,relocating,shards,this,wait,for,no,relocating,shards,wait,for,no,relocating,shards,return,this
ClusterHealthRequest -> public void level(Level level);1528804324;Set the level of detail for the health information to be returned._Only used by the high-level REST Client_The default value is 'shards' so it is backward compatible with the transport client behaviour.;public void level(Level level) {_        this.level = Objects.requireNonNull(level, "level must not be null")__    };set,the,level,of,detail,for,the,health,information,to,be,returned,only,used,by,the,high,level,rest,client,the,default,value,is,shards,so,it,is,backward,compatible,with,the,transport,client,behaviour;public,void,level,level,level,this,level,objects,require,non,null,level,level,must,not,be,null
ClusterHealthRequest -> public void level(Level level);1528904315;Set the level of detail for the health information to be returned._Only used by the high-level REST Client.;public void level(Level level) {_        this.level = Objects.requireNonNull(level, "level must not be null")__    };set,the,level,of,detail,for,the,health,information,to,be,returned,only,used,by,the,high,level,rest,client;public,void,level,level,level,this,level,objects,require,non,null,level,level,must,not,be,null
ClusterHealthRequest -> public Level level();1528804324;Get the level of detail for the health information to be returned._Only used by the high-level REST Client._The default value is 'shards' so it is backward compatible with the transport client behaviour.;public Level level() {_        return level__    };get,the,level,of,detail,for,the,health,information,to,be,returned,only,used,by,the,high,level,rest,client,the,default,value,is,shards,so,it,is,backward,compatible,with,the,transport,client,behaviour;public,level,level,return,level
ClusterHealthRequest -> public Level level();1528904315;Get the level of detail for the health information to be returned._Only used by the high-level REST Client.;public Level level() {_        return level__    };get,the,level,of,detail,for,the,health,information,to,be,returned,only,used,by,the,high,level,rest,client;public,level,level,return,level
ClusterHealthRequest -> public ClusterHealthRequest waitForActiveShards(final int waitForActiveShards);1524684173;A shortcut for {@link #waitForActiveShards(ActiveShardCount)} where the numerical_shard count is passed in, instead of having to first call {@link ActiveShardCount#from(int)}_to get the ActiveShardCount.;public ClusterHealthRequest waitForActiveShards(final int waitForActiveShards) {_        return waitForActiveShards(ActiveShardCount.from(waitForActiveShards))__    };a,shortcut,for,link,wait,for,active,shards,active,shard,count,where,the,numerical,shard,count,is,passed,in,instead,of,having,to,first,call,link,active,shard,count,from,int,to,get,the,active,shard,count;public,cluster,health,request,wait,for,active,shards,final,int,wait,for,active,shards,return,wait,for,active,shards,active,shard,count,from,wait,for,active,shards
ClusterHealthRequest -> public ClusterHealthRequest waitForActiveShards(final int waitForActiveShards);1528804324;A shortcut for {@link #waitForActiveShards(ActiveShardCount)} where the numerical_shard count is passed in, instead of having to first call {@link ActiveShardCount#from(int)}_to get the ActiveShardCount.;public ClusterHealthRequest waitForActiveShards(final int waitForActiveShards) {_        return waitForActiveShards(ActiveShardCount.from(waitForActiveShards))__    };a,shortcut,for,link,wait,for,active,shards,active,shard,count,where,the,numerical,shard,count,is,passed,in,instead,of,having,to,first,call,link,active,shard,count,from,int,to,get,the,active,shard,count;public,cluster,health,request,wait,for,active,shards,final,int,wait,for,active,shards,return,wait,for,active,shards,active,shard,count,from,wait,for,active,shards
ClusterHealthRequest -> public ClusterHealthRequest waitForActiveShards(final int waitForActiveShards);1528904315;A shortcut for {@link #waitForActiveShards(ActiveShardCount)} where the numerical_shard count is passed in, instead of having to first call {@link ActiveShardCount#from(int)}_to get the ActiveShardCount.;public ClusterHealthRequest waitForActiveShards(final int waitForActiveShards) {_        return waitForActiveShards(ActiveShardCount.from(waitForActiveShards))__    };a,shortcut,for,link,wait,for,active,shards,active,shard,count,where,the,numerical,shard,count,is,passed,in,instead,of,having,to,first,call,link,active,shard,count,from,int,to,get,the,active,shard,count;public,cluster,health,request,wait,for,active,shards,final,int,wait,for,active,shards,return,wait,for,active,shards,active,shard,count,from,wait,for,active,shards
ClusterHealthRequest -> public ClusterHealthRequest waitForNoInitializingShards(boolean waitForNoInitializingShards);1524684173;Sets whether the request should wait for there to be no initializing shards before_retrieving the cluster health status.  Defaults to {@code false}, meaning the_operation does not wait on there being no more initializing shards.  Set to <code>true</code>_to wait until the number of initializing shards in the cluster is 0.;public ClusterHealthRequest waitForNoInitializingShards(boolean waitForNoInitializingShards) {_        this.waitForNoInitializingShards = waitForNoInitializingShards__        return this__    };sets,whether,the,request,should,wait,for,there,to,be,no,initializing,shards,before,retrieving,the,cluster,health,status,defaults,to,code,false,meaning,the,operation,does,not,wait,on,there,being,no,more,initializing,shards,set,to,code,true,code,to,wait,until,the,number,of,initializing,shards,in,the,cluster,is,0;public,cluster,health,request,wait,for,no,initializing,shards,boolean,wait,for,no,initializing,shards,this,wait,for,no,initializing,shards,wait,for,no,initializing,shards,return,this
ClusterHealthRequest -> public ClusterHealthRequest waitForNoInitializingShards(boolean waitForNoInitializingShards);1528804324;Sets whether the request should wait for there to be no initializing shards before_retrieving the cluster health status.  Defaults to {@code false}, meaning the_operation does not wait on there being no more initializing shards.  Set to <code>true</code>_to wait until the number of initializing shards in the cluster is 0.;public ClusterHealthRequest waitForNoInitializingShards(boolean waitForNoInitializingShards) {_        this.waitForNoInitializingShards = waitForNoInitializingShards__        return this__    };sets,whether,the,request,should,wait,for,there,to,be,no,initializing,shards,before,retrieving,the,cluster,health,status,defaults,to,code,false,meaning,the,operation,does,not,wait,on,there,being,no,more,initializing,shards,set,to,code,true,code,to,wait,until,the,number,of,initializing,shards,in,the,cluster,is,0;public,cluster,health,request,wait,for,no,initializing,shards,boolean,wait,for,no,initializing,shards,this,wait,for,no,initializing,shards,wait,for,no,initializing,shards,return,this
ClusterHealthRequest -> public ClusterHealthRequest waitForNoInitializingShards(boolean waitForNoInitializingShards);1528904315;Sets whether the request should wait for there to be no initializing shards before_retrieving the cluster health status.  Defaults to {@code false}, meaning the_operation does not wait on there being no more initializing shards.  Set to <code>true</code>_to wait until the number of initializing shards in the cluster is 0.;public ClusterHealthRequest waitForNoInitializingShards(boolean waitForNoInitializingShards) {_        this.waitForNoInitializingShards = waitForNoInitializingShards__        return this__    };sets,whether,the,request,should,wait,for,there,to,be,no,initializing,shards,before,retrieving,the,cluster,health,status,defaults,to,code,false,meaning,the,operation,does,not,wait,on,there,being,no,more,initializing,shards,set,to,code,true,code,to,wait,until,the,number,of,initializing,shards,in,the,cluster,is,0;public,cluster,health,request,wait,for,no,initializing,shards,boolean,wait,for,no,initializing,shards,this,wait,for,no,initializing,shards,wait,for,no,initializing,shards,return,this
ClusterHealthRequest -> public ClusterHealthRequest waitForActiveShards(ActiveShardCount waitForActiveShards);1524684173;Sets the number of shard copies that must be active across all indices before getting the_health status. Defaults to {@link ActiveShardCount#NONE}, meaning we don't wait on any active shards._Set this value to {@link ActiveShardCount#ALL} to wait for all shards (primary and_all replicas) to be active across all indices in the cluster. Otherwise, use_{@link ActiveShardCount#from(int)} to set this value to any non-negative integer, up to the_total number of shard copies to wait for.;public ClusterHealthRequest waitForActiveShards(ActiveShardCount waitForActiveShards) {_        if (waitForActiveShards.equals(ActiveShardCount.DEFAULT)) {_            _            this.waitForActiveShards = ActiveShardCount.NONE__        } else {_            this.waitForActiveShards = waitForActiveShards__        }_        return this__    };sets,the,number,of,shard,copies,that,must,be,active,across,all,indices,before,getting,the,health,status,defaults,to,link,active,shard,count,none,meaning,we,don,t,wait,on,any,active,shards,set,this,value,to,link,active,shard,count,all,to,wait,for,all,shards,primary,and,all,replicas,to,be,active,across,all,indices,in,the,cluster,otherwise,use,link,active,shard,count,from,int,to,set,this,value,to,any,non,negative,integer,up,to,the,total,number,of,shard,copies,to,wait,for;public,cluster,health,request,wait,for,active,shards,active,shard,count,wait,for,active,shards,if,wait,for,active,shards,equals,active,shard,count,default,this,wait,for,active,shards,active,shard,count,none,else,this,wait,for,active,shards,wait,for,active,shards,return,this
ClusterHealthRequest -> public ClusterHealthRequest waitForActiveShards(ActiveShardCount waitForActiveShards);1528804324;Sets the number of shard copies that must be active across all indices before getting the_health status. Defaults to {@link ActiveShardCount#NONE}, meaning we don't wait on any active shards._Set this value to {@link ActiveShardCount#ALL} to wait for all shards (primary and_all replicas) to be active across all indices in the cluster. Otherwise, use_{@link ActiveShardCount#from(int)} to set this value to any non-negative integer, up to the_total number of shard copies to wait for.;public ClusterHealthRequest waitForActiveShards(ActiveShardCount waitForActiveShards) {_        if (waitForActiveShards.equals(ActiveShardCount.DEFAULT)) {_            _            this.waitForActiveShards = ActiveShardCount.NONE__        } else {_            this.waitForActiveShards = waitForActiveShards__        }_        return this__    };sets,the,number,of,shard,copies,that,must,be,active,across,all,indices,before,getting,the,health,status,defaults,to,link,active,shard,count,none,meaning,we,don,t,wait,on,any,active,shards,set,this,value,to,link,active,shard,count,all,to,wait,for,all,shards,primary,and,all,replicas,to,be,active,across,all,indices,in,the,cluster,otherwise,use,link,active,shard,count,from,int,to,set,this,value,to,any,non,negative,integer,up,to,the,total,number,of,shard,copies,to,wait,for;public,cluster,health,request,wait,for,active,shards,active,shard,count,wait,for,active,shards,if,wait,for,active,shards,equals,active,shard,count,default,this,wait,for,active,shards,active,shard,count,none,else,this,wait,for,active,shards,wait,for,active,shards,return,this
ClusterHealthRequest -> public ClusterHealthRequest waitForActiveShards(ActiveShardCount waitForActiveShards);1528904315;Sets the number of shard copies that must be active across all indices before getting the_health status. Defaults to {@link ActiveShardCount#NONE}, meaning we don't wait on any active shards._Set this value to {@link ActiveShardCount#ALL} to wait for all shards (primary and_all replicas) to be active across all indices in the cluster. Otherwise, use_{@link ActiveShardCount#from(int)} to set this value to any non-negative integer, up to the_total number of shard copies to wait for.;public ClusterHealthRequest waitForActiveShards(ActiveShardCount waitForActiveShards) {_        if (waitForActiveShards.equals(ActiveShardCount.DEFAULT)) {_            _            this.waitForActiveShards = ActiveShardCount.NONE__        } else {_            this.waitForActiveShards = waitForActiveShards__        }_        return this__    };sets,the,number,of,shard,copies,that,must,be,active,across,all,indices,before,getting,the,health,status,defaults,to,link,active,shard,count,none,meaning,we,don,t,wait,on,any,active,shards,set,this,value,to,link,active,shard,count,all,to,wait,for,all,shards,primary,and,all,replicas,to,be,active,across,all,indices,in,the,cluster,otherwise,use,link,active,shard,count,from,int,to,set,this,value,to,any,non,negative,integer,up,to,the,total,number,of,shard,copies,to,wait,for;public,cluster,health,request,wait,for,active,shards,active,shard,count,wait,for,active,shards,if,wait,for,active,shards,equals,active,shard,count,default,this,wait,for,active,shards,active,shard,count,none,else,this,wait,for,active,shards,wait,for,active,shards,return,this
