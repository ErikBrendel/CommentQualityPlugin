commented;modifiers;parameterAmount;loc;comment;code
false;protected,static;1;6;;protected static <T extends ShardsAcknowledgedResponse> void declareAcknowledgedAndShardsAcknowledgedFields(ConstructingObjectParser<T, Void> objectParser) {     declareAcknowledgedField(objectParser).     objectParser.declareField(constructorArg(), (parser, context) -> parser.booleanValue(), SHARDS_ACKNOWLEDGED, ObjectParser.ValueType.BOOLEAN). }
true;public;0;3;/**  * Returns true if the requisite number of shards were started before  * returning from the index creation operation. If {@link #isAcknowledged()}  * is false, then this also returns false.  */ ;/**  * Returns true if the requisite number of shards were started before  * returning from the index creation operation. If {@link #isAcknowledged()}  * is false, then this also returns false.  */ public boolean isShardsAcknowledged() {     return shardsAcknowledged. }
false;protected;1;3;;protected void readShardsAcknowledged(StreamInput in) throws IOException {     shardsAcknowledged = in.readBoolean(). }
false;protected;1;3;;protected void writeShardsAcknowledged(StreamOutput out) throws IOException {     out.writeBoolean(shardsAcknowledged). }
false;protected;2;4;;@Override protected void addCustomFields(XContentBuilder builder, Params params) throws IOException {     builder.field(SHARDS_ACKNOWLEDGED.getPreferredName(), isShardsAcknowledged()). }
false;public;1;8;;@Override public boolean equals(Object o) {     if (super.equals(o)) {         ShardsAcknowledgedResponse that = (ShardsAcknowledgedResponse) o.         return shardsAcknowledged == that.shardsAcknowledged.     }     return false. }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(super.hashCode(), shardsAcknowledged). }
