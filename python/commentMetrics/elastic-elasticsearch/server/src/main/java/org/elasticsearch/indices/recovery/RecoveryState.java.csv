# id;timestamp;commentText;codeText;commentWords;codeWords
RecoveryState -> Timer -> public synchronized long stopTime();1524684173;Returns stop time in millis;public synchronized long stopTime() {_            return stopTime__        };returns,stop,time,in,millis;public,synchronized,long,stop,time,return,stop,time
RecoveryState -> Timer -> public synchronized long stopTime();1542609384;Returns stop time in millis;public synchronized long stopTime() {_            return stopTime__        };returns,stop,time,in,millis;public,synchronized,long,stop,time,return,stop,time
RecoveryState -> Timer -> public synchronized long stopTime();1548449524;Returns stop time in millis;public synchronized long stopTime() {_            return stopTime__        };returns,stop,time,in,millis;public,synchronized,long,stop,time,return,stop,time
RecoveryState -> Timer -> public synchronized long stopTime();1550220204;Returns stop time in millis;public synchronized long stopTime() {_            return stopTime__        };returns,stop,time,in,millis;public,synchronized,long,stop,time,return,stop,time
RecoveryState -> Index -> public synchronized int totalRecoverFiles();1524684173;total number of files to be recovered (potentially not yet done);public synchronized int totalRecoverFiles() {_            int total = 0__            for (File file : fileDetails.values()) {_                if (file.reused() == false) {_                    total++__                }_            }_            return total__        };total,number,of,files,to,be,recovered,potentially,not,yet,done;public,synchronized,int,total,recover,files,int,total,0,for,file,file,file,details,values,if,file,reused,false,total,return,total
RecoveryState -> Index -> public synchronized int totalRecoverFiles();1542609384;total number of files to be recovered (potentially not yet done);public synchronized int totalRecoverFiles() {_            int total = 0__            for (File file : fileDetails.values()) {_                if (file.reused() == false) {_                    total++__                }_            }_            return total__        };total,number,of,files,to,be,recovered,potentially,not,yet,done;public,synchronized,int,total,recover,files,int,total,0,for,file,file,file,details,values,if,file,reused,false,total,return,total
RecoveryState -> Index -> public synchronized int totalRecoverFiles();1548449524;total number of files to be recovered (potentially not yet done);public synchronized int totalRecoverFiles() {_            int total = 0__            for (File file : fileDetails.values()) {_                if (file.reused() == false) {_                    total++__                }_            }_            return total__        };total,number,of,files,to,be,recovered,potentially,not,yet,done;public,synchronized,int,total,recover,files,int,total,0,for,file,file,file,details,values,if,file,reused,false,total,return,total
RecoveryState -> Index -> public synchronized int totalRecoverFiles();1550220204;total number of files to be recovered (potentially not yet done);public synchronized int totalRecoverFiles() {_            int total = 0__            for (File file : fileDetails.values()) {_                if (file.reused() == false) {_                    total++__                }_            }_            return total__        };total,number,of,files,to,be,recovered,potentially,not,yet,done;public,synchronized,int,total,recover,files,int,total,0,for,file,file,file,details,values,if,file,reused,false,total,return,total
RecoveryState -> Index -> public synchronized int recoveredFileCount();1524684173;number of file that were recovered (excluding on ongoing files);public synchronized int recoveredFileCount() {_            int count = 0__            for (File file : fileDetails.values()) {_                if (file.fullyRecovered()) {_                    count++__                }_            }_            return count__        };number,of,file,that,were,recovered,excluding,on,ongoing,files;public,synchronized,int,recovered,file,count,int,count,0,for,file,file,file,details,values,if,file,fully,recovered,count,return,count
RecoveryState -> Index -> public synchronized int recoveredFileCount();1542609384;number of file that were recovered (excluding on ongoing files);public synchronized int recoveredFileCount() {_            int count = 0__            for (File file : fileDetails.values()) {_                if (file.fullyRecovered()) {_                    count++__                }_            }_            return count__        };number,of,file,that,were,recovered,excluding,on,ongoing,files;public,synchronized,int,recovered,file,count,int,count,0,for,file,file,file,details,values,if,file,fully,recovered,count,return,count
RecoveryState -> Index -> public synchronized int recoveredFileCount();1548449524;number of file that were recovered (excluding on ongoing files);public synchronized int recoveredFileCount() {_            int count = 0__            for (File file : fileDetails.values()) {_                if (file.fullyRecovered()) {_                    count++__                }_            }_            return count__        };number,of,file,that,were,recovered,excluding,on,ongoing,files;public,synchronized,int,recovered,file,count,int,count,0,for,file,file,file,details,values,if,file,fully,recovered,count,return,count
RecoveryState -> Index -> public synchronized int recoveredFileCount();1550220204;number of file that were recovered (excluding on ongoing files);public synchronized int recoveredFileCount() {_            int count = 0__            for (File file : fileDetails.values()) {_                if (file.fullyRecovered()) {_                    count++__                }_            }_            return count__        };number,of,file,that,were,recovered,excluding,on,ongoing,files;public,synchronized,int,recovered,file,count,int,count,0,for,file,file,file,details,values,if,file,fully,recovered,count,return,count
RecoveryState -> Timer -> public synchronized long time();1524684173;Returns elapsed time in millis, or 0 if timer was not started;public synchronized long time() {_            if (startNanoTime == 0) {_                return 0__            }_            if (time >= 0) {_                return time__            }_            return Math.max(0, TimeValue.nsecToMSec(System.nanoTime() - startNanoTime))__        };returns,elapsed,time,in,millis,or,0,if,timer,was,not,started;public,synchronized,long,time,if,start,nano,time,0,return,0,if,time,0,return,time,return,math,max,0,time,value,nsec,to,msec,system,nano,time,start,nano,time
RecoveryState -> Timer -> public synchronized long time();1542609384;Returns elapsed time in millis, or 0 if timer was not started;public synchronized long time() {_            if (startNanoTime == 0) {_                return 0__            }_            if (time >= 0) {_                return time__            }_            return Math.max(0, TimeValue.nsecToMSec(System.nanoTime() - startNanoTime))__        };returns,elapsed,time,in,millis,or,0,if,timer,was,not,started;public,synchronized,long,time,if,start,nano,time,0,return,0,if,time,0,return,time,return,math,max,0,time,value,nsec,to,msec,system,nano,time,start,nano,time
RecoveryState -> Timer -> public synchronized long time();1548449524;Returns elapsed time in millis, or 0 if timer was not started;public synchronized long time() {_            if (startNanoTime == 0) {_                return 0__            }_            if (time >= 0) {_                return time__            }_            return Math.max(0, TimeValue.nsecToMSec(System.nanoTime() - startNanoTime))__        };returns,elapsed,time,in,millis,or,0,if,timer,was,not,started;public,synchronized,long,time,if,start,nano,time,0,return,0,if,time,0,return,time,return,math,max,0,time,value,nsec,to,msec,system,nano,time,start,nano,time
RecoveryState -> Timer -> public synchronized long time();1550220204;Returns elapsed time in millis, or 0 if timer was not started;public synchronized long time() {_            if (startNanoTime == 0) {_                return 0__            }_            if (time >= 0) {_                return time__            }_            return Math.max(0, TimeValue.nsecToMSec(System.nanoTime() - startNanoTime))__        };returns,elapsed,time,in,millis,or,0,if,timer,was,not,started;public,synchronized,long,time,if,start,nano,time,0,return,0,if,time,0,return,time,return,math,max,0,time,value,nsec,to,msec,system,nano,time,start,nano,time
RecoveryState -> Index -> public synchronized long totalBytes();1524684173;total number of bytes in th shard;public synchronized long totalBytes() {_            long total = 0__            for (File file : fileDetails.values()) {_                total += file.length()__            }_            return total__        };total,number,of,bytes,in,th,shard;public,synchronized,long,total,bytes,long,total,0,for,file,file,file,details,values,total,file,length,return,total
RecoveryState -> Index -> public synchronized long totalBytes();1542609384;total number of bytes in th shard;public synchronized long totalBytes() {_            long total = 0__            for (File file : fileDetails.values()) {_                total += file.length()__            }_            return total__        };total,number,of,bytes,in,th,shard;public,synchronized,long,total,bytes,long,total,0,for,file,file,file,details,values,total,file,length,return,total
RecoveryState -> Index -> public synchronized long totalBytes();1548449524;total number of bytes in th shard;public synchronized long totalBytes() {_            long total = 0__            for (File file : fileDetails.values()) {_                total += file.length()__            }_            return total__        };total,number,of,bytes,in,th,shard;public,synchronized,long,total,bytes,long,total,0,for,file,file,file,details,values,total,file,length,return,total
RecoveryState -> Index -> public synchronized long totalBytes();1550220204;total number of bytes in th shard;public synchronized long totalBytes() {_            long total = 0__            for (File file : fileDetails.values()) {_                total += file.length()__            }_            return total__        };total,number,of,bytes,in,th,shard;public,synchronized,long,total,bytes,long,total,0,for,file,file,file,details,values,total,file,length,return,total
RecoveryState -> Timer -> public synchronized long startTime();1524684173;Returns start time in millis;public synchronized long startTime() {_            return startTime__        };returns,start,time,in,millis;public,synchronized,long,start,time,return,start,time
RecoveryState -> Timer -> public synchronized long startTime();1542609384;Returns start time in millis;public synchronized long startTime() {_            return startTime__        };returns,start,time,in,millis;public,synchronized,long,start,time,return,start,time
RecoveryState -> Timer -> public synchronized long startTime();1548449524;Returns start time in millis;public synchronized long startTime() {_            return startTime__        };returns,start,time,in,millis;public,synchronized,long,start,time,return,start,time
RecoveryState -> Timer -> public synchronized long startTime();1550220204;Returns start time in millis;public synchronized long startTime() {_            return startTime__        };returns,start,time,in,millis;public,synchronized,long,start,time,return,start,time
RecoveryState -> File -> public long recovered();1524684173;number of bytes recovered for this file (so far). 0 if the file is reused *;public long recovered() {_            return recovered__        };number,of,bytes,recovered,for,this,file,so,far,0,if,the,file,is,reused;public,long,recovered,return,recovered
RecoveryState -> File -> public long recovered();1542609384;number of bytes recovered for this file (so far). 0 if the file is reused *;public long recovered() {_            return recovered__        };number,of,bytes,recovered,for,this,file,so,far,0,if,the,file,is,reused;public,long,recovered,return,recovered
RecoveryState -> File -> public long recovered();1548449524;number of bytes recovered for this file (so far). 0 if the file is reused *;public long recovered() {_            return recovered__        };number,of,bytes,recovered,for,this,file,so,far,0,if,the,file,is,reused;public,long,recovered,return,recovered
RecoveryState -> File -> public long recovered();1550220204;number of bytes recovered for this file (so far). 0 if the file is reused *;public long recovered() {_            return recovered__        };number,of,bytes,recovered,for,this,file,so,far,0,if,the,file,is,reused;public,long,recovered,return,recovered
RecoveryState -> Translog -> public synchronized int recoveredOperations();1524684173;returns the total number of translog operations recovered so far;public synchronized int recoveredOperations() {_            return recovered__        };returns,the,total,number,of,translog,operations,recovered,so,far;public,synchronized,int,recovered,operations,return,recovered
RecoveryState -> Translog -> public synchronized int recoveredOperations();1542609384;returns the total number of translog operations recovered so far;public synchronized int recoveredOperations() {_            return recovered__        };returns,the,total,number,of,translog,operations,recovered,so,far;public,synchronized,int,recovered,operations,return,recovered
RecoveryState -> Translog -> public synchronized int recoveredOperations();1548449524;returns the total number of translog operations recovered so far;public synchronized int recoveredOperations() {_            return recovered__        };returns,the,total,number,of,translog,operations,recovered,so,far;public,synchronized,int,recovered,operations,return,recovered
RecoveryState -> Translog -> public synchronized int recoveredOperations();1550220204;returns the total number of translog operations recovered so far;public synchronized int recoveredOperations() {_            return recovered__        };returns,the,total,number,of,translog,operations,recovered,so,far;public,synchronized,int,recovered,operations,return,recovered
RecoveryState -> File -> public long length();1524684173;file length *;public long length() {_            return length__        };file,length;public,long,length,return,length
RecoveryState -> File -> public long length();1542609384;file length *;public long length() {_            return length__        };file,length;public,long,length,return,length
RecoveryState -> File -> public long length();1548449524;file length *;public long length() {_            return length__        };file,length;public,long,length,return,length
RecoveryState -> File -> public long length();1550220204;file length *;public long length() {_            return length__        };file,length;public,long,length,return,length
RecoveryState -> Index -> public synchronized int totalFileCount();1524684173;total number of files that are part of this recovery, both re-used and recovered;public synchronized int totalFileCount() {_            return fileDetails.size()__        };total,number,of,files,that,are,part,of,this,recovery,both,re,used,and,recovered;public,synchronized,int,total,file,count,return,file,details,size
RecoveryState -> Index -> public synchronized int totalFileCount();1542609384;total number of files that are part of this recovery, both re-used and recovered;public synchronized int totalFileCount() {_            return fileDetails.size()__        };total,number,of,files,that,are,part,of,this,recovery,both,re,used,and,recovered;public,synchronized,int,total,file,count,return,file,details,size
RecoveryState -> Index -> public synchronized int totalFileCount();1548449524;total number of files that are part of this recovery, both re-used and recovered;public synchronized int totalFileCount() {_            return fileDetails.size()__        };total,number,of,files,that,are,part,of,this,recovery,both,re,used,and,recovered;public,synchronized,int,total,file,count,return,file,details,size
RecoveryState -> Index -> public synchronized int totalFileCount();1550220204;total number of files that are part of this recovery, both re-used and recovered;public synchronized int totalFileCount() {_            return fileDetails.size()__        };total,number,of,files,that,are,part,of,this,recovery,both,re,used,and,recovered;public,synchronized,int,total,file,count,return,file,details,size
RecoveryState -> Index -> public synchronized long totalRecoverBytes();1524684173;total bytes of files to be recovered (potentially not yet done);public synchronized long totalRecoverBytes() {_            long total = 0__            for (File file : fileDetails.values()) {_                if (file.reused() == false) {_                    total += file.length()__                }_            }_            return total__        };total,bytes,of,files,to,be,recovered,potentially,not,yet,done;public,synchronized,long,total,recover,bytes,long,total,0,for,file,file,file,details,values,if,file,reused,false,total,file,length,return,total
RecoveryState -> Index -> public synchronized long totalRecoverBytes();1542609384;total bytes of files to be recovered (potentially not yet done);public synchronized long totalRecoverBytes() {_            long total = 0__            for (File file : fileDetails.values()) {_                if (file.reused() == false) {_                    total += file.length()__                }_            }_            return total__        };total,bytes,of,files,to,be,recovered,potentially,not,yet,done;public,synchronized,long,total,recover,bytes,long,total,0,for,file,file,file,details,values,if,file,reused,false,total,file,length,return,total
RecoveryState -> Index -> public synchronized long totalRecoverBytes();1548449524;total bytes of files to be recovered (potentially not yet done);public synchronized long totalRecoverBytes() {_            long total = 0__            for (File file : fileDetails.values()) {_                if (file.reused() == false) {_                    total += file.length()__                }_            }_            return total__        };total,bytes,of,files,to,be,recovered,potentially,not,yet,done;public,synchronized,long,total,recover,bytes,long,total,0,for,file,file,file,details,values,if,file,reused,false,total,file,length,return,total
RecoveryState -> Index -> public synchronized long totalRecoverBytes();1550220204;total bytes of files to be recovered (potentially not yet done);public synchronized long totalRecoverBytes() {_            long total = 0__            for (File file : fileDetails.values()) {_                if (file.reused() == false) {_                    total += file.length()__                }_            }_            return total__        };total,bytes,of,files,to,be,recovered,potentially,not,yet,done;public,synchronized,long,total,recover,bytes,long,total,0,for,file,file,file,details,values,if,file,reused,false,total,file,length,return,total
RecoveryState -> Index -> public synchronized float recoveredFilesPercent();1524684173;percent of recovered (i.e., not reused) files out of the total files to be recovered;public synchronized float recoveredFilesPercent() {_            int total = 0__            int recovered = 0__            for (File file : fileDetails.values()) {_                if (file.reused() == false) {_                    total++__                    if (file.fullyRecovered()) {_                        recovered++__                    }_                }_            }_            if (total == 0 && fileDetails.size() == 0) {      _                return 0.0f__            }_            if (total == recovered) {_                return 100.0f__            } else {_                float result = 100.0f * (recovered / (float) total)__                return result__            }_        };percent,of,recovered,i,e,not,reused,files,out,of,the,total,files,to,be,recovered;public,synchronized,float,recovered,files,percent,int,total,0,int,recovered,0,for,file,file,file,details,values,if,file,reused,false,total,if,file,fully,recovered,recovered,if,total,0,file,details,size,0,return,0,0f,if,total,recovered,return,100,0f,else,float,result,100,0f,recovered,float,total,return,result
RecoveryState -> Index -> public synchronized float recoveredFilesPercent();1542609384;percent of recovered (i.e., not reused) files out of the total files to be recovered;public synchronized float recoveredFilesPercent() {_            int total = 0__            int recovered = 0__            for (File file : fileDetails.values()) {_                if (file.reused() == false) {_                    total++__                    if (file.fullyRecovered()) {_                        recovered++__                    }_                }_            }_            if (total == 0 && fileDetails.size() == 0) {      _                return 0.0f__            }_            if (total == recovered) {_                return 100.0f__            } else {_                float result = 100.0f * (recovered / (float) total)__                return result__            }_        };percent,of,recovered,i,e,not,reused,files,out,of,the,total,files,to,be,recovered;public,synchronized,float,recovered,files,percent,int,total,0,int,recovered,0,for,file,file,file,details,values,if,file,reused,false,total,if,file,fully,recovered,recovered,if,total,0,file,details,size,0,return,0,0f,if,total,recovered,return,100,0f,else,float,result,100,0f,recovered,float,total,return,result
RecoveryState -> Index -> public synchronized float recoveredFilesPercent();1548449524;percent of recovered (i.e., not reused) files out of the total files to be recovered;public synchronized float recoveredFilesPercent() {_            int total = 0__            int recovered = 0__            for (File file : fileDetails.values()) {_                if (file.reused() == false) {_                    total++__                    if (file.fullyRecovered()) {_                        recovered++__                    }_                }_            }_            if (total == 0 && fileDetails.size() == 0) {      _                return 0.0f__            }_            if (total == recovered) {_                return 100.0f__            } else {_                float result = 100.0f * (recovered / (float) total)__                return result__            }_        };percent,of,recovered,i,e,not,reused,files,out,of,the,total,files,to,be,recovered;public,synchronized,float,recovered,files,percent,int,total,0,int,recovered,0,for,file,file,file,details,values,if,file,reused,false,total,if,file,fully,recovered,recovered,if,total,0,file,details,size,0,return,0,0f,if,total,recovered,return,100,0f,else,float,result,100,0f,recovered,float,total,return,result
RecoveryState -> Index -> public synchronized float recoveredFilesPercent();1550220204;percent of recovered (i.e., not reused) files out of the total files to be recovered;public synchronized float recoveredFilesPercent() {_            int total = 0__            int recovered = 0__            for (File file : fileDetails.values()) {_                if (file.reused() == false) {_                    total++__                    if (file.fullyRecovered()) {_                        recovered++__                    }_                }_            }_            if (total == 0 && fileDetails.size() == 0) {      _                return 0.0f__            }_            if (total == recovered) {_                return 100.0f__            } else {_                float result = 100.0f * (recovered / (float) total)__                return result__            }_        };percent,of,recovered,i,e,not,reused,files,out,of,the,total,files,to,be,recovered;public,synchronized,float,recovered,files,percent,int,total,0,int,recovered,0,for,file,file,file,details,values,if,file,reused,false,total,if,file,fully,recovered,recovered,if,total,0,file,details,size,0,return,0,0f,if,total,recovered,return,100,0f,else,float,result,100,0f,recovered,float,total,return,result
RecoveryState -> Index -> public synchronized long recoveredBytes();1524684173;total number of bytes recovered so far, including both existing and reused;public synchronized long recoveredBytes() {_            long recovered = 0__            for (File file : fileDetails.values()) {_                recovered += file.recovered()__            }_            return recovered__        };total,number,of,bytes,recovered,so,far,including,both,existing,and,reused;public,synchronized,long,recovered,bytes,long,recovered,0,for,file,file,file,details,values,recovered,file,recovered,return,recovered
RecoveryState -> Index -> public synchronized long recoveredBytes();1542609384;total number of bytes recovered so far, including both existing and reused;public synchronized long recoveredBytes() {_            long recovered = 0__            for (File file : fileDetails.values()) {_                recovered += file.recovered()__            }_            return recovered__        };total,number,of,bytes,recovered,so,far,including,both,existing,and,reused;public,synchronized,long,recovered,bytes,long,recovered,0,for,file,file,file,details,values,recovered,file,recovered,return,recovered
RecoveryState -> Index -> public synchronized long recoveredBytes();1548449524;total number of bytes recovered so far, including both existing and reused;public synchronized long recoveredBytes() {_            long recovered = 0__            for (File file : fileDetails.values()) {_                recovered += file.recovered()__            }_            return recovered__        };total,number,of,bytes,recovered,so,far,including,both,existing,and,reused;public,synchronized,long,recovered,bytes,long,recovered,0,for,file,file,file,details,values,recovered,file,recovered,return,recovered
RecoveryState -> Index -> public synchronized long recoveredBytes();1550220204;total number of bytes recovered so far, including both existing and reused;public synchronized long recoveredBytes() {_            long recovered = 0__            for (File file : fileDetails.values()) {_                recovered += file.recovered()__            }_            return recovered__        };total,number,of,bytes,recovered,so,far,including,both,existing,and,reused;public,synchronized,long,recovered,bytes,long,recovered,0,for,file,file,file,details,values,recovered,file,recovered,return,recovered
RecoveryState -> Translog -> public synchronized int totalOperationsOnStart();1524684173;returns the total number of translog operations to recovered, on the start of the recovery. Unlike {@link #totalOperations}_this does change during recovery._<p>_A value of -1 ({@link RecoveryState.Translog#UNKNOWN} is return if this is unknown (typically a gateway recovery);public synchronized int totalOperationsOnStart() {_            return this.totalOnStart__        };returns,the,total,number,of,translog,operations,to,recovered,on,the,start,of,the,recovery,unlike,link,total,operations,this,does,change,during,recovery,p,a,value,of,1,link,recovery,state,translog,unknown,is,return,if,this,is,unknown,typically,a,gateway,recovery;public,synchronized,int,total,operations,on,start,return,this,total,on,start
RecoveryState -> Translog -> public synchronized int totalOperationsOnStart();1542609384;returns the total number of translog operations to recovered, on the start of the recovery. Unlike {@link #totalOperations}_this does change during recovery._<p>_A value of -1 ({@link RecoveryState.Translog#UNKNOWN} is return if this is unknown (typically a gateway recovery);public synchronized int totalOperationsOnStart() {_            return this.totalOnStart__        };returns,the,total,number,of,translog,operations,to,recovered,on,the,start,of,the,recovery,unlike,link,total,operations,this,does,change,during,recovery,p,a,value,of,1,link,recovery,state,translog,unknown,is,return,if,this,is,unknown,typically,a,gateway,recovery;public,synchronized,int,total,operations,on,start,return,this,total,on,start
RecoveryState -> Translog -> public synchronized int totalOperationsOnStart();1548449524;returns the total number of translog operations to recovered, on the start of the recovery. Unlike {@link #totalOperations}_this does change during recovery._<p>_A value of -1 ({@link RecoveryState.Translog#UNKNOWN} is return if this is unknown (typically a gateway recovery);public synchronized int totalOperationsOnStart() {_            return this.totalOnStart__        };returns,the,total,number,of,translog,operations,to,recovered,on,the,start,of,the,recovery,unlike,link,total,operations,this,does,change,during,recovery,p,a,value,of,1,link,recovery,state,translog,unknown,is,return,if,this,is,unknown,typically,a,gateway,recovery;public,synchronized,int,total,operations,on,start,return,this,total,on,start
RecoveryState -> Translog -> public synchronized int totalOperationsOnStart();1550220204;returns the total number of translog operations to recovered, on the start of the recovery. Unlike {@link #totalOperations}_this does change during recovery._<p>_A value of -1 ({@link RecoveryState.Translog#UNKNOWN} is return if this is unknown (typically a gateway recovery);public synchronized int totalOperationsOnStart() {_            return this.totalOnStart__        };returns,the,total,number,of,translog,operations,to,recovered,on,the,start,of,the,recovery,unlike,link,total,operations,this,does,change,during,recovery,p,a,value,of,1,link,recovery,state,translog,unknown,is,return,if,this,is,unknown,typically,a,gateway,recovery;public,synchronized,int,total,operations,on,start,return,this,total,on,start
RecoveryState -> Index -> public synchronized float recoveredBytesPercent();1524684173;percent of bytes recovered out of total files bytes *to be* recovered;public synchronized float recoveredBytesPercent() {_            long total = 0__            long recovered = 0__            for (File file : fileDetails.values()) {_                if (file.reused() == false) {_                    total += file.length()__                    recovered += file.recovered()__                }_            }_            if (total == 0 && fileDetails.size() == 0) {_                _                return 0.0f__            }_            if (total == recovered) {_                return 100.0f__            } else {_                return 100.0f * recovered / total__            }_        };percent,of,bytes,recovered,out,of,total,files,bytes,to,be,recovered;public,synchronized,float,recovered,bytes,percent,long,total,0,long,recovered,0,for,file,file,file,details,values,if,file,reused,false,total,file,length,recovered,file,recovered,if,total,0,file,details,size,0,return,0,0f,if,total,recovered,return,100,0f,else,return,100,0f,recovered,total
RecoveryState -> Index -> public synchronized float recoveredBytesPercent();1542609384;percent of bytes recovered out of total files bytes *to be* recovered;public synchronized float recoveredBytesPercent() {_            long total = 0__            long recovered = 0__            for (File file : fileDetails.values()) {_                if (file.reused() == false) {_                    total += file.length()__                    recovered += file.recovered()__                }_            }_            if (total == 0 && fileDetails.size() == 0) {_                _                return 0.0f__            }_            if (total == recovered) {_                return 100.0f__            } else {_                return 100.0f * recovered / total__            }_        };percent,of,bytes,recovered,out,of,total,files,bytes,to,be,recovered;public,synchronized,float,recovered,bytes,percent,long,total,0,long,recovered,0,for,file,file,file,details,values,if,file,reused,false,total,file,length,recovered,file,recovered,if,total,0,file,details,size,0,return,0,0f,if,total,recovered,return,100,0f,else,return,100,0f,recovered,total
RecoveryState -> Index -> public synchronized float recoveredBytesPercent();1548449524;percent of bytes recovered out of total files bytes *to be* recovered;public synchronized float recoveredBytesPercent() {_            long total = 0__            long recovered = 0__            for (File file : fileDetails.values()) {_                if (file.reused() == false) {_                    total += file.length()__                    recovered += file.recovered()__                }_            }_            if (total == 0 && fileDetails.size() == 0) {_                _                return 0.0f__            }_            if (total == recovered) {_                return 100.0f__            } else {_                return 100.0f * recovered / total__            }_        };percent,of,bytes,recovered,out,of,total,files,bytes,to,be,recovered;public,synchronized,float,recovered,bytes,percent,long,total,0,long,recovered,0,for,file,file,file,details,values,if,file,reused,false,total,file,length,recovered,file,recovered,if,total,0,file,details,size,0,return,0,0f,if,total,recovered,return,100,0f,else,return,100,0f,recovered,total
RecoveryState -> Index -> public synchronized float recoveredBytesPercent();1550220204;percent of bytes recovered out of total files bytes *to be* recovered;public synchronized float recoveredBytesPercent() {_            long total = 0__            long recovered = 0__            for (File file : fileDetails.values()) {_                if (file.reused() == false) {_                    total += file.length()__                    recovered += file.recovered()__                }_            }_            if (total == 0 && fileDetails.size() == 0) {_                _                return 0.0f__            }_            if (total == recovered) {_                return 100.0f__            } else {_                return 100.0f * recovered / total__            }_        };percent,of,bytes,recovered,out,of,total,files,bytes,to,be,recovered;public,synchronized,float,recovered,bytes,percent,long,total,0,long,recovered,0,for,file,file,file,details,values,if,file,reused,false,total,file,length,recovered,file,recovered,if,total,0,file,details,size,0,return,0,0f,if,total,recovered,return,100,0f,else,return,100,0f,recovered,total
RecoveryState -> Translog -> public synchronized int totalOperations();1524684173;returns the total number of translog operations needed to be recovered at this moment._Note that this can change as the number of operations grows during recovery._<p>_A value of -1 ({@link RecoveryState.Translog#UNKNOWN} is return if this is unknown (typically a gateway recovery);public synchronized int totalOperations() {_            return total__        };returns,the,total,number,of,translog,operations,needed,to,be,recovered,at,this,moment,note,that,this,can,change,as,the,number,of,operations,grows,during,recovery,p,a,value,of,1,link,recovery,state,translog,unknown,is,return,if,this,is,unknown,typically,a,gateway,recovery;public,synchronized,int,total,operations,return,total
RecoveryState -> Translog -> public synchronized int totalOperations();1542609384;returns the total number of translog operations needed to be recovered at this moment._Note that this can change as the number of operations grows during recovery._<p>_A value of -1 ({@link RecoveryState.Translog#UNKNOWN} is return if this is unknown (typically a gateway recovery);public synchronized int totalOperations() {_            return total__        };returns,the,total,number,of,translog,operations,needed,to,be,recovered,at,this,moment,note,that,this,can,change,as,the,number,of,operations,grows,during,recovery,p,a,value,of,1,link,recovery,state,translog,unknown,is,return,if,this,is,unknown,typically,a,gateway,recovery;public,synchronized,int,total,operations,return,total
RecoveryState -> Translog -> public synchronized int totalOperations();1548449524;returns the total number of translog operations needed to be recovered at this moment._Note that this can change as the number of operations grows during recovery._<p>_A value of -1 ({@link RecoveryState.Translog#UNKNOWN} is return if this is unknown (typically a gateway recovery);public synchronized int totalOperations() {_            return total__        };returns,the,total,number,of,translog,operations,needed,to,be,recovered,at,this,moment,note,that,this,can,change,as,the,number,of,operations,grows,during,recovery,p,a,value,of,1,link,recovery,state,translog,unknown,is,return,if,this,is,unknown,typically,a,gateway,recovery;public,synchronized,int,total,operations,return,total
RecoveryState -> Translog -> public synchronized int totalOperations();1550220204;returns the total number of translog operations needed to be recovered at this moment._Note that this can change as the number of operations grows during recovery._<p>_A value of -1 ({@link RecoveryState.Translog#UNKNOWN} is return if this is unknown (typically a gateway recovery);public synchronized int totalOperations() {_            return total__        };returns,the,total,number,of,translog,operations,needed,to,be,recovered,at,this,moment,note,that,this,can,change,as,the,number,of,operations,grows,during,recovery,p,a,value,of,1,link,recovery,state,translog,unknown,is,return,if,this,is,unknown,typically,a,gateway,recovery;public,synchronized,int,total,operations,return,total
RecoveryState -> File -> public boolean reused();1524684173;returns true if the file is reused from a local copy;public boolean reused() {_            return reused__        };returns,true,if,the,file,is,reused,from,a,local,copy;public,boolean,reused,return,reused
RecoveryState -> File -> public boolean reused();1542609384;returns true if the file is reused from a local copy;public boolean reused() {_            return reused__        };returns,true,if,the,file,is,reused,from,a,local,copy;public,boolean,reused,return,reused
RecoveryState -> File -> public boolean reused();1548449524;returns true if the file is reused from a local copy;public boolean reused() {_            return reused__        };returns,true,if,the,file,is,reused,from,a,local,copy;public,boolean,reused,return,reused
RecoveryState -> File -> public boolean reused();1550220204;returns true if the file is reused from a local copy;public boolean reused() {_            return reused__        };returns,true,if,the,file,is,reused,from,a,local,copy;public,boolean,reused,return,reused
RecoveryState -> @Nullable     public DiscoveryNode getSourceNode();1524684173;Returns recovery source node (only non-null if peer recovery);@Nullable_    public DiscoveryNode getSourceNode() {_        return sourceNode__    };returns,recovery,source,node,only,non,null,if,peer,recovery;nullable,public,discovery,node,get,source,node,return,source,node
RecoveryState -> @Nullable     public DiscoveryNode getSourceNode();1542609384;Returns recovery source node (only non-null if peer recovery);@Nullable_    public DiscoveryNode getSourceNode() {_        return sourceNode__    };returns,recovery,source,node,only,non,null,if,peer,recovery;nullable,public,discovery,node,get,source,node,return,source,node
RecoveryState -> @Nullable     public DiscoveryNode getSourceNode();1548449524;Returns recovery source node (only non-null if peer recovery);@Nullable_    public DiscoveryNode getSourceNode() {_        return sourceNode__    };returns,recovery,source,node,only,non,null,if,peer,recovery;nullable,public,discovery,node,get,source,node,return,source,node
RecoveryState -> @Nullable     public DiscoveryNode getSourceNode();1550220204;Returns recovery source node (only non-null if peer recovery);@Nullable_    public DiscoveryNode getSourceNode() {_        return sourceNode__    };returns,recovery,source,node,only,non,null,if,peer,recovery;nullable,public,discovery,node,get,source,node,return,source,node
RecoveryState -> File -> public String name();1524684173;file name *;public String name() {_            return name__        };file,name;public,string,name,return,name
RecoveryState -> File -> public String name();1542609384;file name *;public String name() {_            return name__        };file,name;public,string,name,return,name
RecoveryState -> File -> public String name();1548449524;file name *;public String name() {_            return name__        };file,name;public,string,name,return,name
RecoveryState -> File -> public String name();1550220204;file name *;public String name() {_            return name__        };file,name;public,string,name,return,name
