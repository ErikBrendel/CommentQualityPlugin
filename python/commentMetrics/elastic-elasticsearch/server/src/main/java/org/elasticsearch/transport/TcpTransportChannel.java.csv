commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String getProfileName() {     return profileName. }
false;public;1;8;;@Override public void sendResponse(TransportResponse response) throws IOException {     try {         transport.sendResponse(version, features, channel, response, requestId, action, compressResponse).     } finally {         release(false).     } }
false;public;1;8;;@Override public void sendResponse(Exception exception) throws IOException {     try {         transport.sendErrorResponse(version, features, channel, exception, requestId, action).     } finally {         release(true).     } }
false;private;1;10;;private void release(boolean isExceptionResponse) {     if (released.compareAndSet(false, true)) {         // easier to debug if it's already closed         assert (releaseBy = new Exception()) != null.         transport.getInFlightRequestBreaker().addWithoutBreaking(-reservedBytes).     } else if (isExceptionResponse == false) {         // sendResponse call         throw new IllegalStateException("reserved bytes are already released", releaseBy).     } }
false;public;0;4;;@Override public String getChannelType() {     return channelType. }
false;public;0;4;;@Override public Version getVersion() {     return version. }
false;public;0;3;;public TcpChannel getChannel() {     return channel. }
