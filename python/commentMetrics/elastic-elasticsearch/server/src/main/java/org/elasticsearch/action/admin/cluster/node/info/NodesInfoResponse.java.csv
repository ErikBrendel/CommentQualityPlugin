commented;modifiers;parameterAmount;loc;comment;code
false;protected;1;4;;@Override protected List<NodeInfo> readNodesFrom(StreamInput in) throws IOException {     return in.readList(NodeInfo::readNodeInfo). }
false;protected;2;4;;@Override protected void writeNodesTo(StreamOutput out, List<NodeInfo> nodes) throws IOException {     out.writeStreamableList(nodes). }
false;public;2;70;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.startObject("nodes").     for (NodeInfo nodeInfo : getNodes()) {         builder.startObject(nodeInfo.getNode().getId()).         builder.field("name", nodeInfo.getNode().getName()).         builder.field("transport_address", nodeInfo.getNode().getAddress().toString()).         builder.field("host", nodeInfo.getNode().getHostName()).         builder.field("ip", nodeInfo.getNode().getHostAddress()).         builder.field("version", nodeInfo.getVersion()).         builder.field("build_flavor", nodeInfo.getBuild().flavor().displayName()).         builder.field("build_type", nodeInfo.getBuild().type().displayName()).         builder.field("build_hash", nodeInfo.getBuild().shortHash()).         if (nodeInfo.getTotalIndexingBuffer() != null) {             builder.humanReadableField("total_indexing_buffer", "total_indexing_buffer_in_bytes", nodeInfo.getTotalIndexingBuffer()).         }         builder.startArray("roles").         for (DiscoveryNode.Role role : nodeInfo.getNode().getRoles()) {             builder.value(role.getRoleName()).         }         builder.endArray().         if (!nodeInfo.getNode().getAttributes().isEmpty()) {             builder.startObject("attributes").             for (Map.Entry<String, String> entry : nodeInfo.getNode().getAttributes().entrySet()) {                 builder.field(entry.getKey(), entry.getValue()).             }             builder.endObject().         }         if (nodeInfo.getSettings() != null) {             builder.startObject("settings").             Settings settings = nodeInfo.getSettings().             settings.toXContent(builder, params).             builder.endObject().         }         if (nodeInfo.getOs() != null) {             nodeInfo.getOs().toXContent(builder, params).         }         if (nodeInfo.getProcess() != null) {             nodeInfo.getProcess().toXContent(builder, params).         }         if (nodeInfo.getJvm() != null) {             nodeInfo.getJvm().toXContent(builder, params).         }         if (nodeInfo.getThreadPool() != null) {             nodeInfo.getThreadPool().toXContent(builder, params).         }         if (nodeInfo.getTransport() != null) {             nodeInfo.getTransport().toXContent(builder, params).         }         if (nodeInfo.getHttp() != null) {             nodeInfo.getHttp().toXContent(builder, params).         }         if (nodeInfo.getPlugins() != null) {             nodeInfo.getPlugins().toXContent(builder, params).         }         if (nodeInfo.getIngest() != null) {             nodeInfo.getIngest().toXContent(builder, params).         }         builder.endObject().     }     builder.endObject().     return builder. }
false;public;0;12;;@Override public String toString() {     try {         XContentBuilder builder = XContentFactory.jsonBuilder().prettyPrint().         builder.startObject().         toXContent(builder, EMPTY_PARAMS).         builder.endObject().         return Strings.toString(builder).     } catch (IOException e) {         return "{ \"error\" : \"" + e.getMessage() + "\"}".     } }
