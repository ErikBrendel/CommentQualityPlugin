commented;modifiers;parameterAmount;loc;comment;code
true;;0;6;/**  * Forcefully counts down an operation and executes the provided runnable  * if all expected operations where executed  */ ;/**  * Forcefully counts down an operation and executes the provided runnable  * if all expected operations where executed  */ void countDown() {     assert counter.isCountedDown() == false : "more operations executed than specified".     if (counter.countDown()) {         onFinish.run().     } }
true;;1;7;/**  * Sets the result to the given array index and then runs {@link #countDown()}  */ ;/**  * Sets the result to the given array index and then runs {@link #countDown()}  */ void onResult(R result) {     try {         resultConsumer.accept(result).     } finally {         countDown().     } }
true;;3;7;/**  * Escalates the failure via {@link SearchPhaseContext#onShardFailure(int, SearchShardTarget, Exception)}  * and then runs {@link #countDown()}  */ ;/**  * Escalates the failure via {@link SearchPhaseContext#onShardFailure(int, SearchShardTarget, Exception)}  * and then runs {@link #countDown()}  */ void onFailure(final int shardIndex, @Nullable SearchShardTarget shardTarget, Exception e) {     try {         context.onShardFailure(shardIndex, shardTarget, e).     } finally {         countDown().     } }
