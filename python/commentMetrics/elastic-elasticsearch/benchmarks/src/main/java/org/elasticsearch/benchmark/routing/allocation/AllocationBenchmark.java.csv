commented;modifiers;parameterAmount;loc;comment;code
false;public;0;35;;@Setup public void setUp() throws Exception {     final String[] params = indicesShardsReplicasNodes.split("\\|").     int numIndices = toInt(params[0]).     int numShards = toInt(params[1]).     int numReplicas = toInt(params[2]).     int numNodes = toInt(params[3]).     strategy = Allocators.createAllocationService(Settings.builder().put("cluster.routing.allocation.awareness.attributes", "tag").build()).     MetaData.Builder mb = MetaData.builder().     for (int i = 1. i <= numIndices. i++) {         mb.put(IndexMetaData.builder("test_" + i).settings(Settings.builder().put("index.version.created", Version.CURRENT)).numberOfShards(numShards).numberOfReplicas(numReplicas)).     }     MetaData metaData = mb.build().     RoutingTable.Builder rb = RoutingTable.builder().     for (int i = 1. i <= numIndices. i++) {         rb.addAsNew(metaData.index("test_" + i)).     }     RoutingTable routingTable = rb.build().     DiscoveryNodes.Builder nb = DiscoveryNodes.builder().     for (int i = 1. i <= numNodes. i++) {         nb.add(Allocators.newNode("node" + i, Collections.singletonMap("tag", "tag_" + (i % numTags)))).     }     initialClusterState = ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY)).metaData(metaData).routingTable(routingTable).nodes(nb).build(). }
false;private;1;3;;private int toInt(String v) {     return Integer.valueOf(v.trim()). }
false;public;0;10;;@Benchmark public ClusterState measureAllocation() {     ClusterState clusterState = initialClusterState.     while (clusterState.getRoutingNodes().hasUnassignedShards()) {         clusterState = strategy.applyStartedShards(clusterState, clusterState.getRoutingNodes().shardsWithState(ShardRoutingState.INITIALIZING)).         clusterState = strategy.reroute(clusterState, "reroute").     }     return clusterState. }
