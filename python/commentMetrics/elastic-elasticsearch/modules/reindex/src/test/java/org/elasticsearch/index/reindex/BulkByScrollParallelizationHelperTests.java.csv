commented;modifiers;parameterAmount;loc;comment;code
false;public;0;29;;public void testSliceIntoSubRequests() throws IOException {     SearchRequest searchRequest = randomSearchRequest(() -> randomSearchSourceBuilder(() -> null, () -> null, () -> null, () -> emptyList(), () -> null)).     if (searchRequest.source() != null) {         // Clear the slice builder if there is one set. We can't call sliceIntoSubRequests if it is.         searchRequest.source().slice(null).     }     int times = between(2, 100).     String field = randomBoolean() ? IdFieldMapper.NAME : randomAlphaOfLength(5).     int currentSliceId = 0.     for (SearchRequest slice : sliceIntoSubRequests(searchRequest, field, times)) {         assertEquals(field, slice.source().slice().getField()).         assertEquals(currentSliceId, slice.source().slice().getId()).         assertEquals(times, slice.source().slice().getMax()).         // If you clear the slice then the slice should be the same request as the parent request         slice.source().slice(null).         if (searchRequest.source() == null) {             // Except that adding the slice might have added an empty builder             searchRequest.source(new SearchSourceBuilder()).         }         assertEquals(searchRequest, slice).         currentSliceId++.     } }
