# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractBaseReindexRestHandler -> public static Float parseRequestsPerSecond(RestRequest request);1524684173;@return requests_per_second from the request as a float if it was on the request, null otherwise;public static Float parseRequestsPerSecond(RestRequest request) {_        String requestsPerSecondString = request.param("requests_per_second")__        if (requestsPerSecondString == null) {_            return null__        }_        float requestsPerSecond__        try {_            requestsPerSecond = Float.parseFloat(requestsPerSecondString)__        } catch (NumberFormatException e) {_            throw new IllegalArgumentException(_                    "[requests_per_second] must be a float greater than 0. Use -1 to disable throttling.", e)__        }_        if (requestsPerSecond == -1) {_            return Float.POSITIVE_INFINITY__        }_        if (requestsPerSecond <= 0) {_            _            throw new IllegalArgumentException(_                    "[requests_per_second] must be a float greater than 0. Use -1 to disable throttling.")__        }_        return requestsPerSecond__    };return,from,the,request,as,a,float,if,it,was,on,the,request,null,otherwise;public,static,float,parse,requests,per,second,rest,request,request,string,requests,per,second,string,request,param,if,requests,per,second,string,null,return,null,float,requests,per,second,try,requests,per,second,float,parse,float,requests,per,second,string,catch,number,format,exception,e,throw,new,illegal,argument,exception,must,be,a,float,greater,than,0,use,1,to,disable,throttling,e,if,requests,per,second,1,return,float,if,requests,per,second,0,throw,new,illegal,argument,exception,must,be,a,float,greater,than,0,use,1,to,disable,throttling,return,requests,per,second
AbstractBaseReindexRestHandler -> public static Float parseRequestsPerSecond(RestRequest request);1528762805;@return requests_per_second from the request as a float if it was on the request, null otherwise;public static Float parseRequestsPerSecond(RestRequest request) {_        String requestsPerSecondString = request.param("requests_per_second")__        if (requestsPerSecondString == null) {_            return null__        }_        float requestsPerSecond__        try {_            requestsPerSecond = Float.parseFloat(requestsPerSecondString)__        } catch (NumberFormatException e) {_            throw new IllegalArgumentException(_                    "[requests_per_second] must be a float greater than 0. Use -1 to disable throttling.", e)__        }_        if (requestsPerSecond == -1) {_            return Float.POSITIVE_INFINITY__        }_        if (requestsPerSecond <= 0) {_            _            throw new IllegalArgumentException(_                    "[requests_per_second] must be a float greater than 0. Use -1 to disable throttling.")__        }_        return requestsPerSecond__    };return,from,the,request,as,a,float,if,it,was,on,the,request,null,otherwise;public,static,float,parse,requests,per,second,rest,request,request,string,requests,per,second,string,request,param,if,requests,per,second,string,null,return,null,float,requests,per,second,try,requests,per,second,float,parse,float,requests,per,second,string,catch,number,format,exception,e,throw,new,illegal,argument,exception,must,be,a,float,greater,than,0,use,1,to,disable,throttling,e,if,requests,per,second,1,return,float,if,requests,per,second,0,throw,new,illegal,argument,exception,must,be,a,float,greater,than,0,use,1,to,disable,throttling,return,requests,per,second
AbstractBaseReindexRestHandler -> public static Float parseRequestsPerSecond(RestRequest request);1529433467;@return requests_per_second from the request as a float if it was on the request, null otherwise;public static Float parseRequestsPerSecond(RestRequest request) {_        String requestsPerSecondString = request.param("requests_per_second")__        if (requestsPerSecondString == null) {_            return null__        }_        float requestsPerSecond__        try {_            requestsPerSecond = Float.parseFloat(requestsPerSecondString)__        } catch (NumberFormatException e) {_            throw new IllegalArgumentException(_                    "[requests_per_second] must be a float greater than 0. Use -1 to disable throttling.", e)__        }_        if (requestsPerSecond == -1) {_            return Float.POSITIVE_INFINITY__        }_        if (requestsPerSecond <= 0) {_            _            throw new IllegalArgumentException(_                    "[requests_per_second] must be a float greater than 0. Use -1 to disable throttling.")__        }_        return requestsPerSecond__    };return,from,the,request,as,a,float,if,it,was,on,the,request,null,otherwise;public,static,float,parse,requests,per,second,rest,request,request,string,requests,per,second,string,request,param,if,requests,per,second,string,null,return,null,float,requests,per,second,try,requests,per,second,float,parse,float,requests,per,second,string,catch,number,format,exception,e,throw,new,illegal,argument,exception,must,be,a,float,greater,than,0,use,1,to,disable,throttling,e,if,requests,per,second,1,return,float,if,requests,per,second,0,throw,new,illegal,argument,exception,must,be,a,float,greater,than,0,use,1,to,disable,throttling,return,requests,per,second
AbstractBaseReindexRestHandler -> protected abstract Request buildRequest(RestRequest request) throws IOException_;1524684173;Build the Request based on the RestRequest.;protected abstract Request buildRequest(RestRequest request) throws IOException_;build,the,request,based,on,the,rest,request;protected,abstract,request,build,request,rest,request,request,throws,ioexception
AbstractBaseReindexRestHandler -> protected abstract Request buildRequest(RestRequest request) throws IOException_;1528762805;Build the Request based on the RestRequest.;protected abstract Request buildRequest(RestRequest request) throws IOException_;build,the,request,based,on,the,rest,request;protected,abstract,request,build,request,rest,request,request,throws,ioexception
AbstractBaseReindexRestHandler -> protected abstract Request buildRequest(RestRequest request) throws IOException_;1529433467;Build the Request based on the RestRequest.;protected abstract Request buildRequest(RestRequest request) throws IOException_;build,the,request,based,on,the,rest,request;protected,abstract,request,build,request,rest,request,request,throws,ioexception
AbstractBaseReindexRestHandler -> protected Request setCommonOptions(RestRequest restRequest, Request request);1524684173;Sets common options of {@link AbstractBulkByScrollRequest} requests.;protected Request setCommonOptions(RestRequest restRequest, Request request) {_        assert restRequest != null : "RestRequest should not be null"__        assert request != null : "Request should not be null"___        request.setRefresh(restRequest.paramAsBoolean("refresh", request.isRefresh()))__        request.setTimeout(restRequest.paramAsTime("timeout", request.getTimeout()))___        Integer slices = parseSlices(restRequest)__        if (slices != null) {_            request.setSlices(slices)__        }__        String waitForActiveShards = restRequest.param("wait_for_active_shards")__        if (waitForActiveShards != null) {_            request.setWaitForActiveShards(ActiveShardCount.parseString(waitForActiveShards))__        }__        Float requestsPerSecond = parseRequestsPerSecond(restRequest)__        if (requestsPerSecond != null) {_            request.setRequestsPerSecond(requestsPerSecond)__        }_        return request__    };sets,common,options,of,link,abstract,bulk,by,scroll,request,requests;protected,request,set,common,options,rest,request,rest,request,request,request,assert,rest,request,null,rest,request,should,not,be,null,assert,request,null,request,should,not,be,null,request,set,refresh,rest,request,param,as,boolean,refresh,request,is,refresh,request,set,timeout,rest,request,param,as,time,timeout,request,get,timeout,integer,slices,parse,slices,rest,request,if,slices,null,request,set,slices,slices,string,wait,for,active,shards,rest,request,param,if,wait,for,active,shards,null,request,set,wait,for,active,shards,active,shard,count,parse,string,wait,for,active,shards,float,requests,per,second,parse,requests,per,second,rest,request,if,requests,per,second,null,request,set,requests,per,second,requests,per,second,return,request
AbstractBaseReindexRestHandler -> protected Request setCommonOptions(RestRequest restRequest, Request request);1528762805;Sets common options of {@link AbstractBulkByScrollRequest} requests.;protected Request setCommonOptions(RestRequest restRequest, Request request) {_        assert restRequest != null : "RestRequest should not be null"__        assert request != null : "Request should not be null"___        request.setRefresh(restRequest.paramAsBoolean("refresh", request.isRefresh()))__        request.setTimeout(restRequest.paramAsTime("timeout", request.getTimeout()))___        Integer slices = parseSlices(restRequest)__        if (slices != null) {_            request.setSlices(slices)__        }__        String waitForActiveShards = restRequest.param("wait_for_active_shards")__        if (waitForActiveShards != null) {_            request.setWaitForActiveShards(ActiveShardCount.parseString(waitForActiveShards))__        }__        Float requestsPerSecond = parseRequestsPerSecond(restRequest)__        if (requestsPerSecond != null) {_            request.setRequestsPerSecond(requestsPerSecond)__        }_        return request__    };sets,common,options,of,link,abstract,bulk,by,scroll,request,requests;protected,request,set,common,options,rest,request,rest,request,request,request,assert,rest,request,null,rest,request,should,not,be,null,assert,request,null,request,should,not,be,null,request,set,refresh,rest,request,param,as,boolean,refresh,request,is,refresh,request,set,timeout,rest,request,param,as,time,timeout,request,get,timeout,integer,slices,parse,slices,rest,request,if,slices,null,request,set,slices,slices,string,wait,for,active,shards,rest,request,param,if,wait,for,active,shards,null,request,set,wait,for,active,shards,active,shard,count,parse,string,wait,for,active,shards,float,requests,per,second,parse,requests,per,second,rest,request,if,requests,per,second,null,request,set,requests,per,second,requests,per,second,return,request
AbstractBaseReindexRestHandler -> protected Request setCommonOptions(RestRequest restRequest, Request request);1529433467;Sets common options of {@link AbstractBulkByScrollRequest} requests.;protected Request setCommonOptions(RestRequest restRequest, Request request) {_        assert restRequest != null : "RestRequest should not be null"__        assert request != null : "Request should not be null"___        request.setRefresh(restRequest.paramAsBoolean("refresh", request.isRefresh()))__        request.setTimeout(restRequest.paramAsTime("timeout", request.getTimeout()))___        Integer slices = parseSlices(restRequest)__        if (slices != null) {_            request.setSlices(slices)__        }__        String waitForActiveShards = restRequest.param("wait_for_active_shards")__        if (waitForActiveShards != null) {_            request.setWaitForActiveShards(ActiveShardCount.parseString(waitForActiveShards))__        }__        Float requestsPerSecond = parseRequestsPerSecond(restRequest)__        if (requestsPerSecond != null) {_            request.setRequestsPerSecond(requestsPerSecond)__        }_        return request__    };sets,common,options,of,link,abstract,bulk,by,scroll,request,requests;protected,request,set,common,options,rest,request,rest,request,request,request,assert,rest,request,null,rest,request,should,not,be,null,assert,request,null,request,should,not,be,null,request,set,refresh,rest,request,param,as,boolean,refresh,request,is,refresh,request,set,timeout,rest,request,param,as,time,timeout,request,get,timeout,integer,slices,parse,slices,rest,request,if,slices,null,request,set,slices,slices,string,wait,for,active,shards,rest,request,param,if,wait,for,active,shards,null,request,set,wait,for,active,shards,active,shard,count,parse,string,wait,for,active,shards,float,requests,per,second,parse,requests,per,second,rest,request,if,requests,per,second,null,request,set,requests,per,second,requests,per,second,return,request
