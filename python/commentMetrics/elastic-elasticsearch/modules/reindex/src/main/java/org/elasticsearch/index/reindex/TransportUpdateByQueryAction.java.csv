commented;modifiers;parameterAmount;loc;comment;code
false;protected;3;14;;@Override protected void doExecute(Task task, UpdateByQueryRequest request, ActionListener<BulkByScrollResponse> listener) {     BulkByScrollTask bulkByScrollTask = (BulkByScrollTask) task.     BulkByScrollParallelizationHelper.startSlicedAction(request, bulkByScrollTask, UpdateByQueryAction.INSTANCE, listener, client, clusterService.localNode(), () -> {         ClusterState state = clusterService.state().         ParentTaskAssigningClient assigningClient = new ParentTaskAssigningClient(client, clusterService.localNode(), bulkByScrollTask).         new AsyncIndexBySearchAction(bulkByScrollTask, logger, assigningClient, threadPool, this, request, state, listener).start().     }). }
false;public;0;8;;@Override public BiFunction<RequestWrapper<?>, ScrollableHitSource.Hit, RequestWrapper<?>> buildScriptApplier() {     Script script = mainRequest.getScript().     if (script != null) {         return new UpdateByQueryScriptApplier(worker, mainAction.scriptService, script, script.getParams()).     }     return super.buildScriptApplier(). }
false;protected;1;12;;@Override protected RequestWrapper<IndexRequest> buildRequest(ScrollableHitSource.Hit doc) {     IndexRequest index = new IndexRequest().     index.index(doc.getIndex()).     index.type(doc.getType()).     index.id(doc.getId()).     index.source(doc.getSource(), doc.getXContentType()).     index.setIfSeqNo(doc.getSeqNo()).     index.setIfPrimaryTerm(doc.getPrimaryTerm()).     index.setPipeline(mainRequest.getPipeline()).     return wrap(index). }
false;protected;2;4;;@Override protected void scriptChangedIndex(RequestWrapper<?> request, Object to) {     throw new IllegalArgumentException("Modifying [" + IndexFieldMapper.NAME + "] not allowed"). }
false;protected;2;4;;@Override protected void scriptChangedType(RequestWrapper<?> request, Object to) {     throw new IllegalArgumentException("Modifying [" + TypeFieldMapper.NAME + "] not allowed"). }
false;protected;2;4;;@Override protected void scriptChangedId(RequestWrapper<?> request, Object to) {     throw new IllegalArgumentException("Modifying [" + IdFieldMapper.NAME + "] not allowed"). }
false;protected;2;4;;@Override protected void scriptChangedVersion(RequestWrapper<?> request, Object to) {     throw new IllegalArgumentException("Modifying [_version] not allowed"). }
false;protected;2;4;;@Override protected void scriptChangedRouting(RequestWrapper<?> request, Object to) {     throw new IllegalArgumentException("Modifying [" + RoutingFieldMapper.NAME + "] not allowed"). }
