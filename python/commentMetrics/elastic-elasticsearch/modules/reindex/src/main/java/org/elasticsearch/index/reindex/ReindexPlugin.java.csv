commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;@Override public List<ActionHandler<? extends ActionRequest, ? extends ActionResponse>> getActions() {     return Arrays.asList(new ActionHandler<>(ReindexAction.INSTANCE, TransportReindexAction.class), new ActionHandler<>(UpdateByQueryAction.INSTANCE, TransportUpdateByQueryAction.class), new ActionHandler<>(DeleteByQueryAction.INSTANCE, TransportDeleteByQueryAction.class), new ActionHandler<>(RethrottleAction.INSTANCE, TransportRethrottleAction.class)). }
false;public;0;5;;@Override public List<NamedWriteableRegistry.Entry> getNamedWriteables() {     return singletonList(new NamedWriteableRegistry.Entry(Task.Status.class, BulkByScrollTask.Status.NAME, BulkByScrollTask.Status::new)). }
false;public;7;10;;@Override public List<RestHandler> getRestHandlers(Settings settings, RestController restController, ClusterSettings clusterSettings, IndexScopedSettings indexScopedSettings, SettingsFilter settingsFilter, IndexNameExpressionResolver indexNameExpressionResolver, Supplier<DiscoveryNodes> nodesInCluster) {     return Arrays.asList(new RestReindexAction(settings, restController), new RestUpdateByQueryAction(settings, restController), new RestDeleteByQueryAction(settings, restController), new RestRethrottleAction(settings, restController, nodesInCluster)). }
false;public;9;7;;@Override public Collection<Object> createComponents(Client client, ClusterService clusterService, ThreadPool threadPool, ResourceWatcherService resourceWatcherService, ScriptService scriptService, NamedXContentRegistry xContentRegistry, Environment environment, NodeEnvironment nodeEnvironment, NamedWriteableRegistry namedWriteableRegistry) {     return Collections.singletonList(new ReindexSslConfig(environment.settings(), environment, resourceWatcherService)). }
false;public;0;7;;@Override public List<Setting<?>> getSettings() {     final List<Setting<?>> settings = new ArrayList<>().     settings.add(TransportReindexAction.REMOTE_CLUSTER_WHITELIST).     settings.addAll(ReindexSslConfig.getSettings()).     return settings. }
