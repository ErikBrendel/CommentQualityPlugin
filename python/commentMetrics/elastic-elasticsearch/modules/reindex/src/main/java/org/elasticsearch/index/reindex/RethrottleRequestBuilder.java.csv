# id;timestamp;commentText;codeText;commentWords;codeWords
RethrottleRequestBuilder -> public RethrottleRequestBuilder setRequestsPerSecond(float requestsPerSecond);1524684173;Set the throttle to apply to all matching requests in sub-requests per second. {@link Float#POSITIVE_INFINITY} means set no throttle._Throttling is done between batches, as we start the next scroll requests. That way we can increase the scroll's timeout to make sure_that it contains any time that we might wait.;public RethrottleRequestBuilder setRequestsPerSecond(float requestsPerSecond) {_        request.setRequestsPerSecond(requestsPerSecond)__        return this__    };set,the,throttle,to,apply,to,all,matching,requests,in,sub,requests,per,second,link,float,means,set,no,throttle,throttling,is,done,between,batches,as,we,start,the,next,scroll,requests,that,way,we,can,increase,the,scroll,s,timeout,to,make,sure,that,it,contains,any,time,that,we,might,wait;public,rethrottle,request,builder,set,requests,per,second,float,requests,per,second,request,set,requests,per,second,requests,per,second,return,this
RethrottleRequestBuilder -> public RethrottleRequestBuilder setRequestsPerSecond(float requestsPerSecond);1527840262;Set the throttle to apply to all matching requests in sub-requests per second. {@link Float#POSITIVE_INFINITY} means set no throttle._Throttling is done between batches, as we start the next scroll requests. That way we can increase the scroll's timeout to make sure_that it contains any time that we might wait.;public RethrottleRequestBuilder setRequestsPerSecond(float requestsPerSecond) {_        request.setRequestsPerSecond(requestsPerSecond)__        return this__    };set,the,throttle,to,apply,to,all,matching,requests,in,sub,requests,per,second,link,float,means,set,no,throttle,throttling,is,done,between,batches,as,we,start,the,next,scroll,requests,that,way,we,can,increase,the,scroll,s,timeout,to,make,sure,that,it,contains,any,time,that,we,might,wait;public,rethrottle,request,builder,set,requests,per,second,float,requests,per,second,request,set,requests,per,second,requests,per,second,return,this
RethrottleRequestBuilder -> public RethrottleRequestBuilder setRequestsPerSecond(float requestsPerSecond);1529433467;Set the throttle to apply to all matching requests in sub-requests per second. {@link Float#POSITIVE_INFINITY} means set no throttle._Throttling is done between batches, as we start the next scroll requests. That way we can increase the scroll's timeout to make sure_that it contains any time that we might wait.;public RethrottleRequestBuilder setRequestsPerSecond(float requestsPerSecond) {_        request.setRequestsPerSecond(requestsPerSecond)__        return this__    };set,the,throttle,to,apply,to,all,matching,requests,in,sub,requests,per,second,link,float,means,set,no,throttle,throttling,is,done,between,batches,as,we,start,the,next,scroll,requests,that,way,we,can,increase,the,scroll,s,timeout,to,make,sure,that,it,contains,any,time,that,we,might,wait;public,rethrottle,request,builder,set,requests,per,second,float,requests,per,second,request,set,requests,per,second,requests,per,second,return,this
