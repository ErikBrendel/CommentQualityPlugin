commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;public Throwable build() {     Throwable t = buildWithoutCause().     if (causedBy != null) {         t.initCause(causedBy).     }     return t. }
false;private;0;18;;private Throwable buildWithoutCause() {     requireNonNull(type, "[type] is required").     requireNonNull(reason, "[reason] is required").     switch(type) {         // Make some effort to use the right exceptions         case "es_rejected_execution_exception":             return new EsRejectedExecutionException(reason).         case "parsing_exception":             XContentLocation location = null.             if (line != null && column != null) {                 location = new XContentLocation(line, column).             }             return new ParsingException(location, reason).         // But it isn't worth trying to get it perfect....         default:             return new RuntimeException(type + ": " + reason).     } }
false;public;1;3;;public void setType(String type) {     this.type = type. }
false;public;1;3;;public void setReason(String reason) {     this.reason = reason. }
false;public;1;3;;public void setLine(Integer line) {     this.line = line. }
false;public;1;3;;public void setColumn(Integer column) {     this.column = column. }
false;public;1;3;;public void setCausedBy(Throwable causedBy) {     this.causedBy = causedBy. }
