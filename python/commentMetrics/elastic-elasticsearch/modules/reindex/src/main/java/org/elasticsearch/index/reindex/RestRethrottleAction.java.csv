commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String getName() {     return "rethrottle_action". }
false;public;2;13;;@Override public RestChannelConsumer prepareRequest(final RestRequest request, final NodeClient client) throws IOException {     RethrottleRequest internalRequest = new RethrottleRequest().     internalRequest.setTaskId(new TaskId(request.param("taskId"))).     Float requestsPerSecond = AbstractBaseReindexRestHandler.parseRequestsPerSecond(request).     if (requestsPerSecond == null) {         throw new IllegalArgumentException("requests_per_second is a required parameter").     }     internalRequest.setRequestsPerSecond(requestsPerSecond).     final String groupBy = request.param("group_by", "nodes").     return channel -> client.execute(RethrottleAction.INSTANCE, internalRequest, listTasksResponseListener(nodesInCluster, groupBy, channel)). }
