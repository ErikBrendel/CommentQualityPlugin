commented;modifiers;parameterAmount;loc;comment;code
true;public;1;17;/**  * Constructs a {@link StandardTokenizer} filtered by a {@link LowerCaseFilter}, a {@link StopFilter},  *      and a {@link SnowballFilter}  */ ;/**  * Constructs a {@link StandardTokenizer} filtered by a {@link LowerCaseFilter}, a {@link StopFilter},  *      and a {@link SnowballFilter}  */ @Override public TokenStreamComponents createComponents(String fieldName) {     final Tokenizer tokenizer = new StandardTokenizer().     TokenStream result = tokenizer.     // remove the possessive 's for english stemmers     if (name.equals("English") || name.equals("Porter") || name.equals("Lovins"))         result = new EnglishPossessiveFilter(result).     // Use a special lowercase filter for turkish, the stemmer expects it.     if (name.equals("Turkish"))         result = new TurkishLowerCaseFilter(result).     else         result = new LowerCaseFilter(result).     if (stopSet != null)         result = new StopFilter(result, stopSet).     result = new SnowballFilter(result, name).     return new TokenStreamComponents(tokenizer, result). }
