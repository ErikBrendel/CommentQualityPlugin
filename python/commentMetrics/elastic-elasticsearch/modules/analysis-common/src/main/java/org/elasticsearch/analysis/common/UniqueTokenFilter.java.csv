commented;modifiers;parameterAmount;loc;comment;code
false;public,final;0;29;;@Override public final boolean incrementToken() throws IOException {     while (input.incrementToken()) {         final char[] term = termAttribute.buffer().         final int length = termAttribute.length().         boolean duplicate.         if (onlyOnSamePosition) {             final int posIncrement = posIncAttribute.getPositionIncrement().             if (posIncrement > 0) {                 previous.clear().             }             duplicate = (posIncrement == 0 && previous.contains(term, 0, length)).         } else {             duplicate = previous.contains(term, 0, length).         }         // clone the term, and add to the set of seen terms.         char[] saved = new char[length].         System.arraycopy(term, 0, saved, 0, length).         previous.add(saved).         if (!duplicate) {             return true.         }     }     return false. }
false;public,final;0;5;;@Override public final void reset() throws IOException {     super.reset().     previous.clear(). }
