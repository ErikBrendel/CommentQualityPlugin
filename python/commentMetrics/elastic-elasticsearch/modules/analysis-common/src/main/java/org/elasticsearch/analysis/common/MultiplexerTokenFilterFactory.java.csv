# id;timestamp;commentText;codeText;commentWords;codeWords
MultiplexerTokenFilterFactory -> MultiplexTokenFilter -> MultiplexTokenFilter(TokenStream input, List<Function<TokenStream, TokenStream>> filters);1529487105;Creates a MultiplexTokenFilter on the given input with a set of filters;MultiplexTokenFilter(TokenStream input, List<Function<TokenStream, TokenStream>> filters) {_            super(input)__            TokenStream source = new MultiplexerFilter(input)__            for (int i = 0_ i < filters.size()_ i++) {_                final int slot = i__                source = new ConditionalTokenFilter(source, filters.get(i)) {_                    @Override_                    protected boolean shouldFilter() {_                        return slot == selector__                    }_                }__            }_            this.source = source__            this.filterCount = filters.size()__            this.selector = filterCount - 1__        };creates,a,multiplex,token,filter,on,the,given,input,with,a,set,of,filters;multiplex,token,filter,token,stream,input,list,function,token,stream,token,stream,filters,super,input,token,stream,source,new,multiplexer,filter,input,for,int,i,0,i,filters,size,i,final,int,slot,i,source,new,conditional,token,filter,source,filters,get,i,override,protected,boolean,should,filter,return,slot,selector,this,source,source,this,filter,count,filters,size,this,selector,filter,count,1
MultiplexerTokenFilterFactory -> MultiplexTokenFilter -> MultiplexTokenFilter(TokenStream input, List<Function<TokenStream, TokenStream>> filters);1537371806;Creates a MultiplexTokenFilter on the given input with a set of filters;MultiplexTokenFilter(TokenStream input, List<Function<TokenStream, TokenStream>> filters) {_            super(input)__            TokenStream source = new MultiplexerFilter(input)__            for (int i = 0_ i < filters.size()_ i++) {_                final int slot = i__                source = new ConditionalTokenFilter(source, filters.get(i)) {_                    @Override_                    protected boolean shouldFilter() {_                        return slot == selector__                    }_                }__            }_            this.source = source__            this.filterCount = filters.size()__            this.selector = filterCount - 1__        };creates,a,multiplex,token,filter,on,the,given,input,with,a,set,of,filters;multiplex,token,filter,token,stream,input,list,function,token,stream,token,stream,filters,super,input,token,stream,source,new,multiplexer,filter,input,for,int,i,0,i,filters,size,i,final,int,slot,i,source,new,conditional,token,filter,source,filters,get,i,override,protected,boolean,should,filter,return,slot,selector,this,source,source,this,filter,count,filters,size,this,selector,filter,count,1
MultiplexerTokenFilterFactory -> MultiplexTokenFilter -> MultiplexTokenFilter(TokenStream input, List<Function<TokenStream, TokenStream>> filters);1543487738;Creates a MultiplexTokenFilter on the given input with a set of filters;MultiplexTokenFilter(TokenStream input, List<Function<TokenStream, TokenStream>> filters) {_            super(input)__            TokenStream source = new MultiplexerFilter(input)__            for (int i = 0_ i < filters.size()_ i++) {_                final int slot = i__                source = new ConditionalTokenFilter(source, filters.get(i)) {_                    @Override_                    protected boolean shouldFilter() {_                        return slot == selector__                    }_                }__            }_            this.source = source__            this.filterCount = filters.size()__            this.selector = filterCount - 1__        };creates,a,multiplex,token,filter,on,the,given,input,with,a,set,of,filters;multiplex,token,filter,token,stream,input,list,function,token,stream,token,stream,filters,super,input,token,stream,source,new,multiplexer,filter,input,for,int,i,0,i,filters,size,i,final,int,slot,i,source,new,conditional,token,filter,source,filters,get,i,override,protected,boolean,should,filter,return,slot,selector,this,source,source,this,filter,count,filters,size,this,selector,filter,count,1
