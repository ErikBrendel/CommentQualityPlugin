commented;modifiers;parameterAmount;loc;comment;code
false;public;0;16;;public void testLenientParser() throws IOException, ParseException {     ESWordnetSynonymParser parser = new ESWordnetSynonymParser(true, false, true, new StandardAnalyzer()).     String rules = "s(100000001,1,'&',a,1,0).\n" + "s(100000001,2,'and',a,1,0).\n" + "s(100000002,1,'come',v,1,0).\n" + "s(100000002,2,'advance',v,1,0).\n" + "s(100000002,3,'approach',v,1,0).".     StringReader rulesReader = new StringReader(rules).     parser.parse(rulesReader).     SynonymMap synonymMap = parser.build().     Tokenizer tokenizer = new StandardTokenizer().     tokenizer.setReader(new StringReader("approach quietly then advance & destroy")).     TokenStream ts = new SynonymFilter(tokenizer, synonymMap, false).     assertTokenStreamContents(ts, new String[] { "come", "quietly", "then", "come", "destroy" }). }
false;public;0;17;;public void testLenientParserWithSomeIncorrectLines() throws IOException, ParseException {     CharArraySet stopSet = new CharArraySet(1, true).     stopSet.add("bar").     ESWordnetSynonymParser parser = new ESWordnetSynonymParser(true, false, true, new StandardAnalyzer(stopSet)).     String rules = "s(100000001,1,'foo',v,1,0).\n" + "s(100000001,2,'bar',v,1,0).\n" + "s(100000001,3,'baz',v,1,0).".     StringReader rulesReader = new StringReader(rules).     parser.parse(rulesReader).     SynonymMap synonymMap = parser.build().     Tokenizer tokenizer = new StandardTokenizer().     tokenizer.setReader(new StringReader("first word is foo, then bar and lastly baz")).     TokenStream ts = new SynonymFilter(new StopFilter(tokenizer, stopSet), synonymMap, false).     assertTokenStreamContents(ts, new String[] { "first", "word", "is", "foo", "then", "and", "lastly", "foo" }). }
false;public;0;12;;public void testNonLenientParser() {     ESWordnetSynonymParser parser = new ESWordnetSynonymParser(true, false, false, new StandardAnalyzer()).     String rules = "s(100000001,1,'&',a,1,0).\n" + "s(100000001,2,'and',a,1,0).\n" + "s(100000002,1,'come',v,1,0).\n" + "s(100000002,2,'advance',v,1,0).\n" + "s(100000002,3,'approach',v,1,0).".     StringReader rulesReader = new StringReader(rules).     ParseException ex = expectThrows(ParseException.class, () -> parser.parse(rulesReader)).     assertThat(ex.getMessage(), containsString("Invalid synonym rule at line 1")). }
