commented;modifiers;parameterAmount;loc;comment;code
false;public;0;11;;public void testSimpleWhiteSpaceTokenizer() throws IOException {     final Settings indexSettings = Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT).build().     IndexSettings indexProperties = IndexSettingsModule.newIndexSettings(new Index("test", "_na_"), indexSettings).     WhitespaceTokenizer tokenizer = (WhitespaceTokenizer) new WhitespaceTokenizerFactory(indexProperties, null, "whitespace_maxlen", Settings.EMPTY).create().     try (Reader reader = new StringReader("one, two, three")) {         tokenizer.setReader(reader).         assertTokenStreamContents(tokenizer, new String[] { "one,", "two,", "three" }).     } }
false;public;0;30;;public void testMaxTokenLength() throws IOException {     final Settings indexSettings = Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT).build().     IndexSettings indexProperties = IndexSettingsModule.newIndexSettings(new Index("test", "_na_"), indexSettings).     final Settings settings = Settings.builder().put(WhitespaceTokenizerFactory.MAX_TOKEN_LENGTH, 2).build().     WhitespaceTokenizer tokenizer = (WhitespaceTokenizer) new WhitespaceTokenizerFactory(indexProperties, null, "whitespace_maxlen", settings).create().     try (Reader reader = new StringReader("one, two, three")) {         tokenizer.setReader(reader).         assertTokenStreamContents(tokenizer, new String[] { "on", "e,", "tw", "o,", "th", "re", "e" }).     }     final Settings defaultSettings = Settings.EMPTY.     tokenizer = (WhitespaceTokenizer) new WhitespaceTokenizerFactory(indexProperties, null, "whitespace_maxlen", defaultSettings).create().     String veryLongToken = RandomStrings.randomAsciiAlphanumOfLength(random(), 256).     try (Reader reader = new StringReader(veryLongToken)) {         tokenizer.setReader(reader).         assertTokenStreamContents(tokenizer, new String[] { veryLongToken.substring(0, 255), veryLongToken.substring(255) }).     }     final Settings tooLongSettings = Settings.builder().put(WhitespaceTokenizerFactory.MAX_TOKEN_LENGTH, 1024 * 1024 + 1).build().     IllegalArgumentException e = expectThrows(IllegalArgumentException.class, () -> new WhitespaceTokenizerFactory(indexProperties, null, "whitespace_maxlen", tooLongSettings).create()).     assertEquals("maxTokenLen must be greater than 0 and less than 1048576 passed: 1048577", e.getMessage()).     final Settings negativeSettings = Settings.builder().put(WhitespaceTokenizerFactory.MAX_TOKEN_LENGTH, -1).build().     e = expectThrows(IllegalArgumentException.class, () -> new WhitespaceTokenizerFactory(indexProperties, null, "whitespace_maxlen", negativeSettings).create()).     assertEquals("maxTokenLen must be greater than 0 and less than 1048576 passed: -1", e.getMessage()). }
