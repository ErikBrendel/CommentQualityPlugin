commented;modifiers;parameterAmount;loc;comment;code
false;public;0;12;;public void testLetter() {     // category Ll     assertTrue(CharMatcher.Basic.LETTER.isTokenChar('a')).     // category Ll     assertTrue(CharMatcher.Basic.LETTER.isTokenChar('é')).     // category Lu     assertTrue(CharMatcher.Basic.LETTER.isTokenChar('A')).     // category Lu     assertTrue(CharMatcher.Basic.LETTER.isTokenChar('Å')).     // category Lm     assertTrue(CharMatcher.Basic.LETTER.isTokenChar('ʰ')).     // category Lo     assertTrue(CharMatcher.Basic.LETTER.isTokenChar('ª')).     // category Lt     assertTrue(CharMatcher.Basic.LETTER.isTokenChar('ǅ')).     assertFalse(CharMatcher.Basic.LETTER.isTokenChar(' ')).     assertFalse(CharMatcher.Basic.LETTER.isTokenChar('0')).     assertFalse(CharMatcher.Basic.LETTER.isTokenChar('!')). }
false;public;0;5;;public void testSpace() {     assertTrue(CharMatcher.Basic.WHITESPACE.isTokenChar(' ')).     assertTrue(CharMatcher.Basic.WHITESPACE.isTokenChar('\t')).     // nbsp     assertFalse(CharMatcher.Basic.WHITESPACE.isTokenChar('\u00A0')). }
false;public;0;6;;public void testNumber() {     assertTrue(CharMatcher.Basic.DIGIT.isTokenChar('1')).     // ARABIC-INDIC DIGIT ONE     assertTrue(CharMatcher.Basic.DIGIT.isTokenChar('١')).     assertFalse(CharMatcher.Basic.DIGIT.isTokenChar(',')).     assertFalse(CharMatcher.Basic.DIGIT.isTokenChar('a')). }
false;public;0;8;;public void testSymbol() {     // category Sc     assertTrue(CharMatcher.Basic.SYMBOL.isTokenChar('$')).     // category Sm     assertTrue(CharMatcher.Basic.SYMBOL.isTokenChar('+')).     // category Sm     assertTrue(CharMatcher.Basic.SYMBOL.isTokenChar('`')).     // category Sk     assertTrue(CharMatcher.Basic.SYMBOL.isTokenChar('^')).     // category Sc     assertTrue(CharMatcher.Basic.SYMBOL.isTokenChar('¦')).     assertFalse(CharMatcher.Basic.SYMBOL.isTokenChar(' ')). }
false;public;0;10;;public void testPunctuation() {     // category Ps     assertTrue(CharMatcher.Basic.PUNCTUATION.isTokenChar('(')).     // category Pe     assertTrue(CharMatcher.Basic.PUNCTUATION.isTokenChar(')')).     // category Pc     assertTrue(CharMatcher.Basic.PUNCTUATION.isTokenChar('_')).     // category Po     assertTrue(CharMatcher.Basic.PUNCTUATION.isTokenChar('!')).     // category Pd     assertTrue(CharMatcher.Basic.PUNCTUATION.isTokenChar('-')).     // category Pi     assertTrue(CharMatcher.Basic.PUNCTUATION.isTokenChar('«')).     // category Pf     assertTrue(CharMatcher.Basic.PUNCTUATION.isTokenChar('»')).     assertFalse(CharMatcher.Basic.PUNCTUATION.isTokenChar(' ')). }
