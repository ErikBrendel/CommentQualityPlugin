# id;timestamp;commentText;codeText;commentWords;codeWords
CommonAnalysisPluginTests -> public void testNGramNoDeprecationWarningPre6_4() throws IOException;1526574077;Check that the deprecated name "nGram" does NOT issues a deprecation warning for indices created before 6.4.0;public void testNGramNoDeprecationWarningPre6_4() throws IOException {_        Settings settings = Settings.builder().put(Environment.PATH_HOME_SETTING.getKey(), createTempDir())_                .put(IndexMetaData.SETTING_VERSION_CREATED,_                        VersionUtils.randomVersionBetween(random(), Version.V_5_0_0, Version.V_6_3_0))_                .build()___        IndexSettings idxSettings = IndexSettingsModule.newIndexSettings("index", settings)__        try (CommonAnalysisPlugin commonAnalysisPlugin = new CommonAnalysisPlugin()) {_            Map<String, TokenFilterFactory> tokenFilters = createTestAnalysis(idxSettings, settings, commonAnalysisPlugin).tokenFilter__            TokenFilterFactory tokenFilterFactory = tokenFilters.get("nGram")__            Tokenizer tokenizer = new MockTokenizer()__            tokenizer.setReader(new StringReader("foo bar"))__            assertNotNull(tokenFilterFactory.create(tokenizer))__        }_    };check,that,the,deprecated,name,n,gram,does,not,issues,a,deprecation,warning,for,indices,created,before,6,4,0;public,void,throws,ioexception,settings,settings,settings,builder,put,environment,get,key,create,temp,dir,put,index,meta,data,version,utils,random,version,between,random,version,version,build,index,settings,idx,settings,index,settings,module,new,index,settings,index,settings,try,common,analysis,plugin,common,analysis,plugin,new,common,analysis,plugin,map,string,token,filter,factory,token,filters,create,test,analysis,idx,settings,settings,common,analysis,plugin,token,filter,token,filter,factory,token,filter,factory,token,filters,get,n,gram,tokenizer,tokenizer,new,mock,tokenizer,tokenizer,set,reader,new,string,reader,foo,bar,assert,not,null,token,filter,factory,create,tokenizer
CommonAnalysisPluginTests -> public void testNGramNoDeprecationWarningPre6_4() throws IOException;1535139672;Check that the deprecated name "nGram" does NOT issues a deprecation warning for indices created before 6.4.0;public void testNGramNoDeprecationWarningPre6_4() throws IOException {_        Settings settings = Settings.builder().put(Environment.PATH_HOME_SETTING.getKey(), createTempDir())_                .put(IndexMetaData.SETTING_VERSION_CREATED,_                        VersionUtils.randomVersionBetween(random(), Version.V_6_0_0, Version.V_6_3_0))_                .build()___        IndexSettings idxSettings = IndexSettingsModule.newIndexSettings("index", settings)__        try (CommonAnalysisPlugin commonAnalysisPlugin = new CommonAnalysisPlugin()) {_            Map<String, TokenFilterFactory> tokenFilters = createTestAnalysis(idxSettings, settings, commonAnalysisPlugin).tokenFilter__            TokenFilterFactory tokenFilterFactory = tokenFilters.get("nGram")__            Tokenizer tokenizer = new MockTokenizer()__            tokenizer.setReader(new StringReader("foo bar"))__            assertNotNull(tokenFilterFactory.create(tokenizer))__        }_    };check,that,the,deprecated,name,n,gram,does,not,issues,a,deprecation,warning,for,indices,created,before,6,4,0;public,void,throws,ioexception,settings,settings,settings,builder,put,environment,get,key,create,temp,dir,put,index,meta,data,version,utils,random,version,between,random,version,version,build,index,settings,idx,settings,index,settings,module,new,index,settings,index,settings,try,common,analysis,plugin,common,analysis,plugin,new,common,analysis,plugin,map,string,token,filter,factory,token,filters,create,test,analysis,idx,settings,settings,common,analysis,plugin,token,filter,token,filter,factory,token,filter,factory,token,filters,get,n,gram,tokenizer,tokenizer,new,mock,tokenizer,tokenizer,set,reader,new,string,reader,foo,bar,assert,not,null,token,filter,factory,create,tokenizer
CommonAnalysisPluginTests -> public void testNGramNoDeprecationWarningPre6_4() throws IOException;1547005320;Check that the deprecated name "nGram" does NOT issues a deprecation warning for indices created before 6.4.0;public void testNGramNoDeprecationWarningPre6_4() throws IOException {_        Settings settings = Settings.builder().put(Environment.PATH_HOME_SETTING.getKey(), createTempDir())_                .put(IndexMetaData.SETTING_VERSION_CREATED,_                        VersionUtils.randomVersionBetween(random(), Version.V_6_0_0, Version.V_6_3_0))_                .build()___        IndexSettings idxSettings = IndexSettingsModule.newIndexSettings("index", settings)__        try (CommonAnalysisPlugin commonAnalysisPlugin = new CommonAnalysisPlugin()) {_            Map<String, TokenFilterFactory> tokenFilters = createTestAnalysis(idxSettings, settings, commonAnalysisPlugin).tokenFilter__            TokenFilterFactory tokenFilterFactory = tokenFilters.get("nGram")__            Tokenizer tokenizer = new MockTokenizer()__            tokenizer.setReader(new StringReader("foo bar"))__            assertNotNull(tokenFilterFactory.create(tokenizer))__        }_    };check,that,the,deprecated,name,n,gram,does,not,issues,a,deprecation,warning,for,indices,created,before,6,4,0;public,void,throws,ioexception,settings,settings,settings,builder,put,environment,get,key,create,temp,dir,put,index,meta,data,version,utils,random,version,between,random,version,version,build,index,settings,idx,settings,index,settings,module,new,index,settings,index,settings,try,common,analysis,plugin,common,analysis,plugin,new,common,analysis,plugin,map,string,token,filter,factory,token,filters,create,test,analysis,idx,settings,settings,common,analysis,plugin,token,filter,token,filter,factory,token,filter,factory,token,filters,get,n,gram,tokenizer,tokenizer,new,mock,tokenizer,tokenizer,set,reader,new,string,reader,foo,bar,assert,not,null,token,filter,factory,create,tokenizer
CommonAnalysisPluginTests -> public void testEdgeNGramNoDeprecationWarningPre6_4() throws IOException;1526574077;Check that the deprecated name "edgeNGram" does NOT issues a deprecation warning for indices created before 6.4.0;public void testEdgeNGramNoDeprecationWarningPre6_4() throws IOException {_        Settings settings = Settings.builder().put(Environment.PATH_HOME_SETTING.getKey(), createTempDir())_                .put(IndexMetaData.SETTING_VERSION_CREATED,_                        VersionUtils.randomVersionBetween(random(), Version.V_5_0_0, Version.V_6_3_0))_                .build()___        IndexSettings idxSettings = IndexSettingsModule.newIndexSettings("index", settings)__        try (CommonAnalysisPlugin commonAnalysisPlugin = new CommonAnalysisPlugin()) {_            Map<String, TokenFilterFactory> tokenFilters = createTestAnalysis(idxSettings, settings, commonAnalysisPlugin).tokenFilter__            TokenFilterFactory tokenFilterFactory = tokenFilters.get("edgeNGram")__            Tokenizer tokenizer = new MockTokenizer()__            tokenizer.setReader(new StringReader("foo bar"))__            assertNotNull(tokenFilterFactory.create(tokenizer))__        }_    };check,that,the,deprecated,name,edge,ngram,does,not,issues,a,deprecation,warning,for,indices,created,before,6,4,0;public,void,throws,ioexception,settings,settings,settings,builder,put,environment,get,key,create,temp,dir,put,index,meta,data,version,utils,random,version,between,random,version,version,build,index,settings,idx,settings,index,settings,module,new,index,settings,index,settings,try,common,analysis,plugin,common,analysis,plugin,new,common,analysis,plugin,map,string,token,filter,factory,token,filters,create,test,analysis,idx,settings,settings,common,analysis,plugin,token,filter,token,filter,factory,token,filter,factory,token,filters,get,edge,ngram,tokenizer,tokenizer,new,mock,tokenizer,tokenizer,set,reader,new,string,reader,foo,bar,assert,not,null,token,filter,factory,create,tokenizer
CommonAnalysisPluginTests -> public void testEdgeNGramNoDeprecationWarningPre6_4() throws IOException;1535139672;Check that the deprecated name "edgeNGram" does NOT issues a deprecation warning for indices created before 6.4.0;public void testEdgeNGramNoDeprecationWarningPre6_4() throws IOException {_        Settings settings = Settings.builder().put(Environment.PATH_HOME_SETTING.getKey(), createTempDir())_                .put(IndexMetaData.SETTING_VERSION_CREATED,_                        VersionUtils.randomVersionBetween(random(), Version.V_6_0_0, Version.V_6_3_0))_                .build()___        IndexSettings idxSettings = IndexSettingsModule.newIndexSettings("index", settings)__        try (CommonAnalysisPlugin commonAnalysisPlugin = new CommonAnalysisPlugin()) {_            Map<String, TokenFilterFactory> tokenFilters = createTestAnalysis(idxSettings, settings, commonAnalysisPlugin).tokenFilter__            TokenFilterFactory tokenFilterFactory = tokenFilters.get("edgeNGram")__            Tokenizer tokenizer = new MockTokenizer()__            tokenizer.setReader(new StringReader("foo bar"))__            assertNotNull(tokenFilterFactory.create(tokenizer))__        }_    };check,that,the,deprecated,name,edge,ngram,does,not,issues,a,deprecation,warning,for,indices,created,before,6,4,0;public,void,throws,ioexception,settings,settings,settings,builder,put,environment,get,key,create,temp,dir,put,index,meta,data,version,utils,random,version,between,random,version,version,build,index,settings,idx,settings,index,settings,module,new,index,settings,index,settings,try,common,analysis,plugin,common,analysis,plugin,new,common,analysis,plugin,map,string,token,filter,factory,token,filters,create,test,analysis,idx,settings,settings,common,analysis,plugin,token,filter,token,filter,factory,token,filter,factory,token,filters,get,edge,ngram,tokenizer,tokenizer,new,mock,tokenizer,tokenizer,set,reader,new,string,reader,foo,bar,assert,not,null,token,filter,factory,create,tokenizer
CommonAnalysisPluginTests -> public void testEdgeNGramNoDeprecationWarningPre6_4() throws IOException;1547005320;Check that the deprecated name "edgeNGram" does NOT issues a deprecation warning for indices created before 6.4.0;public void testEdgeNGramNoDeprecationWarningPre6_4() throws IOException {_        Settings settings = Settings.builder().put(Environment.PATH_HOME_SETTING.getKey(), createTempDir())_                .put(IndexMetaData.SETTING_VERSION_CREATED,_                        VersionUtils.randomVersionBetween(random(), Version.V_6_0_0, Version.V_6_3_0))_                .build()___        IndexSettings idxSettings = IndexSettingsModule.newIndexSettings("index", settings)__        try (CommonAnalysisPlugin commonAnalysisPlugin = new CommonAnalysisPlugin()) {_            Map<String, TokenFilterFactory> tokenFilters = createTestAnalysis(idxSettings, settings, commonAnalysisPlugin).tokenFilter__            TokenFilterFactory tokenFilterFactory = tokenFilters.get("edgeNGram")__            Tokenizer tokenizer = new MockTokenizer()__            tokenizer.setReader(new StringReader("foo bar"))__            assertNotNull(tokenFilterFactory.create(tokenizer))__        }_    };check,that,the,deprecated,name,edge,ngram,does,not,issues,a,deprecation,warning,for,indices,created,before,6,4,0;public,void,throws,ioexception,settings,settings,settings,builder,put,environment,get,key,create,temp,dir,put,index,meta,data,version,utils,random,version,between,random,version,version,build,index,settings,idx,settings,index,settings,module,new,index,settings,index,settings,try,common,analysis,plugin,common,analysis,plugin,new,common,analysis,plugin,map,string,token,filter,factory,token,filters,create,test,analysis,idx,settings,settings,common,analysis,plugin,token,filter,token,filter,factory,token,filter,factory,token,filters,get,edge,ngram,tokenizer,tokenizer,new,mock,tokenizer,tokenizer,set,reader,new,string,reader,foo,bar,assert,not,null,token,filter,factory,create,tokenizer
CommonAnalysisPluginTests -> public void testStandardHtmlStripAnalyzerDeprecationError() throws IOException;1547005320;Check that the deprecated analyzer name "standard_html_strip" throws exception for indices created since 7.0.0;public void testStandardHtmlStripAnalyzerDeprecationError() throws IOException {_        Settings settings = Settings.builder().put(Environment.PATH_HOME_SETTING.getKey(), createTempDir())_            .put(IndexMetaData.SETTING_VERSION_CREATED,_                VersionUtils.randomVersionBetween(random(), Version.V_7_0_0, Version.CURRENT))_            .put("index.analysis.analyzer.custom_analyzer.type", "standard_html_strip")_            .putList("index.analysis.analyzer.custom_analyzer.stopwords", "a", "b")_            .build()___        IndexSettings idxSettings = IndexSettingsModule.newIndexSettings("index", settings)__        CommonAnalysisPlugin commonAnalysisPlugin = new CommonAnalysisPlugin()__        IllegalArgumentException ex = expectThrows(IllegalArgumentException.class,_            () -> createTestAnalysis(idxSettings, settings, commonAnalysisPlugin))__        assertEquals("[standard_html_strip] analyzer is not supported for new indices, " +_            "use a custom analyzer using [standard] tokenizer and [html_strip] char_filter, plus [lowercase] filter", ex.getMessage())__    };check,that,the,deprecated,analyzer,name,throws,exception,for,indices,created,since,7,0,0;public,void,test,standard,html,strip,analyzer,deprecation,error,throws,ioexception,settings,settings,settings,builder,put,environment,get,key,create,temp,dir,put,index,meta,data,version,utils,random,version,between,random,version,version,current,put,index,analysis,analyzer,type,put,list,index,analysis,analyzer,stopwords,a,b,build,index,settings,idx,settings,index,settings,module,new,index,settings,index,settings,common,analysis,plugin,common,analysis,plugin,new,common,analysis,plugin,illegal,argument,exception,ex,expect,throws,illegal,argument,exception,class,create,test,analysis,idx,settings,settings,common,analysis,plugin,assert,equals,analyzer,is,not,supported,for,new,indices,use,a,custom,analyzer,using,standard,tokenizer,and,plus,lowercase,filter,ex,get,message
CommonAnalysisPluginTests -> public void testStandardHtmlStripAnalyzerDeprecationError() throws IOException;1550258105;Check that the deprecated analyzer name "standard_html_strip" throws exception for indices created since 7.0.0;public void testStandardHtmlStripAnalyzerDeprecationError() throws IOException {_        Settings settings = Settings.builder().put(Environment.PATH_HOME_SETTING.getKey(), createTempDir())_            .put(IndexMetaData.SETTING_VERSION_CREATED,_                VersionUtils.randomVersionBetween(random(), Version.V_7_0_0, Version.CURRENT))_            .put("index.analysis.analyzer.custom_analyzer.type", "standard_html_strip")_            .putList("index.analysis.analyzer.custom_analyzer.stopwords", "a", "b")_            .build()___        IndexSettings idxSettings = IndexSettingsModule.newIndexSettings("index", settings)__        CommonAnalysisPlugin commonAnalysisPlugin = new CommonAnalysisPlugin()__        IllegalArgumentException ex = expectThrows(IllegalArgumentException.class,_            () -> createTestAnalysis(idxSettings, settings, commonAnalysisPlugin))__        assertEquals("[standard_html_strip] analyzer is not supported for new indices, " +_            "use a custom analyzer using [standard] tokenizer and [html_strip] char_filter, plus [lowercase] filter", ex.getMessage())__    };check,that,the,deprecated,analyzer,name,throws,exception,for,indices,created,since,7,0,0;public,void,test,standard,html,strip,analyzer,deprecation,error,throws,ioexception,settings,settings,settings,builder,put,environment,get,key,create,temp,dir,put,index,meta,data,version,utils,random,version,between,random,version,version,current,put,index,analysis,analyzer,type,put,list,index,analysis,analyzer,stopwords,a,b,build,index,settings,idx,settings,index,settings,module,new,index,settings,index,settings,common,analysis,plugin,common,analysis,plugin,new,common,analysis,plugin,illegal,argument,exception,ex,expect,throws,illegal,argument,exception,class,create,test,analysis,idx,settings,settings,common,analysis,plugin,assert,equals,analyzer,is,not,supported,for,new,indices,use,a,custom,analyzer,using,standard,tokenizer,and,plus,lowercase,filter,ex,get,message
CommonAnalysisPluginTests -> public void testEdgeNGramDeprecationWarning() throws IOException;1526574077;Check that the deprecated name "edgeNGram" issues a deprecation warning for indices created since 6.3.0;public void testEdgeNGramDeprecationWarning() throws IOException {_        Settings settings = Settings.builder().put(Environment.PATH_HOME_SETTING.getKey(), createTempDir())_                .put(IndexMetaData.SETTING_VERSION_CREATED, VersionUtils.randomVersionBetween(random(), Version.V_6_4_0, Version.CURRENT))_                .build()___        IndexSettings idxSettings = IndexSettingsModule.newIndexSettings("index", settings)__        try (CommonAnalysisPlugin commonAnalysisPlugin = new CommonAnalysisPlugin()) {_            Map<String, TokenFilterFactory> tokenFilters = createTestAnalysis(idxSettings, settings, commonAnalysisPlugin).tokenFilter__            TokenFilterFactory tokenFilterFactory = tokenFilters.get("edgeNGram")__            Tokenizer tokenizer = new MockTokenizer()__            tokenizer.setReader(new StringReader("foo bar"))__            assertNotNull(tokenFilterFactory.create(tokenizer))__            assertWarnings(_                    "The [edgeNGram] token filter name is deprecated and will be removed in a future version. "_                    + "Please change the filter name to [edge_ngram] instead.")__        }_    };check,that,the,deprecated,name,edge,ngram,issues,a,deprecation,warning,for,indices,created,since,6,3,0;public,void,test,edge,ngram,deprecation,warning,throws,ioexception,settings,settings,settings,builder,put,environment,get,key,create,temp,dir,put,index,meta,data,version,utils,random,version,between,random,version,version,current,build,index,settings,idx,settings,index,settings,module,new,index,settings,index,settings,try,common,analysis,plugin,common,analysis,plugin,new,common,analysis,plugin,map,string,token,filter,factory,token,filters,create,test,analysis,idx,settings,settings,common,analysis,plugin,token,filter,token,filter,factory,token,filter,factory,token,filters,get,edge,ngram,tokenizer,tokenizer,new,mock,tokenizer,tokenizer,set,reader,new,string,reader,foo,bar,assert,not,null,token,filter,factory,create,tokenizer,assert,warnings,the,edge,ngram,token,filter,name,is,deprecated,and,will,be,removed,in,a,future,version,please,change,the,filter,name,to,instead
CommonAnalysisPluginTests -> public void testEdgeNGramDeprecationWarning() throws IOException;1535139672;Check that the deprecated name "edgeNGram" issues a deprecation warning for indices created since 6.3.0;public void testEdgeNGramDeprecationWarning() throws IOException {_        Settings settings = Settings.builder().put(Environment.PATH_HOME_SETTING.getKey(), createTempDir())_                .put(IndexMetaData.SETTING_VERSION_CREATED, VersionUtils.randomVersionBetween(random(), Version.V_6_4_0, Version.CURRENT))_                .build()___        IndexSettings idxSettings = IndexSettingsModule.newIndexSettings("index", settings)__        try (CommonAnalysisPlugin commonAnalysisPlugin = new CommonAnalysisPlugin()) {_            Map<String, TokenFilterFactory> tokenFilters = createTestAnalysis(idxSettings, settings, commonAnalysisPlugin).tokenFilter__            TokenFilterFactory tokenFilterFactory = tokenFilters.get("edgeNGram")__            Tokenizer tokenizer = new MockTokenizer()__            tokenizer.setReader(new StringReader("foo bar"))__            assertNotNull(tokenFilterFactory.create(tokenizer))__            assertWarnings(_                    "The [edgeNGram] token filter name is deprecated and will be removed in a future version. "_                    + "Please change the filter name to [edge_ngram] instead.")__        }_    };check,that,the,deprecated,name,edge,ngram,issues,a,deprecation,warning,for,indices,created,since,6,3,0;public,void,test,edge,ngram,deprecation,warning,throws,ioexception,settings,settings,settings,builder,put,environment,get,key,create,temp,dir,put,index,meta,data,version,utils,random,version,between,random,version,version,current,build,index,settings,idx,settings,index,settings,module,new,index,settings,index,settings,try,common,analysis,plugin,common,analysis,plugin,new,common,analysis,plugin,map,string,token,filter,factory,token,filters,create,test,analysis,idx,settings,settings,common,analysis,plugin,token,filter,token,filter,factory,token,filter,factory,token,filters,get,edge,ngram,tokenizer,tokenizer,new,mock,tokenizer,tokenizer,set,reader,new,string,reader,foo,bar,assert,not,null,token,filter,factory,create,tokenizer,assert,warnings,the,edge,ngram,token,filter,name,is,deprecated,and,will,be,removed,in,a,future,version,please,change,the,filter,name,to,instead
CommonAnalysisPluginTests -> public void testEdgeNGramDeprecationWarning() throws IOException;1547005320;Check that the deprecated name "edgeNGram" issues a deprecation warning for indices created since 6.3.0;public void testEdgeNGramDeprecationWarning() throws IOException {_        Settings settings = Settings.builder().put(Environment.PATH_HOME_SETTING.getKey(), createTempDir())_                .put(IndexMetaData.SETTING_VERSION_CREATED, VersionUtils.randomVersionBetween(random(), Version.V_6_4_0, Version.CURRENT))_                .build()___        IndexSettings idxSettings = IndexSettingsModule.newIndexSettings("index", settings)__        try (CommonAnalysisPlugin commonAnalysisPlugin = new CommonAnalysisPlugin()) {_            Map<String, TokenFilterFactory> tokenFilters = createTestAnalysis(idxSettings, settings, commonAnalysisPlugin).tokenFilter__            TokenFilterFactory tokenFilterFactory = tokenFilters.get("edgeNGram")__            Tokenizer tokenizer = new MockTokenizer()__            tokenizer.setReader(new StringReader("foo bar"))__            assertNotNull(tokenFilterFactory.create(tokenizer))__            assertWarnings(_                    "The [edgeNGram] token filter name is deprecated and will be removed in a future version. "_                    + "Please change the filter name to [edge_ngram] instead.")__        }_    };check,that,the,deprecated,name,edge,ngram,issues,a,deprecation,warning,for,indices,created,since,6,3,0;public,void,test,edge,ngram,deprecation,warning,throws,ioexception,settings,settings,settings,builder,put,environment,get,key,create,temp,dir,put,index,meta,data,version,utils,random,version,between,random,version,version,current,build,index,settings,idx,settings,index,settings,module,new,index,settings,index,settings,try,common,analysis,plugin,common,analysis,plugin,new,common,analysis,plugin,map,string,token,filter,factory,token,filters,create,test,analysis,idx,settings,settings,common,analysis,plugin,token,filter,token,filter,factory,token,filter,factory,token,filters,get,edge,ngram,tokenizer,tokenizer,new,mock,tokenizer,tokenizer,set,reader,new,string,reader,foo,bar,assert,not,null,token,filter,factory,create,tokenizer,assert,warnings,the,edge,ngram,token,filter,name,is,deprecated,and,will,be,removed,in,a,future,version,please,change,the,filter,name,to,instead
CommonAnalysisPluginTests -> public void testStandardHtmlStripAnalyzerDeprecationWarning() throws IOException;1547005320;Check that the deprecated analyzer name "standard_html_strip" issues a deprecation warning for indices created since 6.5.0 until 7;public void testStandardHtmlStripAnalyzerDeprecationWarning() throws IOException {_        Settings settings = Settings.builder().put(Environment.PATH_HOME_SETTING.getKey(), createTempDir())_            .put(IndexMetaData.SETTING_VERSION_CREATED,_                VersionUtils.randomVersionBetween(random(), Version.V_6_0_0,_                    VersionUtils.getPreviousVersion(Version.V_7_0_0)))_            .put("index.analysis.analyzer.custom_analyzer.type", "standard_html_strip")_            .putList("index.analysis.analyzer.custom_analyzer.stopwords", "a", "b")_            .build()___        IndexSettings idxSettings = IndexSettingsModule.newIndexSettings("index", settings)__        try (CommonAnalysisPlugin commonAnalysisPlugin = new CommonAnalysisPlugin()) {_            IndexAnalyzers analyzers = createTestAnalysis(idxSettings, settings, commonAnalysisPlugin).indexAnalyzers__            Analyzer analyzer = analyzers.get("custom_analyzer")__            assertNotNull(((NamedAnalyzer) analyzer).analyzer())__            assertWarnings(_                "Deprecated analyzer [standard_html_strip] used, " +_                    "replace it with a custom analyzer using [standard] tokenizer and [html_strip] char_filter, plus [lowercase] filter")__        }_    };check,that,the,deprecated,analyzer,name,issues,a,deprecation,warning,for,indices,created,since,6,5,0,until,7;public,void,test,standard,html,strip,analyzer,deprecation,warning,throws,ioexception,settings,settings,settings,builder,put,environment,get,key,create,temp,dir,put,index,meta,data,version,utils,random,version,between,random,version,version,utils,get,previous,version,version,put,index,analysis,analyzer,type,put,list,index,analysis,analyzer,stopwords,a,b,build,index,settings,idx,settings,index,settings,module,new,index,settings,index,settings,try,common,analysis,plugin,common,analysis,plugin,new,common,analysis,plugin,index,analyzers,analyzers,create,test,analysis,idx,settings,settings,common,analysis,plugin,index,analyzers,analyzer,analyzer,analyzers,get,assert,not,null,named,analyzer,analyzer,analyzer,assert,warnings,deprecated,analyzer,used,replace,it,with,a,custom,analyzer,using,standard,tokenizer,and,plus,lowercase,filter
CommonAnalysisPluginTests -> public void testStandardHtmlStripAnalyzerDeprecationWarning() throws IOException;1550258105;Check that the deprecated analyzer name "standard_html_strip" issues a deprecation warning for indices created since 6.5.0 until 7;public void testStandardHtmlStripAnalyzerDeprecationWarning() throws IOException {_        Settings settings = Settings.builder().put(Environment.PATH_HOME_SETTING.getKey(), createTempDir())_            .put(IndexMetaData.SETTING_VERSION_CREATED,_                VersionUtils.randomVersionBetween(random(), Version.V_6_0_0,_                    VersionUtils.getPreviousVersion(Version.V_7_0_0)))_            .put("index.analysis.analyzer.custom_analyzer.type", "standard_html_strip")_            .putList("index.analysis.analyzer.custom_analyzer.stopwords", "a", "b")_            .build()___        IndexSettings idxSettings = IndexSettingsModule.newIndexSettings("index", settings)__        try (CommonAnalysisPlugin commonAnalysisPlugin = new CommonAnalysisPlugin()) {_            IndexAnalyzers analyzers = createTestAnalysis(idxSettings, settings, commonAnalysisPlugin).indexAnalyzers__            Analyzer analyzer = analyzers.get("custom_analyzer")__            assertNotNull(((NamedAnalyzer) analyzer).analyzer())__            assertWarnings(_                "Deprecated analyzer [standard_html_strip] used, " +_                    "replace it with a custom analyzer using [standard] tokenizer and [html_strip] char_filter, plus [lowercase] filter")__        }_    };check,that,the,deprecated,analyzer,name,issues,a,deprecation,warning,for,indices,created,since,6,5,0,until,7;public,void,test,standard,html,strip,analyzer,deprecation,warning,throws,ioexception,settings,settings,settings,builder,put,environment,get,key,create,temp,dir,put,index,meta,data,version,utils,random,version,between,random,version,version,utils,get,previous,version,version,put,index,analysis,analyzer,type,put,list,index,analysis,analyzer,stopwords,a,b,build,index,settings,idx,settings,index,settings,module,new,index,settings,index,settings,try,common,analysis,plugin,common,analysis,plugin,new,common,analysis,plugin,index,analyzers,analyzers,create,test,analysis,idx,settings,settings,common,analysis,plugin,index,analyzers,analyzer,analyzer,analyzers,get,assert,not,null,named,analyzer,analyzer,analyzer,assert,warnings,deprecated,analyzer,used,replace,it,with,a,custom,analyzer,using,standard,tokenizer,and,plus,lowercase,filter
CommonAnalysisPluginTests -> public void testNGramDeprecationWarning() throws IOException;1526574077;Check that the deprecated name "nGram" issues a deprecation warning for indices created since 6.3.0;public void testNGramDeprecationWarning() throws IOException {_        Settings settings = Settings.builder().put(Environment.PATH_HOME_SETTING.getKey(), createTempDir())_                .put(IndexMetaData.SETTING_VERSION_CREATED, VersionUtils.randomVersionBetween(random(), Version.V_6_4_0, Version.CURRENT))_                .build()___        IndexSettings idxSettings = IndexSettingsModule.newIndexSettings("index", settings)__        try (CommonAnalysisPlugin commonAnalysisPlugin = new CommonAnalysisPlugin()) {_            Map<String, TokenFilterFactory> tokenFilters = createTestAnalysis(idxSettings, settings, commonAnalysisPlugin).tokenFilter__            TokenFilterFactory tokenFilterFactory = tokenFilters.get("nGram")__            Tokenizer tokenizer = new MockTokenizer()__            tokenizer.setReader(new StringReader("foo bar"))__            assertNotNull(tokenFilterFactory.create(tokenizer))__            assertWarnings(_                    "The [nGram] token filter name is deprecated and will be removed in a future version. "_                    + "Please change the filter name to [ngram] instead.")__        }_    };check,that,the,deprecated,name,n,gram,issues,a,deprecation,warning,for,indices,created,since,6,3,0;public,void,test,ngram,deprecation,warning,throws,ioexception,settings,settings,settings,builder,put,environment,get,key,create,temp,dir,put,index,meta,data,version,utils,random,version,between,random,version,version,current,build,index,settings,idx,settings,index,settings,module,new,index,settings,index,settings,try,common,analysis,plugin,common,analysis,plugin,new,common,analysis,plugin,map,string,token,filter,factory,token,filters,create,test,analysis,idx,settings,settings,common,analysis,plugin,token,filter,token,filter,factory,token,filter,factory,token,filters,get,n,gram,tokenizer,tokenizer,new,mock,tokenizer,tokenizer,set,reader,new,string,reader,foo,bar,assert,not,null,token,filter,factory,create,tokenizer,assert,warnings,the,n,gram,token,filter,name,is,deprecated,and,will,be,removed,in,a,future,version,please,change,the,filter,name,to,ngram,instead
CommonAnalysisPluginTests -> public void testNGramDeprecationWarning() throws IOException;1535139672;Check that the deprecated name "nGram" issues a deprecation warning for indices created since 6.3.0;public void testNGramDeprecationWarning() throws IOException {_        Settings settings = Settings.builder().put(Environment.PATH_HOME_SETTING.getKey(), createTempDir())_                .put(IndexMetaData.SETTING_VERSION_CREATED, VersionUtils.randomVersionBetween(random(), Version.V_6_4_0, Version.CURRENT))_                .build()___        IndexSettings idxSettings = IndexSettingsModule.newIndexSettings("index", settings)__        try (CommonAnalysisPlugin commonAnalysisPlugin = new CommonAnalysisPlugin()) {_            Map<String, TokenFilterFactory> tokenFilters = createTestAnalysis(idxSettings, settings, commonAnalysisPlugin).tokenFilter__            TokenFilterFactory tokenFilterFactory = tokenFilters.get("nGram")__            Tokenizer tokenizer = new MockTokenizer()__            tokenizer.setReader(new StringReader("foo bar"))__            assertNotNull(tokenFilterFactory.create(tokenizer))__            assertWarnings(_                    "The [nGram] token filter name is deprecated and will be removed in a future version. "_                    + "Please change the filter name to [ngram] instead.")__        }_    };check,that,the,deprecated,name,n,gram,issues,a,deprecation,warning,for,indices,created,since,6,3,0;public,void,test,ngram,deprecation,warning,throws,ioexception,settings,settings,settings,builder,put,environment,get,key,create,temp,dir,put,index,meta,data,version,utils,random,version,between,random,version,version,current,build,index,settings,idx,settings,index,settings,module,new,index,settings,index,settings,try,common,analysis,plugin,common,analysis,plugin,new,common,analysis,plugin,map,string,token,filter,factory,token,filters,create,test,analysis,idx,settings,settings,common,analysis,plugin,token,filter,token,filter,factory,token,filter,factory,token,filters,get,n,gram,tokenizer,tokenizer,new,mock,tokenizer,tokenizer,set,reader,new,string,reader,foo,bar,assert,not,null,token,filter,factory,create,tokenizer,assert,warnings,the,n,gram,token,filter,name,is,deprecated,and,will,be,removed,in,a,future,version,please,change,the,filter,name,to,ngram,instead
CommonAnalysisPluginTests -> public void testNGramDeprecationWarning() throws IOException;1547005320;Check that the deprecated name "nGram" issues a deprecation warning for indices created since 6.3.0;public void testNGramDeprecationWarning() throws IOException {_        Settings settings = Settings.builder().put(Environment.PATH_HOME_SETTING.getKey(), createTempDir())_                .put(IndexMetaData.SETTING_VERSION_CREATED, VersionUtils.randomVersionBetween(random(), Version.V_6_4_0, Version.CURRENT))_                .build()___        IndexSettings idxSettings = IndexSettingsModule.newIndexSettings("index", settings)__        try (CommonAnalysisPlugin commonAnalysisPlugin = new CommonAnalysisPlugin()) {_            Map<String, TokenFilterFactory> tokenFilters = createTestAnalysis(idxSettings, settings, commonAnalysisPlugin).tokenFilter__            TokenFilterFactory tokenFilterFactory = tokenFilters.get("nGram")__            Tokenizer tokenizer = new MockTokenizer()__            tokenizer.setReader(new StringReader("foo bar"))__            assertNotNull(tokenFilterFactory.create(tokenizer))__            assertWarnings(_                    "The [nGram] token filter name is deprecated and will be removed in a future version. "_                    + "Please change the filter name to [ngram] instead.")__        }_    };check,that,the,deprecated,name,n,gram,issues,a,deprecation,warning,for,indices,created,since,6,3,0;public,void,test,ngram,deprecation,warning,throws,ioexception,settings,settings,settings,builder,put,environment,get,key,create,temp,dir,put,index,meta,data,version,utils,random,version,between,random,version,version,current,build,index,settings,idx,settings,index,settings,module,new,index,settings,index,settings,try,common,analysis,plugin,common,analysis,plugin,new,common,analysis,plugin,map,string,token,filter,factory,token,filters,create,test,analysis,idx,settings,settings,common,analysis,plugin,token,filter,token,filter,factory,token,filter,factory,token,filters,get,n,gram,tokenizer,tokenizer,new,mock,tokenizer,tokenizer,set,reader,new,string,reader,foo,bar,assert,not,null,token,filter,factory,create,tokenizer,assert,warnings,the,n,gram,token,filter,name,is,deprecated,and,will,be,removed,in,a,future,version,please,change,the,filter,name,to,ngram,instead
