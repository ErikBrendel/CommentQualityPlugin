# id;timestamp;commentText;codeText;commentWords;codeWords
ScaledFloatFieldMapper -> ScaledFloatFieldType -> private double scale(Object input);1547190475;Parses input value and multiplies it with the scaling factor._Uses the round-trip of creating a {@link BigDecimal} from the stringified {@code double}_input to ensure intuitively exact floating point operations._(e.g. for a scaling factor of 100, JVM behaviour results in {@code 79.99D * 100 ==> 7998.99..} compared to_{@code scale(79.99) ==> 7999})_@param input Input value to parse floating point num from_@return Scaled value;private double scale(Object input) {_            return new BigDecimal(Double.toString(parse(input))).multiply(BigDecimal.valueOf(scalingFactor)).doubleValue()__        };parses,input,value,and,multiplies,it,with,the,scaling,factor,uses,the,round,trip,of,creating,a,link,big,decimal,from,the,stringified,code,double,input,to,ensure,intuitively,exact,floating,point,operations,e,g,for,a,scaling,factor,of,100,jvm,behaviour,results,in,code,79,99d,100,7998,99,compared,to,code,scale,79,99,7999,param,input,input,value,to,parse,floating,point,num,from,return,scaled,value;private,double,scale,object,input,return,new,big,decimal,double,to,string,parse,input,multiply,big,decimal,value,of,scaling,factor,double,value
ScaledFloatFieldMapper -> ScaledFloatFieldType -> private double scale(Object input);1548236405;Parses input value and multiplies it with the scaling factor._Uses the round-trip of creating a {@link BigDecimal} from the stringified {@code double}_input to ensure intuitively exact floating point operations._(e.g. for a scaling factor of 100, JVM behaviour results in {@code 79.99D * 100 ==> 7998.99..} compared to_{@code scale(79.99) ==> 7999})_@param input Input value to parse floating point num from_@return Scaled value;private double scale(Object input) {_            return new BigDecimal(Double.toString(parse(input))).multiply(BigDecimal.valueOf(scalingFactor)).doubleValue()__        };parses,input,value,and,multiplies,it,with,the,scaling,factor,uses,the,round,trip,of,creating,a,link,big,decimal,from,the,stringified,code,double,input,to,ensure,intuitively,exact,floating,point,operations,e,g,for,a,scaling,factor,of,100,jvm,behaviour,results,in,code,79,99d,100,7998,99,compared,to,code,scale,79,99,7999,param,input,input,value,to,parse,floating,point,num,from,return,scaled,value;private,double,scale,object,input,return,new,big,decimal,double,to,string,parse,input,multiply,big,decimal,value,of,scaling,factor,double,value
ScaledFloatFieldMapper -> private static double objectToDouble(Object value);1524684173;Converts an Object to a double by checking it against known types first;private static double objectToDouble(Object value) {_        double doubleValue___        if (value instanceof Number) {_            doubleValue = ((Number) value).doubleValue()__        } else if (value instanceof BytesRef) {_            doubleValue = Double.parseDouble(((BytesRef) value).utf8ToString())__        } else {_            doubleValue = Double.parseDouble(value.toString())__        }__        return doubleValue__    };converts,an,object,to,a,double,by,checking,it,against,known,types,first;private,static,double,object,to,double,object,value,double,double,value,if,value,instanceof,number,double,value,number,value,double,value,else,if,value,instanceof,bytes,ref,double,value,double,parse,double,bytes,ref,value,utf8to,string,else,double,value,double,parse,double,value,to,string,return,double,value
ScaledFloatFieldMapper -> private static double objectToDouble(Object value);1547190475;Converts an Object to a double by checking it against known types first;private static double objectToDouble(Object value) {_        double doubleValue___        if (value instanceof Number) {_            doubleValue = ((Number) value).doubleValue()__        } else if (value instanceof BytesRef) {_            doubleValue = Double.parseDouble(((BytesRef) value).utf8ToString())__        } else {_            doubleValue = Double.parseDouble(value.toString())__        }__        return doubleValue__    };converts,an,object,to,a,double,by,checking,it,against,known,types,first;private,static,double,object,to,double,object,value,double,double,value,if,value,instanceof,number,double,value,number,value,double,value,else,if,value,instanceof,bytes,ref,double,value,double,parse,double,bytes,ref,value,utf8to,string,else,double,value,double,parse,double,value,to,string,return,double,value
ScaledFloatFieldMapper -> private static double objectToDouble(Object value);1548236405;Converts an Object to a double by checking it against known types first;private static double objectToDouble(Object value) {_        double doubleValue___        if (value instanceof Number) {_            doubleValue = ((Number) value).doubleValue()__        } else if (value instanceof BytesRef) {_            doubleValue = Double.parseDouble(((BytesRef) value).utf8ToString())__        } else {_            doubleValue = Double.parseDouble(value.toString())__        }__        return doubleValue__    };converts,an,object,to,a,double,by,checking,it,against,known,types,first;private,static,double,object,to,double,object,value,double,double,value,if,value,instanceof,number,double,value,number,value,double,value,else,if,value,instanceof,bytes,ref,double,value,double,parse,double,bytes,ref,value,utf8to,string,else,double,value,double,parse,double,value,to,string,return,double,value
