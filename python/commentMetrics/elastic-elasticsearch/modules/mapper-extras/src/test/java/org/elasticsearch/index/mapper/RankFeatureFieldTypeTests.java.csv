commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected MappedFieldType createDefaultFieldType() {     return new RankFeatureFieldMapper.RankFeatureFieldType(). }
false;public;1;5;;@Override public void modify(MappedFieldType ft) {     RankFeatureFieldMapper.RankFeatureFieldType tft = (RankFeatureFieldMapper.RankFeatureFieldType) ft.     tft.setPositiveScoreImpact(tft.positiveScoreImpact() == false). }
false;public;1;5;;@Override public void normalizeOther(MappedFieldType other) {     super.normalizeOther(other).     ((RankFeatureFieldMapper.RankFeatureFieldType) other).setPositiveScoreImpact(true). }
false;public;0;15;;@Before public void setupProperties() {     addModifier(new Modifier("positive_score_impact", false) {          @Override         public void modify(MappedFieldType ft) {             RankFeatureFieldMapper.RankFeatureFieldType tft = (RankFeatureFieldMapper.RankFeatureFieldType) ft.             tft.setPositiveScoreImpact(tft.positiveScoreImpact() == false).         }          @Override         public void normalizeOther(MappedFieldType other) {             super.normalizeOther(other).             ((RankFeatureFieldMapper.RankFeatureFieldType) other).setPositiveScoreImpact(true).         }     }). }
