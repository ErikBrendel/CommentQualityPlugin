commented;modifiers;parameterAmount;loc;comment;code
false;public;2;4;;@Override public void visitJumpInsn(int opcode, Label label) {     mv.visitJumpInsn(opcode, label). }
false;public;4;4;;@Override public void visitTryCatchBlock(Label start, Label end, Label handler, String type) {     mv.visitTryCatchBlock(start, end, handler, type). }
false;public;5;17;;@Override public MethodVisitor visitMethod(int access, String name, String desc, String signature, String[] exceptions) {     MethodVisitor in = cv.visitMethod(access, name, desc, signature, exceptions).     CheckMethodAdapter checker = new CheckMethodAdapter(WriterConstants.ASM_VERSION, in, new HashMap<Label, Integer>()) {          @Override         public void visitJumpInsn(int opcode, Label label) {             mv.visitJumpInsn(opcode, label).         }          @Override         public void visitTryCatchBlock(Label start, Label end, Label handler, String type) {             mv.visitTryCatchBlock(start, end, handler, type).         }     }.     checker.version = WriterConstants.CLASS_VERSION.     return checker. }
