# id;timestamp;commentText;codeText;commentWords;codeWords
EAssignment -> @Override     void write(MethodWriter writer, Globals globals);1524684173;Handles writing byte code for variable/method chains for all given possibilities_including String concatenation, compound assignment, regular assignment, and simple_reads.  Includes proper duplication for chained assignments and assignments that are_also read from.;@Override_    void write(MethodWriter writer, Globals globals) {_        writer.writeDebugInfo(location)___        _        _        _        _        _        int catElementStackSize = 0___        if (cat) {_            catElementStackSize = writer.writeNewStrings()__        }__        _        AStoreable lhs = (AStoreable)this.lhs__        lhs.setup(writer, globals)_ __        if (cat) {_            _            __            writer.writeDup(lhs.accessElementCount(), catElementStackSize)_ _                                                                            _            lhs.load(writer, globals)_                                      _            writer.writeAppendStrings(lhs.actual)_  __            rhs.write(writer, globals)_ __            if (!(rhs instanceof EBinary) || !((EBinary)rhs).cat) {            _                writer.writeAppendStrings(rhs.actual)_ _            }__            writer.writeToStrings()_ _            writer.writeCast(back)_  __            if (lhs.read) {_                writer.writeDup(MethodWriter.getType(lhs.actual).getSize(), lhs.accessElementCount())_ _                                                                                                       _            }__            lhs.store(writer, globals)_ _        } else if (operation != null) {_            _            __            writer.writeDup(lhs.accessElementCount(), 0)_ _                                                          _            lhs.load(writer, globals)_                    __            if (lhs.read && post) {_                writer.writeDup(MethodWriter.getType(lhs.actual).getSize(), lhs.accessElementCount())_ _                                                                                 _            }__            writer.writeCast(there)_    _                                        _            rhs.write(writer, globals)_ __        _        _        _            if (promote == def.class) {_                writer.writeDynamicBinaryInstruction(_                    location, promote, def.class, def.class, operation, DefBootstrap.OPERATOR_COMPOUND_ASSIGNMENT)__            } else {_                writer.writeBinaryInstruction(location, promote, operation)__            }__            writer.writeCast(back)_ __            if (lhs.read && !post) {_                writer.writeDup(MethodWriter.getType(lhs.actual).getSize(), lhs.accessElementCount())_ _                                                                                                       _                                                                                                       _            }__            lhs.store(writer, globals)_ _        } else {_            __            rhs.write(writer, globals)_ __            if (lhs.read) {_                writer.writeDup(MethodWriter.getType(lhs.actual).getSize(), lhs.accessElementCount())_ _                                                                                                       _            }__            lhs.store(writer, globals)_ _        }_    };handles,writing,byte,code,for,variable,method,chains,for,all,given,possibilities,including,string,concatenation,compound,assignment,regular,assignment,and,simple,reads,includes,proper,duplication,for,chained,assignments,and,assignments,that,are,also,read,from;override,void,write,method,writer,writer,globals,globals,writer,write,debug,info,location,int,cat,element,stack,size,0,if,cat,cat,element,stack,size,writer,write,new,strings,astoreable,lhs,astoreable,this,lhs,lhs,setup,writer,globals,if,cat,writer,write,dup,lhs,access,element,count,cat,element,stack,size,lhs,load,writer,globals,writer,write,append,strings,lhs,actual,rhs,write,writer,globals,if,rhs,instanceof,ebinary,ebinary,rhs,cat,writer,write,append,strings,rhs,actual,writer,write,to,strings,writer,write,cast,back,if,lhs,read,writer,write,dup,method,writer,get,type,lhs,actual,get,size,lhs,access,element,count,lhs,store,writer,globals,else,if,operation,null,writer,write,dup,lhs,access,element,count,0,lhs,load,writer,globals,if,lhs,read,post,writer,write,dup,method,writer,get,type,lhs,actual,get,size,lhs,access,element,count,writer,write,cast,there,rhs,write,writer,globals,if,promote,def,class,writer,write,dynamic,binary,instruction,location,promote,def,class,def,class,operation,def,bootstrap,else,writer,write,binary,instruction,location,promote,operation,writer,write,cast,back,if,lhs,read,post,writer,write,dup,method,writer,get,type,lhs,actual,get,size,lhs,access,element,count,lhs,store,writer,globals,else,rhs,write,writer,globals,if,lhs,read,writer,write,dup,method,writer,get,type,lhs,actual,get,size,lhs,access,element,count,lhs,store,writer,globals
EAssignment -> @Override     void write(MethodWriter writer, Globals globals);1531179852;Handles writing byte code for variable/method chains for all given possibilities_including String concatenation, compound assignment, regular assignment, and simple_reads.  Includes proper duplication for chained assignments and assignments that are_also read from.;@Override_    void write(MethodWriter writer, Globals globals) {_        writer.writeDebugInfo(location)___        _        _        _        _        _        int catElementStackSize = 0___        if (cat) {_            catElementStackSize = writer.writeNewStrings()__        }__        _        AStoreable lhs = (AStoreable)this.lhs__        lhs.setup(writer, globals)_ __        if (cat) {_            _            __            writer.writeDup(lhs.accessElementCount(), catElementStackSize)_ _                                                                            _            lhs.load(writer, globals)_                                      _            writer.writeAppendStrings(lhs.actual)_  __            rhs.write(writer, globals)_ __            if (!(rhs instanceof EBinary) || !((EBinary)rhs).cat) {            _                writer.writeAppendStrings(rhs.actual)_ _            }__            writer.writeToStrings()_ _            writer.writeCast(back)_  __            if (lhs.read) {_                writer.writeDup(MethodWriter.getType(lhs.actual).getSize(), lhs.accessElementCount())_ _                                                                                                       _            }__            lhs.store(writer, globals)_ _        } else if (operation != null) {_            _            __            writer.writeDup(lhs.accessElementCount(), 0)_ _                                                          _            lhs.load(writer, globals)_                    __            if (lhs.read && post) {_                writer.writeDup(MethodWriter.getType(lhs.actual).getSize(), lhs.accessElementCount())_ _                                                                                 _            }__            writer.writeCast(there)_    _                                        _            rhs.write(writer, globals)_ __        _        _        _            if (promote == def.class) {_                writer.writeDynamicBinaryInstruction(_                    location, promote, def.class, def.class, operation, DefBootstrap.OPERATOR_COMPOUND_ASSIGNMENT)__            } else {_                writer.writeBinaryInstruction(location, promote, operation)__            }__            writer.writeCast(back)_ __            if (lhs.read && !post) {_                writer.writeDup(MethodWriter.getType(lhs.actual).getSize(), lhs.accessElementCount())_ _                                                                                                       _                                                                                                       _            }__            lhs.store(writer, globals)_ _        } else {_            __            rhs.write(writer, globals)_ __            if (lhs.read) {_                writer.writeDup(MethodWriter.getType(lhs.actual).getSize(), lhs.accessElementCount())_ _                                                                                                       _            }__            lhs.store(writer, globals)_ _        }_    };handles,writing,byte,code,for,variable,method,chains,for,all,given,possibilities,including,string,concatenation,compound,assignment,regular,assignment,and,simple,reads,includes,proper,duplication,for,chained,assignments,and,assignments,that,are,also,read,from;override,void,write,method,writer,writer,globals,globals,writer,write,debug,info,location,int,cat,element,stack,size,0,if,cat,cat,element,stack,size,writer,write,new,strings,astoreable,lhs,astoreable,this,lhs,lhs,setup,writer,globals,if,cat,writer,write,dup,lhs,access,element,count,cat,element,stack,size,lhs,load,writer,globals,writer,write,append,strings,lhs,actual,rhs,write,writer,globals,if,rhs,instanceof,ebinary,ebinary,rhs,cat,writer,write,append,strings,rhs,actual,writer,write,to,strings,writer,write,cast,back,if,lhs,read,writer,write,dup,method,writer,get,type,lhs,actual,get,size,lhs,access,element,count,lhs,store,writer,globals,else,if,operation,null,writer,write,dup,lhs,access,element,count,0,lhs,load,writer,globals,if,lhs,read,post,writer,write,dup,method,writer,get,type,lhs,actual,get,size,lhs,access,element,count,writer,write,cast,there,rhs,write,writer,globals,if,promote,def,class,writer,write,dynamic,binary,instruction,location,promote,def,class,def,class,operation,def,bootstrap,else,writer,write,binary,instruction,location,promote,operation,writer,write,cast,back,if,lhs,read,post,writer,write,dup,method,writer,get,type,lhs,actual,get,size,lhs,access,element,count,lhs,store,writer,globals,else,rhs,write,writer,globals,if,lhs,read,writer,write,dup,method,writer,get,type,lhs,actual,get,size,lhs,access,element,count,lhs,store,writer,globals
EAssignment -> @Override     void write(MethodWriter writer, Globals globals);1531910483;Handles writing byte code for variable/method chains for all given possibilities_including String concatenation, compound assignment, regular assignment, and simple_reads.  Includes proper duplication for chained assignments and assignments that are_also read from.;@Override_    void write(MethodWriter writer, Globals globals) {_        writer.writeDebugInfo(location)___        _        _        _        _        _        int catElementStackSize = 0___        if (cat) {_            catElementStackSize = writer.writeNewStrings()__        }__        _        AStoreable lhs = (AStoreable)this.lhs__        lhs.setup(writer, globals)_ __        if (cat) {_            _            __            writer.writeDup(lhs.accessElementCount(), catElementStackSize)_ _                                                                            _            lhs.load(writer, globals)_                                      _            writer.writeAppendStrings(lhs.actual)_  __            rhs.write(writer, globals)_ __            if (!(rhs instanceof EBinary) || !((EBinary)rhs).cat) {            _                writer.writeAppendStrings(rhs.actual)_ _            }__            writer.writeToStrings()_ _            writer.writeCast(back)_  __            if (lhs.read) {_                writer.writeDup(MethodWriter.getType(lhs.actual).getSize(), lhs.accessElementCount())_ _                                                                                                       _            }__            lhs.store(writer, globals)_ _        } else if (operation != null) {_            _            __            writer.writeDup(lhs.accessElementCount(), 0)_ _                                                          _            lhs.load(writer, globals)_                    __            if (lhs.read && post) {_                writer.writeDup(MethodWriter.getType(lhs.actual).getSize(), lhs.accessElementCount())_ _                                                                                 _            }__            writer.writeCast(there)_    _                                        _            rhs.write(writer, globals)_ __        _        _        _            if (promote == def.class) {_                writer.writeDynamicBinaryInstruction(_                    location, promote, def.class, def.class, operation, DefBootstrap.OPERATOR_COMPOUND_ASSIGNMENT)__            } else {_                writer.writeBinaryInstruction(location, promote, operation)__            }__            writer.writeCast(back)_ __            if (lhs.read && !post) {_                writer.writeDup(MethodWriter.getType(lhs.actual).getSize(), lhs.accessElementCount())_ _                                                                                                       _                                                                                                       _            }__            lhs.store(writer, globals)_ _        } else {_            __            rhs.write(writer, globals)_ __            if (lhs.read) {_                writer.writeDup(MethodWriter.getType(lhs.actual).getSize(), lhs.accessElementCount())_ _                                                                                                       _            }__            lhs.store(writer, globals)_ _        }_    };handles,writing,byte,code,for,variable,method,chains,for,all,given,possibilities,including,string,concatenation,compound,assignment,regular,assignment,and,simple,reads,includes,proper,duplication,for,chained,assignments,and,assignments,that,are,also,read,from;override,void,write,method,writer,writer,globals,globals,writer,write,debug,info,location,int,cat,element,stack,size,0,if,cat,cat,element,stack,size,writer,write,new,strings,astoreable,lhs,astoreable,this,lhs,lhs,setup,writer,globals,if,cat,writer,write,dup,lhs,access,element,count,cat,element,stack,size,lhs,load,writer,globals,writer,write,append,strings,lhs,actual,rhs,write,writer,globals,if,rhs,instanceof,ebinary,ebinary,rhs,cat,writer,write,append,strings,rhs,actual,writer,write,to,strings,writer,write,cast,back,if,lhs,read,writer,write,dup,method,writer,get,type,lhs,actual,get,size,lhs,access,element,count,lhs,store,writer,globals,else,if,operation,null,writer,write,dup,lhs,access,element,count,0,lhs,load,writer,globals,if,lhs,read,post,writer,write,dup,method,writer,get,type,lhs,actual,get,size,lhs,access,element,count,writer,write,cast,there,rhs,write,writer,globals,if,promote,def,class,writer,write,dynamic,binary,instruction,location,promote,def,class,def,class,operation,def,bootstrap,else,writer,write,binary,instruction,location,promote,operation,writer,write,cast,back,if,lhs,read,post,writer,write,dup,method,writer,get,type,lhs,actual,get,size,lhs,access,element,count,lhs,store,writer,globals,else,rhs,write,writer,globals,if,lhs,read,writer,write,dup,method,writer,get,type,lhs,actual,get,size,lhs,access,element,count,lhs,store,writer,globals
