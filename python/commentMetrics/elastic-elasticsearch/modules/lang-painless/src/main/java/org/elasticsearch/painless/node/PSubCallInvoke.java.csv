commented;modifiers;parameterAmount;loc;comment;code
false;;1;4;;@Override void extractVariables(Set<String> variables) {     throw createError(new IllegalStateException("Illegal tree structure.")). }
false;;1;14;;@Override void analyze(Locals locals) {     for (int argument = 0. argument < arguments.size(). ++argument) {         AExpression expression = arguments.get(argument).         expression.expected = method.typeParameters.get(argument).         expression.internal = true.         expression.analyze(locals).         arguments.set(argument, expression.cast(locals)).     }     statement = true.     actual = method.returnType. }
false;;2;14;;@Override void write(MethodWriter writer, Globals globals) {     writer.writeDebugInfo(location).     if (box.isPrimitive()) {         writer.box(MethodWriter.getType(box)).     }     for (AExpression argument : arguments) {         argument.write(writer, globals).     }     writer.invokeMethodCall(method). }
false;public;0;4;;@Override public String toString() {     return singleLineToStringWithOptionalArgs(arguments, prefix, method.javaMethod.getName()). }
