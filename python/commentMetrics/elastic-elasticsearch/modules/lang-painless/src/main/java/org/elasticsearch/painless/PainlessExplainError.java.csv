commented;modifiers;parameterAmount;loc;comment;code
false;;0;3;;Object getObjectToExplain() {     return objectToExplain. }
true;public;1;23;/**  * Headers to be added to the {@link ScriptException} for structured rendering.  */ ;/**  * Headers to be added to the {@link ScriptException} for structured rendering.  */ public Map<String, List<String>> getHeaders(PainlessLookup painlessLookup) {     Map<String, List<String>> headers = new TreeMap<>().     String toString = "null".     String javaClassName = null.     String painlessClassName = null.     if (objectToExplain != null) {         toString = objectToExplain.toString().         javaClassName = objectToExplain.getClass().getName().         PainlessClass struct = painlessLookup.lookupPainlessClass(objectToExplain.getClass()).         if (struct != null) {             painlessClassName = PainlessLookupUtility.typeToCanonicalTypeName(objectToExplain.getClass()).         }     }     headers.put("es.to_string", singletonList(toString)).     if (painlessClassName != null) {         headers.put("es.painless_class", singletonList(painlessClassName)).     }     if (javaClassName != null) {         headers.put("es.java_class", singletonList(javaClassName)).     }     return headers. }
