# id;timestamp;commentText;codeText;commentWords;codeWords
PainlessExplainError -> public Map<String, List<String>> getHeaders(PainlessLookup painlessLookup);1531179852;Headers to be added to the {@link ScriptException} for structured rendering.;public Map<String, List<String>> getHeaders(PainlessLookup painlessLookup) {_        Map<String, List<String>> headers = new TreeMap<>()__        String toString = "null"__        String javaClassName = null__        String painlessClassName = null__        if (objectToExplain != null) {_            toString = objectToExplain.toString()__            javaClassName = objectToExplain.getClass().getName()__            PainlessClass struct = painlessLookup.getPainlessStructFromJavaClass(objectToExplain.getClass())__            if (struct != null) {_                painlessClassName = struct.name__            }_        }__        headers.put("es.to_string", singletonList(toString))__        if (painlessClassName != null) {_            headers.put("es.painless_class", singletonList(painlessClassName))__        }_        if (javaClassName != null) {_            headers.put("es.java_class", singletonList(javaClassName))__        }_        return headers__    };headers,to,be,added,to,the,link,script,exception,for,structured,rendering;public,map,string,list,string,get,headers,painless,lookup,painless,lookup,map,string,list,string,headers,new,tree,map,string,to,string,null,string,java,class,name,null,string,painless,class,name,null,if,object,to,explain,null,to,string,object,to,explain,to,string,java,class,name,object,to,explain,get,class,get,name,painless,class,struct,painless,lookup,get,painless,struct,from,java,class,object,to,explain,get,class,if,struct,null,painless,class,name,struct,name,headers,put,es,singleton,list,to,string,if,painless,class,name,null,headers,put,es,singleton,list,painless,class,name,if,java,class,name,null,headers,put,es,singleton,list,java,class,name,return,headers
PainlessExplainError -> public Map<String, List<String>> getHeaders(PainlessLookup painlessLookup);1532685069;Headers to be added to the {@link ScriptException} for structured rendering.;public Map<String, List<String>> getHeaders(PainlessLookup painlessLookup) {_        Map<String, List<String>> headers = new TreeMap<>()__        String toString = "null"__        String javaClassName = null__        String painlessClassName = null__        if (objectToExplain != null) {_            toString = objectToExplain.toString()__            javaClassName = objectToExplain.getClass().getName()__            PainlessClass struct = painlessLookup.getPainlessStructFromJavaClass(objectToExplain.getClass())__            if (struct != null) {_                painlessClassName = PainlessLookupUtility.typeToCanonicalTypeName(objectToExplain.getClass())__            }_        }__        headers.put("es.to_string", singletonList(toString))__        if (painlessClassName != null) {_            headers.put("es.painless_class", singletonList(painlessClassName))__        }_        if (javaClassName != null) {_            headers.put("es.java_class", singletonList(javaClassName))__        }_        return headers__    };headers,to,be,added,to,the,link,script,exception,for,structured,rendering;public,map,string,list,string,get,headers,painless,lookup,painless,lookup,map,string,list,string,headers,new,tree,map,string,to,string,null,string,java,class,name,null,string,painless,class,name,null,if,object,to,explain,null,to,string,object,to,explain,to,string,java,class,name,object,to,explain,get,class,get,name,painless,class,struct,painless,lookup,get,painless,struct,from,java,class,object,to,explain,get,class,if,struct,null,painless,class,name,painless,lookup,utility,type,to,canonical,type,name,object,to,explain,get,class,headers,put,es,singleton,list,to,string,if,painless,class,name,null,headers,put,es,singleton,list,painless,class,name,if,java,class,name,null,headers,put,es,singleton,list,java,class,name,return,headers
PainlessExplainError -> public Map<String, List<String>> getHeaders(PainlessLookup painlessLookup);1533295538;Headers to be added to the {@link ScriptException} for structured rendering.;public Map<String, List<String>> getHeaders(PainlessLookup painlessLookup) {_        Map<String, List<String>> headers = new TreeMap<>()__        String toString = "null"__        String javaClassName = null__        String painlessClassName = null__        if (objectToExplain != null) {_            toString = objectToExplain.toString()__            javaClassName = objectToExplain.getClass().getName()__            PainlessClass struct = painlessLookup.lookupPainlessClass(objectToExplain.getClass())__            if (struct != null) {_                painlessClassName = PainlessLookupUtility.typeToCanonicalTypeName(objectToExplain.getClass())__            }_        }__        headers.put("es.to_string", singletonList(toString))__        if (painlessClassName != null) {_            headers.put("es.painless_class", singletonList(painlessClassName))__        }_        if (javaClassName != null) {_            headers.put("es.java_class", singletonList(javaClassName))__        }_        return headers__    };headers,to,be,added,to,the,link,script,exception,for,structured,rendering;public,map,string,list,string,get,headers,painless,lookup,painless,lookup,map,string,list,string,headers,new,tree,map,string,to,string,null,string,java,class,name,null,string,painless,class,name,null,if,object,to,explain,null,to,string,object,to,explain,to,string,java,class,name,object,to,explain,get,class,get,name,painless,class,struct,painless,lookup,lookup,painless,class,object,to,explain,get,class,if,struct,null,painless,class,name,painless,lookup,utility,type,to,canonical,type,name,object,to,explain,get,class,headers,put,es,singleton,list,to,string,if,painless,class,name,null,headers,put,es,singleton,list,painless,class,name,if,java,class,name,null,headers,put,es,singleton,list,java,class,name,return,headers
