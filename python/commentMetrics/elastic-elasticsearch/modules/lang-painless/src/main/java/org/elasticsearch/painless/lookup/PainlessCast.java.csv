# id;timestamp;commentText;codeText;commentWords;codeWords
PainlessCast -> public static PainlessCast boxTargetType(             Class<?> originalType, Class<?> targetType, boolean explicitCast, Class<?> boxTargetType);1533921794;Create a cast where the target type will be boxed, and then the cast will be performed.;public static PainlessCast boxTargetType(_            Class<?> originalType, Class<?> targetType, boolean explicitCast, Class<?> boxTargetType) {__        return new PainlessCast(originalType, targetType, explicitCast, null, null, null, boxTargetType)__    };create,a,cast,where,the,target,type,will,be,boxed,and,then,the,cast,will,be,performed;public,static,painless,cast,box,target,type,class,original,type,class,target,type,boolean,explicit,cast,class,box,target,type,return,new,painless,cast,original,type,target,type,explicit,cast,null,null,null,box,target,type
PainlessCast -> public static PainlessCast boxTargetType(             Class<?> originalType, Class<?> targetType, boolean explicitCast, Class<?> boxTargetType);1538067637;Create a cast where the target type will be boxed, and then the cast will be performed.;public static PainlessCast boxTargetType(_            Class<?> originalType, Class<?> targetType, boolean explicitCast, Class<?> boxTargetType) {__        Objects.requireNonNull(originalType)__        Objects.requireNonNull(targetType)__        Objects.requireNonNull(boxTargetType)___        return new PainlessCast(originalType, targetType, explicitCast, null, null, null, boxTargetType)__    };create,a,cast,where,the,target,type,will,be,boxed,and,then,the,cast,will,be,performed;public,static,painless,cast,box,target,type,class,original,type,class,target,type,boolean,explicit,cast,class,box,target,type,objects,require,non,null,original,type,objects,require,non,null,target,type,objects,require,non,null,box,target,type,return,new,painless,cast,original,type,target,type,explicit,cast,null,null,null,box,target,type
PainlessCast -> public static PainlessCast boxTargetType(             Class<?> originalType, Class<?> targetType, boolean explicitCast, Class<?> boxTargetType);1545072619;Create a cast where the target type will be boxed, and then the cast will be performed.;public static PainlessCast boxTargetType(_            Class<?> originalType, Class<?> targetType, boolean explicitCast, Class<?> boxTargetType) {__        Objects.requireNonNull(originalType)__        Objects.requireNonNull(targetType)__        Objects.requireNonNull(boxTargetType)___        return new PainlessCast(originalType, targetType, explicitCast, null, null, null, boxTargetType)__    };create,a,cast,where,the,target,type,will,be,boxed,and,then,the,cast,will,be,performed;public,static,painless,cast,box,target,type,class,original,type,class,target,type,boolean,explicit,cast,class,box,target,type,objects,require,non,null,original,type,objects,require,non,null,target,type,objects,require,non,null,box,target,type,return,new,painless,cast,original,type,target,type,explicit,cast,null,null,null,box,target,type
PainlessCast -> public static PainlessCast originalTypetoTargetType(Class<?> originalType, Class<?> targetType, boolean explicitCast);1533921794;Create a standard cast with no boxing/unboxing.;public static PainlessCast originalTypetoTargetType(Class<?> originalType, Class<?> targetType, boolean explicitCast) {_        return new PainlessCast(originalType, targetType, explicitCast, null, null, null, null)__    };create,a,standard,cast,with,no,boxing,unboxing;public,static,painless,cast,original,typeto,target,type,class,original,type,class,target,type,boolean,explicit,cast,return,new,painless,cast,original,type,target,type,explicit,cast,null,null,null,null
PainlessCast -> public static PainlessCast originalTypetoTargetType(Class<?> originalType, Class<?> targetType, boolean explicitCast);1538067637;Create a standard cast with no boxing/unboxing.;public static PainlessCast originalTypetoTargetType(Class<?> originalType, Class<?> targetType, boolean explicitCast) {_        Objects.requireNonNull(originalType)__        Objects.requireNonNull(targetType)___        return new PainlessCast(originalType, targetType, explicitCast, null, null, null, null)__    };create,a,standard,cast,with,no,boxing,unboxing;public,static,painless,cast,original,typeto,target,type,class,original,type,class,target,type,boolean,explicit,cast,objects,require,non,null,original,type,objects,require,non,null,target,type,return,new,painless,cast,original,type,target,type,explicit,cast,null,null,null,null
PainlessCast -> public static PainlessCast originalTypetoTargetType(Class<?> originalType, Class<?> targetType, boolean explicitCast);1545072619;Create a standard cast with no boxing/unboxing.;public static PainlessCast originalTypetoTargetType(Class<?> originalType, Class<?> targetType, boolean explicitCast) {_        Objects.requireNonNull(originalType)__        Objects.requireNonNull(targetType)___        return new PainlessCast(originalType, targetType, explicitCast, null, null, null, null)__    };create,a,standard,cast,with,no,boxing,unboxing;public,static,painless,cast,original,typeto,target,type,class,original,type,class,target,type,boolean,explicit,cast,objects,require,non,null,original,type,objects,require,non,null,target,type,return,new,painless,cast,original,type,target,type,explicit,cast,null,null,null,null
PainlessCast -> public static PainlessCast unboxOriginalType(             Class<?> originalType, Class<?> targetType, boolean explicitCast, Class<?> unboxOriginalType);1533921794;Create a cast where the original type will be unboxed, and then the cast will be performed.;public static PainlessCast unboxOriginalType(_            Class<?> originalType, Class<?> targetType, boolean explicitCast, Class<?> unboxOriginalType) {__        return new PainlessCast(originalType, targetType, explicitCast, unboxOriginalType, null, null, null)__    };create,a,cast,where,the,original,type,will,be,unboxed,and,then,the,cast,will,be,performed;public,static,painless,cast,unbox,original,type,class,original,type,class,target,type,boolean,explicit,cast,class,unbox,original,type,return,new,painless,cast,original,type,target,type,explicit,cast,unbox,original,type,null,null,null
PainlessCast -> public static PainlessCast unboxOriginalType(             Class<?> originalType, Class<?> targetType, boolean explicitCast, Class<?> unboxOriginalType);1538067637;Create a cast where the original type will be unboxed, and then the cast will be performed.;public static PainlessCast unboxOriginalType(_            Class<?> originalType, Class<?> targetType, boolean explicitCast, Class<?> unboxOriginalType) {__        Objects.requireNonNull(originalType)__        Objects.requireNonNull(targetType)__        Objects.requireNonNull(unboxOriginalType)___        return new PainlessCast(originalType, targetType, explicitCast, unboxOriginalType, null, null, null)__    };create,a,cast,where,the,original,type,will,be,unboxed,and,then,the,cast,will,be,performed;public,static,painless,cast,unbox,original,type,class,original,type,class,target,type,boolean,explicit,cast,class,unbox,original,type,objects,require,non,null,original,type,objects,require,non,null,target,type,objects,require,non,null,unbox,original,type,return,new,painless,cast,original,type,target,type,explicit,cast,unbox,original,type,null,null,null
PainlessCast -> public static PainlessCast unboxOriginalType(             Class<?> originalType, Class<?> targetType, boolean explicitCast, Class<?> unboxOriginalType);1545072619;Create a cast where the original type will be unboxed, and then the cast will be performed.;public static PainlessCast unboxOriginalType(_            Class<?> originalType, Class<?> targetType, boolean explicitCast, Class<?> unboxOriginalType) {__        Objects.requireNonNull(originalType)__        Objects.requireNonNull(targetType)__        Objects.requireNonNull(unboxOriginalType)___        return new PainlessCast(originalType, targetType, explicitCast, unboxOriginalType, null, null, null)__    };create,a,cast,where,the,original,type,will,be,unboxed,and,then,the,cast,will,be,performed;public,static,painless,cast,unbox,original,type,class,original,type,class,target,type,boolean,explicit,cast,class,unbox,original,type,objects,require,non,null,original,type,objects,require,non,null,target,type,objects,require,non,null,unbox,original,type,return,new,painless,cast,original,type,target,type,explicit,cast,unbox,original,type,null,null,null
PainlessCast -> public static PainlessCast unboxTargetType(             Class<?> originalType, Class<?> targetType, boolean explicitCast, Class<?> unboxTargetType);1533921794;Create a cast where the target type will be unboxed, and then the cast will be performed.;public static PainlessCast unboxTargetType(_            Class<?> originalType, Class<?> targetType, boolean explicitCast, Class<?> unboxTargetType) {__        return new PainlessCast(originalType, targetType, explicitCast, null, unboxTargetType, null, null)__    };create,a,cast,where,the,target,type,will,be,unboxed,and,then,the,cast,will,be,performed;public,static,painless,cast,unbox,target,type,class,original,type,class,target,type,boolean,explicit,cast,class,unbox,target,type,return,new,painless,cast,original,type,target,type,explicit,cast,null,unbox,target,type,null,null
PainlessCast -> public static PainlessCast unboxTargetType(             Class<?> originalType, Class<?> targetType, boolean explicitCast, Class<?> unboxTargetType);1538067637;Create a cast where the target type will be unboxed, and then the cast will be performed.;public static PainlessCast unboxTargetType(_            Class<?> originalType, Class<?> targetType, boolean explicitCast, Class<?> unboxTargetType) {__        Objects.requireNonNull(originalType)__        Objects.requireNonNull(targetType)__        Objects.requireNonNull(unboxTargetType)___        return new PainlessCast(originalType, targetType, explicitCast, null, unboxTargetType, null, null)__    };create,a,cast,where,the,target,type,will,be,unboxed,and,then,the,cast,will,be,performed;public,static,painless,cast,unbox,target,type,class,original,type,class,target,type,boolean,explicit,cast,class,unbox,target,type,objects,require,non,null,original,type,objects,require,non,null,target,type,objects,require,non,null,unbox,target,type,return,new,painless,cast,original,type,target,type,explicit,cast,null,unbox,target,type,null,null
PainlessCast -> public static PainlessCast unboxTargetType(             Class<?> originalType, Class<?> targetType, boolean explicitCast, Class<?> unboxTargetType);1545072619;Create a cast where the target type will be unboxed, and then the cast will be performed.;public static PainlessCast unboxTargetType(_            Class<?> originalType, Class<?> targetType, boolean explicitCast, Class<?> unboxTargetType) {__        Objects.requireNonNull(originalType)__        Objects.requireNonNull(targetType)__        Objects.requireNonNull(unboxTargetType)___        return new PainlessCast(originalType, targetType, explicitCast, null, unboxTargetType, null, null)__    };create,a,cast,where,the,target,type,will,be,unboxed,and,then,the,cast,will,be,performed;public,static,painless,cast,unbox,target,type,class,original,type,class,target,type,boolean,explicit,cast,class,unbox,target,type,objects,require,non,null,original,type,objects,require,non,null,target,type,objects,require,non,null,unbox,target,type,return,new,painless,cast,original,type,target,type,explicit,cast,null,unbox,target,type,null,null
PainlessCast -> public static PainlessCast boxOriginalType(             Class<?> originalType, Class<?> targetType, boolean explicitCast, Class<?> boxOriginalType);1533921794;Create a cast where the original type will be boxed, and then the cast will be performed.;public static PainlessCast boxOriginalType(_            Class<?> originalType, Class<?> targetType, boolean explicitCast, Class<?> boxOriginalType) {__        return new PainlessCast(originalType, targetType, explicitCast, null, null, boxOriginalType, null)__    };create,a,cast,where,the,original,type,will,be,boxed,and,then,the,cast,will,be,performed;public,static,painless,cast,box,original,type,class,original,type,class,target,type,boolean,explicit,cast,class,box,original,type,return,new,painless,cast,original,type,target,type,explicit,cast,null,null,box,original,type,null
PainlessCast -> public static PainlessCast boxOriginalType(             Class<?> originalType, Class<?> targetType, boolean explicitCast, Class<?> boxOriginalType);1538067637;Create a cast where the original type will be boxed, and then the cast will be performed.;public static PainlessCast boxOriginalType(_            Class<?> originalType, Class<?> targetType, boolean explicitCast, Class<?> boxOriginalType) {__        Objects.requireNonNull(originalType)__        Objects.requireNonNull(targetType)__        Objects.requireNonNull(boxOriginalType)___        return new PainlessCast(originalType, targetType, explicitCast, null, null, boxOriginalType, null)__    };create,a,cast,where,the,original,type,will,be,boxed,and,then,the,cast,will,be,performed;public,static,painless,cast,box,original,type,class,original,type,class,target,type,boolean,explicit,cast,class,box,original,type,objects,require,non,null,original,type,objects,require,non,null,target,type,objects,require,non,null,box,original,type,return,new,painless,cast,original,type,target,type,explicit,cast,null,null,box,original,type,null
PainlessCast -> public static PainlessCast boxOriginalType(             Class<?> originalType, Class<?> targetType, boolean explicitCast, Class<?> boxOriginalType);1545072619;Create a cast where the original type will be boxed, and then the cast will be performed.;public static PainlessCast boxOriginalType(_            Class<?> originalType, Class<?> targetType, boolean explicitCast, Class<?> boxOriginalType) {__        Objects.requireNonNull(originalType)__        Objects.requireNonNull(targetType)__        Objects.requireNonNull(boxOriginalType)___        return new PainlessCast(originalType, targetType, explicitCast, null, null, boxOriginalType, null)__    };create,a,cast,where,the,original,type,will,be,boxed,and,then,the,cast,will,be,performed;public,static,painless,cast,box,original,type,class,original,type,class,target,type,boolean,explicit,cast,class,box,original,type,objects,require,non,null,original,type,objects,require,non,null,target,type,objects,require,non,null,box,original,type,return,new,painless,cast,original,type,target,type,explicit,cast,null,null,box,original,type,null
