commented;modifiers;parameterAmount;loc;comment;code
false;;0;4;;PainlessClass build() {     return new PainlessClass(constructors, staticMethods, methods, staticFields, fields, functionalInterfaceMethod, runtimeMethods, getterMethodHandles, setterMethodHandles). }
false;public;1;19;;@Override public boolean equals(Object object) {     if (this == object) {         return true.     }     if (object == null || getClass() != object.getClass()) {         return false.     }     PainlessClassBuilder that = (PainlessClassBuilder) object.     return Objects.equals(constructors, that.constructors) && Objects.equals(staticMethods, that.staticMethods) && Objects.equals(methods, that.methods) && Objects.equals(staticFields, that.staticFields) && Objects.equals(fields, that.fields) && Objects.equals(functionalInterfaceMethod, that.functionalInterfaceMethod). }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(constructors, staticMethods, methods, staticFields, fields, functionalInterfaceMethod). }
