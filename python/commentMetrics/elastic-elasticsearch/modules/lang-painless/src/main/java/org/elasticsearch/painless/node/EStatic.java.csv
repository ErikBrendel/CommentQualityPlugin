commented;modifiers;parameterAmount;loc;comment;code
false;;1;4;;@Override void extractVariables(Set<String> variables) { // Do nothing. }
false;;1;8;;@Override void analyze(Locals locals) {     actual = locals.getPainlessLookup().canonicalTypeNameToType(type).     if (actual == null) {         throw createError(new IllegalArgumentException("Not a type [" + type + "].")).     } }
false;;2;4;;@Override void write(MethodWriter writer, Globals globals) { // Do nothing. }
false;public;0;4;;@Override public String toString() {     return singleLineToString(type). }
