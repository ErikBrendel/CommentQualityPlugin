# id;timestamp;commentText;codeText;commentWords;codeWords
DefBootstrapTests -> public void testMegamorphic() throws Throwable;1524684173;test that we revert to the megamorphic classvalue cache and that it works as expected;public void testMegamorphic() throws Throwable {_        DefBootstrap.PIC site = (DefBootstrap.PIC) DefBootstrap.bootstrap(definition,_                                                                          MethodHandles.publicLookup(),_                                                                          "size",_                                                                          MethodType.methodType(int.class, Object.class),_                                                                          0,_                                                                          DefBootstrap.METHOD_CALL,_                                                                          "")__        site.depth = DefBootstrap.PIC.MAX_DEPTH_ _        MethodHandle handle = site.dynamicInvoker()__        assertEquals(2, (int)handle.invokeExact((Object) Arrays.asList("1", "2")))__        assertEquals(1, (int)handle.invokeExact((Object) Collections.singletonMap("a", "b")))__        assertEquals(3, (int)handle.invokeExact((Object) Arrays.asList("x", "y", "z")))__        assertEquals(2, (int)handle.invokeExact((Object) Arrays.asList("u", "v")))___        final HashMap<String,String> map = new HashMap<>()__        map.put("x", "y")__        map.put("a", "b")__        assertEquals(2, (int)handle.invokeExact((Object) map))___        final IllegalArgumentException iae = expectThrows(IllegalArgumentException.class, () -> {_            Integer.toString((int)handle.invokeExact(new Object()))__        })__        assertEquals("Unable to find dynamic method [size] with [0] arguments for class [java.lang.Object].", iae.getMessage())__        assertTrue("Does not fail inside ClassValue.computeValue()", Arrays.stream(iae.getStackTrace()).anyMatch(e -> {_            return e.getMethodName().equals("computeValue") &&_                   e.getClassName().startsWith("org.elasticsearch.painless.DefBootstrap$PIC$")__        }))__    };test,that,we,revert,to,the,megamorphic,classvalue,cache,and,that,it,works,as,expected;public,void,test,megamorphic,throws,throwable,def,bootstrap,pic,site,def,bootstrap,pic,def,bootstrap,bootstrap,definition,method,handles,public,lookup,size,method,type,method,type,int,class,object,class,0,def,bootstrap,site,depth,def,bootstrap,pic,method,handle,handle,site,dynamic,invoker,assert,equals,2,int,handle,invoke,exact,object,arrays,as,list,1,2,assert,equals,1,int,handle,invoke,exact,object,collections,singleton,map,a,b,assert,equals,3,int,handle,invoke,exact,object,arrays,as,list,x,y,z,assert,equals,2,int,handle,invoke,exact,object,arrays,as,list,u,v,final,hash,map,string,string,map,new,hash,map,map,put,x,y,map,put,a,b,assert,equals,2,int,handle,invoke,exact,object,map,final,illegal,argument,exception,iae,expect,throws,illegal,argument,exception,class,integer,to,string,int,handle,invoke,exact,new,object,assert,equals,unable,to,find,dynamic,method,size,with,0,arguments,for,class,java,lang,object,iae,get,message,assert,true,does,not,fail,inside,class,value,compute,value,arrays,stream,iae,get,stack,trace,any,match,e,return,e,get,method,name,equals,compute,value,e,get,class,name,starts,with,org,elasticsearch,painless,def,bootstrap,pic
DefBootstrapTests -> public void testMegamorphic() throws Throwable;1531179852;test that we revert to the megamorphic classvalue cache and that it works as expected;public void testMegamorphic() throws Throwable {_        DefBootstrap.PIC site = (DefBootstrap.PIC) DefBootstrap.bootstrap(painlessLookup,_                                                                          MethodHandles.publicLookup(),_                                                                          "size",_                                                                          MethodType.methodType(int.class, Object.class),_                                                                          0,_                                                                          DefBootstrap.METHOD_CALL,_                                                                          "")__        site.depth = DefBootstrap.PIC.MAX_DEPTH_ _        MethodHandle handle = site.dynamicInvoker()__        assertEquals(2, (int)handle.invokeExact((Object) Arrays.asList("1", "2")))__        assertEquals(1, (int)handle.invokeExact((Object) Collections.singletonMap("a", "b")))__        assertEquals(3, (int)handle.invokeExact((Object) Arrays.asList("x", "y", "z")))__        assertEquals(2, (int)handle.invokeExact((Object) Arrays.asList("u", "v")))___        final HashMap<String,String> map = new HashMap<>()__        map.put("x", "y")__        map.put("a", "b")__        assertEquals(2, (int)handle.invokeExact((Object) map))___        final IllegalArgumentException iae = expectThrows(IllegalArgumentException.class, () -> {_            Integer.toString((int)handle.invokeExact(new Object()))__        })__        assertEquals("Unable to find dynamic method [size] with [0] arguments for class [java.lang.Object].", iae.getMessage())__        assertTrue("Does not fail inside ClassValue.computeValue()", Arrays.stream(iae.getStackTrace()).anyMatch(e -> {_            return e.getMethodName().equals("computeValue") &&_                   e.getClassName().startsWith("org.elasticsearch.painless.DefBootstrap$PIC$")__        }))__    };test,that,we,revert,to,the,megamorphic,classvalue,cache,and,that,it,works,as,expected;public,void,test,megamorphic,throws,throwable,def,bootstrap,pic,site,def,bootstrap,pic,def,bootstrap,bootstrap,painless,lookup,method,handles,public,lookup,size,method,type,method,type,int,class,object,class,0,def,bootstrap,site,depth,def,bootstrap,pic,method,handle,handle,site,dynamic,invoker,assert,equals,2,int,handle,invoke,exact,object,arrays,as,list,1,2,assert,equals,1,int,handle,invoke,exact,object,collections,singleton,map,a,b,assert,equals,3,int,handle,invoke,exact,object,arrays,as,list,x,y,z,assert,equals,2,int,handle,invoke,exact,object,arrays,as,list,u,v,final,hash,map,string,string,map,new,hash,map,map,put,x,y,map,put,a,b,assert,equals,2,int,handle,invoke,exact,object,map,final,illegal,argument,exception,iae,expect,throws,illegal,argument,exception,class,integer,to,string,int,handle,invoke,exact,new,object,assert,equals,unable,to,find,dynamic,method,size,with,0,arguments,for,class,java,lang,object,iae,get,message,assert,true,does,not,fail,inside,class,value,compute,value,arrays,stream,iae,get,stack,trace,any,match,e,return,e,get,method,name,equals,compute,value,e,get,class,name,starts,with,org,elasticsearch,painless,def,bootstrap,pic
DefBootstrapTests -> public void testMegamorphic() throws Throwable;1531910483;test that we revert to the megamorphic classvalue cache and that it works as expected;public void testMegamorphic() throws Throwable {_        DefBootstrap.PIC site = (DefBootstrap.PIC) DefBootstrap.bootstrap(painlessLookup,_                                                                          MethodHandles.publicLookup(),_                                                                          "size",_                                                                          MethodType.methodType(int.class, Object.class),_                                                                          0,_                                                                          DefBootstrap.METHOD_CALL,_                                                                          "")__        site.depth = DefBootstrap.PIC.MAX_DEPTH_ _        MethodHandle handle = site.dynamicInvoker()__        assertEquals(2, (int)handle.invokeExact((Object) Arrays.asList("1", "2")))__        assertEquals(1, (int)handle.invokeExact((Object) Collections.singletonMap("a", "b")))__        assertEquals(3, (int)handle.invokeExact((Object) Arrays.asList("x", "y", "z")))__        assertEquals(2, (int)handle.invokeExact((Object) Arrays.asList("u", "v")))___        final HashMap<String,String> map = new HashMap<>()__        map.put("x", "y")__        map.put("a", "b")__        assertEquals(2, (int)handle.invokeExact((Object) map))___        final IllegalArgumentException iae = expectThrows(IllegalArgumentException.class, () -> {_            Integer.toString((int)handle.invokeExact(new Object()))__        })__        assertEquals("Unable to find dynamic method [size] with [0] arguments for class [java.lang.Object].", iae.getMessage())__        assertTrue("Does not fail inside ClassValue.computeValue()", Arrays.stream(iae.getStackTrace()).anyMatch(e -> {_            return e.getMethodName().equals("computeValue") &&_                   e.getClassName().startsWith("org.elasticsearch.painless.DefBootstrap$PIC$")__        }))__    };test,that,we,revert,to,the,megamorphic,classvalue,cache,and,that,it,works,as,expected;public,void,test,megamorphic,throws,throwable,def,bootstrap,pic,site,def,bootstrap,pic,def,bootstrap,bootstrap,painless,lookup,method,handles,public,lookup,size,method,type,method,type,int,class,object,class,0,def,bootstrap,site,depth,def,bootstrap,pic,method,handle,handle,site,dynamic,invoker,assert,equals,2,int,handle,invoke,exact,object,arrays,as,list,1,2,assert,equals,1,int,handle,invoke,exact,object,collections,singleton,map,a,b,assert,equals,3,int,handle,invoke,exact,object,arrays,as,list,x,y,z,assert,equals,2,int,handle,invoke,exact,object,arrays,as,list,u,v,final,hash,map,string,string,map,new,hash,map,map,put,x,y,map,put,a,b,assert,equals,2,int,handle,invoke,exact,object,map,final,illegal,argument,exception,iae,expect,throws,illegal,argument,exception,class,integer,to,string,int,handle,invoke,exact,new,object,assert,equals,unable,to,find,dynamic,method,size,with,0,arguments,for,class,java,lang,object,iae,get,message,assert,true,does,not,fail,inside,class,value,compute,value,arrays,stream,iae,get,stack,trace,any,match,e,return,e,get,method,name,equals,compute,value,e,get,class,name,starts,with,org,elasticsearch,painless,def,bootstrap,pic
DefBootstrapTests -> public void testMegamorphic() throws Throwable;1532598597;test that we revert to the megamorphic classvalue cache and that it works as expected;public void testMegamorphic() throws Throwable {_        DefBootstrap.PIC site = (DefBootstrap.PIC) DefBootstrap.bootstrap(painlessLookup,_                                                                          MethodHandles.publicLookup(),_                                                                          "size",_                                                                          MethodType.methodType(int.class, Object.class),_                                                                          0,_                                                                          DefBootstrap.METHOD_CALL,_                                                                          "")__        site.depth = DefBootstrap.PIC.MAX_DEPTH_ _        MethodHandle handle = site.dynamicInvoker()__        assertEquals(2, (int)handle.invokeExact((Object) Arrays.asList("1", "2")))__        assertEquals(1, (int)handle.invokeExact((Object) Collections.singletonMap("a", "b")))__        assertEquals(3, (int)handle.invokeExact((Object) Arrays.asList("x", "y", "z")))__        assertEquals(2, (int)handle.invokeExact((Object) Arrays.asList("u", "v")))___        final HashMap<String,String> map = new HashMap<>()__        map.put("x", "y")__        map.put("a", "b")__        assertEquals(2, (int)handle.invokeExact((Object) map))___        final IllegalArgumentException iae = expectThrows(IllegalArgumentException.class, () -> {_            Integer.toString((int)handle.invokeExact(new Object()))__        })__        assertEquals("Unable to find dynamic method [size] with [0] arguments for class [java.lang.Object].", iae.getMessage())__        assertTrue("Does not fail inside ClassValue.computeValue()", Arrays.stream(iae.getStackTrace()).anyMatch(e -> {_            return e.getMethodName().equals("computeValue") &&_                   e.getClassName().startsWith("org.elasticsearch.painless.DefBootstrap$PIC$")__        }))__    };test,that,we,revert,to,the,megamorphic,classvalue,cache,and,that,it,works,as,expected;public,void,test,megamorphic,throws,throwable,def,bootstrap,pic,site,def,bootstrap,pic,def,bootstrap,bootstrap,painless,lookup,method,handles,public,lookup,size,method,type,method,type,int,class,object,class,0,def,bootstrap,site,depth,def,bootstrap,pic,method,handle,handle,site,dynamic,invoker,assert,equals,2,int,handle,invoke,exact,object,arrays,as,list,1,2,assert,equals,1,int,handle,invoke,exact,object,collections,singleton,map,a,b,assert,equals,3,int,handle,invoke,exact,object,arrays,as,list,x,y,z,assert,equals,2,int,handle,invoke,exact,object,arrays,as,list,u,v,final,hash,map,string,string,map,new,hash,map,map,put,x,y,map,put,a,b,assert,equals,2,int,handle,invoke,exact,object,map,final,illegal,argument,exception,iae,expect,throws,illegal,argument,exception,class,integer,to,string,int,handle,invoke,exact,new,object,assert,equals,unable,to,find,dynamic,method,size,with,0,arguments,for,class,java,lang,object,iae,get,message,assert,true,does,not,fail,inside,class,value,compute,value,arrays,stream,iae,get,stack,trace,any,match,e,return,e,get,method,name,equals,compute,value,e,get,class,name,starts,with,org,elasticsearch,painless,def,bootstrap,pic
DefBootstrapTests -> public void testMegamorphic() throws Throwable;1533547893;test that we revert to the megamorphic classvalue cache and that it works as expected;public void testMegamorphic() throws Throwable {_        DefBootstrap.PIC site = (DefBootstrap.PIC) DefBootstrap.bootstrap(painlessLookup,_                                                                          Collections.emptyMap(),_                                                                          MethodHandles.publicLookup(),_                                                                          "size",_                                                                          MethodType.methodType(int.class, Object.class),_                                                                          0,_                                                                          DefBootstrap.METHOD_CALL,_                                                                          "")__        site.depth = DefBootstrap.PIC.MAX_DEPTH_ _        MethodHandle handle = site.dynamicInvoker()__        assertEquals(2, (int)handle.invokeExact((Object) Arrays.asList("1", "2")))__        assertEquals(1, (int)handle.invokeExact((Object) Collections.singletonMap("a", "b")))__        assertEquals(3, (int)handle.invokeExact((Object) Arrays.asList("x", "y", "z")))__        assertEquals(2, (int)handle.invokeExact((Object) Arrays.asList("u", "v")))___        final HashMap<String,String> map = new HashMap<>()__        map.put("x", "y")__        map.put("a", "b")__        assertEquals(2, (int)handle.invokeExact((Object) map))___        final IllegalArgumentException iae = expectThrows(IllegalArgumentException.class, () -> {_            Integer.toString((int)handle.invokeExact(new Object()))__        })__        assertEquals("Unable to find dynamic method [size] with [0] arguments for class [java.lang.Object].", iae.getMessage())__        assertTrue("Does not fail inside ClassValue.computeValue()", Arrays.stream(iae.getStackTrace()).anyMatch(e -> {_            return e.getMethodName().equals("computeValue") &&_                   e.getClassName().startsWith("org.elasticsearch.painless.DefBootstrap$PIC$")__        }))__    };test,that,we,revert,to,the,megamorphic,classvalue,cache,and,that,it,works,as,expected;public,void,test,megamorphic,throws,throwable,def,bootstrap,pic,site,def,bootstrap,pic,def,bootstrap,bootstrap,painless,lookup,collections,empty,map,method,handles,public,lookup,size,method,type,method,type,int,class,object,class,0,def,bootstrap,site,depth,def,bootstrap,pic,method,handle,handle,site,dynamic,invoker,assert,equals,2,int,handle,invoke,exact,object,arrays,as,list,1,2,assert,equals,1,int,handle,invoke,exact,object,collections,singleton,map,a,b,assert,equals,3,int,handle,invoke,exact,object,arrays,as,list,x,y,z,assert,equals,2,int,handle,invoke,exact,object,arrays,as,list,u,v,final,hash,map,string,string,map,new,hash,map,map,put,x,y,map,put,a,b,assert,equals,2,int,handle,invoke,exact,object,map,final,illegal,argument,exception,iae,expect,throws,illegal,argument,exception,class,integer,to,string,int,handle,invoke,exact,new,object,assert,equals,unable,to,find,dynamic,method,size,with,0,arguments,for,class,java,lang,object,iae,get,message,assert,true,does,not,fail,inside,class,value,compute,value,arrays,stream,iae,get,stack,trace,any,match,e,return,e,get,method,name,equals,compute,value,e,get,class,name,starts,with,org,elasticsearch,painless,def,bootstrap,pic
DefBootstrapTests -> public void testMegamorphic() throws Throwable;1533815246;test that we revert to the megamorphic classvalue cache and that it works as expected;public void testMegamorphic() throws Throwable {_        DefBootstrap.PIC site = (DefBootstrap.PIC) DefBootstrap.bootstrap(painlessLookup,_                                                                          Collections.emptyMap(),_                                                                          MethodHandles.publicLookup(),_                                                                          "size",_                                                                          MethodType.methodType(int.class, Object.class),_                                                                          0,_                                                                          DefBootstrap.METHOD_CALL,_                                                                          "")__        site.depth = DefBootstrap.PIC.MAX_DEPTH_ _        MethodHandle handle = site.dynamicInvoker()__        assertEquals(2, (int)handle.invokeExact((Object) Arrays.asList("1", "2")))__        assertEquals(1, (int)handle.invokeExact((Object) Collections.singletonMap("a", "b")))__        assertEquals(3, (int)handle.invokeExact((Object) Arrays.asList("x", "y", "z")))__        assertEquals(2, (int)handle.invokeExact((Object) Arrays.asList("u", "v")))___        final HashMap<String,String> map = new HashMap<>()__        map.put("x", "y")__        map.put("a", "b")__        assertEquals(2, (int)handle.invokeExact((Object) map))___        final IllegalArgumentException iae = expectThrows(IllegalArgumentException.class, () -> {_            Integer.toString((int)handle.invokeExact(new Object()))__        })__        assertEquals("dynamic method [java.lang.Object, size/0] not found", iae.getMessage())__        assertTrue("Does not fail inside ClassValue.computeValue()", Arrays.stream(iae.getStackTrace()).anyMatch(e -> {_            return e.getMethodName().equals("computeValue") &&_                   e.getClassName().startsWith("org.elasticsearch.painless.DefBootstrap$PIC$")__        }))__    };test,that,we,revert,to,the,megamorphic,classvalue,cache,and,that,it,works,as,expected;public,void,test,megamorphic,throws,throwable,def,bootstrap,pic,site,def,bootstrap,pic,def,bootstrap,bootstrap,painless,lookup,collections,empty,map,method,handles,public,lookup,size,method,type,method,type,int,class,object,class,0,def,bootstrap,site,depth,def,bootstrap,pic,method,handle,handle,site,dynamic,invoker,assert,equals,2,int,handle,invoke,exact,object,arrays,as,list,1,2,assert,equals,1,int,handle,invoke,exact,object,collections,singleton,map,a,b,assert,equals,3,int,handle,invoke,exact,object,arrays,as,list,x,y,z,assert,equals,2,int,handle,invoke,exact,object,arrays,as,list,u,v,final,hash,map,string,string,map,new,hash,map,map,put,x,y,map,put,a,b,assert,equals,2,int,handle,invoke,exact,object,map,final,illegal,argument,exception,iae,expect,throws,illegal,argument,exception,class,integer,to,string,int,handle,invoke,exact,new,object,assert,equals,dynamic,method,java,lang,object,size,0,not,found,iae,get,message,assert,true,does,not,fail,inside,class,value,compute,value,arrays,stream,iae,get,stack,trace,any,match,e,return,e,get,method,name,equals,compute,value,e,get,class,name,starts,with,org,elasticsearch,painless,def,bootstrap,pic
DefBootstrapTests -> public void testOneType() throws Throwable;1524684173;calls toString() on integers, twice;public void testOneType() throws Throwable {_        CallSite site = DefBootstrap.bootstrap(definition,_                                               MethodHandles.publicLookup(),_                                               "toString",_                                               MethodType.methodType(String.class, Object.class),_                                               0,_                                               DefBootstrap.METHOD_CALL,_                                               "")__        MethodHandle handle = site.dynamicInvoker()__        assertDepthEquals(site, 0)___        _        assertEquals("5", (String)handle.invokeExact((Object)5))__        assertDepthEquals(site, 1)___        _        assertEquals("6", (String)handle.invokeExact((Object)6))__        assertDepthEquals(site, 1)__    };calls,to,string,on,integers,twice;public,void,test,one,type,throws,throwable,call,site,site,def,bootstrap,bootstrap,definition,method,handles,public,lookup,to,string,method,type,method,type,string,class,object,class,0,def,bootstrap,method,handle,handle,site,dynamic,invoker,assert,depth,equals,site,0,assert,equals,5,string,handle,invoke,exact,object,5,assert,depth,equals,site,1,assert,equals,6,string,handle,invoke,exact,object,6,assert,depth,equals,site,1
DefBootstrapTests -> public void testOneType() throws Throwable;1531179852;calls toString() on integers, twice;public void testOneType() throws Throwable {_        CallSite site = DefBootstrap.bootstrap(painlessLookup,_                                               MethodHandles.publicLookup(),_                                               "toString",_                                               MethodType.methodType(String.class, Object.class),_                                               0,_                                               DefBootstrap.METHOD_CALL,_                                               "")__        MethodHandle handle = site.dynamicInvoker()__        assertDepthEquals(site, 0)___        _        assertEquals("5", (String)handle.invokeExact((Object)5))__        assertDepthEquals(site, 1)___        _        assertEquals("6", (String)handle.invokeExact((Object)6))__        assertDepthEquals(site, 1)__    };calls,to,string,on,integers,twice;public,void,test,one,type,throws,throwable,call,site,site,def,bootstrap,bootstrap,painless,lookup,method,handles,public,lookup,to,string,method,type,method,type,string,class,object,class,0,def,bootstrap,method,handle,handle,site,dynamic,invoker,assert,depth,equals,site,0,assert,equals,5,string,handle,invoke,exact,object,5,assert,depth,equals,site,1,assert,equals,6,string,handle,invoke,exact,object,6,assert,depth,equals,site,1
DefBootstrapTests -> public void testOneType() throws Throwable;1531910483;calls toString() on integers, twice;public void testOneType() throws Throwable {_        CallSite site = DefBootstrap.bootstrap(painlessLookup,_                                               MethodHandles.publicLookup(),_                                               "toString",_                                               MethodType.methodType(String.class, Object.class),_                                               0,_                                               DefBootstrap.METHOD_CALL,_                                               "")__        MethodHandle handle = site.dynamicInvoker()__        assertDepthEquals(site, 0)___        _        assertEquals("5", (String)handle.invokeExact((Object)5))__        assertDepthEquals(site, 1)___        _        assertEquals("6", (String)handle.invokeExact((Object)6))__        assertDepthEquals(site, 1)__    };calls,to,string,on,integers,twice;public,void,test,one,type,throws,throwable,call,site,site,def,bootstrap,bootstrap,painless,lookup,method,handles,public,lookup,to,string,method,type,method,type,string,class,object,class,0,def,bootstrap,method,handle,handle,site,dynamic,invoker,assert,depth,equals,site,0,assert,equals,5,string,handle,invoke,exact,object,5,assert,depth,equals,site,1,assert,equals,6,string,handle,invoke,exact,object,6,assert,depth,equals,site,1
DefBootstrapTests -> public void testOneType() throws Throwable;1532598597;calls toString() on integers, twice;public void testOneType() throws Throwable {_        CallSite site = DefBootstrap.bootstrap(painlessLookup,_                                               MethodHandles.publicLookup(),_                                               "toString",_                                               MethodType.methodType(String.class, Object.class),_                                               0,_                                               DefBootstrap.METHOD_CALL,_                                               "")__        MethodHandle handle = site.dynamicInvoker()__        assertDepthEquals(site, 0)___        _        assertEquals("5", (String)handle.invokeExact((Object)5))__        assertDepthEquals(site, 1)___        _        assertEquals("6", (String)handle.invokeExact((Object)6))__        assertDepthEquals(site, 1)__    };calls,to,string,on,integers,twice;public,void,test,one,type,throws,throwable,call,site,site,def,bootstrap,bootstrap,painless,lookup,method,handles,public,lookup,to,string,method,type,method,type,string,class,object,class,0,def,bootstrap,method,handle,handle,site,dynamic,invoker,assert,depth,equals,site,0,assert,equals,5,string,handle,invoke,exact,object,5,assert,depth,equals,site,1,assert,equals,6,string,handle,invoke,exact,object,6,assert,depth,equals,site,1
DefBootstrapTests -> public void testOneType() throws Throwable;1533547893;calls toString() on integers, twice;public void testOneType() throws Throwable {_        CallSite site = DefBootstrap.bootstrap(painlessLookup,_                                               Collections.emptyMap(),_                                               MethodHandles.publicLookup(),_                                               "toString",_                                               MethodType.methodType(String.class, Object.class),_                                               0,_                                               DefBootstrap.METHOD_CALL,_                                               "")__        MethodHandle handle = site.dynamicInvoker()__        assertDepthEquals(site, 0)___        _        assertEquals("5", (String)handle.invokeExact((Object)5))__        assertDepthEquals(site, 1)___        _        assertEquals("6", (String)handle.invokeExact((Object)6))__        assertDepthEquals(site, 1)__    };calls,to,string,on,integers,twice;public,void,test,one,type,throws,throwable,call,site,site,def,bootstrap,bootstrap,painless,lookup,collections,empty,map,method,handles,public,lookup,to,string,method,type,method,type,string,class,object,class,0,def,bootstrap,method,handle,handle,site,dynamic,invoker,assert,depth,equals,site,0,assert,equals,5,string,handle,invoke,exact,object,5,assert,depth,equals,site,1,assert,equals,6,string,handle,invoke,exact,object,6,assert,depth,equals,site,1
DefBootstrapTests -> public void testOneType() throws Throwable;1533815246;calls toString() on integers, twice;public void testOneType() throws Throwable {_        CallSite site = DefBootstrap.bootstrap(painlessLookup,_                                               Collections.emptyMap(),_                                               MethodHandles.publicLookup(),_                                               "toString",_                                               MethodType.methodType(String.class, Object.class),_                                               0,_                                               DefBootstrap.METHOD_CALL,_                                               "")__        MethodHandle handle = site.dynamicInvoker()__        assertDepthEquals(site, 0)___        _        assertEquals("5", (String)handle.invokeExact((Object)5))__        assertDepthEquals(site, 1)___        _        assertEquals("6", (String)handle.invokeExact((Object)6))__        assertDepthEquals(site, 1)__    };calls,to,string,on,integers,twice;public,void,test,one,type,throws,throwable,call,site,site,def,bootstrap,bootstrap,painless,lookup,collections,empty,map,method,handles,public,lookup,to,string,method,type,method,type,string,class,object,class,0,def,bootstrap,method,handle,handle,site,dynamic,invoker,assert,depth,equals,site,0,assert,equals,5,string,handle,invoke,exact,object,5,assert,depth,equals,site,1,assert,equals,6,string,handle,invoke,exact,object,6,assert,depth,equals,site,1
