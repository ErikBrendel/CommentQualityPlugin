# id;timestamp;commentText;codeText;commentWords;codeWords
PainlessDocGenerator -> private static String javadocRoot(PainlessMethod method);1531179852;Pick the javadoc root for a {@link PainlessMethod}.;private static String javadocRoot(PainlessMethod method) {_        if (method.augmentation != null) {_            return "painless"__        }_        return javadocRoot(method.owner)__    };pick,the,javadoc,root,for,a,link,painless,method;private,static,string,javadoc,root,painless,method,method,if,method,augmentation,null,return,painless,return,javadoc,root,method,owner
PainlessDocGenerator -> private static String javadocRoot(PainlessMethod method);1531910483;Pick the javadoc root for a {@link PainlessMethod}.;private static String javadocRoot(PainlessMethod method) {_        if (method.augmentation != null) {_            return "painless"__        }_        return javadocRoot(method.target)__    };pick,the,javadoc,root,for,a,link,painless,method;private,static,string,javadoc,root,painless,method,method,if,method,augmentation,null,return,painless,return,javadoc,root,method,target
PainlessDocGenerator -> private static String javadocRoot(PainlessMethod method);1532069817;Pick the javadoc root for a {@link PainlessMethod}.;private static String javadocRoot(PainlessMethod method) {_        if (method.augmentation != null) {_            return "painless"__        }_        return javadocRoot(method.target)__    };pick,the,javadoc,root,for,a,link,painless,method;private,static,string,javadoc,root,painless,method,method,if,method,augmentation,null,return,painless,return,javadoc,root,method,target
PainlessDocGenerator -> private static String javadocRoot(PainlessMethod method);1532598597;Pick the javadoc root for a {@link PainlessMethod}.;private static String javadocRoot(PainlessMethod method) {_        if (method.augmentation != null) {_            return "painless"__        }_        return javadocRoot(method.target)__    };pick,the,javadoc,root,for,a,link,painless,method;private,static,string,javadoc,root,painless,method,method,if,method,augmentation,null,return,painless,return,javadoc,root,method,target
PainlessDocGenerator -> private static String javadocRoot(PainlessMethod method);1532685069;Pick the javadoc root for a {@link PainlessMethod}.;private static String javadocRoot(PainlessMethod method) {_        if (method.augmentation != null) {_            return "painless"__        }_        return javadocRoot(method.target)__    };pick,the,javadoc,root,for,a,link,painless,method;private,static,string,javadoc,root,painless,method,method,if,method,augmentation,null,return,painless,return,javadoc,root,method,target
PainlessDocGenerator -> private static String javadocRoot(PainlessMethod method);1533063033;Pick the javadoc root for a {@link PainlessMethod}.;private static String javadocRoot(PainlessMethod method) {_        if (method.augmentation != null) {_            return "painless"__        }_        return javadocRoot(method.target)__    };pick,the,javadoc,root,for,a,link,painless,method;private,static,string,javadoc,root,painless,method,method,if,method,augmentation,null,return,painless,return,javadoc,root,method,target
PainlessDocGenerator -> private static String javadocRoot(PainlessMethod method);1533143718;Pick the javadoc root for a {@link PainlessMethod}.;private static String javadocRoot(PainlessMethod method) {_        if (method.targetClass != method.javaMethod.getDeclaringClass()) {_            return "painless"__        }_        return javadocRoot(method.targetClass)__    };pick,the,javadoc,root,for,a,link,painless,method;private,static,string,javadoc,root,painless,method,method,if,method,target,class,method,java,method,get,declaring,class,return,painless,return,javadoc,root,method,target,class
PainlessDocGenerator -> private static String javadocRoot(PainlessMethod method);1533295538;Pick the javadoc root for a {@link PainlessMethod}.;private static String javadocRoot(PainlessMethod method) {_        if (method.targetClass != method.javaMethod.getDeclaringClass()) {_            return "painless"__        }_        return javadocRoot(method.targetClass)__    };pick,the,javadoc,root,for,a,link,painless,method;private,static,string,javadoc,root,painless,method,method,if,method,target,class,method,java,method,get,declaring,class,return,painless,return,javadoc,root,method,target,class
PainlessDocGenerator -> private static String javadocRoot(PainlessMethod method);1539615817;Pick the javadoc root for a {@link PainlessMethod}.;private static String javadocRoot(PainlessMethod method) {_        if (method.targetClass != method.javaMethod.getDeclaringClass()) {_            return "painless"__        }_        return javadocRoot(method.targetClass)__    };pick,the,javadoc,root,for,a,link,painless,method;private,static,string,javadoc,root,painless,method,method,if,method,target,class,method,java,method,get,declaring,class,return,painless,return,javadoc,root,method,target,class
PainlessDocGenerator -> private static void emitStruct(PrintStream stream, PainlessClass struct);1531179852;Emit a {@link PainlessClass}. If the {@linkplain PainlessClass} is primitive or def this just emits the name of the struct._Otherwise this emits an internal link with the name.;private static void emitStruct(PrintStream stream, PainlessClass struct) {_        if (false == struct.clazz.isPrimitive() && false == struct.name.equals("def")) {_            stream.print("<<")__            emitAnchor(stream, struct)__            stream.print(',')__            stream.print(struct.name)__            stream.print(">>")__        } else {_            stream.print(struct.name)__        }_    };emit,a,link,painless,class,if,the,linkplain,painless,class,is,primitive,or,def,this,just,emits,the,name,of,the,struct,otherwise,this,emits,an,internal,link,with,the,name;private,static,void,emit,struct,print,stream,stream,painless,class,struct,if,false,struct,clazz,is,primitive,false,struct,name,equals,def,stream,print,emit,anchor,stream,struct,stream,print,stream,print,struct,name,stream,print,else,stream,print,struct,name
PainlessDocGenerator -> private static void emitStruct(PrintStream stream, PainlessClass struct);1531910483;Emit a {@link PainlessClass}. If the {@linkplain PainlessClass} is primitive or def this just emits the name of the struct._Otherwise this emits an internal link with the name.;private static void emitStruct(PrintStream stream, PainlessClass struct) {_        if (false == struct.clazz.isPrimitive() && false == struct.name.equals("def")) {_            stream.print("<<")__            emitAnchor(stream, struct.clazz)__            stream.print(',')__            stream.print(struct.name)__            stream.print(">>")__        } else {_            stream.print(struct.name)__        }_    };emit,a,link,painless,class,if,the,linkplain,painless,class,is,primitive,or,def,this,just,emits,the,name,of,the,struct,otherwise,this,emits,an,internal,link,with,the,name;private,static,void,emit,struct,print,stream,stream,painless,class,struct,if,false,struct,clazz,is,primitive,false,struct,name,equals,def,stream,print,emit,anchor,stream,struct,clazz,stream,print,stream,print,struct,name,stream,print,else,stream,print,struct,name
PainlessDocGenerator -> private static void emitStruct(PrintStream stream, PainlessClass struct);1532069817;Emit a {@link PainlessClass}. If the {@linkplain PainlessClass} is primitive or def this just emits the name of the struct._Otherwise this emits an internal link with the name.;private static void emitStruct(PrintStream stream, PainlessClass struct) {_        if (false == struct.clazz.isPrimitive() && false == struct.name.equals("def")) {_            stream.print("<<")__            emitAnchor(stream, struct.clazz)__            stream.print(',')__            stream.print(struct.name)__            stream.print(">>")__        } else {_            stream.print(struct.name)__        }_    };emit,a,link,painless,class,if,the,linkplain,painless,class,is,primitive,or,def,this,just,emits,the,name,of,the,struct,otherwise,this,emits,an,internal,link,with,the,name;private,static,void,emit,struct,print,stream,stream,painless,class,struct,if,false,struct,clazz,is,primitive,false,struct,name,equals,def,stream,print,emit,anchor,stream,struct,clazz,stream,print,stream,print,struct,name,stream,print,else,stream,print,struct,name
PainlessDocGenerator -> private static void emitStruct(PrintStream stream, PainlessClass struct);1532598597;Emit a {@link PainlessClass}. If the {@linkplain PainlessClass} is primitive or def this just emits the name of the struct._Otherwise this emits an internal link with the name.;private static void emitStruct(PrintStream stream, PainlessClass struct) {_        if (false == struct.clazz.isPrimitive() && false == struct.name.equals("def")) {_            stream.print("<<")__            emitAnchor(stream, struct.clazz)__            stream.print(',')__            stream.print(struct.name)__            stream.print(">>")__        } else {_            stream.print(struct.name)__        }_    };emit,a,link,painless,class,if,the,linkplain,painless,class,is,primitive,or,def,this,just,emits,the,name,of,the,struct,otherwise,this,emits,an,internal,link,with,the,name;private,static,void,emit,struct,print,stream,stream,painless,class,struct,if,false,struct,clazz,is,primitive,false,struct,name,equals,def,stream,print,emit,anchor,stream,struct,clazz,stream,print,stream,print,struct,name,stream,print,else,stream,print,struct,name
PainlessDocGenerator -> private static void emitType(PrintStream stream, Class<?> clazz);1531179852;Emit a {@link Class}. If the type is primitive or an array of primitives this just emits the name of the type. Otherwise this emits_an internal link with the text.;private static void emitType(PrintStream stream, Class<?> clazz) {_        emitStruct(stream, PAINLESS_LOOKUP.getPainlessStructFromJavaClass(clazz))__        while ((clazz = clazz.getComponentType()) != null) {_            stream.print("[]")__        }_    };emit,a,link,class,if,the,type,is,primitive,or,an,array,of,primitives,this,just,emits,the,name,of,the,type,otherwise,this,emits,an,internal,link,with,the,text;private,static,void,emit,type,print,stream,stream,class,clazz,emit,struct,stream,get,painless,struct,from,java,class,clazz,while,clazz,clazz,get,component,type,null,stream,print
PainlessDocGenerator -> private static void emitType(PrintStream stream, Class<?> clazz);1531910483;Emit a {@link Class}. If the type is primitive or an array of primitives this just emits the name of the type. Otherwise this emits_an internal link with the text.;private static void emitType(PrintStream stream, Class<?> clazz) {_        emitStruct(stream, PAINLESS_LOOKUP.getPainlessStructFromJavaClass(clazz))__        while ((clazz = clazz.getComponentType()) != null) {_            stream.print("[]")__        }_    };emit,a,link,class,if,the,type,is,primitive,or,an,array,of,primitives,this,just,emits,the,name,of,the,type,otherwise,this,emits,an,internal,link,with,the,text;private,static,void,emit,type,print,stream,stream,class,clazz,emit,struct,stream,get,painless,struct,from,java,class,clazz,while,clazz,clazz,get,component,type,null,stream,print
PainlessDocGenerator -> private static void emitType(PrintStream stream, Class<?> clazz);1532069817;Emit a {@link Class}. If the type is primitive or an array of primitives this just emits the name of the type. Otherwise this emits_an internal link with the text.;private static void emitType(PrintStream stream, Class<?> clazz) {_        emitStruct(stream, PAINLESS_LOOKUP.getPainlessStructFromJavaClass(clazz))__        while ((clazz = clazz.getComponentType()) != null) {_            stream.print("[]")__        }_    };emit,a,link,class,if,the,type,is,primitive,or,an,array,of,primitives,this,just,emits,the,name,of,the,type,otherwise,this,emits,an,internal,link,with,the,text;private,static,void,emit,type,print,stream,stream,class,clazz,emit,struct,stream,get,painless,struct,from,java,class,clazz,while,clazz,clazz,get,component,type,null,stream,print
PainlessDocGenerator -> private static void emitType(PrintStream stream, Class<?> clazz);1532598597;Emit a {@link Class}. If the type is primitive or an array of primitives this just emits the name of the type. Otherwise this emits_an internal link with the text.;private static void emitType(PrintStream stream, Class<?> clazz) {_        emitStruct(stream, PAINLESS_LOOKUP.getPainlessStructFromJavaClass(clazz))__        while ((clazz = clazz.getComponentType()) != null) {_            stream.print("[]")__        }_    };emit,a,link,class,if,the,type,is,primitive,or,an,array,of,primitives,this,just,emits,the,name,of,the,type,otherwise,this,emits,an,internal,link,with,the,text;private,static,void,emit,type,print,stream,stream,class,clazz,emit,struct,stream,get,painless,struct,from,java,class,clazz,while,clazz,clazz,get,component,type,null,stream,print
PainlessDocGenerator -> private static void emitType(PrintStream stream, Class<?> clazz);1532685069;Emit a {@link Class}. If the type is primitive or an array of primitives this just emits the name of the type. Otherwise this emits_an internal link with the text.;private static void emitType(PrintStream stream, Class<?> clazz) {_        emitStruct(stream, clazz)__        while ((clazz = clazz.getComponentType()) != null) {_            stream.print("[]")__        }_    };emit,a,link,class,if,the,type,is,primitive,or,an,array,of,primitives,this,just,emits,the,name,of,the,type,otherwise,this,emits,an,internal,link,with,the,text;private,static,void,emit,type,print,stream,stream,class,clazz,emit,struct,stream,clazz,while,clazz,clazz,get,component,type,null,stream,print
PainlessDocGenerator -> private static void emitType(PrintStream stream, Class<?> clazz);1533063033;Emit a {@link Class}. If the type is primitive or an array of primitives this just emits the name of the type. Otherwise this emits_an internal link with the text.;private static void emitType(PrintStream stream, Class<?> clazz) {_        emitStruct(stream, clazz)__        while ((clazz = clazz.getComponentType()) != null) {_            stream.print("[]")__        }_    };emit,a,link,class,if,the,type,is,primitive,or,an,array,of,primitives,this,just,emits,the,name,of,the,type,otherwise,this,emits,an,internal,link,with,the,text;private,static,void,emit,type,print,stream,stream,class,clazz,emit,struct,stream,clazz,while,clazz,clazz,get,component,type,null,stream,print
PainlessDocGenerator -> private static void emitType(PrintStream stream, Class<?> clazz);1533143718;Emit a {@link Class}. If the type is primitive or an array of primitives this just emits the name of the type. Otherwise this emits_an internal link with the text.;private static void emitType(PrintStream stream, Class<?> clazz) {_        emitStruct(stream, clazz)__        while ((clazz = clazz.getComponentType()) != null) {_            stream.print("[]")__        }_    };emit,a,link,class,if,the,type,is,primitive,or,an,array,of,primitives,this,just,emits,the,name,of,the,type,otherwise,this,emits,an,internal,link,with,the,text;private,static,void,emit,type,print,stream,stream,class,clazz,emit,struct,stream,clazz,while,clazz,clazz,get,component,type,null,stream,print
PainlessDocGenerator -> private static void emitType(PrintStream stream, Class<?> clazz);1533295538;Emit a {@link Class}. If the type is primitive or an array of primitives this just emits the name of the type. Otherwise this emits_an internal link with the text.;private static void emitType(PrintStream stream, Class<?> clazz) {_        emitStruct(stream, clazz)__        while ((clazz = clazz.getComponentType()) != null) {_            stream.print("[]")__        }_    };emit,a,link,class,if,the,type,is,primitive,or,an,array,of,primitives,this,just,emits,the,name,of,the,type,otherwise,this,emits,an,internal,link,with,the,text;private,static,void,emit,type,print,stream,stream,class,clazz,emit,struct,stream,clazz,while,clazz,clazz,get,component,type,null,stream,print
PainlessDocGenerator -> private static void emitType(PrintStream stream, Class<?> clazz);1539615817;Emit a {@link Class}. If the type is primitive or an array of primitives this just emits the name of the type. Otherwise this emits_an internal link with the text.;private static void emitType(PrintStream stream, Class<?> clazz) {_        emitStruct(stream, clazz)__        while ((clazz = clazz.getComponentType()) != null) {_            stream.print("[]")__        }_    };emit,a,link,class,if,the,type,is,primitive,or,an,array,of,primitives,this,just,emits,the,name,of,the,type,otherwise,this,emits,an,internal,link,with,the,text;private,static,void,emit,type,print,stream,stream,class,clazz,emit,struct,stream,clazz,while,clazz,clazz,get,component,type,null,stream,print
PainlessDocGenerator -> private static void emitJavadocLink(PrintStream stream, String root, PainlessField field);1531179852;Emit an external link to Javadoc for a {@link PainlessField}.__@param root name of the root uri variable;private static void emitJavadocLink(PrintStream stream, String root, PainlessField field) {_        stream.print("link:{")__        stream.print(root)__        stream.print("-javadoc}/")__        stream.print(classUrlPath(field.owner.clazz))__        stream.print(".html#")__        stream.print(field.javaName)__    };emit,an,external,link,to,javadoc,for,a,link,painless,field,param,root,name,of,the,root,uri,variable;private,static,void,emit,javadoc,link,print,stream,stream,string,root,painless,field,field,stream,print,link,stream,print,root,stream,print,javadoc,stream,print,class,url,path,field,owner,clazz,stream,print,html,stream,print,field,java,name
PainlessDocGenerator -> private static void emitJavadocLink(PrintStream stream, String root, PainlessField field);1531910483;Emit an external link to Javadoc for a {@link PainlessField}.__@param root name of the root uri variable;private static void emitJavadocLink(PrintStream stream, String root, PainlessField field) {_        stream.print("link:{")__        stream.print(root)__        stream.print("-javadoc}/")__        stream.print(classUrlPath(field.target))__        stream.print(".html#")__        stream.print(field.javaName)__    };emit,an,external,link,to,javadoc,for,a,link,painless,field,param,root,name,of,the,root,uri,variable;private,static,void,emit,javadoc,link,print,stream,stream,string,root,painless,field,field,stream,print,link,stream,print,root,stream,print,javadoc,stream,print,class,url,path,field,target,stream,print,html,stream,print,field,java,name
PainlessDocGenerator -> private static void emitJavadocLink(PrintStream stream, String root, PainlessField field);1532069817;Emit an external link to Javadoc for a {@link PainlessField}.__@param root name of the root uri variable;private static void emitJavadocLink(PrintStream stream, String root, PainlessField field) {_        stream.print("link:{")__        stream.print(root)__        stream.print("-javadoc}/")__        stream.print(classUrlPath(field.target))__        stream.print(".html#")__        stream.print(field.javaName)__    };emit,an,external,link,to,javadoc,for,a,link,painless,field,param,root,name,of,the,root,uri,variable;private,static,void,emit,javadoc,link,print,stream,stream,string,root,painless,field,field,stream,print,link,stream,print,root,stream,print,javadoc,stream,print,class,url,path,field,target,stream,print,html,stream,print,field,java,name
PainlessDocGenerator -> private static void emitJavadocLink(PrintStream stream, String root, PainlessField field);1532598597;Emit an external link to Javadoc for a {@link PainlessField}.__@param root name of the root uri variable;private static void emitJavadocLink(PrintStream stream, String root, PainlessField field) {_        stream.print("link:{")__        stream.print(root)__        stream.print("-javadoc}/")__        stream.print(classUrlPath(field.target))__        stream.print(".html#")__        stream.print(field.javaName)__    };emit,an,external,link,to,javadoc,for,a,link,painless,field,param,root,name,of,the,root,uri,variable;private,static,void,emit,javadoc,link,print,stream,stream,string,root,painless,field,field,stream,print,link,stream,print,root,stream,print,javadoc,stream,print,class,url,path,field,target,stream,print,html,stream,print,field,java,name
PainlessDocGenerator -> private static void emitJavadocLink(PrintStream stream, String root, PainlessField field);1532685069;Emit an external link to Javadoc for a {@link PainlessField}.__@param root name of the root uri variable;private static void emitJavadocLink(PrintStream stream, String root, PainlessField field) {_        stream.print("link:{")__        stream.print(root)__        stream.print("-javadoc}/")__        stream.print(classUrlPath(field.target))__        stream.print(".html#")__        stream.print(field.javaName)__    };emit,an,external,link,to,javadoc,for,a,link,painless,field,param,root,name,of,the,root,uri,variable;private,static,void,emit,javadoc,link,print,stream,stream,string,root,painless,field,field,stream,print,link,stream,print,root,stream,print,javadoc,stream,print,class,url,path,field,target,stream,print,html,stream,print,field,java,name
PainlessDocGenerator -> private static void emitJavadocLink(PrintStream stream, String root, PainlessField field);1533063033;Emit an external link to Javadoc for a {@link PainlessField}.__@param root name of the root uri variable;private static void emitJavadocLink(PrintStream stream, String root, PainlessField field) {_        stream.print("link:{")__        stream.print(root)__        stream.print("-javadoc}/")__        stream.print(classUrlPath(field.target))__        stream.print(".html#")__        stream.print(field.javaName)__    };emit,an,external,link,to,javadoc,for,a,link,painless,field,param,root,name,of,the,root,uri,variable;private,static,void,emit,javadoc,link,print,stream,stream,string,root,painless,field,field,stream,print,link,stream,print,root,stream,print,javadoc,stream,print,class,url,path,field,target,stream,print,html,stream,print,field,java,name
PainlessDocGenerator -> private static void emitJavadocLink(PrintStream stream, String root, PainlessField field);1533143718;Emit an external link to Javadoc for a {@link PainlessField}.__@param root name of the root uri variable;private static void emitJavadocLink(PrintStream stream, String root, PainlessField field) {_        stream.print("link:{")__        stream.print(root)__        stream.print("-javadoc}/")__        stream.print(classUrlPath(field.javaField.getDeclaringClass()))__        stream.print(".html#")__        stream.print(field.javaField.getName())__    };emit,an,external,link,to,javadoc,for,a,link,painless,field,param,root,name,of,the,root,uri,variable;private,static,void,emit,javadoc,link,print,stream,stream,string,root,painless,field,field,stream,print,link,stream,print,root,stream,print,javadoc,stream,print,class,url,path,field,java,field,get,declaring,class,stream,print,html,stream,print,field,java,field,get,name
PainlessDocGenerator -> private static void emitJavadocLink(PrintStream stream, String root, PainlessField field);1533295538;Emit an external link to Javadoc for a {@link PainlessField}.__@param root name of the root uri variable;private static void emitJavadocLink(PrintStream stream, String root, PainlessField field) {_        stream.print("link:{")__        stream.print(root)__        stream.print("-javadoc}/")__        stream.print(classUrlPath(field.javaField.getDeclaringClass()))__        stream.print(".html#")__        stream.print(field.javaField.getName())__    };emit,an,external,link,to,javadoc,for,a,link,painless,field,param,root,name,of,the,root,uri,variable;private,static,void,emit,javadoc,link,print,stream,stream,string,root,painless,field,field,stream,print,link,stream,print,root,stream,print,javadoc,stream,print,class,url,path,field,java,field,get,declaring,class,stream,print,html,stream,print,field,java,field,get,name
PainlessDocGenerator -> private static void emitJavadocLink(PrintStream stream, String root, PainlessField field);1539615817;Emit an external link to Javadoc for a {@link PainlessField}.__@param root name of the root uri variable;private static void emitJavadocLink(PrintStream stream, String root, PainlessField field) {_        stream.print("link:{")__        stream.print(root)__        stream.print("-javadoc}/")__        stream.print(classUrlPath(field.javaField.getDeclaringClass()))__        stream.print(".html#")__        stream.print(field.javaField.getName())__    };emit,an,external,link,to,javadoc,for,a,link,painless,field,param,root,name,of,the,root,uri,variable;private,static,void,emit,javadoc,link,print,stream,stream,string,root,painless,field,field,stream,print,link,stream,print,root,stream,print,javadoc,stream,print,class,url,path,field,java,field,get,declaring,class,stream,print,html,stream,print,field,java,field,get,name
PainlessDocGenerator -> private static void emitAnchor(PrintStream stream, PainlessMethod method);1531179852;Anchor text for a {@link PainlessMethod}.;private static void emitAnchor(PrintStream stream, PainlessMethod method) {_        emitAnchor(stream, method.owner)__        stream.print('-')__        stream.print(methodName(method))__        stream.print('-')__        stream.print(method.arguments.size())__    };anchor,text,for,a,link,painless,method;private,static,void,emit,anchor,print,stream,stream,painless,method,method,emit,anchor,stream,method,owner,stream,print,stream,print,method,name,method,stream,print,stream,print,method,arguments,size
PainlessDocGenerator -> private static void emitAnchor(PrintStream stream, PainlessMethod method);1531910483;Anchor text for a {@link PainlessMethod}.;private static void emitAnchor(PrintStream stream, PainlessMethod method) {_        emitAnchor(stream, method.target)__        stream.print('-')__        stream.print(methodName(method))__        stream.print('-')__        stream.print(method.arguments.size())__    };anchor,text,for,a,link,painless,method;private,static,void,emit,anchor,print,stream,stream,painless,method,method,emit,anchor,stream,method,target,stream,print,stream,print,method,name,method,stream,print,stream,print,method,arguments,size
PainlessDocGenerator -> private static void emitAnchor(PrintStream stream, PainlessMethod method);1532069817;Anchor text for a {@link PainlessMethod}.;private static void emitAnchor(PrintStream stream, PainlessMethod method) {_        emitAnchor(stream, method.target)__        stream.print('-')__        stream.print(methodName(method))__        stream.print('-')__        stream.print(method.arguments.size())__    };anchor,text,for,a,link,painless,method;private,static,void,emit,anchor,print,stream,stream,painless,method,method,emit,anchor,stream,method,target,stream,print,stream,print,method,name,method,stream,print,stream,print,method,arguments,size
PainlessDocGenerator -> private static void emitAnchor(PrintStream stream, PainlessMethod method);1532598597;Anchor text for a {@link PainlessMethod}.;private static void emitAnchor(PrintStream stream, PainlessMethod method) {_        emitAnchor(stream, method.target)__        stream.print('-')__        stream.print(methodName(method))__        stream.print('-')__        stream.print(method.arguments.size())__    };anchor,text,for,a,link,painless,method;private,static,void,emit,anchor,print,stream,stream,painless,method,method,emit,anchor,stream,method,target,stream,print,stream,print,method,name,method,stream,print,stream,print,method,arguments,size
PainlessDocGenerator -> private static void emitAnchor(PrintStream stream, PainlessMethod method);1532685069;Anchor text for a {@link PainlessMethod}.;private static void emitAnchor(PrintStream stream, PainlessMethod method) {_        emitAnchor(stream, method.target)__        stream.print('-')__        stream.print(methodName(method))__        stream.print('-')__        stream.print(method.arguments.size())__    };anchor,text,for,a,link,painless,method;private,static,void,emit,anchor,print,stream,stream,painless,method,method,emit,anchor,stream,method,target,stream,print,stream,print,method,name,method,stream,print,stream,print,method,arguments,size
PainlessDocGenerator -> private static void emitAnchor(PrintStream stream, PainlessMethod method);1533063033;Anchor text for a {@link PainlessMethod}.;private static void emitAnchor(PrintStream stream, PainlessMethod method) {_        emitAnchor(stream, method.target)__        stream.print('-')__        stream.print(methodName(method))__        stream.print('-')__        stream.print(method.arguments.size())__    };anchor,text,for,a,link,painless,method;private,static,void,emit,anchor,print,stream,stream,painless,method,method,emit,anchor,stream,method,target,stream,print,stream,print,method,name,method,stream,print,stream,print,method,arguments,size
PainlessDocGenerator -> private static void emitAnchor(PrintStream stream, PainlessMethod method);1533143718;Anchor text for a {@link PainlessMethod}.;private static void emitAnchor(PrintStream stream, PainlessMethod method) {_        emitAnchor(stream, method.targetClass)__        stream.print('-')__        stream.print(methodName(method))__        stream.print('-')__        stream.print(method.typeParameters.size())__    };anchor,text,for,a,link,painless,method;private,static,void,emit,anchor,print,stream,stream,painless,method,method,emit,anchor,stream,method,target,class,stream,print,stream,print,method,name,method,stream,print,stream,print,method,type,parameters,size
PainlessDocGenerator -> private static void emitAnchor(PrintStream stream, PainlessMethod method);1533295538;Anchor text for a {@link PainlessMethod}.;private static void emitAnchor(PrintStream stream, PainlessMethod method) {_        emitAnchor(stream, method.targetClass)__        stream.print('-')__        stream.print(methodName(method))__        stream.print('-')__        stream.print(method.typeParameters.size())__    };anchor,text,for,a,link,painless,method;private,static,void,emit,anchor,print,stream,stream,painless,method,method,emit,anchor,stream,method,target,class,stream,print,stream,print,method,name,method,stream,print,stream,print,method,type,parameters,size
PainlessDocGenerator -> private static void emitAnchor(PrintStream stream, PainlessMethod method);1539615817;Anchor text for a {@link PainlessMethod}.;private static void emitAnchor(PrintStream stream, PainlessMethod method) {_        emitAnchor(stream, method.targetClass)__        stream.print('-')__        stream.print(methodName(method))__        stream.print('-')__        stream.print(method.typeParameters.size())__    };anchor,text,for,a,link,painless,method;private,static,void,emit,anchor,print,stream,stream,painless,method,method,emit,anchor,stream,method,target,class,stream,print,stream,print,method,name,method,stream,print,stream,print,method,type,parameters,size
PainlessDocGenerator -> private static void emitAnchor(PrintStream stream, PainlessField field);1531179852;Anchor text for a {@link PainlessField}.;private static void emitAnchor(PrintStream stream, PainlessField field) {_        emitAnchor(stream, field.owner)__        stream.print('-')__        stream.print(field.name)__    };anchor,text,for,a,link,painless,field;private,static,void,emit,anchor,print,stream,stream,painless,field,field,emit,anchor,stream,field,owner,stream,print,stream,print,field,name
PainlessDocGenerator -> private static void emitAnchor(PrintStream stream, PainlessField field);1531910483;Anchor text for a {@link PainlessField}.;private static void emitAnchor(PrintStream stream, PainlessField field) {_        emitAnchor(stream, field.target)__        stream.print('-')__        stream.print(field.name)__    };anchor,text,for,a,link,painless,field;private,static,void,emit,anchor,print,stream,stream,painless,field,field,emit,anchor,stream,field,target,stream,print,stream,print,field,name
PainlessDocGenerator -> private static void emitAnchor(PrintStream stream, PainlessField field);1532069817;Anchor text for a {@link PainlessField}.;private static void emitAnchor(PrintStream stream, PainlessField field) {_        emitAnchor(stream, field.target)__        stream.print('-')__        stream.print(field.name)__    };anchor,text,for,a,link,painless,field;private,static,void,emit,anchor,print,stream,stream,painless,field,field,emit,anchor,stream,field,target,stream,print,stream,print,field,name
PainlessDocGenerator -> private static void emitAnchor(PrintStream stream, PainlessField field);1532598597;Anchor text for a {@link PainlessField}.;private static void emitAnchor(PrintStream stream, PainlessField field) {_        emitAnchor(stream, field.target)__        stream.print('-')__        stream.print(field.name)__    };anchor,text,for,a,link,painless,field;private,static,void,emit,anchor,print,stream,stream,painless,field,field,emit,anchor,stream,field,target,stream,print,stream,print,field,name
PainlessDocGenerator -> private static void emitAnchor(PrintStream stream, PainlessField field);1532685069;Anchor text for a {@link PainlessField}.;private static void emitAnchor(PrintStream stream, PainlessField field) {_        emitAnchor(stream, field.target)__        stream.print('-')__        stream.print(field.name)__    };anchor,text,for,a,link,painless,field;private,static,void,emit,anchor,print,stream,stream,painless,field,field,emit,anchor,stream,field,target,stream,print,stream,print,field,name
PainlessDocGenerator -> private static void emitAnchor(PrintStream stream, PainlessField field);1533063033;Anchor text for a {@link PainlessField}.;private static void emitAnchor(PrintStream stream, PainlessField field) {_        emitAnchor(stream, field.target)__        stream.print('-')__        stream.print(field.name)__    };anchor,text,for,a,link,painless,field;private,static,void,emit,anchor,print,stream,stream,painless,field,field,emit,anchor,stream,field,target,stream,print,stream,print,field,name
PainlessDocGenerator -> private static void emitAnchor(PrintStream stream, PainlessField field);1533143718;Anchor text for a {@link PainlessField}.;private static void emitAnchor(PrintStream stream, PainlessField field) {_        emitAnchor(stream, field.javaField.getDeclaringClass())__        stream.print('-')__        stream.print(field.javaField.getName())__    };anchor,text,for,a,link,painless,field;private,static,void,emit,anchor,print,stream,stream,painless,field,field,emit,anchor,stream,field,java,field,get,declaring,class,stream,print,stream,print,field,java,field,get,name
PainlessDocGenerator -> private static void emitAnchor(PrintStream stream, PainlessField field);1533295538;Anchor text for a {@link PainlessField}.;private static void emitAnchor(PrintStream stream, PainlessField field) {_        emitAnchor(stream, field.javaField.getDeclaringClass())__        stream.print('-')__        stream.print(field.javaField.getName())__    };anchor,text,for,a,link,painless,field;private,static,void,emit,anchor,print,stream,stream,painless,field,field,emit,anchor,stream,field,java,field,get,declaring,class,stream,print,stream,print,field,java,field,get,name
PainlessDocGenerator -> private static void emitAnchor(PrintStream stream, PainlessField field);1539615817;Anchor text for a {@link PainlessField}.;private static void emitAnchor(PrintStream stream, PainlessField field) {_        emitAnchor(stream, field.javaField.getDeclaringClass())__        stream.print('-')__        stream.print(field.javaField.getName())__    };anchor,text,for,a,link,painless,field;private,static,void,emit,anchor,print,stream,stream,painless,field,field,emit,anchor,stream,field,java,field,get,declaring,class,stream,print,stream,print,field,java,field,get,name
PainlessDocGenerator -> private static void emitJavadocLink(PrintStream stream, String root, PainlessMethod method);1531179852;Emit an external link to Javadoc for a {@link PainlessMethod}.__@param root name of the root uri variable;private static void emitJavadocLink(PrintStream stream, String root, PainlessMethod method) {_        stream.print("link:{")__        stream.print(root)__        stream.print("-javadoc}/")__        stream.print(classUrlPath(method.augmentation != null ? method.augmentation : method.owner.clazz))__        stream.print(".html#")__        stream.print(methodName(method))__        stream.print("%2D")__        boolean first = true__        if (method.augmentation != null) {_            first = false__            stream.print(method.owner.clazz.getName())__        }_        for (Class<?> clazz: method.arguments) {_            if (first) {_                first = false__            } else {_                stream.print("%2D")__            }_            stream.print(clazz.getName())__            if (clazz.isArray()) {_                stream.print(":A")__            }_        }_        stream.print("%2D")__    };emit,an,external,link,to,javadoc,for,a,link,painless,method,param,root,name,of,the,root,uri,variable;private,static,void,emit,javadoc,link,print,stream,stream,string,root,painless,method,method,stream,print,link,stream,print,root,stream,print,javadoc,stream,print,class,url,path,method,augmentation,null,method,augmentation,method,owner,clazz,stream,print,html,stream,print,method,name,method,stream,print,2d,boolean,first,true,if,method,augmentation,null,first,false,stream,print,method,owner,clazz,get,name,for,class,clazz,method,arguments,if,first,first,false,else,stream,print,2d,stream,print,clazz,get,name,if,clazz,is,array,stream,print,a,stream,print,2d
PainlessDocGenerator -> private static void emitJavadocLink(PrintStream stream, String root, PainlessMethod method);1531910483;Emit an external link to Javadoc for a {@link PainlessMethod}.__@param root name of the root uri variable;private static void emitJavadocLink(PrintStream stream, String root, PainlessMethod method) {_        stream.print("link:{")__        stream.print(root)__        stream.print("-javadoc}/")__        stream.print(classUrlPath(method.augmentation != null ? method.augmentation : method.target))__        stream.print(".html#")__        stream.print(methodName(method))__        stream.print("%2D")__        boolean first = true__        if (method.augmentation != null) {_            first = false__            stream.print(method.target.getName())__        }_        for (Class<?> clazz: method.arguments) {_            if (first) {_                first = false__            } else {_                stream.print("%2D")__            }_            stream.print(clazz.getName())__            if (clazz.isArray()) {_                stream.print(":A")__            }_        }_        stream.print("%2D")__    };emit,an,external,link,to,javadoc,for,a,link,painless,method,param,root,name,of,the,root,uri,variable;private,static,void,emit,javadoc,link,print,stream,stream,string,root,painless,method,method,stream,print,link,stream,print,root,stream,print,javadoc,stream,print,class,url,path,method,augmentation,null,method,augmentation,method,target,stream,print,html,stream,print,method,name,method,stream,print,2d,boolean,first,true,if,method,augmentation,null,first,false,stream,print,method,target,get,name,for,class,clazz,method,arguments,if,first,first,false,else,stream,print,2d,stream,print,clazz,get,name,if,clazz,is,array,stream,print,a,stream,print,2d
PainlessDocGenerator -> private static void emitJavadocLink(PrintStream stream, String root, PainlessMethod method);1532069817;Emit an external link to Javadoc for a {@link PainlessMethod}.__@param root name of the root uri variable;private static void emitJavadocLink(PrintStream stream, String root, PainlessMethod method) {_        stream.print("link:{")__        stream.print(root)__        stream.print("-javadoc}/")__        stream.print(classUrlPath(method.augmentation != null ? method.augmentation : method.target))__        stream.print(".html#")__        stream.print(methodName(method))__        stream.print("%2D")__        boolean first = true__        if (method.augmentation != null) {_            first = false__            stream.print(method.target.getName())__        }_        for (Class<?> clazz: method.arguments) {_            if (first) {_                first = false__            } else {_                stream.print("%2D")__            }_            stream.print(clazz.getName())__            if (clazz.isArray()) {_                stream.print(":A")__            }_        }_        stream.print("%2D")__    };emit,an,external,link,to,javadoc,for,a,link,painless,method,param,root,name,of,the,root,uri,variable;private,static,void,emit,javadoc,link,print,stream,stream,string,root,painless,method,method,stream,print,link,stream,print,root,stream,print,javadoc,stream,print,class,url,path,method,augmentation,null,method,augmentation,method,target,stream,print,html,stream,print,method,name,method,stream,print,2d,boolean,first,true,if,method,augmentation,null,first,false,stream,print,method,target,get,name,for,class,clazz,method,arguments,if,first,first,false,else,stream,print,2d,stream,print,clazz,get,name,if,clazz,is,array,stream,print,a,stream,print,2d
PainlessDocGenerator -> private static void emitJavadocLink(PrintStream stream, String root, PainlessMethod method);1532598597;Emit an external link to Javadoc for a {@link PainlessMethod}.__@param root name of the root uri variable;private static void emitJavadocLink(PrintStream stream, String root, PainlessMethod method) {_        stream.print("link:{")__        stream.print(root)__        stream.print("-javadoc}/")__        stream.print(classUrlPath(method.augmentation != null ? method.augmentation : method.target))__        stream.print(".html#")__        stream.print(methodName(method))__        stream.print("%2D")__        boolean first = true__        if (method.augmentation != null) {_            first = false__            stream.print(method.target.getName())__        }_        for (Class<?> clazz: method.arguments) {_            if (first) {_                first = false__            } else {_                stream.print("%2D")__            }_            stream.print(clazz.getName())__            if (clazz.isArray()) {_                stream.print(":A")__            }_        }_        stream.print("%2D")__    };emit,an,external,link,to,javadoc,for,a,link,painless,method,param,root,name,of,the,root,uri,variable;private,static,void,emit,javadoc,link,print,stream,stream,string,root,painless,method,method,stream,print,link,stream,print,root,stream,print,javadoc,stream,print,class,url,path,method,augmentation,null,method,augmentation,method,target,stream,print,html,stream,print,method,name,method,stream,print,2d,boolean,first,true,if,method,augmentation,null,first,false,stream,print,method,target,get,name,for,class,clazz,method,arguments,if,first,first,false,else,stream,print,2d,stream,print,clazz,get,name,if,clazz,is,array,stream,print,a,stream,print,2d
PainlessDocGenerator -> private static void emitJavadocLink(PrintStream stream, String root, PainlessMethod method);1532685069;Emit an external link to Javadoc for a {@link PainlessMethod}.__@param root name of the root uri variable;private static void emitJavadocLink(PrintStream stream, String root, PainlessMethod method) {_        stream.print("link:{")__        stream.print(root)__        stream.print("-javadoc}/")__        stream.print(classUrlPath(method.augmentation != null ? method.augmentation : method.target))__        stream.print(".html#")__        stream.print(methodName(method))__        stream.print("%2D")__        boolean first = true__        if (method.augmentation != null) {_            first = false__            stream.print(method.target.getName())__        }_        for (Class<?> clazz: method.arguments) {_            if (first) {_                first = false__            } else {_                stream.print("%2D")__            }_            stream.print(clazz.getName())__            if (clazz.isArray()) {_                stream.print(":A")__            }_        }_        stream.print("%2D")__    };emit,an,external,link,to,javadoc,for,a,link,painless,method,param,root,name,of,the,root,uri,variable;private,static,void,emit,javadoc,link,print,stream,stream,string,root,painless,method,method,stream,print,link,stream,print,root,stream,print,javadoc,stream,print,class,url,path,method,augmentation,null,method,augmentation,method,target,stream,print,html,stream,print,method,name,method,stream,print,2d,boolean,first,true,if,method,augmentation,null,first,false,stream,print,method,target,get,name,for,class,clazz,method,arguments,if,first,first,false,else,stream,print,2d,stream,print,clazz,get,name,if,clazz,is,array,stream,print,a,stream,print,2d
PainlessDocGenerator -> private static void emitJavadocLink(PrintStream stream, String root, PainlessMethod method);1533063033;Emit an external link to Javadoc for a {@link PainlessMethod}.__@param root name of the root uri variable;private static void emitJavadocLink(PrintStream stream, String root, PainlessMethod method) {_        stream.print("link:{")__        stream.print(root)__        stream.print("-javadoc}/")__        stream.print(classUrlPath(method.augmentation != null ? method.augmentation : method.target))__        stream.print(".html#")__        stream.print(methodName(method))__        stream.print("%2D")__        boolean first = true__        if (method.augmentation != null) {_            first = false__            stream.print(method.target.getName())__        }_        for (Class<?> clazz: method.arguments) {_            if (first) {_                first = false__            } else {_                stream.print("%2D")__            }_            stream.print(clazz.getName())__            if (clazz.isArray()) {_                stream.print(":A")__            }_        }_        stream.print("%2D")__    };emit,an,external,link,to,javadoc,for,a,link,painless,method,param,root,name,of,the,root,uri,variable;private,static,void,emit,javadoc,link,print,stream,stream,string,root,painless,method,method,stream,print,link,stream,print,root,stream,print,javadoc,stream,print,class,url,path,method,augmentation,null,method,augmentation,method,target,stream,print,html,stream,print,method,name,method,stream,print,2d,boolean,first,true,if,method,augmentation,null,first,false,stream,print,method,target,get,name,for,class,clazz,method,arguments,if,first,first,false,else,stream,print,2d,stream,print,clazz,get,name,if,clazz,is,array,stream,print,a,stream,print,2d
PainlessDocGenerator -> private static void emitJavadocLink(PrintStream stream, String root, PainlessMethod method);1533143718;Emit an external link to Javadoc for a {@link PainlessMethod}.__@param root name of the root uri variable;private static void emitJavadocLink(PrintStream stream, String root, PainlessMethod method) {_        stream.print("link:{")__        stream.print(root)__        stream.print("-javadoc}/")__        stream.print(classUrlPath(method.javaMethod.getDeclaringClass()))__        stream.print(".html#")__        stream.print(methodName(method))__        stream.print("%2D")__        boolean first = true__        if (method.targetClass != method.javaMethod.getDeclaringClass()) {_            first = false__            stream.print(method.javaMethod.getDeclaringClass().getName())__        }_        for (Class<?> clazz: method.typeParameters) {_            if (first) {_                first = false__            } else {_                stream.print("%2D")__            }_            stream.print(clazz.getName())__            if (clazz.isArray()) {_                stream.print(":A")__            }_        }_        stream.print("%2D")__    };emit,an,external,link,to,javadoc,for,a,link,painless,method,param,root,name,of,the,root,uri,variable;private,static,void,emit,javadoc,link,print,stream,stream,string,root,painless,method,method,stream,print,link,stream,print,root,stream,print,javadoc,stream,print,class,url,path,method,java,method,get,declaring,class,stream,print,html,stream,print,method,name,method,stream,print,2d,boolean,first,true,if,method,target,class,method,java,method,get,declaring,class,first,false,stream,print,method,java,method,get,declaring,class,get,name,for,class,clazz,method,type,parameters,if,first,first,false,else,stream,print,2d,stream,print,clazz,get,name,if,clazz,is,array,stream,print,a,stream,print,2d
PainlessDocGenerator -> private static void emitJavadocLink(PrintStream stream, String root, PainlessMethod method);1533295538;Emit an external link to Javadoc for a {@link PainlessMethod}.__@param root name of the root uri variable;private static void emitJavadocLink(PrintStream stream, String root, PainlessMethod method) {_        stream.print("link:{")__        stream.print(root)__        stream.print("-javadoc}/")__        stream.print(classUrlPath(method.javaMethod.getDeclaringClass()))__        stream.print(".html#")__        stream.print(methodName(method))__        stream.print("%2D")__        boolean first = true__        if (method.targetClass != method.javaMethod.getDeclaringClass()) {_            first = false__            stream.print(method.javaMethod.getDeclaringClass().getName())__        }_        for (Class<?> clazz: method.typeParameters) {_            if (first) {_                first = false__            } else {_                stream.print("%2D")__            }_            stream.print(clazz.getName())__            if (clazz.isArray()) {_                stream.print(":A")__            }_        }_        stream.print("%2D")__    };emit,an,external,link,to,javadoc,for,a,link,painless,method,param,root,name,of,the,root,uri,variable;private,static,void,emit,javadoc,link,print,stream,stream,string,root,painless,method,method,stream,print,link,stream,print,root,stream,print,javadoc,stream,print,class,url,path,method,java,method,get,declaring,class,stream,print,html,stream,print,method,name,method,stream,print,2d,boolean,first,true,if,method,target,class,method,java,method,get,declaring,class,first,false,stream,print,method,java,method,get,declaring,class,get,name,for,class,clazz,method,type,parameters,if,first,first,false,else,stream,print,2d,stream,print,clazz,get,name,if,clazz,is,array,stream,print,a,stream,print,2d
PainlessDocGenerator -> private static void emitJavadocLink(PrintStream stream, String root, PainlessMethod method);1539615817;Emit an external link to Javadoc for a {@link PainlessMethod}.__@param root name of the root uri variable;private static void emitJavadocLink(PrintStream stream, String root, PainlessMethod method) {_        stream.print("link:{")__        stream.print(root)__        stream.print("-javadoc}/")__        stream.print(classUrlPath(method.javaMethod.getDeclaringClass()))__        stream.print(".html#")__        stream.print(methodName(method))__        stream.print("%2D")__        boolean first = true__        if (method.targetClass != method.javaMethod.getDeclaringClass()) {_            first = false__            stream.print(method.javaMethod.getDeclaringClass().getName())__        }_        for (Class<?> clazz: method.typeParameters) {_            if (first) {_                first = false__            } else {_                stream.print("%2D")__            }_            stream.print(clazz.getName())__            if (clazz.isArray()) {_                stream.print(":A")__            }_        }_        stream.print("%2D")__    };emit,an,external,link,to,javadoc,for,a,link,painless,method,param,root,name,of,the,root,uri,variable;private,static,void,emit,javadoc,link,print,stream,stream,string,root,painless,method,method,stream,print,link,stream,print,root,stream,print,javadoc,stream,print,class,url,path,method,java,method,get,declaring,class,stream,print,html,stream,print,method,name,method,stream,print,2d,boolean,first,true,if,method,target,class,method,java,method,get,declaring,class,first,false,stream,print,method,java,method,get,declaring,class,get,name,for,class,clazz,method,type,parameters,if,first,first,false,else,stream,print,2d,stream,print,clazz,get,name,if,clazz,is,array,stream,print,a,stream,print,2d
PainlessDocGenerator -> private static void emitStruct(PrintStream stream, Class<?> clazz);1532685069;Emit a {@link PainlessClass}. If the {@linkplain PainlessClass} is primitive or def this just emits the name of the struct._Otherwise this emits an internal link with the name.;private static void emitStruct(PrintStream stream, Class<?> clazz) {_        String canonicalClassName = PainlessLookupUtility.typeToCanonicalTypeName(clazz)___        if (false == clazz.isPrimitive() && clazz != def.class) {_            stream.print("<<")__            emitAnchor(stream, clazz)__            stream.print(',')__            stream.print(canonicalClassName)__            stream.print(">>")__        } else {_            stream.print(canonicalClassName)__        }_    };emit,a,link,painless,class,if,the,linkplain,painless,class,is,primitive,or,def,this,just,emits,the,name,of,the,struct,otherwise,this,emits,an,internal,link,with,the,name;private,static,void,emit,struct,print,stream,stream,class,clazz,string,canonical,class,name,painless,lookup,utility,type,to,canonical,type,name,clazz,if,false,clazz,is,primitive,clazz,def,class,stream,print,emit,anchor,stream,clazz,stream,print,stream,print,canonical,class,name,stream,print,else,stream,print,canonical,class,name
PainlessDocGenerator -> private static void emitStruct(PrintStream stream, Class<?> clazz);1533063033;Emit a {@link PainlessClass}. If the {@linkplain PainlessClass} is primitive or def this just emits the name of the struct._Otherwise this emits an internal link with the name.;private static void emitStruct(PrintStream stream, Class<?> clazz) {_        String canonicalClassName = PainlessLookupUtility.typeToCanonicalTypeName(clazz)___        if (false == clazz.isPrimitive() && clazz != def.class) {_            stream.print("<<")__            emitAnchor(stream, clazz)__            stream.print(',')__            stream.print(canonicalClassName)__            stream.print(">>")__        } else {_            stream.print(canonicalClassName)__        }_    };emit,a,link,painless,class,if,the,linkplain,painless,class,is,primitive,or,def,this,just,emits,the,name,of,the,struct,otherwise,this,emits,an,internal,link,with,the,name;private,static,void,emit,struct,print,stream,stream,class,clazz,string,canonical,class,name,painless,lookup,utility,type,to,canonical,type,name,clazz,if,false,clazz,is,primitive,clazz,def,class,stream,print,emit,anchor,stream,clazz,stream,print,stream,print,canonical,class,name,stream,print,else,stream,print,canonical,class,name
PainlessDocGenerator -> private static void emitStruct(PrintStream stream, Class<?> clazz);1533143718;Emit a {@link PainlessClass}. If the {@linkplain PainlessClass} is primitive or def this just emits the name of the struct._Otherwise this emits an internal link with the name.;private static void emitStruct(PrintStream stream, Class<?> clazz) {_        String canonicalClassName = PainlessLookupUtility.typeToCanonicalTypeName(clazz)___        if (false == clazz.isPrimitive() && clazz != def.class) {_            stream.print("<<")__            emitAnchor(stream, clazz)__            stream.print(',')__            stream.print(canonicalClassName)__            stream.print(">>")__        } else {_            stream.print(canonicalClassName)__        }_    };emit,a,link,painless,class,if,the,linkplain,painless,class,is,primitive,or,def,this,just,emits,the,name,of,the,struct,otherwise,this,emits,an,internal,link,with,the,name;private,static,void,emit,struct,print,stream,stream,class,clazz,string,canonical,class,name,painless,lookup,utility,type,to,canonical,type,name,clazz,if,false,clazz,is,primitive,clazz,def,class,stream,print,emit,anchor,stream,clazz,stream,print,stream,print,canonical,class,name,stream,print,else,stream,print,canonical,class,name
PainlessDocGenerator -> private static void emitStruct(PrintStream stream, Class<?> clazz);1533295538;Emit a {@link PainlessClass}. If the {@linkplain PainlessClass} is primitive or def this just emits the name of the struct._Otherwise this emits an internal link with the name.;private static void emitStruct(PrintStream stream, Class<?> clazz) {_        String canonicalClassName = PainlessLookupUtility.typeToCanonicalTypeName(clazz)___        if (false == clazz.isPrimitive() && clazz != def.class) {_            stream.print("<<")__            emitAnchor(stream, clazz)__            stream.print(',')__            stream.print(canonicalClassName)__            stream.print(">>")__        } else {_            stream.print(canonicalClassName)__        }_    };emit,a,link,painless,class,if,the,linkplain,painless,class,is,primitive,or,def,this,just,emits,the,name,of,the,struct,otherwise,this,emits,an,internal,link,with,the,name;private,static,void,emit,struct,print,stream,stream,class,clazz,string,canonical,class,name,painless,lookup,utility,type,to,canonical,type,name,clazz,if,false,clazz,is,primitive,clazz,def,class,stream,print,emit,anchor,stream,clazz,stream,print,stream,print,canonical,class,name,stream,print,else,stream,print,canonical,class,name
PainlessDocGenerator -> private static void emitStruct(PrintStream stream, Class<?> clazz);1539615817;Emit a {@link PainlessClass}. If the {@linkplain PainlessClass} is primitive or def this just emits the name of the struct._Otherwise this emits an internal link with the name.;private static void emitStruct(PrintStream stream, Class<?> clazz) {_        String canonicalClassName = PainlessLookupUtility.typeToCanonicalTypeName(clazz)___        if (false == clazz.isPrimitive() && clazz != def.class) {_            stream.print("<<")__            emitAnchor(stream, clazz)__            stream.print(',')__            stream.print(canonicalClassName)__            stream.print(">>")__        } else {_            stream.print(canonicalClassName)__        }_    };emit,a,link,painless,class,if,the,linkplain,painless,class,is,primitive,or,def,this,just,emits,the,name,of,the,struct,otherwise,this,emits,an,internal,link,with,the,name;private,static,void,emit,struct,print,stream,stream,class,clazz,string,canonical,class,name,painless,lookup,utility,type,to,canonical,type,name,clazz,if,false,clazz,is,primitive,clazz,def,class,stream,print,emit,anchor,stream,clazz,stream,print,stream,print,canonical,class,name,stream,print,else,stream,print,canonical,class,name
PainlessDocGenerator -> private static String javadocRoot(PainlessField field);1531179852;Pick the javadoc root for a {@link PainlessField}.;private static String javadocRoot(PainlessField field) {_        return javadocRoot(field.owner)__    };pick,the,javadoc,root,for,a,link,painless,field;private,static,string,javadoc,root,painless,field,field,return,javadoc,root,field,owner
PainlessDocGenerator -> private static String javadocRoot(PainlessField field);1531910483;Pick the javadoc root for a {@link PainlessField}.;private static String javadocRoot(PainlessField field) {_        return javadocRoot(field.target)__    };pick,the,javadoc,root,for,a,link,painless,field;private,static,string,javadoc,root,painless,field,field,return,javadoc,root,field,target
PainlessDocGenerator -> private static String javadocRoot(PainlessField field);1532069817;Pick the javadoc root for a {@link PainlessField}.;private static String javadocRoot(PainlessField field) {_        return javadocRoot(field.target)__    };pick,the,javadoc,root,for,a,link,painless,field;private,static,string,javadoc,root,painless,field,field,return,javadoc,root,field,target
PainlessDocGenerator -> private static String javadocRoot(PainlessField field);1532598597;Pick the javadoc root for a {@link PainlessField}.;private static String javadocRoot(PainlessField field) {_        return javadocRoot(field.target)__    };pick,the,javadoc,root,for,a,link,painless,field;private,static,string,javadoc,root,painless,field,field,return,javadoc,root,field,target
PainlessDocGenerator -> private static String javadocRoot(PainlessField field);1532685069;Pick the javadoc root for a {@link PainlessField}.;private static String javadocRoot(PainlessField field) {_        return javadocRoot(field.target)__    };pick,the,javadoc,root,for,a,link,painless,field;private,static,string,javadoc,root,painless,field,field,return,javadoc,root,field,target
PainlessDocGenerator -> private static String javadocRoot(PainlessField field);1533063033;Pick the javadoc root for a {@link PainlessField}.;private static String javadocRoot(PainlessField field) {_        return javadocRoot(field.target)__    };pick,the,javadoc,root,for,a,link,painless,field;private,static,string,javadoc,root,painless,field,field,return,javadoc,root,field,target
PainlessDocGenerator -> private static String javadocRoot(PainlessField field);1533143718;Pick the javadoc root for a {@link PainlessField}.;private static String javadocRoot(PainlessField field) {_        return javadocRoot(field.javaField.getDeclaringClass())__    };pick,the,javadoc,root,for,a,link,painless,field;private,static,string,javadoc,root,painless,field,field,return,javadoc,root,field,java,field,get,declaring,class
PainlessDocGenerator -> private static String javadocRoot(PainlessField field);1533295538;Pick the javadoc root for a {@link PainlessField}.;private static String javadocRoot(PainlessField field) {_        return javadocRoot(field.javaField.getDeclaringClass())__    };pick,the,javadoc,root,for,a,link,painless,field;private,static,string,javadoc,root,painless,field,field,return,javadoc,root,field,java,field,get,declaring,class
PainlessDocGenerator -> private static String javadocRoot(PainlessField field);1539615817;Pick the javadoc root for a {@link PainlessField}.;private static String javadocRoot(PainlessField field) {_        return javadocRoot(field.javaField.getDeclaringClass())__    };pick,the,javadoc,root,for,a,link,painless,field;private,static,string,javadoc,root,painless,field,field,return,javadoc,root,field,java,field,get,declaring,class
PainlessDocGenerator -> private static void documentMethod(PrintStream stream, PainlessMethod method);1531179852;Document a method.;private static void documentMethod(PrintStream stream, PainlessMethod method) {_        stream.print("* ++[[")__        emitAnchor(stream, method)__        stream.print("]]")___        if (null == method.augmentation && Modifier.isStatic(method.modifiers)) {_            stream.print("static ")__        }__        if (false == method.name.equals("<init>")) {_            emitType(stream, method.rtn)__            stream.print(' ')__        }__        String javadocRoot = javadocRoot(method)__        emitJavadocLink(stream, javadocRoot, method)__        stream.print('[')___        stream.print(methodName(method))___        stream.print("](")__        boolean first = true__        for (Class<?> arg : method.arguments) {_            if (first) {_                first = false__            } else {_                stream.print(", ")__            }_            emitType(stream, arg)__        }_        stream.print(")++")___        if (javadocRoot.equals("java8")) {_            stream.print(" (")__            emitJavadocLink(stream, "java9", method)__            stream.print("[java 9])")__        }__        stream.println()__    };document,a,method;private,static,void,document,method,print,stream,stream,painless,method,method,stream,print,emit,anchor,stream,method,stream,print,if,null,method,augmentation,modifier,is,static,method,modifiers,stream,print,static,if,false,method,name,equals,init,emit,type,stream,method,rtn,stream,print,string,javadoc,root,javadoc,root,method,emit,javadoc,link,stream,javadoc,root,method,stream,print,stream,print,method,name,method,stream,print,boolean,first,true,for,class,arg,method,arguments,if,first,first,false,else,stream,print,emit,type,stream,arg,stream,print,if,javadoc,root,equals,java8,stream,print,emit,javadoc,link,stream,java9,method,stream,print,java,9,stream,println
PainlessDocGenerator -> private static void documentMethod(PrintStream stream, PainlessMethod method);1531910483;Document a method.;private static void documentMethod(PrintStream stream, PainlessMethod method) {_        stream.print("* ++[[")__        emitAnchor(stream, method)__        stream.print("]]")___        if (null == method.augmentation && Modifier.isStatic(method.modifiers)) {_            stream.print("static ")__        }__        if (false == method.name.equals("<init>")) {_            emitType(stream, method.rtn)__            stream.print(' ')__        }__        String javadocRoot = javadocRoot(method)__        emitJavadocLink(stream, javadocRoot, method)__        stream.print('[')___        stream.print(methodName(method))___        stream.print("](")__        boolean first = true__        for (Class<?> arg : method.arguments) {_            if (first) {_                first = false__            } else {_                stream.print(", ")__            }_            emitType(stream, arg)__        }_        stream.print(")++")___        if (javadocRoot.equals("java8")) {_            stream.print(" (")__            emitJavadocLink(stream, "java9", method)__            stream.print("[java 9])")__        }__        stream.println()__    };document,a,method;private,static,void,document,method,print,stream,stream,painless,method,method,stream,print,emit,anchor,stream,method,stream,print,if,null,method,augmentation,modifier,is,static,method,modifiers,stream,print,static,if,false,method,name,equals,init,emit,type,stream,method,rtn,stream,print,string,javadoc,root,javadoc,root,method,emit,javadoc,link,stream,javadoc,root,method,stream,print,stream,print,method,name,method,stream,print,boolean,first,true,for,class,arg,method,arguments,if,first,first,false,else,stream,print,emit,type,stream,arg,stream,print,if,javadoc,root,equals,java8,stream,print,emit,javadoc,link,stream,java9,method,stream,print,java,9,stream,println
PainlessDocGenerator -> private static void documentMethod(PrintStream stream, PainlessMethod method);1532069817;Document a method.;private static void documentMethod(PrintStream stream, PainlessMethod method) {_        stream.print("* ++[[")__        emitAnchor(stream, method)__        stream.print("]]")___        if (null == method.augmentation && Modifier.isStatic(method.modifiers)) {_            stream.print("static ")__        }__        if (false == method.name.equals("<init>")) {_            emitType(stream, method.rtn)__            stream.print(' ')__        }__        String javadocRoot = javadocRoot(method)__        emitJavadocLink(stream, javadocRoot, method)__        stream.print('[')___        stream.print(methodName(method))___        stream.print("](")__        boolean first = true__        for (Class<?> arg : method.arguments) {_            if (first) {_                first = false__            } else {_                stream.print(", ")__            }_            emitType(stream, arg)__        }_        stream.print(")++")___        if (javadocRoot.equals("java8")) {_            stream.print(" (")__            emitJavadocLink(stream, "java9", method)__            stream.print("[java 9])")__        }__        stream.println()__    };document,a,method;private,static,void,document,method,print,stream,stream,painless,method,method,stream,print,emit,anchor,stream,method,stream,print,if,null,method,augmentation,modifier,is,static,method,modifiers,stream,print,static,if,false,method,name,equals,init,emit,type,stream,method,rtn,stream,print,string,javadoc,root,javadoc,root,method,emit,javadoc,link,stream,javadoc,root,method,stream,print,stream,print,method,name,method,stream,print,boolean,first,true,for,class,arg,method,arguments,if,first,first,false,else,stream,print,emit,type,stream,arg,stream,print,if,javadoc,root,equals,java8,stream,print,emit,javadoc,link,stream,java9,method,stream,print,java,9,stream,println
PainlessDocGenerator -> private static void documentMethod(PrintStream stream, PainlessMethod method);1532598597;Document a method.;private static void documentMethod(PrintStream stream, PainlessMethod method) {_        stream.print("* ++[[")__        emitAnchor(stream, method)__        stream.print("]]")___        if (null == method.augmentation && Modifier.isStatic(method.modifiers)) {_            stream.print("static ")__        }__        if (false == method.name.equals("<init>")) {_            emitType(stream, method.rtn)__            stream.print(' ')__        }__        String javadocRoot = javadocRoot(method)__        emitJavadocLink(stream, javadocRoot, method)__        stream.print('[')___        stream.print(methodName(method))___        stream.print("](")__        boolean first = true__        for (Class<?> arg : method.arguments) {_            if (first) {_                first = false__            } else {_                stream.print(", ")__            }_            emitType(stream, arg)__        }_        stream.print(")++")___        if (javadocRoot.equals("java8")) {_            stream.print(" (")__            emitJavadocLink(stream, "java9", method)__            stream.print("[java 9])")__        }__        stream.println()__    };document,a,method;private,static,void,document,method,print,stream,stream,painless,method,method,stream,print,emit,anchor,stream,method,stream,print,if,null,method,augmentation,modifier,is,static,method,modifiers,stream,print,static,if,false,method,name,equals,init,emit,type,stream,method,rtn,stream,print,string,javadoc,root,javadoc,root,method,emit,javadoc,link,stream,javadoc,root,method,stream,print,stream,print,method,name,method,stream,print,boolean,first,true,for,class,arg,method,arguments,if,first,first,false,else,stream,print,emit,type,stream,arg,stream,print,if,javadoc,root,equals,java8,stream,print,emit,javadoc,link,stream,java9,method,stream,print,java,9,stream,println
PainlessDocGenerator -> private static void documentMethod(PrintStream stream, PainlessMethod method);1532685069;Document a method.;private static void documentMethod(PrintStream stream, PainlessMethod method) {_        stream.print("* ++[[")__        emitAnchor(stream, method)__        stream.print("]]")___        if (null == method.augmentation && Modifier.isStatic(method.modifiers)) {_            stream.print("static ")__        }__        if (false == method.name.equals("<init>")) {_            emitType(stream, method.rtn)__            stream.print(' ')__        }__        String javadocRoot = javadocRoot(method)__        emitJavadocLink(stream, javadocRoot, method)__        stream.print('[')___        stream.print(methodName(method))___        stream.print("](")__        boolean first = true__        for (Class<?> arg : method.arguments) {_            if (first) {_                first = false__            } else {_                stream.print(", ")__            }_            emitType(stream, arg)__        }_        stream.print(")++")___        if (javadocRoot.equals("java8")) {_            stream.print(" (")__            emitJavadocLink(stream, "java9", method)__            stream.print("[java 9])")__        }__        stream.println()__    };document,a,method;private,static,void,document,method,print,stream,stream,painless,method,method,stream,print,emit,anchor,stream,method,stream,print,if,null,method,augmentation,modifier,is,static,method,modifiers,stream,print,static,if,false,method,name,equals,init,emit,type,stream,method,rtn,stream,print,string,javadoc,root,javadoc,root,method,emit,javadoc,link,stream,javadoc,root,method,stream,print,stream,print,method,name,method,stream,print,boolean,first,true,for,class,arg,method,arguments,if,first,first,false,else,stream,print,emit,type,stream,arg,stream,print,if,javadoc,root,equals,java8,stream,print,emit,javadoc,link,stream,java9,method,stream,print,java,9,stream,println
PainlessDocGenerator -> private static void documentMethod(PrintStream stream, PainlessMethod method);1533063033;Document a method.;private static void documentMethod(PrintStream stream, PainlessMethod method) {_        stream.print("* ++[[")__        emitAnchor(stream, method)__        stream.print("]]")___        if (null == method.augmentation && Modifier.isStatic(method.modifiers)) {_            stream.print("static ")__        }__        emitType(stream, method.rtn)__        stream.print(' ')___        String javadocRoot = javadocRoot(method)__        emitJavadocLink(stream, javadocRoot, method)__        stream.print('[')___        stream.print(methodName(method))___        stream.print("](")__        boolean first = true__        for (Class<?> arg : method.arguments) {_            if (first) {_                first = false__            } else {_                stream.print(", ")__            }_            emitType(stream, arg)__        }_        stream.print(")++")___        if (javadocRoot.equals("java8")) {_            stream.print(" (")__            emitJavadocLink(stream, "java9", method)__            stream.print("[java 9])")__        }__        stream.println()__    };document,a,method;private,static,void,document,method,print,stream,stream,painless,method,method,stream,print,emit,anchor,stream,method,stream,print,if,null,method,augmentation,modifier,is,static,method,modifiers,stream,print,static,emit,type,stream,method,rtn,stream,print,string,javadoc,root,javadoc,root,method,emit,javadoc,link,stream,javadoc,root,method,stream,print,stream,print,method,name,method,stream,print,boolean,first,true,for,class,arg,method,arguments,if,first,first,false,else,stream,print,emit,type,stream,arg,stream,print,if,javadoc,root,equals,java8,stream,print,emit,javadoc,link,stream,java9,method,stream,print,java,9,stream,println
PainlessDocGenerator -> private static void documentMethod(PrintStream stream, PainlessMethod method);1533143718;Document a method.;private static void documentMethod(PrintStream stream, PainlessMethod method) {_        stream.print("* ++[[")__        emitAnchor(stream, method)__        stream.print("]]")___        if (method.targetClass == method.javaMethod.getDeclaringClass() && Modifier.isStatic(method.javaMethod.getModifiers())) {_            stream.print("static ")__        }__        emitType(stream, method.returnType)__        stream.print(' ')___        String javadocRoot = javadocRoot(method)__        emitJavadocLink(stream, javadocRoot, method)__        stream.print('[')___        stream.print(methodName(method))___        stream.print("](")__        boolean first = true__        for (Class<?> arg : method.typeParameters) {_            if (first) {_                first = false__            } else {_                stream.print(", ")__            }_            emitType(stream, arg)__        }_        stream.print(")++")___        if (javadocRoot.equals("java8")) {_            stream.print(" (")__            emitJavadocLink(stream, "java9", method)__            stream.print("[java 9])")__        }__        stream.println()__    };document,a,method;private,static,void,document,method,print,stream,stream,painless,method,method,stream,print,emit,anchor,stream,method,stream,print,if,method,target,class,method,java,method,get,declaring,class,modifier,is,static,method,java,method,get,modifiers,stream,print,static,emit,type,stream,method,return,type,stream,print,string,javadoc,root,javadoc,root,method,emit,javadoc,link,stream,javadoc,root,method,stream,print,stream,print,method,name,method,stream,print,boolean,first,true,for,class,arg,method,type,parameters,if,first,first,false,else,stream,print,emit,type,stream,arg,stream,print,if,javadoc,root,equals,java8,stream,print,emit,javadoc,link,stream,java9,method,stream,print,java,9,stream,println
PainlessDocGenerator -> private static void documentMethod(PrintStream stream, PainlessMethod method);1533295538;Document a method.;private static void documentMethod(PrintStream stream, PainlessMethod method) {_        stream.print("* ++[[")__        emitAnchor(stream, method)__        stream.print("]]")___        if (method.targetClass == method.javaMethod.getDeclaringClass() && Modifier.isStatic(method.javaMethod.getModifiers())) {_            stream.print("static ")__        }__        emitType(stream, method.returnType)__        stream.print(' ')___        String javadocRoot = javadocRoot(method)__        emitJavadocLink(stream, javadocRoot, method)__        stream.print('[')___        stream.print(methodName(method))___        stream.print("](")__        boolean first = true__        for (Class<?> arg : method.typeParameters) {_            if (first) {_                first = false__            } else {_                stream.print(", ")__            }_            emitType(stream, arg)__        }_        stream.print(")++")___        if (javadocRoot.equals("java8")) {_            stream.print(" (")__            emitJavadocLink(stream, "java9", method)__            stream.print("[java 9])")__        }__        stream.println()__    };document,a,method;private,static,void,document,method,print,stream,stream,painless,method,method,stream,print,emit,anchor,stream,method,stream,print,if,method,target,class,method,java,method,get,declaring,class,modifier,is,static,method,java,method,get,modifiers,stream,print,static,emit,type,stream,method,return,type,stream,print,string,javadoc,root,javadoc,root,method,emit,javadoc,link,stream,javadoc,root,method,stream,print,stream,print,method,name,method,stream,print,boolean,first,true,for,class,arg,method,type,parameters,if,first,first,false,else,stream,print,emit,type,stream,arg,stream,print,if,javadoc,root,equals,java8,stream,print,emit,javadoc,link,stream,java9,method,stream,print,java,9,stream,println
PainlessDocGenerator -> private static void documentMethod(PrintStream stream, PainlessMethod method);1539615817;Document a method.;private static void documentMethod(PrintStream stream, PainlessMethod method) {_        stream.print("* ++[[")__        emitAnchor(stream, method)__        stream.print("]]")___        if (method.targetClass == method.javaMethod.getDeclaringClass() && Modifier.isStatic(method.javaMethod.getModifiers())) {_            stream.print("static ")__        }__        emitType(stream, method.returnType)__        stream.print(' ')___        String javadocRoot = javadocRoot(method)__        emitJavadocLink(stream, javadocRoot, method)__        stream.print('[')___        stream.print(methodName(method))___        stream.print("](")__        boolean first = true__        for (Class<?> arg : method.typeParameters) {_            if (first) {_                first = false__            } else {_                stream.print(", ")__            }_            emitType(stream, arg)__        }_        stream.print(")++")___        if (javadocRoot.equals("java8")) {_            stream.print(" (")__            emitJavadocLink(stream, "java9", method)__            stream.print("[java 9])")__        }__        stream.println()__    };document,a,method;private,static,void,document,method,print,stream,stream,painless,method,method,stream,print,emit,anchor,stream,method,stream,print,if,method,target,class,method,java,method,get,declaring,class,modifier,is,static,method,java,method,get,modifiers,stream,print,static,emit,type,stream,method,return,type,stream,print,string,javadoc,root,javadoc,root,method,emit,javadoc,link,stream,javadoc,root,method,stream,print,stream,print,method,name,method,stream,print,boolean,first,true,for,class,arg,method,type,parameters,if,first,first,false,else,stream,print,emit,type,stream,arg,stream,print,if,javadoc,root,equals,java8,stream,print,emit,javadoc,link,stream,java9,method,stream,print,java,9,stream,println
PainlessDocGenerator -> private static String javadocRoot(Class<?> clazz);1531910483;Pick the javadoc root for a {@link Class}.;private static String javadocRoot(Class<?> clazz) {_        String classPackage = clazz.getPackage().getName()__        if (classPackage.startsWith("java")) {_            return "java8"__        }_        if (classPackage.startsWith("org.elasticsearch.painless")) {_            return "painless"__        }_        if (classPackage.startsWith("org.elasticsearch")) {_            return "elasticsearch"__        }_        if (classPackage.startsWith("org.joda.time")) {_            return "joda-time"__        }_        if (classPackage.startsWith("org.apache.lucene")) {_            return "lucene-core"__        }_        throw new IllegalArgumentException("Unrecognized packge: " + classPackage)__    };pick,the,javadoc,root,for,a,link,class;private,static,string,javadoc,root,class,clazz,string,class,package,clazz,get,package,get,name,if,class,package,starts,with,java,return,java8,if,class,package,starts,with,org,elasticsearch,painless,return,painless,if,class,package,starts,with,org,elasticsearch,return,elasticsearch,if,class,package,starts,with,org,joda,time,return,joda,time,if,class,package,starts,with,org,apache,lucene,return,lucene,core,throw,new,illegal,argument,exception,unrecognized,packge,class,package
PainlessDocGenerator -> private static String javadocRoot(Class<?> clazz);1532069817;Pick the javadoc root for a {@link Class}.;private static String javadocRoot(Class<?> clazz) {_        String classPackage = clazz.getPackage().getName()__        if (classPackage.startsWith("java")) {_            return "java8"__        }_        if (classPackage.startsWith("org.elasticsearch.painless")) {_            return "painless"__        }_        if (classPackage.startsWith("org.elasticsearch")) {_            return "elasticsearch"__        }_        if (classPackage.startsWith("org.joda.time")) {_            return "joda-time"__        }_        if (classPackage.startsWith("org.apache.lucene")) {_            return "lucene-core"__        }_        throw new IllegalArgumentException("Unrecognized packge: " + classPackage)__    };pick,the,javadoc,root,for,a,link,class;private,static,string,javadoc,root,class,clazz,string,class,package,clazz,get,package,get,name,if,class,package,starts,with,java,return,java8,if,class,package,starts,with,org,elasticsearch,painless,return,painless,if,class,package,starts,with,org,elasticsearch,return,elasticsearch,if,class,package,starts,with,org,joda,time,return,joda,time,if,class,package,starts,with,org,apache,lucene,return,lucene,core,throw,new,illegal,argument,exception,unrecognized,packge,class,package
PainlessDocGenerator -> private static String javadocRoot(Class<?> clazz);1532598597;Pick the javadoc root for a {@link Class}.;private static String javadocRoot(Class<?> clazz) {_        String classPackage = clazz.getPackage().getName()__        if (classPackage.startsWith("java")) {_            return "java8"__        }_        if (classPackage.startsWith("org.elasticsearch.painless")) {_            return "painless"__        }_        if (classPackage.startsWith("org.elasticsearch")) {_            return "elasticsearch"__        }_        if (classPackage.startsWith("org.joda.time")) {_            return "joda-time"__        }_        if (classPackage.startsWith("org.apache.lucene")) {_            return "lucene-core"__        }_        throw new IllegalArgumentException("Unrecognized packge: " + classPackage)__    };pick,the,javadoc,root,for,a,link,class;private,static,string,javadoc,root,class,clazz,string,class,package,clazz,get,package,get,name,if,class,package,starts,with,java,return,java8,if,class,package,starts,with,org,elasticsearch,painless,return,painless,if,class,package,starts,with,org,elasticsearch,return,elasticsearch,if,class,package,starts,with,org,joda,time,return,joda,time,if,class,package,starts,with,org,apache,lucene,return,lucene,core,throw,new,illegal,argument,exception,unrecognized,packge,class,package
PainlessDocGenerator -> private static String javadocRoot(Class<?> clazz);1532685069;Pick the javadoc root for a {@link Class}.;private static String javadocRoot(Class<?> clazz) {_        String classPackage = clazz.getPackage().getName()__        if (classPackage.startsWith("java")) {_            return "java8"__        }_        if (classPackage.startsWith("org.elasticsearch.painless")) {_            return "painless"__        }_        if (classPackage.startsWith("org.elasticsearch")) {_            return "elasticsearch"__        }_        if (classPackage.startsWith("org.joda.time")) {_            return "joda-time"__        }_        if (classPackage.startsWith("org.apache.lucene")) {_            return "lucene-core"__        }_        throw new IllegalArgumentException("Unrecognized packge: " + classPackage)__    };pick,the,javadoc,root,for,a,link,class;private,static,string,javadoc,root,class,clazz,string,class,package,clazz,get,package,get,name,if,class,package,starts,with,java,return,java8,if,class,package,starts,with,org,elasticsearch,painless,return,painless,if,class,package,starts,with,org,elasticsearch,return,elasticsearch,if,class,package,starts,with,org,joda,time,return,joda,time,if,class,package,starts,with,org,apache,lucene,return,lucene,core,throw,new,illegal,argument,exception,unrecognized,packge,class,package
PainlessDocGenerator -> private static String javadocRoot(Class<?> clazz);1533063033;Pick the javadoc root for a {@link Class}.;private static String javadocRoot(Class<?> clazz) {_        String classPackage = clazz.getPackage().getName()__        if (classPackage.startsWith("java")) {_            return "java8"__        }_        if (classPackage.startsWith("org.elasticsearch.painless")) {_            return "painless"__        }_        if (classPackage.startsWith("org.elasticsearch")) {_            return "elasticsearch"__        }_        if (classPackage.startsWith("org.joda.time")) {_            return "joda-time"__        }_        if (classPackage.startsWith("org.apache.lucene")) {_            return "lucene-core"__        }_        throw new IllegalArgumentException("Unrecognized packge: " + classPackage)__    };pick,the,javadoc,root,for,a,link,class;private,static,string,javadoc,root,class,clazz,string,class,package,clazz,get,package,get,name,if,class,package,starts,with,java,return,java8,if,class,package,starts,with,org,elasticsearch,painless,return,painless,if,class,package,starts,with,org,elasticsearch,return,elasticsearch,if,class,package,starts,with,org,joda,time,return,joda,time,if,class,package,starts,with,org,apache,lucene,return,lucene,core,throw,new,illegal,argument,exception,unrecognized,packge,class,package
PainlessDocGenerator -> private static String javadocRoot(Class<?> clazz);1533143718;Pick the javadoc root for a {@link Class}.;private static String javadocRoot(Class<?> clazz) {_        String classPackage = clazz.getPackage().getName()__        if (classPackage.startsWith("java")) {_            return "java8"__        }_        if (classPackage.startsWith("org.elasticsearch.painless")) {_            return "painless"__        }_        if (classPackage.startsWith("org.elasticsearch")) {_            return "elasticsearch"__        }_        if (classPackage.startsWith("org.joda.time")) {_            return "joda-time"__        }_        if (classPackage.startsWith("org.apache.lucene")) {_            return "lucene-core"__        }_        throw new IllegalArgumentException("Unrecognized packge: " + classPackage)__    };pick,the,javadoc,root,for,a,link,class;private,static,string,javadoc,root,class,clazz,string,class,package,clazz,get,package,get,name,if,class,package,starts,with,java,return,java8,if,class,package,starts,with,org,elasticsearch,painless,return,painless,if,class,package,starts,with,org,elasticsearch,return,elasticsearch,if,class,package,starts,with,org,joda,time,return,joda,time,if,class,package,starts,with,org,apache,lucene,return,lucene,core,throw,new,illegal,argument,exception,unrecognized,packge,class,package
PainlessDocGenerator -> private static String javadocRoot(Class<?> clazz);1533295538;Pick the javadoc root for a {@link Class}.;private static String javadocRoot(Class<?> clazz) {_        String classPackage = clazz.getPackage().getName()__        if (classPackage.startsWith("java")) {_            return "java8"__        }_        if (classPackage.startsWith("org.elasticsearch.painless")) {_            return "painless"__        }_        if (classPackage.startsWith("org.elasticsearch")) {_            return "elasticsearch"__        }_        if (classPackage.startsWith("org.joda.time")) {_            return "joda-time"__        }_        if (classPackage.startsWith("org.apache.lucene")) {_            return "lucene-core"__        }_        throw new IllegalArgumentException("Unrecognized packge: " + classPackage)__    };pick,the,javadoc,root,for,a,link,class;private,static,string,javadoc,root,class,clazz,string,class,package,clazz,get,package,get,name,if,class,package,starts,with,java,return,java8,if,class,package,starts,with,org,elasticsearch,painless,return,painless,if,class,package,starts,with,org,elasticsearch,return,elasticsearch,if,class,package,starts,with,org,joda,time,return,joda,time,if,class,package,starts,with,org,apache,lucene,return,lucene,core,throw,new,illegal,argument,exception,unrecognized,packge,class,package
PainlessDocGenerator -> private static String javadocRoot(Class<?> clazz);1539615817;Pick the javadoc root for a {@link Class}.;private static String javadocRoot(Class<?> clazz) {_        String classPackage = clazz.getPackage().getName()__        if (classPackage.startsWith("java")) {_            return "java8"__        }_        if (classPackage.startsWith("org.elasticsearch.painless")) {_            return "painless"__        }_        if (classPackage.startsWith("org.elasticsearch")) {_            return "elasticsearch"__        }_        if (classPackage.startsWith("org.joda.time")) {_            return "joda-time"__        }_        if (classPackage.startsWith("org.apache.lucene")) {_            return "lucene-core"__        }_        throw new IllegalArgumentException("Unrecognized package: " + classPackage)__    };pick,the,javadoc,root,for,a,link,class;private,static,string,javadoc,root,class,clazz,string,class,package,clazz,get,package,get,name,if,class,package,starts,with,java,return,java8,if,class,package,starts,with,org,elasticsearch,painless,return,painless,if,class,package,starts,with,org,elasticsearch,return,elasticsearch,if,class,package,starts,with,org,joda,time,return,joda,time,if,class,package,starts,with,org,apache,lucene,return,lucene,core,throw,new,illegal,argument,exception,unrecognized,package,class,package
PainlessDocGenerator -> private static void emitAnchor(PrintStream stream, Class<?> clazz);1531910483;Anchor text for a {@link PainlessClass}.;private static void emitAnchor(PrintStream stream, Class<?> clazz) {_        stream.print("painless-api-reference-")__        stream.print(PainlessLookupUtility.anyTypeToPainlessTypeName(clazz).replace('.', '-'))__    };anchor,text,for,a,link,painless,class;private,static,void,emit,anchor,print,stream,stream,class,clazz,stream,print,painless,api,reference,stream,print,painless,lookup,utility,any,type,to,painless,type,name,clazz,replace
PainlessDocGenerator -> private static void emitAnchor(PrintStream stream, Class<?> clazz);1532069817;Anchor text for a {@link PainlessClass}.;private static void emitAnchor(PrintStream stream, Class<?> clazz) {_        stream.print("painless-api-reference-")__        stream.print(PainlessLookupUtility.typeToCanonicalTypeName(clazz).replace('.', '-'))__    };anchor,text,for,a,link,painless,class;private,static,void,emit,anchor,print,stream,stream,class,clazz,stream,print,painless,api,reference,stream,print,painless,lookup,utility,type,to,canonical,type,name,clazz,replace
PainlessDocGenerator -> private static void emitAnchor(PrintStream stream, Class<?> clazz);1532598597;Anchor text for a {@link PainlessClass}.;private static void emitAnchor(PrintStream stream, Class<?> clazz) {_        stream.print("painless-api-reference-")__        stream.print(PainlessLookupUtility.typeToCanonicalTypeName(clazz).replace('.', '-'))__    };anchor,text,for,a,link,painless,class;private,static,void,emit,anchor,print,stream,stream,class,clazz,stream,print,painless,api,reference,stream,print,painless,lookup,utility,type,to,canonical,type,name,clazz,replace
PainlessDocGenerator -> private static void emitAnchor(PrintStream stream, Class<?> clazz);1532685069;Anchor text for a {@link PainlessClass}.;private static void emitAnchor(PrintStream stream, Class<?> clazz) {_        stream.print("painless-api-reference-")__        stream.print(PainlessLookupUtility.typeToCanonicalTypeName(clazz).replace('.', '-'))__    };anchor,text,for,a,link,painless,class;private,static,void,emit,anchor,print,stream,stream,class,clazz,stream,print,painless,api,reference,stream,print,painless,lookup,utility,type,to,canonical,type,name,clazz,replace
PainlessDocGenerator -> private static void emitAnchor(PrintStream stream, Class<?> clazz);1533063033;Anchor text for a {@link PainlessClass}.;private static void emitAnchor(PrintStream stream, Class<?> clazz) {_        stream.print("painless-api-reference-")__        stream.print(PainlessLookupUtility.typeToCanonicalTypeName(clazz).replace('.', '-'))__    };anchor,text,for,a,link,painless,class;private,static,void,emit,anchor,print,stream,stream,class,clazz,stream,print,painless,api,reference,stream,print,painless,lookup,utility,type,to,canonical,type,name,clazz,replace
PainlessDocGenerator -> private static void emitAnchor(PrintStream stream, Class<?> clazz);1533143718;Anchor text for a {@link PainlessClass}.;private static void emitAnchor(PrintStream stream, Class<?> clazz) {_        stream.print("painless-api-reference-")__        stream.print(PainlessLookupUtility.typeToCanonicalTypeName(clazz).replace('.', '-'))__    };anchor,text,for,a,link,painless,class;private,static,void,emit,anchor,print,stream,stream,class,clazz,stream,print,painless,api,reference,stream,print,painless,lookup,utility,type,to,canonical,type,name,clazz,replace
PainlessDocGenerator -> private static void emitAnchor(PrintStream stream, Class<?> clazz);1533295538;Anchor text for a {@link PainlessClass}.;private static void emitAnchor(PrintStream stream, Class<?> clazz) {_        stream.print("painless-api-reference-")__        stream.print(PainlessLookupUtility.typeToCanonicalTypeName(clazz).replace('.', '-'))__    };anchor,text,for,a,link,painless,class;private,static,void,emit,anchor,print,stream,stream,class,clazz,stream,print,painless,api,reference,stream,print,painless,lookup,utility,type,to,canonical,type,name,clazz,replace
PainlessDocGenerator -> private static void emitAnchor(PrintStream stream, Class<?> clazz);1539615817;Anchor text for a {@link PainlessClass}.;private static void emitAnchor(PrintStream stream, Class<?> clazz) {_        stream.print("painless-api-reference-")__        stream.print(PainlessLookupUtility.typeToCanonicalTypeName(clazz).replace('.', '-'))__    };anchor,text,for,a,link,painless,class;private,static,void,emit,anchor,print,stream,stream,class,clazz,stream,print,painless,api,reference,stream,print,painless,lookup,utility,type,to,canonical,type,name,clazz,replace
PainlessDocGenerator -> private static void emitJavadocLink(PrintStream stream, String root, PainlessConstructor constructor);1533063033;Emit an external link to Javadoc for a {@link PainlessMethod}.__@param root name of the root uri variable;private static void emitJavadocLink(PrintStream stream, String root, PainlessConstructor constructor) {_        stream.print("link:{")__        stream.print(root)__        stream.print("-javadoc}/")__        stream.print(classUrlPath(constructor.javaConstructor.getDeclaringClass()))__        stream.print(".html#")__        stream.print(constructorName(constructor))__        stream.print("%2D")__        boolean first = true__        for (Class<?> clazz: constructor.typeParameters) {_            if (first) {_                first = false__            } else {_                stream.print("%2D")__            }_            stream.print(clazz.getName())__            if (clazz.isArray()) {_                stream.print(":A")__            }_        }_        stream.print("%2D")__    };emit,an,external,link,to,javadoc,for,a,link,painless,method,param,root,name,of,the,root,uri,variable;private,static,void,emit,javadoc,link,print,stream,stream,string,root,painless,constructor,constructor,stream,print,link,stream,print,root,stream,print,javadoc,stream,print,class,url,path,constructor,java,constructor,get,declaring,class,stream,print,html,stream,print,constructor,name,constructor,stream,print,2d,boolean,first,true,for,class,clazz,constructor,type,parameters,if,first,first,false,else,stream,print,2d,stream,print,clazz,get,name,if,clazz,is,array,stream,print,a,stream,print,2d
PainlessDocGenerator -> private static void emitJavadocLink(PrintStream stream, String root, PainlessConstructor constructor);1533143718;Emit an external link to Javadoc for a {@link PainlessMethod}.__@param root name of the root uri variable;private static void emitJavadocLink(PrintStream stream, String root, PainlessConstructor constructor) {_        stream.print("link:{")__        stream.print(root)__        stream.print("-javadoc}/")__        stream.print(classUrlPath(constructor.javaConstructor.getDeclaringClass()))__        stream.print(".html#")__        stream.print(constructorName(constructor))__        stream.print("%2D")__        boolean first = true__        for (Class<?> clazz: constructor.typeParameters) {_            if (first) {_                first = false__            } else {_                stream.print("%2D")__            }_            stream.print(clazz.getName())__            if (clazz.isArray()) {_                stream.print(":A")__            }_        }_        stream.print("%2D")__    };emit,an,external,link,to,javadoc,for,a,link,painless,method,param,root,name,of,the,root,uri,variable;private,static,void,emit,javadoc,link,print,stream,stream,string,root,painless,constructor,constructor,stream,print,link,stream,print,root,stream,print,javadoc,stream,print,class,url,path,constructor,java,constructor,get,declaring,class,stream,print,html,stream,print,constructor,name,constructor,stream,print,2d,boolean,first,true,for,class,clazz,constructor,type,parameters,if,first,first,false,else,stream,print,2d,stream,print,clazz,get,name,if,clazz,is,array,stream,print,a,stream,print,2d
PainlessDocGenerator -> private static void emitJavadocLink(PrintStream stream, String root, PainlessConstructor constructor);1533295538;Emit an external link to Javadoc for a {@link PainlessMethod}.__@param root name of the root uri variable;private static void emitJavadocLink(PrintStream stream, String root, PainlessConstructor constructor) {_        stream.print("link:{")__        stream.print(root)__        stream.print("-javadoc}/")__        stream.print(classUrlPath(constructor.javaConstructor.getDeclaringClass()))__        stream.print(".html#")__        stream.print(constructorName(constructor))__        stream.print("%2D")__        boolean first = true__        for (Class<?> clazz: constructor.typeParameters) {_            if (first) {_                first = false__            } else {_                stream.print("%2D")__            }_            stream.print(clazz.getName())__            if (clazz.isArray()) {_                stream.print(":A")__            }_        }_        stream.print("%2D")__    };emit,an,external,link,to,javadoc,for,a,link,painless,method,param,root,name,of,the,root,uri,variable;private,static,void,emit,javadoc,link,print,stream,stream,string,root,painless,constructor,constructor,stream,print,link,stream,print,root,stream,print,javadoc,stream,print,class,url,path,constructor,java,constructor,get,declaring,class,stream,print,html,stream,print,constructor,name,constructor,stream,print,2d,boolean,first,true,for,class,clazz,constructor,type,parameters,if,first,first,false,else,stream,print,2d,stream,print,clazz,get,name,if,clazz,is,array,stream,print,a,stream,print,2d
PainlessDocGenerator -> private static void emitJavadocLink(PrintStream stream, String root, PainlessConstructor constructor);1539615817;Emit an external link to Javadoc for a {@link PainlessMethod}.__@param root name of the root uri variable;private static void emitJavadocLink(PrintStream stream, String root, PainlessConstructor constructor) {_        stream.print("link:{")__        stream.print(root)__        stream.print("-javadoc}/")__        stream.print(classUrlPath(constructor.javaConstructor.getDeclaringClass()))__        stream.print(".html#")__        stream.print(constructorName(constructor))__        stream.print("%2D")__        boolean first = true__        for (Class<?> clazz: constructor.typeParameters) {_            if (first) {_                first = false__            } else {_                stream.print("%2D")__            }_            stream.print(clazz.getName())__            if (clazz.isArray()) {_                stream.print(":A")__            }_        }_        stream.print("%2D")__    };emit,an,external,link,to,javadoc,for,a,link,painless,method,param,root,name,of,the,root,uri,variable;private,static,void,emit,javadoc,link,print,stream,stream,string,root,painless,constructor,constructor,stream,print,link,stream,print,root,stream,print,javadoc,stream,print,class,url,path,constructor,java,constructor,get,declaring,class,stream,print,html,stream,print,constructor,name,constructor,stream,print,2d,boolean,first,true,for,class,clazz,constructor,type,parameters,if,first,first,false,else,stream,print,2d,stream,print,clazz,get,name,if,clazz,is,array,stream,print,a,stream,print,2d
PainlessDocGenerator -> private static void documentConstructor(PrintStream stream, PainlessConstructor constructor);1533063033;Document a constructor.;private static void documentConstructor(PrintStream stream, PainlessConstructor constructor) {_        stream.print("* ++[[")__        emitAnchor(stream, constructor)__        stream.print("]]")___        String javadocRoot = javadocRoot(constructor.javaConstructor.getDeclaringClass())__        emitJavadocLink(stream, javadocRoot, constructor)__        stream.print('[')___        stream.print(constructorName(constructor))___        stream.print("](")__        boolean first = true__        for (Class<?> arg : constructor.typeParameters) {_            if (first) {_                first = false__            } else {_                stream.print(", ")__            }_            emitType(stream, arg)__        }_        stream.print(")++")___        if (javadocRoot.equals("java8")) {_            stream.print(" (")__            emitJavadocLink(stream, "java9", constructor)__            stream.print("[java 9])")__        }__        stream.println()__    };document,a,constructor;private,static,void,document,constructor,print,stream,stream,painless,constructor,constructor,stream,print,emit,anchor,stream,constructor,stream,print,string,javadoc,root,javadoc,root,constructor,java,constructor,get,declaring,class,emit,javadoc,link,stream,javadoc,root,constructor,stream,print,stream,print,constructor,name,constructor,stream,print,boolean,first,true,for,class,arg,constructor,type,parameters,if,first,first,false,else,stream,print,emit,type,stream,arg,stream,print,if,javadoc,root,equals,java8,stream,print,emit,javadoc,link,stream,java9,constructor,stream,print,java,9,stream,println
PainlessDocGenerator -> private static void documentConstructor(PrintStream stream, PainlessConstructor constructor);1533143718;Document a constructor.;private static void documentConstructor(PrintStream stream, PainlessConstructor constructor) {_        stream.print("* ++[[")__        emitAnchor(stream, constructor)__        stream.print("]]")___        String javadocRoot = javadocRoot(constructor.javaConstructor.getDeclaringClass())__        emitJavadocLink(stream, javadocRoot, constructor)__        stream.print('[')___        stream.print(constructorName(constructor))___        stream.print("](")__        boolean first = true__        for (Class<?> arg : constructor.typeParameters) {_            if (first) {_                first = false__            } else {_                stream.print(", ")__            }_            emitType(stream, arg)__        }_        stream.print(")++")___        if (javadocRoot.equals("java8")) {_            stream.print(" (")__            emitJavadocLink(stream, "java9", constructor)__            stream.print("[java 9])")__        }__        stream.println()__    };document,a,constructor;private,static,void,document,constructor,print,stream,stream,painless,constructor,constructor,stream,print,emit,anchor,stream,constructor,stream,print,string,javadoc,root,javadoc,root,constructor,java,constructor,get,declaring,class,emit,javadoc,link,stream,javadoc,root,constructor,stream,print,stream,print,constructor,name,constructor,stream,print,boolean,first,true,for,class,arg,constructor,type,parameters,if,first,first,false,else,stream,print,emit,type,stream,arg,stream,print,if,javadoc,root,equals,java8,stream,print,emit,javadoc,link,stream,java9,constructor,stream,print,java,9,stream,println
PainlessDocGenerator -> private static void documentConstructor(PrintStream stream, PainlessConstructor constructor);1533295538;Document a constructor.;private static void documentConstructor(PrintStream stream, PainlessConstructor constructor) {_        stream.print("* ++[[")__        emitAnchor(stream, constructor)__        stream.print("]]")___        String javadocRoot = javadocRoot(constructor.javaConstructor.getDeclaringClass())__        emitJavadocLink(stream, javadocRoot, constructor)__        stream.print('[')___        stream.print(constructorName(constructor))___        stream.print("](")__        boolean first = true__        for (Class<?> arg : constructor.typeParameters) {_            if (first) {_                first = false__            } else {_                stream.print(", ")__            }_            emitType(stream, arg)__        }_        stream.print(")++")___        if (javadocRoot.equals("java8")) {_            stream.print(" (")__            emitJavadocLink(stream, "java9", constructor)__            stream.print("[java 9])")__        }__        stream.println()__    };document,a,constructor;private,static,void,document,constructor,print,stream,stream,painless,constructor,constructor,stream,print,emit,anchor,stream,constructor,stream,print,string,javadoc,root,javadoc,root,constructor,java,constructor,get,declaring,class,emit,javadoc,link,stream,javadoc,root,constructor,stream,print,stream,print,constructor,name,constructor,stream,print,boolean,first,true,for,class,arg,constructor,type,parameters,if,first,first,false,else,stream,print,emit,type,stream,arg,stream,print,if,javadoc,root,equals,java8,stream,print,emit,javadoc,link,stream,java9,constructor,stream,print,java,9,stream,println
PainlessDocGenerator -> private static void documentConstructor(PrintStream stream, PainlessConstructor constructor);1539615817;Document a constructor.;private static void documentConstructor(PrintStream stream, PainlessConstructor constructor) {_        stream.print("* ++[[")__        emitAnchor(stream, constructor)__        stream.print("]]")___        String javadocRoot = javadocRoot(constructor.javaConstructor.getDeclaringClass())__        emitJavadocLink(stream, javadocRoot, constructor)__        stream.print('[')___        stream.print(constructorName(constructor))___        stream.print("](")__        boolean first = true__        for (Class<?> arg : constructor.typeParameters) {_            if (first) {_                first = false__            } else {_                stream.print(", ")__            }_            emitType(stream, arg)__        }_        stream.print(")++")___        if (javadocRoot.equals("java8")) {_            stream.print(" (")__            emitJavadocLink(stream, "java9", constructor)__            stream.print("[java 9])")__        }__        stream.println()__    };document,a,constructor;private,static,void,document,constructor,print,stream,stream,painless,constructor,constructor,stream,print,emit,anchor,stream,constructor,stream,print,string,javadoc,root,javadoc,root,constructor,java,constructor,get,declaring,class,emit,javadoc,link,stream,javadoc,root,constructor,stream,print,stream,print,constructor,name,constructor,stream,print,boolean,first,true,for,class,arg,constructor,type,parameters,if,first,first,false,else,stream,print,emit,type,stream,arg,stream,print,if,javadoc,root,equals,java8,stream,print,emit,javadoc,link,stream,java9,constructor,stream,print,java,9,stream,println
PainlessDocGenerator -> private static void emitAnchor(PrintStream stream, PainlessConstructor constructor);1533063033;Anchor text for a {@link PainlessConstructor}.;private static void emitAnchor(PrintStream stream, PainlessConstructor constructor) {_        emitAnchor(stream, constructor.javaConstructor.getDeclaringClass())__        stream.print('-')__        stream.print(constructorName(constructor))__        stream.print('-')__        stream.print(constructor.typeParameters.size())__    };anchor,text,for,a,link,painless,constructor;private,static,void,emit,anchor,print,stream,stream,painless,constructor,constructor,emit,anchor,stream,constructor,java,constructor,get,declaring,class,stream,print,stream,print,constructor,name,constructor,stream,print,stream,print,constructor,type,parameters,size
PainlessDocGenerator -> private static void emitAnchor(PrintStream stream, PainlessConstructor constructor);1533143718;Anchor text for a {@link PainlessConstructor}.;private static void emitAnchor(PrintStream stream, PainlessConstructor constructor) {_        emitAnchor(stream, constructor.javaConstructor.getDeclaringClass())__        stream.print('-')__        stream.print(constructorName(constructor))__        stream.print('-')__        stream.print(constructor.typeParameters.size())__    };anchor,text,for,a,link,painless,constructor;private,static,void,emit,anchor,print,stream,stream,painless,constructor,constructor,emit,anchor,stream,constructor,java,constructor,get,declaring,class,stream,print,stream,print,constructor,name,constructor,stream,print,stream,print,constructor,type,parameters,size
PainlessDocGenerator -> private static void emitAnchor(PrintStream stream, PainlessConstructor constructor);1533295538;Anchor text for a {@link PainlessConstructor}.;private static void emitAnchor(PrintStream stream, PainlessConstructor constructor) {_        emitAnchor(stream, constructor.javaConstructor.getDeclaringClass())__        stream.print('-')__        stream.print(constructorName(constructor))__        stream.print('-')__        stream.print(constructor.typeParameters.size())__    };anchor,text,for,a,link,painless,constructor;private,static,void,emit,anchor,print,stream,stream,painless,constructor,constructor,emit,anchor,stream,constructor,java,constructor,get,declaring,class,stream,print,stream,print,constructor,name,constructor,stream,print,stream,print,constructor,type,parameters,size
PainlessDocGenerator -> private static void emitAnchor(PrintStream stream, PainlessConstructor constructor);1539615817;Anchor text for a {@link PainlessConstructor}.;private static void emitAnchor(PrintStream stream, PainlessConstructor constructor) {_        emitAnchor(stream, constructor.javaConstructor.getDeclaringClass())__        stream.print('-')__        stream.print(constructorName(constructor))__        stream.print('-')__        stream.print(constructor.typeParameters.size())__    };anchor,text,for,a,link,painless,constructor;private,static,void,emit,anchor,print,stream,stream,painless,constructor,constructor,emit,anchor,stream,constructor,java,constructor,get,declaring,class,stream,print,stream,print,constructor,name,constructor,stream,print,stream,print,constructor,type,parameters,size
