commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;7;;@Override protected Map<ScriptContext<?>, List<Whitelist>> scriptContexts() {     Map<ScriptContext<?>, List<Whitelist>> contexts = new HashMap<>().     contexts.put(SimilarityScript.CONTEXT, Whitelist.BASE_WHITELISTS).     contexts.put(SimilarityWeightScript.CONTEXT, Whitelist.BASE_WHITELISTS).     return contexts. }
false;public;0;36;;public void testBasics() throws IOException {     SimilarityScript.Factory factory = scriptEngine.compile("foobar", "return query.boost * doc.freq / doc.length", SimilarityScript.CONTEXT, Collections.emptyMap()).     ScriptedSimilarity sim = new ScriptedSimilarity("foobar", null, "foobaz", factory::newInstance, true).     Directory dir = new RAMDirectory().     IndexWriter w = new IndexWriter(dir, newIndexWriterConfig().setSimilarity(sim)).     Document doc = new Document().     doc.add(new TextField("f", "foo bar", Store.NO)).     doc.add(new StringField("match", "no", Store.NO)).     w.addDocument(doc).     doc = new Document().     doc.add(new TextField("f", "foo foo bar", Store.NO)).     doc.add(new StringField("match", "yes", Store.NO)).     w.addDocument(doc).     doc = new Document().     doc.add(new TextField("f", "bar", Store.NO)).     doc.add(new StringField("match", "no", Store.NO)).     w.addDocument(doc).     IndexReader r = DirectoryReader.open(w).     w.close().     IndexSearcher searcher = new IndexSearcher(r).     searcher.setSimilarity(sim).     Query query = new BoostQuery(new BooleanQuery.Builder().add(new TermQuery(new Term("f", "foo")), Occur.SHOULD).add(new TermQuery(new Term("match", "yes")), Occur.FILTER).build(), 3.2f).     TopDocs topDocs = searcher.search(query, 1).     assertEquals(1, topDocs.totalHits.value).     assertEquals((float) (3.2 * 2 / 3), topDocs.scoreDocs[0].score, 0).     w.close().     dir.close(). }
false;public;0;38;;public void testWeightScript() throws IOException {     SimilarityWeightScript.Factory weightFactory = scriptEngine.compile("foobar", "return query.boost", SimilarityWeightScript.CONTEXT, Collections.emptyMap()).     SimilarityScript.Factory factory = scriptEngine.compile("foobar", "return weight * doc.freq / doc.length", SimilarityScript.CONTEXT, Collections.emptyMap()).     ScriptedSimilarity sim = new ScriptedSimilarity("foobar", weightFactory::newInstance, "foobaz", factory::newInstance, true).     Directory dir = new RAMDirectory().     IndexWriter w = new IndexWriter(dir, newIndexWriterConfig().setSimilarity(sim)).     Document doc = new Document().     doc.add(new TextField("f", "foo bar", Store.NO)).     doc.add(new StringField("match", "no", Store.NO)).     w.addDocument(doc).     doc = new Document().     doc.add(new TextField("f", "foo foo bar", Store.NO)).     doc.add(new StringField("match", "yes", Store.NO)).     w.addDocument(doc).     doc = new Document().     doc.add(new TextField("f", "bar", Store.NO)).     doc.add(new StringField("match", "no", Store.NO)).     w.addDocument(doc).     IndexReader r = DirectoryReader.open(w).     w.close().     IndexSearcher searcher = new IndexSearcher(r).     searcher.setSimilarity(sim).     Query query = new BoostQuery(new BooleanQuery.Builder().add(new TermQuery(new Term("f", "foo")), Occur.SHOULD).add(new TermQuery(new Term("match", "yes")), Occur.FILTER).build(), 3.2f).     TopDocs topDocs = searcher.search(query, 1).     assertEquals(1, topDocs.totalHits.value).     assertEquals((float) (3.2 * 2 / 3), topDocs.scoreDocs[0].score, 0).     w.close().     dir.close(). }
