commented;modifiers;parameterAmount;loc;comment;code
false;public;2;4;;@Override public DoubleValues getValues(LeafReaderContext ctx, DoubleValues scores) throws IOException {     return fv. }
false;public;0;4;;@Override public boolean needsScores() {     return false. }
false;public;3;7;;@Override public Explanation explain(LeafReaderContext ctx, int docId, Explanation scoreExplanation) throws IOException {     if (fv.advanceExact(docId))         return Explanation.match((float) fv.doubleValue(), "ReplaceableConstDoubleValues").     else         return Explanation.noMatch("ReplaceableConstDoubleValues"). }
false;public;1;4;;@Override public boolean equals(Object o) {     return o == this. }
false;public;0;4;;@Override public int hashCode() {     return System.identityHashCode(this). }
false;public;1;3;;public void setValue(double v) {     fv.setValue(v). }
false;public;0;4;;@Override public String toString() {     return getClass().getSimpleName(). }
false;public;1;4;;@Override public boolean isCacheable(LeafReaderContext ctx) {     return false. }
false;public;1;4;;@Override public DoubleValuesSource rewrite(IndexSearcher reader) throws IOException {     return this. }
