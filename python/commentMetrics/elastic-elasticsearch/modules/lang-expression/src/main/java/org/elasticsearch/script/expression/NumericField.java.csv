commented;modifiers;parameterAmount;loc;comment;code
false;static;3;13;;static ValueSource getVariable(IndexFieldData<?> fieldData, String fieldName, String variable) {     switch(variable) {         case VALUE_VARIABLE:             return new FieldDataValueSource(fieldData, MultiValueMode.MIN).         case EMPTY_VARIABLE:             return new EmptyMemberValueSource(fieldData).         case LENGTH_VARIABLE:             return new CountMethodValueSource(fieldData).         default:             throw new IllegalArgumentException("Member variable [" + variable + "] does not exist for " + "numeric field [" + fieldName + "].").     } }
false;static;3;24;;static ValueSource getMethod(IndexFieldData<?> fieldData, String fieldName, String method) {     switch(method) {         case GETVALUE_METHOD:             return new FieldDataValueSource(fieldData, MultiValueMode.MIN).         case ISEMPTY_METHOD:             return new EmptyMemberValueSource(fieldData).         case SIZE_METHOD:             return new CountMethodValueSource(fieldData).         case MINIMUM_METHOD:             return new FieldDataValueSource(fieldData, MultiValueMode.MIN).         case MAXIMUM_METHOD:             return new FieldDataValueSource(fieldData, MultiValueMode.MAX).         case AVERAGE_METHOD:             return new FieldDataValueSource(fieldData, MultiValueMode.AVG).         case MEDIAN_METHOD:             return new FieldDataValueSource(fieldData, MultiValueMode.MEDIAN).         case SUM_METHOD:             return new FieldDataValueSource(fieldData, MultiValueMode.SUM).         case COUNT_METHOD:             return new CountMethodValueSource(fieldData).         default:             throw new IllegalArgumentException("Member method [" + method + "] does not exist for numeric field [" + fieldName + "].").     } }
