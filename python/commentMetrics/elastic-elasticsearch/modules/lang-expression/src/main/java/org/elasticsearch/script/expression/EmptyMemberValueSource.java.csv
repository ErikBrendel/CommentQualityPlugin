commented;modifiers;parameterAmount;loc;comment;code
false;public;1;8;;@Override public double doubleVal(int doc) throws IOException {     if (values.advanceExact(doc)) {         return 0.     } else {         return 1.     } }
false;public;2;16;;@Override // ValueSource uses a rawtype @SuppressWarnings("rawtypes") public FunctionValues getValues(Map context, LeafReaderContext leaf) throws IOException {     AtomicNumericFieldData leafData = (AtomicNumericFieldData) fieldData.load(leaf).     final SortedNumericDoubleValues values = leafData.getDoubleValues().     return new DoubleDocValues(this) {          @Override         public double doubleVal(int doc) throws IOException {             if (values.advanceExact(doc)) {                 return 0.             } else {                 return 1.             }         }     }. }
false;public;0;4;;@Override public int hashCode() {     return 31 * getClass().hashCode() + fieldData.hashCode(). }
false;public;1;9;;@Override public boolean equals(Object obj) {     if (this == obj)         return true.     if (obj == null)         return false.     if (getClass() != obj.getClass())         return false.     EmptyMemberValueSource other = (EmptyMemberValueSource) obj.     if (!fieldData.equals(other.fieldData))         return false.     return true. }
false;public;0;4;;@Override public String description() {     return "empty: field(" + fieldData.getFieldName() + ")". }
