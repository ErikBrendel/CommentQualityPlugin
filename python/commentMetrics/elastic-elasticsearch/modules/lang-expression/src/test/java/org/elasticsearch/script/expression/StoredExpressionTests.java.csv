commented;modifiers;parameterAmount;loc;comment;code
false;protected;1;6;;@Override protected Settings nodeSettings(int nodeOrdinal) {     Settings.Builder builder = Settings.builder().put(super.nodeSettings(nodeOrdinal)).     builder.put("script.allowed_contexts", "update").     return builder.build(). }
false;protected;0;4;;@Override protected Collection<Class<? extends Plugin>> nodePlugins() {     return Collections.singleton(ExpressionPlugin.class). }
false;public;0;32;;public void testAllOpsDisabledIndexedScripts() throws IOException {     client().admin().cluster().preparePutStoredScript().setId("script1").setContent(new BytesArray("{\"script\": {\"lang\": \"expression\", \"source\": \"2\"} }"), XContentType.JSON).get().     client().prepareIndex("test", "scriptTest", "1").setSource("{\"theField\":\"foo\"}", XContentType.JSON).get().     try {         client().prepareUpdate("test", "scriptTest", "1").setScript(new Script(ScriptType.STORED, null, "script1", Collections.emptyMap())).get().         fail("update script should have been rejected").     } catch (Exception e) {         assertThat(e.getMessage(), containsString("failed to execute script")).         assertThat(e.getCause().getMessage(), containsString("Failed to compile stored script [script1] using lang [expression]")).     }     try {         client().prepareSearch().setSource(new SearchSourceBuilder().scriptField("test1", new Script(ScriptType.STORED, null, "script1", Collections.emptyMap()))).setIndices("test").setTypes("scriptTest").get().         fail("search script should have been rejected").     } catch (Exception e) {         assertThat(e.toString(), containsString("cannot execute scripts using [field] context")).     }     try {         client().prepareSearch("test").setSource(new SearchSourceBuilder().aggregation(AggregationBuilders.terms("test").script(new Script(ScriptType.STORED, null, "script1", Collections.emptyMap())))).get().     } catch (Exception e) {         assertThat(e.toString(), containsString("cannot execute scripts using [aggs] context")).     } }
