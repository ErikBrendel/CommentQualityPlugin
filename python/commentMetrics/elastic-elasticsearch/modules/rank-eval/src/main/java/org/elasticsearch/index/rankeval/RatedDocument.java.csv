commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public DocumentKey getKey() {     return this.key. }
false;public;0;3;;public String getIndex() {     return key.getIndex(). }
false;public;0;3;;public String getDocID() {     return key.getDocId(). }
false;public;0;3;;public int getRating() {     return rating. }
false;public;1;6;;@Override public void writeTo(StreamOutput out) throws IOException {     out.writeString(key.getIndex()).     out.writeString(key.getDocId()).     out.writeVInt(rating). }
false;static;1;3;;static RatedDocument fromXContent(XContentParser parser) {     return PARSER.apply(parser, null). }
false;public;2;9;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.startObject().     builder.field(INDEX_FIELD.getPreferredName(), key.getIndex()).     builder.field(DOC_ID_FIELD.getPreferredName(), key.getDocId()).     builder.field(RATING_FIELD.getPreferredName(), rating).     builder.endObject().     return builder. }
false;public;0;4;;@Override public String toString() {     return Strings.toString(this). }
false;public,final;1;11;;@Override public final boolean equals(Object obj) {     if (this == obj) {         return true.     }     if (obj == null || getClass() != obj.getClass()) {         return false.     }     RatedDocument other = (RatedDocument) obj.     return Objects.equals(key, other.key) && Objects.equals(rating, other.rating). }
false;public,final;0;4;;@Override public final int hashCode() {     return Objects.hash(key, rating). }
false;;0;3;;String getIndex() {     return index. }
false;;0;3;;String getDocId() {     return docId. }
false;public,final;1;11;;@Override public final boolean equals(Object obj) {     if (this == obj) {         return true.     }     if (obj == null || getClass() != obj.getClass()) {         return false.     }     DocumentKey other = (DocumentKey) obj.     return Objects.equals(index, other.index) && Objects.equals(docId, other.docId). }
false;public,final;0;4;;@Override public final int hashCode() {     return Objects.hash(index, docId). }
false;public;0;4;;@Override public String toString() {     return "{\"_index\":\"" + index + "\",\"_id\":\"" + docId + "\"}". }
