commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public double getMetricScore() {     return metricScore. }
false;public;0;3;;public Map<String, EvalQueryQuality> getPartialResults() {     return Collections.unmodifiableMap(details). }
false;public;0;3;;public Map<String, Exception> getFailures() {     return Collections.unmodifiableMap(failures). }
false;public;0;4;;@Override public String toString() {     return Strings.toString(this). }
false;public;1;15;;@Override public void writeTo(StreamOutput out) throws IOException {     super.writeTo(out).     out.writeDouble(metricScore).     out.writeVInt(details.size()).     for (String queryId : details.keySet()) {         out.writeString(queryId).         details.get(queryId).writeTo(out).     }     out.writeVInt(failures.size()).     for (String queryId : failures.keySet()) {         out.writeString(queryId).         out.writeException(failures.get(queryId)).     } }
false;public;1;18;;@Override public void readFrom(StreamInput in) throws IOException {     super.readFrom(in).     this.metricScore = in.readDouble().     int partialResultSize = in.readVInt().     this.details = new HashMap<>(partialResultSize).     for (int i = 0. i < partialResultSize. i++) {         String queryId = in.readString().         EvalQueryQuality partial = new EvalQueryQuality(in).         this.details.put(queryId, partial).     }     int failuresSize = in.readVInt().     this.failures = new HashMap<>(failuresSize).     for (int i = 0. i < failuresSize. i++) {         String queryId = in.readString().         this.failures.put(queryId, in.readException()).     } }
false;public;2;19;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.startObject().     builder.field("metric_score", metricScore).     builder.startObject("details").     for (String key : details.keySet()) {         details.get(key).toXContent(builder, params).     }     builder.endObject().     builder.startObject("failures").     for (String key : failures.keySet()) {         builder.startObject(key).         ElasticsearchException.generateFailureXContent(builder, params, failures.get(key), true).         builder.endObject().     }     builder.endObject().     builder.endObject().     return builder. }
false;public,static;1;3;;public static RankEvalResponse fromXContent(XContentParser parser) throws IOException {     return PARSER.apply(parser, null). }
