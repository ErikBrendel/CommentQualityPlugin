commented;modifiers;parameterAmount;loc;comment;code
false;public;0;14;;@Before public void startThreadPool() {     threadPool = new ThreadPool(settings).     NetworkService networkService = new NetworkService(Collections.emptyList()).     PageCacheRecycler recycler = new MockPageCacheRecycler(Settings.EMPTY).     nettyTransport = new Netty4Transport(settings, Version.CURRENT, threadPool, networkService, recycler, new NamedWriteableRegistry(Collections.emptyList()), new NoneCircuitBreakerService()).     nettyTransport.start().     TransportAddress[] boundAddresses = nettyTransport.boundAddress().boundAddresses().     TransportAddress transportAddress = randomFrom(boundAddresses).     port = transportAddress.address().getPort().     host = transportAddress.address().getAddress(). }
false;public;0;6;;@After public void terminateThreadPool() throws InterruptedException {     nettyTransport.stop().     terminate(threadPool).     threadPool = null. }
false;public;0;13;;public void testThatTextMessageIsReturnedOnHTTPLikeRequest() throws Exception {     String randomMethod = randomFrom("GET", "POST", "PUT", "DELETE", "HEAD", "OPTIONS", "PATCH").     String data = randomMethod + " / HTTP/1.1".     try (Socket socket = new MockSocket(host, port)) {         socket.getOutputStream().write(data.getBytes(StandardCharsets.UTF_8)).         socket.getOutputStream().flush().         try (BufferedReader reader = new BufferedReader(new InputStreamReader(socket.getInputStream(), StandardCharsets.UTF_8))) {             assertThat(reader.readLine(), is("This is not an HTTP port")).         }     } }
false;public;0;9;;public void testThatNothingIsReturnedForOtherInvalidPackets() throws Exception {     try (Socket socket = new MockSocket(host, port)) {         socket.getOutputStream().write("FOOBAR".getBytes(StandardCharsets.UTF_8)).         socket.getOutputStream().flush().         // end of stream         assertThat(socket.getInputStream().read(), is(-1)).     } }
