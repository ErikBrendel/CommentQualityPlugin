commented;modifiers;parameterAmount;loc;comment;code
false;protected;1;7;;@Override protected Settings nodeSettings(int nodeOrdinal) {     return Settings.builder().put(super.nodeSettings(nodeOrdinal)).put(NetworkModule.TRANSPORT_TYPE_KEY, Netty4Plugin.NETTY_TRANSPORT_NAME).build(). }
false;public;0;35;;public void testDifferentPorts() throws Exception {     if (!NetworkUtils.SUPPORTS_V6) {         return.     }     logger.info("--> starting a node on ipv4 only").     Settings ipv4Settings = Settings.builder().put("network.host", "127.0.0.1").build().     // should bind 127.0.0.1:XYZ     String ipv4OnlyNode = internalCluster().startNode(ipv4Settings).     logger.info("--> starting a node on ipv4 and ipv6").     Settings bothSettings = Settings.builder().put("network.host", "_local_").build().     // should bind [::1]:XYZ and 127.0.0.1:XYZ+1     internalCluster().startNode(bothSettings).     logger.info("--> waiting for the cluster to declare itself stable").     // fails if port of publish address does not match corresponding bound address     ensureStableCluster(2).     logger.info("--> checking if boundAddress matching publishAddress has same port").     NodesInfoResponse nodesInfoResponse = client().admin().cluster().prepareNodesInfo().get().     for (NodeInfo nodeInfo : nodesInfoResponse.getNodes()) {         BoundTransportAddress boundTransportAddress = nodeInfo.getTransport().getAddress().         if (nodeInfo.getNode().getName().equals(ipv4OnlyNode)) {             assertThat(boundTransportAddress.boundAddresses().length, equalTo(1)).             assertThat(boundTransportAddress.boundAddresses()[0].getPort(), equalTo(boundTransportAddress.publishAddress().getPort())).         } else {             assertThat(boundTransportAddress.boundAddresses().length, greaterThan(1)).             for (TransportAddress boundAddress : boundTransportAddress.boundAddresses()) {                 assertThat(boundAddress, instanceOf(TransportAddress.class)).                 TransportAddress inetBoundAddress = (TransportAddress) boundAddress.                 if (inetBoundAddress.address().getAddress() instanceof Inet4Address) {                     // IPv4 address is preferred publish address for _local_                     assertThat(inetBoundAddress.getPort(), equalTo(boundTransportAddress.publishAddress().getPort())).                 }             }         }     } }
