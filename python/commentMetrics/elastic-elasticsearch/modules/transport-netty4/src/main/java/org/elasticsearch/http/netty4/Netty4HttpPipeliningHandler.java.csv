# id;timestamp;commentText;codeText;commentWords;codeWords
Netty4HttpPipeliningHandler -> public Netty4HttpPipeliningHandler(Logger logger, final int maxEventsHeld);1527152864;Construct a new pipelining handler_ this handler should be used downstream of HTTP decoding/aggregation.__@param logger        for logging unexpected errors_@param maxEventsHeld the maximum number of channel events that will be retained prior to aborting the channel connection_ this is_required as events cannot queue up indefinitely;public Netty4HttpPipeliningHandler(Logger logger, final int maxEventsHeld) {_        this.logger = logger__        this.aggregator = new HttpPipeliningAggregator<>(maxEventsHeld)__    };construct,a,new,pipelining,handler,this,handler,should,be,used,downstream,of,http,decoding,aggregation,param,logger,for,logging,unexpected,errors,param,max,events,held,the,maximum,number,of,channel,events,that,will,be,retained,prior,to,aborting,the,channel,connection,this,is,required,as,events,cannot,queue,up,indefinitely;public,netty4http,pipelining,handler,logger,logger,final,int,max,events,held,this,logger,logger,this,aggregator,new,http,pipelining,aggregator,max,events,held
Netty4HttpPipeliningHandler -> public Netty4HttpPipeliningHandler(Logger logger, final int maxEventsHeld);1528762805;Construct a new pipelining handler_ this handler should be used downstream of HTTP decoding/aggregation.__@param logger        for logging unexpected errors_@param maxEventsHeld the maximum number of channel events that will be retained prior to aborting the channel connection_ this is_required as events cannot queue up indefinitely;public Netty4HttpPipeliningHandler(Logger logger, final int maxEventsHeld) {_        this.logger = logger__        this.aggregator = new HttpPipeliningAggregator<>(maxEventsHeld)__    };construct,a,new,pipelining,handler,this,handler,should,be,used,downstream,of,http,decoding,aggregation,param,logger,for,logging,unexpected,errors,param,max,events,held,the,maximum,number,of,channel,events,that,will,be,retained,prior,to,aborting,the,channel,connection,this,is,required,as,events,cannot,queue,up,indefinitely;public,netty4http,pipelining,handler,logger,logger,final,int,max,events,held,this,logger,logger,this,aggregator,new,http,pipelining,aggregator,max,events,held
Netty4HttpPipeliningHandler -> public Netty4HttpPipeliningHandler(Logger logger, final int maxEventsHeld);1528893677;Construct a new pipelining handler_ this handler should be used downstream of HTTP decoding/aggregation.__@param logger        for logging unexpected errors_@param maxEventsHeld the maximum number of channel events that will be retained prior to aborting the channel connection_ this is_required as events cannot queue up indefinitely;public Netty4HttpPipeliningHandler(Logger logger, final int maxEventsHeld) {_        this.logger = logger__        this.aggregator = new HttpPipeliningAggregator<>(maxEventsHeld)__    };construct,a,new,pipelining,handler,this,handler,should,be,used,downstream,of,http,decoding,aggregation,param,logger,for,logging,unexpected,errors,param,max,events,held,the,maximum,number,of,channel,events,that,will,be,retained,prior,to,aborting,the,channel,connection,this,is,required,as,events,cannot,queue,up,indefinitely;public,netty4http,pipelining,handler,logger,logger,final,int,max,events,held,this,logger,logger,this,aggregator,new,http,pipelining,aggregator,max,events,held
Netty4HttpPipeliningHandler -> public Netty4HttpPipeliningHandler(Logger logger, final int maxEventsHeld);1529015561;Construct a new pipelining handler_ this handler should be used downstream of HTTP decoding/aggregation.__@param logger        for logging unexpected errors_@param maxEventsHeld the maximum number of channel events that will be retained prior to aborting the channel connection_ this is_required as events cannot queue up indefinitely;public Netty4HttpPipeliningHandler(Logger logger, final int maxEventsHeld) {_        this.logger = logger__        this.aggregator = new HttpPipeliningAggregator<>(maxEventsHeld)__    };construct,a,new,pipelining,handler,this,handler,should,be,used,downstream,of,http,decoding,aggregation,param,logger,for,logging,unexpected,errors,param,max,events,held,the,maximum,number,of,channel,events,that,will,be,retained,prior,to,aborting,the,channel,connection,this,is,required,as,events,cannot,queue,up,indefinitely;public,netty4http,pipelining,handler,logger,logger,final,int,max,events,held,this,logger,logger,this,aggregator,new,http,pipelining,aggregator,max,events,held
Netty4HttpPipeliningHandler -> public Netty4HttpPipeliningHandler(Logger logger, final int maxEventsHeld);1531179852;Construct a new pipelining handler_ this handler should be used downstream of HTTP decoding/aggregation.__@param logger        for logging unexpected errors_@param maxEventsHeld the maximum number of channel events that will be retained prior to aborting the channel connection_ this is_required as events cannot queue up indefinitely;public Netty4HttpPipeliningHandler(Logger logger, final int maxEventsHeld) {_        this.logger = logger__        this.aggregator = new HttpPipeliningAggregator<>(maxEventsHeld)__    };construct,a,new,pipelining,handler,this,handler,should,be,used,downstream,of,http,decoding,aggregation,param,logger,for,logging,unexpected,errors,param,max,events,held,the,maximum,number,of,channel,events,that,will,be,retained,prior,to,aborting,the,channel,connection,this,is,required,as,events,cannot,queue,up,indefinitely;public,netty4http,pipelining,handler,logger,logger,final,int,max,events,held,this,logger,logger,this,aggregator,new,http,pipelining,aggregator,max,events,held
