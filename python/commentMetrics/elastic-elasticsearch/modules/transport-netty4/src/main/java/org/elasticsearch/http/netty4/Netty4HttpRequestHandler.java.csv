commented;modifiers;parameterAmount;loc;comment;code
false;protected;2;33;;@Override protected void channelRead0(ChannelHandlerContext ctx, HttpPipelinedRequest<FullHttpRequest> msg) throws Exception {     Netty4HttpChannel channel = ctx.channel().attr(Netty4HttpServerTransport.HTTP_CHANNEL_KEY).get().     FullHttpRequest request = msg.getRequest().     try {         final FullHttpRequest copiedRequest = new DefaultFullHttpRequest(request.protocolVersion(), request.method(), request.uri(), Unpooled.copiedBuffer(request.content()), request.headers(), request.trailingHeaders()).         Netty4HttpRequest httpRequest = new Netty4HttpRequest(copiedRequest, msg.getSequence()).         if (request.decoderResult().isFailure()) {             Throwable cause = request.decoderResult().cause().             if (cause instanceof Error) {                 ExceptionsHelper.maybeDieOnAnotherThread(cause).                 serverTransport.incomingRequestError(httpRequest, channel, new Exception(cause)).             } else {                 serverTransport.incomingRequestError(httpRequest, channel, (Exception) cause).             }         } else {             serverTransport.incomingRequest(httpRequest, channel).         }     } finally {         // As we have copied the buffer, we can release the request         request.release().     } }
false;public;2;10;;@Override public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) throws Exception {     ExceptionsHelper.maybeDieOnAnotherThread(cause).     Netty4HttpChannel channel = ctx.channel().attr(Netty4HttpServerTransport.HTTP_CHANNEL_KEY).get().     if (cause instanceof Error) {         serverTransport.onException(channel, new Exception(cause)).     } else {         serverTransport.onException(channel, (Exception) cause).     } }
