# id;timestamp;commentText;codeText;commentWords;codeWords
Netty4CorsConfig -> public boolean isAnyOriginSupported();1524684173;Determines whether a wildcard origin, '*', is supported.__@return {@code boolean} true if any origin is allowed.;public boolean isAnyOriginSupported() {_        return anyOrigin__    };determines,whether,a,wildcard,origin,is,supported,return,code,boolean,true,if,any,origin,is,allowed;public,boolean,is,any,origin,supported,return,any,origin
Netty4CorsConfig -> public boolean isAnyOriginSupported();1528304883;Determines whether a wildcard origin, '*', is supported. This also means that null origins are_supported.__@return {@code boolean} true if any origin is allowed.;public boolean isAnyOriginSupported() {_        return anyOrigin__    };determines,whether,a,wildcard,origin,is,supported,this,also,means,that,null,origins,are,supported,return,code,boolean,true,if,any,origin,is,allowed;public,boolean,is,any,origin,supported,return,any,origin
Netty4CorsConfig -> public boolean isAnyOriginSupported();1541436782;Determines whether a wildcard origin, '*', is supported. This also means that null origins are_supported.__@return {@code boolean} true if any origin is allowed.;public boolean isAnyOriginSupported() {_        return anyOrigin__    };determines,whether,a,wildcard,origin,is,supported,this,also,means,that,null,origins,are,supported,return,code,boolean,true,if,any,origin,is,allowed;public,boolean,is,any,origin,supported,return,any,origin
Netty4CorsConfig -> public boolean isCredentialsAllowed();1524684173;Determines if cookies are supported for CORS requests.__By default cookies are not included in CORS requests but if isCredentialsAllowed returns_true cookies will be added to CORS requests. Setting this value to true will set the_CORS 'Access-Control-Allow-Credentials' response header to true.__Please note that cookie support needs to be enabled on the client side as well._The client needs to opt-in to send cookies by calling:_<pre>_xhr.withCredentials = true__</pre>_The default value for 'withCredentials' is false in which case no cookies are sent._Setting this to true will included cookies in cross origin requests.__@return {@code true} if cookies are supported.;public boolean isCredentialsAllowed() {_        return allowCredentials__    };determines,if,cookies,are,supported,for,cors,requests,by,default,cookies,are,not,included,in,cors,requests,but,if,is,credentials,allowed,returns,true,cookies,will,be,added,to,cors,requests,setting,this,value,to,true,will,set,the,cors,access,control,allow,credentials,response,header,to,true,please,note,that,cookie,support,needs,to,be,enabled,on,the,client,side,as,well,the,client,needs,to,opt,in,to,send,cookies,by,calling,pre,xhr,with,credentials,true,pre,the,default,value,for,with,credentials,is,false,in,which,case,no,cookies,are,sent,setting,this,to,true,will,included,cookies,in,cross,origin,requests,return,code,true,if,cookies,are,supported;public,boolean,is,credentials,allowed,return,allow,credentials
Netty4CorsConfig -> public boolean isCredentialsAllowed();1528304883;Determines if credentials are supported for CORS requests.__By default credentials are not included in CORS requests but if isCredentialsAllowed returns_true credentials will be added to CORS requests. Setting this value to true will set the_CORS 'Access-Control-Allow-Credentials' response header to true.__Please note that credentials support needs to be enabled on the client side as well._The client needs to opt-in to send credentials by calling:_<pre>_xhr.withCredentials = true__</pre>_The default value for 'withCredentials' is false in which case no credentials are sent._Setting this to true will included credentials in cross origin requests.__@return {@code true} if credentials are supported.;public boolean isCredentialsAllowed() {_        return allowCredentials__    };determines,if,credentials,are,supported,for,cors,requests,by,default,credentials,are,not,included,in,cors,requests,but,if,is,credentials,allowed,returns,true,credentials,will,be,added,to,cors,requests,setting,this,value,to,true,will,set,the,cors,access,control,allow,credentials,response,header,to,true,please,note,that,credentials,support,needs,to,be,enabled,on,the,client,side,as,well,the,client,needs,to,opt,in,to,send,credentials,by,calling,pre,xhr,with,credentials,true,pre,the,default,value,for,with,credentials,is,false,in,which,case,no,credentials,are,sent,setting,this,to,true,will,included,credentials,in,cross,origin,requests,return,code,true,if,credentials,are,supported;public,boolean,is,credentials,allowed,return,allow,credentials
Netty4CorsConfig -> public boolean isCredentialsAllowed();1541436782;Determines if credentials are supported for CORS requests.__By default credentials are not included in CORS requests but if isCredentialsAllowed returns_true credentials will be added to CORS requests. Setting this value to true will set the_CORS 'Access-Control-Allow-Credentials' response header to true.__Please note that credentials support needs to be enabled on the client side as well._The client needs to opt-in to send credentials by calling:_<pre>_xhr.withCredentials = true__</pre>_The default value for 'withCredentials' is false in which case no credentials are sent._Setting this to true will included credentials in cross origin requests.__@return {@code true} if credentials are supported.;public boolean isCredentialsAllowed() {_        return allowCredentials__    };determines,if,credentials,are,supported,for,cors,requests,by,default,credentials,are,not,included,in,cors,requests,but,if,is,credentials,allowed,returns,true,credentials,will,be,added,to,cors,requests,setting,this,value,to,true,will,set,the,cors,access,control,allow,credentials,response,header,to,true,please,note,that,credentials,support,needs,to,be,enabled,on,the,client,side,as,well,the,client,needs,to,opt,in,to,send,credentials,by,calling,pre,xhr,with,credentials,true,pre,the,default,value,for,with,credentials,is,false,in,which,case,no,credentials,are,sent,setting,this,to,true,will,included,credentials,in,cross,origin,requests,return,code,true,if,credentials,are,supported;public,boolean,is,credentials,allowed,return,allow,credentials
Netty4CorsConfig -> public HttpHeaders preflightResponseHeaders();1524684173;Returns HTTP response headers that should be added to a CORS preflight response.__@return {@link HttpHeaders} the HTTP response headers to be added.;public HttpHeaders preflightResponseHeaders() {_        if (preflightHeaders.isEmpty()) {_            return EmptyHttpHeaders.INSTANCE__        }_        final HttpHeaders preflightHeaders = new DefaultHttpHeaders()__        for (Map.Entry<CharSequence, Callable<?>> entry : this.preflightHeaders.entrySet()) {_            final Object value = getValue(entry.getValue())__            if (value instanceof Iterable) {_                preflightHeaders.add(entry.getKey().toString(), (Iterable<?>) value)__            } else {_                preflightHeaders.add(entry.getKey().toString(), value)__            }_        }_        return preflightHeaders__    };returns,http,response,headers,that,should,be,added,to,a,cors,preflight,response,return,link,http,headers,the,http,response,headers,to,be,added;public,http,headers,preflight,response,headers,if,preflight,headers,is,empty,return,empty,http,headers,instance,final,http,headers,preflight,headers,new,default,http,headers,for,map,entry,char,sequence,callable,entry,this,preflight,headers,entry,set,final,object,value,get,value,entry,get,value,if,value,instanceof,iterable,preflight,headers,add,entry,get,key,to,string,iterable,value,else,preflight,headers,add,entry,get,key,to,string,value,return,preflight,headers
Netty4CorsConfig -> public HttpHeaders preflightResponseHeaders();1528304883;Returns HTTP response headers that should be added to a CORS preflight response.__@return {@link HttpHeaders} the HTTP response headers to be added.;public HttpHeaders preflightResponseHeaders() {_        if (preflightHeaders.isEmpty()) {_            return EmptyHttpHeaders.INSTANCE__        }_        final HttpHeaders preflightHeaders = new DefaultHttpHeaders()__        for (Map.Entry<CharSequence, Callable<?>> entry : this.preflightHeaders.entrySet()) {_            final Object value = getValue(entry.getValue())__            if (value instanceof Iterable) {_                preflightHeaders.add(entry.getKey().toString(), (Iterable<?>) value)__            } else {_                preflightHeaders.add(entry.getKey().toString(), value)__            }_        }_        return preflightHeaders__    };returns,http,response,headers,that,should,be,added,to,a,cors,preflight,response,return,link,http,headers,the,http,response,headers,to,be,added;public,http,headers,preflight,response,headers,if,preflight,headers,is,empty,return,empty,http,headers,instance,final,http,headers,preflight,headers,new,default,http,headers,for,map,entry,char,sequence,callable,entry,this,preflight,headers,entry,set,final,object,value,get,value,entry,get,value,if,value,instanceof,iterable,preflight,headers,add,entry,get,key,to,string,iterable,value,else,preflight,headers,add,entry,get,key,to,string,value,return,preflight,headers
Netty4CorsConfig -> public HttpHeaders preflightResponseHeaders();1541436782;Returns HTTP response headers that should be added to a CORS preflight response.__@return {@link HttpHeaders} the HTTP response headers to be added.;public HttpHeaders preflightResponseHeaders() {_        if (preflightHeaders.isEmpty()) {_            return EmptyHttpHeaders.INSTANCE__        }_        final HttpHeaders preflightHeaders = new DefaultHttpHeaders()__        for (Map.Entry<CharSequence, Callable<?>> entry : this.preflightHeaders.entrySet()) {_            final Object value = getValue(entry.getValue())__            if (value instanceof Iterable) {_                preflightHeaders.add(entry.getKey().toString(), (Iterable<?>) value)__            } else {_                preflightHeaders.add(entry.getKey().toString(), value)__            }_        }_        return preflightHeaders__    };returns,http,response,headers,that,should,be,added,to,a,cors,preflight,response,return,link,http,headers,the,http,response,headers,to,be,added;public,http,headers,preflight,response,headers,if,preflight,headers,is,empty,return,empty,http,headers,instance,final,http,headers,preflight,headers,new,default,http,headers,for,map,entry,char,sequence,callable,entry,this,preflight,headers,entry,set,final,object,value,get,value,entry,get,value,if,value,instanceof,iterable,preflight,headers,add,entry,get,key,to,string,iterable,value,else,preflight,headers,add,entry,get,key,to,string,value,return,preflight,headers
Netty4CorsConfig -> public Optional<Set<String>> origins();1524684173;Returns the set of allowed origins.__@return {@code Set} the allowed origins.;public Optional<Set<String>> origins() {_        return origins__    };returns,the,set,of,allowed,origins,return,code,set,the,allowed,origins;public,optional,set,string,origins,return,origins
Netty4CorsConfig -> public Optional<Set<String>> origins();1528304883;Returns the set of allowed origins.__@return {@code Set} the allowed origins.;public Optional<Set<String>> origins() {_        return origins__    };returns,the,set,of,allowed,origins,return,code,set,the,allowed,origins;public,optional,set,string,origins,return,origins
Netty4CorsConfig -> public Optional<Set<String>> origins();1541436782;Returns the set of allowed origins.__@return {@code Set} the allowed origins.;public Optional<Set<String>> origins() {_        return origins__    };returns,the,set,of,allowed,origins,return,code,set,the,allowed,origins;public,optional,set,string,origins,return,origins
Netty4CorsConfig -> public boolean isCorsSupportEnabled();1524684173;Determines if support for CORS is enabled.__@return {@code true} if support for CORS is enabled, false otherwise.;public boolean isCorsSupportEnabled() {_        return enabled__    };determines,if,support,for,cors,is,enabled,return,code,true,if,support,for,cors,is,enabled,false,otherwise;public,boolean,is,cors,support,enabled,return,enabled
Netty4CorsConfig -> public boolean isCorsSupportEnabled();1528304883;Determines if support for CORS is enabled.__@return {@code true} if support for CORS is enabled, false otherwise.;public boolean isCorsSupportEnabled() {_        return enabled__    };determines,if,support,for,cors,is,enabled,return,code,true,if,support,for,cors,is,enabled,false,otherwise;public,boolean,is,cors,support,enabled,return,enabled
Netty4CorsConfig -> public boolean isCorsSupportEnabled();1541436782;Determines if support for CORS is enabled.__@return {@code true} if support for CORS is enabled, false otherwise.;public boolean isCorsSupportEnabled() {_        return enabled__    };determines,if,support,for,cors,is,enabled,return,code,true,if,support,for,cors,is,enabled,false,otherwise;public,boolean,is,cors,support,enabled,return,enabled
Netty4CorsConfig -> public boolean isShortCircuit();1524684173;Determines whether a CORS request should be rejected if it's invalid before being_further processing.__CORS headers are set after a request is processed. This may not always be desired_and this setting will check that the Origin is valid and if it is not valid no_further processing will take place, and a error will be returned to the calling client.__@return {@code true} if a CORS request should short-circuit upon receiving an invalid Origin header.;public boolean isShortCircuit() {_        return shortCircuit__    };determines,whether,a,cors,request,should,be,rejected,if,it,s,invalid,before,being,further,processing,cors,headers,are,set,after,a,request,is,processed,this,may,not,always,be,desired,and,this,setting,will,check,that,the,origin,is,valid,and,if,it,is,not,valid,no,further,processing,will,take,place,and,a,error,will,be,returned,to,the,calling,client,return,code,true,if,a,cors,request,should,short,circuit,upon,receiving,an,invalid,origin,header;public,boolean,is,short,circuit,return,short,circuit
Netty4CorsConfig -> public boolean isShortCircuit();1528304883;Determines whether a CORS request should be rejected if it's invalid before being_further processing.__CORS headers are set after a request is processed. This may not always be desired_and this setting will check that the Origin is valid and if it is not valid no_further processing will take place, and a error will be returned to the calling client.__@return {@code true} if a CORS request should short-circuit upon receiving an invalid Origin header.;public boolean isShortCircuit() {_        return shortCircuit__    };determines,whether,a,cors,request,should,be,rejected,if,it,s,invalid,before,being,further,processing,cors,headers,are,set,after,a,request,is,processed,this,may,not,always,be,desired,and,this,setting,will,check,that,the,origin,is,valid,and,if,it,is,not,valid,no,further,processing,will,take,place,and,a,error,will,be,returned,to,the,calling,client,return,code,true,if,a,cors,request,should,short,circuit,upon,receiving,an,invalid,origin,header;public,boolean,is,short,circuit,return,short,circuit
Netty4CorsConfig -> public boolean isShortCircuit();1541436782;Determines whether a CORS request should be rejected if it's invalid before being_further processing.__CORS headers are set after a request is processed. This may not always be desired_and this setting will check that the Origin is valid and if it is not valid no_further processing will take place, and a error will be returned to the calling client.__@return {@code true} if a CORS request should short-circuit upon receiving an invalid Origin header.;public boolean isShortCircuit() {_        return shortCircuit__    };determines,whether,a,cors,request,should,be,rejected,if,it,s,invalid,before,being,further,processing,cors,headers,are,set,after,a,request,is,processed,this,may,not,always,be,desired,and,this,setting,will,check,that,the,origin,is,valid,and,if,it,is,not,valid,no,further,processing,will,take,place,and,a,error,will,be,returned,to,the,calling,client,return,code,true,if,a,cors,request,should,short,circuit,upon,receiving,an,invalid,origin,header;public,boolean,is,short,circuit,return,short,circuit
Netty4CorsConfig -> public boolean isNullOriginAllowed();1524684173;Web browsers may set the 'Origin' request header to 'null' if a resource is loaded_from the local file system.__If isNullOriginAllowed is true then the server will response with the wildcard for the_the CORS response header 'Access-Control-Allow-Origin'.__@return {@code true} if a 'null' origin should be supported.;public boolean isNullOriginAllowed() {_        return allowNullOrigin__    };web,browsers,may,set,the,origin,request,header,to,null,if,a,resource,is,loaded,from,the,local,file,system,if,is,null,origin,allowed,is,true,then,the,server,will,response,with,the,wildcard,for,the,the,cors,response,header,access,control,allow,origin,return,code,true,if,a,null,origin,should,be,supported;public,boolean,is,null,origin,allowed,return,allow,null,origin
Netty4CorsConfig -> public boolean isNullOriginAllowed();1528304883;Web browsers may set the 'Origin' request header to 'null' if a resource is loaded_from the local file system.__If isNullOriginAllowed is true then the server will response with the wildcard for the_the CORS response header 'Access-Control-Allow-Origin'.__@return {@code true} if a 'null' origin should be supported.;public boolean isNullOriginAllowed() {_        return allowNullOrigin__    };web,browsers,may,set,the,origin,request,header,to,null,if,a,resource,is,loaded,from,the,local,file,system,if,is,null,origin,allowed,is,true,then,the,server,will,response,with,the,wildcard,for,the,the,cors,response,header,access,control,allow,origin,return,code,true,if,a,null,origin,should,be,supported;public,boolean,is,null,origin,allowed,return,allow,null,origin
Netty4CorsConfig -> public boolean isOriginAllowed(final String origin);1524684173;Returns whether the input origin is allowed by this configuration.__@return {@code true} if the origin is allowed, otherwise {@code false};public boolean isOriginAllowed(final String origin) {_        if (origins.isPresent()) {_            return origins.get().contains(origin)__        } else if (pattern.isPresent()) {_            return pattern.get().matcher(origin).matches()__        }_        return false__    };returns,whether,the,input,origin,is,allowed,by,this,configuration,return,code,true,if,the,origin,is,allowed,otherwise,code,false;public,boolean,is,origin,allowed,final,string,origin,if,origins,is,present,return,origins,get,contains,origin,else,if,pattern,is,present,return,pattern,get,matcher,origin,matches,return,false
Netty4CorsConfig -> public boolean isOriginAllowed(final String origin);1528304883;Returns whether the input origin is allowed by this configuration.__@return {@code true} if the origin is allowed, otherwise {@code false};public boolean isOriginAllowed(final String origin) {_        if (origins.isPresent()) {_            return origins.get().contains(origin)__        } else if (pattern.isPresent()) {_            return pattern.get().matcher(origin).matches()__        }_        return false__    };returns,whether,the,input,origin,is,allowed,by,this,configuration,return,code,true,if,the,origin,is,allowed,otherwise,code,false;public,boolean,is,origin,allowed,final,string,origin,if,origins,is,present,return,origins,get,contains,origin,else,if,pattern,is,present,return,pattern,get,matcher,origin,matches,return,false
Netty4CorsConfig -> public boolean isOriginAllowed(final String origin);1541436782;Returns whether the input origin is allowed by this configuration.__@return {@code true} if the origin is allowed, otherwise {@code false};public boolean isOriginAllowed(final String origin) {_        if (origins.isPresent()) {_            return origins.get().contains(origin)__        } else if (pattern.isPresent()) {_            return pattern.get().matcher(origin).matches()__        }_        return false__    };returns,whether,the,input,origin,is,allowed,by,this,configuration,return,code,true,if,the,origin,is,allowed,otherwise,code,false;public,boolean,is,origin,allowed,final,string,origin,if,origins,is,present,return,origins,get,contains,origin,else,if,pattern,is,present,return,pattern,get,matcher,origin,matches,return,false
Netty4CorsConfig -> public long maxAge();1524684173;Gets the maxAge setting.__When making a preflight request the client has to perform two request with can be inefficient._This setting will set the CORS 'Access-Control-Max-Age' response header and enables the_caching of the preflight response for the specified time. During this time no preflight_request will be made.__@return {@code long} the time in seconds that a preflight request may be cached.;public long maxAge() {_        return maxAge__    };gets,the,max,age,setting,when,making,a,preflight,request,the,client,has,to,perform,two,request,with,can,be,inefficient,this,setting,will,set,the,cors,access,control,max,age,response,header,and,enables,the,caching,of,the,preflight,response,for,the,specified,time,during,this,time,no,preflight,request,will,be,made,return,code,long,the,time,in,seconds,that,a,preflight,request,may,be,cached;public,long,max,age,return,max,age
Netty4CorsConfig -> public long maxAge();1528304883;Gets the maxAge setting.__When making a preflight request the client has to perform two request with can be inefficient._This setting will set the CORS 'Access-Control-Max-Age' response header and enables the_caching of the preflight response for the specified time. During this time no preflight_request will be made.__@return {@code long} the time in seconds that a preflight request may be cached.;public long maxAge() {_        return maxAge__    };gets,the,max,age,setting,when,making,a,preflight,request,the,client,has,to,perform,two,request,with,can,be,inefficient,this,setting,will,set,the,cors,access,control,max,age,response,header,and,enables,the,caching,of,the,preflight,response,for,the,specified,time,during,this,time,no,preflight,request,will,be,made,return,code,long,the,time,in,seconds,that,a,preflight,request,may,be,cached;public,long,max,age,return,max,age
Netty4CorsConfig -> public long maxAge();1541436782;Gets the maxAge setting.__When making a preflight request the client has to perform two request with can be inefficient._This setting will set the CORS 'Access-Control-Max-Age' response header and enables the_caching of the preflight response for the specified time. During this time no preflight_request will be made.__@return {@code long} the time in seconds that a preflight request may be cached.;public long maxAge() {_        return maxAge__    };gets,the,max,age,setting,when,making,a,preflight,request,the,client,has,to,perform,two,request,with,can,be,inefficient,this,setting,will,set,the,cors,access,control,max,age,response,header,and,enables,the,caching,of,the,preflight,response,for,the,specified,time,during,this,time,no,preflight,request,will,be,made,return,code,long,the,time,in,seconds,that,a,preflight,request,may,be,cached;public,long,max,age,return,max,age
Netty4CorsConfig -> public Set<HttpMethod> allowedRequestMethods();1524684173;Returns the allowed set of Request Methods. The Http methods that should be returned in the_CORS 'Access-Control-Request-Method' response header.__@return {@code Set} of {@link HttpMethod}s that represent the allowed Request Methods.;public Set<HttpMethod> allowedRequestMethods() {_        return Collections.unmodifiableSet(allowedRequestMethods)__    };returns,the,allowed,set,of,request,methods,the,http,methods,that,should,be,returned,in,the,cors,access,control,request,method,response,header,return,code,set,of,link,http,method,s,that,represent,the,allowed,request,methods;public,set,http,method,allowed,request,methods,return,collections,unmodifiable,set,allowed,request,methods
Netty4CorsConfig -> public Set<HttpMethod> allowedRequestMethods();1528304883;Returns the allowed set of Request Methods. The Http methods that should be returned in the_CORS 'Access-Control-Request-Method' response header.__@return {@code Set} of {@link HttpMethod}s that represent the allowed Request Methods.;public Set<HttpMethod> allowedRequestMethods() {_        return Collections.unmodifiableSet(allowedRequestMethods)__    };returns,the,allowed,set,of,request,methods,the,http,methods,that,should,be,returned,in,the,cors,access,control,request,method,response,header,return,code,set,of,link,http,method,s,that,represent,the,allowed,request,methods;public,set,http,method,allowed,request,methods,return,collections,unmodifiable,set,allowed,request,methods
Netty4CorsConfig -> public Set<HttpMethod> allowedRequestMethods();1541436782;Returns the allowed set of Request Methods. The Http methods that should be returned in the_CORS 'Access-Control-Request-Method' response header.__@return {@code Set} of {@link HttpMethod}s that represent the allowed Request Methods.;public Set<HttpMethod> allowedRequestMethods() {_        return Collections.unmodifiableSet(allowedRequestMethods)__    };returns,the,allowed,set,of,request,methods,the,http,methods,that,should,be,returned,in,the,cors,access,control,request,method,response,header,return,code,set,of,link,http,method,s,that,represent,the,allowed,request,methods;public,set,http,method,allowed,request,methods,return,collections,unmodifiable,set,allowed,request,methods
Netty4CorsConfig -> public Set<String> allowedRequestHeaders();1524684173;Returns the allowed set of Request Headers.__The header names returned from this method will be used to set the CORS_'Access-Control-Allow-Headers' response header.__@return {@code Set<String>} of strings that represent the allowed Request Headers.;public Set<String> allowedRequestHeaders() {_        return Collections.unmodifiableSet(allowedRequestHeaders)__    };returns,the,allowed,set,of,request,headers,the,header,names,returned,from,this,method,will,be,used,to,set,the,cors,access,control,allow,headers,response,header,return,code,set,string,of,strings,that,represent,the,allowed,request,headers;public,set,string,allowed,request,headers,return,collections,unmodifiable,set,allowed,request,headers
Netty4CorsConfig -> public Set<String> allowedRequestHeaders();1528304883;Returns the allowed set of Request Headers.__The header names returned from this method will be used to set the CORS_'Access-Control-Allow-Headers' response header.__@return {@code Set<String>} of strings that represent the allowed Request Headers.;public Set<String> allowedRequestHeaders() {_        return Collections.unmodifiableSet(allowedRequestHeaders)__    };returns,the,allowed,set,of,request,headers,the,header,names,returned,from,this,method,will,be,used,to,set,the,cors,access,control,allow,headers,response,header,return,code,set,string,of,strings,that,represent,the,allowed,request,headers;public,set,string,allowed,request,headers,return,collections,unmodifiable,set,allowed,request,headers
Netty4CorsConfig -> public Set<String> allowedRequestHeaders();1541436782;Returns the allowed set of Request Headers.__The header names returned from this method will be used to set the CORS_'Access-Control-Allow-Headers' response header.__@return {@code Set<String>} of strings that represent the allowed Request Headers.;public Set<String> allowedRequestHeaders() {_        return Collections.unmodifiableSet(allowedRequestHeaders)__    };returns,the,allowed,set,of,request,headers,the,header,names,returned,from,this,method,will,be,used,to,set,the,cors,access,control,allow,headers,response,header,return,code,set,string,of,strings,that,represent,the,allowed,request,headers;public,set,string,allowed,request,headers,return,collections,unmodifiable,set,allowed,request,headers
