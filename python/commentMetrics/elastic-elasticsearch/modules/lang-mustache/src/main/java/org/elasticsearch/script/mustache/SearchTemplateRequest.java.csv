commented;modifiers;parameterAmount;loc;comment;code
false;public;1;3;;public void setRequest(SearchRequest request) {     this.request = request. }
false;public;0;3;;public SearchRequest getRequest() {     return request. }
false;public;1;13;;@Override public boolean equals(Object o) {     if (this == o)         return true.     if (o == null || getClass() != o.getClass())         return false.     SearchTemplateRequest request1 = (SearchTemplateRequest) o.     return simulate == request1.simulate && explain == request1.explain && profile == request1.profile && Objects.equals(request, request1.request) && scriptType == request1.scriptType && Objects.equals(script, request1.script) && Objects.equals(scriptParams, request1.scriptParams). }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(request, simulate, explain, profile, scriptType, script, scriptParams). }
false;public;0;3;;public boolean isSimulate() {     return simulate. }
false;public;1;3;;public void setSimulate(boolean simulate) {     this.simulate = simulate. }
false;public;0;3;;public boolean isExplain() {     return explain. }
false;public;1;3;;public void setExplain(boolean explain) {     this.explain = explain. }
false;public;0;3;;public boolean isProfile() {     return profile. }
false;public;1;3;;public void setProfile(boolean profile) {     this.profile = profile. }
false;public;0;3;;public ScriptType getScriptType() {     return scriptType. }
false;public;1;3;;public void setScriptType(ScriptType scriptType) {     this.scriptType = scriptType. }
false;public;0;3;;public String getScript() {     return script. }
false;public;1;3;;public void setScript(String script) {     this.script = script. }
false;public;0;3;;public Map<String, Object> getScriptParams() {     return scriptParams. }
false;public;1;3;;public void setScriptParams(Map<String, Object> scriptParams) {     this.scriptParams = scriptParams. }
false;public;0;24;;@Override public ActionRequestValidationException validate() {     ActionRequestValidationException validationException = null.     if (script == null || script.isEmpty()) {         validationException = addValidationError("template is missing", validationException).     }     if (scriptType == null) {         validationException = addValidationError("template's script type is missing", validationException).     }     if (simulate == false) {         if (request == null) {             validationException = addValidationError("search request is missing", validationException).         } else {             ActionRequestValidationException ex = request.validate().             if (ex != null) {                 if (validationException == null) {                     validationException = new ActionRequestValidationException().                 }                 validationException.addValidationErrors(ex.validationErrors()).             }         }     }     return validationException. }
false;public,static;1;3;;public static SearchTemplateRequest fromXContent(XContentParser parser) throws IOException {     return PARSER.parse(parser, new SearchTemplateRequest(), null). }
false;public;2;17;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.startObject().     if (scriptType == ScriptType.STORED) {         builder.field(ID_FIELD.getPreferredName(), script).     } else if (scriptType == ScriptType.INLINE) {         builder.field(SOURCE_FIELD.getPreferredName(), script).     } else {         throw new UnsupportedOperationException("Unrecognized script type [" + scriptType + "].").     }     return builder.field(PARAMS_FIELD.getPreferredName(), scriptParams).field(EXPLAIN_FIELD.getPreferredName(), explain).field(PROFILE_FIELD.getPreferredName(), profile).endObject(). }
false;public;1;13;;@Override public void readFrom(StreamInput in) throws IOException {     super.readFrom(in).     request = in.readOptionalWriteable(SearchRequest::new).     simulate = in.readBoolean().     explain = in.readBoolean().     profile = in.readBoolean().     scriptType = ScriptType.readFrom(in).     script = in.readOptionalString().     if (in.readBoolean()) {         scriptParams = in.readMap().     } }
false;public;1;15;;@Override public void writeTo(StreamOutput out) throws IOException {     super.writeTo(out).     out.writeOptionalStreamable(request).     out.writeBoolean(simulate).     out.writeBoolean(explain).     out.writeBoolean(profile).     scriptType.writeTo(out).     out.writeOptionalString(script).     boolean hasParams = scriptParams != null.     out.writeBoolean(hasParams).     if (hasParams) {         out.writeMap(scriptParams).     } }
