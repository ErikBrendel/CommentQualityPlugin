# id;timestamp;commentText;codeText;commentWords;codeWords
RestMultiSearchTemplateAction -> public static MultiSearchTemplateRequest parseRequest(RestRequest restRequest, boolean allowExplicitIndex) throws IOException;1524684173;Parses a {@link RestRequest} body and returns a {@link MultiSearchTemplateRequest};public static MultiSearchTemplateRequest parseRequest(RestRequest restRequest, boolean allowExplicitIndex) throws IOException {_        MultiSearchTemplateRequest multiRequest = new MultiSearchTemplateRequest()__        if (restRequest.hasParam("max_concurrent_searches")) {_            multiRequest.maxConcurrentSearchRequests(restRequest.paramAsInt("max_concurrent_searches", 0))__        }__        RestMultiSearchAction.parseMultiLineRequest(restRequest, multiRequest.indicesOptions(), allowExplicitIndex,_                (searchRequest, bytes) -> {_                    SearchTemplateRequest searchTemplateRequest = RestSearchTemplateAction.parse(bytes)__                    if (searchTemplateRequest.getScript() != null) {_                        searchTemplateRequest.setRequest(searchRequest)__                        multiRequest.add(searchTemplateRequest)__                    } else {_                        throw new IllegalArgumentException("Malformed search template")__                    }_                })__        return multiRequest__    };parses,a,link,rest,request,body,and,returns,a,link,multi,search,template,request;public,static,multi,search,template,request,parse,request,rest,request,rest,request,boolean,allow,explicit,index,throws,ioexception,multi,search,template,request,multi,request,new,multi,search,template,request,if,rest,request,has,param,multi,request,max,concurrent,search,requests,rest,request,param,as,int,0,rest,multi,search,action,parse,multi,line,request,rest,request,multi,request,indices,options,allow,explicit,index,search,request,bytes,search,template,request,search,template,request,rest,search,template,action,parse,bytes,if,search,template,request,get,script,null,search,template,request,set,request,search,request,multi,request,add,search,template,request,else,throw,new,illegal,argument,exception,malformed,search,template,return,multi,request
RestMultiSearchTemplateAction -> public static MultiSearchTemplateRequest parseRequest(RestRequest restRequest, boolean allowExplicitIndex) throws IOException;1526449283;Parses a {@link RestRequest} body and returns a {@link MultiSearchTemplateRequest};public static MultiSearchTemplateRequest parseRequest(RestRequest restRequest, boolean allowExplicitIndex) throws IOException {_        MultiSearchTemplateRequest multiRequest = new MultiSearchTemplateRequest()__        if (restRequest.hasParam("max_concurrent_searches")) {_            multiRequest.maxConcurrentSearchRequests(restRequest.paramAsInt("max_concurrent_searches", 0))__        }__        RestMultiSearchAction.parseMultiLineRequest(restRequest, multiRequest.indicesOptions(), allowExplicitIndex,_                (searchRequest, bytes) -> {_                    SearchTemplateRequest searchTemplateRequest = SearchTemplateRequest.fromXContent(bytes)__                    if (searchTemplateRequest.getScript() != null) {_                        searchTemplateRequest.setRequest(searchRequest)__                        multiRequest.add(searchTemplateRequest)__                    } else {_                        throw new IllegalArgumentException("Malformed search template")__                    }_                })__        return multiRequest__    };parses,a,link,rest,request,body,and,returns,a,link,multi,search,template,request;public,static,multi,search,template,request,parse,request,rest,request,rest,request,boolean,allow,explicit,index,throws,ioexception,multi,search,template,request,multi,request,new,multi,search,template,request,if,rest,request,has,param,multi,request,max,concurrent,search,requests,rest,request,param,as,int,0,rest,multi,search,action,parse,multi,line,request,rest,request,multi,request,indices,options,allow,explicit,index,search,request,bytes,search,template,request,search,template,request,search,template,request,from,xcontent,bytes,if,search,template,request,get,script,null,search,template,request,set,request,search,request,multi,request,add,search,template,request,else,throw,new,illegal,argument,exception,malformed,search,template,return,multi,request
RestMultiSearchTemplateAction -> public static MultiSearchTemplateRequest parseRequest(RestRequest restRequest, boolean allowExplicitIndex) throws IOException;1528762805;Parses a {@link RestRequest} body and returns a {@link MultiSearchTemplateRequest};public static MultiSearchTemplateRequest parseRequest(RestRequest restRequest, boolean allowExplicitIndex) throws IOException {_        MultiSearchTemplateRequest multiRequest = new MultiSearchTemplateRequest()__        if (restRequest.hasParam("max_concurrent_searches")) {_            multiRequest.maxConcurrentSearchRequests(restRequest.paramAsInt("max_concurrent_searches", 0))__        }__        RestMultiSearchAction.parseMultiLineRequest(restRequest, multiRequest.indicesOptions(), allowExplicitIndex,_                (searchRequest, bytes) -> {_                    SearchTemplateRequest searchTemplateRequest = SearchTemplateRequest.fromXContent(bytes)__                    if (searchTemplateRequest.getScript() != null) {_                        searchTemplateRequest.setRequest(searchRequest)__                        multiRequest.add(searchTemplateRequest)__                    } else {_                        throw new IllegalArgumentException("Malformed search template")__                    }_                })__        return multiRequest__    };parses,a,link,rest,request,body,and,returns,a,link,multi,search,template,request;public,static,multi,search,template,request,parse,request,rest,request,rest,request,boolean,allow,explicit,index,throws,ioexception,multi,search,template,request,multi,request,new,multi,search,template,request,if,rest,request,has,param,multi,request,max,concurrent,search,requests,rest,request,param,as,int,0,rest,multi,search,action,parse,multi,line,request,rest,request,multi,request,indices,options,allow,explicit,index,search,request,bytes,search,template,request,search,template,request,search,template,request,from,xcontent,bytes,if,search,template,request,get,script,null,search,template,request,set,request,search,request,multi,request,add,search,template,request,else,throw,new,illegal,argument,exception,malformed,search,template,return,multi,request
RestMultiSearchTemplateAction -> public static MultiSearchTemplateRequest parseRequest(RestRequest restRequest, boolean allowExplicitIndex) throws IOException;1543342759;Parses a {@link RestRequest} body and returns a {@link MultiSearchTemplateRequest};public static MultiSearchTemplateRequest parseRequest(RestRequest restRequest, boolean allowExplicitIndex) throws IOException {_        MultiSearchTemplateRequest multiRequest = new MultiSearchTemplateRequest()__        if (restRequest.hasParam("max_concurrent_searches")) {_            multiRequest.maxConcurrentSearchRequests(restRequest.paramAsInt("max_concurrent_searches", 0))__        }__        RestMultiSearchAction.parseMultiLineRequest(restRequest, multiRequest.indicesOptions(), allowExplicitIndex,_                (searchRequest, bytes) -> {_                    if (searchRequest.types().length > 0) {_                        deprecationLogger.deprecated(RestMultiSearchAction.TYPES_DEPRECATION_MESSAGE)__                    }_                    SearchTemplateRequest searchTemplateRequest = SearchTemplateRequest.fromXContent(bytes)__                    if (searchTemplateRequest.getScript() != null) {_                        searchTemplateRequest.setRequest(searchRequest)__                        multiRequest.add(searchTemplateRequest)__                    } else {_                        throw new IllegalArgumentException("Malformed search template")__                    }_                })__        return multiRequest__    };parses,a,link,rest,request,body,and,returns,a,link,multi,search,template,request;public,static,multi,search,template,request,parse,request,rest,request,rest,request,boolean,allow,explicit,index,throws,ioexception,multi,search,template,request,multi,request,new,multi,search,template,request,if,rest,request,has,param,multi,request,max,concurrent,search,requests,rest,request,param,as,int,0,rest,multi,search,action,parse,multi,line,request,rest,request,multi,request,indices,options,allow,explicit,index,search,request,bytes,if,search,request,types,length,0,deprecation,logger,deprecated,rest,multi,search,action,search,template,request,search,template,request,search,template,request,from,xcontent,bytes,if,search,template,request,get,script,null,search,template,request,set,request,search,request,multi,request,add,search,template,request,else,throw,new,illegal,argument,exception,malformed,search,template,return,multi,request
RestMultiSearchTemplateAction -> public static MultiSearchTemplateRequest parseRequest(RestRequest restRequest, boolean allowExplicitIndex) throws IOException;1543512976;Parses a {@link RestRequest} body and returns a {@link MultiSearchTemplateRequest};public static MultiSearchTemplateRequest parseRequest(RestRequest restRequest, boolean allowExplicitIndex) throws IOException {_        MultiSearchTemplateRequest multiRequest = new MultiSearchTemplateRequest()__        if (restRequest.hasParam("max_concurrent_searches")) {_            multiRequest.maxConcurrentSearchRequests(restRequest.paramAsInt("max_concurrent_searches", 0))__        }__        RestMultiSearchAction.parseMultiLineRequest(restRequest, multiRequest.indicesOptions(), allowExplicitIndex,_                (searchRequest, bytes) -> {_                    if (searchRequest.types().length > 0) {_                        deprecationLogger.deprecated(RestMultiSearchAction.TYPES_DEPRECATION_MESSAGE)__                    }_                    SearchTemplateRequest searchTemplateRequest = SearchTemplateRequest.fromXContent(bytes)__                    if (searchTemplateRequest.getScript() != null) {_                        searchTemplateRequest.setRequest(searchRequest)__                        multiRequest.add(searchTemplateRequest)__                    } else {_                        throw new IllegalArgumentException("Malformed search template")__                    }_                })__        return multiRequest__    };parses,a,link,rest,request,body,and,returns,a,link,multi,search,template,request;public,static,multi,search,template,request,parse,request,rest,request,rest,request,boolean,allow,explicit,index,throws,ioexception,multi,search,template,request,multi,request,new,multi,search,template,request,if,rest,request,has,param,multi,request,max,concurrent,search,requests,rest,request,param,as,int,0,rest,multi,search,action,parse,multi,line,request,rest,request,multi,request,indices,options,allow,explicit,index,search,request,bytes,if,search,request,types,length,0,deprecation,logger,deprecated,rest,multi,search,action,search,template,request,search,template,request,search,template,request,from,xcontent,bytes,if,search,template,request,get,script,null,search,template,request,set,request,search,request,multi,request,add,search,template,request,else,throw,new,illegal,argument,exception,malformed,search,template,return,multi,request
RestMultiSearchTemplateAction -> public static MultiSearchTemplateRequest parseRequest(RestRequest restRequest, boolean allowExplicitIndex) throws IOException;1544035746;Parses a {@link RestRequest} body and returns a {@link MultiSearchTemplateRequest};public static MultiSearchTemplateRequest parseRequest(RestRequest restRequest, boolean allowExplicitIndex) throws IOException {_        MultiSearchTemplateRequest multiRequest = new MultiSearchTemplateRequest()__        if (restRequest.hasParam("max_concurrent_searches")) {_            multiRequest.maxConcurrentSearchRequests(restRequest.paramAsInt("max_concurrent_searches", 0))__        }__        RestMultiSearchAction.parseMultiLineRequest(restRequest, multiRequest.indicesOptions(), allowExplicitIndex,_                (searchRequest, bytes) -> {_                    if (searchRequest.types().length > 0) {_                        deprecationLogger.deprecated(RestMultiSearchAction.TYPES_DEPRECATION_MESSAGE)__                    }_                    SearchTemplateRequest searchTemplateRequest = SearchTemplateRequest.fromXContent(bytes)__                    if (searchTemplateRequest.getScript() != null) {_                        searchTemplateRequest.setRequest(searchRequest)__                        multiRequest.add(searchTemplateRequest)__                    } else {_                        throw new IllegalArgumentException("Malformed search template")__                    }_                })__        return multiRequest__    };parses,a,link,rest,request,body,and,returns,a,link,multi,search,template,request;public,static,multi,search,template,request,parse,request,rest,request,rest,request,boolean,allow,explicit,index,throws,ioexception,multi,search,template,request,multi,request,new,multi,search,template,request,if,rest,request,has,param,multi,request,max,concurrent,search,requests,rest,request,param,as,int,0,rest,multi,search,action,parse,multi,line,request,rest,request,multi,request,indices,options,allow,explicit,index,search,request,bytes,if,search,request,types,length,0,deprecation,logger,deprecated,rest,multi,search,action,search,template,request,search,template,request,search,template,request,from,xcontent,bytes,if,search,template,request,get,script,null,search,template,request,set,request,search,request,multi,request,add,search,template,request,else,throw,new,illegal,argument,exception,malformed,search,template,return,multi,request
RestMultiSearchTemplateAction -> public static MultiSearchTemplateRequest parseRequest(RestRequest restRequest, boolean allowExplicitIndex) throws IOException;1544210484;Parses a {@link RestRequest} body and returns a {@link MultiSearchTemplateRequest};public static MultiSearchTemplateRequest parseRequest(RestRequest restRequest, boolean allowExplicitIndex) throws IOException {_        MultiSearchTemplateRequest multiRequest = new MultiSearchTemplateRequest()__        if (restRequest.hasParam("max_concurrent_searches")) {_            multiRequest.maxConcurrentSearchRequests(restRequest.paramAsInt("max_concurrent_searches", 0))__        }__        RestMultiSearchAction.parseMultiLineRequest(restRequest, multiRequest.indicesOptions(), allowExplicitIndex,_                (searchRequest, bytes) -> {_                    if (searchRequest.types().length > 0) {_                        deprecationLogger.deprecatedAndMaybeLog("msearch_template_with_types",_                            RestMultiSearchAction.TYPES_DEPRECATION_MESSAGE)__                    }_                    SearchTemplateRequest searchTemplateRequest = SearchTemplateRequest.fromXContent(bytes)__                    if (searchTemplateRequest.getScript() != null) {_                        searchTemplateRequest.setRequest(searchRequest)__                        multiRequest.add(searchTemplateRequest)__                    } else {_                        throw new IllegalArgumentException("Malformed search template")__                    }_                })__        return multiRequest__    };parses,a,link,rest,request,body,and,returns,a,link,multi,search,template,request;public,static,multi,search,template,request,parse,request,rest,request,rest,request,boolean,allow,explicit,index,throws,ioexception,multi,search,template,request,multi,request,new,multi,search,template,request,if,rest,request,has,param,multi,request,max,concurrent,search,requests,rest,request,param,as,int,0,rest,multi,search,action,parse,multi,line,request,rest,request,multi,request,indices,options,allow,explicit,index,search,request,bytes,if,search,request,types,length,0,deprecation,logger,deprecated,and,maybe,log,rest,multi,search,action,search,template,request,search,template,request,search,template,request,from,xcontent,bytes,if,search,template,request,get,script,null,search,template,request,set,request,search,request,multi,request,add,search,template,request,else,throw,new,illegal,argument,exception,malformed,search,template,return,multi,request
RestMultiSearchTemplateAction -> public static MultiSearchTemplateRequest parseRequest(RestRequest restRequest, boolean allowExplicitIndex) throws IOException;1544223047;Parses a {@link RestRequest} body and returns a {@link MultiSearchTemplateRequest};public static MultiSearchTemplateRequest parseRequest(RestRequest restRequest, boolean allowExplicitIndex) throws IOException {_        MultiSearchTemplateRequest multiRequest = new MultiSearchTemplateRequest()__        if (restRequest.hasParam("max_concurrent_searches")) {_            multiRequest.maxConcurrentSearchRequests(restRequest.paramAsInt("max_concurrent_searches", 0))__        }__        RestMultiSearchAction.parseMultiLineRequest(restRequest, multiRequest.indicesOptions(), allowExplicitIndex,_                (searchRequest, bytes) -> {_                    if (searchRequest.types().length > 0) {_                        deprecationLogger.deprecatedAndMaybeLog("msearch_template_with_types", TYPES_DEPRECATION_MESSAGE)__                    }_                    SearchTemplateRequest searchTemplateRequest = SearchTemplateRequest.fromXContent(bytes)__                    if (searchTemplateRequest.getScript() != null) {_                        searchTemplateRequest.setRequest(searchRequest)__                        multiRequest.add(searchTemplateRequest)__                    } else {_                        throw new IllegalArgumentException("Malformed search template")__                    }_                })__        return multiRequest__    };parses,a,link,rest,request,body,and,returns,a,link,multi,search,template,request;public,static,multi,search,template,request,parse,request,rest,request,rest,request,boolean,allow,explicit,index,throws,ioexception,multi,search,template,request,multi,request,new,multi,search,template,request,if,rest,request,has,param,multi,request,max,concurrent,search,requests,rest,request,param,as,int,0,rest,multi,search,action,parse,multi,line,request,rest,request,multi,request,indices,options,allow,explicit,index,search,request,bytes,if,search,request,types,length,0,deprecation,logger,deprecated,and,maybe,log,search,template,request,search,template,request,search,template,request,from,xcontent,bytes,if,search,template,request,get,script,null,search,template,request,set,request,search,request,multi,request,add,search,template,request,else,throw,new,illegal,argument,exception,malformed,search,template,return,multi,request
RestMultiSearchTemplateAction -> public static MultiSearchTemplateRequest parseRequest(RestRequest restRequest, boolean allowExplicitIndex) throws IOException;1545358001;Parses a {@link RestRequest} body and returns a {@link MultiSearchTemplateRequest};public static MultiSearchTemplateRequest parseRequest(RestRequest restRequest, boolean allowExplicitIndex) throws IOException {_        MultiSearchTemplateRequest multiRequest = new MultiSearchTemplateRequest()__        if (restRequest.hasParam("max_concurrent_searches")) {_            multiRequest.maxConcurrentSearchRequests(restRequest.paramAsInt("max_concurrent_searches", 0))__        }__        RestMultiSearchAction.parseMultiLineRequest(restRequest, multiRequest.indicesOptions(), allowExplicitIndex,_                (searchRequest, bytes) -> {_                    if (searchRequest.types().length > 0) {_                        deprecationLogger.deprecatedAndMaybeLog("msearch_template_with_types", TYPES_DEPRECATION_MESSAGE)__                    }_                    SearchTemplateRequest searchTemplateRequest = SearchTemplateRequest.fromXContent(bytes)__                    if (searchTemplateRequest.getScript() != null) {_                        searchTemplateRequest.setRequest(searchRequest)__                        multiRequest.add(searchTemplateRequest)__                    } else {_                        throw new IllegalArgumentException("Malformed search template")__                    }_                })__        return multiRequest__    };parses,a,link,rest,request,body,and,returns,a,link,multi,search,template,request;public,static,multi,search,template,request,parse,request,rest,request,rest,request,boolean,allow,explicit,index,throws,ioexception,multi,search,template,request,multi,request,new,multi,search,template,request,if,rest,request,has,param,multi,request,max,concurrent,search,requests,rest,request,param,as,int,0,rest,multi,search,action,parse,multi,line,request,rest,request,multi,request,indices,options,allow,explicit,index,search,request,bytes,if,search,request,types,length,0,deprecation,logger,deprecated,and,maybe,log,search,template,request,search,template,request,search,template,request,from,xcontent,bytes,if,search,template,request,get,script,null,search,template,request,set,request,search,request,multi,request,add,search,template,request,else,throw,new,illegal,argument,exception,malformed,search,template,return,multi,request
RestMultiSearchTemplateAction -> public static MultiSearchTemplateRequest parseRequest(RestRequest restRequest, boolean allowExplicitIndex) throws IOException;1546630609;Parses a {@link RestRequest} body and returns a {@link MultiSearchTemplateRequest};public static MultiSearchTemplateRequest parseRequest(RestRequest restRequest, boolean allowExplicitIndex) throws IOException {_        MultiSearchTemplateRequest multiRequest = new MultiSearchTemplateRequest()__        if (restRequest.hasParam("max_concurrent_searches")) {_            multiRequest.maxConcurrentSearchRequests(restRequest.paramAsInt("max_concurrent_searches", 0))__        }__        RestMultiSearchAction.parseMultiLineRequest(restRequest, multiRequest.indicesOptions(), allowExplicitIndex,_                (searchRequest, bytes) -> {_                    if (searchRequest.types().length > 0) {_                        deprecationLogger.deprecatedAndMaybeLog("msearch_template_with_types", TYPES_DEPRECATION_MESSAGE)__                    }_                    SearchTemplateRequest searchTemplateRequest = SearchTemplateRequest.fromXContent(bytes)__                    if (searchTemplateRequest.getScript() != null) {_                        searchTemplateRequest.setRequest(searchRequest)__                        multiRequest.add(searchTemplateRequest)__                    } else {_                        throw new IllegalArgumentException("Malformed search template")__                    }_                    RestSearchAction.checkRestTotalHits(restRequest, searchRequest)__                })__        return multiRequest__    };parses,a,link,rest,request,body,and,returns,a,link,multi,search,template,request;public,static,multi,search,template,request,parse,request,rest,request,rest,request,boolean,allow,explicit,index,throws,ioexception,multi,search,template,request,multi,request,new,multi,search,template,request,if,rest,request,has,param,multi,request,max,concurrent,search,requests,rest,request,param,as,int,0,rest,multi,search,action,parse,multi,line,request,rest,request,multi,request,indices,options,allow,explicit,index,search,request,bytes,if,search,request,types,length,0,deprecation,logger,deprecated,and,maybe,log,search,template,request,search,template,request,search,template,request,from,xcontent,bytes,if,search,template,request,get,script,null,search,template,request,set,request,search,request,multi,request,add,search,template,request,else,throw,new,illegal,argument,exception,malformed,search,template,rest,search,action,check,rest,total,hits,rest,request,search,request,return,multi,request
RestMultiSearchTemplateAction -> public static MultiSearchTemplateRequest parseRequest(RestRequest restRequest, boolean allowExplicitIndex) throws IOException;1547584712;Parses a {@link RestRequest} body and returns a {@link MultiSearchTemplateRequest};public static MultiSearchTemplateRequest parseRequest(RestRequest restRequest, boolean allowExplicitIndex) throws IOException {_        MultiSearchTemplateRequest multiRequest = new MultiSearchTemplateRequest()__        if (restRequest.hasParam("max_concurrent_searches")) {_            multiRequest.maxConcurrentSearchRequests(restRequest.paramAsInt("max_concurrent_searches", 0))__        }__        RestMultiSearchAction.parseMultiLineRequest(restRequest, multiRequest.indicesOptions(), allowExplicitIndex,_                (searchRequest, bytes) -> {_                    SearchTemplateRequest searchTemplateRequest = SearchTemplateRequest.fromXContent(bytes)__                    if (searchTemplateRequest.getScript() != null) {_                        searchTemplateRequest.setRequest(searchRequest)__                        multiRequest.add(searchTemplateRequest)__                    } else {_                        throw new IllegalArgumentException("Malformed search template")__                    }_                    RestSearchAction.checkRestTotalHits(restRequest, searchRequest)__                })__        return multiRequest__    };parses,a,link,rest,request,body,and,returns,a,link,multi,search,template,request;public,static,multi,search,template,request,parse,request,rest,request,rest,request,boolean,allow,explicit,index,throws,ioexception,multi,search,template,request,multi,request,new,multi,search,template,request,if,rest,request,has,param,multi,request,max,concurrent,search,requests,rest,request,param,as,int,0,rest,multi,search,action,parse,multi,line,request,rest,request,multi,request,indices,options,allow,explicit,index,search,request,bytes,search,template,request,search,template,request,search,template,request,from,xcontent,bytes,if,search,template,request,get,script,null,search,template,request,set,request,search,request,multi,request,add,search,template,request,else,throw,new,illegal,argument,exception,malformed,search,template,rest,search,action,check,rest,total,hits,rest,request,search,request,return,multi,request
