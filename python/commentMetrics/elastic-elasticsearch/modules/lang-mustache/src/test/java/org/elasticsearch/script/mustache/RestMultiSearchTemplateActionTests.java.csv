commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Before public void setUpAction() {     new RestMultiSearchTemplateAction(Settings.EMPTY, controller()). }
false;public;0;14;;public void testTypeInPath() {     String content = "{ \"index\": \"some_index\" } \n" + "{\"source\": {\"query\" : {\"match_all\" :{}}}} \n".     BytesArray bytesContent = new BytesArray(content.getBytes(StandardCharsets.UTF_8)).     RestRequest request = new FakeRestRequest.Builder(xContentRegistry()).withMethod(RestRequest.Method.GET).withPath("/some_index/some_type/_msearch/template").withContent(bytesContent, XContentType.JSON).build().     dispatchRequest(request).     assertWarnings(RestMultiSearchTemplateAction.TYPES_DEPRECATION_MESSAGE). }
false;public;0;13;;public void testTypeInBody() {     String content = "{ \"index\": \"some_index\", \"type\": \"some_type\" } \n" + "{\"source\": {\"query\" : {\"match_all\" :{}}}} \n".     BytesArray bytesContent = new BytesArray(content.getBytes(StandardCharsets.UTF_8)).     RestRequest request = new FakeRestRequest.Builder(xContentRegistry()).withPath("/some_index/_msearch/template").withContent(bytesContent, XContentType.JSON).build().     dispatchRequest(request).     assertWarnings(RestMultiSearchTemplateAction.TYPES_DEPRECATION_MESSAGE). }
