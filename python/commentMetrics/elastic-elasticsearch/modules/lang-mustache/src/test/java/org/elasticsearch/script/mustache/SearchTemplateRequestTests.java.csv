commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected SearchTemplateRequest createBlankInstance() {     return new SearchTemplateRequest(). }
false;protected;0;4;;@Override protected SearchTemplateRequest createTestInstance() {     return createRandomRequest(). }
false;protected;1;28;;@Override protected SearchTemplateRequest mutateInstance(SearchTemplateRequest instance) throws IOException {     List<Consumer<SearchTemplateRequest>> mutators = new ArrayList<>().     mutators.add(request -> request.setScriptType(randomValueOtherThan(request.getScriptType(), () -> randomFrom(ScriptType.values())))).     mutators.add(request -> request.setScript(randomValueOtherThan(request.getScript(), () -> randomAlphaOfLength(50)))).     mutators.add(request -> {         Map<String, Object> mutatedScriptParams = new HashMap<>(request.getScriptParams()).         String newField = randomValueOtherThanMany(mutatedScriptParams::containsKey, () -> randomAlphaOfLength(5)).         mutatedScriptParams.put(newField, randomAlphaOfLength(10)).         request.setScriptParams(mutatedScriptParams).     }).     mutators.add(request -> request.setProfile(!request.isProfile())).     mutators.add(request -> request.setExplain(!request.isExplain())).     mutators.add(request -> request.setSimulate(!request.isSimulate())).     mutators.add(request -> request.setRequest(RandomSearchRequestGenerator.randomSearchRequest(SearchSourceBuilder::searchSource))).     SearchTemplateRequest mutatedInstance = copyInstance(instance).     Consumer<SearchTemplateRequest> mutator = randomFrom(mutators).     mutator.accept(mutatedInstance).     return mutatedInstance. }
false;public,static;0;19;;public static SearchTemplateRequest createRandomRequest() {     SearchTemplateRequest request = new SearchTemplateRequest().     request.setScriptType(randomFrom(ScriptType.values())).     request.setScript(randomAlphaOfLength(50)).     Map<String, Object> scriptParams = new HashMap<>().     for (int i = 0. i < randomInt(10). i++) {         scriptParams.put(randomAlphaOfLength(5), randomAlphaOfLength(10)).     }     request.setScriptParams(scriptParams).     request.setExplain(randomBoolean()).     request.setProfile(randomBoolean()).     request.setSimulate(randomBoolean()).     request.setRequest(RandomSearchRequestGenerator.randomSearchRequest(SearchSourceBuilder::searchSource)).     return request. }
