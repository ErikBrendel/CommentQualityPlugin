# id;timestamp;commentText;codeText;commentWords;codeWords
SearchTemplateIT -> public void testTemplateQueryAsEscapedString() throws Exception;1524684173;Test that template can be expressed as a single escaped string.;public void testTemplateQueryAsEscapedString() throws Exception {_        SearchRequest searchRequest = new SearchRequest()__        searchRequest.indices("_all")__        String query =_                  "{" + "  \"source\" : \"{ \\\"size\\\": \\\"{{size}}\\\", \\\"query\\\":{\\\"match_all\\\":{}}}\","_                + "  \"params\":{"_                + "    \"size\": 1"_                + "  }"_                + "}"__        SearchTemplateRequest request = RestSearchTemplateAction.parse(createParser(JsonXContent.jsonXContent, query))__        request.setRequest(searchRequest)__        SearchTemplateResponse searchResponse = client().execute(SearchTemplateAction.INSTANCE, request).get()__        assertThat(searchResponse.getResponse().getHits().getHits().length, equalTo(1))__    };test,that,template,can,be,expressed,as,a,single,escaped,string;public,void,test,template,query,as,escaped,string,throws,exception,search,request,search,request,new,search,request,search,request,indices,string,query,source,size,size,query,params,size,1,search,template,request,request,rest,search,template,action,parse,create,parser,json,xcontent,json,xcontent,query,request,set,request,search,request,search,template,response,search,response,client,execute,search,template,action,instance,request,get,assert,that,search,response,get,response,get,hits,get,hits,length,equal,to,1
SearchTemplateIT -> public void testTemplateQueryAsEscapedString() throws Exception;1526449283;Test that template can be expressed as a single escaped string.;public void testTemplateQueryAsEscapedString() throws Exception {_        SearchRequest searchRequest = new SearchRequest()__        searchRequest.indices("_all")__        String query =_                  "{" + "  \"source\" : \"{ \\\"size\\\": \\\"{{size}}\\\", \\\"query\\\":{\\\"match_all\\\":{}}}\","_                + "  \"params\":{"_                + "    \"size\": 1"_                + "  }"_                + "}"__        SearchTemplateRequest request = SearchTemplateRequest.fromXContent(createParser(JsonXContent.jsonXContent, query))__        request.setRequest(searchRequest)__        SearchTemplateResponse searchResponse = client().execute(SearchTemplateAction.INSTANCE, request).get()__        assertThat(searchResponse.getResponse().getHits().getHits().length, equalTo(1))__    };test,that,template,can,be,expressed,as,a,single,escaped,string;public,void,test,template,query,as,escaped,string,throws,exception,search,request,search,request,new,search,request,search,request,indices,string,query,source,size,size,query,params,size,1,search,template,request,request,search,template,request,from,xcontent,create,parser,json,xcontent,json,xcontent,query,request,set,request,search,request,search,template,response,search,response,client,execute,search,template,action,instance,request,get,assert,that,search,response,get,response,get,hits,get,hits,length,equal,to,1
SearchTemplateIT -> public void testTemplateQueryAsEscapedString() throws Exception;1527622193;Test that template can be expressed as a single escaped string.;public void testTemplateQueryAsEscapedString() throws Exception {_        SearchRequest searchRequest = new SearchRequest()__        searchRequest.indices("_all")__        String query =_                  "{" + "  \"source\" : \"{ \\\"size\\\": \\\"{{size}}\\\", \\\"query\\\":{\\\"match_all\\\":{}}}\","_                + "  \"params\":{"_                + "    \"size\": 1"_                + "  }"_                + "}"__        SearchTemplateRequest request = SearchTemplateRequest.fromXContent(createParser(JsonXContent.jsonXContent, query))__        request.setRequest(searchRequest)__        SearchTemplateResponse searchResponse = client().execute(SearchTemplateAction.INSTANCE, request).get()__        assertThat(searchResponse.getResponse().getHits().getHits().length, equalTo(1))__    };test,that,template,can,be,expressed,as,a,single,escaped,string;public,void,test,template,query,as,escaped,string,throws,exception,search,request,search,request,new,search,request,search,request,indices,string,query,source,size,size,query,params,size,1,search,template,request,request,search,template,request,from,xcontent,create,parser,json,xcontent,json,xcontent,query,request,set,request,search,request,search,template,response,search,response,client,execute,search,template,action,instance,request,get,assert,that,search,response,get,response,get,hits,get,hits,length,equal,to,1
SearchTemplateIT -> public void testTemplateQueryAsEscapedString() throws Exception;1531179852;Test that template can be expressed as a single escaped string.;public void testTemplateQueryAsEscapedString() throws Exception {_        SearchRequest searchRequest = new SearchRequest()__        searchRequest.indices("_all")__        String query =_                  "{" + "  \"source\" : \"{ \\\"size\\\": \\\"{{size}}\\\", \\\"query\\\":{\\\"match_all\\\":{}}}\","_                + "  \"params\":{"_                + "    \"size\": 1"_                + "  }"_                + "}"__        SearchTemplateRequest request = SearchTemplateRequest.fromXContent(createParser(JsonXContent.jsonXContent, query))__        request.setRequest(searchRequest)__        SearchTemplateResponse searchResponse = client().execute(SearchTemplateAction.INSTANCE, request).get()__        assertThat(searchResponse.getResponse().getHits().getHits().length, equalTo(1))__    };test,that,template,can,be,expressed,as,a,single,escaped,string;public,void,test,template,query,as,escaped,string,throws,exception,search,request,search,request,new,search,request,search,request,indices,string,query,source,size,size,query,params,size,1,search,template,request,request,search,template,request,from,xcontent,create,parser,json,xcontent,json,xcontent,query,request,set,request,search,request,search,template,response,search,response,client,execute,search,template,action,instance,request,get,assert,that,search,response,get,response,get,hits,get,hits,length,equal,to,1
SearchTemplateIT -> public void testTemplateQueryAsEscapedStringStartingWithConditionalClause() throws Exception;1524684173;Test that template can contain conditional clause. In this case it is at_the beginning of the string.;public void testTemplateQueryAsEscapedStringStartingWithConditionalClause() throws Exception {_        SearchRequest searchRequest = new SearchRequest()__        searchRequest.indices("_all")__        String templateString =_                  "{"_                + "  \"source\" : \"{ {{#use_size}} \\\"size\\\": \\\"{{size}}\\\", {{/use_size}} \\\"query\\\":{\\\"match_all\\\":{}}}\","_                + "  \"params\":{"_                + "    \"size\": 1,"_                + "    \"use_size\": true"_                + "  }"_                + "}"__        SearchTemplateRequest request = RestSearchTemplateAction.parse(createParser(JsonXContent.jsonXContent, templateString))__        request.setRequest(searchRequest)__        SearchTemplateResponse searchResponse = client().execute(SearchTemplateAction.INSTANCE, request).get()__        assertThat(searchResponse.getResponse().getHits().getHits().length, equalTo(1))__    };test,that,template,can,contain,conditional,clause,in,this,case,it,is,at,the,beginning,of,the,string;public,void,test,template,query,as,escaped,string,starting,with,conditional,clause,throws,exception,search,request,search,request,new,search,request,search,request,indices,string,template,string,source,size,size,query,params,size,1,true,search,template,request,request,rest,search,template,action,parse,create,parser,json,xcontent,json,xcontent,template,string,request,set,request,search,request,search,template,response,search,response,client,execute,search,template,action,instance,request,get,assert,that,search,response,get,response,get,hits,get,hits,length,equal,to,1
SearchTemplateIT -> public void testTemplateQueryAsEscapedStringStartingWithConditionalClause() throws Exception;1526449283;Test that template can contain conditional clause. In this case it is at_the beginning of the string.;public void testTemplateQueryAsEscapedStringStartingWithConditionalClause() throws Exception {_        SearchRequest searchRequest = new SearchRequest()__        searchRequest.indices("_all")__        String templateString =_                  "{"_                + "  \"source\" : \"{ {{#use_size}} \\\"size\\\": \\\"{{size}}\\\", {{/use_size}} \\\"query\\\":{\\\"match_all\\\":{}}}\","_                + "  \"params\":{"_                + "    \"size\": 1,"_                + "    \"use_size\": true"_                + "  }"_                + "}"__        SearchTemplateRequest request = SearchTemplateRequest.fromXContent(createParser(JsonXContent.jsonXContent, templateString))__        request.setRequest(searchRequest)__        SearchTemplateResponse searchResponse = client().execute(SearchTemplateAction.INSTANCE, request).get()__        assertThat(searchResponse.getResponse().getHits().getHits().length, equalTo(1))__    };test,that,template,can,contain,conditional,clause,in,this,case,it,is,at,the,beginning,of,the,string;public,void,test,template,query,as,escaped,string,starting,with,conditional,clause,throws,exception,search,request,search,request,new,search,request,search,request,indices,string,template,string,source,size,size,query,params,size,1,true,search,template,request,request,search,template,request,from,xcontent,create,parser,json,xcontent,json,xcontent,template,string,request,set,request,search,request,search,template,response,search,response,client,execute,search,template,action,instance,request,get,assert,that,search,response,get,response,get,hits,get,hits,length,equal,to,1
SearchTemplateIT -> public void testTemplateQueryAsEscapedStringStartingWithConditionalClause() throws Exception;1527622193;Test that template can contain conditional clause. In this case it is at_the beginning of the string.;public void testTemplateQueryAsEscapedStringStartingWithConditionalClause() throws Exception {_        SearchRequest searchRequest = new SearchRequest()__        searchRequest.indices("_all")__        String templateString =_                  "{"_                + "  \"source\" : \"{ {{#use_size}} \\\"size\\\": \\\"{{size}}\\\", {{/use_size}} \\\"query\\\":{\\\"match_all\\\":{}}}\","_                + "  \"params\":{"_                + "    \"size\": 1,"_                + "    \"use_size\": true"_                + "  }"_                + "}"__        SearchTemplateRequest request = SearchTemplateRequest.fromXContent(createParser(JsonXContent.jsonXContent, templateString))__        request.setRequest(searchRequest)__        SearchTemplateResponse searchResponse = client().execute(SearchTemplateAction.INSTANCE, request).get()__        assertThat(searchResponse.getResponse().getHits().getHits().length, equalTo(1))__    };test,that,template,can,contain,conditional,clause,in,this,case,it,is,at,the,beginning,of,the,string;public,void,test,template,query,as,escaped,string,starting,with,conditional,clause,throws,exception,search,request,search,request,new,search,request,search,request,indices,string,template,string,source,size,size,query,params,size,1,true,search,template,request,request,search,template,request,from,xcontent,create,parser,json,xcontent,json,xcontent,template,string,request,set,request,search,request,search,template,response,search,response,client,execute,search,template,action,instance,request,get,assert,that,search,response,get,response,get,hits,get,hits,length,equal,to,1
SearchTemplateIT -> public void testTemplateQueryAsEscapedStringStartingWithConditionalClause() throws Exception;1531179852;Test that template can contain conditional clause. In this case it is at_the beginning of the string.;public void testTemplateQueryAsEscapedStringStartingWithConditionalClause() throws Exception {_        SearchRequest searchRequest = new SearchRequest()__        searchRequest.indices("_all")__        String templateString =_                  "{"_                + "  \"source\" : \"{ {{#use_size}} \\\"size\\\": \\\"{{size}}\\\", {{/use_size}} \\\"query\\\":{\\\"match_all\\\":{}}}\","_                + "  \"params\":{"_                + "    \"size\": 1,"_                + "    \"use_size\": true"_                + "  }"_                + "}"__        SearchTemplateRequest request = SearchTemplateRequest.fromXContent(createParser(JsonXContent.jsonXContent, templateString))__        request.setRequest(searchRequest)__        SearchTemplateResponse searchResponse = client().execute(SearchTemplateAction.INSTANCE, request).get()__        assertThat(searchResponse.getResponse().getHits().getHits().length, equalTo(1))__    };test,that,template,can,contain,conditional,clause,in,this,case,it,is,at,the,beginning,of,the,string;public,void,test,template,query,as,escaped,string,starting,with,conditional,clause,throws,exception,search,request,search,request,new,search,request,search,request,indices,string,template,string,source,size,size,query,params,size,1,true,search,template,request,request,search,template,request,from,xcontent,create,parser,json,xcontent,json,xcontent,template,string,request,set,request,search,request,search,template,response,search,response,client,execute,search,template,action,instance,request,get,assert,that,search,response,get,response,get,hits,get,hits,length,equal,to,1
SearchTemplateIT -> public void testTemplateQueryAsEscapedStringWithConditionalClauseAtEnd() throws Exception;1524684173;Test that template can contain conditional clause. In this case it is at_the end of the string.;public void testTemplateQueryAsEscapedStringWithConditionalClauseAtEnd() throws Exception {_        SearchRequest searchRequest = new SearchRequest()__        searchRequest.indices("_all")__        String templateString =_                  "{"_                + "  \"source\" : \"{ \\\"query\\\":{\\\"match_all\\\":{}} {{#use_size}}, \\\"size\\\": \\\"{{size}}\\\" {{/use_size}} }\","_                + "  \"params\":{"_                + "    \"size\": 1,"_                + "    \"use_size\": true"_                + "  }"_                + "}"__        SearchTemplateRequest request = RestSearchTemplateAction.parse(createParser(JsonXContent.jsonXContent, templateString))__        request.setRequest(searchRequest)__        SearchTemplateResponse searchResponse = client().execute(SearchTemplateAction.INSTANCE, request).get()__        assertThat(searchResponse.getResponse().getHits().getHits().length, equalTo(1))__    };test,that,template,can,contain,conditional,clause,in,this,case,it,is,at,the,end,of,the,string;public,void,test,template,query,as,escaped,string,with,conditional,clause,at,end,throws,exception,search,request,search,request,new,search,request,search,request,indices,string,template,string,source,query,size,size,params,size,1,true,search,template,request,request,rest,search,template,action,parse,create,parser,json,xcontent,json,xcontent,template,string,request,set,request,search,request,search,template,response,search,response,client,execute,search,template,action,instance,request,get,assert,that,search,response,get,response,get,hits,get,hits,length,equal,to,1
SearchTemplateIT -> public void testTemplateQueryAsEscapedStringWithConditionalClauseAtEnd() throws Exception;1526449283;Test that template can contain conditional clause. In this case it is at_the end of the string.;public void testTemplateQueryAsEscapedStringWithConditionalClauseAtEnd() throws Exception {_        SearchRequest searchRequest = new SearchRequest()__        searchRequest.indices("_all")__        String templateString =_                  "{"_                + "  \"source\" : \"{ \\\"query\\\":{\\\"match_all\\\":{}} {{#use_size}}, \\\"size\\\": \\\"{{size}}\\\" {{/use_size}} }\","_                + "  \"params\":{"_                + "    \"size\": 1,"_                + "    \"use_size\": true"_                + "  }"_                + "}"__        SearchTemplateRequest request = SearchTemplateRequest.fromXContent(createParser(JsonXContent.jsonXContent, templateString))__        request.setRequest(searchRequest)__        SearchTemplateResponse searchResponse = client().execute(SearchTemplateAction.INSTANCE, request).get()__        assertThat(searchResponse.getResponse().getHits().getHits().length, equalTo(1))__    };test,that,template,can,contain,conditional,clause,in,this,case,it,is,at,the,end,of,the,string;public,void,test,template,query,as,escaped,string,with,conditional,clause,at,end,throws,exception,search,request,search,request,new,search,request,search,request,indices,string,template,string,source,query,size,size,params,size,1,true,search,template,request,request,search,template,request,from,xcontent,create,parser,json,xcontent,json,xcontent,template,string,request,set,request,search,request,search,template,response,search,response,client,execute,search,template,action,instance,request,get,assert,that,search,response,get,response,get,hits,get,hits,length,equal,to,1
SearchTemplateIT -> public void testTemplateQueryAsEscapedStringWithConditionalClauseAtEnd() throws Exception;1527622193;Test that template can contain conditional clause. In this case it is at_the end of the string.;public void testTemplateQueryAsEscapedStringWithConditionalClauseAtEnd() throws Exception {_        SearchRequest searchRequest = new SearchRequest()__        searchRequest.indices("_all")__        String templateString =_                  "{"_                + "  \"source\" : \"{ \\\"query\\\":{\\\"match_all\\\":{}} {{#use_size}}, \\\"size\\\": \\\"{{size}}\\\" {{/use_size}} }\","_                + "  \"params\":{"_                + "    \"size\": 1,"_                + "    \"use_size\": true"_                + "  }"_                + "}"__        SearchTemplateRequest request = SearchTemplateRequest.fromXContent(createParser(JsonXContent.jsonXContent, templateString))__        request.setRequest(searchRequest)__        SearchTemplateResponse searchResponse = client().execute(SearchTemplateAction.INSTANCE, request).get()__        assertThat(searchResponse.getResponse().getHits().getHits().length, equalTo(1))__    };test,that,template,can,contain,conditional,clause,in,this,case,it,is,at,the,end,of,the,string;public,void,test,template,query,as,escaped,string,with,conditional,clause,at,end,throws,exception,search,request,search,request,new,search,request,search,request,indices,string,template,string,source,query,size,size,params,size,1,true,search,template,request,request,search,template,request,from,xcontent,create,parser,json,xcontent,json,xcontent,template,string,request,set,request,search,request,search,template,response,search,response,client,execute,search,template,action,instance,request,get,assert,that,search,response,get,response,get,hits,get,hits,length,equal,to,1
SearchTemplateIT -> public void testTemplateQueryAsEscapedStringWithConditionalClauseAtEnd() throws Exception;1531179852;Test that template can contain conditional clause. In this case it is at_the end of the string.;public void testTemplateQueryAsEscapedStringWithConditionalClauseAtEnd() throws Exception {_        SearchRequest searchRequest = new SearchRequest()__        searchRequest.indices("_all")__        String templateString =_                  "{"_                + "  \"source\" : \"{ \\\"query\\\":{\\\"match_all\\\":{}} {{#use_size}}, \\\"size\\\": \\\"{{size}}\\\" {{/use_size}} }\","_                + "  \"params\":{"_                + "    \"size\": 1,"_                + "    \"use_size\": true"_                + "  }"_                + "}"__        SearchTemplateRequest request = SearchTemplateRequest.fromXContent(createParser(JsonXContent.jsonXContent, templateString))__        request.setRequest(searchRequest)__        SearchTemplateResponse searchResponse = client().execute(SearchTemplateAction.INSTANCE, request).get()__        assertThat(searchResponse.getResponse().getHits().getHits().length, equalTo(1))__    };test,that,template,can,contain,conditional,clause,in,this,case,it,is,at,the,end,of,the,string;public,void,test,template,query,as,escaped,string,with,conditional,clause,at,end,throws,exception,search,request,search,request,new,search,request,search,request,indices,string,template,string,source,query,size,size,params,size,1,true,search,template,request,request,search,template,request,from,xcontent,create,parser,json,xcontent,json,xcontent,template,string,request,set,request,search,request,search,template,response,search,response,client,execute,search,template,action,instance,request,get,assert,that,search,response,get,response,get,hits,get,hits,length,equal,to,1
