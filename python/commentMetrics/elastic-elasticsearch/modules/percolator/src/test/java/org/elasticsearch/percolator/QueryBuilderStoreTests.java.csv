commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;5;;@Override protected NamedWriteableRegistry writableRegistry() {     SearchModule searchModule = new SearchModule(Settings.EMPTY, false, Collections.emptyList()).     return new NamedWriteableRegistry(searchModule.getNamedWriteables()). }
false;protected;0;5;;@Override protected NamedXContentRegistry xContentRegistry() {     SearchModule searchModule = new SearchModule(Settings.EMPTY, false, Collections.emptyList()).     return new NamedXContentRegistry(searchModule.getNamedXContents()). }
false;public;0;42;;public void testStoringQueryBuilders() throws IOException {     try (Directory directory = newDirectory()) {         TermQueryBuilder[] queryBuilders = new TermQueryBuilder[randomIntBetween(1, 16)].         IndexWriterConfig config = new IndexWriterConfig(new WhitespaceAnalyzer()).         config.setMergePolicy(NoMergePolicy.INSTANCE).         Settings settings = Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT).build().         BinaryFieldMapper fieldMapper = PercolatorFieldMapper.Builder.createQueryBuilderFieldBuilder(new Mapper.BuilderContext(settings, new ContentPath(0))).         Version version = Version.V_6_0_0_beta2.         try (IndexWriter indexWriter = new IndexWriter(directory, config)) {             for (int i = 0. i < queryBuilders.length. i++) {                 queryBuilders[i] = new TermQueryBuilder(randomAlphaOfLength(4), randomAlphaOfLength(8)).                 ParseContext parseContext = mock(ParseContext.class).                 ParseContext.Document document = new ParseContext.Document().                 when(parseContext.doc()).thenReturn(document).                 PercolatorFieldMapper.createQueryBuilderField(version, fieldMapper, queryBuilders[i], parseContext).                 indexWriter.addDocument(document).             }         }         QueryShardContext queryShardContext = mock(QueryShardContext.class).         when(queryShardContext.indexVersionCreated()).thenReturn(version).         when(queryShardContext.getWriteableRegistry()).thenReturn(writableRegistry()).         when(queryShardContext.getXContentRegistry()).thenReturn(xContentRegistry()).         when(queryShardContext.getForField(fieldMapper.fieldType())).thenReturn(new BytesBinaryDVIndexFieldData(new Index("index", "uuid"), fieldMapper.name())).         PercolateQuery.QueryStore queryStore = PercolateQueryBuilder.createStore(fieldMapper.fieldType(), queryShardContext, false).         try (IndexReader indexReader = DirectoryReader.open(directory)) {             LeafReaderContext leafContext = indexReader.leaves().get(0).             CheckedFunction<Integer, Query, IOException> queries = queryStore.getQueries(leafContext).             assertEquals(queryBuilders.length, leafContext.reader().numDocs()).             for (int i = 0. i < queryBuilders.length. i++) {                 TermQuery query = (TermQuery) queries.apply(i).                 assertEquals(queryBuilders[i].fieldName(), query.getTerm().field()).                 assertEquals(queryBuilders[i].value(), query.getTerm().text()).             }         }     } }
