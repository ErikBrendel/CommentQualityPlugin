# id;timestamp;commentText;codeText;commentWords;codeWords
PercolatorFieldMapper -> static void verifyQuery(QueryBuilder queryBuilder);1524684173;Fails if a percolator contains an unsupported query. The following queries are not supported:_1) a has_child query_2) a has_parent query;static void verifyQuery(QueryBuilder queryBuilder) {_        if (queryBuilder.getName().equals("has_child")) {_            throw new IllegalArgumentException("the [has_child] query is unsupported inside a percolator query")__        } else if (queryBuilder.getName().equals("has_parent")) {_            throw new IllegalArgumentException("the [has_parent] query is unsupported inside a percolator query")__        } else if (queryBuilder instanceof BoolQueryBuilder) {_            BoolQueryBuilder boolQueryBuilder = (BoolQueryBuilder) queryBuilder__            List<QueryBuilder> clauses = new ArrayList<>()__            clauses.addAll(boolQueryBuilder.filter())__            clauses.addAll(boolQueryBuilder.must())__            clauses.addAll(boolQueryBuilder.mustNot())__            clauses.addAll(boolQueryBuilder.should())__            for (QueryBuilder clause : clauses) {_                verifyQuery(clause)__            }_        } else if (queryBuilder instanceof ConstantScoreQueryBuilder) {_            verifyQuery(((ConstantScoreQueryBuilder) queryBuilder).innerQuery())__        } else if (queryBuilder instanceof FunctionScoreQueryBuilder) {_            verifyQuery(((FunctionScoreQueryBuilder) queryBuilder).query())__        } else if (queryBuilder instanceof BoostingQueryBuilder) {_            verifyQuery(((BoostingQueryBuilder) queryBuilder).negativeQuery())__            verifyQuery(((BoostingQueryBuilder) queryBuilder).positiveQuery())__        } else if (queryBuilder instanceof DisMaxQueryBuilder) {_            DisMaxQueryBuilder disMaxQueryBuilder = (DisMaxQueryBuilder) queryBuilder__            for (QueryBuilder innerQueryBuilder : disMaxQueryBuilder.innerQueries()) {_                verifyQuery(innerQueryBuilder)__            }_        }_    };fails,if,a,percolator,contains,an,unsupported,query,the,following,queries,are,not,supported,1,a,query,2,a,query;static,void,verify,query,query,builder,query,builder,if,query,builder,get,name,equals,throw,new,illegal,argument,exception,the,query,is,unsupported,inside,a,percolator,query,else,if,query,builder,get,name,equals,throw,new,illegal,argument,exception,the,query,is,unsupported,inside,a,percolator,query,else,if,query,builder,instanceof,bool,query,builder,bool,query,builder,bool,query,builder,bool,query,builder,query,builder,list,query,builder,clauses,new,array,list,clauses,add,all,bool,query,builder,filter,clauses,add,all,bool,query,builder,must,clauses,add,all,bool,query,builder,must,not,clauses,add,all,bool,query,builder,should,for,query,builder,clause,clauses,verify,query,clause,else,if,query,builder,instanceof,constant,score,query,builder,verify,query,constant,score,query,builder,query,builder,inner,query,else,if,query,builder,instanceof,function,score,query,builder,verify,query,function,score,query,builder,query,builder,query,else,if,query,builder,instanceof,boosting,query,builder,verify,query,boosting,query,builder,query,builder,negative,query,verify,query,boosting,query,builder,query,builder,positive,query,else,if,query,builder,instanceof,dis,max,query,builder,dis,max,query,builder,dis,max,query,builder,dis,max,query,builder,query,builder,for,query,builder,inner,query,builder,dis,max,query,builder,inner,queries,verify,query,inner,query,builder
PercolatorFieldMapper -> static void verifyQuery(QueryBuilder queryBuilder);1526510804;Fails if a percolator contains an unsupported query. The following queries are not supported:_1) a has_child query_2) a has_parent query;static void verifyQuery(QueryBuilder queryBuilder) {_        if (queryBuilder.getName().equals("has_child")) {_            throw new IllegalArgumentException("the [has_child] query is unsupported inside a percolator query")__        } else if (queryBuilder.getName().equals("has_parent")) {_            throw new IllegalArgumentException("the [has_parent] query is unsupported inside a percolator query")__        } else if (queryBuilder instanceof BoolQueryBuilder) {_            BoolQueryBuilder boolQueryBuilder = (BoolQueryBuilder) queryBuilder__            List<QueryBuilder> clauses = new ArrayList<>()__            clauses.addAll(boolQueryBuilder.filter())__            clauses.addAll(boolQueryBuilder.must())__            clauses.addAll(boolQueryBuilder.mustNot())__            clauses.addAll(boolQueryBuilder.should())__            for (QueryBuilder clause : clauses) {_                verifyQuery(clause)__            }_        } else if (queryBuilder instanceof ConstantScoreQueryBuilder) {_            verifyQuery(((ConstantScoreQueryBuilder) queryBuilder).innerQuery())__        } else if (queryBuilder instanceof FunctionScoreQueryBuilder) {_            verifyQuery(((FunctionScoreQueryBuilder) queryBuilder).query())__        } else if (queryBuilder instanceof BoostingQueryBuilder) {_            verifyQuery(((BoostingQueryBuilder) queryBuilder).negativeQuery())__            verifyQuery(((BoostingQueryBuilder) queryBuilder).positiveQuery())__        } else if (queryBuilder instanceof DisMaxQueryBuilder) {_            DisMaxQueryBuilder disMaxQueryBuilder = (DisMaxQueryBuilder) queryBuilder__            for (QueryBuilder innerQueryBuilder : disMaxQueryBuilder.innerQueries()) {_                verifyQuery(innerQueryBuilder)__            }_        }_    };fails,if,a,percolator,contains,an,unsupported,query,the,following,queries,are,not,supported,1,a,query,2,a,query;static,void,verify,query,query,builder,query,builder,if,query,builder,get,name,equals,throw,new,illegal,argument,exception,the,query,is,unsupported,inside,a,percolator,query,else,if,query,builder,get,name,equals,throw,new,illegal,argument,exception,the,query,is,unsupported,inside,a,percolator,query,else,if,query,builder,instanceof,bool,query,builder,bool,query,builder,bool,query,builder,bool,query,builder,query,builder,list,query,builder,clauses,new,array,list,clauses,add,all,bool,query,builder,filter,clauses,add,all,bool,query,builder,must,clauses,add,all,bool,query,builder,must,not,clauses,add,all,bool,query,builder,should,for,query,builder,clause,clauses,verify,query,clause,else,if,query,builder,instanceof,constant,score,query,builder,verify,query,constant,score,query,builder,query,builder,inner,query,else,if,query,builder,instanceof,function,score,query,builder,verify,query,function,score,query,builder,query,builder,query,else,if,query,builder,instanceof,boosting,query,builder,verify,query,boosting,query,builder,query,builder,negative,query,verify,query,boosting,query,builder,query,builder,positive,query,else,if,query,builder,instanceof,dis,max,query,builder,dis,max,query,builder,dis,max,query,builder,dis,max,query,builder,query,builder,for,query,builder,inner,query,builder,dis,max,query,builder,inner,queries,verify,query,inner,query,builder
PercolatorFieldMapper -> static void verifyQuery(QueryBuilder queryBuilder);1531937412;Fails if a percolator contains an unsupported query. The following queries are not supported:_1) a has_child query_2) a has_parent query;static void verifyQuery(QueryBuilder queryBuilder) {_        if (queryBuilder.getName().equals("has_child")) {_            throw new IllegalArgumentException("the [has_child] query is unsupported inside a percolator query")__        } else if (queryBuilder.getName().equals("has_parent")) {_            throw new IllegalArgumentException("the [has_parent] query is unsupported inside a percolator query")__        } else if (queryBuilder instanceof BoolQueryBuilder) {_            BoolQueryBuilder boolQueryBuilder = (BoolQueryBuilder) queryBuilder__            List<QueryBuilder> clauses = new ArrayList<>()__            clauses.addAll(boolQueryBuilder.filter())__            clauses.addAll(boolQueryBuilder.must())__            clauses.addAll(boolQueryBuilder.mustNot())__            clauses.addAll(boolQueryBuilder.should())__            for (QueryBuilder clause : clauses) {_                verifyQuery(clause)__            }_        } else if (queryBuilder instanceof ConstantScoreQueryBuilder) {_            verifyQuery(((ConstantScoreQueryBuilder) queryBuilder).innerQuery())__        } else if (queryBuilder instanceof FunctionScoreQueryBuilder) {_            verifyQuery(((FunctionScoreQueryBuilder) queryBuilder).query())__        } else if (queryBuilder instanceof BoostingQueryBuilder) {_            verifyQuery(((BoostingQueryBuilder) queryBuilder).negativeQuery())__            verifyQuery(((BoostingQueryBuilder) queryBuilder).positiveQuery())__        } else if (queryBuilder instanceof DisMaxQueryBuilder) {_            DisMaxQueryBuilder disMaxQueryBuilder = (DisMaxQueryBuilder) queryBuilder__            for (QueryBuilder innerQueryBuilder : disMaxQueryBuilder.innerQueries()) {_                verifyQuery(innerQueryBuilder)__            }_        }_    };fails,if,a,percolator,contains,an,unsupported,query,the,following,queries,are,not,supported,1,a,query,2,a,query;static,void,verify,query,query,builder,query,builder,if,query,builder,get,name,equals,throw,new,illegal,argument,exception,the,query,is,unsupported,inside,a,percolator,query,else,if,query,builder,get,name,equals,throw,new,illegal,argument,exception,the,query,is,unsupported,inside,a,percolator,query,else,if,query,builder,instanceof,bool,query,builder,bool,query,builder,bool,query,builder,bool,query,builder,query,builder,list,query,builder,clauses,new,array,list,clauses,add,all,bool,query,builder,filter,clauses,add,all,bool,query,builder,must,clauses,add,all,bool,query,builder,must,not,clauses,add,all,bool,query,builder,should,for,query,builder,clause,clauses,verify,query,clause,else,if,query,builder,instanceof,constant,score,query,builder,verify,query,constant,score,query,builder,query,builder,inner,query,else,if,query,builder,instanceof,function,score,query,builder,verify,query,function,score,query,builder,query,builder,query,else,if,query,builder,instanceof,boosting,query,builder,verify,query,boosting,query,builder,query,builder,negative,query,verify,query,boosting,query,builder,query,builder,positive,query,else,if,query,builder,instanceof,dis,max,query,builder,dis,max,query,builder,dis,max,query,builder,dis,max,query,builder,query,builder,for,query,builder,inner,query,builder,dis,max,query,builder,inner,queries,verify,query,inner,query,builder
PercolatorFieldMapper -> static void verifyQuery(QueryBuilder queryBuilder);1536137328;Fails if a percolator contains an unsupported query. The following queries are not supported:_1) a has_child query_2) a has_parent query;static void verifyQuery(QueryBuilder queryBuilder) {_        if (queryBuilder.getName().equals("has_child")) {_            throw new IllegalArgumentException("the [has_child] query is unsupported inside a percolator query")__        } else if (queryBuilder.getName().equals("has_parent")) {_            throw new IllegalArgumentException("the [has_parent] query is unsupported inside a percolator query")__        } else if (queryBuilder instanceof BoolQueryBuilder) {_            BoolQueryBuilder boolQueryBuilder = (BoolQueryBuilder) queryBuilder__            List<QueryBuilder> clauses = new ArrayList<>()__            clauses.addAll(boolQueryBuilder.filter())__            clauses.addAll(boolQueryBuilder.must())__            clauses.addAll(boolQueryBuilder.mustNot())__            clauses.addAll(boolQueryBuilder.should())__            for (QueryBuilder clause : clauses) {_                verifyQuery(clause)__            }_        } else if (queryBuilder instanceof ConstantScoreQueryBuilder) {_            verifyQuery(((ConstantScoreQueryBuilder) queryBuilder).innerQuery())__        } else if (queryBuilder instanceof FunctionScoreQueryBuilder) {_            verifyQuery(((FunctionScoreQueryBuilder) queryBuilder).query())__        } else if (queryBuilder instanceof BoostingQueryBuilder) {_            verifyQuery(((BoostingQueryBuilder) queryBuilder).negativeQuery())__            verifyQuery(((BoostingQueryBuilder) queryBuilder).positiveQuery())__        } else if (queryBuilder instanceof DisMaxQueryBuilder) {_            DisMaxQueryBuilder disMaxQueryBuilder = (DisMaxQueryBuilder) queryBuilder__            for (QueryBuilder innerQueryBuilder : disMaxQueryBuilder.innerQueries()) {_                verifyQuery(innerQueryBuilder)__            }_        }_    };fails,if,a,percolator,contains,an,unsupported,query,the,following,queries,are,not,supported,1,a,query,2,a,query;static,void,verify,query,query,builder,query,builder,if,query,builder,get,name,equals,throw,new,illegal,argument,exception,the,query,is,unsupported,inside,a,percolator,query,else,if,query,builder,get,name,equals,throw,new,illegal,argument,exception,the,query,is,unsupported,inside,a,percolator,query,else,if,query,builder,instanceof,bool,query,builder,bool,query,builder,bool,query,builder,bool,query,builder,query,builder,list,query,builder,clauses,new,array,list,clauses,add,all,bool,query,builder,filter,clauses,add,all,bool,query,builder,must,clauses,add,all,bool,query,builder,must,not,clauses,add,all,bool,query,builder,should,for,query,builder,clause,clauses,verify,query,clause,else,if,query,builder,instanceof,constant,score,query,builder,verify,query,constant,score,query,builder,query,builder,inner,query,else,if,query,builder,instanceof,function,score,query,builder,verify,query,function,score,query,builder,query,builder,query,else,if,query,builder,instanceof,boosting,query,builder,verify,query,boosting,query,builder,query,builder,negative,query,verify,query,boosting,query,builder,query,builder,positive,query,else,if,query,builder,instanceof,dis,max,query,builder,dis,max,query,builder,dis,max,query,builder,dis,max,query,builder,query,builder,for,query,builder,inner,query,builder,dis,max,query,builder,inner,queries,verify,query,inner,query,builder
PercolatorFieldMapper -> static void verifyQuery(QueryBuilder queryBuilder);1536314350;Fails if a percolator contains an unsupported query. The following queries are not supported:_1) a has_child query_2) a has_parent query;static void verifyQuery(QueryBuilder queryBuilder) {_        if (queryBuilder.getName().equals("has_child")) {_            throw new IllegalArgumentException("the [has_child] query is unsupported inside a percolator query")__        } else if (queryBuilder.getName().equals("has_parent")) {_            throw new IllegalArgumentException("the [has_parent] query is unsupported inside a percolator query")__        } else if (queryBuilder instanceof BoolQueryBuilder) {_            BoolQueryBuilder boolQueryBuilder = (BoolQueryBuilder) queryBuilder__            List<QueryBuilder> clauses = new ArrayList<>()__            clauses.addAll(boolQueryBuilder.filter())__            clauses.addAll(boolQueryBuilder.must())__            clauses.addAll(boolQueryBuilder.mustNot())__            clauses.addAll(boolQueryBuilder.should())__            for (QueryBuilder clause : clauses) {_                verifyQuery(clause)__            }_        } else if (queryBuilder instanceof ConstantScoreQueryBuilder) {_            verifyQuery(((ConstantScoreQueryBuilder) queryBuilder).innerQuery())__        } else if (queryBuilder instanceof FunctionScoreQueryBuilder) {_            verifyQuery(((FunctionScoreQueryBuilder) queryBuilder).query())__        } else if (queryBuilder instanceof BoostingQueryBuilder) {_            verifyQuery(((BoostingQueryBuilder) queryBuilder).negativeQuery())__            verifyQuery(((BoostingQueryBuilder) queryBuilder).positiveQuery())__        } else if (queryBuilder instanceof DisMaxQueryBuilder) {_            DisMaxQueryBuilder disMaxQueryBuilder = (DisMaxQueryBuilder) queryBuilder__            for (QueryBuilder innerQueryBuilder : disMaxQueryBuilder.innerQueries()) {_                verifyQuery(innerQueryBuilder)__            }_        }_    };fails,if,a,percolator,contains,an,unsupported,query,the,following,queries,are,not,supported,1,a,query,2,a,query;static,void,verify,query,query,builder,query,builder,if,query,builder,get,name,equals,throw,new,illegal,argument,exception,the,query,is,unsupported,inside,a,percolator,query,else,if,query,builder,get,name,equals,throw,new,illegal,argument,exception,the,query,is,unsupported,inside,a,percolator,query,else,if,query,builder,instanceof,bool,query,builder,bool,query,builder,bool,query,builder,bool,query,builder,query,builder,list,query,builder,clauses,new,array,list,clauses,add,all,bool,query,builder,filter,clauses,add,all,bool,query,builder,must,clauses,add,all,bool,query,builder,must,not,clauses,add,all,bool,query,builder,should,for,query,builder,clause,clauses,verify,query,clause,else,if,query,builder,instanceof,constant,score,query,builder,verify,query,constant,score,query,builder,query,builder,inner,query,else,if,query,builder,instanceof,function,score,query,builder,verify,query,function,score,query,builder,query,builder,query,else,if,query,builder,instanceof,boosting,query,builder,verify,query,boosting,query,builder,query,builder,negative,query,verify,query,boosting,query,builder,query,builder,positive,query,else,if,query,builder,instanceof,dis,max,query,builder,dis,max,query,builder,dis,max,query,builder,dis,max,query,builder,query,builder,for,query,builder,inner,query,builder,dis,max,query,builder,inner,queries,verify,query,inner,query,builder
PercolatorFieldMapper -> static void verifyQuery(QueryBuilder queryBuilder);1541501723;Fails if a percolator contains an unsupported query. The following queries are not supported:_1) a has_child query_2) a has_parent query;static void verifyQuery(QueryBuilder queryBuilder) {_        if (queryBuilder.getName().equals("has_child")) {_            throw new IllegalArgumentException("the [has_child] query is unsupported inside a percolator query")__        } else if (queryBuilder.getName().equals("has_parent")) {_            throw new IllegalArgumentException("the [has_parent] query is unsupported inside a percolator query")__        } else if (queryBuilder instanceof BoolQueryBuilder) {_            BoolQueryBuilder boolQueryBuilder = (BoolQueryBuilder) queryBuilder__            List<QueryBuilder> clauses = new ArrayList<>()__            clauses.addAll(boolQueryBuilder.filter())__            clauses.addAll(boolQueryBuilder.must())__            clauses.addAll(boolQueryBuilder.mustNot())__            clauses.addAll(boolQueryBuilder.should())__            for (QueryBuilder clause : clauses) {_                verifyQuery(clause)__            }_        } else if (queryBuilder instanceof ConstantScoreQueryBuilder) {_            verifyQuery(((ConstantScoreQueryBuilder) queryBuilder).innerQuery())__        } else if (queryBuilder instanceof FunctionScoreQueryBuilder) {_            verifyQuery(((FunctionScoreQueryBuilder) queryBuilder).query())__        } else if (queryBuilder instanceof BoostingQueryBuilder) {_            verifyQuery(((BoostingQueryBuilder) queryBuilder).negativeQuery())__            verifyQuery(((BoostingQueryBuilder) queryBuilder).positiveQuery())__        } else if (queryBuilder instanceof DisMaxQueryBuilder) {_            DisMaxQueryBuilder disMaxQueryBuilder = (DisMaxQueryBuilder) queryBuilder__            for (QueryBuilder innerQueryBuilder : disMaxQueryBuilder.innerQueries()) {_                verifyQuery(innerQueryBuilder)__            }_        }_    };fails,if,a,percolator,contains,an,unsupported,query,the,following,queries,are,not,supported,1,a,query,2,a,query;static,void,verify,query,query,builder,query,builder,if,query,builder,get,name,equals,throw,new,illegal,argument,exception,the,query,is,unsupported,inside,a,percolator,query,else,if,query,builder,get,name,equals,throw,new,illegal,argument,exception,the,query,is,unsupported,inside,a,percolator,query,else,if,query,builder,instanceof,bool,query,builder,bool,query,builder,bool,query,builder,bool,query,builder,query,builder,list,query,builder,clauses,new,array,list,clauses,add,all,bool,query,builder,filter,clauses,add,all,bool,query,builder,must,clauses,add,all,bool,query,builder,must,not,clauses,add,all,bool,query,builder,should,for,query,builder,clause,clauses,verify,query,clause,else,if,query,builder,instanceof,constant,score,query,builder,verify,query,constant,score,query,builder,query,builder,inner,query,else,if,query,builder,instanceof,function,score,query,builder,verify,query,function,score,query,builder,query,builder,query,else,if,query,builder,instanceof,boosting,query,builder,verify,query,boosting,query,builder,query,builder,negative,query,verify,query,boosting,query,builder,query,builder,positive,query,else,if,query,builder,instanceof,dis,max,query,builder,dis,max,query,builder,dis,max,query,builder,dis,max,query,builder,query,builder,for,query,builder,inner,query,builder,dis,max,query,builder,inner,queries,verify,query,inner,query,builder
PercolatorFieldMapper -> static void verifyQuery(QueryBuilder queryBuilder);1541619687;Fails if a percolator contains an unsupported query. The following queries are not supported:_1) a has_child query_2) a has_parent query;static void verifyQuery(QueryBuilder queryBuilder) {_        if (queryBuilder.getName().equals("has_child")) {_            throw new IllegalArgumentException("the [has_child] query is unsupported inside a percolator query")__        } else if (queryBuilder.getName().equals("has_parent")) {_            throw new IllegalArgumentException("the [has_parent] query is unsupported inside a percolator query")__        } else if (queryBuilder instanceof BoolQueryBuilder) {_            BoolQueryBuilder boolQueryBuilder = (BoolQueryBuilder) queryBuilder__            List<QueryBuilder> clauses = new ArrayList<>()__            clauses.addAll(boolQueryBuilder.filter())__            clauses.addAll(boolQueryBuilder.must())__            clauses.addAll(boolQueryBuilder.mustNot())__            clauses.addAll(boolQueryBuilder.should())__            for (QueryBuilder clause : clauses) {_                verifyQuery(clause)__            }_        } else if (queryBuilder instanceof ConstantScoreQueryBuilder) {_            verifyQuery(((ConstantScoreQueryBuilder) queryBuilder).innerQuery())__        } else if (queryBuilder instanceof FunctionScoreQueryBuilder) {_            verifyQuery(((FunctionScoreQueryBuilder) queryBuilder).query())__        } else if (queryBuilder instanceof BoostingQueryBuilder) {_            verifyQuery(((BoostingQueryBuilder) queryBuilder).negativeQuery())__            verifyQuery(((BoostingQueryBuilder) queryBuilder).positiveQuery())__        } else if (queryBuilder instanceof DisMaxQueryBuilder) {_            DisMaxQueryBuilder disMaxQueryBuilder = (DisMaxQueryBuilder) queryBuilder__            for (QueryBuilder innerQueryBuilder : disMaxQueryBuilder.innerQueries()) {_                verifyQuery(innerQueryBuilder)__            }_        }_    };fails,if,a,percolator,contains,an,unsupported,query,the,following,queries,are,not,supported,1,a,query,2,a,query;static,void,verify,query,query,builder,query,builder,if,query,builder,get,name,equals,throw,new,illegal,argument,exception,the,query,is,unsupported,inside,a,percolator,query,else,if,query,builder,get,name,equals,throw,new,illegal,argument,exception,the,query,is,unsupported,inside,a,percolator,query,else,if,query,builder,instanceof,bool,query,builder,bool,query,builder,bool,query,builder,bool,query,builder,query,builder,list,query,builder,clauses,new,array,list,clauses,add,all,bool,query,builder,filter,clauses,add,all,bool,query,builder,must,clauses,add,all,bool,query,builder,must,not,clauses,add,all,bool,query,builder,should,for,query,builder,clause,clauses,verify,query,clause,else,if,query,builder,instanceof,constant,score,query,builder,verify,query,constant,score,query,builder,query,builder,inner,query,else,if,query,builder,instanceof,function,score,query,builder,verify,query,function,score,query,builder,query,builder,query,else,if,query,builder,instanceof,boosting,query,builder,verify,query,boosting,query,builder,query,builder,negative,query,verify,query,boosting,query,builder,query,builder,positive,query,else,if,query,builder,instanceof,dis,max,query,builder,dis,max,query,builder,dis,max,query,builder,dis,max,query,builder,query,builder,for,query,builder,inner,query,builder,dis,max,query,builder,inner,queries,verify,query,inner,query,builder
