# id;timestamp;commentText;codeText;commentWords;codeWords
PercolateQueryBuilder -> PercolateQueryBuilder(StreamInput in) throws IOException;1524684173;Read from a stream.;PercolateQueryBuilder(StreamInput in) throws IOException {_        super(in)__        field = in.readString()__        if (in.getVersion().onOrAfter(Version.V_6_1_0)) {_            name = in.readOptionalString()__        }_        if (in.getVersion().before(Version.V_6_0_0_beta1)) {_            documentType = in.readString()__        } else {_            documentType = in.readOptionalString()__        }_        indexedDocumentIndex = in.readOptionalString()__        indexedDocumentType = in.readOptionalString()__        indexedDocumentId = in.readOptionalString()__        indexedDocumentRouting = in.readOptionalString()__        indexedDocumentPreference = in.readOptionalString()__        if (in.readBoolean()) {_            indexedDocumentVersion = in.readVLong()__        } else {_            indexedDocumentVersion = null__        }_        if (in.getVersion().onOrAfter(Version.V_6_1_0)) {_            documents = in.readList(StreamInput::readBytesReference)__        } else {_            BytesReference document = in.readOptionalBytesReference()__            documents = document != null ? Collections.singletonList(document) : Collections.emptyList()__        }_        if (documents.isEmpty() == false) {_            if (in.getVersion().onOrAfter(Version.V_5_3_0)) {_                documentXContentType = in.readEnum(XContentType.class)__            } else {_                documentXContentType = XContentHelper.xContentType(documents.iterator().next())__            }_        } else {_            documentXContentType = null__        }_        documentSupplier = null__    };read,from,a,stream;percolate,query,builder,stream,input,in,throws,ioexception,super,in,field,in,read,string,if,in,get,version,on,or,after,version,name,in,read,optional,string,if,in,get,version,before,version,document,type,in,read,string,else,document,type,in,read,optional,string,indexed,document,index,in,read,optional,string,indexed,document,type,in,read,optional,string,indexed,document,id,in,read,optional,string,indexed,document,routing,in,read,optional,string,indexed,document,preference,in,read,optional,string,if,in,read,boolean,indexed,document,version,in,read,vlong,else,indexed,document,version,null,if,in,get,version,on,or,after,version,documents,in,read,list,stream,input,read,bytes,reference,else,bytes,reference,document,in,read,optional,bytes,reference,documents,document,null,collections,singleton,list,document,collections,empty,list,if,documents,is,empty,false,if,in,get,version,on,or,after,version,document,xcontent,type,in,read,enum,xcontent,type,class,else,document,xcontent,type,xcontent,helper,x,content,type,documents,iterator,next,else,document,xcontent,type,null,document,supplier,null
PercolateQueryBuilder -> PercolateQueryBuilder(StreamInput in) throws IOException;1525334055;Read from a stream.;PercolateQueryBuilder(StreamInput in) throws IOException {_        super(in)__        field = in.readString()__        if (in.getVersion().onOrAfter(Version.V_6_1_0)) {_            name = in.readOptionalString()__        }_        if (in.getVersion().before(Version.V_6_0_0_beta1)) {_            documentType = in.readString()__        } else {_            documentType = in.readOptionalString()__        }_        indexedDocumentIndex = in.readOptionalString()__        indexedDocumentType = in.readOptionalString()__        indexedDocumentId = in.readOptionalString()__        indexedDocumentRouting = in.readOptionalString()__        indexedDocumentPreference = in.readOptionalString()__        if (in.readBoolean()) {_            indexedDocumentVersion = in.readVLong()__        } else {_            indexedDocumentVersion = null__        }_        if (in.getVersion().onOrAfter(Version.V_6_1_0)) {_            documents = in.readList(StreamInput::readBytesReference)__        } else {_            BytesReference document = in.readOptionalBytesReference()__            documents = document != null ? Collections.singletonList(document) : Collections.emptyList()__        }_        if (documents.isEmpty() == false) {_            if (in.getVersion().onOrAfter(Version.V_5_3_0)) {_                documentXContentType = in.readEnum(XContentType.class)__            } else {_                documentXContentType = XContentHelper.xContentType(documents.iterator().next())__            }_        } else {_            documentXContentType = null__        }_        documentSupplier = null__    };read,from,a,stream;percolate,query,builder,stream,input,in,throws,ioexception,super,in,field,in,read,string,if,in,get,version,on,or,after,version,name,in,read,optional,string,if,in,get,version,before,version,document,type,in,read,string,else,document,type,in,read,optional,string,indexed,document,index,in,read,optional,string,indexed,document,type,in,read,optional,string,indexed,document,id,in,read,optional,string,indexed,document,routing,in,read,optional,string,indexed,document,preference,in,read,optional,string,if,in,read,boolean,indexed,document,version,in,read,vlong,else,indexed,document,version,null,if,in,get,version,on,or,after,version,documents,in,read,list,stream,input,read,bytes,reference,else,bytes,reference,document,in,read,optional,bytes,reference,documents,document,null,collections,singleton,list,document,collections,empty,list,if,documents,is,empty,false,if,in,get,version,on,or,after,version,document,xcontent,type,in,read,enum,xcontent,type,class,else,document,xcontent,type,xcontent,helper,x,content,type,documents,iterator,next,else,document,xcontent,type,null,document,supplier,null
PercolateQueryBuilder -> PercolateQueryBuilder(StreamInput in) throws IOException;1531937412;Read from a stream.;PercolateQueryBuilder(StreamInput in) throws IOException {_        super(in)__        field = in.readString()__        if (in.getVersion().onOrAfter(Version.V_6_1_0)) {_            name = in.readOptionalString()__        }_        if (in.getVersion().before(Version.V_6_0_0_beta1)) {_            documentType = in.readString()__        } else {_            documentType = in.readOptionalString()__        }_        indexedDocumentIndex = in.readOptionalString()__        indexedDocumentType = in.readOptionalString()__        indexedDocumentId = in.readOptionalString()__        indexedDocumentRouting = in.readOptionalString()__        indexedDocumentPreference = in.readOptionalString()__        if (in.readBoolean()) {_            indexedDocumentVersion = in.readVLong()__        } else {_            indexedDocumentVersion = null__        }_        if (in.getVersion().onOrAfter(Version.V_6_1_0)) {_            documents = in.readList(StreamInput::readBytesReference)__        } else {_            BytesReference document = in.readOptionalBytesReference()__            documents = document != null ? Collections.singletonList(document) : Collections.emptyList()__        }_        if (documents.isEmpty() == false) {_            if (in.getVersion().onOrAfter(Version.V_5_3_0)) {_                documentXContentType = in.readEnum(XContentType.class)__            } else {_                documentXContentType = XContentHelper.xContentType(documents.iterator().next())__            }_        } else {_            documentXContentType = null__        }_        documentSupplier = null__    };read,from,a,stream;percolate,query,builder,stream,input,in,throws,ioexception,super,in,field,in,read,string,if,in,get,version,on,or,after,version,name,in,read,optional,string,if,in,get,version,before,version,document,type,in,read,string,else,document,type,in,read,optional,string,indexed,document,index,in,read,optional,string,indexed,document,type,in,read,optional,string,indexed,document,id,in,read,optional,string,indexed,document,routing,in,read,optional,string,indexed,document,preference,in,read,optional,string,if,in,read,boolean,indexed,document,version,in,read,vlong,else,indexed,document,version,null,if,in,get,version,on,or,after,version,documents,in,read,list,stream,input,read,bytes,reference,else,bytes,reference,document,in,read,optional,bytes,reference,documents,document,null,collections,singleton,list,document,collections,empty,list,if,documents,is,empty,false,if,in,get,version,on,or,after,version,document,xcontent,type,in,read,enum,xcontent,type,class,else,document,xcontent,type,xcontent,helper,x,content,type,documents,iterator,next,else,document,xcontent,type,null,document,supplier,null
PercolateQueryBuilder -> PercolateQueryBuilder(StreamInput in) throws IOException;1533738061;Read from a stream.;PercolateQueryBuilder(StreamInput in) throws IOException {_        super(in)__        field = in.readString()__        if (in.getVersion().onOrAfter(Version.V_6_1_0)) {_            name = in.readOptionalString()__        }_        if (in.getVersion().before(Version.V_6_0_0_beta1)) {_            documentType = in.readString()__        } else {_            documentType = in.readOptionalString()__        }_        indexedDocumentIndex = in.readOptionalString()__        indexedDocumentType = in.readOptionalString()__        indexedDocumentId = in.readOptionalString()__        indexedDocumentRouting = in.readOptionalString()__        indexedDocumentPreference = in.readOptionalString()__        if (in.readBoolean()) {_            indexedDocumentVersion = in.readVLong()__        } else {_            indexedDocumentVersion = null__        }_        if (in.getVersion().onOrAfter(Version.V_6_1_0)) {_            documents = in.readList(StreamInput::readBytesReference)__        } else {_            BytesReference document = in.readOptionalBytesReference()__            documents = document != null ? Collections.singletonList(document) : Collections.emptyList()__        }_        if (documents.isEmpty() == false) {_            if (in.getVersion().onOrAfter(Version.V_5_3_0)) {_                documentXContentType = in.readEnum(XContentType.class)__            } else {_                documentXContentType = XContentHelper.xContentType(documents.iterator().next())__            }_        } else {_            documentXContentType = null__        }_        documentSupplier = null__    };read,from,a,stream;percolate,query,builder,stream,input,in,throws,ioexception,super,in,field,in,read,string,if,in,get,version,on,or,after,version,name,in,read,optional,string,if,in,get,version,before,version,document,type,in,read,string,else,document,type,in,read,optional,string,indexed,document,index,in,read,optional,string,indexed,document,type,in,read,optional,string,indexed,document,id,in,read,optional,string,indexed,document,routing,in,read,optional,string,indexed,document,preference,in,read,optional,string,if,in,read,boolean,indexed,document,version,in,read,vlong,else,indexed,document,version,null,if,in,get,version,on,or,after,version,documents,in,read,list,stream,input,read,bytes,reference,else,bytes,reference,document,in,read,optional,bytes,reference,documents,document,null,collections,singleton,list,document,collections,empty,list,if,documents,is,empty,false,if,in,get,version,on,or,after,version,document,xcontent,type,in,read,enum,xcontent,type,class,else,document,xcontent,type,xcontent,helper,x,content,type,documents,iterator,next,else,document,xcontent,type,null,document,supplier,null
PercolateQueryBuilder -> PercolateQueryBuilder(StreamInput in) throws IOException;1535139672;Read from a stream.;PercolateQueryBuilder(StreamInput in) throws IOException {_        super(in)__        field = in.readString()__        if (in.getVersion().onOrAfter(Version.V_6_1_0)) {_            name = in.readOptionalString()__        }_        if (in.getVersion().before(Version.V_6_0_0_beta1)) {_            documentType = in.readString()__        } else {_            documentType = in.readOptionalString()__        }_        indexedDocumentIndex = in.readOptionalString()__        indexedDocumentType = in.readOptionalString()__        indexedDocumentId = in.readOptionalString()__        indexedDocumentRouting = in.readOptionalString()__        indexedDocumentPreference = in.readOptionalString()__        if (in.readBoolean()) {_            indexedDocumentVersion = in.readVLong()__        } else {_            indexedDocumentVersion = null__        }_        if (in.getVersion().onOrAfter(Version.V_6_1_0)) {_            documents = in.readList(StreamInput::readBytesReference)__        } else {_            BytesReference document = in.readOptionalBytesReference()__            documents = document != null ? Collections.singletonList(document) : Collections.emptyList()__        }_        if (documents.isEmpty() == false) {_            documentXContentType = in.readEnum(XContentType.class)__        } else {_            documentXContentType = null__        }_        documentSupplier = null__    };read,from,a,stream;percolate,query,builder,stream,input,in,throws,ioexception,super,in,field,in,read,string,if,in,get,version,on,or,after,version,name,in,read,optional,string,if,in,get,version,before,version,document,type,in,read,string,else,document,type,in,read,optional,string,indexed,document,index,in,read,optional,string,indexed,document,type,in,read,optional,string,indexed,document,id,in,read,optional,string,indexed,document,routing,in,read,optional,string,indexed,document,preference,in,read,optional,string,if,in,read,boolean,indexed,document,version,in,read,vlong,else,indexed,document,version,null,if,in,get,version,on,or,after,version,documents,in,read,list,stream,input,read,bytes,reference,else,bytes,reference,document,in,read,optional,bytes,reference,documents,document,null,collections,singleton,list,document,collections,empty,list,if,documents,is,empty,false,document,xcontent,type,in,read,enum,xcontent,type,class,else,document,xcontent,type,null,document,supplier,null
PercolateQueryBuilder -> PercolateQueryBuilder(StreamInput in) throws IOException;1536314350;Read from a stream.;PercolateQueryBuilder(StreamInput in) throws IOException {_        super(in)__        field = in.readString()__        if (in.getVersion().onOrAfter(Version.V_6_1_0)) {_            name = in.readOptionalString()__        }_        if (in.getVersion().before(Version.V_6_0_0_beta1)) {_            documentType = in.readString()__        } else {_            documentType = in.readOptionalString()__        }_        indexedDocumentIndex = in.readOptionalString()__        indexedDocumentType = in.readOptionalString()__        indexedDocumentId = in.readOptionalString()__        indexedDocumentRouting = in.readOptionalString()__        indexedDocumentPreference = in.readOptionalString()__        if (in.readBoolean()) {_            indexedDocumentVersion = in.readVLong()__        } else {_            indexedDocumentVersion = null__        }_        if (in.getVersion().onOrAfter(Version.V_6_1_0)) {_            documents = in.readList(StreamInput::readBytesReference)__        } else {_            BytesReference document = in.readOptionalBytesReference()__            documents = document != null ? Collections.singletonList(document) : Collections.emptyList()__        }_        if (documents.isEmpty() == false) {_            documentXContentType = in.readEnum(XContentType.class)__        } else {_            documentXContentType = null__        }_        documentSupplier = null__    };read,from,a,stream;percolate,query,builder,stream,input,in,throws,ioexception,super,in,field,in,read,string,if,in,get,version,on,or,after,version,name,in,read,optional,string,if,in,get,version,before,version,document,type,in,read,string,else,document,type,in,read,optional,string,indexed,document,index,in,read,optional,string,indexed,document,type,in,read,optional,string,indexed,document,id,in,read,optional,string,indexed,document,routing,in,read,optional,string,indexed,document,preference,in,read,optional,string,if,in,read,boolean,indexed,document,version,in,read,vlong,else,indexed,document,version,null,if,in,get,version,on,or,after,version,documents,in,read,list,stream,input,read,bytes,reference,else,bytes,reference,document,in,read,optional,bytes,reference,documents,document,null,collections,singleton,list,document,collections,empty,list,if,documents,is,empty,false,document,xcontent,type,in,read,enum,xcontent,type,class,else,document,xcontent,type,null,document,supplier,null
PercolateQueryBuilder -> PercolateQueryBuilder(StreamInput in) throws IOException;1540583181;Read from a stream.;PercolateQueryBuilder(StreamInput in) throws IOException {_        super(in)__        field = in.readString()__        if (in.getVersion().onOrAfter(Version.V_6_1_0)) {_            name = in.readOptionalString()__        }_        if (in.getVersion().before(Version.V_6_0_0_beta1)) {_            documentType = in.readString()__        } else {_            documentType = in.readOptionalString()__        }_        indexedDocumentIndex = in.readOptionalString()__        indexedDocumentType = in.readOptionalString()__        indexedDocumentId = in.readOptionalString()__        indexedDocumentRouting = in.readOptionalString()__        indexedDocumentPreference = in.readOptionalString()__        if (in.readBoolean()) {_            indexedDocumentVersion = in.readVLong()__        } else {_            indexedDocumentVersion = null__        }_        if (in.getVersion().onOrAfter(Version.V_6_1_0)) {_            documents = in.readList(StreamInput::readBytesReference)__        } else {_            BytesReference document = in.readOptionalBytesReference()__            documents = document != null ? Collections.singletonList(document) : Collections.emptyList()__        }_        if (documents.isEmpty() == false) {_            documentXContentType = in.readEnum(XContentType.class)__        } else {_            documentXContentType = null__        }_        documentSupplier = null__    };read,from,a,stream;percolate,query,builder,stream,input,in,throws,ioexception,super,in,field,in,read,string,if,in,get,version,on,or,after,version,name,in,read,optional,string,if,in,get,version,before,version,document,type,in,read,string,else,document,type,in,read,optional,string,indexed,document,index,in,read,optional,string,indexed,document,type,in,read,optional,string,indexed,document,id,in,read,optional,string,indexed,document,routing,in,read,optional,string,indexed,document,preference,in,read,optional,string,if,in,read,boolean,indexed,document,version,in,read,vlong,else,indexed,document,version,null,if,in,get,version,on,or,after,version,documents,in,read,list,stream,input,read,bytes,reference,else,bytes,reference,document,in,read,optional,bytes,reference,documents,document,null,collections,singleton,list,document,collections,empty,list,if,documents,is,empty,false,document,xcontent,type,in,read,enum,xcontent,type,class,else,document,xcontent,type,null,document,supplier,null
PercolateQueryBuilder -> PercolateQueryBuilder(StreamInput in) throws IOException;1545678410;Read from a stream.;PercolateQueryBuilder(StreamInput in) throws IOException {_        super(in)__        field = in.readString()__        if (in.getVersion().onOrAfter(Version.V_6_1_0)) {_            name = in.readOptionalString()__        }_        if (in.getVersion().before(Version.V_6_0_0_beta1)) {_            documentType = in.readString()__        } else {_            documentType = in.readOptionalString()__        }_        indexedDocumentIndex = in.readOptionalString()__        indexedDocumentType = in.readOptionalString()__        indexedDocumentId = in.readOptionalString()__        indexedDocumentRouting = in.readOptionalString()__        indexedDocumentPreference = in.readOptionalString()__        if (in.readBoolean()) {_            indexedDocumentVersion = in.readVLong()__        } else {_            indexedDocumentVersion = null__        }_        if (in.getVersion().onOrAfter(Version.V_6_1_0)) {_            documents = in.readList(StreamInput::readBytesReference)__        } else {_            BytesReference document = in.readOptionalBytesReference()__            documents = document != null ? Collections.singletonList(document) : Collections.emptyList()__        }_        if (documents.isEmpty() == false) {_            documentXContentType = in.readEnum(XContentType.class)__        } else {_            documentXContentType = null__        }_        documentSupplier = null__    };read,from,a,stream;percolate,query,builder,stream,input,in,throws,ioexception,super,in,field,in,read,string,if,in,get,version,on,or,after,version,name,in,read,optional,string,if,in,get,version,before,version,document,type,in,read,string,else,document,type,in,read,optional,string,indexed,document,index,in,read,optional,string,indexed,document,type,in,read,optional,string,indexed,document,id,in,read,optional,string,indexed,document,routing,in,read,optional,string,indexed,document,preference,in,read,optional,string,if,in,read,boolean,indexed,document,version,in,read,vlong,else,indexed,document,version,null,if,in,get,version,on,or,after,version,documents,in,read,list,stream,input,read,bytes,reference,else,bytes,reference,document,in,read,optional,bytes,reference,documents,document,null,collections,singleton,list,document,collections,empty,list,if,documents,is,empty,false,document,xcontent,type,in,read,enum,xcontent,type,class,else,document,xcontent,type,null,document,supplier,null
PercolateQueryBuilder -> public PercolateQueryBuilder(String field, String indexedDocumentIndex, String indexedDocumentType, String indexedDocumentId,                                  String indexedDocumentRouting, String indexedDocumentPreference, Long indexedDocumentVersion);1524684173;Creates a percolator query builder instance for percolating a document in a remote index.__@param field                     The field that contains the percolator query_@param indexedDocumentIndex      The index containing the document to percolate_@param indexedDocumentType       The type containing the document to percolate_@param indexedDocumentId         The id of the document to percolate_@param indexedDocumentRouting    The routing value for the document to percolate_@param indexedDocumentPreference The preference to use when fetching the document to percolate_@param indexedDocumentVersion    The expected version of the document to percolate;public PercolateQueryBuilder(String field, String indexedDocumentIndex, String indexedDocumentType, String indexedDocumentId,_                                 String indexedDocumentRouting, String indexedDocumentPreference, Long indexedDocumentVersion) {_        this(field, null, indexedDocumentIndex, indexedDocumentType, indexedDocumentId, indexedDocumentRouting,_            indexedDocumentPreference, indexedDocumentVersion)__    };creates,a,percolator,query,builder,instance,for,percolating,a,document,in,a,remote,index,param,field,the,field,that,contains,the,percolator,query,param,indexed,document,index,the,index,containing,the,document,to,percolate,param,indexed,document,type,the,type,containing,the,document,to,percolate,param,indexed,document,id,the,id,of,the,document,to,percolate,param,indexed,document,routing,the,routing,value,for,the,document,to,percolate,param,indexed,document,preference,the,preference,to,use,when,fetching,the,document,to,percolate,param,indexed,document,version,the,expected,version,of,the,document,to,percolate;public,percolate,query,builder,string,field,string,indexed,document,index,string,indexed,document,type,string,indexed,document,id,string,indexed,document,routing,string,indexed,document,preference,long,indexed,document,version,this,field,null,indexed,document,index,indexed,document,type,indexed,document,id,indexed,document,routing,indexed,document,preference,indexed,document,version
PercolateQueryBuilder -> public PercolateQueryBuilder(String field, String indexedDocumentIndex, String indexedDocumentType, String indexedDocumentId,                                  String indexedDocumentRouting, String indexedDocumentPreference, Long indexedDocumentVersion);1525334055;Creates a percolator query builder instance for percolating a document in a remote index.__@param field                     The field that contains the percolator query_@param indexedDocumentIndex      The index containing the document to percolate_@param indexedDocumentType       The type containing the document to percolate_@param indexedDocumentId         The id of the document to percolate_@param indexedDocumentRouting    The routing value for the document to percolate_@param indexedDocumentPreference The preference to use when fetching the document to percolate_@param indexedDocumentVersion    The expected version of the document to percolate;public PercolateQueryBuilder(String field, String indexedDocumentIndex, String indexedDocumentType, String indexedDocumentId,_                                 String indexedDocumentRouting, String indexedDocumentPreference, Long indexedDocumentVersion) {_        this(field, null, indexedDocumentIndex, indexedDocumentType, indexedDocumentId, indexedDocumentRouting,_            indexedDocumentPreference, indexedDocumentVersion)__    };creates,a,percolator,query,builder,instance,for,percolating,a,document,in,a,remote,index,param,field,the,field,that,contains,the,percolator,query,param,indexed,document,index,the,index,containing,the,document,to,percolate,param,indexed,document,type,the,type,containing,the,document,to,percolate,param,indexed,document,id,the,id,of,the,document,to,percolate,param,indexed,document,routing,the,routing,value,for,the,document,to,percolate,param,indexed,document,preference,the,preference,to,use,when,fetching,the,document,to,percolate,param,indexed,document,version,the,expected,version,of,the,document,to,percolate;public,percolate,query,builder,string,field,string,indexed,document,index,string,indexed,document,type,string,indexed,document,id,string,indexed,document,routing,string,indexed,document,preference,long,indexed,document,version,this,field,null,indexed,document,index,indexed,document,type,indexed,document,id,indexed,document,routing,indexed,document,preference,indexed,document,version
PercolateQueryBuilder -> public PercolateQueryBuilder(String field, String indexedDocumentIndex, String indexedDocumentType, String indexedDocumentId,                                  String indexedDocumentRouting, String indexedDocumentPreference, Long indexedDocumentVersion);1531937412;Creates a percolator query builder instance for percolating a document in a remote index.__@param field                     The field that contains the percolator query_@param indexedDocumentIndex      The index containing the document to percolate_@param indexedDocumentType       The type containing the document to percolate_@param indexedDocumentId         The id of the document to percolate_@param indexedDocumentRouting    The routing value for the document to percolate_@param indexedDocumentPreference The preference to use when fetching the document to percolate_@param indexedDocumentVersion    The expected version of the document to percolate;public PercolateQueryBuilder(String field, String indexedDocumentIndex, String indexedDocumentType, String indexedDocumentId,_                                 String indexedDocumentRouting, String indexedDocumentPreference, Long indexedDocumentVersion) {_        this(field, null, indexedDocumentIndex, indexedDocumentType, indexedDocumentId, indexedDocumentRouting,_            indexedDocumentPreference, indexedDocumentVersion)__    };creates,a,percolator,query,builder,instance,for,percolating,a,document,in,a,remote,index,param,field,the,field,that,contains,the,percolator,query,param,indexed,document,index,the,index,containing,the,document,to,percolate,param,indexed,document,type,the,type,containing,the,document,to,percolate,param,indexed,document,id,the,id,of,the,document,to,percolate,param,indexed,document,routing,the,routing,value,for,the,document,to,percolate,param,indexed,document,preference,the,preference,to,use,when,fetching,the,document,to,percolate,param,indexed,document,version,the,expected,version,of,the,document,to,percolate;public,percolate,query,builder,string,field,string,indexed,document,index,string,indexed,document,type,string,indexed,document,id,string,indexed,document,routing,string,indexed,document,preference,long,indexed,document,version,this,field,null,indexed,document,index,indexed,document,type,indexed,document,id,indexed,document,routing,indexed,document,preference,indexed,document,version
PercolateQueryBuilder -> public PercolateQueryBuilder(String field, String indexedDocumentIndex, String indexedDocumentType, String indexedDocumentId,                                  String indexedDocumentRouting, String indexedDocumentPreference, Long indexedDocumentVersion);1533738061;Creates a percolator query builder instance for percolating a document in a remote index.__@param field                     The field that contains the percolator query_@param indexedDocumentIndex      The index containing the document to percolate_@param indexedDocumentType       The type containing the document to percolate_@param indexedDocumentId         The id of the document to percolate_@param indexedDocumentRouting    The routing value for the document to percolate_@param indexedDocumentPreference The preference to use when fetching the document to percolate_@param indexedDocumentVersion    The expected version of the document to percolate;public PercolateQueryBuilder(String field, String indexedDocumentIndex, String indexedDocumentType, String indexedDocumentId,_                                 String indexedDocumentRouting, String indexedDocumentPreference, Long indexedDocumentVersion) {_        this(field, null, indexedDocumentIndex, indexedDocumentType, indexedDocumentId, indexedDocumentRouting,_            indexedDocumentPreference, indexedDocumentVersion)__    };creates,a,percolator,query,builder,instance,for,percolating,a,document,in,a,remote,index,param,field,the,field,that,contains,the,percolator,query,param,indexed,document,index,the,index,containing,the,document,to,percolate,param,indexed,document,type,the,type,containing,the,document,to,percolate,param,indexed,document,id,the,id,of,the,document,to,percolate,param,indexed,document,routing,the,routing,value,for,the,document,to,percolate,param,indexed,document,preference,the,preference,to,use,when,fetching,the,document,to,percolate,param,indexed,document,version,the,expected,version,of,the,document,to,percolate;public,percolate,query,builder,string,field,string,indexed,document,index,string,indexed,document,type,string,indexed,document,id,string,indexed,document,routing,string,indexed,document,preference,long,indexed,document,version,this,field,null,indexed,document,index,indexed,document,type,indexed,document,id,indexed,document,routing,indexed,document,preference,indexed,document,version
PercolateQueryBuilder -> public PercolateQueryBuilder(String field, String indexedDocumentIndex, String indexedDocumentType, String indexedDocumentId,                                  String indexedDocumentRouting, String indexedDocumentPreference, Long indexedDocumentVersion);1535139672;Creates a percolator query builder instance for percolating a document in a remote index.__@param field                     The field that contains the percolator query_@param indexedDocumentIndex      The index containing the document to percolate_@param indexedDocumentType       The type containing the document to percolate_@param indexedDocumentId         The id of the document to percolate_@param indexedDocumentRouting    The routing value for the document to percolate_@param indexedDocumentPreference The preference to use when fetching the document to percolate_@param indexedDocumentVersion    The expected version of the document to percolate;public PercolateQueryBuilder(String field, String indexedDocumentIndex, String indexedDocumentType, String indexedDocumentId,_                                 String indexedDocumentRouting, String indexedDocumentPreference, Long indexedDocumentVersion) {_        this(field, null, indexedDocumentIndex, indexedDocumentType, indexedDocumentId, indexedDocumentRouting,_            indexedDocumentPreference, indexedDocumentVersion)__    };creates,a,percolator,query,builder,instance,for,percolating,a,document,in,a,remote,index,param,field,the,field,that,contains,the,percolator,query,param,indexed,document,index,the,index,containing,the,document,to,percolate,param,indexed,document,type,the,type,containing,the,document,to,percolate,param,indexed,document,id,the,id,of,the,document,to,percolate,param,indexed,document,routing,the,routing,value,for,the,document,to,percolate,param,indexed,document,preference,the,preference,to,use,when,fetching,the,document,to,percolate,param,indexed,document,version,the,expected,version,of,the,document,to,percolate;public,percolate,query,builder,string,field,string,indexed,document,index,string,indexed,document,type,string,indexed,document,id,string,indexed,document,routing,string,indexed,document,preference,long,indexed,document,version,this,field,null,indexed,document,index,indexed,document,type,indexed,document,id,indexed,document,routing,indexed,document,preference,indexed,document,version
PercolateQueryBuilder -> public PercolateQueryBuilder(String field, String indexedDocumentIndex, String indexedDocumentType, String indexedDocumentId,                                  String indexedDocumentRouting, String indexedDocumentPreference, Long indexedDocumentVersion);1536314350;Creates a percolator query builder instance for percolating a document in a remote index.__@param field                     The field that contains the percolator query_@param indexedDocumentIndex      The index containing the document to percolate_@param indexedDocumentType       The type containing the document to percolate_@param indexedDocumentId         The id of the document to percolate_@param indexedDocumentRouting    The routing value for the document to percolate_@param indexedDocumentPreference The preference to use when fetching the document to percolate_@param indexedDocumentVersion    The expected version of the document to percolate;public PercolateQueryBuilder(String field, String indexedDocumentIndex, String indexedDocumentType, String indexedDocumentId,_                                 String indexedDocumentRouting, String indexedDocumentPreference, Long indexedDocumentVersion) {_        this(field, null, indexedDocumentIndex, indexedDocumentType, indexedDocumentId, indexedDocumentRouting,_            indexedDocumentPreference, indexedDocumentVersion)__    };creates,a,percolator,query,builder,instance,for,percolating,a,document,in,a,remote,index,param,field,the,field,that,contains,the,percolator,query,param,indexed,document,index,the,index,containing,the,document,to,percolate,param,indexed,document,type,the,type,containing,the,document,to,percolate,param,indexed,document,id,the,id,of,the,document,to,percolate,param,indexed,document,routing,the,routing,value,for,the,document,to,percolate,param,indexed,document,preference,the,preference,to,use,when,fetching,the,document,to,percolate,param,indexed,document,version,the,expected,version,of,the,document,to,percolate;public,percolate,query,builder,string,field,string,indexed,document,index,string,indexed,document,type,string,indexed,document,id,string,indexed,document,routing,string,indexed,document,preference,long,indexed,document,version,this,field,null,indexed,document,index,indexed,document,type,indexed,document,id,indexed,document,routing,indexed,document,preference,indexed,document,version
PercolateQueryBuilder -> public PercolateQueryBuilder(String field, String indexedDocumentIndex, String indexedDocumentType, String indexedDocumentId,                                  String indexedDocumentRouting, String indexedDocumentPreference, Long indexedDocumentVersion);1540583181;Creates a percolator query builder instance for percolating a document in a remote index.__@param field                     The field that contains the percolator query_@param indexedDocumentIndex      The index containing the document to percolate_@param indexedDocumentType       The type containing the document to percolate_@param indexedDocumentId         The id of the document to percolate_@param indexedDocumentRouting    The routing value for the document to percolate_@param indexedDocumentPreference The preference to use when fetching the document to percolate_@param indexedDocumentVersion    The expected version of the document to percolate;public PercolateQueryBuilder(String field, String indexedDocumentIndex, String indexedDocumentType, String indexedDocumentId,_                                 String indexedDocumentRouting, String indexedDocumentPreference, Long indexedDocumentVersion) {_        this(field, null, indexedDocumentIndex, indexedDocumentType, indexedDocumentId, indexedDocumentRouting,_            indexedDocumentPreference, indexedDocumentVersion)__    };creates,a,percolator,query,builder,instance,for,percolating,a,document,in,a,remote,index,param,field,the,field,that,contains,the,percolator,query,param,indexed,document,index,the,index,containing,the,document,to,percolate,param,indexed,document,type,the,type,containing,the,document,to,percolate,param,indexed,document,id,the,id,of,the,document,to,percolate,param,indexed,document,routing,the,routing,value,for,the,document,to,percolate,param,indexed,document,preference,the,preference,to,use,when,fetching,the,document,to,percolate,param,indexed,document,version,the,expected,version,of,the,document,to,percolate;public,percolate,query,builder,string,field,string,indexed,document,index,string,indexed,document,type,string,indexed,document,id,string,indexed,document,routing,string,indexed,document,preference,long,indexed,document,version,this,field,null,indexed,document,index,indexed,document,type,indexed,document,id,indexed,document,routing,indexed,document,preference,indexed,document,version
PercolateQueryBuilder -> public PercolateQueryBuilder(String field, String indexedDocumentIndex, String indexedDocumentType, String indexedDocumentId,                                  String indexedDocumentRouting, String indexedDocumentPreference, Long indexedDocumentVersion);1545678410;Creates a percolator query builder instance for percolating a document in a remote index.__@param field                     The field that contains the percolator query_@param indexedDocumentIndex      The index containing the document to percolate_@param indexedDocumentType       The type containing the document to percolate_@param indexedDocumentId         The id of the document to percolate_@param indexedDocumentRouting    The routing value for the document to percolate_@param indexedDocumentPreference The preference to use when fetching the document to percolate_@param indexedDocumentVersion    The expected version of the document to percolate;public PercolateQueryBuilder(String field, String indexedDocumentIndex, String indexedDocumentType, String indexedDocumentId,_                                 String indexedDocumentRouting, String indexedDocumentPreference, Long indexedDocumentVersion) {_        this(field, null, indexedDocumentIndex, indexedDocumentType, indexedDocumentId, indexedDocumentRouting,_            indexedDocumentPreference, indexedDocumentVersion)__    };creates,a,percolator,query,builder,instance,for,percolating,a,document,in,a,remote,index,param,field,the,field,that,contains,the,percolator,query,param,indexed,document,index,the,index,containing,the,document,to,percolate,param,indexed,document,type,the,type,containing,the,document,to,percolate,param,indexed,document,id,the,id,of,the,document,to,percolate,param,indexed,document,routing,the,routing,value,for,the,document,to,percolate,param,indexed,document,preference,the,preference,to,use,when,fetching,the,document,to,percolate,param,indexed,document,version,the,expected,version,of,the,document,to,percolate;public,percolate,query,builder,string,field,string,indexed,document,index,string,indexed,document,type,string,indexed,document,id,string,indexed,document,routing,string,indexed,document,preference,long,indexed,document,version,this,field,null,indexed,document,index,indexed,document,type,indexed,document,id,indexed,document,routing,indexed,document,preference,indexed,document,version
PercolateQueryBuilder -> public PercolateQueryBuilder(String field, BytesReference document, XContentType documentXContentType);1524684173;Creates a percolator query builder instance for percolating a provided document.__@param field                     The field that contains the percolator query_@param document                  The binary blob containing document to percolate_@param documentXContentType      The content type of the binary blob containing the document to percolate;public PercolateQueryBuilder(String field, BytesReference document, XContentType documentXContentType) {_        this(field, null, Collections.singletonList(document), documentXContentType)__    };creates,a,percolator,query,builder,instance,for,percolating,a,provided,document,param,field,the,field,that,contains,the,percolator,query,param,document,the,binary,blob,containing,document,to,percolate,param,document,xcontent,type,the,content,type,of,the,binary,blob,containing,the,document,to,percolate;public,percolate,query,builder,string,field,bytes,reference,document,xcontent,type,document,xcontent,type,this,field,null,collections,singleton,list,document,document,xcontent,type
PercolateQueryBuilder -> public PercolateQueryBuilder(String field, BytesReference document, XContentType documentXContentType);1525334055;Creates a percolator query builder instance for percolating a provided document.__@param field                     The field that contains the percolator query_@param document                  The binary blob containing document to percolate_@param documentXContentType      The content type of the binary blob containing the document to percolate;public PercolateQueryBuilder(String field, BytesReference document, XContentType documentXContentType) {_        this(field, null, Collections.singletonList(document), documentXContentType)__    };creates,a,percolator,query,builder,instance,for,percolating,a,provided,document,param,field,the,field,that,contains,the,percolator,query,param,document,the,binary,blob,containing,document,to,percolate,param,document,xcontent,type,the,content,type,of,the,binary,blob,containing,the,document,to,percolate;public,percolate,query,builder,string,field,bytes,reference,document,xcontent,type,document,xcontent,type,this,field,null,collections,singleton,list,document,document,xcontent,type
PercolateQueryBuilder -> public PercolateQueryBuilder(String field, BytesReference document, XContentType documentXContentType);1531937412;Creates a percolator query builder instance for percolating a provided document.__@param field                     The field that contains the percolator query_@param document                  The binary blob containing document to percolate_@param documentXContentType      The content type of the binary blob containing the document to percolate;public PercolateQueryBuilder(String field, BytesReference document, XContentType documentXContentType) {_        this(field, null, Collections.singletonList(document), documentXContentType)__    };creates,a,percolator,query,builder,instance,for,percolating,a,provided,document,param,field,the,field,that,contains,the,percolator,query,param,document,the,binary,blob,containing,document,to,percolate,param,document,xcontent,type,the,content,type,of,the,binary,blob,containing,the,document,to,percolate;public,percolate,query,builder,string,field,bytes,reference,document,xcontent,type,document,xcontent,type,this,field,null,collections,singleton,list,document,document,xcontent,type
PercolateQueryBuilder -> public PercolateQueryBuilder(String field, BytesReference document, XContentType documentXContentType);1533738061;Creates a percolator query builder instance for percolating a provided document.__@param field                     The field that contains the percolator query_@param document                  The binary blob containing document to percolate_@param documentXContentType      The content type of the binary blob containing the document to percolate;public PercolateQueryBuilder(String field, BytesReference document, XContentType documentXContentType) {_        this(field, null, Collections.singletonList(document), documentXContentType)__    };creates,a,percolator,query,builder,instance,for,percolating,a,provided,document,param,field,the,field,that,contains,the,percolator,query,param,document,the,binary,blob,containing,document,to,percolate,param,document,xcontent,type,the,content,type,of,the,binary,blob,containing,the,document,to,percolate;public,percolate,query,builder,string,field,bytes,reference,document,xcontent,type,document,xcontent,type,this,field,null,collections,singleton,list,document,document,xcontent,type
PercolateQueryBuilder -> public PercolateQueryBuilder(String field, BytesReference document, XContentType documentXContentType);1535139672;Creates a percolator query builder instance for percolating a provided document.__@param field                     The field that contains the percolator query_@param document                  The binary blob containing document to percolate_@param documentXContentType      The content type of the binary blob containing the document to percolate;public PercolateQueryBuilder(String field, BytesReference document, XContentType documentXContentType) {_        this(field, null, Collections.singletonList(document), documentXContentType)__    };creates,a,percolator,query,builder,instance,for,percolating,a,provided,document,param,field,the,field,that,contains,the,percolator,query,param,document,the,binary,blob,containing,document,to,percolate,param,document,xcontent,type,the,content,type,of,the,binary,blob,containing,the,document,to,percolate;public,percolate,query,builder,string,field,bytes,reference,document,xcontent,type,document,xcontent,type,this,field,null,collections,singleton,list,document,document,xcontent,type
PercolateQueryBuilder -> public PercolateQueryBuilder(String field, BytesReference document, XContentType documentXContentType);1536314350;Creates a percolator query builder instance for percolating a provided document.__@param field                     The field that contains the percolator query_@param document                  The binary blob containing document to percolate_@param documentXContentType      The content type of the binary blob containing the document to percolate;public PercolateQueryBuilder(String field, BytesReference document, XContentType documentXContentType) {_        this(field, null, Collections.singletonList(document), documentXContentType)__    };creates,a,percolator,query,builder,instance,for,percolating,a,provided,document,param,field,the,field,that,contains,the,percolator,query,param,document,the,binary,blob,containing,document,to,percolate,param,document,xcontent,type,the,content,type,of,the,binary,blob,containing,the,document,to,percolate;public,percolate,query,builder,string,field,bytes,reference,document,xcontent,type,document,xcontent,type,this,field,null,collections,singleton,list,document,document,xcontent,type
PercolateQueryBuilder -> public PercolateQueryBuilder(String field, BytesReference document, XContentType documentXContentType);1540583181;Creates a percolator query builder instance for percolating a provided document.__@param field                     The field that contains the percolator query_@param document                  The binary blob containing document to percolate_@param documentXContentType      The content type of the binary blob containing the document to percolate;public PercolateQueryBuilder(String field, BytesReference document, XContentType documentXContentType) {_        this(field, null, Collections.singletonList(document), documentXContentType)__    };creates,a,percolator,query,builder,instance,for,percolating,a,provided,document,param,field,the,field,that,contains,the,percolator,query,param,document,the,binary,blob,containing,document,to,percolate,param,document,xcontent,type,the,content,type,of,the,binary,blob,containing,the,document,to,percolate;public,percolate,query,builder,string,field,bytes,reference,document,xcontent,type,document,xcontent,type,this,field,null,collections,singleton,list,document,document,xcontent,type
PercolateQueryBuilder -> public PercolateQueryBuilder(String field, BytesReference document, XContentType documentXContentType);1545678410;Creates a percolator query builder instance for percolating a provided document.__@param field                     The field that contains the percolator query_@param document                  The binary blob containing document to percolate_@param documentXContentType      The content type of the binary blob containing the document to percolate;public PercolateQueryBuilder(String field, BytesReference document, XContentType documentXContentType) {_        this(field, null, Collections.singletonList(document), documentXContentType)__    };creates,a,percolator,query,builder,instance,for,percolating,a,provided,document,param,field,the,field,that,contains,the,percolator,query,param,document,the,binary,blob,containing,document,to,percolate,param,document,xcontent,type,the,content,type,of,the,binary,blob,containing,the,document,to,percolate;public,percolate,query,builder,string,field,bytes,reference,document,xcontent,type,document,xcontent,type,this,field,null,collections,singleton,list,document,document,xcontent,type
PercolateQueryBuilder -> public PercolateQueryBuilder setName(String name);1524684173;Sets the name used for identification purposes in <code>_percolator_document_slot</code> response field_when multiple percolate queries have been specified in the main query.;public PercolateQueryBuilder setName(String name) {_        this.name = name__        return this__    };sets,the,name,used,for,identification,purposes,in,code,code,response,field,when,multiple,percolate,queries,have,been,specified,in,the,main,query;public,percolate,query,builder,set,name,string,name,this,name,name,return,this
PercolateQueryBuilder -> public PercolateQueryBuilder setName(String name);1525334055;Sets the name used for identification purposes in <code>_percolator_document_slot</code> response field_when multiple percolate queries have been specified in the main query.;public PercolateQueryBuilder setName(String name) {_        this.name = name__        return this__    };sets,the,name,used,for,identification,purposes,in,code,code,response,field,when,multiple,percolate,queries,have,been,specified,in,the,main,query;public,percolate,query,builder,set,name,string,name,this,name,name,return,this
PercolateQueryBuilder -> public PercolateQueryBuilder setName(String name);1531937412;Sets the name used for identification purposes in <code>_percolator_document_slot</code> response field_when multiple percolate queries have been specified in the main query.;public PercolateQueryBuilder setName(String name) {_        this.name = name__        return this__    };sets,the,name,used,for,identification,purposes,in,code,code,response,field,when,multiple,percolate,queries,have,been,specified,in,the,main,query;public,percolate,query,builder,set,name,string,name,this,name,name,return,this
PercolateQueryBuilder -> public PercolateQueryBuilder setName(String name);1533738061;Sets the name used for identification purposes in <code>_percolator_document_slot</code> response field_when multiple percolate queries have been specified in the main query.;public PercolateQueryBuilder setName(String name) {_        this.name = name__        return this__    };sets,the,name,used,for,identification,purposes,in,code,code,response,field,when,multiple,percolate,queries,have,been,specified,in,the,main,query;public,percolate,query,builder,set,name,string,name,this,name,name,return,this
PercolateQueryBuilder -> public PercolateQueryBuilder setName(String name);1535139672;Sets the name used for identification purposes in <code>_percolator_document_slot</code> response field_when multiple percolate queries have been specified in the main query.;public PercolateQueryBuilder setName(String name) {_        this.name = name__        return this__    };sets,the,name,used,for,identification,purposes,in,code,code,response,field,when,multiple,percolate,queries,have,been,specified,in,the,main,query;public,percolate,query,builder,set,name,string,name,this,name,name,return,this
PercolateQueryBuilder -> public PercolateQueryBuilder setName(String name);1536314350;Sets the name used for identification purposes in <code>_percolator_document_slot</code> response field_when multiple percolate queries have been specified in the main query.;public PercolateQueryBuilder setName(String name) {_        this.name = name__        return this__    };sets,the,name,used,for,identification,purposes,in,code,code,response,field,when,multiple,percolate,queries,have,been,specified,in,the,main,query;public,percolate,query,builder,set,name,string,name,this,name,name,return,this
PercolateQueryBuilder -> public PercolateQueryBuilder setName(String name);1540583181;Sets the name used for identification purposes in <code>_percolator_document_slot</code> response field_when multiple percolate queries have been specified in the main query.;public PercolateQueryBuilder setName(String name) {_        this.name = name__        return this__    };sets,the,name,used,for,identification,purposes,in,code,code,response,field,when,multiple,percolate,queries,have,been,specified,in,the,main,query;public,percolate,query,builder,set,name,string,name,this,name,name,return,this
PercolateQueryBuilder -> public PercolateQueryBuilder setName(String name);1545678410;Sets the name used for identification purposes in <code>_percolator_document_slot</code> response field_when multiple percolate queries have been specified in the main query.;public PercolateQueryBuilder setName(String name) {_        this.name = name__        return this__    };sets,the,name,used,for,identification,purposes,in,code,code,response,field,when,multiple,percolate,queries,have,been,specified,in,the,main,query;public,percolate,query,builder,set,name,string,name,this,name,name,return,this
PercolateQueryBuilder -> public PercolateQueryBuilder(String field, List<BytesReference> documents, XContentType documentXContentType);1524684173;Creates a percolator query builder instance for percolating a provided document.__@param field                     The field that contains the percolator query_@param documents                  The binary blob containing document to percolate_@param documentXContentType      The content type of the binary blob containing the document to percolate;public PercolateQueryBuilder(String field, List<BytesReference> documents, XContentType documentXContentType) {_        this(field, null, documents, documentXContentType)__    };creates,a,percolator,query,builder,instance,for,percolating,a,provided,document,param,field,the,field,that,contains,the,percolator,query,param,documents,the,binary,blob,containing,document,to,percolate,param,document,xcontent,type,the,content,type,of,the,binary,blob,containing,the,document,to,percolate;public,percolate,query,builder,string,field,list,bytes,reference,documents,xcontent,type,document,xcontent,type,this,field,null,documents,document,xcontent,type
PercolateQueryBuilder -> public PercolateQueryBuilder(String field, List<BytesReference> documents, XContentType documentXContentType);1525334055;Creates a percolator query builder instance for percolating a provided document.__@param field                     The field that contains the percolator query_@param documents                  The binary blob containing document to percolate_@param documentXContentType      The content type of the binary blob containing the document to percolate;public PercolateQueryBuilder(String field, List<BytesReference> documents, XContentType documentXContentType) {_        this(field, null, documents, documentXContentType)__    };creates,a,percolator,query,builder,instance,for,percolating,a,provided,document,param,field,the,field,that,contains,the,percolator,query,param,documents,the,binary,blob,containing,document,to,percolate,param,document,xcontent,type,the,content,type,of,the,binary,blob,containing,the,document,to,percolate;public,percolate,query,builder,string,field,list,bytes,reference,documents,xcontent,type,document,xcontent,type,this,field,null,documents,document,xcontent,type
PercolateQueryBuilder -> public PercolateQueryBuilder(String field, List<BytesReference> documents, XContentType documentXContentType);1531937412;Creates a percolator query builder instance for percolating a provided document.__@param field                     The field that contains the percolator query_@param documents                  The binary blob containing document to percolate_@param documentXContentType      The content type of the binary blob containing the document to percolate;public PercolateQueryBuilder(String field, List<BytesReference> documents, XContentType documentXContentType) {_        this(field, null, documents, documentXContentType)__    };creates,a,percolator,query,builder,instance,for,percolating,a,provided,document,param,field,the,field,that,contains,the,percolator,query,param,documents,the,binary,blob,containing,document,to,percolate,param,document,xcontent,type,the,content,type,of,the,binary,blob,containing,the,document,to,percolate;public,percolate,query,builder,string,field,list,bytes,reference,documents,xcontent,type,document,xcontent,type,this,field,null,documents,document,xcontent,type
PercolateQueryBuilder -> public PercolateQueryBuilder(String field, List<BytesReference> documents, XContentType documentXContentType);1533738061;Creates a percolator query builder instance for percolating a provided document.__@param field                     The field that contains the percolator query_@param documents                  The binary blob containing document to percolate_@param documentXContentType      The content type of the binary blob containing the document to percolate;public PercolateQueryBuilder(String field, List<BytesReference> documents, XContentType documentXContentType) {_        this(field, null, documents, documentXContentType)__    };creates,a,percolator,query,builder,instance,for,percolating,a,provided,document,param,field,the,field,that,contains,the,percolator,query,param,documents,the,binary,blob,containing,document,to,percolate,param,document,xcontent,type,the,content,type,of,the,binary,blob,containing,the,document,to,percolate;public,percolate,query,builder,string,field,list,bytes,reference,documents,xcontent,type,document,xcontent,type,this,field,null,documents,document,xcontent,type
PercolateQueryBuilder -> public PercolateQueryBuilder(String field, List<BytesReference> documents, XContentType documentXContentType);1535139672;Creates a percolator query builder instance for percolating a provided document.__@param field                     The field that contains the percolator query_@param documents                  The binary blob containing document to percolate_@param documentXContentType      The content type of the binary blob containing the document to percolate;public PercolateQueryBuilder(String field, List<BytesReference> documents, XContentType documentXContentType) {_        this(field, null, documents, documentXContentType)__    };creates,a,percolator,query,builder,instance,for,percolating,a,provided,document,param,field,the,field,that,contains,the,percolator,query,param,documents,the,binary,blob,containing,document,to,percolate,param,document,xcontent,type,the,content,type,of,the,binary,blob,containing,the,document,to,percolate;public,percolate,query,builder,string,field,list,bytes,reference,documents,xcontent,type,document,xcontent,type,this,field,null,documents,document,xcontent,type
PercolateQueryBuilder -> public PercolateQueryBuilder(String field, List<BytesReference> documents, XContentType documentXContentType);1536314350;Creates a percolator query builder instance for percolating a provided document.__@param field                     The field that contains the percolator query_@param documents                  The binary blob containing document to percolate_@param documentXContentType      The content type of the binary blob containing the document to percolate;public PercolateQueryBuilder(String field, List<BytesReference> documents, XContentType documentXContentType) {_        this(field, null, documents, documentXContentType)__    };creates,a,percolator,query,builder,instance,for,percolating,a,provided,document,param,field,the,field,that,contains,the,percolator,query,param,documents,the,binary,blob,containing,document,to,percolate,param,document,xcontent,type,the,content,type,of,the,binary,blob,containing,the,document,to,percolate;public,percolate,query,builder,string,field,list,bytes,reference,documents,xcontent,type,document,xcontent,type,this,field,null,documents,document,xcontent,type
PercolateQueryBuilder -> public PercolateQueryBuilder(String field, List<BytesReference> documents, XContentType documentXContentType);1540583181;Creates a percolator query builder instance for percolating a provided document.__@param field                     The field that contains the percolator query_@param documents                  The binary blob containing document to percolate_@param documentXContentType      The content type of the binary blob containing the document to percolate;public PercolateQueryBuilder(String field, List<BytesReference> documents, XContentType documentXContentType) {_        this(field, null, documents, documentXContentType)__    };creates,a,percolator,query,builder,instance,for,percolating,a,provided,document,param,field,the,field,that,contains,the,percolator,query,param,documents,the,binary,blob,containing,document,to,percolate,param,document,xcontent,type,the,content,type,of,the,binary,blob,containing,the,document,to,percolate;public,percolate,query,builder,string,field,list,bytes,reference,documents,xcontent,type,document,xcontent,type,this,field,null,documents,document,xcontent,type
PercolateQueryBuilder -> public PercolateQueryBuilder(String field, List<BytesReference> documents, XContentType documentXContentType);1545678410;Creates a percolator query builder instance for percolating a provided document.__@param field                     The field that contains the percolator query_@param documents                  The binary blob containing document to percolate_@param documentXContentType      The content type of the binary blob containing the document to percolate;public PercolateQueryBuilder(String field, List<BytesReference> documents, XContentType documentXContentType) {_        this(field, null, documents, documentXContentType)__    };creates,a,percolator,query,builder,instance,for,percolating,a,provided,document,param,field,the,field,that,contains,the,percolator,query,param,documents,the,binary,blob,containing,document,to,percolate,param,document,xcontent,type,the,content,type,of,the,binary,blob,containing,the,document,to,percolate;public,percolate,query,builder,string,field,list,bytes,reference,documents,xcontent,type,document,xcontent,type,this,field,null,documents,document,xcontent,type
PercolateQueryBuilder -> @Deprecated     public PercolateQueryBuilder(String field, String documentType, BytesReference document);1524684173;@deprecated use {@link #PercolateQueryBuilder(String, BytesReference, XContentType)} with the document content_type to avoid autodetection.;@Deprecated_    public PercolateQueryBuilder(String field, String documentType, BytesReference document) {_        this(field, documentType, Collections.singletonList(document), XContentHelper.xContentType(document))__    };deprecated,use,link,percolate,query,builder,string,bytes,reference,xcontent,type,with,the,document,content,type,to,avoid,autodetection;deprecated,public,percolate,query,builder,string,field,string,document,type,bytes,reference,document,this,field,document,type,collections,singleton,list,document,xcontent,helper,x,content,type,document
PercolateQueryBuilder -> @Deprecated     public PercolateQueryBuilder(String field, String documentType, BytesReference document);1525334055;@deprecated use {@link #PercolateQueryBuilder(String, BytesReference, XContentType)} with the document content_type to avoid autodetection.;@Deprecated_    public PercolateQueryBuilder(String field, String documentType, BytesReference document) {_        this(field, documentType, Collections.singletonList(document), XContentHelper.xContentType(document))__    };deprecated,use,link,percolate,query,builder,string,bytes,reference,xcontent,type,with,the,document,content,type,to,avoid,autodetection;deprecated,public,percolate,query,builder,string,field,string,document,type,bytes,reference,document,this,field,document,type,collections,singleton,list,document,xcontent,helper,x,content,type,document
PercolateQueryBuilder -> @Deprecated     public PercolateQueryBuilder(String field, String documentType, BytesReference document);1531937412;@deprecated use {@link #PercolateQueryBuilder(String, BytesReference, XContentType)} with the document content_type to avoid autodetection.;@Deprecated_    public PercolateQueryBuilder(String field, String documentType, BytesReference document) {_        this(field, documentType, Collections.singletonList(document), XContentHelper.xContentType(document))__    };deprecated,use,link,percolate,query,builder,string,bytes,reference,xcontent,type,with,the,document,content,type,to,avoid,autodetection;deprecated,public,percolate,query,builder,string,field,string,document,type,bytes,reference,document,this,field,document,type,collections,singleton,list,document,xcontent,helper,x,content,type,document
PercolateQueryBuilder -> @Deprecated     public PercolateQueryBuilder(String field, String documentType, BytesReference document);1533738061;@deprecated use {@link #PercolateQueryBuilder(String, BytesReference, XContentType)} with the document content_type to avoid autodetection.;@Deprecated_    public PercolateQueryBuilder(String field, String documentType, BytesReference document) {_        this(field, documentType, Collections.singletonList(document), XContentHelper.xContentType(document))__    };deprecated,use,link,percolate,query,builder,string,bytes,reference,xcontent,type,with,the,document,content,type,to,avoid,autodetection;deprecated,public,percolate,query,builder,string,field,string,document,type,bytes,reference,document,this,field,document,type,collections,singleton,list,document,xcontent,helper,x,content,type,document
PercolateQueryBuilder -> @Deprecated     public PercolateQueryBuilder(String field, String documentType, BytesReference document);1535139672;@deprecated use {@link #PercolateQueryBuilder(String, BytesReference, XContentType)} with the document content_type to avoid autodetection.;@Deprecated_    public PercolateQueryBuilder(String field, String documentType, BytesReference document) {_        this(field, documentType, Collections.singletonList(document), XContentHelper.xContentType(document))__    };deprecated,use,link,percolate,query,builder,string,bytes,reference,xcontent,type,with,the,document,content,type,to,avoid,autodetection;deprecated,public,percolate,query,builder,string,field,string,document,type,bytes,reference,document,this,field,document,type,collections,singleton,list,document,xcontent,helper,x,content,type,document
PercolateQueryBuilder -> @Deprecated     public PercolateQueryBuilder(String field, String documentType, BytesReference document);1536314350;@deprecated use {@link #PercolateQueryBuilder(String, BytesReference, XContentType)} with the document content_type to avoid autodetection.;@Deprecated_    public PercolateQueryBuilder(String field, String documentType, BytesReference document) {_        this(field, documentType, Collections.singletonList(document), XContentHelper.xContentType(document))__    };deprecated,use,link,percolate,query,builder,string,bytes,reference,xcontent,type,with,the,document,content,type,to,avoid,autodetection;deprecated,public,percolate,query,builder,string,field,string,document,type,bytes,reference,document,this,field,document,type,collections,singleton,list,document,xcontent,helper,x,content,type,document
PercolateQueryBuilder -> @Deprecated     public PercolateQueryBuilder(String field, String documentType, BytesReference document);1540583181;@deprecated use {@link #PercolateQueryBuilder(String, BytesReference, XContentType)} with the document content_type to avoid autodetection.;@Deprecated_    public PercolateQueryBuilder(String field, String documentType, BytesReference document) {_        this(field, documentType, Collections.singletonList(document), XContentHelper.xContentType(document))__    };deprecated,use,link,percolate,query,builder,string,bytes,reference,xcontent,type,with,the,document,content,type,to,avoid,autodetection;deprecated,public,percolate,query,builder,string,field,string,document,type,bytes,reference,document,this,field,document,type,collections,singleton,list,document,xcontent,helper,x,content,type,document
PercolateQueryBuilder -> @Deprecated     public PercolateQueryBuilder(String field, String documentType, BytesReference document);1545678410;@deprecated use {@link #PercolateQueryBuilder(String, BytesReference, XContentType)} with the document content_type to avoid autodetection.;@Deprecated_    public PercolateQueryBuilder(String field, String documentType, BytesReference document) {_        this(field, documentType, Collections.singletonList(document), XContentHelper.xContentType(document))__    };deprecated,use,link,percolate,query,builder,string,bytes,reference,xcontent,type,with,the,document,content,type,to,avoid,autodetection;deprecated,public,percolate,query,builder,string,field,string,document,type,bytes,reference,document,this,field,document,type,collections,singleton,list,document,xcontent,helper,x,content,type,document
