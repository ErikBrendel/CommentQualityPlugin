# id;timestamp;commentText;codeText;commentWords;codeWords
HasChildQueryBuilderTests -> @Override     protected HasChildQueryBuilder doCreateTestQueryBuilder();1524684173;@return a {@link HasChildQueryBuilder} with random values all over the place;@Override_    protected HasChildQueryBuilder doCreateTestQueryBuilder() {_        int min = randomIntBetween(0, Integer.MAX_VALUE / 2)__        int max = randomIntBetween(min, Integer.MAX_VALUE)___        QueryBuilder innerQueryBuilder = new MatchAllQueryBuilder()__        if (randomBoolean()) {_            requiresRewrite = true__            innerQueryBuilder = new WrapperQueryBuilder(innerQueryBuilder.toString())__        }__        HasChildQueryBuilder hqb = new HasChildQueryBuilder(CHILD_DOC, innerQueryBuilder,_                RandomPicks.randomFrom(random(), ScoreMode.values()))__        hqb.minMaxChildren(min, max)__        hqb.ignoreUnmapped(randomBoolean())__        if (randomBoolean()) {_            hqb.innerHit(new InnerHitBuilder()_                    .setName(randomAlphaOfLengthBetween(1, 10))_                    .setSize(randomIntBetween(0, 100))_                    .addSort(new FieldSortBuilder(STRING_FIELD_NAME_2).order(SortOrder.ASC)))__        }_        return hqb__    };return,a,link,has,child,query,builder,with,random,values,all,over,the,place;override,protected,has,child,query,builder,do,create,test,query,builder,int,min,random,int,between,0,integer,2,int,max,random,int,between,min,integer,query,builder,inner,query,builder,new,match,all,query,builder,if,random,boolean,requires,rewrite,true,inner,query,builder,new,wrapper,query,builder,inner,query,builder,to,string,has,child,query,builder,hqb,new,has,child,query,builder,inner,query,builder,random,picks,random,from,random,score,mode,values,hqb,min,max,children,min,max,hqb,ignore,unmapped,random,boolean,if,random,boolean,hqb,inner,hit,new,inner,hit,builder,set,name,random,alpha,of,length,between,1,10,set,size,random,int,between,0,100,add,sort,new,field,sort,builder,order,sort,order,asc,return,hqb
HasChildQueryBuilderTests -> @Override     protected HasChildQueryBuilder doCreateTestQueryBuilder();1533921794;@return a {@link HasChildQueryBuilder} with random values all over the place;@Override_    protected HasChildQueryBuilder doCreateTestQueryBuilder() {_        int min = randomIntBetween(0, Integer.MAX_VALUE / 2)__        int max = randomIntBetween(min, Integer.MAX_VALUE)___        QueryBuilder innerQueryBuilder = new MatchAllQueryBuilder()__        if (randomBoolean()) {_            requiresRewrite = true__            innerQueryBuilder = new WrapperQueryBuilder(innerQueryBuilder.toString())__        }__        HasChildQueryBuilder hqb = new HasChildQueryBuilder(CHILD_DOC, innerQueryBuilder,_                RandomPicks.randomFrom(random(), ScoreMode.values()))__        hqb.minMaxChildren(min, max)__        hqb.ignoreUnmapped(randomBoolean())__        if (randomBoolean()) {_            hqb.innerHit(new InnerHitBuilder()_                    .setName(randomAlphaOfLengthBetween(1, 10))_                    .setSize(randomIntBetween(0, 100))_                    .addSort(new FieldSortBuilder(STRING_FIELD_NAME_2).order(SortOrder.ASC)))__        }_        return hqb__    };return,a,link,has,child,query,builder,with,random,values,all,over,the,place;override,protected,has,child,query,builder,do,create,test,query,builder,int,min,random,int,between,0,integer,2,int,max,random,int,between,min,integer,query,builder,inner,query,builder,new,match,all,query,builder,if,random,boolean,requires,rewrite,true,inner,query,builder,new,wrapper,query,builder,inner,query,builder,to,string,has,child,query,builder,hqb,new,has,child,query,builder,inner,query,builder,random,picks,random,from,random,score,mode,values,hqb,min,max,children,min,max,hqb,ignore,unmapped,random,boolean,if,random,boolean,hqb,inner,hit,new,inner,hit,builder,set,name,random,alpha,of,length,between,1,10,set,size,random,int,between,0,100,add,sort,new,field,sort,builder,order,sort,order,asc,return,hqb
HasChildQueryBuilderTests -> @Override     protected HasChildQueryBuilder doCreateTestQueryBuilder();1535139672;@return a {@link HasChildQueryBuilder} with random values all over the place;@Override_    protected HasChildQueryBuilder doCreateTestQueryBuilder() {_        int min = randomIntBetween(0, Integer.MAX_VALUE / 2)__        int max = randomIntBetween(min, Integer.MAX_VALUE)___        QueryBuilder innerQueryBuilder = new MatchAllQueryBuilder()__        if (randomBoolean()) {_            requiresRewrite = true__            innerQueryBuilder = new WrapperQueryBuilder(innerQueryBuilder.toString())__        }__        HasChildQueryBuilder hqb = new HasChildQueryBuilder(CHILD_DOC, innerQueryBuilder,_                RandomPicks.randomFrom(random(), ScoreMode.values()))__        hqb.minMaxChildren(min, max)__        hqb.ignoreUnmapped(randomBoolean())__        if (randomBoolean()) {_            hqb.innerHit(new InnerHitBuilder()_                    .setName(randomAlphaOfLengthBetween(1, 10))_                    .setSize(randomIntBetween(0, 100))_                    .addSort(new FieldSortBuilder(STRING_FIELD_NAME_2).order(SortOrder.ASC)))__        }_        return hqb__    };return,a,link,has,child,query,builder,with,random,values,all,over,the,place;override,protected,has,child,query,builder,do,create,test,query,builder,int,min,random,int,between,0,integer,2,int,max,random,int,between,min,integer,query,builder,inner,query,builder,new,match,all,query,builder,if,random,boolean,requires,rewrite,true,inner,query,builder,new,wrapper,query,builder,inner,query,builder,to,string,has,child,query,builder,hqb,new,has,child,query,builder,inner,query,builder,random,picks,random,from,random,score,mode,values,hqb,min,max,children,min,max,hqb,ignore,unmapped,random,boolean,if,random,boolean,hqb,inner,hit,new,inner,hit,builder,set,name,random,alpha,of,length,between,1,10,set,size,random,int,between,0,100,add,sort,new,field,sort,builder,order,sort,order,asc,return,hqb
HasChildQueryBuilderTests -> @Override     protected HasChildQueryBuilder doCreateTestQueryBuilder();1548230518;@return a {@link HasChildQueryBuilder} with random values all over the place;@Override_    protected HasChildQueryBuilder doCreateTestQueryBuilder() {_        int min = randomIntBetween(0, Integer.MAX_VALUE / 2)__        int max = randomIntBetween(min, Integer.MAX_VALUE)___        QueryBuilder innerQueryBuilder = new MatchAllQueryBuilder()__        if (randomBoolean()) {_            requiresRewrite = true__            innerQueryBuilder = new WrapperQueryBuilder(innerQueryBuilder.toString())__        }__        HasChildQueryBuilder hqb = new HasChildQueryBuilder(CHILD_DOC, innerQueryBuilder,_                RandomPicks.randomFrom(random(), ScoreMode.values()))__        hqb.minMaxChildren(min, max)__        hqb.ignoreUnmapped(randomBoolean())__        if (randomBoolean()) {_            hqb.innerHit(new InnerHitBuilder()_                    .setName(randomAlphaOfLengthBetween(1, 10))_                    .setSize(randomIntBetween(0, 100))_                    .addSort(new FieldSortBuilder(STRING_FIELD_NAME_2).order(SortOrder.ASC)))__        }_        return hqb__    };return,a,link,has,child,query,builder,with,random,values,all,over,the,place;override,protected,has,child,query,builder,do,create,test,query,builder,int,min,random,int,between,0,integer,2,int,max,random,int,between,min,integer,query,builder,inner,query,builder,new,match,all,query,builder,if,random,boolean,requires,rewrite,true,inner,query,builder,new,wrapper,query,builder,inner,query,builder,to,string,has,child,query,builder,hqb,new,has,child,query,builder,inner,query,builder,random,picks,random,from,random,score,mode,values,hqb,min,max,children,min,max,hqb,ignore,unmapped,random,boolean,if,random,boolean,hqb,inner,hit,new,inner,hit,builder,set,name,random,alpha,of,length,between,1,10,set,size,random,int,between,0,100,add,sort,new,field,sort,builder,order,sort,order,asc,return,hqb
HasChildQueryBuilderTests -> @Override     protected HasChildQueryBuilder doCreateTestQueryBuilder();1549032830;@return a {@link HasChildQueryBuilder} with random values all over the place;@Override_    protected HasChildQueryBuilder doCreateTestQueryBuilder() {_        int min = randomIntBetween(0, Integer.MAX_VALUE / 2)__        int max = randomIntBetween(min, Integer.MAX_VALUE)___        QueryBuilder innerQueryBuilder = new MatchAllQueryBuilder()__        if (randomBoolean()) {_            requiresRewrite = true__            innerQueryBuilder = new WrapperQueryBuilder(innerQueryBuilder.toString())__        }__        HasChildQueryBuilder hqb = new HasChildQueryBuilder(CHILD_DOC, innerQueryBuilder,_                RandomPicks.randomFrom(random(), ScoreMode.values()))__        hqb.minMaxChildren(min, max)__        hqb.ignoreUnmapped(randomBoolean())__        if (randomBoolean()) {_            hqb.innerHit(new InnerHitBuilder()_                    .setName(randomAlphaOfLengthBetween(1, 10))_                    .setSize(randomIntBetween(0, 100))_                    .addSort(new FieldSortBuilder(STRING_FIELD_NAME_2).order(SortOrder.ASC)))__        }_        return hqb__    };return,a,link,has,child,query,builder,with,random,values,all,over,the,place;override,protected,has,child,query,builder,do,create,test,query,builder,int,min,random,int,between,0,integer,2,int,max,random,int,between,min,integer,query,builder,inner,query,builder,new,match,all,query,builder,if,random,boolean,requires,rewrite,true,inner,query,builder,new,wrapper,query,builder,inner,query,builder,to,string,has,child,query,builder,hqb,new,has,child,query,builder,inner,query,builder,random,picks,random,from,random,score,mode,values,hqb,min,max,children,min,max,hqb,ignore,unmapped,random,boolean,if,random,boolean,hqb,inner,hit,new,inner,hit,builder,set,name,random,alpha,of,length,between,1,10,set,size,random,int,between,0,100,add,sort,new,field,sort,builder,order,sort,order,asc,return,hqb
HasChildQueryBuilderTests -> public void testSerializationBWC() throws IOException;1524684173;Test (de)serialization on all previous released versions;public void testSerializationBWC() throws IOException {_        for (Version version : VersionUtils.allReleasedVersions()) {_            HasChildQueryBuilder testQuery = createTestQueryBuilder()__            if (version.before(Version.V_5_2_0) && testQuery.innerHit() != null) {_                _                testQuery.innerHit().setIgnoreUnmapped(false)__            }_            assertSerialization(testQuery, version)__        }_    };test,de,serialization,on,all,previous,released,versions;public,void,test,serialization,bwc,throws,ioexception,for,version,version,version,utils,all,released,versions,has,child,query,builder,test,query,create,test,query,builder,if,version,before,version,test,query,inner,hit,null,test,query,inner,hit,set,ignore,unmapped,false,assert,serialization,test,query,version
HasChildQueryBuilderTests -> public void testSerializationBWC() throws IOException;1533921794;Test (de)serialization on all previous released versions;public void testSerializationBWC() throws IOException {_        for (Version version : VersionUtils.allReleasedVersions()) {_            HasChildQueryBuilder testQuery = createTestQueryBuilder()__            if (version.before(Version.V_5_2_0) && testQuery.innerHit() != null) {_                _                testQuery.innerHit().setIgnoreUnmapped(false)__            }_            assertSerialization(testQuery, version)__        }_    };test,de,serialization,on,all,previous,released,versions;public,void,test,serialization,bwc,throws,ioexception,for,version,version,version,utils,all,released,versions,has,child,query,builder,test,query,create,test,query,builder,if,version,before,version,test,query,inner,hit,null,test,query,inner,hit,set,ignore,unmapped,false,assert,serialization,test,query,version
HasChildQueryBuilderTests -> public void testSerializationBWC() throws IOException;1535139672;Test (de)serialization on all previous released versions;public void testSerializationBWC() throws IOException {_        for (Version version : VersionUtils.allReleasedVersions()) {_            HasChildQueryBuilder testQuery = createTestQueryBuilder()__            assertSerialization(testQuery, version)__        }_    };test,de,serialization,on,all,previous,released,versions;public,void,test,serialization,bwc,throws,ioexception,for,version,version,version,utils,all,released,versions,has,child,query,builder,test,query,create,test,query,builder,assert,serialization,test,query,version
HasChildQueryBuilderTests -> public void testSerializationBWC() throws IOException;1548230518;Test (de)serialization on all previous released versions;public void testSerializationBWC() throws IOException {_        for (Version version : VersionUtils.allReleasedVersions()) {_            HasChildQueryBuilder testQuery = createTestQueryBuilder()__            assertSerialization(testQuery, version)__        }_    };test,de,serialization,on,all,previous,released,versions;public,void,test,serialization,bwc,throws,ioexception,for,version,version,version,utils,all,released,versions,has,child,query,builder,test,query,create,test,query,builder,assert,serialization,test,query,version
HasChildQueryBuilderTests -> public void testSerializationBWC() throws IOException;1549032830;Test (de)serialization on all previous released versions;public void testSerializationBWC() throws IOException {_        for (Version version : VersionUtils.allReleasedVersions()) {_            HasChildQueryBuilder testQuery = createTestQueryBuilder()__            assertSerialization(testQuery, version)__        }_    };test,de,serialization,on,all,previous,released,versions;public,void,test,serialization,bwc,throws,ioexception,for,version,version,version,utils,all,released,versions,has,child,query,builder,test,query,create,test,query,builder,assert,serialization,test,query,version
