commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public Set<String> getChildren() {     return children. }
false;public;1;4;;public Builder eagerGlobalOrdinals(boolean eagerGlobalOrdinals) {     fieldType().setEagerGlobalOrdinals(eagerGlobalOrdinals).     return builder. }
false;public;1;5;;@Override public ParentIdFieldMapper build(BuilderContext context) {     fieldType.setName(name).     return new ParentIdFieldMapper(name, parent, children, fieldType, context.indexSettings()). }
false;public;0;3;;public ParentIdFieldType clone() {     return new ParentIdFieldType(this). }
false;public;0;4;;@Override public String typeName() {     return CONTENT_TYPE. }
false;public;1;5;;@Override public IndexFieldData.Builder fielddataBuilder(String fullyQualifiedIndexName) {     failIfNoDocValues().     return new DocValuesIndexFieldData.Builder(). }
false;public;1;8;;@Override public Object valueForDisplay(Object value) {     if (value == null) {         return null.     }     BytesRef binaryValue = (BytesRef) value.     return binaryValue.utf8ToString(). }
false;public;1;4;;@Override public Query existsQuery(QueryShardContext context) {     return new DocValuesFieldExistsQuery(name()). }
false;protected;0;4;;@Override protected ParentIdFieldMapper clone() {     return (ParentIdFieldMapper) super.clone(). }
true;public;0;3;/**  * Returns the parent name associated with this mapper.  */ ;/**  * Returns the parent name associated with this mapper.  */ public String getParentName() {     return parentName. }
false;public;0;3;;public Query getParentFilter() {     return new TermQuery(new Term(name().substring(0, name().indexOf('#')), parentName)). }
true;public;0;3;/**  * Returns the children names associated with this mapper.  */ ;/**  * Returns the children names associated with this mapper.  */ public Collection<String> getChildren() {     return children. }
false;public;1;3;;public Query getChildFilter(String type) {     return new TermQuery(new Term(name().substring(0, name().indexOf('#')), type)). }
false;public;0;7;;public Query getChildrenFilter() {     BooleanQuery.Builder builder = new BooleanQuery.Builder().     for (String child : children) {         builder.add(getChildFilter(child), BooleanClause.Occur.SHOULD).     }     return new ConstantScoreQuery(builder.build()). }
false;protected;2;11;;@Override protected void parseCreateField(ParseContext context, List<IndexableField> fields) throws IOException {     if (context.externalValueSet() == false) {         throw new IllegalStateException("external value not set").     }     String refId = (String) context.externalValue().     BytesRef binaryValue = new BytesRef(refId).     Field field = new Field(fieldType().name(), binaryValue, fieldType()).     fields.add(field).     fields.add(new SortedDocValuesField(fieldType().name(), binaryValue)). }
false;protected;1;6;;@Override protected void doMerge(Mapper mergeWith) {     super.doMerge(mergeWith).     ParentIdFieldMapper parentMergeWith = (ParentIdFieldMapper) mergeWith.     this.children = parentMergeWith.children. }
false;protected;0;4;;@Override protected String contentType() {     return CONTENT_TYPE. }
