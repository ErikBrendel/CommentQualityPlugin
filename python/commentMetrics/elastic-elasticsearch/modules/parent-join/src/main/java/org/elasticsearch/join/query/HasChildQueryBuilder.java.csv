# id;timestamp;commentText;codeText;commentWords;codeWords
HasChildQueryBuilder -> public InnerHitBuilder innerHit();1524684173;Returns inner hit definition in the scope of this query and reusing the defined type and query.;public InnerHitBuilder innerHit() {_        return innerHitBuilder__    };returns,inner,hit,definition,in,the,scope,of,this,query,and,reusing,the,defined,type,and,query;public,inner,hit,builder,inner,hit,return,inner,hit,builder
HasChildQueryBuilder -> public InnerHitBuilder innerHit();1525076988;Returns inner hit definition in the scope of this query and reusing the defined type and query.;public InnerHitBuilder innerHit() {_        return innerHitBuilder__    };returns,inner,hit,definition,in,the,scope,of,this,query,and,reusing,the,defined,type,and,query;public,inner,hit,builder,inner,hit,return,inner,hit,builder
HasChildQueryBuilder -> public InnerHitBuilder innerHit();1535139672;Returns inner hit definition in the scope of this query and reusing the defined type and query.;public InnerHitBuilder innerHit() {_        return innerHitBuilder__    };returns,inner,hit,definition,in,the,scope,of,this,query,and,reusing,the,defined,type,and,query;public,inner,hit,builder,inner,hit,return,inner,hit,builder
HasChildQueryBuilder -> public InnerHitBuilder innerHit();1536964057;Returns inner hit definition in the scope of this query and reusing the defined type and query.;public InnerHitBuilder innerHit() {_        return innerHitBuilder__    };returns,inner,hit,definition,in,the,scope,of,this,query,and,reusing,the,defined,type,and,query;public,inner,hit,builder,inner,hit,return,inner,hit,builder
HasChildQueryBuilder -> public InnerHitBuilder innerHit();1549032830;Returns inner hit definition in the scope of this query and reusing the defined type and query.;public InnerHitBuilder innerHit() {_        return innerHitBuilder__    };returns,inner,hit,definition,in,the,scope,of,this,query,and,reusing,the,defined,type,and,query;public,inner,hit,builder,inner,hit,return,inner,hit,builder
HasChildQueryBuilder -> public HasChildQueryBuilder ignoreUnmapped(boolean ignoreUnmapped);1524684173;Sets whether the query builder should ignore unmapped types (and run a_{@link MatchNoDocsQuery} in place of this query) or throw an exception if_the type is unmapped.;public HasChildQueryBuilder ignoreUnmapped(boolean ignoreUnmapped) {_        this.ignoreUnmapped = ignoreUnmapped__        if (innerHitBuilder!= null ){_            innerHitBuilder.setIgnoreUnmapped(ignoreUnmapped)__        }_        return this__    };sets,whether,the,query,builder,should,ignore,unmapped,types,and,run,a,link,match,no,docs,query,in,place,of,this,query,or,throw,an,exception,if,the,type,is,unmapped;public,has,child,query,builder,ignore,unmapped,boolean,ignore,unmapped,this,ignore,unmapped,ignore,unmapped,if,inner,hit,builder,null,inner,hit,builder,set,ignore,unmapped,ignore,unmapped,return,this
HasChildQueryBuilder -> public HasChildQueryBuilder ignoreUnmapped(boolean ignoreUnmapped);1525076988;Sets whether the query builder should ignore unmapped types (and run a_{@link MatchNoDocsQuery} in place of this query) or throw an exception if_the type is unmapped.;public HasChildQueryBuilder ignoreUnmapped(boolean ignoreUnmapped) {_        this.ignoreUnmapped = ignoreUnmapped__        if (innerHitBuilder!= null ){_            innerHitBuilder.setIgnoreUnmapped(ignoreUnmapped)__        }_        return this__    };sets,whether,the,query,builder,should,ignore,unmapped,types,and,run,a,link,match,no,docs,query,in,place,of,this,query,or,throw,an,exception,if,the,type,is,unmapped;public,has,child,query,builder,ignore,unmapped,boolean,ignore,unmapped,this,ignore,unmapped,ignore,unmapped,if,inner,hit,builder,null,inner,hit,builder,set,ignore,unmapped,ignore,unmapped,return,this
HasChildQueryBuilder -> public HasChildQueryBuilder ignoreUnmapped(boolean ignoreUnmapped);1535139672;Sets whether the query builder should ignore unmapped types (and run a_{@link MatchNoDocsQuery} in place of this query) or throw an exception if_the type is unmapped.;public HasChildQueryBuilder ignoreUnmapped(boolean ignoreUnmapped) {_        this.ignoreUnmapped = ignoreUnmapped__        if (innerHitBuilder!= null ){_            innerHitBuilder.setIgnoreUnmapped(ignoreUnmapped)__        }_        return this__    };sets,whether,the,query,builder,should,ignore,unmapped,types,and,run,a,link,match,no,docs,query,in,place,of,this,query,or,throw,an,exception,if,the,type,is,unmapped;public,has,child,query,builder,ignore,unmapped,boolean,ignore,unmapped,this,ignore,unmapped,ignore,unmapped,if,inner,hit,builder,null,inner,hit,builder,set,ignore,unmapped,ignore,unmapped,return,this
HasChildQueryBuilder -> public HasChildQueryBuilder ignoreUnmapped(boolean ignoreUnmapped);1536964057;Sets whether the query builder should ignore unmapped types (and run a_{@link MatchNoDocsQuery} in place of this query) or throw an exception if_the type is unmapped.;public HasChildQueryBuilder ignoreUnmapped(boolean ignoreUnmapped) {_        this.ignoreUnmapped = ignoreUnmapped__        if (innerHitBuilder!= null ){_            innerHitBuilder.setIgnoreUnmapped(ignoreUnmapped)__        }_        return this__    };sets,whether,the,query,builder,should,ignore,unmapped,types,and,run,a,link,match,no,docs,query,in,place,of,this,query,or,throw,an,exception,if,the,type,is,unmapped;public,has,child,query,builder,ignore,unmapped,boolean,ignore,unmapped,this,ignore,unmapped,ignore,unmapped,if,inner,hit,builder,null,inner,hit,builder,set,ignore,unmapped,ignore,unmapped,return,this
HasChildQueryBuilder -> public HasChildQueryBuilder ignoreUnmapped(boolean ignoreUnmapped);1549032830;Sets whether the query builder should ignore unmapped types (and run a_{@link MatchNoDocsQuery} in place of this query) or throw an exception if_the type is unmapped.;public HasChildQueryBuilder ignoreUnmapped(boolean ignoreUnmapped) {_        this.ignoreUnmapped = ignoreUnmapped__        if (innerHitBuilder!= null ){_            innerHitBuilder.setIgnoreUnmapped(ignoreUnmapped)__        }_        return this__    };sets,whether,the,query,builder,should,ignore,unmapped,types,and,run,a,link,match,no,docs,query,in,place,of,this,query,or,throw,an,exception,if,the,type,is,unmapped;public,has,child,query,builder,ignore,unmapped,boolean,ignore,unmapped,this,ignore,unmapped,ignore,unmapped,if,inner,hit,builder,null,inner,hit,builder,set,ignore,unmapped,ignore,unmapped,return,this
HasChildQueryBuilder -> public HasChildQueryBuilder minMaxChildren(int minChildren, int maxChildren);1524684173;Defines the minimum number of children that are required to match for the parent to be considered a match and_the maximum number of children that are required to match for the parent to be considered a match.;public HasChildQueryBuilder minMaxChildren(int minChildren, int maxChildren) {_        if (minChildren < 0) {_            throw new IllegalArgumentException("[" + NAME + "] requires non-negative 'min_children' field")__        }_        if (maxChildren < 0) {_            throw new IllegalArgumentException("[" + NAME + "] requires non-negative 'max_children' field")__        }_        if (maxChildren < minChildren) {_            throw new IllegalArgumentException("[" + NAME + "] 'max_children' is less than 'min_children'")__        }_        this.minChildren = minChildren__        this.maxChildren = maxChildren__        return this__    };defines,the,minimum,number,of,children,that,are,required,to,match,for,the,parent,to,be,considered,a,match,and,the,maximum,number,of,children,that,are,required,to,match,for,the,parent,to,be,considered,a,match;public,has,child,query,builder,min,max,children,int,min,children,int,max,children,if,min,children,0,throw,new,illegal,argument,exception,name,requires,non,negative,field,if,max,children,0,throw,new,illegal,argument,exception,name,requires,non,negative,field,if,max,children,min,children,throw,new,illegal,argument,exception,name,is,less,than,this,min,children,min,children,this,max,children,max,children,return,this
HasChildQueryBuilder -> public HasChildQueryBuilder minMaxChildren(int minChildren, int maxChildren);1525076988;Defines the minimum number of children that are required to match for the parent to be considered a match and_the maximum number of children that are required to match for the parent to be considered a match.;public HasChildQueryBuilder minMaxChildren(int minChildren, int maxChildren) {_        if (minChildren < 0) {_            throw new IllegalArgumentException("[" + NAME + "] requires non-negative 'min_children' field")__        }_        if (maxChildren < 0) {_            throw new IllegalArgumentException("[" + NAME + "] requires non-negative 'max_children' field")__        }_        if (maxChildren < minChildren) {_            throw new IllegalArgumentException("[" + NAME + "] 'max_children' is less than 'min_children'")__        }_        this.minChildren = minChildren__        this.maxChildren = maxChildren__        return this__    };defines,the,minimum,number,of,children,that,are,required,to,match,for,the,parent,to,be,considered,a,match,and,the,maximum,number,of,children,that,are,required,to,match,for,the,parent,to,be,considered,a,match;public,has,child,query,builder,min,max,children,int,min,children,int,max,children,if,min,children,0,throw,new,illegal,argument,exception,name,requires,non,negative,field,if,max,children,0,throw,new,illegal,argument,exception,name,requires,non,negative,field,if,max,children,min,children,throw,new,illegal,argument,exception,name,is,less,than,this,min,children,min,children,this,max,children,max,children,return,this
HasChildQueryBuilder -> public HasChildQueryBuilder minMaxChildren(int minChildren, int maxChildren);1535139672;Defines the minimum number of children that are required to match for the parent to be considered a match and_the maximum number of children that are required to match for the parent to be considered a match.;public HasChildQueryBuilder minMaxChildren(int minChildren, int maxChildren) {_        if (minChildren < 0) {_            throw new IllegalArgumentException("[" + NAME + "] requires non-negative 'min_children' field")__        }_        if (maxChildren < 0) {_            throw new IllegalArgumentException("[" + NAME + "] requires non-negative 'max_children' field")__        }_        if (maxChildren < minChildren) {_            throw new IllegalArgumentException("[" + NAME + "] 'max_children' is less than 'min_children'")__        }_        this.minChildren = minChildren__        this.maxChildren = maxChildren__        return this__    };defines,the,minimum,number,of,children,that,are,required,to,match,for,the,parent,to,be,considered,a,match,and,the,maximum,number,of,children,that,are,required,to,match,for,the,parent,to,be,considered,a,match;public,has,child,query,builder,min,max,children,int,min,children,int,max,children,if,min,children,0,throw,new,illegal,argument,exception,name,requires,non,negative,field,if,max,children,0,throw,new,illegal,argument,exception,name,requires,non,negative,field,if,max,children,min,children,throw,new,illegal,argument,exception,name,is,less,than,this,min,children,min,children,this,max,children,max,children,return,this
HasChildQueryBuilder -> public HasChildQueryBuilder minMaxChildren(int minChildren, int maxChildren);1536964057;Defines the minimum number of children that are required to match for the parent to be considered a match and_the maximum number of children that are required to match for the parent to be considered a match.;public HasChildQueryBuilder minMaxChildren(int minChildren, int maxChildren) {_        if (minChildren < 0) {_            throw new IllegalArgumentException("[" + NAME + "] requires non-negative 'min_children' field")__        }_        if (maxChildren < 0) {_            throw new IllegalArgumentException("[" + NAME + "] requires non-negative 'max_children' field")__        }_        if (maxChildren < minChildren) {_            throw new IllegalArgumentException("[" + NAME + "] 'max_children' is less than 'min_children'")__        }_        this.minChildren = minChildren__        this.maxChildren = maxChildren__        return this__    };defines,the,minimum,number,of,children,that,are,required,to,match,for,the,parent,to,be,considered,a,match,and,the,maximum,number,of,children,that,are,required,to,match,for,the,parent,to,be,considered,a,match;public,has,child,query,builder,min,max,children,int,min,children,int,max,children,if,min,children,0,throw,new,illegal,argument,exception,name,requires,non,negative,field,if,max,children,0,throw,new,illegal,argument,exception,name,requires,non,negative,field,if,max,children,min,children,throw,new,illegal,argument,exception,name,is,less,than,this,min,children,min,children,this,max,children,max,children,return,this
HasChildQueryBuilder -> public HasChildQueryBuilder minMaxChildren(int minChildren, int maxChildren);1549032830;Defines the minimum number of children that are required to match for the parent to be considered a match and_the maximum number of children that are required to match for the parent to be considered a match.;public HasChildQueryBuilder minMaxChildren(int minChildren, int maxChildren) {_        if (minChildren < 0) {_            throw new IllegalArgumentException("[" + NAME + "] requires non-negative 'min_children' field")__        }_        if (maxChildren < 0) {_            throw new IllegalArgumentException("[" + NAME + "] requires non-negative 'max_children' field")__        }_        if (maxChildren < minChildren) {_            throw new IllegalArgumentException("[" + NAME + "] 'max_children' is less than 'min_children'")__        }_        this.minChildren = minChildren__        this.maxChildren = maxChildren__        return this__    };defines,the,minimum,number,of,children,that,are,required,to,match,for,the,parent,to,be,considered,a,match,and,the,maximum,number,of,children,that,are,required,to,match,for,the,parent,to,be,considered,a,match;public,has,child,query,builder,min,max,children,int,min,children,int,max,children,if,min,children,0,throw,new,illegal,argument,exception,name,requires,non,negative,field,if,max,children,0,throw,new,illegal,argument,exception,name,requires,non,negative,field,if,max,children,min,children,throw,new,illegal,argument,exception,name,is,less,than,this,min,children,min,children,this,max,children,max,children,return,this
HasChildQueryBuilder -> public int minChildren();1524684173;Returns the minimum number of children that are required to match for the parent to be considered a match._The default is {@value #DEFAULT_MAX_CHILDREN};public int minChildren() {_        return minChildren__    };returns,the,minimum,number,of,children,that,are,required,to,match,for,the,parent,to,be,considered,a,match,the,default,is,value;public,int,min,children,return,min,children
HasChildQueryBuilder -> public int minChildren();1525076988;Returns the minimum number of children that are required to match for the parent to be considered a match._The default is {@value #DEFAULT_MAX_CHILDREN};public int minChildren() {_        return minChildren__    };returns,the,minimum,number,of,children,that,are,required,to,match,for,the,parent,to,be,considered,a,match,the,default,is,value;public,int,min,children,return,min,children
HasChildQueryBuilder -> public int minChildren();1535139672;Returns the minimum number of children that are required to match for the parent to be considered a match._The default is {@value #DEFAULT_MAX_CHILDREN};public int minChildren() {_        return minChildren__    };returns,the,minimum,number,of,children,that,are,required,to,match,for,the,parent,to,be,considered,a,match,the,default,is,value;public,int,min,children,return,min,children
HasChildQueryBuilder -> public int minChildren();1536964057;Returns the minimum number of children that are required to match for the parent to be considered a match._The default is {@value #DEFAULT_MIN_CHILDREN};public int minChildren() {_        return minChildren__    };returns,the,minimum,number,of,children,that,are,required,to,match,for,the,parent,to,be,considered,a,match,the,default,is,value;public,int,min,children,return,min,children
HasChildQueryBuilder -> public int minChildren();1549032830;Returns the minimum number of children that are required to match for the parent to be considered a match._The default is {@value #DEFAULT_MIN_CHILDREN};public int minChildren() {_        return minChildren__    };returns,the,minimum,number,of,children,that,are,required,to,match,for,the,parent,to,be,considered,a,match,the,default,is,value;public,int,min,children,return,min,children
HasChildQueryBuilder -> public int maxChildren();1524684173;Returns the maximum number of children that are required to match for the parent to be considered a match._The default is {@value #DEFAULT_MIN_CHILDREN};public int maxChildren() { return maxChildren_ };returns,the,maximum,number,of,children,that,are,required,to,match,for,the,parent,to,be,considered,a,match,the,default,is,value;public,int,max,children,return,max,children
HasChildQueryBuilder -> public int maxChildren();1525076988;Returns the maximum number of children that are required to match for the parent to be considered a match._The default is {@value #DEFAULT_MIN_CHILDREN};public int maxChildren() { return maxChildren_ };returns,the,maximum,number,of,children,that,are,required,to,match,for,the,parent,to,be,considered,a,match,the,default,is,value;public,int,max,children,return,max,children
HasChildQueryBuilder -> public int maxChildren();1535139672;Returns the maximum number of children that are required to match for the parent to be considered a match._The default is {@value #DEFAULT_MIN_CHILDREN};public int maxChildren() { return maxChildren_ };returns,the,maximum,number,of,children,that,are,required,to,match,for,the,parent,to,be,considered,a,match,the,default,is,value;public,int,max,children,return,max,children
HasChildQueryBuilder -> public int maxChildren();1536964057;Returns the maximum number of children that are required to match for the parent to be considered a match._The default is {@value #DEFAULT_MAX_CHILDREN};public int maxChildren() { return maxChildren_ };returns,the,maximum,number,of,children,that,are,required,to,match,for,the,parent,to,be,considered,a,match,the,default,is,value;public,int,max,children,return,max,children
HasChildQueryBuilder -> public int maxChildren();1549032830;Returns the maximum number of children that are required to match for the parent to be considered a match._The default is {@value #DEFAULT_MAX_CHILDREN};public int maxChildren() { return maxChildren_ };returns,the,maximum,number,of,children,that,are,required,to,match,for,the,parent,to,be,considered,a,match,the,default,is,value;public,int,max,children,return,max,children
HasChildQueryBuilder -> public ScoreMode scoreMode();1524684173;Returns how the scores from the matching child documents are mapped into the parent document.;public ScoreMode scoreMode() {_        return scoreMode__    };returns,how,the,scores,from,the,matching,child,documents,are,mapped,into,the,parent,document;public,score,mode,score,mode,return,score,mode
HasChildQueryBuilder -> public ScoreMode scoreMode();1525076988;Returns how the scores from the matching child documents are mapped into the parent document.;public ScoreMode scoreMode() {_        return scoreMode__    };returns,how,the,scores,from,the,matching,child,documents,are,mapped,into,the,parent,document;public,score,mode,score,mode,return,score,mode
HasChildQueryBuilder -> public ScoreMode scoreMode();1535139672;Returns how the scores from the matching child documents are mapped into the parent document.;public ScoreMode scoreMode() {_        return scoreMode__    };returns,how,the,scores,from,the,matching,child,documents,are,mapped,into,the,parent,document;public,score,mode,score,mode,return,score,mode
HasChildQueryBuilder -> public ScoreMode scoreMode();1536964057;Returns how the scores from the matching child documents are mapped into the parent document.;public ScoreMode scoreMode() {_        return scoreMode__    };returns,how,the,scores,from,the,matching,child,documents,are,mapped,into,the,parent,document;public,score,mode,score,mode,return,score,mode
HasChildQueryBuilder -> public ScoreMode scoreMode();1549032830;Returns how the scores from the matching child documents are mapped into the parent document.;public ScoreMode scoreMode() {_        return scoreMode__    };returns,how,the,scores,from,the,matching,child,documents,are,mapped,into,the,parent,document;public,score,mode,score,mode,return,score,mode
HasChildQueryBuilder -> public boolean ignoreUnmapped();1524684173;Gets whether the query builder will ignore unmapped types (and run a_{@link MatchNoDocsQuery} in place of this query) or throw an exception if_the type is unmapped.;public boolean ignoreUnmapped() {_        return ignoreUnmapped__    };gets,whether,the,query,builder,will,ignore,unmapped,types,and,run,a,link,match,no,docs,query,in,place,of,this,query,or,throw,an,exception,if,the,type,is,unmapped;public,boolean,ignore,unmapped,return,ignore,unmapped
HasChildQueryBuilder -> public boolean ignoreUnmapped();1525076988;Gets whether the query builder will ignore unmapped types (and run a_{@link MatchNoDocsQuery} in place of this query) or throw an exception if_the type is unmapped.;public boolean ignoreUnmapped() {_        return ignoreUnmapped__    };gets,whether,the,query,builder,will,ignore,unmapped,types,and,run,a,link,match,no,docs,query,in,place,of,this,query,or,throw,an,exception,if,the,type,is,unmapped;public,boolean,ignore,unmapped,return,ignore,unmapped
HasChildQueryBuilder -> public boolean ignoreUnmapped();1535139672;Gets whether the query builder will ignore unmapped types (and run a_{@link MatchNoDocsQuery} in place of this query) or throw an exception if_the type is unmapped.;public boolean ignoreUnmapped() {_        return ignoreUnmapped__    };gets,whether,the,query,builder,will,ignore,unmapped,types,and,run,a,link,match,no,docs,query,in,place,of,this,query,or,throw,an,exception,if,the,type,is,unmapped;public,boolean,ignore,unmapped,return,ignore,unmapped
HasChildQueryBuilder -> public boolean ignoreUnmapped();1536964057;Gets whether the query builder will ignore unmapped types (and run a_{@link MatchNoDocsQuery} in place of this query) or throw an exception if_the type is unmapped.;public boolean ignoreUnmapped() {_        return ignoreUnmapped__    };gets,whether,the,query,builder,will,ignore,unmapped,types,and,run,a,link,match,no,docs,query,in,place,of,this,query,or,throw,an,exception,if,the,type,is,unmapped;public,boolean,ignore,unmapped,return,ignore,unmapped
HasChildQueryBuilder -> public boolean ignoreUnmapped();1549032830;Gets whether the query builder will ignore unmapped types (and run a_{@link MatchNoDocsQuery} in place of this query) or throw an exception if_the type is unmapped.;public boolean ignoreUnmapped() {_        return ignoreUnmapped__    };gets,whether,the,query,builder,will,ignore,unmapped,types,and,run,a,link,match,no,docs,query,in,place,of,this,query,or,throw,an,exception,if,the,type,is,unmapped;public,boolean,ignore,unmapped,return,ignore,unmapped
HasChildQueryBuilder -> public QueryBuilder query();1524684173;Returns the children query to execute.;public QueryBuilder query() {_        return query__    };returns,the,children,query,to,execute;public,query,builder,query,return,query
HasChildQueryBuilder -> public QueryBuilder query();1525076988;Returns the children query to execute.;public QueryBuilder query() {_        return query__    };returns,the,children,query,to,execute;public,query,builder,query,return,query
HasChildQueryBuilder -> public QueryBuilder query();1535139672;Returns the children query to execute.;public QueryBuilder query() {_        return query__    };returns,the,children,query,to,execute;public,query,builder,query,return,query
HasChildQueryBuilder -> public QueryBuilder query();1536964057;Returns the children query to execute.;public QueryBuilder query() {_        return query__    };returns,the,children,query,to,execute;public,query,builder,query,return,query
HasChildQueryBuilder -> public QueryBuilder query();1549032830;Returns the children query to execute.;public QueryBuilder query() {_        return query__    };returns,the,children,query,to,execute;public,query,builder,query,return,query
HasChildQueryBuilder -> public String childType();1524684173;Returns the child type;public String childType() {_        return type__    };returns,the,child,type;public,string,child,type,return,type
HasChildQueryBuilder -> public String childType();1525076988;Returns the child type;public String childType() {_        return type__    };returns,the,child,type;public,string,child,type,return,type
HasChildQueryBuilder -> public String childType();1535139672;Returns the child type;public String childType() {_        return type__    };returns,the,child,type;public,string,child,type,return,type
HasChildQueryBuilder -> public String childType();1536964057;Returns the child type;public String childType() {_        return type__    };returns,the,child,type;public,string,child,type,return,type
HasChildQueryBuilder -> public String childType();1549032830;Returns the child type;public String childType() {_        return type__    };returns,the,child,type;public,string,child,type,return,type
HasChildQueryBuilder -> public HasChildQueryBuilder(StreamInput in) throws IOException;1524684173;Read from a stream.;public HasChildQueryBuilder(StreamInput in) throws IOException {_        super(in)__        type = in.readString()__        minChildren = in.readInt()__        maxChildren = in.readInt()__        scoreMode = ScoreMode.values()[in.readVInt()]__        query = in.readNamedWriteable(QueryBuilder.class)__        innerHitBuilder = in.readOptionalWriteable(InnerHitBuilder::new)__        ignoreUnmapped = in.readBoolean()__    };read,from,a,stream;public,has,child,query,builder,stream,input,in,throws,ioexception,super,in,type,in,read,string,min,children,in,read,int,max,children,in,read,int,score,mode,score,mode,values,in,read,vint,query,in,read,named,writeable,query,builder,class,inner,hit,builder,in,read,optional,writeable,inner,hit,builder,new,ignore,unmapped,in,read,boolean
HasChildQueryBuilder -> public HasChildQueryBuilder(StreamInput in) throws IOException;1525076988;Read from a stream.;public HasChildQueryBuilder(StreamInput in) throws IOException {_        super(in)__        type = in.readString()__        minChildren = in.readInt()__        maxChildren = in.readInt()__        scoreMode = ScoreMode.values()[in.readVInt()]__        query = in.readNamedWriteable(QueryBuilder.class)__        innerHitBuilder = in.readOptionalWriteable(InnerHitBuilder::new)__        ignoreUnmapped = in.readBoolean()__    };read,from,a,stream;public,has,child,query,builder,stream,input,in,throws,ioexception,super,in,type,in,read,string,min,children,in,read,int,max,children,in,read,int,score,mode,score,mode,values,in,read,vint,query,in,read,named,writeable,query,builder,class,inner,hit,builder,in,read,optional,writeable,inner,hit,builder,new,ignore,unmapped,in,read,boolean
HasChildQueryBuilder -> public HasChildQueryBuilder(StreamInput in) throws IOException;1535139672;Read from a stream.;public HasChildQueryBuilder(StreamInput in) throws IOException {_        super(in)__        type = in.readString()__        minChildren = in.readInt()__        maxChildren = in.readInt()__        scoreMode = ScoreMode.values()[in.readVInt()]__        query = in.readNamedWriteable(QueryBuilder.class)__        innerHitBuilder = in.readOptionalWriteable(InnerHitBuilder::new)__        ignoreUnmapped = in.readBoolean()__    };read,from,a,stream;public,has,child,query,builder,stream,input,in,throws,ioexception,super,in,type,in,read,string,min,children,in,read,int,max,children,in,read,int,score,mode,score,mode,values,in,read,vint,query,in,read,named,writeable,query,builder,class,inner,hit,builder,in,read,optional,writeable,inner,hit,builder,new,ignore,unmapped,in,read,boolean
HasChildQueryBuilder -> public HasChildQueryBuilder(StreamInput in) throws IOException;1536964057;Read from a stream.;public HasChildQueryBuilder(StreamInput in) throws IOException {_        super(in)__        type = in.readString()__        minChildren = in.readInt()__        maxChildren = in.readInt()__        scoreMode = ScoreMode.values()[in.readVInt()]__        query = in.readNamedWriteable(QueryBuilder.class)__        innerHitBuilder = in.readOptionalWriteable(InnerHitBuilder::new)__        ignoreUnmapped = in.readBoolean()__    };read,from,a,stream;public,has,child,query,builder,stream,input,in,throws,ioexception,super,in,type,in,read,string,min,children,in,read,int,max,children,in,read,int,score,mode,score,mode,values,in,read,vint,query,in,read,named,writeable,query,builder,class,inner,hit,builder,in,read,optional,writeable,inner,hit,builder,new,ignore,unmapped,in,read,boolean
HasChildQueryBuilder -> public HasChildQueryBuilder(StreamInput in) throws IOException;1549032830;Read from a stream.;public HasChildQueryBuilder(StreamInput in) throws IOException {_        super(in)__        type = in.readString()__        minChildren = in.readInt()__        maxChildren = in.readInt()__        scoreMode = ScoreMode.values()[in.readVInt()]__        query = in.readNamedWriteable(QueryBuilder.class)__        innerHitBuilder = in.readOptionalWriteable(InnerHitBuilder::new)__        ignoreUnmapped = in.readBoolean()__    };read,from,a,stream;public,has,child,query,builder,stream,input,in,throws,ioexception,super,in,type,in,read,string,min,children,in,read,int,max,children,in,read,int,score,mode,score,mode,values,in,read,vint,query,in,read,named,writeable,query,builder,class,inner,hit,builder,in,read,optional,writeable,inner,hit,builder,new,ignore,unmapped,in,read,boolean
