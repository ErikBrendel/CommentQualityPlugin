commented;modifiers;parameterAmount;loc;comment;code
true;public,static;3;3;/**  * Constructs a new has_child query, with the child type and the query to run on the child documents. The  * results of this query are the parent docs that those child docs matched.  *  * @param type      The child type.  * @param query     The query.  * @param scoreMode How the scores from the children hits should be aggregated into the parent hit.  */ ;/**  * Constructs a new has_child query, with the child type and the query to run on the child documents. The  * results of this query are the parent docs that those child docs matched.  *  * @param type      The child type.  * @param query     The query.  * @param scoreMode How the scores from the children hits should be aggregated into the parent hit.  */ public static HasChildQueryBuilder hasChildQuery(String type, QueryBuilder query, ScoreMode scoreMode) {     return new HasChildQueryBuilder(type, query, scoreMode). }
true;public,static;3;3;/**  * Constructs a new parent query, with the parent type and the query to run on the parent documents. The  * results of this query are the children docs that those parent docs matched.  *  * @param type      The parent type.  * @param query     The query.  * @param score     Whether the score from the parent hit should propagate to the child hit  */ ;/**  * Constructs a new parent query, with the parent type and the query to run on the parent documents. The  * results of this query are the children docs that those parent docs matched.  *  * @param type      The parent type.  * @param query     The query.  * @param score     Whether the score from the parent hit should propagate to the child hit  */ public static HasParentQueryBuilder hasParentQuery(String type, QueryBuilder query, boolean score) {     return new HasParentQueryBuilder(type, query, score). }
true;public,static;2;3;/**  * Constructs a new parent id query that returns all child documents of the specified type that  * point to the specified id.  */ ;/**  * Constructs a new parent id query that returns all child documents of the specified type that  * point to the specified id.  */ public static ParentIdQueryBuilder parentId(String type, String id) {     return new ParentIdQueryBuilder(type, id). }
