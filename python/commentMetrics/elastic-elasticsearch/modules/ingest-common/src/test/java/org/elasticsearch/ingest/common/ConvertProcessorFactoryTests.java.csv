commented;modifiers;parameterAmount;loc;comment;code
false;public;0;14;;public void testCreate() throws Exception {     ConvertProcessor.Factory factory = new ConvertProcessor.Factory().     Map<String, Object> config = new HashMap<>().     ConvertProcessor.Type type = randomFrom(ConvertProcessor.Type.values()).     config.put("field", "field1").     config.put("type", type.toString()).     String processorTag = randomAlphaOfLength(10).     ConvertProcessor convertProcessor = factory.create(null, processorTag, config).     assertThat(convertProcessor.getTag(), equalTo(processorTag)).     assertThat(convertProcessor.getField(), equalTo("field1")).     assertThat(convertProcessor.getTargetField(), equalTo("field1")).     assertThat(convertProcessor.getConvertType(), equalTo(type)).     assertThat(convertProcessor.isIgnoreMissing(), is(false)). }
false;public;0;16;;public void testCreateUnsupportedType() throws Exception {     ConvertProcessor.Factory factory = new ConvertProcessor.Factory().     Map<String, Object> config = new HashMap<>().     String type = "type-" + randomAlphaOfLengthBetween(1, 10).     config.put("field", "field1").     config.put("type", type).     try {         factory.create(null, null, config).         fail("factory create should have failed").     } catch (ElasticsearchParseException e) {         assertThat(e.getMessage(), Matchers.equalTo("[type] type [" + type + "] not supported, cannot convert field.")).         assertThat(e.getMetadata("es.processor_type").get(0), equalTo(ConvertProcessor.TYPE)).         assertThat(e.getMetadata("es.property_name").get(0), equalTo("type")).         assertThat(e.getMetadata("es.processor_tag"), nullValue()).     } }
false;public;0;12;;public void testCreateNoFieldPresent() throws Exception {     ConvertProcessor.Factory factory = new ConvertProcessor.Factory().     Map<String, Object> config = new HashMap<>().     String type = "type-" + randomAlphaOfLengthBetween(1, 10).     config.put("type", type).     try {         factory.create(null, null, config).         fail("factory create should have failed").     } catch (ElasticsearchParseException e) {         assertThat(e.getMessage(), Matchers.equalTo("[field] required property is missing")).     } }
false;public;0;11;;public void testCreateNoTypePresent() throws Exception {     ConvertProcessor.Factory factory = new ConvertProcessor.Factory().     Map<String, Object> config = new HashMap<>().     config.put("field", "field1").     try {         factory.create(null, null, config).         fail("factory create should have failed").     } catch (ElasticsearchParseException e) {         assertThat(e.getMessage(), Matchers.equalTo("[type] required property is missing")).     } }
false;public;0;15;;public void testCreateWithExplicitTargetField() throws Exception {     ConvertProcessor.Factory factory = new ConvertProcessor.Factory().     Map<String, Object> config = new HashMap<>().     ConvertProcessor.Type type = randomFrom(ConvertProcessor.Type.values()).     config.put("field", "field1").     config.put("target_field", "field2").     config.put("type", type.toString()).     String processorTag = randomAlphaOfLength(10).     ConvertProcessor convertProcessor = factory.create(null, processorTag, config).     assertThat(convertProcessor.getTag(), equalTo(processorTag)).     assertThat(convertProcessor.getField(), equalTo("field1")).     assertThat(convertProcessor.getTargetField(), equalTo("field2")).     assertThat(convertProcessor.getConvertType(), equalTo(type)).     assertThat(convertProcessor.isIgnoreMissing(), is(false)). }
false;public;0;15;;public void testCreateWithIgnoreMissing() throws Exception {     ConvertProcessor.Factory factory = new ConvertProcessor.Factory().     Map<String, Object> config = new HashMap<>().     ConvertProcessor.Type type = randomFrom(ConvertProcessor.Type.values()).     config.put("field", "field1").     config.put("type", type.toString()).     config.put("ignore_missing", true).     String processorTag = randomAlphaOfLength(10).     ConvertProcessor convertProcessor = factory.create(null, processorTag, config).     assertThat(convertProcessor.getTag(), equalTo(processorTag)).     assertThat(convertProcessor.getField(), equalTo("field1")).     assertThat(convertProcessor.getTargetField(), equalTo("field1")).     assertThat(convertProcessor.getConvertType(), equalTo(type)).     assertThat(convertProcessor.isIgnoreMissing(), is(true)). }
