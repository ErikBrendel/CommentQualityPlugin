commented;modifiers;parameterAmount;loc;comment;code
false;public;0;16;;public void testCreateWithDefaults() throws Exception {     KeyValueProcessor.Factory factory = new KeyValueProcessor.Factory().     Map<String, Object> config = new HashMap<>().     config.put("field", "field1").     config.put("field_split", "&").     config.put("value_split", "=").     String processorTag = randomAlphaOfLength(10).     KeyValueProcessor processor = factory.create(null, processorTag, config).     assertThat(processor.getTag(), equalTo(processorTag)).     assertThat(processor.getField(), equalTo("field1")).     assertThat(processor.getFieldSplit(), equalTo("&")).     assertThat(processor.getValueSplit(), equalTo("=")).     assertThat(processor.getIncludeKeys(), is(nullValue())).     assertThat(processor.getTargetField(), is(nullValue())).     assertFalse(processor.isIgnoreMissing()). }
false;public;0;21;;public void testCreateWithAllFieldsSet() throws Exception {     KeyValueProcessor.Factory factory = new KeyValueProcessor.Factory().     Map<String, Object> config = new HashMap<>().     config.put("field", "field1").     config.put("field_split", "&").     config.put("value_split", "=").     config.put("target_field", "target").     config.put("include_keys", Arrays.asList("a", "b")).     config.put("exclude_keys", Collections.emptyList()).     config.put("ignore_missing", true).     String processorTag = randomAlphaOfLength(10).     KeyValueProcessor processor = factory.create(null, processorTag, config).     assertThat(processor.getTag(), equalTo(processorTag)).     assertThat(processor.getField(), equalTo("field1")).     assertThat(processor.getFieldSplit(), equalTo("&")).     assertThat(processor.getValueSplit(), equalTo("=")).     assertThat(processor.getIncludeKeys(), equalTo(Sets.newHashSet("a", "b"))).     assertThat(processor.getExcludeKeys(), equalTo(Collections.emptySet())).     assertThat(processor.getTargetField(), equalTo("target")).     assertTrue(processor.isIgnoreMissing()). }
false;public;0;8;;public void testCreateWithMissingField() {     KeyValueProcessor.Factory factory = new KeyValueProcessor.Factory().     Map<String, Object> config = new HashMap<>().     String processorTag = randomAlphaOfLength(10).     ElasticsearchException exception = expectThrows(ElasticsearchParseException.class, () -> factory.create(null, processorTag, config)).     assertThat(exception.getMessage(), equalTo("[field] required property is missing")). }
false;public;0;9;;public void testCreateWithMissingFieldSplit() {     KeyValueProcessor.Factory factory = new KeyValueProcessor.Factory().     Map<String, Object> config = new HashMap<>().     config.put("field", "field1").     String processorTag = randomAlphaOfLength(10).     ElasticsearchException exception = expectThrows(ElasticsearchParseException.class, () -> factory.create(null, processorTag, config)).     assertThat(exception.getMessage(), equalTo("[field_split] required property is missing")). }
false;public;0;10;;public void testCreateWithMissingValueSplit() {     KeyValueProcessor.Factory factory = new KeyValueProcessor.Factory().     Map<String, Object> config = new HashMap<>().     config.put("field", "field1").     config.put("field_split", "&").     String processorTag = randomAlphaOfLength(10).     ElasticsearchException exception = expectThrows(ElasticsearchParseException.class, () -> factory.create(null, processorTag, config)).     assertThat(exception.getMessage(), equalTo("[value_split] required property is missing")). }
