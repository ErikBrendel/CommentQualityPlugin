commented;modifiers;parameterAmount;loc;comment;code
false;public;0;36;;public void testScripting() throws Exception {     int randomBytesIn = randomInt().     int randomBytesOut = randomInt().     int randomBytesTotal = randomBytesIn + randomBytesOut.     String scriptName = "script".     ScriptService scriptService = new ScriptService(Settings.builder().build(), Collections.singletonMap(Script.DEFAULT_SCRIPT_LANG, new MockScriptEngine(Script.DEFAULT_SCRIPT_LANG, Collections.singletonMap(scriptName, ctx -> {         ctx.put("bytes_total", randomBytesTotal).         return null.     }), Collections.emptyMap())), new HashMap<>(ScriptModule.CORE_CONTEXTS)).     Script script = new Script(ScriptType.INLINE, Script.DEFAULT_SCRIPT_LANG, scriptName, Collections.emptyMap()).     Map<String, Object> document = new HashMap<>().     document.put("bytes_in", randomInt()).     document.put("bytes_out", randomInt()).     IngestDocument ingestDocument = RandomDocumentPicks.randomIngestDocument(random(), document).     ScriptProcessor processor = new ScriptProcessor(randomAlphaOfLength(10), script, scriptService).     processor.execute(ingestDocument).     assertThat(ingestDocument.getSourceAndMetadata(), hasKey("bytes_in")).     assertThat(ingestDocument.getSourceAndMetadata(), hasKey("bytes_out")).     assertThat(ingestDocument.getSourceAndMetadata(), hasKey("bytes_total")).     assertThat(ingestDocument.getSourceAndMetadata().get("bytes_total"), is(randomBytesTotal)). }
false;public;0;23;;public void testTypeDeprecation() throws Exception {     String scriptName = "script".     ScriptService scriptService = new ScriptService(Settings.builder().build(), Collections.singletonMap(Script.DEFAULT_SCRIPT_LANG, new MockScriptEngine(Script.DEFAULT_SCRIPT_LANG, Collections.singletonMap(scriptName, ctx -> {         ctx.get("_type").         return null.     }), Collections.emptyMap())), new HashMap<>(ScriptModule.CORE_CONTEXTS)).     Script script = new Script(ScriptType.INLINE, Script.DEFAULT_SCRIPT_LANG, scriptName, Collections.emptyMap()).     IngestDocument ingestDocument = RandomDocumentPicks.randomIngestDocument(random(), Collections.emptyMap()).     ScriptProcessor processor = new ScriptProcessor(randomAlphaOfLength(10), script, scriptService).     processor.execute(ingestDocument).     assertWarnings("[types removal] Looking up doc types [_type] in scripts is deprecated."). }
