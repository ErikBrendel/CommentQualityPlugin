commented;modifiers;parameterAmount;loc;comment;code
false;public;0;12;;public void testCreate() throws Exception {     String processorTag = randomAlphaOfLength(10).     String randomField = randomAlphaOfLength(10).     String randomTargetField = randomAlphaOfLength(5).     Map<String, Object> config = new HashMap<>().     config.put("field", randomField).     config.put("target_field", randomTargetField).     JsonProcessor jsonProcessor = FACTORY.create(null, processorTag, config).     assertThat(jsonProcessor.getTag(), equalTo(processorTag)).     assertThat(jsonProcessor.getField(), equalTo(randomField)).     assertThat(jsonProcessor.getTargetField(), equalTo(randomTargetField)). }
false;public;0;12;;public void testCreateWithAddToRoot() throws Exception {     String processorTag = randomAlphaOfLength(10).     String randomField = randomAlphaOfLength(10).     Map<String, Object> config = new HashMap<>().     config.put("field", randomField).     config.put("add_to_root", true).     JsonProcessor jsonProcessor = FACTORY.create(null, processorTag, config).     assertThat(jsonProcessor.getTag(), equalTo(processorTag)).     assertThat(jsonProcessor.getField(), equalTo(randomField)).     assertThat(jsonProcessor.getTargetField(), equalTo(randomField)).     assertTrue(jsonProcessor.isAddToRoot()). }
false;public;0;10;;public void testCreateWithDefaultTarget() throws Exception {     String processorTag = randomAlphaOfLength(10).     String randomField = randomAlphaOfLength(10).     Map<String, Object> config = new HashMap<>().     config.put("field", randomField).     JsonProcessor jsonProcessor = FACTORY.create(null, processorTag, config).     assertThat(jsonProcessor.getTag(), equalTo(processorTag)).     assertThat(jsonProcessor.getField(), equalTo(randomField)).     assertThat(jsonProcessor.getTargetField(), equalTo(randomField)). }
false;public;0;7;;public void testCreateWithMissingField() throws Exception {     Map<String, Object> config = new HashMap<>().     String processorTag = randomAlphaOfLength(10).     ElasticsearchException exception = expectThrows(ElasticsearchParseException.class, () -> FACTORY.create(null, processorTag, config)).     assertThat(exception.getMessage(), equalTo("[field] required property is missing")). }
false;public;0;11;;public void testCreateWithBothTargetFieldAndAddToRoot() throws Exception {     String randomField = randomAlphaOfLength(10).     String randomTargetField = randomAlphaOfLength(5).     Map<String, Object> config = new HashMap<>().     config.put("field", randomField).     config.put("target_field", randomTargetField).     config.put("add_to_root", true).     ElasticsearchException exception = expectThrows(ElasticsearchParseException.class, () -> FACTORY.create(null, randomAlphaOfLength(10), config)).     assertThat(exception.getMessage(), equalTo("[target_field] Cannot set a target field while also setting `add_to_root` to true")). }
