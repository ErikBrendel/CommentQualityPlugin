commented;modifiers;parameterAmount;loc;comment;code
false;public;0;20;;@Override public LowLevelHttpResponse execute() throws IOException {     lowLevelExecCalls++.     if (lowLevelExecCalls <= callsBeforeSuccess) {         if (throwException) {             throw new IOException("Test IOException").         }         // Return failure on the first call         MockLowLevelHttpResponse response = new MockLowLevelHttpResponse().         response.setContent("Request should fail").         response.setStatusCode(errorStatusCode).         return response.     }     // Return success on the second     MockLowLevelHttpResponse response = new MockLowLevelHttpResponse().     response.setStatusCode(200).     return response. }
false;public;2;4;;@Override public LowLevelHttpRequest buildRequest(String method, String url) {     return retryableGetRequest. }
false;public;0;22;;public void testSimpleRetry() throws Exception {     FailThenSuccessBackoffTransport fakeTransport = new FailThenSuccessBackoffTransport(HttpStatusCodes.STATUS_CODE_SERVER_ERROR, 3).     MockGoogleCredential credential = RetryHttpInitializerWrapper.newMockCredentialBuilder().build().     MockSleeper mockSleeper = new MockSleeper().     RetryHttpInitializerWrapper retryHttpInitializerWrapper = new RetryHttpInitializerWrapper(credential, mockSleeper, TimeValue.timeValueSeconds(5)).     Compute client = new Compute.Builder(fakeTransport, new JacksonFactory(), null).setHttpRequestInitializer(retryHttpInitializerWrapper).setApplicationName("test").build().     HttpRequest request = client.getRequestFactory().buildRequest("Get", new GenericUrl("http://elasticsearch.com"), null).     HttpResponse response = request.execute().     assertThat(mockSleeper.getCount(), equalTo(3)).     assertThat(response.getStatusCode(), equalTo(200)). }
false;public;1;5;;@Override public void sleep(long millis) throws InterruptedException {     Thread.sleep(maxWaitTime.getMillis()).     // important number, use this to get count     super.sleep(0). }
false;public;0;35;;public void testRetryWaitTooLong() throws Exception {     TimeValue maxWaitTime = TimeValue.timeValueMillis(10).     int maxRetryTimes = 50.     FailThenSuccessBackoffTransport fakeTransport = new FailThenSuccessBackoffTransport(HttpStatusCodes.STATUS_CODE_SERVER_ERROR, maxRetryTimes).     JsonFactory jsonFactory = new JacksonFactory().     MockGoogleCredential credential = RetryHttpInitializerWrapper.newMockCredentialBuilder().build().     MockSleeper oneTimeSleeper = new MockSleeper() {          @Override         public void sleep(long millis) throws InterruptedException {             Thread.sleep(maxWaitTime.getMillis()).             // important number, use this to get count             super.sleep(0).         }     }.     RetryHttpInitializerWrapper retryHttpInitializerWrapper = new RetryHttpInitializerWrapper(credential, oneTimeSleeper, maxWaitTime).     Compute client = new Compute.Builder(fakeTransport, jsonFactory, null).setHttpRequestInitializer(retryHttpInitializerWrapper).setApplicationName("test").build().     HttpRequest request1 = client.getRequestFactory().buildRequest("Get", new GenericUrl("http://elasticsearch.com"), null).     try {         request1.execute().         fail("Request should fail if wait too long").     } catch (HttpResponseException e) {         assertThat(e.getStatusCode(), equalTo(HttpStatusCodes.STATUS_CODE_SERVER_ERROR)).         // should only retry once.         assertThat(oneTimeSleeper.getCount(), lessThan(maxRetryTimes)).     } }
false;public;0;21;;public void testIOExceptionRetry() throws Exception {     FailThenSuccessBackoffTransport fakeTransport = new FailThenSuccessBackoffTransport(HttpStatusCodes.STATUS_CODE_SERVER_ERROR, 1, true).     MockGoogleCredential credential = RetryHttpInitializerWrapper.newMockCredentialBuilder().build().     MockSleeper mockSleeper = new MockSleeper().     RetryHttpInitializerWrapper retryHttpInitializerWrapper = new RetryHttpInitializerWrapper(credential, mockSleeper, TimeValue.timeValueSeconds(30L)).     Compute client = new Compute.Builder(fakeTransport, new JacksonFactory(), null).setHttpRequestInitializer(retryHttpInitializerWrapper).setApplicationName("test").build().     HttpRequest request = client.getRequestFactory().buildRequest("Get", new GenericUrl("http://elasticsearch.com"), null).     HttpResponse response = request.execute().     assertThat(mockSleeper.getCount(), equalTo(1)).     assertThat(response.getStatusCode(), equalTo(200)). }
