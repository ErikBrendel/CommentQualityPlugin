commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected GoogleCloudStorageBlobStore createBlobStore() {     return new GoogleCloudStorageBlobStore(bucket, clientName, storageService). }
false;protected;0;4;;@Override protected BlobPath basePath() {     return basePath. }
false;protected;0;4;;@Override protected ByteSizeValue chunkSize() {     return chunkSize. }
true;static;2;10;/**  * Get a given setting from the repository settings, throwing a {@link RepositoryException} if the setting does not exist or is empty.  */ ;/**  * Get a given setting from the repository settings, throwing a {@link RepositoryException} if the setting does not exist or is empty.  */ static <T> T getSetting(Setting<T> setting, RepositoryMetaData metadata) {     T value = setting.get(metadata.settings()).     if (value == null) {         throw new RepositoryException(metadata.name(), "Setting [" + setting.getKey() + "] is not defined for repository").     }     if ((value instanceof String) && (Strings.hasText((String) value)) == false) {         throw new RepositoryException(metadata.name(), "Setting [" + setting.getKey() + "] is empty for repository").     }     return value. }
