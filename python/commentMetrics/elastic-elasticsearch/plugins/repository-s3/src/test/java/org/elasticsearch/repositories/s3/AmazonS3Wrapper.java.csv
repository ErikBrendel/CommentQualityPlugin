commented;modifiers;parameterAmount;loc;comment;code
false;public;1;4;;@Override public void setEndpoint(String endpoint) {     delegate.setEndpoint(endpoint). }
false;public;1;4;;@Override public void setRegion(Region region) throws IllegalArgumentException {     delegate.setRegion(region). }
false;public;1;4;;@Override public void setS3ClientOptions(S3ClientOptions clientOptions) {     delegate.setS3ClientOptions(clientOptions). }
false;public;3;5;;@Override public void changeObjectStorageClass(String bucketName, String key, StorageClass newStorageClass) throws AmazonClientException, AmazonServiceException {     delegate.changeObjectStorageClass(bucketName, key, newStorageClass). }
false;public;3;5;;@Override public void setObjectRedirectLocation(String bucketName, String key, String newRedirectLocation) throws AmazonClientException, AmazonServiceException {     delegate.setObjectRedirectLocation(bucketName, key, newRedirectLocation). }
false;public;1;4;;@Override public ObjectListing listObjects(String bucketName) throws AmazonClientException, AmazonServiceException {     return delegate.listObjects(bucketName). }
false;public;2;4;;@Override public ObjectListing listObjects(String bucketName, String prefix) throws AmazonClientException, AmazonServiceException {     return delegate.listObjects(bucketName, prefix). }
false;public;1;4;;@Override public ObjectListing listObjects(ListObjectsRequest listObjectsRequest) throws AmazonClientException, AmazonServiceException {     return delegate.listObjects(listObjectsRequest). }
false;public;1;4;;@Override public ObjectListing listNextBatchOfObjects(ObjectListing previousObjectListing) throws AmazonClientException, AmazonServiceException {     return delegate.listNextBatchOfObjects(previousObjectListing). }
false;public;2;4;;@Override public VersionListing listVersions(String bucketName, String prefix) throws AmazonClientException, AmazonServiceException {     return delegate.listVersions(bucketName, prefix). }
false;public;1;5;;@Override public VersionListing listNextBatchOfVersions(VersionListing previousVersionListing) throws AmazonClientException, AmazonServiceException {     return delegate.listNextBatchOfVersions(previousVersionListing). }
false;public;6;5;;@Override public VersionListing listVersions(String bucketName, String prefix, String keyMarker, String versionIdMarker, String delimiter, Integer maxResults) throws AmazonClientException, AmazonServiceException {     return delegate.listVersions(bucketName, prefix, keyMarker, versionIdMarker, delimiter, maxResults). }
false;public;1;4;;@Override public VersionListing listVersions(ListVersionsRequest listVersionsRequest) throws AmazonClientException, AmazonServiceException {     return delegate.listVersions(listVersionsRequest). }
false;public;0;4;;@Override public Owner getS3AccountOwner() throws AmazonClientException, AmazonServiceException {     return delegate.getS3AccountOwner(). }
false;public;1;4;;@Override public boolean doesBucketExist(String bucketName) throws AmazonClientException, AmazonServiceException {     return delegate.doesBucketExist(bucketName). }
false;public;0;4;;@Override public List<Bucket> listBuckets() throws AmazonClientException, AmazonServiceException {     return delegate.listBuckets(). }
false;public;1;4;;@Override public List<Bucket> listBuckets(ListBucketsRequest listBucketsRequest) throws AmazonClientException, AmazonServiceException {     return delegate.listBuckets(listBucketsRequest). }
false;public;1;4;;@Override public String getBucketLocation(String bucketName) throws AmazonClientException, AmazonServiceException {     return delegate.getBucketLocation(bucketName). }
false;public;1;5;;@Override public String getBucketLocation(GetBucketLocationRequest getBucketLocationRequest) throws AmazonClientException, AmazonServiceException {     return delegate.getBucketLocation(getBucketLocationRequest). }
false;public;1;4;;@Override public Bucket createBucket(CreateBucketRequest createBucketRequest) throws AmazonClientException, AmazonServiceException {     return delegate.createBucket(createBucketRequest). }
false;public;1;4;;@Override public Bucket createBucket(String bucketName) throws AmazonClientException, AmazonServiceException {     return delegate.createBucket(bucketName). }
false;public;2;5;;@Override public Bucket createBucket(String bucketName, com.amazonaws.services.s3.model.Region region) throws AmazonClientException, AmazonServiceException {     return delegate.createBucket(bucketName, region). }
false;public;2;4;;@Override public Bucket createBucket(String bucketName, String region) throws AmazonClientException, AmazonServiceException {     return delegate.createBucket(bucketName, region). }
false;public;2;4;;@Override public AccessControlList getObjectAcl(String bucketName, String key) throws AmazonClientException, AmazonServiceException {     return delegate.getObjectAcl(bucketName, key). }
false;public;3;5;;@Override public AccessControlList getObjectAcl(String bucketName, String key, String versionId) throws AmazonClientException, AmazonServiceException {     return delegate.getObjectAcl(bucketName, key, versionId). }
false;public;1;4;;@Override public AccessControlList getObjectAcl(GetObjectAclRequest getObjectAclRequest) throws AmazonClientException, AmazonServiceException {     return delegate.getObjectAcl(getObjectAclRequest). }
false;public;3;4;;@Override public void setObjectAcl(String bucketName, String key, AccessControlList acl) throws AmazonClientException, AmazonServiceException {     delegate.setObjectAcl(bucketName, key, acl). }
false;public;3;5;;@Override public void setObjectAcl(String bucketName, String key, CannedAccessControlList acl) throws AmazonClientException, AmazonServiceException {     delegate.setObjectAcl(bucketName, key, acl). }
false;public;4;5;;@Override public void setObjectAcl(String bucketName, String key, String versionId, AccessControlList acl) throws AmazonClientException, AmazonServiceException {     delegate.setObjectAcl(bucketName, key, versionId, acl). }
false;public;4;5;;@Override public void setObjectAcl(String bucketName, String key, String versionId, CannedAccessControlList acl) throws AmazonClientException, AmazonServiceException {     delegate.setObjectAcl(bucketName, key, versionId, acl). }
false;public;1;4;;@Override public void setObjectAcl(SetObjectAclRequest setObjectAclRequest) throws AmazonClientException, AmazonServiceException {     delegate.setObjectAcl(setObjectAclRequest). }
false;public;1;4;;@Override public AccessControlList getBucketAcl(String bucketName) throws AmazonClientException, AmazonServiceException {     return delegate.getBucketAcl(bucketName). }
false;public;1;4;;@Override public void setBucketAcl(SetBucketAclRequest setBucketAclRequest) throws AmazonClientException, AmazonServiceException {     delegate.setBucketAcl(setBucketAclRequest). }
false;public;1;4;;@Override public AccessControlList getBucketAcl(GetBucketAclRequest getBucketAclRequest) throws AmazonClientException, AmazonServiceException {     return delegate.getBucketAcl(getBucketAclRequest). }
false;public;2;4;;@Override public void setBucketAcl(String bucketName, AccessControlList acl) throws AmazonClientException, AmazonServiceException {     delegate.setBucketAcl(bucketName, acl). }
false;public;2;4;;@Override public void setBucketAcl(String bucketName, CannedAccessControlList acl) throws AmazonClientException, AmazonServiceException {     delegate.setBucketAcl(bucketName, acl). }
false;public;2;4;;@Override public ObjectMetadata getObjectMetadata(String bucketName, String key) throws AmazonClientException, AmazonServiceException {     return delegate.getObjectMetadata(bucketName, key). }
false;public;1;5;;@Override public ObjectMetadata getObjectMetadata(GetObjectMetadataRequest getObjectMetadataRequest) throws AmazonClientException, AmazonServiceException {     return delegate.getObjectMetadata(getObjectMetadataRequest). }
false;public;2;4;;@Override public S3Object getObject(String bucketName, String key) throws AmazonClientException, AmazonServiceException {     return delegate.getObject(bucketName, key). }
false;public;1;4;;@Override public S3Object getObject(GetObjectRequest getObjectRequest) throws AmazonClientException, AmazonServiceException {     return delegate.getObject(getObjectRequest). }
false;public;2;5;;@Override public ObjectMetadata getObject(GetObjectRequest getObjectRequest, File destinationFile) throws AmazonClientException, AmazonServiceException {     return delegate.getObject(getObjectRequest, destinationFile). }
false;public;1;4;;@Override public void deleteBucket(DeleteBucketRequest deleteBucketRequest) throws AmazonClientException, AmazonServiceException {     delegate.deleteBucket(deleteBucketRequest). }
false;public;1;4;;@Override public void deleteBucket(String bucketName) throws AmazonClientException, AmazonServiceException {     delegate.deleteBucket(bucketName). }
false;public;2;5;;@Override public void setBucketReplicationConfiguration(String bucketName, BucketReplicationConfiguration configuration) throws AmazonServiceException, AmazonClientException {     delegate.setBucketReplicationConfiguration(bucketName, configuration). }
false;public;1;5;;@Override public void setBucketReplicationConfiguration(SetBucketReplicationConfigurationRequest setBucketReplicationConfigurationRequest) throws AmazonServiceException, AmazonClientException {     delegate.setBucketReplicationConfiguration(setBucketReplicationConfigurationRequest). }
false;public;1;5;;@Override public BucketReplicationConfiguration getBucketReplicationConfiguration(String bucketName) throws AmazonServiceException, AmazonClientException {     return delegate.getBucketReplicationConfiguration(bucketName). }
false;public;1;4;;@Override public void deleteBucketReplicationConfiguration(String bucketName) throws AmazonServiceException, AmazonClientException {     delegate.deleteBucketReplicationConfiguration(bucketName). }
false;public;1;5;;@Override public void deleteBucketReplicationConfiguration(DeleteBucketReplicationConfigurationRequest request) throws AmazonServiceException, AmazonClientException {     delegate.deleteBucketReplicationConfiguration(request). }
false;public;2;4;;@Override public boolean doesObjectExist(String bucketName, String objectName) throws AmazonServiceException, AmazonClientException {     return delegate.doesObjectExist(bucketName, objectName). }
false;public;1;4;;@Override public PutObjectResult putObject(PutObjectRequest putObjectRequest) throws AmazonClientException, AmazonServiceException {     return delegate.putObject(putObjectRequest). }
false;public;3;4;;@Override public PutObjectResult putObject(String bucketName, String key, File file) throws AmazonClientException, AmazonServiceException {     return delegate.putObject(bucketName, key, file). }
false;public;4;5;;@Override public PutObjectResult putObject(String bucketName, String key, InputStream input, ObjectMetadata metadata) throws AmazonClientException, AmazonServiceException {     return delegate.putObject(bucketName, key, input, metadata). }
false;public;4;5;;@Override public CopyObjectResult copyObject(String sourceBucketName, String sourceKey, String destinationBucketName, String destinationKey) throws AmazonClientException, AmazonServiceException {     return delegate.copyObject(sourceBucketName, sourceKey, destinationBucketName, destinationKey). }
false;public;1;4;;@Override public CopyObjectResult copyObject(CopyObjectRequest copyObjectRequest) throws AmazonClientException, AmazonServiceException {     return delegate.copyObject(copyObjectRequest). }
false;public;1;4;;@Override public CopyPartResult copyPart(CopyPartRequest copyPartRequest) throws AmazonClientException, AmazonServiceException {     return delegate.copyPart(copyPartRequest). }
false;public;2;4;;@Override public void deleteObject(String bucketName, String key) throws AmazonClientException, AmazonServiceException {     delegate.deleteObject(bucketName, key). }
false;public;1;4;;@Override public void deleteObject(DeleteObjectRequest deleteObjectRequest) throws AmazonClientException, AmazonServiceException {     delegate.deleteObject(deleteObjectRequest). }
false;public;1;5;;@Override public DeleteObjectsResult deleteObjects(DeleteObjectsRequest deleteObjectsRequest) throws AmazonClientException, AmazonServiceException {     return delegate.deleteObjects(deleteObjectsRequest). }
false;public;3;4;;@Override public void deleteVersion(String bucketName, String key, String versionId) throws AmazonClientException, AmazonServiceException {     delegate.deleteVersion(bucketName, key, versionId). }
false;public;1;4;;@Override public void deleteVersion(DeleteVersionRequest deleteVersionRequest) throws AmazonClientException, AmazonServiceException {     delegate.deleteVersion(deleteVersionRequest). }
false;public;1;5;;@Override public BucketLoggingConfiguration getBucketLoggingConfiguration(String bucketName) throws AmazonClientException, AmazonServiceException {     return delegate.getBucketLoggingConfiguration(bucketName). }
false;public;1;5;;@Override public void setBucketLoggingConfiguration(SetBucketLoggingConfigurationRequest setBucketLoggingConfigurationRequest) throws AmazonClientException, AmazonServiceException {     delegate.setBucketLoggingConfiguration(setBucketLoggingConfigurationRequest). }
false;public;1;5;;@Override public BucketVersioningConfiguration getBucketVersioningConfiguration(String bucketName) throws AmazonClientException, AmazonServiceException {     return delegate.getBucketVersioningConfiguration(bucketName). }
false;public;1;5;;@Override public void setBucketVersioningConfiguration(SetBucketVersioningConfigurationRequest setBucketVersioningConfigurationRequest) throws AmazonClientException, AmazonServiceException {     delegate.setBucketVersioningConfiguration(setBucketVersioningConfigurationRequest). }
false;public;1;4;;@Override public BucketLifecycleConfiguration getBucketLifecycleConfiguration(String bucketName) {     return delegate.getBucketLifecycleConfiguration(bucketName). }
false;public;2;4;;@Override public void setBucketLifecycleConfiguration(String bucketName, BucketLifecycleConfiguration bucketLifecycleConfiguration) {     delegate.setBucketLifecycleConfiguration(bucketName, bucketLifecycleConfiguration). }
false;public;1;4;;@Override public void setBucketLifecycleConfiguration(SetBucketLifecycleConfigurationRequest setBucketLifecycleConfigurationRequest) {     delegate.setBucketLifecycleConfiguration(setBucketLifecycleConfigurationRequest). }
false;public;1;4;;@Override public void deleteBucketLifecycleConfiguration(String bucketName) {     delegate.deleteBucketLifecycleConfiguration(bucketName). }
false;public;1;4;;@Override public void deleteBucketLifecycleConfiguration(DeleteBucketLifecycleConfigurationRequest deleteBucketLifecycleConfigurationRequest) {     delegate.deleteBucketLifecycleConfiguration(deleteBucketLifecycleConfigurationRequest). }
false;public;1;4;;@Override public BucketCrossOriginConfiguration getBucketCrossOriginConfiguration(String bucketName) {     return delegate.getBucketCrossOriginConfiguration(bucketName). }
false;public;2;4;;@Override public void setBucketCrossOriginConfiguration(String bucketName, BucketCrossOriginConfiguration bucketCrossOriginConfiguration) {     delegate.setBucketCrossOriginConfiguration(bucketName, bucketCrossOriginConfiguration). }
false;public;1;4;;@Override public void setBucketCrossOriginConfiguration(SetBucketCrossOriginConfigurationRequest setBucketCrossOriginConfigurationRequest) {     delegate.setBucketCrossOriginConfiguration(setBucketCrossOriginConfigurationRequest). }
false;public;1;4;;@Override public void deleteBucketCrossOriginConfiguration(String bucketName) {     delegate.deleteBucketCrossOriginConfiguration(bucketName). }
false;public;1;5;;@Override public void deleteBucketCrossOriginConfiguration(DeleteBucketCrossOriginConfigurationRequest deleteBucketCrossOriginConfigurationRequest) {     delegate.deleteBucketCrossOriginConfiguration(deleteBucketCrossOriginConfigurationRequest). }
false;public;1;4;;@Override public BucketTaggingConfiguration getBucketTaggingConfiguration(String bucketName) {     return delegate.getBucketTaggingConfiguration(bucketName). }
false;public;2;4;;@Override public void setBucketTaggingConfiguration(String bucketName, BucketTaggingConfiguration bucketTaggingConfiguration) {     delegate.setBucketTaggingConfiguration(bucketName, bucketTaggingConfiguration). }
false;public;1;4;;@Override public void setBucketTaggingConfiguration(SetBucketTaggingConfigurationRequest setBucketTaggingConfigurationRequest) {     delegate.setBucketTaggingConfiguration(setBucketTaggingConfigurationRequest). }
false;public;1;4;;@Override public void deleteBucketTaggingConfiguration(String bucketName) {     delegate.deleteBucketTaggingConfiguration(bucketName). }
false;public;1;4;;@Override public void deleteBucketTaggingConfiguration(DeleteBucketTaggingConfigurationRequest deleteBucketTaggingConfigurationRequest) {     delegate.deleteBucketTaggingConfiguration(deleteBucketTaggingConfigurationRequest). }
false;public;1;5;;@Override public BucketNotificationConfiguration getBucketNotificationConfiguration(String bucketName) throws AmazonClientException, AmazonServiceException {     return delegate.getBucketNotificationConfiguration(bucketName). }
false;public;1;5;;@Override public void setBucketNotificationConfiguration(SetBucketNotificationConfigurationRequest setBucketNotificationConfigurationRequest) throws AmazonClientException, AmazonServiceException {     delegate.setBucketNotificationConfiguration(setBucketNotificationConfigurationRequest). }
false;public;2;5;;@Override public void setBucketNotificationConfiguration(String bucketName, BucketNotificationConfiguration bucketNotificationConfiguration) throws AmazonClientException, AmazonServiceException {     delegate.setBucketNotificationConfiguration(bucketName, bucketNotificationConfiguration). }
false;public;1;5;;@Override public BucketWebsiteConfiguration getBucketWebsiteConfiguration(String bucketName) throws AmazonClientException, AmazonServiceException {     return delegate.getBucketWebsiteConfiguration(bucketName). }
false;public;1;6;;@Override public BucketWebsiteConfiguration getBucketWebsiteConfiguration(GetBucketWebsiteConfigurationRequest getBucketWebsiteConfigurationRequest) throws AmazonClientException, AmazonServiceException {     return delegate.getBucketWebsiteConfiguration(getBucketWebsiteConfigurationRequest). }
false;public;2;5;;@Override public void setBucketWebsiteConfiguration(String bucketName, BucketWebsiteConfiguration configuration) throws AmazonClientException, AmazonServiceException {     delegate.setBucketWebsiteConfiguration(bucketName, configuration). }
false;public;1;5;;@Override public void setBucketWebsiteConfiguration(SetBucketWebsiteConfigurationRequest setBucketWebsiteConfigurationRequest) throws AmazonClientException, AmazonServiceException {     delegate.setBucketWebsiteConfiguration(setBucketWebsiteConfigurationRequest). }
false;public;1;4;;@Override public void deleteBucketWebsiteConfiguration(String bucketName) throws AmazonClientException, AmazonServiceException {     delegate.deleteBucketWebsiteConfiguration(bucketName). }
false;public;1;5;;@Override public void deleteBucketWebsiteConfiguration(DeleteBucketWebsiteConfigurationRequest deleteBucketWebsiteConfigurationRequest) throws AmazonClientException, AmazonServiceException {     delegate.deleteBucketWebsiteConfiguration(deleteBucketWebsiteConfigurationRequest). }
false;public;1;4;;@Override public BucketPolicy getBucketPolicy(String bucketName) throws AmazonClientException, AmazonServiceException {     return delegate.getBucketPolicy(bucketName). }
false;public;1;5;;@Override public BucketPolicy getBucketPolicy(GetBucketPolicyRequest getBucketPolicyRequest) throws AmazonClientException, AmazonServiceException {     return delegate.getBucketPolicy(getBucketPolicyRequest). }
false;public;2;4;;@Override public void setBucketPolicy(String bucketName, String policyText) throws AmazonClientException, AmazonServiceException {     delegate.setBucketPolicy(bucketName, policyText). }
false;public;1;4;;@Override public void setBucketPolicy(SetBucketPolicyRequest setBucketPolicyRequest) throws AmazonClientException, AmazonServiceException {     delegate.setBucketPolicy(setBucketPolicyRequest). }
false;public;1;4;;@Override public void deleteBucketPolicy(String bucketName) throws AmazonClientException, AmazonServiceException {     delegate.deleteBucketPolicy(bucketName). }
false;public;1;5;;@Override public void deleteBucketPolicy(DeleteBucketPolicyRequest deleteBucketPolicyRequest) throws AmazonClientException, AmazonServiceException {     delegate.deleteBucketPolicy(deleteBucketPolicyRequest). }
false;public;3;4;;@Override public URL generatePresignedUrl(String bucketName, String key, Date expiration) throws AmazonClientException {     return delegate.generatePresignedUrl(bucketName, key, expiration). }
false;public;4;4;;@Override public URL generatePresignedUrl(String bucketName, String key, Date expiration, HttpMethod method) throws AmazonClientException {     return delegate.generatePresignedUrl(bucketName, key, expiration, method). }
false;public;1;4;;@Override public URL generatePresignedUrl(GeneratePresignedUrlRequest generatePresignedUrlRequest) throws AmazonClientException {     return delegate.generatePresignedUrl(generatePresignedUrlRequest). }
false;public;1;5;;@Override public InitiateMultipartUploadResult initiateMultipartUpload(InitiateMultipartUploadRequest request) throws AmazonClientException, AmazonServiceException {     return delegate.initiateMultipartUpload(request). }
false;public;1;4;;@Override public UploadPartResult uploadPart(UploadPartRequest request) throws AmazonClientException, AmazonServiceException {     return delegate.uploadPart(request). }
false;public;1;4;;@Override public PartListing listParts(ListPartsRequest request) throws AmazonClientException, AmazonServiceException {     return delegate.listParts(request). }
false;public;1;4;;@Override public void abortMultipartUpload(AbortMultipartUploadRequest request) throws AmazonClientException, AmazonServiceException {     delegate.abortMultipartUpload(request). }
false;public;1;5;;@Override public CompleteMultipartUploadResult completeMultipartUpload(CompleteMultipartUploadRequest request) throws AmazonClientException, AmazonServiceException {     return delegate.completeMultipartUpload(request). }
false;public;1;5;;@Override public MultipartUploadListing listMultipartUploads(ListMultipartUploadsRequest request) throws AmazonClientException, AmazonServiceException {     return delegate.listMultipartUploads(request). }
false;public;1;4;;@Override public S3ResponseMetadata getCachedResponseMetadata(AmazonWebServiceRequest request) {     return delegate.getCachedResponseMetadata(request). }
false;public;1;4;;@Override public void restoreObject(RestoreObjectRequest copyGlacierObjectRequest) throws AmazonServiceException {     delegate.restoreObject(copyGlacierObjectRequest). }
false;public;3;4;;@Override public void restoreObject(String bucketName, String key, int expirationInDays) throws AmazonServiceException {     delegate.restoreObject(bucketName, key, expirationInDays). }
false;public;1;4;;@Override public void enableRequesterPays(String bucketName) throws AmazonServiceException, AmazonClientException {     delegate.enableRequesterPays(bucketName). }
false;public;1;4;;@Override public void disableRequesterPays(String bucketName) throws AmazonServiceException, AmazonClientException {     delegate.disableRequesterPays(bucketName). }
false;public;1;4;;@Override public boolean isRequesterPaysEnabled(String bucketName) throws AmazonServiceException, AmazonClientException {     return delegate.isRequesterPaysEnabled(bucketName). }
false;public;1;5;;@Override public ObjectListing listNextBatchOfObjects(ListNextBatchOfObjectsRequest listNextBatchOfObjectsRequest) throws AmazonClientException, AmazonServiceException {     return delegate.listNextBatchOfObjects(listNextBatchOfObjectsRequest). }
false;public;1;5;;@Override public VersionListing listNextBatchOfVersions(ListNextBatchOfVersionsRequest listNextBatchOfVersionsRequest) throws AmazonClientException, AmazonServiceException {     return delegate.listNextBatchOfVersions(listNextBatchOfVersionsRequest). }
false;public;1;4;;@Override public Owner getS3AccountOwner(GetS3AccountOwnerRequest getS3AccountOwnerRequest) throws AmazonClientException, AmazonServiceException {     return delegate.getS3AccountOwner(getS3AccountOwnerRequest). }
false;public;1;6;;@Override public BucketLoggingConfiguration getBucketLoggingConfiguration(GetBucketLoggingConfigurationRequest getBucketLoggingConfigurationRequest) throws AmazonClientException, AmazonServiceException {     return delegate.getBucketLoggingConfiguration(getBucketLoggingConfigurationRequest). }
false;public;1;6;;@Override public BucketVersioningConfiguration getBucketVersioningConfiguration(GetBucketVersioningConfigurationRequest getBucketVersioningConfigurationRequest) throws AmazonClientException, AmazonServiceException {     return delegate.getBucketVersioningConfiguration(getBucketVersioningConfigurationRequest). }
false;public;1;5;;@Override public BucketLifecycleConfiguration getBucketLifecycleConfiguration(GetBucketLifecycleConfigurationRequest getBucketLifecycleConfigurationRequest) {     return delegate.getBucketLifecycleConfiguration(getBucketLifecycleConfigurationRequest). }
false;public;1;5;;@Override public BucketCrossOriginConfiguration getBucketCrossOriginConfiguration(GetBucketCrossOriginConfigurationRequest getBucketCrossOriginConfigurationRequest) {     return delegate.getBucketCrossOriginConfiguration(getBucketCrossOriginConfigurationRequest). }
false;public;1;5;;@Override public BucketTaggingConfiguration getBucketTaggingConfiguration(GetBucketTaggingConfigurationRequest getBucketTaggingConfigurationRequest) {     return delegate.getBucketTaggingConfiguration(getBucketTaggingConfigurationRequest). }
false;public;1;6;;@Override public BucketNotificationConfiguration getBucketNotificationConfiguration(GetBucketNotificationConfigurationRequest getBucketNotificationConfigurationRequest) throws AmazonClientException, AmazonServiceException {     return delegate.getBucketNotificationConfiguration(getBucketNotificationConfigurationRequest). }
false;public;1;6;;@Override public BucketReplicationConfiguration getBucketReplicationConfiguration(GetBucketReplicationConfigurationRequest getBucketReplicationConfigurationRequest) throws AmazonServiceException, AmazonClientException {     return delegate.getBucketReplicationConfiguration(getBucketReplicationConfigurationRequest). }
false;public;1;4;;@Override public HeadBucketResult headBucket(HeadBucketRequest headBucketRequest) throws AmazonClientException, AmazonServiceException {     return delegate.headBucket(headBucketRequest). }
false;public;0;4;;@Override public void shutdown() {     delegate.shutdown(). }
