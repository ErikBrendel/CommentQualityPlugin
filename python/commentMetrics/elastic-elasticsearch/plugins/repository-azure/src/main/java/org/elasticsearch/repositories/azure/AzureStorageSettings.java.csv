# id;timestamp;commentText;codeText;commentWords;codeWords
AzureStorageSettings -> public static Map<String, AzureStorageSettings> load(Settings settings);1524684173;Parses settings and read all settings available under azure.client.*_@param settings settings to parse_@return All the named configurations;public static Map<String, AzureStorageSettings> load(Settings settings) {_        _        Map<String, AzureStorageSettings> storageSettings = new HashMap<>()__        for (String clientName : ACCOUNT_SETTING.getNamespaces(settings)) {_            storageSettings.put(clientName, getClientSettings(settings, clientName))__        }__        if (storageSettings.containsKey("default") == false && storageSettings.isEmpty() == false) {_            _            _            AzureStorageSettings defaultSettings = storageSettings.values().iterator().next()__            storageSettings.put("default", defaultSettings)__        }_        return Collections.unmodifiableMap(storageSettings)__    };parses,settings,and,read,all,settings,available,under,azure,client,param,settings,settings,to,parse,return,all,the,named,configurations;public,static,map,string,azure,storage,settings,load,settings,settings,map,string,azure,storage,settings,storage,settings,new,hash,map,for,string,client,name,get,namespaces,settings,storage,settings,put,client,name,get,client,settings,settings,client,name,if,storage,settings,contains,key,default,false,storage,settings,is,empty,false,azure,storage,settings,default,settings,storage,settings,values,iterator,next,storage,settings,put,default,default,settings,return,collections,unmodifiable,map,storage,settings
AzureStorageSettings -> public static Map<String, AzureStorageSettings> load(Settings settings);1529341607;Parse and read all settings available under the azure.client.* namespace_@param settings settings to parse_@return All the named configurations;public static Map<String, AzureStorageSettings> load(Settings settings) {_        _        final Map<String, AzureStorageSettings> storageSettings = new HashMap<>()__        for (final String clientName : ACCOUNT_SETTING.getNamespaces(settings)) {_            storageSettings.put(clientName, getClientSettings(settings, clientName))__        }_        if (false == storageSettings.containsKey("default") && false == storageSettings.isEmpty()) {_            _            _            final AzureStorageSettings defaultSettings = storageSettings.values().iterator().next()__            storageSettings.put("default", defaultSettings)__        }_        assert storageSettings.containsKey("default") || storageSettings.isEmpty() : "always have 'default' if any"__        return Collections.unmodifiableMap(storageSettings)__    };parse,and,read,all,settings,available,under,the,azure,client,namespace,param,settings,settings,to,parse,return,all,the,named,configurations;public,static,map,string,azure,storage,settings,load,settings,settings,final,map,string,azure,storage,settings,storage,settings,new,hash,map,for,final,string,client,name,get,namespaces,settings,storage,settings,put,client,name,get,client,settings,settings,client,name,if,false,storage,settings,contains,key,default,false,storage,settings,is,empty,final,azure,storage,settings,default,settings,storage,settings,values,iterator,next,storage,settings,put,default,default,settings,assert,storage,settings,contains,key,default,storage,settings,is,empty,always,have,default,if,any,return,collections,unmodifiable,map,storage,settings
AzureStorageSettings -> public static Map<String, AzureStorageSettings> load(Settings settings);1541529228;Parse and read all settings available under the azure.client.* namespace_@param settings settings to parse_@return All the named configurations;public static Map<String, AzureStorageSettings> load(Settings settings) {_        _        final Map<String, AzureStorageSettings> storageSettings = new HashMap<>()__        for (final String clientName : ACCOUNT_SETTING.getNamespaces(settings)) {_            storageSettings.put(clientName, getClientSettings(settings, clientName))__        }_        if (false == storageSettings.containsKey("default") && false == storageSettings.isEmpty()) {_            _            _            final AzureStorageSettings defaultSettings = storageSettings.values().iterator().next()__            storageSettings.put("default", defaultSettings)__        }_        assert storageSettings.containsKey("default") || storageSettings.isEmpty() : "always have 'default' if any"__        return Collections.unmodifiableMap(storageSettings)__    };parse,and,read,all,settings,available,under,the,azure,client,namespace,param,settings,settings,to,parse,return,all,the,named,configurations;public,static,map,string,azure,storage,settings,load,settings,settings,final,map,string,azure,storage,settings,storage,settings,new,hash,map,for,final,string,client,name,get,namespaces,settings,storage,settings,put,client,name,get,client,settings,settings,client,name,if,false,storage,settings,contains,key,default,false,storage,settings,is,empty,final,azure,storage,settings,default,settings,storage,settings,values,iterator,next,storage,settings,put,default,default,settings,assert,storage,settings,contains,key,default,storage,settings,is,empty,always,have,default,if,any,return,collections,unmodifiable,map,storage,settings
AzureStorageSettings -> static AzureStorageSettings getClientSettings(Settings settings, String clientName);1524684173;Parse settings for a single client.;static AzureStorageSettings getClientSettings(Settings settings, String clientName) {_        try (SecureString account = getConfigValue(settings, clientName, ACCOUNT_SETTING)__             SecureString key = getConfigValue(settings, clientName, KEY_SETTING)) {_            return new AzureStorageSettings(account.toString(), key.toString(),_                getValue(settings, clientName, ENDPOINT_SUFFIX_SETTING),_                getValue(settings, clientName, TIMEOUT_SETTING),_                getValue(settings, clientName, MAX_RETRIES_SETTING),_                getValue(settings, clientName, PROXY_TYPE_SETTING),_                getValue(settings, clientName, PROXY_HOST_SETTING),_                getValue(settings, clientName, PROXY_PORT_SETTING))__        }_    };parse,settings,for,a,single,client;static,azure,storage,settings,get,client,settings,settings,settings,string,client,name,try,secure,string,account,get,config,value,settings,client,name,secure,string,key,get,config,value,settings,client,name,return,new,azure,storage,settings,account,to,string,key,to,string,get,value,settings,client,name,get,value,settings,client,name,get,value,settings,client,name,get,value,settings,client,name,get,value,settings,client,name,get,value,settings,client,name
AzureStorageSettings -> static AzureStorageSettings getClientSettings(Settings settings, String clientName);1529341607;Parse settings for a single client.;static AzureStorageSettings getClientSettings(Settings settings, String clientName) {_        try (SecureString account = getConfigValue(settings, clientName, ACCOUNT_SETTING)__             SecureString key = getConfigValue(settings, clientName, KEY_SETTING)) {_            return new AzureStorageSettings(account.toString(), key.toString(),_                getValue(settings, clientName, ENDPOINT_SUFFIX_SETTING),_                getValue(settings, clientName, TIMEOUT_SETTING),_                getValue(settings, clientName, MAX_RETRIES_SETTING),_                getValue(settings, clientName, PROXY_TYPE_SETTING),_                getValue(settings, clientName, PROXY_HOST_SETTING),_                getValue(settings, clientName, PROXY_PORT_SETTING))__        }_    };parse,settings,for,a,single,client;static,azure,storage,settings,get,client,settings,settings,settings,string,client,name,try,secure,string,account,get,config,value,settings,client,name,secure,string,key,get,config,value,settings,client,name,return,new,azure,storage,settings,account,to,string,key,to,string,get,value,settings,client,name,get,value,settings,client,name,get,value,settings,client,name,get,value,settings,client,name,get,value,settings,client,name,get,value,settings,client,name
AzureStorageSettings -> static AzureStorageSettings getClientSettings(Settings settings, String clientName);1541529228;Parse settings for a single client.;static AzureStorageSettings getClientSettings(Settings settings, String clientName) {_        try (SecureString account = getConfigValue(settings, clientName, ACCOUNT_SETTING)__             SecureString key = getConfigValue(settings, clientName, KEY_SETTING)) {_            return new AzureStorageSettings(account.toString(), key.toString(),_                getValue(settings, clientName, ENDPOINT_SUFFIX_SETTING),_                getValue(settings, clientName, TIMEOUT_SETTING),_                getValue(settings, clientName, MAX_RETRIES_SETTING),_                getValue(settings, clientName, PROXY_TYPE_SETTING),_                getValue(settings, clientName, PROXY_HOST_SETTING),_                getValue(settings, clientName, PROXY_PORT_SETTING))__        }_    };parse,settings,for,a,single,client;static,azure,storage,settings,get,client,settings,settings,settings,string,client,name,try,secure,string,account,get,config,value,settings,client,name,secure,string,key,get,config,value,settings,client,name,return,new,azure,storage,settings,account,to,string,key,to,string,get,value,settings,client,name,get,value,settings,client,name,get,value,settings,client,name,get,value,settings,client,name,get,value,settings,client,name,get,value,settings,client,name
