commented;modifiers;parameterAmount;loc;comment;code
false;protected;2;5;;@Override protected Analyzer getAnalyzer(DocumentMapper docMapper, MappedFieldType type) {     annotatedHighlighterAnalyzer = new AnnotatedHighlighterAnalyzer(super.getAnalyzer(docMapper, type)).     return annotatedHighlighterAnalyzer. }
true;protected;4;8;// Convert the marked-up values held on-disk to plain-text versions for highlighting ;// Convert the marked-up values held on-disk to plain-text versions for highlighting @Override protected List<Object> loadFieldValues(MappedFieldType fieldType, Field field, SearchContext context, HitContext hitContext) throws IOException {     List<Object> fieldValues = super.loadFieldValues(fieldType, field, context, hitContext).     String[] fieldValuesAsString = fieldValues.toArray(new String[fieldValues.size()]).     annotatedHighlighterAnalyzer.init(fieldValuesAsString).     return Arrays.asList((Object[]) annotatedHighlighterAnalyzer.getPlainTextValuesForHighlighter()). }
false;protected;2;5;;@Override protected PassageFormatter getPassageFormatter(SearchContextHighlight.Field field, Encoder encoder) {     return new AnnotatedPassageFormatter(annotatedHighlighterAnalyzer, encoder). }
