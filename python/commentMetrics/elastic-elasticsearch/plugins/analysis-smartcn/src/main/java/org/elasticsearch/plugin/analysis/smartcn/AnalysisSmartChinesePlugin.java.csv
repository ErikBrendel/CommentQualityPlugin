commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;@Override public Map<String, AnalysisProvider<TokenFilterFactory>> getTokenFilters() {     // This is a noop token filter. it's here for backwards compat before we had "smartcn_tokenizer"     return singletonMap("smartcn_word", SmartChineseNoOpTokenFilterFactory::new). }
false;public;0;8;;@Override public Map<String, AnalysisProvider<TokenizerFactory>> getTokenizers() {     Map<String, AnalysisProvider<TokenizerFactory>> extra = new HashMap<>().     extra.put("smartcn_tokenizer", SmartChineseTokenizerTokenizerFactory::new).     // This is an alias to "smartcn_tokenizer". it's here for backwards compat     extra.put("smartcn_sentence", SmartChineseTokenizerTokenizerFactory::new).     return extra. }
false;public;0;4;;@Override public Map<String, AnalysisProvider<AnalyzerProvider<? extends Analyzer>>> getAnalyzers() {     return singletonMap("smartcn", SmartChineseAnalyzerProvider::new). }
