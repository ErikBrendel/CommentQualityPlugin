commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public Map<String, AnalysisProvider<CharFilterFactory>> getCharFilters() {     return singletonMap("icu_normalizer", IcuNormalizerCharFilterFactory::new). }
false;public;0;9;;@Override public Map<String, AnalysisProvider<TokenFilterFactory>> getTokenFilters() {     Map<String, AnalysisProvider<TokenFilterFactory>> extra = new HashMap<>().     extra.put("icu_normalizer", IcuNormalizerTokenFilterFactory::new).     extra.put("icu_folding", IcuFoldingTokenFilterFactory::new).     extra.put("icu_collation", IcuCollationTokenFilterFactory::new).     extra.put("icu_transform", IcuTransformTokenFilterFactory::new).     return extra. }
false;public;0;4;;@Override public Map<String, AnalysisProvider<AnalyzerProvider<? extends Analyzer>>> getAnalyzers() {     return singletonMap("icu_analyzer", IcuAnalyzerProvider::new). }
false;public;0;4;;@Override public Map<String, AnalysisProvider<TokenizerFactory>> getTokenizers() {     return singletonMap("icu_tokenizer", IcuTokenizerFactory::new). }
false;public;0;4;;@Override public Map<String, Mapper.TypeParser> getMappers() {     return Collections.singletonMap(ICUCollationKeywordFieldMapper.CONTENT_TYPE, new ICUCollationKeywordFieldMapper.TypeParser()). }
false;public;0;10;;@Override public List<NamedWriteableRegistry.Entry> getNamedWriteables() {     return Collections.singletonList(new NamedWriteableRegistry.Entry(DocValueFormat.class, ICUCollationKeywordFieldMapper.CollationFieldType.COLLATE_FORMAT.getWriteableName(), in -> ICUCollationKeywordFieldMapper.CollationFieldType.COLLATE_FORMAT)). }
