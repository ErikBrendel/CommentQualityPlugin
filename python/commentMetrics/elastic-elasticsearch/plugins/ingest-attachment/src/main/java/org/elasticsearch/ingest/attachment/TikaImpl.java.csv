# id;timestamp;commentText;codeText;commentWords;codeWords
TikaImpl -> static String parse(final byte content[], final Metadata metadata, final int limit) throws TikaException, IOException;1524684173;parses with tika, throwing any exception hit while parsing the document;static String parse(final byte content[], final Metadata metadata, final int limit) throws TikaException, IOException {_        _        SpecialPermission.check()___        try {_            return AccessController.doPrivileged((PrivilegedExceptionAction<String>)_                () -> TIKA_INSTANCE.parseToString(new ByteArrayInputStream(content), metadata, limit), RESTRICTED_CONTEXT)__        } catch (PrivilegedActionException e) {_            _            Throwable cause = e.getCause()__            if (cause instanceof TikaException) {_                throw (TikaException) cause__            } else if (cause instanceof IOException) {_                throw (IOException) cause__            } else {_                throw new AssertionError(cause)__            }_        }_    };parses,with,tika,throwing,any,exception,hit,while,parsing,the,document;static,string,parse,final,byte,content,final,metadata,metadata,final,int,limit,throws,tika,exception,ioexception,special,permission,check,try,return,access,controller,do,privileged,privileged,exception,action,string,parse,to,string,new,byte,array,input,stream,content,metadata,limit,catch,privileged,action,exception,e,throwable,cause,e,get,cause,if,cause,instanceof,tika,exception,throw,tika,exception,cause,else,if,cause,instanceof,ioexception,throw,ioexception,cause,else,throw,new,assertion,error,cause
TikaImpl -> static String parse(final byte content[], final Metadata metadata, final int limit) throws TikaException, IOException;1529916084;parses with tika, throwing any exception hit while parsing the document;static String parse(final byte content[], final Metadata metadata, final int limit) throws TikaException, IOException {_        _        SpecialPermission.check()___        try {_            return AccessController.doPrivileged((PrivilegedExceptionAction<String>)_                () -> TIKA_INSTANCE.parseToString(new ByteArrayInputStream(content), metadata, limit), RESTRICTED_CONTEXT)__        } catch (PrivilegedActionException e) {_            _            Throwable cause = e.getCause()__            if (cause instanceof TikaException) {_                throw (TikaException) cause__            } else if (cause instanceof IOException) {_                throw (IOException) cause__            } else {_                throw new AssertionError(cause)__            }_        }_    };parses,with,tika,throwing,any,exception,hit,while,parsing,the,document;static,string,parse,final,byte,content,final,metadata,metadata,final,int,limit,throws,tika,exception,ioexception,special,permission,check,try,return,access,controller,do,privileged,privileged,exception,action,string,parse,to,string,new,byte,array,input,stream,content,metadata,limit,catch,privileged,action,exception,e,throwable,cause,e,get,cause,if,cause,instanceof,tika,exception,throw,tika,exception,cause,else,if,cause,instanceof,ioexception,throw,ioexception,cause,else,throw,new,assertion,error,cause
TikaImpl -> static String parse(final byte content[], final Metadata metadata, final int limit) throws TikaException, IOException;1531179852;parses with tika, throwing any exception hit while parsing the document;static String parse(final byte content[], final Metadata metadata, final int limit) throws TikaException, IOException {_        _        SpecialPermission.check()___        try {_            return AccessController.doPrivileged((PrivilegedExceptionAction<String>)_                () -> TIKA_INSTANCE.parseToString(new ByteArrayInputStream(content), metadata, limit), RESTRICTED_CONTEXT)__        } catch (PrivilegedActionException e) {_            _            Throwable cause = e.getCause()__            if (cause instanceof TikaException) {_                throw (TikaException) cause__            } else if (cause instanceof IOException) {_                throw (IOException) cause__            } else {_                throw new AssertionError(cause)__            }_        }_    };parses,with,tika,throwing,any,exception,hit,while,parsing,the,document;static,string,parse,final,byte,content,final,metadata,metadata,final,int,limit,throws,tika,exception,ioexception,special,permission,check,try,return,access,controller,do,privileged,privileged,exception,action,string,parse,to,string,new,byte,array,input,stream,content,metadata,limit,catch,privileged,action,exception,e,throwable,cause,e,get,cause,if,cause,instanceof,tika,exception,throw,tika,exception,cause,else,if,cause,instanceof,ioexception,throw,ioexception,cause,else,throw,new,assertion,error,cause
