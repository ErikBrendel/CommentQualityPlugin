commented;modifiers;parameterAmount;loc;comment;code
true;static;1;4;/**  * Prints a string and terminates the line on standard output.  *  * @param message the message to print  */ ;/**  * Prints a string and terminates the line on standard output.  *  * @param message the message to print  */ @SuppressForbidden(reason = "System#out") static void outPrintln(final String message) {     System.out.println(message). }
true;static;1;4;/**  * Prints a string and terminates the line on standard error.  *  * @param message the message to print  */ ;/**  * Prints a string and terminates the line on standard error.  *  * @param message the message to print  */ @SuppressForbidden(reason = "System#err") static void errPrintln(final String message) {     System.err.println(message). }
true;static;1;4;/**  * Exit the VM with the specified status.  *  * @param status the status  */ ;/**  * Exit the VM with the specified status.  *  * @param status the status  */ @SuppressForbidden(reason = "System#exit") static void exit(final int status) {     System.exit(status). }
false;static;2;4;;@SuppressForbidden(reason = "Files#createTempDirectory(String, FileAttribute...)") static Path createTempDirectory(final String prefix, final FileAttribute<?>... attrs) throws IOException {     return Files.createTempDirectory(prefix, attrs). }
