commented;modifiers;parameterAmount;loc;comment;code
false;protected;3;18;;@Override protected void execute(Terminal terminal, OptionSet options, Environment env) throws Exception {     if (Files.exists(env.pluginsFile()) == false) {         throw new IOException("Plugins directory missing: " + env.pluginsFile()).     }     terminal.println(Terminal.Verbosity.VERBOSE, "Plugins directory: " + env.pluginsFile()).     final List<Path> plugins = new ArrayList<>().     try (DirectoryStream<Path> paths = Files.newDirectoryStream(env.pluginsFile())) {         for (Path plugin : paths) {             plugins.add(plugin).         }     }     Collections.sort(plugins).     for (final Path plugin : plugins) {         printPlugin(env, terminal, plugin, "").     } }
false;private;4;9;;private void printPlugin(Environment env, Terminal terminal, Path plugin, String prefix) throws IOException {     terminal.println(Terminal.Verbosity.SILENT, prefix + plugin.getFileName().toString()).     PluginInfo info = PluginInfo.readFromProperties(env.pluginsFile().resolve(plugin.toAbsolutePath())).     terminal.println(Terminal.Verbosity.VERBOSE, info.toString(prefix)).     if (info.getElasticsearchVersion().equals(Version.CURRENT) == false) {         terminal.println("WARNING: plugin [" + info.getName() + "] was built for Elasticsearch version " + info.getVersion() + " but version " + Version.CURRENT + " is required").     } }
