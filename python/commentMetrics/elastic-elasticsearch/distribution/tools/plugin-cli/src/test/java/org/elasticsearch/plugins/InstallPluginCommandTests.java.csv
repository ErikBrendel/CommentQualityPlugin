# id;timestamp;commentText;codeText;commentWords;codeWords
InstallPluginCommandTests -> static Tuple<Path, Environment> createEnv(FileSystem fs, Function<String, Path> temp) throws IOException;1524684173;Creates a test environment with bin, config and plugins directories.;static Tuple<Path, Environment> createEnv(FileSystem fs, Function<String, Path> temp) throws IOException {_        Path home = temp.apply("install-plugin-command-tests")__        Files.createDirectories(home.resolve("bin"))__        Files.createFile(home.resolve("bin").resolve("elasticsearch"))__        Files.createDirectories(home.resolve("config"))__        Files.createFile(home.resolve("config").resolve("elasticsearch.yml"))__        Path plugins = Files.createDirectories(home.resolve("plugins"))__        assertTrue(Files.exists(plugins))__        Settings settings = Settings.builder()_            .put("path.home", home)_            .build()__        return Tuple.tuple(home, TestEnvironment.newEnvironment(settings))__    };creates,a,test,environment,with,bin,config,and,plugins,directories;static,tuple,path,environment,create,env,file,system,fs,function,string,path,temp,throws,ioexception,path,home,temp,apply,install,plugin,command,tests,files,create,directories,home,resolve,bin,files,create,file,home,resolve,bin,resolve,elasticsearch,files,create,directories,home,resolve,config,files,create,file,home,resolve,config,resolve,elasticsearch,yml,path,plugins,files,create,directories,home,resolve,plugins,assert,true,files,exists,plugins,settings,settings,settings,builder,put,path,home,home,build,return,tuple,tuple,home,test,environment,new,environment,settings
InstallPluginCommandTests -> static Tuple<Path, Environment> createEnv(FileSystem fs, Function<String, Path> temp) throws IOException;1526900724;Creates a test environment with bin, config and plugins directories.;static Tuple<Path, Environment> createEnv(FileSystem fs, Function<String, Path> temp) throws IOException {_        Path home = temp.apply("install-plugin-command-tests")__        Files.createDirectories(home.resolve("bin"))__        Files.createFile(home.resolve("bin").resolve("elasticsearch"))__        Files.createDirectories(home.resolve("config"))__        Files.createFile(home.resolve("config").resolve("elasticsearch.yml"))__        Path plugins = Files.createDirectories(home.resolve("plugins"))__        assertTrue(Files.exists(plugins))__        Settings settings = Settings.builder()_            .put("path.home", home)_            .build()__        return Tuple.tuple(home, TestEnvironment.newEnvironment(settings))__    };creates,a,test,environment,with,bin,config,and,plugins,directories;static,tuple,path,environment,create,env,file,system,fs,function,string,path,temp,throws,ioexception,path,home,temp,apply,install,plugin,command,tests,files,create,directories,home,resolve,bin,files,create,file,home,resolve,bin,resolve,elasticsearch,files,create,directories,home,resolve,config,files,create,file,home,resolve,config,resolve,elasticsearch,yml,path,plugins,files,create,directories,home,resolve,plugins,assert,true,files,exists,plugins,settings,settings,settings,builder,put,path,home,home,build,return,tuple,tuple,home,test,environment,new,environment,settings
InstallPluginCommandTests -> static Tuple<Path, Environment> createEnv(FileSystem fs, Function<String, Path> temp) throws IOException;1526981569;Creates a test environment with bin, config and plugins directories.;static Tuple<Path, Environment> createEnv(FileSystem fs, Function<String, Path> temp) throws IOException {_        Path home = temp.apply("install-plugin-command-tests")__        Files.createDirectories(home.resolve("bin"))__        Files.createFile(home.resolve("bin").resolve("elasticsearch"))__        Files.createDirectories(home.resolve("config"))__        Files.createFile(home.resolve("config").resolve("elasticsearch.yml"))__        Path plugins = Files.createDirectories(home.resolve("plugins"))__        assertTrue(Files.exists(plugins))__        Settings settings = Settings.builder()_            .put("path.home", home)_            .build()__        return Tuple.tuple(home, TestEnvironment.newEnvironment(settings))__    };creates,a,test,environment,with,bin,config,and,plugins,directories;static,tuple,path,environment,create,env,file,system,fs,function,string,path,temp,throws,ioexception,path,home,temp,apply,install,plugin,command,tests,files,create,directories,home,resolve,bin,files,create,file,home,resolve,bin,resolve,elasticsearch,files,create,directories,home,resolve,config,files,create,file,home,resolve,config,resolve,elasticsearch,yml,path,plugins,files,create,directories,home,resolve,plugins,assert,true,files,exists,plugins,settings,settings,settings,builder,put,path,home,home,build,return,tuple,tuple,home,test,environment,new,environment,settings
InstallPluginCommandTests -> static Tuple<Path, Environment> createEnv(FileSystem fs, Function<String, Path> temp) throws IOException;1527583663;Creates a test environment with bin, config and plugins directories.;static Tuple<Path, Environment> createEnv(FileSystem fs, Function<String, Path> temp) throws IOException {_        Path home = temp.apply("install-plugin-command-tests")__        Files.createDirectories(home.resolve("bin"))__        Files.createFile(home.resolve("bin").resolve("elasticsearch"))__        Files.createDirectories(home.resolve("config"))__        Files.createFile(home.resolve("config").resolve("elasticsearch.yml"))__        Path plugins = Files.createDirectories(home.resolve("plugins"))__        assertTrue(Files.exists(plugins))__        Settings settings = Settings.builder()_            .put("path.home", home)_            .build()__        return Tuple.tuple(home, TestEnvironment.newEnvironment(settings))__    };creates,a,test,environment,with,bin,config,and,plugins,directories;static,tuple,path,environment,create,env,file,system,fs,function,string,path,temp,throws,ioexception,path,home,temp,apply,install,plugin,command,tests,files,create,directories,home,resolve,bin,files,create,file,home,resolve,bin,resolve,elasticsearch,files,create,directories,home,resolve,config,files,create,file,home,resolve,config,resolve,elasticsearch,yml,path,plugins,files,create,directories,home,resolve,plugins,assert,true,files,exists,plugins,settings,settings,settings,builder,put,path,home,home,build,return,tuple,tuple,home,test,environment,new,environment,settings
InstallPluginCommandTests -> static Tuple<Path, Environment> createEnv(FileSystem fs, Function<String, Path> temp) throws IOException;1528893677;Creates a test environment with bin, config and plugins directories.;static Tuple<Path, Environment> createEnv(FileSystem fs, Function<String, Path> temp) throws IOException {_        Path home = temp.apply("install-plugin-command-tests")__        Files.createDirectories(home.resolve("bin"))__        Files.createFile(home.resolve("bin").resolve("elasticsearch"))__        Files.createDirectories(home.resolve("config"))__        Files.createFile(home.resolve("config").resolve("elasticsearch.yml"))__        Path plugins = Files.createDirectories(home.resolve("plugins"))__        assertTrue(Files.exists(plugins))__        Settings settings = Settings.builder()_            .put("path.home", home)_            .build()__        return Tuple.tuple(home, TestEnvironment.newEnvironment(settings))__    };creates,a,test,environment,with,bin,config,and,plugins,directories;static,tuple,path,environment,create,env,file,system,fs,function,string,path,temp,throws,ioexception,path,home,temp,apply,install,plugin,command,tests,files,create,directories,home,resolve,bin,files,create,file,home,resolve,bin,resolve,elasticsearch,files,create,directories,home,resolve,config,files,create,file,home,resolve,config,resolve,elasticsearch,yml,path,plugins,files,create,directories,home,resolve,plugins,assert,true,files,exists,plugins,settings,settings,settings,builder,put,path,home,home,build,return,tuple,tuple,home,test,environment,new,environment,settings
InstallPluginCommandTests -> static Tuple<Path, Environment> createEnv(FileSystem fs, Function<String, Path> temp) throws IOException;1531910483;Creates a test environment with bin, config and plugins directories.;static Tuple<Path, Environment> createEnv(FileSystem fs, Function<String, Path> temp) throws IOException {_        Path home = temp.apply("install-plugin-command-tests")__        Files.createDirectories(home.resolve("bin"))__        Files.createFile(home.resolve("bin").resolve("elasticsearch"))__        Files.createDirectories(home.resolve("config"))__        Files.createFile(home.resolve("config").resolve("elasticsearch.yml"))__        Path plugins = Files.createDirectories(home.resolve("plugins"))__        assertTrue(Files.exists(plugins))__        Settings settings = Settings.builder()_            .put("path.home", home)_            .build()__        return Tuple.tuple(home, TestEnvironment.newEnvironment(settings))__    };creates,a,test,environment,with,bin,config,and,plugins,directories;static,tuple,path,environment,create,env,file,system,fs,function,string,path,temp,throws,ioexception,path,home,temp,apply,install,plugin,command,tests,files,create,directories,home,resolve,bin,files,create,file,home,resolve,bin,resolve,elasticsearch,files,create,directories,home,resolve,config,files,create,file,home,resolve,config,resolve,elasticsearch,yml,path,plugins,files,create,directories,home,resolve,plugins,assert,true,files,exists,plugins,settings,settings,settings,builder,put,path,home,home,build,return,tuple,tuple,home,test,environment,new,environment,settings
InstallPluginCommandTests -> static Tuple<Path, Environment> createEnv(FileSystem fs, Function<String, Path> temp) throws IOException;1541592065;Creates a test environment with bin, config and plugins directories.;static Tuple<Path, Environment> createEnv(FileSystem fs, Function<String, Path> temp) throws IOException {_        Path home = temp.apply("install-plugin-command-tests")__        Files.createDirectories(home.resolve("bin"))__        Files.createFile(home.resolve("bin").resolve("elasticsearch"))__        Files.createDirectories(home.resolve("config"))__        Files.createFile(home.resolve("config").resolve("elasticsearch.yml"))__        Path plugins = Files.createDirectories(home.resolve("plugins"))__        assertTrue(Files.exists(plugins))__        Settings settings = Settings.builder()_            .put("path.home", home)_            .build()__        return Tuple.tuple(home, TestEnvironment.newEnvironment(settings))__    };creates,a,test,environment,with,bin,config,and,plugins,directories;static,tuple,path,environment,create,env,file,system,fs,function,string,path,temp,throws,ioexception,path,home,temp,apply,install,plugin,command,tests,files,create,directories,home,resolve,bin,files,create,file,home,resolve,bin,resolve,elasticsearch,files,create,directories,home,resolve,config,files,create,file,home,resolve,config,resolve,elasticsearch,yml,path,plugins,files,create,directories,home,resolve,plugins,assert,true,files,exists,plugins,settings,settings,settings,builder,put,path,home,home,build,return,tuple,tuple,home,test,environment,new,environment,settings
InstallPluginCommandTests -> static Tuple<Path, Environment> createEnv(FileSystem fs, Function<String, Path> temp) throws IOException;1542640625;Creates a test environment with bin, config and plugins directories.;static Tuple<Path, Environment> createEnv(FileSystem fs, Function<String, Path> temp) throws IOException {_        Path home = temp.apply("install-plugin-command-tests")__        Files.createDirectories(home.resolve("bin"))__        Files.createFile(home.resolve("bin").resolve("elasticsearch"))__        Files.createDirectories(home.resolve("config"))__        Files.createFile(home.resolve("config").resolve("elasticsearch.yml"))__        Path plugins = Files.createDirectories(home.resolve("plugins"))__        assertTrue(Files.exists(plugins))__        Settings settings = Settings.builder()_            .put("path.home", home)_            .build()__        return Tuple.tuple(home, TestEnvironment.newEnvironment(settings))__    };creates,a,test,environment,with,bin,config,and,plugins,directories;static,tuple,path,environment,create,env,file,system,fs,function,string,path,temp,throws,ioexception,path,home,temp,apply,install,plugin,command,tests,files,create,directories,home,resolve,bin,files,create,file,home,resolve,bin,resolve,elasticsearch,files,create,directories,home,resolve,config,files,create,file,home,resolve,config,resolve,elasticsearch,yml,path,plugins,files,create,directories,home,resolve,plugins,assert,true,files,exists,plugins,settings,settings,settings,builder,put,path,home,home,build,return,tuple,tuple,home,test,environment,new,environment,settings
InstallPluginCommandTests -> static Tuple<Path, Environment> createEnv(FileSystem fs, Function<String, Path> temp) throws IOException;1544610279;Creates a test environment with bin, config and plugins directories.;static Tuple<Path, Environment> createEnv(FileSystem fs, Function<String, Path> temp) throws IOException {_        Path home = temp.apply("install-plugin-command-tests")__        Files.createDirectories(home.resolve("bin"))__        Files.createFile(home.resolve("bin").resolve("elasticsearch"))__        Files.createDirectories(home.resolve("config"))__        Files.createFile(home.resolve("config").resolve("elasticsearch.yml"))__        Path plugins = Files.createDirectories(home.resolve("plugins"))__        assertTrue(Files.exists(plugins))__        Settings settings = Settings.builder()_            .put("path.home", home)_            .build()__        return Tuple.tuple(home, TestEnvironment.newEnvironment(settings))__    };creates,a,test,environment,with,bin,config,and,plugins,directories;static,tuple,path,environment,create,env,file,system,fs,function,string,path,temp,throws,ioexception,path,home,temp,apply,install,plugin,command,tests,files,create,directories,home,resolve,bin,files,create,file,home,resolve,bin,resolve,elasticsearch,files,create,directories,home,resolve,config,files,create,file,home,resolve,config,resolve,elasticsearch,yml,path,plugins,files,create,directories,home,resolve,plugins,assert,true,files,exists,plugins,settings,settings,settings,builder,put,path,home,home,build,return,tuple,tuple,home,test,environment,new,environment,settings
InstallPluginCommandTests -> static Tuple<Path, Environment> createEnv(FileSystem fs, Function<String, Path> temp) throws IOException;1545481309;Creates a test environment with bin, config and plugins directories.;static Tuple<Path, Environment> createEnv(FileSystem fs, Function<String, Path> temp) throws IOException {_        Path home = temp.apply("install-plugin-command-tests")__        Files.createDirectories(home.resolve("bin"))__        Files.createFile(home.resolve("bin").resolve("elasticsearch"))__        Files.createDirectories(home.resolve("config"))__        Files.createFile(home.resolve("config").resolve("elasticsearch.yml"))__        Path plugins = Files.createDirectories(home.resolve("plugins"))__        assertTrue(Files.exists(plugins))__        Settings settings = Settings.builder()_            .put("path.home", home)_            .build()__        return Tuple.tuple(home, TestEnvironment.newEnvironment(settings))__    };creates,a,test,environment,with,bin,config,and,plugins,directories;static,tuple,path,environment,create,env,file,system,fs,function,string,path,temp,throws,ioexception,path,home,temp,apply,install,plugin,command,tests,files,create,directories,home,resolve,bin,files,create,file,home,resolve,bin,resolve,elasticsearch,files,create,directories,home,resolve,config,files,create,file,home,resolve,config,resolve,elasticsearch,yml,path,plugins,files,create,directories,home,resolve,plugins,assert,true,files,exists,plugins,settings,settings,settings,builder,put,path,home,home,build,return,tuple,tuple,home,test,environment,new,environment,settings
InstallPluginCommandTests -> static Tuple<Path, Environment> createEnv(FileSystem fs, Function<String, Path> temp) throws IOException;1545528053;Creates a test environment with bin, config and plugins directories.;static Tuple<Path, Environment> createEnv(FileSystem fs, Function<String, Path> temp) throws IOException {_        Path home = temp.apply("install-plugin-command-tests")__        Files.createDirectories(home.resolve("bin"))__        Files.createFile(home.resolve("bin").resolve("elasticsearch"))__        Files.createDirectories(home.resolve("config"))__        Files.createFile(home.resolve("config").resolve("elasticsearch.yml"))__        Path plugins = Files.createDirectories(home.resolve("plugins"))__        assertTrue(Files.exists(plugins))__        Settings settings = Settings.builder()_            .put("path.home", home)_            .build()__        return Tuple.tuple(home, TestEnvironment.newEnvironment(settings))__    };creates,a,test,environment,with,bin,config,and,plugins,directories;static,tuple,path,environment,create,env,file,system,fs,function,string,path,temp,throws,ioexception,path,home,temp,apply,install,plugin,command,tests,files,create,directories,home,resolve,bin,files,create,file,home,resolve,bin,resolve,elasticsearch,files,create,directories,home,resolve,config,files,create,file,home,resolve,config,resolve,elasticsearch,yml,path,plugins,files,create,directories,home,resolve,plugins,assert,true,files,exists,plugins,settings,settings,settings,builder,put,path,home,home,build,return,tuple,tuple,home,test,environment,new,environment,settings
InstallPluginCommandTests -> static Tuple<Path, Environment> createEnv(FileSystem fs, Function<String, Path> temp) throws IOException;1545599625;Creates a test environment with bin, config and plugins directories.;static Tuple<Path, Environment> createEnv(FileSystem fs, Function<String, Path> temp) throws IOException {_        Path home = temp.apply("install-plugin-command-tests")__        Files.createDirectories(home.resolve("bin"))__        Files.createFile(home.resolve("bin").resolve("elasticsearch"))__        Files.createDirectories(home.resolve("config"))__        Files.createFile(home.resolve("config").resolve("elasticsearch.yml"))__        Path plugins = Files.createDirectories(home.resolve("plugins"))__        assertTrue(Files.exists(plugins))__        Settings settings = Settings.builder()_            .put("path.home", home)_            .build()__        return Tuple.tuple(home, TestEnvironment.newEnvironment(settings))__    };creates,a,test,environment,with,bin,config,and,plugins,directories;static,tuple,path,environment,create,env,file,system,fs,function,string,path,temp,throws,ioexception,path,home,temp,apply,install,plugin,command,tests,files,create,directories,home,resolve,bin,files,create,file,home,resolve,bin,resolve,elasticsearch,files,create,directories,home,resolve,config,files,create,file,home,resolve,config,resolve,elasticsearch,yml,path,plugins,files,create,directories,home,resolve,plugins,assert,true,files,exists,plugins,settings,settings,settings,builder,put,path,home,home,build,return,tuple,tuple,home,test,environment,new,environment,settings
InstallPluginCommandTests -> static void writeJar(Path jar, String... classes) throws IOException;1524684173;creates a fake jar file with empty class files;static void writeJar(Path jar, String... classes) throws IOException {_        try (ZipOutputStream stream = new ZipOutputStream(Files.newOutputStream(jar))) {_            for (String clazz : classes) {_                stream.putNextEntry(new ZipEntry(clazz + ".class"))_ _            }_        }_    };creates,a,fake,jar,file,with,empty,class,files;static,void,write,jar,path,jar,string,classes,throws,ioexception,try,zip,output,stream,stream,new,zip,output,stream,files,new,output,stream,jar,for,string,clazz,classes,stream,put,next,entry,new,zip,entry,clazz,class
InstallPluginCommandTests -> static void writeJar(Path jar, String... classes) throws IOException;1526900724;creates a fake jar file with empty class files;static void writeJar(Path jar, String... classes) throws IOException {_        try (ZipOutputStream stream = new ZipOutputStream(Files.newOutputStream(jar))) {_            for (String clazz : classes) {_                stream.putNextEntry(new ZipEntry(clazz + ".class"))_ _            }_        }_    };creates,a,fake,jar,file,with,empty,class,files;static,void,write,jar,path,jar,string,classes,throws,ioexception,try,zip,output,stream,stream,new,zip,output,stream,files,new,output,stream,jar,for,string,clazz,classes,stream,put,next,entry,new,zip,entry,clazz,class
InstallPluginCommandTests -> static void writeJar(Path jar, String... classes) throws IOException;1526981569;creates a fake jar file with empty class files;static void writeJar(Path jar, String... classes) throws IOException {_        try (ZipOutputStream stream = new ZipOutputStream(Files.newOutputStream(jar))) {_            for (String clazz : classes) {_                stream.putNextEntry(new ZipEntry(clazz + ".class"))_ _            }_        }_    };creates,a,fake,jar,file,with,empty,class,files;static,void,write,jar,path,jar,string,classes,throws,ioexception,try,zip,output,stream,stream,new,zip,output,stream,files,new,output,stream,jar,for,string,clazz,classes,stream,put,next,entry,new,zip,entry,clazz,class
InstallPluginCommandTests -> static void writeJar(Path jar, String... classes) throws IOException;1527583663;creates a fake jar file with empty class files;static void writeJar(Path jar, String... classes) throws IOException {_        try (ZipOutputStream stream = new ZipOutputStream(Files.newOutputStream(jar))) {_            for (String clazz : classes) {_                stream.putNextEntry(new ZipEntry(clazz + ".class"))_ _            }_        }_    };creates,a,fake,jar,file,with,empty,class,files;static,void,write,jar,path,jar,string,classes,throws,ioexception,try,zip,output,stream,stream,new,zip,output,stream,files,new,output,stream,jar,for,string,clazz,classes,stream,put,next,entry,new,zip,entry,clazz,class
InstallPluginCommandTests -> static void writeJar(Path jar, String... classes) throws IOException;1528893677;creates a fake jar file with empty class files;static void writeJar(Path jar, String... classes) throws IOException {_        try (ZipOutputStream stream = new ZipOutputStream(Files.newOutputStream(jar))) {_            for (String clazz : classes) {_                stream.putNextEntry(new ZipEntry(clazz + ".class"))_ _            }_        }_    };creates,a,fake,jar,file,with,empty,class,files;static,void,write,jar,path,jar,string,classes,throws,ioexception,try,zip,output,stream,stream,new,zip,output,stream,files,new,output,stream,jar,for,string,clazz,classes,stream,put,next,entry,new,zip,entry,clazz,class
InstallPluginCommandTests -> static void writeJar(Path jar, String... classes) throws IOException;1531910483;creates a fake jar file with empty class files;static void writeJar(Path jar, String... classes) throws IOException {_        try (ZipOutputStream stream = new ZipOutputStream(Files.newOutputStream(jar))) {_            for (String clazz : classes) {_                stream.putNextEntry(new ZipEntry(clazz + ".class"))_ _            }_        }_    };creates,a,fake,jar,file,with,empty,class,files;static,void,write,jar,path,jar,string,classes,throws,ioexception,try,zip,output,stream,stream,new,zip,output,stream,files,new,output,stream,jar,for,string,clazz,classes,stream,put,next,entry,new,zip,entry,clazz,class
InstallPluginCommandTests -> static void writeJar(Path jar, String... classes) throws IOException;1541592065;creates a fake jar file with empty class files;static void writeJar(Path jar, String... classes) throws IOException {_        try (ZipOutputStream stream = new ZipOutputStream(Files.newOutputStream(jar))) {_            for (String clazz : classes) {_                stream.putNextEntry(new ZipEntry(clazz + ".class"))_ _            }_        }_    };creates,a,fake,jar,file,with,empty,class,files;static,void,write,jar,path,jar,string,classes,throws,ioexception,try,zip,output,stream,stream,new,zip,output,stream,files,new,output,stream,jar,for,string,clazz,classes,stream,put,next,entry,new,zip,entry,clazz,class
InstallPluginCommandTests -> static void writeJar(Path jar, String... classes) throws IOException;1542640625;creates a fake jar file with empty class files;static void writeJar(Path jar, String... classes) throws IOException {_        try (ZipOutputStream stream = new ZipOutputStream(Files.newOutputStream(jar))) {_            for (String clazz : classes) {_                stream.putNextEntry(new ZipEntry(clazz + ".class"))_ _            }_        }_    };creates,a,fake,jar,file,with,empty,class,files;static,void,write,jar,path,jar,string,classes,throws,ioexception,try,zip,output,stream,stream,new,zip,output,stream,files,new,output,stream,jar,for,string,clazz,classes,stream,put,next,entry,new,zip,entry,clazz,class
InstallPluginCommandTests -> static void writeJar(Path jar, String... classes) throws IOException;1544610279;creates a fake jar file with empty class files;static void writeJar(Path jar, String... classes) throws IOException {_        try (ZipOutputStream stream = new ZipOutputStream(Files.newOutputStream(jar))) {_            for (String clazz : classes) {_                stream.putNextEntry(new ZipEntry(clazz + ".class"))_ _            }_        }_    };creates,a,fake,jar,file,with,empty,class,files;static,void,write,jar,path,jar,string,classes,throws,ioexception,try,zip,output,stream,stream,new,zip,output,stream,files,new,output,stream,jar,for,string,clazz,classes,stream,put,next,entry,new,zip,entry,clazz,class
InstallPluginCommandTests -> static void writeJar(Path jar, String... classes) throws IOException;1545481309;creates a fake jar file with empty class files;static void writeJar(Path jar, String... classes) throws IOException {_        try (ZipOutputStream stream = new ZipOutputStream(Files.newOutputStream(jar))) {_            for (String clazz : classes) {_                stream.putNextEntry(new ZipEntry(clazz + ".class"))_ _            }_        }_    };creates,a,fake,jar,file,with,empty,class,files;static,void,write,jar,path,jar,string,classes,throws,ioexception,try,zip,output,stream,stream,new,zip,output,stream,files,new,output,stream,jar,for,string,clazz,classes,stream,put,next,entry,new,zip,entry,clazz,class
InstallPluginCommandTests -> static void writeJar(Path jar, String... classes) throws IOException;1545528053;creates a fake jar file with empty class files;static void writeJar(Path jar, String... classes) throws IOException {_        try (ZipOutputStream stream = new ZipOutputStream(Files.newOutputStream(jar))) {_            for (String clazz : classes) {_                stream.putNextEntry(new ZipEntry(clazz + ".class"))_ _            }_        }_    };creates,a,fake,jar,file,with,empty,class,files;static,void,write,jar,path,jar,string,classes,throws,ioexception,try,zip,output,stream,stream,new,zip,output,stream,files,new,output,stream,jar,for,string,clazz,classes,stream,put,next,entry,new,zip,entry,clazz,class
InstallPluginCommandTests -> static void writeJar(Path jar, String... classes) throws IOException;1545599625;creates a fake jar file with empty class files;static void writeJar(Path jar, String... classes) throws IOException {_        try (ZipOutputStream stream = new ZipOutputStream(Files.newOutputStream(jar))) {_            for (String clazz : classes) {_                stream.putNextEntry(new ZipEntry(clazz + ".class"))_ _            }_        }_    };creates,a,fake,jar,file,with,empty,class,files;static,void,write,jar,path,jar,string,classes,throws,ioexception,try,zip,output,stream,stream,new,zip,output,stream,files,new,output,stream,jar,for,string,clazz,classes,stream,put,next,entry,new,zip,entry,clazz,class
InstallPluginCommandTests -> static String createPluginUrl(String name, Path structure, String... additionalProps) throws IOException;1524684173;creates a plugin .zip and returns the url for testing;static String createPluginUrl(String name, Path structure, String... additionalProps) throws IOException {_        return createPlugin(name, structure, additionalProps).toUri().toURL().toString()__    };creates,a,plugin,zip,and,returns,the,url,for,testing;static,string,create,plugin,url,string,name,path,structure,string,additional,props,throws,ioexception,return,create,plugin,name,structure,additional,props,to,uri,to,url,to,string
InstallPluginCommandTests -> static String createPluginUrl(String name, Path structure, String... additionalProps) throws IOException;1526900724;creates a plugin .zip and returns the url for testing;static String createPluginUrl(String name, Path structure, String... additionalProps) throws IOException {_        return createPlugin(name, structure, additionalProps).toUri().toURL().toString()__    };creates,a,plugin,zip,and,returns,the,url,for,testing;static,string,create,plugin,url,string,name,path,structure,string,additional,props,throws,ioexception,return,create,plugin,name,structure,additional,props,to,uri,to,url,to,string
InstallPluginCommandTests -> static String createPluginUrl(String name, Path structure, String... additionalProps) throws IOException;1526981569;creates a plugin .zip and returns the url for testing;static String createPluginUrl(String name, Path structure, String... additionalProps) throws IOException {_        return createPlugin(name, structure, additionalProps).toUri().toURL().toString()__    };creates,a,plugin,zip,and,returns,the,url,for,testing;static,string,create,plugin,url,string,name,path,structure,string,additional,props,throws,ioexception,return,create,plugin,name,structure,additional,props,to,uri,to,url,to,string
InstallPluginCommandTests -> static String createPluginUrl(String name, Path structure, String... additionalProps) throws IOException;1527583663;creates a plugin .zip and returns the url for testing;static String createPluginUrl(String name, Path structure, String... additionalProps) throws IOException {_        return createPlugin(name, structure, additionalProps).toUri().toURL().toString()__    };creates,a,plugin,zip,and,returns,the,url,for,testing;static,string,create,plugin,url,string,name,path,structure,string,additional,props,throws,ioexception,return,create,plugin,name,structure,additional,props,to,uri,to,url,to,string
InstallPluginCommandTests -> static String createPluginUrl(String name, Path structure, String... additionalProps) throws IOException;1528893677;creates a plugin .zip and returns the url for testing;static String createPluginUrl(String name, Path structure, String... additionalProps) throws IOException {_        return createPlugin(name, structure, additionalProps).toUri().toURL().toString()__    };creates,a,plugin,zip,and,returns,the,url,for,testing;static,string,create,plugin,url,string,name,path,structure,string,additional,props,throws,ioexception,return,create,plugin,name,structure,additional,props,to,uri,to,url,to,string
InstallPluginCommandTests -> static String createPluginUrl(String name, Path structure, String... additionalProps) throws IOException;1531910483;creates a plugin .zip and returns the url for testing;static String createPluginUrl(String name, Path structure, String... additionalProps) throws IOException {_        return createPlugin(name, structure, additionalProps).toUri().toURL().toString()__    };creates,a,plugin,zip,and,returns,the,url,for,testing;static,string,create,plugin,url,string,name,path,structure,string,additional,props,throws,ioexception,return,create,plugin,name,structure,additional,props,to,uri,to,url,to,string
InstallPluginCommandTests -> static String createPluginUrl(String name, Path structure, String... additionalProps) throws IOException;1541592065;creates a plugin .zip and returns the url for testing;static String createPluginUrl(String name, Path structure, String... additionalProps) throws IOException {_        return createPlugin(name, structure, additionalProps).toUri().toURL().toString()__    };creates,a,plugin,zip,and,returns,the,url,for,testing;static,string,create,plugin,url,string,name,path,structure,string,additional,props,throws,ioexception,return,create,plugin,name,structure,additional,props,to,uri,to,url,to,string
InstallPluginCommandTests -> static String createPluginUrl(String name, Path structure, String... additionalProps) throws IOException;1542640625;creates a plugin .zip and returns the url for testing;static String createPluginUrl(String name, Path structure, String... additionalProps) throws IOException {_        return createPlugin(name, structure, additionalProps).toUri().toURL().toString()__    };creates,a,plugin,zip,and,returns,the,url,for,testing;static,string,create,plugin,url,string,name,path,structure,string,additional,props,throws,ioexception,return,create,plugin,name,structure,additional,props,to,uri,to,url,to,string
InstallPluginCommandTests -> static String createPluginUrl(String name, Path structure, String... additionalProps) throws IOException;1544610279;creates a plugin .zip and returns the url for testing;static String createPluginUrl(String name, Path structure, String... additionalProps) throws IOException {_        return createPlugin(name, structure, additionalProps).toUri().toURL().toString()__    };creates,a,plugin,zip,and,returns,the,url,for,testing;static,string,create,plugin,url,string,name,path,structure,string,additional,props,throws,ioexception,return,create,plugin,name,structure,additional,props,to,uri,to,url,to,string
InstallPluginCommandTests -> static String createPluginUrl(String name, Path structure, String... additionalProps) throws IOException;1545481309;creates a plugin .zip and returns the url for testing;static String createPluginUrl(String name, Path structure, String... additionalProps) throws IOException {_        return createPlugin(name, structure, additionalProps).toUri().toURL().toString()__    };creates,a,plugin,zip,and,returns,the,url,for,testing;static,string,create,plugin,url,string,name,path,structure,string,additional,props,throws,ioexception,return,create,plugin,name,structure,additional,props,to,uri,to,url,to,string
InstallPluginCommandTests -> static String createPluginUrl(String name, Path structure, String... additionalProps) throws IOException;1545528053;creates a plugin .zip and returns the url for testing;static String createPluginUrl(String name, Path structure, String... additionalProps) throws IOException {_        return createPlugin(name, structure, additionalProps).toUri().toURL().toString()__    };creates,a,plugin,zip,and,returns,the,url,for,testing;static,string,create,plugin,url,string,name,path,structure,string,additional,props,throws,ioexception,return,create,plugin,name,structure,additional,props,to,uri,to,url,to,string
InstallPluginCommandTests -> static String createPluginUrl(String name, Path structure, String... additionalProps) throws IOException;1545599625;creates a plugin .zip and returns the url for testing;static String createPluginUrl(String name, Path structure, String... additionalProps) throws IOException {_        return createPlugin(name, structure, additionalProps).toUri().toURL().toString()__    };creates,a,plugin,zip,and,returns,the,url,for,testing;static,string,create,plugin,url,string,name,path,structure,string,additional,props,throws,ioexception,return,create,plugin,name,structure,additional,props,to,uri,to,url,to,string
