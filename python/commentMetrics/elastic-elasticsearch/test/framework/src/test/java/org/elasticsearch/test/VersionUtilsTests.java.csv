# id;timestamp;commentText;codeText;commentWords;codeWords
VersionUtilsTests -> public void testGradleVersionsMatchVersionUtils();1524684173;Tests that {@link Version#minimumCompatibilityVersion()} and {@link VersionUtils#allReleasedVersions()}_agree with the list of wire and index compatible versions we build in gradle.;public void testGradleVersionsMatchVersionUtils() {_        _        VersionsFromProperty indexCompatible = new VersionsFromProperty("tests.gradle_index_compat_versions")__        List<Version> released = VersionUtils.allReleasedVersions().stream()_                _                .filter(v -> v.onOrAfter(Version.CURRENT.minimumIndexCompatibilityVersion()))_                _                .filter(Version::isRelease)_                .collect(toList())___        List<String> releasedIndexCompatible = released.stream()_                .filter(v -> !Version.CURRENT.equals(v))_                .map(Object::toString)_                .collect(toList())__        assertEquals(releasedIndexCompatible, indexCompatible.released)___        List<String> unreleasedIndexCompatible = new ArrayList<>(VersionUtils.allUnreleasedVersions().stream()_                _                .filter(v -> !Version.CURRENT.equals(v))_                _                .filter(v -> v.onOrAfter(Version.CURRENT.minimumIndexCompatibilityVersion()))_                _                .filter(v -> false == v.isAlpha())_                .map(Object::toString)_                .collect(toCollection(LinkedHashSet::new)))__        assertEquals(unreleasedIndexCompatible, indexCompatible.unreleased)___        _        VersionsFromProperty wireCompatible = new VersionsFromProperty("tests.gradle_wire_compat_versions")___        Version minimumCompatibleVersion = Version.CURRENT.minimumCompatibilityVersion()__        List<String> releasedWireCompatible = released.stream()_                .filter(v -> !Version.CURRENT.equals(v))_                .filter(v -> v.onOrAfter(minimumCompatibleVersion))_                .map(Object::toString)_                .collect(toList())__        assertEquals(releasedWireCompatible, wireCompatible.released)___        List<String> unreleasedWireCompatible = VersionUtils.allUnreleasedVersions().stream()_                _                .filter(v -> !Version.CURRENT.equals(v))_                .filter(v -> v.onOrAfter(minimumCompatibleVersion))_                .map(Object::toString)_                .collect(toList())__        assertEquals(unreleasedWireCompatible, wireCompatible.unreleased)__    };tests,that,link,version,minimum,compatibility,version,and,link,version,utils,all,released,versions,agree,with,the,list,of,wire,and,index,compatible,versions,we,build,in,gradle;public,void,test,gradle,versions,match,version,utils,versions,from,property,index,compatible,new,versions,from,property,tests,list,version,released,version,utils,all,released,versions,stream,filter,v,v,on,or,after,version,current,minimum,index,compatibility,version,filter,version,is,release,collect,to,list,list,string,released,index,compatible,released,stream,filter,v,version,current,equals,v,map,object,to,string,collect,to,list,assert,equals,released,index,compatible,index,compatible,released,list,string,unreleased,index,compatible,new,array,list,version,utils,all,unreleased,versions,stream,filter,v,version,current,equals,v,filter,v,v,on,or,after,version,current,minimum,index,compatibility,version,filter,v,false,v,is,alpha,map,object,to,string,collect,to,collection,linked,hash,set,new,assert,equals,unreleased,index,compatible,index,compatible,unreleased,versions,from,property,wire,compatible,new,versions,from,property,tests,version,minimum,compatible,version,version,current,minimum,compatibility,version,list,string,released,wire,compatible,released,stream,filter,v,version,current,equals,v,filter,v,v,on,or,after,minimum,compatible,version,map,object,to,string,collect,to,list,assert,equals,released,wire,compatible,wire,compatible,released,list,string,unreleased,wire,compatible,version,utils,all,unreleased,versions,stream,filter,v,version,current,equals,v,filter,v,v,on,or,after,minimum,compatible,version,map,object,to,string,collect,to,list,assert,equals,unreleased,wire,compatible,wire,compatible,unreleased
VersionUtilsTests -> public void testGradleVersionsMatchVersionUtils();1525334055;Tests that {@link Version#minimumCompatibilityVersion()} and {@link VersionUtils#allReleasedVersions()}_agree with the list of wire and index compatible versions we build in gradle.;public void testGradleVersionsMatchVersionUtils() {_        _        VersionsFromProperty indexCompatible = new VersionsFromProperty("tests.gradle_index_compat_versions")__        List<Version> released = VersionUtils.allReleasedVersions().stream()_                _                .filter(v -> v.onOrAfter(Version.CURRENT.minimumIndexCompatibilityVersion()))_                _                .filter(Version::isRelease)_                .collect(toList())___        List<String> releasedIndexCompatible = released.stream()_                .filter(v -> !Version.CURRENT.equals(v))_                .map(Object::toString)_                .collect(toList())__        assertEquals(releasedIndexCompatible, indexCompatible.released)___        List<String> unreleasedIndexCompatible = new ArrayList<>(VersionUtils.allUnreleasedVersions().stream()_                _                .filter(v -> !Version.CURRENT.equals(v))_                _                .filter(v -> v.onOrAfter(Version.CURRENT.minimumIndexCompatibilityVersion()))_                _                .filter(v -> false == v.isAlpha())_                .map(Object::toString)_                .collect(toCollection(LinkedHashSet::new)))__        assertEquals(unreleasedIndexCompatible, indexCompatible.unreleased)___        _        VersionsFromProperty wireCompatible = new VersionsFromProperty("tests.gradle_wire_compat_versions")___        Version minimumCompatibleVersion = Version.CURRENT.minimumCompatibilityVersion()__        List<String> releasedWireCompatible = released.stream()_                .filter(v -> !Version.CURRENT.equals(v))_                .filter(v -> v.onOrAfter(minimumCompatibleVersion))_                .map(Object::toString)_                .collect(toList())__        assertEquals(releasedWireCompatible, wireCompatible.released)___        List<String> unreleasedWireCompatible = VersionUtils.allUnreleasedVersions().stream()_                _                .filter(v -> !Version.CURRENT.equals(v))_                .filter(v -> v.onOrAfter(minimumCompatibleVersion))_                .map(Object::toString)_                .collect(toList())__        assertEquals(unreleasedWireCompatible, wireCompatible.unreleased)__    };tests,that,link,version,minimum,compatibility,version,and,link,version,utils,all,released,versions,agree,with,the,list,of,wire,and,index,compatible,versions,we,build,in,gradle;public,void,test,gradle,versions,match,version,utils,versions,from,property,index,compatible,new,versions,from,property,tests,list,version,released,version,utils,all,released,versions,stream,filter,v,v,on,or,after,version,current,minimum,index,compatibility,version,filter,version,is,release,collect,to,list,list,string,released,index,compatible,released,stream,filter,v,version,current,equals,v,map,object,to,string,collect,to,list,assert,equals,released,index,compatible,index,compatible,released,list,string,unreleased,index,compatible,new,array,list,version,utils,all,unreleased,versions,stream,filter,v,version,current,equals,v,filter,v,v,on,or,after,version,current,minimum,index,compatibility,version,filter,v,false,v,is,alpha,map,object,to,string,collect,to,collection,linked,hash,set,new,assert,equals,unreleased,index,compatible,index,compatible,unreleased,versions,from,property,wire,compatible,new,versions,from,property,tests,version,minimum,compatible,version,version,current,minimum,compatibility,version,list,string,released,wire,compatible,released,stream,filter,v,version,current,equals,v,filter,v,v,on,or,after,minimum,compatible,version,map,object,to,string,collect,to,list,assert,equals,released,wire,compatible,wire,compatible,released,list,string,unreleased,wire,compatible,version,utils,all,unreleased,versions,stream,filter,v,version,current,equals,v,filter,v,v,on,or,after,minimum,compatible,version,map,object,to,string,collect,to,list,assert,equals,unreleased,wire,compatible,wire,compatible,unreleased
VersionUtilsTests -> public void testGradleVersionsMatchVersionUtils();1528762805;Tests that {@link Version#minimumCompatibilityVersion()} and {@link VersionUtils#allReleasedVersions()}_agree with the list of wire and index compatible versions we build in gradle.;public void testGradleVersionsMatchVersionUtils() {_        _        VersionsFromProperty indexCompatible = new VersionsFromProperty("tests.gradle_index_compat_versions")__        List<Version> released = VersionUtils.allReleasedVersions().stream()_                _                .filter(v -> v.onOrAfter(Version.CURRENT.minimumIndexCompatibilityVersion()))_                _                .filter(Version::isRelease)_                .collect(toList())___        List<String> releasedIndexCompatible = released.stream()_                .filter(v -> !Version.CURRENT.equals(v))_                .map(Object::toString)_                .collect(toList())__        assertEquals(releasedIndexCompatible, indexCompatible.released)___        List<String> unreleasedIndexCompatible = new ArrayList<>(VersionUtils.allUnreleasedVersions().stream()_                _                .filter(v -> !Version.CURRENT.equals(v))_                _                .filter(v -> v.onOrAfter(Version.CURRENT.minimumIndexCompatibilityVersion()))_                _                .filter(v -> false == v.isAlpha())_                .map(Object::toString)_                .collect(toCollection(LinkedHashSet::new)))__        assertEquals(unreleasedIndexCompatible, indexCompatible.unreleased)___        _        VersionsFromProperty wireCompatible = new VersionsFromProperty("tests.gradle_wire_compat_versions")___        Version minimumCompatibleVersion = Version.CURRENT.minimumCompatibilityVersion()__        List<String> releasedWireCompatible = released.stream()_                .filter(v -> !Version.CURRENT.equals(v))_                .filter(v -> v.onOrAfter(minimumCompatibleVersion))_                .map(Object::toString)_                .collect(toList())__        assertEquals(releasedWireCompatible, wireCompatible.released)___        List<String> unreleasedWireCompatible = VersionUtils.allUnreleasedVersions().stream()_                _                .filter(v -> !Version.CURRENT.equals(v))_                .filter(v -> v.onOrAfter(minimumCompatibleVersion))_                .map(Object::toString)_                .collect(toList())__        assertEquals(unreleasedWireCompatible, wireCompatible.unreleased)__    };tests,that,link,version,minimum,compatibility,version,and,link,version,utils,all,released,versions,agree,with,the,list,of,wire,and,index,compatible,versions,we,build,in,gradle;public,void,test,gradle,versions,match,version,utils,versions,from,property,index,compatible,new,versions,from,property,tests,list,version,released,version,utils,all,released,versions,stream,filter,v,v,on,or,after,version,current,minimum,index,compatibility,version,filter,version,is,release,collect,to,list,list,string,released,index,compatible,released,stream,filter,v,version,current,equals,v,map,object,to,string,collect,to,list,assert,equals,released,index,compatible,index,compatible,released,list,string,unreleased,index,compatible,new,array,list,version,utils,all,unreleased,versions,stream,filter,v,version,current,equals,v,filter,v,v,on,or,after,version,current,minimum,index,compatibility,version,filter,v,false,v,is,alpha,map,object,to,string,collect,to,collection,linked,hash,set,new,assert,equals,unreleased,index,compatible,index,compatible,unreleased,versions,from,property,wire,compatible,new,versions,from,property,tests,version,minimum,compatible,version,version,current,minimum,compatibility,version,list,string,released,wire,compatible,released,stream,filter,v,version,current,equals,v,filter,v,v,on,or,after,minimum,compatible,version,map,object,to,string,collect,to,list,assert,equals,released,wire,compatible,wire,compatible,released,list,string,unreleased,wire,compatible,version,utils,all,unreleased,versions,stream,filter,v,version,current,equals,v,filter,v,v,on,or,after,minimum,compatible,version,map,object,to,string,collect,to,list,assert,equals,unreleased,wire,compatible,wire,compatible,unreleased
VersionUtilsTests -> public void testGradleVersionsMatchVersionUtils();1541156195;Tests that {@link Version#minimumCompatibilityVersion()} and {@link VersionUtils#allReleasedVersions()}_agree with the list of wire and index compatible versions we build in gradle.;public void testGradleVersionsMatchVersionUtils() {_        _        VersionsFromProperty indexCompatible = new VersionsFromProperty("tests.gradle_index_compat_versions")__        List<Version> released = VersionUtils.allReleasedVersions().stream()_                _                .filter(v -> v.onOrAfter(Version.CURRENT.minimumIndexCompatibilityVersion()))_                _                .filter(Version::isRelease)_                .collect(toList())___        List<String> releasedIndexCompatible = released.stream()_                .filter(v -> !Version.CURRENT.equals(v))_                .map(Object::toString)_                .collect(toList())__        assertEquals(releasedIndexCompatible, indexCompatible.released)___        List<String> unreleasedIndexCompatible = new ArrayList<>(VersionUtils.allUnreleasedVersions().stream()_                _                .filter(v -> !Version.CURRENT.equals(v))_                _                .filter(v -> v.onOrAfter(Version.CURRENT.minimumIndexCompatibilityVersion()))_                _                .filter(v -> false == v.isAlpha())_                .map(Object::toString)_                .collect(toCollection(LinkedHashSet::new)))__        assertEquals(unreleasedIndexCompatible, indexCompatible.unreleased)___        _        VersionsFromProperty wireCompatible = new VersionsFromProperty("tests.gradle_wire_compat_versions")___        Version minimumCompatibleVersion = Version.CURRENT.minimumCompatibilityVersion()__        List<String> releasedWireCompatible = released.stream()_                .filter(v -> !Version.CURRENT.equals(v))_                .filter(v -> v.onOrAfter(minimumCompatibleVersion))_                .map(Object::toString)_                .collect(toList())__        assertEquals(releasedWireCompatible, wireCompatible.released)___        List<String> unreleasedWireCompatible = VersionUtils.allUnreleasedVersions().stream()_                _                .filter(v -> !Version.CURRENT.equals(v))_                .filter(v -> v.onOrAfter(minimumCompatibleVersion))_                .map(Object::toString)_                .collect(toList())__        assertEquals(unreleasedWireCompatible, wireCompatible.unreleased)__    };tests,that,link,version,minimum,compatibility,version,and,link,version,utils,all,released,versions,agree,with,the,list,of,wire,and,index,compatible,versions,we,build,in,gradle;public,void,test,gradle,versions,match,version,utils,versions,from,property,index,compatible,new,versions,from,property,tests,list,version,released,version,utils,all,released,versions,stream,filter,v,v,on,or,after,version,current,minimum,index,compatibility,version,filter,version,is,release,collect,to,list,list,string,released,index,compatible,released,stream,filter,v,version,current,equals,v,map,object,to,string,collect,to,list,assert,equals,released,index,compatible,index,compatible,released,list,string,unreleased,index,compatible,new,array,list,version,utils,all,unreleased,versions,stream,filter,v,version,current,equals,v,filter,v,v,on,or,after,version,current,minimum,index,compatibility,version,filter,v,false,v,is,alpha,map,object,to,string,collect,to,collection,linked,hash,set,new,assert,equals,unreleased,index,compatible,index,compatible,unreleased,versions,from,property,wire,compatible,new,versions,from,property,tests,version,minimum,compatible,version,version,current,minimum,compatibility,version,list,string,released,wire,compatible,released,stream,filter,v,version,current,equals,v,filter,v,v,on,or,after,minimum,compatible,version,map,object,to,string,collect,to,list,assert,equals,released,wire,compatible,wire,compatible,released,list,string,unreleased,wire,compatible,version,utils,all,unreleased,versions,stream,filter,v,version,current,equals,v,filter,v,v,on,or,after,minimum,compatible,version,map,object,to,string,collect,to,list,assert,equals,unreleased,wire,compatible,wire,compatible,unreleased
