# id;timestamp;commentText;codeText;commentWords;codeWords
MockNodeTests -> public void testComponentsMockedByMarkerPlugins() throws IOException;1524684173;Test that we add the appropriate mock services when their plugins are added. This is a very heavy test for a testing component but_we've broken it in the past so it is important.;public void testComponentsMockedByMarkerPlugins() throws IOException {_        Settings settings = Settings.builder() _                .put(Environment.PATH_HOME_SETTING.getKey(), createTempDir())_                .put("transport.type", getTestTransportType())_                .put("http.enabled", false)_                .build()__        List<Class<? extends Plugin>> plugins = new ArrayList<>()__        plugins.add(getTestTransportPlugin())__        boolean useMockBigArrays = randomBoolean()__        boolean useMockSearchService = randomBoolean()__        if (useMockBigArrays) {_            plugins.add(NodeMocksPlugin.class)__        }_        if (useMockSearchService) {_            plugins.add(MockSearchService.TestPlugin.class)__        }_        try (MockNode node = new MockNode(settings, plugins)) {_            BigArrays bigArrays = node.injector().getInstance(BigArrays.class)__            SearchService searchService = node.injector().getInstance(SearchService.class)__            if (useMockBigArrays) {_                assertSame(bigArrays.getClass(), MockBigArrays.class)__            } else {_                assertSame(bigArrays.getClass(), BigArrays.class)__            }_            if (useMockSearchService) {_                assertSame(searchService.getClass(), MockSearchService.class)__            } else {_                assertSame(searchService.getClass(), SearchService.class)__            }_        }_        assertSettingDeprecationsAndWarnings(new Setting<?>[] { NetworkModule.HTTP_ENABLED })__    };test,that,we,add,the,appropriate,mock,services,when,their,plugins,are,added,this,is,a,very,heavy,test,for,a,testing,component,but,we,ve,broken,it,in,the,past,so,it,is,important;public,void,test,components,mocked,by,marker,plugins,throws,ioexception,settings,settings,settings,builder,put,environment,get,key,create,temp,dir,put,transport,type,get,test,transport,type,put,http,enabled,false,build,list,class,extends,plugin,plugins,new,array,list,plugins,add,get,test,transport,plugin,boolean,use,mock,big,arrays,random,boolean,boolean,use,mock,search,service,random,boolean,if,use,mock,big,arrays,plugins,add,node,mocks,plugin,class,if,use,mock,search,service,plugins,add,mock,search,service,test,plugin,class,try,mock,node,node,new,mock,node,settings,plugins,big,arrays,big,arrays,node,injector,get,instance,big,arrays,class,search,service,search,service,node,injector,get,instance,search,service,class,if,use,mock,big,arrays,assert,same,big,arrays,get,class,mock,big,arrays,class,else,assert,same,big,arrays,get,class,big,arrays,class,if,use,mock,search,service,assert,same,search,service,get,class,mock,search,service,class,else,assert,same,search,service,get,class,search,service,class,assert,setting,deprecations,and,warnings,new,setting,network,module
MockNodeTests -> public void testComponentsMockedByMarkerPlugins() throws IOException;1525334055;Test that we add the appropriate mock services when their plugins are added. This is a very heavy test for a testing component but_we've broken it in the past so it is important.;public void testComponentsMockedByMarkerPlugins() throws IOException {_        Settings settings = Settings.builder() _                .put(Environment.PATH_HOME_SETTING.getKey(), createTempDir())_                .put("transport.type", getTestTransportType())_                .build()__        List<Class<? extends Plugin>> plugins = new ArrayList<>()__        plugins.add(getTestTransportPlugin())__        plugins.add(MockHttpTransport.TestPlugin.class)__        boolean useMockBigArrays = randomBoolean()__        boolean useMockSearchService = randomBoolean()__        if (useMockBigArrays) {_            plugins.add(NodeMocksPlugin.class)__        }_        if (useMockSearchService) {_            plugins.add(MockSearchService.TestPlugin.class)__        }_        try (MockNode node = new MockNode(settings, plugins)) {_            BigArrays bigArrays = node.injector().getInstance(BigArrays.class)__            SearchService searchService = node.injector().getInstance(SearchService.class)__            if (useMockBigArrays) {_                assertSame(bigArrays.getClass(), MockBigArrays.class)__            } else {_                assertSame(bigArrays.getClass(), BigArrays.class)__            }_            if (useMockSearchService) {_                assertSame(searchService.getClass(), MockSearchService.class)__            } else {_                assertSame(searchService.getClass(), SearchService.class)__            }_        }_    };test,that,we,add,the,appropriate,mock,services,when,their,plugins,are,added,this,is,a,very,heavy,test,for,a,testing,component,but,we,ve,broken,it,in,the,past,so,it,is,important;public,void,test,components,mocked,by,marker,plugins,throws,ioexception,settings,settings,settings,builder,put,environment,get,key,create,temp,dir,put,transport,type,get,test,transport,type,build,list,class,extends,plugin,plugins,new,array,list,plugins,add,get,test,transport,plugin,plugins,add,mock,http,transport,test,plugin,class,boolean,use,mock,big,arrays,random,boolean,boolean,use,mock,search,service,random,boolean,if,use,mock,big,arrays,plugins,add,node,mocks,plugin,class,if,use,mock,search,service,plugins,add,mock,search,service,test,plugin,class,try,mock,node,node,new,mock,node,settings,plugins,big,arrays,big,arrays,node,injector,get,instance,big,arrays,class,search,service,search,service,node,injector,get,instance,search,service,class,if,use,mock,big,arrays,assert,same,big,arrays,get,class,mock,big,arrays,class,else,assert,same,big,arrays,get,class,big,arrays,class,if,use,mock,search,service,assert,same,search,service,get,class,mock,search,service,class,else,assert,same,search,service,get,class,search,service,class
MockNodeTests -> public void testComponentsMockedByMarkerPlugins() throws IOException;1528762805;Test that we add the appropriate mock services when their plugins are added. This is a very heavy test for a testing component but_we've broken it in the past so it is important.;public void testComponentsMockedByMarkerPlugins() throws IOException {_        Settings settings = Settings.builder() _                .put(Environment.PATH_HOME_SETTING.getKey(), createTempDir())_                .put("transport.type", getTestTransportType())_                .build()__        List<Class<? extends Plugin>> plugins = new ArrayList<>()__        plugins.add(getTestTransportPlugin())__        plugins.add(MockHttpTransport.TestPlugin.class)__        boolean useMockBigArrays = randomBoolean()__        boolean useMockSearchService = randomBoolean()__        if (useMockBigArrays) {_            plugins.add(NodeMocksPlugin.class)__        }_        if (useMockSearchService) {_            plugins.add(MockSearchService.TestPlugin.class)__        }_        try (MockNode node = new MockNode(settings, plugins)) {_            BigArrays bigArrays = node.injector().getInstance(BigArrays.class)__            SearchService searchService = node.injector().getInstance(SearchService.class)__            if (useMockBigArrays) {_                assertSame(bigArrays.getClass(), MockBigArrays.class)__            } else {_                assertSame(bigArrays.getClass(), BigArrays.class)__            }_            if (useMockSearchService) {_                assertSame(searchService.getClass(), MockSearchService.class)__            } else {_                assertSame(searchService.getClass(), SearchService.class)__            }_        }_    };test,that,we,add,the,appropriate,mock,services,when,their,plugins,are,added,this,is,a,very,heavy,test,for,a,testing,component,but,we,ve,broken,it,in,the,past,so,it,is,important;public,void,test,components,mocked,by,marker,plugins,throws,ioexception,settings,settings,settings,builder,put,environment,get,key,create,temp,dir,put,transport,type,get,test,transport,type,build,list,class,extends,plugin,plugins,new,array,list,plugins,add,get,test,transport,plugin,plugins,add,mock,http,transport,test,plugin,class,boolean,use,mock,big,arrays,random,boolean,boolean,use,mock,search,service,random,boolean,if,use,mock,big,arrays,plugins,add,node,mocks,plugin,class,if,use,mock,search,service,plugins,add,mock,search,service,test,plugin,class,try,mock,node,node,new,mock,node,settings,plugins,big,arrays,big,arrays,node,injector,get,instance,big,arrays,class,search,service,search,service,node,injector,get,instance,search,service,class,if,use,mock,big,arrays,assert,same,big,arrays,get,class,mock,big,arrays,class,else,assert,same,big,arrays,get,class,big,arrays,class,if,use,mock,search,service,assert,same,search,service,get,class,mock,search,service,class,else,assert,same,search,service,get,class,search,service,class
