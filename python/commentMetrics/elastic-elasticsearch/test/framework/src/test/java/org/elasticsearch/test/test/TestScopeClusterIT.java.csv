commented;modifiers;parameterAmount;loc;comment;code
false;public;0;13;;public void testReproducible() throws IOException {     if (ITER++ == 0) {         CLUSTER_SEED = cluster().seed().         for (int i = 0. i < SEQUENCE.length. i++) {             SEQUENCE[i] = randomLong().         }     } else {         assertEquals(CLUSTER_SEED, Long.valueOf(cluster().seed())).         for (int i = 0. i < SEQUENCE.length. i++) {             assertThat(SEQUENCE[i], equalTo(randomLong())).         }     } }
false;protected;2;9;;@Override protected TestCluster buildTestCluster(Scope scope, long seed) throws IOException {     // produce some randomness     int iters = between(1, 100).     for (int i = 0. i < iters. i++) {         randomLong().     }     return super.buildTestCluster(scope, seed). }
