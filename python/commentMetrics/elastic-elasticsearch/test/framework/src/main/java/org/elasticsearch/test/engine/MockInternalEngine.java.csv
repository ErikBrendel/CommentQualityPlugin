commented;modifiers;parameterAmount;loc;comment;code
false;private,synchronized;0;7;;private synchronized MockEngineSupport support() {     // lazy initialized since we need it already on super() ctor execution :(     if (support == null) {         support = new MockEngineSupport(config(), wrapperClass).     }     return support. }
false;public;0;11;;@Override public void close() throws IOException {     switch(support().flushOrClose(MockEngineSupport.CloseAction.CLOSE)) {         case FLUSH_AND_CLOSE:             flushAndCloseInternal().             break.         case CLOSE:             super.close().             break.     } }
false;public;0;11;;@Override public void flushAndClose() throws IOException {     switch(support().flushOrClose(MockEngineSupport.CloseAction.FLUSH_AND_CLOSE)) {         case FLUSH_AND_CLOSE:             flushAndCloseInternal().             break.         case CLOSE:             super.close().             break.     } }
false;private;0;7;;private void flushAndCloseInternal() throws IOException {     if (support().isFlushOnCloseDisabled() == false) {         super.flushAndClose().     } else {         super.close().     } }
false;public;2;5;;@Override public Searcher acquireSearcher(String source, SearcherScope scope) {     final Searcher engineSearcher = super.acquireSearcher(source, scope).     return support().wrapSearcher(engineSearcher). }
