commented;modifiers;parameterAmount;loc;comment;code
true;public;3;3;/**  * Configures the module, and ensures an instance is bound to the "to" class, and the  * provided tester returns true on the instance.  */ ;/**  * Configures the module, and ensures an instance is bound to the "to" class, and the  * provided tester returns true on the instance.  */ public <T> void assertInstanceBinding(Module module, Class<T> to, Predicate<T> tester) {     assertInstanceBindingWithAnnotation(module, to, tester, null). }
true;private;4;26;/**  * Like {@link #assertInstanceBinding(Module, Class, Predicate)}, but filters the  * classes checked by the given annotation.  */ ;/**  * Like {@link #assertInstanceBinding(Module, Class, Predicate)}, but filters the  * classes checked by the given annotation.  */ private <T> void assertInstanceBindingWithAnnotation(Module module, Class<T> to, Predicate<T> tester, Class<? extends Annotation> annotation) {     List<Element> elements = Elements.getElements(module).     for (Element element : elements) {         if (element instanceof InstanceBinding) {             InstanceBinding<?> binding = (InstanceBinding<?>) element.             if (to.equals(binding.getKey().getTypeLiteral().getType())) {                 if (annotation == null || annotation.equals(binding.getKey().getAnnotationType())) {                     assertTrue(tester.test(to.cast(binding.getInstance()))).                     return.                 }             }         } else if (element instanceof ProviderInstanceBinding) {             ProviderInstanceBinding<?> binding = (ProviderInstanceBinding<?>) element.             if (to.equals(binding.getKey().getTypeLiteral().getType())) {                 assertTrue(tester.test(to.cast(binding.getProviderInstance().get()))).                 return.             }         }     }     StringBuilder s = new StringBuilder().     for (Element element : elements) {         s.append(element).append("\n").     }     fail("Did not find any instance binding to " + to.getName() + ". Found these bindings:\n" + s). }
