commented;modifiers;parameterAmount;loc;comment;code
false;public;1;4;;@Override public void testStarted(Description description) throws Exception {     logger.trace("Test {} started", description.getDisplayName()). }
false;public;1;4;;@Override public void testFinished(Description description) throws Exception {     logger.trace("Test {} finished", description.getDisplayName()). }
true;static;0;3;/**  * Are we in the integ test phase?  */ ;/**  * Are we in the integ test phase?  */ static boolean inVerifyPhase() {     return Boolean.parseBoolean(System.getProperty("tests.verify.phase")). }
false;public;1;23;;@Override public void testFailure(Failure failure) throws Exception {     // Ignore assumptions.     if (failure.getException() instanceof AssumptionViolatedException) {         return.     }     final String gradlew = Constants.WINDOWS ? "gradlew" : "./gradlew".     final StringBuilder b = new StringBuilder("REPRODUCE WITH: " + gradlew + " ").     String task = System.getProperty("tests.task").     // TODO: enforce (intellij still runs the runner?) or use default "test" but that won't work for integ     b.append(task).     GradleMessageBuilder gradleMessageBuilder = new GradleMessageBuilder(b).     gradleMessageBuilder.appendAllOpts(failure.getDescription()).     // Client yaml suite tests are a special case as they allow for additional parameters     if (ESClientYamlSuiteTestCase.class.isAssignableFrom(failure.getDescription().getTestClass())) {         gradleMessageBuilder.appendClientYamlSuiteProperties().     }     printToErr(b.toString()). }
false;private,static;1;4;;@SuppressForbidden(reason = "printing repro info") private static void printToErr(String s) {     System.err.println(s). }
false;public;1;11;;@Override public ReproduceErrorMessageBuilder appendAllOpts(Description description) {     super.appendAllOpts(description).     if (description.getMethodName() != null) {         // prints out the raw method description instead of methodName(description) which filters out the parameters         super.appendOpt(SYSPROP_TESTMETHOD(), "\"" + description.getMethodName() + "\"").     }     return appendESProperties(). }
false;public;0;5;;@Override public ReproduceErrorMessageBuilder appendEnvironmentSettings() {     // we handle our own environment settings     return this. }
true;public;2;19;/**  * Append a single VM option.  */ ;/**  * Append a single VM option.  */ @Override public ReproduceErrorMessageBuilder appendOpt(String sysPropName, String value) {     if (sysPropName.equals(SYSPROP_ITERATIONS())) {         // we don't want the iters to be in there!         return this.     }     if (sysPropName.equals(SYSPROP_TESTMETHOD())) {         // without filtering out the parameters (needed for REST tests)         return this.     }     if (sysPropName.equals(SYSPROP_PREFIX())) {         // we always use the default prefix         return this.     }     if (Strings.hasLength(value)) {         return super.appendOpt(sysPropName, value).     }     return this. }
false;public;0;20;;public ReproduceErrorMessageBuilder appendESProperties() {     appendProperties("tests.es.logger.level").     if (inVerifyPhase()) {         // these properties only make sense for integration tests         appendProperties(ESIntegTestCase.TESTS_ENABLE_MOCK_MODULES).     }     appendProperties("tests.assertion.disabled", "tests.security.manager", "tests.nightly", "tests.jvms", "tests.client.ratio", "tests.heap.size", "tests.bwc", "tests.bwc.version", "build.snapshot").     if (System.getProperty("tests.jvm.argline") != null && !System.getProperty("tests.jvm.argline").isEmpty()) {         appendOpt("tests.jvm.argline", "\"" + System.getProperty("tests.jvm.argline") + "\"").     }     appendOpt("tests.locale", Locale.getDefault().toLanguageTag()).     appendOpt("tests.timezone", TimeZone.getDefault().getID()).     appendOpt("tests.distribution", System.getProperty("tests.distribution")).     appendOpt("compiler.java", System.getProperty("compiler.java")).     appendOpt("runtime.java", System.getProperty("runtime.java")).     appendOpt("javax.net.ssl.keyStorePassword", System.getProperty("javax.net.ssl.keyStorePassword")).     appendOpt("javax.net.ssl.trustStorePassword", System.getProperty("javax.net.ssl.trustStorePassword")).     return this. }
false;public;0;3;;public ReproduceErrorMessageBuilder appendClientYamlSuiteProperties() {     return appendProperties(REST_TESTS_SUITE, REST_TESTS_BLACKLIST). }
false;protected;1;8;;protected ReproduceErrorMessageBuilder appendProperties(String... properties) {     for (String sysPropName : properties) {         if (Strings.hasLength(System.getProperty(sysPropName))) {             appendOpt(sysPropName, System.getProperty(sysPropName)).         }     }     return this. }
