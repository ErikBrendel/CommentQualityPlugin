# id;timestamp;commentText;codeText;commentWords;codeWords
ESIndexLevelReplicationTestCase -> ReplicationGroup -> public Future<PrimaryReplicaSyncer.ResyncTask> promoteReplicaToPrimary(IndexShard replica) throws IOException;1533295538;promotes the specific replica as the new primary;public Future<PrimaryReplicaSyncer.ResyncTask> promoteReplicaToPrimary(IndexShard replica) throws IOException {_            PlainActionFuture<PrimaryReplicaSyncer.ResyncTask> fut = new PlainActionFuture<>()__            promoteReplicaToPrimary(replica,_                (shard, listener) -> primaryReplicaSyncer.resync(shard,_                    new ActionListener<PrimaryReplicaSyncer.ResyncTask>() {_                        @Override_                        public void onResponse(PrimaryReplicaSyncer.ResyncTask resyncTask) {_                            listener.onResponse(resyncTask)__                            fut.onResponse(resyncTask)__                        }__                        @Override_                        public void onFailure(Exception e) {_                            listener.onFailure(e)__                            fut.onFailure(e)__                        }_                    }))__            return fut__        };promotes,the,specific,replica,as,the,new,primary;public,future,primary,replica,syncer,resync,task,promote,replica,to,primary,index,shard,replica,throws,ioexception,plain,action,future,primary,replica,syncer,resync,task,fut,new,plain,action,future,promote,replica,to,primary,replica,shard,listener,primary,replica,syncer,resync,shard,new,action,listener,primary,replica,syncer,resync,task,override,public,void,on,response,primary,replica,syncer,resync,task,resync,task,listener,on,response,resync,task,fut,on,response,resync,task,override,public,void,on,failure,exception,e,listener,on,failure,e,fut,on,failure,e,return,fut
ESIndexLevelReplicationTestCase -> ReplicationGroup -> public Future<PrimaryReplicaSyncer.ResyncTask> promoteReplicaToPrimary(IndexShard replica) throws IOException;1533921794;promotes the specific replica as the new primary;public Future<PrimaryReplicaSyncer.ResyncTask> promoteReplicaToPrimary(IndexShard replica) throws IOException {_            PlainActionFuture<PrimaryReplicaSyncer.ResyncTask> fut = new PlainActionFuture<>()__            promoteReplicaToPrimary(replica,_                (shard, listener) -> primaryReplicaSyncer.resync(shard,_                    new ActionListener<PrimaryReplicaSyncer.ResyncTask>() {_                        @Override_                        public void onResponse(PrimaryReplicaSyncer.ResyncTask resyncTask) {_                            listener.onResponse(resyncTask)__                            fut.onResponse(resyncTask)__                        }__                        @Override_                        public void onFailure(Exception e) {_                            listener.onFailure(e)__                            fut.onFailure(e)__                        }_                    }))__            return fut__        };promotes,the,specific,replica,as,the,new,primary;public,future,primary,replica,syncer,resync,task,promote,replica,to,primary,index,shard,replica,throws,ioexception,plain,action,future,primary,replica,syncer,resync,task,fut,new,plain,action,future,promote,replica,to,primary,replica,shard,listener,primary,replica,syncer,resync,shard,new,action,listener,primary,replica,syncer,resync,task,override,public,void,on,response,primary,replica,syncer,resync,task,resync,task,listener,on,response,resync,task,fut,on,response,resync,task,override,public,void,on,failure,exception,e,listener,on,failure,e,fut,on,failure,e,return,fut
ESIndexLevelReplicationTestCase -> ReplicationGroup -> public Future<PrimaryReplicaSyncer.ResyncTask> promoteReplicaToPrimary(IndexShard replica) throws IOException;1535383145;promotes the specific replica as the new primary;public Future<PrimaryReplicaSyncer.ResyncTask> promoteReplicaToPrimary(IndexShard replica) throws IOException {_            PlainActionFuture<PrimaryReplicaSyncer.ResyncTask> fut = new PlainActionFuture<>()__            promoteReplicaToPrimary(replica,_                (shard, listener) -> primaryReplicaSyncer.resync(shard,_                    new ActionListener<PrimaryReplicaSyncer.ResyncTask>() {_                        @Override_                        public void onResponse(PrimaryReplicaSyncer.ResyncTask resyncTask) {_                            listener.onResponse(resyncTask)__                            fut.onResponse(resyncTask)__                        }__                        @Override_                        public void onFailure(Exception e) {_                            listener.onFailure(e)__                            fut.onFailure(e)__                        }_                    }))__            return fut__        };promotes,the,specific,replica,as,the,new,primary;public,future,primary,replica,syncer,resync,task,promote,replica,to,primary,index,shard,replica,throws,ioexception,plain,action,future,primary,replica,syncer,resync,task,fut,new,plain,action,future,promote,replica,to,primary,replica,shard,listener,primary,replica,syncer,resync,shard,new,action,listener,primary,replica,syncer,resync,task,override,public,void,on,response,primary,replica,syncer,resync,task,resync,task,listener,on,response,resync,task,fut,on,response,resync,task,override,public,void,on,failure,exception,e,listener,on,failure,e,fut,on,failure,e,return,fut
ESIndexLevelReplicationTestCase -> ReplicationGroup -> public Future<PrimaryReplicaSyncer.ResyncTask> promoteReplicaToPrimary(IndexShard replica) throws IOException;1535405719;promotes the specific replica as the new primary;public Future<PrimaryReplicaSyncer.ResyncTask> promoteReplicaToPrimary(IndexShard replica) throws IOException {_            PlainActionFuture<PrimaryReplicaSyncer.ResyncTask> fut = new PlainActionFuture<>()__            promoteReplicaToPrimary(replica,_                (shard, listener) -> primaryReplicaSyncer.resync(shard,_                    new ActionListener<PrimaryReplicaSyncer.ResyncTask>() {_                        @Override_                        public void onResponse(PrimaryReplicaSyncer.ResyncTask resyncTask) {_                            listener.onResponse(resyncTask)__                            fut.onResponse(resyncTask)__                        }__                        @Override_                        public void onFailure(Exception e) {_                            listener.onFailure(e)__                            fut.onFailure(e)__                        }_                    }))__            return fut__        };promotes,the,specific,replica,as,the,new,primary;public,future,primary,replica,syncer,resync,task,promote,replica,to,primary,index,shard,replica,throws,ioexception,plain,action,future,primary,replica,syncer,resync,task,fut,new,plain,action,future,promote,replica,to,primary,replica,shard,listener,primary,replica,syncer,resync,shard,new,action,listener,primary,replica,syncer,resync,task,override,public,void,on,response,primary,replica,syncer,resync,task,resync,task,listener,on,response,resync,task,fut,on,response,resync,task,override,public,void,on,failure,exception,e,listener,on,failure,e,fut,on,failure,e,return,fut
ESIndexLevelReplicationTestCase -> ReplicationGroup -> public Future<PrimaryReplicaSyncer.ResyncTask> promoteReplicaToPrimary(IndexShard replica) throws IOException;1535723122;promotes the specific replica as the new primary;public Future<PrimaryReplicaSyncer.ResyncTask> promoteReplicaToPrimary(IndexShard replica) throws IOException {_            PlainActionFuture<PrimaryReplicaSyncer.ResyncTask> fut = new PlainActionFuture<>()__            promoteReplicaToPrimary(replica,_                (shard, listener) -> primaryReplicaSyncer.resync(shard,_                    new ActionListener<PrimaryReplicaSyncer.ResyncTask>() {_                        @Override_                        public void onResponse(PrimaryReplicaSyncer.ResyncTask resyncTask) {_                            listener.onResponse(resyncTask)__                            fut.onResponse(resyncTask)__                        }__                        @Override_                        public void onFailure(Exception e) {_                            listener.onFailure(e)__                            fut.onFailure(e)__                        }_                    }))__            return fut__        };promotes,the,specific,replica,as,the,new,primary;public,future,primary,replica,syncer,resync,task,promote,replica,to,primary,index,shard,replica,throws,ioexception,plain,action,future,primary,replica,syncer,resync,task,fut,new,plain,action,future,promote,replica,to,primary,replica,shard,listener,primary,replica,syncer,resync,shard,new,action,listener,primary,replica,syncer,resync,task,override,public,void,on,response,primary,replica,syncer,resync,task,resync,task,listener,on,response,resync,task,fut,on,response,resync,task,override,public,void,on,failure,exception,e,listener,on,failure,e,fut,on,failure,e,return,fut
ESIndexLevelReplicationTestCase -> ReplicationGroup -> public Future<PrimaryReplicaSyncer.ResyncTask> promoteReplicaToPrimary(IndexShard replica) throws IOException;1536611444;promotes the specific replica as the new primary;public Future<PrimaryReplicaSyncer.ResyncTask> promoteReplicaToPrimary(IndexShard replica) throws IOException {_            PlainActionFuture<PrimaryReplicaSyncer.ResyncTask> fut = new PlainActionFuture<>()__            promoteReplicaToPrimary(replica,_                (shard, listener) -> primaryReplicaSyncer.resync(shard,_                    new ActionListener<PrimaryReplicaSyncer.ResyncTask>() {_                        @Override_                        public void onResponse(PrimaryReplicaSyncer.ResyncTask resyncTask) {_                            listener.onResponse(resyncTask)__                            fut.onResponse(resyncTask)__                        }__                        @Override_                        public void onFailure(Exception e) {_                            listener.onFailure(e)__                            fut.onFailure(e)__                        }_                    }))__            return fut__        };promotes,the,specific,replica,as,the,new,primary;public,future,primary,replica,syncer,resync,task,promote,replica,to,primary,index,shard,replica,throws,ioexception,plain,action,future,primary,replica,syncer,resync,task,fut,new,plain,action,future,promote,replica,to,primary,replica,shard,listener,primary,replica,syncer,resync,shard,new,action,listener,primary,replica,syncer,resync,task,override,public,void,on,response,primary,replica,syncer,resync,task,resync,task,listener,on,response,resync,task,fut,on,response,resync,task,override,public,void,on,failure,exception,e,listener,on,failure,e,fut,on,failure,e,return,fut
ESIndexLevelReplicationTestCase -> ReplicationGroup -> public Future<PrimaryReplicaSyncer.ResyncTask> promoteReplicaToPrimary(IndexShard replica) throws IOException;1536828374;promotes the specific replica as the new primary;public Future<PrimaryReplicaSyncer.ResyncTask> promoteReplicaToPrimary(IndexShard replica) throws IOException {_            PlainActionFuture<PrimaryReplicaSyncer.ResyncTask> fut = new PlainActionFuture<>()__            promoteReplicaToPrimary(replica,_                (shard, listener) -> primaryReplicaSyncer.resync(shard,_                    new ActionListener<PrimaryReplicaSyncer.ResyncTask>() {_                        @Override_                        public void onResponse(PrimaryReplicaSyncer.ResyncTask resyncTask) {_                            listener.onResponse(resyncTask)__                            fut.onResponse(resyncTask)__                        }__                        @Override_                        public void onFailure(Exception e) {_                            listener.onFailure(e)__                            fut.onFailure(e)__                        }_                    }))__            return fut__        };promotes,the,specific,replica,as,the,new,primary;public,future,primary,replica,syncer,resync,task,promote,replica,to,primary,index,shard,replica,throws,ioexception,plain,action,future,primary,replica,syncer,resync,task,fut,new,plain,action,future,promote,replica,to,primary,replica,shard,listener,primary,replica,syncer,resync,shard,new,action,listener,primary,replica,syncer,resync,task,override,public,void,on,response,primary,replica,syncer,resync,task,resync,task,listener,on,response,resync,task,fut,on,response,resync,task,override,public,void,on,failure,exception,e,listener,on,failure,e,fut,on,failure,e,return,fut
ESIndexLevelReplicationTestCase -> ReplicationGroup -> public Future<PrimaryReplicaSyncer.ResyncTask> promoteReplicaToPrimary(IndexShard replica) throws IOException;1537806831;promotes the specific replica as the new primary;public Future<PrimaryReplicaSyncer.ResyncTask> promoteReplicaToPrimary(IndexShard replica) throws IOException {_            PlainActionFuture<PrimaryReplicaSyncer.ResyncTask> fut = new PlainActionFuture<>()__            promoteReplicaToPrimary(replica,_                (shard, listener) -> primaryReplicaSyncer.resync(shard,_                    new ActionListener<PrimaryReplicaSyncer.ResyncTask>() {_                        @Override_                        public void onResponse(PrimaryReplicaSyncer.ResyncTask resyncTask) {_                            listener.onResponse(resyncTask)__                            fut.onResponse(resyncTask)__                        }__                        @Override_                        public void onFailure(Exception e) {_                            listener.onFailure(e)__                            fut.onFailure(e)__                        }_                    }))__            return fut__        };promotes,the,specific,replica,as,the,new,primary;public,future,primary,replica,syncer,resync,task,promote,replica,to,primary,index,shard,replica,throws,ioexception,plain,action,future,primary,replica,syncer,resync,task,fut,new,plain,action,future,promote,replica,to,primary,replica,shard,listener,primary,replica,syncer,resync,shard,new,action,listener,primary,replica,syncer,resync,task,override,public,void,on,response,primary,replica,syncer,resync,task,resync,task,listener,on,response,resync,task,fut,on,response,resync,task,override,public,void,on,failure,exception,e,listener,on,failure,e,fut,on,failure,e,return,fut
ESIndexLevelReplicationTestCase -> ReplicationGroup -> public Future<PrimaryReplicaSyncer.ResyncTask> promoteReplicaToPrimary(IndexShard replica) throws IOException;1538067637;promotes the specific replica as the new primary;public Future<PrimaryReplicaSyncer.ResyncTask> promoteReplicaToPrimary(IndexShard replica) throws IOException {_            PlainActionFuture<PrimaryReplicaSyncer.ResyncTask> fut = new PlainActionFuture<>()__            promoteReplicaToPrimary(replica,_                (shard, listener) -> primaryReplicaSyncer.resync(shard,_                    new ActionListener<PrimaryReplicaSyncer.ResyncTask>() {_                        @Override_                        public void onResponse(PrimaryReplicaSyncer.ResyncTask resyncTask) {_                            listener.onResponse(resyncTask)__                            fut.onResponse(resyncTask)__                        }__                        @Override_                        public void onFailure(Exception e) {_                            listener.onFailure(e)__                            fut.onFailure(e)__                        }_                    }))__            return fut__        };promotes,the,specific,replica,as,the,new,primary;public,future,primary,replica,syncer,resync,task,promote,replica,to,primary,index,shard,replica,throws,ioexception,plain,action,future,primary,replica,syncer,resync,task,fut,new,plain,action,future,promote,replica,to,primary,replica,shard,listener,primary,replica,syncer,resync,shard,new,action,listener,primary,replica,syncer,resync,task,override,public,void,on,response,primary,replica,syncer,resync,task,resync,task,listener,on,response,resync,task,fut,on,response,resync,task,override,public,void,on,failure,exception,e,listener,on,failure,e,fut,on,failure,e,return,fut
ESIndexLevelReplicationTestCase -> ReplicationGroup -> public Future<PrimaryReplicaSyncer.ResyncTask> promoteReplicaToPrimary(IndexShard replica) throws IOException;1539615817;promotes the specific replica as the new primary;public Future<PrimaryReplicaSyncer.ResyncTask> promoteReplicaToPrimary(IndexShard replica) throws IOException {_            PlainActionFuture<PrimaryReplicaSyncer.ResyncTask> fut = new PlainActionFuture<>()__            promoteReplicaToPrimary(replica,_                (shard, listener) -> primaryReplicaSyncer.resync(shard,_                    new ActionListener<PrimaryReplicaSyncer.ResyncTask>() {_                        @Override_                        public void onResponse(PrimaryReplicaSyncer.ResyncTask resyncTask) {_                            listener.onResponse(resyncTask)__                            fut.onResponse(resyncTask)__                        }__                        @Override_                        public void onFailure(Exception e) {_                            listener.onFailure(e)__                            fut.onFailure(e)__                        }_                    }))__            return fut__        };promotes,the,specific,replica,as,the,new,primary;public,future,primary,replica,syncer,resync,task,promote,replica,to,primary,index,shard,replica,throws,ioexception,plain,action,future,primary,replica,syncer,resync,task,fut,new,plain,action,future,promote,replica,to,primary,replica,shard,listener,primary,replica,syncer,resync,shard,new,action,listener,primary,replica,syncer,resync,task,override,public,void,on,response,primary,replica,syncer,resync,task,resync,task,listener,on,response,resync,task,fut,on,response,resync,task,override,public,void,on,failure,exception,e,listener,on,failure,e,fut,on,failure,e,return,fut
ESIndexLevelReplicationTestCase -> ReplicationGroup -> public Future<PrimaryReplicaSyncer.ResyncTask> promoteReplicaToPrimary(IndexShard replica) throws IOException;1539815831;promotes the specific replica as the new primary;public Future<PrimaryReplicaSyncer.ResyncTask> promoteReplicaToPrimary(IndexShard replica) throws IOException {_            PlainActionFuture<PrimaryReplicaSyncer.ResyncTask> fut = new PlainActionFuture<>()__            promoteReplicaToPrimary(replica, (shard, listener) -> {_                computeReplicationTargets()__                primaryReplicaSyncer.resync(shard,_                    new ActionListener<PrimaryReplicaSyncer.ResyncTask>() {_                        @Override_                        public void onResponse(PrimaryReplicaSyncer.ResyncTask resyncTask) {_                            listener.onResponse(resyncTask)__                            fut.onResponse(resyncTask)__                        }__                        @Override_                        public void onFailure(Exception e) {_                            listener.onFailure(e)__                            fut.onFailure(e)__                        }_                    })__            })__            return fut__        };promotes,the,specific,replica,as,the,new,primary;public,future,primary,replica,syncer,resync,task,promote,replica,to,primary,index,shard,replica,throws,ioexception,plain,action,future,primary,replica,syncer,resync,task,fut,new,plain,action,future,promote,replica,to,primary,replica,shard,listener,compute,replication,targets,primary,replica,syncer,resync,shard,new,action,listener,primary,replica,syncer,resync,task,override,public,void,on,response,primary,replica,syncer,resync,task,resync,task,listener,on,response,resync,task,fut,on,response,resync,task,override,public,void,on,failure,exception,e,listener,on,failure,e,fut,on,failure,e,return,fut
ESIndexLevelReplicationTestCase -> ReplicationGroup -> public Future<PrimaryReplicaSyncer.ResyncTask> promoteReplicaToPrimary(IndexShard replica) throws IOException;1540486836;promotes the specific replica as the new primary;public Future<PrimaryReplicaSyncer.ResyncTask> promoteReplicaToPrimary(IndexShard replica) throws IOException {_            PlainActionFuture<PrimaryReplicaSyncer.ResyncTask> fut = new PlainActionFuture<>()__            promoteReplicaToPrimary(replica, (shard, listener) -> {_                computeReplicationTargets()__                primaryReplicaSyncer.resync(shard,_                    new ActionListener<PrimaryReplicaSyncer.ResyncTask>() {_                        @Override_                        public void onResponse(PrimaryReplicaSyncer.ResyncTask resyncTask) {_                            listener.onResponse(resyncTask)__                            fut.onResponse(resyncTask)__                        }__                        @Override_                        public void onFailure(Exception e) {_                            listener.onFailure(e)__                            fut.onFailure(e)__                        }_                    })__            })__            return fut__        };promotes,the,specific,replica,as,the,new,primary;public,future,primary,replica,syncer,resync,task,promote,replica,to,primary,index,shard,replica,throws,ioexception,plain,action,future,primary,replica,syncer,resync,task,fut,new,plain,action,future,promote,replica,to,primary,replica,shard,listener,compute,replication,targets,primary,replica,syncer,resync,shard,new,action,listener,primary,replica,syncer,resync,task,override,public,void,on,response,primary,replica,syncer,resync,task,resync,task,listener,on,response,resync,task,fut,on,response,resync,task,override,public,void,on,failure,exception,e,listener,on,failure,e,fut,on,failure,e,return,fut
ESIndexLevelReplicationTestCase -> ReplicationGroup -> public Future<PrimaryReplicaSyncer.ResyncTask> promoteReplicaToPrimary(IndexShard replica) throws IOException;1541092382;promotes the specific replica as the new primary;public Future<PrimaryReplicaSyncer.ResyncTask> promoteReplicaToPrimary(IndexShard replica) throws IOException {_            PlainActionFuture<PrimaryReplicaSyncer.ResyncTask> fut = new PlainActionFuture<>()__            promoteReplicaToPrimary(replica, (shard, listener) -> {_                computeReplicationTargets()__                primaryReplicaSyncer.resync(shard,_                    new ActionListener<PrimaryReplicaSyncer.ResyncTask>() {_                        @Override_                        public void onResponse(PrimaryReplicaSyncer.ResyncTask resyncTask) {_                            listener.onResponse(resyncTask)__                            fut.onResponse(resyncTask)__                        }__                        @Override_                        public void onFailure(Exception e) {_                            listener.onFailure(e)__                            fut.onFailure(e)__                        }_                    })__            })__            return fut__        };promotes,the,specific,replica,as,the,new,primary;public,future,primary,replica,syncer,resync,task,promote,replica,to,primary,index,shard,replica,throws,ioexception,plain,action,future,primary,replica,syncer,resync,task,fut,new,plain,action,future,promote,replica,to,primary,replica,shard,listener,compute,replication,targets,primary,replica,syncer,resync,shard,new,action,listener,primary,replica,syncer,resync,task,override,public,void,on,response,primary,replica,syncer,resync,task,resync,task,listener,on,response,resync,task,fut,on,response,resync,task,override,public,void,on,failure,exception,e,listener,on,failure,e,fut,on,failure,e,return,fut
ESIndexLevelReplicationTestCase -> ReplicationGroup -> public Future<PrimaryReplicaSyncer.ResyncTask> promoteReplicaToPrimary(IndexShard replica) throws IOException;1550499044;promotes the specific replica as the new primary;public Future<PrimaryReplicaSyncer.ResyncTask> promoteReplicaToPrimary(IndexShard replica) throws IOException {_            PlainActionFuture<PrimaryReplicaSyncer.ResyncTask> fut = new PlainActionFuture<>()__            promoteReplicaToPrimary(replica, (shard, listener) -> {_                computeReplicationTargets()__                primaryReplicaSyncer.resync(shard,_                    new ActionListener<PrimaryReplicaSyncer.ResyncTask>() {_                        @Override_                        public void onResponse(PrimaryReplicaSyncer.ResyncTask resyncTask) {_                            listener.onResponse(resyncTask)__                            fut.onResponse(resyncTask)__                        }__                        @Override_                        public void onFailure(Exception e) {_                            listener.onFailure(e)__                            fut.onFailure(e)__                        }_                    })__            })__            return fut__        };promotes,the,specific,replica,as,the,new,primary;public,future,primary,replica,syncer,resync,task,promote,replica,to,primary,index,shard,replica,throws,ioexception,plain,action,future,primary,replica,syncer,resync,task,fut,new,plain,action,future,promote,replica,to,primary,replica,shard,listener,compute,replication,targets,primary,replica,syncer,resync,shard,new,action,listener,primary,replica,syncer,resync,task,override,public,void,on,response,primary,replica,syncer,resync,task,resync,task,listener,on,response,resync,task,fut,on,response,resync,task,override,public,void,on,failure,exception,e,listener,on,failure,e,fut,on,failure,e,return,fut
ESIndexLevelReplicationTestCase -> ReplicationGroup -> public Future<PrimaryReplicaSyncer.ResyncTask> promoteReplicaToPrimary(IndexShard replica) throws IOException;1550668107;promotes the specific replica as the new primary;public Future<PrimaryReplicaSyncer.ResyncTask> promoteReplicaToPrimary(IndexShard replica) throws IOException {_            PlainActionFuture<PrimaryReplicaSyncer.ResyncTask> fut = new PlainActionFuture<>()__            promoteReplicaToPrimary(replica, (shard, listener) -> {_                computeReplicationTargets()__                primaryReplicaSyncer.resync(shard,_                    new ActionListener<PrimaryReplicaSyncer.ResyncTask>() {_                        @Override_                        public void onResponse(PrimaryReplicaSyncer.ResyncTask resyncTask) {_                            listener.onResponse(resyncTask)__                            fut.onResponse(resyncTask)__                        }__                        @Override_                        public void onFailure(Exception e) {_                            listener.onFailure(e)__                            fut.onFailure(e)__                        }_                    })__            })__            return fut__        };promotes,the,specific,replica,as,the,new,primary;public,future,primary,replica,syncer,resync,task,promote,replica,to,primary,index,shard,replica,throws,ioexception,plain,action,future,primary,replica,syncer,resync,task,fut,new,plain,action,future,promote,replica,to,primary,replica,shard,listener,compute,replication,targets,primary,replica,syncer,resync,shard,new,action,listener,primary,replica,syncer,resync,task,override,public,void,on,response,primary,replica,syncer,resync,task,resync,task,listener,on,response,resync,task,fut,on,response,resync,task,override,public,void,on,failure,exception,e,listener,on,failure,e,fut,on,failure,e,return,fut
ESIndexLevelReplicationTestCase -> ReplicationGroup -> public Future<PrimaryReplicaSyncer.ResyncTask> promoteReplicaToPrimary(IndexShard replica) throws IOException;1551132475;promotes the specific replica as the new primary;public Future<PrimaryReplicaSyncer.ResyncTask> promoteReplicaToPrimary(IndexShard replica) throws IOException {_            PlainActionFuture<PrimaryReplicaSyncer.ResyncTask> fut = new PlainActionFuture<>()__            promoteReplicaToPrimary(replica, (shard, listener) -> {_                computeReplicationTargets()__                primaryReplicaSyncer.resync(shard,_                    new ActionListener<PrimaryReplicaSyncer.ResyncTask>() {_                        @Override_                        public void onResponse(PrimaryReplicaSyncer.ResyncTask resyncTask) {_                            listener.onResponse(resyncTask)__                            fut.onResponse(resyncTask)__                        }__                        @Override_                        public void onFailure(Exception e) {_                            listener.onFailure(e)__                            fut.onFailure(e)__                        }_                    })__            })__            return fut__        };promotes,the,specific,replica,as,the,new,primary;public,future,primary,replica,syncer,resync,task,promote,replica,to,primary,index,shard,replica,throws,ioexception,plain,action,future,primary,replica,syncer,resync,task,fut,new,plain,action,future,promote,replica,to,primary,replica,shard,listener,compute,replication,targets,primary,replica,syncer,resync,shard,new,action,listener,primary,replica,syncer,resync,task,override,public,void,on,response,primary,replica,syncer,resync,task,resync,task,listener,on,response,resync,task,fut,on,response,resync,task,override,public,void,on,failure,exception,e,listener,on,failure,e,fut,on,failure,e,return,fut
ESIndexLevelReplicationTestCase -> void deleteOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception;1528762805;Executes the delete request on the given replica shard.;void deleteOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception {_        executeShardBulkOnReplica(request, replica, group.primary.getPrimaryTerm(), group.primary.getGlobalCheckpoint())__    };executes,the,delete,request,on,the,given,replica,shard;void,delete,on,replica,bulk,shard,request,request,replication,group,group,index,shard,replica,throws,exception,execute,shard,bulk,on,replica,request,replica,group,primary,get,primary,term,group,primary,get,global,checkpoint
ESIndexLevelReplicationTestCase -> void deleteOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception;1528977744;Executes the delete request on the given replica shard.;void deleteOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception {_        executeShardBulkOnReplica(request, replica, group.primary.getPrimaryTerm(), group.primary.getGlobalCheckpoint())__    };executes,the,delete,request,on,the,given,replica,shard;void,delete,on,replica,bulk,shard,request,request,replication,group,group,index,shard,replica,throws,exception,execute,shard,bulk,on,replica,request,replica,group,primary,get,primary,term,group,primary,get,global,checkpoint
ESIndexLevelReplicationTestCase -> void deleteOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception;1531910483;Executes the delete request on the given replica shard.;void deleteOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception {_        executeShardBulkOnReplica(request, replica, group.primary.getPrimaryTerm(), group.primary.getGlobalCheckpoint())__    };executes,the,delete,request,on,the,given,replica,shard;void,delete,on,replica,bulk,shard,request,request,replication,group,group,index,shard,replica,throws,exception,execute,shard,bulk,on,replica,request,replica,group,primary,get,primary,term,group,primary,get,global,checkpoint
ESIndexLevelReplicationTestCase -> void deleteOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception;1532434432;Executes the delete request on the given replica shard.;void deleteOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception {_        executeShardBulkOnReplica(request, replica, group.primary.getPrimaryTerm(), group.primary.getGlobalCheckpoint())__    };executes,the,delete,request,on,the,given,replica,shard;void,delete,on,replica,bulk,shard,request,request,replication,group,group,index,shard,replica,throws,exception,execute,shard,bulk,on,replica,request,replica,group,primary,get,primary,term,group,primary,get,global,checkpoint
ESIndexLevelReplicationTestCase -> void deleteOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception;1533295538;Executes the delete request on the given replica shard.;void deleteOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception {_        executeShardBulkOnReplica(request, replica, group.primary.getPendingPrimaryTerm(), group.primary.getGlobalCheckpoint())__    };executes,the,delete,request,on,the,given,replica,shard;void,delete,on,replica,bulk,shard,request,request,replication,group,group,index,shard,replica,throws,exception,execute,shard,bulk,on,replica,request,replica,group,primary,get,pending,primary,term,group,primary,get,global,checkpoint
ESIndexLevelReplicationTestCase -> void deleteOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception;1533921794;Executes the delete request on the given replica shard.;void deleteOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception {_        executeShardBulkOnReplica(request, replica, group.primary.getPendingPrimaryTerm(), group.primary.getGlobalCheckpoint())__    };executes,the,delete,request,on,the,given,replica,shard;void,delete,on,replica,bulk,shard,request,request,replication,group,group,index,shard,replica,throws,exception,execute,shard,bulk,on,replica,request,replica,group,primary,get,pending,primary,term,group,primary,get,global,checkpoint
ESIndexLevelReplicationTestCase -> void deleteOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception;1535383145;Executes the delete request on the given replica shard.;void deleteOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception {_        executeShardBulkOnReplica(request, replica, group.primary.getPendingPrimaryTerm(), group.primary.getGlobalCheckpoint())__    };executes,the,delete,request,on,the,given,replica,shard;void,delete,on,replica,bulk,shard,request,request,replication,group,group,index,shard,replica,throws,exception,execute,shard,bulk,on,replica,request,replica,group,primary,get,pending,primary,term,group,primary,get,global,checkpoint
ESIndexLevelReplicationTestCase -> void deleteOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception;1535405719;Executes the delete request on the given replica shard.;void deleteOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception {_        executeShardBulkOnReplica(request, replica, group.primary.getPendingPrimaryTerm(), group.primary.getGlobalCheckpoint())__    };executes,the,delete,request,on,the,given,replica,shard;void,delete,on,replica,bulk,shard,request,request,replication,group,group,index,shard,replica,throws,exception,execute,shard,bulk,on,replica,request,replica,group,primary,get,pending,primary,term,group,primary,get,global,checkpoint
ESIndexLevelReplicationTestCase -> void deleteOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception;1535723122;Executes the delete request on the given replica shard.;void deleteOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception {_        executeShardBulkOnReplica(request, replica, group.primary.getPendingPrimaryTerm(), group.primary.getGlobalCheckpoint())__    };executes,the,delete,request,on,the,given,replica,shard;void,delete,on,replica,bulk,shard,request,request,replication,group,group,index,shard,replica,throws,exception,execute,shard,bulk,on,replica,request,replica,group,primary,get,pending,primary,term,group,primary,get,global,checkpoint
ESIndexLevelReplicationTestCase -> void deleteOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception;1536611444;Executes the delete request on the given replica shard.;void deleteOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception {_        executeShardBulkOnReplica(request, replica, group.primary.getPendingPrimaryTerm(), group.primary.getGlobalCheckpoint())__    };executes,the,delete,request,on,the,given,replica,shard;void,delete,on,replica,bulk,shard,request,request,replication,group,group,index,shard,replica,throws,exception,execute,shard,bulk,on,replica,request,replica,group,primary,get,pending,primary,term,group,primary,get,global,checkpoint
ESIndexLevelReplicationTestCase -> void deleteOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception;1536828374;Executes the delete request on the given replica shard.;void deleteOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception {_        executeShardBulkOnReplica(request, replica, group.primary.getPendingPrimaryTerm(), group.primary.getGlobalCheckpoint())__    };executes,the,delete,request,on,the,given,replica,shard;void,delete,on,replica,bulk,shard,request,request,replication,group,group,index,shard,replica,throws,exception,execute,shard,bulk,on,replica,request,replica,group,primary,get,pending,primary,term,group,primary,get,global,checkpoint
ESIndexLevelReplicationTestCase -> void deleteOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception;1537806831;Executes the delete request on the given replica shard.;void deleteOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception {_        executeShardBulkOnReplica(request, replica, group.primary.getPendingPrimaryTerm(), group.primary.getGlobalCheckpoint())__    };executes,the,delete,request,on,the,given,replica,shard;void,delete,on,replica,bulk,shard,request,request,replication,group,group,index,shard,replica,throws,exception,execute,shard,bulk,on,replica,request,replica,group,primary,get,pending,primary,term,group,primary,get,global,checkpoint
ESIndexLevelReplicationTestCase -> void deleteOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception;1538067637;Executes the delete request on the given replica shard.;void deleteOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception {_        executeShardBulkOnReplica(request, replica, group.primary.getPendingPrimaryTerm(),_            group.primary.getGlobalCheckpoint(), group.primary.getMaxSeqNoOfUpdatesOrDeletes())__    };executes,the,delete,request,on,the,given,replica,shard;void,delete,on,replica,bulk,shard,request,request,replication,group,group,index,shard,replica,throws,exception,execute,shard,bulk,on,replica,request,replica,group,primary,get,pending,primary,term,group,primary,get,global,checkpoint,group,primary,get,max,seq,no,of,updates,or,deletes
ESIndexLevelReplicationTestCase -> void deleteOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception;1539615817;Executes the delete request on the given replica shard.;void deleteOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception {_        executeShardBulkOnReplica(request, replica, group.primary.getPendingPrimaryTerm(),_            group.primary.getGlobalCheckpoint(), group.primary.getMaxSeqNoOfUpdatesOrDeletes())__    };executes,the,delete,request,on,the,given,replica,shard;void,delete,on,replica,bulk,shard,request,request,replication,group,group,index,shard,replica,throws,exception,execute,shard,bulk,on,replica,request,replica,group,primary,get,pending,primary,term,group,primary,get,global,checkpoint,group,primary,get,max,seq,no,of,updates,or,deletes
ESIndexLevelReplicationTestCase -> void deleteOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception;1539815831;Executes the delete request on the given replica shard.;void deleteOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception {_        executeShardBulkOnReplica(request, replica, group.primary.getPendingPrimaryTerm(),_            group.primary.getGlobalCheckpoint(), group.primary.getMaxSeqNoOfUpdatesOrDeletes())__    };executes,the,delete,request,on,the,given,replica,shard;void,delete,on,replica,bulk,shard,request,request,replication,group,group,index,shard,replica,throws,exception,execute,shard,bulk,on,replica,request,replica,group,primary,get,pending,primary,term,group,primary,get,global,checkpoint,group,primary,get,max,seq,no,of,updates,or,deletes
ESIndexLevelReplicationTestCase -> void deleteOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception;1540486836;Executes the delete request on the given replica shard.;void deleteOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception {_        executeShardBulkOnReplica(request, replica, group.primary.getPendingPrimaryTerm(),_            group.primary.getGlobalCheckpoint(), group.primary.getMaxSeqNoOfUpdatesOrDeletes())__    };executes,the,delete,request,on,the,given,replica,shard;void,delete,on,replica,bulk,shard,request,request,replication,group,group,index,shard,replica,throws,exception,execute,shard,bulk,on,replica,request,replica,group,primary,get,pending,primary,term,group,primary,get,global,checkpoint,group,primary,get,max,seq,no,of,updates,or,deletes
ESIndexLevelReplicationTestCase -> void deleteOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception;1541092382;Executes the delete request on the given replica shard.;void deleteOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception {_        executeShardBulkOnReplica(request, replica, group.primary.getPendingPrimaryTerm(),_            group.primary.getGlobalCheckpoint(), group.primary.getMaxSeqNoOfUpdatesOrDeletes())__    };executes,the,delete,request,on,the,given,replica,shard;void,delete,on,replica,bulk,shard,request,request,replication,group,group,index,shard,replica,throws,exception,execute,shard,bulk,on,replica,request,replica,group,primary,get,pending,primary,term,group,primary,get,global,checkpoint,group,primary,get,max,seq,no,of,updates,or,deletes
ESIndexLevelReplicationTestCase -> void deleteOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception;1550499044;Executes the delete request on the given replica shard.;void deleteOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception {_        executeShardBulkOnReplica(request, replica, group.primary.getPendingPrimaryTerm(),_            group.primary.getGlobalCheckpoint(), group.primary.getMaxSeqNoOfUpdatesOrDeletes())__    };executes,the,delete,request,on,the,given,replica,shard;void,delete,on,replica,bulk,shard,request,request,replication,group,group,index,shard,replica,throws,exception,execute,shard,bulk,on,replica,request,replica,group,primary,get,pending,primary,term,group,primary,get,global,checkpoint,group,primary,get,max,seq,no,of,updates,or,deletes
ESIndexLevelReplicationTestCase -> void deleteOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception;1550668107;Executes the delete request on the given replica shard.;void deleteOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception {_        executeShardBulkOnReplica(request, replica, group.primary.getPendingPrimaryTerm(),_            group.primary.getGlobalCheckpoint(), group.primary.getMaxSeqNoOfUpdatesOrDeletes())__    };executes,the,delete,request,on,the,given,replica,shard;void,delete,on,replica,bulk,shard,request,request,replication,group,group,index,shard,replica,throws,exception,execute,shard,bulk,on,replica,request,replica,group,primary,get,pending,primary,term,group,primary,get,global,checkpoint,group,primary,get,max,seq,no,of,updates,or,deletes
ESIndexLevelReplicationTestCase -> void deleteOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception;1551132475;Executes the delete request on the given replica shard.;void deleteOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception {_        executeShardBulkOnReplica(request, replica, group.primary.getPendingPrimaryTerm(),_            group.primary.getGlobalCheckpoint(), group.primary.getMaxSeqNoOfUpdatesOrDeletes())__    };executes,the,delete,request,on,the,given,replica,shard;void,delete,on,replica,bulk,shard,request,request,replication,group,group,index,shard,replica,throws,exception,execute,shard,bulk,on,replica,request,replica,group,primary,get,pending,primary,term,group,primary,get,global,checkpoint,group,primary,get,max,seq,no,of,updates,or,deletes
ESIndexLevelReplicationTestCase -> BulkShardRequest indexOnPrimary(IndexRequest request, IndexShard primary) throws Exception;1528762805;indexes the given requests on the supplied primary, modifying it for replicas;BulkShardRequest indexOnPrimary(IndexRequest request, IndexShard primary) throws Exception {_        return executeReplicationRequestOnPrimary(primary, request)__    };indexes,the,given,requests,on,the,supplied,primary,modifying,it,for,replicas;bulk,shard,request,index,on,primary,index,request,request,index,shard,primary,throws,exception,return,execute,replication,request,on,primary,primary,request
ESIndexLevelReplicationTestCase -> BulkShardRequest indexOnPrimary(IndexRequest request, IndexShard primary) throws Exception;1528977744;indexes the given requests on the supplied primary, modifying it for replicas;BulkShardRequest indexOnPrimary(IndexRequest request, IndexShard primary) throws Exception {_        return executeReplicationRequestOnPrimary(primary, request)__    };indexes,the,given,requests,on,the,supplied,primary,modifying,it,for,replicas;bulk,shard,request,index,on,primary,index,request,request,index,shard,primary,throws,exception,return,execute,replication,request,on,primary,primary,request
ESIndexLevelReplicationTestCase -> BulkShardRequest indexOnPrimary(IndexRequest request, IndexShard primary) throws Exception;1531910483;indexes the given requests on the supplied primary, modifying it for replicas;BulkShardRequest indexOnPrimary(IndexRequest request, IndexShard primary) throws Exception {_        return executeReplicationRequestOnPrimary(primary, request)__    };indexes,the,given,requests,on,the,supplied,primary,modifying,it,for,replicas;bulk,shard,request,index,on,primary,index,request,request,index,shard,primary,throws,exception,return,execute,replication,request,on,primary,primary,request
ESIndexLevelReplicationTestCase -> BulkShardRequest indexOnPrimary(IndexRequest request, IndexShard primary) throws Exception;1532434432;indexes the given requests on the supplied primary, modifying it for replicas;BulkShardRequest indexOnPrimary(IndexRequest request, IndexShard primary) throws Exception {_        return executeReplicationRequestOnPrimary(primary, request)__    };indexes,the,given,requests,on,the,supplied,primary,modifying,it,for,replicas;bulk,shard,request,index,on,primary,index,request,request,index,shard,primary,throws,exception,return,execute,replication,request,on,primary,primary,request
ESIndexLevelReplicationTestCase -> BulkShardRequest indexOnPrimary(IndexRequest request, IndexShard primary) throws Exception;1533295538;indexes the given requests on the supplied primary, modifying it for replicas;BulkShardRequest indexOnPrimary(IndexRequest request, IndexShard primary) throws Exception {_        return executeReplicationRequestOnPrimary(primary, request)__    };indexes,the,given,requests,on,the,supplied,primary,modifying,it,for,replicas;bulk,shard,request,index,on,primary,index,request,request,index,shard,primary,throws,exception,return,execute,replication,request,on,primary,primary,request
ESIndexLevelReplicationTestCase -> BulkShardRequest indexOnPrimary(IndexRequest request, IndexShard primary) throws Exception;1533921794;indexes the given requests on the supplied primary, modifying it for replicas;BulkShardRequest indexOnPrimary(IndexRequest request, IndexShard primary) throws Exception {_        return executeReplicationRequestOnPrimary(primary, request)__    };indexes,the,given,requests,on,the,supplied,primary,modifying,it,for,replicas;bulk,shard,request,index,on,primary,index,request,request,index,shard,primary,throws,exception,return,execute,replication,request,on,primary,primary,request
ESIndexLevelReplicationTestCase -> BulkShardRequest indexOnPrimary(IndexRequest request, IndexShard primary) throws Exception;1535383145;indexes the given requests on the supplied primary, modifying it for replicas;BulkShardRequest indexOnPrimary(IndexRequest request, IndexShard primary) throws Exception {_        return executeReplicationRequestOnPrimary(primary, request)__    };indexes,the,given,requests,on,the,supplied,primary,modifying,it,for,replicas;bulk,shard,request,index,on,primary,index,request,request,index,shard,primary,throws,exception,return,execute,replication,request,on,primary,primary,request
ESIndexLevelReplicationTestCase -> BulkShardRequest indexOnPrimary(IndexRequest request, IndexShard primary) throws Exception;1535405719;indexes the given requests on the supplied primary, modifying it for replicas;BulkShardRequest indexOnPrimary(IndexRequest request, IndexShard primary) throws Exception {_        return executeReplicationRequestOnPrimary(primary, request)__    };indexes,the,given,requests,on,the,supplied,primary,modifying,it,for,replicas;bulk,shard,request,index,on,primary,index,request,request,index,shard,primary,throws,exception,return,execute,replication,request,on,primary,primary,request
ESIndexLevelReplicationTestCase -> BulkShardRequest indexOnPrimary(IndexRequest request, IndexShard primary) throws Exception;1535723122;indexes the given requests on the supplied primary, modifying it for replicas;BulkShardRequest indexOnPrimary(IndexRequest request, IndexShard primary) throws Exception {_        return executeReplicationRequestOnPrimary(primary, request)__    };indexes,the,given,requests,on,the,supplied,primary,modifying,it,for,replicas;bulk,shard,request,index,on,primary,index,request,request,index,shard,primary,throws,exception,return,execute,replication,request,on,primary,primary,request
ESIndexLevelReplicationTestCase -> BulkShardRequest indexOnPrimary(IndexRequest request, IndexShard primary) throws Exception;1536611444;indexes the given requests on the supplied primary, modifying it for replicas;BulkShardRequest indexOnPrimary(IndexRequest request, IndexShard primary) throws Exception {_        return executeReplicationRequestOnPrimary(primary, request)__    };indexes,the,given,requests,on,the,supplied,primary,modifying,it,for,replicas;bulk,shard,request,index,on,primary,index,request,request,index,shard,primary,throws,exception,return,execute,replication,request,on,primary,primary,request
ESIndexLevelReplicationTestCase -> BulkShardRequest indexOnPrimary(IndexRequest request, IndexShard primary) throws Exception;1536828374;indexes the given requests on the supplied primary, modifying it for replicas;BulkShardRequest indexOnPrimary(IndexRequest request, IndexShard primary) throws Exception {_        return executeReplicationRequestOnPrimary(primary, request)__    };indexes,the,given,requests,on,the,supplied,primary,modifying,it,for,replicas;bulk,shard,request,index,on,primary,index,request,request,index,shard,primary,throws,exception,return,execute,replication,request,on,primary,primary,request
ESIndexLevelReplicationTestCase -> BulkShardRequest indexOnPrimary(IndexRequest request, IndexShard primary) throws Exception;1537806831;indexes the given requests on the supplied primary, modifying it for replicas;BulkShardRequest indexOnPrimary(IndexRequest request, IndexShard primary) throws Exception {_        return executeReplicationRequestOnPrimary(primary, request)__    };indexes,the,given,requests,on,the,supplied,primary,modifying,it,for,replicas;bulk,shard,request,index,on,primary,index,request,request,index,shard,primary,throws,exception,return,execute,replication,request,on,primary,primary,request
ESIndexLevelReplicationTestCase -> BulkShardRequest indexOnPrimary(IndexRequest request, IndexShard primary) throws Exception;1538067637;indexes the given requests on the supplied primary, modifying it for replicas;BulkShardRequest indexOnPrimary(IndexRequest request, IndexShard primary) throws Exception {_        return executeReplicationRequestOnPrimary(primary, request)__    };indexes,the,given,requests,on,the,supplied,primary,modifying,it,for,replicas;bulk,shard,request,index,on,primary,index,request,request,index,shard,primary,throws,exception,return,execute,replication,request,on,primary,primary,request
ESIndexLevelReplicationTestCase -> BulkShardRequest indexOnPrimary(IndexRequest request, IndexShard primary) throws Exception;1539615817;indexes the given requests on the supplied primary, modifying it for replicas;BulkShardRequest indexOnPrimary(IndexRequest request, IndexShard primary) throws Exception {_        return executeReplicationRequestOnPrimary(primary, request)__    };indexes,the,given,requests,on,the,supplied,primary,modifying,it,for,replicas;bulk,shard,request,index,on,primary,index,request,request,index,shard,primary,throws,exception,return,execute,replication,request,on,primary,primary,request
ESIndexLevelReplicationTestCase -> BulkShardRequest indexOnPrimary(IndexRequest request, IndexShard primary) throws Exception;1539815831;indexes the given requests on the supplied primary, modifying it for replicas;BulkShardRequest indexOnPrimary(IndexRequest request, IndexShard primary) throws Exception {_        return executeReplicationRequestOnPrimary(primary, request)__    };indexes,the,given,requests,on,the,supplied,primary,modifying,it,for,replicas;bulk,shard,request,index,on,primary,index,request,request,index,shard,primary,throws,exception,return,execute,replication,request,on,primary,primary,request
ESIndexLevelReplicationTestCase -> BulkShardRequest indexOnPrimary(IndexRequest request, IndexShard primary) throws Exception;1540486836;indexes the given requests on the supplied primary, modifying it for replicas;BulkShardRequest indexOnPrimary(IndexRequest request, IndexShard primary) throws Exception {_        return executeReplicationRequestOnPrimary(primary, request)__    };indexes,the,given,requests,on,the,supplied,primary,modifying,it,for,replicas;bulk,shard,request,index,on,primary,index,request,request,index,shard,primary,throws,exception,return,execute,replication,request,on,primary,primary,request
ESIndexLevelReplicationTestCase -> BulkShardRequest indexOnPrimary(IndexRequest request, IndexShard primary) throws Exception;1541092382;indexes the given requests on the supplied primary, modifying it for replicas;BulkShardRequest indexOnPrimary(IndexRequest request, IndexShard primary) throws Exception {_        return executeReplicationRequestOnPrimary(primary, request)__    };indexes,the,given,requests,on,the,supplied,primary,modifying,it,for,replicas;bulk,shard,request,index,on,primary,index,request,request,index,shard,primary,throws,exception,return,execute,replication,request,on,primary,primary,request
ESIndexLevelReplicationTestCase -> BulkShardRequest indexOnPrimary(IndexRequest request, IndexShard primary) throws Exception;1550499044;indexes the given requests on the supplied primary, modifying it for replicas;BulkShardRequest indexOnPrimary(IndexRequest request, IndexShard primary) throws Exception {_        return executeReplicationRequestOnPrimary(primary, request)__    };indexes,the,given,requests,on,the,supplied,primary,modifying,it,for,replicas;bulk,shard,request,index,on,primary,index,request,request,index,shard,primary,throws,exception,return,execute,replication,request,on,primary,primary,request
ESIndexLevelReplicationTestCase -> BulkShardRequest indexOnPrimary(IndexRequest request, IndexShard primary) throws Exception;1550668107;indexes the given requests on the supplied primary, modifying it for replicas;BulkShardRequest indexOnPrimary(IndexRequest request, IndexShard primary) throws Exception {_        return executeReplicationRequestOnPrimary(primary, request)__    };indexes,the,given,requests,on,the,supplied,primary,modifying,it,for,replicas;bulk,shard,request,index,on,primary,index,request,request,index,shard,primary,throws,exception,return,execute,replication,request,on,primary,primary,request
ESIndexLevelReplicationTestCase -> BulkShardRequest indexOnPrimary(IndexRequest request, IndexShard primary) throws Exception;1551132475;indexes the given requests on the supplied primary, modifying it for replicas;BulkShardRequest indexOnPrimary(IndexRequest request, IndexShard primary) throws Exception {_        return executeReplicationRequestOnPrimary(primary, request)__    };indexes,the,given,requests,on,the,supplied,primary,modifying,it,for,replicas;bulk,shard,request,index,on,primary,index,request,request,index,shard,primary,throws,exception,return,execute,replication,request,on,primary,primary,request
ESIndexLevelReplicationTestCase -> ReplicationGroup -> public synchronized Future<PrimaryReplicaSyncer.ResyncTask> promoteReplicaToPrimary(IndexShard replica) throws IOException;1528762805;promotes the specific replica as the new primary;public synchronized Future<PrimaryReplicaSyncer.ResyncTask> promoteReplicaToPrimary(IndexShard replica) throws IOException {_            final long newTerm = indexMetaData.primaryTerm(shardId.id()) + 1__            IndexMetaData.Builder newMetaData = IndexMetaData.builder(indexMetaData).primaryTerm(shardId.id(), newTerm)__            indexMetaData = newMetaData.build()__            assertTrue(replicas.remove(replica))__            closeShards(primary)__            primary = replica__            assert primary.routingEntry().active() : "only active replicas can be promoted to primary: " + primary.routingEntry()__            PlainActionFuture<PrimaryReplicaSyncer.ResyncTask> fut = new PlainActionFuture<>()__            ShardRouting primaryRouting = replica.routingEntry().moveActiveReplicaToPrimary()__            IndexShardRoutingTable routingTable = routingTable(shr -> shr == replica.routingEntry() ? primaryRouting : shr)___            primary.updateShardState(primaryRouting,_                newTerm, (shard, listener) -> primaryReplicaSyncer.resync(shard,_                    new ActionListener<PrimaryReplicaSyncer.ResyncTask>() {_                        @Override_                        public void onResponse(PrimaryReplicaSyncer.ResyncTask resyncTask) {_                            listener.onResponse(resyncTask)__                            fut.onResponse(resyncTask)__                        }__                        @Override_                        public void onFailure(Exception e) {_                            listener.onFailure(e)__                            fut.onFailure(e)__                        }_                    }), currentClusterStateVersion.incrementAndGet(), activeIds(), routingTable, Collections.emptySet())___            return fut__        };promotes,the,specific,replica,as,the,new,primary;public,synchronized,future,primary,replica,syncer,resync,task,promote,replica,to,primary,index,shard,replica,throws,ioexception,final,long,new,term,index,meta,data,primary,term,shard,id,id,1,index,meta,data,builder,new,meta,data,index,meta,data,builder,index,meta,data,primary,term,shard,id,id,new,term,index,meta,data,new,meta,data,build,assert,true,replicas,remove,replica,close,shards,primary,primary,replica,assert,primary,routing,entry,active,only,active,replicas,can,be,promoted,to,primary,primary,routing,entry,plain,action,future,primary,replica,syncer,resync,task,fut,new,plain,action,future,shard,routing,primary,routing,replica,routing,entry,move,active,replica,to,primary,index,shard,routing,table,routing,table,routing,table,shr,shr,replica,routing,entry,primary,routing,shr,primary,update,shard,state,primary,routing,new,term,shard,listener,primary,replica,syncer,resync,shard,new,action,listener,primary,replica,syncer,resync,task,override,public,void,on,response,primary,replica,syncer,resync,task,resync,task,listener,on,response,resync,task,fut,on,response,resync,task,override,public,void,on,failure,exception,e,listener,on,failure,e,fut,on,failure,e,current,cluster,state,version,increment,and,get,active,ids,routing,table,collections,empty,set,return,fut
ESIndexLevelReplicationTestCase -> ReplicationGroup -> public synchronized Future<PrimaryReplicaSyncer.ResyncTask> promoteReplicaToPrimary(IndexShard replica) throws IOException;1528977744;promotes the specific replica as the new primary;public synchronized Future<PrimaryReplicaSyncer.ResyncTask> promoteReplicaToPrimary(IndexShard replica) throws IOException {_            final long newTerm = indexMetaData.primaryTerm(shardId.id()) + 1__            IndexMetaData.Builder newMetaData = IndexMetaData.builder(indexMetaData).primaryTerm(shardId.id(), newTerm)__            indexMetaData = newMetaData.build()__            assertTrue(replicas.remove(replica))__            closeShards(primary)__            primary = replica__            assert primary.routingEntry().active() : "only active replicas can be promoted to primary: " + primary.routingEntry()__            PlainActionFuture<PrimaryReplicaSyncer.ResyncTask> fut = new PlainActionFuture<>()__            ShardRouting primaryRouting = replica.routingEntry().moveActiveReplicaToPrimary()__            IndexShardRoutingTable routingTable = routingTable(shr -> shr == replica.routingEntry() ? primaryRouting : shr)___            primary.updateShardState(primaryRouting,_                newTerm, (shard, listener) -> primaryReplicaSyncer.resync(shard,_                    new ActionListener<PrimaryReplicaSyncer.ResyncTask>() {_                        @Override_                        public void onResponse(PrimaryReplicaSyncer.ResyncTask resyncTask) {_                            listener.onResponse(resyncTask)__                            fut.onResponse(resyncTask)__                        }__                        @Override_                        public void onFailure(Exception e) {_                            listener.onFailure(e)__                            fut.onFailure(e)__                        }_                    }), currentClusterStateVersion.incrementAndGet(), activeIds(), routingTable, Collections.emptySet())___            return fut__        };promotes,the,specific,replica,as,the,new,primary;public,synchronized,future,primary,replica,syncer,resync,task,promote,replica,to,primary,index,shard,replica,throws,ioexception,final,long,new,term,index,meta,data,primary,term,shard,id,id,1,index,meta,data,builder,new,meta,data,index,meta,data,builder,index,meta,data,primary,term,shard,id,id,new,term,index,meta,data,new,meta,data,build,assert,true,replicas,remove,replica,close,shards,primary,primary,replica,assert,primary,routing,entry,active,only,active,replicas,can,be,promoted,to,primary,primary,routing,entry,plain,action,future,primary,replica,syncer,resync,task,fut,new,plain,action,future,shard,routing,primary,routing,replica,routing,entry,move,active,replica,to,primary,index,shard,routing,table,routing,table,routing,table,shr,shr,replica,routing,entry,primary,routing,shr,primary,update,shard,state,primary,routing,new,term,shard,listener,primary,replica,syncer,resync,shard,new,action,listener,primary,replica,syncer,resync,task,override,public,void,on,response,primary,replica,syncer,resync,task,resync,task,listener,on,response,resync,task,fut,on,response,resync,task,override,public,void,on,failure,exception,e,listener,on,failure,e,fut,on,failure,e,current,cluster,state,version,increment,and,get,active,ids,routing,table,collections,empty,set,return,fut
ESIndexLevelReplicationTestCase -> ReplicationGroup -> public synchronized Future<PrimaryReplicaSyncer.ResyncTask> promoteReplicaToPrimary(IndexShard replica) throws IOException;1531910483;promotes the specific replica as the new primary;public synchronized Future<PrimaryReplicaSyncer.ResyncTask> promoteReplicaToPrimary(IndexShard replica) throws IOException {_            final long newTerm = indexMetaData.primaryTerm(shardId.id()) + 1__            IndexMetaData.Builder newMetaData = IndexMetaData.builder(indexMetaData).primaryTerm(shardId.id(), newTerm)__            indexMetaData = newMetaData.build()__            assertTrue(replicas.remove(replica))__            closeShards(primary)__            primary = replica__            assert primary.routingEntry().active() : "only active replicas can be promoted to primary: " + primary.routingEntry()__            PlainActionFuture<PrimaryReplicaSyncer.ResyncTask> fut = new PlainActionFuture<>()__            ShardRouting primaryRouting = replica.routingEntry().moveActiveReplicaToPrimary()__            IndexShardRoutingTable routingTable = routingTable(shr -> shr == replica.routingEntry() ? primaryRouting : shr)___            primary.updateShardState(primaryRouting,_                newTerm, (shard, listener) -> primaryReplicaSyncer.resync(shard,_                    new ActionListener<PrimaryReplicaSyncer.ResyncTask>() {_                        @Override_                        public void onResponse(PrimaryReplicaSyncer.ResyncTask resyncTask) {_                            listener.onResponse(resyncTask)__                            fut.onResponse(resyncTask)__                        }__                        @Override_                        public void onFailure(Exception e) {_                            listener.onFailure(e)__                            fut.onFailure(e)__                        }_                    }), currentClusterStateVersion.incrementAndGet(), activeIds(), routingTable, Collections.emptySet())___            return fut__        };promotes,the,specific,replica,as,the,new,primary;public,synchronized,future,primary,replica,syncer,resync,task,promote,replica,to,primary,index,shard,replica,throws,ioexception,final,long,new,term,index,meta,data,primary,term,shard,id,id,1,index,meta,data,builder,new,meta,data,index,meta,data,builder,index,meta,data,primary,term,shard,id,id,new,term,index,meta,data,new,meta,data,build,assert,true,replicas,remove,replica,close,shards,primary,primary,replica,assert,primary,routing,entry,active,only,active,replicas,can,be,promoted,to,primary,primary,routing,entry,plain,action,future,primary,replica,syncer,resync,task,fut,new,plain,action,future,shard,routing,primary,routing,replica,routing,entry,move,active,replica,to,primary,index,shard,routing,table,routing,table,routing,table,shr,shr,replica,routing,entry,primary,routing,shr,primary,update,shard,state,primary,routing,new,term,shard,listener,primary,replica,syncer,resync,shard,new,action,listener,primary,replica,syncer,resync,task,override,public,void,on,response,primary,replica,syncer,resync,task,resync,task,listener,on,response,resync,task,fut,on,response,resync,task,override,public,void,on,failure,exception,e,listener,on,failure,e,fut,on,failure,e,current,cluster,state,version,increment,and,get,active,ids,routing,table,collections,empty,set,return,fut
ESIndexLevelReplicationTestCase -> ReplicationGroup -> public synchronized Future<PrimaryReplicaSyncer.ResyncTask> promoteReplicaToPrimary(IndexShard replica) throws IOException;1532434432;promotes the specific replica as the new primary;public synchronized Future<PrimaryReplicaSyncer.ResyncTask> promoteReplicaToPrimary(IndexShard replica) throws IOException {_            final long newTerm = indexMetaData.primaryTerm(shardId.id()) + 1__            IndexMetaData.Builder newMetaData = IndexMetaData.builder(indexMetaData).primaryTerm(shardId.id(), newTerm)__            indexMetaData = newMetaData.build()__            assertTrue(replicas.remove(replica))__            closeShards(primary)__            primary = replica__            assert primary.routingEntry().active() : "only active replicas can be promoted to primary: " + primary.routingEntry()__            PlainActionFuture<PrimaryReplicaSyncer.ResyncTask> fut = new PlainActionFuture<>()__            ShardRouting primaryRouting = replica.routingEntry().moveActiveReplicaToPrimary()__            IndexShardRoutingTable routingTable = routingTable(shr -> shr == replica.routingEntry() ? primaryRouting : shr)___            primary.updateShardState(primaryRouting,_                newTerm, (shard, listener) -> primaryReplicaSyncer.resync(shard,_                    new ActionListener<PrimaryReplicaSyncer.ResyncTask>() {_                        @Override_                        public void onResponse(PrimaryReplicaSyncer.ResyncTask resyncTask) {_                            listener.onResponse(resyncTask)__                            fut.onResponse(resyncTask)__                        }__                        @Override_                        public void onFailure(Exception e) {_                            listener.onFailure(e)__                            fut.onFailure(e)__                        }_                    }), currentClusterStateVersion.incrementAndGet(), activeIds(), routingTable, Collections.emptySet())___            return fut__        };promotes,the,specific,replica,as,the,new,primary;public,synchronized,future,primary,replica,syncer,resync,task,promote,replica,to,primary,index,shard,replica,throws,ioexception,final,long,new,term,index,meta,data,primary,term,shard,id,id,1,index,meta,data,builder,new,meta,data,index,meta,data,builder,index,meta,data,primary,term,shard,id,id,new,term,index,meta,data,new,meta,data,build,assert,true,replicas,remove,replica,close,shards,primary,primary,replica,assert,primary,routing,entry,active,only,active,replicas,can,be,promoted,to,primary,primary,routing,entry,plain,action,future,primary,replica,syncer,resync,task,fut,new,plain,action,future,shard,routing,primary,routing,replica,routing,entry,move,active,replica,to,primary,index,shard,routing,table,routing,table,routing,table,shr,shr,replica,routing,entry,primary,routing,shr,primary,update,shard,state,primary,routing,new,term,shard,listener,primary,replica,syncer,resync,shard,new,action,listener,primary,replica,syncer,resync,task,override,public,void,on,response,primary,replica,syncer,resync,task,resync,task,listener,on,response,resync,task,fut,on,response,resync,task,override,public,void,on,failure,exception,e,listener,on,failure,e,fut,on,failure,e,current,cluster,state,version,increment,and,get,active,ids,routing,table,collections,empty,set,return,fut
ESIndexLevelReplicationTestCase -> ReplicationTargets -> synchronized void addReplica(IndexShard replica);1540486836;This does not modify the replication targets, but only adds a replica to the list._If the targets is updated to include the given replica, a replication action would_be able to find this replica to execute write requests on it.;synchronized void addReplica(IndexShard replica) {_            replicas.add(replica)__        };this,does,not,modify,the,replication,targets,but,only,adds,a,replica,to,the,list,if,the,targets,is,updated,to,include,the,given,replica,a,replication,action,would,be,able,to,find,this,replica,to,execute,write,requests,on,it;synchronized,void,add,replica,index,shard,replica,replicas,add,replica
ESIndexLevelReplicationTestCase -> ReplicationTargets -> synchronized void addReplica(IndexShard replica);1541092382;This does not modify the replication targets, but only adds a replica to the list._If the targets is updated to include the given replica, a replication action would_be able to find this replica to execute write requests on it.;synchronized void addReplica(IndexShard replica) {_            replicas.add(replica)__        };this,does,not,modify,the,replication,targets,but,only,adds,a,replica,to,the,list,if,the,targets,is,updated,to,include,the,given,replica,a,replication,action,would,be,able,to,find,this,replica,to,execute,write,requests,on,it;synchronized,void,add,replica,index,shard,replica,replicas,add,replica
ESIndexLevelReplicationTestCase -> ReplicationTargets -> synchronized void addReplica(IndexShard replica);1550499044;This does not modify the replication targets, but only adds a replica to the list._If the targets is updated to include the given replica, a replication action would_be able to find this replica to execute write requests on it.;synchronized void addReplica(IndexShard replica) {_            replicas.add(replica)__        };this,does,not,modify,the,replication,targets,but,only,adds,a,replica,to,the,list,if,the,targets,is,updated,to,include,the,given,replica,a,replication,action,would,be,able,to,find,this,replica,to,execute,write,requests,on,it;synchronized,void,add,replica,index,shard,replica,replicas,add,replica
ESIndexLevelReplicationTestCase -> ReplicationTargets -> synchronized void addReplica(IndexShard replica);1550668107;This does not modify the replication targets, but only adds a replica to the list._If the targets is updated to include the given replica, a replication action would_be able to find this replica to execute write requests on it.;synchronized void addReplica(IndexShard replica) {_            replicas.add(replica)__        };this,does,not,modify,the,replication,targets,but,only,adds,a,replica,to,the,list,if,the,targets,is,updated,to,include,the,given,replica,a,replication,action,would,be,able,to,find,this,replica,to,execute,write,requests,on,it;synchronized,void,add,replica,index,shard,replica,replicas,add,replica
ESIndexLevelReplicationTestCase -> ReplicationTargets -> synchronized void addReplica(IndexShard replica);1551132475;This does not modify the replication targets, but only adds a replica to the list._If the targets is updated to include the given replica, a replication action would_be able to find this replica to execute write requests on it.;synchronized void addReplica(IndexShard replica) {_            replicas.add(replica)__        };this,does,not,modify,the,replication,targets,but,only,adds,a,replica,to,the,list,if,the,targets,is,updated,to,include,the,given,replica,a,replication,action,would,be,able,to,find,this,replica,to,execute,write,requests,on,it;synchronized,void,add,replica,index,shard,replica,replicas,add,replica
ESIndexLevelReplicationTestCase -> void indexOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception;1528762805;indexes the given requests on the supplied replica shard;void indexOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception {_        executeShardBulkOnReplica(request, replica, group.primary.getPrimaryTerm(), group.primary.getGlobalCheckpoint())__    };indexes,the,given,requests,on,the,supplied,replica,shard;void,index,on,replica,bulk,shard,request,request,replication,group,group,index,shard,replica,throws,exception,execute,shard,bulk,on,replica,request,replica,group,primary,get,primary,term,group,primary,get,global,checkpoint
ESIndexLevelReplicationTestCase -> void indexOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception;1528977744;indexes the given requests on the supplied replica shard;void indexOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception {_        executeShardBulkOnReplica(request, replica, group.primary.getPrimaryTerm(), group.primary.getGlobalCheckpoint())__    };indexes,the,given,requests,on,the,supplied,replica,shard;void,index,on,replica,bulk,shard,request,request,replication,group,group,index,shard,replica,throws,exception,execute,shard,bulk,on,replica,request,replica,group,primary,get,primary,term,group,primary,get,global,checkpoint
ESIndexLevelReplicationTestCase -> void indexOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception;1531910483;indexes the given requests on the supplied replica shard;void indexOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception {_        executeShardBulkOnReplica(request, replica, group.primary.getPrimaryTerm(), group.primary.getGlobalCheckpoint())__    };indexes,the,given,requests,on,the,supplied,replica,shard;void,index,on,replica,bulk,shard,request,request,replication,group,group,index,shard,replica,throws,exception,execute,shard,bulk,on,replica,request,replica,group,primary,get,primary,term,group,primary,get,global,checkpoint
ESIndexLevelReplicationTestCase -> void indexOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception;1532434432;indexes the given requests on the supplied replica shard;void indexOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception {_        executeShardBulkOnReplica(request, replica, group.primary.getPrimaryTerm(), group.primary.getGlobalCheckpoint())__    };indexes,the,given,requests,on,the,supplied,replica,shard;void,index,on,replica,bulk,shard,request,request,replication,group,group,index,shard,replica,throws,exception,execute,shard,bulk,on,replica,request,replica,group,primary,get,primary,term,group,primary,get,global,checkpoint
ESIndexLevelReplicationTestCase -> void indexOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception;1533295538;indexes the given requests on the supplied replica shard;void indexOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception {_        indexOnReplica(request, group, replica, group.primary.getPendingPrimaryTerm())__    };indexes,the,given,requests,on,the,supplied,replica,shard;void,index,on,replica,bulk,shard,request,request,replication,group,group,index,shard,replica,throws,exception,index,on,replica,request,group,replica,group,primary,get,pending,primary,term
ESIndexLevelReplicationTestCase -> void indexOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception;1533921794;indexes the given requests on the supplied replica shard;void indexOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception {_        indexOnReplica(request, group, replica, group.primary.getPendingPrimaryTerm())__    };indexes,the,given,requests,on,the,supplied,replica,shard;void,index,on,replica,bulk,shard,request,request,replication,group,group,index,shard,replica,throws,exception,index,on,replica,request,group,replica,group,primary,get,pending,primary,term
ESIndexLevelReplicationTestCase -> void indexOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception;1535383145;indexes the given requests on the supplied replica shard;void indexOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception {_        indexOnReplica(request, group, replica, group.primary.getPendingPrimaryTerm())__    };indexes,the,given,requests,on,the,supplied,replica,shard;void,index,on,replica,bulk,shard,request,request,replication,group,group,index,shard,replica,throws,exception,index,on,replica,request,group,replica,group,primary,get,pending,primary,term
ESIndexLevelReplicationTestCase -> void indexOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception;1535405719;indexes the given requests on the supplied replica shard;void indexOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception {_        indexOnReplica(request, group, replica, group.primary.getPendingPrimaryTerm())__    };indexes,the,given,requests,on,the,supplied,replica,shard;void,index,on,replica,bulk,shard,request,request,replication,group,group,index,shard,replica,throws,exception,index,on,replica,request,group,replica,group,primary,get,pending,primary,term
ESIndexLevelReplicationTestCase -> void indexOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception;1535723122;indexes the given requests on the supplied replica shard;void indexOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception {_        indexOnReplica(request, group, replica, group.primary.getPendingPrimaryTerm())__    };indexes,the,given,requests,on,the,supplied,replica,shard;void,index,on,replica,bulk,shard,request,request,replication,group,group,index,shard,replica,throws,exception,index,on,replica,request,group,replica,group,primary,get,pending,primary,term
ESIndexLevelReplicationTestCase -> void indexOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception;1536611444;indexes the given requests on the supplied replica shard;void indexOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception {_        indexOnReplica(request, group, replica, group.primary.getPendingPrimaryTerm())__    };indexes,the,given,requests,on,the,supplied,replica,shard;void,index,on,replica,bulk,shard,request,request,replication,group,group,index,shard,replica,throws,exception,index,on,replica,request,group,replica,group,primary,get,pending,primary,term
ESIndexLevelReplicationTestCase -> void indexOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception;1536828374;indexes the given requests on the supplied replica shard;void indexOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception {_        indexOnReplica(request, group, replica, group.primary.getPendingPrimaryTerm())__    };indexes,the,given,requests,on,the,supplied,replica,shard;void,index,on,replica,bulk,shard,request,request,replication,group,group,index,shard,replica,throws,exception,index,on,replica,request,group,replica,group,primary,get,pending,primary,term
ESIndexLevelReplicationTestCase -> void indexOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception;1537806831;indexes the given requests on the supplied replica shard;void indexOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception {_        indexOnReplica(request, group, replica, group.primary.getPendingPrimaryTerm())__    };indexes,the,given,requests,on,the,supplied,replica,shard;void,index,on,replica,bulk,shard,request,request,replication,group,group,index,shard,replica,throws,exception,index,on,replica,request,group,replica,group,primary,get,pending,primary,term
ESIndexLevelReplicationTestCase -> void indexOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception;1538067637;indexes the given requests on the supplied replica shard;void indexOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception {_        indexOnReplica(request, group, replica, group.primary.getPendingPrimaryTerm())__    };indexes,the,given,requests,on,the,supplied,replica,shard;void,index,on,replica,bulk,shard,request,request,replication,group,group,index,shard,replica,throws,exception,index,on,replica,request,group,replica,group,primary,get,pending,primary,term
ESIndexLevelReplicationTestCase -> void indexOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception;1539615817;indexes the given requests on the supplied replica shard;void indexOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception {_        indexOnReplica(request, group, replica, group.primary.getPendingPrimaryTerm())__    };indexes,the,given,requests,on,the,supplied,replica,shard;void,index,on,replica,bulk,shard,request,request,replication,group,group,index,shard,replica,throws,exception,index,on,replica,request,group,replica,group,primary,get,pending,primary,term
ESIndexLevelReplicationTestCase -> void indexOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception;1539815831;indexes the given requests on the supplied replica shard;void indexOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception {_        indexOnReplica(request, group, replica, group.primary.getPendingPrimaryTerm())__    };indexes,the,given,requests,on,the,supplied,replica,shard;void,index,on,replica,bulk,shard,request,request,replication,group,group,index,shard,replica,throws,exception,index,on,replica,request,group,replica,group,primary,get,pending,primary,term
ESIndexLevelReplicationTestCase -> void indexOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception;1540486836;indexes the given requests on the supplied replica shard;void indexOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception {_        indexOnReplica(request, group, replica, group.primary.getPendingPrimaryTerm())__    };indexes,the,given,requests,on,the,supplied,replica,shard;void,index,on,replica,bulk,shard,request,request,replication,group,group,index,shard,replica,throws,exception,index,on,replica,request,group,replica,group,primary,get,pending,primary,term
ESIndexLevelReplicationTestCase -> void indexOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception;1541092382;indexes the given requests on the supplied replica shard;void indexOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception {_        indexOnReplica(request, group, replica, group.primary.getPendingPrimaryTerm())__    };indexes,the,given,requests,on,the,supplied,replica,shard;void,index,on,replica,bulk,shard,request,request,replication,group,group,index,shard,replica,throws,exception,index,on,replica,request,group,replica,group,primary,get,pending,primary,term
ESIndexLevelReplicationTestCase -> void indexOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception;1550499044;indexes the given requests on the supplied replica shard;void indexOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception {_        indexOnReplica(request, group, replica, group.primary.getPendingPrimaryTerm())__    };indexes,the,given,requests,on,the,supplied,replica,shard;void,index,on,replica,bulk,shard,request,request,replication,group,group,index,shard,replica,throws,exception,index,on,replica,request,group,replica,group,primary,get,pending,primary,term
ESIndexLevelReplicationTestCase -> void indexOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception;1550668107;indexes the given requests on the supplied replica shard;void indexOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception {_        indexOnReplica(request, group, replica, group.primary.getPendingPrimaryTerm())__    };indexes,the,given,requests,on,the,supplied,replica,shard;void,index,on,replica,bulk,shard,request,request,replication,group,group,index,shard,replica,throws,exception,index,on,replica,request,group,replica,group,primary,get,pending,primary,term
ESIndexLevelReplicationTestCase -> void indexOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception;1551132475;indexes the given requests on the supplied replica shard;void indexOnReplica(BulkShardRequest request, ReplicationGroup group, IndexShard replica) throws Exception {_        indexOnReplica(request, group, replica, group.primary.getPendingPrimaryTerm())__    };indexes,the,given,requests,on,the,supplied,replica,shard;void,index,on,replica,bulk,shard,request,request,replication,group,group,index,shard,replica,throws,exception,index,on,replica,request,group,replica,group,primary,get,pending,primary,term
ESIndexLevelReplicationTestCase -> BulkShardRequest deleteOnPrimary(DeleteRequest request, IndexShard primary) throws Exception;1528762805;Executes the delete request on the primary, and modifies it for replicas.;BulkShardRequest deleteOnPrimary(DeleteRequest request, IndexShard primary) throws Exception {_        return executeReplicationRequestOnPrimary(primary, request)__    };executes,the,delete,request,on,the,primary,and,modifies,it,for,replicas;bulk,shard,request,delete,on,primary,delete,request,request,index,shard,primary,throws,exception,return,execute,replication,request,on,primary,primary,request
ESIndexLevelReplicationTestCase -> BulkShardRequest deleteOnPrimary(DeleteRequest request, IndexShard primary) throws Exception;1528977744;Executes the delete request on the primary, and modifies it for replicas.;BulkShardRequest deleteOnPrimary(DeleteRequest request, IndexShard primary) throws Exception {_        return executeReplicationRequestOnPrimary(primary, request)__    };executes,the,delete,request,on,the,primary,and,modifies,it,for,replicas;bulk,shard,request,delete,on,primary,delete,request,request,index,shard,primary,throws,exception,return,execute,replication,request,on,primary,primary,request
ESIndexLevelReplicationTestCase -> BulkShardRequest deleteOnPrimary(DeleteRequest request, IndexShard primary) throws Exception;1531910483;Executes the delete request on the primary, and modifies it for replicas.;BulkShardRequest deleteOnPrimary(DeleteRequest request, IndexShard primary) throws Exception {_        return executeReplicationRequestOnPrimary(primary, request)__    };executes,the,delete,request,on,the,primary,and,modifies,it,for,replicas;bulk,shard,request,delete,on,primary,delete,request,request,index,shard,primary,throws,exception,return,execute,replication,request,on,primary,primary,request
ESIndexLevelReplicationTestCase -> BulkShardRequest deleteOnPrimary(DeleteRequest request, IndexShard primary) throws Exception;1532434432;Executes the delete request on the primary, and modifies it for replicas.;BulkShardRequest deleteOnPrimary(DeleteRequest request, IndexShard primary) throws Exception {_        return executeReplicationRequestOnPrimary(primary, request)__    };executes,the,delete,request,on,the,primary,and,modifies,it,for,replicas;bulk,shard,request,delete,on,primary,delete,request,request,index,shard,primary,throws,exception,return,execute,replication,request,on,primary,primary,request
ESIndexLevelReplicationTestCase -> BulkShardRequest deleteOnPrimary(DeleteRequest request, IndexShard primary) throws Exception;1533295538;Executes the delete request on the primary, and modifies it for replicas.;BulkShardRequest deleteOnPrimary(DeleteRequest request, IndexShard primary) throws Exception {_        return executeReplicationRequestOnPrimary(primary, request)__    };executes,the,delete,request,on,the,primary,and,modifies,it,for,replicas;bulk,shard,request,delete,on,primary,delete,request,request,index,shard,primary,throws,exception,return,execute,replication,request,on,primary,primary,request
ESIndexLevelReplicationTestCase -> BulkShardRequest deleteOnPrimary(DeleteRequest request, IndexShard primary) throws Exception;1533921794;Executes the delete request on the primary, and modifies it for replicas.;BulkShardRequest deleteOnPrimary(DeleteRequest request, IndexShard primary) throws Exception {_        return executeReplicationRequestOnPrimary(primary, request)__    };executes,the,delete,request,on,the,primary,and,modifies,it,for,replicas;bulk,shard,request,delete,on,primary,delete,request,request,index,shard,primary,throws,exception,return,execute,replication,request,on,primary,primary,request
ESIndexLevelReplicationTestCase -> BulkShardRequest deleteOnPrimary(DeleteRequest request, IndexShard primary) throws Exception;1535383145;Executes the delete request on the primary, and modifies it for replicas.;BulkShardRequest deleteOnPrimary(DeleteRequest request, IndexShard primary) throws Exception {_        return executeReplicationRequestOnPrimary(primary, request)__    };executes,the,delete,request,on,the,primary,and,modifies,it,for,replicas;bulk,shard,request,delete,on,primary,delete,request,request,index,shard,primary,throws,exception,return,execute,replication,request,on,primary,primary,request
ESIndexLevelReplicationTestCase -> BulkShardRequest deleteOnPrimary(DeleteRequest request, IndexShard primary) throws Exception;1535405719;Executes the delete request on the primary, and modifies it for replicas.;BulkShardRequest deleteOnPrimary(DeleteRequest request, IndexShard primary) throws Exception {_        return executeReplicationRequestOnPrimary(primary, request)__    };executes,the,delete,request,on,the,primary,and,modifies,it,for,replicas;bulk,shard,request,delete,on,primary,delete,request,request,index,shard,primary,throws,exception,return,execute,replication,request,on,primary,primary,request
ESIndexLevelReplicationTestCase -> BulkShardRequest deleteOnPrimary(DeleteRequest request, IndexShard primary) throws Exception;1535723122;Executes the delete request on the primary, and modifies it for replicas.;BulkShardRequest deleteOnPrimary(DeleteRequest request, IndexShard primary) throws Exception {_        return executeReplicationRequestOnPrimary(primary, request)__    };executes,the,delete,request,on,the,primary,and,modifies,it,for,replicas;bulk,shard,request,delete,on,primary,delete,request,request,index,shard,primary,throws,exception,return,execute,replication,request,on,primary,primary,request
ESIndexLevelReplicationTestCase -> BulkShardRequest deleteOnPrimary(DeleteRequest request, IndexShard primary) throws Exception;1536611444;Executes the delete request on the primary, and modifies it for replicas.;BulkShardRequest deleteOnPrimary(DeleteRequest request, IndexShard primary) throws Exception {_        return executeReplicationRequestOnPrimary(primary, request)__    };executes,the,delete,request,on,the,primary,and,modifies,it,for,replicas;bulk,shard,request,delete,on,primary,delete,request,request,index,shard,primary,throws,exception,return,execute,replication,request,on,primary,primary,request
ESIndexLevelReplicationTestCase -> BulkShardRequest deleteOnPrimary(DeleteRequest request, IndexShard primary) throws Exception;1536828374;Executes the delete request on the primary, and modifies it for replicas.;BulkShardRequest deleteOnPrimary(DeleteRequest request, IndexShard primary) throws Exception {_        return executeReplicationRequestOnPrimary(primary, request)__    };executes,the,delete,request,on,the,primary,and,modifies,it,for,replicas;bulk,shard,request,delete,on,primary,delete,request,request,index,shard,primary,throws,exception,return,execute,replication,request,on,primary,primary,request
ESIndexLevelReplicationTestCase -> BulkShardRequest deleteOnPrimary(DeleteRequest request, IndexShard primary) throws Exception;1537806831;Executes the delete request on the primary, and modifies it for replicas.;BulkShardRequest deleteOnPrimary(DeleteRequest request, IndexShard primary) throws Exception {_        return executeReplicationRequestOnPrimary(primary, request)__    };executes,the,delete,request,on,the,primary,and,modifies,it,for,replicas;bulk,shard,request,delete,on,primary,delete,request,request,index,shard,primary,throws,exception,return,execute,replication,request,on,primary,primary,request
ESIndexLevelReplicationTestCase -> BulkShardRequest deleteOnPrimary(DeleteRequest request, IndexShard primary) throws Exception;1538067637;Executes the delete request on the primary, and modifies it for replicas.;BulkShardRequest deleteOnPrimary(DeleteRequest request, IndexShard primary) throws Exception {_        return executeReplicationRequestOnPrimary(primary, request)__    };executes,the,delete,request,on,the,primary,and,modifies,it,for,replicas;bulk,shard,request,delete,on,primary,delete,request,request,index,shard,primary,throws,exception,return,execute,replication,request,on,primary,primary,request
ESIndexLevelReplicationTestCase -> BulkShardRequest deleteOnPrimary(DeleteRequest request, IndexShard primary) throws Exception;1539615817;Executes the delete request on the primary, and modifies it for replicas.;BulkShardRequest deleteOnPrimary(DeleteRequest request, IndexShard primary) throws Exception {_        return executeReplicationRequestOnPrimary(primary, request)__    };executes,the,delete,request,on,the,primary,and,modifies,it,for,replicas;bulk,shard,request,delete,on,primary,delete,request,request,index,shard,primary,throws,exception,return,execute,replication,request,on,primary,primary,request
ESIndexLevelReplicationTestCase -> BulkShardRequest deleteOnPrimary(DeleteRequest request, IndexShard primary) throws Exception;1539815831;Executes the delete request on the primary, and modifies it for replicas.;BulkShardRequest deleteOnPrimary(DeleteRequest request, IndexShard primary) throws Exception {_        return executeReplicationRequestOnPrimary(primary, request)__    };executes,the,delete,request,on,the,primary,and,modifies,it,for,replicas;bulk,shard,request,delete,on,primary,delete,request,request,index,shard,primary,throws,exception,return,execute,replication,request,on,primary,primary,request
ESIndexLevelReplicationTestCase -> BulkShardRequest deleteOnPrimary(DeleteRequest request, IndexShard primary) throws Exception;1540486836;Executes the delete request on the primary, and modifies it for replicas.;BulkShardRequest deleteOnPrimary(DeleteRequest request, IndexShard primary) throws Exception {_        return executeReplicationRequestOnPrimary(primary, request)__    };executes,the,delete,request,on,the,primary,and,modifies,it,for,replicas;bulk,shard,request,delete,on,primary,delete,request,request,index,shard,primary,throws,exception,return,execute,replication,request,on,primary,primary,request
ESIndexLevelReplicationTestCase -> BulkShardRequest deleteOnPrimary(DeleteRequest request, IndexShard primary) throws Exception;1541092382;Executes the delete request on the primary, and modifies it for replicas.;BulkShardRequest deleteOnPrimary(DeleteRequest request, IndexShard primary) throws Exception {_        return executeReplicationRequestOnPrimary(primary, request)__    };executes,the,delete,request,on,the,primary,and,modifies,it,for,replicas;bulk,shard,request,delete,on,primary,delete,request,request,index,shard,primary,throws,exception,return,execute,replication,request,on,primary,primary,request
ESIndexLevelReplicationTestCase -> BulkShardRequest deleteOnPrimary(DeleteRequest request, IndexShard primary) throws Exception;1550499044;Executes the delete request on the primary, and modifies it for replicas.;BulkShardRequest deleteOnPrimary(DeleteRequest request, IndexShard primary) throws Exception {_        return executeReplicationRequestOnPrimary(primary, request)__    };executes,the,delete,request,on,the,primary,and,modifies,it,for,replicas;bulk,shard,request,delete,on,primary,delete,request,request,index,shard,primary,throws,exception,return,execute,replication,request,on,primary,primary,request
ESIndexLevelReplicationTestCase -> BulkShardRequest deleteOnPrimary(DeleteRequest request, IndexShard primary) throws Exception;1550668107;Executes the delete request on the primary, and modifies it for replicas.;BulkShardRequest deleteOnPrimary(DeleteRequest request, IndexShard primary) throws Exception {_        return executeReplicationRequestOnPrimary(primary, request)__    };executes,the,delete,request,on,the,primary,and,modifies,it,for,replicas;bulk,shard,request,delete,on,primary,delete,request,request,index,shard,primary,throws,exception,return,execute,replication,request,on,primary,primary,request
ESIndexLevelReplicationTestCase -> BulkShardRequest deleteOnPrimary(DeleteRequest request, IndexShard primary) throws Exception;1551132475;Executes the delete request on the primary, and modifies it for replicas.;BulkShardRequest deleteOnPrimary(DeleteRequest request, IndexShard primary) throws Exception {_        return executeReplicationRequestOnPrimary(primary, request)__    };executes,the,delete,request,on,the,primary,and,modifies,it,for,replicas;bulk,shard,request,delete,on,primary,delete,request,request,index,shard,primary,throws,exception,return,execute,replication,request,on,primary,primary,request
