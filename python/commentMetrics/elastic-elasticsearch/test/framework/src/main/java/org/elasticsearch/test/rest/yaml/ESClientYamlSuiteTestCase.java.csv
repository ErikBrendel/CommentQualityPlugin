# id;timestamp;commentText;codeText;commentWords;codeWords
ESClientYamlSuiteTestCase -> private List<Node> sniffHostMetadata() throws IOException;1529687475;Sniff the cluster for host metadata.;private List<Node> sniffHostMetadata() throws IOException {_        ElasticsearchNodesSniffer.Scheme scheme =_            ElasticsearchNodesSniffer.Scheme.valueOf(getProtocol().toUpperCase(Locale.ROOT))__        ElasticsearchNodesSniffer sniffer = new ElasticsearchNodesSniffer(_                adminClient(), ElasticsearchNodesSniffer.DEFAULT_SNIFF_REQUEST_TIMEOUT, scheme)__        return sniffer.sniff()__    };sniff,the,cluster,for,host,metadata;private,list,node,sniff,host,metadata,throws,ioexception,elasticsearch,nodes,sniffer,scheme,scheme,elasticsearch,nodes,sniffer,scheme,value,of,get,protocol,to,upper,case,locale,root,elasticsearch,nodes,sniffer,sniffer,new,elasticsearch,nodes,sniffer,admin,client,elasticsearch,nodes,sniffer,scheme,return,sniffer,sniff
ESClientYamlSuiteTestCase -> private List<Node> sniffHostMetadata() throws IOException;1531179852;Sniff the cluster for host metadata.;private List<Node> sniffHostMetadata() throws IOException {_        ElasticsearchNodesSniffer.Scheme scheme =_            ElasticsearchNodesSniffer.Scheme.valueOf(getProtocol().toUpperCase(Locale.ROOT))__        ElasticsearchNodesSniffer sniffer = new ElasticsearchNodesSniffer(_                adminClient(), ElasticsearchNodesSniffer.DEFAULT_SNIFF_REQUEST_TIMEOUT, scheme)__        return sniffer.sniff()__    };sniff,the,cluster,for,host,metadata;private,list,node,sniff,host,metadata,throws,ioexception,elasticsearch,nodes,sniffer,scheme,scheme,elasticsearch,nodes,sniffer,scheme,value,of,get,protocol,to,upper,case,locale,root,elasticsearch,nodes,sniffer,sniffer,new,elasticsearch,nodes,sniffer,admin,client,elasticsearch,nodes,sniffer,scheme,return,sniffer,sniff
ESClientYamlSuiteTestCase -> private List<Node> sniffHostMetadata() throws IOException;1531382259;Sniff the cluster for host metadata.;private List<Node> sniffHostMetadata() throws IOException {_        ElasticsearchNodesSniffer.Scheme scheme =_            ElasticsearchNodesSniffer.Scheme.valueOf(getProtocol().toUpperCase(Locale.ROOT))__        ElasticsearchNodesSniffer sniffer = new ElasticsearchNodesSniffer(_                adminClient(), ElasticsearchNodesSniffer.DEFAULT_SNIFF_REQUEST_TIMEOUT, scheme)__        return sniffer.sniff()__    };sniff,the,cluster,for,host,metadata;private,list,node,sniff,host,metadata,throws,ioexception,elasticsearch,nodes,sniffer,scheme,scheme,elasticsearch,nodes,sniffer,scheme,value,of,get,protocol,to,upper,case,locale,root,elasticsearch,nodes,sniffer,sniffer,new,elasticsearch,nodes,sniffer,admin,client,elasticsearch,nodes,sniffer,scheme,return,sniffer,sniff
ESClientYamlSuiteTestCase -> protected final RestClientBuilder getClientBuilderWithSniffedHosts() throws IOException;1534176840;Sniff the cluster for host metadata and return a_{@link RestClientBuilder} for a client with that metadata.;protected final RestClientBuilder getClientBuilderWithSniffedHosts() throws IOException {_        ElasticsearchNodesSniffer.Scheme scheme =_            ElasticsearchNodesSniffer.Scheme.valueOf(getProtocol().toUpperCase(Locale.ROOT))__        ElasticsearchNodesSniffer sniffer = new ElasticsearchNodesSniffer(_                adminClient(), ElasticsearchNodesSniffer.DEFAULT_SNIFF_REQUEST_TIMEOUT, scheme)__        RestClientBuilder builder = RestClient.builder(sniffer.sniff().toArray(new Node[0]))__        configureClient(builder, restClientSettings())__        return builder__    };sniff,the,cluster,for,host,metadata,and,return,a,link,rest,client,builder,for,a,client,with,that,metadata;protected,final,rest,client,builder,get,client,builder,with,sniffed,hosts,throws,ioexception,elasticsearch,nodes,sniffer,scheme,scheme,elasticsearch,nodes,sniffer,scheme,value,of,get,protocol,to,upper,case,locale,root,elasticsearch,nodes,sniffer,sniffer,new,elasticsearch,nodes,sniffer,admin,client,elasticsearch,nodes,sniffer,scheme,rest,client,builder,builder,rest,client,builder,sniffer,sniff,to,array,new,node,0,configure,client,builder,rest,client,settings,return,builder
ESClientYamlSuiteTestCase -> protected final RestClientBuilder getClientBuilderWithSniffedHosts() throws IOException;1540238977;Sniff the cluster for host metadata and return a_{@link RestClientBuilder} for a client with that metadata.;protected final RestClientBuilder getClientBuilderWithSniffedHosts() throws IOException {_        ElasticsearchNodesSniffer.Scheme scheme =_            ElasticsearchNodesSniffer.Scheme.valueOf(getProtocol().toUpperCase(Locale.ROOT))__        ElasticsearchNodesSniffer sniffer = new ElasticsearchNodesSniffer(_                adminClient(), ElasticsearchNodesSniffer.DEFAULT_SNIFF_REQUEST_TIMEOUT, scheme)__        RestClientBuilder builder = RestClient.builder(sniffer.sniff().toArray(new Node[0]))__        configureClient(builder, restClientSettings())__        return builder__    };sniff,the,cluster,for,host,metadata,and,return,a,link,rest,client,builder,for,a,client,with,that,metadata;protected,final,rest,client,builder,get,client,builder,with,sniffed,hosts,throws,ioexception,elasticsearch,nodes,sniffer,scheme,scheme,elasticsearch,nodes,sniffer,scheme,value,of,get,protocol,to,upper,case,locale,root,elasticsearch,nodes,sniffer,sniffer,new,elasticsearch,nodes,sniffer,admin,client,elasticsearch,nodes,sniffer,scheme,rest,client,builder,builder,rest,client,builder,sniffer,sniff,to,array,new,node,0,configure,client,builder,rest,client,settings,return,builder
ESClientYamlSuiteTestCase -> protected final RestClientBuilder getClientBuilderWithSniffedHosts() throws IOException;1540486836;Sniff the cluster for host metadata and return a_{@link RestClientBuilder} for a client with that metadata.;protected final RestClientBuilder getClientBuilderWithSniffedHosts() throws IOException {_        ElasticsearchNodesSniffer.Scheme scheme =_            ElasticsearchNodesSniffer.Scheme.valueOf(getProtocol().toUpperCase(Locale.ROOT))__        ElasticsearchNodesSniffer sniffer = new ElasticsearchNodesSniffer(_                adminClient(), ElasticsearchNodesSniffer.DEFAULT_SNIFF_REQUEST_TIMEOUT, scheme)__        RestClientBuilder builder = RestClient.builder(sniffer.sniff().toArray(new Node[0]))__        configureClient(builder, restClientSettings())__        return builder__    };sniff,the,cluster,for,host,metadata,and,return,a,link,rest,client,builder,for,a,client,with,that,metadata;protected,final,rest,client,builder,get,client,builder,with,sniffed,hosts,throws,ioexception,elasticsearch,nodes,sniffer,scheme,scheme,elasticsearch,nodes,sniffer,scheme,value,of,get,protocol,to,upper,case,locale,root,elasticsearch,nodes,sniffer,sniffer,new,elasticsearch,nodes,sniffer,admin,client,elasticsearch,nodes,sniffer,scheme,rest,client,builder,builder,rest,client,builder,sniffer,sniff,to,array,new,node,0,configure,client,builder,rest,client,settings,return,builder
ESClientYamlSuiteTestCase -> protected final RestClientBuilder getClientBuilderWithSniffedHosts() throws IOException;1540912197;Sniff the cluster for host metadata and return a_{@link RestClientBuilder} for a client with that metadata.;protected final RestClientBuilder getClientBuilderWithSniffedHosts() throws IOException {_        ElasticsearchNodesSniffer.Scheme scheme =_            ElasticsearchNodesSniffer.Scheme.valueOf(getProtocol().toUpperCase(Locale.ROOT))__        ElasticsearchNodesSniffer sniffer = new ElasticsearchNodesSniffer(_                adminClient(), ElasticsearchNodesSniffer.DEFAULT_SNIFF_REQUEST_TIMEOUT, scheme)__        RestClientBuilder builder = RestClient.builder(sniffer.sniff().toArray(new Node[0]))__        configureClient(builder, restClientSettings())__        return builder__    };sniff,the,cluster,for,host,metadata,and,return,a,link,rest,client,builder,for,a,client,with,that,metadata;protected,final,rest,client,builder,get,client,builder,with,sniffed,hosts,throws,ioexception,elasticsearch,nodes,sniffer,scheme,scheme,elasticsearch,nodes,sniffer,scheme,value,of,get,protocol,to,upper,case,locale,root,elasticsearch,nodes,sniffer,sniffer,new,elasticsearch,nodes,sniffer,admin,client,elasticsearch,nodes,sniffer,scheme,rest,client,builder,builder,rest,client,builder,sniffer,sniff,to,array,new,node,0,configure,client,builder,rest,client,settings,return,builder
ESClientYamlSuiteTestCase -> protected final RestClientBuilder getClientBuilderWithSniffedHosts() throws IOException;1544448720;Sniff the cluster for host metadata and return a_{@link RestClientBuilder} for a client with that metadata.;protected final RestClientBuilder getClientBuilderWithSniffedHosts() throws IOException {_        ElasticsearchNodesSniffer.Scheme scheme =_            ElasticsearchNodesSniffer.Scheme.valueOf(getProtocol().toUpperCase(Locale.ROOT))__        ElasticsearchNodesSniffer sniffer = new ElasticsearchNodesSniffer(_                adminClient(), ElasticsearchNodesSniffer.DEFAULT_SNIFF_REQUEST_TIMEOUT, scheme)__        RestClientBuilder builder = RestClient.builder(sniffer.sniff().toArray(new Node[0]))__        configureClient(builder, restClientSettings())__        return builder__    };sniff,the,cluster,for,host,metadata,and,return,a,link,rest,client,builder,for,a,client,with,that,metadata;protected,final,rest,client,builder,get,client,builder,with,sniffed,hosts,throws,ioexception,elasticsearch,nodes,sniffer,scheme,scheme,elasticsearch,nodes,sniffer,scheme,value,of,get,protocol,to,upper,case,locale,root,elasticsearch,nodes,sniffer,sniffer,new,elasticsearch,nodes,sniffer,admin,client,elasticsearch,nodes,sniffer,scheme,rest,client,builder,builder,rest,client,builder,sniffer,sniff,to,array,new,node,0,configure,client,builder,rest,client,settings,return,builder
ESClientYamlSuiteTestCase -> protected final RestClientBuilder getClientBuilderWithSniffedHosts() throws IOException;1547479364;Sniff the cluster for host metadata and return a_{@link RestClientBuilder} for a client with that metadata.;protected final RestClientBuilder getClientBuilderWithSniffedHosts() throws IOException {_        ElasticsearchNodesSniffer.Scheme scheme =_            ElasticsearchNodesSniffer.Scheme.valueOf(getProtocol().toUpperCase(Locale.ROOT))__        ElasticsearchNodesSniffer sniffer = new ElasticsearchNodesSniffer(_                adminClient(), ElasticsearchNodesSniffer.DEFAULT_SNIFF_REQUEST_TIMEOUT, scheme)__        RestClientBuilder builder = RestClient.builder(sniffer.sniff().toArray(new Node[0]))__        configureClient(builder, restClientSettings())__        return builder__    };sniff,the,cluster,for,host,metadata,and,return,a,link,rest,client,builder,for,a,client,with,that,metadata;protected,final,rest,client,builder,get,client,builder,with,sniffed,hosts,throws,ioexception,elasticsearch,nodes,sniffer,scheme,scheme,elasticsearch,nodes,sniffer,scheme,value,of,get,protocol,to,upper,case,locale,root,elasticsearch,nodes,sniffer,sniffer,new,elasticsearch,nodes,sniffer,admin,client,elasticsearch,nodes,sniffer,scheme,rest,client,builder,builder,rest,client,builder,sniffer,sniff,to,array,new,node,0,configure,client,builder,rest,client,settings,return,builder
ESClientYamlSuiteTestCase -> static Map<String, Set<Path>> loadSuites(String... paths) throws Exception;1524684173;Find all yaml suites that match the given list of paths from the root test path.;static Map<String, Set<Path>> loadSuites(String... paths) throws Exception {_        Map<String, Set<Path>> files = new HashMap<>()__        Path root = PathUtils.get(ESClientYamlSuiteTestCase.class.getResource(TESTS_PATH).toURI())__        for (String strPath : paths) {_            Path path = root.resolve(strPath)__            if (Files.isDirectory(path)) {_                Files.walk(path).forEach(file -> {_                    if (file.toString().endsWith(".yml")) {_                        addSuite(root, file, files)__                    } else if (file.toString().endsWith(".yaml")) {_                        throw new IllegalArgumentException("yaml files are no longer supported: " + file)__                    }_                })__            } else {_                path = root.resolve(strPath + ".yml")__                assert Files.exists(path)__                addSuite(root, path, files)__            }_        }_        return files__    };find,all,yaml,suites,that,match,the,given,list,of,paths,from,the,root,test,path;static,map,string,set,path,load,suites,string,paths,throws,exception,map,string,set,path,files,new,hash,map,path,root,path,utils,get,esclient,yaml,suite,test,case,class,get,resource,to,uri,for,string,str,path,paths,path,path,root,resolve,str,path,if,files,is,directory,path,files,walk,path,for,each,file,if,file,to,string,ends,with,yml,add,suite,root,file,files,else,if,file,to,string,ends,with,yaml,throw,new,illegal,argument,exception,yaml,files,are,no,longer,supported,file,else,path,root,resolve,str,path,yml,assert,files,exists,path,add,suite,root,path,files,return,files
ESClientYamlSuiteTestCase -> static Map<String, Set<Path>> loadSuites(String... paths) throws Exception;1526029249;Find all yaml suites that match the given list of paths from the root test path.;static Map<String, Set<Path>> loadSuites(String... paths) throws Exception {_        Map<String, Set<Path>> files = new HashMap<>()__        Path root = PathUtils.get(ESClientYamlSuiteTestCase.class.getResource(TESTS_PATH).toURI())__        for (String strPath : paths) {_            Path path = root.resolve(strPath)__            if (Files.isDirectory(path)) {_                Files.walk(path).forEach(file -> {_                    if (file.toString().endsWith(".yml")) {_                        addSuite(root, file, files)__                    } else if (file.toString().endsWith(".yaml")) {_                        throw new IllegalArgumentException("yaml files are no longer supported: " + file)__                    }_                })__            } else {_                path = root.resolve(strPath + ".yml")__                assert Files.exists(path)__                addSuite(root, path, files)__            }_        }_        return files__    };find,all,yaml,suites,that,match,the,given,list,of,paths,from,the,root,test,path;static,map,string,set,path,load,suites,string,paths,throws,exception,map,string,set,path,files,new,hash,map,path,root,path,utils,get,esclient,yaml,suite,test,case,class,get,resource,to,uri,for,string,str,path,paths,path,path,root,resolve,str,path,if,files,is,directory,path,files,walk,path,for,each,file,if,file,to,string,ends,with,yml,add,suite,root,file,files,else,if,file,to,string,ends,with,yaml,throw,new,illegal,argument,exception,yaml,files,are,no,longer,supported,file,else,path,root,resolve,str,path,yml,assert,files,exists,path,add,suite,root,path,files,return,files
ESClientYamlSuiteTestCase -> static Map<String, Set<Path>> loadSuites(String... paths) throws Exception;1526374795;Find all yaml suites that match the given list of paths from the root test path.;static Map<String, Set<Path>> loadSuites(String... paths) throws Exception {_        Map<String, Set<Path>> files = new HashMap<>()__        Path root = PathUtils.get(ESClientYamlSuiteTestCase.class.getResource(TESTS_PATH).toURI())__        for (String strPath : paths) {_            Path path = root.resolve(strPath)__            if (Files.isDirectory(path)) {_                Files.walk(path).forEach(file -> {_                    if (file.toString().endsWith(".yml")) {_                        addSuite(root, file, files)__                    } else if (file.toString().endsWith(".yaml")) {_                        throw new IllegalArgumentException("yaml files are no longer supported: " + file)__                    }_                })__            } else {_                path = root.resolve(strPath + ".yml")__                assert Files.exists(path)__                addSuite(root, path, files)__            }_        }_        return files__    };find,all,yaml,suites,that,match,the,given,list,of,paths,from,the,root,test,path;static,map,string,set,path,load,suites,string,paths,throws,exception,map,string,set,path,files,new,hash,map,path,root,path,utils,get,esclient,yaml,suite,test,case,class,get,resource,to,uri,for,string,str,path,paths,path,path,root,resolve,str,path,if,files,is,directory,path,files,walk,path,for,each,file,if,file,to,string,ends,with,yml,add,suite,root,file,files,else,if,file,to,string,ends,with,yaml,throw,new,illegal,argument,exception,yaml,files,are,no,longer,supported,file,else,path,root,resolve,str,path,yml,assert,files,exists,path,add,suite,root,path,files,return,files
ESClientYamlSuiteTestCase -> static Map<String, Set<Path>> loadSuites(String... paths) throws Exception;1526449283;Find all yaml suites that match the given list of paths from the root test path.;static Map<String, Set<Path>> loadSuites(String... paths) throws Exception {_        Map<String, Set<Path>> files = new HashMap<>()__        Path root = PathUtils.get(ESClientYamlSuiteTestCase.class.getResource(TESTS_PATH).toURI())__        for (String strPath : paths) {_            Path path = root.resolve(strPath)__            if (Files.isDirectory(path)) {_                Files.walk(path).forEach(file -> {_                    if (file.toString().endsWith(".yml")) {_                        addSuite(root, file, files)__                    } else if (file.toString().endsWith(".yaml")) {_                        throw new IllegalArgumentException("yaml files are no longer supported: " + file)__                    }_                })__            } else {_                path = root.resolve(strPath + ".yml")__                assert Files.exists(path)__                addSuite(root, path, files)__            }_        }_        return files__    };find,all,yaml,suites,that,match,the,given,list,of,paths,from,the,root,test,path;static,map,string,set,path,load,suites,string,paths,throws,exception,map,string,set,path,files,new,hash,map,path,root,path,utils,get,esclient,yaml,suite,test,case,class,get,resource,to,uri,for,string,str,path,paths,path,path,root,resolve,str,path,if,files,is,directory,path,files,walk,path,for,each,file,if,file,to,string,ends,with,yml,add,suite,root,file,files,else,if,file,to,string,ends,with,yaml,throw,new,illegal,argument,exception,yaml,files,are,no,longer,supported,file,else,path,root,resolve,str,path,yml,assert,files,exists,path,add,suite,root,path,files,return,files
ESClientYamlSuiteTestCase -> static Map<String, Set<Path>> loadSuites(String... paths) throws Exception;1527096592;Find all yaml suites that match the given list of paths from the root test path.;static Map<String, Set<Path>> loadSuites(String... paths) throws Exception {_        Map<String, Set<Path>> files = new HashMap<>()__        Path root = PathUtils.get(ESClientYamlSuiteTestCase.class.getResource(TESTS_PATH).toURI())__        for (String strPath : paths) {_            Path path = root.resolve(strPath)__            if (Files.isDirectory(path)) {_                Files.walk(path).forEach(file -> {_                    if (file.toString().endsWith(".yml")) {_                        addSuite(root, file, files)__                    } else if (file.toString().endsWith(".yaml")) {_                        throw new IllegalArgumentException("yaml files are no longer supported: " + file)__                    }_                })__            } else {_                path = root.resolve(strPath + ".yml")__                assert Files.exists(path)__                addSuite(root, path, files)__            }_        }_        return files__    };find,all,yaml,suites,that,match,the,given,list,of,paths,from,the,root,test,path;static,map,string,set,path,load,suites,string,paths,throws,exception,map,string,set,path,files,new,hash,map,path,root,path,utils,get,esclient,yaml,suite,test,case,class,get,resource,to,uri,for,string,str,path,paths,path,path,root,resolve,str,path,if,files,is,directory,path,files,walk,path,for,each,file,if,file,to,string,ends,with,yml,add,suite,root,file,files,else,if,file,to,string,ends,with,yaml,throw,new,illegal,argument,exception,yaml,files,are,no,longer,supported,file,else,path,root,resolve,str,path,yml,assert,files,exists,path,add,suite,root,path,files,return,files
ESClientYamlSuiteTestCase -> static Map<String, Set<Path>> loadSuites(String... paths) throws Exception;1527840262;Find all yaml suites that match the given list of paths from the root test path.;static Map<String, Set<Path>> loadSuites(String... paths) throws Exception {_        Map<String, Set<Path>> files = new HashMap<>()__        Path root = PathUtils.get(ESClientYamlSuiteTestCase.class.getResource(TESTS_PATH).toURI())__        for (String strPath : paths) {_            Path path = root.resolve(strPath)__            if (Files.isDirectory(path)) {_                Files.walk(path).forEach(file -> {_                    if (file.toString().endsWith(".yml")) {_                        addSuite(root, file, files)__                    } else if (file.toString().endsWith(".yaml")) {_                        throw new IllegalArgumentException("yaml files are no longer supported: " + file)__                    }_                })__            } else {_                path = root.resolve(strPath + ".yml")__                assert Files.exists(path)__                addSuite(root, path, files)__            }_        }_        return files__    };find,all,yaml,suites,that,match,the,given,list,of,paths,from,the,root,test,path;static,map,string,set,path,load,suites,string,paths,throws,exception,map,string,set,path,files,new,hash,map,path,root,path,utils,get,esclient,yaml,suite,test,case,class,get,resource,to,uri,for,string,str,path,paths,path,path,root,resolve,str,path,if,files,is,directory,path,files,walk,path,for,each,file,if,file,to,string,ends,with,yml,add,suite,root,file,files,else,if,file,to,string,ends,with,yaml,throw,new,illegal,argument,exception,yaml,files,are,no,longer,supported,file,else,path,root,resolve,str,path,yml,assert,files,exists,path,add,suite,root,path,files,return,files
ESClientYamlSuiteTestCase -> static Map<String, Set<Path>> loadSuites(String... paths) throws Exception;1528167589;Find all yaml suites that match the given list of paths from the root test path.;static Map<String, Set<Path>> loadSuites(String... paths) throws Exception {_        Map<String, Set<Path>> files = new HashMap<>()__        Path root = PathUtils.get(ESClientYamlSuiteTestCase.class.getResource(TESTS_PATH).toURI())__        for (String strPath : paths) {_            Path path = root.resolve(strPath)__            if (Files.isDirectory(path)) {_                Files.walk(path).forEach(file -> {_                    if (file.toString().endsWith(".yml")) {_                        addSuite(root, file, files)__                    } else if (file.toString().endsWith(".yaml")) {_                        throw new IllegalArgumentException("yaml files are no longer supported: " + file)__                    }_                })__            } else {_                path = root.resolve(strPath + ".yml")__                assert Files.exists(path)__                addSuite(root, path, files)__            }_        }_        return files__    };find,all,yaml,suites,that,match,the,given,list,of,paths,from,the,root,test,path;static,map,string,set,path,load,suites,string,paths,throws,exception,map,string,set,path,files,new,hash,map,path,root,path,utils,get,esclient,yaml,suite,test,case,class,get,resource,to,uri,for,string,str,path,paths,path,path,root,resolve,str,path,if,files,is,directory,path,files,walk,path,for,each,file,if,file,to,string,ends,with,yml,add,suite,root,file,files,else,if,file,to,string,ends,with,yaml,throw,new,illegal,argument,exception,yaml,files,are,no,longer,supported,file,else,path,root,resolve,str,path,yml,assert,files,exists,path,add,suite,root,path,files,return,files
ESClientYamlSuiteTestCase -> static Map<String, Set<Path>> loadSuites(String... paths) throws Exception;1528762805;Find all yaml suites that match the given list of paths from the root test path.;static Map<String, Set<Path>> loadSuites(String... paths) throws Exception {_        Map<String, Set<Path>> files = new HashMap<>()__        Path root = PathUtils.get(ESClientYamlSuiteTestCase.class.getResource(TESTS_PATH).toURI())__        for (String strPath : paths) {_            Path path = root.resolve(strPath)__            if (Files.isDirectory(path)) {_                Files.walk(path).forEach(file -> {_                    if (file.toString().endsWith(".yml")) {_                        addSuite(root, file, files)__                    } else if (file.toString().endsWith(".yaml")) {_                        throw new IllegalArgumentException("yaml files are no longer supported: " + file)__                    }_                })__            } else {_                path = root.resolve(strPath + ".yml")__                assert Files.exists(path)__                addSuite(root, path, files)__            }_        }_        return files__    };find,all,yaml,suites,that,match,the,given,list,of,paths,from,the,root,test,path;static,map,string,set,path,load,suites,string,paths,throws,exception,map,string,set,path,files,new,hash,map,path,root,path,utils,get,esclient,yaml,suite,test,case,class,get,resource,to,uri,for,string,str,path,paths,path,path,root,resolve,str,path,if,files,is,directory,path,files,walk,path,for,each,file,if,file,to,string,ends,with,yml,add,suite,root,file,files,else,if,file,to,string,ends,with,yaml,throw,new,illegal,argument,exception,yaml,files,are,no,longer,supported,file,else,path,root,resolve,str,path,yml,assert,files,exists,path,add,suite,root,path,files,return,files
ESClientYamlSuiteTestCase -> static Map<String, Set<Path>> loadSuites(String... paths) throws Exception;1529687475;Find all yaml suites that match the given list of paths from the root test path.;static Map<String, Set<Path>> loadSuites(String... paths) throws Exception {_        Map<String, Set<Path>> files = new HashMap<>()__        Path root = PathUtils.get(ESClientYamlSuiteTestCase.class.getResource(TESTS_PATH).toURI())__        for (String strPath : paths) {_            Path path = root.resolve(strPath)__            if (Files.isDirectory(path)) {_                Files.walk(path).forEach(file -> {_                    if (file.toString().endsWith(".yml")) {_                        addSuite(root, file, files)__                    } else if (file.toString().endsWith(".yaml")) {_                        throw new IllegalArgumentException("yaml files are no longer supported: " + file)__                    }_                })__            } else {_                path = root.resolve(strPath + ".yml")__                assert Files.exists(path)__                addSuite(root, path, files)__            }_        }_        return files__    };find,all,yaml,suites,that,match,the,given,list,of,paths,from,the,root,test,path;static,map,string,set,path,load,suites,string,paths,throws,exception,map,string,set,path,files,new,hash,map,path,root,path,utils,get,esclient,yaml,suite,test,case,class,get,resource,to,uri,for,string,str,path,paths,path,path,root,resolve,str,path,if,files,is,directory,path,files,walk,path,for,each,file,if,file,to,string,ends,with,yml,add,suite,root,file,files,else,if,file,to,string,ends,with,yaml,throw,new,illegal,argument,exception,yaml,files,are,no,longer,supported,file,else,path,root,resolve,str,path,yml,assert,files,exists,path,add,suite,root,path,files,return,files
ESClientYamlSuiteTestCase -> static Map<String, Set<Path>> loadSuites(String... paths) throws Exception;1531179852;Find all yaml suites that match the given list of paths from the root test path.;static Map<String, Set<Path>> loadSuites(String... paths) throws Exception {_        Map<String, Set<Path>> files = new HashMap<>()__        Path root = PathUtils.get(ESClientYamlSuiteTestCase.class.getResource(TESTS_PATH).toURI())__        for (String strPath : paths) {_            Path path = root.resolve(strPath)__            if (Files.isDirectory(path)) {_                Files.walk(path).forEach(file -> {_                    if (file.toString().endsWith(".yml")) {_                        addSuite(root, file, files)__                    } else if (file.toString().endsWith(".yaml")) {_                        throw new IllegalArgumentException("yaml files are no longer supported: " + file)__                    }_                })__            } else {_                path = root.resolve(strPath + ".yml")__                assert Files.exists(path)__                addSuite(root, path, files)__            }_        }_        return files__    };find,all,yaml,suites,that,match,the,given,list,of,paths,from,the,root,test,path;static,map,string,set,path,load,suites,string,paths,throws,exception,map,string,set,path,files,new,hash,map,path,root,path,utils,get,esclient,yaml,suite,test,case,class,get,resource,to,uri,for,string,str,path,paths,path,path,root,resolve,str,path,if,files,is,directory,path,files,walk,path,for,each,file,if,file,to,string,ends,with,yml,add,suite,root,file,files,else,if,file,to,string,ends,with,yaml,throw,new,illegal,argument,exception,yaml,files,are,no,longer,supported,file,else,path,root,resolve,str,path,yml,assert,files,exists,path,add,suite,root,path,files,return,files
ESClientYamlSuiteTestCase -> static Map<String, Set<Path>> loadSuites(String... paths) throws Exception;1531382259;Find all yaml suites that match the given list of paths from the root test path.;static Map<String, Set<Path>> loadSuites(String... paths) throws Exception {_        Map<String, Set<Path>> files = new HashMap<>()__        Path root = PathUtils.get(ESClientYamlSuiteTestCase.class.getResource(TESTS_PATH).toURI())__        for (String strPath : paths) {_            Path path = root.resolve(strPath)__            if (Files.isDirectory(path)) {_                Files.walk(path).forEach(file -> {_                    if (file.toString().endsWith(".yml")) {_                        addSuite(root, file, files)__                    } else if (file.toString().endsWith(".yaml")) {_                        throw new IllegalArgumentException("yaml files are no longer supported: " + file)__                    }_                })__            } else {_                path = root.resolve(strPath + ".yml")__                assert Files.exists(path)__                addSuite(root, path, files)__            }_        }_        return files__    };find,all,yaml,suites,that,match,the,given,list,of,paths,from,the,root,test,path;static,map,string,set,path,load,suites,string,paths,throws,exception,map,string,set,path,files,new,hash,map,path,root,path,utils,get,esclient,yaml,suite,test,case,class,get,resource,to,uri,for,string,str,path,paths,path,path,root,resolve,str,path,if,files,is,directory,path,files,walk,path,for,each,file,if,file,to,string,ends,with,yml,add,suite,root,file,files,else,if,file,to,string,ends,with,yaml,throw,new,illegal,argument,exception,yaml,files,are,no,longer,supported,file,else,path,root,resolve,str,path,yml,assert,files,exists,path,add,suite,root,path,files,return,files
ESClientYamlSuiteTestCase -> static Map<String, Set<Path>> loadSuites(String... paths) throws Exception;1534176840;Find all yaml suites that match the given list of paths from the root test path.;static Map<String, Set<Path>> loadSuites(String... paths) throws Exception {_        Map<String, Set<Path>> files = new HashMap<>()__        Path root = PathUtils.get(ESClientYamlSuiteTestCase.class.getResource(TESTS_PATH).toURI())__        for (String strPath : paths) {_            Path path = root.resolve(strPath)__            if (Files.isDirectory(path)) {_                Files.walk(path).forEach(file -> {_                    if (file.toString().endsWith(".yml")) {_                        addSuite(root, file, files)__                    } else if (file.toString().endsWith(".yaml")) {_                        throw new IllegalArgumentException("yaml files are no longer supported: " + file)__                    }_                })__            } else {_                path = root.resolve(strPath + ".yml")__                assert Files.exists(path)__                addSuite(root, path, files)__            }_        }_        return files__    };find,all,yaml,suites,that,match,the,given,list,of,paths,from,the,root,test,path;static,map,string,set,path,load,suites,string,paths,throws,exception,map,string,set,path,files,new,hash,map,path,root,path,utils,get,esclient,yaml,suite,test,case,class,get,resource,to,uri,for,string,str,path,paths,path,path,root,resolve,str,path,if,files,is,directory,path,files,walk,path,for,each,file,if,file,to,string,ends,with,yml,add,suite,root,file,files,else,if,file,to,string,ends,with,yaml,throw,new,illegal,argument,exception,yaml,files,are,no,longer,supported,file,else,path,root,resolve,str,path,yml,assert,files,exists,path,add,suite,root,path,files,return,files
ESClientYamlSuiteTestCase -> static Map<String, Set<Path>> loadSuites(String... paths) throws Exception;1540238977;Find all yaml suites that match the given list of paths from the root test path.;static Map<String, Set<Path>> loadSuites(String... paths) throws Exception {_        Map<String, Set<Path>> files = new HashMap<>()__        Path root = PathUtils.get(ESClientYamlSuiteTestCase.class.getResource(TESTS_PATH).toURI())__        for (String strPath : paths) {_            Path path = root.resolve(strPath)__            if (Files.isDirectory(path)) {_                Files.walk(path).forEach(file -> {_                    if (file.toString().endsWith(".yml")) {_                        addSuite(root, file, files)__                    } else if (file.toString().endsWith(".yaml")) {_                        throw new IllegalArgumentException("yaml files are no longer supported: " + file)__                    }_                })__            } else {_                path = root.resolve(strPath + ".yml")__                assert Files.exists(path)__                addSuite(root, path, files)__            }_        }_        return files__    };find,all,yaml,suites,that,match,the,given,list,of,paths,from,the,root,test,path;static,map,string,set,path,load,suites,string,paths,throws,exception,map,string,set,path,files,new,hash,map,path,root,path,utils,get,esclient,yaml,suite,test,case,class,get,resource,to,uri,for,string,str,path,paths,path,path,root,resolve,str,path,if,files,is,directory,path,files,walk,path,for,each,file,if,file,to,string,ends,with,yml,add,suite,root,file,files,else,if,file,to,string,ends,with,yaml,throw,new,illegal,argument,exception,yaml,files,are,no,longer,supported,file,else,path,root,resolve,str,path,yml,assert,files,exists,path,add,suite,root,path,files,return,files
ESClientYamlSuiteTestCase -> static Map<String, Set<Path>> loadSuites(String... paths) throws Exception;1540486836;Find all yaml suites that match the given list of paths from the root test path.;static Map<String, Set<Path>> loadSuites(String... paths) throws Exception {_        Map<String, Set<Path>> files = new HashMap<>()__        Path root = PathUtils.get(ESClientYamlSuiteTestCase.class.getResource(TESTS_PATH).toURI())__        for (String strPath : paths) {_            Path path = root.resolve(strPath)__            if (Files.isDirectory(path)) {_                Files.walk(path).forEach(file -> {_                    if (file.toString().endsWith(".yml")) {_                        addSuite(root, file, files)__                    } else if (file.toString().endsWith(".yaml")) {_                        throw new IllegalArgumentException("yaml files are no longer supported: " + file)__                    }_                })__            } else {_                path = root.resolve(strPath + ".yml")__                assert Files.exists(path)__                addSuite(root, path, files)__            }_        }_        return files__    };find,all,yaml,suites,that,match,the,given,list,of,paths,from,the,root,test,path;static,map,string,set,path,load,suites,string,paths,throws,exception,map,string,set,path,files,new,hash,map,path,root,path,utils,get,esclient,yaml,suite,test,case,class,get,resource,to,uri,for,string,str,path,paths,path,path,root,resolve,str,path,if,files,is,directory,path,files,walk,path,for,each,file,if,file,to,string,ends,with,yml,add,suite,root,file,files,else,if,file,to,string,ends,with,yaml,throw,new,illegal,argument,exception,yaml,files,are,no,longer,supported,file,else,path,root,resolve,str,path,yml,assert,files,exists,path,add,suite,root,path,files,return,files
ESClientYamlSuiteTestCase -> static Map<String, Set<Path>> loadSuites(String... paths) throws Exception;1540912197;Find all yaml suites that match the given list of paths from the root test path.;static Map<String, Set<Path>> loadSuites(String... paths) throws Exception {_        Map<String, Set<Path>> files = new HashMap<>()__        Path root = PathUtils.get(ESClientYamlSuiteTestCase.class.getResource(TESTS_PATH).toURI())__        for (String strPath : paths) {_            Path path = root.resolve(strPath)__            if (Files.isDirectory(path)) {_                Files.walk(path).forEach(file -> {_                    if (file.toString().endsWith(".yml")) {_                        addSuite(root, file, files)__                    } else if (file.toString().endsWith(".yaml")) {_                        throw new IllegalArgumentException("yaml files are no longer supported: " + file)__                    }_                })__            } else {_                path = root.resolve(strPath + ".yml")__                assert Files.exists(path)__                addSuite(root, path, files)__            }_        }_        return files__    };find,all,yaml,suites,that,match,the,given,list,of,paths,from,the,root,test,path;static,map,string,set,path,load,suites,string,paths,throws,exception,map,string,set,path,files,new,hash,map,path,root,path,utils,get,esclient,yaml,suite,test,case,class,get,resource,to,uri,for,string,str,path,paths,path,path,root,resolve,str,path,if,files,is,directory,path,files,walk,path,for,each,file,if,file,to,string,ends,with,yml,add,suite,root,file,files,else,if,file,to,string,ends,with,yaml,throw,new,illegal,argument,exception,yaml,files,are,no,longer,supported,file,else,path,root,resolve,str,path,yml,assert,files,exists,path,add,suite,root,path,files,return,files
ESClientYamlSuiteTestCase -> static Map<String, Set<Path>> loadSuites(String... paths) throws Exception;1544448720;Find all yaml suites that match the given list of paths from the root test path.;static Map<String, Set<Path>> loadSuites(String... paths) throws Exception {_        Map<String, Set<Path>> files = new HashMap<>()__        Path root = PathUtils.get(ESClientYamlSuiteTestCase.class.getResource(TESTS_PATH).toURI())__        for (String strPath : paths) {_            Path path = root.resolve(strPath)__            if (Files.isDirectory(path)) {_                Files.walk(path).forEach(file -> {_                    if (file.toString().endsWith(".yml")) {_                        addSuite(root, file, files)__                    } else if (file.toString().endsWith(".yaml")) {_                        throw new IllegalArgumentException("yaml files are no longer supported: " + file)__                    }_                })__            } else {_                path = root.resolve(strPath + ".yml")__                assert Files.exists(path)__                addSuite(root, path, files)__            }_        }_        return files__    };find,all,yaml,suites,that,match,the,given,list,of,paths,from,the,root,test,path;static,map,string,set,path,load,suites,string,paths,throws,exception,map,string,set,path,files,new,hash,map,path,root,path,utils,get,esclient,yaml,suite,test,case,class,get,resource,to,uri,for,string,str,path,paths,path,path,root,resolve,str,path,if,files,is,directory,path,files,walk,path,for,each,file,if,file,to,string,ends,with,yml,add,suite,root,file,files,else,if,file,to,string,ends,with,yaml,throw,new,illegal,argument,exception,yaml,files,are,no,longer,supported,file,else,path,root,resolve,str,path,yml,assert,files,exists,path,add,suite,root,path,files,return,files
ESClientYamlSuiteTestCase -> static Map<String, Set<Path>> loadSuites(String... paths) throws Exception;1547479364;Find all yaml suites that match the given list of paths from the root test path.;static Map<String, Set<Path>> loadSuites(String... paths) throws Exception {_        Map<String, Set<Path>> files = new HashMap<>()__        Path root = PathUtils.get(ESClientYamlSuiteTestCase.class.getResource(TESTS_PATH).toURI())__        for (String strPath : paths) {_            Path path = root.resolve(strPath)__            if (Files.isDirectory(path)) {_                Files.walk(path).forEach(file -> {_                    if (file.toString().endsWith(".yml")) {_                        addSuite(root, file, files)__                    } else if (file.toString().endsWith(".yaml")) {_                        throw new IllegalArgumentException("yaml files are no longer supported: " + file)__                    }_                })__            } else {_                path = root.resolve(strPath + ".yml")__                assert Files.exists(path)__                addSuite(root, path, files)__            }_        }_        return files__    };find,all,yaml,suites,that,match,the,given,list,of,paths,from,the,root,test,path;static,map,string,set,path,load,suites,string,paths,throws,exception,map,string,set,path,files,new,hash,map,path,root,path,utils,get,esclient,yaml,suite,test,case,class,get,resource,to,uri,for,string,str,path,paths,path,path,root,resolve,str,path,if,files,is,directory,path,files,walk,path,for,each,file,if,file,to,string,ends,with,yml,add,suite,root,file,files,else,if,file,to,string,ends,with,yaml,throw,new,illegal,argument,exception,yaml,files,are,no,longer,supported,file,else,path,root,resolve,str,path,yml,assert,files,exists,path,add,suite,root,path,files,return,files
ESClientYamlSuiteTestCase -> private static void addSuite(Path root, Path file, Map<String, Set<Path>> files);1524684173;Add a single suite file to the set of suites.;private static void addSuite(Path root, Path file, Map<String, Set<Path>> files) {_        String groupName = root.relativize(file.getParent()).toString()__        Set<Path> filesSet = files.get(groupName)__        if (filesSet == null) {_            filesSet = new HashSet<>()__            files.put(groupName, filesSet)__        }_        filesSet.add(file)__    };add,a,single,suite,file,to,the,set,of,suites;private,static,void,add,suite,path,root,path,file,map,string,set,path,files,string,group,name,root,relativize,file,get,parent,to,string,set,path,files,set,files,get,group,name,if,files,set,null,files,set,new,hash,set,files,put,group,name,files,set,files,set,add,file
ESClientYamlSuiteTestCase -> private static void addSuite(Path root, Path file, Map<String, Set<Path>> files);1526029249;Add a single suite file to the set of suites.;private static void addSuite(Path root, Path file, Map<String, Set<Path>> files) {_        String groupName = root.relativize(file.getParent()).toString()__        Set<Path> filesSet = files.get(groupName)__        if (filesSet == null) {_            filesSet = new HashSet<>()__            files.put(groupName, filesSet)__        }_        filesSet.add(file)__    };add,a,single,suite,file,to,the,set,of,suites;private,static,void,add,suite,path,root,path,file,map,string,set,path,files,string,group,name,root,relativize,file,get,parent,to,string,set,path,files,set,files,get,group,name,if,files,set,null,files,set,new,hash,set,files,put,group,name,files,set,files,set,add,file
ESClientYamlSuiteTestCase -> private static void addSuite(Path root, Path file, Map<String, Set<Path>> files);1526374795;Add a single suite file to the set of suites.;private static void addSuite(Path root, Path file, Map<String, Set<Path>> files) {_        String groupName = root.relativize(file.getParent()).toString()__        Set<Path> filesSet = files.get(groupName)__        if (filesSet == null) {_            filesSet = new HashSet<>()__            files.put(groupName, filesSet)__        }_        filesSet.add(file)__    };add,a,single,suite,file,to,the,set,of,suites;private,static,void,add,suite,path,root,path,file,map,string,set,path,files,string,group,name,root,relativize,file,get,parent,to,string,set,path,files,set,files,get,group,name,if,files,set,null,files,set,new,hash,set,files,put,group,name,files,set,files,set,add,file
ESClientYamlSuiteTestCase -> private static void addSuite(Path root, Path file, Map<String, Set<Path>> files);1526449283;Add a single suite file to the set of suites.;private static void addSuite(Path root, Path file, Map<String, Set<Path>> files) {_        String groupName = root.relativize(file.getParent()).toString()__        Set<Path> filesSet = files.get(groupName)__        if (filesSet == null) {_            filesSet = new HashSet<>()__            files.put(groupName, filesSet)__        }_        filesSet.add(file)__    };add,a,single,suite,file,to,the,set,of,suites;private,static,void,add,suite,path,root,path,file,map,string,set,path,files,string,group,name,root,relativize,file,get,parent,to,string,set,path,files,set,files,get,group,name,if,files,set,null,files,set,new,hash,set,files,put,group,name,files,set,files,set,add,file
ESClientYamlSuiteTestCase -> private static void addSuite(Path root, Path file, Map<String, Set<Path>> files);1527096592;Add a single suite file to the set of suites.;private static void addSuite(Path root, Path file, Map<String, Set<Path>> files) {_        String groupName = root.relativize(file.getParent()).toString()__        Set<Path> filesSet = files.get(groupName)__        if (filesSet == null) {_            filesSet = new HashSet<>()__            files.put(groupName, filesSet)__        }_        filesSet.add(file)__    };add,a,single,suite,file,to,the,set,of,suites;private,static,void,add,suite,path,root,path,file,map,string,set,path,files,string,group,name,root,relativize,file,get,parent,to,string,set,path,files,set,files,get,group,name,if,files,set,null,files,set,new,hash,set,files,put,group,name,files,set,files,set,add,file
ESClientYamlSuiteTestCase -> private static void addSuite(Path root, Path file, Map<String, Set<Path>> files);1527840262;Add a single suite file to the set of suites.;private static void addSuite(Path root, Path file, Map<String, Set<Path>> files) {_        String groupName = root.relativize(file.getParent()).toString()__        Set<Path> filesSet = files.get(groupName)__        if (filesSet == null) {_            filesSet = new HashSet<>()__            files.put(groupName, filesSet)__        }_        filesSet.add(file)__    };add,a,single,suite,file,to,the,set,of,suites;private,static,void,add,suite,path,root,path,file,map,string,set,path,files,string,group,name,root,relativize,file,get,parent,to,string,set,path,files,set,files,get,group,name,if,files,set,null,files,set,new,hash,set,files,put,group,name,files,set,files,set,add,file
ESClientYamlSuiteTestCase -> private static void addSuite(Path root, Path file, Map<String, Set<Path>> files);1528167589;Add a single suite file to the set of suites.;private static void addSuite(Path root, Path file, Map<String, Set<Path>> files) {_        String groupName = root.relativize(file.getParent()).toString()__        Set<Path> filesSet = files.get(groupName)__        if (filesSet == null) {_            filesSet = new HashSet<>()__            files.put(groupName, filesSet)__        }_        filesSet.add(file)__    };add,a,single,suite,file,to,the,set,of,suites;private,static,void,add,suite,path,root,path,file,map,string,set,path,files,string,group,name,root,relativize,file,get,parent,to,string,set,path,files,set,files,get,group,name,if,files,set,null,files,set,new,hash,set,files,put,group,name,files,set,files,set,add,file
ESClientYamlSuiteTestCase -> private static void addSuite(Path root, Path file, Map<String, Set<Path>> files);1528762805;Add a single suite file to the set of suites.;private static void addSuite(Path root, Path file, Map<String, Set<Path>> files) {_        String groupName = root.relativize(file.getParent()).toString()__        Set<Path> filesSet = files.get(groupName)__        if (filesSet == null) {_            filesSet = new HashSet<>()__            files.put(groupName, filesSet)__        }_        filesSet.add(file)__    };add,a,single,suite,file,to,the,set,of,suites;private,static,void,add,suite,path,root,path,file,map,string,set,path,files,string,group,name,root,relativize,file,get,parent,to,string,set,path,files,set,files,get,group,name,if,files,set,null,files,set,new,hash,set,files,put,group,name,files,set,files,set,add,file
ESClientYamlSuiteTestCase -> private static void addSuite(Path root, Path file, Map<String, Set<Path>> files);1529687475;Add a single suite file to the set of suites.;private static void addSuite(Path root, Path file, Map<String, Set<Path>> files) {_        String groupName = root.relativize(file.getParent()).toString()__        Set<Path> filesSet = files.get(groupName)__        if (filesSet == null) {_            filesSet = new HashSet<>()__            files.put(groupName, filesSet)__        }_        filesSet.add(file)__    };add,a,single,suite,file,to,the,set,of,suites;private,static,void,add,suite,path,root,path,file,map,string,set,path,files,string,group,name,root,relativize,file,get,parent,to,string,set,path,files,set,files,get,group,name,if,files,set,null,files,set,new,hash,set,files,put,group,name,files,set,files,set,add,file
ESClientYamlSuiteTestCase -> private static void addSuite(Path root, Path file, Map<String, Set<Path>> files);1531179852;Add a single suite file to the set of suites.;private static void addSuite(Path root, Path file, Map<String, Set<Path>> files) {_        String groupName = root.relativize(file.getParent()).toString()__        Set<Path> filesSet = files.get(groupName)__        if (filesSet == null) {_            filesSet = new HashSet<>()__            files.put(groupName, filesSet)__        }_        filesSet.add(file)__    };add,a,single,suite,file,to,the,set,of,suites;private,static,void,add,suite,path,root,path,file,map,string,set,path,files,string,group,name,root,relativize,file,get,parent,to,string,set,path,files,set,files,get,group,name,if,files,set,null,files,set,new,hash,set,files,put,group,name,files,set,files,set,add,file
ESClientYamlSuiteTestCase -> private static void addSuite(Path root, Path file, Map<String, Set<Path>> files);1531382259;Add a single suite file to the set of suites.;private static void addSuite(Path root, Path file, Map<String, Set<Path>> files) {_        String groupName = root.relativize(file.getParent()).toString()__        Set<Path> filesSet = files.get(groupName)__        if (filesSet == null) {_            filesSet = new HashSet<>()__            files.put(groupName, filesSet)__        }_        filesSet.add(file)__    };add,a,single,suite,file,to,the,set,of,suites;private,static,void,add,suite,path,root,path,file,map,string,set,path,files,string,group,name,root,relativize,file,get,parent,to,string,set,path,files,set,files,get,group,name,if,files,set,null,files,set,new,hash,set,files,put,group,name,files,set,files,set,add,file
ESClientYamlSuiteTestCase -> private static void addSuite(Path root, Path file, Map<String, Set<Path>> files);1534176840;Add a single suite file to the set of suites.;private static void addSuite(Path root, Path file, Map<String, Set<Path>> files) {_        String groupName = root.relativize(file.getParent()).toString()__        Set<Path> filesSet = files.get(groupName)__        if (filesSet == null) {_            filesSet = new HashSet<>()__            files.put(groupName, filesSet)__        }_        filesSet.add(file)__    };add,a,single,suite,file,to,the,set,of,suites;private,static,void,add,suite,path,root,path,file,map,string,set,path,files,string,group,name,root,relativize,file,get,parent,to,string,set,path,files,set,files,get,group,name,if,files,set,null,files,set,new,hash,set,files,put,group,name,files,set,files,set,add,file
ESClientYamlSuiteTestCase -> private static void addSuite(Path root, Path file, Map<String, Set<Path>> files);1540238977;Add a single suite file to the set of suites.;private static void addSuite(Path root, Path file, Map<String, Set<Path>> files) {_        String groupName = root.relativize(file.getParent()).toString()__        Set<Path> filesSet = files.get(groupName)__        if (filesSet == null) {_            filesSet = new HashSet<>()__            files.put(groupName, filesSet)__        }_        filesSet.add(file)__    };add,a,single,suite,file,to,the,set,of,suites;private,static,void,add,suite,path,root,path,file,map,string,set,path,files,string,group,name,root,relativize,file,get,parent,to,string,set,path,files,set,files,get,group,name,if,files,set,null,files,set,new,hash,set,files,put,group,name,files,set,files,set,add,file
ESClientYamlSuiteTestCase -> private static void addSuite(Path root, Path file, Map<String, Set<Path>> files);1540486836;Add a single suite file to the set of suites.;private static void addSuite(Path root, Path file, Map<String, Set<Path>> files) {_        String groupName = root.relativize(file.getParent()).toString()__        Set<Path> filesSet = files.get(groupName)__        if (filesSet == null) {_            filesSet = new HashSet<>()__            files.put(groupName, filesSet)__        }_        filesSet.add(file)__    };add,a,single,suite,file,to,the,set,of,suites;private,static,void,add,suite,path,root,path,file,map,string,set,path,files,string,group,name,root,relativize,file,get,parent,to,string,set,path,files,set,files,get,group,name,if,files,set,null,files,set,new,hash,set,files,put,group,name,files,set,files,set,add,file
ESClientYamlSuiteTestCase -> private static void addSuite(Path root, Path file, Map<String, Set<Path>> files);1540912197;Add a single suite file to the set of suites.;private static void addSuite(Path root, Path file, Map<String, Set<Path>> files) {_        String groupName = root.relativize(file.getParent()).toString()__        Set<Path> filesSet = files.get(groupName)__        if (filesSet == null) {_            filesSet = new HashSet<>()__            files.put(groupName, filesSet)__        }_        filesSet.add(file)__    };add,a,single,suite,file,to,the,set,of,suites;private,static,void,add,suite,path,root,path,file,map,string,set,path,files,string,group,name,root,relativize,file,get,parent,to,string,set,path,files,set,files,get,group,name,if,files,set,null,files,set,new,hash,set,files,put,group,name,files,set,files,set,add,file
ESClientYamlSuiteTestCase -> private static void addSuite(Path root, Path file, Map<String, Set<Path>> files);1544448720;Add a single suite file to the set of suites.;private static void addSuite(Path root, Path file, Map<String, Set<Path>> files) {_        String groupName = root.relativize(file.getParent()).toString()__        Set<Path> filesSet = files.get(groupName)__        if (filesSet == null) {_            filesSet = new HashSet<>()__            files.put(groupName, filesSet)__        }_        filesSet.add(file)__    };add,a,single,suite,file,to,the,set,of,suites;private,static,void,add,suite,path,root,path,file,map,string,set,path,files,string,group,name,root,relativize,file,get,parent,to,string,set,path,files,set,files,get,group,name,if,files,set,null,files,set,new,hash,set,files,put,group,name,files,set,files,set,add,file
ESClientYamlSuiteTestCase -> private static void addSuite(Path root, Path file, Map<String, Set<Path>> files);1547479364;Add a single suite file to the set of suites.;private static void addSuite(Path root, Path file, Map<String, Set<Path>> files) {_        String groupName = root.relativize(file.getParent()).toString()__        Set<Path> filesSet = files.get(groupName)__        if (filesSet == null) {_            filesSet = new HashSet<>()__            files.put(groupName, filesSet)__        }_        filesSet.add(file)__    };add,a,single,suite,file,to,the,set,of,suites;private,static,void,add,suite,path,root,path,file,map,string,set,path,files,string,group,name,root,relativize,file,get,parent,to,string,set,path,files,set,files,get,group,name,if,files,set,null,files,set,new,hash,set,files,put,group,name,files,set,files,set,add,file
ESClientYamlSuiteTestCase -> private void executeSection(ExecutableSection executableSection);1524684173;Execute an {@link ExecutableSection}, careful to log its place of origin on failure.;private void executeSection(ExecutableSection executableSection) {_        try {_            executableSection.execute(restTestExecutionContext)__        } catch (AssertionError | Exception e) {_            _            logger.info("Stash dump on test failure [{}]",_                    Strings.toString(restTestExecutionContext.stash(), true, true)_                            .replace("\\n", "\n").replace("\\r", "\r").replace("\\t", "\t"))__            if (e instanceof AssertionError) {_                throw new AssertionError(errorMessage(executableSection, e), e)__            } else {_                throw new RuntimeException(errorMessage(executableSection, e), e)__            }_        }_    };execute,an,link,executable,section,careful,to,log,its,place,of,origin,on,failure;private,void,execute,section,executable,section,executable,section,try,executable,section,execute,rest,test,execution,context,catch,assertion,error,exception,e,logger,info,stash,dump,on,test,failure,strings,to,string,rest,test,execution,context,stash,true,true,replace,n,n,replace,r,r,replace,t,t,if,e,instanceof,assertion,error,throw,new,assertion,error,error,message,executable,section,e,e,else,throw,new,runtime,exception,error,message,executable,section,e,e
ESClientYamlSuiteTestCase -> private void executeSection(ExecutableSection executableSection);1526029249;Execute an {@link ExecutableSection}, careful to log its place of origin on failure.;private void executeSection(ExecutableSection executableSection) {_        try {_            executableSection.execute(restTestExecutionContext)__        } catch (AssertionError | Exception e) {_            _            logger.info("Stash dump on test failure [{}]",_                    Strings.toString(restTestExecutionContext.stash(), true, true)_                            .replace("\\n", "\n").replace("\\r", "\r").replace("\\t", "\t"))__            if (e instanceof AssertionError) {_                throw new AssertionError(errorMessage(executableSection, e), e)__            } else {_                throw new RuntimeException(errorMessage(executableSection, e), e)__            }_        }_    };execute,an,link,executable,section,careful,to,log,its,place,of,origin,on,failure;private,void,execute,section,executable,section,executable,section,try,executable,section,execute,rest,test,execution,context,catch,assertion,error,exception,e,logger,info,stash,dump,on,test,failure,strings,to,string,rest,test,execution,context,stash,true,true,replace,n,n,replace,r,r,replace,t,t,if,e,instanceof,assertion,error,throw,new,assertion,error,error,message,executable,section,e,e,else,throw,new,runtime,exception,error,message,executable,section,e,e
ESClientYamlSuiteTestCase -> private void executeSection(ExecutableSection executableSection);1526374795;Execute an {@link ExecutableSection}, careful to log its place of origin on failure.;private void executeSection(ExecutableSection executableSection) {_        try {_            executableSection.execute(restTestExecutionContext)__        } catch (AssertionError | Exception e) {_            _            logger.info("Stash dump on test failure [{}]",_                    Strings.toString(restTestExecutionContext.stash(), true, true)_                            .replace("\\n", "\n").replace("\\r", "\r").replace("\\t", "\t"))__            if (e instanceof AssertionError) {_                throw new AssertionError(errorMessage(executableSection, e), e)__            } else {_                throw new RuntimeException(errorMessage(executableSection, e), e)__            }_        }_    };execute,an,link,executable,section,careful,to,log,its,place,of,origin,on,failure;private,void,execute,section,executable,section,executable,section,try,executable,section,execute,rest,test,execution,context,catch,assertion,error,exception,e,logger,info,stash,dump,on,test,failure,strings,to,string,rest,test,execution,context,stash,true,true,replace,n,n,replace,r,r,replace,t,t,if,e,instanceof,assertion,error,throw,new,assertion,error,error,message,executable,section,e,e,else,throw,new,runtime,exception,error,message,executable,section,e,e
ESClientYamlSuiteTestCase -> private void executeSection(ExecutableSection executableSection);1526449283;Execute an {@link ExecutableSection}, careful to log its place of origin on failure.;private void executeSection(ExecutableSection executableSection) {_        try {_            executableSection.execute(restTestExecutionContext)__        } catch (AssertionError | Exception e) {_            _            logger.info("Stash dump on test failure [{}]",_                    Strings.toString(restTestExecutionContext.stash(), true, true)_                            .replace("\\n", "\n").replace("\\r", "\r").replace("\\t", "\t"))__            if (e instanceof AssertionError) {_                throw new AssertionError(errorMessage(executableSection, e), e)__            } else {_                throw new RuntimeException(errorMessage(executableSection, e), e)__            }_        }_    };execute,an,link,executable,section,careful,to,log,its,place,of,origin,on,failure;private,void,execute,section,executable,section,executable,section,try,executable,section,execute,rest,test,execution,context,catch,assertion,error,exception,e,logger,info,stash,dump,on,test,failure,strings,to,string,rest,test,execution,context,stash,true,true,replace,n,n,replace,r,r,replace,t,t,if,e,instanceof,assertion,error,throw,new,assertion,error,error,message,executable,section,e,e,else,throw,new,runtime,exception,error,message,executable,section,e,e
ESClientYamlSuiteTestCase -> private void executeSection(ExecutableSection executableSection);1527096592;Execute an {@link ExecutableSection}, careful to log its place of origin on failure.;private void executeSection(ExecutableSection executableSection) {_        try {_            executableSection.execute(restTestExecutionContext)__        } catch (AssertionError | Exception e) {_            _            logger.info("Stash dump on test failure [{}]",_                    Strings.toString(restTestExecutionContext.stash(), true, true)_                            .replace("\\n", "\n").replace("\\r", "\r").replace("\\t", "\t"))__            if (e instanceof AssertionError) {_                throw new AssertionError(errorMessage(executableSection, e), e)__            } else {_                throw new RuntimeException(errorMessage(executableSection, e), e)__            }_        }_    };execute,an,link,executable,section,careful,to,log,its,place,of,origin,on,failure;private,void,execute,section,executable,section,executable,section,try,executable,section,execute,rest,test,execution,context,catch,assertion,error,exception,e,logger,info,stash,dump,on,test,failure,strings,to,string,rest,test,execution,context,stash,true,true,replace,n,n,replace,r,r,replace,t,t,if,e,instanceof,assertion,error,throw,new,assertion,error,error,message,executable,section,e,e,else,throw,new,runtime,exception,error,message,executable,section,e,e
ESClientYamlSuiteTestCase -> private void executeSection(ExecutableSection executableSection);1527840262;Execute an {@link ExecutableSection}, careful to log its place of origin on failure.;private void executeSection(ExecutableSection executableSection) {_        try {_            executableSection.execute(restTestExecutionContext)__        } catch (AssertionError | Exception e) {_            _            logger.info("Stash dump on test failure [{}]",_                    Strings.toString(restTestExecutionContext.stash(), true, true)_                            .replace("\\n", "\n").replace("\\r", "\r").replace("\\t", "\t"))__            if (e instanceof AssertionError) {_                throw new AssertionError(errorMessage(executableSection, e), e)__            } else {_                throw new RuntimeException(errorMessage(executableSection, e), e)__            }_        }_    };execute,an,link,executable,section,careful,to,log,its,place,of,origin,on,failure;private,void,execute,section,executable,section,executable,section,try,executable,section,execute,rest,test,execution,context,catch,assertion,error,exception,e,logger,info,stash,dump,on,test,failure,strings,to,string,rest,test,execution,context,stash,true,true,replace,n,n,replace,r,r,replace,t,t,if,e,instanceof,assertion,error,throw,new,assertion,error,error,message,executable,section,e,e,else,throw,new,runtime,exception,error,message,executable,section,e,e
ESClientYamlSuiteTestCase -> private void executeSection(ExecutableSection executableSection);1528167589;Execute an {@link ExecutableSection}, careful to log its place of origin on failure.;private void executeSection(ExecutableSection executableSection) {_        try {_            executableSection.execute(restTestExecutionContext)__        } catch (AssertionError | Exception e) {_            _            logger.info("Stash dump on test failure [{}]",_                    Strings.toString(restTestExecutionContext.stash(), true, true)_                            .replace("\\n", "\n").replace("\\r", "\r").replace("\\t", "\t"))__            if (e instanceof AssertionError) {_                throw new AssertionError(errorMessage(executableSection, e), e)__            } else {_                throw new RuntimeException(errorMessage(executableSection, e), e)__            }_        }_    };execute,an,link,executable,section,careful,to,log,its,place,of,origin,on,failure;private,void,execute,section,executable,section,executable,section,try,executable,section,execute,rest,test,execution,context,catch,assertion,error,exception,e,logger,info,stash,dump,on,test,failure,strings,to,string,rest,test,execution,context,stash,true,true,replace,n,n,replace,r,r,replace,t,t,if,e,instanceof,assertion,error,throw,new,assertion,error,error,message,executable,section,e,e,else,throw,new,runtime,exception,error,message,executable,section,e,e
ESClientYamlSuiteTestCase -> private void executeSection(ExecutableSection executableSection);1528762805;Execute an {@link ExecutableSection}, careful to log its place of origin on failure.;private void executeSection(ExecutableSection executableSection) {_        try {_            executableSection.execute(restTestExecutionContext)__        } catch (AssertionError | Exception e) {_            _            logger.info("Stash dump on test failure [{}]",_                    Strings.toString(restTestExecutionContext.stash(), true, true)_                            .replace("\\n", "\n").replace("\\r", "\r").replace("\\t", "\t"))__            if (e instanceof AssertionError) {_                throw new AssertionError(errorMessage(executableSection, e), e)__            } else {_                throw new RuntimeException(errorMessage(executableSection, e), e)__            }_        }_    };execute,an,link,executable,section,careful,to,log,its,place,of,origin,on,failure;private,void,execute,section,executable,section,executable,section,try,executable,section,execute,rest,test,execution,context,catch,assertion,error,exception,e,logger,info,stash,dump,on,test,failure,strings,to,string,rest,test,execution,context,stash,true,true,replace,n,n,replace,r,r,replace,t,t,if,e,instanceof,assertion,error,throw,new,assertion,error,error,message,executable,section,e,e,else,throw,new,runtime,exception,error,message,executable,section,e,e
ESClientYamlSuiteTestCase -> private void executeSection(ExecutableSection executableSection);1529687475;Execute an {@link ExecutableSection}, careful to log its place of origin on failure.;private void executeSection(ExecutableSection executableSection) {_        try {_            executableSection.execute(restTestExecutionContext)__        } catch (AssertionError | Exception e) {_            _            logger.info("Stash dump on test failure [{}]",_                    Strings.toString(restTestExecutionContext.stash(), true, true)_                            .replace("\\n", "\n").replace("\\r", "\r").replace("\\t", "\t"))__            if (e instanceof AssertionError) {_                throw new AssertionError(errorMessage(executableSection, e), e)__            } else {_                throw new RuntimeException(errorMessage(executableSection, e), e)__            }_        }_    };execute,an,link,executable,section,careful,to,log,its,place,of,origin,on,failure;private,void,execute,section,executable,section,executable,section,try,executable,section,execute,rest,test,execution,context,catch,assertion,error,exception,e,logger,info,stash,dump,on,test,failure,strings,to,string,rest,test,execution,context,stash,true,true,replace,n,n,replace,r,r,replace,t,t,if,e,instanceof,assertion,error,throw,new,assertion,error,error,message,executable,section,e,e,else,throw,new,runtime,exception,error,message,executable,section,e,e
ESClientYamlSuiteTestCase -> private void executeSection(ExecutableSection executableSection);1531179852;Execute an {@link ExecutableSection}, careful to log its place of origin on failure.;private void executeSection(ExecutableSection executableSection) {_        try {_            executableSection.execute(restTestExecutionContext)__        } catch (AssertionError | Exception e) {_            _            logger.info("Stash dump on test failure [{}]",_                    Strings.toString(restTestExecutionContext.stash(), true, true)_                            .replace("\\n", "\n").replace("\\r", "\r").replace("\\t", "\t"))__            if (e instanceof AssertionError) {_                throw new AssertionError(errorMessage(executableSection, e), e)__            } else {_                throw new RuntimeException(errorMessage(executableSection, e), e)__            }_        }_    };execute,an,link,executable,section,careful,to,log,its,place,of,origin,on,failure;private,void,execute,section,executable,section,executable,section,try,executable,section,execute,rest,test,execution,context,catch,assertion,error,exception,e,logger,info,stash,dump,on,test,failure,strings,to,string,rest,test,execution,context,stash,true,true,replace,n,n,replace,r,r,replace,t,t,if,e,instanceof,assertion,error,throw,new,assertion,error,error,message,executable,section,e,e,else,throw,new,runtime,exception,error,message,executable,section,e,e
ESClientYamlSuiteTestCase -> private void executeSection(ExecutableSection executableSection);1531382259;Execute an {@link ExecutableSection}, careful to log its place of origin on failure.;private void executeSection(ExecutableSection executableSection) {_        try {_            executableSection.execute(restTestExecutionContext)__        } catch (AssertionError | Exception e) {_            _            logger.info("Stash dump on test failure [{}]",_                    Strings.toString(restTestExecutionContext.stash(), true, true)_                            .replace("\\n", "\n").replace("\\r", "\r").replace("\\t", "\t"))__            if (e instanceof AssertionError) {_                throw new AssertionError(errorMessage(executableSection, e), e)__            } else {_                throw new RuntimeException(errorMessage(executableSection, e), e)__            }_        }_    };execute,an,link,executable,section,careful,to,log,its,place,of,origin,on,failure;private,void,execute,section,executable,section,executable,section,try,executable,section,execute,rest,test,execution,context,catch,assertion,error,exception,e,logger,info,stash,dump,on,test,failure,strings,to,string,rest,test,execution,context,stash,true,true,replace,n,n,replace,r,r,replace,t,t,if,e,instanceof,assertion,error,throw,new,assertion,error,error,message,executable,section,e,e,else,throw,new,runtime,exception,error,message,executable,section,e,e
ESClientYamlSuiteTestCase -> private void executeSection(ExecutableSection executableSection);1534176840;Execute an {@link ExecutableSection}, careful to log its place of origin on failure.;private void executeSection(ExecutableSection executableSection) {_        try {_            executableSection.execute(restTestExecutionContext)__        } catch (AssertionError | Exception e) {_            _            logger.info("Stash dump on test failure [{}]",_                    Strings.toString(restTestExecutionContext.stash(), true, true)_                            .replace("\\n", "\n").replace("\\r", "\r").replace("\\t", "\t"))__            if (e instanceof AssertionError) {_                throw new AssertionError(errorMessage(executableSection, e), e)__            } else {_                throw new RuntimeException(errorMessage(executableSection, e), e)__            }_        }_    };execute,an,link,executable,section,careful,to,log,its,place,of,origin,on,failure;private,void,execute,section,executable,section,executable,section,try,executable,section,execute,rest,test,execution,context,catch,assertion,error,exception,e,logger,info,stash,dump,on,test,failure,strings,to,string,rest,test,execution,context,stash,true,true,replace,n,n,replace,r,r,replace,t,t,if,e,instanceof,assertion,error,throw,new,assertion,error,error,message,executable,section,e,e,else,throw,new,runtime,exception,error,message,executable,section,e,e
ESClientYamlSuiteTestCase -> private void executeSection(ExecutableSection executableSection);1540238977;Execute an {@link ExecutableSection}, careful to log its place of origin on failure.;private void executeSection(ExecutableSection executableSection) {_        try {_            executableSection.execute(restTestExecutionContext)__        } catch (AssertionError | Exception e) {_            _            logger.info("Stash dump on test failure [{}]",_                    Strings.toString(restTestExecutionContext.stash(), true, true)_                            .replace("\\n", "\n").replace("\\r", "\r").replace("\\t", "\t"))__            if (e instanceof AssertionError) {_                throw new AssertionError(errorMessage(executableSection, e), e)__            } else {_                throw new RuntimeException(errorMessage(executableSection, e), e)__            }_        }_    };execute,an,link,executable,section,careful,to,log,its,place,of,origin,on,failure;private,void,execute,section,executable,section,executable,section,try,executable,section,execute,rest,test,execution,context,catch,assertion,error,exception,e,logger,info,stash,dump,on,test,failure,strings,to,string,rest,test,execution,context,stash,true,true,replace,n,n,replace,r,r,replace,t,t,if,e,instanceof,assertion,error,throw,new,assertion,error,error,message,executable,section,e,e,else,throw,new,runtime,exception,error,message,executable,section,e,e
ESClientYamlSuiteTestCase -> private void executeSection(ExecutableSection executableSection);1540486836;Execute an {@link ExecutableSection}, careful to log its place of origin on failure.;private void executeSection(ExecutableSection executableSection) {_        try {_            executableSection.execute(restTestExecutionContext)__        } catch (AssertionError | Exception e) {_            _            logger.info("Stash dump on test failure [{}]",_                    Strings.toString(restTestExecutionContext.stash(), true, true)_                            .replace("\\n", "\n").replace("\\r", "\r").replace("\\t", "\t"))__            if (e instanceof AssertionError) {_                throw new AssertionError(errorMessage(executableSection, e), e)__            } else {_                throw new RuntimeException(errorMessage(executableSection, e), e)__            }_        }_    };execute,an,link,executable,section,careful,to,log,its,place,of,origin,on,failure;private,void,execute,section,executable,section,executable,section,try,executable,section,execute,rest,test,execution,context,catch,assertion,error,exception,e,logger,info,stash,dump,on,test,failure,strings,to,string,rest,test,execution,context,stash,true,true,replace,n,n,replace,r,r,replace,t,t,if,e,instanceof,assertion,error,throw,new,assertion,error,error,message,executable,section,e,e,else,throw,new,runtime,exception,error,message,executable,section,e,e
ESClientYamlSuiteTestCase -> private void executeSection(ExecutableSection executableSection);1540912197;Execute an {@link ExecutableSection}, careful to log its place of origin on failure.;private void executeSection(ExecutableSection executableSection) {_        try {_            executableSection.execute(restTestExecutionContext)__        } catch (AssertionError | Exception e) {_            _            logger.info("Stash dump on test failure [{}]",_                    Strings.toString(restTestExecutionContext.stash(), true, true)_                            .replace("\\n", "\n").replace("\\r", "\r").replace("\\t", "\t"))__            if (e instanceof AssertionError) {_                throw new AssertionError(errorMessage(executableSection, e), e)__            } else {_                throw new RuntimeException(errorMessage(executableSection, e), e)__            }_        }_    };execute,an,link,executable,section,careful,to,log,its,place,of,origin,on,failure;private,void,execute,section,executable,section,executable,section,try,executable,section,execute,rest,test,execution,context,catch,assertion,error,exception,e,logger,info,stash,dump,on,test,failure,strings,to,string,rest,test,execution,context,stash,true,true,replace,n,n,replace,r,r,replace,t,t,if,e,instanceof,assertion,error,throw,new,assertion,error,error,message,executable,section,e,e,else,throw,new,runtime,exception,error,message,executable,section,e,e
ESClientYamlSuiteTestCase -> private void executeSection(ExecutableSection executableSection);1544448720;Execute an {@link ExecutableSection}, careful to log its place of origin on failure.;private void executeSection(ExecutableSection executableSection) {_        try {_            executableSection.execute(restTestExecutionContext)__        } catch (AssertionError | Exception e) {_            _            logger.info("Stash dump on test failure [{}]",_                    Strings.toString(restTestExecutionContext.stash(), true, true)_                            .replace("\\n", "\n").replace("\\r", "\r").replace("\\t", "\t"))__            if (e instanceof AssertionError) {_                throw new AssertionError(errorMessage(executableSection, e), e)__            } else {_                throw new RuntimeException(errorMessage(executableSection, e), e)__            }_        }_    };execute,an,link,executable,section,careful,to,log,its,place,of,origin,on,failure;private,void,execute,section,executable,section,executable,section,try,executable,section,execute,rest,test,execution,context,catch,assertion,error,exception,e,logger,info,stash,dump,on,test,failure,strings,to,string,rest,test,execution,context,stash,true,true,replace,n,n,replace,r,r,replace,t,t,if,e,instanceof,assertion,error,throw,new,assertion,error,error,message,executable,section,e,e,else,throw,new,runtime,exception,error,message,executable,section,e,e
ESClientYamlSuiteTestCase -> private void executeSection(ExecutableSection executableSection);1547479364;Execute an {@link ExecutableSection}, careful to log its place of origin on failure.;private void executeSection(ExecutableSection executableSection) {_        try {_            executableSection.execute(restTestExecutionContext)__        } catch (AssertionError | Exception e) {_            _            logger.info("Stash dump on test failure [{}]",_                    Strings.toString(restTestExecutionContext.stash(), true, true)_                            .replace("\\n", "\n").replace("\\r", "\r").replace("\\t", "\t"))__            if (e instanceof AssertionError) {_                throw new AssertionError(errorMessage(executableSection, e), e)__            } else {_                throw new RuntimeException(errorMessage(executableSection, e), e)__            }_        }_    };execute,an,link,executable,section,careful,to,log,its,place,of,origin,on,failure;private,void,execute,section,executable,section,executable,section,try,executable,section,execute,rest,test,execution,context,catch,assertion,error,exception,e,logger,info,stash,dump,on,test,failure,strings,to,string,rest,test,execution,context,stash,true,true,replace,n,n,replace,r,r,replace,t,t,if,e,instanceof,assertion,error,throw,new,assertion,error,error,message,executable,section,e,e,else,throw,new,runtime,exception,error,message,executable,section,e,e
ESClientYamlSuiteTestCase -> public static Iterable<Object[]> createParameters(NamedXContentRegistry executeableSectionRegistry) throws Exception;1526029249;Create parameters for this parameterized test.;public static Iterable<Object[]> createParameters(NamedXContentRegistry executeableSectionRegistry) throws Exception {_        String[] paths = resolvePathsProperty(REST_TESTS_SUITE, "")_ _        List<Object[]> tests = new ArrayList<>()__        Map<String, Set<Path>> yamlSuites = loadSuites(paths)__        _        for (String api : yamlSuites.keySet()) {_            List<Path> yamlFiles = new ArrayList<>(yamlSuites.get(api))__            for (Path yamlFile : yamlFiles) {_                ClientYamlTestSuite restTestSuite = ClientYamlTestSuite.parse(executeableSectionRegistry, api, yamlFile)__                for (ClientYamlTestSection testSection : restTestSuite.getTestSections()) {_                    tests.add(new Object[]{ new ClientYamlTestCandidate(restTestSuite, testSection) })__                }_            }_        }__        _        Collections.sort(tests,_            (o1, o2) -> ((ClientYamlTestCandidate)o1[0]).getTestPath().compareTo(((ClientYamlTestCandidate)o2[0]).getTestPath()))__        return tests__    };create,parameters,for,this,parameterized,test;public,static,iterable,object,create,parameters,named,xcontent,registry,executeable,section,registry,throws,exception,string,paths,resolve,paths,property,list,object,tests,new,array,list,map,string,set,path,yaml,suites,load,suites,paths,for,string,api,yaml,suites,key,set,list,path,yaml,files,new,array,list,yaml,suites,get,api,for,path,yaml,file,yaml,files,client,yaml,test,suite,rest,test,suite,client,yaml,test,suite,parse,executeable,section,registry,api,yaml,file,for,client,yaml,test,section,test,section,rest,test,suite,get,test,sections,tests,add,new,object,new,client,yaml,test,candidate,rest,test,suite,test,section,collections,sort,tests,o1,o2,client,yaml,test,candidate,o1,0,get,test,path,compare,to,client,yaml,test,candidate,o2,0,get,test,path,return,tests
ESClientYamlSuiteTestCase -> public static Iterable<Object[]> createParameters(NamedXContentRegistry executeableSectionRegistry) throws Exception;1526374795;Create parameters for this parameterized test.;public static Iterable<Object[]> createParameters(NamedXContentRegistry executeableSectionRegistry) throws Exception {_        String[] paths = resolvePathsProperty(REST_TESTS_SUITE, "")_ _        List<Object[]> tests = new ArrayList<>()__        Map<String, Set<Path>> yamlSuites = loadSuites(paths)__        _        for (String api : yamlSuites.keySet()) {_            List<Path> yamlFiles = new ArrayList<>(yamlSuites.get(api))__            for (Path yamlFile : yamlFiles) {_                ClientYamlTestSuite restTestSuite = ClientYamlTestSuite.parse(executeableSectionRegistry, api, yamlFile)__                for (ClientYamlTestSection testSection : restTestSuite.getTestSections()) {_                    tests.add(new Object[]{ new ClientYamlTestCandidate(restTestSuite, testSection) })__                }_            }_        }__        _        Collections.sort(tests,_            (o1, o2) -> ((ClientYamlTestCandidate)o1[0]).getTestPath().compareTo(((ClientYamlTestCandidate)o2[0]).getTestPath()))__        return tests__    };create,parameters,for,this,parameterized,test;public,static,iterable,object,create,parameters,named,xcontent,registry,executeable,section,registry,throws,exception,string,paths,resolve,paths,property,list,object,tests,new,array,list,map,string,set,path,yaml,suites,load,suites,paths,for,string,api,yaml,suites,key,set,list,path,yaml,files,new,array,list,yaml,suites,get,api,for,path,yaml,file,yaml,files,client,yaml,test,suite,rest,test,suite,client,yaml,test,suite,parse,executeable,section,registry,api,yaml,file,for,client,yaml,test,section,test,section,rest,test,suite,get,test,sections,tests,add,new,object,new,client,yaml,test,candidate,rest,test,suite,test,section,collections,sort,tests,o1,o2,client,yaml,test,candidate,o1,0,get,test,path,compare,to,client,yaml,test,candidate,o2,0,get,test,path,return,tests
ESClientYamlSuiteTestCase -> public static Iterable<Object[]> createParameters(NamedXContentRegistry executeableSectionRegistry) throws Exception;1526449283;Create parameters for this parameterized test.;public static Iterable<Object[]> createParameters(NamedXContentRegistry executeableSectionRegistry) throws Exception {_        String[] paths = resolvePathsProperty(REST_TESTS_SUITE, "")_ _        List<Object[]> tests = new ArrayList<>()__        Map<String, Set<Path>> yamlSuites = loadSuites(paths)__        _        for (String api : yamlSuites.keySet()) {_            List<Path> yamlFiles = new ArrayList<>(yamlSuites.get(api))__            for (Path yamlFile : yamlFiles) {_                ClientYamlTestSuite restTestSuite = ClientYamlTestSuite.parse(executeableSectionRegistry, api, yamlFile)__                for (ClientYamlTestSection testSection : restTestSuite.getTestSections()) {_                    tests.add(new Object[]{ new ClientYamlTestCandidate(restTestSuite, testSection) })__                }_            }_        }__        _        Collections.sort(tests,_            (o1, o2) -> ((ClientYamlTestCandidate)o1[0]).getTestPath().compareTo(((ClientYamlTestCandidate)o2[0]).getTestPath()))__        return tests__    };create,parameters,for,this,parameterized,test;public,static,iterable,object,create,parameters,named,xcontent,registry,executeable,section,registry,throws,exception,string,paths,resolve,paths,property,list,object,tests,new,array,list,map,string,set,path,yaml,suites,load,suites,paths,for,string,api,yaml,suites,key,set,list,path,yaml,files,new,array,list,yaml,suites,get,api,for,path,yaml,file,yaml,files,client,yaml,test,suite,rest,test,suite,client,yaml,test,suite,parse,executeable,section,registry,api,yaml,file,for,client,yaml,test,section,test,section,rest,test,suite,get,test,sections,tests,add,new,object,new,client,yaml,test,candidate,rest,test,suite,test,section,collections,sort,tests,o1,o2,client,yaml,test,candidate,o1,0,get,test,path,compare,to,client,yaml,test,candidate,o2,0,get,test,path,return,tests
ESClientYamlSuiteTestCase -> public static Iterable<Object[]> createParameters(NamedXContentRegistry executeableSectionRegistry) throws Exception;1527096592;Create parameters for this parameterized test.;public static Iterable<Object[]> createParameters(NamedXContentRegistry executeableSectionRegistry) throws Exception {_        String[] paths = resolvePathsProperty(REST_TESTS_SUITE, "")_ _        List<Object[]> tests = new ArrayList<>()__        Map<String, Set<Path>> yamlSuites = loadSuites(paths)__        _        for (String api : yamlSuites.keySet()) {_            List<Path> yamlFiles = new ArrayList<>(yamlSuites.get(api))__            for (Path yamlFile : yamlFiles) {_                ClientYamlTestSuite restTestSuite = ClientYamlTestSuite.parse(executeableSectionRegistry, api, yamlFile)__                for (ClientYamlTestSection testSection : restTestSuite.getTestSections()) {_                    tests.add(new Object[]{ new ClientYamlTestCandidate(restTestSuite, testSection) })__                }_            }_        }__        _        Collections.sort(tests,_            (o1, o2) -> ((ClientYamlTestCandidate)o1[0]).getTestPath().compareTo(((ClientYamlTestCandidate)o2[0]).getTestPath()))__        return tests__    };create,parameters,for,this,parameterized,test;public,static,iterable,object,create,parameters,named,xcontent,registry,executeable,section,registry,throws,exception,string,paths,resolve,paths,property,list,object,tests,new,array,list,map,string,set,path,yaml,suites,load,suites,paths,for,string,api,yaml,suites,key,set,list,path,yaml,files,new,array,list,yaml,suites,get,api,for,path,yaml,file,yaml,files,client,yaml,test,suite,rest,test,suite,client,yaml,test,suite,parse,executeable,section,registry,api,yaml,file,for,client,yaml,test,section,test,section,rest,test,suite,get,test,sections,tests,add,new,object,new,client,yaml,test,candidate,rest,test,suite,test,section,collections,sort,tests,o1,o2,client,yaml,test,candidate,o1,0,get,test,path,compare,to,client,yaml,test,candidate,o2,0,get,test,path,return,tests
ESClientYamlSuiteTestCase -> public static Iterable<Object[]> createParameters(NamedXContentRegistry executeableSectionRegistry) throws Exception;1527840262;Create parameters for this parameterized test.;public static Iterable<Object[]> createParameters(NamedXContentRegistry executeableSectionRegistry) throws Exception {_        String[] paths = resolvePathsProperty(REST_TESTS_SUITE, "")_ _        List<Object[]> tests = new ArrayList<>()__        Map<String, Set<Path>> yamlSuites = loadSuites(paths)__        _        for (String api : yamlSuites.keySet()) {_            List<Path> yamlFiles = new ArrayList<>(yamlSuites.get(api))__            for (Path yamlFile : yamlFiles) {_                ClientYamlTestSuite restTestSuite = ClientYamlTestSuite.parse(executeableSectionRegistry, api, yamlFile)__                for (ClientYamlTestSection testSection : restTestSuite.getTestSections()) {_                    tests.add(new Object[]{ new ClientYamlTestCandidate(restTestSuite, testSection) })__                }_            }_        }__        _        Collections.sort(tests,_            (o1, o2) -> ((ClientYamlTestCandidate)o1[0]).getTestPath().compareTo(((ClientYamlTestCandidate)o2[0]).getTestPath()))__        return tests__    };create,parameters,for,this,parameterized,test;public,static,iterable,object,create,parameters,named,xcontent,registry,executeable,section,registry,throws,exception,string,paths,resolve,paths,property,list,object,tests,new,array,list,map,string,set,path,yaml,suites,load,suites,paths,for,string,api,yaml,suites,key,set,list,path,yaml,files,new,array,list,yaml,suites,get,api,for,path,yaml,file,yaml,files,client,yaml,test,suite,rest,test,suite,client,yaml,test,suite,parse,executeable,section,registry,api,yaml,file,for,client,yaml,test,section,test,section,rest,test,suite,get,test,sections,tests,add,new,object,new,client,yaml,test,candidate,rest,test,suite,test,section,collections,sort,tests,o1,o2,client,yaml,test,candidate,o1,0,get,test,path,compare,to,client,yaml,test,candidate,o2,0,get,test,path,return,tests
ESClientYamlSuiteTestCase -> public static Iterable<Object[]> createParameters(NamedXContentRegistry executeableSectionRegistry) throws Exception;1528167589;Create parameters for this parameterized test.;public static Iterable<Object[]> createParameters(NamedXContentRegistry executeableSectionRegistry) throws Exception {_        String[] paths = resolvePathsProperty(REST_TESTS_SUITE, "")_ _        List<Object[]> tests = new ArrayList<>()__        Map<String, Set<Path>> yamlSuites = loadSuites(paths)__        _        for (String api : yamlSuites.keySet()) {_            List<Path> yamlFiles = new ArrayList<>(yamlSuites.get(api))__            for (Path yamlFile : yamlFiles) {_                ClientYamlTestSuite restTestSuite = ClientYamlTestSuite.parse(executeableSectionRegistry, api, yamlFile)__                for (ClientYamlTestSection testSection : restTestSuite.getTestSections()) {_                    tests.add(new Object[]{ new ClientYamlTestCandidate(restTestSuite, testSection) })__                }_            }_        }__        _        Collections.sort(tests,_            (o1, o2) -> ((ClientYamlTestCandidate)o1[0]).getTestPath().compareTo(((ClientYamlTestCandidate)o2[0]).getTestPath()))__        return tests__    };create,parameters,for,this,parameterized,test;public,static,iterable,object,create,parameters,named,xcontent,registry,executeable,section,registry,throws,exception,string,paths,resolve,paths,property,list,object,tests,new,array,list,map,string,set,path,yaml,suites,load,suites,paths,for,string,api,yaml,suites,key,set,list,path,yaml,files,new,array,list,yaml,suites,get,api,for,path,yaml,file,yaml,files,client,yaml,test,suite,rest,test,suite,client,yaml,test,suite,parse,executeable,section,registry,api,yaml,file,for,client,yaml,test,section,test,section,rest,test,suite,get,test,sections,tests,add,new,object,new,client,yaml,test,candidate,rest,test,suite,test,section,collections,sort,tests,o1,o2,client,yaml,test,candidate,o1,0,get,test,path,compare,to,client,yaml,test,candidate,o2,0,get,test,path,return,tests
ESClientYamlSuiteTestCase -> public static Iterable<Object[]> createParameters(NamedXContentRegistry executeableSectionRegistry) throws Exception;1528762805;Create parameters for this parameterized test.;public static Iterable<Object[]> createParameters(NamedXContentRegistry executeableSectionRegistry) throws Exception {_        String[] paths = resolvePathsProperty(REST_TESTS_SUITE, "")_ _        List<Object[]> tests = new ArrayList<>()__        Map<String, Set<Path>> yamlSuites = loadSuites(paths)__        _        for (String api : yamlSuites.keySet()) {_            List<Path> yamlFiles = new ArrayList<>(yamlSuites.get(api))__            for (Path yamlFile : yamlFiles) {_                ClientYamlTestSuite restTestSuite = ClientYamlTestSuite.parse(executeableSectionRegistry, api, yamlFile)__                for (ClientYamlTestSection testSection : restTestSuite.getTestSections()) {_                    tests.add(new Object[]{ new ClientYamlTestCandidate(restTestSuite, testSection) })__                }_            }_        }__        _        Collections.sort(tests,_            (o1, o2) -> ((ClientYamlTestCandidate)o1[0]).getTestPath().compareTo(((ClientYamlTestCandidate)o2[0]).getTestPath()))__        return tests__    };create,parameters,for,this,parameterized,test;public,static,iterable,object,create,parameters,named,xcontent,registry,executeable,section,registry,throws,exception,string,paths,resolve,paths,property,list,object,tests,new,array,list,map,string,set,path,yaml,suites,load,suites,paths,for,string,api,yaml,suites,key,set,list,path,yaml,files,new,array,list,yaml,suites,get,api,for,path,yaml,file,yaml,files,client,yaml,test,suite,rest,test,suite,client,yaml,test,suite,parse,executeable,section,registry,api,yaml,file,for,client,yaml,test,section,test,section,rest,test,suite,get,test,sections,tests,add,new,object,new,client,yaml,test,candidate,rest,test,suite,test,section,collections,sort,tests,o1,o2,client,yaml,test,candidate,o1,0,get,test,path,compare,to,client,yaml,test,candidate,o2,0,get,test,path,return,tests
ESClientYamlSuiteTestCase -> public static Iterable<Object[]> createParameters(NamedXContentRegistry executeableSectionRegistry) throws Exception;1529687475;Create parameters for this parameterized test.;public static Iterable<Object[]> createParameters(NamedXContentRegistry executeableSectionRegistry) throws Exception {_        String[] paths = resolvePathsProperty(REST_TESTS_SUITE, "")_ _        List<Object[]> tests = new ArrayList<>()__        Map<String, Set<Path>> yamlSuites = loadSuites(paths)__        _        for (String api : yamlSuites.keySet()) {_            List<Path> yamlFiles = new ArrayList<>(yamlSuites.get(api))__            for (Path yamlFile : yamlFiles) {_                ClientYamlTestSuite restTestSuite = ClientYamlTestSuite.parse(executeableSectionRegistry, api, yamlFile)__                for (ClientYamlTestSection testSection : restTestSuite.getTestSections()) {_                    tests.add(new Object[]{ new ClientYamlTestCandidate(restTestSuite, testSection) })__                }_            }_        }__        _        tests.sort(Comparator.comparing(o -> ((ClientYamlTestCandidate) o[0]).getTestPath()))__        return tests__    };create,parameters,for,this,parameterized,test;public,static,iterable,object,create,parameters,named,xcontent,registry,executeable,section,registry,throws,exception,string,paths,resolve,paths,property,list,object,tests,new,array,list,map,string,set,path,yaml,suites,load,suites,paths,for,string,api,yaml,suites,key,set,list,path,yaml,files,new,array,list,yaml,suites,get,api,for,path,yaml,file,yaml,files,client,yaml,test,suite,rest,test,suite,client,yaml,test,suite,parse,executeable,section,registry,api,yaml,file,for,client,yaml,test,section,test,section,rest,test,suite,get,test,sections,tests,add,new,object,new,client,yaml,test,candidate,rest,test,suite,test,section,tests,sort,comparator,comparing,o,client,yaml,test,candidate,o,0,get,test,path,return,tests
ESClientYamlSuiteTestCase -> public static Iterable<Object[]> createParameters(NamedXContentRegistry executeableSectionRegistry) throws Exception;1531179852;Create parameters for this parameterized test.;public static Iterable<Object[]> createParameters(NamedXContentRegistry executeableSectionRegistry) throws Exception {_        String[] paths = resolvePathsProperty(REST_TESTS_SUITE, "")_ _        List<Object[]> tests = new ArrayList<>()__        Map<String, Set<Path>> yamlSuites = loadSuites(paths)__        _        for (String api : yamlSuites.keySet()) {_            List<Path> yamlFiles = new ArrayList<>(yamlSuites.get(api))__            for (Path yamlFile : yamlFiles) {_                ClientYamlTestSuite restTestSuite = ClientYamlTestSuite.parse(executeableSectionRegistry, api, yamlFile)__                for (ClientYamlTestSection testSection : restTestSuite.getTestSections()) {_                    tests.add(new Object[]{ new ClientYamlTestCandidate(restTestSuite, testSection) })__                }_            }_        }__        _        tests.sort(Comparator.comparing(o -> ((ClientYamlTestCandidate) o[0]).getTestPath()))__        return tests__    };create,parameters,for,this,parameterized,test;public,static,iterable,object,create,parameters,named,xcontent,registry,executeable,section,registry,throws,exception,string,paths,resolve,paths,property,list,object,tests,new,array,list,map,string,set,path,yaml,suites,load,suites,paths,for,string,api,yaml,suites,key,set,list,path,yaml,files,new,array,list,yaml,suites,get,api,for,path,yaml,file,yaml,files,client,yaml,test,suite,rest,test,suite,client,yaml,test,suite,parse,executeable,section,registry,api,yaml,file,for,client,yaml,test,section,test,section,rest,test,suite,get,test,sections,tests,add,new,object,new,client,yaml,test,candidate,rest,test,suite,test,section,tests,sort,comparator,comparing,o,client,yaml,test,candidate,o,0,get,test,path,return,tests
ESClientYamlSuiteTestCase -> public static Iterable<Object[]> createParameters(NamedXContentRegistry executeableSectionRegistry) throws Exception;1531382259;Create parameters for this parameterized test.;public static Iterable<Object[]> createParameters(NamedXContentRegistry executeableSectionRegistry) throws Exception {_        String[] paths = resolvePathsProperty(REST_TESTS_SUITE, "")_ _        List<Object[]> tests = new ArrayList<>()__        Map<String, Set<Path>> yamlSuites = loadSuites(paths)__        _        for (String api : yamlSuites.keySet()) {_            List<Path> yamlFiles = new ArrayList<>(yamlSuites.get(api))__            for (Path yamlFile : yamlFiles) {_                ClientYamlTestSuite restTestSuite = ClientYamlTestSuite.parse(executeableSectionRegistry, api, yamlFile)__                for (ClientYamlTestSection testSection : restTestSuite.getTestSections()) {_                    tests.add(new Object[]{ new ClientYamlTestCandidate(restTestSuite, testSection) })__                }_            }_        }__        _        tests.sort(Comparator.comparing(o -> ((ClientYamlTestCandidate) o[0]).getTestPath()))__        return tests__    };create,parameters,for,this,parameterized,test;public,static,iterable,object,create,parameters,named,xcontent,registry,executeable,section,registry,throws,exception,string,paths,resolve,paths,property,list,object,tests,new,array,list,map,string,set,path,yaml,suites,load,suites,paths,for,string,api,yaml,suites,key,set,list,path,yaml,files,new,array,list,yaml,suites,get,api,for,path,yaml,file,yaml,files,client,yaml,test,suite,rest,test,suite,client,yaml,test,suite,parse,executeable,section,registry,api,yaml,file,for,client,yaml,test,section,test,section,rest,test,suite,get,test,sections,tests,add,new,object,new,client,yaml,test,candidate,rest,test,suite,test,section,tests,sort,comparator,comparing,o,client,yaml,test,candidate,o,0,get,test,path,return,tests
ESClientYamlSuiteTestCase -> public static Iterable<Object[]> createParameters(NamedXContentRegistry executeableSectionRegistry) throws Exception;1534176840;Create parameters for this parameterized test.;public static Iterable<Object[]> createParameters(NamedXContentRegistry executeableSectionRegistry) throws Exception {_        String[] paths = resolvePathsProperty(REST_TESTS_SUITE, "")_ _        List<Object[]> tests = new ArrayList<>()__        Map<String, Set<Path>> yamlSuites = loadSuites(paths)__        _        for (String api : yamlSuites.keySet()) {_            List<Path> yamlFiles = new ArrayList<>(yamlSuites.get(api))__            for (Path yamlFile : yamlFiles) {_                ClientYamlTestSuite restTestSuite = ClientYamlTestSuite.parse(executeableSectionRegistry, api, yamlFile)__                for (ClientYamlTestSection testSection : restTestSuite.getTestSections()) {_                    tests.add(new Object[]{ new ClientYamlTestCandidate(restTestSuite, testSection) })__                }_            }_        }__        _        tests.sort(Comparator.comparing(o -> ((ClientYamlTestCandidate) o[0]).getTestPath()))__        return tests__    };create,parameters,for,this,parameterized,test;public,static,iterable,object,create,parameters,named,xcontent,registry,executeable,section,registry,throws,exception,string,paths,resolve,paths,property,list,object,tests,new,array,list,map,string,set,path,yaml,suites,load,suites,paths,for,string,api,yaml,suites,key,set,list,path,yaml,files,new,array,list,yaml,suites,get,api,for,path,yaml,file,yaml,files,client,yaml,test,suite,rest,test,suite,client,yaml,test,suite,parse,executeable,section,registry,api,yaml,file,for,client,yaml,test,section,test,section,rest,test,suite,get,test,sections,tests,add,new,object,new,client,yaml,test,candidate,rest,test,suite,test,section,tests,sort,comparator,comparing,o,client,yaml,test,candidate,o,0,get,test,path,return,tests
ESClientYamlSuiteTestCase -> public static Iterable<Object[]> createParameters(NamedXContentRegistry executeableSectionRegistry) throws Exception;1540238977;Create parameters for this parameterized test.;public static Iterable<Object[]> createParameters(NamedXContentRegistry executeableSectionRegistry) throws Exception {_        String[] paths = resolvePathsProperty(REST_TESTS_SUITE, "")_ _        List<Object[]> tests = new ArrayList<>()__        Map<String, Set<Path>> yamlSuites = loadSuites(paths)__        _        for (String api : yamlSuites.keySet()) {_            List<Path> yamlFiles = new ArrayList<>(yamlSuites.get(api))__            for (Path yamlFile : yamlFiles) {_                ClientYamlTestSuite restTestSuite = ClientYamlTestSuite.parse(executeableSectionRegistry, api, yamlFile)__                for (ClientYamlTestSection testSection : restTestSuite.getTestSections()) {_                    tests.add(new Object[]{ new ClientYamlTestCandidate(restTestSuite, testSection) })__                }_            }_        }__        _        tests.sort(Comparator.comparing(o -> ((ClientYamlTestCandidate) o[0]).getTestPath()))__        return tests__    };create,parameters,for,this,parameterized,test;public,static,iterable,object,create,parameters,named,xcontent,registry,executeable,section,registry,throws,exception,string,paths,resolve,paths,property,list,object,tests,new,array,list,map,string,set,path,yaml,suites,load,suites,paths,for,string,api,yaml,suites,key,set,list,path,yaml,files,new,array,list,yaml,suites,get,api,for,path,yaml,file,yaml,files,client,yaml,test,suite,rest,test,suite,client,yaml,test,suite,parse,executeable,section,registry,api,yaml,file,for,client,yaml,test,section,test,section,rest,test,suite,get,test,sections,tests,add,new,object,new,client,yaml,test,candidate,rest,test,suite,test,section,tests,sort,comparator,comparing,o,client,yaml,test,candidate,o,0,get,test,path,return,tests
ESClientYamlSuiteTestCase -> public static Iterable<Object[]> createParameters(NamedXContentRegistry executeableSectionRegistry) throws Exception;1540486836;Create parameters for this parameterized test.;public static Iterable<Object[]> createParameters(NamedXContentRegistry executeableSectionRegistry) throws Exception {_        String[] paths = resolvePathsProperty(REST_TESTS_SUITE, "")_ _        List<Object[]> tests = new ArrayList<>()__        Map<String, Set<Path>> yamlSuites = loadSuites(paths)__        _        for (String api : yamlSuites.keySet()) {_            List<Path> yamlFiles = new ArrayList<>(yamlSuites.get(api))__            for (Path yamlFile : yamlFiles) {_                ClientYamlTestSuite restTestSuite = ClientYamlTestSuite.parse(executeableSectionRegistry, api, yamlFile)__                for (ClientYamlTestSection testSection : restTestSuite.getTestSections()) {_                    tests.add(new Object[]{ new ClientYamlTestCandidate(restTestSuite, testSection) })__                }_            }_        }__        _        tests.sort(Comparator.comparing(o -> ((ClientYamlTestCandidate) o[0]).getTestPath()))__        return tests__    };create,parameters,for,this,parameterized,test;public,static,iterable,object,create,parameters,named,xcontent,registry,executeable,section,registry,throws,exception,string,paths,resolve,paths,property,list,object,tests,new,array,list,map,string,set,path,yaml,suites,load,suites,paths,for,string,api,yaml,suites,key,set,list,path,yaml,files,new,array,list,yaml,suites,get,api,for,path,yaml,file,yaml,files,client,yaml,test,suite,rest,test,suite,client,yaml,test,suite,parse,executeable,section,registry,api,yaml,file,for,client,yaml,test,section,test,section,rest,test,suite,get,test,sections,tests,add,new,object,new,client,yaml,test,candidate,rest,test,suite,test,section,tests,sort,comparator,comparing,o,client,yaml,test,candidate,o,0,get,test,path,return,tests
ESClientYamlSuiteTestCase -> public static Iterable<Object[]> createParameters(NamedXContentRegistry executeableSectionRegistry) throws Exception;1540912197;Create parameters for this parameterized test.;public static Iterable<Object[]> createParameters(NamedXContentRegistry executeableSectionRegistry) throws Exception {_        String[] paths = resolvePathsProperty(REST_TESTS_SUITE, "")_ _        Map<String, Set<Path>> yamlSuites = loadSuites(paths)__        List<ClientYamlTestSuite> suites = new ArrayList<>()__        IllegalArgumentException validationException = null__        _        for (String api : yamlSuites.keySet()) {_            List<Path> yamlFiles = new ArrayList<>(yamlSuites.get(api))__            for (Path yamlFile : yamlFiles) {_                ClientYamlTestSuite suite = ClientYamlTestSuite.parse(executeableSectionRegistry, api, yamlFile)__                suites.add(suite)__                try {_                    suite.validate()__                } catch(IllegalArgumentException e) {_                    if (validationException == null) {_                        validationException = new IllegalArgumentException("Validation errors for the following test suites:\n- "_                            + e.getMessage())__                    } else {_                        String previousMessage = validationException.getMessage()__                        Throwable[] suppressed = validationException.getSuppressed()__                        validationException = new IllegalArgumentException(previousMessage + "\n- " + e.getMessage())__                        for (Throwable t : suppressed) {_                            validationException.addSuppressed(t)__                        }_                    }_                    validationException.addSuppressed(e)__                }_            }_        }__        if (validationException != null) {_            throw validationException__        }__        List<Object[]> tests = new ArrayList<>()__        for (ClientYamlTestSuite yamlTestSuite : suites) {_            for (ClientYamlTestSection testSection : yamlTestSuite.getTestSections()) {_                tests.add(new Object[]{ new ClientYamlTestCandidate(yamlTestSuite, testSection) })__            }_        }_        _        tests.sort(Comparator.comparing(o -> ((ClientYamlTestCandidate) o[0]).getTestPath()))__        return tests__    };create,parameters,for,this,parameterized,test;public,static,iterable,object,create,parameters,named,xcontent,registry,executeable,section,registry,throws,exception,string,paths,resolve,paths,property,map,string,set,path,yaml,suites,load,suites,paths,list,client,yaml,test,suite,suites,new,array,list,illegal,argument,exception,validation,exception,null,for,string,api,yaml,suites,key,set,list,path,yaml,files,new,array,list,yaml,suites,get,api,for,path,yaml,file,yaml,files,client,yaml,test,suite,suite,client,yaml,test,suite,parse,executeable,section,registry,api,yaml,file,suites,add,suite,try,suite,validate,catch,illegal,argument,exception,e,if,validation,exception,null,validation,exception,new,illegal,argument,exception,validation,errors,for,the,following,test,suites,n,e,get,message,else,string,previous,message,validation,exception,get,message,throwable,suppressed,validation,exception,get,suppressed,validation,exception,new,illegal,argument,exception,previous,message,n,e,get,message,for,throwable,t,suppressed,validation,exception,add,suppressed,t,validation,exception,add,suppressed,e,if,validation,exception,null,throw,validation,exception,list,object,tests,new,array,list,for,client,yaml,test,suite,yaml,test,suite,suites,for,client,yaml,test,section,test,section,yaml,test,suite,get,test,sections,tests,add,new,object,new,client,yaml,test,candidate,yaml,test,suite,test,section,tests,sort,comparator,comparing,o,client,yaml,test,candidate,o,0,get,test,path,return,tests
ESClientYamlSuiteTestCase -> public static Iterable<Object[]> createParameters(NamedXContentRegistry executeableSectionRegistry) throws Exception;1544448720;Create parameters for this parameterized test.;public static Iterable<Object[]> createParameters(NamedXContentRegistry executeableSectionRegistry) throws Exception {_        String[] paths = resolvePathsProperty(REST_TESTS_SUITE, "")_ _        Map<String, Set<Path>> yamlSuites = loadSuites(paths)__        List<ClientYamlTestSuite> suites = new ArrayList<>()__        IllegalArgumentException validationException = null__        _        for (String api : yamlSuites.keySet()) {_            List<Path> yamlFiles = new ArrayList<>(yamlSuites.get(api))__            for (Path yamlFile : yamlFiles) {_                ClientYamlTestSuite suite = ClientYamlTestSuite.parse(executeableSectionRegistry, api, yamlFile)__                suites.add(suite)__                try {_                    suite.validate()__                } catch(IllegalArgumentException e) {_                    if (validationException == null) {_                        validationException = new IllegalArgumentException("Validation errors for the following test suites:\n- "_                            + e.getMessage())__                    } else {_                        String previousMessage = validationException.getMessage()__                        Throwable[] suppressed = validationException.getSuppressed()__                        validationException = new IllegalArgumentException(previousMessage + "\n- " + e.getMessage())__                        for (Throwable t : suppressed) {_                            validationException.addSuppressed(t)__                        }_                    }_                    validationException.addSuppressed(e)__                }_            }_        }__        if (validationException != null) {_            throw validationException__        }__        List<Object[]> tests = new ArrayList<>()__        for (ClientYamlTestSuite yamlTestSuite : suites) {_            for (ClientYamlTestSection testSection : yamlTestSuite.getTestSections()) {_                tests.add(new Object[]{ new ClientYamlTestCandidate(yamlTestSuite, testSection) })__            }_        }_        _        tests.sort(Comparator.comparing(o -> ((ClientYamlTestCandidate) o[0]).getTestPath()))__        return tests__    };create,parameters,for,this,parameterized,test;public,static,iterable,object,create,parameters,named,xcontent,registry,executeable,section,registry,throws,exception,string,paths,resolve,paths,property,map,string,set,path,yaml,suites,load,suites,paths,list,client,yaml,test,suite,suites,new,array,list,illegal,argument,exception,validation,exception,null,for,string,api,yaml,suites,key,set,list,path,yaml,files,new,array,list,yaml,suites,get,api,for,path,yaml,file,yaml,files,client,yaml,test,suite,suite,client,yaml,test,suite,parse,executeable,section,registry,api,yaml,file,suites,add,suite,try,suite,validate,catch,illegal,argument,exception,e,if,validation,exception,null,validation,exception,new,illegal,argument,exception,validation,errors,for,the,following,test,suites,n,e,get,message,else,string,previous,message,validation,exception,get,message,throwable,suppressed,validation,exception,get,suppressed,validation,exception,new,illegal,argument,exception,previous,message,n,e,get,message,for,throwable,t,suppressed,validation,exception,add,suppressed,t,validation,exception,add,suppressed,e,if,validation,exception,null,throw,validation,exception,list,object,tests,new,array,list,for,client,yaml,test,suite,yaml,test,suite,suites,for,client,yaml,test,section,test,section,yaml,test,suite,get,test,sections,tests,add,new,object,new,client,yaml,test,candidate,yaml,test,suite,test,section,tests,sort,comparator,comparing,o,client,yaml,test,candidate,o,0,get,test,path,return,tests
ESClientYamlSuiteTestCase -> public static Iterable<Object[]> createParameters(NamedXContentRegistry executeableSectionRegistry) throws Exception;1547479364;Create parameters for this parameterized test.;public static Iterable<Object[]> createParameters(NamedXContentRegistry executeableSectionRegistry) throws Exception {_        String[] paths = resolvePathsProperty(REST_TESTS_SUITE, "")_ _        Map<String, Set<Path>> yamlSuites = loadSuites(paths)__        List<ClientYamlTestSuite> suites = new ArrayList<>()__        IllegalArgumentException validationException = null__        _        for (String api : yamlSuites.keySet()) {_            List<Path> yamlFiles = new ArrayList<>(yamlSuites.get(api))__            for (Path yamlFile : yamlFiles) {_                ClientYamlTestSuite suite = ClientYamlTestSuite.parse(executeableSectionRegistry, api, yamlFile)__                suites.add(suite)__                try {_                    suite.validate()__                } catch(IllegalArgumentException e) {_                    if (validationException == null) {_                        validationException = new IllegalArgumentException("Validation errors for the following test suites:\n- "_                            + e.getMessage())__                    } else {_                        String previousMessage = validationException.getMessage()__                        Throwable[] suppressed = validationException.getSuppressed()__                        validationException = new IllegalArgumentException(previousMessage + "\n- " + e.getMessage())__                        for (Throwable t : suppressed) {_                            validationException.addSuppressed(t)__                        }_                    }_                    validationException.addSuppressed(e)__                }_            }_        }__        if (validationException != null) {_            throw validationException__        }__        List<Object[]> tests = new ArrayList<>()__        for (ClientYamlTestSuite yamlTestSuite : suites) {_            for (ClientYamlTestSection testSection : yamlTestSuite.getTestSections()) {_                tests.add(new Object[]{ new ClientYamlTestCandidate(yamlTestSuite, testSection) })__            }_        }_        _        tests.sort(Comparator.comparing(o -> ((ClientYamlTestCandidate) o[0]).getTestPath()))__        return tests__    };create,parameters,for,this,parameterized,test;public,static,iterable,object,create,parameters,named,xcontent,registry,executeable,section,registry,throws,exception,string,paths,resolve,paths,property,map,string,set,path,yaml,suites,load,suites,paths,list,client,yaml,test,suite,suites,new,array,list,illegal,argument,exception,validation,exception,null,for,string,api,yaml,suites,key,set,list,path,yaml,files,new,array,list,yaml,suites,get,api,for,path,yaml,file,yaml,files,client,yaml,test,suite,suite,client,yaml,test,suite,parse,executeable,section,registry,api,yaml,file,suites,add,suite,try,suite,validate,catch,illegal,argument,exception,e,if,validation,exception,null,validation,exception,new,illegal,argument,exception,validation,errors,for,the,following,test,suites,n,e,get,message,else,string,previous,message,validation,exception,get,message,throwable,suppressed,validation,exception,get,suppressed,validation,exception,new,illegal,argument,exception,previous,message,n,e,get,message,for,throwable,t,suppressed,validation,exception,add,suppressed,t,validation,exception,add,suppressed,e,if,validation,exception,null,throw,validation,exception,list,object,tests,new,array,list,for,client,yaml,test,suite,yaml,test,suite,suites,for,client,yaml,test,section,test,section,yaml,test,suite,get,test,sections,tests,add,new,object,new,client,yaml,test,candidate,yaml,test,suite,test,section,tests,sort,comparator,comparing,o,client,yaml,test,candidate,o,0,get,test,path,return,tests
ESClientYamlSuiteTestCase -> public static Iterable<Object[]> createParameters() throws Exception;1526029249;Create parameters for this parameterized test. Uses the_{@link ExecutableSection#XCONTENT_REGISTRY list} of executable sections_defined in {@link ExecutableSection}.;public static Iterable<Object[]> createParameters() throws Exception {_        return createParameters(ExecutableSection.XCONTENT_REGISTRY)__    };create,parameters,for,this,parameterized,test,uses,the,link,executable,section,list,of,executable,sections,defined,in,link,executable,section;public,static,iterable,object,create,parameters,throws,exception,return,create,parameters,executable,section
ESClientYamlSuiteTestCase -> public static Iterable<Object[]> createParameters() throws Exception;1526374795;Create parameters for this parameterized test. Uses the_{@link ExecutableSection#XCONTENT_REGISTRY list} of executable sections_defined in {@link ExecutableSection}.;public static Iterable<Object[]> createParameters() throws Exception {_        return createParameters(ExecutableSection.XCONTENT_REGISTRY)__    };create,parameters,for,this,parameterized,test,uses,the,link,executable,section,list,of,executable,sections,defined,in,link,executable,section;public,static,iterable,object,create,parameters,throws,exception,return,create,parameters,executable,section
ESClientYamlSuiteTestCase -> public static Iterable<Object[]> createParameters() throws Exception;1526449283;Create parameters for this parameterized test. Uses the_{@link ExecutableSection#XCONTENT_REGISTRY list} of executable sections_defined in {@link ExecutableSection}.;public static Iterable<Object[]> createParameters() throws Exception {_        return createParameters(ExecutableSection.XCONTENT_REGISTRY)__    };create,parameters,for,this,parameterized,test,uses,the,link,executable,section,list,of,executable,sections,defined,in,link,executable,section;public,static,iterable,object,create,parameters,throws,exception,return,create,parameters,executable,section
ESClientYamlSuiteTestCase -> public static Iterable<Object[]> createParameters() throws Exception;1527096592;Create parameters for this parameterized test. Uses the_{@link ExecutableSection#XCONTENT_REGISTRY list} of executable sections_defined in {@link ExecutableSection}.;public static Iterable<Object[]> createParameters() throws Exception {_        return createParameters(ExecutableSection.XCONTENT_REGISTRY)__    };create,parameters,for,this,parameterized,test,uses,the,link,executable,section,list,of,executable,sections,defined,in,link,executable,section;public,static,iterable,object,create,parameters,throws,exception,return,create,parameters,executable,section
ESClientYamlSuiteTestCase -> public static Iterable<Object[]> createParameters() throws Exception;1527840262;Create parameters for this parameterized test. Uses the_{@link ExecutableSection#XCONTENT_REGISTRY list} of executable sections_defined in {@link ExecutableSection}.;public static Iterable<Object[]> createParameters() throws Exception {_        return createParameters(ExecutableSection.XCONTENT_REGISTRY)__    };create,parameters,for,this,parameterized,test,uses,the,link,executable,section,list,of,executable,sections,defined,in,link,executable,section;public,static,iterable,object,create,parameters,throws,exception,return,create,parameters,executable,section
ESClientYamlSuiteTestCase -> public static Iterable<Object[]> createParameters() throws Exception;1528167589;Create parameters for this parameterized test. Uses the_{@link ExecutableSection#XCONTENT_REGISTRY list} of executable sections_defined in {@link ExecutableSection}.;public static Iterable<Object[]> createParameters() throws Exception {_        return createParameters(ExecutableSection.XCONTENT_REGISTRY)__    };create,parameters,for,this,parameterized,test,uses,the,link,executable,section,list,of,executable,sections,defined,in,link,executable,section;public,static,iterable,object,create,parameters,throws,exception,return,create,parameters,executable,section
ESClientYamlSuiteTestCase -> public static Iterable<Object[]> createParameters() throws Exception;1528762805;Create parameters for this parameterized test. Uses the_{@link ExecutableSection#XCONTENT_REGISTRY list} of executable sections_defined in {@link ExecutableSection}.;public static Iterable<Object[]> createParameters() throws Exception {_        return createParameters(ExecutableSection.XCONTENT_REGISTRY)__    };create,parameters,for,this,parameterized,test,uses,the,link,executable,section,list,of,executable,sections,defined,in,link,executable,section;public,static,iterable,object,create,parameters,throws,exception,return,create,parameters,executable,section
ESClientYamlSuiteTestCase -> public static Iterable<Object[]> createParameters() throws Exception;1529687475;Create parameters for this parameterized test. Uses the_{@link ExecutableSection#XCONTENT_REGISTRY list} of executable sections_defined in {@link ExecutableSection}.;public static Iterable<Object[]> createParameters() throws Exception {_        return createParameters(ExecutableSection.XCONTENT_REGISTRY)__    };create,parameters,for,this,parameterized,test,uses,the,link,executable,section,list,of,executable,sections,defined,in,link,executable,section;public,static,iterable,object,create,parameters,throws,exception,return,create,parameters,executable,section
ESClientYamlSuiteTestCase -> public static Iterable<Object[]> createParameters() throws Exception;1531179852;Create parameters for this parameterized test. Uses the_{@link ExecutableSection#XCONTENT_REGISTRY list} of executable sections_defined in {@link ExecutableSection}.;public static Iterable<Object[]> createParameters() throws Exception {_        return createParameters(ExecutableSection.XCONTENT_REGISTRY)__    };create,parameters,for,this,parameterized,test,uses,the,link,executable,section,list,of,executable,sections,defined,in,link,executable,section;public,static,iterable,object,create,parameters,throws,exception,return,create,parameters,executable,section
ESClientYamlSuiteTestCase -> public static Iterable<Object[]> createParameters() throws Exception;1531382259;Create parameters for this parameterized test. Uses the_{@link ExecutableSection#XCONTENT_REGISTRY list} of executable sections_defined in {@link ExecutableSection}.;public static Iterable<Object[]> createParameters() throws Exception {_        return createParameters(ExecutableSection.XCONTENT_REGISTRY)__    };create,parameters,for,this,parameterized,test,uses,the,link,executable,section,list,of,executable,sections,defined,in,link,executable,section;public,static,iterable,object,create,parameters,throws,exception,return,create,parameters,executable,section
ESClientYamlSuiteTestCase -> public static Iterable<Object[]> createParameters() throws Exception;1534176840;Create parameters for this parameterized test. Uses the_{@link ExecutableSection#XCONTENT_REGISTRY list} of executable sections_defined in {@link ExecutableSection}.;public static Iterable<Object[]> createParameters() throws Exception {_        return createParameters(ExecutableSection.XCONTENT_REGISTRY)__    };create,parameters,for,this,parameterized,test,uses,the,link,executable,section,list,of,executable,sections,defined,in,link,executable,section;public,static,iterable,object,create,parameters,throws,exception,return,create,parameters,executable,section
ESClientYamlSuiteTestCase -> public static Iterable<Object[]> createParameters() throws Exception;1540238977;Create parameters for this parameterized test. Uses the_{@link ExecutableSection#XCONTENT_REGISTRY list} of executable sections_defined in {@link ExecutableSection}.;public static Iterable<Object[]> createParameters() throws Exception {_        return createParameters(ExecutableSection.XCONTENT_REGISTRY)__    };create,parameters,for,this,parameterized,test,uses,the,link,executable,section,list,of,executable,sections,defined,in,link,executable,section;public,static,iterable,object,create,parameters,throws,exception,return,create,parameters,executable,section
ESClientYamlSuiteTestCase -> public static Iterable<Object[]> createParameters() throws Exception;1540486836;Create parameters for this parameterized test. Uses the_{@link ExecutableSection#XCONTENT_REGISTRY list} of executable sections_defined in {@link ExecutableSection}.;public static Iterable<Object[]> createParameters() throws Exception {_        return createParameters(ExecutableSection.XCONTENT_REGISTRY)__    };create,parameters,for,this,parameterized,test,uses,the,link,executable,section,list,of,executable,sections,defined,in,link,executable,section;public,static,iterable,object,create,parameters,throws,exception,return,create,parameters,executable,section
ESClientYamlSuiteTestCase -> public static Iterable<Object[]> createParameters() throws Exception;1540912197;Create parameters for this parameterized test. Uses the_{@link ExecutableSection#XCONTENT_REGISTRY list} of executable sections_defined in {@link ExecutableSection}.;public static Iterable<Object[]> createParameters() throws Exception {_        return createParameters(ExecutableSection.XCONTENT_REGISTRY)__    };create,parameters,for,this,parameterized,test,uses,the,link,executable,section,list,of,executable,sections,defined,in,link,executable,section;public,static,iterable,object,create,parameters,throws,exception,return,create,parameters,executable,section
ESClientYamlSuiteTestCase -> public static Iterable<Object[]> createParameters() throws Exception;1544448720;Create parameters for this parameterized test. Uses the_{@link ExecutableSection#XCONTENT_REGISTRY list} of executable sections_defined in {@link ExecutableSection}.;public static Iterable<Object[]> createParameters() throws Exception {_        return createParameters(ExecutableSection.XCONTENT_REGISTRY)__    };create,parameters,for,this,parameterized,test,uses,the,link,executable,section,list,of,executable,sections,defined,in,link,executable,section;public,static,iterable,object,create,parameters,throws,exception,return,create,parameters,executable,section
ESClientYamlSuiteTestCase -> public static Iterable<Object[]> createParameters() throws Exception;1547479364;Create parameters for this parameterized test. Uses the_{@link ExecutableSection#XCONTENT_REGISTRY list} of executable sections_defined in {@link ExecutableSection}.;public static Iterable<Object[]> createParameters() throws Exception {_        return createParameters(ExecutableSection.XCONTENT_REGISTRY)__    };create,parameters,for,this,parameterized,test,uses,the,link,executable,section,list,of,executable,sections,defined,in,link,executable,section;public,static,iterable,object,create,parameters,throws,exception,return,create,parameters,executable,section
