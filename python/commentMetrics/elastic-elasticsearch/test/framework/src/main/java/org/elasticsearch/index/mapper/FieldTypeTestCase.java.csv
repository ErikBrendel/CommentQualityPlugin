# id;timestamp;commentText;codeText;commentWords;codeWords
FieldTypeTestCase -> protected abstract MappedFieldType createDefaultFieldType()_;1524684173;Create a default constructed fieldtype;protected abstract MappedFieldType createDefaultFieldType()_;create,a,default,constructed,fieldtype;protected,abstract,mapped,field,type,create,default,field,type
FieldTypeTestCase -> protected abstract MappedFieldType createDefaultFieldType()_;1536828374;Create a default constructed fieldtype;protected abstract MappedFieldType createDefaultFieldType()_;create,a,default,constructed,fieldtype;protected,abstract,mapped,field,type,create,default,field,type
FieldTypeTestCase -> protected abstract MappedFieldType createDefaultFieldType()_;1538067637;Create a default constructed fieldtype;protected abstract MappedFieldType createDefaultFieldType()_;create,a,default,constructed,fieldtype;protected,abstract,mapped,field,type,create,default,field,type
FieldTypeTestCase -> Modifier -> public void normalizeOther(MappedFieldType other);1524684173;Optional method to implement that allows the field type that will be compared to be modified,_so that it does not have the default value for the property being modified.;public void normalizeOther(MappedFieldType other) {};optional,method,to,implement,that,allows,the,field,type,that,will,be,compared,to,be,modified,so,that,it,does,not,have,the,default,value,for,the,property,being,modified;public,void,normalize,other,mapped,field,type,other
FieldTypeTestCase -> Modifier -> public void normalizeOther(MappedFieldType other);1536828374;Optional method to implement that allows the field type that will be compared to be modified,_so that it does not have the default value for the property being modified.;public void normalizeOther(MappedFieldType other) {};optional,method,to,implement,that,allows,the,field,type,that,will,be,compared,to,be,modified,so,that,it,does,not,have,the,default,value,for,the,property,being,modified;public,void,normalize,other,mapped,field,type,other
FieldTypeTestCase -> Modifier -> public void normalizeOther(MappedFieldType other);1538067637;Optional method to implement that allows the field type that will be compared to be modified,_so that it does not have the default value for the property being modified.;public void normalizeOther(MappedFieldType other) {};optional,method,to,implement,that,allows,the,field,type,that,will,be,compared,to,be,modified,so,that,it,does,not,have,the,default,value,for,the,property,being,modified;public,void,normalize,other,mapped,field,type,other
FieldTypeTestCase -> protected void setDummyNullValue(Object value);1524684173;Sets the null value used by the modifier for null value testing. This should be set in an @Before method.;protected void setDummyNullValue(Object value) {_        dummyNullValue = value__    };sets,the,null,value,used,by,the,modifier,for,null,value,testing,this,should,be,set,in,an,before,method;protected,void,set,dummy,null,value,object,value,dummy,null,value,value
FieldTypeTestCase -> protected void setDummyNullValue(Object value);1536828374;Sets the null value used by the modifier for null value testing. This should be set in an @Before method.;protected void setDummyNullValue(Object value) {_        dummyNullValue = value__    };sets,the,null,value,used,by,the,modifier,for,null,value,testing,this,should,be,set,in,an,before,method;protected,void,set,dummy,null,value,object,value,dummy,null,value,value
FieldTypeTestCase -> protected void setDummyNullValue(Object value);1538067637;Sets the null value used by the modifier for null value testing. This should be set in an @Before method.;protected void setDummyNullValue(Object value) {_        dummyNullValue = value__    };sets,the,null,value,used,by,the,modifier,for,null,value,testing,this,should,be,set,in,an,before,method;protected,void,set,dummy,null,value,object,value,dummy,null,value,value
FieldTypeTestCase -> Modifier -> public abstract void modify(MappedFieldType ft)_;1524684173;Modifies the property;public abstract void modify(MappedFieldType ft)_;modifies,the,property;public,abstract,void,modify,mapped,field,type,ft
FieldTypeTestCase -> Modifier -> public abstract void modify(MappedFieldType ft)_;1536828374;Modifies the property;public abstract void modify(MappedFieldType ft)_;modifies,the,property;public,abstract,void,modify,mapped,field,type,ft
FieldTypeTestCase -> Modifier -> public abstract void modify(MappedFieldType ft)_;1538067637;Modifies the property;public abstract void modify(MappedFieldType ft)_;modifies,the,property;public,abstract,void,modify,mapped,field,type,ft
FieldTypeTestCase -> protected void addModifier(Modifier modifier);1524684173;Add a mutation that will be tested for all expected semantics of equality and compatibility._These should be added in an @Before method.;protected void addModifier(Modifier modifier) {_        modifiers.add(modifier)__    };add,a,mutation,that,will,be,tested,for,all,expected,semantics,of,equality,and,compatibility,these,should,be,added,in,an,before,method;protected,void,add,modifier,modifier,modifier,modifiers,add,modifier
FieldTypeTestCase -> protected void addModifier(Modifier modifier);1536828374;Add a mutation that will be tested for all expected semantics of equality and compatibility._These should be added in an @Before method.;protected void addModifier(Modifier modifier) {_        modifiers.add(modifier)__    };add,a,mutation,that,will,be,tested,for,all,expected,semantics,of,equality,and,compatibility,these,should,be,added,in,an,before,method;protected,void,add,modifier,modifier,modifier,modifiers,add,modifier
FieldTypeTestCase -> protected void addModifier(Modifier modifier);1538067637;Add a mutation that will be tested for all expected semantics of equality and compatibility._These should be added in an @Before method.;protected void addModifier(Modifier modifier) {_        modifiers.add(modifier)__    };add,a,mutation,that,will,be,tested,for,all,expected,semantics,of,equality,and,compatibility,these,should,be,added,in,an,before,method;protected,void,add,modifier,modifier,modifier,modifiers,add,modifier
