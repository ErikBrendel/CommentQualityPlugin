commented;modifiers;parameterAmount;loc;comment;code
false;public,static;1;22;;public static TransformAndSetSection parse(XContentParser parser) throws IOException {     String currentFieldName = null.     XContentParser.Token token.     TransformAndSetSection transformAndStashSection = new TransformAndSetSection(parser.getTokenLocation()).     while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {         if (token == XContentParser.Token.FIELD_NAME) {             currentFieldName = parser.currentName().         } else if (token.isValue()) {             transformAndStashSection.addSet(currentFieldName, parser.text()).         }     }     parser.nextToken().     if (transformAndStashSection.getStash().isEmpty()) {         throw new ParsingException(transformAndStashSection.location, "transform_and_set section must set at least a value").     }     return transformAndStashSection. }
false;public;2;3;;public void addSet(String stashedField, String transformThis) {     transformStash.put(stashedField, transformThis). }
false;public;0;3;;public Map<String, String> getStash() {     return transformStash. }
false;public;0;4;;@Override public XContentLocation getLocation() {     return location. }
false;public;1;19;;@Override public void execute(ClientYamlTestExecutionContext executionContext) throws IOException {     for (Map.Entry<String, String> entry : transformStash.entrySet()) {         String key = entry.getKey().         String value = entry.getValue().         if (value.startsWith("#base64EncodeCredentials(") && value.endsWith(")")) {             value = entry.getValue().substring("#base64EncodeCredentials(".length(), entry.getValue().lastIndexOf(")")).             String[] idAndPassword = value.split(",").             if (idAndPassword.length == 2) {                 String credentials = executionContext.response(idAndPassword[0].trim()) + ":" + executionContext.response(idAndPassword[1].trim()).                 value = Base64.getEncoder().encodeToString(credentials.getBytes(StandardCharsets.UTF_8)).             } else {                 throw new IllegalArgumentException("base64EncodeCredentials requires a username/id and a password parameters").             }         }         executionContext.stash().stashValue(key, value).     } }
