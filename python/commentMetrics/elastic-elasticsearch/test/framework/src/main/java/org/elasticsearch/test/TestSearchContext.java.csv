commented;modifiers;parameterAmount;loc;comment;code
false;public;1;3;;@Override public void preProcess(boolean rewrite) { }
false;public;1;4;;@Override public Query buildFilteredQuery(Query query) {     return null. }
false;public;0;4;;@Override public long id() {     return 0. }
false;public;0;4;;@Override public String source() {     return null. }
false;public;0;4;;@Override public ShardSearchRequest request() {     return null. }
false;public;0;4;;@Override public SearchType searchType() {     return null. }
false;public;0;4;;@Override public SearchShardTarget shardTarget() {     return null. }
false;public;0;4;;@Override public int numberOfShards() {     return 1. }
false;public;0;4;;@Override public float queryBoost() {     return 0. }
false;public;0;4;;@Override public long getOriginNanoTime() {     return originNanoTime. }
false;public;0;4;;@Override public ScrollContext scrollContext() {     return scrollContext. }
false;public;1;5;;@Override public SearchContext scrollContext(ScrollContext scrollContext) {     this.scrollContext = scrollContext.     return this. }
false;public;0;4;;@Override public SearchContextAggregations aggregations() {     return aggregations. }
false;public;1;5;;@Override public SearchContext aggregations(SearchContextAggregations aggregations) {     this.aggregations = aggregations.     return this. }
false;public;1;4;;@Override public void addSearchExt(SearchExtBuilder searchExtBuilder) {     searchExtBuilders.put(searchExtBuilder.getWriteableName(), searchExtBuilder). }
false;public;1;4;;@Override public SearchExtBuilder getSearchExt(String name) {     return searchExtBuilders.get(name). }
false;public;0;4;;@Override public SearchContextHighlight highlight() {     return null. }
false;public;1;3;;@Override public void highlight(SearchContextHighlight highlight) { }
false;public;0;4;;@Override public SuggestionSearchContext suggest() {     return null. }
false;public;1;3;;@Override public void suggest(SuggestionSearchContext suggest) { }
false;public;0;4;;@Override public List<RescoreContext> rescore() {     return Collections.emptyList(). }
false;public;1;3;;@Override public void addRescore(RescoreContext rescore) { }
false;public;0;4;;@Override public boolean hasScriptFields() {     return false. }
false;public;0;4;;@Override public ScriptFieldsContext scriptFields() {     return null. }
false;public;0;4;;@Override public boolean sourceRequested() {     return false. }
false;public;0;4;;@Override public boolean hasFetchSourceContext() {     return false. }
false;public;0;4;;@Override public FetchSourceContext fetchSourceContext() {     return null. }
false;public;1;4;;@Override public SearchContext fetchSourceContext(FetchSourceContext fetchSourceContext) {     return null. }
false;public;0;4;;@Override public DocValueFieldsContext docValueFieldsContext() {     return null. }
false;public;1;4;;@Override public SearchContext docValueFieldsContext(DocValueFieldsContext docValueFieldsContext) {     return null. }
false;public;0;4;;@Override public ContextIndexSearcher searcher() {     return searcher. }
false;public;0;4;;@Override public IndexShard indexShard() {     return indexShard. }
false;public;0;7;;@Override public MapperService mapperService() {     if (indexService != null) {         return indexService.mapperService().     }     return null. }
false;public;0;4;;@Override public SimilarityService similarityService() {     return null. }
false;public;0;4;;@Override public BigArrays bigArrays() {     return bigArrays. }
false;public;0;4;;@Override public BitsetFilterCache bitsetFilterCache() {     return fixedBitSetFilterCache. }
false;public;1;4;;@Override public <IFD extends IndexFieldData<?>> IFD getForField(MappedFieldType fieldType) {     return queryShardContext.getForField(fieldType). }
false;public;0;4;;@Override public TimeValue timeout() {     return TimeValue.ZERO. }
false;public;1;3;;@Override public void timeout(TimeValue timeout) { }
false;public;0;4;;@Override public int terminateAfter() {     return terminateAfter. }
false;public;1;4;;@Override public void terminateAfter(int terminateAfter) {     this.terminateAfter = terminateAfter. }
false;public;0;4;;@Override public boolean lowLevelCancellation() {     return false. }
false;public;1;5;;@Override public SearchContext minimumScore(float minimumScore) {     this.minScore = minimumScore.     return this. }
false;public;0;4;;@Override public Float minimumScore() {     return minScore. }
false;public;1;5;;@Override public SearchContext sort(SortAndFormats sort) {     this.sort = sort.     return this. }
false;public;0;4;;@Override public SortAndFormats sort() {     return sort. }
false;public;1;5;;@Override public SearchContext trackScores(boolean trackScores) {     this.trackScores = trackScores.     return this. }
false;public;0;4;;@Override public boolean trackScores() {     return trackScores. }
false;public;1;5;;@Override public SearchContext trackTotalHitsUpTo(int trackTotalHitsUpTo) {     this.trackTotalHitsUpTo = trackTotalHitsUpTo.     return this. }
false;public;0;4;;@Override public int trackTotalHitsUpTo() {     return trackTotalHitsUpTo. }
false;public;1;4;;@Override public SearchContext searchAfter(FieldDoc searchAfter) {     return null. }
false;public;0;4;;@Override public FieldDoc searchAfter() {     return null. }
false;public;1;4;;@Override public SearchContext collapse(CollapseContext collapse) {     return null. }
false;public;0;4;;@Override public CollapseContext collapse() {     return null. }
false;public;1;5;;@Override public SearchContext parsedPostFilter(ParsedQuery postFilter) {     this.postFilter = postFilter.     return this. }
false;public;0;4;;@Override public ParsedQuery parsedPostFilter() {     return postFilter. }
false;public;0;4;;@Override public Query aliasFilter() {     return null. }
false;public;1;6;;@Override public SearchContext parsedQuery(ParsedQuery query) {     this.originalQuery = query.     this.query = query.query().     return this. }
false;public;0;4;;@Override public ParsedQuery parsedQuery() {     return originalQuery. }
false;public;0;4;;@Override public Query query() {     return query. }
false;public;0;4;;@Override public int from() {     return 0. }
false;public;1;4;;@Override public SearchContext from(int from) {     return null. }
false;public;0;4;;@Override public int size() {     return size. }
false;public;1;3;;public void setSize(int size) {     this.size = size. }
false;public;1;4;;@Override public SearchContext size(int size) {     return null. }
false;public;0;4;;@Override public boolean hasStoredFields() {     return false. }
false;public;0;4;;@Override public boolean hasStoredFieldsContext() {     return false. }
false;public;0;4;;@Override public boolean storedFieldsRequested() {     return false. }
false;public;0;4;;@Override public StoredFieldsContext storedFieldsContext() {     return null. }
false;public;1;4;;@Override public SearchContext storedFieldsContext(StoredFieldsContext storedFieldsContext) {     return null. }
false;public;0;4;;@Override public boolean explain() {     return false. }
false;public;1;3;;@Override public void explain(boolean explain) { }
false;public;0;4;;@Override public List<String> groupStats() {     return null. }
false;public;1;3;;@Override public void groupStats(List<String> groupStats) { }
false;public;0;4;;@Override public boolean version() {     return false. }
false;public;1;3;;@Override public void version(boolean version) { }
false;public;0;4;;@Override public boolean seqNoAndPrimaryTerm() {     return false. }
false;public;1;4;;@Override public void seqNoAndPrimaryTerm(boolean seqNoAndPrimaryTerm) { }
false;public;0;4;;@Override public int[] docIdsToLoad() {     return new int[0]. }
false;public;0;4;;@Override public int docIdsToLoadFrom() {     return 0. }
false;public;0;4;;@Override public int docIdsToLoadSize() {     return 0. }
false;public;3;4;;@Override public SearchContext docIdsToLoad(int[] docIdsToLoad, int docsIdsToLoadFrom, int docsIdsToLoadSize) {     return null. }
false;public;1;3;;@Override public void accessed(long accessTime) { }
false;public;0;4;;@Override public long lastAccessTime() {     return 0. }
false;public;0;4;;@Override public long keepAlive() {     return 0. }
false;public;1;3;;@Override public void keepAlive(long keepAlive) { }
false;public;0;4;;@Override public DfsSearchResult dfsResult() {     return null. }
false;public;0;4;;@Override public QuerySearchResult queryResult() {     return queryResult. }
false;public;0;4;;@Override public FetchSearchResult fetchResult() {     return null. }
false;public;0;4;;@Override public FetchPhase fetchPhase() {     return null. }
false;public;1;7;;@Override public MappedFieldType smartNameFieldType(String name) {     if (mapperService() != null) {         return mapperService().fullName(name).     }     return null. }
false;public;1;7;;@Override public ObjectMapper getObjectMapper(String name) {     if (mapperService() != null) {         return mapperService().getObjectMapper(name).     }     return null. }
false;public;0;3;;@Override public void doClose() { }
false;public;0;4;;@Override public long getRelativeTimeInMillis() {     return 0L. }
false;public;0;4;;@Override public Profilers getProfilers() {     // no profiling     return null. }
false;public;0;2;;@Override public Map<Class<?>, Collector> queryCollectors() {     return queryCollectors. }
false;public;0;4;;@Override public QueryShardContext getQueryShardContext() {     return queryShardContext. }
false;public;1;4;;@Override public void setTask(SearchTask task) {     this.task = task. }
false;public;0;4;;@Override public SearchTask getTask() {     return task. }
false;public;0;4;;@Override public boolean isCancelled() {     return task.isCancelled(). }
