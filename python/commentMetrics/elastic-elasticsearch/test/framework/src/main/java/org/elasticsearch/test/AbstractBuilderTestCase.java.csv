# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractBuilderTestCase -> protected static QueryShardContext createShardContext();1526510804;@return a new {@link QueryShardContext} based on the base test index and queryParserService;protected static QueryShardContext createShardContext() {_        return createShardContext(null)__    };return,a,new,link,query,shard,context,based,on,the,base,test,index,and,query,parser,service;protected,static,query,shard,context,create,shard,context,return,create,shard,context,null
AbstractBuilderTestCase -> protected static QueryShardContext createShardContext();1531937412;@return a new {@link QueryShardContext} based on the base test index and queryParserService;protected static QueryShardContext createShardContext() {_        return createShardContext(null)__    };return,a,new,link,query,shard,context,based,on,the,base,test,index,and,query,parser,service;protected,static,query,shard,context,create,shard,context,return,create,shard,context,null
AbstractBuilderTestCase -> protected static QueryShardContext createShardContext();1532685069;@return a new {@link QueryShardContext} based on the base test index and queryParserService;protected static QueryShardContext createShardContext() {_        return createShardContext(null)__    };return,a,new,link,query,shard,context,based,on,the,base,test,index,and,query,parser,service;protected,static,query,shard,context,create,shard,context,return,create,shard,context,null
AbstractBuilderTestCase -> protected static QueryShardContext createShardContext();1533921794;@return a new {@link QueryShardContext} based on the base test index and queryParserService;protected static QueryShardContext createShardContext() {_        return createShardContext(null)__    };return,a,new,link,query,shard,context,based,on,the,base,test,index,and,query,parser,service;protected,static,query,shard,context,create,shard,context,return,create,shard,context,null
AbstractBuilderTestCase -> protected static QueryShardContext createShardContext();1534338685;@return a new {@link QueryShardContext} based on the base test index and queryParserService;protected static QueryShardContext createShardContext() {_        return createShardContext(null)__    };return,a,new,link,query,shard,context,based,on,the,base,test,index,and,query,parser,service;protected,static,query,shard,context,create,shard,context,return,create,shard,context,null
AbstractBuilderTestCase -> protected static QueryShardContext createShardContext();1536137328;@return a new {@link QueryShardContext} based on the base test index and queryParserService;protected static QueryShardContext createShardContext() {_        return createShardContext(null)__    };return,a,new,link,query,shard,context,based,on,the,base,test,index,and,query,parser,service;protected,static,query,shard,context,create,shard,context,return,create,shard,context,null
AbstractBuilderTestCase -> protected static QueryShardContext createShardContext();1536611444;@return a new {@link QueryShardContext} based on the base test index and queryParserService;protected static QueryShardContext createShardContext() {_        return createShardContext(null)__    };return,a,new,link,query,shard,context,based,on,the,base,test,index,and,query,parser,service;protected,static,query,shard,context,create,shard,context,return,create,shard,context,null
AbstractBuilderTestCase -> protected static QueryShardContext createShardContext();1537806831;@return a new {@link QueryShardContext} based on the base test index and queryParserService;protected static QueryShardContext createShardContext() {_        return createShardContext(null)__    };return,a,new,link,query,shard,context,based,on,the,base,test,index,and,query,parser,service;protected,static,query,shard,context,create,shard,context,return,create,shard,context,null
AbstractBuilderTestCase -> protected static QueryShardContext createShardContext();1545079094;@return a new {@link QueryShardContext} based on the base test index and queryParserService;protected static QueryShardContext createShardContext() {_        return createShardContext(null)__    };return,a,new,link,query,shard,context,based,on,the,base,test,index,and,query,parser,service;protected,static,query,shard,context,create,shard,context,return,create,shard,context,null
AbstractBuilderTestCase -> protected static QueryShardContext createShardContext();1545098986;@return a new {@link QueryShardContext} based on the base test index and queryParserService;protected static QueryShardContext createShardContext() {_        return createShardContext(null)__    };return,a,new,link,query,shard,context,based,on,the,base,test,index,and,query,parser,service;protected,static,query,shard,context,create,shard,context,return,create,shard,context,null
AbstractBuilderTestCase -> protected static QueryShardContext createShardContext(IndexReader reader);1526510804;@return a new {@link QueryShardContext} with the provided reader;protected static QueryShardContext createShardContext(IndexReader reader) {_        return serviceHolder.createShardContext(reader)__    };return,a,new,link,query,shard,context,with,the,provided,reader;protected,static,query,shard,context,create,shard,context,index,reader,reader,return,service,holder,create,shard,context,reader
AbstractBuilderTestCase -> protected static QueryShardContext createShardContext(IndexReader reader);1531937412;@return a new {@link QueryShardContext} with the provided reader;protected static QueryShardContext createShardContext(IndexReader reader) {_        return serviceHolder.createShardContext(reader)__    };return,a,new,link,query,shard,context,with,the,provided,reader;protected,static,query,shard,context,create,shard,context,index,reader,reader,return,service,holder,create,shard,context,reader
AbstractBuilderTestCase -> protected static QueryShardContext createShardContext(IndexReader reader);1532685069;@return a new {@link QueryShardContext} with the provided reader;protected static QueryShardContext createShardContext(IndexReader reader) {_        return serviceHolder.createShardContext(reader)__    };return,a,new,link,query,shard,context,with,the,provided,reader;protected,static,query,shard,context,create,shard,context,index,reader,reader,return,service,holder,create,shard,context,reader
AbstractBuilderTestCase -> protected static QueryShardContext createShardContext(IndexReader reader);1533921794;@return a new {@link QueryShardContext} with the provided reader;protected static QueryShardContext createShardContext(IndexReader reader) {_        return serviceHolder.createShardContext(reader)__    };return,a,new,link,query,shard,context,with,the,provided,reader;protected,static,query,shard,context,create,shard,context,index,reader,reader,return,service,holder,create,shard,context,reader
AbstractBuilderTestCase -> protected static QueryShardContext createShardContext(IndexReader reader);1534338685;@return a new {@link QueryShardContext} with the provided reader;protected static QueryShardContext createShardContext(IndexReader reader) {_        return serviceHolder.createShardContext(reader)__    };return,a,new,link,query,shard,context,with,the,provided,reader;protected,static,query,shard,context,create,shard,context,index,reader,reader,return,service,holder,create,shard,context,reader
AbstractBuilderTestCase -> protected static QueryShardContext createShardContext(IndexReader reader);1536137328;@return a new {@link QueryShardContext} with the provided reader;protected static QueryShardContext createShardContext(IndexReader reader) {_        return serviceHolder.createShardContext(reader)__    };return,a,new,link,query,shard,context,with,the,provided,reader;protected,static,query,shard,context,create,shard,context,index,reader,reader,return,service,holder,create,shard,context,reader
AbstractBuilderTestCase -> protected static QueryShardContext createShardContext(IndexReader reader);1536611444;@return a new {@link QueryShardContext} with the provided reader;protected static QueryShardContext createShardContext(IndexReader reader) {_        return serviceHolder.createShardContext(reader)__    };return,a,new,link,query,shard,context,with,the,provided,reader;protected,static,query,shard,context,create,shard,context,index,reader,reader,return,service,holder,create,shard,context,reader
AbstractBuilderTestCase -> protected static QueryShardContext createShardContext(IndexReader reader);1537806831;@return a new {@link QueryShardContext} with the provided reader;protected static QueryShardContext createShardContext(IndexReader reader) {_        return serviceHolder.createShardContext(reader)__    };return,a,new,link,query,shard,context,with,the,provided,reader;protected,static,query,shard,context,create,shard,context,index,reader,reader,return,service,holder,create,shard,context,reader
AbstractBuilderTestCase -> protected static QueryShardContext createShardContext(IndexReader reader);1545079094;@return a new {@link QueryShardContext} with the provided reader;protected static QueryShardContext createShardContext(IndexReader reader) {_        return serviceHolder.createShardContext(reader)__    };return,a,new,link,query,shard,context,with,the,provided,reader;protected,static,query,shard,context,create,shard,context,index,reader,reader,return,service,holder,create,shard,context,reader
AbstractBuilderTestCase -> protected static QueryShardContext createShardContext(IndexReader reader);1545098986;@return a new {@link QueryShardContext} with the provided reader;protected static QueryShardContext createShardContext(IndexReader reader) {_        return serviceHolder.createShardContext(reader)__    };return,a,new,link,query,shard,context,with,the,provided,reader;protected,static,query,shard,context,create,shard,context,index,reader,reader,return,service,holder,create,shard,context,reader
AbstractBuilderTestCase -> protected static String createUniqueRandomName();1526510804;make sure query names are unique by suffixing them with increasing counter;protected static String createUniqueRandomName() {_        String queryName = randomAlphaOfLengthBetween(1, 10) + queryNameId__        queryNameId++__        return queryName__    };make,sure,query,names,are,unique,by,suffixing,them,with,increasing,counter;protected,static,string,create,unique,random,name,string,query,name,random,alpha,of,length,between,1,10,query,name,id,query,name,id,return,query,name
AbstractBuilderTestCase -> protected static String createUniqueRandomName();1531937412;make sure query names are unique by suffixing them with increasing counter;protected static String createUniqueRandomName() {_        String queryName = randomAlphaOfLengthBetween(1, 10) + queryNameId__        queryNameId++__        return queryName__    };make,sure,query,names,are,unique,by,suffixing,them,with,increasing,counter;protected,static,string,create,unique,random,name,string,query,name,random,alpha,of,length,between,1,10,query,name,id,query,name,id,return,query,name
AbstractBuilderTestCase -> protected static String createUniqueRandomName();1532685069;make sure query names are unique by suffixing them with increasing counter;protected static String createUniqueRandomName() {_        String queryName = randomAlphaOfLengthBetween(1, 10) + queryNameId__        queryNameId++__        return queryName__    };make,sure,query,names,are,unique,by,suffixing,them,with,increasing,counter;protected,static,string,create,unique,random,name,string,query,name,random,alpha,of,length,between,1,10,query,name,id,query,name,id,return,query,name
AbstractBuilderTestCase -> protected static String createUniqueRandomName();1533921794;make sure query names are unique by suffixing them with increasing counter;protected static String createUniqueRandomName() {_        String queryName = randomAlphaOfLengthBetween(1, 10) + queryNameId__        queryNameId++__        return queryName__    };make,sure,query,names,are,unique,by,suffixing,them,with,increasing,counter;protected,static,string,create,unique,random,name,string,query,name,random,alpha,of,length,between,1,10,query,name,id,query,name,id,return,query,name
AbstractBuilderTestCase -> protected static String createUniqueRandomName();1534338685;make sure query names are unique by suffixing them with increasing counter;protected static String createUniqueRandomName() {_        String queryName = randomAlphaOfLengthBetween(1, 10) + queryNameId__        queryNameId++__        return queryName__    };make,sure,query,names,are,unique,by,suffixing,them,with,increasing,counter;protected,static,string,create,unique,random,name,string,query,name,random,alpha,of,length,between,1,10,query,name,id,query,name,id,return,query,name
AbstractBuilderTestCase -> protected static String createUniqueRandomName();1536137328;make sure query names are unique by suffixing them with increasing counter;protected static String createUniqueRandomName() {_        String queryName = randomAlphaOfLengthBetween(1, 10) + queryNameId__        queryNameId++__        return queryName__    };make,sure,query,names,are,unique,by,suffixing,them,with,increasing,counter;protected,static,string,create,unique,random,name,string,query,name,random,alpha,of,length,between,1,10,query,name,id,query,name,id,return,query,name
AbstractBuilderTestCase -> protected static String createUniqueRandomName();1536611444;make sure query names are unique by suffixing them with increasing counter;protected static String createUniqueRandomName() {_        String queryName = randomAlphaOfLengthBetween(1, 10) + queryNameId__        queryNameId++__        return queryName__    };make,sure,query,names,are,unique,by,suffixing,them,with,increasing,counter;protected,static,string,create,unique,random,name,string,query,name,random,alpha,of,length,between,1,10,query,name,id,query,name,id,return,query,name
AbstractBuilderTestCase -> protected static String createUniqueRandomName();1537806831;make sure query names are unique by suffixing them with increasing counter;protected static String createUniqueRandomName() {_        String queryName = randomAlphaOfLengthBetween(1, 10) + queryNameId__        queryNameId++__        return queryName__    };make,sure,query,names,are,unique,by,suffixing,them,with,increasing,counter;protected,static,string,create,unique,random,name,string,query,name,random,alpha,of,length,between,1,10,query,name,id,query,name,id,return,query,name
AbstractBuilderTestCase -> protected static String createUniqueRandomName();1545079094;make sure query names are unique by suffixing them with increasing counter;protected static String createUniqueRandomName() {_        String queryName = randomAlphaOfLengthBetween(1, 10) + queryNameId__        queryNameId++__        return queryName__    };make,sure,query,names,are,unique,by,suffixing,them,with,increasing,counter;protected,static,string,create,unique,random,name,string,query,name,random,alpha,of,length,between,1,10,query,name,id,query,name,id,return,query,name
AbstractBuilderTestCase -> protected static String createUniqueRandomName();1545098986;make sure query names are unique by suffixing them with increasing counter;protected static String createUniqueRandomName() {_        String queryName = randomAlphaOfLengthBetween(1, 10) + queryNameId__        queryNameId++__        return queryName__    };make,sure,query,names,are,unique,by,suffixing,them,with,increasing,counter;protected,static,string,create,unique,random,name,string,query,name,random,alpha,of,length,between,1,10,query,name,id,query,name,id,return,query,name
AbstractBuilderTestCase -> protected MultiTermVectorsResponse executeMultiTermVectors(MultiTermVectorsRequest mtvRequest);1526510804;Override this to handle {@link Client#get(GetRequest)} calls from parsers / builders;protected MultiTermVectorsResponse executeMultiTermVectors(MultiTermVectorsRequest mtvRequest) {_        throw new UnsupportedOperationException("this test can't handle MultiTermVector requests")__    };override,this,to,handle,link,client,get,get,request,calls,from,parsers,builders;protected,multi,term,vectors,response,execute,multi,term,vectors,multi,term,vectors,request,mtv,request,throw,new,unsupported,operation,exception,this,test,can,t,handle,multi,term,vector,requests
AbstractBuilderTestCase -> protected MultiTermVectorsResponse executeMultiTermVectors(MultiTermVectorsRequest mtvRequest);1531937412;Override this to handle {@link Client#get(GetRequest)} calls from parsers / builders;protected MultiTermVectorsResponse executeMultiTermVectors(MultiTermVectorsRequest mtvRequest) {_        throw new UnsupportedOperationException("this test can't handle MultiTermVector requests")__    };override,this,to,handle,link,client,get,get,request,calls,from,parsers,builders;protected,multi,term,vectors,response,execute,multi,term,vectors,multi,term,vectors,request,mtv,request,throw,new,unsupported,operation,exception,this,test,can,t,handle,multi,term,vector,requests
AbstractBuilderTestCase -> protected MultiTermVectorsResponse executeMultiTermVectors(MultiTermVectorsRequest mtvRequest);1532685069;Override this to handle {@link Client#get(GetRequest)} calls from parsers / builders;protected MultiTermVectorsResponse executeMultiTermVectors(MultiTermVectorsRequest mtvRequest) {_        throw new UnsupportedOperationException("this test can't handle MultiTermVector requests")__    };override,this,to,handle,link,client,get,get,request,calls,from,parsers,builders;protected,multi,term,vectors,response,execute,multi,term,vectors,multi,term,vectors,request,mtv,request,throw,new,unsupported,operation,exception,this,test,can,t,handle,multi,term,vector,requests
AbstractBuilderTestCase -> protected MultiTermVectorsResponse executeMultiTermVectors(MultiTermVectorsRequest mtvRequest);1533921794;Override this to handle {@link Client#get(GetRequest)} calls from parsers / builders;protected MultiTermVectorsResponse executeMultiTermVectors(MultiTermVectorsRequest mtvRequest) {_        throw new UnsupportedOperationException("this test can't handle MultiTermVector requests")__    };override,this,to,handle,link,client,get,get,request,calls,from,parsers,builders;protected,multi,term,vectors,response,execute,multi,term,vectors,multi,term,vectors,request,mtv,request,throw,new,unsupported,operation,exception,this,test,can,t,handle,multi,term,vector,requests
AbstractBuilderTestCase -> protected MultiTermVectorsResponse executeMultiTermVectors(MultiTermVectorsRequest mtvRequest);1534338685;Override this to handle {@link Client#get(GetRequest)} calls from parsers / builders;protected MultiTermVectorsResponse executeMultiTermVectors(MultiTermVectorsRequest mtvRequest) {_        throw new UnsupportedOperationException("this test can't handle MultiTermVector requests")__    };override,this,to,handle,link,client,get,get,request,calls,from,parsers,builders;protected,multi,term,vectors,response,execute,multi,term,vectors,multi,term,vectors,request,mtv,request,throw,new,unsupported,operation,exception,this,test,can,t,handle,multi,term,vector,requests
AbstractBuilderTestCase -> protected MultiTermVectorsResponse executeMultiTermVectors(MultiTermVectorsRequest mtvRequest);1536137328;Override this to handle {@link Client#get(GetRequest)} calls from parsers / builders;protected MultiTermVectorsResponse executeMultiTermVectors(MultiTermVectorsRequest mtvRequest) {_        throw new UnsupportedOperationException("this test can't handle MultiTermVector requests")__    };override,this,to,handle,link,client,get,get,request,calls,from,parsers,builders;protected,multi,term,vectors,response,execute,multi,term,vectors,multi,term,vectors,request,mtv,request,throw,new,unsupported,operation,exception,this,test,can,t,handle,multi,term,vector,requests
AbstractBuilderTestCase -> protected MultiTermVectorsResponse executeMultiTermVectors(MultiTermVectorsRequest mtvRequest);1536611444;Override this to handle {@link Client#get(GetRequest)} calls from parsers / builders;protected MultiTermVectorsResponse executeMultiTermVectors(MultiTermVectorsRequest mtvRequest) {_        throw new UnsupportedOperationException("this test can't handle MultiTermVector requests")__    };override,this,to,handle,link,client,get,get,request,calls,from,parsers,builders;protected,multi,term,vectors,response,execute,multi,term,vectors,multi,term,vectors,request,mtv,request,throw,new,unsupported,operation,exception,this,test,can,t,handle,multi,term,vector,requests
AbstractBuilderTestCase -> protected MultiTermVectorsResponse executeMultiTermVectors(MultiTermVectorsRequest mtvRequest);1537806831;Override this to handle {@link Client#get(GetRequest)} calls from parsers / builders;protected MultiTermVectorsResponse executeMultiTermVectors(MultiTermVectorsRequest mtvRequest) {_        throw new UnsupportedOperationException("this test can't handle MultiTermVector requests")__    };override,this,to,handle,link,client,get,get,request,calls,from,parsers,builders;protected,multi,term,vectors,response,execute,multi,term,vectors,multi,term,vectors,request,mtv,request,throw,new,unsupported,operation,exception,this,test,can,t,handle,multi,term,vector,requests
AbstractBuilderTestCase -> protected MultiTermVectorsResponse executeMultiTermVectors(MultiTermVectorsRequest mtvRequest);1545079094;Override this to handle {@link Client#get(GetRequest)} calls from parsers / builders;protected MultiTermVectorsResponse executeMultiTermVectors(MultiTermVectorsRequest mtvRequest) {_        throw new UnsupportedOperationException("this test can't handle MultiTermVector requests")__    };override,this,to,handle,link,client,get,get,request,calls,from,parsers,builders;protected,multi,term,vectors,response,execute,multi,term,vectors,multi,term,vectors,request,mtv,request,throw,new,unsupported,operation,exception,this,test,can,t,handle,multi,term,vector,requests
AbstractBuilderTestCase -> protected MultiTermVectorsResponse executeMultiTermVectors(MultiTermVectorsRequest mtvRequest);1545098986;Override this to handle {@link Client#get(GetRequest)} calls from parsers / builders;protected MultiTermVectorsResponse executeMultiTermVectors(MultiTermVectorsRequest mtvRequest) {_        throw new UnsupportedOperationException("this test can't handle MultiTermVector requests")__    };override,this,to,handle,link,client,get,get,request,calls,from,parsers,builders;protected,multi,term,vectors,response,execute,multi,term,vectors,multi,term,vectors,request,mtv,request,throw,new,unsupported,operation,exception,this,test,can,t,handle,multi,term,vector,requests
AbstractBuilderTestCase -> protected GetResponse executeGet(GetRequest getRequest);1526510804;Override this to handle {@link Client#get(GetRequest)} calls from parsers / builders;protected GetResponse executeGet(GetRequest getRequest) {_        throw new UnsupportedOperationException("this test can't handle GET requests")__    };override,this,to,handle,link,client,get,get,request,calls,from,parsers,builders;protected,get,response,execute,get,get,request,get,request,throw,new,unsupported,operation,exception,this,test,can,t,handle,get,requests
AbstractBuilderTestCase -> protected GetResponse executeGet(GetRequest getRequest);1531937412;Override this to handle {@link Client#get(GetRequest)} calls from parsers / builders;protected GetResponse executeGet(GetRequest getRequest) {_        throw new UnsupportedOperationException("this test can't handle GET requests")__    };override,this,to,handle,link,client,get,get,request,calls,from,parsers,builders;protected,get,response,execute,get,get,request,get,request,throw,new,unsupported,operation,exception,this,test,can,t,handle,get,requests
AbstractBuilderTestCase -> protected GetResponse executeGet(GetRequest getRequest);1532685069;Override this to handle {@link Client#get(GetRequest)} calls from parsers / builders;protected GetResponse executeGet(GetRequest getRequest) {_        throw new UnsupportedOperationException("this test can't handle GET requests")__    };override,this,to,handle,link,client,get,get,request,calls,from,parsers,builders;protected,get,response,execute,get,get,request,get,request,throw,new,unsupported,operation,exception,this,test,can,t,handle,get,requests
AbstractBuilderTestCase -> protected GetResponse executeGet(GetRequest getRequest);1533921794;Override this to handle {@link Client#get(GetRequest)} calls from parsers / builders;protected GetResponse executeGet(GetRequest getRequest) {_        throw new UnsupportedOperationException("this test can't handle GET requests")__    };override,this,to,handle,link,client,get,get,request,calls,from,parsers,builders;protected,get,response,execute,get,get,request,get,request,throw,new,unsupported,operation,exception,this,test,can,t,handle,get,requests
AbstractBuilderTestCase -> protected GetResponse executeGet(GetRequest getRequest);1534338685;Override this to handle {@link Client#get(GetRequest)} calls from parsers / builders;protected GetResponse executeGet(GetRequest getRequest) {_        throw new UnsupportedOperationException("this test can't handle GET requests")__    };override,this,to,handle,link,client,get,get,request,calls,from,parsers,builders;protected,get,response,execute,get,get,request,get,request,throw,new,unsupported,operation,exception,this,test,can,t,handle,get,requests
AbstractBuilderTestCase -> protected GetResponse executeGet(GetRequest getRequest);1536137328;Override this to handle {@link Client#get(GetRequest)} calls from parsers / builders;protected GetResponse executeGet(GetRequest getRequest) {_        throw new UnsupportedOperationException("this test can't handle GET requests")__    };override,this,to,handle,link,client,get,get,request,calls,from,parsers,builders;protected,get,response,execute,get,get,request,get,request,throw,new,unsupported,operation,exception,this,test,can,t,handle,get,requests
AbstractBuilderTestCase -> protected GetResponse executeGet(GetRequest getRequest);1536611444;Override this to handle {@link Client#get(GetRequest)} calls from parsers / builders;protected GetResponse executeGet(GetRequest getRequest) {_        throw new UnsupportedOperationException("this test can't handle GET requests")__    };override,this,to,handle,link,client,get,get,request,calls,from,parsers,builders;protected,get,response,execute,get,get,request,get,request,throw,new,unsupported,operation,exception,this,test,can,t,handle,get,requests
AbstractBuilderTestCase -> protected GetResponse executeGet(GetRequest getRequest);1537806831;Override this to handle {@link Client#get(GetRequest)} calls from parsers / builders;protected GetResponse executeGet(GetRequest getRequest) {_        throw new UnsupportedOperationException("this test can't handle GET requests")__    };override,this,to,handle,link,client,get,get,request,calls,from,parsers,builders;protected,get,response,execute,get,get,request,get,request,throw,new,unsupported,operation,exception,this,test,can,t,handle,get,requests
AbstractBuilderTestCase -> protected GetResponse executeGet(GetRequest getRequest);1545079094;Override this to handle {@link Client#get(GetRequest)} calls from parsers / builders;protected GetResponse executeGet(GetRequest getRequest) {_        throw new UnsupportedOperationException("this test can't handle GET requests")__    };override,this,to,handle,link,client,get,get,request,calls,from,parsers,builders;protected,get,response,execute,get,get,request,get,request,throw,new,unsupported,operation,exception,this,test,can,t,handle,get,requests
AbstractBuilderTestCase -> protected GetResponse executeGet(GetRequest getRequest);1545098986;Override this to handle {@link Client#get(GetRequest)} calls from parsers / builders;protected GetResponse executeGet(GetRequest getRequest) {_        throw new UnsupportedOperationException("this test can't handle GET requests")__    };override,this,to,handle,link,client,get,get,request,calls,from,parsers,builders;protected,get,response,execute,get,get,request,get,request,throw,new,unsupported,operation,exception,this,test,can,t,handle,get,requests
AbstractBuilderTestCase -> protected static QueryShardContext createShardContextWithNoType();1532685069;@return a new {@link QueryShardContext} based on an index with no type registered;protected static QueryShardContext createShardContextWithNoType() {_        return serviceHolderWithNoType.createShardContext(null)__    };return,a,new,link,query,shard,context,based,on,an,index,with,no,type,registered;protected,static,query,shard,context,create,shard,context,with,no,type,return,service,holder,with,no,type,create,shard,context,null
AbstractBuilderTestCase -> protected static QueryShardContext createShardContextWithNoType();1533921794;@return a new {@link QueryShardContext} based on an index with no type registered;protected static QueryShardContext createShardContextWithNoType() {_        return serviceHolderWithNoType.createShardContext(null)__    };return,a,new,link,query,shard,context,based,on,an,index,with,no,type,registered;protected,static,query,shard,context,create,shard,context,with,no,type,return,service,holder,with,no,type,create,shard,context,null
AbstractBuilderTestCase -> protected static QueryShardContext createShardContextWithNoType();1534338685;@return a new {@link QueryShardContext} based on an index with no type registered;protected static QueryShardContext createShardContextWithNoType() {_        return serviceHolderWithNoType.createShardContext(null)__    };return,a,new,link,query,shard,context,based,on,an,index,with,no,type,registered;protected,static,query,shard,context,create,shard,context,with,no,type,return,service,holder,with,no,type,create,shard,context,null
AbstractBuilderTestCase -> protected static QueryShardContext createShardContextWithNoType();1536137328;@return a new {@link QueryShardContext} based on an index with no type registered;protected static QueryShardContext createShardContextWithNoType() {_        return serviceHolderWithNoType.createShardContext(null)__    };return,a,new,link,query,shard,context,based,on,an,index,with,no,type,registered;protected,static,query,shard,context,create,shard,context,with,no,type,return,service,holder,with,no,type,create,shard,context,null
AbstractBuilderTestCase -> protected static QueryShardContext createShardContextWithNoType();1536611444;@return a new {@link QueryShardContext} based on an index with no type registered;protected static QueryShardContext createShardContextWithNoType() {_        return serviceHolderWithNoType.createShardContext(null)__    };return,a,new,link,query,shard,context,based,on,an,index,with,no,type,registered;protected,static,query,shard,context,create,shard,context,with,no,type,return,service,holder,with,no,type,create,shard,context,null
AbstractBuilderTestCase -> protected static QueryShardContext createShardContextWithNoType();1537806831;@return a new {@link QueryShardContext} based on an index with no type registered;protected static QueryShardContext createShardContextWithNoType() {_        return serviceHolderWithNoType.createShardContext(null)__    };return,a,new,link,query,shard,context,based,on,an,index,with,no,type,registered;protected,static,query,shard,context,create,shard,context,with,no,type,return,service,holder,with,no,type,create,shard,context,null
AbstractBuilderTestCase -> protected static QueryShardContext createShardContextWithNoType();1545079094;@return a new {@link QueryShardContext} based on an index with no type registered;protected static QueryShardContext createShardContextWithNoType() {_        return serviceHolderWithNoType.createShardContext(null)__    };return,a,new,link,query,shard,context,based,on,an,index,with,no,type,registered;protected,static,query,shard,context,create,shard,context,with,no,type,return,service,holder,with,no,type,create,shard,context,null
AbstractBuilderTestCase -> protected static QueryShardContext createShardContextWithNoType();1545098986;@return a new {@link QueryShardContext} based on an index with no type registered;protected static QueryShardContext createShardContextWithNoType() {_        return serviceHolderWithNoType.createShardContext(null)__    };return,a,new,link,query,shard,context,based,on,an,index,with,no,type,registered;protected,static,query,shard,context,create,shard,context,with,no,type,return,service,holder,with,no,type,create,shard,context,null
