# id;timestamp;commentText;codeText;commentWords;codeWords
ESSingleNodeTestCase -> @SafeVarargs     @SuppressWarnings("varargs")      protected final Collection<Class<? extends Plugin>> pluginList(Class<? extends Plugin>... plugins);1524684173;Helper method to create list of plugins without specifying generic types.;@SafeVarargs_    @SuppressWarnings("varargs") _    protected final Collection<Class<? extends Plugin>> pluginList(Class<? extends Plugin>... plugins) {_        return Arrays.asList(plugins)__    };helper,method,to,create,list,of,plugins,without,specifying,generic,types;safe,varargs,suppress,warnings,varargs,protected,final,collection,class,extends,plugin,plugin,list,class,extends,plugin,plugins,return,arrays,as,list,plugins
ESSingleNodeTestCase -> @SafeVarargs     @SuppressWarnings("varargs")      protected final Collection<Class<? extends Plugin>> pluginList(Class<? extends Plugin>... plugins);1525162917;Helper method to create list of plugins without specifying generic types.;@SafeVarargs_    @SuppressWarnings("varargs") _    protected final Collection<Class<? extends Plugin>> pluginList(Class<? extends Plugin>... plugins) {_        return Arrays.asList(plugins)__    };helper,method,to,create,list,of,plugins,without,specifying,generic,types;safe,varargs,suppress,warnings,varargs,protected,final,collection,class,extends,plugin,plugin,list,class,extends,plugin,plugins,return,arrays,as,list,plugins
ESSingleNodeTestCase -> @SafeVarargs     @SuppressWarnings("varargs")      protected final Collection<Class<? extends Plugin>> pluginList(Class<? extends Plugin>... plugins);1525334055;Helper method to create list of plugins without specifying generic types.;@SafeVarargs_    @SuppressWarnings("varargs") _    protected final Collection<Class<? extends Plugin>> pluginList(Class<? extends Plugin>... plugins) {_        return Arrays.asList(plugins)__    };helper,method,to,create,list,of,plugins,without,specifying,generic,types;safe,varargs,suppress,warnings,varargs,protected,final,collection,class,extends,plugin,plugin,list,class,extends,plugin,plugins,return,arrays,as,list,plugins
ESSingleNodeTestCase -> @SafeVarargs     @SuppressWarnings("varargs")      protected final Collection<Class<? extends Plugin>> pluginList(Class<? extends Plugin>... plugins);1528762805;Helper method to create list of plugins without specifying generic types.;@SafeVarargs_    @SuppressWarnings("varargs") _    protected final Collection<Class<? extends Plugin>> pluginList(Class<? extends Plugin>... plugins) {_        return Arrays.asList(plugins)__    };helper,method,to,create,list,of,plugins,without,specifying,generic,types;safe,varargs,suppress,warnings,varargs,protected,final,collection,class,extends,plugin,plugin,list,class,extends,plugin,plugins,return,arrays,as,list,plugins
ESSingleNodeTestCase -> @SafeVarargs     @SuppressWarnings("varargs")      protected final Collection<Class<? extends Plugin>> pluginList(Class<? extends Plugin>... plugins);1531910483;Helper method to create list of plugins without specifying generic types.;@SafeVarargs_    @SuppressWarnings("varargs") _    protected final Collection<Class<? extends Plugin>> pluginList(Class<? extends Plugin>... plugins) {_        return Arrays.asList(plugins)__    };helper,method,to,create,list,of,plugins,without,specifying,generic,types;safe,varargs,suppress,warnings,varargs,protected,final,collection,class,extends,plugin,plugin,list,class,extends,plugin,plugins,return,arrays,as,list,plugins
ESSingleNodeTestCase -> @SafeVarargs     @SuppressWarnings("varargs")      protected final Collection<Class<? extends Plugin>> pluginList(Class<? extends Plugin>... plugins);1535723122;Helper method to create list of plugins without specifying generic types.;@SafeVarargs_    @SuppressWarnings("varargs") _    protected final Collection<Class<? extends Plugin>> pluginList(Class<? extends Plugin>... plugins) {_        return Arrays.asList(plugins)__    };helper,method,to,create,list,of,plugins,without,specifying,generic,types;safe,varargs,suppress,warnings,varargs,protected,final,collection,class,extends,plugin,plugin,list,class,extends,plugin,plugins,return,arrays,as,list,plugins
ESSingleNodeTestCase -> @SafeVarargs     @SuppressWarnings("varargs")      protected final Collection<Class<? extends Plugin>> pluginList(Class<? extends Plugin>... plugins);1536137328;Helper method to create list of plugins without specifying generic types.;@SafeVarargs_    @SuppressWarnings("varargs") _    protected final Collection<Class<? extends Plugin>> pluginList(Class<? extends Plugin>... plugins) {_        return Arrays.asList(plugins)__    };helper,method,to,create,list,of,plugins,without,specifying,generic,types;safe,varargs,suppress,warnings,varargs,protected,final,collection,class,extends,plugin,plugin,list,class,extends,plugin,plugins,return,arrays,as,list,plugins
ESSingleNodeTestCase -> @SafeVarargs     @SuppressWarnings("varargs")      protected final Collection<Class<? extends Plugin>> pluginList(Class<? extends Plugin>... plugins);1536828374;Helper method to create list of plugins without specifying generic types.;@SafeVarargs_    @SuppressWarnings("varargs") _    protected final Collection<Class<? extends Plugin>> pluginList(Class<? extends Plugin>... plugins) {_        return Arrays.asList(plugins)__    };helper,method,to,create,list,of,plugins,without,specifying,generic,types;safe,varargs,suppress,warnings,varargs,protected,final,collection,class,extends,plugin,plugin,list,class,extends,plugin,plugins,return,arrays,as,list,plugins
ESSingleNodeTestCase -> @SafeVarargs     @SuppressWarnings("varargs")      protected final Collection<Class<? extends Plugin>> pluginList(Class<? extends Plugin>... plugins);1544081506;Helper method to create list of plugins without specifying generic types.;@SafeVarargs_    @SuppressWarnings("varargs") _    protected final Collection<Class<? extends Plugin>> pluginList(Class<? extends Plugin>... plugins) {_        return Arrays.asList(plugins)__    };helper,method,to,create,list,of,plugins,without,specifying,generic,types;safe,varargs,suppress,warnings,varargs,protected,final,collection,class,extends,plugin,plugin,list,class,extends,plugin,plugins,return,arrays,as,list,plugins
ESSingleNodeTestCase -> @SafeVarargs     @SuppressWarnings("varargs")      protected final Collection<Class<? extends Plugin>> pluginList(Class<? extends Plugin>... plugins);1545315633;Helper method to create list of plugins without specifying generic types.;@SafeVarargs_    @SuppressWarnings("varargs") _    protected final Collection<Class<? extends Plugin>> pluginList(Class<? extends Plugin>... plugins) {_        return Arrays.asList(plugins)__    };helper,method,to,create,list,of,plugins,without,specifying,generic,types;safe,varargs,suppress,warnings,varargs,protected,final,collection,class,extends,plugin,plugin,list,class,extends,plugin,plugins,return,arrays,as,list,plugins
ESSingleNodeTestCase -> @SafeVarargs     @SuppressWarnings("varargs")      protected final Collection<Class<? extends Plugin>> pluginList(Class<? extends Plugin>... plugins);1549356412;Helper method to create list of plugins without specifying generic types.;@SafeVarargs_    @SuppressWarnings("varargs") _    protected final Collection<Class<? extends Plugin>> pluginList(Class<? extends Plugin>... plugins) {_        return Arrays.asList(plugins)__    };helper,method,to,create,list,of,plugins,without,specifying,generic,types;safe,varargs,suppress,warnings,varargs,protected,final,collection,class,extends,plugin,plugin,list,class,extends,plugin,plugins,return,arrays,as,list,plugins
ESSingleNodeTestCase -> @SafeVarargs     @SuppressWarnings("varargs")      protected final Collection<Class<? extends Plugin>> pluginList(Class<? extends Plugin>... plugins);1549388544;Helper method to create list of plugins without specifying generic types.;@SafeVarargs_    @SuppressWarnings("varargs") _    protected final Collection<Class<? extends Plugin>> pluginList(Class<? extends Plugin>... plugins) {_        return Arrays.asList(plugins)__    };helper,method,to,create,list,of,plugins,without,specifying,generic,types;safe,varargs,suppress,warnings,varargs,protected,final,collection,class,extends,plugin,plugin,list,class,extends,plugin,plugins,return,arrays,as,list,plugins
ESSingleNodeTestCase -> @SafeVarargs     @SuppressWarnings("varargs")      protected final Collection<Class<? extends Plugin>> pluginList(Class<? extends Plugin>... plugins);1549452878;Helper method to create list of plugins without specifying generic types.;@SafeVarargs_    @SuppressWarnings("varargs") _    protected final Collection<Class<? extends Plugin>> pluginList(Class<? extends Plugin>... plugins) {_        return Arrays.asList(plugins)__    };helper,method,to,create,list,of,plugins,without,specifying,generic,types;safe,varargs,suppress,warnings,varargs,protected,final,collection,class,extends,plugin,plugin,list,class,extends,plugin,plugins,return,arrays,as,list,plugins
ESSingleNodeTestCase -> @SafeVarargs     @SuppressWarnings("varargs")      protected final Collection<Class<? extends Plugin>> pluginList(Class<? extends Plugin>... plugins);1550166004;Helper method to create list of plugins without specifying generic types.;@SafeVarargs_    @SuppressWarnings("varargs") _    protected final Collection<Class<? extends Plugin>> pluginList(Class<? extends Plugin>... plugins) {_        return Arrays.asList(plugins)__    };helper,method,to,create,list,of,plugins,without,specifying,generic,types;safe,varargs,suppress,warnings,varargs,protected,final,collection,class,extends,plugin,plugin,list,class,extends,plugin,plugins,return,arrays,as,list,plugins
ESSingleNodeTestCase -> @SafeVarargs     @SuppressWarnings("varargs")      protected final Collection<Class<? extends Plugin>> pluginList(Class<? extends Plugin>... plugins);1550511450;Helper method to create list of plugins without specifying generic types.;@SafeVarargs_    @SuppressWarnings("varargs") _    protected final Collection<Class<? extends Plugin>> pluginList(Class<? extends Plugin>... plugins) {_        return Arrays.asList(plugins)__    };helper,method,to,create,list,of,plugins,without,specifying,generic,types;safe,varargs,suppress,warnings,varargs,protected,final,collection,class,extends,plugin,plugin,list,class,extends,plugin,plugins,return,arrays,as,list,plugins
ESSingleNodeTestCase -> @SafeVarargs     @SuppressWarnings("varargs")      protected final Collection<Class<? extends Plugin>> pluginList(Class<? extends Plugin>... plugins);1551176390;Helper method to create list of plugins without specifying generic types.;@SafeVarargs_    @SuppressWarnings("varargs") _    protected final Collection<Class<? extends Plugin>> pluginList(Class<? extends Plugin>... plugins) {_        return Arrays.asList(plugins)__    };helper,method,to,create,list,of,plugins,without,specifying,generic,types;safe,varargs,suppress,warnings,varargs,protected,final,collection,class,extends,plugin,plugin,list,class,extends,plugin,plugins,return,arrays,as,list,plugins
ESSingleNodeTestCase -> protected boolean resetNodeAfterTest();1524684173;This method returns <code>true</code> if the node that is used in the background should be reset_after each test. This is useful if the test changes the cluster state metadata etc. The default is_<code>false</code>.;protected boolean resetNodeAfterTest() {_        return false__    };this,method,returns,code,true,code,if,the,node,that,is,used,in,the,background,should,be,reset,after,each,test,this,is,useful,if,the,test,changes,the,cluster,state,metadata,etc,the,default,is,code,false,code;protected,boolean,reset,node,after,test,return,false
ESSingleNodeTestCase -> protected boolean resetNodeAfterTest();1525162917;This method returns <code>true</code> if the node that is used in the background should be reset_after each test. This is useful if the test changes the cluster state metadata etc. The default is_<code>false</code>.;protected boolean resetNodeAfterTest() {_        return false__    };this,method,returns,code,true,code,if,the,node,that,is,used,in,the,background,should,be,reset,after,each,test,this,is,useful,if,the,test,changes,the,cluster,state,metadata,etc,the,default,is,code,false,code;protected,boolean,reset,node,after,test,return,false
ESSingleNodeTestCase -> protected boolean resetNodeAfterTest();1525334055;This method returns <code>true</code> if the node that is used in the background should be reset_after each test. This is useful if the test changes the cluster state metadata etc. The default is_<code>false</code>.;protected boolean resetNodeAfterTest() {_        return false__    };this,method,returns,code,true,code,if,the,node,that,is,used,in,the,background,should,be,reset,after,each,test,this,is,useful,if,the,test,changes,the,cluster,state,metadata,etc,the,default,is,code,false,code;protected,boolean,reset,node,after,test,return,false
ESSingleNodeTestCase -> protected boolean resetNodeAfterTest();1528762805;This method returns <code>true</code> if the node that is used in the background should be reset_after each test. This is useful if the test changes the cluster state metadata etc. The default is_<code>false</code>.;protected boolean resetNodeAfterTest() {_        return false__    };this,method,returns,code,true,code,if,the,node,that,is,used,in,the,background,should,be,reset,after,each,test,this,is,useful,if,the,test,changes,the,cluster,state,metadata,etc,the,default,is,code,false,code;protected,boolean,reset,node,after,test,return,false
ESSingleNodeTestCase -> protected boolean resetNodeAfterTest();1531910483;This method returns <code>true</code> if the node that is used in the background should be reset_after each test. This is useful if the test changes the cluster state metadata etc. The default is_<code>false</code>.;protected boolean resetNodeAfterTest() {_        return false__    };this,method,returns,code,true,code,if,the,node,that,is,used,in,the,background,should,be,reset,after,each,test,this,is,useful,if,the,test,changes,the,cluster,state,metadata,etc,the,default,is,code,false,code;protected,boolean,reset,node,after,test,return,false
ESSingleNodeTestCase -> protected boolean resetNodeAfterTest();1535723122;This method returns <code>true</code> if the node that is used in the background should be reset_after each test. This is useful if the test changes the cluster state metadata etc. The default is_<code>false</code>.;protected boolean resetNodeAfterTest() {_        return false__    };this,method,returns,code,true,code,if,the,node,that,is,used,in,the,background,should,be,reset,after,each,test,this,is,useful,if,the,test,changes,the,cluster,state,metadata,etc,the,default,is,code,false,code;protected,boolean,reset,node,after,test,return,false
ESSingleNodeTestCase -> protected boolean resetNodeAfterTest();1536137328;This method returns <code>true</code> if the node that is used in the background should be reset_after each test. This is useful if the test changes the cluster state metadata etc. The default is_<code>false</code>.;protected boolean resetNodeAfterTest() {_        return false__    };this,method,returns,code,true,code,if,the,node,that,is,used,in,the,background,should,be,reset,after,each,test,this,is,useful,if,the,test,changes,the,cluster,state,metadata,etc,the,default,is,code,false,code;protected,boolean,reset,node,after,test,return,false
ESSingleNodeTestCase -> protected boolean resetNodeAfterTest();1536828374;This method returns <code>true</code> if the node that is used in the background should be reset_after each test. This is useful if the test changes the cluster state metadata etc. The default is_<code>false</code>.;protected boolean resetNodeAfterTest() {_        return false__    };this,method,returns,code,true,code,if,the,node,that,is,used,in,the,background,should,be,reset,after,each,test,this,is,useful,if,the,test,changes,the,cluster,state,metadata,etc,the,default,is,code,false,code;protected,boolean,reset,node,after,test,return,false
ESSingleNodeTestCase -> protected boolean resetNodeAfterTest();1544081506;This method returns <code>true</code> if the node that is used in the background should be reset_after each test. This is useful if the test changes the cluster state metadata etc. The default is_<code>false</code>.;protected boolean resetNodeAfterTest() {_        return false__    };this,method,returns,code,true,code,if,the,node,that,is,used,in,the,background,should,be,reset,after,each,test,this,is,useful,if,the,test,changes,the,cluster,state,metadata,etc,the,default,is,code,false,code;protected,boolean,reset,node,after,test,return,false
ESSingleNodeTestCase -> protected boolean resetNodeAfterTest();1545315633;This method returns <code>true</code> if the node that is used in the background should be reset_after each test. This is useful if the test changes the cluster state metadata etc. The default is_<code>false</code>.;protected boolean resetNodeAfterTest() {_        return false__    };this,method,returns,code,true,code,if,the,node,that,is,used,in,the,background,should,be,reset,after,each,test,this,is,useful,if,the,test,changes,the,cluster,state,metadata,etc,the,default,is,code,false,code;protected,boolean,reset,node,after,test,return,false
ESSingleNodeTestCase -> protected boolean resetNodeAfterTest();1549356412;This method returns <code>true</code> if the node that is used in the background should be reset_after each test. This is useful if the test changes the cluster state metadata etc. The default is_<code>false</code>.;protected boolean resetNodeAfterTest() {_        return false__    };this,method,returns,code,true,code,if,the,node,that,is,used,in,the,background,should,be,reset,after,each,test,this,is,useful,if,the,test,changes,the,cluster,state,metadata,etc,the,default,is,code,false,code;protected,boolean,reset,node,after,test,return,false
ESSingleNodeTestCase -> protected boolean resetNodeAfterTest();1549388544;This method returns <code>true</code> if the node that is used in the background should be reset_after each test. This is useful if the test changes the cluster state metadata etc. The default is_<code>false</code>.;protected boolean resetNodeAfterTest() {_        return false__    };this,method,returns,code,true,code,if,the,node,that,is,used,in,the,background,should,be,reset,after,each,test,this,is,useful,if,the,test,changes,the,cluster,state,metadata,etc,the,default,is,code,false,code;protected,boolean,reset,node,after,test,return,false
ESSingleNodeTestCase -> protected boolean resetNodeAfterTest();1549452878;This method returns <code>true</code> if the node that is used in the background should be reset_after each test. This is useful if the test changes the cluster state metadata etc. The default is_<code>false</code>.;protected boolean resetNodeAfterTest() {_        return false__    };this,method,returns,code,true,code,if,the,node,that,is,used,in,the,background,should,be,reset,after,each,test,this,is,useful,if,the,test,changes,the,cluster,state,metadata,etc,the,default,is,code,false,code;protected,boolean,reset,node,after,test,return,false
ESSingleNodeTestCase -> protected boolean resetNodeAfterTest();1550166004;This method returns <code>true</code> if the node that is used in the background should be reset_after each test. This is useful if the test changes the cluster state metadata etc. The default is_<code>false</code>.;protected boolean resetNodeAfterTest() {_        return false__    };this,method,returns,code,true,code,if,the,node,that,is,used,in,the,background,should,be,reset,after,each,test,this,is,useful,if,the,test,changes,the,cluster,state,metadata,etc,the,default,is,code,false,code;protected,boolean,reset,node,after,test,return,false
ESSingleNodeTestCase -> protected boolean resetNodeAfterTest();1550511450;This method returns <code>true</code> if the node that is used in the background should be reset_after each test. This is useful if the test changes the cluster state metadata etc. The default is_<code>false</code>.;protected boolean resetNodeAfterTest() {_        return false__    };this,method,returns,code,true,code,if,the,node,that,is,used,in,the,background,should,be,reset,after,each,test,this,is,useful,if,the,test,changes,the,cluster,state,metadata,etc,the,default,is,code,false,code;protected,boolean,reset,node,after,test,return,false
ESSingleNodeTestCase -> protected boolean resetNodeAfterTest();1551176390;This method returns <code>true</code> if the node that is used in the background should be reset_after each test. This is useful if the test changes the cluster state metadata etc. The default is_<code>false</code>.;protected boolean resetNodeAfterTest() {_        return false__    };this,method,returns,code,true,code,if,the,node,that,is,used,in,the,background,should,be,reset,after,each,test,this,is,useful,if,the,test,changes,the,cluster,state,metadata,etc,the,default,is,code,false,code;protected,boolean,reset,node,after,test,return,false
ESSingleNodeTestCase -> protected boolean addMockHttpTransport();1525334055;True if a dummy http transport should be used, or false if the real http transport should be used.;protected boolean addMockHttpTransport() {_        return true__    };true,if,a,dummy,http,transport,should,be,used,or,false,if,the,real,http,transport,should,be,used;protected,boolean,add,mock,http,transport,return,true
ESSingleNodeTestCase -> protected boolean addMockHttpTransport();1528762805;True if a dummy http transport should be used, or false if the real http transport should be used.;protected boolean addMockHttpTransport() {_        return true__    };true,if,a,dummy,http,transport,should,be,used,or,false,if,the,real,http,transport,should,be,used;protected,boolean,add,mock,http,transport,return,true
ESSingleNodeTestCase -> protected boolean addMockHttpTransport();1531910483;True if a dummy http transport should be used, or false if the real http transport should be used.;protected boolean addMockHttpTransport() {_        return true__    };true,if,a,dummy,http,transport,should,be,used,or,false,if,the,real,http,transport,should,be,used;protected,boolean,add,mock,http,transport,return,true
ESSingleNodeTestCase -> protected boolean addMockHttpTransport();1535723122;True if a dummy http transport should be used, or false if the real http transport should be used.;protected boolean addMockHttpTransport() {_        return true__    };true,if,a,dummy,http,transport,should,be,used,or,false,if,the,real,http,transport,should,be,used;protected,boolean,add,mock,http,transport,return,true
ESSingleNodeTestCase -> protected boolean addMockHttpTransport();1536137328;True if a dummy http transport should be used, or false if the real http transport should be used.;protected boolean addMockHttpTransport() {_        return true__    };true,if,a,dummy,http,transport,should,be,used,or,false,if,the,real,http,transport,should,be,used;protected,boolean,add,mock,http,transport,return,true
ESSingleNodeTestCase -> protected boolean addMockHttpTransport();1536828374;True if a dummy http transport should be used, or false if the real http transport should be used.;protected boolean addMockHttpTransport() {_        return true__    };true,if,a,dummy,http,transport,should,be,used,or,false,if,the,real,http,transport,should,be,used;protected,boolean,add,mock,http,transport,return,true
ESSingleNodeTestCase -> protected boolean addMockHttpTransport();1544081506;True if a dummy http transport should be used, or false if the real http transport should be used.;protected boolean addMockHttpTransport() {_        return true__    };true,if,a,dummy,http,transport,should,be,used,or,false,if,the,real,http,transport,should,be,used;protected,boolean,add,mock,http,transport,return,true
ESSingleNodeTestCase -> protected boolean addMockHttpTransport();1545315633;True if a dummy http transport should be used, or false if the real http transport should be used.;protected boolean addMockHttpTransport() {_        return true__    };true,if,a,dummy,http,transport,should,be,used,or,false,if,the,real,http,transport,should,be,used;protected,boolean,add,mock,http,transport,return,true
ESSingleNodeTestCase -> protected boolean addMockHttpTransport();1549356412;True if a dummy http transport should be used, or false if the real http transport should be used.;protected boolean addMockHttpTransport() {_        return true__    };true,if,a,dummy,http,transport,should,be,used,or,false,if,the,real,http,transport,should,be,used;protected,boolean,add,mock,http,transport,return,true
ESSingleNodeTestCase -> protected boolean addMockHttpTransport();1549388544;True if a dummy http transport should be used, or false if the real http transport should be used.;protected boolean addMockHttpTransport() {_        return true__    };true,if,a,dummy,http,transport,should,be,used,or,false,if,the,real,http,transport,should,be,used;protected,boolean,add,mock,http,transport,return,true
ESSingleNodeTestCase -> protected boolean addMockHttpTransport();1549452878;True if a dummy http transport should be used, or false if the real http transport should be used.;protected boolean addMockHttpTransport() {_        return true__    };true,if,a,dummy,http,transport,should,be,used,or,false,if,the,real,http,transport,should,be,used;protected,boolean,add,mock,http,transport,return,true
ESSingleNodeTestCase -> protected boolean addMockHttpTransport();1550166004;True if a dummy http transport should be used, or false if the real http transport should be used.;protected boolean addMockHttpTransport() {_        return true__    };true,if,a,dummy,http,transport,should,be,used,or,false,if,the,real,http,transport,should,be,used;protected,boolean,add,mock,http,transport,return,true
ESSingleNodeTestCase -> protected boolean addMockHttpTransport();1550511450;True if a dummy http transport should be used, or false if the real http transport should be used.;protected boolean addMockHttpTransport() {_        return true__    };true,if,a,dummy,http,transport,should,be,used,or,false,if,the,real,http,transport,should,be,used;protected,boolean,add,mock,http,transport,return,true
ESSingleNodeTestCase -> protected boolean addMockHttpTransport();1551176390;True if a dummy http transport should be used, or false if the real http transport should be used.;protected boolean addMockHttpTransport() {_        return true__    };true,if,a,dummy,http,transport,should,be,used,or,false,if,the,real,http,transport,should,be,used;protected,boolean,add,mock,http,transport,return,true
ESSingleNodeTestCase -> public ClusterHealthStatus ensureGreen(String... indices);1524684173;Ensures the cluster has a green state via the cluster health API. This method will also wait for relocations._It is useful to ensure that all action on the cluster have finished and all shards that were currently relocating_are now allocated and started.;public ClusterHealthStatus ensureGreen(String... indices) {_        return ensureGreen(TimeValue.timeValueSeconds(30), indices)__    };ensures,the,cluster,has,a,green,state,via,the,cluster,health,api,this,method,will,also,wait,for,relocations,it,is,useful,to,ensure,that,all,action,on,the,cluster,have,finished,and,all,shards,that,were,currently,relocating,are,now,allocated,and,started;public,cluster,health,status,ensure,green,string,indices,return,ensure,green,time,value,time,value,seconds,30,indices
ESSingleNodeTestCase -> public ClusterHealthStatus ensureGreen(String... indices);1525162917;Ensures the cluster has a green state via the cluster health API. This method will also wait for relocations._It is useful to ensure that all action on the cluster have finished and all shards that were currently relocating_are now allocated and started.;public ClusterHealthStatus ensureGreen(String... indices) {_        return ensureGreen(TimeValue.timeValueSeconds(30), indices)__    };ensures,the,cluster,has,a,green,state,via,the,cluster,health,api,this,method,will,also,wait,for,relocations,it,is,useful,to,ensure,that,all,action,on,the,cluster,have,finished,and,all,shards,that,were,currently,relocating,are,now,allocated,and,started;public,cluster,health,status,ensure,green,string,indices,return,ensure,green,time,value,time,value,seconds,30,indices
ESSingleNodeTestCase -> public ClusterHealthStatus ensureGreen(String... indices);1525334055;Ensures the cluster has a green state via the cluster health API. This method will also wait for relocations._It is useful to ensure that all action on the cluster have finished and all shards that were currently relocating_are now allocated and started.;public ClusterHealthStatus ensureGreen(String... indices) {_        return ensureGreen(TimeValue.timeValueSeconds(30), indices)__    };ensures,the,cluster,has,a,green,state,via,the,cluster,health,api,this,method,will,also,wait,for,relocations,it,is,useful,to,ensure,that,all,action,on,the,cluster,have,finished,and,all,shards,that,were,currently,relocating,are,now,allocated,and,started;public,cluster,health,status,ensure,green,string,indices,return,ensure,green,time,value,time,value,seconds,30,indices
ESSingleNodeTestCase -> public ClusterHealthStatus ensureGreen(String... indices);1528762805;Ensures the cluster has a green state via the cluster health API. This method will also wait for relocations._It is useful to ensure that all action on the cluster have finished and all shards that were currently relocating_are now allocated and started.;public ClusterHealthStatus ensureGreen(String... indices) {_        return ensureGreen(TimeValue.timeValueSeconds(30), indices)__    };ensures,the,cluster,has,a,green,state,via,the,cluster,health,api,this,method,will,also,wait,for,relocations,it,is,useful,to,ensure,that,all,action,on,the,cluster,have,finished,and,all,shards,that,were,currently,relocating,are,now,allocated,and,started;public,cluster,health,status,ensure,green,string,indices,return,ensure,green,time,value,time,value,seconds,30,indices
ESSingleNodeTestCase -> public ClusterHealthStatus ensureGreen(String... indices);1531910483;Ensures the cluster has a green state via the cluster health API. This method will also wait for relocations._It is useful to ensure that all action on the cluster have finished and all shards that were currently relocating_are now allocated and started.;public ClusterHealthStatus ensureGreen(String... indices) {_        return ensureGreen(TimeValue.timeValueSeconds(30), indices)__    };ensures,the,cluster,has,a,green,state,via,the,cluster,health,api,this,method,will,also,wait,for,relocations,it,is,useful,to,ensure,that,all,action,on,the,cluster,have,finished,and,all,shards,that,were,currently,relocating,are,now,allocated,and,started;public,cluster,health,status,ensure,green,string,indices,return,ensure,green,time,value,time,value,seconds,30,indices
ESSingleNodeTestCase -> public ClusterHealthStatus ensureGreen(String... indices);1535723122;Ensures the cluster has a green state via the cluster health API. This method will also wait for relocations._It is useful to ensure that all action on the cluster have finished and all shards that were currently relocating_are now allocated and started.;public ClusterHealthStatus ensureGreen(String... indices) {_        return ensureGreen(TimeValue.timeValueSeconds(30), indices)__    };ensures,the,cluster,has,a,green,state,via,the,cluster,health,api,this,method,will,also,wait,for,relocations,it,is,useful,to,ensure,that,all,action,on,the,cluster,have,finished,and,all,shards,that,were,currently,relocating,are,now,allocated,and,started;public,cluster,health,status,ensure,green,string,indices,return,ensure,green,time,value,time,value,seconds,30,indices
ESSingleNodeTestCase -> public ClusterHealthStatus ensureGreen(String... indices);1536137328;Ensures the cluster has a green state via the cluster health API. This method will also wait for relocations._It is useful to ensure that all action on the cluster have finished and all shards that were currently relocating_are now allocated and started.;public ClusterHealthStatus ensureGreen(String... indices) {_        return ensureGreen(TimeValue.timeValueSeconds(30), indices)__    };ensures,the,cluster,has,a,green,state,via,the,cluster,health,api,this,method,will,also,wait,for,relocations,it,is,useful,to,ensure,that,all,action,on,the,cluster,have,finished,and,all,shards,that,were,currently,relocating,are,now,allocated,and,started;public,cluster,health,status,ensure,green,string,indices,return,ensure,green,time,value,time,value,seconds,30,indices
ESSingleNodeTestCase -> public ClusterHealthStatus ensureGreen(String... indices);1536828374;Ensures the cluster has a green state via the cluster health API. This method will also wait for relocations._It is useful to ensure that all action on the cluster have finished and all shards that were currently relocating_are now allocated and started.;public ClusterHealthStatus ensureGreen(String... indices) {_        return ensureGreen(TimeValue.timeValueSeconds(30), indices)__    };ensures,the,cluster,has,a,green,state,via,the,cluster,health,api,this,method,will,also,wait,for,relocations,it,is,useful,to,ensure,that,all,action,on,the,cluster,have,finished,and,all,shards,that,were,currently,relocating,are,now,allocated,and,started;public,cluster,health,status,ensure,green,string,indices,return,ensure,green,time,value,time,value,seconds,30,indices
ESSingleNodeTestCase -> public ClusterHealthStatus ensureGreen(String... indices);1544081506;Ensures the cluster has a green state via the cluster health API. This method will also wait for relocations._It is useful to ensure that all action on the cluster have finished and all shards that were currently relocating_are now allocated and started.;public ClusterHealthStatus ensureGreen(String... indices) {_        return ensureGreen(TimeValue.timeValueSeconds(30), indices)__    };ensures,the,cluster,has,a,green,state,via,the,cluster,health,api,this,method,will,also,wait,for,relocations,it,is,useful,to,ensure,that,all,action,on,the,cluster,have,finished,and,all,shards,that,were,currently,relocating,are,now,allocated,and,started;public,cluster,health,status,ensure,green,string,indices,return,ensure,green,time,value,time,value,seconds,30,indices
ESSingleNodeTestCase -> public ClusterHealthStatus ensureGreen(String... indices);1545315633;Ensures the cluster has a green state via the cluster health API. This method will also wait for relocations._It is useful to ensure that all action on the cluster have finished and all shards that were currently relocating_are now allocated and started.;public ClusterHealthStatus ensureGreen(String... indices) {_        return ensureGreen(TimeValue.timeValueSeconds(30), indices)__    };ensures,the,cluster,has,a,green,state,via,the,cluster,health,api,this,method,will,also,wait,for,relocations,it,is,useful,to,ensure,that,all,action,on,the,cluster,have,finished,and,all,shards,that,were,currently,relocating,are,now,allocated,and,started;public,cluster,health,status,ensure,green,string,indices,return,ensure,green,time,value,time,value,seconds,30,indices
ESSingleNodeTestCase -> public ClusterHealthStatus ensureGreen(String... indices);1549356412;Ensures the cluster has a green state via the cluster health API. This method will also wait for relocations._It is useful to ensure that all action on the cluster have finished and all shards that were currently relocating_are now allocated and started.;public ClusterHealthStatus ensureGreen(String... indices) {_        return ensureGreen(TimeValue.timeValueSeconds(30), indices)__    };ensures,the,cluster,has,a,green,state,via,the,cluster,health,api,this,method,will,also,wait,for,relocations,it,is,useful,to,ensure,that,all,action,on,the,cluster,have,finished,and,all,shards,that,were,currently,relocating,are,now,allocated,and,started;public,cluster,health,status,ensure,green,string,indices,return,ensure,green,time,value,time,value,seconds,30,indices
ESSingleNodeTestCase -> public ClusterHealthStatus ensureGreen(String... indices);1549388544;Ensures the cluster has a green state via the cluster health API. This method will also wait for relocations._It is useful to ensure that all action on the cluster have finished and all shards that were currently relocating_are now allocated and started.;public ClusterHealthStatus ensureGreen(String... indices) {_        return ensureGreen(TimeValue.timeValueSeconds(30), indices)__    };ensures,the,cluster,has,a,green,state,via,the,cluster,health,api,this,method,will,also,wait,for,relocations,it,is,useful,to,ensure,that,all,action,on,the,cluster,have,finished,and,all,shards,that,were,currently,relocating,are,now,allocated,and,started;public,cluster,health,status,ensure,green,string,indices,return,ensure,green,time,value,time,value,seconds,30,indices
ESSingleNodeTestCase -> public ClusterHealthStatus ensureGreen(String... indices);1549452878;Ensures the cluster has a green state via the cluster health API. This method will also wait for relocations._It is useful to ensure that all action on the cluster have finished and all shards that were currently relocating_are now allocated and started.;public ClusterHealthStatus ensureGreen(String... indices) {_        return ensureGreen(TimeValue.timeValueSeconds(30), indices)__    };ensures,the,cluster,has,a,green,state,via,the,cluster,health,api,this,method,will,also,wait,for,relocations,it,is,useful,to,ensure,that,all,action,on,the,cluster,have,finished,and,all,shards,that,were,currently,relocating,are,now,allocated,and,started;public,cluster,health,status,ensure,green,string,indices,return,ensure,green,time,value,time,value,seconds,30,indices
ESSingleNodeTestCase -> public ClusterHealthStatus ensureGreen(String... indices);1550166004;Ensures the cluster has a green state via the cluster health API. This method will also wait for relocations._It is useful to ensure that all action on the cluster have finished and all shards that were currently relocating_are now allocated and started.;public ClusterHealthStatus ensureGreen(String... indices) {_        return ensureGreen(TimeValue.timeValueSeconds(30), indices)__    };ensures,the,cluster,has,a,green,state,via,the,cluster,health,api,this,method,will,also,wait,for,relocations,it,is,useful,to,ensure,that,all,action,on,the,cluster,have,finished,and,all,shards,that,were,currently,relocating,are,now,allocated,and,started;public,cluster,health,status,ensure,green,string,indices,return,ensure,green,time,value,time,value,seconds,30,indices
ESSingleNodeTestCase -> public ClusterHealthStatus ensureGreen(String... indices);1550511450;Ensures the cluster has a green state via the cluster health API. This method will also wait for relocations._It is useful to ensure that all action on the cluster have finished and all shards that were currently relocating_are now allocated and started.;public ClusterHealthStatus ensureGreen(String... indices) {_        return ensureGreen(TimeValue.timeValueSeconds(30), indices)__    };ensures,the,cluster,has,a,green,state,via,the,cluster,health,api,this,method,will,also,wait,for,relocations,it,is,useful,to,ensure,that,all,action,on,the,cluster,have,finished,and,all,shards,that,were,currently,relocating,are,now,allocated,and,started;public,cluster,health,status,ensure,green,string,indices,return,ensure,green,time,value,time,value,seconds,30,indices
ESSingleNodeTestCase -> public ClusterHealthStatus ensureGreen(String... indices);1551176390;Ensures the cluster has a green state via the cluster health API. This method will also wait for relocations._It is useful to ensure that all action on the cluster have finished and all shards that were currently relocating_are now allocated and started.;public ClusterHealthStatus ensureGreen(String... indices) {_        return ensureGreen(TimeValue.timeValueSeconds(30), indices)__    };ensures,the,cluster,has,a,green,state,via,the,cluster,health,api,this,method,will,also,wait,for,relocations,it,is,useful,to,ensure,that,all,action,on,the,cluster,have,finished,and,all,shards,that,were,currently,relocating,are,now,allocated,and,started;public,cluster,health,status,ensure,green,string,indices,return,ensure,green,time,value,time,value,seconds,30,indices
ESSingleNodeTestCase -> protected Collection<Class<? extends Plugin>> getPlugins();1524684173;The plugin classes that should be added to the node.;protected Collection<Class<? extends Plugin>> getPlugins() {_        return Collections.emptyList()__    };the,plugin,classes,that,should,be,added,to,the,node;protected,collection,class,extends,plugin,get,plugins,return,collections,empty,list
ESSingleNodeTestCase -> protected Collection<Class<? extends Plugin>> getPlugins();1525162917;The plugin classes that should be added to the node.;protected Collection<Class<? extends Plugin>> getPlugins() {_        return Collections.emptyList()__    };the,plugin,classes,that,should,be,added,to,the,node;protected,collection,class,extends,plugin,get,plugins,return,collections,empty,list
ESSingleNodeTestCase -> protected Collection<Class<? extends Plugin>> getPlugins();1525334055;The plugin classes that should be added to the node.;protected Collection<Class<? extends Plugin>> getPlugins() {_        return Collections.emptyList()__    };the,plugin,classes,that,should,be,added,to,the,node;protected,collection,class,extends,plugin,get,plugins,return,collections,empty,list
ESSingleNodeTestCase -> protected Collection<Class<? extends Plugin>> getPlugins();1528762805;The plugin classes that should be added to the node.;protected Collection<Class<? extends Plugin>> getPlugins() {_        return Collections.emptyList()__    };the,plugin,classes,that,should,be,added,to,the,node;protected,collection,class,extends,plugin,get,plugins,return,collections,empty,list
ESSingleNodeTestCase -> protected Collection<Class<? extends Plugin>> getPlugins();1531910483;The plugin classes that should be added to the node.;protected Collection<Class<? extends Plugin>> getPlugins() {_        return Collections.emptyList()__    };the,plugin,classes,that,should,be,added,to,the,node;protected,collection,class,extends,plugin,get,plugins,return,collections,empty,list
ESSingleNodeTestCase -> protected Collection<Class<? extends Plugin>> getPlugins();1535723122;The plugin classes that should be added to the node.;protected Collection<Class<? extends Plugin>> getPlugins() {_        return Collections.emptyList()__    };the,plugin,classes,that,should,be,added,to,the,node;protected,collection,class,extends,plugin,get,plugins,return,collections,empty,list
ESSingleNodeTestCase -> protected Collection<Class<? extends Plugin>> getPlugins();1536137328;The plugin classes that should be added to the node.;protected Collection<Class<? extends Plugin>> getPlugins() {_        return Collections.emptyList()__    };the,plugin,classes,that,should,be,added,to,the,node;protected,collection,class,extends,plugin,get,plugins,return,collections,empty,list
ESSingleNodeTestCase -> protected Collection<Class<? extends Plugin>> getPlugins();1536828374;The plugin classes that should be added to the node.;protected Collection<Class<? extends Plugin>> getPlugins() {_        return Collections.emptyList()__    };the,plugin,classes,that,should,be,added,to,the,node;protected,collection,class,extends,plugin,get,plugins,return,collections,empty,list
ESSingleNodeTestCase -> protected Collection<Class<? extends Plugin>> getPlugins();1544081506;The plugin classes that should be added to the node.;protected Collection<Class<? extends Plugin>> getPlugins() {_        return Collections.emptyList()__    };the,plugin,classes,that,should,be,added,to,the,node;protected,collection,class,extends,plugin,get,plugins,return,collections,empty,list
ESSingleNodeTestCase -> protected Collection<Class<? extends Plugin>> getPlugins();1545315633;The plugin classes that should be added to the node.;protected Collection<Class<? extends Plugin>> getPlugins() {_        return Collections.emptyList()__    };the,plugin,classes,that,should,be,added,to,the,node;protected,collection,class,extends,plugin,get,plugins,return,collections,empty,list
ESSingleNodeTestCase -> protected Collection<Class<? extends Plugin>> getPlugins();1549356412;The plugin classes that should be added to the node.;protected Collection<Class<? extends Plugin>> getPlugins() {_        return Collections.emptyList()__    };the,plugin,classes,that,should,be,added,to,the,node;protected,collection,class,extends,plugin,get,plugins,return,collections,empty,list
ESSingleNodeTestCase -> protected Collection<Class<? extends Plugin>> getPlugins();1549388544;The plugin classes that should be added to the node.;protected Collection<Class<? extends Plugin>> getPlugins() {_        return Collections.emptyList()__    };the,plugin,classes,that,should,be,added,to,the,node;protected,collection,class,extends,plugin,get,plugins,return,collections,empty,list
ESSingleNodeTestCase -> protected Collection<Class<? extends Plugin>> getPlugins();1549452878;The plugin classes that should be added to the node.;protected Collection<Class<? extends Plugin>> getPlugins() {_        return Collections.emptyList()__    };the,plugin,classes,that,should,be,added,to,the,node;protected,collection,class,extends,plugin,get,plugins,return,collections,empty,list
ESSingleNodeTestCase -> protected Collection<Class<? extends Plugin>> getPlugins();1550166004;The plugin classes that should be added to the node.;protected Collection<Class<? extends Plugin>> getPlugins() {_        return Collections.emptyList()__    };the,plugin,classes,that,should,be,added,to,the,node;protected,collection,class,extends,plugin,get,plugins,return,collections,empty,list
ESSingleNodeTestCase -> protected Collection<Class<? extends Plugin>> getPlugins();1550511450;The plugin classes that should be added to the node.;protected Collection<Class<? extends Plugin>> getPlugins() {_        return Collections.emptyList()__    };the,plugin,classes,that,should,be,added,to,the,node;protected,collection,class,extends,plugin,get,plugins,return,collections,empty,list
ESSingleNodeTestCase -> protected Collection<Class<? extends Plugin>> getPlugins();1551176390;The plugin classes that should be added to the node.;protected Collection<Class<? extends Plugin>> getPlugins() {_        return Collections.emptyList()__    };the,plugin,classes,that,should,be,added,to,the,node;protected,collection,class,extends,plugin,get,plugins,return,collections,empty,list
ESSingleNodeTestCase -> protected Settings nodeSettings();1524684173;Additional settings to add when creating the node. Also allows overriding the default settings.;protected Settings nodeSettings() {_        return Settings.EMPTY__    };additional,settings,to,add,when,creating,the,node,also,allows,overriding,the,default,settings;protected,settings,node,settings,return,settings,empty
ESSingleNodeTestCase -> protected Settings nodeSettings();1525162917;Additional settings to add when creating the node. Also allows overriding the default settings.;protected Settings nodeSettings() {_        return Settings.EMPTY__    };additional,settings,to,add,when,creating,the,node,also,allows,overriding,the,default,settings;protected,settings,node,settings,return,settings,empty
ESSingleNodeTestCase -> protected Settings nodeSettings();1525334055;Additional settings to add when creating the node. Also allows overriding the default settings.;protected Settings nodeSettings() {_        return Settings.EMPTY__    };additional,settings,to,add,when,creating,the,node,also,allows,overriding,the,default,settings;protected,settings,node,settings,return,settings,empty
ESSingleNodeTestCase -> protected Settings nodeSettings();1528762805;Additional settings to add when creating the node. Also allows overriding the default settings.;protected Settings nodeSettings() {_        return Settings.EMPTY__    };additional,settings,to,add,when,creating,the,node,also,allows,overriding,the,default,settings;protected,settings,node,settings,return,settings,empty
ESSingleNodeTestCase -> protected Settings nodeSettings();1531910483;Additional settings to add when creating the node. Also allows overriding the default settings.;protected Settings nodeSettings() {_        return Settings.EMPTY__    };additional,settings,to,add,when,creating,the,node,also,allows,overriding,the,default,settings;protected,settings,node,settings,return,settings,empty
ESSingleNodeTestCase -> protected Settings nodeSettings();1535723122;Additional settings to add when creating the node. Also allows overriding the default settings.;protected Settings nodeSettings() {_        return Settings.EMPTY__    };additional,settings,to,add,when,creating,the,node,also,allows,overriding,the,default,settings;protected,settings,node,settings,return,settings,empty
ESSingleNodeTestCase -> protected Settings nodeSettings();1536137328;Additional settings to add when creating the node. Also allows overriding the default settings.;protected Settings nodeSettings() {_        return Settings.EMPTY__    };additional,settings,to,add,when,creating,the,node,also,allows,overriding,the,default,settings;protected,settings,node,settings,return,settings,empty
ESSingleNodeTestCase -> protected Settings nodeSettings();1536828374;Additional settings to add when creating the node. Also allows overriding the default settings.;protected Settings nodeSettings() {_        return Settings.EMPTY__    };additional,settings,to,add,when,creating,the,node,also,allows,overriding,the,default,settings;protected,settings,node,settings,return,settings,empty
ESSingleNodeTestCase -> protected Settings nodeSettings();1544081506;Additional settings to add when creating the node. Also allows overriding the default settings.;protected Settings nodeSettings() {_        return Settings.EMPTY__    };additional,settings,to,add,when,creating,the,node,also,allows,overriding,the,default,settings;protected,settings,node,settings,return,settings,empty
ESSingleNodeTestCase -> protected Settings nodeSettings();1545315633;Additional settings to add when creating the node. Also allows overriding the default settings.;protected Settings nodeSettings() {_        return Settings.EMPTY__    };additional,settings,to,add,when,creating,the,node,also,allows,overriding,the,default,settings;protected,settings,node,settings,return,settings,empty
ESSingleNodeTestCase -> protected Settings nodeSettings();1549356412;Additional settings to add when creating the node. Also allows overriding the default settings.;protected Settings nodeSettings() {_        return Settings.EMPTY__    };additional,settings,to,add,when,creating,the,node,also,allows,overriding,the,default,settings;protected,settings,node,settings,return,settings,empty
ESSingleNodeTestCase -> protected Settings nodeSettings();1549388544;Additional settings to add when creating the node. Also allows overriding the default settings.;protected Settings nodeSettings() {_        return Settings.EMPTY__    };additional,settings,to,add,when,creating,the,node,also,allows,overriding,the,default,settings;protected,settings,node,settings,return,settings,empty
ESSingleNodeTestCase -> protected Settings nodeSettings();1549452878;Additional settings to add when creating the node. Also allows overriding the default settings.;protected Settings nodeSettings() {_        return Settings.EMPTY__    };additional,settings,to,add,when,creating,the,node,also,allows,overriding,the,default,settings;protected,settings,node,settings,return,settings,empty
ESSingleNodeTestCase -> protected Settings nodeSettings();1550166004;Additional settings to add when creating the node. Also allows overriding the default settings.;protected Settings nodeSettings() {_        return Settings.EMPTY__    };additional,settings,to,add,when,creating,the,node,also,allows,overriding,the,default,settings;protected,settings,node,settings,return,settings,empty
ESSingleNodeTestCase -> protected Settings nodeSettings();1550511450;Additional settings to add when creating the node. Also allows overriding the default settings.;protected Settings nodeSettings() {_        return Settings.EMPTY__    };additional,settings,to,add,when,creating,the,node,also,allows,overriding,the,default,settings;protected,settings,node,settings,return,settings,empty
ESSingleNodeTestCase -> protected Settings nodeSettings();1551176390;Additional settings to add when creating the node. Also allows overriding the default settings.;protected Settings nodeSettings() {_        return Settings.EMPTY__    };additional,settings,to,add,when,creating,the,node,also,allows,overriding,the,default,settings;protected,settings,node,settings,return,settings,empty
ESSingleNodeTestCase -> protected IndexService createIndex(String index);1524684173;Create a new index on the singleton node with empty index settings.;protected IndexService createIndex(String index) {_        return createIndex(index, Settings.EMPTY)__    };create,a,new,index,on,the,singleton,node,with,empty,index,settings;protected,index,service,create,index,string,index,return,create,index,index,settings,empty
ESSingleNodeTestCase -> protected IndexService createIndex(String index);1525162917;Create a new index on the singleton node with empty index settings.;protected IndexService createIndex(String index) {_        return createIndex(index, Settings.EMPTY)__    };create,a,new,index,on,the,singleton,node,with,empty,index,settings;protected,index,service,create,index,string,index,return,create,index,index,settings,empty
ESSingleNodeTestCase -> protected IndexService createIndex(String index);1525334055;Create a new index on the singleton node with empty index settings.;protected IndexService createIndex(String index) {_        return createIndex(index, Settings.EMPTY)__    };create,a,new,index,on,the,singleton,node,with,empty,index,settings;protected,index,service,create,index,string,index,return,create,index,index,settings,empty
ESSingleNodeTestCase -> protected IndexService createIndex(String index);1528762805;Create a new index on the singleton node with empty index settings.;protected IndexService createIndex(String index) {_        return createIndex(index, Settings.EMPTY)__    };create,a,new,index,on,the,singleton,node,with,empty,index,settings;protected,index,service,create,index,string,index,return,create,index,index,settings,empty
ESSingleNodeTestCase -> protected IndexService createIndex(String index);1531910483;Create a new index on the singleton node with empty index settings.;protected IndexService createIndex(String index) {_        return createIndex(index, Settings.EMPTY)__    };create,a,new,index,on,the,singleton,node,with,empty,index,settings;protected,index,service,create,index,string,index,return,create,index,index,settings,empty
ESSingleNodeTestCase -> protected IndexService createIndex(String index);1535723122;Create a new index on the singleton node with empty index settings.;protected IndexService createIndex(String index) {_        return createIndex(index, Settings.EMPTY)__    };create,a,new,index,on,the,singleton,node,with,empty,index,settings;protected,index,service,create,index,string,index,return,create,index,index,settings,empty
ESSingleNodeTestCase -> protected IndexService createIndex(String index);1536137328;Create a new index on the singleton node with empty index settings.;protected IndexService createIndex(String index) {_        return createIndex(index, Settings.EMPTY)__    };create,a,new,index,on,the,singleton,node,with,empty,index,settings;protected,index,service,create,index,string,index,return,create,index,index,settings,empty
ESSingleNodeTestCase -> protected IndexService createIndex(String index);1536828374;Create a new index on the singleton node with empty index settings.;protected IndexService createIndex(String index) {_        return createIndex(index, Settings.EMPTY)__    };create,a,new,index,on,the,singleton,node,with,empty,index,settings;protected,index,service,create,index,string,index,return,create,index,index,settings,empty
ESSingleNodeTestCase -> protected IndexService createIndex(String index);1544081506;Create a new index on the singleton node with empty index settings.;protected IndexService createIndex(String index) {_        return createIndex(index, Settings.EMPTY)__    };create,a,new,index,on,the,singleton,node,with,empty,index,settings;protected,index,service,create,index,string,index,return,create,index,index,settings,empty
ESSingleNodeTestCase -> protected IndexService createIndex(String index);1545315633;Create a new index on the singleton node with empty index settings.;protected IndexService createIndex(String index) {_        return createIndex(index, Settings.EMPTY)__    };create,a,new,index,on,the,singleton,node,with,empty,index,settings;protected,index,service,create,index,string,index,return,create,index,index,settings,empty
ESSingleNodeTestCase -> protected IndexService createIndex(String index);1549356412;Create a new index on the singleton node with empty index settings.;protected IndexService createIndex(String index) {_        return createIndex(index, Settings.EMPTY)__    };create,a,new,index,on,the,singleton,node,with,empty,index,settings;protected,index,service,create,index,string,index,return,create,index,index,settings,empty
ESSingleNodeTestCase -> protected IndexService createIndex(String index);1549388544;Create a new index on the singleton node with empty index settings.;protected IndexService createIndex(String index) {_        return createIndex(index, Settings.EMPTY)__    };create,a,new,index,on,the,singleton,node,with,empty,index,settings;protected,index,service,create,index,string,index,return,create,index,index,settings,empty
ESSingleNodeTestCase -> protected IndexService createIndex(String index);1549452878;Create a new index on the singleton node with empty index settings.;protected IndexService createIndex(String index) {_        return createIndex(index, Settings.EMPTY)__    };create,a,new,index,on,the,singleton,node,with,empty,index,settings;protected,index,service,create,index,string,index,return,create,index,index,settings,empty
ESSingleNodeTestCase -> protected IndexService createIndex(String index);1550166004;Create a new index on the singleton node with empty index settings.;protected IndexService createIndex(String index) {_        return createIndex(index, Settings.EMPTY)__    };create,a,new,index,on,the,singleton,node,with,empty,index,settings;protected,index,service,create,index,string,index,return,create,index,index,settings,empty
ESSingleNodeTestCase -> protected IndexService createIndex(String index);1550511450;Create a new index on the singleton node with empty index settings.;protected IndexService createIndex(String index) {_        return createIndex(index, Settings.EMPTY)__    };create,a,new,index,on,the,singleton,node,with,empty,index,settings;protected,index,service,create,index,string,index,return,create,index,index,settings,empty
ESSingleNodeTestCase -> protected IndexService createIndex(String index);1551176390;Create a new index on the singleton node with empty index settings.;protected IndexService createIndex(String index) {_        return createIndex(index, Settings.EMPTY)__    };create,a,new,index,on,the,singleton,node,with,empty,index,settings;protected,index,service,create,index,string,index,return,create,index,index,settings,empty
ESSingleNodeTestCase -> protected IndexService createIndex(String index, Settings settings, String type, XContentBuilder mappings);1524684173;Create a new index on the singleton node with the provided index settings.;protected IndexService createIndex(String index, Settings settings, String type, XContentBuilder mappings) {_        CreateIndexRequestBuilder createIndexRequestBuilder = client().admin().indices().prepareCreate(index).setSettings(settings)__        if (type != null && mappings != null) {_            createIndexRequestBuilder.addMapping(type, mappings)__        }_        return createIndex(index, createIndexRequestBuilder)__    };create,a,new,index,on,the,singleton,node,with,the,provided,index,settings;protected,index,service,create,index,string,index,settings,settings,string,type,xcontent,builder,mappings,create,index,request,builder,create,index,request,builder,client,admin,indices,prepare,create,index,set,settings,settings,if,type,null,mappings,null,create,index,request,builder,add,mapping,type,mappings,return,create,index,index,create,index,request,builder
ESSingleNodeTestCase -> protected IndexService createIndex(String index, Settings settings, String type, XContentBuilder mappings);1525162917;Create a new index on the singleton node with the provided index settings.;protected IndexService createIndex(String index, Settings settings, String type, XContentBuilder mappings) {_        CreateIndexRequestBuilder createIndexRequestBuilder = client().admin().indices().prepareCreate(index).setSettings(settings)__        if (type != null && mappings != null) {_            createIndexRequestBuilder.addMapping(type, mappings)__        }_        return createIndex(index, createIndexRequestBuilder)__    };create,a,new,index,on,the,singleton,node,with,the,provided,index,settings;protected,index,service,create,index,string,index,settings,settings,string,type,xcontent,builder,mappings,create,index,request,builder,create,index,request,builder,client,admin,indices,prepare,create,index,set,settings,settings,if,type,null,mappings,null,create,index,request,builder,add,mapping,type,mappings,return,create,index,index,create,index,request,builder
ESSingleNodeTestCase -> protected IndexService createIndex(String index, Settings settings, String type, XContentBuilder mappings);1525334055;Create a new index on the singleton node with the provided index settings.;protected IndexService createIndex(String index, Settings settings, String type, XContentBuilder mappings) {_        CreateIndexRequestBuilder createIndexRequestBuilder = client().admin().indices().prepareCreate(index).setSettings(settings)__        if (type != null && mappings != null) {_            createIndexRequestBuilder.addMapping(type, mappings)__        }_        return createIndex(index, createIndexRequestBuilder)__    };create,a,new,index,on,the,singleton,node,with,the,provided,index,settings;protected,index,service,create,index,string,index,settings,settings,string,type,xcontent,builder,mappings,create,index,request,builder,create,index,request,builder,client,admin,indices,prepare,create,index,set,settings,settings,if,type,null,mappings,null,create,index,request,builder,add,mapping,type,mappings,return,create,index,index,create,index,request,builder
ESSingleNodeTestCase -> protected IndexService createIndex(String index, Settings settings, String type, XContentBuilder mappings);1528762805;Create a new index on the singleton node with the provided index settings.;protected IndexService createIndex(String index, Settings settings, String type, XContentBuilder mappings) {_        CreateIndexRequestBuilder createIndexRequestBuilder = client().admin().indices().prepareCreate(index).setSettings(settings)__        if (type != null && mappings != null) {_            createIndexRequestBuilder.addMapping(type, mappings)__        }_        return createIndex(index, createIndexRequestBuilder)__    };create,a,new,index,on,the,singleton,node,with,the,provided,index,settings;protected,index,service,create,index,string,index,settings,settings,string,type,xcontent,builder,mappings,create,index,request,builder,create,index,request,builder,client,admin,indices,prepare,create,index,set,settings,settings,if,type,null,mappings,null,create,index,request,builder,add,mapping,type,mappings,return,create,index,index,create,index,request,builder
ESSingleNodeTestCase -> protected IndexService createIndex(String index, Settings settings, String type, XContentBuilder mappings);1531910483;Create a new index on the singleton node with the provided index settings.;protected IndexService createIndex(String index, Settings settings, String type, XContentBuilder mappings) {_        CreateIndexRequestBuilder createIndexRequestBuilder = client().admin().indices().prepareCreate(index).setSettings(settings)__        if (type != null && mappings != null) {_            createIndexRequestBuilder.addMapping(type, mappings)__        }_        return createIndex(index, createIndexRequestBuilder)__    };create,a,new,index,on,the,singleton,node,with,the,provided,index,settings;protected,index,service,create,index,string,index,settings,settings,string,type,xcontent,builder,mappings,create,index,request,builder,create,index,request,builder,client,admin,indices,prepare,create,index,set,settings,settings,if,type,null,mappings,null,create,index,request,builder,add,mapping,type,mappings,return,create,index,index,create,index,request,builder
ESSingleNodeTestCase -> protected IndexService createIndex(String index, Settings settings, String type, XContentBuilder mappings);1535723122;Create a new index on the singleton node with the provided index settings.;protected IndexService createIndex(String index, Settings settings, String type, XContentBuilder mappings) {_        CreateIndexRequestBuilder createIndexRequestBuilder = client().admin().indices().prepareCreate(index).setSettings(settings)__        if (type != null && mappings != null) {_            createIndexRequestBuilder.addMapping(type, mappings)__        }_        return createIndex(index, createIndexRequestBuilder)__    };create,a,new,index,on,the,singleton,node,with,the,provided,index,settings;protected,index,service,create,index,string,index,settings,settings,string,type,xcontent,builder,mappings,create,index,request,builder,create,index,request,builder,client,admin,indices,prepare,create,index,set,settings,settings,if,type,null,mappings,null,create,index,request,builder,add,mapping,type,mappings,return,create,index,index,create,index,request,builder
ESSingleNodeTestCase -> protected IndexService createIndex(String index, Settings settings, String type, XContentBuilder mappings);1536137328;Create a new index on the singleton node with the provided index settings.;protected IndexService createIndex(String index, Settings settings, String type, XContentBuilder mappings) {_        CreateIndexRequestBuilder createIndexRequestBuilder = client().admin().indices().prepareCreate(index).setSettings(settings)__        if (type != null && mappings != null) {_            createIndexRequestBuilder.addMapping(type, mappings)__        }_        return createIndex(index, createIndexRequestBuilder)__    };create,a,new,index,on,the,singleton,node,with,the,provided,index,settings;protected,index,service,create,index,string,index,settings,settings,string,type,xcontent,builder,mappings,create,index,request,builder,create,index,request,builder,client,admin,indices,prepare,create,index,set,settings,settings,if,type,null,mappings,null,create,index,request,builder,add,mapping,type,mappings,return,create,index,index,create,index,request,builder
ESSingleNodeTestCase -> protected IndexService createIndex(String index, Settings settings, String type, XContentBuilder mappings);1536828374;Create a new index on the singleton node with the provided index settings.;protected IndexService createIndex(String index, Settings settings, String type, XContentBuilder mappings) {_        CreateIndexRequestBuilder createIndexRequestBuilder = client().admin().indices().prepareCreate(index).setSettings(settings)__        if (type != null && mappings != null) {_            createIndexRequestBuilder.addMapping(type, mappings)__        }_        return createIndex(index, createIndexRequestBuilder)__    };create,a,new,index,on,the,singleton,node,with,the,provided,index,settings;protected,index,service,create,index,string,index,settings,settings,string,type,xcontent,builder,mappings,create,index,request,builder,create,index,request,builder,client,admin,indices,prepare,create,index,set,settings,settings,if,type,null,mappings,null,create,index,request,builder,add,mapping,type,mappings,return,create,index,index,create,index,request,builder
ESSingleNodeTestCase -> protected IndexService createIndex(String index, Settings settings, String type, XContentBuilder mappings);1544081506;Create a new index on the singleton node with the provided index settings.;protected IndexService createIndex(String index, Settings settings, String type, XContentBuilder mappings) {_        CreateIndexRequestBuilder createIndexRequestBuilder = client().admin().indices().prepareCreate(index).setSettings(settings)__        if (type != null && mappings != null) {_            createIndexRequestBuilder.addMapping(type, mappings)__        }_        return createIndex(index, createIndexRequestBuilder)__    };create,a,new,index,on,the,singleton,node,with,the,provided,index,settings;protected,index,service,create,index,string,index,settings,settings,string,type,xcontent,builder,mappings,create,index,request,builder,create,index,request,builder,client,admin,indices,prepare,create,index,set,settings,settings,if,type,null,mappings,null,create,index,request,builder,add,mapping,type,mappings,return,create,index,index,create,index,request,builder
ESSingleNodeTestCase -> protected IndexService createIndex(String index, Settings settings, String type, XContentBuilder mappings);1545315633;Create a new index on the singleton node with the provided index settings.;protected IndexService createIndex(String index, Settings settings, String type, XContentBuilder mappings) {_        CreateIndexRequestBuilder createIndexRequestBuilder = client().admin().indices().prepareCreate(index).setSettings(settings)__        if (type != null && mappings != null) {_            createIndexRequestBuilder.addMapping(type, mappings)__        }_        return createIndex(index, createIndexRequestBuilder)__    };create,a,new,index,on,the,singleton,node,with,the,provided,index,settings;protected,index,service,create,index,string,index,settings,settings,string,type,xcontent,builder,mappings,create,index,request,builder,create,index,request,builder,client,admin,indices,prepare,create,index,set,settings,settings,if,type,null,mappings,null,create,index,request,builder,add,mapping,type,mappings,return,create,index,index,create,index,request,builder
ESSingleNodeTestCase -> protected IndexService createIndex(String index, Settings settings, String type, XContentBuilder mappings);1549356412;Create a new index on the singleton node with the provided index settings.;protected IndexService createIndex(String index, Settings settings, String type, XContentBuilder mappings) {_        CreateIndexRequestBuilder createIndexRequestBuilder = client().admin().indices().prepareCreate(index).setSettings(settings)__        if (type != null && mappings != null) {_            createIndexRequestBuilder.addMapping(type, mappings)__        }_        return createIndex(index, createIndexRequestBuilder)__    };create,a,new,index,on,the,singleton,node,with,the,provided,index,settings;protected,index,service,create,index,string,index,settings,settings,string,type,xcontent,builder,mappings,create,index,request,builder,create,index,request,builder,client,admin,indices,prepare,create,index,set,settings,settings,if,type,null,mappings,null,create,index,request,builder,add,mapping,type,mappings,return,create,index,index,create,index,request,builder
ESSingleNodeTestCase -> protected IndexService createIndex(String index, Settings settings, String type, XContentBuilder mappings);1549388544;Create a new index on the singleton node with the provided index settings.;protected IndexService createIndex(String index, Settings settings, String type, XContentBuilder mappings) {_        CreateIndexRequestBuilder createIndexRequestBuilder = client().admin().indices().prepareCreate(index).setSettings(settings)__        if (type != null && mappings != null) {_            createIndexRequestBuilder.addMapping(type, mappings)__        }_        return createIndex(index, createIndexRequestBuilder)__    };create,a,new,index,on,the,singleton,node,with,the,provided,index,settings;protected,index,service,create,index,string,index,settings,settings,string,type,xcontent,builder,mappings,create,index,request,builder,create,index,request,builder,client,admin,indices,prepare,create,index,set,settings,settings,if,type,null,mappings,null,create,index,request,builder,add,mapping,type,mappings,return,create,index,index,create,index,request,builder
ESSingleNodeTestCase -> protected IndexService createIndex(String index, Settings settings, String type, XContentBuilder mappings);1549452878;Create a new index on the singleton node with the provided index settings.;protected IndexService createIndex(String index, Settings settings, String type, XContentBuilder mappings) {_        CreateIndexRequestBuilder createIndexRequestBuilder = client().admin().indices().prepareCreate(index).setSettings(settings)__        if (type != null && mappings != null) {_            createIndexRequestBuilder.addMapping(type, mappings)__        }_        return createIndex(index, createIndexRequestBuilder)__    };create,a,new,index,on,the,singleton,node,with,the,provided,index,settings;protected,index,service,create,index,string,index,settings,settings,string,type,xcontent,builder,mappings,create,index,request,builder,create,index,request,builder,client,admin,indices,prepare,create,index,set,settings,settings,if,type,null,mappings,null,create,index,request,builder,add,mapping,type,mappings,return,create,index,index,create,index,request,builder
ESSingleNodeTestCase -> protected IndexService createIndex(String index, Settings settings, String type, XContentBuilder mappings);1550166004;Create a new index on the singleton node with the provided index settings.;protected IndexService createIndex(String index, Settings settings, String type, XContentBuilder mappings) {_        CreateIndexRequestBuilder createIndexRequestBuilder = client().admin().indices().prepareCreate(index).setSettings(settings)__        if (type != null && mappings != null) {_            createIndexRequestBuilder.addMapping(type, mappings)__        }_        return createIndex(index, createIndexRequestBuilder)__    };create,a,new,index,on,the,singleton,node,with,the,provided,index,settings;protected,index,service,create,index,string,index,settings,settings,string,type,xcontent,builder,mappings,create,index,request,builder,create,index,request,builder,client,admin,indices,prepare,create,index,set,settings,settings,if,type,null,mappings,null,create,index,request,builder,add,mapping,type,mappings,return,create,index,index,create,index,request,builder
ESSingleNodeTestCase -> protected IndexService createIndex(String index, Settings settings, String type, XContentBuilder mappings);1550511450;Create a new index on the singleton node with the provided index settings.;protected IndexService createIndex(String index, Settings settings, String type, XContentBuilder mappings) {_        CreateIndexRequestBuilder createIndexRequestBuilder = client().admin().indices().prepareCreate(index).setSettings(settings)__        if (type != null && mappings != null) {_            createIndexRequestBuilder.addMapping(type, mappings)__        }_        return createIndex(index, createIndexRequestBuilder)__    };create,a,new,index,on,the,singleton,node,with,the,provided,index,settings;protected,index,service,create,index,string,index,settings,settings,string,type,xcontent,builder,mappings,create,index,request,builder,create,index,request,builder,client,admin,indices,prepare,create,index,set,settings,settings,if,type,null,mappings,null,create,index,request,builder,add,mapping,type,mappings,return,create,index,index,create,index,request,builder
ESSingleNodeTestCase -> protected IndexService createIndex(String index, Settings settings, String type, XContentBuilder mappings);1551176390;Create a new index on the singleton node with the provided index settings.;protected IndexService createIndex(String index, Settings settings, String type, XContentBuilder mappings) {_        CreateIndexRequestBuilder createIndexRequestBuilder = client().admin().indices().prepareCreate(index).setSettings(settings)__        if (type != null && mappings != null) {_            createIndexRequestBuilder.addMapping(type, mappings)__        }_        return createIndex(index, createIndexRequestBuilder)__    };create,a,new,index,on,the,singleton,node,with,the,provided,index,settings;protected,index,service,create,index,string,index,settings,settings,string,type,xcontent,builder,mappings,create,index,request,builder,create,index,request,builder,client,admin,indices,prepare,create,index,set,settings,settings,if,type,null,mappings,null,create,index,request,builder,add,mapping,type,mappings,return,create,index,index,create,index,request,builder
ESSingleNodeTestCase -> public Client client();1524684173;Returns a client to the single-node cluster.;public Client client() {_        return NODE.client()__    };returns,a,client,to,the,single,node,cluster;public,client,client,return,node,client
ESSingleNodeTestCase -> public Client client();1525162917;Returns a client to the single-node cluster.;public Client client() {_        return NODE.client()__    };returns,a,client,to,the,single,node,cluster;public,client,client,return,node,client
ESSingleNodeTestCase -> public Client client();1525334055;Returns a client to the single-node cluster.;public Client client() {_        return NODE.client()__    };returns,a,client,to,the,single,node,cluster;public,client,client,return,node,client
ESSingleNodeTestCase -> public Client client();1528762805;Returns a client to the single-node cluster.;public Client client() {_        return NODE.client()__    };returns,a,client,to,the,single,node,cluster;public,client,client,return,node,client
ESSingleNodeTestCase -> public Client client();1531910483;Returns a client to the single-node cluster.;public Client client() {_        return NODE.client()__    };returns,a,client,to,the,single,node,cluster;public,client,client,return,node,client
ESSingleNodeTestCase -> public Client client();1535723122;Returns a client to the single-node cluster.;public Client client() {_        return NODE.client()__    };returns,a,client,to,the,single,node,cluster;public,client,client,return,node,client
ESSingleNodeTestCase -> public Client client();1536137328;Returns a client to the single-node cluster.;public Client client() {_        return NODE.client()__    };returns,a,client,to,the,single,node,cluster;public,client,client,return,node,client
ESSingleNodeTestCase -> public Client client();1536828374;Returns a client to the single-node cluster.;public Client client() {_        return NODE.client()__    };returns,a,client,to,the,single,node,cluster;public,client,client,return,node,client
ESSingleNodeTestCase -> public Client client();1544081506;Returns a client to the single-node cluster.;public Client client() {_        return wrapClient(NODE.client())__    };returns,a,client,to,the,single,node,cluster;public,client,client,return,wrap,client,node,client
ESSingleNodeTestCase -> public Client client();1545315633;Returns a client to the single-node cluster.;public Client client() {_        return wrapClient(NODE.client())__    };returns,a,client,to,the,single,node,cluster;public,client,client,return,wrap,client,node,client
ESSingleNodeTestCase -> public Client client();1549356412;Returns a client to the single-node cluster.;public Client client() {_        return wrapClient(NODE.client())__    };returns,a,client,to,the,single,node,cluster;public,client,client,return,wrap,client,node,client
ESSingleNodeTestCase -> public Client client();1549388544;Returns a client to the single-node cluster.;public Client client() {_        return wrapClient(NODE.client())__    };returns,a,client,to,the,single,node,cluster;public,client,client,return,wrap,client,node,client
ESSingleNodeTestCase -> public Client client();1549452878;Returns a client to the single-node cluster.;public Client client() {_        return wrapClient(NODE.client())__    };returns,a,client,to,the,single,node,cluster;public,client,client,return,wrap,client,node,client
ESSingleNodeTestCase -> public Client client();1550166004;Returns a client to the single-node cluster.;public Client client() {_        return wrapClient(NODE.client())__    };returns,a,client,to,the,single,node,cluster;public,client,client,return,wrap,client,node,client
ESSingleNodeTestCase -> public Client client();1550511450;Returns a client to the single-node cluster.;public Client client() {_        return wrapClient(NODE.client())__    };returns,a,client,to,the,single,node,cluster;public,client,client,return,wrap,client,node,client
ESSingleNodeTestCase -> public Client client();1551176390;Returns a client to the single-node cluster.;public Client client() {_        return wrapClient(NODE.client())__    };returns,a,client,to,the,single,node,cluster;public,client,client,return,wrap,client,node,client
ESSingleNodeTestCase -> protected SearchContext createSearchContext(IndexService indexService);1524684173;Create a new search context.;protected SearchContext createSearchContext(IndexService indexService) {_        BigArrays bigArrays = indexService.getBigArrays()__        ThreadPool threadPool = indexService.getThreadPool()__        return new TestSearchContext(threadPool, bigArrays, indexService)__    };create,a,new,search,context;protected,search,context,create,search,context,index,service,index,service,big,arrays,big,arrays,index,service,get,big,arrays,thread,pool,thread,pool,index,service,get,thread,pool,return,new,test,search,context,thread,pool,big,arrays,index,service
ESSingleNodeTestCase -> protected SearchContext createSearchContext(IndexService indexService);1525162917;Create a new search context.;protected SearchContext createSearchContext(IndexService indexService) {_        BigArrays bigArrays = indexService.getBigArrays()__        ThreadPool threadPool = indexService.getThreadPool()__        return new TestSearchContext(threadPool, bigArrays, indexService)__    };create,a,new,search,context;protected,search,context,create,search,context,index,service,index,service,big,arrays,big,arrays,index,service,get,big,arrays,thread,pool,thread,pool,index,service,get,thread,pool,return,new,test,search,context,thread,pool,big,arrays,index,service
ESSingleNodeTestCase -> protected SearchContext createSearchContext(IndexService indexService);1525334055;Create a new search context.;protected SearchContext createSearchContext(IndexService indexService) {_        BigArrays bigArrays = indexService.getBigArrays()__        ThreadPool threadPool = indexService.getThreadPool()__        return new TestSearchContext(threadPool, bigArrays, indexService)__    };create,a,new,search,context;protected,search,context,create,search,context,index,service,index,service,big,arrays,big,arrays,index,service,get,big,arrays,thread,pool,thread,pool,index,service,get,thread,pool,return,new,test,search,context,thread,pool,big,arrays,index,service
ESSingleNodeTestCase -> protected SearchContext createSearchContext(IndexService indexService);1528762805;Create a new search context.;protected SearchContext createSearchContext(IndexService indexService) {_        BigArrays bigArrays = indexService.getBigArrays()__        ThreadPool threadPool = indexService.getThreadPool()__        return new TestSearchContext(threadPool, bigArrays, indexService)__    };create,a,new,search,context;protected,search,context,create,search,context,index,service,index,service,big,arrays,big,arrays,index,service,get,big,arrays,thread,pool,thread,pool,index,service,get,thread,pool,return,new,test,search,context,thread,pool,big,arrays,index,service
ESSingleNodeTestCase -> protected SearchContext createSearchContext(IndexService indexService);1531910483;Create a new search context.;protected SearchContext createSearchContext(IndexService indexService) {_        BigArrays bigArrays = indexService.getBigArrays()__        ThreadPool threadPool = indexService.getThreadPool()__        return new TestSearchContext(threadPool, bigArrays, indexService)__    };create,a,new,search,context;protected,search,context,create,search,context,index,service,index,service,big,arrays,big,arrays,index,service,get,big,arrays,thread,pool,thread,pool,index,service,get,thread,pool,return,new,test,search,context,thread,pool,big,arrays,index,service
ESSingleNodeTestCase -> protected SearchContext createSearchContext(IndexService indexService);1535723122;Create a new search context.;protected SearchContext createSearchContext(IndexService indexService) {_        BigArrays bigArrays = indexService.getBigArrays()__        ThreadPool threadPool = indexService.getThreadPool()__        return new TestSearchContext(threadPool, bigArrays, indexService)__    };create,a,new,search,context;protected,search,context,create,search,context,index,service,index,service,big,arrays,big,arrays,index,service,get,big,arrays,thread,pool,thread,pool,index,service,get,thread,pool,return,new,test,search,context,thread,pool,big,arrays,index,service
ESSingleNodeTestCase -> protected SearchContext createSearchContext(IndexService indexService);1536137328;Create a new search context.;protected SearchContext createSearchContext(IndexService indexService) {_        BigArrays bigArrays = indexService.getBigArrays()__        ThreadPool threadPool = indexService.getThreadPool()__        return new TestSearchContext(threadPool, bigArrays, indexService)__    };create,a,new,search,context;protected,search,context,create,search,context,index,service,index,service,big,arrays,big,arrays,index,service,get,big,arrays,thread,pool,thread,pool,index,service,get,thread,pool,return,new,test,search,context,thread,pool,big,arrays,index,service
ESSingleNodeTestCase -> protected SearchContext createSearchContext(IndexService indexService);1536828374;Create a new search context.;protected SearchContext createSearchContext(IndexService indexService) {_        BigArrays bigArrays = indexService.getBigArrays()__        ThreadPool threadPool = indexService.getThreadPool()__        return new TestSearchContext(threadPool, bigArrays, indexService)__    };create,a,new,search,context;protected,search,context,create,search,context,index,service,index,service,big,arrays,big,arrays,index,service,get,big,arrays,thread,pool,thread,pool,index,service,get,thread,pool,return,new,test,search,context,thread,pool,big,arrays,index,service
ESSingleNodeTestCase -> protected SearchContext createSearchContext(IndexService indexService);1544081506;Create a new search context.;protected SearchContext createSearchContext(IndexService indexService) {_        BigArrays bigArrays = indexService.getBigArrays()__        ThreadPool threadPool = indexService.getThreadPool()__        return new TestSearchContext(threadPool, bigArrays, indexService)__    };create,a,new,search,context;protected,search,context,create,search,context,index,service,index,service,big,arrays,big,arrays,index,service,get,big,arrays,thread,pool,thread,pool,index,service,get,thread,pool,return,new,test,search,context,thread,pool,big,arrays,index,service
ESSingleNodeTestCase -> protected SearchContext createSearchContext(IndexService indexService);1545315633;Create a new search context.;protected SearchContext createSearchContext(IndexService indexService) {_        BigArrays bigArrays = indexService.getBigArrays()__        ThreadPool threadPool = indexService.getThreadPool()__        return new TestSearchContext(threadPool, bigArrays, indexService)__    };create,a,new,search,context;protected,search,context,create,search,context,index,service,index,service,big,arrays,big,arrays,index,service,get,big,arrays,thread,pool,thread,pool,index,service,get,thread,pool,return,new,test,search,context,thread,pool,big,arrays,index,service
ESSingleNodeTestCase -> protected SearchContext createSearchContext(IndexService indexService);1549356412;Create a new search context.;protected SearchContext createSearchContext(IndexService indexService) {_        BigArrays bigArrays = indexService.getBigArrays()__        ThreadPool threadPool = indexService.getThreadPool()__        return new TestSearchContext(threadPool, bigArrays, indexService)__    };create,a,new,search,context;protected,search,context,create,search,context,index,service,index,service,big,arrays,big,arrays,index,service,get,big,arrays,thread,pool,thread,pool,index,service,get,thread,pool,return,new,test,search,context,thread,pool,big,arrays,index,service
ESSingleNodeTestCase -> protected SearchContext createSearchContext(IndexService indexService);1549388544;Create a new search context.;protected SearchContext createSearchContext(IndexService indexService) {_        BigArrays bigArrays = indexService.getBigArrays()__        ThreadPool threadPool = indexService.getThreadPool()__        return new TestSearchContext(threadPool, bigArrays, indexService)__    };create,a,new,search,context;protected,search,context,create,search,context,index,service,index,service,big,arrays,big,arrays,index,service,get,big,arrays,thread,pool,thread,pool,index,service,get,thread,pool,return,new,test,search,context,thread,pool,big,arrays,index,service
ESSingleNodeTestCase -> protected SearchContext createSearchContext(IndexService indexService);1549452878;Create a new search context.;protected SearchContext createSearchContext(IndexService indexService) {_        BigArrays bigArrays = indexService.getBigArrays()__        ThreadPool threadPool = indexService.getThreadPool()__        return new TestSearchContext(threadPool, bigArrays, indexService)__    };create,a,new,search,context;protected,search,context,create,search,context,index,service,index,service,big,arrays,big,arrays,index,service,get,big,arrays,thread,pool,thread,pool,index,service,get,thread,pool,return,new,test,search,context,thread,pool,big,arrays,index,service
ESSingleNodeTestCase -> protected SearchContext createSearchContext(IndexService indexService);1550166004;Create a new search context.;protected SearchContext createSearchContext(IndexService indexService) {_        BigArrays bigArrays = indexService.getBigArrays()__        ThreadPool threadPool = indexService.getThreadPool()__        return new TestSearchContext(threadPool, bigArrays, indexService)__    };create,a,new,search,context;protected,search,context,create,search,context,index,service,index,service,big,arrays,big,arrays,index,service,get,big,arrays,thread,pool,thread,pool,index,service,get,thread,pool,return,new,test,search,context,thread,pool,big,arrays,index,service
ESSingleNodeTestCase -> protected SearchContext createSearchContext(IndexService indexService);1550511450;Create a new search context.;protected SearchContext createSearchContext(IndexService indexService) {_        BigArrays bigArrays = indexService.getBigArrays()__        ThreadPool threadPool = indexService.getThreadPool()__        return new TestSearchContext(threadPool, bigArrays, indexService)__    };create,a,new,search,context;protected,search,context,create,search,context,index,service,index,service,big,arrays,big,arrays,index,service,get,big,arrays,thread,pool,thread,pool,index,service,get,thread,pool,return,new,test,search,context,thread,pool,big,arrays,index,service
ESSingleNodeTestCase -> protected SearchContext createSearchContext(IndexService indexService);1551176390;Create a new search context.;protected SearchContext createSearchContext(IndexService indexService) {_        BigArrays bigArrays = indexService.getBigArrays()__        return new TestSearchContext(bigArrays, indexService)__    };create,a,new,search,context;protected,search,context,create,search,context,index,service,index,service,big,arrays,big,arrays,index,service,get,big,arrays,return,new,test,search,context,big,arrays,index,service
ESSingleNodeTestCase -> protected <T> T getInstanceFromNode(Class<T> clazz);1524684173;Get an instance for a particular class using the injector of the singleton node.;protected <T> T getInstanceFromNode(Class<T> clazz) {_        return NODE.injector().getInstance(clazz)__    };get,an,instance,for,a,particular,class,using,the,injector,of,the,singleton,node;protected,t,t,get,instance,from,node,class,t,clazz,return,node,injector,get,instance,clazz
ESSingleNodeTestCase -> protected <T> T getInstanceFromNode(Class<T> clazz);1525162917;Get an instance for a particular class using the injector of the singleton node.;protected <T> T getInstanceFromNode(Class<T> clazz) {_        return NODE.injector().getInstance(clazz)__    };get,an,instance,for,a,particular,class,using,the,injector,of,the,singleton,node;protected,t,t,get,instance,from,node,class,t,clazz,return,node,injector,get,instance,clazz
ESSingleNodeTestCase -> protected <T> T getInstanceFromNode(Class<T> clazz);1525334055;Get an instance for a particular class using the injector of the singleton node.;protected <T> T getInstanceFromNode(Class<T> clazz) {_        return NODE.injector().getInstance(clazz)__    };get,an,instance,for,a,particular,class,using,the,injector,of,the,singleton,node;protected,t,t,get,instance,from,node,class,t,clazz,return,node,injector,get,instance,clazz
ESSingleNodeTestCase -> protected <T> T getInstanceFromNode(Class<T> clazz);1528762805;Get an instance for a particular class using the injector of the singleton node.;protected <T> T getInstanceFromNode(Class<T> clazz) {_        return NODE.injector().getInstance(clazz)__    };get,an,instance,for,a,particular,class,using,the,injector,of,the,singleton,node;protected,t,t,get,instance,from,node,class,t,clazz,return,node,injector,get,instance,clazz
ESSingleNodeTestCase -> protected <T> T getInstanceFromNode(Class<T> clazz);1531910483;Get an instance for a particular class using the injector of the singleton node.;protected <T> T getInstanceFromNode(Class<T> clazz) {_        return NODE.injector().getInstance(clazz)__    };get,an,instance,for,a,particular,class,using,the,injector,of,the,singleton,node;protected,t,t,get,instance,from,node,class,t,clazz,return,node,injector,get,instance,clazz
ESSingleNodeTestCase -> protected <T> T getInstanceFromNode(Class<T> clazz);1535723122;Get an instance for a particular class using the injector of the singleton node.;protected <T> T getInstanceFromNode(Class<T> clazz) {_        return NODE.injector().getInstance(clazz)__    };get,an,instance,for,a,particular,class,using,the,injector,of,the,singleton,node;protected,t,t,get,instance,from,node,class,t,clazz,return,node,injector,get,instance,clazz
ESSingleNodeTestCase -> protected <T> T getInstanceFromNode(Class<T> clazz);1536137328;Get an instance for a particular class using the injector of the singleton node.;protected <T> T getInstanceFromNode(Class<T> clazz) {_        return NODE.injector().getInstance(clazz)__    };get,an,instance,for,a,particular,class,using,the,injector,of,the,singleton,node;protected,t,t,get,instance,from,node,class,t,clazz,return,node,injector,get,instance,clazz
ESSingleNodeTestCase -> protected <T> T getInstanceFromNode(Class<T> clazz);1536828374;Get an instance for a particular class using the injector of the singleton node.;protected <T> T getInstanceFromNode(Class<T> clazz) {_        return NODE.injector().getInstance(clazz)__    };get,an,instance,for,a,particular,class,using,the,injector,of,the,singleton,node;protected,t,t,get,instance,from,node,class,t,clazz,return,node,injector,get,instance,clazz
ESSingleNodeTestCase -> protected <T> T getInstanceFromNode(Class<T> clazz);1544081506;Get an instance for a particular class using the injector of the singleton node.;protected <T> T getInstanceFromNode(Class<T> clazz) {_        return NODE.injector().getInstance(clazz)__    };get,an,instance,for,a,particular,class,using,the,injector,of,the,singleton,node;protected,t,t,get,instance,from,node,class,t,clazz,return,node,injector,get,instance,clazz
ESSingleNodeTestCase -> protected <T> T getInstanceFromNode(Class<T> clazz);1545315633;Get an instance for a particular class using the injector of the singleton node.;protected <T> T getInstanceFromNode(Class<T> clazz) {_        return NODE.injector().getInstance(clazz)__    };get,an,instance,for,a,particular,class,using,the,injector,of,the,singleton,node;protected,t,t,get,instance,from,node,class,t,clazz,return,node,injector,get,instance,clazz
ESSingleNodeTestCase -> protected <T> T getInstanceFromNode(Class<T> clazz);1549356412;Get an instance for a particular class using the injector of the singleton node.;protected <T> T getInstanceFromNode(Class<T> clazz) {_        return NODE.injector().getInstance(clazz)__    };get,an,instance,for,a,particular,class,using,the,injector,of,the,singleton,node;protected,t,t,get,instance,from,node,class,t,clazz,return,node,injector,get,instance,clazz
ESSingleNodeTestCase -> protected <T> T getInstanceFromNode(Class<T> clazz);1549388544;Get an instance for a particular class using the injector of the singleton node.;protected <T> T getInstanceFromNode(Class<T> clazz) {_        return NODE.injector().getInstance(clazz)__    };get,an,instance,for,a,particular,class,using,the,injector,of,the,singleton,node;protected,t,t,get,instance,from,node,class,t,clazz,return,node,injector,get,instance,clazz
ESSingleNodeTestCase -> protected <T> T getInstanceFromNode(Class<T> clazz);1549452878;Get an instance for a particular class using the injector of the singleton node.;protected <T> T getInstanceFromNode(Class<T> clazz) {_        return NODE.injector().getInstance(clazz)__    };get,an,instance,for,a,particular,class,using,the,injector,of,the,singleton,node;protected,t,t,get,instance,from,node,class,t,clazz,return,node,injector,get,instance,clazz
ESSingleNodeTestCase -> protected <T> T getInstanceFromNode(Class<T> clazz);1550166004;Get an instance for a particular class using the injector of the singleton node.;protected <T> T getInstanceFromNode(Class<T> clazz) {_        return NODE.injector().getInstance(clazz)__    };get,an,instance,for,a,particular,class,using,the,injector,of,the,singleton,node;protected,t,t,get,instance,from,node,class,t,clazz,return,node,injector,get,instance,clazz
ESSingleNodeTestCase -> protected <T> T getInstanceFromNode(Class<T> clazz);1550511450;Get an instance for a particular class using the injector of the singleton node.;protected <T> T getInstanceFromNode(Class<T> clazz) {_        return NODE.injector().getInstance(clazz)__    };get,an,instance,for,a,particular,class,using,the,injector,of,the,singleton,node;protected,t,t,get,instance,from,node,class,t,clazz,return,node,injector,get,instance,clazz
ESSingleNodeTestCase -> protected <T> T getInstanceFromNode(Class<T> clazz);1551176390;Get an instance for a particular class using the injector of the singleton node.;protected <T> T getInstanceFromNode(Class<T> clazz) {_        return NODE.injector().getInstance(clazz)__    };get,an,instance,for,a,particular,class,using,the,injector,of,the,singleton,node;protected,t,t,get,instance,from,node,class,t,clazz,return,node,injector,get,instance,clazz
ESSingleNodeTestCase -> protected IndexService createIndex(String index, Settings settings, String type, Object... mappings);1524684173;Create a new index on the singleton node with the provided index settings.;protected IndexService createIndex(String index, Settings settings, String type, Object... mappings) {_        CreateIndexRequestBuilder createIndexRequestBuilder = client().admin().indices().prepareCreate(index).setSettings(settings)__        if (type != null && mappings != null) {_            createIndexRequestBuilder.addMapping(type, mappings)__        }_        return createIndex(index, createIndexRequestBuilder)__    };create,a,new,index,on,the,singleton,node,with,the,provided,index,settings;protected,index,service,create,index,string,index,settings,settings,string,type,object,mappings,create,index,request,builder,create,index,request,builder,client,admin,indices,prepare,create,index,set,settings,settings,if,type,null,mappings,null,create,index,request,builder,add,mapping,type,mappings,return,create,index,index,create,index,request,builder
ESSingleNodeTestCase -> protected IndexService createIndex(String index, Settings settings, String type, Object... mappings);1525162917;Create a new index on the singleton node with the provided index settings.;protected IndexService createIndex(String index, Settings settings, String type, Object... mappings) {_        CreateIndexRequestBuilder createIndexRequestBuilder = client().admin().indices().prepareCreate(index).setSettings(settings)__        if (type != null) {_            createIndexRequestBuilder.addMapping(type, mappings)__        }_        return createIndex(index, createIndexRequestBuilder)__    };create,a,new,index,on,the,singleton,node,with,the,provided,index,settings;protected,index,service,create,index,string,index,settings,settings,string,type,object,mappings,create,index,request,builder,create,index,request,builder,client,admin,indices,prepare,create,index,set,settings,settings,if,type,null,create,index,request,builder,add,mapping,type,mappings,return,create,index,index,create,index,request,builder
ESSingleNodeTestCase -> protected IndexService createIndex(String index, Settings settings, String type, Object... mappings);1525334055;Create a new index on the singleton node with the provided index settings.;protected IndexService createIndex(String index, Settings settings, String type, Object... mappings) {_        CreateIndexRequestBuilder createIndexRequestBuilder = client().admin().indices().prepareCreate(index).setSettings(settings)__        if (type != null) {_            createIndexRequestBuilder.addMapping(type, mappings)__        }_        return createIndex(index, createIndexRequestBuilder)__    };create,a,new,index,on,the,singleton,node,with,the,provided,index,settings;protected,index,service,create,index,string,index,settings,settings,string,type,object,mappings,create,index,request,builder,create,index,request,builder,client,admin,indices,prepare,create,index,set,settings,settings,if,type,null,create,index,request,builder,add,mapping,type,mappings,return,create,index,index,create,index,request,builder
ESSingleNodeTestCase -> protected IndexService createIndex(String index, Settings settings, String type, Object... mappings);1528762805;Create a new index on the singleton node with the provided index settings.;protected IndexService createIndex(String index, Settings settings, String type, Object... mappings) {_        CreateIndexRequestBuilder createIndexRequestBuilder = client().admin().indices().prepareCreate(index).setSettings(settings)__        if (type != null) {_            createIndexRequestBuilder.addMapping(type, mappings)__        }_        return createIndex(index, createIndexRequestBuilder)__    };create,a,new,index,on,the,singleton,node,with,the,provided,index,settings;protected,index,service,create,index,string,index,settings,settings,string,type,object,mappings,create,index,request,builder,create,index,request,builder,client,admin,indices,prepare,create,index,set,settings,settings,if,type,null,create,index,request,builder,add,mapping,type,mappings,return,create,index,index,create,index,request,builder
ESSingleNodeTestCase -> protected IndexService createIndex(String index, Settings settings, String type, Object... mappings);1531910483;Create a new index on the singleton node with the provided index settings.;protected IndexService createIndex(String index, Settings settings, String type, Object... mappings) {_        CreateIndexRequestBuilder createIndexRequestBuilder = client().admin().indices().prepareCreate(index).setSettings(settings)__        if (type != null) {_            createIndexRequestBuilder.addMapping(type, mappings)__        }_        return createIndex(index, createIndexRequestBuilder)__    };create,a,new,index,on,the,singleton,node,with,the,provided,index,settings;protected,index,service,create,index,string,index,settings,settings,string,type,object,mappings,create,index,request,builder,create,index,request,builder,client,admin,indices,prepare,create,index,set,settings,settings,if,type,null,create,index,request,builder,add,mapping,type,mappings,return,create,index,index,create,index,request,builder
ESSingleNodeTestCase -> protected IndexService createIndex(String index, Settings settings, String type, Object... mappings);1535723122;Create a new index on the singleton node with the provided index settings.;protected IndexService createIndex(String index, Settings settings, String type, Object... mappings) {_        CreateIndexRequestBuilder createIndexRequestBuilder = client().admin().indices().prepareCreate(index).setSettings(settings)__        if (type != null) {_            createIndexRequestBuilder.addMapping(type, mappings)__        }_        return createIndex(index, createIndexRequestBuilder)__    };create,a,new,index,on,the,singleton,node,with,the,provided,index,settings;protected,index,service,create,index,string,index,settings,settings,string,type,object,mappings,create,index,request,builder,create,index,request,builder,client,admin,indices,prepare,create,index,set,settings,settings,if,type,null,create,index,request,builder,add,mapping,type,mappings,return,create,index,index,create,index,request,builder
ESSingleNodeTestCase -> protected IndexService createIndex(String index, Settings settings, String type, Object... mappings);1536137328;Create a new index on the singleton node with the provided index settings.;protected IndexService createIndex(String index, Settings settings, String type, Object... mappings) {_        CreateIndexRequestBuilder createIndexRequestBuilder = client().admin().indices().prepareCreate(index).setSettings(settings)__        if (type != null) {_            createIndexRequestBuilder.addMapping(type, mappings)__        }_        return createIndex(index, createIndexRequestBuilder)__    };create,a,new,index,on,the,singleton,node,with,the,provided,index,settings;protected,index,service,create,index,string,index,settings,settings,string,type,object,mappings,create,index,request,builder,create,index,request,builder,client,admin,indices,prepare,create,index,set,settings,settings,if,type,null,create,index,request,builder,add,mapping,type,mappings,return,create,index,index,create,index,request,builder
ESSingleNodeTestCase -> protected IndexService createIndex(String index, Settings settings, String type, Object... mappings);1536828374;Create a new index on the singleton node with the provided index settings.;protected IndexService createIndex(String index, Settings settings, String type, Object... mappings) {_        CreateIndexRequestBuilder createIndexRequestBuilder = client().admin().indices().prepareCreate(index).setSettings(settings)__        if (type != null) {_            createIndexRequestBuilder.addMapping(type, mappings)__        }_        return createIndex(index, createIndexRequestBuilder)__    };create,a,new,index,on,the,singleton,node,with,the,provided,index,settings;protected,index,service,create,index,string,index,settings,settings,string,type,object,mappings,create,index,request,builder,create,index,request,builder,client,admin,indices,prepare,create,index,set,settings,settings,if,type,null,create,index,request,builder,add,mapping,type,mappings,return,create,index,index,create,index,request,builder
ESSingleNodeTestCase -> protected IndexService createIndex(String index, Settings settings, String type, Object... mappings);1544081506;Create a new index on the singleton node with the provided index settings.;protected IndexService createIndex(String index, Settings settings, String type, Object... mappings) {_        CreateIndexRequestBuilder createIndexRequestBuilder = client().admin().indices().prepareCreate(index).setSettings(settings)__        if (type != null) {_            createIndexRequestBuilder.addMapping(type, mappings)__        }_        return createIndex(index, createIndexRequestBuilder)__    };create,a,new,index,on,the,singleton,node,with,the,provided,index,settings;protected,index,service,create,index,string,index,settings,settings,string,type,object,mappings,create,index,request,builder,create,index,request,builder,client,admin,indices,prepare,create,index,set,settings,settings,if,type,null,create,index,request,builder,add,mapping,type,mappings,return,create,index,index,create,index,request,builder
ESSingleNodeTestCase -> protected IndexService createIndex(String index, Settings settings, String type, Object... mappings);1545315633;Create a new index on the singleton node with the provided index settings.;protected IndexService createIndex(String index, Settings settings, String type, Object... mappings) {_        CreateIndexRequestBuilder createIndexRequestBuilder = client().admin().indices().prepareCreate(index).setSettings(settings)__        if (type != null) {_            createIndexRequestBuilder.addMapping(type, mappings)__        }_        return createIndex(index, createIndexRequestBuilder)__    };create,a,new,index,on,the,singleton,node,with,the,provided,index,settings;protected,index,service,create,index,string,index,settings,settings,string,type,object,mappings,create,index,request,builder,create,index,request,builder,client,admin,indices,prepare,create,index,set,settings,settings,if,type,null,create,index,request,builder,add,mapping,type,mappings,return,create,index,index,create,index,request,builder
ESSingleNodeTestCase -> protected IndexService createIndex(String index, Settings settings, String type, Object... mappings);1549356412;Create a new index on the singleton node with the provided index settings.;protected IndexService createIndex(String index, Settings settings, String type, Object... mappings) {_        CreateIndexRequestBuilder createIndexRequestBuilder = client().admin().indices().prepareCreate(index).setSettings(settings)__        if (type != null) {_            createIndexRequestBuilder.addMapping(type, mappings)__        }_        return createIndex(index, createIndexRequestBuilder)__    };create,a,new,index,on,the,singleton,node,with,the,provided,index,settings;protected,index,service,create,index,string,index,settings,settings,string,type,object,mappings,create,index,request,builder,create,index,request,builder,client,admin,indices,prepare,create,index,set,settings,settings,if,type,null,create,index,request,builder,add,mapping,type,mappings,return,create,index,index,create,index,request,builder
ESSingleNodeTestCase -> protected IndexService createIndex(String index, Settings settings, String type, Object... mappings);1549388544;Create a new index on the singleton node with the provided index settings.;protected IndexService createIndex(String index, Settings settings, String type, Object... mappings) {_        CreateIndexRequestBuilder createIndexRequestBuilder = client().admin().indices().prepareCreate(index).setSettings(settings)__        if (type != null) {_            createIndexRequestBuilder.addMapping(type, mappings)__        }_        return createIndex(index, createIndexRequestBuilder)__    };create,a,new,index,on,the,singleton,node,with,the,provided,index,settings;protected,index,service,create,index,string,index,settings,settings,string,type,object,mappings,create,index,request,builder,create,index,request,builder,client,admin,indices,prepare,create,index,set,settings,settings,if,type,null,create,index,request,builder,add,mapping,type,mappings,return,create,index,index,create,index,request,builder
ESSingleNodeTestCase -> protected IndexService createIndex(String index, Settings settings, String type, Object... mappings);1549452878;Create a new index on the singleton node with the provided index settings.;protected IndexService createIndex(String index, Settings settings, String type, Object... mappings) {_        CreateIndexRequestBuilder createIndexRequestBuilder = client().admin().indices().prepareCreate(index).setSettings(settings)__        if (type != null) {_            createIndexRequestBuilder.addMapping(type, mappings)__        }_        return createIndex(index, createIndexRequestBuilder)__    };create,a,new,index,on,the,singleton,node,with,the,provided,index,settings;protected,index,service,create,index,string,index,settings,settings,string,type,object,mappings,create,index,request,builder,create,index,request,builder,client,admin,indices,prepare,create,index,set,settings,settings,if,type,null,create,index,request,builder,add,mapping,type,mappings,return,create,index,index,create,index,request,builder
ESSingleNodeTestCase -> protected IndexService createIndex(String index, Settings settings, String type, Object... mappings);1550166004;Create a new index on the singleton node with the provided index settings.;protected IndexService createIndex(String index, Settings settings, String type, Object... mappings) {_        CreateIndexRequestBuilder createIndexRequestBuilder = client().admin().indices().prepareCreate(index).setSettings(settings)__        if (type != null) {_            createIndexRequestBuilder.addMapping(type, mappings)__        }_        return createIndex(index, createIndexRequestBuilder)__    };create,a,new,index,on,the,singleton,node,with,the,provided,index,settings;protected,index,service,create,index,string,index,settings,settings,string,type,object,mappings,create,index,request,builder,create,index,request,builder,client,admin,indices,prepare,create,index,set,settings,settings,if,type,null,create,index,request,builder,add,mapping,type,mappings,return,create,index,index,create,index,request,builder
ESSingleNodeTestCase -> protected IndexService createIndex(String index, Settings settings, String type, Object... mappings);1550511450;Create a new index on the singleton node with the provided index settings.;protected IndexService createIndex(String index, Settings settings, String type, Object... mappings) {_        CreateIndexRequestBuilder createIndexRequestBuilder = client().admin().indices().prepareCreate(index).setSettings(settings)__        if (type != null) {_            createIndexRequestBuilder.addMapping(type, mappings)__        }_        return createIndex(index, createIndexRequestBuilder)__    };create,a,new,index,on,the,singleton,node,with,the,provided,index,settings;protected,index,service,create,index,string,index,settings,settings,string,type,object,mappings,create,index,request,builder,create,index,request,builder,client,admin,indices,prepare,create,index,set,settings,settings,if,type,null,create,index,request,builder,add,mapping,type,mappings,return,create,index,index,create,index,request,builder
ESSingleNodeTestCase -> protected IndexService createIndex(String index, Settings settings, String type, Object... mappings);1551176390;Create a new index on the singleton node with the provided index settings.;protected IndexService createIndex(String index, Settings settings, String type, Object... mappings) {_        CreateIndexRequestBuilder createIndexRequestBuilder = client().admin().indices().prepareCreate(index).setSettings(settings)__        if (type != null) {_            createIndexRequestBuilder.addMapping(type, mappings)__        }_        return createIndex(index, createIndexRequestBuilder)__    };create,a,new,index,on,the,singleton,node,with,the,provided,index,settings;protected,index,service,create,index,string,index,settings,settings,string,type,object,mappings,create,index,request,builder,create,index,request,builder,client,admin,indices,prepare,create,index,set,settings,settings,if,type,null,create,index,request,builder,add,mapping,type,mappings,return,create,index,index,create,index,request,builder
ESSingleNodeTestCase -> public ClusterHealthStatus ensureGreen(TimeValue timeout, String... indices);1524684173;Ensures the cluster has a green state via the cluster health API. This method will also wait for relocations._It is useful to ensure that all action on the cluster have finished and all shards that were currently relocating_are now allocated and started.__@param timeout time out value to set on {@link org.elasticsearch.action.admin.cluster.health.ClusterHealthRequest};public ClusterHealthStatus ensureGreen(TimeValue timeout, String... indices) {_        ClusterHealthResponse actionGet = client().admin().cluster()_                .health(Requests.clusterHealthRequest(indices).timeout(timeout).waitForGreenStatus().waitForEvents(Priority.LANGUID)_                        .waitForNoRelocatingShards(true)).actionGet()__        if (actionGet.isTimedOut()) {_            logger.info("ensureGreen timed out, cluster state:\n{}\n{}", client().admin().cluster().prepareState().get().getState(),_                client().admin().cluster().preparePendingClusterTasks().get())__            assertThat("timed out waiting for green state", actionGet.isTimedOut(), equalTo(false))__        }_        assertThat(actionGet.getStatus(), equalTo(ClusterHealthStatus.GREEN))__        logger.debug("indices {} are green", indices.length == 0 ? "[_all]" : indices)__        return actionGet.getStatus()__    };ensures,the,cluster,has,a,green,state,via,the,cluster,health,api,this,method,will,also,wait,for,relocations,it,is,useful,to,ensure,that,all,action,on,the,cluster,have,finished,and,all,shards,that,were,currently,relocating,are,now,allocated,and,started,param,timeout,time,out,value,to,set,on,link,org,elasticsearch,action,admin,cluster,health,cluster,health,request;public,cluster,health,status,ensure,green,time,value,timeout,string,indices,cluster,health,response,action,get,client,admin,cluster,health,requests,cluster,health,request,indices,timeout,timeout,wait,for,green,status,wait,for,events,priority,languid,wait,for,no,relocating,shards,true,action,get,if,action,get,is,timed,out,logger,info,ensure,green,timed,out,cluster,state,n,n,client,admin,cluster,prepare,state,get,get,state,client,admin,cluster,prepare,pending,cluster,tasks,get,assert,that,timed,out,waiting,for,green,state,action,get,is,timed,out,equal,to,false,assert,that,action,get,get,status,equal,to,cluster,health,status,green,logger,debug,indices,are,green,indices,length,0,indices,return,action,get,get,status
ESSingleNodeTestCase -> public ClusterHealthStatus ensureGreen(TimeValue timeout, String... indices);1525162917;Ensures the cluster has a green state via the cluster health API. This method will also wait for relocations._It is useful to ensure that all action on the cluster have finished and all shards that were currently relocating_are now allocated and started.__@param timeout time out value to set on {@link org.elasticsearch.action.admin.cluster.health.ClusterHealthRequest};public ClusterHealthStatus ensureGreen(TimeValue timeout, String... indices) {_        ClusterHealthResponse actionGet = client().admin().cluster()_                .health(Requests.clusterHealthRequest(indices).timeout(timeout).waitForGreenStatus().waitForEvents(Priority.LANGUID)_                        .waitForNoRelocatingShards(true)).actionGet()__        if (actionGet.isTimedOut()) {_            logger.info("ensureGreen timed out, cluster state:\n{}\n{}", client().admin().cluster().prepareState().get().getState(),_                client().admin().cluster().preparePendingClusterTasks().get())__            assertThat("timed out waiting for green state", actionGet.isTimedOut(), equalTo(false))__        }_        assertThat(actionGet.getStatus(), equalTo(ClusterHealthStatus.GREEN))__        logger.debug("indices {} are green", indices.length == 0 ? "[_all]" : indices)__        return actionGet.getStatus()__    };ensures,the,cluster,has,a,green,state,via,the,cluster,health,api,this,method,will,also,wait,for,relocations,it,is,useful,to,ensure,that,all,action,on,the,cluster,have,finished,and,all,shards,that,were,currently,relocating,are,now,allocated,and,started,param,timeout,time,out,value,to,set,on,link,org,elasticsearch,action,admin,cluster,health,cluster,health,request;public,cluster,health,status,ensure,green,time,value,timeout,string,indices,cluster,health,response,action,get,client,admin,cluster,health,requests,cluster,health,request,indices,timeout,timeout,wait,for,green,status,wait,for,events,priority,languid,wait,for,no,relocating,shards,true,action,get,if,action,get,is,timed,out,logger,info,ensure,green,timed,out,cluster,state,n,n,client,admin,cluster,prepare,state,get,get,state,client,admin,cluster,prepare,pending,cluster,tasks,get,assert,that,timed,out,waiting,for,green,state,action,get,is,timed,out,equal,to,false,assert,that,action,get,get,status,equal,to,cluster,health,status,green,logger,debug,indices,are,green,indices,length,0,indices,return,action,get,get,status
ESSingleNodeTestCase -> public ClusterHealthStatus ensureGreen(TimeValue timeout, String... indices);1525334055;Ensures the cluster has a green state via the cluster health API. This method will also wait for relocations._It is useful to ensure that all action on the cluster have finished and all shards that were currently relocating_are now allocated and started.__@param timeout time out value to set on {@link org.elasticsearch.action.admin.cluster.health.ClusterHealthRequest};public ClusterHealthStatus ensureGreen(TimeValue timeout, String... indices) {_        ClusterHealthResponse actionGet = client().admin().cluster()_                .health(Requests.clusterHealthRequest(indices).timeout(timeout).waitForGreenStatus().waitForEvents(Priority.LANGUID)_                        .waitForNoRelocatingShards(true)).actionGet()__        if (actionGet.isTimedOut()) {_            logger.info("ensureGreen timed out, cluster state:\n{}\n{}", client().admin().cluster().prepareState().get().getState(),_                client().admin().cluster().preparePendingClusterTasks().get())__            assertThat("timed out waiting for green state", actionGet.isTimedOut(), equalTo(false))__        }_        assertThat(actionGet.getStatus(), equalTo(ClusterHealthStatus.GREEN))__        logger.debug("indices {} are green", indices.length == 0 ? "[_all]" : indices)__        return actionGet.getStatus()__    };ensures,the,cluster,has,a,green,state,via,the,cluster,health,api,this,method,will,also,wait,for,relocations,it,is,useful,to,ensure,that,all,action,on,the,cluster,have,finished,and,all,shards,that,were,currently,relocating,are,now,allocated,and,started,param,timeout,time,out,value,to,set,on,link,org,elasticsearch,action,admin,cluster,health,cluster,health,request;public,cluster,health,status,ensure,green,time,value,timeout,string,indices,cluster,health,response,action,get,client,admin,cluster,health,requests,cluster,health,request,indices,timeout,timeout,wait,for,green,status,wait,for,events,priority,languid,wait,for,no,relocating,shards,true,action,get,if,action,get,is,timed,out,logger,info,ensure,green,timed,out,cluster,state,n,n,client,admin,cluster,prepare,state,get,get,state,client,admin,cluster,prepare,pending,cluster,tasks,get,assert,that,timed,out,waiting,for,green,state,action,get,is,timed,out,equal,to,false,assert,that,action,get,get,status,equal,to,cluster,health,status,green,logger,debug,indices,are,green,indices,length,0,indices,return,action,get,get,status
ESSingleNodeTestCase -> public ClusterHealthStatus ensureGreen(TimeValue timeout, String... indices);1528762805;Ensures the cluster has a green state via the cluster health API. This method will also wait for relocations._It is useful to ensure that all action on the cluster have finished and all shards that were currently relocating_are now allocated and started.__@param timeout time out value to set on {@link org.elasticsearch.action.admin.cluster.health.ClusterHealthRequest};public ClusterHealthStatus ensureGreen(TimeValue timeout, String... indices) {_        ClusterHealthResponse actionGet = client().admin().cluster()_                .health(Requests.clusterHealthRequest(indices).timeout(timeout).waitForGreenStatus().waitForEvents(Priority.LANGUID)_                        .waitForNoRelocatingShards(true)).actionGet()__        if (actionGet.isTimedOut()) {_            logger.info("ensureGreen timed out, cluster state:\n{}\n{}", client().admin().cluster().prepareState().get().getState(),_                client().admin().cluster().preparePendingClusterTasks().get())__            assertThat("timed out waiting for green state", actionGet.isTimedOut(), equalTo(false))__        }_        assertThat(actionGet.getStatus(), equalTo(ClusterHealthStatus.GREEN))__        logger.debug("indices {} are green", indices.length == 0 ? "[_all]" : indices)__        return actionGet.getStatus()__    };ensures,the,cluster,has,a,green,state,via,the,cluster,health,api,this,method,will,also,wait,for,relocations,it,is,useful,to,ensure,that,all,action,on,the,cluster,have,finished,and,all,shards,that,were,currently,relocating,are,now,allocated,and,started,param,timeout,time,out,value,to,set,on,link,org,elasticsearch,action,admin,cluster,health,cluster,health,request;public,cluster,health,status,ensure,green,time,value,timeout,string,indices,cluster,health,response,action,get,client,admin,cluster,health,requests,cluster,health,request,indices,timeout,timeout,wait,for,green,status,wait,for,events,priority,languid,wait,for,no,relocating,shards,true,action,get,if,action,get,is,timed,out,logger,info,ensure,green,timed,out,cluster,state,n,n,client,admin,cluster,prepare,state,get,get,state,client,admin,cluster,prepare,pending,cluster,tasks,get,assert,that,timed,out,waiting,for,green,state,action,get,is,timed,out,equal,to,false,assert,that,action,get,get,status,equal,to,cluster,health,status,green,logger,debug,indices,are,green,indices,length,0,indices,return,action,get,get,status
ESSingleNodeTestCase -> public ClusterHealthStatus ensureGreen(TimeValue timeout, String... indices);1531910483;Ensures the cluster has a green state via the cluster health API. This method will also wait for relocations._It is useful to ensure that all action on the cluster have finished and all shards that were currently relocating_are now allocated and started.__@param timeout time out value to set on {@link org.elasticsearch.action.admin.cluster.health.ClusterHealthRequest};public ClusterHealthStatus ensureGreen(TimeValue timeout, String... indices) {_        ClusterHealthResponse actionGet = client().admin().cluster()_                .health(Requests.clusterHealthRequest(indices).timeout(timeout).waitForGreenStatus().waitForEvents(Priority.LANGUID)_                        .waitForNoRelocatingShards(true)).actionGet()__        if (actionGet.isTimedOut()) {_            logger.info("ensureGreen timed out, cluster state:\n{}\n{}", client().admin().cluster().prepareState().get().getState(),_                client().admin().cluster().preparePendingClusterTasks().get())__            assertThat("timed out waiting for green state", actionGet.isTimedOut(), equalTo(false))__        }_        assertThat(actionGet.getStatus(), equalTo(ClusterHealthStatus.GREEN))__        logger.debug("indices {} are green", indices.length == 0 ? "[_all]" : indices)__        return actionGet.getStatus()__    };ensures,the,cluster,has,a,green,state,via,the,cluster,health,api,this,method,will,also,wait,for,relocations,it,is,useful,to,ensure,that,all,action,on,the,cluster,have,finished,and,all,shards,that,were,currently,relocating,are,now,allocated,and,started,param,timeout,time,out,value,to,set,on,link,org,elasticsearch,action,admin,cluster,health,cluster,health,request;public,cluster,health,status,ensure,green,time,value,timeout,string,indices,cluster,health,response,action,get,client,admin,cluster,health,requests,cluster,health,request,indices,timeout,timeout,wait,for,green,status,wait,for,events,priority,languid,wait,for,no,relocating,shards,true,action,get,if,action,get,is,timed,out,logger,info,ensure,green,timed,out,cluster,state,n,n,client,admin,cluster,prepare,state,get,get,state,client,admin,cluster,prepare,pending,cluster,tasks,get,assert,that,timed,out,waiting,for,green,state,action,get,is,timed,out,equal,to,false,assert,that,action,get,get,status,equal,to,cluster,health,status,green,logger,debug,indices,are,green,indices,length,0,indices,return,action,get,get,status
ESSingleNodeTestCase -> public ClusterHealthStatus ensureGreen(TimeValue timeout, String... indices);1535723122;Ensures the cluster has a green state via the cluster health API. This method will also wait for relocations._It is useful to ensure that all action on the cluster have finished and all shards that were currently relocating_are now allocated and started.__@param timeout time out value to set on {@link org.elasticsearch.action.admin.cluster.health.ClusterHealthRequest};public ClusterHealthStatus ensureGreen(TimeValue timeout, String... indices) {_        ClusterHealthResponse actionGet = client().admin().cluster()_                .health(Requests.clusterHealthRequest(indices).timeout(timeout).waitForGreenStatus().waitForEvents(Priority.LANGUID)_                        .waitForNoRelocatingShards(true)).actionGet()__        if (actionGet.isTimedOut()) {_            logger.info("ensureGreen timed out, cluster state:\n{}\n{}", client().admin().cluster().prepareState().get().getState(),_                client().admin().cluster().preparePendingClusterTasks().get())__            assertThat("timed out waiting for green state", actionGet.isTimedOut(), equalTo(false))__        }_        assertThat(actionGet.getStatus(), equalTo(ClusterHealthStatus.GREEN))__        logger.debug("indices {} are green", indices.length == 0 ? "[_all]" : indices)__        return actionGet.getStatus()__    };ensures,the,cluster,has,a,green,state,via,the,cluster,health,api,this,method,will,also,wait,for,relocations,it,is,useful,to,ensure,that,all,action,on,the,cluster,have,finished,and,all,shards,that,were,currently,relocating,are,now,allocated,and,started,param,timeout,time,out,value,to,set,on,link,org,elasticsearch,action,admin,cluster,health,cluster,health,request;public,cluster,health,status,ensure,green,time,value,timeout,string,indices,cluster,health,response,action,get,client,admin,cluster,health,requests,cluster,health,request,indices,timeout,timeout,wait,for,green,status,wait,for,events,priority,languid,wait,for,no,relocating,shards,true,action,get,if,action,get,is,timed,out,logger,info,ensure,green,timed,out,cluster,state,n,n,client,admin,cluster,prepare,state,get,get,state,client,admin,cluster,prepare,pending,cluster,tasks,get,assert,that,timed,out,waiting,for,green,state,action,get,is,timed,out,equal,to,false,assert,that,action,get,get,status,equal,to,cluster,health,status,green,logger,debug,indices,are,green,indices,length,0,indices,return,action,get,get,status
ESSingleNodeTestCase -> public ClusterHealthStatus ensureGreen(TimeValue timeout, String... indices);1536137328;Ensures the cluster has a green state via the cluster health API. This method will also wait for relocations._It is useful to ensure that all action on the cluster have finished and all shards that were currently relocating_are now allocated and started.__@param timeout time out value to set on {@link org.elasticsearch.action.admin.cluster.health.ClusterHealthRequest};public ClusterHealthStatus ensureGreen(TimeValue timeout, String... indices) {_        ClusterHealthResponse actionGet = client().admin().cluster()_                .health(Requests.clusterHealthRequest(indices).timeout(timeout).waitForGreenStatus().waitForEvents(Priority.LANGUID)_                        .waitForNoRelocatingShards(true)).actionGet()__        if (actionGet.isTimedOut()) {_            logger.info("ensureGreen timed out, cluster state:\n{}\n{}", client().admin().cluster().prepareState().get().getState(),_                client().admin().cluster().preparePendingClusterTasks().get())__            assertThat("timed out waiting for green state", actionGet.isTimedOut(), equalTo(false))__        }_        assertThat(actionGet.getStatus(), equalTo(ClusterHealthStatus.GREEN))__        logger.debug("indices {} are green", indices.length == 0 ? "[_all]" : indices)__        return actionGet.getStatus()__    };ensures,the,cluster,has,a,green,state,via,the,cluster,health,api,this,method,will,also,wait,for,relocations,it,is,useful,to,ensure,that,all,action,on,the,cluster,have,finished,and,all,shards,that,were,currently,relocating,are,now,allocated,and,started,param,timeout,time,out,value,to,set,on,link,org,elasticsearch,action,admin,cluster,health,cluster,health,request;public,cluster,health,status,ensure,green,time,value,timeout,string,indices,cluster,health,response,action,get,client,admin,cluster,health,requests,cluster,health,request,indices,timeout,timeout,wait,for,green,status,wait,for,events,priority,languid,wait,for,no,relocating,shards,true,action,get,if,action,get,is,timed,out,logger,info,ensure,green,timed,out,cluster,state,n,n,client,admin,cluster,prepare,state,get,get,state,client,admin,cluster,prepare,pending,cluster,tasks,get,assert,that,timed,out,waiting,for,green,state,action,get,is,timed,out,equal,to,false,assert,that,action,get,get,status,equal,to,cluster,health,status,green,logger,debug,indices,are,green,indices,length,0,indices,return,action,get,get,status
ESSingleNodeTestCase -> public ClusterHealthStatus ensureGreen(TimeValue timeout, String... indices);1536828374;Ensures the cluster has a green state via the cluster health API. This method will also wait for relocations._It is useful to ensure that all action on the cluster have finished and all shards that were currently relocating_are now allocated and started.__@param timeout time out value to set on {@link org.elasticsearch.action.admin.cluster.health.ClusterHealthRequest};public ClusterHealthStatus ensureGreen(TimeValue timeout, String... indices) {_        ClusterHealthResponse actionGet = client().admin().cluster()_                .health(Requests.clusterHealthRequest(indices).timeout(timeout).waitForGreenStatus().waitForEvents(Priority.LANGUID)_                        .waitForNoRelocatingShards(true)).actionGet()__        if (actionGet.isTimedOut()) {_            logger.info("ensureGreen timed out, cluster state:\n{}\n{}", client().admin().cluster().prepareState().get().getState(),_                client().admin().cluster().preparePendingClusterTasks().get())__            assertThat("timed out waiting for green state", actionGet.isTimedOut(), equalTo(false))__        }_        assertThat(actionGet.getStatus(), equalTo(ClusterHealthStatus.GREEN))__        logger.debug("indices {} are green", indices.length == 0 ? "[_all]" : indices)__        return actionGet.getStatus()__    };ensures,the,cluster,has,a,green,state,via,the,cluster,health,api,this,method,will,also,wait,for,relocations,it,is,useful,to,ensure,that,all,action,on,the,cluster,have,finished,and,all,shards,that,were,currently,relocating,are,now,allocated,and,started,param,timeout,time,out,value,to,set,on,link,org,elasticsearch,action,admin,cluster,health,cluster,health,request;public,cluster,health,status,ensure,green,time,value,timeout,string,indices,cluster,health,response,action,get,client,admin,cluster,health,requests,cluster,health,request,indices,timeout,timeout,wait,for,green,status,wait,for,events,priority,languid,wait,for,no,relocating,shards,true,action,get,if,action,get,is,timed,out,logger,info,ensure,green,timed,out,cluster,state,n,n,client,admin,cluster,prepare,state,get,get,state,client,admin,cluster,prepare,pending,cluster,tasks,get,assert,that,timed,out,waiting,for,green,state,action,get,is,timed,out,equal,to,false,assert,that,action,get,get,status,equal,to,cluster,health,status,green,logger,debug,indices,are,green,indices,length,0,indices,return,action,get,get,status
ESSingleNodeTestCase -> public ClusterHealthStatus ensureGreen(TimeValue timeout, String... indices);1544081506;Ensures the cluster has a green state via the cluster health API. This method will also wait for relocations._It is useful to ensure that all action on the cluster have finished and all shards that were currently relocating_are now allocated and started.__@param timeout time out value to set on {@link org.elasticsearch.action.admin.cluster.health.ClusterHealthRequest};public ClusterHealthStatus ensureGreen(TimeValue timeout, String... indices) {_        ClusterHealthResponse actionGet = client().admin().cluster()_                .health(Requests.clusterHealthRequest(indices).timeout(timeout).waitForGreenStatus().waitForEvents(Priority.LANGUID)_                        .waitForNoRelocatingShards(true)).actionGet()__        if (actionGet.isTimedOut()) {_            logger.info("ensureGreen timed out, cluster state:\n{}\n{}", client().admin().cluster().prepareState().get().getState(),_                client().admin().cluster().preparePendingClusterTasks().get())__            assertThat("timed out waiting for green state", actionGet.isTimedOut(), equalTo(false))__        }_        assertThat(actionGet.getStatus(), equalTo(ClusterHealthStatus.GREEN))__        logger.debug("indices {} are green", indices.length == 0 ? "[_all]" : indices)__        return actionGet.getStatus()__    };ensures,the,cluster,has,a,green,state,via,the,cluster,health,api,this,method,will,also,wait,for,relocations,it,is,useful,to,ensure,that,all,action,on,the,cluster,have,finished,and,all,shards,that,were,currently,relocating,are,now,allocated,and,started,param,timeout,time,out,value,to,set,on,link,org,elasticsearch,action,admin,cluster,health,cluster,health,request;public,cluster,health,status,ensure,green,time,value,timeout,string,indices,cluster,health,response,action,get,client,admin,cluster,health,requests,cluster,health,request,indices,timeout,timeout,wait,for,green,status,wait,for,events,priority,languid,wait,for,no,relocating,shards,true,action,get,if,action,get,is,timed,out,logger,info,ensure,green,timed,out,cluster,state,n,n,client,admin,cluster,prepare,state,get,get,state,client,admin,cluster,prepare,pending,cluster,tasks,get,assert,that,timed,out,waiting,for,green,state,action,get,is,timed,out,equal,to,false,assert,that,action,get,get,status,equal,to,cluster,health,status,green,logger,debug,indices,are,green,indices,length,0,indices,return,action,get,get,status
ESSingleNodeTestCase -> public ClusterHealthStatus ensureGreen(TimeValue timeout, String... indices);1545315633;Ensures the cluster has a green state via the cluster health API. This method will also wait for relocations._It is useful to ensure that all action on the cluster have finished and all shards that were currently relocating_are now allocated and started.__@param timeout time out value to set on {@link org.elasticsearch.action.admin.cluster.health.ClusterHealthRequest};public ClusterHealthStatus ensureGreen(TimeValue timeout, String... indices) {_        ClusterHealthResponse actionGet = client().admin().cluster()_                .health(Requests.clusterHealthRequest(indices).timeout(timeout).waitForGreenStatus().waitForEvents(Priority.LANGUID)_                        .waitForNoRelocatingShards(true)).actionGet()__        if (actionGet.isTimedOut()) {_            logger.info("ensureGreen timed out, cluster state:\n{}\n{}", client().admin().cluster().prepareState().get().getState(),_                client().admin().cluster().preparePendingClusterTasks().get())__            assertThat("timed out waiting for green state", actionGet.isTimedOut(), equalTo(false))__        }_        assertThat(actionGet.getStatus(), equalTo(ClusterHealthStatus.GREEN))__        logger.debug("indices {} are green", indices.length == 0 ? "[_all]" : indices)__        return actionGet.getStatus()__    };ensures,the,cluster,has,a,green,state,via,the,cluster,health,api,this,method,will,also,wait,for,relocations,it,is,useful,to,ensure,that,all,action,on,the,cluster,have,finished,and,all,shards,that,were,currently,relocating,are,now,allocated,and,started,param,timeout,time,out,value,to,set,on,link,org,elasticsearch,action,admin,cluster,health,cluster,health,request;public,cluster,health,status,ensure,green,time,value,timeout,string,indices,cluster,health,response,action,get,client,admin,cluster,health,requests,cluster,health,request,indices,timeout,timeout,wait,for,green,status,wait,for,events,priority,languid,wait,for,no,relocating,shards,true,action,get,if,action,get,is,timed,out,logger,info,ensure,green,timed,out,cluster,state,n,n,client,admin,cluster,prepare,state,get,get,state,client,admin,cluster,prepare,pending,cluster,tasks,get,assert,that,timed,out,waiting,for,green,state,action,get,is,timed,out,equal,to,false,assert,that,action,get,get,status,equal,to,cluster,health,status,green,logger,debug,indices,are,green,indices,length,0,indices,return,action,get,get,status
ESSingleNodeTestCase -> public ClusterHealthStatus ensureGreen(TimeValue timeout, String... indices);1549356412;Ensures the cluster has a green state via the cluster health API. This method will also wait for relocations._It is useful to ensure that all action on the cluster have finished and all shards that were currently relocating_are now allocated and started.__@param timeout time out value to set on {@link org.elasticsearch.action.admin.cluster.health.ClusterHealthRequest};public ClusterHealthStatus ensureGreen(TimeValue timeout, String... indices) {_        ClusterHealthResponse actionGet = client().admin().cluster()_                .health(Requests.clusterHealthRequest(indices).timeout(timeout).waitForGreenStatus().waitForEvents(Priority.LANGUID)_                        .waitForNoRelocatingShards(true)).actionGet()__        if (actionGet.isTimedOut()) {_            logger.info("ensureGreen timed out, cluster state:\n{}\n{}", client().admin().cluster().prepareState().get().getState(),_                client().admin().cluster().preparePendingClusterTasks().get())__            assertThat("timed out waiting for green state", actionGet.isTimedOut(), equalTo(false))__        }_        assertThat(actionGet.getStatus(), equalTo(ClusterHealthStatus.GREEN))__        logger.debug("indices {} are green", indices.length == 0 ? "[_all]" : indices)__        return actionGet.getStatus()__    };ensures,the,cluster,has,a,green,state,via,the,cluster,health,api,this,method,will,also,wait,for,relocations,it,is,useful,to,ensure,that,all,action,on,the,cluster,have,finished,and,all,shards,that,were,currently,relocating,are,now,allocated,and,started,param,timeout,time,out,value,to,set,on,link,org,elasticsearch,action,admin,cluster,health,cluster,health,request;public,cluster,health,status,ensure,green,time,value,timeout,string,indices,cluster,health,response,action,get,client,admin,cluster,health,requests,cluster,health,request,indices,timeout,timeout,wait,for,green,status,wait,for,events,priority,languid,wait,for,no,relocating,shards,true,action,get,if,action,get,is,timed,out,logger,info,ensure,green,timed,out,cluster,state,n,n,client,admin,cluster,prepare,state,get,get,state,client,admin,cluster,prepare,pending,cluster,tasks,get,assert,that,timed,out,waiting,for,green,state,action,get,is,timed,out,equal,to,false,assert,that,action,get,get,status,equal,to,cluster,health,status,green,logger,debug,indices,are,green,indices,length,0,indices,return,action,get,get,status
ESSingleNodeTestCase -> public ClusterHealthStatus ensureGreen(TimeValue timeout, String... indices);1549388544;Ensures the cluster has a green state via the cluster health API. This method will also wait for relocations._It is useful to ensure that all action on the cluster have finished and all shards that were currently relocating_are now allocated and started.__@param timeout time out value to set on {@link org.elasticsearch.action.admin.cluster.health.ClusterHealthRequest};public ClusterHealthStatus ensureGreen(TimeValue timeout, String... indices) {_        ClusterHealthResponse actionGet = client().admin().cluster()_                .health(Requests.clusterHealthRequest(indices).timeout(timeout).waitForGreenStatus().waitForEvents(Priority.LANGUID)_                        .waitForNoRelocatingShards(true)).actionGet()__        if (actionGet.isTimedOut()) {_            logger.info("ensureGreen timed out, cluster state:\n{}\n{}", client().admin().cluster().prepareState().get().getState(),_                client().admin().cluster().preparePendingClusterTasks().get())__            assertThat("timed out waiting for green state", actionGet.isTimedOut(), equalTo(false))__        }_        assertThat(actionGet.getStatus(), equalTo(ClusterHealthStatus.GREEN))__        logger.debug("indices {} are green", indices.length == 0 ? "[_all]" : indices)__        return actionGet.getStatus()__    };ensures,the,cluster,has,a,green,state,via,the,cluster,health,api,this,method,will,also,wait,for,relocations,it,is,useful,to,ensure,that,all,action,on,the,cluster,have,finished,and,all,shards,that,were,currently,relocating,are,now,allocated,and,started,param,timeout,time,out,value,to,set,on,link,org,elasticsearch,action,admin,cluster,health,cluster,health,request;public,cluster,health,status,ensure,green,time,value,timeout,string,indices,cluster,health,response,action,get,client,admin,cluster,health,requests,cluster,health,request,indices,timeout,timeout,wait,for,green,status,wait,for,events,priority,languid,wait,for,no,relocating,shards,true,action,get,if,action,get,is,timed,out,logger,info,ensure,green,timed,out,cluster,state,n,n,client,admin,cluster,prepare,state,get,get,state,client,admin,cluster,prepare,pending,cluster,tasks,get,assert,that,timed,out,waiting,for,green,state,action,get,is,timed,out,equal,to,false,assert,that,action,get,get,status,equal,to,cluster,health,status,green,logger,debug,indices,are,green,indices,length,0,indices,return,action,get,get,status
ESSingleNodeTestCase -> public ClusterHealthStatus ensureGreen(TimeValue timeout, String... indices);1549452878;Ensures the cluster has a green state via the cluster health API. This method will also wait for relocations._It is useful to ensure that all action on the cluster have finished and all shards that were currently relocating_are now allocated and started.__@param timeout time out value to set on {@link org.elasticsearch.action.admin.cluster.health.ClusterHealthRequest};public ClusterHealthStatus ensureGreen(TimeValue timeout, String... indices) {_        ClusterHealthResponse actionGet = client().admin().cluster()_                .health(Requests.clusterHealthRequest(indices).timeout(timeout).waitForGreenStatus().waitForEvents(Priority.LANGUID)_                        .waitForNoRelocatingShards(true)).actionGet()__        if (actionGet.isTimedOut()) {_            logger.info("ensureGreen timed out, cluster state:\n{}\n{}", client().admin().cluster().prepareState().get().getState(),_                client().admin().cluster().preparePendingClusterTasks().get())__            assertThat("timed out waiting for green state", actionGet.isTimedOut(), equalTo(false))__        }_        assertThat(actionGet.getStatus(), equalTo(ClusterHealthStatus.GREEN))__        logger.debug("indices {} are green", indices.length == 0 ? "[_all]" : indices)__        return actionGet.getStatus()__    };ensures,the,cluster,has,a,green,state,via,the,cluster,health,api,this,method,will,also,wait,for,relocations,it,is,useful,to,ensure,that,all,action,on,the,cluster,have,finished,and,all,shards,that,were,currently,relocating,are,now,allocated,and,started,param,timeout,time,out,value,to,set,on,link,org,elasticsearch,action,admin,cluster,health,cluster,health,request;public,cluster,health,status,ensure,green,time,value,timeout,string,indices,cluster,health,response,action,get,client,admin,cluster,health,requests,cluster,health,request,indices,timeout,timeout,wait,for,green,status,wait,for,events,priority,languid,wait,for,no,relocating,shards,true,action,get,if,action,get,is,timed,out,logger,info,ensure,green,timed,out,cluster,state,n,n,client,admin,cluster,prepare,state,get,get,state,client,admin,cluster,prepare,pending,cluster,tasks,get,assert,that,timed,out,waiting,for,green,state,action,get,is,timed,out,equal,to,false,assert,that,action,get,get,status,equal,to,cluster,health,status,green,logger,debug,indices,are,green,indices,length,0,indices,return,action,get,get,status
ESSingleNodeTestCase -> public ClusterHealthStatus ensureGreen(TimeValue timeout, String... indices);1550166004;Ensures the cluster has a green state via the cluster health API. This method will also wait for relocations._It is useful to ensure that all action on the cluster have finished and all shards that were currently relocating_are now allocated and started.__@param timeout time out value to set on {@link org.elasticsearch.action.admin.cluster.health.ClusterHealthRequest};public ClusterHealthStatus ensureGreen(TimeValue timeout, String... indices) {_        ClusterHealthResponse actionGet = client().admin().cluster()_                .health(Requests.clusterHealthRequest(indices).timeout(timeout).waitForGreenStatus().waitForEvents(Priority.LANGUID)_                        .waitForNoRelocatingShards(true)).actionGet()__        if (actionGet.isTimedOut()) {_            logger.info("ensureGreen timed out, cluster state:\n{}\n{}", client().admin().cluster().prepareState().get().getState(),_                client().admin().cluster().preparePendingClusterTasks().get())__            assertThat("timed out waiting for green state", actionGet.isTimedOut(), equalTo(false))__        }_        assertThat(actionGet.getStatus(), equalTo(ClusterHealthStatus.GREEN))__        logger.debug("indices {} are green", indices.length == 0 ? "[_all]" : indices)__        return actionGet.getStatus()__    };ensures,the,cluster,has,a,green,state,via,the,cluster,health,api,this,method,will,also,wait,for,relocations,it,is,useful,to,ensure,that,all,action,on,the,cluster,have,finished,and,all,shards,that,were,currently,relocating,are,now,allocated,and,started,param,timeout,time,out,value,to,set,on,link,org,elasticsearch,action,admin,cluster,health,cluster,health,request;public,cluster,health,status,ensure,green,time,value,timeout,string,indices,cluster,health,response,action,get,client,admin,cluster,health,requests,cluster,health,request,indices,timeout,timeout,wait,for,green,status,wait,for,events,priority,languid,wait,for,no,relocating,shards,true,action,get,if,action,get,is,timed,out,logger,info,ensure,green,timed,out,cluster,state,n,n,client,admin,cluster,prepare,state,get,get,state,client,admin,cluster,prepare,pending,cluster,tasks,get,assert,that,timed,out,waiting,for,green,state,action,get,is,timed,out,equal,to,false,assert,that,action,get,get,status,equal,to,cluster,health,status,green,logger,debug,indices,are,green,indices,length,0,indices,return,action,get,get,status
ESSingleNodeTestCase -> public ClusterHealthStatus ensureGreen(TimeValue timeout, String... indices);1550511450;Ensures the cluster has a green state via the cluster health API. This method will also wait for relocations._It is useful to ensure that all action on the cluster have finished and all shards that were currently relocating_are now allocated and started.__@param timeout time out value to set on {@link org.elasticsearch.action.admin.cluster.health.ClusterHealthRequest};public ClusterHealthStatus ensureGreen(TimeValue timeout, String... indices) {_        ClusterHealthResponse actionGet = client().admin().cluster()_                .health(Requests.clusterHealthRequest(indices).timeout(timeout).waitForGreenStatus().waitForEvents(Priority.LANGUID)_                        .waitForNoRelocatingShards(true)).actionGet()__        if (actionGet.isTimedOut()) {_            logger.info("ensureGreen timed out, cluster state:\n{}\n{}", client().admin().cluster().prepareState().get().getState(),_                client().admin().cluster().preparePendingClusterTasks().get())__            assertThat("timed out waiting for green state", actionGet.isTimedOut(), equalTo(false))__        }_        assertThat(actionGet.getStatus(), equalTo(ClusterHealthStatus.GREEN))__        logger.debug("indices {} are green", indices.length == 0 ? "[_all]" : indices)__        return actionGet.getStatus()__    };ensures,the,cluster,has,a,green,state,via,the,cluster,health,api,this,method,will,also,wait,for,relocations,it,is,useful,to,ensure,that,all,action,on,the,cluster,have,finished,and,all,shards,that,were,currently,relocating,are,now,allocated,and,started,param,timeout,time,out,value,to,set,on,link,org,elasticsearch,action,admin,cluster,health,cluster,health,request;public,cluster,health,status,ensure,green,time,value,timeout,string,indices,cluster,health,response,action,get,client,admin,cluster,health,requests,cluster,health,request,indices,timeout,timeout,wait,for,green,status,wait,for,events,priority,languid,wait,for,no,relocating,shards,true,action,get,if,action,get,is,timed,out,logger,info,ensure,green,timed,out,cluster,state,n,n,client,admin,cluster,prepare,state,get,get,state,client,admin,cluster,prepare,pending,cluster,tasks,get,assert,that,timed,out,waiting,for,green,state,action,get,is,timed,out,equal,to,false,assert,that,action,get,get,status,equal,to,cluster,health,status,green,logger,debug,indices,are,green,indices,length,0,indices,return,action,get,get,status
ESSingleNodeTestCase -> public ClusterHealthStatus ensureGreen(TimeValue timeout, String... indices);1551176390;Ensures the cluster has a green state via the cluster health API. This method will also wait for relocations._It is useful to ensure that all action on the cluster have finished and all shards that were currently relocating_are now allocated and started.__@param timeout time out value to set on {@link org.elasticsearch.action.admin.cluster.health.ClusterHealthRequest};public ClusterHealthStatus ensureGreen(TimeValue timeout, String... indices) {_        ClusterHealthResponse actionGet = client().admin().cluster()_                .health(Requests.clusterHealthRequest(indices).timeout(timeout).waitForGreenStatus().waitForEvents(Priority.LANGUID)_                        .waitForNoRelocatingShards(true)).actionGet()__        if (actionGet.isTimedOut()) {_            logger.info("ensureGreen timed out, cluster state:\n{}\n{}", client().admin().cluster().prepareState().get().getState(),_                client().admin().cluster().preparePendingClusterTasks().get())__            assertThat("timed out waiting for green state", actionGet.isTimedOut(), equalTo(false))__        }_        assertThat(actionGet.getStatus(), equalTo(ClusterHealthStatus.GREEN))__        logger.debug("indices {} are green", indices.length == 0 ? "[_all]" : indices)__        return actionGet.getStatus()__    };ensures,the,cluster,has,a,green,state,via,the,cluster,health,api,this,method,will,also,wait,for,relocations,it,is,useful,to,ensure,that,all,action,on,the,cluster,have,finished,and,all,shards,that,were,currently,relocating,are,now,allocated,and,started,param,timeout,time,out,value,to,set,on,link,org,elasticsearch,action,admin,cluster,health,cluster,health,request;public,cluster,health,status,ensure,green,time,value,timeout,string,indices,cluster,health,response,action,get,client,admin,cluster,health,requests,cluster,health,request,indices,timeout,timeout,wait,for,green,status,wait,for,events,priority,languid,wait,for,no,relocating,shards,true,action,get,if,action,get,is,timed,out,logger,info,ensure,green,timed,out,cluster,state,n,n,client,admin,cluster,prepare,state,get,get,state,client,admin,cluster,prepare,pending,cluster,tasks,get,assert,that,timed,out,waiting,for,green,state,action,get,is,timed,out,equal,to,false,assert,that,action,get,get,status,equal,to,cluster,health,status,green,logger,debug,indices,are,green,indices,length,0,indices,return,action,get,get,status
ESSingleNodeTestCase -> protected IndexService createIndex(String index, Settings settings);1524684173;Create a new index on the singleton node with the provided index settings.;protected IndexService createIndex(String index, Settings settings) {_        return createIndex(index, settings, null, (XContentBuilder) null)__    };create,a,new,index,on,the,singleton,node,with,the,provided,index,settings;protected,index,service,create,index,string,index,settings,settings,return,create,index,index,settings,null,xcontent,builder,null
ESSingleNodeTestCase -> protected IndexService createIndex(String index, Settings settings);1525162917;Create a new index on the singleton node with the provided index settings.;protected IndexService createIndex(String index, Settings settings) {_        return createIndex(index, settings, null, (XContentBuilder) null)__    };create,a,new,index,on,the,singleton,node,with,the,provided,index,settings;protected,index,service,create,index,string,index,settings,settings,return,create,index,index,settings,null,xcontent,builder,null
ESSingleNodeTestCase -> protected IndexService createIndex(String index, Settings settings);1525334055;Create a new index on the singleton node with the provided index settings.;protected IndexService createIndex(String index, Settings settings) {_        return createIndex(index, settings, null, (XContentBuilder) null)__    };create,a,new,index,on,the,singleton,node,with,the,provided,index,settings;protected,index,service,create,index,string,index,settings,settings,return,create,index,index,settings,null,xcontent,builder,null
ESSingleNodeTestCase -> protected IndexService createIndex(String index, Settings settings);1528762805;Create a new index on the singleton node with the provided index settings.;protected IndexService createIndex(String index, Settings settings) {_        return createIndex(index, settings, null, (XContentBuilder) null)__    };create,a,new,index,on,the,singleton,node,with,the,provided,index,settings;protected,index,service,create,index,string,index,settings,settings,return,create,index,index,settings,null,xcontent,builder,null
ESSingleNodeTestCase -> protected IndexService createIndex(String index, Settings settings);1531910483;Create a new index on the singleton node with the provided index settings.;protected IndexService createIndex(String index, Settings settings) {_        return createIndex(index, settings, null, (XContentBuilder) null)__    };create,a,new,index,on,the,singleton,node,with,the,provided,index,settings;protected,index,service,create,index,string,index,settings,settings,return,create,index,index,settings,null,xcontent,builder,null
ESSingleNodeTestCase -> protected IndexService createIndex(String index, Settings settings);1535723122;Create a new index on the singleton node with the provided index settings.;protected IndexService createIndex(String index, Settings settings) {_        return createIndex(index, settings, null, (XContentBuilder) null)__    };create,a,new,index,on,the,singleton,node,with,the,provided,index,settings;protected,index,service,create,index,string,index,settings,settings,return,create,index,index,settings,null,xcontent,builder,null
ESSingleNodeTestCase -> protected IndexService createIndex(String index, Settings settings);1536137328;Create a new index on the singleton node with the provided index settings.;protected IndexService createIndex(String index, Settings settings) {_        return createIndex(index, settings, null, (XContentBuilder) null)__    };create,a,new,index,on,the,singleton,node,with,the,provided,index,settings;protected,index,service,create,index,string,index,settings,settings,return,create,index,index,settings,null,xcontent,builder,null
ESSingleNodeTestCase -> protected IndexService createIndex(String index, Settings settings);1536828374;Create a new index on the singleton node with the provided index settings.;protected IndexService createIndex(String index, Settings settings) {_        return createIndex(index, settings, null, (XContentBuilder) null)__    };create,a,new,index,on,the,singleton,node,with,the,provided,index,settings;protected,index,service,create,index,string,index,settings,settings,return,create,index,index,settings,null,xcontent,builder,null
ESSingleNodeTestCase -> protected IndexService createIndex(String index, Settings settings);1544081506;Create a new index on the singleton node with the provided index settings.;protected IndexService createIndex(String index, Settings settings) {_        return createIndex(index, settings, null, (XContentBuilder) null)__    };create,a,new,index,on,the,singleton,node,with,the,provided,index,settings;protected,index,service,create,index,string,index,settings,settings,return,create,index,index,settings,null,xcontent,builder,null
ESSingleNodeTestCase -> protected IndexService createIndex(String index, Settings settings);1545315633;Create a new index on the singleton node with the provided index settings.;protected IndexService createIndex(String index, Settings settings) {_        return createIndex(index, settings, null, (XContentBuilder) null)__    };create,a,new,index,on,the,singleton,node,with,the,provided,index,settings;protected,index,service,create,index,string,index,settings,settings,return,create,index,index,settings,null,xcontent,builder,null
ESSingleNodeTestCase -> protected IndexService createIndex(String index, Settings settings);1549356412;Create a new index on the singleton node with the provided index settings.;protected IndexService createIndex(String index, Settings settings) {_        return createIndex(index, settings, null, (XContentBuilder) null)__    };create,a,new,index,on,the,singleton,node,with,the,provided,index,settings;protected,index,service,create,index,string,index,settings,settings,return,create,index,index,settings,null,xcontent,builder,null
ESSingleNodeTestCase -> protected IndexService createIndex(String index, Settings settings);1549388544;Create a new index on the singleton node with the provided index settings.;protected IndexService createIndex(String index, Settings settings) {_        return createIndex(index, settings, null, (XContentBuilder) null)__    };create,a,new,index,on,the,singleton,node,with,the,provided,index,settings;protected,index,service,create,index,string,index,settings,settings,return,create,index,index,settings,null,xcontent,builder,null
ESSingleNodeTestCase -> protected IndexService createIndex(String index, Settings settings);1549452878;Create a new index on the singleton node with the provided index settings.;protected IndexService createIndex(String index, Settings settings) {_        return createIndex(index, settings, null, (XContentBuilder) null)__    };create,a,new,index,on,the,singleton,node,with,the,provided,index,settings;protected,index,service,create,index,string,index,settings,settings,return,create,index,index,settings,null,xcontent,builder,null
ESSingleNodeTestCase -> protected IndexService createIndex(String index, Settings settings);1550166004;Create a new index on the singleton node with the provided index settings.;protected IndexService createIndex(String index, Settings settings) {_        return createIndex(index, settings, null, (XContentBuilder) null)__    };create,a,new,index,on,the,singleton,node,with,the,provided,index,settings;protected,index,service,create,index,string,index,settings,settings,return,create,index,index,settings,null,xcontent,builder,null
ESSingleNodeTestCase -> protected IndexService createIndex(String index, Settings settings);1550511450;Create a new index on the singleton node with the provided index settings.;protected IndexService createIndex(String index, Settings settings) {_        return createIndex(index, settings, null, (XContentBuilder) null)__    };create,a,new,index,on,the,singleton,node,with,the,provided,index,settings;protected,index,service,create,index,string,index,settings,settings,return,create,index,index,settings,null,xcontent,builder,null
ESSingleNodeTestCase -> protected IndexService createIndex(String index, Settings settings);1551176390;Create a new index on the singleton node with the provided index settings.;protected IndexService createIndex(String index, Settings settings) {_        return createIndex(index, settings, null, (XContentBuilder) null)__    };create,a,new,index,on,the,singleton,node,with,the,provided,index,settings;protected,index,service,create,index,string,index,settings,settings,return,create,index,index,settings,null,xcontent,builder,null
ESSingleNodeTestCase -> protected Node node();1524684173;Return a reference to the singleton node.;protected Node node() {_        return NODE__    };return,a,reference,to,the,singleton,node;protected,node,node,return,node
ESSingleNodeTestCase -> protected Node node();1525162917;Return a reference to the singleton node.;protected Node node() {_        return NODE__    };return,a,reference,to,the,singleton,node;protected,node,node,return,node
ESSingleNodeTestCase -> protected Node node();1525334055;Return a reference to the singleton node.;protected Node node() {_        return NODE__    };return,a,reference,to,the,singleton,node;protected,node,node,return,node
ESSingleNodeTestCase -> protected Node node();1528762805;Return a reference to the singleton node.;protected Node node() {_        return NODE__    };return,a,reference,to,the,singleton,node;protected,node,node,return,node
ESSingleNodeTestCase -> protected Node node();1531910483;Return a reference to the singleton node.;protected Node node() {_        return NODE__    };return,a,reference,to,the,singleton,node;protected,node,node,return,node
ESSingleNodeTestCase -> protected Node node();1535723122;Return a reference to the singleton node.;protected Node node() {_        return NODE__    };return,a,reference,to,the,singleton,node;protected,node,node,return,node
ESSingleNodeTestCase -> protected Node node();1536137328;Return a reference to the singleton node.;protected Node node() {_        return NODE__    };return,a,reference,to,the,singleton,node;protected,node,node,return,node
ESSingleNodeTestCase -> protected Node node();1536828374;Return a reference to the singleton node.;protected Node node() {_        return NODE__    };return,a,reference,to,the,singleton,node;protected,node,node,return,node
ESSingleNodeTestCase -> protected Node node();1544081506;Return a reference to the singleton node.;protected Node node() {_        return NODE__    };return,a,reference,to,the,singleton,node;protected,node,node,return,node
ESSingleNodeTestCase -> protected Node node();1545315633;Return a reference to the singleton node.;protected Node node() {_        return NODE__    };return,a,reference,to,the,singleton,node;protected,node,node,return,node
ESSingleNodeTestCase -> protected Node node();1549356412;Return a reference to the singleton node.;protected Node node() {_        return NODE__    };return,a,reference,to,the,singleton,node;protected,node,node,return,node
ESSingleNodeTestCase -> protected Node node();1549388544;Return a reference to the singleton node.;protected Node node() {_        return NODE__    };return,a,reference,to,the,singleton,node;protected,node,node,return,node
ESSingleNodeTestCase -> protected Node node();1549452878;Return a reference to the singleton node.;protected Node node() {_        return NODE__    };return,a,reference,to,the,singleton,node;protected,node,node,return,node
ESSingleNodeTestCase -> protected Node node();1550166004;Return a reference to the singleton node.;protected Node node() {_        return NODE__    };return,a,reference,to,the,singleton,node;protected,node,node,return,node
ESSingleNodeTestCase -> protected Node node();1550511450;Return a reference to the singleton node.;protected Node node() {_        return NODE__    };return,a,reference,to,the,singleton,node;protected,node,node,return,node
ESSingleNodeTestCase -> protected Node node();1551176390;Return a reference to the singleton node.;protected Node node() {_        return NODE__    };return,a,reference,to,the,singleton,node;protected,node,node,return,node
