# id;timestamp;commentText;codeText;commentWords;codeWords
MockTransportService -> public boolean addSendBehavior(TransportAddress transportAddress, StubbableTransport.SendRequestBehavior sendBehavior);1534203100;Adds a new send behavior that is used for communication with the given delegate address.__@return {@code true} if no other send behavior was registered for this address before.;public boolean addSendBehavior(TransportAddress transportAddress, StubbableTransport.SendRequestBehavior sendBehavior) {_        return transport().addSendBehavior(transportAddress, sendBehavior)__    };adds,a,new,send,behavior,that,is,used,for,communication,with,the,given,delegate,address,return,code,true,if,no,other,send,behavior,was,registered,for,this,address,before;public,boolean,add,send,behavior,transport,address,transport,address,stubbable,transport,send,request,behavior,send,behavior,return,transport,add,send,behavior,transport,address,send,behavior
MockTransportService -> public boolean addSendBehavior(TransportAddress transportAddress, StubbableTransport.SendRequestBehavior sendBehavior);1534362961;Adds a new send behavior that is used for communication with the given delegate address.__@return {@code true} if no other send behavior was registered for this address before.;public boolean addSendBehavior(TransportAddress transportAddress, StubbableTransport.SendRequestBehavior sendBehavior) {_        return transport().addSendBehavior(transportAddress, sendBehavior)__    };adds,a,new,send,behavior,that,is,used,for,communication,with,the,given,delegate,address,return,code,true,if,no,other,send,behavior,was,registered,for,this,address,before;public,boolean,add,send,behavior,transport,address,transport,address,stubbable,transport,send,request,behavior,send,behavior,return,transport,add,send,behavior,transport,address,send,behavior
MockTransportService -> public boolean addSendBehavior(TransportAddress transportAddress, StubbableTransport.SendRequestBehavior sendBehavior);1535383145;Adds a new send behavior that is used for communication with the given delegate address.__@return {@code true} if no other send behavior was registered for this address before.;public boolean addSendBehavior(TransportAddress transportAddress, StubbableTransport.SendRequestBehavior sendBehavior) {_        return transport().addSendBehavior(transportAddress, sendBehavior)__    };adds,a,new,send,behavior,that,is,used,for,communication,with,the,given,delegate,address,return,code,true,if,no,other,send,behavior,was,registered,for,this,address,before;public,boolean,add,send,behavior,transport,address,transport,address,stubbable,transport,send,request,behavior,send,behavior,return,transport,add,send,behavior,transport,address,send,behavior
MockTransportService -> public boolean addSendBehavior(TransportAddress transportAddress, StubbableTransport.SendRequestBehavior sendBehavior);1541092382;Adds a new send behavior that is used for communication with the given delegate address.__@return {@code true} if no other send behavior was registered for this address before.;public boolean addSendBehavior(TransportAddress transportAddress, StubbableTransport.SendRequestBehavior sendBehavior) {_        return transport().addSendBehavior(transportAddress, sendBehavior)__    };adds,a,new,send,behavior,that,is,used,for,communication,with,the,given,delegate,address,return,code,true,if,no,other,send,behavior,was,registered,for,this,address,before;public,boolean,add,send,behavior,transport,address,transport,address,stubbable,transport,send,request,behavior,send,behavior,return,transport,add,send,behavior,transport,address,send,behavior
MockTransportService -> public boolean addSendBehavior(TransportAddress transportAddress, StubbableTransport.SendRequestBehavior sendBehavior);1542270280;Adds a new send behavior that is used for communication with the given delegate address.__@return {@code true} if no other send behavior was registered for this address before.;public boolean addSendBehavior(TransportAddress transportAddress, StubbableTransport.SendRequestBehavior sendBehavior) {_        return transport().addSendBehavior(transportAddress, sendBehavior)__    };adds,a,new,send,behavior,that,is,used,for,communication,with,the,given,delegate,address,return,code,true,if,no,other,send,behavior,was,registered,for,this,address,before;public,boolean,add,send,behavior,transport,address,transport,address,stubbable,transport,send,request,behavior,send,behavior,return,transport,add,send,behavior,transport,address,send,behavior
MockTransportService -> public boolean addSendBehavior(TransportAddress transportAddress, StubbableTransport.SendRequestBehavior sendBehavior);1542646292;Adds a new send behavior that is used for communication with the given delegate address.__@return {@code true} if no other send behavior was registered for this address before.;public boolean addSendBehavior(TransportAddress transportAddress, StubbableTransport.SendRequestBehavior sendBehavior) {_        return transport().addSendBehavior(transportAddress, sendBehavior)__    };adds,a,new,send,behavior,that,is,used,for,communication,with,the,given,delegate,address,return,code,true,if,no,other,send,behavior,was,registered,for,this,address,before;public,boolean,add,send,behavior,transport,address,transport,address,stubbable,transport,send,request,behavior,send,behavior,return,transport,add,send,behavior,transport,address,send,behavior
MockTransportService -> public boolean addSendBehavior(TransportAddress transportAddress, StubbableTransport.SendRequestBehavior sendBehavior);1543602642;Adds a new send behavior that is used for communication with the given delegate address.__@return {@code true} if no other send behavior was registered for this address before.;public boolean addSendBehavior(TransportAddress transportAddress, StubbableTransport.SendRequestBehavior sendBehavior) {_        return transport().addSendBehavior(transportAddress, sendBehavior)__    };adds,a,new,send,behavior,that,is,used,for,communication,with,the,given,delegate,address,return,code,true,if,no,other,send,behavior,was,registered,for,this,address,before;public,boolean,add,send,behavior,transport,address,transport,address,stubbable,transport,send,request,behavior,send,behavior,return,transport,add,send,behavior,transport,address,send,behavior
MockTransportService -> public boolean addSendBehavior(TransportAddress transportAddress, StubbableTransport.SendRequestBehavior sendBehavior);1544206631;Adds a new send behavior that is used for communication with the given delegate address.__@return {@code true} if no other send behavior was registered for this address before.;public boolean addSendBehavior(TransportAddress transportAddress, StubbableTransport.SendRequestBehavior sendBehavior) {_        return transport().addSendBehavior(transportAddress, sendBehavior)__    };adds,a,new,send,behavior,that,is,used,for,communication,with,the,given,delegate,address,return,code,true,if,no,other,send,behavior,was,registered,for,this,address,before;public,boolean,add,send,behavior,transport,address,transport,address,stubbable,transport,send,request,behavior,send,behavior,return,transport,add,send,behavior,transport,address,send,behavior
MockTransportService -> public boolean addSendBehavior(TransportAddress transportAddress, StubbableTransport.SendRequestBehavior sendBehavior);1544554541;Adds a new send behavior that is used for communication with the given delegate address.__@return {@code true} if no other send behavior was registered for this address before.;public boolean addSendBehavior(TransportAddress transportAddress, StubbableTransport.SendRequestBehavior sendBehavior) {_        return transport().addSendBehavior(transportAddress, sendBehavior)__    };adds,a,new,send,behavior,that,is,used,for,communication,with,the,given,delegate,address,return,code,true,if,no,other,send,behavior,was,registered,for,this,address,before;public,boolean,add,send,behavior,transport,address,transport,address,stubbable,transport,send,request,behavior,send,behavior,return,transport,add,send,behavior,transport,address,send,behavior
MockTransportService -> public boolean addSendBehavior(TransportAddress transportAddress, StubbableTransport.SendRequestBehavior sendBehavior);1544823664;Adds a new send behavior that is used for communication with the given delegate address.__@return {@code true} if no other send behavior was registered for this address before.;public boolean addSendBehavior(TransportAddress transportAddress, StubbableTransport.SendRequestBehavior sendBehavior) {_        return transport().addSendBehavior(transportAddress, sendBehavior)__    };adds,a,new,send,behavior,that,is,used,for,communication,with,the,given,delegate,address,return,code,true,if,no,other,send,behavior,was,registered,for,this,address,before;public,boolean,add,send,behavior,transport,address,transport,address,stubbable,transport,send,request,behavior,send,behavior,return,transport,add,send,behavior,transport,address,send,behavior
MockTransportService -> public boolean addSendBehavior(TransportAddress transportAddress, StubbableTransport.SendRequestBehavior sendBehavior);1548770891;Adds a new send behavior that is used for communication with the given delegate address.__@return {@code true} if no other send behavior was registered for this address before.;public boolean addSendBehavior(TransportAddress transportAddress, StubbableTransport.SendRequestBehavior sendBehavior) {_        return transport().addSendBehavior(transportAddress, sendBehavior)__    };adds,a,new,send,behavior,that,is,used,for,communication,with,the,given,delegate,address,return,code,true,if,no,other,send,behavior,was,registered,for,this,address,before;public,boolean,add,send,behavior,transport,address,transport,address,stubbable,transport,send,request,behavior,send,behavior,return,transport,add,send,behavior,transport,address,send,behavior
MockTransportService -> public boolean addSendBehavior(TransportAddress transportAddress, StubbableTransport.SendRequestBehavior sendBehavior);1548790146;Adds a new send behavior that is used for communication with the given delegate address.__@return {@code true} if no other send behavior was registered for this address before.;public boolean addSendBehavior(TransportAddress transportAddress, StubbableTransport.SendRequestBehavior sendBehavior) {_        return transport().addSendBehavior(transportAddress, sendBehavior)__    };adds,a,new,send,behavior,that,is,used,for,communication,with,the,given,delegate,address,return,code,true,if,no,other,send,behavior,was,registered,for,this,address,before;public,boolean,add,send,behavior,transport,address,transport,address,stubbable,transport,send,request,behavior,send,behavior,return,transport,add,send,behavior,transport,address,send,behavior
MockTransportService -> public boolean addSendBehavior(TransportAddress transportAddress, StubbableTransport.SendRequestBehavior sendBehavior);1548953505;Adds a new send behavior that is used for communication with the given delegate address.__@return {@code true} if no other send behavior was registered for this address before.;public boolean addSendBehavior(TransportAddress transportAddress, StubbableTransport.SendRequestBehavior sendBehavior) {_        return transport().addSendBehavior(transportAddress, sendBehavior)__    };adds,a,new,send,behavior,that,is,used,for,communication,with,the,given,delegate,address,return,code,true,if,no,other,send,behavior,was,registered,for,this,address,before;public,boolean,add,send,behavior,transport,address,transport,address,stubbable,transport,send,request,behavior,send,behavior,return,transport,add,send,behavior,transport,address,send,behavior
MockTransportService -> public boolean addSendBehavior(TransportAddress transportAddress, StubbableTransport.SendRequestBehavior sendBehavior);1550601141;Adds a new send behavior that is used for communication with the given delegate address.__@return {@code true} if no other send behavior was registered for this address before.;public boolean addSendBehavior(TransportAddress transportAddress, StubbableTransport.SendRequestBehavior sendBehavior) {_        return transport().addSendBehavior(transportAddress, sendBehavior)__    };adds,a,new,send,behavior,that,is,used,for,communication,with,the,given,delegate,address,return,code,true,if,no,other,send,behavior,was,registered,for,this,address,before;public,boolean,add,send,behavior,transport,address,transport,address,stubbable,transport,send,request,behavior,send,behavior,return,transport,add,send,behavior,transport,address,send,behavior
MockTransportService -> public boolean addSendBehavior(TransportAddress transportAddress, StubbableTransport.SendRequestBehavior sendBehavior);1551176390;Adds a new send behavior that is used for communication with the given delegate address.__@return {@code true} if no other send behavior was registered for this address before.;public boolean addSendBehavior(TransportAddress transportAddress, StubbableTransport.SendRequestBehavior sendBehavior) {_        return transport().addSendBehavior(transportAddress, sendBehavior)__    };adds,a,new,send,behavior,that,is,used,for,communication,with,the,given,delegate,address,return,code,true,if,no,other,send,behavior,was,registered,for,this,address,before;public,boolean,add,send,behavior,transport,address,transport,address,stubbable,transport,send,request,behavior,send,behavior,return,transport,add,send,behavior,transport,address,send,behavior
MockTransportService -> public void addUnresponsiveRule(TransportService transportService);1524684173;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.;public void addUnresponsiveRule(TransportService transportService) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addUnresponsiveRule(transportAddress)__        }_    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added;public,void,add,unresponsive,rule,transport,service,transport,service,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,unresponsive,rule,transport,address
MockTransportService -> public void addUnresponsiveRule(TransportService transportService);1525162917;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.;public void addUnresponsiveRule(TransportService transportService) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addUnresponsiveRule(transportAddress)__        }_    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added;public,void,add,unresponsive,rule,transport,service,transport,service,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,unresponsive,rule,transport,address
MockTransportService -> public void addUnresponsiveRule(TransportService transportService);1531179852;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.;public void addUnresponsiveRule(TransportService transportService) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addUnresponsiveRule(transportAddress)__        }_    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added;public,void,add,unresponsive,rule,transport,service,transport,service,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,unresponsive,rule,transport,address
MockTransportService -> public void addUnresponsiveRule(TransportService transportService);1534203100;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.;public void addUnresponsiveRule(TransportService transportService) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addUnresponsiveRule(transportAddress)__        }_    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added;public,void,add,unresponsive,rule,transport,service,transport,service,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,unresponsive,rule,transport,address
MockTransportService -> public void addUnresponsiveRule(TransportService transportService);1534362961;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.;public void addUnresponsiveRule(TransportService transportService) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addUnresponsiveRule(transportAddress)__        }_    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added;public,void,add,unresponsive,rule,transport,service,transport,service,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,unresponsive,rule,transport,address
MockTransportService -> public void addUnresponsiveRule(TransportService transportService);1535383145;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.;public void addUnresponsiveRule(TransportService transportService) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addUnresponsiveRule(transportAddress)__        }_    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added;public,void,add,unresponsive,rule,transport,service,transport,service,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,unresponsive,rule,transport,address
MockTransportService -> public void addUnresponsiveRule(TransportService transportService);1541092382;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.;public void addUnresponsiveRule(TransportService transportService) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addUnresponsiveRule(transportAddress)__        }_    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added;public,void,add,unresponsive,rule,transport,service,transport,service,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,unresponsive,rule,transport,address
MockTransportService -> public void addUnresponsiveRule(TransportService transportService);1542270280;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.;public void addUnresponsiveRule(TransportService transportService) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addUnresponsiveRule(transportAddress)__        }_    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added;public,void,add,unresponsive,rule,transport,service,transport,service,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,unresponsive,rule,transport,address
MockTransportService -> public void addUnresponsiveRule(TransportService transportService);1542646292;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.;public void addUnresponsiveRule(TransportService transportService) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addUnresponsiveRule(transportAddress)__        }_    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added;public,void,add,unresponsive,rule,transport,service,transport,service,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,unresponsive,rule,transport,address
MockTransportService -> public void addUnresponsiveRule(TransportService transportService);1543602642;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.;public void addUnresponsiveRule(TransportService transportService) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addUnresponsiveRule(transportAddress)__        }_    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added;public,void,add,unresponsive,rule,transport,service,transport,service,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,unresponsive,rule,transport,address
MockTransportService -> public void addUnresponsiveRule(TransportService transportService);1544206631;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.;public void addUnresponsiveRule(TransportService transportService) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addUnresponsiveRule(transportAddress)__        }_    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added;public,void,add,unresponsive,rule,transport,service,transport,service,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,unresponsive,rule,transport,address
MockTransportService -> public void addUnresponsiveRule(TransportService transportService);1544554541;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.;public void addUnresponsiveRule(TransportService transportService) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addUnresponsiveRule(transportAddress)__        }_    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added;public,void,add,unresponsive,rule,transport,service,transport,service,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,unresponsive,rule,transport,address
MockTransportService -> public void addUnresponsiveRule(TransportService transportService);1544823664;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.;public void addUnresponsiveRule(TransportService transportService) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addUnresponsiveRule(transportAddress)__        }_    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added;public,void,add,unresponsive,rule,transport,service,transport,service,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,unresponsive,rule,transport,address
MockTransportService -> public void addUnresponsiveRule(TransportService transportService);1548770891;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.;public void addUnresponsiveRule(TransportService transportService) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addUnresponsiveRule(transportAddress)__        }_    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added;public,void,add,unresponsive,rule,transport,service,transport,service,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,unresponsive,rule,transport,address
MockTransportService -> public void addUnresponsiveRule(TransportService transportService);1548790146;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.;public void addUnresponsiveRule(TransportService transportService) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addUnresponsiveRule(transportAddress)__        }_    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added;public,void,add,unresponsive,rule,transport,service,transport,service,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,unresponsive,rule,transport,address
MockTransportService -> public void addUnresponsiveRule(TransportService transportService);1548953505;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.;public void addUnresponsiveRule(TransportService transportService) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addUnresponsiveRule(transportAddress)__        }_    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added;public,void,add,unresponsive,rule,transport,service,transport,service,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,unresponsive,rule,transport,address
MockTransportService -> public void addUnresponsiveRule(TransportService transportService);1550601141;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.;public void addUnresponsiveRule(TransportService transportService) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addUnresponsiveRule(transportAddress)__        }_    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added;public,void,add,unresponsive,rule,transport,service,transport,service,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,unresponsive,rule,transport,address
MockTransportService -> public void addUnresponsiveRule(TransportService transportService);1551176390;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.;public void addUnresponsiveRule(TransportService transportService) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addUnresponsiveRule(transportAddress)__        }_    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added;public,void,add,unresponsive,rule,transport,service,transport,service,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,unresponsive,rule,transport,address
MockTransportService -> public boolean addDelegate(TransportService transportService, DelegateTransport transport);1524684173;Adds a new delegate transport that is used for communication with the given transport service.__@return <tt>true</tt> iff no other delegate was registered for any of the addresses bound by transport service.;public boolean addDelegate(TransportService transportService, DelegateTransport transport) {_        boolean noRegistered = true__        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            noRegistered &= addDelegate(transportAddress, transport)__        }_        return noRegistered__    };adds,a,new,delegate,transport,that,is,used,for,communication,with,the,given,transport,service,return,tt,true,tt,iff,no,other,delegate,was,registered,for,any,of,the,addresses,bound,by,transport,service;public,boolean,add,delegate,transport,service,transport,service,delegate,transport,transport,boolean,no,registered,true,for,transport,address,transport,address,extract,transport,addresses,transport,service,no,registered,add,delegate,transport,address,transport,return,no,registered
MockTransportService -> public boolean addDelegate(TransportService transportService, DelegateTransport transport);1525162917;Adds a new delegate transport that is used for communication with the given transport service.__@return {@code true} iff no other delegate was registered for any of the addresses bound by transport service.;public boolean addDelegate(TransportService transportService, DelegateTransport transport) {_        boolean noRegistered = true__        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            noRegistered &= addDelegate(transportAddress, transport)__        }_        return noRegistered__    };adds,a,new,delegate,transport,that,is,used,for,communication,with,the,given,transport,service,return,code,true,iff,no,other,delegate,was,registered,for,any,of,the,addresses,bound,by,transport,service;public,boolean,add,delegate,transport,service,transport,service,delegate,transport,transport,boolean,no,registered,true,for,transport,address,transport,address,extract,transport,addresses,transport,service,no,registered,add,delegate,transport,address,transport,return,no,registered
MockTransportService -> public boolean addDelegate(TransportService transportService, DelegateTransport transport);1531179852;Adds a new delegate transport that is used for communication with the given transport service.__@return {@code true} iff no other delegate was registered for any of the addresses bound by transport service.;public boolean addDelegate(TransportService transportService, DelegateTransport transport) {_        boolean noRegistered = true__        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            noRegistered &= addDelegate(transportAddress, transport)__        }_        return noRegistered__    };adds,a,new,delegate,transport,that,is,used,for,communication,with,the,given,transport,service,return,code,true,iff,no,other,delegate,was,registered,for,any,of,the,addresses,bound,by,transport,service;public,boolean,add,delegate,transport,service,transport,service,delegate,transport,transport,boolean,no,registered,true,for,transport,address,transport,address,extract,transport,addresses,transport,service,no,registered,add,delegate,transport,address,transport,return,no,registered
MockTransportService -> public boolean addNodeConnectedBehavior(TransportAddress transportAddress, StubbableConnectionManager.NodeConnectedBehavior behavior);1534203100;Adds a node connected behavior that is used for the given delegate address.__@return {@code true} if no other node connected behavior was registered for this address before.;public boolean addNodeConnectedBehavior(TransportAddress transportAddress, StubbableConnectionManager.NodeConnectedBehavior behavior) {_        return connectionManager().addNodeConnectedBehavior(transportAddress, behavior)__    };adds,a,node,connected,behavior,that,is,used,for,the,given,delegate,address,return,code,true,if,no,other,node,connected,behavior,was,registered,for,this,address,before;public,boolean,add,node,connected,behavior,transport,address,transport,address,stubbable,connection,manager,node,connected,behavior,behavior,return,connection,manager,add,node,connected,behavior,transport,address,behavior
MockTransportService -> public boolean addNodeConnectedBehavior(TransportAddress transportAddress, StubbableConnectionManager.NodeConnectedBehavior behavior);1534362961;Adds a node connected behavior that is used for the given delegate address.__@return {@code true} if no other node connected behavior was registered for this address before.;public boolean addNodeConnectedBehavior(TransportAddress transportAddress, StubbableConnectionManager.NodeConnectedBehavior behavior) {_        return connectionManager().addNodeConnectedBehavior(transportAddress, behavior)__    };adds,a,node,connected,behavior,that,is,used,for,the,given,delegate,address,return,code,true,if,no,other,node,connected,behavior,was,registered,for,this,address,before;public,boolean,add,node,connected,behavior,transport,address,transport,address,stubbable,connection,manager,node,connected,behavior,behavior,return,connection,manager,add,node,connected,behavior,transport,address,behavior
MockTransportService -> public boolean addNodeConnectedBehavior(TransportAddress transportAddress, StubbableConnectionManager.NodeConnectedBehavior behavior);1535383145;Adds a node connected behavior that is used for the given delegate address.__@return {@code true} if no other node connected behavior was registered for this address before.;public boolean addNodeConnectedBehavior(TransportAddress transportAddress, StubbableConnectionManager.NodeConnectedBehavior behavior) {_        return connectionManager().addNodeConnectedBehavior(transportAddress, behavior)__    };adds,a,node,connected,behavior,that,is,used,for,the,given,delegate,address,return,code,true,if,no,other,node,connected,behavior,was,registered,for,this,address,before;public,boolean,add,node,connected,behavior,transport,address,transport,address,stubbable,connection,manager,node,connected,behavior,behavior,return,connection,manager,add,node,connected,behavior,transport,address,behavior
MockTransportService -> public boolean addNodeConnectedBehavior(TransportAddress transportAddress, StubbableConnectionManager.NodeConnectedBehavior behavior);1541092382;Adds a node connected behavior that is used for the given delegate address.__@return {@code true} if no other node connected behavior was registered for this address before.;public boolean addNodeConnectedBehavior(TransportAddress transportAddress, StubbableConnectionManager.NodeConnectedBehavior behavior) {_        return connectionManager().addNodeConnectedBehavior(transportAddress, behavior)__    };adds,a,node,connected,behavior,that,is,used,for,the,given,delegate,address,return,code,true,if,no,other,node,connected,behavior,was,registered,for,this,address,before;public,boolean,add,node,connected,behavior,transport,address,transport,address,stubbable,connection,manager,node,connected,behavior,behavior,return,connection,manager,add,node,connected,behavior,transport,address,behavior
MockTransportService -> public boolean addNodeConnectedBehavior(TransportAddress transportAddress, StubbableConnectionManager.NodeConnectedBehavior behavior);1542270280;Adds a node connected behavior that is used for the given delegate address.__@return {@code true} if no other node connected behavior was registered for this address before.;public boolean addNodeConnectedBehavior(TransportAddress transportAddress, StubbableConnectionManager.NodeConnectedBehavior behavior) {_        return connectionManager().addNodeConnectedBehavior(transportAddress, behavior)__    };adds,a,node,connected,behavior,that,is,used,for,the,given,delegate,address,return,code,true,if,no,other,node,connected,behavior,was,registered,for,this,address,before;public,boolean,add,node,connected,behavior,transport,address,transport,address,stubbable,connection,manager,node,connected,behavior,behavior,return,connection,manager,add,node,connected,behavior,transport,address,behavior
MockTransportService -> public boolean addNodeConnectedBehavior(TransportAddress transportAddress, StubbableConnectionManager.NodeConnectedBehavior behavior);1542646292;Adds a node connected behavior that is used for the given delegate address.__@return {@code true} if no other node connected behavior was registered for this address before.;public boolean addNodeConnectedBehavior(TransportAddress transportAddress, StubbableConnectionManager.NodeConnectedBehavior behavior) {_        return connectionManager().addNodeConnectedBehavior(transportAddress, behavior)__    };adds,a,node,connected,behavior,that,is,used,for,the,given,delegate,address,return,code,true,if,no,other,node,connected,behavior,was,registered,for,this,address,before;public,boolean,add,node,connected,behavior,transport,address,transport,address,stubbable,connection,manager,node,connected,behavior,behavior,return,connection,manager,add,node,connected,behavior,transport,address,behavior
MockTransportService -> public boolean addNodeConnectedBehavior(TransportAddress transportAddress, StubbableConnectionManager.NodeConnectedBehavior behavior);1543602642;Adds a node connected behavior that is used for the given delegate address.__@return {@code true} if no other node connected behavior was registered for this address before.;public boolean addNodeConnectedBehavior(TransportAddress transportAddress, StubbableConnectionManager.NodeConnectedBehavior behavior) {_        return connectionManager().addNodeConnectedBehavior(transportAddress, behavior)__    };adds,a,node,connected,behavior,that,is,used,for,the,given,delegate,address,return,code,true,if,no,other,node,connected,behavior,was,registered,for,this,address,before;public,boolean,add,node,connected,behavior,transport,address,transport,address,stubbable,connection,manager,node,connected,behavior,behavior,return,connection,manager,add,node,connected,behavior,transport,address,behavior
MockTransportService -> public boolean addNodeConnectedBehavior(TransportAddress transportAddress, StubbableConnectionManager.NodeConnectedBehavior behavior);1544206631;Adds a node connected behavior that is used for the given delegate address.__@return {@code true} if no other node connected behavior was registered for this address before.;public boolean addNodeConnectedBehavior(TransportAddress transportAddress, StubbableConnectionManager.NodeConnectedBehavior behavior) {_        return connectionManager().addNodeConnectedBehavior(transportAddress, behavior)__    };adds,a,node,connected,behavior,that,is,used,for,the,given,delegate,address,return,code,true,if,no,other,node,connected,behavior,was,registered,for,this,address,before;public,boolean,add,node,connected,behavior,transport,address,transport,address,stubbable,connection,manager,node,connected,behavior,behavior,return,connection,manager,add,node,connected,behavior,transport,address,behavior
MockTransportService -> public boolean addNodeConnectedBehavior(TransportAddress transportAddress, StubbableConnectionManager.NodeConnectedBehavior behavior);1544554541;Adds a node connected behavior that is used for the given delegate address.__@return {@code true} if no other node connected behavior was registered for this address before.;public boolean addNodeConnectedBehavior(TransportAddress transportAddress, StubbableConnectionManager.NodeConnectedBehavior behavior) {_        return connectionManager().addNodeConnectedBehavior(transportAddress, behavior)__    };adds,a,node,connected,behavior,that,is,used,for,the,given,delegate,address,return,code,true,if,no,other,node,connected,behavior,was,registered,for,this,address,before;public,boolean,add,node,connected,behavior,transport,address,transport,address,stubbable,connection,manager,node,connected,behavior,behavior,return,connection,manager,add,node,connected,behavior,transport,address,behavior
MockTransportService -> public boolean addNodeConnectedBehavior(TransportAddress transportAddress, StubbableConnectionManager.NodeConnectedBehavior behavior);1544823664;Adds a node connected behavior that is used for the given delegate address.__@return {@code true} if no other node connected behavior was registered for this address before.;public boolean addNodeConnectedBehavior(TransportAddress transportAddress, StubbableConnectionManager.NodeConnectedBehavior behavior) {_        return connectionManager().addNodeConnectedBehavior(transportAddress, behavior)__    };adds,a,node,connected,behavior,that,is,used,for,the,given,delegate,address,return,code,true,if,no,other,node,connected,behavior,was,registered,for,this,address,before;public,boolean,add,node,connected,behavior,transport,address,transport,address,stubbable,connection,manager,node,connected,behavior,behavior,return,connection,manager,add,node,connected,behavior,transport,address,behavior
MockTransportService -> public boolean addNodeConnectedBehavior(TransportAddress transportAddress, StubbableConnectionManager.NodeConnectedBehavior behavior);1548770891;Adds a node connected behavior that is used for the given delegate address.__@return {@code true} if no other node connected behavior was registered for this address before.;public boolean addNodeConnectedBehavior(TransportAddress transportAddress, StubbableConnectionManager.NodeConnectedBehavior behavior) {_        return connectionManager().addNodeConnectedBehavior(transportAddress, behavior)__    };adds,a,node,connected,behavior,that,is,used,for,the,given,delegate,address,return,code,true,if,no,other,node,connected,behavior,was,registered,for,this,address,before;public,boolean,add,node,connected,behavior,transport,address,transport,address,stubbable,connection,manager,node,connected,behavior,behavior,return,connection,manager,add,node,connected,behavior,transport,address,behavior
MockTransportService -> public boolean addNodeConnectedBehavior(TransportAddress transportAddress, StubbableConnectionManager.NodeConnectedBehavior behavior);1548790146;Adds a node connected behavior that is used for the given delegate address.__@return {@code true} if no other node connected behavior was registered for this address before.;public boolean addNodeConnectedBehavior(TransportAddress transportAddress, StubbableConnectionManager.NodeConnectedBehavior behavior) {_        return connectionManager().addNodeConnectedBehavior(transportAddress, behavior)__    };adds,a,node,connected,behavior,that,is,used,for,the,given,delegate,address,return,code,true,if,no,other,node,connected,behavior,was,registered,for,this,address,before;public,boolean,add,node,connected,behavior,transport,address,transport,address,stubbable,connection,manager,node,connected,behavior,behavior,return,connection,manager,add,node,connected,behavior,transport,address,behavior
MockTransportService -> public boolean addNodeConnectedBehavior(TransportAddress transportAddress, StubbableConnectionManager.NodeConnectedBehavior behavior);1548953505;Adds a node connected behavior that is used for the given delegate address.__@return {@code true} if no other node connected behavior was registered for this address before.;public boolean addNodeConnectedBehavior(TransportAddress transportAddress, StubbableConnectionManager.NodeConnectedBehavior behavior) {_        return connectionManager().addNodeConnectedBehavior(transportAddress, behavior)__    };adds,a,node,connected,behavior,that,is,used,for,the,given,delegate,address,return,code,true,if,no,other,node,connected,behavior,was,registered,for,this,address,before;public,boolean,add,node,connected,behavior,transport,address,transport,address,stubbable,connection,manager,node,connected,behavior,behavior,return,connection,manager,add,node,connected,behavior,transport,address,behavior
MockTransportService -> public boolean addNodeConnectedBehavior(TransportAddress transportAddress, StubbableConnectionManager.NodeConnectedBehavior behavior);1550601141;Adds a node connected behavior that is used for the given delegate address.__@return {@code true} if no other node connected behavior was registered for this address before.;public boolean addNodeConnectedBehavior(TransportAddress transportAddress, StubbableConnectionManager.NodeConnectedBehavior behavior) {_        return connectionManager().addNodeConnectedBehavior(transportAddress, behavior)__    };adds,a,node,connected,behavior,that,is,used,for,the,given,delegate,address,return,code,true,if,no,other,node,connected,behavior,was,registered,for,this,address,before;public,boolean,add,node,connected,behavior,transport,address,transport,address,stubbable,connection,manager,node,connected,behavior,behavior,return,connection,manager,add,node,connected,behavior,transport,address,behavior
MockTransportService -> public boolean addNodeConnectedBehavior(TransportAddress transportAddress, StubbableConnectionManager.NodeConnectedBehavior behavior);1551176390;Adds a node connected behavior that is used for the given delegate address.__@return {@code true} if no other node connected behavior was registered for this address before.;public boolean addNodeConnectedBehavior(TransportAddress transportAddress, StubbableConnectionManager.NodeConnectedBehavior behavior) {_        return connectionManager().addNodeConnectedBehavior(transportAddress, behavior)__    };adds,a,node,connected,behavior,that,is,used,for,the,given,delegate,address,return,code,true,if,no,other,node,connected,behavior,was,registered,for,this,address,before;public,boolean,add,node,connected,behavior,transport,address,transport,address,stubbable,connection,manager,node,connected,behavior,behavior,return,connection,manager,add,node,connected,behavior,transport,address,behavior
MockTransportService -> public void clearRule(TransportService transportService);1524684173;Clears the rule associated with the provided transport service.;public void clearRule(TransportService transportService) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            clearRule(transportAddress)__        }_    };clears,the,rule,associated,with,the,provided,transport,service;public,void,clear,rule,transport,service,transport,service,for,transport,address,transport,address,extract,transport,addresses,transport,service,clear,rule,transport,address
MockTransportService -> public void clearRule(TransportService transportService);1525162917;Clears the rule associated with the provided transport service.;public void clearRule(TransportService transportService) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            clearRule(transportAddress)__        }_    };clears,the,rule,associated,with,the,provided,transport,service;public,void,clear,rule,transport,service,transport,service,for,transport,address,transport,address,extract,transport,addresses,transport,service,clear,rule,transport,address
MockTransportService -> public void clearRule(TransportService transportService);1531179852;Clears the rule associated with the provided transport service.;public void clearRule(TransportService transportService) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            clearRule(transportAddress)__        }_    };clears,the,rule,associated,with,the,provided,transport,service;public,void,clear,rule,transport,service,transport,service,for,transport,address,transport,address,extract,transport,addresses,transport,service,clear,rule,transport,address
MockTransportService -> public void clearRule(TransportService transportService);1534203100;Clears the rule associated with the provided delegate service.;public void clearRule(TransportService transportService) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            clearRule(transportAddress)__        }_    };clears,the,rule,associated,with,the,provided,delegate,service;public,void,clear,rule,transport,service,transport,service,for,transport,address,transport,address,extract,transport,addresses,transport,service,clear,rule,transport,address
MockTransportService -> public void clearRule(TransportService transportService);1534362961;Clears the rule associated with the provided delegate service.;public void clearRule(TransportService transportService) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            clearRule(transportAddress)__        }_    };clears,the,rule,associated,with,the,provided,delegate,service;public,void,clear,rule,transport,service,transport,service,for,transport,address,transport,address,extract,transport,addresses,transport,service,clear,rule,transport,address
MockTransportService -> public void clearRule(TransportService transportService);1535383145;Clears the rule associated with the provided delegate service.;public void clearRule(TransportService transportService) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            clearRule(transportAddress)__        }_    };clears,the,rule,associated,with,the,provided,delegate,service;public,void,clear,rule,transport,service,transport,service,for,transport,address,transport,address,extract,transport,addresses,transport,service,clear,rule,transport,address
MockTransportService -> public void clearRule(TransportService transportService);1541092382;Clears the rule associated with the provided delegate service.;public void clearRule(TransportService transportService) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            clearRule(transportAddress)__        }_    };clears,the,rule,associated,with,the,provided,delegate,service;public,void,clear,rule,transport,service,transport,service,for,transport,address,transport,address,extract,transport,addresses,transport,service,clear,rule,transport,address
MockTransportService -> public void clearRule(TransportService transportService);1542270280;Clears the rule associated with the provided delegate service.;public void clearRule(TransportService transportService) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            clearRule(transportAddress)__        }_    };clears,the,rule,associated,with,the,provided,delegate,service;public,void,clear,rule,transport,service,transport,service,for,transport,address,transport,address,extract,transport,addresses,transport,service,clear,rule,transport,address
MockTransportService -> public void clearRule(TransportService transportService);1542646292;Clears the rule associated with the provided delegate service.;public void clearRule(TransportService transportService) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            clearRule(transportAddress)__        }_    };clears,the,rule,associated,with,the,provided,delegate,service;public,void,clear,rule,transport,service,transport,service,for,transport,address,transport,address,extract,transport,addresses,transport,service,clear,rule,transport,address
MockTransportService -> public void clearRule(TransportService transportService);1543602642;Clears the rule associated with the provided delegate service.;public void clearRule(TransportService transportService) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            clearRule(transportAddress)__        }_    };clears,the,rule,associated,with,the,provided,delegate,service;public,void,clear,rule,transport,service,transport,service,for,transport,address,transport,address,extract,transport,addresses,transport,service,clear,rule,transport,address
MockTransportService -> public void clearRule(TransportService transportService);1544206631;Clears the rule associated with the provided delegate service.;public void clearRule(TransportService transportService) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            clearRule(transportAddress)__        }_    };clears,the,rule,associated,with,the,provided,delegate,service;public,void,clear,rule,transport,service,transport,service,for,transport,address,transport,address,extract,transport,addresses,transport,service,clear,rule,transport,address
MockTransportService -> public void clearRule(TransportService transportService);1544554541;Clears the rule associated with the provided delegate service.;public void clearRule(TransportService transportService) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            clearRule(transportAddress)__        }_    };clears,the,rule,associated,with,the,provided,delegate,service;public,void,clear,rule,transport,service,transport,service,for,transport,address,transport,address,extract,transport,addresses,transport,service,clear,rule,transport,address
MockTransportService -> public void clearRule(TransportService transportService);1544823664;Clears the rule associated with the provided delegate service.;public void clearRule(TransportService transportService) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            clearRule(transportAddress)__        }_    };clears,the,rule,associated,with,the,provided,delegate,service;public,void,clear,rule,transport,service,transport,service,for,transport,address,transport,address,extract,transport,addresses,transport,service,clear,rule,transport,address
MockTransportService -> public void clearRule(TransportService transportService);1548770891;Clears the rule associated with the provided delegate service.;public void clearRule(TransportService transportService) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            clearRule(transportAddress)__        }_    };clears,the,rule,associated,with,the,provided,delegate,service;public,void,clear,rule,transport,service,transport,service,for,transport,address,transport,address,extract,transport,addresses,transport,service,clear,rule,transport,address
MockTransportService -> public void clearRule(TransportService transportService);1548790146;Clears the rule associated with the provided delegate service.;public void clearRule(TransportService transportService) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            clearRule(transportAddress)__        }_    };clears,the,rule,associated,with,the,provided,delegate,service;public,void,clear,rule,transport,service,transport,service,for,transport,address,transport,address,extract,transport,addresses,transport,service,clear,rule,transport,address
MockTransportService -> public void clearRule(TransportService transportService);1548953505;Clears the rule associated with the provided delegate service.;public void clearRule(TransportService transportService) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            clearRule(transportAddress)__        }_    };clears,the,rule,associated,with,the,provided,delegate,service;public,void,clear,rule,transport,service,transport,service,for,transport,address,transport,address,extract,transport,addresses,transport,service,clear,rule,transport,address
MockTransportService -> public void clearRule(TransportService transportService);1550601141;Clears the rule associated with the provided delegate service.;public void clearRule(TransportService transportService) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            clearRule(transportAddress)__        }_    };clears,the,rule,associated,with,the,provided,delegate,service;public,void,clear,rule,transport,service,transport,service,for,transport,address,transport,address,extract,transport,addresses,transport,service,clear,rule,transport,address
MockTransportService -> public void clearRule(TransportService transportService);1551176390;Clears the rule associated with the provided delegate service.;public void clearRule(TransportService transportService) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            clearRule(transportAddress)__        }_    };clears,the,rule,associated,with,the,provided,delegate,service;public,void,clear,rule,transport,service,transport,service,for,transport,address,transport,address,extract,transport,addresses,transport,service,clear,rule,transport,address
MockTransportService -> public boolean addNodeConnectedBehavior(TransportService transportService, StubbableConnectionManager.NodeConnectedBehavior behavior);1534203100;Adds a node connected behavior that is used for the given delegate service.__@return {@code true} if no other node connected behavior was registered for any of the addresses bound by delegate service.;public boolean addNodeConnectedBehavior(TransportService transportService, StubbableConnectionManager.NodeConnectedBehavior behavior) {_        boolean noRegistered = true__        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            noRegistered &= addNodeConnectedBehavior(transportAddress, behavior)__        }_        return noRegistered__    };adds,a,node,connected,behavior,that,is,used,for,the,given,delegate,service,return,code,true,if,no,other,node,connected,behavior,was,registered,for,any,of,the,addresses,bound,by,delegate,service;public,boolean,add,node,connected,behavior,transport,service,transport,service,stubbable,connection,manager,node,connected,behavior,behavior,boolean,no,registered,true,for,transport,address,transport,address,extract,transport,addresses,transport,service,no,registered,add,node,connected,behavior,transport,address,behavior,return,no,registered
MockTransportService -> public boolean addNodeConnectedBehavior(TransportService transportService, StubbableConnectionManager.NodeConnectedBehavior behavior);1534362961;Adds a node connected behavior that is used for the given delegate service.__@return {@code true} if no other node connected behavior was registered for any of the addresses bound by delegate service.;public boolean addNodeConnectedBehavior(TransportService transportService, StubbableConnectionManager.NodeConnectedBehavior behavior) {_        boolean noRegistered = true__        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            noRegistered &= addNodeConnectedBehavior(transportAddress, behavior)__        }_        return noRegistered__    };adds,a,node,connected,behavior,that,is,used,for,the,given,delegate,service,return,code,true,if,no,other,node,connected,behavior,was,registered,for,any,of,the,addresses,bound,by,delegate,service;public,boolean,add,node,connected,behavior,transport,service,transport,service,stubbable,connection,manager,node,connected,behavior,behavior,boolean,no,registered,true,for,transport,address,transport,address,extract,transport,addresses,transport,service,no,registered,add,node,connected,behavior,transport,address,behavior,return,no,registered
MockTransportService -> public boolean addNodeConnectedBehavior(TransportService transportService, StubbableConnectionManager.NodeConnectedBehavior behavior);1535383145;Adds a node connected behavior that is used for the given delegate service.__@return {@code true} if no other node connected behavior was registered for any of the addresses bound by delegate service.;public boolean addNodeConnectedBehavior(TransportService transportService, StubbableConnectionManager.NodeConnectedBehavior behavior) {_        boolean noRegistered = true__        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            noRegistered &= addNodeConnectedBehavior(transportAddress, behavior)__        }_        return noRegistered__    };adds,a,node,connected,behavior,that,is,used,for,the,given,delegate,service,return,code,true,if,no,other,node,connected,behavior,was,registered,for,any,of,the,addresses,bound,by,delegate,service;public,boolean,add,node,connected,behavior,transport,service,transport,service,stubbable,connection,manager,node,connected,behavior,behavior,boolean,no,registered,true,for,transport,address,transport,address,extract,transport,addresses,transport,service,no,registered,add,node,connected,behavior,transport,address,behavior,return,no,registered
MockTransportService -> public boolean addNodeConnectedBehavior(TransportService transportService, StubbableConnectionManager.NodeConnectedBehavior behavior);1541092382;Adds a node connected behavior that is used for the given delegate service.__@return {@code true} if no other node connected behavior was registered for any of the addresses bound by delegate service.;public boolean addNodeConnectedBehavior(TransportService transportService, StubbableConnectionManager.NodeConnectedBehavior behavior) {_        boolean noRegistered = true__        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            noRegistered &= addNodeConnectedBehavior(transportAddress, behavior)__        }_        return noRegistered__    };adds,a,node,connected,behavior,that,is,used,for,the,given,delegate,service,return,code,true,if,no,other,node,connected,behavior,was,registered,for,any,of,the,addresses,bound,by,delegate,service;public,boolean,add,node,connected,behavior,transport,service,transport,service,stubbable,connection,manager,node,connected,behavior,behavior,boolean,no,registered,true,for,transport,address,transport,address,extract,transport,addresses,transport,service,no,registered,add,node,connected,behavior,transport,address,behavior,return,no,registered
MockTransportService -> public boolean addNodeConnectedBehavior(TransportService transportService, StubbableConnectionManager.NodeConnectedBehavior behavior);1542270280;Adds a node connected behavior that is used for the given delegate service.__@return {@code true} if no other node connected behavior was registered for any of the addresses bound by delegate service.;public boolean addNodeConnectedBehavior(TransportService transportService, StubbableConnectionManager.NodeConnectedBehavior behavior) {_        boolean noRegistered = true__        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            noRegistered &= addNodeConnectedBehavior(transportAddress, behavior)__        }_        return noRegistered__    };adds,a,node,connected,behavior,that,is,used,for,the,given,delegate,service,return,code,true,if,no,other,node,connected,behavior,was,registered,for,any,of,the,addresses,bound,by,delegate,service;public,boolean,add,node,connected,behavior,transport,service,transport,service,stubbable,connection,manager,node,connected,behavior,behavior,boolean,no,registered,true,for,transport,address,transport,address,extract,transport,addresses,transport,service,no,registered,add,node,connected,behavior,transport,address,behavior,return,no,registered
MockTransportService -> public boolean addNodeConnectedBehavior(TransportService transportService, StubbableConnectionManager.NodeConnectedBehavior behavior);1542646292;Adds a node connected behavior that is used for the given delegate service.__@return {@code true} if no other node connected behavior was registered for any of the addresses bound by delegate service.;public boolean addNodeConnectedBehavior(TransportService transportService, StubbableConnectionManager.NodeConnectedBehavior behavior) {_        boolean noRegistered = true__        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            noRegistered &= addNodeConnectedBehavior(transportAddress, behavior)__        }_        return noRegistered__    };adds,a,node,connected,behavior,that,is,used,for,the,given,delegate,service,return,code,true,if,no,other,node,connected,behavior,was,registered,for,any,of,the,addresses,bound,by,delegate,service;public,boolean,add,node,connected,behavior,transport,service,transport,service,stubbable,connection,manager,node,connected,behavior,behavior,boolean,no,registered,true,for,transport,address,transport,address,extract,transport,addresses,transport,service,no,registered,add,node,connected,behavior,transport,address,behavior,return,no,registered
MockTransportService -> public boolean addNodeConnectedBehavior(TransportService transportService, StubbableConnectionManager.NodeConnectedBehavior behavior);1543602642;Adds a node connected behavior that is used for the given delegate service.__@return {@code true} if no other node connected behavior was registered for any of the addresses bound by delegate service.;public boolean addNodeConnectedBehavior(TransportService transportService, StubbableConnectionManager.NodeConnectedBehavior behavior) {_        boolean noRegistered = true__        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            noRegistered &= addNodeConnectedBehavior(transportAddress, behavior)__        }_        return noRegistered__    };adds,a,node,connected,behavior,that,is,used,for,the,given,delegate,service,return,code,true,if,no,other,node,connected,behavior,was,registered,for,any,of,the,addresses,bound,by,delegate,service;public,boolean,add,node,connected,behavior,transport,service,transport,service,stubbable,connection,manager,node,connected,behavior,behavior,boolean,no,registered,true,for,transport,address,transport,address,extract,transport,addresses,transport,service,no,registered,add,node,connected,behavior,transport,address,behavior,return,no,registered
MockTransportService -> public boolean addNodeConnectedBehavior(TransportService transportService, StubbableConnectionManager.NodeConnectedBehavior behavior);1544206631;Adds a node connected behavior that is used for the given delegate service.__@return {@code true} if no other node connected behavior was registered for any of the addresses bound by delegate service.;public boolean addNodeConnectedBehavior(TransportService transportService, StubbableConnectionManager.NodeConnectedBehavior behavior) {_        boolean noRegistered = true__        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            noRegistered &= addNodeConnectedBehavior(transportAddress, behavior)__        }_        return noRegistered__    };adds,a,node,connected,behavior,that,is,used,for,the,given,delegate,service,return,code,true,if,no,other,node,connected,behavior,was,registered,for,any,of,the,addresses,bound,by,delegate,service;public,boolean,add,node,connected,behavior,transport,service,transport,service,stubbable,connection,manager,node,connected,behavior,behavior,boolean,no,registered,true,for,transport,address,transport,address,extract,transport,addresses,transport,service,no,registered,add,node,connected,behavior,transport,address,behavior,return,no,registered
MockTransportService -> public boolean addNodeConnectedBehavior(TransportService transportService, StubbableConnectionManager.NodeConnectedBehavior behavior);1544554541;Adds a node connected behavior that is used for the given delegate service.__@return {@code true} if no other node connected behavior was registered for any of the addresses bound by delegate service.;public boolean addNodeConnectedBehavior(TransportService transportService, StubbableConnectionManager.NodeConnectedBehavior behavior) {_        boolean noRegistered = true__        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            noRegistered &= addNodeConnectedBehavior(transportAddress, behavior)__        }_        return noRegistered__    };adds,a,node,connected,behavior,that,is,used,for,the,given,delegate,service,return,code,true,if,no,other,node,connected,behavior,was,registered,for,any,of,the,addresses,bound,by,delegate,service;public,boolean,add,node,connected,behavior,transport,service,transport,service,stubbable,connection,manager,node,connected,behavior,behavior,boolean,no,registered,true,for,transport,address,transport,address,extract,transport,addresses,transport,service,no,registered,add,node,connected,behavior,transport,address,behavior,return,no,registered
MockTransportService -> public boolean addNodeConnectedBehavior(TransportService transportService, StubbableConnectionManager.NodeConnectedBehavior behavior);1544823664;Adds a node connected behavior that is used for the given delegate service.__@return {@code true} if no other node connected behavior was registered for any of the addresses bound by delegate service.;public boolean addNodeConnectedBehavior(TransportService transportService, StubbableConnectionManager.NodeConnectedBehavior behavior) {_        boolean noRegistered = true__        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            noRegistered &= addNodeConnectedBehavior(transportAddress, behavior)__        }_        return noRegistered__    };adds,a,node,connected,behavior,that,is,used,for,the,given,delegate,service,return,code,true,if,no,other,node,connected,behavior,was,registered,for,any,of,the,addresses,bound,by,delegate,service;public,boolean,add,node,connected,behavior,transport,service,transport,service,stubbable,connection,manager,node,connected,behavior,behavior,boolean,no,registered,true,for,transport,address,transport,address,extract,transport,addresses,transport,service,no,registered,add,node,connected,behavior,transport,address,behavior,return,no,registered
MockTransportService -> public boolean addNodeConnectedBehavior(StubbableConnectionManager.NodeConnectedBehavior behavior);1534203100;Adds a node connected behavior that is the default node connected behavior.__@return {@code true} if no default node connected behavior was registered.;public boolean addNodeConnectedBehavior(StubbableConnectionManager.NodeConnectedBehavior behavior) {_        return connectionManager().setDefaultNodeConnectedBehavior(behavior)__    };adds,a,node,connected,behavior,that,is,the,default,node,connected,behavior,return,code,true,if,no,default,node,connected,behavior,was,registered;public,boolean,add,node,connected,behavior,stubbable,connection,manager,node,connected,behavior,behavior,return,connection,manager,set,default,node,connected,behavior,behavior
MockTransportService -> public boolean addNodeConnectedBehavior(StubbableConnectionManager.NodeConnectedBehavior behavior);1534362961;Adds a node connected behavior that is the default node connected behavior.__@return {@code true} if no default node connected behavior was registered.;public boolean addNodeConnectedBehavior(StubbableConnectionManager.NodeConnectedBehavior behavior) {_        return connectionManager().setDefaultNodeConnectedBehavior(behavior)__    };adds,a,node,connected,behavior,that,is,the,default,node,connected,behavior,return,code,true,if,no,default,node,connected,behavior,was,registered;public,boolean,add,node,connected,behavior,stubbable,connection,manager,node,connected,behavior,behavior,return,connection,manager,set,default,node,connected,behavior,behavior
MockTransportService -> public boolean addNodeConnectedBehavior(StubbableConnectionManager.NodeConnectedBehavior behavior);1535383145;Adds a node connected behavior that is the default node connected behavior.__@return {@code true} if no default node connected behavior was registered.;public boolean addNodeConnectedBehavior(StubbableConnectionManager.NodeConnectedBehavior behavior) {_        return connectionManager().setDefaultNodeConnectedBehavior(behavior)__    };adds,a,node,connected,behavior,that,is,the,default,node,connected,behavior,return,code,true,if,no,default,node,connected,behavior,was,registered;public,boolean,add,node,connected,behavior,stubbable,connection,manager,node,connected,behavior,behavior,return,connection,manager,set,default,node,connected,behavior,behavior
MockTransportService -> public boolean addNodeConnectedBehavior(StubbableConnectionManager.NodeConnectedBehavior behavior);1541092382;Adds a node connected behavior that is the default node connected behavior.__@return {@code true} if no default node connected behavior was registered.;public boolean addNodeConnectedBehavior(StubbableConnectionManager.NodeConnectedBehavior behavior) {_        return connectionManager().setDefaultNodeConnectedBehavior(behavior)__    };adds,a,node,connected,behavior,that,is,the,default,node,connected,behavior,return,code,true,if,no,default,node,connected,behavior,was,registered;public,boolean,add,node,connected,behavior,stubbable,connection,manager,node,connected,behavior,behavior,return,connection,manager,set,default,node,connected,behavior,behavior
MockTransportService -> public boolean addNodeConnectedBehavior(StubbableConnectionManager.NodeConnectedBehavior behavior);1542270280;Adds a node connected behavior that is the default node connected behavior.__@return {@code true} if no default node connected behavior was registered.;public boolean addNodeConnectedBehavior(StubbableConnectionManager.NodeConnectedBehavior behavior) {_        return connectionManager().setDefaultNodeConnectedBehavior(behavior)__    };adds,a,node,connected,behavior,that,is,the,default,node,connected,behavior,return,code,true,if,no,default,node,connected,behavior,was,registered;public,boolean,add,node,connected,behavior,stubbable,connection,manager,node,connected,behavior,behavior,return,connection,manager,set,default,node,connected,behavior,behavior
MockTransportService -> public boolean addNodeConnectedBehavior(StubbableConnectionManager.NodeConnectedBehavior behavior);1542646292;Adds a node connected behavior that is the default node connected behavior.__@return {@code true} if no default node connected behavior was registered.;public boolean addNodeConnectedBehavior(StubbableConnectionManager.NodeConnectedBehavior behavior) {_        return connectionManager().setDefaultNodeConnectedBehavior(behavior)__    };adds,a,node,connected,behavior,that,is,the,default,node,connected,behavior,return,code,true,if,no,default,node,connected,behavior,was,registered;public,boolean,add,node,connected,behavior,stubbable,connection,manager,node,connected,behavior,behavior,return,connection,manager,set,default,node,connected,behavior,behavior
MockTransportService -> public boolean addNodeConnectedBehavior(StubbableConnectionManager.NodeConnectedBehavior behavior);1543602642;Adds a node connected behavior that is the default node connected behavior.__@return {@code true} if no default node connected behavior was registered.;public boolean addNodeConnectedBehavior(StubbableConnectionManager.NodeConnectedBehavior behavior) {_        return connectionManager().setDefaultNodeConnectedBehavior(behavior)__    };adds,a,node,connected,behavior,that,is,the,default,node,connected,behavior,return,code,true,if,no,default,node,connected,behavior,was,registered;public,boolean,add,node,connected,behavior,stubbable,connection,manager,node,connected,behavior,behavior,return,connection,manager,set,default,node,connected,behavior,behavior
MockTransportService -> public boolean addNodeConnectedBehavior(StubbableConnectionManager.NodeConnectedBehavior behavior);1544206631;Adds a node connected behavior that is the default node connected behavior.__@return {@code true} if no default node connected behavior was registered.;public boolean addNodeConnectedBehavior(StubbableConnectionManager.NodeConnectedBehavior behavior) {_        return connectionManager().setDefaultNodeConnectedBehavior(behavior)__    };adds,a,node,connected,behavior,that,is,the,default,node,connected,behavior,return,code,true,if,no,default,node,connected,behavior,was,registered;public,boolean,add,node,connected,behavior,stubbable,connection,manager,node,connected,behavior,behavior,return,connection,manager,set,default,node,connected,behavior,behavior
MockTransportService -> public boolean addNodeConnectedBehavior(StubbableConnectionManager.NodeConnectedBehavior behavior);1544554541;Adds a node connected behavior that is the default node connected behavior.__@return {@code true} if no default node connected behavior was registered.;public boolean addNodeConnectedBehavior(StubbableConnectionManager.NodeConnectedBehavior behavior) {_        return connectionManager().setDefaultNodeConnectedBehavior(behavior)__    };adds,a,node,connected,behavior,that,is,the,default,node,connected,behavior,return,code,true,if,no,default,node,connected,behavior,was,registered;public,boolean,add,node,connected,behavior,stubbable,connection,manager,node,connected,behavior,behavior,return,connection,manager,set,default,node,connected,behavior,behavior
MockTransportService -> public boolean addNodeConnectedBehavior(StubbableConnectionManager.NodeConnectedBehavior behavior);1544823664;Adds a node connected behavior that is the default node connected behavior.__@return {@code true} if no default node connected behavior was registered.;public boolean addNodeConnectedBehavior(StubbableConnectionManager.NodeConnectedBehavior behavior) {_        return connectionManager().setDefaultNodeConnectedBehavior(behavior)__    };adds,a,node,connected,behavior,that,is,the,default,node,connected,behavior,return,code,true,if,no,default,node,connected,behavior,was,registered;public,boolean,add,node,connected,behavior,stubbable,connection,manager,node,connected,behavior,behavior,return,connection,manager,set,default,node,connected,behavior,behavior
MockTransportService -> public boolean addNodeConnectedBehavior(StubbableConnectionManager.NodeConnectedBehavior behavior);1548770891;Adds a node connected behavior that is the default node connected behavior.__@return {@code true} if no default node connected behavior was registered.;public boolean addNodeConnectedBehavior(StubbableConnectionManager.NodeConnectedBehavior behavior) {_        return connectionManager().setDefaultNodeConnectedBehavior(behavior)__    };adds,a,node,connected,behavior,that,is,the,default,node,connected,behavior,return,code,true,if,no,default,node,connected,behavior,was,registered;public,boolean,add,node,connected,behavior,stubbable,connection,manager,node,connected,behavior,behavior,return,connection,manager,set,default,node,connected,behavior,behavior
MockTransportService -> public boolean addNodeConnectedBehavior(StubbableConnectionManager.NodeConnectedBehavior behavior);1548790146;Adds a node connected behavior that is the default node connected behavior.__@return {@code true} if no default node connected behavior was registered.;public boolean addNodeConnectedBehavior(StubbableConnectionManager.NodeConnectedBehavior behavior) {_        return connectionManager().setDefaultNodeConnectedBehavior(behavior)__    };adds,a,node,connected,behavior,that,is,the,default,node,connected,behavior,return,code,true,if,no,default,node,connected,behavior,was,registered;public,boolean,add,node,connected,behavior,stubbable,connection,manager,node,connected,behavior,behavior,return,connection,manager,set,default,node,connected,behavior,behavior
MockTransportService -> public boolean addNodeConnectedBehavior(StubbableConnectionManager.NodeConnectedBehavior behavior);1548953505;Adds a node connected behavior that is the default node connected behavior.__@return {@code true} if no default node connected behavior was registered.;public boolean addNodeConnectedBehavior(StubbableConnectionManager.NodeConnectedBehavior behavior) {_        return connectionManager().setDefaultNodeConnectedBehavior(behavior)__    };adds,a,node,connected,behavior,that,is,the,default,node,connected,behavior,return,code,true,if,no,default,node,connected,behavior,was,registered;public,boolean,add,node,connected,behavior,stubbable,connection,manager,node,connected,behavior,behavior,return,connection,manager,set,default,node,connected,behavior,behavior
MockTransportService -> public boolean addNodeConnectedBehavior(StubbableConnectionManager.NodeConnectedBehavior behavior);1550601141;Adds a node connected behavior that is the default node connected behavior.__@return {@code true} if no default node connected behavior was registered.;public boolean addNodeConnectedBehavior(StubbableConnectionManager.NodeConnectedBehavior behavior) {_        return connectionManager().setDefaultNodeConnectedBehavior(behavior)__    };adds,a,node,connected,behavior,that,is,the,default,node,connected,behavior,return,code,true,if,no,default,node,connected,behavior,was,registered;public,boolean,add,node,connected,behavior,stubbable,connection,manager,node,connected,behavior,behavior,return,connection,manager,set,default,node,connected,behavior,behavior
MockTransportService -> public boolean addNodeConnectedBehavior(StubbableConnectionManager.NodeConnectedBehavior behavior);1551176390;Adds a node connected behavior that is the default node connected behavior.__@return {@code true} if no default node connected behavior was registered.;public boolean addNodeConnectedBehavior(StubbableConnectionManager.NodeConnectedBehavior behavior) {_        return connectionManager().setDefaultNodeConnectedBehavior(behavior)__    };adds,a,node,connected,behavior,that,is,the,default,node,connected,behavior,return,code,true,if,no,default,node,connected,behavior,was,registered;public,boolean,add,node,connected,behavior,stubbable,connection,manager,node,connected,behavior,behavior,return,connection,manager,set,default,node,connected,behavior,behavior
MockTransportService -> public void addFailToSendNoConnectRule(TransportAddress transportAddress, final String... blockedActions);1524684173;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportAddress transportAddress, final String... blockedActions) {_        addFailToSendNoConnectRule(transportAddress, new HashSet<>(Arrays.asList(blockedActions)))__    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,address,transport,address,final,string,blocked,actions,add,fail,to,send,no,connect,rule,transport,address,new,hash,set,arrays,as,list,blocked,actions
MockTransportService -> public void addFailToSendNoConnectRule(TransportAddress transportAddress, final String... blockedActions);1525162917;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportAddress transportAddress, final String... blockedActions) {_        addFailToSendNoConnectRule(transportAddress, new HashSet<>(Arrays.asList(blockedActions)))__    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,address,transport,address,final,string,blocked,actions,add,fail,to,send,no,connect,rule,transport,address,new,hash,set,arrays,as,list,blocked,actions
MockTransportService -> public void addFailToSendNoConnectRule(TransportAddress transportAddress, final String... blockedActions);1531179852;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportAddress transportAddress, final String... blockedActions) {_        addFailToSendNoConnectRule(transportAddress, new HashSet<>(Arrays.asList(blockedActions)))__    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,address,transport,address,final,string,blocked,actions,add,fail,to,send,no,connect,rule,transport,address,new,hash,set,arrays,as,list,blocked,actions
MockTransportService -> public void addFailToSendNoConnectRule(TransportAddress transportAddress, final String... blockedActions);1534203100;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportAddress transportAddress, final String... blockedActions) {_        addFailToSendNoConnectRule(transportAddress, new HashSet<>(Arrays.asList(blockedActions)))__    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,address,transport,address,final,string,blocked,actions,add,fail,to,send,no,connect,rule,transport,address,new,hash,set,arrays,as,list,blocked,actions
MockTransportService -> public void addFailToSendNoConnectRule(TransportAddress transportAddress, final String... blockedActions);1534362961;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportAddress transportAddress, final String... blockedActions) {_        addFailToSendNoConnectRule(transportAddress, new HashSet<>(Arrays.asList(blockedActions)))__    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,address,transport,address,final,string,blocked,actions,add,fail,to,send,no,connect,rule,transport,address,new,hash,set,arrays,as,list,blocked,actions
MockTransportService -> public void addFailToSendNoConnectRule(TransportAddress transportAddress, final String... blockedActions);1535383145;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportAddress transportAddress, final String... blockedActions) {_        addFailToSendNoConnectRule(transportAddress, new HashSet<>(Arrays.asList(blockedActions)))__    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,address,transport,address,final,string,blocked,actions,add,fail,to,send,no,connect,rule,transport,address,new,hash,set,arrays,as,list,blocked,actions
MockTransportService -> public void addFailToSendNoConnectRule(TransportAddress transportAddress, final String... blockedActions);1541092382;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportAddress transportAddress, final String... blockedActions) {_        addFailToSendNoConnectRule(transportAddress, new HashSet<>(Arrays.asList(blockedActions)))__    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,address,transport,address,final,string,blocked,actions,add,fail,to,send,no,connect,rule,transport,address,new,hash,set,arrays,as,list,blocked,actions
MockTransportService -> public void addFailToSendNoConnectRule(TransportAddress transportAddress, final String... blockedActions);1542270280;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportAddress transportAddress, final String... blockedActions) {_        addFailToSendNoConnectRule(transportAddress, new HashSet<>(Arrays.asList(blockedActions)))__    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,address,transport,address,final,string,blocked,actions,add,fail,to,send,no,connect,rule,transport,address,new,hash,set,arrays,as,list,blocked,actions
MockTransportService -> public void addFailToSendNoConnectRule(TransportAddress transportAddress, final String... blockedActions);1542646292;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportAddress transportAddress, final String... blockedActions) {_        addFailToSendNoConnectRule(transportAddress, new HashSet<>(Arrays.asList(blockedActions)))__    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,address,transport,address,final,string,blocked,actions,add,fail,to,send,no,connect,rule,transport,address,new,hash,set,arrays,as,list,blocked,actions
MockTransportService -> public void addFailToSendNoConnectRule(TransportAddress transportAddress, final String... blockedActions);1543602642;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportAddress transportAddress, final String... blockedActions) {_        addFailToSendNoConnectRule(transportAddress, new HashSet<>(Arrays.asList(blockedActions)))__    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,address,transport,address,final,string,blocked,actions,add,fail,to,send,no,connect,rule,transport,address,new,hash,set,arrays,as,list,blocked,actions
MockTransportService -> public void addFailToSendNoConnectRule(TransportAddress transportAddress, final String... blockedActions);1544206631;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportAddress transportAddress, final String... blockedActions) {_        addFailToSendNoConnectRule(transportAddress, new HashSet<>(Arrays.asList(blockedActions)))__    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,address,transport,address,final,string,blocked,actions,add,fail,to,send,no,connect,rule,transport,address,new,hash,set,arrays,as,list,blocked,actions
MockTransportService -> public void addFailToSendNoConnectRule(TransportAddress transportAddress, final String... blockedActions);1544554541;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportAddress transportAddress, final String... blockedActions) {_        addFailToSendNoConnectRule(transportAddress, new HashSet<>(Arrays.asList(blockedActions)))__    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,address,transport,address,final,string,blocked,actions,add,fail,to,send,no,connect,rule,transport,address,new,hash,set,arrays,as,list,blocked,actions
MockTransportService -> public void addFailToSendNoConnectRule(TransportAddress transportAddress, final String... blockedActions);1544823664;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportAddress transportAddress, final String... blockedActions) {_        addFailToSendNoConnectRule(transportAddress, new HashSet<>(Arrays.asList(blockedActions)))__    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,address,transport,address,final,string,blocked,actions,add,fail,to,send,no,connect,rule,transport,address,new,hash,set,arrays,as,list,blocked,actions
MockTransportService -> public boolean addSendBehavior(StubbableTransport.SendRequestBehavior behavior);1534203100;Adds a send behavior that is the default send behavior.__@return {@code true} if no default send behavior was registered;public boolean addSendBehavior(StubbableTransport.SendRequestBehavior behavior) {_        return transport().setDefaultSendBehavior(behavior)__    };adds,a,send,behavior,that,is,the,default,send,behavior,return,code,true,if,no,default,send,behavior,was,registered;public,boolean,add,send,behavior,stubbable,transport,send,request,behavior,behavior,return,transport,set,default,send,behavior,behavior
MockTransportService -> public boolean addSendBehavior(StubbableTransport.SendRequestBehavior behavior);1534362961;Adds a send behavior that is the default send behavior.__@return {@code true} if no default send behavior was registered;public boolean addSendBehavior(StubbableTransport.SendRequestBehavior behavior) {_        return transport().setDefaultSendBehavior(behavior)__    };adds,a,send,behavior,that,is,the,default,send,behavior,return,code,true,if,no,default,send,behavior,was,registered;public,boolean,add,send,behavior,stubbable,transport,send,request,behavior,behavior,return,transport,set,default,send,behavior,behavior
MockTransportService -> public boolean addSendBehavior(StubbableTransport.SendRequestBehavior behavior);1535383145;Adds a send behavior that is the default send behavior.__@return {@code true} if no default send behavior was registered;public boolean addSendBehavior(StubbableTransport.SendRequestBehavior behavior) {_        return transport().setDefaultSendBehavior(behavior)__    };adds,a,send,behavior,that,is,the,default,send,behavior,return,code,true,if,no,default,send,behavior,was,registered;public,boolean,add,send,behavior,stubbable,transport,send,request,behavior,behavior,return,transport,set,default,send,behavior,behavior
MockTransportService -> public boolean addSendBehavior(StubbableTransport.SendRequestBehavior behavior);1541092382;Adds a send behavior that is the default send behavior.__@return {@code true} if no default send behavior was registered;public boolean addSendBehavior(StubbableTransport.SendRequestBehavior behavior) {_        return transport().setDefaultSendBehavior(behavior)__    };adds,a,send,behavior,that,is,the,default,send,behavior,return,code,true,if,no,default,send,behavior,was,registered;public,boolean,add,send,behavior,stubbable,transport,send,request,behavior,behavior,return,transport,set,default,send,behavior,behavior
MockTransportService -> public boolean addSendBehavior(StubbableTransport.SendRequestBehavior behavior);1542270280;Adds a send behavior that is the default send behavior.__@return {@code true} if no default send behavior was registered;public boolean addSendBehavior(StubbableTransport.SendRequestBehavior behavior) {_        return transport().setDefaultSendBehavior(behavior)__    };adds,a,send,behavior,that,is,the,default,send,behavior,return,code,true,if,no,default,send,behavior,was,registered;public,boolean,add,send,behavior,stubbable,transport,send,request,behavior,behavior,return,transport,set,default,send,behavior,behavior
MockTransportService -> public boolean addSendBehavior(StubbableTransport.SendRequestBehavior behavior);1542646292;Adds a send behavior that is the default send behavior.__@return {@code true} if no default send behavior was registered;public boolean addSendBehavior(StubbableTransport.SendRequestBehavior behavior) {_        return transport().setDefaultSendBehavior(behavior)__    };adds,a,send,behavior,that,is,the,default,send,behavior,return,code,true,if,no,default,send,behavior,was,registered;public,boolean,add,send,behavior,stubbable,transport,send,request,behavior,behavior,return,transport,set,default,send,behavior,behavior
MockTransportService -> public boolean addSendBehavior(StubbableTransport.SendRequestBehavior behavior);1543602642;Adds a send behavior that is the default send behavior.__@return {@code true} if no default send behavior was registered;public boolean addSendBehavior(StubbableTransport.SendRequestBehavior behavior) {_        return transport().setDefaultSendBehavior(behavior)__    };adds,a,send,behavior,that,is,the,default,send,behavior,return,code,true,if,no,default,send,behavior,was,registered;public,boolean,add,send,behavior,stubbable,transport,send,request,behavior,behavior,return,transport,set,default,send,behavior,behavior
MockTransportService -> public boolean addSendBehavior(StubbableTransport.SendRequestBehavior behavior);1544206631;Adds a send behavior that is the default send behavior.__@return {@code true} if no default send behavior was registered;public boolean addSendBehavior(StubbableTransport.SendRequestBehavior behavior) {_        return transport().setDefaultSendBehavior(behavior)__    };adds,a,send,behavior,that,is,the,default,send,behavior,return,code,true,if,no,default,send,behavior,was,registered;public,boolean,add,send,behavior,stubbable,transport,send,request,behavior,behavior,return,transport,set,default,send,behavior,behavior
MockTransportService -> public boolean addSendBehavior(StubbableTransport.SendRequestBehavior behavior);1544554541;Adds a send behavior that is the default send behavior.__@return {@code true} if no default send behavior was registered;public boolean addSendBehavior(StubbableTransport.SendRequestBehavior behavior) {_        return transport().setDefaultSendBehavior(behavior)__    };adds,a,send,behavior,that,is,the,default,send,behavior,return,code,true,if,no,default,send,behavior,was,registered;public,boolean,add,send,behavior,stubbable,transport,send,request,behavior,behavior,return,transport,set,default,send,behavior,behavior
MockTransportService -> public boolean addSendBehavior(StubbableTransport.SendRequestBehavior behavior);1544823664;Adds a send behavior that is the default send behavior.__@return {@code true} if no default send behavior was registered;public boolean addSendBehavior(StubbableTransport.SendRequestBehavior behavior) {_        return transport().setDefaultSendBehavior(behavior)__    };adds,a,send,behavior,that,is,the,default,send,behavior,return,code,true,if,no,default,send,behavior,was,registered;public,boolean,add,send,behavior,stubbable,transport,send,request,behavior,behavior,return,transport,set,default,send,behavior,behavior
MockTransportService -> public boolean addSendBehavior(StubbableTransport.SendRequestBehavior behavior);1548790146;Adds a send behavior that is the default send behavior.__@return {@code true} if no default send behavior was registered;public boolean addSendBehavior(StubbableTransport.SendRequestBehavior behavior) {_        return transport().setDefaultSendBehavior(behavior)__    };adds,a,send,behavior,that,is,the,default,send,behavior,return,code,true,if,no,default,send,behavior,was,registered;public,boolean,add,send,behavior,stubbable,transport,send,request,behavior,behavior,return,transport,set,default,send,behavior,behavior
MockTransportService -> public boolean addSendBehavior(StubbableTransport.SendRequestBehavior behavior);1548953505;Adds a send behavior that is the default send behavior.__@return {@code true} if no default send behavior was registered;public boolean addSendBehavior(StubbableTransport.SendRequestBehavior behavior) {_        return transport().setDefaultSendBehavior(behavior)__    };adds,a,send,behavior,that,is,the,default,send,behavior,return,code,true,if,no,default,send,behavior,was,registered;public,boolean,add,send,behavior,stubbable,transport,send,request,behavior,behavior,return,transport,set,default,send,behavior,behavior
MockTransportService -> public boolean addSendBehavior(StubbableTransport.SendRequestBehavior behavior);1550601141;Adds a send behavior that is the default send behavior.__@return {@code true} if no default send behavior was registered;public boolean addSendBehavior(StubbableTransport.SendRequestBehavior behavior) {_        return transport().setDefaultSendBehavior(behavior)__    };adds,a,send,behavior,that,is,the,default,send,behavior,return,code,true,if,no,default,send,behavior,was,registered;public,boolean,add,send,behavior,stubbable,transport,send,request,behavior,behavior,return,transport,set,default,send,behavior,behavior
MockTransportService -> public boolean addSendBehavior(StubbableTransport.SendRequestBehavior behavior);1551176390;Adds a send behavior that is the default send behavior.__@return {@code true} if no default send behavior was registered;public boolean addSendBehavior(StubbableTransport.SendRequestBehavior behavior) {_        return transport().setDefaultSendBehavior(behavior)__    };adds,a,send,behavior,that,is,the,default,send,behavior,return,code,true,if,no,default,send,behavior,was,registered;public,boolean,add,send,behavior,stubbable,transport,send,request,behavior,behavior,return,transport,set,default,send,behavior,behavior
MockTransportService -> public boolean addGetConnectionBehavior(TransportAddress transportAddress, StubbableConnectionManager.GetConnectionBehavior behavior);1534203100;Adds a get connection behavior that is used for communication with the given delegate address.__@return {@code true} if no other get connection behavior was registered for this address before.;public boolean addGetConnectionBehavior(TransportAddress transportAddress, StubbableConnectionManager.GetConnectionBehavior behavior) {_        return connectionManager().addConnectBehavior(transportAddress, behavior)__    };adds,a,get,connection,behavior,that,is,used,for,communication,with,the,given,delegate,address,return,code,true,if,no,other,get,connection,behavior,was,registered,for,this,address,before;public,boolean,add,get,connection,behavior,transport,address,transport,address,stubbable,connection,manager,get,connection,behavior,behavior,return,connection,manager,add,connect,behavior,transport,address,behavior
MockTransportService -> public boolean addGetConnectionBehavior(TransportAddress transportAddress, StubbableConnectionManager.GetConnectionBehavior behavior);1534362961;Adds a get connection behavior that is used for communication with the given delegate address.__@return {@code true} if no other get connection behavior was registered for this address before.;public boolean addGetConnectionBehavior(TransportAddress transportAddress, StubbableConnectionManager.GetConnectionBehavior behavior) {_        return connectionManager().addConnectBehavior(transportAddress, behavior)__    };adds,a,get,connection,behavior,that,is,used,for,communication,with,the,given,delegate,address,return,code,true,if,no,other,get,connection,behavior,was,registered,for,this,address,before;public,boolean,add,get,connection,behavior,transport,address,transport,address,stubbable,connection,manager,get,connection,behavior,behavior,return,connection,manager,add,connect,behavior,transport,address,behavior
MockTransportService -> public boolean addGetConnectionBehavior(TransportAddress transportAddress, StubbableConnectionManager.GetConnectionBehavior behavior);1535383145;Adds a get connection behavior that is used for communication with the given delegate address.__@return {@code true} if no other get connection behavior was registered for this address before.;public boolean addGetConnectionBehavior(TransportAddress transportAddress, StubbableConnectionManager.GetConnectionBehavior behavior) {_        return connectionManager().addConnectBehavior(transportAddress, behavior)__    };adds,a,get,connection,behavior,that,is,used,for,communication,with,the,given,delegate,address,return,code,true,if,no,other,get,connection,behavior,was,registered,for,this,address,before;public,boolean,add,get,connection,behavior,transport,address,transport,address,stubbable,connection,manager,get,connection,behavior,behavior,return,connection,manager,add,connect,behavior,transport,address,behavior
MockTransportService -> public boolean addGetConnectionBehavior(TransportAddress transportAddress, StubbableConnectionManager.GetConnectionBehavior behavior);1541092382;Adds a get connection behavior that is used for communication with the given delegate address.__@return {@code true} if no other get connection behavior was registered for this address before.;public boolean addGetConnectionBehavior(TransportAddress transportAddress, StubbableConnectionManager.GetConnectionBehavior behavior) {_        return connectionManager().addConnectBehavior(transportAddress, behavior)__    };adds,a,get,connection,behavior,that,is,used,for,communication,with,the,given,delegate,address,return,code,true,if,no,other,get,connection,behavior,was,registered,for,this,address,before;public,boolean,add,get,connection,behavior,transport,address,transport,address,stubbable,connection,manager,get,connection,behavior,behavior,return,connection,manager,add,connect,behavior,transport,address,behavior
MockTransportService -> public boolean addGetConnectionBehavior(TransportAddress transportAddress, StubbableConnectionManager.GetConnectionBehavior behavior);1542270280;Adds a get connection behavior that is used for communication with the given delegate address.__@return {@code true} if no other get connection behavior was registered for this address before.;public boolean addGetConnectionBehavior(TransportAddress transportAddress, StubbableConnectionManager.GetConnectionBehavior behavior) {_        return connectionManager().addConnectBehavior(transportAddress, behavior)__    };adds,a,get,connection,behavior,that,is,used,for,communication,with,the,given,delegate,address,return,code,true,if,no,other,get,connection,behavior,was,registered,for,this,address,before;public,boolean,add,get,connection,behavior,transport,address,transport,address,stubbable,connection,manager,get,connection,behavior,behavior,return,connection,manager,add,connect,behavior,transport,address,behavior
MockTransportService -> public boolean addGetConnectionBehavior(TransportAddress transportAddress, StubbableConnectionManager.GetConnectionBehavior behavior);1542646292;Adds a get connection behavior that is used for communication with the given delegate address.__@return {@code true} if no other get connection behavior was registered for this address before.;public boolean addGetConnectionBehavior(TransportAddress transportAddress, StubbableConnectionManager.GetConnectionBehavior behavior) {_        return connectionManager().addConnectBehavior(transportAddress, behavior)__    };adds,a,get,connection,behavior,that,is,used,for,communication,with,the,given,delegate,address,return,code,true,if,no,other,get,connection,behavior,was,registered,for,this,address,before;public,boolean,add,get,connection,behavior,transport,address,transport,address,stubbable,connection,manager,get,connection,behavior,behavior,return,connection,manager,add,connect,behavior,transport,address,behavior
MockTransportService -> public boolean addGetConnectionBehavior(TransportAddress transportAddress, StubbableConnectionManager.GetConnectionBehavior behavior);1543602642;Adds a get connection behavior that is used for communication with the given delegate address.__@return {@code true} if no other get connection behavior was registered for this address before.;public boolean addGetConnectionBehavior(TransportAddress transportAddress, StubbableConnectionManager.GetConnectionBehavior behavior) {_        return connectionManager().addConnectBehavior(transportAddress, behavior)__    };adds,a,get,connection,behavior,that,is,used,for,communication,with,the,given,delegate,address,return,code,true,if,no,other,get,connection,behavior,was,registered,for,this,address,before;public,boolean,add,get,connection,behavior,transport,address,transport,address,stubbable,connection,manager,get,connection,behavior,behavior,return,connection,manager,add,connect,behavior,transport,address,behavior
MockTransportService -> public boolean addGetConnectionBehavior(TransportAddress transportAddress, StubbableConnectionManager.GetConnectionBehavior behavior);1544206631;Adds a get connection behavior that is used for communication with the given delegate address.__@return {@code true} if no other get connection behavior was registered for this address before.;public boolean addGetConnectionBehavior(TransportAddress transportAddress, StubbableConnectionManager.GetConnectionBehavior behavior) {_        return connectionManager().addConnectBehavior(transportAddress, behavior)__    };adds,a,get,connection,behavior,that,is,used,for,communication,with,the,given,delegate,address,return,code,true,if,no,other,get,connection,behavior,was,registered,for,this,address,before;public,boolean,add,get,connection,behavior,transport,address,transport,address,stubbable,connection,manager,get,connection,behavior,behavior,return,connection,manager,add,connect,behavior,transport,address,behavior
MockTransportService -> public boolean addGetConnectionBehavior(TransportAddress transportAddress, StubbableConnectionManager.GetConnectionBehavior behavior);1544554541;Adds a get connection behavior that is used for communication with the given delegate address.__@return {@code true} if no other get connection behavior was registered for this address before.;public boolean addGetConnectionBehavior(TransportAddress transportAddress, StubbableConnectionManager.GetConnectionBehavior behavior) {_        return connectionManager().addConnectBehavior(transportAddress, behavior)__    };adds,a,get,connection,behavior,that,is,used,for,communication,with,the,given,delegate,address,return,code,true,if,no,other,get,connection,behavior,was,registered,for,this,address,before;public,boolean,add,get,connection,behavior,transport,address,transport,address,stubbable,connection,manager,get,connection,behavior,behavior,return,connection,manager,add,connect,behavior,transport,address,behavior
MockTransportService -> public boolean addGetConnectionBehavior(TransportAddress transportAddress, StubbableConnectionManager.GetConnectionBehavior behavior);1544823664;Adds a get connection behavior that is used for communication with the given delegate address.__@return {@code true} if no other get connection behavior was registered for this address before.;public boolean addGetConnectionBehavior(TransportAddress transportAddress, StubbableConnectionManager.GetConnectionBehavior behavior) {_        return connectionManager().addConnectBehavior(transportAddress, behavior)__    };adds,a,get,connection,behavior,that,is,used,for,communication,with,the,given,delegate,address,return,code,true,if,no,other,get,connection,behavior,was,registered,for,this,address,before;public,boolean,add,get,connection,behavior,transport,address,transport,address,stubbable,connection,manager,get,connection,behavior,behavior,return,connection,manager,add,connect,behavior,transport,address,behavior
MockTransportService -> public boolean addGetConnectionBehavior(TransportAddress transportAddress, StubbableConnectionManager.GetConnectionBehavior behavior);1548770891;Adds a get connection behavior that is used for communication with the given delegate address.__@return {@code true} if no other get connection behavior was registered for this address before.;public boolean addGetConnectionBehavior(TransportAddress transportAddress, StubbableConnectionManager.GetConnectionBehavior behavior) {_        return connectionManager().addConnectBehavior(transportAddress, behavior)__    };adds,a,get,connection,behavior,that,is,used,for,communication,with,the,given,delegate,address,return,code,true,if,no,other,get,connection,behavior,was,registered,for,this,address,before;public,boolean,add,get,connection,behavior,transport,address,transport,address,stubbable,connection,manager,get,connection,behavior,behavior,return,connection,manager,add,connect,behavior,transport,address,behavior
MockTransportService -> public boolean addGetConnectionBehavior(TransportAddress transportAddress, StubbableConnectionManager.GetConnectionBehavior behavior);1548790146;Adds a get connection behavior that is used for communication with the given delegate address.__@return {@code true} if no other get connection behavior was registered for this address before.;public boolean addGetConnectionBehavior(TransportAddress transportAddress, StubbableConnectionManager.GetConnectionBehavior behavior) {_        return connectionManager().addConnectBehavior(transportAddress, behavior)__    };adds,a,get,connection,behavior,that,is,used,for,communication,with,the,given,delegate,address,return,code,true,if,no,other,get,connection,behavior,was,registered,for,this,address,before;public,boolean,add,get,connection,behavior,transport,address,transport,address,stubbable,connection,manager,get,connection,behavior,behavior,return,connection,manager,add,connect,behavior,transport,address,behavior
MockTransportService -> public boolean addGetConnectionBehavior(TransportAddress transportAddress, StubbableConnectionManager.GetConnectionBehavior behavior);1548953505;Adds a get connection behavior that is used for communication with the given delegate address.__@return {@code true} if no other get connection behavior was registered for this address before.;public boolean addGetConnectionBehavior(TransportAddress transportAddress, StubbableConnectionManager.GetConnectionBehavior behavior) {_        return connectionManager().addConnectBehavior(transportAddress, behavior)__    };adds,a,get,connection,behavior,that,is,used,for,communication,with,the,given,delegate,address,return,code,true,if,no,other,get,connection,behavior,was,registered,for,this,address,before;public,boolean,add,get,connection,behavior,transport,address,transport,address,stubbable,connection,manager,get,connection,behavior,behavior,return,connection,manager,add,connect,behavior,transport,address,behavior
MockTransportService -> public boolean addGetConnectionBehavior(TransportAddress transportAddress, StubbableConnectionManager.GetConnectionBehavior behavior);1550601141;Adds a get connection behavior that is used for communication with the given delegate address.__@return {@code true} if no other get connection behavior was registered for this address before.;public boolean addGetConnectionBehavior(TransportAddress transportAddress, StubbableConnectionManager.GetConnectionBehavior behavior) {_        return connectionManager().addConnectBehavior(transportAddress, behavior)__    };adds,a,get,connection,behavior,that,is,used,for,communication,with,the,given,delegate,address,return,code,true,if,no,other,get,connection,behavior,was,registered,for,this,address,before;public,boolean,add,get,connection,behavior,transport,address,transport,address,stubbable,connection,manager,get,connection,behavior,behavior,return,connection,manager,add,connect,behavior,transport,address,behavior
MockTransportService -> public boolean addGetConnectionBehavior(TransportAddress transportAddress, StubbableConnectionManager.GetConnectionBehavior behavior);1551176390;Adds a get connection behavior that is used for communication with the given delegate address.__@return {@code true} if no other get connection behavior was registered for this address before.;public boolean addGetConnectionBehavior(TransportAddress transportAddress, StubbableConnectionManager.GetConnectionBehavior behavior) {_        return connectionManager().addConnectBehavior(transportAddress, behavior)__    };adds,a,get,connection,behavior,that,is,used,for,communication,with,the,given,delegate,address,return,code,true,if,no,other,get,connection,behavior,was,registered,for,this,address,before;public,boolean,add,get,connection,behavior,transport,address,transport,address,stubbable,connection,manager,get,connection,behavior,behavior,return,connection,manager,add,connect,behavior,transport,address,behavior
MockTransportService -> public boolean addSendBehavior(TransportService transportService, StubbableTransport.SendRequestBehavior sendBehavior);1534203100;Adds a new send behavior that is used for communication with the given delegate service.__@return {@code true} if no other send behavior was registered for any of the addresses bound by delegate service.;public boolean addSendBehavior(TransportService transportService, StubbableTransport.SendRequestBehavior sendBehavior) {_        boolean noRegistered = true__        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            noRegistered &= addSendBehavior(transportAddress, sendBehavior)__        }_        return noRegistered__    };adds,a,new,send,behavior,that,is,used,for,communication,with,the,given,delegate,service,return,code,true,if,no,other,send,behavior,was,registered,for,any,of,the,addresses,bound,by,delegate,service;public,boolean,add,send,behavior,transport,service,transport,service,stubbable,transport,send,request,behavior,send,behavior,boolean,no,registered,true,for,transport,address,transport,address,extract,transport,addresses,transport,service,no,registered,add,send,behavior,transport,address,send,behavior,return,no,registered
MockTransportService -> public boolean addSendBehavior(TransportService transportService, StubbableTransport.SendRequestBehavior sendBehavior);1534362961;Adds a new send behavior that is used for communication with the given delegate service.__@return {@code true} if no other send behavior was registered for any of the addresses bound by delegate service.;public boolean addSendBehavior(TransportService transportService, StubbableTransport.SendRequestBehavior sendBehavior) {_        boolean noRegistered = true__        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            noRegistered &= addSendBehavior(transportAddress, sendBehavior)__        }_        return noRegistered__    };adds,a,new,send,behavior,that,is,used,for,communication,with,the,given,delegate,service,return,code,true,if,no,other,send,behavior,was,registered,for,any,of,the,addresses,bound,by,delegate,service;public,boolean,add,send,behavior,transport,service,transport,service,stubbable,transport,send,request,behavior,send,behavior,boolean,no,registered,true,for,transport,address,transport,address,extract,transport,addresses,transport,service,no,registered,add,send,behavior,transport,address,send,behavior,return,no,registered
MockTransportService -> public boolean addSendBehavior(TransportService transportService, StubbableTransport.SendRequestBehavior sendBehavior);1535383145;Adds a new send behavior that is used for communication with the given delegate service.__@return {@code true} if no other send behavior was registered for any of the addresses bound by delegate service.;public boolean addSendBehavior(TransportService transportService, StubbableTransport.SendRequestBehavior sendBehavior) {_        boolean noRegistered = true__        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            noRegistered &= addSendBehavior(transportAddress, sendBehavior)__        }_        return noRegistered__    };adds,a,new,send,behavior,that,is,used,for,communication,with,the,given,delegate,service,return,code,true,if,no,other,send,behavior,was,registered,for,any,of,the,addresses,bound,by,delegate,service;public,boolean,add,send,behavior,transport,service,transport,service,stubbable,transport,send,request,behavior,send,behavior,boolean,no,registered,true,for,transport,address,transport,address,extract,transport,addresses,transport,service,no,registered,add,send,behavior,transport,address,send,behavior,return,no,registered
MockTransportService -> public boolean addSendBehavior(TransportService transportService, StubbableTransport.SendRequestBehavior sendBehavior);1541092382;Adds a new send behavior that is used for communication with the given delegate service.__@return {@code true} if no other send behavior was registered for any of the addresses bound by delegate service.;public boolean addSendBehavior(TransportService transportService, StubbableTransport.SendRequestBehavior sendBehavior) {_        boolean noRegistered = true__        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            noRegistered &= addSendBehavior(transportAddress, sendBehavior)__        }_        return noRegistered__    };adds,a,new,send,behavior,that,is,used,for,communication,with,the,given,delegate,service,return,code,true,if,no,other,send,behavior,was,registered,for,any,of,the,addresses,bound,by,delegate,service;public,boolean,add,send,behavior,transport,service,transport,service,stubbable,transport,send,request,behavior,send,behavior,boolean,no,registered,true,for,transport,address,transport,address,extract,transport,addresses,transport,service,no,registered,add,send,behavior,transport,address,send,behavior,return,no,registered
MockTransportService -> public boolean addSendBehavior(TransportService transportService, StubbableTransport.SendRequestBehavior sendBehavior);1542270280;Adds a new send behavior that is used for communication with the given delegate service.__@return {@code true} if no other send behavior was registered for any of the addresses bound by delegate service.;public boolean addSendBehavior(TransportService transportService, StubbableTransport.SendRequestBehavior sendBehavior) {_        boolean noRegistered = true__        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            noRegistered &= addSendBehavior(transportAddress, sendBehavior)__        }_        return noRegistered__    };adds,a,new,send,behavior,that,is,used,for,communication,with,the,given,delegate,service,return,code,true,if,no,other,send,behavior,was,registered,for,any,of,the,addresses,bound,by,delegate,service;public,boolean,add,send,behavior,transport,service,transport,service,stubbable,transport,send,request,behavior,send,behavior,boolean,no,registered,true,for,transport,address,transport,address,extract,transport,addresses,transport,service,no,registered,add,send,behavior,transport,address,send,behavior,return,no,registered
MockTransportService -> public boolean addSendBehavior(TransportService transportService, StubbableTransport.SendRequestBehavior sendBehavior);1542646292;Adds a new send behavior that is used for communication with the given delegate service.__@return {@code true} if no other send behavior was registered for any of the addresses bound by delegate service.;public boolean addSendBehavior(TransportService transportService, StubbableTransport.SendRequestBehavior sendBehavior) {_        boolean noRegistered = true__        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            noRegistered &= addSendBehavior(transportAddress, sendBehavior)__        }_        return noRegistered__    };adds,a,new,send,behavior,that,is,used,for,communication,with,the,given,delegate,service,return,code,true,if,no,other,send,behavior,was,registered,for,any,of,the,addresses,bound,by,delegate,service;public,boolean,add,send,behavior,transport,service,transport,service,stubbable,transport,send,request,behavior,send,behavior,boolean,no,registered,true,for,transport,address,transport,address,extract,transport,addresses,transport,service,no,registered,add,send,behavior,transport,address,send,behavior,return,no,registered
MockTransportService -> public boolean addSendBehavior(TransportService transportService, StubbableTransport.SendRequestBehavior sendBehavior);1543602642;Adds a new send behavior that is used for communication with the given delegate service.__@return {@code true} if no other send behavior was registered for any of the addresses bound by delegate service.;public boolean addSendBehavior(TransportService transportService, StubbableTransport.SendRequestBehavior sendBehavior) {_        boolean noRegistered = true__        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            noRegistered &= addSendBehavior(transportAddress, sendBehavior)__        }_        return noRegistered__    };adds,a,new,send,behavior,that,is,used,for,communication,with,the,given,delegate,service,return,code,true,if,no,other,send,behavior,was,registered,for,any,of,the,addresses,bound,by,delegate,service;public,boolean,add,send,behavior,transport,service,transport,service,stubbable,transport,send,request,behavior,send,behavior,boolean,no,registered,true,for,transport,address,transport,address,extract,transport,addresses,transport,service,no,registered,add,send,behavior,transport,address,send,behavior,return,no,registered
MockTransportService -> public boolean addSendBehavior(TransportService transportService, StubbableTransport.SendRequestBehavior sendBehavior);1544206631;Adds a new send behavior that is used for communication with the given delegate service.__@return {@code true} if no other send behavior was registered for any of the addresses bound by delegate service.;public boolean addSendBehavior(TransportService transportService, StubbableTransport.SendRequestBehavior sendBehavior) {_        boolean noRegistered = true__        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            noRegistered &= addSendBehavior(transportAddress, sendBehavior)__        }_        return noRegistered__    };adds,a,new,send,behavior,that,is,used,for,communication,with,the,given,delegate,service,return,code,true,if,no,other,send,behavior,was,registered,for,any,of,the,addresses,bound,by,delegate,service;public,boolean,add,send,behavior,transport,service,transport,service,stubbable,transport,send,request,behavior,send,behavior,boolean,no,registered,true,for,transport,address,transport,address,extract,transport,addresses,transport,service,no,registered,add,send,behavior,transport,address,send,behavior,return,no,registered
MockTransportService -> public boolean addSendBehavior(TransportService transportService, StubbableTransport.SendRequestBehavior sendBehavior);1544554541;Adds a new send behavior that is used for communication with the given delegate service.__@return {@code true} if no other send behavior was registered for any of the addresses bound by delegate service.;public boolean addSendBehavior(TransportService transportService, StubbableTransport.SendRequestBehavior sendBehavior) {_        boolean noRegistered = true__        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            noRegistered &= addSendBehavior(transportAddress, sendBehavior)__        }_        return noRegistered__    };adds,a,new,send,behavior,that,is,used,for,communication,with,the,given,delegate,service,return,code,true,if,no,other,send,behavior,was,registered,for,any,of,the,addresses,bound,by,delegate,service;public,boolean,add,send,behavior,transport,service,transport,service,stubbable,transport,send,request,behavior,send,behavior,boolean,no,registered,true,for,transport,address,transport,address,extract,transport,addresses,transport,service,no,registered,add,send,behavior,transport,address,send,behavior,return,no,registered
MockTransportService -> public boolean addSendBehavior(TransportService transportService, StubbableTransport.SendRequestBehavior sendBehavior);1544823664;Adds a new send behavior that is used for communication with the given delegate service.__@return {@code true} if no other send behavior was registered for any of the addresses bound by delegate service.;public boolean addSendBehavior(TransportService transportService, StubbableTransport.SendRequestBehavior sendBehavior) {_        boolean noRegistered = true__        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            noRegistered &= addSendBehavior(transportAddress, sendBehavior)__        }_        return noRegistered__    };adds,a,new,send,behavior,that,is,used,for,communication,with,the,given,delegate,service,return,code,true,if,no,other,send,behavior,was,registered,for,any,of,the,addresses,bound,by,delegate,service;public,boolean,add,send,behavior,transport,service,transport,service,stubbable,transport,send,request,behavior,send,behavior,boolean,no,registered,true,for,transport,address,transport,address,extract,transport,addresses,transport,service,no,registered,add,send,behavior,transport,address,send,behavior,return,no,registered
MockTransportService -> public boolean addSendBehavior(TransportService transportService, StubbableTransport.SendRequestBehavior sendBehavior);1548770891;Adds a new send behavior that is used for communication with the given delegate service.__@return {@code true} if no other send behavior was registered for any of the addresses bound by delegate service.;public boolean addSendBehavior(TransportService transportService, StubbableTransport.SendRequestBehavior sendBehavior) {_        boolean noRegistered = true__        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            noRegistered &= addSendBehavior(transportAddress, sendBehavior)__        }_        return noRegistered__    };adds,a,new,send,behavior,that,is,used,for,communication,with,the,given,delegate,service,return,code,true,if,no,other,send,behavior,was,registered,for,any,of,the,addresses,bound,by,delegate,service;public,boolean,add,send,behavior,transport,service,transport,service,stubbable,transport,send,request,behavior,send,behavior,boolean,no,registered,true,for,transport,address,transport,address,extract,transport,addresses,transport,service,no,registered,add,send,behavior,transport,address,send,behavior,return,no,registered
MockTransportService -> public boolean addSendBehavior(TransportService transportService, StubbableTransport.SendRequestBehavior sendBehavior);1548790146;Adds a new send behavior that is used for communication with the given delegate service.__@return {@code true} if no other send behavior was registered for any of the addresses bound by delegate service.;public boolean addSendBehavior(TransportService transportService, StubbableTransport.SendRequestBehavior sendBehavior) {_        boolean noRegistered = true__        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            noRegistered &= addSendBehavior(transportAddress, sendBehavior)__        }_        return noRegistered__    };adds,a,new,send,behavior,that,is,used,for,communication,with,the,given,delegate,service,return,code,true,if,no,other,send,behavior,was,registered,for,any,of,the,addresses,bound,by,delegate,service;public,boolean,add,send,behavior,transport,service,transport,service,stubbable,transport,send,request,behavior,send,behavior,boolean,no,registered,true,for,transport,address,transport,address,extract,transport,addresses,transport,service,no,registered,add,send,behavior,transport,address,send,behavior,return,no,registered
MockTransportService -> public boolean addSendBehavior(TransportService transportService, StubbableTransport.SendRequestBehavior sendBehavior);1548953505;Adds a new send behavior that is used for communication with the given delegate service.__@return {@code true} if no other send behavior was registered for any of the addresses bound by delegate service.;public boolean addSendBehavior(TransportService transportService, StubbableTransport.SendRequestBehavior sendBehavior) {_        boolean noRegistered = true__        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            noRegistered &= addSendBehavior(transportAddress, sendBehavior)__        }_        return noRegistered__    };adds,a,new,send,behavior,that,is,used,for,communication,with,the,given,delegate,service,return,code,true,if,no,other,send,behavior,was,registered,for,any,of,the,addresses,bound,by,delegate,service;public,boolean,add,send,behavior,transport,service,transport,service,stubbable,transport,send,request,behavior,send,behavior,boolean,no,registered,true,for,transport,address,transport,address,extract,transport,addresses,transport,service,no,registered,add,send,behavior,transport,address,send,behavior,return,no,registered
MockTransportService -> public boolean addSendBehavior(TransportService transportService, StubbableTransport.SendRequestBehavior sendBehavior);1550601141;Adds a new send behavior that is used for communication with the given delegate service.__@return {@code true} if no other send behavior was registered for any of the addresses bound by delegate service.;public boolean addSendBehavior(TransportService transportService, StubbableTransport.SendRequestBehavior sendBehavior) {_        boolean noRegistered = true__        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            noRegistered &= addSendBehavior(transportAddress, sendBehavior)__        }_        return noRegistered__    };adds,a,new,send,behavior,that,is,used,for,communication,with,the,given,delegate,service,return,code,true,if,no,other,send,behavior,was,registered,for,any,of,the,addresses,bound,by,delegate,service;public,boolean,add,send,behavior,transport,service,transport,service,stubbable,transport,send,request,behavior,send,behavior,boolean,no,registered,true,for,transport,address,transport,address,extract,transport,addresses,transport,service,no,registered,add,send,behavior,transport,address,send,behavior,return,no,registered
MockTransportService -> public boolean addSendBehavior(TransportService transportService, StubbableTransport.SendRequestBehavior sendBehavior);1551176390;Adds a new send behavior that is used for communication with the given delegate service.__@return {@code true} if no other send behavior was registered for any of the addresses bound by delegate service.;public boolean addSendBehavior(TransportService transportService, StubbableTransport.SendRequestBehavior sendBehavior) {_        boolean noRegistered = true__        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            noRegistered &= addSendBehavior(transportAddress, sendBehavior)__        }_        return noRegistered__    };adds,a,new,send,behavior,that,is,used,for,communication,with,the,given,delegate,service,return,code,true,if,no,other,send,behavior,was,registered,for,any,of,the,addresses,bound,by,delegate,service;public,boolean,add,send,behavior,transport,service,transport,service,stubbable,transport,send,request,behavior,send,behavior,boolean,no,registered,true,for,transport,address,transport,address,extract,transport,addresses,transport,service,no,registered,add,send,behavior,transport,address,send,behavior,return,no,registered
MockTransportService -> public void addFailToSendNoConnectRule(TransportService transportService, final String... blockedActions);1524684173;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportService transportService, final String... blockedActions) {_        addFailToSendNoConnectRule(transportService, new HashSet<>(Arrays.asList(blockedActions)))__    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,service,transport,service,final,string,blocked,actions,add,fail,to,send,no,connect,rule,transport,service,new,hash,set,arrays,as,list,blocked,actions
MockTransportService -> public void addFailToSendNoConnectRule(TransportService transportService, final String... blockedActions);1525162917;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportService transportService, final String... blockedActions) {_        addFailToSendNoConnectRule(transportService, new HashSet<>(Arrays.asList(blockedActions)))__    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,service,transport,service,final,string,blocked,actions,add,fail,to,send,no,connect,rule,transport,service,new,hash,set,arrays,as,list,blocked,actions
MockTransportService -> public void addFailToSendNoConnectRule(TransportService transportService, final String... blockedActions);1531179852;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportService transportService, final String... blockedActions) {_        addFailToSendNoConnectRule(transportService, new HashSet<>(Arrays.asList(blockedActions)))__    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,service,transport,service,final,string,blocked,actions,add,fail,to,send,no,connect,rule,transport,service,new,hash,set,arrays,as,list,blocked,actions
MockTransportService -> public void addFailToSendNoConnectRule(TransportService transportService, final String... blockedActions);1534203100;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportService transportService, final String... blockedActions) {_        addFailToSendNoConnectRule(transportService, new HashSet<>(Arrays.asList(blockedActions)))__    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,service,transport,service,final,string,blocked,actions,add,fail,to,send,no,connect,rule,transport,service,new,hash,set,arrays,as,list,blocked,actions
MockTransportService -> public void addFailToSendNoConnectRule(TransportService transportService, final String... blockedActions);1534362961;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportService transportService, final String... blockedActions) {_        addFailToSendNoConnectRule(transportService, new HashSet<>(Arrays.asList(blockedActions)))__    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,service,transport,service,final,string,blocked,actions,add,fail,to,send,no,connect,rule,transport,service,new,hash,set,arrays,as,list,blocked,actions
MockTransportService -> public void addFailToSendNoConnectRule(TransportService transportService, final String... blockedActions);1535383145;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportService transportService, final String... blockedActions) {_        addFailToSendNoConnectRule(transportService, new HashSet<>(Arrays.asList(blockedActions)))__    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,service,transport,service,final,string,blocked,actions,add,fail,to,send,no,connect,rule,transport,service,new,hash,set,arrays,as,list,blocked,actions
MockTransportService -> public void addFailToSendNoConnectRule(TransportService transportService, final String... blockedActions);1541092382;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportService transportService, final String... blockedActions) {_        addFailToSendNoConnectRule(transportService, new HashSet<>(Arrays.asList(blockedActions)))__    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,service,transport,service,final,string,blocked,actions,add,fail,to,send,no,connect,rule,transport,service,new,hash,set,arrays,as,list,blocked,actions
MockTransportService -> public void addFailToSendNoConnectRule(TransportService transportService, final String... blockedActions);1542270280;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportService transportService, final String... blockedActions) {_        addFailToSendNoConnectRule(transportService, new HashSet<>(Arrays.asList(blockedActions)))__    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,service,transport,service,final,string,blocked,actions,add,fail,to,send,no,connect,rule,transport,service,new,hash,set,arrays,as,list,blocked,actions
MockTransportService -> public void addFailToSendNoConnectRule(TransportService transportService, final String... blockedActions);1542646292;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportService transportService, final String... blockedActions) {_        addFailToSendNoConnectRule(transportService, new HashSet<>(Arrays.asList(blockedActions)))__    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,service,transport,service,final,string,blocked,actions,add,fail,to,send,no,connect,rule,transport,service,new,hash,set,arrays,as,list,blocked,actions
MockTransportService -> public void addFailToSendNoConnectRule(TransportService transportService, final String... blockedActions);1543602642;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportService transportService, final String... blockedActions) {_        addFailToSendNoConnectRule(transportService, new HashSet<>(Arrays.asList(blockedActions)))__    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,service,transport,service,final,string,blocked,actions,add,fail,to,send,no,connect,rule,transport,service,new,hash,set,arrays,as,list,blocked,actions
MockTransportService -> public void addFailToSendNoConnectRule(TransportService transportService, final String... blockedActions);1544206631;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportService transportService, final String... blockedActions) {_        addFailToSendNoConnectRule(transportService, new HashSet<>(Arrays.asList(blockedActions)))__    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,service,transport,service,final,string,blocked,actions,add,fail,to,send,no,connect,rule,transport,service,new,hash,set,arrays,as,list,blocked,actions
MockTransportService -> public void addFailToSendNoConnectRule(TransportService transportService, final String... blockedActions);1544554541;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportService transportService, final String... blockedActions) {_        addFailToSendNoConnectRule(transportService, new HashSet<>(Arrays.asList(blockedActions)))__    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,service,transport,service,final,string,blocked,actions,add,fail,to,send,no,connect,rule,transport,service,new,hash,set,arrays,as,list,blocked,actions
MockTransportService -> public void addFailToSendNoConnectRule(TransportService transportService, final String... blockedActions);1544823664;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportService transportService, final String... blockedActions) {_        addFailToSendNoConnectRule(transportService, new HashSet<>(Arrays.asList(blockedActions)))__    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,service,transport,service,final,string,blocked,actions,add,fail,to,send,no,connect,rule,transport,service,new,hash,set,arrays,as,list,blocked,actions
MockTransportService -> public void addFailToSendNoConnectRule(TransportService transportService, final String... blockedActions);1548770891;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportService transportService, final String... blockedActions) {_        addFailToSendNoConnectRule(transportService, new HashSet<>(Arrays.asList(blockedActions)))__    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,service,transport,service,final,string,blocked,actions,add,fail,to,send,no,connect,rule,transport,service,new,hash,set,arrays,as,list,blocked,actions
MockTransportService -> public void addFailToSendNoConnectRule(TransportService transportService, final String... blockedActions);1548790146;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportService transportService, final String... blockedActions) {_        addFailToSendNoConnectRule(transportService, new HashSet<>(Arrays.asList(blockedActions)))__    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,service,transport,service,final,string,blocked,actions,add,fail,to,send,no,connect,rule,transport,service,new,hash,set,arrays,as,list,blocked,actions
MockTransportService -> public void addFailToSendNoConnectRule(TransportService transportService, final String... blockedActions);1548953505;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportService transportService, final String... blockedActions) {_        addFailToSendNoConnectRule(transportService, new HashSet<>(Arrays.asList(blockedActions)))__    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,service,transport,service,final,string,blocked,actions,add,fail,to,send,no,connect,rule,transport,service,new,hash,set,arrays,as,list,blocked,actions
MockTransportService -> public void addFailToSendNoConnectRule(TransportService transportService, final String... blockedActions);1550601141;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportService transportService, final String... blockedActions) {_        addFailToSendNoConnectRule(transportService, new HashSet<>(Arrays.asList(blockedActions)))__    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,service,transport,service,final,string,blocked,actions,add,fail,to,send,no,connect,rule,transport,service,new,hash,set,arrays,as,list,blocked,actions
MockTransportService -> public void addFailToSendNoConnectRule(TransportService transportService, final String... blockedActions);1551176390;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportService transportService, final String... blockedActions) {_        addFailToSendNoConnectRule(transportService, new HashSet<>(Arrays.asList(blockedActions)))__    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,service,transport,service,final,string,blocked,actions,add,fail,to,send,no,connect,rule,transport,service,new,hash,set,arrays,as,list,blocked,actions
MockTransportService -> public void addFailToSendNoConnectRule(TransportService transportService, final Set<String> blockedActions);1524684173;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportService transportService, final Set<String> blockedActions) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addFailToSendNoConnectRule(transportAddress, blockedActions)__        }_    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,service,transport,service,final,set,string,blocked,actions,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,fail,to,send,no,connect,rule,transport,address,blocked,actions
MockTransportService -> public void addFailToSendNoConnectRule(TransportService transportService, final Set<String> blockedActions);1525162917;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportService transportService, final Set<String> blockedActions) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addFailToSendNoConnectRule(transportAddress, blockedActions)__        }_    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,service,transport,service,final,set,string,blocked,actions,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,fail,to,send,no,connect,rule,transport,address,blocked,actions
MockTransportService -> public void addFailToSendNoConnectRule(TransportService transportService, final Set<String> blockedActions);1531179852;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportService transportService, final Set<String> blockedActions) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addFailToSendNoConnectRule(transportAddress, blockedActions)__        }_    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,service,transport,service,final,set,string,blocked,actions,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,fail,to,send,no,connect,rule,transport,address,blocked,actions
MockTransportService -> public void addFailToSendNoConnectRule(TransportService transportService, final Set<String> blockedActions);1534203100;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportService transportService, final Set<String> blockedActions) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addFailToSendNoConnectRule(transportAddress, blockedActions)__        }_    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,service,transport,service,final,set,string,blocked,actions,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,fail,to,send,no,connect,rule,transport,address,blocked,actions
MockTransportService -> public void addFailToSendNoConnectRule(TransportService transportService, final Set<String> blockedActions);1534362961;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportService transportService, final Set<String> blockedActions) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addFailToSendNoConnectRule(transportAddress, blockedActions)__        }_    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,service,transport,service,final,set,string,blocked,actions,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,fail,to,send,no,connect,rule,transport,address,blocked,actions
MockTransportService -> public void addFailToSendNoConnectRule(TransportService transportService, final Set<String> blockedActions);1535383145;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportService transportService, final Set<String> blockedActions) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addFailToSendNoConnectRule(transportAddress, blockedActions)__        }_    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,service,transport,service,final,set,string,blocked,actions,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,fail,to,send,no,connect,rule,transport,address,blocked,actions
MockTransportService -> public void addFailToSendNoConnectRule(TransportService transportService, final Set<String> blockedActions);1541092382;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportService transportService, final Set<String> blockedActions) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addFailToSendNoConnectRule(transportAddress, blockedActions)__        }_    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,service,transport,service,final,set,string,blocked,actions,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,fail,to,send,no,connect,rule,transport,address,blocked,actions
MockTransportService -> public void addFailToSendNoConnectRule(TransportService transportService, final Set<String> blockedActions);1542270280;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportService transportService, final Set<String> blockedActions) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addFailToSendNoConnectRule(transportAddress, blockedActions)__        }_    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,service,transport,service,final,set,string,blocked,actions,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,fail,to,send,no,connect,rule,transport,address,blocked,actions
MockTransportService -> public void addFailToSendNoConnectRule(TransportService transportService, final Set<String> blockedActions);1542646292;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportService transportService, final Set<String> blockedActions) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addFailToSendNoConnectRule(transportAddress, blockedActions)__        }_    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,service,transport,service,final,set,string,blocked,actions,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,fail,to,send,no,connect,rule,transport,address,blocked,actions
MockTransportService -> public void addFailToSendNoConnectRule(TransportService transportService, final Set<String> blockedActions);1543602642;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportService transportService, final Set<String> blockedActions) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addFailToSendNoConnectRule(transportAddress, blockedActions)__        }_    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,service,transport,service,final,set,string,blocked,actions,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,fail,to,send,no,connect,rule,transport,address,blocked,actions
MockTransportService -> public void addFailToSendNoConnectRule(TransportService transportService, final Set<String> blockedActions);1544206631;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportService transportService, final Set<String> blockedActions) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addFailToSendNoConnectRule(transportAddress, blockedActions)__        }_    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,service,transport,service,final,set,string,blocked,actions,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,fail,to,send,no,connect,rule,transport,address,blocked,actions
MockTransportService -> public void addFailToSendNoConnectRule(TransportService transportService, final Set<String> blockedActions);1544554541;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportService transportService, final Set<String> blockedActions) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addFailToSendNoConnectRule(transportAddress, blockedActions)__        }_    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,service,transport,service,final,set,string,blocked,actions,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,fail,to,send,no,connect,rule,transport,address,blocked,actions
MockTransportService -> public void addFailToSendNoConnectRule(TransportService transportService, final Set<String> blockedActions);1544823664;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportService transportService, final Set<String> blockedActions) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addFailToSendNoConnectRule(transportAddress, blockedActions)__        }_    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,service,transport,service,final,set,string,blocked,actions,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,fail,to,send,no,connect,rule,transport,address,blocked,actions
MockTransportService -> public void addFailToSendNoConnectRule(TransportService transportService, final Set<String> blockedActions);1548770891;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportService transportService, final Set<String> blockedActions) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addFailToSendNoConnectRule(transportAddress, blockedActions)__        }_    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,service,transport,service,final,set,string,blocked,actions,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,fail,to,send,no,connect,rule,transport,address,blocked,actions
MockTransportService -> public void addFailToSendNoConnectRule(TransportService transportService, final Set<String> blockedActions);1548790146;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportService transportService, final Set<String> blockedActions) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addFailToSendNoConnectRule(transportAddress, blockedActions)__        }_    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,service,transport,service,final,set,string,blocked,actions,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,fail,to,send,no,connect,rule,transport,address,blocked,actions
MockTransportService -> public void addFailToSendNoConnectRule(TransportService transportService, final Set<String> blockedActions);1548953505;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportService transportService, final Set<String> blockedActions) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addFailToSendNoConnectRule(transportAddress, blockedActions)__        }_    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,service,transport,service,final,set,string,blocked,actions,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,fail,to,send,no,connect,rule,transport,address,blocked,actions
MockTransportService -> public void addFailToSendNoConnectRule(TransportService transportService, final Set<String> blockedActions);1550601141;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportService transportService, final Set<String> blockedActions) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addFailToSendNoConnectRule(transportAddress, blockedActions)__        }_    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,service,transport,service,final,set,string,blocked,actions,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,fail,to,send,no,connect,rule,transport,address,blocked,actions
MockTransportService -> public void addFailToSendNoConnectRule(TransportService transportService, final Set<String> blockedActions);1551176390;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportService transportService, final Set<String> blockedActions) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addFailToSendNoConnectRule(transportAddress, blockedActions)__        }_    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,service,transport,service,final,set,string,blocked,actions,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,fail,to,send,no,connect,rule,transport,address,blocked,actions
MockTransportService -> public Transport original();1524684173;Returns the original Transport service wrapped by this mock transport service.;public Transport original() {_        return original__    };returns,the,original,transport,service,wrapped,by,this,mock,transport,service;public,transport,original,return,original
MockTransportService -> public Transport original();1525162917;Returns the original Transport service wrapped by this mock transport service.;public Transport original() {_        return original__    };returns,the,original,transport,service,wrapped,by,this,mock,transport,service;public,transport,original,return,original
MockTransportService -> public Transport original();1531179852;Returns the original Transport service wrapped by this mock transport service.;public Transport original() {_        return original__    };returns,the,original,transport,service,wrapped,by,this,mock,transport,service;public,transport,original,return,original
MockTransportService -> public void addFailToSendNoConnectRule(TransportAddress transportAddress);1524684173;Adds a rule that will cause every send request to fail, and each new connect since the rule_is added to fail as well.;public void addFailToSendNoConnectRule(TransportAddress transportAddress) {_        addDelegate(transportAddress, new DelegateTransport(original) {__            @Override_            public void connectToNode(DiscoveryNode node, ConnectionProfile connectionProfile,_                                      CheckedBiConsumer<Connection, ConnectionProfile, IOException> connectionValidator)_                throws ConnectTransportException {_                if (original.nodeConnected(node) == false) {_                    _                    throw new ConnectTransportException(node, "DISCONNECT: simulated")__                }_            }__            @Override_            public Connection openConnection(DiscoveryNode node, ConnectionProfile profile) throws IOException {_                throw new ConnectTransportException(node, "DISCONNECT: simulated")__            }__            @Override_            protected void sendRequest(Connection connection, long requestId, String action, TransportRequest request,_                                       TransportRequestOptions options) throws IOException {_                connection.close()__                _                connection.sendRequest(requestId, action, request, options)__            }_        })__    };adds,a,rule,that,will,cause,every,send,request,to,fail,and,each,new,connect,since,the,rule,is,added,to,fail,as,well;public,void,add,fail,to,send,no,connect,rule,transport,address,transport,address,add,delegate,transport,address,new,delegate,transport,original,override,public,void,connect,to,node,discovery,node,node,connection,profile,connection,profile,checked,bi,consumer,connection,connection,profile,ioexception,connection,validator,throws,connect,transport,exception,if,original,node,connected,node,false,throw,new,connect,transport,exception,node,disconnect,simulated,override,public,connection,open,connection,discovery,node,node,connection,profile,profile,throws,ioexception,throw,new,connect,transport,exception,node,disconnect,simulated,override,protected,void,send,request,connection,connection,long,request,id,string,action,transport,request,request,transport,request,options,options,throws,ioexception,connection,close,connection,send,request,request,id,action,request,options
MockTransportService -> public void addFailToSendNoConnectRule(TransportAddress transportAddress);1525162917;Adds a rule that will cause every send request to fail, and each new connect since the rule_is added to fail as well.;public void addFailToSendNoConnectRule(TransportAddress transportAddress) {_        addDelegate(transportAddress, new DelegateTransport(original) {__            @Override_            public void connectToNode(DiscoveryNode node, ConnectionProfile connectionProfile,_                                      CheckedBiConsumer<Connection, ConnectionProfile, IOException> connectionValidator)_                throws ConnectTransportException {_                if (original.nodeConnected(node) == false) {_                    _                    throw new ConnectTransportException(node, "DISCONNECT: simulated")__                }_            }__            @Override_            public Connection openConnection(DiscoveryNode node, ConnectionProfile profile) throws IOException {_                throw new ConnectTransportException(node, "DISCONNECT: simulated")__            }__            @Override_            protected void sendRequest(Connection connection, long requestId, String action, TransportRequest request,_                                       TransportRequestOptions options) throws IOException {_                connection.close()__                _                connection.sendRequest(requestId, action, request, options)__            }_        })__    };adds,a,rule,that,will,cause,every,send,request,to,fail,and,each,new,connect,since,the,rule,is,added,to,fail,as,well;public,void,add,fail,to,send,no,connect,rule,transport,address,transport,address,add,delegate,transport,address,new,delegate,transport,original,override,public,void,connect,to,node,discovery,node,node,connection,profile,connection,profile,checked,bi,consumer,connection,connection,profile,ioexception,connection,validator,throws,connect,transport,exception,if,original,node,connected,node,false,throw,new,connect,transport,exception,node,disconnect,simulated,override,public,connection,open,connection,discovery,node,node,connection,profile,profile,throws,ioexception,throw,new,connect,transport,exception,node,disconnect,simulated,override,protected,void,send,request,connection,connection,long,request,id,string,action,transport,request,request,transport,request,options,options,throws,ioexception,connection,close,connection,send,request,request,id,action,request,options
MockTransportService -> public void addFailToSendNoConnectRule(TransportAddress transportAddress);1531179852;Adds a rule that will cause every send request to fail, and each new connect since the rule_is added to fail as well.;public void addFailToSendNoConnectRule(TransportAddress transportAddress) {_        addDelegate(transportAddress, new DelegateTransport(original) {__            @Override_            public void connectToNode(DiscoveryNode node, ConnectionProfile connectionProfile,_                                      CheckedBiConsumer<Connection, ConnectionProfile, IOException> connectionValidator)_                throws ConnectTransportException {_                if (original.nodeConnected(node) == false) {_                    _                    throw new ConnectTransportException(node, "DISCONNECT: simulated")__                }_            }__            @Override_            public Connection openConnection(DiscoveryNode node, ConnectionProfile profile) throws IOException {_                throw new ConnectTransportException(node, "DISCONNECT: simulated")__            }__            @Override_            protected void sendRequest(Connection connection, long requestId, String action, TransportRequest request,_                                       TransportRequestOptions options) throws IOException {_                connection.close()__                _                connection.sendRequest(requestId, action, request, options)__            }_        })__    };adds,a,rule,that,will,cause,every,send,request,to,fail,and,each,new,connect,since,the,rule,is,added,to,fail,as,well;public,void,add,fail,to,send,no,connect,rule,transport,address,transport,address,add,delegate,transport,address,new,delegate,transport,original,override,public,void,connect,to,node,discovery,node,node,connection,profile,connection,profile,checked,bi,consumer,connection,connection,profile,ioexception,connection,validator,throws,connect,transport,exception,if,original,node,connected,node,false,throw,new,connect,transport,exception,node,disconnect,simulated,override,public,connection,open,connection,discovery,node,node,connection,profile,profile,throws,ioexception,throw,new,connect,transport,exception,node,disconnect,simulated,override,protected,void,send,request,connection,connection,long,request,id,string,action,transport,request,request,transport,request,options,options,throws,ioexception,connection,close,connection,send,request,request,id,action,request,options
MockTransportService -> public void addFailToSendNoConnectRule(TransportAddress transportAddress);1534203100;Adds a rule that will cause every send request to fail, and each new connect since the rule_is added to fail as well.;public void addFailToSendNoConnectRule(TransportAddress transportAddress) {_        transport().addConnectBehavior(transportAddress, (transport, discoveryNode, profile) -> {_            throw new ConnectTransportException(discoveryNode, "DISCONNECT: simulated")__        })___        transport().addSendBehavior(transportAddress, (connection, requestId, action, request, options) -> {_            connection.close()__            _            connection.sendRequest(requestId, action, request, options)__        })__    };adds,a,rule,that,will,cause,every,send,request,to,fail,and,each,new,connect,since,the,rule,is,added,to,fail,as,well;public,void,add,fail,to,send,no,connect,rule,transport,address,transport,address,transport,add,connect,behavior,transport,address,transport,discovery,node,profile,throw,new,connect,transport,exception,discovery,node,disconnect,simulated,transport,add,send,behavior,transport,address,connection,request,id,action,request,options,connection,close,connection,send,request,request,id,action,request,options
MockTransportService -> public void addFailToSendNoConnectRule(TransportAddress transportAddress);1534362961;Adds a rule that will cause every send request to fail, and each new connect since the rule_is added to fail as well.;public void addFailToSendNoConnectRule(TransportAddress transportAddress) {_        transport().addConnectBehavior(transportAddress, (transport, discoveryNode, profile) -> {_            throw new ConnectTransportException(discoveryNode, "DISCONNECT: simulated")__        })___        transport().addSendBehavior(transportAddress, (connection, requestId, action, request, options) -> {_            connection.close()__            _            connection.sendRequest(requestId, action, request, options)__        })__    };adds,a,rule,that,will,cause,every,send,request,to,fail,and,each,new,connect,since,the,rule,is,added,to,fail,as,well;public,void,add,fail,to,send,no,connect,rule,transport,address,transport,address,transport,add,connect,behavior,transport,address,transport,discovery,node,profile,throw,new,connect,transport,exception,discovery,node,disconnect,simulated,transport,add,send,behavior,transport,address,connection,request,id,action,request,options,connection,close,connection,send,request,request,id,action,request,options
MockTransportService -> public void addFailToSendNoConnectRule(TransportAddress transportAddress);1535383145;Adds a rule that will cause every send request to fail, and each new connect since the rule_is added to fail as well.;public void addFailToSendNoConnectRule(TransportAddress transportAddress) {_        transport().addConnectBehavior(transportAddress, (transport, discoveryNode, profile) -> {_            throw new ConnectTransportException(discoveryNode, "DISCONNECT: simulated")__        })___        transport().addSendBehavior(transportAddress, (connection, requestId, action, request, options) -> {_            connection.close()__            _            connection.sendRequest(requestId, action, request, options)__        })__    };adds,a,rule,that,will,cause,every,send,request,to,fail,and,each,new,connect,since,the,rule,is,added,to,fail,as,well;public,void,add,fail,to,send,no,connect,rule,transport,address,transport,address,transport,add,connect,behavior,transport,address,transport,discovery,node,profile,throw,new,connect,transport,exception,discovery,node,disconnect,simulated,transport,add,send,behavior,transport,address,connection,request,id,action,request,options,connection,close,connection,send,request,request,id,action,request,options
MockTransportService -> public void addFailToSendNoConnectRule(TransportAddress transportAddress);1541092382;Adds a rule that will cause every send request to fail, and each new connect since the rule_is added to fail as well.;public void addFailToSendNoConnectRule(TransportAddress transportAddress) {_        transport().addConnectBehavior(transportAddress, (transport, discoveryNode, profile) -> {_            throw new ConnectTransportException(discoveryNode, "DISCONNECT: simulated")__        })___        transport().addSendBehavior(transportAddress, (connection, requestId, action, request, options) -> {_            connection.close()__            _            connection.sendRequest(requestId, action, request, options)__        })__    };adds,a,rule,that,will,cause,every,send,request,to,fail,and,each,new,connect,since,the,rule,is,added,to,fail,as,well;public,void,add,fail,to,send,no,connect,rule,transport,address,transport,address,transport,add,connect,behavior,transport,address,transport,discovery,node,profile,throw,new,connect,transport,exception,discovery,node,disconnect,simulated,transport,add,send,behavior,transport,address,connection,request,id,action,request,options,connection,close,connection,send,request,request,id,action,request,options
MockTransportService -> public void addFailToSendNoConnectRule(TransportAddress transportAddress);1542270280;Adds a rule that will cause every send request to fail, and each new connect since the rule_is added to fail as well.;public void addFailToSendNoConnectRule(TransportAddress transportAddress) {_        transport().addConnectBehavior(transportAddress, (transport, discoveryNode, profile) -> {_            throw new ConnectTransportException(discoveryNode, "DISCONNECT: simulated")__        })___        transport().addSendBehavior(transportAddress, (connection, requestId, action, request, options) -> {_            connection.close()__            _            connection.sendRequest(requestId, action, request, options)__        })__    };adds,a,rule,that,will,cause,every,send,request,to,fail,and,each,new,connect,since,the,rule,is,added,to,fail,as,well;public,void,add,fail,to,send,no,connect,rule,transport,address,transport,address,transport,add,connect,behavior,transport,address,transport,discovery,node,profile,throw,new,connect,transport,exception,discovery,node,disconnect,simulated,transport,add,send,behavior,transport,address,connection,request,id,action,request,options,connection,close,connection,send,request,request,id,action,request,options
MockTransportService -> public void addFailToSendNoConnectRule(TransportAddress transportAddress);1542646292;Adds a rule that will cause every send request to fail, and each new connect since the rule_is added to fail as well.;public void addFailToSendNoConnectRule(TransportAddress transportAddress) {_        transport().addConnectBehavior(transportAddress, (transport, discoveryNode, profile) -> {_            throw new ConnectTransportException(discoveryNode, "DISCONNECT: simulated")__        })___        transport().addSendBehavior(transportAddress, (connection, requestId, action, request, options) -> {_            connection.close()__            _            connection.sendRequest(requestId, action, request, options)__        })__    };adds,a,rule,that,will,cause,every,send,request,to,fail,and,each,new,connect,since,the,rule,is,added,to,fail,as,well;public,void,add,fail,to,send,no,connect,rule,transport,address,transport,address,transport,add,connect,behavior,transport,address,transport,discovery,node,profile,throw,new,connect,transport,exception,discovery,node,disconnect,simulated,transport,add,send,behavior,transport,address,connection,request,id,action,request,options,connection,close,connection,send,request,request,id,action,request,options
MockTransportService -> public void addFailToSendNoConnectRule(TransportAddress transportAddress);1543602642;Adds a rule that will cause every send request to fail, and each new connect since the rule_is added to fail as well.;public void addFailToSendNoConnectRule(TransportAddress transportAddress) {_        transport().addConnectBehavior(transportAddress, (transport, discoveryNode, profile, listener) -> {_            listener.onFailure(new ConnectTransportException(discoveryNode, "DISCONNECT: simulated"))__            return () -> {}__        })___        transport().addSendBehavior(transportAddress, (connection, requestId, action, request, options) -> {_            connection.close()__            _            connection.sendRequest(requestId, action, request, options)__        })__    };adds,a,rule,that,will,cause,every,send,request,to,fail,and,each,new,connect,since,the,rule,is,added,to,fail,as,well;public,void,add,fail,to,send,no,connect,rule,transport,address,transport,address,transport,add,connect,behavior,transport,address,transport,discovery,node,profile,listener,listener,on,failure,new,connect,transport,exception,discovery,node,disconnect,simulated,return,transport,add,send,behavior,transport,address,connection,request,id,action,request,options,connection,close,connection,send,request,request,id,action,request,options
MockTransportService -> public void addFailToSendNoConnectRule(TransportAddress transportAddress);1544206631;Adds a rule that will cause every send request to fail, and each new connect since the rule_is added to fail as well.;public void addFailToSendNoConnectRule(TransportAddress transportAddress) {_        transport().addConnectBehavior(transportAddress, (transport, discoveryNode, profile, listener) -> {_            listener.onFailure(new ConnectTransportException(discoveryNode, "DISCONNECT: simulated"))__            return () -> {}__        })___        transport().addSendBehavior(transportAddress, (connection, requestId, action, request, options) -> {_            connection.close()__            _            connection.sendRequest(requestId, action, request, options)__        })__    };adds,a,rule,that,will,cause,every,send,request,to,fail,and,each,new,connect,since,the,rule,is,added,to,fail,as,well;public,void,add,fail,to,send,no,connect,rule,transport,address,transport,address,transport,add,connect,behavior,transport,address,transport,discovery,node,profile,listener,listener,on,failure,new,connect,transport,exception,discovery,node,disconnect,simulated,return,transport,add,send,behavior,transport,address,connection,request,id,action,request,options,connection,close,connection,send,request,request,id,action,request,options
MockTransportService -> public void addFailToSendNoConnectRule(TransportAddress transportAddress);1544554541;Adds a rule that will cause every send request to fail, and each new connect since the rule_is added to fail as well.;public void addFailToSendNoConnectRule(TransportAddress transportAddress) {_        transport().addConnectBehavior(transportAddress, (transport, discoveryNode, profile, listener) -> {_            listener.onFailure(new ConnectTransportException(discoveryNode, "DISCONNECT: simulated"))__            return () -> {}__        })___        transport().addSendBehavior(transportAddress, (connection, requestId, action, request, options) -> {_            connection.close()__            _            connection.sendRequest(requestId, action, request, options)__        })__    };adds,a,rule,that,will,cause,every,send,request,to,fail,and,each,new,connect,since,the,rule,is,added,to,fail,as,well;public,void,add,fail,to,send,no,connect,rule,transport,address,transport,address,transport,add,connect,behavior,transport,address,transport,discovery,node,profile,listener,listener,on,failure,new,connect,transport,exception,discovery,node,disconnect,simulated,return,transport,add,send,behavior,transport,address,connection,request,id,action,request,options,connection,close,connection,send,request,request,id,action,request,options
MockTransportService -> public void addFailToSendNoConnectRule(TransportAddress transportAddress);1544823664;Adds a rule that will cause every send request to fail, and each new connect since the rule_is added to fail as well.;public void addFailToSendNoConnectRule(TransportAddress transportAddress) {_        transport().addConnectBehavior(transportAddress, (transport, discoveryNode, profile, listener) -> {_            listener.onFailure(new ConnectTransportException(discoveryNode, "DISCONNECT: simulated"))__            return () -> {}__        })___        transport().addSendBehavior(transportAddress, (connection, requestId, action, request, options) -> {_            connection.close()__            _            connection.sendRequest(requestId, action, request, options)__        })__    };adds,a,rule,that,will,cause,every,send,request,to,fail,and,each,new,connect,since,the,rule,is,added,to,fail,as,well;public,void,add,fail,to,send,no,connect,rule,transport,address,transport,address,transport,add,connect,behavior,transport,address,transport,discovery,node,profile,listener,listener,on,failure,new,connect,transport,exception,discovery,node,disconnect,simulated,return,transport,add,send,behavior,transport,address,connection,request,id,action,request,options,connection,close,connection,send,request,request,id,action,request,options
MockTransportService -> public void addFailToSendNoConnectRule(TransportAddress transportAddress);1548770891;Adds a rule that will cause every send request to fail, and each new connect since the rule_is added to fail as well.;public void addFailToSendNoConnectRule(TransportAddress transportAddress) {_        transport().addConnectBehavior(transportAddress, (transport, discoveryNode, profile, listener) -> {_            listener.onFailure(new ConnectTransportException(discoveryNode, "DISCONNECT: simulated"))__            return () -> {}__        })___        transport().addSendBehavior(transportAddress, (connection, requestId, action, request, options) -> {_            connection.close()__            _            connection.sendRequest(requestId, action, request, options)__        })__    };adds,a,rule,that,will,cause,every,send,request,to,fail,and,each,new,connect,since,the,rule,is,added,to,fail,as,well;public,void,add,fail,to,send,no,connect,rule,transport,address,transport,address,transport,add,connect,behavior,transport,address,transport,discovery,node,profile,listener,listener,on,failure,new,connect,transport,exception,discovery,node,disconnect,simulated,return,transport,add,send,behavior,transport,address,connection,request,id,action,request,options,connection,close,connection,send,request,request,id,action,request,options
MockTransportService -> public void addFailToSendNoConnectRule(TransportAddress transportAddress);1548790146;Adds a rule that will cause every send request to fail, and each new connect since the rule_is added to fail as well.;public void addFailToSendNoConnectRule(TransportAddress transportAddress) {_        transport().addConnectBehavior(transportAddress, (transport, discoveryNode, profile, listener) -> {_            listener.onFailure(new ConnectTransportException(discoveryNode, "DISCONNECT: simulated"))__            return () -> {}__        })___        transport().addSendBehavior(transportAddress, (connection, requestId, action, request, options) -> {_            connection.close()__            _            connection.sendRequest(requestId, action, request, options)__        })__    };adds,a,rule,that,will,cause,every,send,request,to,fail,and,each,new,connect,since,the,rule,is,added,to,fail,as,well;public,void,add,fail,to,send,no,connect,rule,transport,address,transport,address,transport,add,connect,behavior,transport,address,transport,discovery,node,profile,listener,listener,on,failure,new,connect,transport,exception,discovery,node,disconnect,simulated,return,transport,add,send,behavior,transport,address,connection,request,id,action,request,options,connection,close,connection,send,request,request,id,action,request,options
MockTransportService -> public void addFailToSendNoConnectRule(TransportAddress transportAddress);1548953505;Adds a rule that will cause every send request to fail, and each new connect since the rule_is added to fail as well.;public void addFailToSendNoConnectRule(TransportAddress transportAddress) {_        transport().addConnectBehavior(transportAddress, (transport, discoveryNode, profile, listener) -> {_            listener.onFailure(new ConnectTransportException(discoveryNode, "DISCONNECT: simulated"))__            return () -> {}__        })___        transport().addSendBehavior(transportAddress, (connection, requestId, action, request, options) -> {_            connection.close()__            _            connection.sendRequest(requestId, action, request, options)__        })__    };adds,a,rule,that,will,cause,every,send,request,to,fail,and,each,new,connect,since,the,rule,is,added,to,fail,as,well;public,void,add,fail,to,send,no,connect,rule,transport,address,transport,address,transport,add,connect,behavior,transport,address,transport,discovery,node,profile,listener,listener,on,failure,new,connect,transport,exception,discovery,node,disconnect,simulated,return,transport,add,send,behavior,transport,address,connection,request,id,action,request,options,connection,close,connection,send,request,request,id,action,request,options
MockTransportService -> public void addFailToSendNoConnectRule(TransportAddress transportAddress);1550601141;Adds a rule that will cause every send request to fail, and each new connect since the rule_is added to fail as well.;public void addFailToSendNoConnectRule(TransportAddress transportAddress) {_        transport().addConnectBehavior(transportAddress, (transport, discoveryNode, profile, listener) -> {_            listener.onFailure(new ConnectTransportException(discoveryNode, "DISCONNECT: simulated"))__            return () -> {}__        })___        transport().addSendBehavior(transportAddress, (connection, requestId, action, request, options) -> {_            connection.close()__            _            connection.sendRequest(requestId, action, request, options)__        })__    };adds,a,rule,that,will,cause,every,send,request,to,fail,and,each,new,connect,since,the,rule,is,added,to,fail,as,well;public,void,add,fail,to,send,no,connect,rule,transport,address,transport,address,transport,add,connect,behavior,transport,address,transport,discovery,node,profile,listener,listener,on,failure,new,connect,transport,exception,discovery,node,disconnect,simulated,return,transport,add,send,behavior,transport,address,connection,request,id,action,request,options,connection,close,connection,send,request,request,id,action,request,options
MockTransportService -> public void addFailToSendNoConnectRule(TransportAddress transportAddress);1551176390;Adds a rule that will cause every send request to fail, and each new connect since the rule_is added to fail as well.;public void addFailToSendNoConnectRule(TransportAddress transportAddress) {_        transport().addConnectBehavior(transportAddress, (transport, discoveryNode, profile, listener) -> {_            listener.onFailure(new ConnectTransportException(discoveryNode, "DISCONNECT: simulated"))__            return () -> {}__        })___        transport().addSendBehavior(transportAddress, (connection, requestId, action, request, options) -> {_            connection.close()__            _            connection.sendRequest(requestId, action, request, options)__        })__    };adds,a,rule,that,will,cause,every,send,request,to,fail,and,each,new,connect,since,the,rule,is,added,to,fail,as,well;public,void,add,fail,to,send,no,connect,rule,transport,address,transport,address,transport,add,connect,behavior,transport,address,transport,discovery,node,profile,listener,listener,on,failure,new,connect,transport,exception,discovery,node,disconnect,simulated,return,transport,add,send,behavior,transport,address,connection,request,id,action,request,options,connection,close,connection,send,request,request,id,action,request,options
MockTransportService -> public void addUnresponsiveRule(TransportAddress transportAddress);1524684173;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.;public void addUnresponsiveRule(TransportAddress transportAddress) {_        addDelegate(transportAddress, new DelegateTransport(original) {__            @Override_            public void connectToNode(DiscoveryNode node, ConnectionProfile connectionProfile,_                                      CheckedBiConsumer<Connection, ConnectionProfile, IOException> connectionValidator)_                throws ConnectTransportException {_                if (original.nodeConnected(node) == false) {_                    _                    throw new ConnectTransportException(node, "UNRESPONSIVE: simulated")__                }_            }__            @Override_            public Connection openConnection(DiscoveryNode node, ConnectionProfile profile) throws IOException {_                throw new ConnectTransportException(node, "UNRESPONSIVE: simulated")__            }__            @Override_            protected void sendRequest(Connection connection, long requestId, String action, TransportRequest request,_                                       TransportRequestOptions options) throws IOException {_                _            }_        })__    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added;public,void,add,unresponsive,rule,transport,address,transport,address,add,delegate,transport,address,new,delegate,transport,original,override,public,void,connect,to,node,discovery,node,node,connection,profile,connection,profile,checked,bi,consumer,connection,connection,profile,ioexception,connection,validator,throws,connect,transport,exception,if,original,node,connected,node,false,throw,new,connect,transport,exception,node,unresponsive,simulated,override,public,connection,open,connection,discovery,node,node,connection,profile,profile,throws,ioexception,throw,new,connect,transport,exception,node,unresponsive,simulated,override,protected,void,send,request,connection,connection,long,request,id,string,action,transport,request,request,transport,request,options,options,throws,ioexception
MockTransportService -> public void addUnresponsiveRule(TransportAddress transportAddress);1525162917;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.;public void addUnresponsiveRule(TransportAddress transportAddress) {_        addDelegate(transportAddress, new DelegateTransport(original) {__            @Override_            public void connectToNode(DiscoveryNode node, ConnectionProfile connectionProfile,_                                      CheckedBiConsumer<Connection, ConnectionProfile, IOException> connectionValidator)_                throws ConnectTransportException {_                if (original.nodeConnected(node) == false) {_                    _                    throw new ConnectTransportException(node, "UNRESPONSIVE: simulated")__                }_            }__            @Override_            public Connection openConnection(DiscoveryNode node, ConnectionProfile profile) throws IOException {_                throw new ConnectTransportException(node, "UNRESPONSIVE: simulated")__            }__            @Override_            protected void sendRequest(Connection connection, long requestId, String action, TransportRequest request,_                                       TransportRequestOptions options) throws IOException {_                _            }_        })__    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added;public,void,add,unresponsive,rule,transport,address,transport,address,add,delegate,transport,address,new,delegate,transport,original,override,public,void,connect,to,node,discovery,node,node,connection,profile,connection,profile,checked,bi,consumer,connection,connection,profile,ioexception,connection,validator,throws,connect,transport,exception,if,original,node,connected,node,false,throw,new,connect,transport,exception,node,unresponsive,simulated,override,public,connection,open,connection,discovery,node,node,connection,profile,profile,throws,ioexception,throw,new,connect,transport,exception,node,unresponsive,simulated,override,protected,void,send,request,connection,connection,long,request,id,string,action,transport,request,request,transport,request,options,options,throws,ioexception
MockTransportService -> public void addUnresponsiveRule(TransportAddress transportAddress);1531179852;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.;public void addUnresponsiveRule(TransportAddress transportAddress) {_        addDelegate(transportAddress, new DelegateTransport(original) {__            @Override_            public void connectToNode(DiscoveryNode node, ConnectionProfile connectionProfile,_                                      CheckedBiConsumer<Connection, ConnectionProfile, IOException> connectionValidator)_                throws ConnectTransportException {_                if (original.nodeConnected(node) == false) {_                    _                    throw new ConnectTransportException(node, "UNRESPONSIVE: simulated")__                }_            }__            @Override_            public Connection openConnection(DiscoveryNode node, ConnectionProfile profile) throws IOException {_                throw new ConnectTransportException(node, "UNRESPONSIVE: simulated")__            }__            @Override_            protected void sendRequest(Connection connection, long requestId, String action, TransportRequest request,_                                       TransportRequestOptions options) throws IOException {_                _            }_        })__    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added;public,void,add,unresponsive,rule,transport,address,transport,address,add,delegate,transport,address,new,delegate,transport,original,override,public,void,connect,to,node,discovery,node,node,connection,profile,connection,profile,checked,bi,consumer,connection,connection,profile,ioexception,connection,validator,throws,connect,transport,exception,if,original,node,connected,node,false,throw,new,connect,transport,exception,node,unresponsive,simulated,override,public,connection,open,connection,discovery,node,node,connection,profile,profile,throws,ioexception,throw,new,connect,transport,exception,node,unresponsive,simulated,override,protected,void,send,request,connection,connection,long,request,id,string,action,transport,request,request,transport,request,options,options,throws,ioexception
MockTransportService -> public void addUnresponsiveRule(TransportAddress transportAddress);1534203100;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.;public void addUnresponsiveRule(TransportAddress transportAddress) {_        transport().addConnectBehavior(transportAddress, (transport, discoveryNode, profile) -> {_            throw new ConnectTransportException(discoveryNode, "UNRESPONSIVE: simulated")__        })___        transport().addSendBehavior(transportAddress, (connection, requestId, action, request, options) -> {_            _        })__    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added;public,void,add,unresponsive,rule,transport,address,transport,address,transport,add,connect,behavior,transport,address,transport,discovery,node,profile,throw,new,connect,transport,exception,discovery,node,unresponsive,simulated,transport,add,send,behavior,transport,address,connection,request,id,action,request,options
MockTransportService -> public void addUnresponsiveRule(TransportAddress transportAddress);1534362961;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.;public void addUnresponsiveRule(TransportAddress transportAddress) {_        transport().addConnectBehavior(transportAddress, (transport, discoveryNode, profile) -> {_            throw new ConnectTransportException(discoveryNode, "UNRESPONSIVE: simulated")__        })___        transport().addSendBehavior(transportAddress, (connection, requestId, action, request, options) -> {_            _        })__    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added;public,void,add,unresponsive,rule,transport,address,transport,address,transport,add,connect,behavior,transport,address,transport,discovery,node,profile,throw,new,connect,transport,exception,discovery,node,unresponsive,simulated,transport,add,send,behavior,transport,address,connection,request,id,action,request,options
MockTransportService -> public void addUnresponsiveRule(TransportAddress transportAddress);1535383145;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.;public void addUnresponsiveRule(TransportAddress transportAddress) {_        transport().addConnectBehavior(transportAddress, (transport, discoveryNode, profile) -> {_            throw new ConnectTransportException(discoveryNode, "UNRESPONSIVE: simulated")__        })___        transport().addSendBehavior(transportAddress, (connection, requestId, action, request, options) -> {_            _        })__    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added;public,void,add,unresponsive,rule,transport,address,transport,address,transport,add,connect,behavior,transport,address,transport,discovery,node,profile,throw,new,connect,transport,exception,discovery,node,unresponsive,simulated,transport,add,send,behavior,transport,address,connection,request,id,action,request,options
MockTransportService -> public void addUnresponsiveRule(TransportAddress transportAddress);1541092382;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.;public void addUnresponsiveRule(TransportAddress transportAddress) {_        transport().addConnectBehavior(transportAddress, (transport, discoveryNode, profile) -> {_            throw new ConnectTransportException(discoveryNode, "UNRESPONSIVE: simulated")__        })___        transport().addSendBehavior(transportAddress, (connection, requestId, action, request, options) -> {_            _        })__    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added;public,void,add,unresponsive,rule,transport,address,transport,address,transport,add,connect,behavior,transport,address,transport,discovery,node,profile,throw,new,connect,transport,exception,discovery,node,unresponsive,simulated,transport,add,send,behavior,transport,address,connection,request,id,action,request,options
MockTransportService -> public void addUnresponsiveRule(TransportAddress transportAddress);1542270280;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.;public void addUnresponsiveRule(TransportAddress transportAddress) {_        transport().addConnectBehavior(transportAddress, (transport, discoveryNode, profile) -> {_            throw new ConnectTransportException(discoveryNode, "UNRESPONSIVE: simulated")__        })___        transport().addSendBehavior(transportAddress, (connection, requestId, action, request, options) -> {_            _        })__    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added;public,void,add,unresponsive,rule,transport,address,transport,address,transport,add,connect,behavior,transport,address,transport,discovery,node,profile,throw,new,connect,transport,exception,discovery,node,unresponsive,simulated,transport,add,send,behavior,transport,address,connection,request,id,action,request,options
MockTransportService -> public void addUnresponsiveRule(TransportAddress transportAddress);1542646292;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.;public void addUnresponsiveRule(TransportAddress transportAddress) {_        transport().addConnectBehavior(transportAddress, (transport, discoveryNode, profile) -> {_            throw new ConnectTransportException(discoveryNode, "UNRESPONSIVE: simulated")__        })___        transport().addSendBehavior(transportAddress, (connection, requestId, action, request, options) -> {_            _        })__    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added;public,void,add,unresponsive,rule,transport,address,transport,address,transport,add,connect,behavior,transport,address,transport,discovery,node,profile,throw,new,connect,transport,exception,discovery,node,unresponsive,simulated,transport,add,send,behavior,transport,address,connection,request,id,action,request,options
MockTransportService -> public void addUnresponsiveRule(TransportAddress transportAddress);1543602642;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.;public void addUnresponsiveRule(TransportAddress transportAddress) {_        transport().addConnectBehavior(transportAddress, (transport, discoveryNode, profile, listener) -> {_            listener.onFailure(new ConnectTransportException(discoveryNode, "UNRESPONSIVE: simulated"))__            return () -> {}__        })___        transport().addSendBehavior(transportAddress, (connection, requestId, action, request, options) -> {_            _        })__    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added;public,void,add,unresponsive,rule,transport,address,transport,address,transport,add,connect,behavior,transport,address,transport,discovery,node,profile,listener,listener,on,failure,new,connect,transport,exception,discovery,node,unresponsive,simulated,return,transport,add,send,behavior,transport,address,connection,request,id,action,request,options
MockTransportService -> public void addUnresponsiveRule(TransportAddress transportAddress);1544206631;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.;public void addUnresponsiveRule(TransportAddress transportAddress) {_        transport().addConnectBehavior(transportAddress, (transport, discoveryNode, profile, listener) -> {_            listener.onFailure(new ConnectTransportException(discoveryNode, "UNRESPONSIVE: simulated"))__            return () -> {}__        })___        transport().addSendBehavior(transportAddress, (connection, requestId, action, request, options) -> {_            _        })__    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added;public,void,add,unresponsive,rule,transport,address,transport,address,transport,add,connect,behavior,transport,address,transport,discovery,node,profile,listener,listener,on,failure,new,connect,transport,exception,discovery,node,unresponsive,simulated,return,transport,add,send,behavior,transport,address,connection,request,id,action,request,options
MockTransportService -> public void addUnresponsiveRule(TransportAddress transportAddress);1544554541;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.;public void addUnresponsiveRule(TransportAddress transportAddress) {_        transport().addConnectBehavior(transportAddress, (transport, discoveryNode, profile, listener) -> {_            listener.onFailure(new ConnectTransportException(discoveryNode, "UNRESPONSIVE: simulated"))__            return () -> {}__        })___        transport().addSendBehavior(transportAddress, (connection, requestId, action, request, options) -> {_            _        })__    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added;public,void,add,unresponsive,rule,transport,address,transport,address,transport,add,connect,behavior,transport,address,transport,discovery,node,profile,listener,listener,on,failure,new,connect,transport,exception,discovery,node,unresponsive,simulated,return,transport,add,send,behavior,transport,address,connection,request,id,action,request,options
MockTransportService -> public void addUnresponsiveRule(TransportAddress transportAddress);1544823664;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.;public void addUnresponsiveRule(TransportAddress transportAddress) {_        transport().addConnectBehavior(transportAddress, (transport, discoveryNode, profile, listener) -> {_            listener.onFailure(new ConnectTransportException(discoveryNode, "UNRESPONSIVE: simulated"))__            return () -> {}__        })___        transport().addSendBehavior(transportAddress, (connection, requestId, action, request, options) -> {_            _        })__    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added;public,void,add,unresponsive,rule,transport,address,transport,address,transport,add,connect,behavior,transport,address,transport,discovery,node,profile,listener,listener,on,failure,new,connect,transport,exception,discovery,node,unresponsive,simulated,return,transport,add,send,behavior,transport,address,connection,request,id,action,request,options
MockTransportService -> public void addUnresponsiveRule(TransportAddress transportAddress);1548770891;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.;public void addUnresponsiveRule(TransportAddress transportAddress) {_        transport().addConnectBehavior(transportAddress, (transport, discoveryNode, profile, listener) -> {_            listener.onFailure(new ConnectTransportException(discoveryNode, "UNRESPONSIVE: simulated"))__            return () -> {}__        })___        transport().addSendBehavior(transportAddress, (connection, requestId, action, request, options) -> {_            _        })__    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added;public,void,add,unresponsive,rule,transport,address,transport,address,transport,add,connect,behavior,transport,address,transport,discovery,node,profile,listener,listener,on,failure,new,connect,transport,exception,discovery,node,unresponsive,simulated,return,transport,add,send,behavior,transport,address,connection,request,id,action,request,options
MockTransportService -> public void addUnresponsiveRule(TransportAddress transportAddress);1548790146;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.;public void addUnresponsiveRule(TransportAddress transportAddress) {_        transport().addConnectBehavior(transportAddress, (transport, discoveryNode, profile, listener) -> {_            listener.onFailure(new ConnectTransportException(discoveryNode, "UNRESPONSIVE: simulated"))__            return () -> {}__        })___        transport().addSendBehavior(transportAddress, (connection, requestId, action, request, options) -> {_            _        })__    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added;public,void,add,unresponsive,rule,transport,address,transport,address,transport,add,connect,behavior,transport,address,transport,discovery,node,profile,listener,listener,on,failure,new,connect,transport,exception,discovery,node,unresponsive,simulated,return,transport,add,send,behavior,transport,address,connection,request,id,action,request,options
MockTransportService -> public void addUnresponsiveRule(TransportAddress transportAddress);1548953505;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.;public void addUnresponsiveRule(TransportAddress transportAddress) {_        transport().addConnectBehavior(transportAddress, (transport, discoveryNode, profile, listener) -> {_            listener.onFailure(new ConnectTransportException(discoveryNode, "UNRESPONSIVE: simulated"))__            return () -> {}__        })___        transport().addSendBehavior(transportAddress, (connection, requestId, action, request, options) -> {_            _        })__    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added;public,void,add,unresponsive,rule,transport,address,transport,address,transport,add,connect,behavior,transport,address,transport,discovery,node,profile,listener,listener,on,failure,new,connect,transport,exception,discovery,node,unresponsive,simulated,return,transport,add,send,behavior,transport,address,connection,request,id,action,request,options
MockTransportService -> public void addUnresponsiveRule(TransportAddress transportAddress);1550601141;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.;public void addUnresponsiveRule(TransportAddress transportAddress) {_        transport().addConnectBehavior(transportAddress, (transport, discoveryNode, profile, listener) -> {_            listener.onFailure(new ConnectTransportException(discoveryNode, "UNRESPONSIVE: simulated"))__            return () -> {}__        })___        transport().addSendBehavior(transportAddress, (connection, requestId, action, request, options) -> {_            _        })__    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added;public,void,add,unresponsive,rule,transport,address,transport,address,transport,add,connect,behavior,transport,address,transport,discovery,node,profile,listener,listener,on,failure,new,connect,transport,exception,discovery,node,unresponsive,simulated,return,transport,add,send,behavior,transport,address,connection,request,id,action,request,options
MockTransportService -> public void addUnresponsiveRule(TransportAddress transportAddress);1551176390;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.;public void addUnresponsiveRule(TransportAddress transportAddress) {_        transport().addConnectBehavior(transportAddress, (transport, discoveryNode, profile, listener) -> {_            listener.onFailure(new ConnectTransportException(discoveryNode, "UNRESPONSIVE: simulated"))__            return () -> {}__        })___        transport().addSendBehavior(transportAddress, (connection, requestId, action, request, options) -> {_            _        })__    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added;public,void,add,unresponsive,rule,transport,address,transport,address,transport,add,connect,behavior,transport,address,transport,discovery,node,profile,listener,listener,on,failure,new,connect,transport,exception,discovery,node,unresponsive,simulated,return,transport,add,send,behavior,transport,address,connection,request,id,action,request,options
MockTransportService -> public void addUnresponsiveRule(TransportService transportService, final TimeValue duration);1524684173;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.__@param duration the amount of time to delay sending and connecting.;public void addUnresponsiveRule(TransportService transportService, final TimeValue duration) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addUnresponsiveRule(transportAddress, duration)__        }_    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added,param,duration,the,amount,of,time,to,delay,sending,and,connecting;public,void,add,unresponsive,rule,transport,service,transport,service,final,time,value,duration,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,unresponsive,rule,transport,address,duration
MockTransportService -> public void addUnresponsiveRule(TransportService transportService, final TimeValue duration);1525162917;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.__@param duration the amount of time to delay sending and connecting.;public void addUnresponsiveRule(TransportService transportService, final TimeValue duration) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addUnresponsiveRule(transportAddress, duration)__        }_    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added,param,duration,the,amount,of,time,to,delay,sending,and,connecting;public,void,add,unresponsive,rule,transport,service,transport,service,final,time,value,duration,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,unresponsive,rule,transport,address,duration
MockTransportService -> public void addUnresponsiveRule(TransportService transportService, final TimeValue duration);1531179852;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.__@param duration the amount of time to delay sending and connecting.;public void addUnresponsiveRule(TransportService transportService, final TimeValue duration) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addUnresponsiveRule(transportAddress, duration)__        }_    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added,param,duration,the,amount,of,time,to,delay,sending,and,connecting;public,void,add,unresponsive,rule,transport,service,transport,service,final,time,value,duration,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,unresponsive,rule,transport,address,duration
MockTransportService -> public void addUnresponsiveRule(TransportService transportService, final TimeValue duration);1534203100;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.__@param duration the amount of time to delay sending and connecting.;public void addUnresponsiveRule(TransportService transportService, final TimeValue duration) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addUnresponsiveRule(transportAddress, duration)__        }_    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added,param,duration,the,amount,of,time,to,delay,sending,and,connecting;public,void,add,unresponsive,rule,transport,service,transport,service,final,time,value,duration,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,unresponsive,rule,transport,address,duration
MockTransportService -> public void addUnresponsiveRule(TransportService transportService, final TimeValue duration);1534362961;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.__@param duration the amount of time to delay sending and connecting.;public void addUnresponsiveRule(TransportService transportService, final TimeValue duration) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addUnresponsiveRule(transportAddress, duration)__        }_    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added,param,duration,the,amount,of,time,to,delay,sending,and,connecting;public,void,add,unresponsive,rule,transport,service,transport,service,final,time,value,duration,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,unresponsive,rule,transport,address,duration
MockTransportService -> public void addUnresponsiveRule(TransportService transportService, final TimeValue duration);1535383145;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.__@param duration the amount of time to delay sending and connecting.;public void addUnresponsiveRule(TransportService transportService, final TimeValue duration) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addUnresponsiveRule(transportAddress, duration)__        }_    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added,param,duration,the,amount,of,time,to,delay,sending,and,connecting;public,void,add,unresponsive,rule,transport,service,transport,service,final,time,value,duration,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,unresponsive,rule,transport,address,duration
MockTransportService -> public void addUnresponsiveRule(TransportService transportService, final TimeValue duration);1541092382;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.__@param duration the amount of time to delay sending and connecting.;public void addUnresponsiveRule(TransportService transportService, final TimeValue duration) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addUnresponsiveRule(transportAddress, duration)__        }_    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added,param,duration,the,amount,of,time,to,delay,sending,and,connecting;public,void,add,unresponsive,rule,transport,service,transport,service,final,time,value,duration,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,unresponsive,rule,transport,address,duration
MockTransportService -> public void addUnresponsiveRule(TransportService transportService, final TimeValue duration);1542270280;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.__@param duration the amount of time to delay sending and connecting.;public void addUnresponsiveRule(TransportService transportService, final TimeValue duration) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addUnresponsiveRule(transportAddress, duration)__        }_    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added,param,duration,the,amount,of,time,to,delay,sending,and,connecting;public,void,add,unresponsive,rule,transport,service,transport,service,final,time,value,duration,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,unresponsive,rule,transport,address,duration
MockTransportService -> public void addUnresponsiveRule(TransportService transportService, final TimeValue duration);1542646292;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.__@param duration the amount of time to delay sending and connecting.;public void addUnresponsiveRule(TransportService transportService, final TimeValue duration) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addUnresponsiveRule(transportAddress, duration)__        }_    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added,param,duration,the,amount,of,time,to,delay,sending,and,connecting;public,void,add,unresponsive,rule,transport,service,transport,service,final,time,value,duration,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,unresponsive,rule,transport,address,duration
MockTransportService -> public void addUnresponsiveRule(TransportService transportService, final TimeValue duration);1543602642;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.__@param duration the amount of time to delay sending and connecting.;public void addUnresponsiveRule(TransportService transportService, final TimeValue duration) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addUnresponsiveRule(transportAddress, duration)__        }_    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added,param,duration,the,amount,of,time,to,delay,sending,and,connecting;public,void,add,unresponsive,rule,transport,service,transport,service,final,time,value,duration,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,unresponsive,rule,transport,address,duration
MockTransportService -> public void addUnresponsiveRule(TransportService transportService, final TimeValue duration);1544206631;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.__@param duration the amount of time to delay sending and connecting.;public void addUnresponsiveRule(TransportService transportService, final TimeValue duration) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addUnresponsiveRule(transportAddress, duration)__        }_    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added,param,duration,the,amount,of,time,to,delay,sending,and,connecting;public,void,add,unresponsive,rule,transport,service,transport,service,final,time,value,duration,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,unresponsive,rule,transport,address,duration
MockTransportService -> public void addUnresponsiveRule(TransportService transportService, final TimeValue duration);1544554541;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.__@param duration the amount of time to delay sending and connecting.;public void addUnresponsiveRule(TransportService transportService, final TimeValue duration) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addUnresponsiveRule(transportAddress, duration)__        }_    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added,param,duration,the,amount,of,time,to,delay,sending,and,connecting;public,void,add,unresponsive,rule,transport,service,transport,service,final,time,value,duration,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,unresponsive,rule,transport,address,duration
MockTransportService -> public void addUnresponsiveRule(TransportService transportService, final TimeValue duration);1544823664;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.__@param duration the amount of time to delay sending and connecting.;public void addUnresponsiveRule(TransportService transportService, final TimeValue duration) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addUnresponsiveRule(transportAddress, duration)__        }_    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added,param,duration,the,amount,of,time,to,delay,sending,and,connecting;public,void,add,unresponsive,rule,transport,service,transport,service,final,time,value,duration,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,unresponsive,rule,transport,address,duration
MockTransportService -> public void addUnresponsiveRule(TransportService transportService, final TimeValue duration);1548770891;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.__@param duration the amount of time to delay sending and connecting.;public void addUnresponsiveRule(TransportService transportService, final TimeValue duration) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addUnresponsiveRule(transportAddress, duration)__        }_    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added,param,duration,the,amount,of,time,to,delay,sending,and,connecting;public,void,add,unresponsive,rule,transport,service,transport,service,final,time,value,duration,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,unresponsive,rule,transport,address,duration
MockTransportService -> public void addUnresponsiveRule(TransportService transportService, final TimeValue duration);1548790146;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.__@param duration the amount of time to delay sending and connecting.;public void addUnresponsiveRule(TransportService transportService, final TimeValue duration) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addUnresponsiveRule(transportAddress, duration)__        }_    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added,param,duration,the,amount,of,time,to,delay,sending,and,connecting;public,void,add,unresponsive,rule,transport,service,transport,service,final,time,value,duration,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,unresponsive,rule,transport,address,duration
MockTransportService -> public void addUnresponsiveRule(TransportService transportService, final TimeValue duration);1548953505;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.__@param duration the amount of time to delay sending and connecting.;public void addUnresponsiveRule(TransportService transportService, final TimeValue duration) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addUnresponsiveRule(transportAddress, duration)__        }_    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added,param,duration,the,amount,of,time,to,delay,sending,and,connecting;public,void,add,unresponsive,rule,transport,service,transport,service,final,time,value,duration,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,unresponsive,rule,transport,address,duration
MockTransportService -> public void addUnresponsiveRule(TransportService transportService, final TimeValue duration);1550601141;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.__@param duration the amount of time to delay sending and connecting.;public void addUnresponsiveRule(TransportService transportService, final TimeValue duration) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addUnresponsiveRule(transportAddress, duration)__        }_    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added,param,duration,the,amount,of,time,to,delay,sending,and,connecting;public,void,add,unresponsive,rule,transport,service,transport,service,final,time,value,duration,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,unresponsive,rule,transport,address,duration
MockTransportService -> public void addUnresponsiveRule(TransportService transportService, final TimeValue duration);1551176390;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.__@param duration the amount of time to delay sending and connecting.;public void addUnresponsiveRule(TransportService transportService, final TimeValue duration) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addUnresponsiveRule(transportAddress, duration)__        }_    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added,param,duration,the,amount,of,time,to,delay,sending,and,connecting;public,void,add,unresponsive,rule,transport,service,transport,service,final,time,value,duration,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,unresponsive,rule,transport,address,duration
MockTransportService -> public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,                                 @Nullable ClusterSettings clusterSettings);1524684173;Build the service.__@param clusterSettings if non null the {@linkplain TransportService} will register with the {@link ClusterSettings} for settings_updates for {@link #TRACE_LOG_EXCLUDE_SETTING} and {@link #TRACE_LOG_INCLUDE_SETTING}.;public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,_                                @Nullable ClusterSettings clusterSettings) {_        this(settings, transport, threadPool, interceptor, (boundAddress) ->_            DiscoveryNode.createLocal(settings, boundAddress.publishAddress(), settings.get(Node.NODE_NAME_SETTING.getKey(),_                UUIDs.randomBase64UUID())), clusterSettings, Collections.emptySet())__    };build,the,service,param,cluster,settings,if,non,null,the,linkplain,transport,service,will,register,with,the,link,cluster,settings,for,settings,updates,for,link,and,link;public,mock,transport,service,settings,settings,transport,transport,thread,pool,thread,pool,transport,interceptor,interceptor,nullable,cluster,settings,cluster,settings,this,settings,transport,thread,pool,interceptor,bound,address,discovery,node,create,local,settings,bound,address,publish,address,settings,get,node,get,key,uuids,random,base64uuid,cluster,settings,collections,empty,set
MockTransportService -> public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,                                 @Nullable ClusterSettings clusterSettings);1525162917;Build the service.__@param clusterSettings if non null the {@linkplain TransportService} will register with the {@link ClusterSettings} for settings_updates for {@link #TRACE_LOG_EXCLUDE_SETTING} and {@link #TRACE_LOG_INCLUDE_SETTING}.;public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,_                                @Nullable ClusterSettings clusterSettings) {_        this(settings, transport, threadPool, interceptor, (boundAddress) ->_            DiscoveryNode.createLocal(settings, boundAddress.publishAddress(), settings.get(Node.NODE_NAME_SETTING.getKey(),_                UUIDs.randomBase64UUID())), clusterSettings, Collections.emptySet())__    };build,the,service,param,cluster,settings,if,non,null,the,linkplain,transport,service,will,register,with,the,link,cluster,settings,for,settings,updates,for,link,and,link;public,mock,transport,service,settings,settings,transport,transport,thread,pool,thread,pool,transport,interceptor,interceptor,nullable,cluster,settings,cluster,settings,this,settings,transport,thread,pool,interceptor,bound,address,discovery,node,create,local,settings,bound,address,publish,address,settings,get,node,get,key,uuids,random,base64uuid,cluster,settings,collections,empty,set
MockTransportService -> public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,                                 @Nullable ClusterSettings clusterSettings);1531179852;Build the service.__@param clusterSettings if non null the {@linkplain TransportService} will register with the {@link ClusterSettings} for settings_updates for {@link #TRACE_LOG_EXCLUDE_SETTING} and {@link #TRACE_LOG_INCLUDE_SETTING}.;public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,_                                @Nullable ClusterSettings clusterSettings) {_        this(settings, transport, threadPool, interceptor, (boundAddress) ->_            DiscoveryNode.createLocal(settings, boundAddress.publishAddress(), settings.get(Node.NODE_NAME_SETTING.getKey(),_                UUIDs.randomBase64UUID())), clusterSettings, Collections.emptySet())__    };build,the,service,param,cluster,settings,if,non,null,the,linkplain,transport,service,will,register,with,the,link,cluster,settings,for,settings,updates,for,link,and,link;public,mock,transport,service,settings,settings,transport,transport,thread,pool,thread,pool,transport,interceptor,interceptor,nullable,cluster,settings,cluster,settings,this,settings,transport,thread,pool,interceptor,bound,address,discovery,node,create,local,settings,bound,address,publish,address,settings,get,node,get,key,uuids,random,base64uuid,cluster,settings,collections,empty,set
MockTransportService -> public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,                                 @Nullable ClusterSettings clusterSettings);1534203100;Build the service.__@param clusterSettings if non null the {@linkplain TransportService} will register with the {@link ClusterSettings} for settings_updates for {@link #TRACE_LOG_EXCLUDE_SETTING} and {@link #TRACE_LOG_INCLUDE_SETTING}.;public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,_                                @Nullable ClusterSettings clusterSettings) {_        this(settings, transport, threadPool, interceptor, (boundAddress) ->_            DiscoveryNode.createLocal(settings, boundAddress.publishAddress(), settings.get(Node.NODE_NAME_SETTING.getKey(),_                UUIDs.randomBase64UUID())), clusterSettings, Collections.emptySet())__    };build,the,service,param,cluster,settings,if,non,null,the,linkplain,transport,service,will,register,with,the,link,cluster,settings,for,settings,updates,for,link,and,link;public,mock,transport,service,settings,settings,transport,transport,thread,pool,thread,pool,transport,interceptor,interceptor,nullable,cluster,settings,cluster,settings,this,settings,transport,thread,pool,interceptor,bound,address,discovery,node,create,local,settings,bound,address,publish,address,settings,get,node,get,key,uuids,random,base64uuid,cluster,settings,collections,empty,set
MockTransportService -> public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,                                 @Nullable ClusterSettings clusterSettings);1534362961;Build the service.__@param clusterSettings if non null the {@linkplain TransportService} will register with the {@link ClusterSettings} for settings_updates for {@link #TRACE_LOG_EXCLUDE_SETTING} and {@link #TRACE_LOG_INCLUDE_SETTING}.;public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,_                                @Nullable ClusterSettings clusterSettings) {_        this(settings, transport, threadPool, interceptor, (boundAddress) ->_            DiscoveryNode.createLocal(settings, boundAddress.publishAddress(), settings.get(Node.NODE_NAME_SETTING.getKey(),_                UUIDs.randomBase64UUID())), clusterSettings, Collections.emptySet())__    };build,the,service,param,cluster,settings,if,non,null,the,linkplain,transport,service,will,register,with,the,link,cluster,settings,for,settings,updates,for,link,and,link;public,mock,transport,service,settings,settings,transport,transport,thread,pool,thread,pool,transport,interceptor,interceptor,nullable,cluster,settings,cluster,settings,this,settings,transport,thread,pool,interceptor,bound,address,discovery,node,create,local,settings,bound,address,publish,address,settings,get,node,get,key,uuids,random,base64uuid,cluster,settings,collections,empty,set
MockTransportService -> public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,                                 @Nullable ClusterSettings clusterSettings);1535383145;Build the service.__@param clusterSettings if non null the {@linkplain TransportService} will register with the {@link ClusterSettings} for settings_updates for {@link #TRACE_LOG_EXCLUDE_SETTING} and {@link #TRACE_LOG_INCLUDE_SETTING}.;public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,_                                @Nullable ClusterSettings clusterSettings) {_        this(settings, transport, threadPool, interceptor, (boundAddress) ->_            DiscoveryNode.createLocal(settings, boundAddress.publishAddress(), settings.get(Node.NODE_NAME_SETTING.getKey(),_                UUIDs.randomBase64UUID())), clusterSettings, Collections.emptySet())__    };build,the,service,param,cluster,settings,if,non,null,the,linkplain,transport,service,will,register,with,the,link,cluster,settings,for,settings,updates,for,link,and,link;public,mock,transport,service,settings,settings,transport,transport,thread,pool,thread,pool,transport,interceptor,interceptor,nullable,cluster,settings,cluster,settings,this,settings,transport,thread,pool,interceptor,bound,address,discovery,node,create,local,settings,bound,address,publish,address,settings,get,node,get,key,uuids,random,base64uuid,cluster,settings,collections,empty,set
MockTransportService -> public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,                                 @Nullable ClusterSettings clusterSettings);1541092382;Build the service.__@param clusterSettings if non null the {@linkplain TransportService} will register with the {@link ClusterSettings} for settings_updates for {@link #TRACE_LOG_EXCLUDE_SETTING} and {@link #TRACE_LOG_INCLUDE_SETTING}.;public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,_                                @Nullable ClusterSettings clusterSettings) {_        this(settings, transport, threadPool, interceptor, (boundAddress) ->_            DiscoveryNode.createLocal(settings, boundAddress.publishAddress(), settings.get(Node.NODE_NAME_SETTING.getKey(),_                UUIDs.randomBase64UUID())), clusterSettings, Collections.emptySet())__    };build,the,service,param,cluster,settings,if,non,null,the,linkplain,transport,service,will,register,with,the,link,cluster,settings,for,settings,updates,for,link,and,link;public,mock,transport,service,settings,settings,transport,transport,thread,pool,thread,pool,transport,interceptor,interceptor,nullable,cluster,settings,cluster,settings,this,settings,transport,thread,pool,interceptor,bound,address,discovery,node,create,local,settings,bound,address,publish,address,settings,get,node,get,key,uuids,random,base64uuid,cluster,settings,collections,empty,set
MockTransportService -> public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,                                 @Nullable ClusterSettings clusterSettings);1542270280;Build the service.__@param clusterSettings if non null the {@linkplain TransportService} will register with the {@link ClusterSettings} for settings_updates for {@link #TRACE_LOG_EXCLUDE_SETTING} and {@link #TRACE_LOG_INCLUDE_SETTING}.;public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,_                                @Nullable ClusterSettings clusterSettings) {_        this(settings, transport, threadPool, interceptor, (boundAddress) ->_            DiscoveryNode.createLocal(settings, boundAddress.publishAddress(), settings.get(Node.NODE_NAME_SETTING.getKey(),_                UUIDs.randomBase64UUID())), clusterSettings, Collections.emptySet())__    };build,the,service,param,cluster,settings,if,non,null,the,linkplain,transport,service,will,register,with,the,link,cluster,settings,for,settings,updates,for,link,and,link;public,mock,transport,service,settings,settings,transport,transport,thread,pool,thread,pool,transport,interceptor,interceptor,nullable,cluster,settings,cluster,settings,this,settings,transport,thread,pool,interceptor,bound,address,discovery,node,create,local,settings,bound,address,publish,address,settings,get,node,get,key,uuids,random,base64uuid,cluster,settings,collections,empty,set
MockTransportService -> public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,                                 @Nullable ClusterSettings clusterSettings);1542646292;Build the service.__@param clusterSettings if non null the {@linkplain TransportService} will register with the {@link ClusterSettings} for settings_updates for {@link #TRACE_LOG_EXCLUDE_SETTING} and {@link #TRACE_LOG_INCLUDE_SETTING}.;public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,_                                @Nullable ClusterSettings clusterSettings) {_        this(settings, transport, threadPool, interceptor, (boundAddress) ->_            DiscoveryNode.createLocal(settings, boundAddress.publishAddress(), settings.get(Node.NODE_NAME_SETTING.getKey(),_                UUIDs.randomBase64UUID())), clusterSettings, Collections.emptySet())__    };build,the,service,param,cluster,settings,if,non,null,the,linkplain,transport,service,will,register,with,the,link,cluster,settings,for,settings,updates,for,link,and,link;public,mock,transport,service,settings,settings,transport,transport,thread,pool,thread,pool,transport,interceptor,interceptor,nullable,cluster,settings,cluster,settings,this,settings,transport,thread,pool,interceptor,bound,address,discovery,node,create,local,settings,bound,address,publish,address,settings,get,node,get,key,uuids,random,base64uuid,cluster,settings,collections,empty,set
MockTransportService -> public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,                                 @Nullable ClusterSettings clusterSettings);1543602642;Build the service.__@param clusterSettings if non null the {@linkplain TransportService} will register with the {@link ClusterSettings} for settings_updates for {@link #TRACE_LOG_EXCLUDE_SETTING} and {@link #TRACE_LOG_INCLUDE_SETTING}.;public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,_                                @Nullable ClusterSettings clusterSettings) {_        this(settings, transport, threadPool, interceptor, (boundAddress) ->_            DiscoveryNode.createLocal(settings, boundAddress.publishAddress(), settings.get(Node.NODE_NAME_SETTING.getKey(),_                UUIDs.randomBase64UUID())), clusterSettings, Collections.emptySet())__    };build,the,service,param,cluster,settings,if,non,null,the,linkplain,transport,service,will,register,with,the,link,cluster,settings,for,settings,updates,for,link,and,link;public,mock,transport,service,settings,settings,transport,transport,thread,pool,thread,pool,transport,interceptor,interceptor,nullable,cluster,settings,cluster,settings,this,settings,transport,thread,pool,interceptor,bound,address,discovery,node,create,local,settings,bound,address,publish,address,settings,get,node,get,key,uuids,random,base64uuid,cluster,settings,collections,empty,set
MockTransportService -> public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,                                 @Nullable ClusterSettings clusterSettings);1544206631;Build the service.__@param clusterSettings if non null the {@linkplain TransportService} will register with the {@link ClusterSettings} for settings_updates for {@link #TRACE_LOG_EXCLUDE_SETTING} and {@link #TRACE_LOG_INCLUDE_SETTING}.;public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,_                                @Nullable ClusterSettings clusterSettings) {_        this(settings, transport, threadPool, interceptor, (boundAddress) ->_            DiscoveryNode.createLocal(settings, boundAddress.publishAddress(), settings.get(Node.NODE_NAME_SETTING.getKey(),_                UUIDs.randomBase64UUID())), clusterSettings, Collections.emptySet())__    };build,the,service,param,cluster,settings,if,non,null,the,linkplain,transport,service,will,register,with,the,link,cluster,settings,for,settings,updates,for,link,and,link;public,mock,transport,service,settings,settings,transport,transport,thread,pool,thread,pool,transport,interceptor,interceptor,nullable,cluster,settings,cluster,settings,this,settings,transport,thread,pool,interceptor,bound,address,discovery,node,create,local,settings,bound,address,publish,address,settings,get,node,get,key,uuids,random,base64uuid,cluster,settings,collections,empty,set
MockTransportService -> public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,                                 @Nullable ClusterSettings clusterSettings);1544554541;Build the service.__@param clusterSettings if non null the {@linkplain TransportService} will register with the {@link ClusterSettings} for settings_updates for {@link #TRACE_LOG_EXCLUDE_SETTING} and {@link #TRACE_LOG_INCLUDE_SETTING}.;public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,_                                @Nullable ClusterSettings clusterSettings) {_        this(settings, transport, threadPool, interceptor, (boundAddress) ->_            DiscoveryNode.createLocal(settings, boundAddress.publishAddress(), settings.get(Node.NODE_NAME_SETTING.getKey(),_                UUIDs.randomBase64UUID())), clusterSettings, Collections.emptySet())__    };build,the,service,param,cluster,settings,if,non,null,the,linkplain,transport,service,will,register,with,the,link,cluster,settings,for,settings,updates,for,link,and,link;public,mock,transport,service,settings,settings,transport,transport,thread,pool,thread,pool,transport,interceptor,interceptor,nullable,cluster,settings,cluster,settings,this,settings,transport,thread,pool,interceptor,bound,address,discovery,node,create,local,settings,bound,address,publish,address,settings,get,node,get,key,uuids,random,base64uuid,cluster,settings,collections,empty,set
MockTransportService -> public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,                                 @Nullable ClusterSettings clusterSettings);1544823664;Build the service.__@param clusterSettings if non null the {@linkplain TransportService} will register with the {@link ClusterSettings} for settings_updates for {@link TransportSettings#TRACE_LOG_EXCLUDE_SETTING} and_{@link TransportSettings#TRACE_LOG_INCLUDE_SETTING}.;public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,_                                @Nullable ClusterSettings clusterSettings) {_        this(settings, transport, threadPool, interceptor, (boundAddress) ->_            DiscoveryNode.createLocal(settings, boundAddress.publishAddress(), settings.get(Node.NODE_NAME_SETTING.getKey(),_                UUIDs.randomBase64UUID())), clusterSettings, Collections.emptySet())__    };build,the,service,param,cluster,settings,if,non,null,the,linkplain,transport,service,will,register,with,the,link,cluster,settings,for,settings,updates,for,link,transport,settings,and,link,transport,settings;public,mock,transport,service,settings,settings,transport,transport,thread,pool,thread,pool,transport,interceptor,interceptor,nullable,cluster,settings,cluster,settings,this,settings,transport,thread,pool,interceptor,bound,address,discovery,node,create,local,settings,bound,address,publish,address,settings,get,node,get,key,uuids,random,base64uuid,cluster,settings,collections,empty,set
MockTransportService -> public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,                                 @Nullable ClusterSettings clusterSettings);1548770891;Build the service.__@param clusterSettings if non null the {@linkplain TransportService} will register with the {@link ClusterSettings} for settings_updates for {@link TransportSettings#TRACE_LOG_EXCLUDE_SETTING} and_{@link TransportSettings#TRACE_LOG_INCLUDE_SETTING}.;public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,_                                @Nullable ClusterSettings clusterSettings) {_        this(settings, transport, threadPool, interceptor, (boundAddress) ->_            DiscoveryNode.createLocal(settings, boundAddress.publishAddress(), settings.get(Node.NODE_NAME_SETTING.getKey(),_                UUIDs.randomBase64UUID())), clusterSettings, Collections.emptySet())__    };build,the,service,param,cluster,settings,if,non,null,the,linkplain,transport,service,will,register,with,the,link,cluster,settings,for,settings,updates,for,link,transport,settings,and,link,transport,settings;public,mock,transport,service,settings,settings,transport,transport,thread,pool,thread,pool,transport,interceptor,interceptor,nullable,cluster,settings,cluster,settings,this,settings,transport,thread,pool,interceptor,bound,address,discovery,node,create,local,settings,bound,address,publish,address,settings,get,node,get,key,uuids,random,base64uuid,cluster,settings,collections,empty,set
MockTransportService -> public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,                                 @Nullable ClusterSettings clusterSettings);1548790146;Build the service.__@param clusterSettings if non null the {@linkplain TransportService} will register with the {@link ClusterSettings} for settings_updates for {@link TransportSettings#TRACE_LOG_EXCLUDE_SETTING} and_{@link TransportSettings#TRACE_LOG_INCLUDE_SETTING}.;public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,_                                @Nullable ClusterSettings clusterSettings) {_        this(settings, transport, threadPool, interceptor, (boundAddress) ->_            DiscoveryNode.createLocal(settings, boundAddress.publishAddress(), settings.get(Node.NODE_NAME_SETTING.getKey(),_                UUIDs.randomBase64UUID())), clusterSettings, Collections.emptySet())__    };build,the,service,param,cluster,settings,if,non,null,the,linkplain,transport,service,will,register,with,the,link,cluster,settings,for,settings,updates,for,link,transport,settings,and,link,transport,settings;public,mock,transport,service,settings,settings,transport,transport,thread,pool,thread,pool,transport,interceptor,interceptor,nullable,cluster,settings,cluster,settings,this,settings,transport,thread,pool,interceptor,bound,address,discovery,node,create,local,settings,bound,address,publish,address,settings,get,node,get,key,uuids,random,base64uuid,cluster,settings,collections,empty,set
MockTransportService -> public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,                                 @Nullable ClusterSettings clusterSettings);1548953505;Build the service.__@param clusterSettings if non null the {@linkplain TransportService} will register with the {@link ClusterSettings} for settings_updates for {@link TransportSettings#TRACE_LOG_EXCLUDE_SETTING} and_{@link TransportSettings#TRACE_LOG_INCLUDE_SETTING}.;public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,_                                @Nullable ClusterSettings clusterSettings) {_        this(settings, transport, threadPool, interceptor, (boundAddress) ->_            DiscoveryNode.createLocal(settings, boundAddress.publishAddress(), settings.get(Node.NODE_NAME_SETTING.getKey(),_                UUIDs.randomBase64UUID())), clusterSettings, Collections.emptySet())__    };build,the,service,param,cluster,settings,if,non,null,the,linkplain,transport,service,will,register,with,the,link,cluster,settings,for,settings,updates,for,link,transport,settings,and,link,transport,settings;public,mock,transport,service,settings,settings,transport,transport,thread,pool,thread,pool,transport,interceptor,interceptor,nullable,cluster,settings,cluster,settings,this,settings,transport,thread,pool,interceptor,bound,address,discovery,node,create,local,settings,bound,address,publish,address,settings,get,node,get,key,uuids,random,base64uuid,cluster,settings,collections,empty,set
MockTransportService -> public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,                                 @Nullable ClusterSettings clusterSettings);1550601141;Build the service.__@param clusterSettings if non null the {@linkplain TransportService} will register with the {@link ClusterSettings} for settings_updates for {@link TransportSettings#TRACE_LOG_EXCLUDE_SETTING} and_{@link TransportSettings#TRACE_LOG_INCLUDE_SETTING}.;public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,_                                @Nullable ClusterSettings clusterSettings) {_        this(settings, transport, threadPool, interceptor, (boundAddress) ->_            DiscoveryNode.createLocal(settings, boundAddress.publishAddress(), settings.get(Node.NODE_NAME_SETTING.getKey(),_                UUIDs.randomBase64UUID())), clusterSettings, Collections.emptySet())__    };build,the,service,param,cluster,settings,if,non,null,the,linkplain,transport,service,will,register,with,the,link,cluster,settings,for,settings,updates,for,link,transport,settings,and,link,transport,settings;public,mock,transport,service,settings,settings,transport,transport,thread,pool,thread,pool,transport,interceptor,interceptor,nullable,cluster,settings,cluster,settings,this,settings,transport,thread,pool,interceptor,bound,address,discovery,node,create,local,settings,bound,address,publish,address,settings,get,node,get,key,uuids,random,base64uuid,cluster,settings,collections,empty,set
MockTransportService -> public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,                                 @Nullable ClusterSettings clusterSettings);1551176390;Build the service.__@param clusterSettings if non null the {@linkplain TransportService} will register with the {@link ClusterSettings} for settings_updates for {@link TransportSettings#TRACE_LOG_EXCLUDE_SETTING} and_{@link TransportSettings#TRACE_LOG_INCLUDE_SETTING}.;public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,_                                @Nullable ClusterSettings clusterSettings) {_        this(settings, transport, threadPool, interceptor, (boundAddress) ->_            DiscoveryNode.createLocal(settings, boundAddress.publishAddress(), settings.get(Node.NODE_NAME_SETTING.getKey(),_                UUIDs.randomBase64UUID())), clusterSettings, Collections.emptySet())__    };build,the,service,param,cluster,settings,if,non,null,the,linkplain,transport,service,will,register,with,the,link,cluster,settings,for,settings,updates,for,link,transport,settings,and,link,transport,settings;public,mock,transport,service,settings,settings,transport,transport,thread,pool,thread,pool,transport,interceptor,interceptor,nullable,cluster,settings,cluster,settings,this,settings,transport,thread,pool,interceptor,bound,address,discovery,node,create,local,settings,bound,address,publish,address,settings,get,node,get,key,uuids,random,base64uuid,cluster,settings,collections,empty,set
MockTransportService -> public void addFailToSendNoConnectRule(TransportService transportService);1524684173;Adds a rule that will cause every send request to fail, and each new connect since the rule_is added to fail as well.;public void addFailToSendNoConnectRule(TransportService transportService) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addFailToSendNoConnectRule(transportAddress)__        }_    };adds,a,rule,that,will,cause,every,send,request,to,fail,and,each,new,connect,since,the,rule,is,added,to,fail,as,well;public,void,add,fail,to,send,no,connect,rule,transport,service,transport,service,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,fail,to,send,no,connect,rule,transport,address
MockTransportService -> public void addFailToSendNoConnectRule(TransportService transportService);1525162917;Adds a rule that will cause every send request to fail, and each new connect since the rule_is added to fail as well.;public void addFailToSendNoConnectRule(TransportService transportService) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addFailToSendNoConnectRule(transportAddress)__        }_    };adds,a,rule,that,will,cause,every,send,request,to,fail,and,each,new,connect,since,the,rule,is,added,to,fail,as,well;public,void,add,fail,to,send,no,connect,rule,transport,service,transport,service,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,fail,to,send,no,connect,rule,transport,address
MockTransportService -> public void addFailToSendNoConnectRule(TransportService transportService);1531179852;Adds a rule that will cause every send request to fail, and each new connect since the rule_is added to fail as well.;public void addFailToSendNoConnectRule(TransportService transportService) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addFailToSendNoConnectRule(transportAddress)__        }_    };adds,a,rule,that,will,cause,every,send,request,to,fail,and,each,new,connect,since,the,rule,is,added,to,fail,as,well;public,void,add,fail,to,send,no,connect,rule,transport,service,transport,service,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,fail,to,send,no,connect,rule,transport,address
MockTransportService -> public void addFailToSendNoConnectRule(TransportService transportService);1534203100;Adds a rule that will cause every send request to fail, and each new connect since the rule_is added to fail as well.;public void addFailToSendNoConnectRule(TransportService transportService) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addFailToSendNoConnectRule(transportAddress)__        }_    };adds,a,rule,that,will,cause,every,send,request,to,fail,and,each,new,connect,since,the,rule,is,added,to,fail,as,well;public,void,add,fail,to,send,no,connect,rule,transport,service,transport,service,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,fail,to,send,no,connect,rule,transport,address
MockTransportService -> public void addFailToSendNoConnectRule(TransportService transportService);1534362961;Adds a rule that will cause every send request to fail, and each new connect since the rule_is added to fail as well.;public void addFailToSendNoConnectRule(TransportService transportService) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addFailToSendNoConnectRule(transportAddress)__        }_    };adds,a,rule,that,will,cause,every,send,request,to,fail,and,each,new,connect,since,the,rule,is,added,to,fail,as,well;public,void,add,fail,to,send,no,connect,rule,transport,service,transport,service,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,fail,to,send,no,connect,rule,transport,address
MockTransportService -> public void addFailToSendNoConnectRule(TransportService transportService);1535383145;Adds a rule that will cause every send request to fail, and each new connect since the rule_is added to fail as well.;public void addFailToSendNoConnectRule(TransportService transportService) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addFailToSendNoConnectRule(transportAddress)__        }_    };adds,a,rule,that,will,cause,every,send,request,to,fail,and,each,new,connect,since,the,rule,is,added,to,fail,as,well;public,void,add,fail,to,send,no,connect,rule,transport,service,transport,service,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,fail,to,send,no,connect,rule,transport,address
MockTransportService -> public void addFailToSendNoConnectRule(TransportService transportService);1541092382;Adds a rule that will cause every send request to fail, and each new connect since the rule_is added to fail as well.;public void addFailToSendNoConnectRule(TransportService transportService) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addFailToSendNoConnectRule(transportAddress)__        }_    };adds,a,rule,that,will,cause,every,send,request,to,fail,and,each,new,connect,since,the,rule,is,added,to,fail,as,well;public,void,add,fail,to,send,no,connect,rule,transport,service,transport,service,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,fail,to,send,no,connect,rule,transport,address
MockTransportService -> public void addFailToSendNoConnectRule(TransportService transportService);1542270280;Adds a rule that will cause every send request to fail, and each new connect since the rule_is added to fail as well.;public void addFailToSendNoConnectRule(TransportService transportService) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addFailToSendNoConnectRule(transportAddress)__        }_    };adds,a,rule,that,will,cause,every,send,request,to,fail,and,each,new,connect,since,the,rule,is,added,to,fail,as,well;public,void,add,fail,to,send,no,connect,rule,transport,service,transport,service,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,fail,to,send,no,connect,rule,transport,address
MockTransportService -> public void addFailToSendNoConnectRule(TransportService transportService);1542646292;Adds a rule that will cause every send request to fail, and each new connect since the rule_is added to fail as well.;public void addFailToSendNoConnectRule(TransportService transportService) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addFailToSendNoConnectRule(transportAddress)__        }_    };adds,a,rule,that,will,cause,every,send,request,to,fail,and,each,new,connect,since,the,rule,is,added,to,fail,as,well;public,void,add,fail,to,send,no,connect,rule,transport,service,transport,service,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,fail,to,send,no,connect,rule,transport,address
MockTransportService -> public void addFailToSendNoConnectRule(TransportService transportService);1543602642;Adds a rule that will cause every send request to fail, and each new connect since the rule_is added to fail as well.;public void addFailToSendNoConnectRule(TransportService transportService) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addFailToSendNoConnectRule(transportAddress)__        }_    };adds,a,rule,that,will,cause,every,send,request,to,fail,and,each,new,connect,since,the,rule,is,added,to,fail,as,well;public,void,add,fail,to,send,no,connect,rule,transport,service,transport,service,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,fail,to,send,no,connect,rule,transport,address
MockTransportService -> public void addFailToSendNoConnectRule(TransportService transportService);1544206631;Adds a rule that will cause every send request to fail, and each new connect since the rule_is added to fail as well.;public void addFailToSendNoConnectRule(TransportService transportService) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addFailToSendNoConnectRule(transportAddress)__        }_    };adds,a,rule,that,will,cause,every,send,request,to,fail,and,each,new,connect,since,the,rule,is,added,to,fail,as,well;public,void,add,fail,to,send,no,connect,rule,transport,service,transport,service,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,fail,to,send,no,connect,rule,transport,address
MockTransportService -> public void addFailToSendNoConnectRule(TransportService transportService);1544554541;Adds a rule that will cause every send request to fail, and each new connect since the rule_is added to fail as well.;public void addFailToSendNoConnectRule(TransportService transportService) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addFailToSendNoConnectRule(transportAddress)__        }_    };adds,a,rule,that,will,cause,every,send,request,to,fail,and,each,new,connect,since,the,rule,is,added,to,fail,as,well;public,void,add,fail,to,send,no,connect,rule,transport,service,transport,service,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,fail,to,send,no,connect,rule,transport,address
MockTransportService -> public void addFailToSendNoConnectRule(TransportService transportService);1544823664;Adds a rule that will cause every send request to fail, and each new connect since the rule_is added to fail as well.;public void addFailToSendNoConnectRule(TransportService transportService) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addFailToSendNoConnectRule(transportAddress)__        }_    };adds,a,rule,that,will,cause,every,send,request,to,fail,and,each,new,connect,since,the,rule,is,added,to,fail,as,well;public,void,add,fail,to,send,no,connect,rule,transport,service,transport,service,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,fail,to,send,no,connect,rule,transport,address
MockTransportService -> public void addFailToSendNoConnectRule(TransportService transportService);1548770891;Adds a rule that will cause every send request to fail, and each new connect since the rule_is added to fail as well.;public void addFailToSendNoConnectRule(TransportService transportService) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addFailToSendNoConnectRule(transportAddress)__        }_    };adds,a,rule,that,will,cause,every,send,request,to,fail,and,each,new,connect,since,the,rule,is,added,to,fail,as,well;public,void,add,fail,to,send,no,connect,rule,transport,service,transport,service,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,fail,to,send,no,connect,rule,transport,address
MockTransportService -> public void addFailToSendNoConnectRule(TransportService transportService);1548790146;Adds a rule that will cause every send request to fail, and each new connect since the rule_is added to fail as well.;public void addFailToSendNoConnectRule(TransportService transportService) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addFailToSendNoConnectRule(transportAddress)__        }_    };adds,a,rule,that,will,cause,every,send,request,to,fail,and,each,new,connect,since,the,rule,is,added,to,fail,as,well;public,void,add,fail,to,send,no,connect,rule,transport,service,transport,service,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,fail,to,send,no,connect,rule,transport,address
MockTransportService -> public void addFailToSendNoConnectRule(TransportService transportService);1548953505;Adds a rule that will cause every send request to fail, and each new connect since the rule_is added to fail as well.;public void addFailToSendNoConnectRule(TransportService transportService) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addFailToSendNoConnectRule(transportAddress)__        }_    };adds,a,rule,that,will,cause,every,send,request,to,fail,and,each,new,connect,since,the,rule,is,added,to,fail,as,well;public,void,add,fail,to,send,no,connect,rule,transport,service,transport,service,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,fail,to,send,no,connect,rule,transport,address
MockTransportService -> public void addFailToSendNoConnectRule(TransportService transportService);1550601141;Adds a rule that will cause every send request to fail, and each new connect since the rule_is added to fail as well.;public void addFailToSendNoConnectRule(TransportService transportService) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addFailToSendNoConnectRule(transportAddress)__        }_    };adds,a,rule,that,will,cause,every,send,request,to,fail,and,each,new,connect,since,the,rule,is,added,to,fail,as,well;public,void,add,fail,to,send,no,connect,rule,transport,service,transport,service,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,fail,to,send,no,connect,rule,transport,address
MockTransportService -> public void addFailToSendNoConnectRule(TransportService transportService);1551176390;Adds a rule that will cause every send request to fail, and each new connect since the rule_is added to fail as well.;public void addFailToSendNoConnectRule(TransportService transportService) {_        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            addFailToSendNoConnectRule(transportAddress)__        }_    };adds,a,rule,that,will,cause,every,send,request,to,fail,and,each,new,connect,since,the,rule,is,added,to,fail,as,well;public,void,add,fail,to,send,no,connect,rule,transport,service,transport,service,for,transport,address,transport,address,extract,transport,addresses,transport,service,add,fail,to,send,no,connect,rule,transport,address
MockTransportService -> ClearableTransport -> public abstract void clearRule()_;1524684173;Called by {@link #clearRule(TransportService)};public abstract void clearRule()_;called,by,link,clear,rule,transport,service;public,abstract,void,clear,rule
MockTransportService -> ClearableTransport -> public abstract void clearRule()_;1525162917;Called by {@link #clearRule(TransportService)};public abstract void clearRule()_;called,by,link,clear,rule,transport,service;public,abstract,void,clear,rule
MockTransportService -> ClearableTransport -> public abstract void clearRule()_;1531179852;Called by {@link #clearRule(TransportService)};public abstract void clearRule()_;called,by,link,clear,rule,transport,service;public,abstract,void,clear,rule
MockTransportService -> public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,                                 Function<BoundTransportAddress, DiscoveryNode> localNodeFactory,                                 @Nullable ClusterSettings clusterSettings, Set<String> taskHeaders);1524684173;Build the service.__@param clusterSettings if non null the {@linkplain TransportService} will register with the {@link ClusterSettings} for settings_updates for {@link #TRACE_LOG_EXCLUDE_SETTING} and {@link #TRACE_LOG_INCLUDE_SETTING}.;public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,_                                Function<BoundTransportAddress, DiscoveryNode> localNodeFactory,_                                @Nullable ClusterSettings clusterSettings, Set<String> taskHeaders) {_        super(settings, new LookupTestTransport(transport), threadPool, interceptor, localNodeFactory, clusterSettings,_            taskHeaders)__        this.original = transport__    };build,the,service,param,cluster,settings,if,non,null,the,linkplain,transport,service,will,register,with,the,link,cluster,settings,for,settings,updates,for,link,and,link;public,mock,transport,service,settings,settings,transport,transport,thread,pool,thread,pool,transport,interceptor,interceptor,function,bound,transport,address,discovery,node,local,node,factory,nullable,cluster,settings,cluster,settings,set,string,task,headers,super,settings,new,lookup,test,transport,transport,thread,pool,interceptor,local,node,factory,cluster,settings,task,headers,this,original,transport
MockTransportService -> public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,                                 Function<BoundTransportAddress, DiscoveryNode> localNodeFactory,                                 @Nullable ClusterSettings clusterSettings, Set<String> taskHeaders);1525162917;Build the service.__@param clusterSettings if non null the {@linkplain TransportService} will register with the {@link ClusterSettings} for settings_updates for {@link #TRACE_LOG_EXCLUDE_SETTING} and {@link #TRACE_LOG_INCLUDE_SETTING}.;public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,_                                Function<BoundTransportAddress, DiscoveryNode> localNodeFactory,_                                @Nullable ClusterSettings clusterSettings, Set<String> taskHeaders) {_        super(settings, new LookupTestTransport(transport), threadPool, interceptor, localNodeFactory, clusterSettings,_            taskHeaders)__        this.original = transport__    };build,the,service,param,cluster,settings,if,non,null,the,linkplain,transport,service,will,register,with,the,link,cluster,settings,for,settings,updates,for,link,and,link;public,mock,transport,service,settings,settings,transport,transport,thread,pool,thread,pool,transport,interceptor,interceptor,function,bound,transport,address,discovery,node,local,node,factory,nullable,cluster,settings,cluster,settings,set,string,task,headers,super,settings,new,lookup,test,transport,transport,thread,pool,interceptor,local,node,factory,cluster,settings,task,headers,this,original,transport
MockTransportService -> public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,                                 Function<BoundTransportAddress, DiscoveryNode> localNodeFactory,                                 @Nullable ClusterSettings clusterSettings, Set<String> taskHeaders);1531179852;Build the service.__@param clusterSettings if non null the {@linkplain TransportService} will register with the {@link ClusterSettings} for settings_updates for {@link #TRACE_LOG_EXCLUDE_SETTING} and {@link #TRACE_LOG_INCLUDE_SETTING}.;public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,_                                Function<BoundTransportAddress, DiscoveryNode> localNodeFactory,_                                @Nullable ClusterSettings clusterSettings, Set<String> taskHeaders) {_        super(settings, new LookupTestTransport(transport), threadPool, interceptor, localNodeFactory, clusterSettings,_            taskHeaders)__        this.original = transport__    };build,the,service,param,cluster,settings,if,non,null,the,linkplain,transport,service,will,register,with,the,link,cluster,settings,for,settings,updates,for,link,and,link;public,mock,transport,service,settings,settings,transport,transport,thread,pool,thread,pool,transport,interceptor,interceptor,function,bound,transport,address,discovery,node,local,node,factory,nullable,cluster,settings,cluster,settings,set,string,task,headers,super,settings,new,lookup,test,transport,transport,thread,pool,interceptor,local,node,factory,cluster,settings,task,headers,this,original,transport
MockTransportService -> public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,                                 Function<BoundTransportAddress, DiscoveryNode> localNodeFactory,                                 @Nullable ClusterSettings clusterSettings, Set<String> taskHeaders);1534203100;Build the service.__@param clusterSettings if non null the {@linkplain TransportService} will register with the {@link ClusterSettings} for settings_updates for {@link #TRACE_LOG_EXCLUDE_SETTING} and {@link #TRACE_LOG_INCLUDE_SETTING}.;public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,_                                Function<BoundTransportAddress, DiscoveryNode> localNodeFactory,_                                @Nullable ClusterSettings clusterSettings, Set<String> taskHeaders) {_        this(settings, new StubbableTransport(transport), threadPool, interceptor, localNodeFactory, clusterSettings, taskHeaders)__    };build,the,service,param,cluster,settings,if,non,null,the,linkplain,transport,service,will,register,with,the,link,cluster,settings,for,settings,updates,for,link,and,link;public,mock,transport,service,settings,settings,transport,transport,thread,pool,thread,pool,transport,interceptor,interceptor,function,bound,transport,address,discovery,node,local,node,factory,nullable,cluster,settings,cluster,settings,set,string,task,headers,this,settings,new,stubbable,transport,transport,thread,pool,interceptor,local,node,factory,cluster,settings,task,headers
MockTransportService -> public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,                                 Function<BoundTransportAddress, DiscoveryNode> localNodeFactory,                                 @Nullable ClusterSettings clusterSettings, Set<String> taskHeaders);1534362961;Build the service.__@param clusterSettings if non null the {@linkplain TransportService} will register with the {@link ClusterSettings} for settings_updates for {@link #TRACE_LOG_EXCLUDE_SETTING} and {@link #TRACE_LOG_INCLUDE_SETTING}.;public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,_                                Function<BoundTransportAddress, DiscoveryNode> localNodeFactory,_                                @Nullable ClusterSettings clusterSettings, Set<String> taskHeaders) {_        this(settings, new StubbableTransport(transport), threadPool, interceptor, localNodeFactory, clusterSettings, taskHeaders)__    };build,the,service,param,cluster,settings,if,non,null,the,linkplain,transport,service,will,register,with,the,link,cluster,settings,for,settings,updates,for,link,and,link;public,mock,transport,service,settings,settings,transport,transport,thread,pool,thread,pool,transport,interceptor,interceptor,function,bound,transport,address,discovery,node,local,node,factory,nullable,cluster,settings,cluster,settings,set,string,task,headers,this,settings,new,stubbable,transport,transport,thread,pool,interceptor,local,node,factory,cluster,settings,task,headers
MockTransportService -> public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,                                 Function<BoundTransportAddress, DiscoveryNode> localNodeFactory,                                 @Nullable ClusterSettings clusterSettings, Set<String> taskHeaders);1535383145;Build the service.__@param clusterSettings if non null the {@linkplain TransportService} will register with the {@link ClusterSettings} for settings_updates for {@link #TRACE_LOG_EXCLUDE_SETTING} and {@link #TRACE_LOG_INCLUDE_SETTING}.;public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,_                                Function<BoundTransportAddress, DiscoveryNode> localNodeFactory,_                                @Nullable ClusterSettings clusterSettings, Set<String> taskHeaders) {_        this(settings, new StubbableTransport(transport), threadPool, interceptor, localNodeFactory, clusterSettings, taskHeaders)__    };build,the,service,param,cluster,settings,if,non,null,the,linkplain,transport,service,will,register,with,the,link,cluster,settings,for,settings,updates,for,link,and,link;public,mock,transport,service,settings,settings,transport,transport,thread,pool,thread,pool,transport,interceptor,interceptor,function,bound,transport,address,discovery,node,local,node,factory,nullable,cluster,settings,cluster,settings,set,string,task,headers,this,settings,new,stubbable,transport,transport,thread,pool,interceptor,local,node,factory,cluster,settings,task,headers
MockTransportService -> public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,                                 Function<BoundTransportAddress, DiscoveryNode> localNodeFactory,                                 @Nullable ClusterSettings clusterSettings, Set<String> taskHeaders);1541092382;Build the service.__@param clusterSettings if non null the {@linkplain TransportService} will register with the {@link ClusterSettings} for settings_updates for {@link #TRACE_LOG_EXCLUDE_SETTING} and {@link #TRACE_LOG_INCLUDE_SETTING}.;public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,_                                Function<BoundTransportAddress, DiscoveryNode> localNodeFactory,_                                @Nullable ClusterSettings clusterSettings, Set<String> taskHeaders) {_        this(settings, new StubbableTransport(transport), threadPool, interceptor, localNodeFactory, clusterSettings, taskHeaders)__    };build,the,service,param,cluster,settings,if,non,null,the,linkplain,transport,service,will,register,with,the,link,cluster,settings,for,settings,updates,for,link,and,link;public,mock,transport,service,settings,settings,transport,transport,thread,pool,thread,pool,transport,interceptor,interceptor,function,bound,transport,address,discovery,node,local,node,factory,nullable,cluster,settings,cluster,settings,set,string,task,headers,this,settings,new,stubbable,transport,transport,thread,pool,interceptor,local,node,factory,cluster,settings,task,headers
MockTransportService -> public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,                                 Function<BoundTransportAddress, DiscoveryNode> localNodeFactory,                                 @Nullable ClusterSettings clusterSettings, Set<String> taskHeaders);1542270280;Build the service.__@param clusterSettings if non null the {@linkplain TransportService} will register with the {@link ClusterSettings} for settings_updates for {@link #TRACE_LOG_EXCLUDE_SETTING} and {@link #TRACE_LOG_INCLUDE_SETTING}.;public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,_                                Function<BoundTransportAddress, DiscoveryNode> localNodeFactory,_                                @Nullable ClusterSettings clusterSettings, Set<String> taskHeaders) {_        this(settings, new StubbableTransport(transport), threadPool, interceptor, localNodeFactory, clusterSettings, taskHeaders)__    };build,the,service,param,cluster,settings,if,non,null,the,linkplain,transport,service,will,register,with,the,link,cluster,settings,for,settings,updates,for,link,and,link;public,mock,transport,service,settings,settings,transport,transport,thread,pool,thread,pool,transport,interceptor,interceptor,function,bound,transport,address,discovery,node,local,node,factory,nullable,cluster,settings,cluster,settings,set,string,task,headers,this,settings,new,stubbable,transport,transport,thread,pool,interceptor,local,node,factory,cluster,settings,task,headers
MockTransportService -> public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,                                 Function<BoundTransportAddress, DiscoveryNode> localNodeFactory,                                 @Nullable ClusterSettings clusterSettings, Set<String> taskHeaders);1542646292;Build the service.__@param clusterSettings if non null the {@linkplain TransportService} will register with the {@link ClusterSettings} for settings_updates for {@link #TRACE_LOG_EXCLUDE_SETTING} and {@link #TRACE_LOG_INCLUDE_SETTING}.;public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,_                                Function<BoundTransportAddress, DiscoveryNode> localNodeFactory,_                                @Nullable ClusterSettings clusterSettings, Set<String> taskHeaders) {_        this(settings, new StubbableTransport(transport), threadPool, interceptor, localNodeFactory, clusterSettings, taskHeaders)__    };build,the,service,param,cluster,settings,if,non,null,the,linkplain,transport,service,will,register,with,the,link,cluster,settings,for,settings,updates,for,link,and,link;public,mock,transport,service,settings,settings,transport,transport,thread,pool,thread,pool,transport,interceptor,interceptor,function,bound,transport,address,discovery,node,local,node,factory,nullable,cluster,settings,cluster,settings,set,string,task,headers,this,settings,new,stubbable,transport,transport,thread,pool,interceptor,local,node,factory,cluster,settings,task,headers
MockTransportService -> public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,                                 Function<BoundTransportAddress, DiscoveryNode> localNodeFactory,                                 @Nullable ClusterSettings clusterSettings, Set<String> taskHeaders);1543602642;Build the service.__@param clusterSettings if non null the {@linkplain TransportService} will register with the {@link ClusterSettings} for settings_updates for {@link #TRACE_LOG_EXCLUDE_SETTING} and {@link #TRACE_LOG_INCLUDE_SETTING}.;public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,_                                Function<BoundTransportAddress, DiscoveryNode> localNodeFactory,_                                @Nullable ClusterSettings clusterSettings, Set<String> taskHeaders) {_        this(settings, new StubbableTransport(transport), threadPool, interceptor, localNodeFactory, clusterSettings, taskHeaders)__    };build,the,service,param,cluster,settings,if,non,null,the,linkplain,transport,service,will,register,with,the,link,cluster,settings,for,settings,updates,for,link,and,link;public,mock,transport,service,settings,settings,transport,transport,thread,pool,thread,pool,transport,interceptor,interceptor,function,bound,transport,address,discovery,node,local,node,factory,nullable,cluster,settings,cluster,settings,set,string,task,headers,this,settings,new,stubbable,transport,transport,thread,pool,interceptor,local,node,factory,cluster,settings,task,headers
MockTransportService -> public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,                                 Function<BoundTransportAddress, DiscoveryNode> localNodeFactory,                                 @Nullable ClusterSettings clusterSettings, Set<String> taskHeaders);1544206631;Build the service.__@param clusterSettings if non null the {@linkplain TransportService} will register with the {@link ClusterSettings} for settings_updates for {@link #TRACE_LOG_EXCLUDE_SETTING} and {@link #TRACE_LOG_INCLUDE_SETTING}.;public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,_                                Function<BoundTransportAddress, DiscoveryNode> localNodeFactory,_                                @Nullable ClusterSettings clusterSettings, Set<String> taskHeaders) {_        this(settings, new StubbableTransport(transport), threadPool, interceptor, localNodeFactory, clusterSettings, taskHeaders)__    };build,the,service,param,cluster,settings,if,non,null,the,linkplain,transport,service,will,register,with,the,link,cluster,settings,for,settings,updates,for,link,and,link;public,mock,transport,service,settings,settings,transport,transport,thread,pool,thread,pool,transport,interceptor,interceptor,function,bound,transport,address,discovery,node,local,node,factory,nullable,cluster,settings,cluster,settings,set,string,task,headers,this,settings,new,stubbable,transport,transport,thread,pool,interceptor,local,node,factory,cluster,settings,task,headers
MockTransportService -> public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,                                 Function<BoundTransportAddress, DiscoveryNode> localNodeFactory,                                 @Nullable ClusterSettings clusterSettings, Set<String> taskHeaders);1544554541;Build the service.__@param clusterSettings if non null the {@linkplain TransportService} will register with the {@link ClusterSettings} for settings_updates for {@link #TRACE_LOG_EXCLUDE_SETTING} and {@link #TRACE_LOG_INCLUDE_SETTING}.;public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,_                                Function<BoundTransportAddress, DiscoveryNode> localNodeFactory,_                                @Nullable ClusterSettings clusterSettings, Set<String> taskHeaders) {_        this(settings, new StubbableTransport(transport), threadPool, interceptor, localNodeFactory, clusterSettings, taskHeaders)__    };build,the,service,param,cluster,settings,if,non,null,the,linkplain,transport,service,will,register,with,the,link,cluster,settings,for,settings,updates,for,link,and,link;public,mock,transport,service,settings,settings,transport,transport,thread,pool,thread,pool,transport,interceptor,interceptor,function,bound,transport,address,discovery,node,local,node,factory,nullable,cluster,settings,cluster,settings,set,string,task,headers,this,settings,new,stubbable,transport,transport,thread,pool,interceptor,local,node,factory,cluster,settings,task,headers
MockTransportService -> public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,                                 Function<BoundTransportAddress, DiscoveryNode> localNodeFactory,                                 @Nullable ClusterSettings clusterSettings, Set<String> taskHeaders);1544823664;Build the service.__@param clusterSettings if non null the {@linkplain TransportService} will register with the {@link ClusterSettings} for settings_updates for {@link TransportSettings#TRACE_LOG_EXCLUDE_SETTING} and_{@link TransportSettings#TRACE_LOG_INCLUDE_SETTING}.;public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,_                                Function<BoundTransportAddress, DiscoveryNode> localNodeFactory,_                                @Nullable ClusterSettings clusterSettings, Set<String> taskHeaders) {_        this(settings, new StubbableTransport(transport), threadPool, interceptor, localNodeFactory, clusterSettings, taskHeaders)__    };build,the,service,param,cluster,settings,if,non,null,the,linkplain,transport,service,will,register,with,the,link,cluster,settings,for,settings,updates,for,link,transport,settings,and,link,transport,settings;public,mock,transport,service,settings,settings,transport,transport,thread,pool,thread,pool,transport,interceptor,interceptor,function,bound,transport,address,discovery,node,local,node,factory,nullable,cluster,settings,cluster,settings,set,string,task,headers,this,settings,new,stubbable,transport,transport,thread,pool,interceptor,local,node,factory,cluster,settings,task,headers
MockTransportService -> public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,                                 Function<BoundTransportAddress, DiscoveryNode> localNodeFactory,                                 @Nullable ClusterSettings clusterSettings, Set<String> taskHeaders);1548770891;Build the service.__@param clusterSettings if non null the {@linkplain TransportService} will register with the {@link ClusterSettings} for settings_updates for {@link TransportSettings#TRACE_LOG_EXCLUDE_SETTING} and_{@link TransportSettings#TRACE_LOG_INCLUDE_SETTING}.;public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,_                                Function<BoundTransportAddress, DiscoveryNode> localNodeFactory,_                                @Nullable ClusterSettings clusterSettings, Set<String> taskHeaders) {_        this(settings, new StubbableTransport(transport), threadPool, interceptor, localNodeFactory, clusterSettings, taskHeaders)__    };build,the,service,param,cluster,settings,if,non,null,the,linkplain,transport,service,will,register,with,the,link,cluster,settings,for,settings,updates,for,link,transport,settings,and,link,transport,settings;public,mock,transport,service,settings,settings,transport,transport,thread,pool,thread,pool,transport,interceptor,interceptor,function,bound,transport,address,discovery,node,local,node,factory,nullable,cluster,settings,cluster,settings,set,string,task,headers,this,settings,new,stubbable,transport,transport,thread,pool,interceptor,local,node,factory,cluster,settings,task,headers
MockTransportService -> public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,                                 Function<BoundTransportAddress, DiscoveryNode> localNodeFactory,                                 @Nullable ClusterSettings clusterSettings, Set<String> taskHeaders);1548790146;Build the service.__@param clusterSettings if non null the {@linkplain TransportService} will register with the {@link ClusterSettings} for settings_updates for {@link TransportSettings#TRACE_LOG_EXCLUDE_SETTING} and_{@link TransportSettings#TRACE_LOG_INCLUDE_SETTING}.;public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,_                                Function<BoundTransportAddress, DiscoveryNode> localNodeFactory,_                                @Nullable ClusterSettings clusterSettings, Set<String> taskHeaders) {_        this(settings, new StubbableTransport(transport), threadPool, interceptor, localNodeFactory, clusterSettings, taskHeaders)__    };build,the,service,param,cluster,settings,if,non,null,the,linkplain,transport,service,will,register,with,the,link,cluster,settings,for,settings,updates,for,link,transport,settings,and,link,transport,settings;public,mock,transport,service,settings,settings,transport,transport,thread,pool,thread,pool,transport,interceptor,interceptor,function,bound,transport,address,discovery,node,local,node,factory,nullable,cluster,settings,cluster,settings,set,string,task,headers,this,settings,new,stubbable,transport,transport,thread,pool,interceptor,local,node,factory,cluster,settings,task,headers
MockTransportService -> public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,                                 Function<BoundTransportAddress, DiscoveryNode> localNodeFactory,                                 @Nullable ClusterSettings clusterSettings, Set<String> taskHeaders);1548953505;Build the service.__@param clusterSettings if non null the {@linkplain TransportService} will register with the {@link ClusterSettings} for settings_updates for {@link TransportSettings#TRACE_LOG_EXCLUDE_SETTING} and_{@link TransportSettings#TRACE_LOG_INCLUDE_SETTING}.;public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,_                                Function<BoundTransportAddress, DiscoveryNode> localNodeFactory,_                                @Nullable ClusterSettings clusterSettings, Set<String> taskHeaders) {_        this(settings, new StubbableTransport(transport), threadPool, interceptor, localNodeFactory, clusterSettings, taskHeaders)__    };build,the,service,param,cluster,settings,if,non,null,the,linkplain,transport,service,will,register,with,the,link,cluster,settings,for,settings,updates,for,link,transport,settings,and,link,transport,settings;public,mock,transport,service,settings,settings,transport,transport,thread,pool,thread,pool,transport,interceptor,interceptor,function,bound,transport,address,discovery,node,local,node,factory,nullable,cluster,settings,cluster,settings,set,string,task,headers,this,settings,new,stubbable,transport,transport,thread,pool,interceptor,local,node,factory,cluster,settings,task,headers
MockTransportService -> public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,                                 Function<BoundTransportAddress, DiscoveryNode> localNodeFactory,                                 @Nullable ClusterSettings clusterSettings, Set<String> taskHeaders);1550601141;Build the service.__@param clusterSettings if non null the {@linkplain TransportService} will register with the {@link ClusterSettings} for settings_updates for {@link TransportSettings#TRACE_LOG_EXCLUDE_SETTING} and_{@link TransportSettings#TRACE_LOG_INCLUDE_SETTING}.;public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,_                                Function<BoundTransportAddress, DiscoveryNode> localNodeFactory,_                                @Nullable ClusterSettings clusterSettings, Set<String> taskHeaders) {_        this(settings, new StubbableTransport(transport), threadPool, interceptor, localNodeFactory, clusterSettings, taskHeaders)__    };build,the,service,param,cluster,settings,if,non,null,the,linkplain,transport,service,will,register,with,the,link,cluster,settings,for,settings,updates,for,link,transport,settings,and,link,transport,settings;public,mock,transport,service,settings,settings,transport,transport,thread,pool,thread,pool,transport,interceptor,interceptor,function,bound,transport,address,discovery,node,local,node,factory,nullable,cluster,settings,cluster,settings,set,string,task,headers,this,settings,new,stubbable,transport,transport,thread,pool,interceptor,local,node,factory,cluster,settings,task,headers
MockTransportService -> public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,                                 Function<BoundTransportAddress, DiscoveryNode> localNodeFactory,                                 @Nullable ClusterSettings clusterSettings, Set<String> taskHeaders);1551176390;Build the service.__@param clusterSettings if non null the {@linkplain TransportService} will register with the {@link ClusterSettings} for settings_updates for {@link TransportSettings#TRACE_LOG_EXCLUDE_SETTING} and_{@link TransportSettings#TRACE_LOG_INCLUDE_SETTING}.;public MockTransportService(Settings settings, Transport transport, ThreadPool threadPool, TransportInterceptor interceptor,_                                Function<BoundTransportAddress, DiscoveryNode> localNodeFactory,_                                @Nullable ClusterSettings clusterSettings, Set<String> taskHeaders) {_        this(settings, new StubbableTransport(transport), threadPool, interceptor, localNodeFactory, clusterSettings, taskHeaders)__    };build,the,service,param,cluster,settings,if,non,null,the,linkplain,transport,service,will,register,with,the,link,cluster,settings,for,settings,updates,for,link,transport,settings,and,link,transport,settings;public,mock,transport,service,settings,settings,transport,transport,thread,pool,thread,pool,transport,interceptor,interceptor,function,bound,transport,address,discovery,node,local,node,factory,nullable,cluster,settings,cluster,settings,set,string,task,headers,this,settings,new,stubbable,transport,transport,thread,pool,interceptor,local,node,factory,cluster,settings,task,headers
MockTransportService -> public boolean addGetConnectionBehavior(StubbableConnectionManager.GetConnectionBehavior behavior);1534203100;Adds a get connection behavior that is the default get connection behavior.__@return {@code true} if no default get connection behavior was registered.;public boolean addGetConnectionBehavior(StubbableConnectionManager.GetConnectionBehavior behavior) {_        return connectionManager().setDefaultConnectBehavior(behavior)__    };adds,a,get,connection,behavior,that,is,the,default,get,connection,behavior,return,code,true,if,no,default,get,connection,behavior,was,registered;public,boolean,add,get,connection,behavior,stubbable,connection,manager,get,connection,behavior,behavior,return,connection,manager,set,default,connect,behavior,behavior
MockTransportService -> public boolean addGetConnectionBehavior(StubbableConnectionManager.GetConnectionBehavior behavior);1534362961;Adds a get connection behavior that is the default get connection behavior.__@return {@code true} if no default get connection behavior was registered.;public boolean addGetConnectionBehavior(StubbableConnectionManager.GetConnectionBehavior behavior) {_        return connectionManager().setDefaultConnectBehavior(behavior)__    };adds,a,get,connection,behavior,that,is,the,default,get,connection,behavior,return,code,true,if,no,default,get,connection,behavior,was,registered;public,boolean,add,get,connection,behavior,stubbable,connection,manager,get,connection,behavior,behavior,return,connection,manager,set,default,connect,behavior,behavior
MockTransportService -> public boolean addGetConnectionBehavior(StubbableConnectionManager.GetConnectionBehavior behavior);1535383145;Adds a get connection behavior that is the default get connection behavior.__@return {@code true} if no default get connection behavior was registered.;public boolean addGetConnectionBehavior(StubbableConnectionManager.GetConnectionBehavior behavior) {_        return connectionManager().setDefaultConnectBehavior(behavior)__    };adds,a,get,connection,behavior,that,is,the,default,get,connection,behavior,return,code,true,if,no,default,get,connection,behavior,was,registered;public,boolean,add,get,connection,behavior,stubbable,connection,manager,get,connection,behavior,behavior,return,connection,manager,set,default,connect,behavior,behavior
MockTransportService -> public boolean addGetConnectionBehavior(StubbableConnectionManager.GetConnectionBehavior behavior);1541092382;Adds a get connection behavior that is the default get connection behavior.__@return {@code true} if no default get connection behavior was registered.;public boolean addGetConnectionBehavior(StubbableConnectionManager.GetConnectionBehavior behavior) {_        return connectionManager().setDefaultConnectBehavior(behavior)__    };adds,a,get,connection,behavior,that,is,the,default,get,connection,behavior,return,code,true,if,no,default,get,connection,behavior,was,registered;public,boolean,add,get,connection,behavior,stubbable,connection,manager,get,connection,behavior,behavior,return,connection,manager,set,default,connect,behavior,behavior
MockTransportService -> public boolean addGetConnectionBehavior(StubbableConnectionManager.GetConnectionBehavior behavior);1542270280;Adds a get connection behavior that is the default get connection behavior.__@return {@code true} if no default get connection behavior was registered.;public boolean addGetConnectionBehavior(StubbableConnectionManager.GetConnectionBehavior behavior) {_        return connectionManager().setDefaultConnectBehavior(behavior)__    };adds,a,get,connection,behavior,that,is,the,default,get,connection,behavior,return,code,true,if,no,default,get,connection,behavior,was,registered;public,boolean,add,get,connection,behavior,stubbable,connection,manager,get,connection,behavior,behavior,return,connection,manager,set,default,connect,behavior,behavior
MockTransportService -> public boolean addGetConnectionBehavior(StubbableConnectionManager.GetConnectionBehavior behavior);1542646292;Adds a get connection behavior that is the default get connection behavior.__@return {@code true} if no default get connection behavior was registered.;public boolean addGetConnectionBehavior(StubbableConnectionManager.GetConnectionBehavior behavior) {_        return connectionManager().setDefaultConnectBehavior(behavior)__    };adds,a,get,connection,behavior,that,is,the,default,get,connection,behavior,return,code,true,if,no,default,get,connection,behavior,was,registered;public,boolean,add,get,connection,behavior,stubbable,connection,manager,get,connection,behavior,behavior,return,connection,manager,set,default,connect,behavior,behavior
MockTransportService -> public boolean addGetConnectionBehavior(StubbableConnectionManager.GetConnectionBehavior behavior);1543602642;Adds a get connection behavior that is the default get connection behavior.__@return {@code true} if no default get connection behavior was registered.;public boolean addGetConnectionBehavior(StubbableConnectionManager.GetConnectionBehavior behavior) {_        return connectionManager().setDefaultGetConnectionBehavior(behavior)__    };adds,a,get,connection,behavior,that,is,the,default,get,connection,behavior,return,code,true,if,no,default,get,connection,behavior,was,registered;public,boolean,add,get,connection,behavior,stubbable,connection,manager,get,connection,behavior,behavior,return,connection,manager,set,default,get,connection,behavior,behavior
MockTransportService -> public boolean addGetConnectionBehavior(StubbableConnectionManager.GetConnectionBehavior behavior);1544206631;Adds a get connection behavior that is the default get connection behavior.__@return {@code true} if no default get connection behavior was registered.;public boolean addGetConnectionBehavior(StubbableConnectionManager.GetConnectionBehavior behavior) {_        return connectionManager().setDefaultGetConnectionBehavior(behavior)__    };adds,a,get,connection,behavior,that,is,the,default,get,connection,behavior,return,code,true,if,no,default,get,connection,behavior,was,registered;public,boolean,add,get,connection,behavior,stubbable,connection,manager,get,connection,behavior,behavior,return,connection,manager,set,default,get,connection,behavior,behavior
MockTransportService -> public boolean addGetConnectionBehavior(StubbableConnectionManager.GetConnectionBehavior behavior);1544554541;Adds a get connection behavior that is the default get connection behavior.__@return {@code true} if no default get connection behavior was registered.;public boolean addGetConnectionBehavior(StubbableConnectionManager.GetConnectionBehavior behavior) {_        return connectionManager().setDefaultGetConnectionBehavior(behavior)__    };adds,a,get,connection,behavior,that,is,the,default,get,connection,behavior,return,code,true,if,no,default,get,connection,behavior,was,registered;public,boolean,add,get,connection,behavior,stubbable,connection,manager,get,connection,behavior,behavior,return,connection,manager,set,default,get,connection,behavior,behavior
MockTransportService -> public boolean addGetConnectionBehavior(StubbableConnectionManager.GetConnectionBehavior behavior);1544823664;Adds a get connection behavior that is the default get connection behavior.__@return {@code true} if no default get connection behavior was registered.;public boolean addGetConnectionBehavior(StubbableConnectionManager.GetConnectionBehavior behavior) {_        return connectionManager().setDefaultGetConnectionBehavior(behavior)__    };adds,a,get,connection,behavior,that,is,the,default,get,connection,behavior,return,code,true,if,no,default,get,connection,behavior,was,registered;public,boolean,add,get,connection,behavior,stubbable,connection,manager,get,connection,behavior,behavior,return,connection,manager,set,default,get,connection,behavior,behavior
MockTransportService -> public boolean addGetConnectionBehavior(StubbableConnectionManager.GetConnectionBehavior behavior);1548770891;Adds a get connection behavior that is the default get connection behavior.__@return {@code true} if no default get connection behavior was registered.;public boolean addGetConnectionBehavior(StubbableConnectionManager.GetConnectionBehavior behavior) {_        return connectionManager().setDefaultGetConnectionBehavior(behavior)__    };adds,a,get,connection,behavior,that,is,the,default,get,connection,behavior,return,code,true,if,no,default,get,connection,behavior,was,registered;public,boolean,add,get,connection,behavior,stubbable,connection,manager,get,connection,behavior,behavior,return,connection,manager,set,default,get,connection,behavior,behavior
MockTransportService -> public boolean addGetConnectionBehavior(StubbableConnectionManager.GetConnectionBehavior behavior);1548790146;Adds a get connection behavior that is the default get connection behavior.__@return {@code true} if no default get connection behavior was registered.;public boolean addGetConnectionBehavior(StubbableConnectionManager.GetConnectionBehavior behavior) {_        return connectionManager().setDefaultGetConnectionBehavior(behavior)__    };adds,a,get,connection,behavior,that,is,the,default,get,connection,behavior,return,code,true,if,no,default,get,connection,behavior,was,registered;public,boolean,add,get,connection,behavior,stubbable,connection,manager,get,connection,behavior,behavior,return,connection,manager,set,default,get,connection,behavior,behavior
MockTransportService -> public boolean addGetConnectionBehavior(StubbableConnectionManager.GetConnectionBehavior behavior);1548953505;Adds a get connection behavior that is the default get connection behavior.__@return {@code true} if no default get connection behavior was registered.;public boolean addGetConnectionBehavior(StubbableConnectionManager.GetConnectionBehavior behavior) {_        return connectionManager().setDefaultGetConnectionBehavior(behavior)__    };adds,a,get,connection,behavior,that,is,the,default,get,connection,behavior,return,code,true,if,no,default,get,connection,behavior,was,registered;public,boolean,add,get,connection,behavior,stubbable,connection,manager,get,connection,behavior,behavior,return,connection,manager,set,default,get,connection,behavior,behavior
MockTransportService -> public boolean addGetConnectionBehavior(StubbableConnectionManager.GetConnectionBehavior behavior);1550601141;Adds a get connection behavior that is the default get connection behavior.__@return {@code true} if no default get connection behavior was registered.;public boolean addGetConnectionBehavior(StubbableConnectionManager.GetConnectionBehavior behavior) {_        return connectionManager().setDefaultGetConnectionBehavior(behavior)__    };adds,a,get,connection,behavior,that,is,the,default,get,connection,behavior,return,code,true,if,no,default,get,connection,behavior,was,registered;public,boolean,add,get,connection,behavior,stubbable,connection,manager,get,connection,behavior,behavior,return,connection,manager,set,default,get,connection,behavior,behavior
MockTransportService -> public boolean addGetConnectionBehavior(StubbableConnectionManager.GetConnectionBehavior behavior);1551176390;Adds a get connection behavior that is the default get connection behavior.__@return {@code true} if no default get connection behavior was registered.;public boolean addGetConnectionBehavior(StubbableConnectionManager.GetConnectionBehavior behavior) {_        return connectionManager().setDefaultGetConnectionBehavior(behavior)__    };adds,a,get,connection,behavior,that,is,the,default,get,connection,behavior,return,code,true,if,no,default,get,connection,behavior,was,registered;public,boolean,add,get,connection,behavior,stubbable,connection,manager,get,connection,behavior,behavior,return,connection,manager,set,default,get,connection,behavior,behavior
MockTransportService -> public void clearRule(TransportAddress transportAddress);1524684173;Clears the rule associated with the provided transport address.;public void clearRule(TransportAddress transportAddress) {_        Transport transport = transport().transports.remove(transportAddress)__        if (transport instanceof ClearableTransport) {_            ((ClearableTransport) transport).clearRule()__        }_    };clears,the,rule,associated,with,the,provided,transport,address;public,void,clear,rule,transport,address,transport,address,transport,transport,transport,transports,remove,transport,address,if,transport,instanceof,clearable,transport,clearable,transport,transport,clear,rule
MockTransportService -> public void clearRule(TransportAddress transportAddress);1525162917;Clears the rule associated with the provided transport address.;public void clearRule(TransportAddress transportAddress) {_        Transport transport = transport().transports.remove(transportAddress)__        if (transport instanceof ClearableTransport) {_            ((ClearableTransport) transport).clearRule()__        }_    };clears,the,rule,associated,with,the,provided,transport,address;public,void,clear,rule,transport,address,transport,address,transport,transport,transport,transports,remove,transport,address,if,transport,instanceof,clearable,transport,clearable,transport,transport,clear,rule
MockTransportService -> public void clearRule(TransportAddress transportAddress);1531179852;Clears the rule associated with the provided transport address.;public void clearRule(TransportAddress transportAddress) {_        Transport transport = transport().transports.remove(transportAddress)__        if (transport instanceof ClearableTransport) {_            ((ClearableTransport) transport).clearRule()__        }_    };clears,the,rule,associated,with,the,provided,transport,address;public,void,clear,rule,transport,address,transport,address,transport,transport,transport,transports,remove,transport,address,if,transport,instanceof,clearable,transport,clearable,transport,transport,clear,rule
MockTransportService -> public void clearRule(TransportAddress transportAddress);1534203100;Clears the rule associated with the provided delegate address.;public void clearRule(TransportAddress transportAddress) {_        transport().clearBehavior(transportAddress)__        connectionManager().clearBehavior(transportAddress)__    };clears,the,rule,associated,with,the,provided,delegate,address;public,void,clear,rule,transport,address,transport,address,transport,clear,behavior,transport,address,connection,manager,clear,behavior,transport,address
MockTransportService -> public void clearRule(TransportAddress transportAddress);1534362961;Clears the rule associated with the provided delegate address.;public void clearRule(TransportAddress transportAddress) {_        transport().clearBehavior(transportAddress)__        connectionManager().clearBehavior(transportAddress)__    };clears,the,rule,associated,with,the,provided,delegate,address;public,void,clear,rule,transport,address,transport,address,transport,clear,behavior,transport,address,connection,manager,clear,behavior,transport,address
MockTransportService -> public void clearRule(TransportAddress transportAddress);1535383145;Clears the rule associated with the provided delegate address.;public void clearRule(TransportAddress transportAddress) {_        transport().clearBehavior(transportAddress)__        connectionManager().clearBehavior(transportAddress)__    };clears,the,rule,associated,with,the,provided,delegate,address;public,void,clear,rule,transport,address,transport,address,transport,clear,behavior,transport,address,connection,manager,clear,behavior,transport,address
MockTransportService -> public void clearRule(TransportAddress transportAddress);1541092382;Clears the rule associated with the provided delegate address.;public void clearRule(TransportAddress transportAddress) {_        transport().clearBehavior(transportAddress)__        connectionManager().clearBehavior(transportAddress)__    };clears,the,rule,associated,with,the,provided,delegate,address;public,void,clear,rule,transport,address,transport,address,transport,clear,behavior,transport,address,connection,manager,clear,behavior,transport,address
MockTransportService -> public void clearRule(TransportAddress transportAddress);1542270280;Clears the rule associated with the provided delegate address.;public void clearRule(TransportAddress transportAddress) {_        transport().clearBehavior(transportAddress)__        connectionManager().clearBehavior(transportAddress)__    };clears,the,rule,associated,with,the,provided,delegate,address;public,void,clear,rule,transport,address,transport,address,transport,clear,behavior,transport,address,connection,manager,clear,behavior,transport,address
MockTransportService -> public void clearRule(TransportAddress transportAddress);1542646292;Clears the rule associated with the provided delegate address.;public void clearRule(TransportAddress transportAddress) {_        transport().clearBehavior(transportAddress)__        connectionManager().clearBehavior(transportAddress)__    };clears,the,rule,associated,with,the,provided,delegate,address;public,void,clear,rule,transport,address,transport,address,transport,clear,behavior,transport,address,connection,manager,clear,behavior,transport,address
MockTransportService -> public void clearRule(TransportAddress transportAddress);1543602642;Clears the rule associated with the provided delegate address.;public void clearRule(TransportAddress transportAddress) {_        transport().clearBehavior(transportAddress)__        connectionManager().clearBehavior(transportAddress)__    };clears,the,rule,associated,with,the,provided,delegate,address;public,void,clear,rule,transport,address,transport,address,transport,clear,behavior,transport,address,connection,manager,clear,behavior,transport,address
MockTransportService -> public void clearRule(TransportAddress transportAddress);1544206631;Clears the rule associated with the provided delegate address.;public void clearRule(TransportAddress transportAddress) {_        transport().clearBehavior(transportAddress)__        connectionManager().clearBehavior(transportAddress)__    };clears,the,rule,associated,with,the,provided,delegate,address;public,void,clear,rule,transport,address,transport,address,transport,clear,behavior,transport,address,connection,manager,clear,behavior,transport,address
MockTransportService -> public void clearRule(TransportAddress transportAddress);1544554541;Clears the rule associated with the provided delegate address.;public void clearRule(TransportAddress transportAddress) {_        transport().clearBehavior(transportAddress)__        connectionManager().clearBehavior(transportAddress)__    };clears,the,rule,associated,with,the,provided,delegate,address;public,void,clear,rule,transport,address,transport,address,transport,clear,behavior,transport,address,connection,manager,clear,behavior,transport,address
MockTransportService -> public void clearRule(TransportAddress transportAddress);1544823664;Clears the rule associated with the provided delegate address.;public void clearRule(TransportAddress transportAddress) {_        transport().clearBehavior(transportAddress)__        connectionManager().clearBehavior(transportAddress)__    };clears,the,rule,associated,with,the,provided,delegate,address;public,void,clear,rule,transport,address,transport,address,transport,clear,behavior,transport,address,connection,manager,clear,behavior,transport,address
MockTransportService -> public void clearRule(TransportAddress transportAddress);1548770891;Clears the rule associated with the provided delegate address.;public void clearRule(TransportAddress transportAddress) {_        transport().clearBehavior(transportAddress)__        connectionManager().clearBehavior(transportAddress)__    };clears,the,rule,associated,with,the,provided,delegate,address;public,void,clear,rule,transport,address,transport,address,transport,clear,behavior,transport,address,connection,manager,clear,behavior,transport,address
MockTransportService -> public void clearRule(TransportAddress transportAddress);1548790146;Clears the rule associated with the provided delegate address.;public void clearRule(TransportAddress transportAddress) {_        transport().clearBehavior(transportAddress)__        connectionManager().clearBehavior(transportAddress)__    };clears,the,rule,associated,with,the,provided,delegate,address;public,void,clear,rule,transport,address,transport,address,transport,clear,behavior,transport,address,connection,manager,clear,behavior,transport,address
MockTransportService -> public void clearRule(TransportAddress transportAddress);1548953505;Clears the rule associated with the provided delegate address.;public void clearRule(TransportAddress transportAddress) {_        transport().clearBehavior(transportAddress)__        connectionManager().clearBehavior(transportAddress)__    };clears,the,rule,associated,with,the,provided,delegate,address;public,void,clear,rule,transport,address,transport,address,transport,clear,behavior,transport,address,connection,manager,clear,behavior,transport,address
MockTransportService -> public void clearRule(TransportAddress transportAddress);1550601141;Clears the rule associated with the provided delegate address.;public void clearRule(TransportAddress transportAddress) {_        transport().clearBehavior(transportAddress)__        connectionManager().clearBehavior(transportAddress)__    };clears,the,rule,associated,with,the,provided,delegate,address;public,void,clear,rule,transport,address,transport,address,transport,clear,behavior,transport,address,connection,manager,clear,behavior,transport,address
MockTransportService -> public void clearRule(TransportAddress transportAddress);1551176390;Clears the rule associated with the provided delegate address.;public void clearRule(TransportAddress transportAddress) {_        transport().clearBehavior(transportAddress)__        connectionManager().clearBehavior(transportAddress)__    };clears,the,rule,associated,with,the,provided,delegate,address;public,void,clear,rule,transport,address,transport,address,transport,clear,behavior,transport,address,connection,manager,clear,behavior,transport,address
MockTransportService -> public boolean addGetConnectionBehavior(TransportService transportService, StubbableConnectionManager.GetConnectionBehavior behavior);1534203100;Adds a new get connection behavior that is used for communication with the given delegate service.__@return {@code true} if no other get connection behavior was registered for any of the addresses bound by delegate service.;public boolean addGetConnectionBehavior(TransportService transportService, StubbableConnectionManager.GetConnectionBehavior behavior) {_        boolean noRegistered = true__        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            noRegistered &= addGetConnectionBehavior(transportAddress, behavior)__        }_        return noRegistered__    };adds,a,new,get,connection,behavior,that,is,used,for,communication,with,the,given,delegate,service,return,code,true,if,no,other,get,connection,behavior,was,registered,for,any,of,the,addresses,bound,by,delegate,service;public,boolean,add,get,connection,behavior,transport,service,transport,service,stubbable,connection,manager,get,connection,behavior,behavior,boolean,no,registered,true,for,transport,address,transport,address,extract,transport,addresses,transport,service,no,registered,add,get,connection,behavior,transport,address,behavior,return,no,registered
MockTransportService -> public boolean addGetConnectionBehavior(TransportService transportService, StubbableConnectionManager.GetConnectionBehavior behavior);1534362961;Adds a new get connection behavior that is used for communication with the given delegate service.__@return {@code true} if no other get connection behavior was registered for any of the addresses bound by delegate service.;public boolean addGetConnectionBehavior(TransportService transportService, StubbableConnectionManager.GetConnectionBehavior behavior) {_        boolean noRegistered = true__        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            noRegistered &= addGetConnectionBehavior(transportAddress, behavior)__        }_        return noRegistered__    };adds,a,new,get,connection,behavior,that,is,used,for,communication,with,the,given,delegate,service,return,code,true,if,no,other,get,connection,behavior,was,registered,for,any,of,the,addresses,bound,by,delegate,service;public,boolean,add,get,connection,behavior,transport,service,transport,service,stubbable,connection,manager,get,connection,behavior,behavior,boolean,no,registered,true,for,transport,address,transport,address,extract,transport,addresses,transport,service,no,registered,add,get,connection,behavior,transport,address,behavior,return,no,registered
MockTransportService -> public boolean addGetConnectionBehavior(TransportService transportService, StubbableConnectionManager.GetConnectionBehavior behavior);1535383145;Adds a new get connection behavior that is used for communication with the given delegate service.__@return {@code true} if no other get connection behavior was registered for any of the addresses bound by delegate service.;public boolean addGetConnectionBehavior(TransportService transportService, StubbableConnectionManager.GetConnectionBehavior behavior) {_        boolean noRegistered = true__        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            noRegistered &= addGetConnectionBehavior(transportAddress, behavior)__        }_        return noRegistered__    };adds,a,new,get,connection,behavior,that,is,used,for,communication,with,the,given,delegate,service,return,code,true,if,no,other,get,connection,behavior,was,registered,for,any,of,the,addresses,bound,by,delegate,service;public,boolean,add,get,connection,behavior,transport,service,transport,service,stubbable,connection,manager,get,connection,behavior,behavior,boolean,no,registered,true,for,transport,address,transport,address,extract,transport,addresses,transport,service,no,registered,add,get,connection,behavior,transport,address,behavior,return,no,registered
MockTransportService -> public boolean addGetConnectionBehavior(TransportService transportService, StubbableConnectionManager.GetConnectionBehavior behavior);1541092382;Adds a new get connection behavior that is used for communication with the given delegate service.__@return {@code true} if no other get connection behavior was registered for any of the addresses bound by delegate service.;public boolean addGetConnectionBehavior(TransportService transportService, StubbableConnectionManager.GetConnectionBehavior behavior) {_        boolean noRegistered = true__        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            noRegistered &= addGetConnectionBehavior(transportAddress, behavior)__        }_        return noRegistered__    };adds,a,new,get,connection,behavior,that,is,used,for,communication,with,the,given,delegate,service,return,code,true,if,no,other,get,connection,behavior,was,registered,for,any,of,the,addresses,bound,by,delegate,service;public,boolean,add,get,connection,behavior,transport,service,transport,service,stubbable,connection,manager,get,connection,behavior,behavior,boolean,no,registered,true,for,transport,address,transport,address,extract,transport,addresses,transport,service,no,registered,add,get,connection,behavior,transport,address,behavior,return,no,registered
MockTransportService -> public boolean addGetConnectionBehavior(TransportService transportService, StubbableConnectionManager.GetConnectionBehavior behavior);1542270280;Adds a new get connection behavior that is used for communication with the given delegate service.__@return {@code true} if no other get connection behavior was registered for any of the addresses bound by delegate service.;public boolean addGetConnectionBehavior(TransportService transportService, StubbableConnectionManager.GetConnectionBehavior behavior) {_        boolean noRegistered = true__        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            noRegistered &= addGetConnectionBehavior(transportAddress, behavior)__        }_        return noRegistered__    };adds,a,new,get,connection,behavior,that,is,used,for,communication,with,the,given,delegate,service,return,code,true,if,no,other,get,connection,behavior,was,registered,for,any,of,the,addresses,bound,by,delegate,service;public,boolean,add,get,connection,behavior,transport,service,transport,service,stubbable,connection,manager,get,connection,behavior,behavior,boolean,no,registered,true,for,transport,address,transport,address,extract,transport,addresses,transport,service,no,registered,add,get,connection,behavior,transport,address,behavior,return,no,registered
MockTransportService -> public boolean addGetConnectionBehavior(TransportService transportService, StubbableConnectionManager.GetConnectionBehavior behavior);1542646292;Adds a new get connection behavior that is used for communication with the given delegate service.__@return {@code true} if no other get connection behavior was registered for any of the addresses bound by delegate service.;public boolean addGetConnectionBehavior(TransportService transportService, StubbableConnectionManager.GetConnectionBehavior behavior) {_        boolean noRegistered = true__        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            noRegistered &= addGetConnectionBehavior(transportAddress, behavior)__        }_        return noRegistered__    };adds,a,new,get,connection,behavior,that,is,used,for,communication,with,the,given,delegate,service,return,code,true,if,no,other,get,connection,behavior,was,registered,for,any,of,the,addresses,bound,by,delegate,service;public,boolean,add,get,connection,behavior,transport,service,transport,service,stubbable,connection,manager,get,connection,behavior,behavior,boolean,no,registered,true,for,transport,address,transport,address,extract,transport,addresses,transport,service,no,registered,add,get,connection,behavior,transport,address,behavior,return,no,registered
MockTransportService -> public boolean addGetConnectionBehavior(TransportService transportService, StubbableConnectionManager.GetConnectionBehavior behavior);1543602642;Adds a new get connection behavior that is used for communication with the given delegate service.__@return {@code true} if no other get connection behavior was registered for any of the addresses bound by delegate service.;public boolean addGetConnectionBehavior(TransportService transportService, StubbableConnectionManager.GetConnectionBehavior behavior) {_        boolean noRegistered = true__        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            noRegistered &= addGetConnectionBehavior(transportAddress, behavior)__        }_        return noRegistered__    };adds,a,new,get,connection,behavior,that,is,used,for,communication,with,the,given,delegate,service,return,code,true,if,no,other,get,connection,behavior,was,registered,for,any,of,the,addresses,bound,by,delegate,service;public,boolean,add,get,connection,behavior,transport,service,transport,service,stubbable,connection,manager,get,connection,behavior,behavior,boolean,no,registered,true,for,transport,address,transport,address,extract,transport,addresses,transport,service,no,registered,add,get,connection,behavior,transport,address,behavior,return,no,registered
MockTransportService -> public boolean addGetConnectionBehavior(TransportService transportService, StubbableConnectionManager.GetConnectionBehavior behavior);1544206631;Adds a new get connection behavior that is used for communication with the given delegate service.__@return {@code true} if no other get connection behavior was registered for any of the addresses bound by delegate service.;public boolean addGetConnectionBehavior(TransportService transportService, StubbableConnectionManager.GetConnectionBehavior behavior) {_        boolean noRegistered = true__        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            noRegistered &= addGetConnectionBehavior(transportAddress, behavior)__        }_        return noRegistered__    };adds,a,new,get,connection,behavior,that,is,used,for,communication,with,the,given,delegate,service,return,code,true,if,no,other,get,connection,behavior,was,registered,for,any,of,the,addresses,bound,by,delegate,service;public,boolean,add,get,connection,behavior,transport,service,transport,service,stubbable,connection,manager,get,connection,behavior,behavior,boolean,no,registered,true,for,transport,address,transport,address,extract,transport,addresses,transport,service,no,registered,add,get,connection,behavior,transport,address,behavior,return,no,registered
MockTransportService -> public boolean addGetConnectionBehavior(TransportService transportService, StubbableConnectionManager.GetConnectionBehavior behavior);1544554541;Adds a new get connection behavior that is used for communication with the given delegate service.__@return {@code true} if no other get connection behavior was registered for any of the addresses bound by delegate service.;public boolean addGetConnectionBehavior(TransportService transportService, StubbableConnectionManager.GetConnectionBehavior behavior) {_        boolean noRegistered = true__        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            noRegistered &= addGetConnectionBehavior(transportAddress, behavior)__        }_        return noRegistered__    };adds,a,new,get,connection,behavior,that,is,used,for,communication,with,the,given,delegate,service,return,code,true,if,no,other,get,connection,behavior,was,registered,for,any,of,the,addresses,bound,by,delegate,service;public,boolean,add,get,connection,behavior,transport,service,transport,service,stubbable,connection,manager,get,connection,behavior,behavior,boolean,no,registered,true,for,transport,address,transport,address,extract,transport,addresses,transport,service,no,registered,add,get,connection,behavior,transport,address,behavior,return,no,registered
MockTransportService -> public boolean addGetConnectionBehavior(TransportService transportService, StubbableConnectionManager.GetConnectionBehavior behavior);1544823664;Adds a new get connection behavior that is used for communication with the given delegate service.__@return {@code true} if no other get connection behavior was registered for any of the addresses bound by delegate service.;public boolean addGetConnectionBehavior(TransportService transportService, StubbableConnectionManager.GetConnectionBehavior behavior) {_        boolean noRegistered = true__        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            noRegistered &= addGetConnectionBehavior(transportAddress, behavior)__        }_        return noRegistered__    };adds,a,new,get,connection,behavior,that,is,used,for,communication,with,the,given,delegate,service,return,code,true,if,no,other,get,connection,behavior,was,registered,for,any,of,the,addresses,bound,by,delegate,service;public,boolean,add,get,connection,behavior,transport,service,transport,service,stubbable,connection,manager,get,connection,behavior,behavior,boolean,no,registered,true,for,transport,address,transport,address,extract,transport,addresses,transport,service,no,registered,add,get,connection,behavior,transport,address,behavior,return,no,registered
MockTransportService -> public boolean addConnectBehavior(TransportAddress transportAddress, StubbableTransport.OpenConnectionBehavior connectBehavior);1534203100;Adds a new connect behavior that is used for creating connections with the given delegate address.__@return {@code true} if no other send behavior was registered for this address before.;public boolean addConnectBehavior(TransportAddress transportAddress, StubbableTransport.OpenConnectionBehavior connectBehavior) {_        return transport().addConnectBehavior(transportAddress, connectBehavior)__    };adds,a,new,connect,behavior,that,is,used,for,creating,connections,with,the,given,delegate,address,return,code,true,if,no,other,send,behavior,was,registered,for,this,address,before;public,boolean,add,connect,behavior,transport,address,transport,address,stubbable,transport,open,connection,behavior,connect,behavior,return,transport,add,connect,behavior,transport,address,connect,behavior
MockTransportService -> public boolean addConnectBehavior(TransportAddress transportAddress, StubbableTransport.OpenConnectionBehavior connectBehavior);1534362961;Adds a new connect behavior that is used for creating connections with the given delegate address.__@return {@code true} if no other send behavior was registered for this address before.;public boolean addConnectBehavior(TransportAddress transportAddress, StubbableTransport.OpenConnectionBehavior connectBehavior) {_        return transport().addConnectBehavior(transportAddress, connectBehavior)__    };adds,a,new,connect,behavior,that,is,used,for,creating,connections,with,the,given,delegate,address,return,code,true,if,no,other,send,behavior,was,registered,for,this,address,before;public,boolean,add,connect,behavior,transport,address,transport,address,stubbable,transport,open,connection,behavior,connect,behavior,return,transport,add,connect,behavior,transport,address,connect,behavior
MockTransportService -> public boolean addConnectBehavior(TransportAddress transportAddress, StubbableTransport.OpenConnectionBehavior connectBehavior);1535383145;Adds a new connect behavior that is used for creating connections with the given delegate address.__@return {@code true} if no other send behavior was registered for this address before.;public boolean addConnectBehavior(TransportAddress transportAddress, StubbableTransport.OpenConnectionBehavior connectBehavior) {_        return transport().addConnectBehavior(transportAddress, connectBehavior)__    };adds,a,new,connect,behavior,that,is,used,for,creating,connections,with,the,given,delegate,address,return,code,true,if,no,other,send,behavior,was,registered,for,this,address,before;public,boolean,add,connect,behavior,transport,address,transport,address,stubbable,transport,open,connection,behavior,connect,behavior,return,transport,add,connect,behavior,transport,address,connect,behavior
MockTransportService -> public boolean addConnectBehavior(TransportAddress transportAddress, StubbableTransport.OpenConnectionBehavior connectBehavior);1541092382;Adds a new connect behavior that is used for creating connections with the given delegate address.__@return {@code true} if no other send behavior was registered for this address before.;public boolean addConnectBehavior(TransportAddress transportAddress, StubbableTransport.OpenConnectionBehavior connectBehavior) {_        return transport().addConnectBehavior(transportAddress, connectBehavior)__    };adds,a,new,connect,behavior,that,is,used,for,creating,connections,with,the,given,delegate,address,return,code,true,if,no,other,send,behavior,was,registered,for,this,address,before;public,boolean,add,connect,behavior,transport,address,transport,address,stubbable,transport,open,connection,behavior,connect,behavior,return,transport,add,connect,behavior,transport,address,connect,behavior
MockTransportService -> public boolean addConnectBehavior(TransportAddress transportAddress, StubbableTransport.OpenConnectionBehavior connectBehavior);1542270280;Adds a new connect behavior that is used for creating connections with the given delegate address.__@return {@code true} if no other send behavior was registered for this address before.;public boolean addConnectBehavior(TransportAddress transportAddress, StubbableTransport.OpenConnectionBehavior connectBehavior) {_        return transport().addConnectBehavior(transportAddress, connectBehavior)__    };adds,a,new,connect,behavior,that,is,used,for,creating,connections,with,the,given,delegate,address,return,code,true,if,no,other,send,behavior,was,registered,for,this,address,before;public,boolean,add,connect,behavior,transport,address,transport,address,stubbable,transport,open,connection,behavior,connect,behavior,return,transport,add,connect,behavior,transport,address,connect,behavior
MockTransportService -> public boolean addConnectBehavior(TransportAddress transportAddress, StubbableTransport.OpenConnectionBehavior connectBehavior);1542646292;Adds a new connect behavior that is used for creating connections with the given delegate address.__@return {@code true} if no other send behavior was registered for this address before.;public boolean addConnectBehavior(TransportAddress transportAddress, StubbableTransport.OpenConnectionBehavior connectBehavior) {_        return transport().addConnectBehavior(transportAddress, connectBehavior)__    };adds,a,new,connect,behavior,that,is,used,for,creating,connections,with,the,given,delegate,address,return,code,true,if,no,other,send,behavior,was,registered,for,this,address,before;public,boolean,add,connect,behavior,transport,address,transport,address,stubbable,transport,open,connection,behavior,connect,behavior,return,transport,add,connect,behavior,transport,address,connect,behavior
MockTransportService -> public boolean addConnectBehavior(TransportAddress transportAddress, StubbableTransport.OpenConnectionBehavior connectBehavior);1543602642;Adds a new connect behavior that is used for creating connections with the given delegate address.__@return {@code true} if no other send behavior was registered for this address before.;public boolean addConnectBehavior(TransportAddress transportAddress, StubbableTransport.OpenConnectionBehavior connectBehavior) {_        return transport().addConnectBehavior(transportAddress, connectBehavior)__    };adds,a,new,connect,behavior,that,is,used,for,creating,connections,with,the,given,delegate,address,return,code,true,if,no,other,send,behavior,was,registered,for,this,address,before;public,boolean,add,connect,behavior,transport,address,transport,address,stubbable,transport,open,connection,behavior,connect,behavior,return,transport,add,connect,behavior,transport,address,connect,behavior
MockTransportService -> public boolean addConnectBehavior(TransportAddress transportAddress, StubbableTransport.OpenConnectionBehavior connectBehavior);1544206631;Adds a new connect behavior that is used for creating connections with the given delegate address.__@return {@code true} if no other send behavior was registered for this address before.;public boolean addConnectBehavior(TransportAddress transportAddress, StubbableTransport.OpenConnectionBehavior connectBehavior) {_        return transport().addConnectBehavior(transportAddress, connectBehavior)__    };adds,a,new,connect,behavior,that,is,used,for,creating,connections,with,the,given,delegate,address,return,code,true,if,no,other,send,behavior,was,registered,for,this,address,before;public,boolean,add,connect,behavior,transport,address,transport,address,stubbable,transport,open,connection,behavior,connect,behavior,return,transport,add,connect,behavior,transport,address,connect,behavior
MockTransportService -> public boolean addConnectBehavior(TransportAddress transportAddress, StubbableTransport.OpenConnectionBehavior connectBehavior);1544554541;Adds a new connect behavior that is used for creating connections with the given delegate address.__@return {@code true} if no other send behavior was registered for this address before.;public boolean addConnectBehavior(TransportAddress transportAddress, StubbableTransport.OpenConnectionBehavior connectBehavior) {_        return transport().addConnectBehavior(transportAddress, connectBehavior)__    };adds,a,new,connect,behavior,that,is,used,for,creating,connections,with,the,given,delegate,address,return,code,true,if,no,other,send,behavior,was,registered,for,this,address,before;public,boolean,add,connect,behavior,transport,address,transport,address,stubbable,transport,open,connection,behavior,connect,behavior,return,transport,add,connect,behavior,transport,address,connect,behavior
MockTransportService -> public boolean addConnectBehavior(TransportAddress transportAddress, StubbableTransport.OpenConnectionBehavior connectBehavior);1544823664;Adds a new connect behavior that is used for creating connections with the given delegate address.__@return {@code true} if no other send behavior was registered for this address before.;public boolean addConnectBehavior(TransportAddress transportAddress, StubbableTransport.OpenConnectionBehavior connectBehavior) {_        return transport().addConnectBehavior(transportAddress, connectBehavior)__    };adds,a,new,connect,behavior,that,is,used,for,creating,connections,with,the,given,delegate,address,return,code,true,if,no,other,send,behavior,was,registered,for,this,address,before;public,boolean,add,connect,behavior,transport,address,transport,address,stubbable,transport,open,connection,behavior,connect,behavior,return,transport,add,connect,behavior,transport,address,connect,behavior
MockTransportService -> public boolean addConnectBehavior(TransportAddress transportAddress, StubbableTransport.OpenConnectionBehavior connectBehavior);1548770891;Adds a new connect behavior that is used for creating connections with the given delegate address.__@return {@code true} if no other send behavior was registered for this address before.;public boolean addConnectBehavior(TransportAddress transportAddress, StubbableTransport.OpenConnectionBehavior connectBehavior) {_        return transport().addConnectBehavior(transportAddress, connectBehavior)__    };adds,a,new,connect,behavior,that,is,used,for,creating,connections,with,the,given,delegate,address,return,code,true,if,no,other,send,behavior,was,registered,for,this,address,before;public,boolean,add,connect,behavior,transport,address,transport,address,stubbable,transport,open,connection,behavior,connect,behavior,return,transport,add,connect,behavior,transport,address,connect,behavior
MockTransportService -> public boolean addConnectBehavior(TransportAddress transportAddress, StubbableTransport.OpenConnectionBehavior connectBehavior);1548790146;Adds a new connect behavior that is used for creating connections with the given delegate address.__@return {@code true} if no other send behavior was registered for this address before.;public boolean addConnectBehavior(TransportAddress transportAddress, StubbableTransport.OpenConnectionBehavior connectBehavior) {_        return transport().addConnectBehavior(transportAddress, connectBehavior)__    };adds,a,new,connect,behavior,that,is,used,for,creating,connections,with,the,given,delegate,address,return,code,true,if,no,other,send,behavior,was,registered,for,this,address,before;public,boolean,add,connect,behavior,transport,address,transport,address,stubbable,transport,open,connection,behavior,connect,behavior,return,transport,add,connect,behavior,transport,address,connect,behavior
MockTransportService -> public boolean addConnectBehavior(TransportAddress transportAddress, StubbableTransport.OpenConnectionBehavior connectBehavior);1548953505;Adds a new connect behavior that is used for creating connections with the given delegate address.__@return {@code true} if no other send behavior was registered for this address before.;public boolean addConnectBehavior(TransportAddress transportAddress, StubbableTransport.OpenConnectionBehavior connectBehavior) {_        return transport().addConnectBehavior(transportAddress, connectBehavior)__    };adds,a,new,connect,behavior,that,is,used,for,creating,connections,with,the,given,delegate,address,return,code,true,if,no,other,send,behavior,was,registered,for,this,address,before;public,boolean,add,connect,behavior,transport,address,transport,address,stubbable,transport,open,connection,behavior,connect,behavior,return,transport,add,connect,behavior,transport,address,connect,behavior
MockTransportService -> public boolean addConnectBehavior(TransportAddress transportAddress, StubbableTransport.OpenConnectionBehavior connectBehavior);1550601141;Adds a new connect behavior that is used for creating connections with the given delegate address.__@return {@code true} if no other send behavior was registered for this address before.;public boolean addConnectBehavior(TransportAddress transportAddress, StubbableTransport.OpenConnectionBehavior connectBehavior) {_        return transport().addConnectBehavior(transportAddress, connectBehavior)__    };adds,a,new,connect,behavior,that,is,used,for,creating,connections,with,the,given,delegate,address,return,code,true,if,no,other,send,behavior,was,registered,for,this,address,before;public,boolean,add,connect,behavior,transport,address,transport,address,stubbable,transport,open,connection,behavior,connect,behavior,return,transport,add,connect,behavior,transport,address,connect,behavior
MockTransportService -> public boolean addConnectBehavior(TransportAddress transportAddress, StubbableTransport.OpenConnectionBehavior connectBehavior);1551176390;Adds a new connect behavior that is used for creating connections with the given delegate address.__@return {@code true} if no other send behavior was registered for this address before.;public boolean addConnectBehavior(TransportAddress transportAddress, StubbableTransport.OpenConnectionBehavior connectBehavior) {_        return transport().addConnectBehavior(transportAddress, connectBehavior)__    };adds,a,new,connect,behavior,that,is,used,for,creating,connections,with,the,given,delegate,address,return,code,true,if,no,other,send,behavior,was,registered,for,this,address,before;public,boolean,add,connect,behavior,transport,address,transport,address,stubbable,transport,open,connection,behavior,connect,behavior,return,transport,add,connect,behavior,transport,address,connect,behavior
MockTransportService -> public boolean addConnectBehavior(TransportService transportService, StubbableTransport.OpenConnectionBehavior connectBehavior);1534203100;Adds a new connect behavior that is used for creating connections with the given delegate service.__@return {@code true} if no other send behavior was registered for any of the addresses bound by delegate service.;public boolean addConnectBehavior(TransportService transportService, StubbableTransport.OpenConnectionBehavior connectBehavior) {_        boolean noRegistered = true__        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            noRegistered &= addConnectBehavior(transportAddress, connectBehavior)__        }_        return noRegistered__    };adds,a,new,connect,behavior,that,is,used,for,creating,connections,with,the,given,delegate,service,return,code,true,if,no,other,send,behavior,was,registered,for,any,of,the,addresses,bound,by,delegate,service;public,boolean,add,connect,behavior,transport,service,transport,service,stubbable,transport,open,connection,behavior,connect,behavior,boolean,no,registered,true,for,transport,address,transport,address,extract,transport,addresses,transport,service,no,registered,add,connect,behavior,transport,address,connect,behavior,return,no,registered
MockTransportService -> public boolean addConnectBehavior(TransportService transportService, StubbableTransport.OpenConnectionBehavior connectBehavior);1534362961;Adds a new connect behavior that is used for creating connections with the given delegate service.__@return {@code true} if no other send behavior was registered for any of the addresses bound by delegate service.;public boolean addConnectBehavior(TransportService transportService, StubbableTransport.OpenConnectionBehavior connectBehavior) {_        boolean noRegistered = true__        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            noRegistered &= addConnectBehavior(transportAddress, connectBehavior)__        }_        return noRegistered__    };adds,a,new,connect,behavior,that,is,used,for,creating,connections,with,the,given,delegate,service,return,code,true,if,no,other,send,behavior,was,registered,for,any,of,the,addresses,bound,by,delegate,service;public,boolean,add,connect,behavior,transport,service,transport,service,stubbable,transport,open,connection,behavior,connect,behavior,boolean,no,registered,true,for,transport,address,transport,address,extract,transport,addresses,transport,service,no,registered,add,connect,behavior,transport,address,connect,behavior,return,no,registered
MockTransportService -> public boolean addConnectBehavior(TransportService transportService, StubbableTransport.OpenConnectionBehavior connectBehavior);1535383145;Adds a new connect behavior that is used for creating connections with the given delegate service.__@return {@code true} if no other send behavior was registered for any of the addresses bound by delegate service.;public boolean addConnectBehavior(TransportService transportService, StubbableTransport.OpenConnectionBehavior connectBehavior) {_        boolean noRegistered = true__        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            noRegistered &= addConnectBehavior(transportAddress, connectBehavior)__        }_        return noRegistered__    };adds,a,new,connect,behavior,that,is,used,for,creating,connections,with,the,given,delegate,service,return,code,true,if,no,other,send,behavior,was,registered,for,any,of,the,addresses,bound,by,delegate,service;public,boolean,add,connect,behavior,transport,service,transport,service,stubbable,transport,open,connection,behavior,connect,behavior,boolean,no,registered,true,for,transport,address,transport,address,extract,transport,addresses,transport,service,no,registered,add,connect,behavior,transport,address,connect,behavior,return,no,registered
MockTransportService -> public boolean addConnectBehavior(TransportService transportService, StubbableTransport.OpenConnectionBehavior connectBehavior);1541092382;Adds a new connect behavior that is used for creating connections with the given delegate service.__@return {@code true} if no other send behavior was registered for any of the addresses bound by delegate service.;public boolean addConnectBehavior(TransportService transportService, StubbableTransport.OpenConnectionBehavior connectBehavior) {_        boolean noRegistered = true__        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            noRegistered &= addConnectBehavior(transportAddress, connectBehavior)__        }_        return noRegistered__    };adds,a,new,connect,behavior,that,is,used,for,creating,connections,with,the,given,delegate,service,return,code,true,if,no,other,send,behavior,was,registered,for,any,of,the,addresses,bound,by,delegate,service;public,boolean,add,connect,behavior,transport,service,transport,service,stubbable,transport,open,connection,behavior,connect,behavior,boolean,no,registered,true,for,transport,address,transport,address,extract,transport,addresses,transport,service,no,registered,add,connect,behavior,transport,address,connect,behavior,return,no,registered
MockTransportService -> public boolean addConnectBehavior(TransportService transportService, StubbableTransport.OpenConnectionBehavior connectBehavior);1542270280;Adds a new connect behavior that is used for creating connections with the given delegate service.__@return {@code true} if no other send behavior was registered for any of the addresses bound by delegate service.;public boolean addConnectBehavior(TransportService transportService, StubbableTransport.OpenConnectionBehavior connectBehavior) {_        boolean noRegistered = true__        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            noRegistered &= addConnectBehavior(transportAddress, connectBehavior)__        }_        return noRegistered__    };adds,a,new,connect,behavior,that,is,used,for,creating,connections,with,the,given,delegate,service,return,code,true,if,no,other,send,behavior,was,registered,for,any,of,the,addresses,bound,by,delegate,service;public,boolean,add,connect,behavior,transport,service,transport,service,stubbable,transport,open,connection,behavior,connect,behavior,boolean,no,registered,true,for,transport,address,transport,address,extract,transport,addresses,transport,service,no,registered,add,connect,behavior,transport,address,connect,behavior,return,no,registered
MockTransportService -> public boolean addConnectBehavior(TransportService transportService, StubbableTransport.OpenConnectionBehavior connectBehavior);1542646292;Adds a new connect behavior that is used for creating connections with the given delegate service.__@return {@code true} if no other send behavior was registered for any of the addresses bound by delegate service.;public boolean addConnectBehavior(TransportService transportService, StubbableTransport.OpenConnectionBehavior connectBehavior) {_        boolean noRegistered = true__        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            noRegistered &= addConnectBehavior(transportAddress, connectBehavior)__        }_        return noRegistered__    };adds,a,new,connect,behavior,that,is,used,for,creating,connections,with,the,given,delegate,service,return,code,true,if,no,other,send,behavior,was,registered,for,any,of,the,addresses,bound,by,delegate,service;public,boolean,add,connect,behavior,transport,service,transport,service,stubbable,transport,open,connection,behavior,connect,behavior,boolean,no,registered,true,for,transport,address,transport,address,extract,transport,addresses,transport,service,no,registered,add,connect,behavior,transport,address,connect,behavior,return,no,registered
MockTransportService -> public boolean addConnectBehavior(TransportService transportService, StubbableTransport.OpenConnectionBehavior connectBehavior);1543602642;Adds a new connect behavior that is used for creating connections with the given delegate service.__@return {@code true} if no other send behavior was registered for any of the addresses bound by delegate service.;public boolean addConnectBehavior(TransportService transportService, StubbableTransport.OpenConnectionBehavior connectBehavior) {_        boolean noRegistered = true__        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            noRegistered &= addConnectBehavior(transportAddress, connectBehavior)__        }_        return noRegistered__    };adds,a,new,connect,behavior,that,is,used,for,creating,connections,with,the,given,delegate,service,return,code,true,if,no,other,send,behavior,was,registered,for,any,of,the,addresses,bound,by,delegate,service;public,boolean,add,connect,behavior,transport,service,transport,service,stubbable,transport,open,connection,behavior,connect,behavior,boolean,no,registered,true,for,transport,address,transport,address,extract,transport,addresses,transport,service,no,registered,add,connect,behavior,transport,address,connect,behavior,return,no,registered
MockTransportService -> public boolean addConnectBehavior(TransportService transportService, StubbableTransport.OpenConnectionBehavior connectBehavior);1544206631;Adds a new connect behavior that is used for creating connections with the given delegate service.__@return {@code true} if no other send behavior was registered for any of the addresses bound by delegate service.;public boolean addConnectBehavior(TransportService transportService, StubbableTransport.OpenConnectionBehavior connectBehavior) {_        boolean noRegistered = true__        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            noRegistered &= addConnectBehavior(transportAddress, connectBehavior)__        }_        return noRegistered__    };adds,a,new,connect,behavior,that,is,used,for,creating,connections,with,the,given,delegate,service,return,code,true,if,no,other,send,behavior,was,registered,for,any,of,the,addresses,bound,by,delegate,service;public,boolean,add,connect,behavior,transport,service,transport,service,stubbable,transport,open,connection,behavior,connect,behavior,boolean,no,registered,true,for,transport,address,transport,address,extract,transport,addresses,transport,service,no,registered,add,connect,behavior,transport,address,connect,behavior,return,no,registered
MockTransportService -> public boolean addConnectBehavior(TransportService transportService, StubbableTransport.OpenConnectionBehavior connectBehavior);1544554541;Adds a new connect behavior that is used for creating connections with the given delegate service.__@return {@code true} if no other send behavior was registered for any of the addresses bound by delegate service.;public boolean addConnectBehavior(TransportService transportService, StubbableTransport.OpenConnectionBehavior connectBehavior) {_        boolean noRegistered = true__        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            noRegistered &= addConnectBehavior(transportAddress, connectBehavior)__        }_        return noRegistered__    };adds,a,new,connect,behavior,that,is,used,for,creating,connections,with,the,given,delegate,service,return,code,true,if,no,other,send,behavior,was,registered,for,any,of,the,addresses,bound,by,delegate,service;public,boolean,add,connect,behavior,transport,service,transport,service,stubbable,transport,open,connection,behavior,connect,behavior,boolean,no,registered,true,for,transport,address,transport,address,extract,transport,addresses,transport,service,no,registered,add,connect,behavior,transport,address,connect,behavior,return,no,registered
MockTransportService -> public boolean addConnectBehavior(TransportService transportService, StubbableTransport.OpenConnectionBehavior connectBehavior);1544823664;Adds a new connect behavior that is used for creating connections with the given delegate service.__@return {@code true} if no other send behavior was registered for any of the addresses bound by delegate service.;public boolean addConnectBehavior(TransportService transportService, StubbableTransport.OpenConnectionBehavior connectBehavior) {_        boolean noRegistered = true__        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            noRegistered &= addConnectBehavior(transportAddress, connectBehavior)__        }_        return noRegistered__    };adds,a,new,connect,behavior,that,is,used,for,creating,connections,with,the,given,delegate,service,return,code,true,if,no,other,send,behavior,was,registered,for,any,of,the,addresses,bound,by,delegate,service;public,boolean,add,connect,behavior,transport,service,transport,service,stubbable,transport,open,connection,behavior,connect,behavior,boolean,no,registered,true,for,transport,address,transport,address,extract,transport,addresses,transport,service,no,registered,add,connect,behavior,transport,address,connect,behavior,return,no,registered
MockTransportService -> public boolean addConnectBehavior(TransportService transportService, StubbableTransport.OpenConnectionBehavior connectBehavior);1548770891;Adds a new connect behavior that is used for creating connections with the given delegate service.__@return {@code true} if no other send behavior was registered for any of the addresses bound by delegate service.;public boolean addConnectBehavior(TransportService transportService, StubbableTransport.OpenConnectionBehavior connectBehavior) {_        boolean noRegistered = true__        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            noRegistered &= addConnectBehavior(transportAddress, connectBehavior)__        }_        return noRegistered__    };adds,a,new,connect,behavior,that,is,used,for,creating,connections,with,the,given,delegate,service,return,code,true,if,no,other,send,behavior,was,registered,for,any,of,the,addresses,bound,by,delegate,service;public,boolean,add,connect,behavior,transport,service,transport,service,stubbable,transport,open,connection,behavior,connect,behavior,boolean,no,registered,true,for,transport,address,transport,address,extract,transport,addresses,transport,service,no,registered,add,connect,behavior,transport,address,connect,behavior,return,no,registered
MockTransportService -> public boolean addConnectBehavior(TransportService transportService, StubbableTransport.OpenConnectionBehavior connectBehavior);1548790146;Adds a new connect behavior that is used for creating connections with the given delegate service.__@return {@code true} if no other send behavior was registered for any of the addresses bound by delegate service.;public boolean addConnectBehavior(TransportService transportService, StubbableTransport.OpenConnectionBehavior connectBehavior) {_        boolean noRegistered = true__        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            noRegistered &= addConnectBehavior(transportAddress, connectBehavior)__        }_        return noRegistered__    };adds,a,new,connect,behavior,that,is,used,for,creating,connections,with,the,given,delegate,service,return,code,true,if,no,other,send,behavior,was,registered,for,any,of,the,addresses,bound,by,delegate,service;public,boolean,add,connect,behavior,transport,service,transport,service,stubbable,transport,open,connection,behavior,connect,behavior,boolean,no,registered,true,for,transport,address,transport,address,extract,transport,addresses,transport,service,no,registered,add,connect,behavior,transport,address,connect,behavior,return,no,registered
MockTransportService -> public boolean addConnectBehavior(TransportService transportService, StubbableTransport.OpenConnectionBehavior connectBehavior);1548953505;Adds a new connect behavior that is used for creating connections with the given delegate service.__@return {@code true} if no other send behavior was registered for any of the addresses bound by delegate service.;public boolean addConnectBehavior(TransportService transportService, StubbableTransport.OpenConnectionBehavior connectBehavior) {_        boolean noRegistered = true__        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            noRegistered &= addConnectBehavior(transportAddress, connectBehavior)__        }_        return noRegistered__    };adds,a,new,connect,behavior,that,is,used,for,creating,connections,with,the,given,delegate,service,return,code,true,if,no,other,send,behavior,was,registered,for,any,of,the,addresses,bound,by,delegate,service;public,boolean,add,connect,behavior,transport,service,transport,service,stubbable,transport,open,connection,behavior,connect,behavior,boolean,no,registered,true,for,transport,address,transport,address,extract,transport,addresses,transport,service,no,registered,add,connect,behavior,transport,address,connect,behavior,return,no,registered
MockTransportService -> public boolean addConnectBehavior(TransportService transportService, StubbableTransport.OpenConnectionBehavior connectBehavior);1550601141;Adds a new connect behavior that is used for creating connections with the given delegate service.__@return {@code true} if no other send behavior was registered for any of the addresses bound by delegate service.;public boolean addConnectBehavior(TransportService transportService, StubbableTransport.OpenConnectionBehavior connectBehavior) {_        boolean noRegistered = true__        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            noRegistered &= addConnectBehavior(transportAddress, connectBehavior)__        }_        return noRegistered__    };adds,a,new,connect,behavior,that,is,used,for,creating,connections,with,the,given,delegate,service,return,code,true,if,no,other,send,behavior,was,registered,for,any,of,the,addresses,bound,by,delegate,service;public,boolean,add,connect,behavior,transport,service,transport,service,stubbable,transport,open,connection,behavior,connect,behavior,boolean,no,registered,true,for,transport,address,transport,address,extract,transport,addresses,transport,service,no,registered,add,connect,behavior,transport,address,connect,behavior,return,no,registered
MockTransportService -> public boolean addConnectBehavior(TransportService transportService, StubbableTransport.OpenConnectionBehavior connectBehavior);1551176390;Adds a new connect behavior that is used for creating connections with the given delegate service.__@return {@code true} if no other send behavior was registered for any of the addresses bound by delegate service.;public boolean addConnectBehavior(TransportService transportService, StubbableTransport.OpenConnectionBehavior connectBehavior) {_        boolean noRegistered = true__        for (TransportAddress transportAddress : extractTransportAddresses(transportService)) {_            noRegistered &= addConnectBehavior(transportAddress, connectBehavior)__        }_        return noRegistered__    };adds,a,new,connect,behavior,that,is,used,for,creating,connections,with,the,given,delegate,service,return,code,true,if,no,other,send,behavior,was,registered,for,any,of,the,addresses,bound,by,delegate,service;public,boolean,add,connect,behavior,transport,service,transport,service,stubbable,transport,open,connection,behavior,connect,behavior,boolean,no,registered,true,for,transport,address,transport,address,extract,transport,addresses,transport,service,no,registered,add,connect,behavior,transport,address,connect,behavior,return,no,registered
MockTransportService -> public void addUnresponsiveRule(TransportAddress transportAddress, final TimeValue duration);1524684173;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.__@param duration the amount of time to delay sending and connecting.;public void addUnresponsiveRule(TransportAddress transportAddress, final TimeValue duration) {_        final long startTime = System.currentTimeMillis()___        addDelegate(transportAddress, new ClearableTransport(original) {_            private final Queue<Runnable> requestsToSendWhenCleared = new LinkedBlockingDeque<>()__            private boolean cleared = false___            TimeValue getDelay() {_                return new TimeValue(duration.millis() - (System.currentTimeMillis() - startTime))__            }__            @Override_            public void connectToNode(DiscoveryNode node, ConnectionProfile connectionProfile,_                                      CheckedBiConsumer<Connection, ConnectionProfile, IOException> connectionValidator)_                throws ConnectTransportException {_                if (original.nodeConnected(node)) {_                    _                    return__                }_                TimeValue delay = getDelay()__                if (delay.millis() <= 0) {_                    original.connectToNode(node, connectionProfile, connectionValidator)__                    return__                }__                _                TimeValue connectingTimeout = TcpTransport.TCP_CONNECT_TIMEOUT.getDefault(Settings.EMPTY)__                try {_                    if (delay.millis() < connectingTimeout.millis()) {_                        Thread.sleep(delay.millis())__                        original.connectToNode(node, connectionProfile, connectionValidator)__                    } else {_                        Thread.sleep(connectingTimeout.millis())__                        throw new ConnectTransportException(node, "UNRESPONSIVE: simulated")__                    }_                } catch (InterruptedException e) {_                    throw new ConnectTransportException(node, "UNRESPONSIVE: simulated")__                }_            }__            @Override_            public Connection openConnection(DiscoveryNode node, ConnectionProfile profile) throws IOException {_                TimeValue delay = getDelay()__                if (delay.millis() <= 0) {_                    return original.openConnection(node, profile)__                }__                _                TimeValue connectingTimeout = TcpTransport.TCP_CONNECT_TIMEOUT.getDefault(Settings.EMPTY)__                try {_                    if (delay.millis() < connectingTimeout.millis()) {_                        Thread.sleep(delay.millis())__                        return original.openConnection(node, profile)__                    } else {_                        Thread.sleep(connectingTimeout.millis())__                        throw new ConnectTransportException(node, "UNRESPONSIVE: simulated")__                    }_                } catch (InterruptedException e) {_                    throw new ConnectTransportException(node, "UNRESPONSIVE: simulated")__                }_            }__            @Override_            protected void sendRequest(Connection connection, long requestId, String action, TransportRequest request,_                                       TransportRequestOptions options) throws IOException {_                _                TimeValue delay = getDelay()__                if (delay.millis() <= 0) {_                    connection.sendRequest(requestId, action, request, options)__                    return__                }__                _                RequestHandlerRegistry reg = MockTransportService.this.getRequestHandler(action)__                BytesStreamOutput bStream = new BytesStreamOutput()__                request.writeTo(bStream)__                final TransportRequest clonedRequest = reg.newRequest(bStream.bytes().streamInput())___                Runnable runnable = new AbstractRunnable() {_                    AtomicBoolean requestSent = new AtomicBoolean()___                    @Override_                    public void onFailure(Exception e) {_                        logger.debug("failed to send delayed request", e)__                    }__                    @Override_                    protected void doRun() throws IOException {_                        if (requestSent.compareAndSet(false, true)) {_                            connection.sendRequest(requestId, action, clonedRequest, options)__                        }_                    }_                }___                _                synchronized (this) {_                    if (cleared) {_                        runnable.run()__                    } else {_                        requestsToSendWhenCleared.add(runnable)__                        threadPool.schedule(delay, ThreadPool.Names.GENERIC, runnable)__                    }_                }_            }__            @Override_            public void clearRule() {_                synchronized (this) {_                    assert cleared == false__                    cleared = true__                    requestsToSendWhenCleared.forEach(Runnable::run)__                }_            }_        })__    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added,param,duration,the,amount,of,time,to,delay,sending,and,connecting;public,void,add,unresponsive,rule,transport,address,transport,address,final,time,value,duration,final,long,start,time,system,current,time,millis,add,delegate,transport,address,new,clearable,transport,original,private,final,queue,runnable,requests,to,send,when,cleared,new,linked,blocking,deque,private,boolean,cleared,false,time,value,get,delay,return,new,time,value,duration,millis,system,current,time,millis,start,time,override,public,void,connect,to,node,discovery,node,node,connection,profile,connection,profile,checked,bi,consumer,connection,connection,profile,ioexception,connection,validator,throws,connect,transport,exception,if,original,node,connected,node,return,time,value,delay,get,delay,if,delay,millis,0,original,connect,to,node,node,connection,profile,connection,validator,return,time,value,connecting,timeout,tcp,transport,get,default,settings,empty,try,if,delay,millis,connecting,timeout,millis,thread,sleep,delay,millis,original,connect,to,node,node,connection,profile,connection,validator,else,thread,sleep,connecting,timeout,millis,throw,new,connect,transport,exception,node,unresponsive,simulated,catch,interrupted,exception,e,throw,new,connect,transport,exception,node,unresponsive,simulated,override,public,connection,open,connection,discovery,node,node,connection,profile,profile,throws,ioexception,time,value,delay,get,delay,if,delay,millis,0,return,original,open,connection,node,profile,time,value,connecting,timeout,tcp,transport,get,default,settings,empty,try,if,delay,millis,connecting,timeout,millis,thread,sleep,delay,millis,return,original,open,connection,node,profile,else,thread,sleep,connecting,timeout,millis,throw,new,connect,transport,exception,node,unresponsive,simulated,catch,interrupted,exception,e,throw,new,connect,transport,exception,node,unresponsive,simulated,override,protected,void,send,request,connection,connection,long,request,id,string,action,transport,request,request,transport,request,options,options,throws,ioexception,time,value,delay,get,delay,if,delay,millis,0,connection,send,request,request,id,action,request,options,return,request,handler,registry,reg,mock,transport,service,this,get,request,handler,action,bytes,stream,output,b,stream,new,bytes,stream,output,request,write,to,b,stream,final,transport,request,cloned,request,reg,new,request,b,stream,bytes,stream,input,runnable,runnable,new,abstract,runnable,atomic,boolean,request,sent,new,atomic,boolean,override,public,void,on,failure,exception,e,logger,debug,failed,to,send,delayed,request,e,override,protected,void,do,run,throws,ioexception,if,request,sent,compare,and,set,false,true,connection,send,request,request,id,action,cloned,request,options,synchronized,this,if,cleared,runnable,run,else,requests,to,send,when,cleared,add,runnable,thread,pool,schedule,delay,thread,pool,names,generic,runnable,override,public,void,clear,rule,synchronized,this,assert,cleared,false,cleared,true,requests,to,send,when,cleared,for,each,runnable,run
MockTransportService -> public void addUnresponsiveRule(TransportAddress transportAddress, final TimeValue duration);1525162917;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.__@param duration the amount of time to delay sending and connecting.;public void addUnresponsiveRule(TransportAddress transportAddress, final TimeValue duration) {_        final long startTime = System.currentTimeMillis()___        addDelegate(transportAddress, new ClearableTransport(original) {_            private final Queue<Runnable> requestsToSendWhenCleared = new LinkedBlockingDeque<>()__            private boolean cleared = false___            TimeValue getDelay() {_                return new TimeValue(duration.millis() - (System.currentTimeMillis() - startTime))__            }__            @Override_            public void connectToNode(DiscoveryNode node, ConnectionProfile connectionProfile,_                                      CheckedBiConsumer<Connection, ConnectionProfile, IOException> connectionValidator)_                throws ConnectTransportException {_                if (original.nodeConnected(node)) {_                    _                    return__                }_                TimeValue delay = getDelay()__                if (delay.millis() <= 0) {_                    original.connectToNode(node, connectionProfile, connectionValidator)__                    return__                }__                _                TimeValue connectingTimeout = TcpTransport.TCP_CONNECT_TIMEOUT.getDefault(Settings.EMPTY)__                try {_                    if (delay.millis() < connectingTimeout.millis()) {_                        Thread.sleep(delay.millis())__                        original.connectToNode(node, connectionProfile, connectionValidator)__                    } else {_                        Thread.sleep(connectingTimeout.millis())__                        throw new ConnectTransportException(node, "UNRESPONSIVE: simulated")__                    }_                } catch (InterruptedException e) {_                    throw new ConnectTransportException(node, "UNRESPONSIVE: simulated")__                }_            }__            @Override_            public Connection openConnection(DiscoveryNode node, ConnectionProfile profile) throws IOException {_                TimeValue delay = getDelay()__                if (delay.millis() <= 0) {_                    return original.openConnection(node, profile)__                }__                _                TimeValue connectingTimeout = TcpTransport.TCP_CONNECT_TIMEOUT.getDefault(Settings.EMPTY)__                try {_                    if (delay.millis() < connectingTimeout.millis()) {_                        Thread.sleep(delay.millis())__                        return original.openConnection(node, profile)__                    } else {_                        Thread.sleep(connectingTimeout.millis())__                        throw new ConnectTransportException(node, "UNRESPONSIVE: simulated")__                    }_                } catch (InterruptedException e) {_                    throw new ConnectTransportException(node, "UNRESPONSIVE: simulated")__                }_            }__            @Override_            protected void sendRequest(Connection connection, long requestId, String action, TransportRequest request,_                                       TransportRequestOptions options) throws IOException {_                _                TimeValue delay = getDelay()__                if (delay.millis() <= 0) {_                    connection.sendRequest(requestId, action, request, options)__                    return__                }__                _                RequestHandlerRegistry reg = MockTransportService.this.getRequestHandler(action)__                BytesStreamOutput bStream = new BytesStreamOutput()__                request.writeTo(bStream)__                final TransportRequest clonedRequest = reg.newRequest(bStream.bytes().streamInput())___                Runnable runnable = new AbstractRunnable() {_                    AtomicBoolean requestSent = new AtomicBoolean()___                    @Override_                    public void onFailure(Exception e) {_                        logger.debug("failed to send delayed request", e)__                    }__                    @Override_                    protected void doRun() throws IOException {_                        if (requestSent.compareAndSet(false, true)) {_                            connection.sendRequest(requestId, action, clonedRequest, options)__                        }_                    }_                }___                _                synchronized (this) {_                    if (cleared) {_                        runnable.run()__                    } else {_                        requestsToSendWhenCleared.add(runnable)__                        threadPool.schedule(delay, ThreadPool.Names.GENERIC, runnable)__                    }_                }_            }__            @Override_            public void clearRule() {_                synchronized (this) {_                    assert cleared == false__                    cleared = true__                    requestsToSendWhenCleared.forEach(Runnable::run)__                }_            }_        })__    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added,param,duration,the,amount,of,time,to,delay,sending,and,connecting;public,void,add,unresponsive,rule,transport,address,transport,address,final,time,value,duration,final,long,start,time,system,current,time,millis,add,delegate,transport,address,new,clearable,transport,original,private,final,queue,runnable,requests,to,send,when,cleared,new,linked,blocking,deque,private,boolean,cleared,false,time,value,get,delay,return,new,time,value,duration,millis,system,current,time,millis,start,time,override,public,void,connect,to,node,discovery,node,node,connection,profile,connection,profile,checked,bi,consumer,connection,connection,profile,ioexception,connection,validator,throws,connect,transport,exception,if,original,node,connected,node,return,time,value,delay,get,delay,if,delay,millis,0,original,connect,to,node,node,connection,profile,connection,validator,return,time,value,connecting,timeout,tcp,transport,get,default,settings,empty,try,if,delay,millis,connecting,timeout,millis,thread,sleep,delay,millis,original,connect,to,node,node,connection,profile,connection,validator,else,thread,sleep,connecting,timeout,millis,throw,new,connect,transport,exception,node,unresponsive,simulated,catch,interrupted,exception,e,throw,new,connect,transport,exception,node,unresponsive,simulated,override,public,connection,open,connection,discovery,node,node,connection,profile,profile,throws,ioexception,time,value,delay,get,delay,if,delay,millis,0,return,original,open,connection,node,profile,time,value,connecting,timeout,tcp,transport,get,default,settings,empty,try,if,delay,millis,connecting,timeout,millis,thread,sleep,delay,millis,return,original,open,connection,node,profile,else,thread,sleep,connecting,timeout,millis,throw,new,connect,transport,exception,node,unresponsive,simulated,catch,interrupted,exception,e,throw,new,connect,transport,exception,node,unresponsive,simulated,override,protected,void,send,request,connection,connection,long,request,id,string,action,transport,request,request,transport,request,options,options,throws,ioexception,time,value,delay,get,delay,if,delay,millis,0,connection,send,request,request,id,action,request,options,return,request,handler,registry,reg,mock,transport,service,this,get,request,handler,action,bytes,stream,output,b,stream,new,bytes,stream,output,request,write,to,b,stream,final,transport,request,cloned,request,reg,new,request,b,stream,bytes,stream,input,runnable,runnable,new,abstract,runnable,atomic,boolean,request,sent,new,atomic,boolean,override,public,void,on,failure,exception,e,logger,debug,failed,to,send,delayed,request,e,override,protected,void,do,run,throws,ioexception,if,request,sent,compare,and,set,false,true,connection,send,request,request,id,action,cloned,request,options,synchronized,this,if,cleared,runnable,run,else,requests,to,send,when,cleared,add,runnable,thread,pool,schedule,delay,thread,pool,names,generic,runnable,override,public,void,clear,rule,synchronized,this,assert,cleared,false,cleared,true,requests,to,send,when,cleared,for,each,runnable,run
MockTransportService -> public void addUnresponsiveRule(TransportAddress transportAddress, final TimeValue duration);1531179852;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.__@param duration the amount of time to delay sending and connecting.;public void addUnresponsiveRule(TransportAddress transportAddress, final TimeValue duration) {_        final long startTime = System.currentTimeMillis()___        addDelegate(transportAddress, new ClearableTransport(original) {_            private final Queue<Runnable> requestsToSendWhenCleared = new LinkedBlockingDeque<>()__            private boolean cleared = false___            TimeValue getDelay() {_                return new TimeValue(duration.millis() - (System.currentTimeMillis() - startTime))__            }__            @Override_            public void connectToNode(DiscoveryNode node, ConnectionProfile connectionProfile,_                                      CheckedBiConsumer<Connection, ConnectionProfile, IOException> connectionValidator)_                throws ConnectTransportException {_                if (original.nodeConnected(node)) {_                    _                    return__                }_                TimeValue delay = getDelay()__                if (delay.millis() <= 0) {_                    original.connectToNode(node, connectionProfile, connectionValidator)__                    return__                }__                _                TimeValue connectingTimeout = TcpTransport.TCP_CONNECT_TIMEOUT.getDefault(Settings.EMPTY)__                try {_                    if (delay.millis() < connectingTimeout.millis()) {_                        Thread.sleep(delay.millis())__                        original.connectToNode(node, connectionProfile, connectionValidator)__                    } else {_                        Thread.sleep(connectingTimeout.millis())__                        throw new ConnectTransportException(node, "UNRESPONSIVE: simulated")__                    }_                } catch (InterruptedException e) {_                    throw new ConnectTransportException(node, "UNRESPONSIVE: simulated")__                }_            }__            @Override_            public Connection openConnection(DiscoveryNode node, ConnectionProfile profile) throws IOException {_                TimeValue delay = getDelay()__                if (delay.millis() <= 0) {_                    return original.openConnection(node, profile)__                }__                _                TimeValue connectingTimeout = TcpTransport.TCP_CONNECT_TIMEOUT.getDefault(Settings.EMPTY)__                try {_                    if (delay.millis() < connectingTimeout.millis()) {_                        Thread.sleep(delay.millis())__                        return original.openConnection(node, profile)__                    } else {_                        Thread.sleep(connectingTimeout.millis())__                        throw new ConnectTransportException(node, "UNRESPONSIVE: simulated")__                    }_                } catch (InterruptedException e) {_                    throw new ConnectTransportException(node, "UNRESPONSIVE: simulated")__                }_            }__            @Override_            protected void sendRequest(Connection connection, long requestId, String action, TransportRequest request,_                                       TransportRequestOptions options) throws IOException {_                _                TimeValue delay = getDelay()__                if (delay.millis() <= 0) {_                    connection.sendRequest(requestId, action, request, options)__                    return__                }__                _                RequestHandlerRegistry reg = MockTransportService.this.getRequestHandler(action)__                BytesStreamOutput bStream = new BytesStreamOutput()__                request.writeTo(bStream)__                final TransportRequest clonedRequest = reg.newRequest(bStream.bytes().streamInput())___                Runnable runnable = new AbstractRunnable() {_                    AtomicBoolean requestSent = new AtomicBoolean()___                    @Override_                    public void onFailure(Exception e) {_                        logger.debug("failed to send delayed request", e)__                    }__                    @Override_                    protected void doRun() throws IOException {_                        if (requestSent.compareAndSet(false, true)) {_                            connection.sendRequest(requestId, action, clonedRequest, options)__                        }_                    }_                }___                _                synchronized (this) {_                    if (cleared) {_                        runnable.run()__                    } else {_                        requestsToSendWhenCleared.add(runnable)__                        threadPool.schedule(delay, ThreadPool.Names.GENERIC, runnable)__                    }_                }_            }__            @Override_            public void clearRule() {_                synchronized (this) {_                    assert cleared == false__                    cleared = true__                    requestsToSendWhenCleared.forEach(Runnable::run)__                }_            }_        })__    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added,param,duration,the,amount,of,time,to,delay,sending,and,connecting;public,void,add,unresponsive,rule,transport,address,transport,address,final,time,value,duration,final,long,start,time,system,current,time,millis,add,delegate,transport,address,new,clearable,transport,original,private,final,queue,runnable,requests,to,send,when,cleared,new,linked,blocking,deque,private,boolean,cleared,false,time,value,get,delay,return,new,time,value,duration,millis,system,current,time,millis,start,time,override,public,void,connect,to,node,discovery,node,node,connection,profile,connection,profile,checked,bi,consumer,connection,connection,profile,ioexception,connection,validator,throws,connect,transport,exception,if,original,node,connected,node,return,time,value,delay,get,delay,if,delay,millis,0,original,connect,to,node,node,connection,profile,connection,validator,return,time,value,connecting,timeout,tcp,transport,get,default,settings,empty,try,if,delay,millis,connecting,timeout,millis,thread,sleep,delay,millis,original,connect,to,node,node,connection,profile,connection,validator,else,thread,sleep,connecting,timeout,millis,throw,new,connect,transport,exception,node,unresponsive,simulated,catch,interrupted,exception,e,throw,new,connect,transport,exception,node,unresponsive,simulated,override,public,connection,open,connection,discovery,node,node,connection,profile,profile,throws,ioexception,time,value,delay,get,delay,if,delay,millis,0,return,original,open,connection,node,profile,time,value,connecting,timeout,tcp,transport,get,default,settings,empty,try,if,delay,millis,connecting,timeout,millis,thread,sleep,delay,millis,return,original,open,connection,node,profile,else,thread,sleep,connecting,timeout,millis,throw,new,connect,transport,exception,node,unresponsive,simulated,catch,interrupted,exception,e,throw,new,connect,transport,exception,node,unresponsive,simulated,override,protected,void,send,request,connection,connection,long,request,id,string,action,transport,request,request,transport,request,options,options,throws,ioexception,time,value,delay,get,delay,if,delay,millis,0,connection,send,request,request,id,action,request,options,return,request,handler,registry,reg,mock,transport,service,this,get,request,handler,action,bytes,stream,output,b,stream,new,bytes,stream,output,request,write,to,b,stream,final,transport,request,cloned,request,reg,new,request,b,stream,bytes,stream,input,runnable,runnable,new,abstract,runnable,atomic,boolean,request,sent,new,atomic,boolean,override,public,void,on,failure,exception,e,logger,debug,failed,to,send,delayed,request,e,override,protected,void,do,run,throws,ioexception,if,request,sent,compare,and,set,false,true,connection,send,request,request,id,action,cloned,request,options,synchronized,this,if,cleared,runnable,run,else,requests,to,send,when,cleared,add,runnable,thread,pool,schedule,delay,thread,pool,names,generic,runnable,override,public,void,clear,rule,synchronized,this,assert,cleared,false,cleared,true,requests,to,send,when,cleared,for,each,runnable,run
MockTransportService -> public void addUnresponsiveRule(TransportAddress transportAddress, final TimeValue duration);1534203100;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.__@param duration the amount of time to delay sending and connecting.;public void addUnresponsiveRule(TransportAddress transportAddress, final TimeValue duration) {_        final long startTime = System.currentTimeMillis()___        Supplier<TimeValue> delaySupplier = () -> new TimeValue(duration.millis() - (System.currentTimeMillis() - startTime))___        transport().addConnectBehavior(transportAddress, (transport, discoveryNode, profile) -> {_            TimeValue delay = delaySupplier.get()__            if (delay.millis() <= 0) {_                return original.openConnection(discoveryNode, profile)__            }__            _            TimeValue connectingTimeout = TcpTransport.TCP_CONNECT_TIMEOUT.getDefault(Settings.EMPTY)__            try {_                if (delay.millis() < connectingTimeout.millis()) {_                    Thread.sleep(delay.millis())__                    return original.openConnection(discoveryNode, profile)__                } else {_                    Thread.sleep(connectingTimeout.millis())__                    throw new ConnectTransportException(discoveryNode, "UNRESPONSIVE: simulated")__                }_            } catch (InterruptedException e) {_                throw new ConnectTransportException(discoveryNode, "UNRESPONSIVE: simulated")__            }_        })___        transport().addSendBehavior(transportAddress, new StubbableTransport.SendRequestBehavior() {_            private final Queue<Runnable> requestsToSendWhenCleared = new LinkedBlockingDeque<>()__            private boolean cleared = false___            @Override_            public void sendRequest(Transport.Connection connection, long requestId, String action, TransportRequest request,_                                    TransportRequestOptions options) throws IOException {_                _                TimeValue delay = delaySupplier.get()__                if (delay.millis() <= 0) {_                    connection.sendRequest(requestId, action, request, options)__                    return__                }__                _                RequestHandlerRegistry reg = MockTransportService.this.getRequestHandler(action)__                BytesStreamOutput bStream = new BytesStreamOutput()__                request.writeTo(bStream)__                final TransportRequest clonedRequest = reg.newRequest(bStream.bytes().streamInput())___                Runnable runnable = new AbstractRunnable() {_                    AtomicBoolean requestSent = new AtomicBoolean()___                    @Override_                    public void onFailure(Exception e) {_                        logger.debug("failed to send delayed request", e)__                    }__                    @Override_                    protected void doRun() throws IOException {_                        if (requestSent.compareAndSet(false, true)) {_                            connection.sendRequest(requestId, action, clonedRequest, options)__                        }_                    }_                }___                _                synchronized (this) {_                    if (cleared) {_                        runnable.run()__                    } else {_                        requestsToSendWhenCleared.add(runnable)__                        threadPool.schedule(delay, ThreadPool.Names.GENERIC, runnable)__                    }_                }_            }__            @Override_            public void clearCallback() {_                synchronized (this) {_                    assert cleared == false__                    cleared = true__                    requestsToSendWhenCleared.forEach(Runnable::run)__                }_            }_        })__    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added,param,duration,the,amount,of,time,to,delay,sending,and,connecting;public,void,add,unresponsive,rule,transport,address,transport,address,final,time,value,duration,final,long,start,time,system,current,time,millis,supplier,time,value,delay,supplier,new,time,value,duration,millis,system,current,time,millis,start,time,transport,add,connect,behavior,transport,address,transport,discovery,node,profile,time,value,delay,delay,supplier,get,if,delay,millis,0,return,original,open,connection,discovery,node,profile,time,value,connecting,timeout,tcp,transport,get,default,settings,empty,try,if,delay,millis,connecting,timeout,millis,thread,sleep,delay,millis,return,original,open,connection,discovery,node,profile,else,thread,sleep,connecting,timeout,millis,throw,new,connect,transport,exception,discovery,node,unresponsive,simulated,catch,interrupted,exception,e,throw,new,connect,transport,exception,discovery,node,unresponsive,simulated,transport,add,send,behavior,transport,address,new,stubbable,transport,send,request,behavior,private,final,queue,runnable,requests,to,send,when,cleared,new,linked,blocking,deque,private,boolean,cleared,false,override,public,void,send,request,transport,connection,connection,long,request,id,string,action,transport,request,request,transport,request,options,options,throws,ioexception,time,value,delay,delay,supplier,get,if,delay,millis,0,connection,send,request,request,id,action,request,options,return,request,handler,registry,reg,mock,transport,service,this,get,request,handler,action,bytes,stream,output,b,stream,new,bytes,stream,output,request,write,to,b,stream,final,transport,request,cloned,request,reg,new,request,b,stream,bytes,stream,input,runnable,runnable,new,abstract,runnable,atomic,boolean,request,sent,new,atomic,boolean,override,public,void,on,failure,exception,e,logger,debug,failed,to,send,delayed,request,e,override,protected,void,do,run,throws,ioexception,if,request,sent,compare,and,set,false,true,connection,send,request,request,id,action,cloned,request,options,synchronized,this,if,cleared,runnable,run,else,requests,to,send,when,cleared,add,runnable,thread,pool,schedule,delay,thread,pool,names,generic,runnable,override,public,void,clear,callback,synchronized,this,assert,cleared,false,cleared,true,requests,to,send,when,cleared,for,each,runnable,run
MockTransportService -> public void addUnresponsiveRule(TransportAddress transportAddress, final TimeValue duration);1534362961;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.__@param duration the amount of time to delay sending and connecting.;public void addUnresponsiveRule(TransportAddress transportAddress, final TimeValue duration) {_        final long startTime = System.currentTimeMillis()___        Supplier<TimeValue> delaySupplier = () -> new TimeValue(duration.millis() - (System.currentTimeMillis() - startTime))___        transport().addConnectBehavior(transportAddress, (transport, discoveryNode, profile) -> {_            TimeValue delay = delaySupplier.get()__            if (delay.millis() <= 0) {_                return original.openConnection(discoveryNode, profile)__            }__            _            TimeValue connectingTimeout = TransportService.TCP_CONNECT_TIMEOUT.getDefault(Settings.EMPTY)__            try {_                if (delay.millis() < connectingTimeout.millis()) {_                    Thread.sleep(delay.millis())__                    return original.openConnection(discoveryNode, profile)__                } else {_                    Thread.sleep(connectingTimeout.millis())__                    throw new ConnectTransportException(discoveryNode, "UNRESPONSIVE: simulated")__                }_            } catch (InterruptedException e) {_                throw new ConnectTransportException(discoveryNode, "UNRESPONSIVE: simulated")__            }_        })___        transport().addSendBehavior(transportAddress, new StubbableTransport.SendRequestBehavior() {_            private final Queue<Runnable> requestsToSendWhenCleared = new LinkedBlockingDeque<>()__            private boolean cleared = false___            @Override_            public void sendRequest(Transport.Connection connection, long requestId, String action, TransportRequest request,_                                    TransportRequestOptions options) throws IOException {_                _                TimeValue delay = delaySupplier.get()__                if (delay.millis() <= 0) {_                    connection.sendRequest(requestId, action, request, options)__                    return__                }__                _                RequestHandlerRegistry reg = MockTransportService.this.getRequestHandler(action)__                BytesStreamOutput bStream = new BytesStreamOutput()__                request.writeTo(bStream)__                final TransportRequest clonedRequest = reg.newRequest(bStream.bytes().streamInput())___                Runnable runnable = new AbstractRunnable() {_                    AtomicBoolean requestSent = new AtomicBoolean()___                    @Override_                    public void onFailure(Exception e) {_                        logger.debug("failed to send delayed request", e)__                    }__                    @Override_                    protected void doRun() throws IOException {_                        if (requestSent.compareAndSet(false, true)) {_                            connection.sendRequest(requestId, action, clonedRequest, options)__                        }_                    }_                }___                _                synchronized (this) {_                    if (cleared) {_                        runnable.run()__                    } else {_                        requestsToSendWhenCleared.add(runnable)__                        threadPool.schedule(delay, ThreadPool.Names.GENERIC, runnable)__                    }_                }_            }__            @Override_            public void clearCallback() {_                synchronized (this) {_                    assert cleared == false__                    cleared = true__                    requestsToSendWhenCleared.forEach(Runnable::run)__                }_            }_        })__    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added,param,duration,the,amount,of,time,to,delay,sending,and,connecting;public,void,add,unresponsive,rule,transport,address,transport,address,final,time,value,duration,final,long,start,time,system,current,time,millis,supplier,time,value,delay,supplier,new,time,value,duration,millis,system,current,time,millis,start,time,transport,add,connect,behavior,transport,address,transport,discovery,node,profile,time,value,delay,delay,supplier,get,if,delay,millis,0,return,original,open,connection,discovery,node,profile,time,value,connecting,timeout,transport,service,get,default,settings,empty,try,if,delay,millis,connecting,timeout,millis,thread,sleep,delay,millis,return,original,open,connection,discovery,node,profile,else,thread,sleep,connecting,timeout,millis,throw,new,connect,transport,exception,discovery,node,unresponsive,simulated,catch,interrupted,exception,e,throw,new,connect,transport,exception,discovery,node,unresponsive,simulated,transport,add,send,behavior,transport,address,new,stubbable,transport,send,request,behavior,private,final,queue,runnable,requests,to,send,when,cleared,new,linked,blocking,deque,private,boolean,cleared,false,override,public,void,send,request,transport,connection,connection,long,request,id,string,action,transport,request,request,transport,request,options,options,throws,ioexception,time,value,delay,delay,supplier,get,if,delay,millis,0,connection,send,request,request,id,action,request,options,return,request,handler,registry,reg,mock,transport,service,this,get,request,handler,action,bytes,stream,output,b,stream,new,bytes,stream,output,request,write,to,b,stream,final,transport,request,cloned,request,reg,new,request,b,stream,bytes,stream,input,runnable,runnable,new,abstract,runnable,atomic,boolean,request,sent,new,atomic,boolean,override,public,void,on,failure,exception,e,logger,debug,failed,to,send,delayed,request,e,override,protected,void,do,run,throws,ioexception,if,request,sent,compare,and,set,false,true,connection,send,request,request,id,action,cloned,request,options,synchronized,this,if,cleared,runnable,run,else,requests,to,send,when,cleared,add,runnable,thread,pool,schedule,delay,thread,pool,names,generic,runnable,override,public,void,clear,callback,synchronized,this,assert,cleared,false,cleared,true,requests,to,send,when,cleared,for,each,runnable,run
MockTransportService -> public void addUnresponsiveRule(TransportAddress transportAddress, final TimeValue duration);1535383145;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.__@param duration the amount of time to delay sending and connecting.;public void addUnresponsiveRule(TransportAddress transportAddress, final TimeValue duration) {_        final long startTime = System.currentTimeMillis()___        Supplier<TimeValue> delaySupplier = () -> new TimeValue(duration.millis() - (System.currentTimeMillis() - startTime))___        transport().addConnectBehavior(transportAddress, (transport, discoveryNode, profile) -> {_            TimeValue delay = delaySupplier.get()__            if (delay.millis() <= 0) {_                return original.openConnection(discoveryNode, profile)__            }__            _            TimeValue connectingTimeout = TransportService.TCP_CONNECT_TIMEOUT.getDefault(Settings.EMPTY)__            try {_                if (delay.millis() < connectingTimeout.millis()) {_                    Thread.sleep(delay.millis())__                    return original.openConnection(discoveryNode, profile)__                } else {_                    Thread.sleep(connectingTimeout.millis())__                    throw new ConnectTransportException(discoveryNode, "UNRESPONSIVE: simulated")__                }_            } catch (InterruptedException e) {_                throw new ConnectTransportException(discoveryNode, "UNRESPONSIVE: simulated")__            }_        })___        transport().addSendBehavior(transportAddress, new StubbableTransport.SendRequestBehavior() {_            private final Queue<Runnable> requestsToSendWhenCleared = new LinkedBlockingDeque<>()__            private boolean cleared = false___            @Override_            public void sendRequest(Transport.Connection connection, long requestId, String action, TransportRequest request,_                                    TransportRequestOptions options) throws IOException {_                _                TimeValue delay = delaySupplier.get()__                if (delay.millis() <= 0) {_                    connection.sendRequest(requestId, action, request, options)__                    return__                }__                _                RequestHandlerRegistry reg = MockTransportService.this.getRequestHandler(action)__                BytesStreamOutput bStream = new BytesStreamOutput()__                request.writeTo(bStream)__                final TransportRequest clonedRequest = reg.newRequest(bStream.bytes().streamInput())___                Runnable runnable = new AbstractRunnable() {_                    AtomicBoolean requestSent = new AtomicBoolean()___                    @Override_                    public void onFailure(Exception e) {_                        logger.debug("failed to send delayed request", e)__                    }__                    @Override_                    protected void doRun() throws IOException {_                        if (requestSent.compareAndSet(false, true)) {_                            connection.sendRequest(requestId, action, clonedRequest, options)__                        }_                    }_                }___                _                synchronized (this) {_                    if (cleared) {_                        runnable.run()__                    } else {_                        requestsToSendWhenCleared.add(runnable)__                        threadPool.schedule(delay, ThreadPool.Names.GENERIC, runnable)__                    }_                }_            }__            @Override_            public void clearCallback() {_                synchronized (this) {_                    assert cleared == false__                    cleared = true__                    requestsToSendWhenCleared.forEach(Runnable::run)__                }_            }_        })__    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added,param,duration,the,amount,of,time,to,delay,sending,and,connecting;public,void,add,unresponsive,rule,transport,address,transport,address,final,time,value,duration,final,long,start,time,system,current,time,millis,supplier,time,value,delay,supplier,new,time,value,duration,millis,system,current,time,millis,start,time,transport,add,connect,behavior,transport,address,transport,discovery,node,profile,time,value,delay,delay,supplier,get,if,delay,millis,0,return,original,open,connection,discovery,node,profile,time,value,connecting,timeout,transport,service,get,default,settings,empty,try,if,delay,millis,connecting,timeout,millis,thread,sleep,delay,millis,return,original,open,connection,discovery,node,profile,else,thread,sleep,connecting,timeout,millis,throw,new,connect,transport,exception,discovery,node,unresponsive,simulated,catch,interrupted,exception,e,throw,new,connect,transport,exception,discovery,node,unresponsive,simulated,transport,add,send,behavior,transport,address,new,stubbable,transport,send,request,behavior,private,final,queue,runnable,requests,to,send,when,cleared,new,linked,blocking,deque,private,boolean,cleared,false,override,public,void,send,request,transport,connection,connection,long,request,id,string,action,transport,request,request,transport,request,options,options,throws,ioexception,time,value,delay,delay,supplier,get,if,delay,millis,0,connection,send,request,request,id,action,request,options,return,request,handler,registry,reg,mock,transport,service,this,get,request,handler,action,bytes,stream,output,b,stream,new,bytes,stream,output,request,write,to,b,stream,final,transport,request,cloned,request,reg,new,request,b,stream,bytes,stream,input,runnable,runnable,new,abstract,runnable,atomic,boolean,request,sent,new,atomic,boolean,override,public,void,on,failure,exception,e,logger,debug,failed,to,send,delayed,request,e,override,protected,void,do,run,throws,ioexception,if,request,sent,compare,and,set,false,true,connection,send,request,request,id,action,cloned,request,options,synchronized,this,if,cleared,runnable,run,else,requests,to,send,when,cleared,add,runnable,thread,pool,schedule,delay,thread,pool,names,generic,runnable,override,public,void,clear,callback,synchronized,this,assert,cleared,false,cleared,true,requests,to,send,when,cleared,for,each,runnable,run
MockTransportService -> public void addUnresponsiveRule(TransportAddress transportAddress, final TimeValue duration);1541092382;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.__@param duration the amount of time to delay sending and connecting.;public void addUnresponsiveRule(TransportAddress transportAddress, final TimeValue duration) {_        final long startTime = System.currentTimeMillis()___        Supplier<TimeValue> delaySupplier = () -> new TimeValue(duration.millis() - (System.currentTimeMillis() - startTime))___        transport().addConnectBehavior(transportAddress, (transport, discoveryNode, profile) -> {_            TimeValue delay = delaySupplier.get()__            if (delay.millis() <= 0) {_                return original.openConnection(discoveryNode, profile)__            }__            _            TimeValue connectingTimeout = TransportService.TCP_CONNECT_TIMEOUT.getDefault(Settings.EMPTY)__            try {_                if (delay.millis() < connectingTimeout.millis()) {_                    Thread.sleep(delay.millis())__                    return original.openConnection(discoveryNode, profile)__                } else {_                    Thread.sleep(connectingTimeout.millis())__                    throw new ConnectTransportException(discoveryNode, "UNRESPONSIVE: simulated")__                }_            } catch (InterruptedException e) {_                throw new ConnectTransportException(discoveryNode, "UNRESPONSIVE: simulated")__            }_        })___        transport().addSendBehavior(transportAddress, new StubbableTransport.SendRequestBehavior() {_            private final Queue<Runnable> requestsToSendWhenCleared = new LinkedBlockingDeque<>()__            private boolean cleared = false___            @Override_            public void sendRequest(Transport.Connection connection, long requestId, String action, TransportRequest request,_                                    TransportRequestOptions options) throws IOException {_                _                TimeValue delay = delaySupplier.get()__                if (delay.millis() <= 0) {_                    connection.sendRequest(requestId, action, request, options)__                    return__                }__                _                RequestHandlerRegistry reg = MockTransportService.this.getRequestHandler(action)__                BytesStreamOutput bStream = new BytesStreamOutput()__                request.writeTo(bStream)__                final TransportRequest clonedRequest = reg.newRequest(bStream.bytes().streamInput())___                Runnable runnable = new AbstractRunnable() {_                    AtomicBoolean requestSent = new AtomicBoolean()___                    @Override_                    public void onFailure(Exception e) {_                        logger.debug("failed to send delayed request", e)__                    }__                    @Override_                    protected void doRun() throws IOException {_                        if (requestSent.compareAndSet(false, true)) {_                            connection.sendRequest(requestId, action, clonedRequest, options)__                        }_                    }_                }___                _                synchronized (this) {_                    if (cleared) {_                        runnable.run()__                    } else {_                        requestsToSendWhenCleared.add(runnable)__                        threadPool.schedule(delay, ThreadPool.Names.GENERIC, runnable)__                    }_                }_            }__            @Override_            public void clearCallback() {_                synchronized (this) {_                    assert cleared == false__                    cleared = true__                    requestsToSendWhenCleared.forEach(Runnable::run)__                }_            }_        })__    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added,param,duration,the,amount,of,time,to,delay,sending,and,connecting;public,void,add,unresponsive,rule,transport,address,transport,address,final,time,value,duration,final,long,start,time,system,current,time,millis,supplier,time,value,delay,supplier,new,time,value,duration,millis,system,current,time,millis,start,time,transport,add,connect,behavior,transport,address,transport,discovery,node,profile,time,value,delay,delay,supplier,get,if,delay,millis,0,return,original,open,connection,discovery,node,profile,time,value,connecting,timeout,transport,service,get,default,settings,empty,try,if,delay,millis,connecting,timeout,millis,thread,sleep,delay,millis,return,original,open,connection,discovery,node,profile,else,thread,sleep,connecting,timeout,millis,throw,new,connect,transport,exception,discovery,node,unresponsive,simulated,catch,interrupted,exception,e,throw,new,connect,transport,exception,discovery,node,unresponsive,simulated,transport,add,send,behavior,transport,address,new,stubbable,transport,send,request,behavior,private,final,queue,runnable,requests,to,send,when,cleared,new,linked,blocking,deque,private,boolean,cleared,false,override,public,void,send,request,transport,connection,connection,long,request,id,string,action,transport,request,request,transport,request,options,options,throws,ioexception,time,value,delay,delay,supplier,get,if,delay,millis,0,connection,send,request,request,id,action,request,options,return,request,handler,registry,reg,mock,transport,service,this,get,request,handler,action,bytes,stream,output,b,stream,new,bytes,stream,output,request,write,to,b,stream,final,transport,request,cloned,request,reg,new,request,b,stream,bytes,stream,input,runnable,runnable,new,abstract,runnable,atomic,boolean,request,sent,new,atomic,boolean,override,public,void,on,failure,exception,e,logger,debug,failed,to,send,delayed,request,e,override,protected,void,do,run,throws,ioexception,if,request,sent,compare,and,set,false,true,connection,send,request,request,id,action,cloned,request,options,synchronized,this,if,cleared,runnable,run,else,requests,to,send,when,cleared,add,runnable,thread,pool,schedule,delay,thread,pool,names,generic,runnable,override,public,void,clear,callback,synchronized,this,assert,cleared,false,cleared,true,requests,to,send,when,cleared,for,each,runnable,run
MockTransportService -> public void addUnresponsiveRule(TransportAddress transportAddress, final TimeValue duration);1542270280;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.__@param duration the amount of time to delay sending and connecting.;public void addUnresponsiveRule(TransportAddress transportAddress, final TimeValue duration) {_        final long startTime = System.currentTimeMillis()___        Supplier<TimeValue> delaySupplier = () -> new TimeValue(duration.millis() - (System.currentTimeMillis() - startTime))___        transport().addConnectBehavior(transportAddress, (transport, discoveryNode, profile) -> {_            TimeValue delay = delaySupplier.get()__            if (delay.millis() <= 0) {_                return original.openConnection(discoveryNode, profile)__            }__            _            TimeValue connectingTimeout = TransportService.TCP_CONNECT_TIMEOUT.getDefault(Settings.EMPTY)__            try {_                if (delay.millis() < connectingTimeout.millis()) {_                    Thread.sleep(delay.millis())__                    return original.openConnection(discoveryNode, profile)__                } else {_                    Thread.sleep(connectingTimeout.millis())__                    throw new ConnectTransportException(discoveryNode, "UNRESPONSIVE: simulated")__                }_            } catch (InterruptedException e) {_                throw new ConnectTransportException(discoveryNode, "UNRESPONSIVE: simulated")__            }_        })___        transport().addSendBehavior(transportAddress, new StubbableTransport.SendRequestBehavior() {_            private final Queue<Runnable> requestsToSendWhenCleared = new LinkedBlockingDeque<>()__            private boolean cleared = false___            @Override_            public void sendRequest(Transport.Connection connection, long requestId, String action, TransportRequest request,_                                    TransportRequestOptions options) throws IOException {_                _                TimeValue delay = delaySupplier.get()__                if (delay.millis() <= 0) {_                    connection.sendRequest(requestId, action, request, options)__                    return__                }__                _                RequestHandlerRegistry reg = MockTransportService.this.getRequestHandler(action)__                BytesStreamOutput bStream = new BytesStreamOutput()__                request.writeTo(bStream)__                final TransportRequest clonedRequest = reg.newRequest(bStream.bytes().streamInput())___                final RunOnce runnable = new RunOnce(new AbstractRunnable() {_                    @Override_                    public void onFailure(Exception e) {_                        logger.debug("failed to send delayed request", e)__                    }__                    @Override_                    protected void doRun() throws IOException {_                        connection.sendRequest(requestId, action, clonedRequest, options)__                    }_                })___                _                synchronized (this) {_                    if (cleared) {_                        runnable.run()__                    } else {_                        requestsToSendWhenCleared.add(runnable)__                        threadPool.schedule(delay, ThreadPool.Names.GENERIC, runnable)__                    }_                }_            }__            @Override_            public void clearCallback() {_                synchronized (this) {_                    assert cleared == false__                    cleared = true__                    requestsToSendWhenCleared.forEach(Runnable::run)__                }_            }_        })__    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added,param,duration,the,amount,of,time,to,delay,sending,and,connecting;public,void,add,unresponsive,rule,transport,address,transport,address,final,time,value,duration,final,long,start,time,system,current,time,millis,supplier,time,value,delay,supplier,new,time,value,duration,millis,system,current,time,millis,start,time,transport,add,connect,behavior,transport,address,transport,discovery,node,profile,time,value,delay,delay,supplier,get,if,delay,millis,0,return,original,open,connection,discovery,node,profile,time,value,connecting,timeout,transport,service,get,default,settings,empty,try,if,delay,millis,connecting,timeout,millis,thread,sleep,delay,millis,return,original,open,connection,discovery,node,profile,else,thread,sleep,connecting,timeout,millis,throw,new,connect,transport,exception,discovery,node,unresponsive,simulated,catch,interrupted,exception,e,throw,new,connect,transport,exception,discovery,node,unresponsive,simulated,transport,add,send,behavior,transport,address,new,stubbable,transport,send,request,behavior,private,final,queue,runnable,requests,to,send,when,cleared,new,linked,blocking,deque,private,boolean,cleared,false,override,public,void,send,request,transport,connection,connection,long,request,id,string,action,transport,request,request,transport,request,options,options,throws,ioexception,time,value,delay,delay,supplier,get,if,delay,millis,0,connection,send,request,request,id,action,request,options,return,request,handler,registry,reg,mock,transport,service,this,get,request,handler,action,bytes,stream,output,b,stream,new,bytes,stream,output,request,write,to,b,stream,final,transport,request,cloned,request,reg,new,request,b,stream,bytes,stream,input,final,run,once,runnable,new,run,once,new,abstract,runnable,override,public,void,on,failure,exception,e,logger,debug,failed,to,send,delayed,request,e,override,protected,void,do,run,throws,ioexception,connection,send,request,request,id,action,cloned,request,options,synchronized,this,if,cleared,runnable,run,else,requests,to,send,when,cleared,add,runnable,thread,pool,schedule,delay,thread,pool,names,generic,runnable,override,public,void,clear,callback,synchronized,this,assert,cleared,false,cleared,true,requests,to,send,when,cleared,for,each,runnable,run
MockTransportService -> public void addUnresponsiveRule(TransportAddress transportAddress, final TimeValue duration);1542646292;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.__@param duration the amount of time to delay sending and connecting.;public void addUnresponsiveRule(TransportAddress transportAddress, final TimeValue duration) {_        final long startTime = System.currentTimeMillis()___        Supplier<TimeValue> delaySupplier = () -> new TimeValue(duration.millis() - (System.currentTimeMillis() - startTime))___        transport().addConnectBehavior(transportAddress, (transport, discoveryNode, profile) -> {_            TimeValue delay = delaySupplier.get()__            if (delay.millis() <= 0) {_                return original.openConnection(discoveryNode, profile)__            }__            _            TimeValue connectingTimeout = TransportService.TCP_CONNECT_TIMEOUT.getDefault(Settings.EMPTY)__            try {_                if (delay.millis() < connectingTimeout.millis()) {_                    Thread.sleep(delay.millis())__                    return original.openConnection(discoveryNode, profile)__                } else {_                    Thread.sleep(connectingTimeout.millis())__                    throw new ConnectTransportException(discoveryNode, "UNRESPONSIVE: simulated")__                }_            } catch (InterruptedException e) {_                throw new ConnectTransportException(discoveryNode, "UNRESPONSIVE: simulated")__            }_        })___        transport().addSendBehavior(transportAddress, new StubbableTransport.SendRequestBehavior() {_            private final Queue<Runnable> requestsToSendWhenCleared = new LinkedBlockingDeque<>()__            private boolean cleared = false___            @Override_            public void sendRequest(Transport.Connection connection, long requestId, String action, TransportRequest request,_                                    TransportRequestOptions options) throws IOException {_                _                TimeValue delay = delaySupplier.get()__                if (delay.millis() <= 0) {_                    connection.sendRequest(requestId, action, request, options)__                    return__                }__                _                RequestHandlerRegistry reg = MockTransportService.this.getRequestHandler(action)__                BytesStreamOutput bStream = new BytesStreamOutput()__                request.writeTo(bStream)__                final TransportRequest clonedRequest = reg.newRequest(bStream.bytes().streamInput())___                final RunOnce runnable = new RunOnce(new AbstractRunnable() {_                    @Override_                    public void onFailure(Exception e) {_                        logger.debug("failed to send delayed request", e)__                    }__                    @Override_                    protected void doRun() throws IOException {_                        connection.sendRequest(requestId, action, clonedRequest, options)__                    }_                })___                _                synchronized (this) {_                    if (cleared) {_                        runnable.run()__                    } else {_                        requestsToSendWhenCleared.add(runnable)__                        threadPool.schedule(delay, ThreadPool.Names.GENERIC, runnable)__                    }_                }_            }__            @Override_            public void clearCallback() {_                synchronized (this) {_                    assert cleared == false__                    cleared = true__                    requestsToSendWhenCleared.forEach(Runnable::run)__                }_            }_        })__    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added,param,duration,the,amount,of,time,to,delay,sending,and,connecting;public,void,add,unresponsive,rule,transport,address,transport,address,final,time,value,duration,final,long,start,time,system,current,time,millis,supplier,time,value,delay,supplier,new,time,value,duration,millis,system,current,time,millis,start,time,transport,add,connect,behavior,transport,address,transport,discovery,node,profile,time,value,delay,delay,supplier,get,if,delay,millis,0,return,original,open,connection,discovery,node,profile,time,value,connecting,timeout,transport,service,get,default,settings,empty,try,if,delay,millis,connecting,timeout,millis,thread,sleep,delay,millis,return,original,open,connection,discovery,node,profile,else,thread,sleep,connecting,timeout,millis,throw,new,connect,transport,exception,discovery,node,unresponsive,simulated,catch,interrupted,exception,e,throw,new,connect,transport,exception,discovery,node,unresponsive,simulated,transport,add,send,behavior,transport,address,new,stubbable,transport,send,request,behavior,private,final,queue,runnable,requests,to,send,when,cleared,new,linked,blocking,deque,private,boolean,cleared,false,override,public,void,send,request,transport,connection,connection,long,request,id,string,action,transport,request,request,transport,request,options,options,throws,ioexception,time,value,delay,delay,supplier,get,if,delay,millis,0,connection,send,request,request,id,action,request,options,return,request,handler,registry,reg,mock,transport,service,this,get,request,handler,action,bytes,stream,output,b,stream,new,bytes,stream,output,request,write,to,b,stream,final,transport,request,cloned,request,reg,new,request,b,stream,bytes,stream,input,final,run,once,runnable,new,run,once,new,abstract,runnable,override,public,void,on,failure,exception,e,logger,debug,failed,to,send,delayed,request,e,override,protected,void,do,run,throws,ioexception,connection,send,request,request,id,action,cloned,request,options,synchronized,this,if,cleared,runnable,run,else,requests,to,send,when,cleared,add,runnable,thread,pool,schedule,delay,thread,pool,names,generic,runnable,override,public,void,clear,callback,synchronized,this,assert,cleared,false,cleared,true,requests,to,send,when,cleared,for,each,runnable,run
MockTransportService -> public void addUnresponsiveRule(TransportAddress transportAddress, final TimeValue duration);1543602642;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.__@param duration the amount of time to delay sending and connecting.;public void addUnresponsiveRule(TransportAddress transportAddress, final TimeValue duration) {_        final long startTime = System.currentTimeMillis()___        Supplier<TimeValue> delaySupplier = () -> new TimeValue(duration.millis() - (System.currentTimeMillis() - startTime))___        transport().addConnectBehavior(transportAddress, (transport, discoveryNode, profile, listener) -> {_            TimeValue delay = delaySupplier.get()__            if (delay.millis() <= 0) {_                return original.openConnection(discoveryNode, profile, listener)__            }__            _            TimeValue connectingTimeout = TransportService.TCP_CONNECT_TIMEOUT.getDefault(Settings.EMPTY)__            try {_                if (delay.millis() < connectingTimeout.millis()) {_                    Thread.sleep(delay.millis())__                    return original.openConnection(discoveryNode, profile, listener)__                } else {_                    Thread.sleep(connectingTimeout.millis())__                    listener.onFailure(new ConnectTransportException(discoveryNode, "UNRESPONSIVE: simulated"))__                    return () -> {}__                }_            } catch (InterruptedException e) {_                listener.onFailure(new ConnectTransportException(discoveryNode, "UNRESPONSIVE: simulated"))__                return () -> {}__            }_        })___        transport().addSendBehavior(transportAddress, new StubbableTransport.SendRequestBehavior() {_            private final Queue<Runnable> requestsToSendWhenCleared = new LinkedBlockingDeque<>()__            private boolean cleared = false___            @Override_            public void sendRequest(Transport.Connection connection, long requestId, String action, TransportRequest request,_                                    TransportRequestOptions options) throws IOException {_                _                TimeValue delay = delaySupplier.get()__                if (delay.millis() <= 0) {_                    connection.sendRequest(requestId, action, request, options)__                    return__                }__                _                RequestHandlerRegistry reg = MockTransportService.this.getRequestHandler(action)__                BytesStreamOutput bStream = new BytesStreamOutput()__                request.writeTo(bStream)__                final TransportRequest clonedRequest = reg.newRequest(bStream.bytes().streamInput())___                final RunOnce runnable = new RunOnce(new AbstractRunnable() {_                    @Override_                    public void onFailure(Exception e) {_                        logger.debug("failed to send delayed request", e)__                    }__                    @Override_                    protected void doRun() throws IOException {_                        connection.sendRequest(requestId, action, clonedRequest, options)__                    }_                })___                _                synchronized (this) {_                    if (cleared) {_                        runnable.run()__                    } else {_                        requestsToSendWhenCleared.add(runnable)__                        threadPool.schedule(delay, ThreadPool.Names.GENERIC, runnable)__                    }_                }_            }__            @Override_            public void clearCallback() {_                synchronized (this) {_                    assert cleared == false__                    cleared = true__                    requestsToSendWhenCleared.forEach(Runnable::run)__                }_            }_        })__    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added,param,duration,the,amount,of,time,to,delay,sending,and,connecting;public,void,add,unresponsive,rule,transport,address,transport,address,final,time,value,duration,final,long,start,time,system,current,time,millis,supplier,time,value,delay,supplier,new,time,value,duration,millis,system,current,time,millis,start,time,transport,add,connect,behavior,transport,address,transport,discovery,node,profile,listener,time,value,delay,delay,supplier,get,if,delay,millis,0,return,original,open,connection,discovery,node,profile,listener,time,value,connecting,timeout,transport,service,get,default,settings,empty,try,if,delay,millis,connecting,timeout,millis,thread,sleep,delay,millis,return,original,open,connection,discovery,node,profile,listener,else,thread,sleep,connecting,timeout,millis,listener,on,failure,new,connect,transport,exception,discovery,node,unresponsive,simulated,return,catch,interrupted,exception,e,listener,on,failure,new,connect,transport,exception,discovery,node,unresponsive,simulated,return,transport,add,send,behavior,transport,address,new,stubbable,transport,send,request,behavior,private,final,queue,runnable,requests,to,send,when,cleared,new,linked,blocking,deque,private,boolean,cleared,false,override,public,void,send,request,transport,connection,connection,long,request,id,string,action,transport,request,request,transport,request,options,options,throws,ioexception,time,value,delay,delay,supplier,get,if,delay,millis,0,connection,send,request,request,id,action,request,options,return,request,handler,registry,reg,mock,transport,service,this,get,request,handler,action,bytes,stream,output,b,stream,new,bytes,stream,output,request,write,to,b,stream,final,transport,request,cloned,request,reg,new,request,b,stream,bytes,stream,input,final,run,once,runnable,new,run,once,new,abstract,runnable,override,public,void,on,failure,exception,e,logger,debug,failed,to,send,delayed,request,e,override,protected,void,do,run,throws,ioexception,connection,send,request,request,id,action,cloned,request,options,synchronized,this,if,cleared,runnable,run,else,requests,to,send,when,cleared,add,runnable,thread,pool,schedule,delay,thread,pool,names,generic,runnable,override,public,void,clear,callback,synchronized,this,assert,cleared,false,cleared,true,requests,to,send,when,cleared,for,each,runnable,run
MockTransportService -> public void addUnresponsiveRule(TransportAddress transportAddress, final TimeValue duration);1544206631;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.__@param duration the amount of time to delay sending and connecting.;public void addUnresponsiveRule(TransportAddress transportAddress, final TimeValue duration) {_        final long startTime = System.currentTimeMillis()___        Supplier<TimeValue> delaySupplier = () -> new TimeValue(duration.millis() - (System.currentTimeMillis() - startTime))___        transport().addConnectBehavior(transportAddress, (transport, discoveryNode, profile, listener) -> {_            TimeValue delay = delaySupplier.get()__            if (delay.millis() <= 0) {_                return original.openConnection(discoveryNode, profile, listener)__            }__            _            TimeValue connectingTimeout = TransportService.TCP_CONNECT_TIMEOUT.getDefault(Settings.EMPTY)__            try {_                if (delay.millis() < connectingTimeout.millis()) {_                    Thread.sleep(delay.millis())__                    return original.openConnection(discoveryNode, profile, listener)__                } else {_                    Thread.sleep(connectingTimeout.millis())__                    listener.onFailure(new ConnectTransportException(discoveryNode, "UNRESPONSIVE: simulated"))__                    return () -> {}__                }_            } catch (InterruptedException e) {_                listener.onFailure(new ConnectTransportException(discoveryNode, "UNRESPONSIVE: simulated"))__                return () -> {}__            }_        })___        transport().addSendBehavior(transportAddress, new StubbableTransport.SendRequestBehavior() {_            private final Queue<Runnable> requestsToSendWhenCleared = new LinkedBlockingDeque<>()__            private boolean cleared = false___            @Override_            public void sendRequest(Transport.Connection connection, long requestId, String action, TransportRequest request,_                                    TransportRequestOptions options) throws IOException {_                _                TimeValue delay = delaySupplier.get()__                if (delay.millis() <= 0) {_                    connection.sendRequest(requestId, action, request, options)__                    return__                }__                _                RequestHandlerRegistry reg = MockTransportService.this.getRequestHandler(action)__                BytesStreamOutput bStream = new BytesStreamOutput()__                request.writeTo(bStream)__                final TransportRequest clonedRequest = reg.newRequest(bStream.bytes().streamInput())___                final RunOnce runnable = new RunOnce(new AbstractRunnable() {_                    @Override_                    public void onFailure(Exception e) {_                        logger.debug("failed to send delayed request", e)__                    }__                    @Override_                    protected void doRun() throws IOException {_                        connection.sendRequest(requestId, action, clonedRequest, options)__                    }_                })___                _                synchronized (this) {_                    if (cleared) {_                        runnable.run()__                    } else {_                        requestsToSendWhenCleared.add(runnable)__                        threadPool.schedule(delay, ThreadPool.Names.GENERIC, runnable)__                    }_                }_            }__            @Override_            public void clearCallback() {_                synchronized (this) {_                    assert cleared == false__                    cleared = true__                    requestsToSendWhenCleared.forEach(Runnable::run)__                }_            }_        })__    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added,param,duration,the,amount,of,time,to,delay,sending,and,connecting;public,void,add,unresponsive,rule,transport,address,transport,address,final,time,value,duration,final,long,start,time,system,current,time,millis,supplier,time,value,delay,supplier,new,time,value,duration,millis,system,current,time,millis,start,time,transport,add,connect,behavior,transport,address,transport,discovery,node,profile,listener,time,value,delay,delay,supplier,get,if,delay,millis,0,return,original,open,connection,discovery,node,profile,listener,time,value,connecting,timeout,transport,service,get,default,settings,empty,try,if,delay,millis,connecting,timeout,millis,thread,sleep,delay,millis,return,original,open,connection,discovery,node,profile,listener,else,thread,sleep,connecting,timeout,millis,listener,on,failure,new,connect,transport,exception,discovery,node,unresponsive,simulated,return,catch,interrupted,exception,e,listener,on,failure,new,connect,transport,exception,discovery,node,unresponsive,simulated,return,transport,add,send,behavior,transport,address,new,stubbable,transport,send,request,behavior,private,final,queue,runnable,requests,to,send,when,cleared,new,linked,blocking,deque,private,boolean,cleared,false,override,public,void,send,request,transport,connection,connection,long,request,id,string,action,transport,request,request,transport,request,options,options,throws,ioexception,time,value,delay,delay,supplier,get,if,delay,millis,0,connection,send,request,request,id,action,request,options,return,request,handler,registry,reg,mock,transport,service,this,get,request,handler,action,bytes,stream,output,b,stream,new,bytes,stream,output,request,write,to,b,stream,final,transport,request,cloned,request,reg,new,request,b,stream,bytes,stream,input,final,run,once,runnable,new,run,once,new,abstract,runnable,override,public,void,on,failure,exception,e,logger,debug,failed,to,send,delayed,request,e,override,protected,void,do,run,throws,ioexception,connection,send,request,request,id,action,cloned,request,options,synchronized,this,if,cleared,runnable,run,else,requests,to,send,when,cleared,add,runnable,thread,pool,schedule,delay,thread,pool,names,generic,runnable,override,public,void,clear,callback,synchronized,this,assert,cleared,false,cleared,true,requests,to,send,when,cleared,for,each,runnable,run
MockTransportService -> public void addUnresponsiveRule(TransportAddress transportAddress, final TimeValue duration);1544554541;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.__@param duration the amount of time to delay sending and connecting.;public void addUnresponsiveRule(TransportAddress transportAddress, final TimeValue duration) {_        final long startTime = System.currentTimeMillis()___        Supplier<TimeValue> delaySupplier = () -> new TimeValue(duration.millis() - (System.currentTimeMillis() - startTime))___        transport().addConnectBehavior(transportAddress, (transport, discoveryNode, profile, listener) -> {_            TimeValue delay = delaySupplier.get()__            if (delay.millis() <= 0) {_                return original.openConnection(discoveryNode, profile, listener)__            }__            _            TimeValue connectingTimeout = TransportService.TCP_CONNECT_TIMEOUT.getDefault(Settings.EMPTY)__            try {_                if (delay.millis() < connectingTimeout.millis()) {_                    Thread.sleep(delay.millis())__                    return original.openConnection(discoveryNode, profile, listener)__                } else {_                    Thread.sleep(connectingTimeout.millis())__                    listener.onFailure(new ConnectTransportException(discoveryNode, "UNRESPONSIVE: simulated"))__                    return () -> {}__                }_            } catch (InterruptedException e) {_                listener.onFailure(new ConnectTransportException(discoveryNode, "UNRESPONSIVE: simulated"))__                return () -> {}__            }_        })___        transport().addSendBehavior(transportAddress, new StubbableTransport.SendRequestBehavior() {_            private final Queue<Runnable> requestsToSendWhenCleared = new LinkedBlockingDeque<>()__            private boolean cleared = false___            @Override_            public void sendRequest(Transport.Connection connection, long requestId, String action, TransportRequest request,_                                    TransportRequestOptions options) throws IOException {_                _                TimeValue delay = delaySupplier.get()__                if (delay.millis() <= 0) {_                    connection.sendRequest(requestId, action, request, options)__                    return__                }__                _                RequestHandlerRegistry reg = MockTransportService.this.getRequestHandler(action)__                BytesStreamOutput bStream = new BytesStreamOutput()__                request.writeTo(bStream)__                final TransportRequest clonedRequest = reg.newRequest(bStream.bytes().streamInput())___                final RunOnce runnable = new RunOnce(new AbstractRunnable() {_                    @Override_                    public void onFailure(Exception e) {_                        logger.debug("failed to send delayed request", e)__                    }__                    @Override_                    protected void doRun() throws IOException {_                        connection.sendRequest(requestId, action, clonedRequest, options)__                    }_                })___                _                synchronized (this) {_                    if (cleared) {_                        runnable.run()__                    } else {_                        requestsToSendWhenCleared.add(runnable)__                        threadPool.schedule(delay, ThreadPool.Names.GENERIC, runnable)__                    }_                }_            }__            @Override_            public void clearCallback() {_                synchronized (this) {_                    assert cleared == false__                    cleared = true__                    requestsToSendWhenCleared.forEach(Runnable::run)__                }_            }_        })__    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added,param,duration,the,amount,of,time,to,delay,sending,and,connecting;public,void,add,unresponsive,rule,transport,address,transport,address,final,time,value,duration,final,long,start,time,system,current,time,millis,supplier,time,value,delay,supplier,new,time,value,duration,millis,system,current,time,millis,start,time,transport,add,connect,behavior,transport,address,transport,discovery,node,profile,listener,time,value,delay,delay,supplier,get,if,delay,millis,0,return,original,open,connection,discovery,node,profile,listener,time,value,connecting,timeout,transport,service,get,default,settings,empty,try,if,delay,millis,connecting,timeout,millis,thread,sleep,delay,millis,return,original,open,connection,discovery,node,profile,listener,else,thread,sleep,connecting,timeout,millis,listener,on,failure,new,connect,transport,exception,discovery,node,unresponsive,simulated,return,catch,interrupted,exception,e,listener,on,failure,new,connect,transport,exception,discovery,node,unresponsive,simulated,return,transport,add,send,behavior,transport,address,new,stubbable,transport,send,request,behavior,private,final,queue,runnable,requests,to,send,when,cleared,new,linked,blocking,deque,private,boolean,cleared,false,override,public,void,send,request,transport,connection,connection,long,request,id,string,action,transport,request,request,transport,request,options,options,throws,ioexception,time,value,delay,delay,supplier,get,if,delay,millis,0,connection,send,request,request,id,action,request,options,return,request,handler,registry,reg,mock,transport,service,this,get,request,handler,action,bytes,stream,output,b,stream,new,bytes,stream,output,request,write,to,b,stream,final,transport,request,cloned,request,reg,new,request,b,stream,bytes,stream,input,final,run,once,runnable,new,run,once,new,abstract,runnable,override,public,void,on,failure,exception,e,logger,debug,failed,to,send,delayed,request,e,override,protected,void,do,run,throws,ioexception,connection,send,request,request,id,action,cloned,request,options,synchronized,this,if,cleared,runnable,run,else,requests,to,send,when,cleared,add,runnable,thread,pool,schedule,delay,thread,pool,names,generic,runnable,override,public,void,clear,callback,synchronized,this,assert,cleared,false,cleared,true,requests,to,send,when,cleared,for,each,runnable,run
MockTransportService -> public void addUnresponsiveRule(TransportAddress transportAddress, final TimeValue duration);1544823664;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.__@param duration the amount of time to delay sending and connecting.;public void addUnresponsiveRule(TransportAddress transportAddress, final TimeValue duration) {_        final long startTime = System.currentTimeMillis()___        Supplier<TimeValue> delaySupplier = () -> new TimeValue(duration.millis() - (System.currentTimeMillis() - startTime))___        transport().addConnectBehavior(transportAddress, (transport, discoveryNode, profile, listener) -> {_            TimeValue delay = delaySupplier.get()__            if (delay.millis() <= 0) {_                return original.openConnection(discoveryNode, profile, listener)__            }__            _            TimeValue connectingTimeout = TransportSettings.CONNECT_TIMEOUT.getDefault(Settings.EMPTY)__            try {_                if (delay.millis() < connectingTimeout.millis()) {_                    Thread.sleep(delay.millis())__                    return original.openConnection(discoveryNode, profile, listener)__                } else {_                    Thread.sleep(connectingTimeout.millis())__                    listener.onFailure(new ConnectTransportException(discoveryNode, "UNRESPONSIVE: simulated"))__                    return () -> {}__                }_            } catch (InterruptedException e) {_                listener.onFailure(new ConnectTransportException(discoveryNode, "UNRESPONSIVE: simulated"))__                return () -> {}__            }_        })___        transport().addSendBehavior(transportAddress, new StubbableTransport.SendRequestBehavior() {_            private final Queue<Runnable> requestsToSendWhenCleared = new LinkedBlockingDeque<>()__            private boolean cleared = false___            @Override_            public void sendRequest(Transport.Connection connection, long requestId, String action, TransportRequest request,_                                    TransportRequestOptions options) throws IOException {_                _                TimeValue delay = delaySupplier.get()__                if (delay.millis() <= 0) {_                    connection.sendRequest(requestId, action, request, options)__                    return__                }__                _                RequestHandlerRegistry reg = MockTransportService.this.getRequestHandler(action)__                BytesStreamOutput bStream = new BytesStreamOutput()__                request.writeTo(bStream)__                final TransportRequest clonedRequest = reg.newRequest(bStream.bytes().streamInput())___                final RunOnce runnable = new RunOnce(new AbstractRunnable() {_                    @Override_                    public void onFailure(Exception e) {_                        logger.debug("failed to send delayed request", e)__                    }__                    @Override_                    protected void doRun() throws IOException {_                        connection.sendRequest(requestId, action, clonedRequest, options)__                    }_                })___                _                synchronized (this) {_                    if (cleared) {_                        runnable.run()__                    } else {_                        requestsToSendWhenCleared.add(runnable)__                        threadPool.schedule(delay, ThreadPool.Names.GENERIC, runnable)__                    }_                }_            }__            @Override_            public void clearCallback() {_                synchronized (this) {_                    assert cleared == false__                    cleared = true__                    requestsToSendWhenCleared.forEach(Runnable::run)__                }_            }_        })__    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added,param,duration,the,amount,of,time,to,delay,sending,and,connecting;public,void,add,unresponsive,rule,transport,address,transport,address,final,time,value,duration,final,long,start,time,system,current,time,millis,supplier,time,value,delay,supplier,new,time,value,duration,millis,system,current,time,millis,start,time,transport,add,connect,behavior,transport,address,transport,discovery,node,profile,listener,time,value,delay,delay,supplier,get,if,delay,millis,0,return,original,open,connection,discovery,node,profile,listener,time,value,connecting,timeout,transport,settings,get,default,settings,empty,try,if,delay,millis,connecting,timeout,millis,thread,sleep,delay,millis,return,original,open,connection,discovery,node,profile,listener,else,thread,sleep,connecting,timeout,millis,listener,on,failure,new,connect,transport,exception,discovery,node,unresponsive,simulated,return,catch,interrupted,exception,e,listener,on,failure,new,connect,transport,exception,discovery,node,unresponsive,simulated,return,transport,add,send,behavior,transport,address,new,stubbable,transport,send,request,behavior,private,final,queue,runnable,requests,to,send,when,cleared,new,linked,blocking,deque,private,boolean,cleared,false,override,public,void,send,request,transport,connection,connection,long,request,id,string,action,transport,request,request,transport,request,options,options,throws,ioexception,time,value,delay,delay,supplier,get,if,delay,millis,0,connection,send,request,request,id,action,request,options,return,request,handler,registry,reg,mock,transport,service,this,get,request,handler,action,bytes,stream,output,b,stream,new,bytes,stream,output,request,write,to,b,stream,final,transport,request,cloned,request,reg,new,request,b,stream,bytes,stream,input,final,run,once,runnable,new,run,once,new,abstract,runnable,override,public,void,on,failure,exception,e,logger,debug,failed,to,send,delayed,request,e,override,protected,void,do,run,throws,ioexception,connection,send,request,request,id,action,cloned,request,options,synchronized,this,if,cleared,runnable,run,else,requests,to,send,when,cleared,add,runnable,thread,pool,schedule,delay,thread,pool,names,generic,runnable,override,public,void,clear,callback,synchronized,this,assert,cleared,false,cleared,true,requests,to,send,when,cleared,for,each,runnable,run
MockTransportService -> public void addUnresponsiveRule(TransportAddress transportAddress, final TimeValue duration);1548770891;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.__@param duration the amount of time to delay sending and connecting.;public void addUnresponsiveRule(TransportAddress transportAddress, final TimeValue duration) {_        final long startTime = System.currentTimeMillis()___        Supplier<TimeValue> delaySupplier = () -> new TimeValue(duration.millis() - (System.currentTimeMillis() - startTime))___        transport().addConnectBehavior(transportAddress, (transport, discoveryNode, profile, listener) -> {_            TimeValue delay = delaySupplier.get()__            if (delay.millis() <= 0) {_                return original.openConnection(discoveryNode, profile, listener)__            }__            _            TimeValue connectingTimeout = TransportSettings.CONNECT_TIMEOUT.getDefault(Settings.EMPTY)__            try {_                if (delay.millis() < connectingTimeout.millis()) {_                    Thread.sleep(delay.millis())__                    return original.openConnection(discoveryNode, profile, listener)__                } else {_                    Thread.sleep(connectingTimeout.millis())__                    listener.onFailure(new ConnectTransportException(discoveryNode, "UNRESPONSIVE: simulated"))__                    return () -> {}__                }_            } catch (InterruptedException e) {_                listener.onFailure(new ConnectTransportException(discoveryNode, "UNRESPONSIVE: simulated"))__                return () -> {}__            }_        })___        transport().addSendBehavior(transportAddress, new StubbableTransport.SendRequestBehavior() {_            private final Queue<Runnable> requestsToSendWhenCleared = new LinkedBlockingDeque<>()__            private boolean cleared = false___            @Override_            public void sendRequest(Transport.Connection connection, long requestId, String action, TransportRequest request,_                                    TransportRequestOptions options) throws IOException {_                _                TimeValue delay = delaySupplier.get()__                if (delay.millis() <= 0) {_                    connection.sendRequest(requestId, action, request, options)__                    return__                }__                _                RequestHandlerRegistry reg = MockTransportService.this.getRequestHandler(action)__                BytesStreamOutput bStream = new BytesStreamOutput()__                request.writeTo(bStream)__                final TransportRequest clonedRequest = reg.newRequest(bStream.bytes().streamInput())___                final RunOnce runnable = new RunOnce(new AbstractRunnable() {_                    @Override_                    public void onFailure(Exception e) {_                        logger.debug("failed to send delayed request", e)__                    }__                    @Override_                    protected void doRun() throws IOException {_                        connection.sendRequest(requestId, action, clonedRequest, options)__                    }_                })___                _                synchronized (this) {_                    if (cleared) {_                        runnable.run()__                    } else {_                        requestsToSendWhenCleared.add(runnable)__                        threadPool.schedule(delay, ThreadPool.Names.GENERIC, runnable)__                    }_                }_            }__            @Override_            public void clearCallback() {_                synchronized (this) {_                    assert cleared == false__                    cleared = true__                    requestsToSendWhenCleared.forEach(Runnable::run)__                }_            }_        })__    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added,param,duration,the,amount,of,time,to,delay,sending,and,connecting;public,void,add,unresponsive,rule,transport,address,transport,address,final,time,value,duration,final,long,start,time,system,current,time,millis,supplier,time,value,delay,supplier,new,time,value,duration,millis,system,current,time,millis,start,time,transport,add,connect,behavior,transport,address,transport,discovery,node,profile,listener,time,value,delay,delay,supplier,get,if,delay,millis,0,return,original,open,connection,discovery,node,profile,listener,time,value,connecting,timeout,transport,settings,get,default,settings,empty,try,if,delay,millis,connecting,timeout,millis,thread,sleep,delay,millis,return,original,open,connection,discovery,node,profile,listener,else,thread,sleep,connecting,timeout,millis,listener,on,failure,new,connect,transport,exception,discovery,node,unresponsive,simulated,return,catch,interrupted,exception,e,listener,on,failure,new,connect,transport,exception,discovery,node,unresponsive,simulated,return,transport,add,send,behavior,transport,address,new,stubbable,transport,send,request,behavior,private,final,queue,runnable,requests,to,send,when,cleared,new,linked,blocking,deque,private,boolean,cleared,false,override,public,void,send,request,transport,connection,connection,long,request,id,string,action,transport,request,request,transport,request,options,options,throws,ioexception,time,value,delay,delay,supplier,get,if,delay,millis,0,connection,send,request,request,id,action,request,options,return,request,handler,registry,reg,mock,transport,service,this,get,request,handler,action,bytes,stream,output,b,stream,new,bytes,stream,output,request,write,to,b,stream,final,transport,request,cloned,request,reg,new,request,b,stream,bytes,stream,input,final,run,once,runnable,new,run,once,new,abstract,runnable,override,public,void,on,failure,exception,e,logger,debug,failed,to,send,delayed,request,e,override,protected,void,do,run,throws,ioexception,connection,send,request,request,id,action,cloned,request,options,synchronized,this,if,cleared,runnable,run,else,requests,to,send,when,cleared,add,runnable,thread,pool,schedule,delay,thread,pool,names,generic,runnable,override,public,void,clear,callback,synchronized,this,assert,cleared,false,cleared,true,requests,to,send,when,cleared,for,each,runnable,run
MockTransportService -> public void addUnresponsiveRule(TransportAddress transportAddress, final TimeValue duration);1548790146;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.__@param duration the amount of time to delay sending and connecting.;public void addUnresponsiveRule(TransportAddress transportAddress, final TimeValue duration) {_        final long startTime = System.currentTimeMillis()___        Supplier<TimeValue> delaySupplier = () -> new TimeValue(duration.millis() - (System.currentTimeMillis() - startTime))___        transport().addConnectBehavior(transportAddress, (transport, discoveryNode, profile, listener) -> {_            TimeValue delay = delaySupplier.get()__            if (delay.millis() <= 0) {_                return original.openConnection(discoveryNode, profile, listener)__            }__            _            TimeValue connectingTimeout = TransportSettings.CONNECT_TIMEOUT.getDefault(Settings.EMPTY)__            try {_                if (delay.millis() < connectingTimeout.millis()) {_                    Thread.sleep(delay.millis())__                    return original.openConnection(discoveryNode, profile, listener)__                } else {_                    Thread.sleep(connectingTimeout.millis())__                    listener.onFailure(new ConnectTransportException(discoveryNode, "UNRESPONSIVE: simulated"))__                    return () -> {}__                }_            } catch (InterruptedException e) {_                listener.onFailure(new ConnectTransportException(discoveryNode, "UNRESPONSIVE: simulated"))__                return () -> {}__            }_        })___        transport().addSendBehavior(transportAddress, new StubbableTransport.SendRequestBehavior() {_            private final Queue<Runnable> requestsToSendWhenCleared = new LinkedBlockingDeque<>()__            private boolean cleared = false___            @Override_            public void sendRequest(Transport.Connection connection, long requestId, String action, TransportRequest request,_                                    TransportRequestOptions options) throws IOException {_                _                TimeValue delay = delaySupplier.get()__                if (delay.millis() <= 0) {_                    connection.sendRequest(requestId, action, request, options)__                    return__                }__                _                RequestHandlerRegistry reg = MockTransportService.this.getRequestHandler(action)__                BytesStreamOutput bStream = new BytesStreamOutput()__                request.writeTo(bStream)__                final TransportRequest clonedRequest = reg.newRequest(bStream.bytes().streamInput())___                final RunOnce runnable = new RunOnce(new AbstractRunnable() {_                    @Override_                    public void onFailure(Exception e) {_                        logger.debug("failed to send delayed request", e)__                    }__                    @Override_                    protected void doRun() throws IOException {_                        connection.sendRequest(requestId, action, clonedRequest, options)__                    }_                })___                _                synchronized (this) {_                    if (cleared) {_                        runnable.run()__                    } else {_                        requestsToSendWhenCleared.add(runnable)__                        threadPool.schedule(delay, ThreadPool.Names.GENERIC, runnable)__                    }_                }_            }__            @Override_            public void clearCallback() {_                synchronized (this) {_                    assert cleared == false__                    cleared = true__                    requestsToSendWhenCleared.forEach(Runnable::run)__                }_            }_        })__    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added,param,duration,the,amount,of,time,to,delay,sending,and,connecting;public,void,add,unresponsive,rule,transport,address,transport,address,final,time,value,duration,final,long,start,time,system,current,time,millis,supplier,time,value,delay,supplier,new,time,value,duration,millis,system,current,time,millis,start,time,transport,add,connect,behavior,transport,address,transport,discovery,node,profile,listener,time,value,delay,delay,supplier,get,if,delay,millis,0,return,original,open,connection,discovery,node,profile,listener,time,value,connecting,timeout,transport,settings,get,default,settings,empty,try,if,delay,millis,connecting,timeout,millis,thread,sleep,delay,millis,return,original,open,connection,discovery,node,profile,listener,else,thread,sleep,connecting,timeout,millis,listener,on,failure,new,connect,transport,exception,discovery,node,unresponsive,simulated,return,catch,interrupted,exception,e,listener,on,failure,new,connect,transport,exception,discovery,node,unresponsive,simulated,return,transport,add,send,behavior,transport,address,new,stubbable,transport,send,request,behavior,private,final,queue,runnable,requests,to,send,when,cleared,new,linked,blocking,deque,private,boolean,cleared,false,override,public,void,send,request,transport,connection,connection,long,request,id,string,action,transport,request,request,transport,request,options,options,throws,ioexception,time,value,delay,delay,supplier,get,if,delay,millis,0,connection,send,request,request,id,action,request,options,return,request,handler,registry,reg,mock,transport,service,this,get,request,handler,action,bytes,stream,output,b,stream,new,bytes,stream,output,request,write,to,b,stream,final,transport,request,cloned,request,reg,new,request,b,stream,bytes,stream,input,final,run,once,runnable,new,run,once,new,abstract,runnable,override,public,void,on,failure,exception,e,logger,debug,failed,to,send,delayed,request,e,override,protected,void,do,run,throws,ioexception,connection,send,request,request,id,action,cloned,request,options,synchronized,this,if,cleared,runnable,run,else,requests,to,send,when,cleared,add,runnable,thread,pool,schedule,delay,thread,pool,names,generic,runnable,override,public,void,clear,callback,synchronized,this,assert,cleared,false,cleared,true,requests,to,send,when,cleared,for,each,runnable,run
MockTransportService -> public void addUnresponsiveRule(TransportAddress transportAddress, final TimeValue duration);1548953505;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.__@param duration the amount of time to delay sending and connecting.;public void addUnresponsiveRule(TransportAddress transportAddress, final TimeValue duration) {_        final long startTime = System.currentTimeMillis()___        Supplier<TimeValue> delaySupplier = () -> new TimeValue(duration.millis() - (System.currentTimeMillis() - startTime))___        transport().addConnectBehavior(transportAddress, (transport, discoveryNode, profile, listener) -> {_            TimeValue delay = delaySupplier.get()__            if (delay.millis() <= 0) {_                return original.openConnection(discoveryNode, profile, listener)__            }__            _            TimeValue connectingTimeout = TransportSettings.CONNECT_TIMEOUT.getDefault(Settings.EMPTY)__            try {_                if (delay.millis() < connectingTimeout.millis()) {_                    Thread.sleep(delay.millis())__                    return original.openConnection(discoveryNode, profile, listener)__                } else {_                    Thread.sleep(connectingTimeout.millis())__                    listener.onFailure(new ConnectTransportException(discoveryNode, "UNRESPONSIVE: simulated"))__                    return () -> {}__                }_            } catch (InterruptedException e) {_                listener.onFailure(new ConnectTransportException(discoveryNode, "UNRESPONSIVE: simulated"))__                return () -> {}__            }_        })___        transport().addSendBehavior(transportAddress, new StubbableTransport.SendRequestBehavior() {_            private final Queue<Runnable> requestsToSendWhenCleared = new LinkedBlockingDeque<>()__            private boolean cleared = false___            @Override_            public void sendRequest(Transport.Connection connection, long requestId, String action, TransportRequest request,_                                    TransportRequestOptions options) throws IOException {_                _                TimeValue delay = delaySupplier.get()__                if (delay.millis() <= 0) {_                    connection.sendRequest(requestId, action, request, options)__                    return__                }__                _                RequestHandlerRegistry reg = MockTransportService.this.getRequestHandler(action)__                BytesStreamOutput bStream = new BytesStreamOutput()__                request.writeTo(bStream)__                final TransportRequest clonedRequest = reg.newRequest(bStream.bytes().streamInput())___                final RunOnce runnable = new RunOnce(new AbstractRunnable() {_                    @Override_                    public void onFailure(Exception e) {_                        logger.debug("failed to send delayed request", e)__                    }__                    @Override_                    protected void doRun() throws IOException {_                        connection.sendRequest(requestId, action, clonedRequest, options)__                    }_                })___                _                synchronized (this) {_                    if (cleared) {_                        runnable.run()__                    } else {_                        requestsToSendWhenCleared.add(runnable)__                        threadPool.schedule(runnable, delay, ThreadPool.Names.GENERIC)__                    }_                }_            }__            @Override_            public void clearCallback() {_                synchronized (this) {_                    assert cleared == false__                    cleared = true__                    requestsToSendWhenCleared.forEach(Runnable::run)__                }_            }_        })__    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added,param,duration,the,amount,of,time,to,delay,sending,and,connecting;public,void,add,unresponsive,rule,transport,address,transport,address,final,time,value,duration,final,long,start,time,system,current,time,millis,supplier,time,value,delay,supplier,new,time,value,duration,millis,system,current,time,millis,start,time,transport,add,connect,behavior,transport,address,transport,discovery,node,profile,listener,time,value,delay,delay,supplier,get,if,delay,millis,0,return,original,open,connection,discovery,node,profile,listener,time,value,connecting,timeout,transport,settings,get,default,settings,empty,try,if,delay,millis,connecting,timeout,millis,thread,sleep,delay,millis,return,original,open,connection,discovery,node,profile,listener,else,thread,sleep,connecting,timeout,millis,listener,on,failure,new,connect,transport,exception,discovery,node,unresponsive,simulated,return,catch,interrupted,exception,e,listener,on,failure,new,connect,transport,exception,discovery,node,unresponsive,simulated,return,transport,add,send,behavior,transport,address,new,stubbable,transport,send,request,behavior,private,final,queue,runnable,requests,to,send,when,cleared,new,linked,blocking,deque,private,boolean,cleared,false,override,public,void,send,request,transport,connection,connection,long,request,id,string,action,transport,request,request,transport,request,options,options,throws,ioexception,time,value,delay,delay,supplier,get,if,delay,millis,0,connection,send,request,request,id,action,request,options,return,request,handler,registry,reg,mock,transport,service,this,get,request,handler,action,bytes,stream,output,b,stream,new,bytes,stream,output,request,write,to,b,stream,final,transport,request,cloned,request,reg,new,request,b,stream,bytes,stream,input,final,run,once,runnable,new,run,once,new,abstract,runnable,override,public,void,on,failure,exception,e,logger,debug,failed,to,send,delayed,request,e,override,protected,void,do,run,throws,ioexception,connection,send,request,request,id,action,cloned,request,options,synchronized,this,if,cleared,runnable,run,else,requests,to,send,when,cleared,add,runnable,thread,pool,schedule,runnable,delay,thread,pool,names,generic,override,public,void,clear,callback,synchronized,this,assert,cleared,false,cleared,true,requests,to,send,when,cleared,for,each,runnable,run
MockTransportService -> public void addUnresponsiveRule(TransportAddress transportAddress, final TimeValue duration);1550601141;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.__@param duration the amount of time to delay sending and connecting.;public void addUnresponsiveRule(TransportAddress transportAddress, final TimeValue duration) {_        final long startTime = System.currentTimeMillis()___        Supplier<TimeValue> delaySupplier = () -> new TimeValue(duration.millis() - (System.currentTimeMillis() - startTime))___        transport().addConnectBehavior(transportAddress, (transport, discoveryNode, profile, listener) -> {_            TimeValue delay = delaySupplier.get()__            if (delay.millis() <= 0) {_                return original.openConnection(discoveryNode, profile, listener)__            }__            _            TimeValue connectingTimeout = TransportSettings.CONNECT_TIMEOUT.getDefault(Settings.EMPTY)__            try {_                if (delay.millis() < connectingTimeout.millis()) {_                    Thread.sleep(delay.millis())__                    return original.openConnection(discoveryNode, profile, listener)__                } else {_                    Thread.sleep(connectingTimeout.millis())__                    listener.onFailure(new ConnectTransportException(discoveryNode, "UNRESPONSIVE: simulated"))__                    return () -> {}__                }_            } catch (InterruptedException e) {_                listener.onFailure(new ConnectTransportException(discoveryNode, "UNRESPONSIVE: simulated"))__                return () -> {}__            }_        })___        transport().addSendBehavior(transportAddress, new StubbableTransport.SendRequestBehavior() {_            private final Queue<Runnable> requestsToSendWhenCleared = new LinkedBlockingDeque<>()__            private boolean cleared = false___            @Override_            public void sendRequest(Transport.Connection connection, long requestId, String action, TransportRequest request,_                                    TransportRequestOptions options) throws IOException {_                _                TimeValue delay = delaySupplier.get()__                if (delay.millis() <= 0) {_                    connection.sendRequest(requestId, action, request, options)__                    return__                }__                _                RequestHandlerRegistry reg = MockTransportService.this.getRequestHandler(action)__                BytesStreamOutput bStream = new BytesStreamOutput()__                request.writeTo(bStream)__                final TransportRequest clonedRequest = reg.newRequest(bStream.bytes().streamInput())___                final RunOnce runnable = new RunOnce(new AbstractRunnable() {_                    @Override_                    public void onFailure(Exception e) {_                        logger.debug("failed to send delayed request", e)__                    }__                    @Override_                    protected void doRun() throws IOException {_                        connection.sendRequest(requestId, action, clonedRequest, options)__                    }_                })___                _                synchronized (this) {_                    if (cleared) {_                        runnable.run()__                    } else {_                        requestsToSendWhenCleared.add(runnable)__                        threadPool.schedule(runnable, delay, ThreadPool.Names.GENERIC)__                    }_                }_            }__            @Override_            public void clearCallback() {_                synchronized (this) {_                    assert cleared == false__                    cleared = true__                    requestsToSendWhenCleared.forEach(Runnable::run)__                }_            }_        })__    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added,param,duration,the,amount,of,time,to,delay,sending,and,connecting;public,void,add,unresponsive,rule,transport,address,transport,address,final,time,value,duration,final,long,start,time,system,current,time,millis,supplier,time,value,delay,supplier,new,time,value,duration,millis,system,current,time,millis,start,time,transport,add,connect,behavior,transport,address,transport,discovery,node,profile,listener,time,value,delay,delay,supplier,get,if,delay,millis,0,return,original,open,connection,discovery,node,profile,listener,time,value,connecting,timeout,transport,settings,get,default,settings,empty,try,if,delay,millis,connecting,timeout,millis,thread,sleep,delay,millis,return,original,open,connection,discovery,node,profile,listener,else,thread,sleep,connecting,timeout,millis,listener,on,failure,new,connect,transport,exception,discovery,node,unresponsive,simulated,return,catch,interrupted,exception,e,listener,on,failure,new,connect,transport,exception,discovery,node,unresponsive,simulated,return,transport,add,send,behavior,transport,address,new,stubbable,transport,send,request,behavior,private,final,queue,runnable,requests,to,send,when,cleared,new,linked,blocking,deque,private,boolean,cleared,false,override,public,void,send,request,transport,connection,connection,long,request,id,string,action,transport,request,request,transport,request,options,options,throws,ioexception,time,value,delay,delay,supplier,get,if,delay,millis,0,connection,send,request,request,id,action,request,options,return,request,handler,registry,reg,mock,transport,service,this,get,request,handler,action,bytes,stream,output,b,stream,new,bytes,stream,output,request,write,to,b,stream,final,transport,request,cloned,request,reg,new,request,b,stream,bytes,stream,input,final,run,once,runnable,new,run,once,new,abstract,runnable,override,public,void,on,failure,exception,e,logger,debug,failed,to,send,delayed,request,e,override,protected,void,do,run,throws,ioexception,connection,send,request,request,id,action,cloned,request,options,synchronized,this,if,cleared,runnable,run,else,requests,to,send,when,cleared,add,runnable,thread,pool,schedule,runnable,delay,thread,pool,names,generic,override,public,void,clear,callback,synchronized,this,assert,cleared,false,cleared,true,requests,to,send,when,cleared,for,each,runnable,run
MockTransportService -> public void addUnresponsiveRule(TransportAddress transportAddress, final TimeValue duration);1551176390;Adds a rule that will cause ignores each send request, simulating an unresponsive node_and failing to connect once the rule was added.__@param duration the amount of time to delay sending and connecting.;public void addUnresponsiveRule(TransportAddress transportAddress, final TimeValue duration) {_        final long startTime = System.currentTimeMillis()___        Supplier<TimeValue> delaySupplier = () -> new TimeValue(duration.millis() - (System.currentTimeMillis() - startTime))___        transport().addConnectBehavior(transportAddress, (transport, discoveryNode, profile, listener) -> {_            TimeValue delay = delaySupplier.get()__            if (delay.millis() <= 0) {_                return original.openConnection(discoveryNode, profile, listener)__            }__            _            TimeValue connectingTimeout = TransportSettings.CONNECT_TIMEOUT.getDefault(Settings.EMPTY)__            try {_                if (delay.millis() < connectingTimeout.millis()) {_                    Thread.sleep(delay.millis())__                    return original.openConnection(discoveryNode, profile, listener)__                } else {_                    Thread.sleep(connectingTimeout.millis())__                    listener.onFailure(new ConnectTransportException(discoveryNode, "UNRESPONSIVE: simulated"))__                    return () -> {}__                }_            } catch (InterruptedException e) {_                listener.onFailure(new ConnectTransportException(discoveryNode, "UNRESPONSIVE: simulated"))__                return () -> {}__            }_        })___        transport().addSendBehavior(transportAddress, new StubbableTransport.SendRequestBehavior() {_            private final Queue<Runnable> requestsToSendWhenCleared = new LinkedBlockingDeque<>()__            private boolean cleared = false___            @Override_            public void sendRequest(Transport.Connection connection, long requestId, String action, TransportRequest request,_                                    TransportRequestOptions options) throws IOException {_                _                TimeValue delay = delaySupplier.get()__                if (delay.millis() <= 0) {_                    connection.sendRequest(requestId, action, request, options)__                    return__                }__                _                RequestHandlerRegistry reg = MockTransportService.this.getRequestHandler(action)__                BytesStreamOutput bStream = new BytesStreamOutput()__                request.writeTo(bStream)__                final TransportRequest clonedRequest = reg.newRequest(bStream.bytes().streamInput())___                final RunOnce runnable = new RunOnce(new AbstractRunnable() {_                    @Override_                    public void onFailure(Exception e) {_                        logger.debug("failed to send delayed request", e)__                    }__                    @Override_                    protected void doRun() throws IOException {_                        connection.sendRequest(requestId, action, clonedRequest, options)__                    }_                })___                _                synchronized (this) {_                    if (cleared) {_                        runnable.run()__                    } else {_                        requestsToSendWhenCleared.add(runnable)__                        threadPool.schedule(runnable, delay, ThreadPool.Names.GENERIC)__                    }_                }_            }__            @Override_            public void clearCallback() {_                synchronized (this) {_                    assert cleared == false__                    cleared = true__                    requestsToSendWhenCleared.forEach(Runnable::run)__                }_            }_        })__    };adds,a,rule,that,will,cause,ignores,each,send,request,simulating,an,unresponsive,node,and,failing,to,connect,once,the,rule,was,added,param,duration,the,amount,of,time,to,delay,sending,and,connecting;public,void,add,unresponsive,rule,transport,address,transport,address,final,time,value,duration,final,long,start,time,system,current,time,millis,supplier,time,value,delay,supplier,new,time,value,duration,millis,system,current,time,millis,start,time,transport,add,connect,behavior,transport,address,transport,discovery,node,profile,listener,time,value,delay,delay,supplier,get,if,delay,millis,0,return,original,open,connection,discovery,node,profile,listener,time,value,connecting,timeout,transport,settings,get,default,settings,empty,try,if,delay,millis,connecting,timeout,millis,thread,sleep,delay,millis,return,original,open,connection,discovery,node,profile,listener,else,thread,sleep,connecting,timeout,millis,listener,on,failure,new,connect,transport,exception,discovery,node,unresponsive,simulated,return,catch,interrupted,exception,e,listener,on,failure,new,connect,transport,exception,discovery,node,unresponsive,simulated,return,transport,add,send,behavior,transport,address,new,stubbable,transport,send,request,behavior,private,final,queue,runnable,requests,to,send,when,cleared,new,linked,blocking,deque,private,boolean,cleared,false,override,public,void,send,request,transport,connection,connection,long,request,id,string,action,transport,request,request,transport,request,options,options,throws,ioexception,time,value,delay,delay,supplier,get,if,delay,millis,0,connection,send,request,request,id,action,request,options,return,request,handler,registry,reg,mock,transport,service,this,get,request,handler,action,bytes,stream,output,b,stream,new,bytes,stream,output,request,write,to,b,stream,final,transport,request,cloned,request,reg,new,request,b,stream,bytes,stream,input,final,run,once,runnable,new,run,once,new,abstract,runnable,override,public,void,on,failure,exception,e,logger,debug,failed,to,send,delayed,request,e,override,protected,void,do,run,throws,ioexception,connection,send,request,request,id,action,cloned,request,options,synchronized,this,if,cleared,runnable,run,else,requests,to,send,when,cleared,add,runnable,thread,pool,schedule,runnable,delay,thread,pool,names,generic,override,public,void,clear,callback,synchronized,this,assert,cleared,false,cleared,true,requests,to,send,when,cleared,for,each,runnable,run
MockTransportService -> public void clearAllRules();1524684173;Clears all the registered rules.;public void clearAllRules() {_        transport().transports.clear()__    };clears,all,the,registered,rules;public,void,clear,all,rules,transport,transports,clear
MockTransportService -> public void clearAllRules();1525162917;Clears all the registered rules.;public void clearAllRules() {_        transport().transports.clear()__    };clears,all,the,registered,rules;public,void,clear,all,rules,transport,transports,clear
MockTransportService -> public void clearAllRules();1531179852;Clears all the registered rules.;public void clearAllRules() {_        transport().transports.clear()__    };clears,all,the,registered,rules;public,void,clear,all,rules,transport,transports,clear
MockTransportService -> public void clearAllRules();1534203100;Clears all the registered rules.;public void clearAllRules() {_        transport().clearBehaviors()__        connectionManager().clearBehaviors()__    };clears,all,the,registered,rules;public,void,clear,all,rules,transport,clear,behaviors,connection,manager,clear,behaviors
MockTransportService -> public void clearAllRules();1534362961;Clears all the registered rules.;public void clearAllRules() {_        transport().clearBehaviors()__        connectionManager().clearBehaviors()__    };clears,all,the,registered,rules;public,void,clear,all,rules,transport,clear,behaviors,connection,manager,clear,behaviors
MockTransportService -> public void clearAllRules();1535383145;Clears all the registered rules.;public void clearAllRules() {_        transport().clearBehaviors()__        connectionManager().clearBehaviors()__    };clears,all,the,registered,rules;public,void,clear,all,rules,transport,clear,behaviors,connection,manager,clear,behaviors
MockTransportService -> public void clearAllRules();1541092382;Clears all the registered rules.;public void clearAllRules() {_        transport().clearBehaviors()__        connectionManager().clearBehaviors()__    };clears,all,the,registered,rules;public,void,clear,all,rules,transport,clear,behaviors,connection,manager,clear,behaviors
MockTransportService -> public void clearAllRules();1542270280;Clears all the registered rules.;public void clearAllRules() {_        transport().clearBehaviors()__        connectionManager().clearBehaviors()__    };clears,all,the,registered,rules;public,void,clear,all,rules,transport,clear,behaviors,connection,manager,clear,behaviors
MockTransportService -> public void clearAllRules();1542646292;Clears all the registered rules.;public void clearAllRules() {_        transport().clearBehaviors()__        connectionManager().clearBehaviors()__    };clears,all,the,registered,rules;public,void,clear,all,rules,transport,clear,behaviors,connection,manager,clear,behaviors
MockTransportService -> public void clearAllRules();1543602642;Clears all the registered rules.;public void clearAllRules() {_        transport().clearBehaviors()__        connectionManager().clearBehaviors()__    };clears,all,the,registered,rules;public,void,clear,all,rules,transport,clear,behaviors,connection,manager,clear,behaviors
MockTransportService -> public void clearAllRules();1544206631;Clears all the registered rules.;public void clearAllRules() {_        transport().clearBehaviors()__        connectionManager().clearBehaviors()__    };clears,all,the,registered,rules;public,void,clear,all,rules,transport,clear,behaviors,connection,manager,clear,behaviors
MockTransportService -> public void clearAllRules();1544554541;Clears all the registered rules.;public void clearAllRules() {_        transport().clearBehaviors()__        connectionManager().clearBehaviors()__    };clears,all,the,registered,rules;public,void,clear,all,rules,transport,clear,behaviors,connection,manager,clear,behaviors
MockTransportService -> public void clearAllRules();1544823664;Clears all the registered rules.;public void clearAllRules() {_        transport().clearBehaviors()__        connectionManager().clearBehaviors()__    };clears,all,the,registered,rules;public,void,clear,all,rules,transport,clear,behaviors,connection,manager,clear,behaviors
MockTransportService -> public void clearAllRules();1548770891;Clears all the registered rules.;public void clearAllRules() {_        transport().clearBehaviors()__        connectionManager().clearBehaviors()__    };clears,all,the,registered,rules;public,void,clear,all,rules,transport,clear,behaviors,connection,manager,clear,behaviors
MockTransportService -> public void clearAllRules();1548790146;Clears all the registered rules.;public void clearAllRules() {_        transport().clearBehaviors()__        connectionManager().clearBehaviors()__    };clears,all,the,registered,rules;public,void,clear,all,rules,transport,clear,behaviors,connection,manager,clear,behaviors
MockTransportService -> public void clearAllRules();1548953505;Clears all the registered rules.;public void clearAllRules() {_        transport().clearBehaviors()__        connectionManager().clearBehaviors()__    };clears,all,the,registered,rules;public,void,clear,all,rules,transport,clear,behaviors,connection,manager,clear,behaviors
MockTransportService -> public void clearAllRules();1550601141;Clears all the registered rules.;public void clearAllRules() {_        transport().clearBehaviors()__        connectionManager().clearBehaviors()__    };clears,all,the,registered,rules;public,void,clear,all,rules,transport,clear,behaviors,connection,manager,clear,behaviors
MockTransportService -> public void clearAllRules();1551176390;Clears all the registered rules.;public void clearAllRules() {_        transport().clearBehaviors()__        connectionManager().clearBehaviors()__    };clears,all,the,registered,rules;public,void,clear,all,rules,transport,clear,behaviors,connection,manager,clear,behaviors
MockTransportService -> public void addFailToSendNoConnectRule(TransportAddress transportAddress, final Set<String> blockedActions);1524684173;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportAddress transportAddress, final Set<String> blockedActions) {__        addDelegate(transportAddress, new DelegateTransport(original) {__            @Override_            protected void sendRequest(Connection connection, long requestId, String action, TransportRequest request,_                                       TransportRequestOptions options) throws IOException {_                if (blockedActions.contains(action)) {_                    logger.info("--> preventing {} request", action)__                    connection.close()__                }_                connection.sendRequest(requestId, action, request, options)__            }_        })__    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,address,transport,address,final,set,string,blocked,actions,add,delegate,transport,address,new,delegate,transport,original,override,protected,void,send,request,connection,connection,long,request,id,string,action,transport,request,request,transport,request,options,options,throws,ioexception,if,blocked,actions,contains,action,logger,info,preventing,request,action,connection,close,connection,send,request,request,id,action,request,options
MockTransportService -> public void addFailToSendNoConnectRule(TransportAddress transportAddress, final Set<String> blockedActions);1525162917;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportAddress transportAddress, final Set<String> blockedActions) {__        addDelegate(transportAddress, new DelegateTransport(original) {__            @Override_            protected void sendRequest(Connection connection, long requestId, String action, TransportRequest request,_                                       TransportRequestOptions options) throws IOException {_                if (blockedActions.contains(action)) {_                    logger.info("--> preventing {} request", action)__                    connection.close()__                }_                connection.sendRequest(requestId, action, request, options)__            }_        })__    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,address,transport,address,final,set,string,blocked,actions,add,delegate,transport,address,new,delegate,transport,original,override,protected,void,send,request,connection,connection,long,request,id,string,action,transport,request,request,transport,request,options,options,throws,ioexception,if,blocked,actions,contains,action,logger,info,preventing,request,action,connection,close,connection,send,request,request,id,action,request,options
MockTransportService -> public void addFailToSendNoConnectRule(TransportAddress transportAddress, final Set<String> blockedActions);1531179852;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportAddress transportAddress, final Set<String> blockedActions) {__        addDelegate(transportAddress, new DelegateTransport(original) {__            @Override_            protected void sendRequest(Connection connection, long requestId, String action, TransportRequest request,_                                       TransportRequestOptions options) throws IOException {_                if (blockedActions.contains(action)) {_                    logger.info("--> preventing {} request", action)__                    connection.close()__                }_                connection.sendRequest(requestId, action, request, options)__            }_        })__    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,address,transport,address,final,set,string,blocked,actions,add,delegate,transport,address,new,delegate,transport,original,override,protected,void,send,request,connection,connection,long,request,id,string,action,transport,request,request,transport,request,options,options,throws,ioexception,if,blocked,actions,contains,action,logger,info,preventing,request,action,connection,close,connection,send,request,request,id,action,request,options
MockTransportService -> public void addFailToSendNoConnectRule(TransportAddress transportAddress, final Set<String> blockedActions);1534203100;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportAddress transportAddress, final Set<String> blockedActions) {_        transport().addSendBehavior(transportAddress, (connection, requestId, action, request, options) -> {_            if (blockedActions.contains(action)) {_                logger.info("--> preventing {} request", action)__                connection.close()__            }_            connection.sendRequest(requestId, action, request, options)__        })__    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,address,transport,address,final,set,string,blocked,actions,transport,add,send,behavior,transport,address,connection,request,id,action,request,options,if,blocked,actions,contains,action,logger,info,preventing,request,action,connection,close,connection,send,request,request,id,action,request,options
MockTransportService -> public void addFailToSendNoConnectRule(TransportAddress transportAddress, final Set<String> blockedActions);1534362961;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportAddress transportAddress, final Set<String> blockedActions) {_        transport().addSendBehavior(transportAddress, (connection, requestId, action, request, options) -> {_            if (blockedActions.contains(action)) {_                logger.info("--> preventing {} request", action)__                connection.close()__            }_            connection.sendRequest(requestId, action, request, options)__        })__    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,address,transport,address,final,set,string,blocked,actions,transport,add,send,behavior,transport,address,connection,request,id,action,request,options,if,blocked,actions,contains,action,logger,info,preventing,request,action,connection,close,connection,send,request,request,id,action,request,options
MockTransportService -> public void addFailToSendNoConnectRule(TransportAddress transportAddress, final Set<String> blockedActions);1535383145;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportAddress transportAddress, final Set<String> blockedActions) {_        transport().addSendBehavior(transportAddress, (connection, requestId, action, request, options) -> {_            if (blockedActions.contains(action)) {_                logger.info("--> preventing {} request", action)__                connection.close()__            }_            connection.sendRequest(requestId, action, request, options)__        })__    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,address,transport,address,final,set,string,blocked,actions,transport,add,send,behavior,transport,address,connection,request,id,action,request,options,if,blocked,actions,contains,action,logger,info,preventing,request,action,connection,close,connection,send,request,request,id,action,request,options
MockTransportService -> public void addFailToSendNoConnectRule(TransportAddress transportAddress, final Set<String> blockedActions);1541092382;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportAddress transportAddress, final Set<String> blockedActions) {_        transport().addSendBehavior(transportAddress, (connection, requestId, action, request, options) -> {_            if (blockedActions.contains(action)) {_                logger.info("--> preventing {} request", action)__                connection.close()__            }_            connection.sendRequest(requestId, action, request, options)__        })__    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,address,transport,address,final,set,string,blocked,actions,transport,add,send,behavior,transport,address,connection,request,id,action,request,options,if,blocked,actions,contains,action,logger,info,preventing,request,action,connection,close,connection,send,request,request,id,action,request,options
MockTransportService -> public void addFailToSendNoConnectRule(TransportAddress transportAddress, final Set<String> blockedActions);1542270280;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportAddress transportAddress, final Set<String> blockedActions) {_        transport().addSendBehavior(transportAddress, (connection, requestId, action, request, options) -> {_            if (blockedActions.contains(action)) {_                logger.info("--> preventing {} request", action)__                connection.close()__            }_            connection.sendRequest(requestId, action, request, options)__        })__    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,address,transport,address,final,set,string,blocked,actions,transport,add,send,behavior,transport,address,connection,request,id,action,request,options,if,blocked,actions,contains,action,logger,info,preventing,request,action,connection,close,connection,send,request,request,id,action,request,options
MockTransportService -> public void addFailToSendNoConnectRule(TransportAddress transportAddress, final Set<String> blockedActions);1542646292;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportAddress transportAddress, final Set<String> blockedActions) {_        transport().addSendBehavior(transportAddress, (connection, requestId, action, request, options) -> {_            if (blockedActions.contains(action)) {_                logger.info("--> preventing {} request", action)__                connection.close()__            }_            connection.sendRequest(requestId, action, request, options)__        })__    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,address,transport,address,final,set,string,blocked,actions,transport,add,send,behavior,transport,address,connection,request,id,action,request,options,if,blocked,actions,contains,action,logger,info,preventing,request,action,connection,close,connection,send,request,request,id,action,request,options
MockTransportService -> public void addFailToSendNoConnectRule(TransportAddress transportAddress, final Set<String> blockedActions);1543602642;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportAddress transportAddress, final Set<String> blockedActions) {_        transport().addSendBehavior(transportAddress, (connection, requestId, action, request, options) -> {_            if (blockedActions.contains(action)) {_                logger.info("--> preventing {} request", action)__                connection.close()__            }_            connection.sendRequest(requestId, action, request, options)__        })__    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,address,transport,address,final,set,string,blocked,actions,transport,add,send,behavior,transport,address,connection,request,id,action,request,options,if,blocked,actions,contains,action,logger,info,preventing,request,action,connection,close,connection,send,request,request,id,action,request,options
MockTransportService -> public void addFailToSendNoConnectRule(TransportAddress transportAddress, final Set<String> blockedActions);1544206631;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportAddress transportAddress, final Set<String> blockedActions) {_        transport().addSendBehavior(transportAddress, (connection, requestId, action, request, options) -> {_            if (blockedActions.contains(action)) {_                logger.info("--> preventing {} request", action)__                connection.close()__            }_            connection.sendRequest(requestId, action, request, options)__        })__    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,address,transport,address,final,set,string,blocked,actions,transport,add,send,behavior,transport,address,connection,request,id,action,request,options,if,blocked,actions,contains,action,logger,info,preventing,request,action,connection,close,connection,send,request,request,id,action,request,options
MockTransportService -> public void addFailToSendNoConnectRule(TransportAddress transportAddress, final Set<String> blockedActions);1544554541;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportAddress transportAddress, final Set<String> blockedActions) {_        transport().addSendBehavior(transportAddress, (connection, requestId, action, request, options) -> {_            if (blockedActions.contains(action)) {_                logger.info("--> preventing {} request", action)__                connection.close()__            }_            connection.sendRequest(requestId, action, request, options)__        })__    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,address,transport,address,final,set,string,blocked,actions,transport,add,send,behavior,transport,address,connection,request,id,action,request,options,if,blocked,actions,contains,action,logger,info,preventing,request,action,connection,close,connection,send,request,request,id,action,request,options
MockTransportService -> public void addFailToSendNoConnectRule(TransportAddress transportAddress, final Set<String> blockedActions);1544823664;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportAddress transportAddress, final Set<String> blockedActions) {_        transport().addSendBehavior(transportAddress, (connection, requestId, action, request, options) -> {_            if (blockedActions.contains(action)) {_                logger.info("--> preventing {} request", action)__                connection.close()__            }_            connection.sendRequest(requestId, action, request, options)__        })__    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,address,transport,address,final,set,string,blocked,actions,transport,add,send,behavior,transport,address,connection,request,id,action,request,options,if,blocked,actions,contains,action,logger,info,preventing,request,action,connection,close,connection,send,request,request,id,action,request,options
MockTransportService -> public void addFailToSendNoConnectRule(TransportAddress transportAddress, final Set<String> blockedActions);1548770891;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportAddress transportAddress, final Set<String> blockedActions) {_        transport().addSendBehavior(transportAddress, (connection, requestId, action, request, options) -> {_            if (blockedActions.contains(action)) {_                logger.info("--> preventing {} request", action)__                connection.close()__            }_            connection.sendRequest(requestId, action, request, options)__        })__    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,address,transport,address,final,set,string,blocked,actions,transport,add,send,behavior,transport,address,connection,request,id,action,request,options,if,blocked,actions,contains,action,logger,info,preventing,request,action,connection,close,connection,send,request,request,id,action,request,options
MockTransportService -> public void addFailToSendNoConnectRule(TransportAddress transportAddress, final Set<String> blockedActions);1548790146;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportAddress transportAddress, final Set<String> blockedActions) {_        transport().addSendBehavior(transportAddress, (connection, requestId, action, request, options) -> {_            if (blockedActions.contains(action)) {_                logger.info("--> preventing {} request", action)__                connection.close()__            }_            connection.sendRequest(requestId, action, request, options)__        })__    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,address,transport,address,final,set,string,blocked,actions,transport,add,send,behavior,transport,address,connection,request,id,action,request,options,if,blocked,actions,contains,action,logger,info,preventing,request,action,connection,close,connection,send,request,request,id,action,request,options
MockTransportService -> public void addFailToSendNoConnectRule(TransportAddress transportAddress, final Set<String> blockedActions);1548953505;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportAddress transportAddress, final Set<String> blockedActions) {_        transport().addSendBehavior(transportAddress, (connection, requestId, action, request, options) -> {_            if (blockedActions.contains(action)) {_                logger.info("--> preventing {} request", action)__                connection.close()__            }_            connection.sendRequest(requestId, action, request, options)__        })__    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,address,transport,address,final,set,string,blocked,actions,transport,add,send,behavior,transport,address,connection,request,id,action,request,options,if,blocked,actions,contains,action,logger,info,preventing,request,action,connection,close,connection,send,request,request,id,action,request,options
MockTransportService -> public void addFailToSendNoConnectRule(TransportAddress transportAddress, final Set<String> blockedActions);1550601141;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportAddress transportAddress, final Set<String> blockedActions) {_        transport().addSendBehavior(transportAddress, (connection, requestId, action, request, options) -> {_            if (blockedActions.contains(action)) {_                logger.info("--> preventing {} request", action)__                connection.close()__            }_            connection.sendRequest(requestId, action, request, options)__        })__    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,address,transport,address,final,set,string,blocked,actions,transport,add,send,behavior,transport,address,connection,request,id,action,request,options,if,blocked,actions,contains,action,logger,info,preventing,request,action,connection,close,connection,send,request,request,id,action,request,options
MockTransportService -> public void addFailToSendNoConnectRule(TransportAddress transportAddress, final Set<String> blockedActions);1551176390;Adds a rule that will cause matching operations to throw ConnectTransportExceptions;public void addFailToSendNoConnectRule(TransportAddress transportAddress, final Set<String> blockedActions) {_        transport().addSendBehavior(transportAddress, (connection, requestId, action, request, options) -> {_            if (blockedActions.contains(action)) {_                logger.info("--> preventing {} request", action)__                connection.close()__            }_            connection.sendRequest(requestId, action, request, options)__        })__    };adds,a,rule,that,will,cause,matching,operations,to,throw,connect,transport,exceptions;public,void,add,fail,to,send,no,connect,rule,transport,address,transport,address,final,set,string,blocked,actions,transport,add,send,behavior,transport,address,connection,request,id,action,request,options,if,blocked,actions,contains,action,logger,info,preventing,request,action,connection,close,connection,send,request,request,id,action,request,options
MockTransportService -> public boolean addDelegate(TransportAddress transportAddress, DelegateTransport transport);1524684173;Adds a new delegate transport that is used for communication with the given transport address.__@return <tt>true</tt> iff no other delegate was registered for this address before.;public boolean addDelegate(TransportAddress transportAddress, DelegateTransport transport) {_        return transport().transports.put(transportAddress, transport) == null__    };adds,a,new,delegate,transport,that,is,used,for,communication,with,the,given,transport,address,return,tt,true,tt,iff,no,other,delegate,was,registered,for,this,address,before;public,boolean,add,delegate,transport,address,transport,address,delegate,transport,transport,return,transport,transports,put,transport,address,transport,null
MockTransportService -> public boolean addDelegate(TransportAddress transportAddress, DelegateTransport transport);1525162917;Adds a new delegate transport that is used for communication with the given transport address.__@return {@code true} iff no other delegate was registered for this address before.;public boolean addDelegate(TransportAddress transportAddress, DelegateTransport transport) {_        return transport().transports.put(transportAddress, transport) == null__    };adds,a,new,delegate,transport,that,is,used,for,communication,with,the,given,transport,address,return,code,true,iff,no,other,delegate,was,registered,for,this,address,before;public,boolean,add,delegate,transport,address,transport,address,delegate,transport,transport,return,transport,transports,put,transport,address,transport,null
MockTransportService -> public boolean addDelegate(TransportAddress transportAddress, DelegateTransport transport);1531179852;Adds a new delegate transport that is used for communication with the given transport address.__@return {@code true} iff no other delegate was registered for this address before.;public boolean addDelegate(TransportAddress transportAddress, DelegateTransport transport) {_        return transport().transports.put(transportAddress, transport) == null__    };adds,a,new,delegate,transport,that,is,used,for,communication,with,the,given,transport,address,return,code,true,iff,no,other,delegate,was,registered,for,this,address,before;public,boolean,add,delegate,transport,address,transport,address,delegate,transport,transport,return,transport,transports,put,transport,address,transport,null
