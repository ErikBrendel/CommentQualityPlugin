# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractXContentTestCase -> protected abstract T doParseInstance(XContentParser parser) throws IOException_;1524684173;Parses to a new instance using the provided {@link XContentParser};protected abstract T doParseInstance(XContentParser parser) throws IOException_;parses,to,a,new,instance,using,the,provided,link,xcontent,parser;protected,abstract,t,do,parse,instance,xcontent,parser,parser,throws,ioexception
AbstractXContentTestCase -> protected abstract T doParseInstance(XContentParser parser) throws IOException_;1528804324;Parses to a new instance using the provided {@link XContentParser};protected abstract T doParseInstance(XContentParser parser) throws IOException_;parses,to,a,new,instance,using,the,provided,link,xcontent,parser;protected,abstract,t,do,parse,instance,xcontent,parser,parser,throws,ioexception
AbstractXContentTestCase -> protected abstract T doParseInstance(XContentParser parser) throws IOException_;1531729807;Parses to a new instance using the provided {@link XContentParser};protected abstract T doParseInstance(XContentParser parser) throws IOException_;parses,to,a,new,instance,using,the,provided,link,xcontent,parser;protected,abstract,t,do,parse,instance,xcontent,parser,parser,throws,ioexception
AbstractXContentTestCase -> protected abstract T doParseInstance(XContentParser parser) throws IOException_;1538509426;Parses to a new instance using the provided {@link XContentParser};protected abstract T doParseInstance(XContentParser parser) throws IOException_;parses,to,a,new,instance,using,the,provided,link,xcontent,parser;protected,abstract,t,do,parse,instance,xcontent,parser,parser,throws,ioexception
AbstractXContentTestCase -> protected abstract T doParseInstance(XContentParser parser) throws IOException_;1544470880;Parses to a new instance using the provided {@link XContentParser};protected abstract T doParseInstance(XContentParser parser) throws IOException_;parses,to,a,new,instance,using,the,provided,link,xcontent,parser;protected,abstract,t,do,parse,instance,xcontent,parser,parser,throws,ioexception
AbstractXContentTestCase -> protected abstract T doParseInstance(XContentParser parser) throws IOException_;1548364667;Parses to a new instance using the provided {@link XContentParser};protected abstract T doParseInstance(XContentParser parser) throws IOException_;parses,to,a,new,instance,using,the,provided,link,xcontent,parser;protected,abstract,t,do,parse,instance,xcontent,parser,parser,throws,ioexception
AbstractXContentTestCase -> protected abstract boolean supportsUnknownFields()_;1524684173;Indicates whether the parser supports unknown fields or not. In case it does, such behaviour will be tested by_inserting random fields before parsing and checking that they don't make parsing fail.;protected abstract boolean supportsUnknownFields()_;indicates,whether,the,parser,supports,unknown,fields,or,not,in,case,it,does,such,behaviour,will,be,tested,by,inserting,random,fields,before,parsing,and,checking,that,they,don,t,make,parsing,fail;protected,abstract,boolean,supports,unknown,fields
AbstractXContentTestCase -> protected abstract boolean supportsUnknownFields()_;1528804324;Indicates whether the parser supports unknown fields or not. In case it does, such behaviour will be tested by_inserting random fields before parsing and checking that they don't make parsing fail.;protected abstract boolean supportsUnknownFields()_;indicates,whether,the,parser,supports,unknown,fields,or,not,in,case,it,does,such,behaviour,will,be,tested,by,inserting,random,fields,before,parsing,and,checking,that,they,don,t,make,parsing,fail;protected,abstract,boolean,supports,unknown,fields
AbstractXContentTestCase -> protected abstract boolean supportsUnknownFields()_;1531729807;Indicates whether the parser supports unknown fields or not. In case it does, such behaviour will be tested by_inserting random fields before parsing and checking that they don't make parsing fail.;protected abstract boolean supportsUnknownFields()_;indicates,whether,the,parser,supports,unknown,fields,or,not,in,case,it,does,such,behaviour,will,be,tested,by,inserting,random,fields,before,parsing,and,checking,that,they,don,t,make,parsing,fail;protected,abstract,boolean,supports,unknown,fields
AbstractXContentTestCase -> protected abstract boolean supportsUnknownFields()_;1538509426;Indicates whether the parser supports unknown fields or not. In case it does, such behaviour will be tested by_inserting random fields before parsing and checking that they don't make parsing fail.;protected abstract boolean supportsUnknownFields()_;indicates,whether,the,parser,supports,unknown,fields,or,not,in,case,it,does,such,behaviour,will,be,tested,by,inserting,random,fields,before,parsing,and,checking,that,they,don,t,make,parsing,fail;protected,abstract,boolean,supports,unknown,fields
AbstractXContentTestCase -> protected abstract boolean supportsUnknownFields()_;1544470880;Indicates whether the parser supports unknown fields or not. In case it does, such behaviour will be tested by_inserting random fields before parsing and checking that they don't make parsing fail.;protected abstract boolean supportsUnknownFields()_;indicates,whether,the,parser,supports,unknown,fields,or,not,in,case,it,does,such,behaviour,will,be,tested,by,inserting,random,fields,before,parsing,and,checking,that,they,don,t,make,parsing,fail;protected,abstract,boolean,supports,unknown,fields
AbstractXContentTestCase -> protected abstract boolean supportsUnknownFields()_;1548364667;Indicates whether the parser supports unknown fields or not. In case it does, such behaviour will be tested by_inserting random fields before parsing and checking that they don't make parsing fail.;protected abstract boolean supportsUnknownFields()_;indicates,whether,the,parser,supports,unknown,fields,or,not,in,case,it,does,such,behaviour,will,be,tested,by,inserting,random,fields,before,parsing,and,checking,that,they,don,t,make,parsing,fail;protected,abstract,boolean,supports,unknown,fields
AbstractXContentTestCase -> protected abstract T createTestInstance()_;1524684173;Creates a random test instance to use in the tests. This method will be_called multiple times during test execution and should return a different_random instance each time it is called.;protected abstract T createTestInstance()_;creates,a,random,test,instance,to,use,in,the,tests,this,method,will,be,called,multiple,times,during,test,execution,and,should,return,a,different,random,instance,each,time,it,is,called;protected,abstract,t,create,test,instance
AbstractXContentTestCase -> protected abstract T createTestInstance()_;1528804324;Creates a random test instance to use in the tests. This method will be_called multiple times during test execution and should return a different_random instance each time it is called.;protected abstract T createTestInstance()_;creates,a,random,test,instance,to,use,in,the,tests,this,method,will,be,called,multiple,times,during,test,execution,and,should,return,a,different,random,instance,each,time,it,is,called;protected,abstract,t,create,test,instance
AbstractXContentTestCase -> protected abstract T createTestInstance()_;1531729807;Creates a random test instance to use in the tests. This method will be_called multiple times during test execution and should return a different_random instance each time it is called.;protected abstract T createTestInstance()_;creates,a,random,test,instance,to,use,in,the,tests,this,method,will,be,called,multiple,times,during,test,execution,and,should,return,a,different,random,instance,each,time,it,is,called;protected,abstract,t,create,test,instance
AbstractXContentTestCase -> protected abstract T createTestInstance()_;1538509426;Creates a random test instance to use in the tests. This method will be_called multiple times during test execution and should return a different_random instance each time it is called.;protected abstract T createTestInstance()_;creates,a,random,test,instance,to,use,in,the,tests,this,method,will,be,called,multiple,times,during,test,execution,and,should,return,a,different,random,instance,each,time,it,is,called;protected,abstract,t,create,test,instance
AbstractXContentTestCase -> protected abstract T createTestInstance()_;1544470880;Creates a random test instance to use in the tests. This method will be_called multiple times during test execution and should return a different_random instance each time it is called.;protected abstract T createTestInstance()_;creates,a,random,test,instance,to,use,in,the,tests,this,method,will,be,called,multiple,times,during,test,execution,and,should,return,a,different,random,instance,each,time,it,is,called;protected,abstract,t,create,test,instance
AbstractXContentTestCase -> protected abstract T createTestInstance()_;1548364667;Creates a random test instance to use in the tests. This method will be_called multiple times during test execution and should return a different_random instance each time it is called.;protected abstract T createTestInstance()_;creates,a,random,test,instance,to,use,in,the,tests,this,method,will,be,called,multiple,times,during,test,execution,and,should,return,a,different,random,instance,each,time,it,is,called;protected,abstract,t,create,test,instance
AbstractXContentTestCase -> protected ToXContent.Params getToXContentParams();1528804324;Params that have to be provided when calling calling {@link ToXContent#toXContent(XContentBuilder, ToXContent.Params)};protected ToXContent.Params getToXContentParams() {_        return ToXContent.EMPTY_PARAMS__    };params,that,have,to,be,provided,when,calling,calling,link,to,xcontent,to,xcontent,xcontent,builder,to,xcontent,params;protected,to,xcontent,params,get,to,xcontent,params,return,to,xcontent
AbstractXContentTestCase -> protected ToXContent.Params getToXContentParams();1531729807;Params that have to be provided when calling {@link ToXContent#toXContent(XContentBuilder, ToXContent.Params)};protected ToXContent.Params getToXContentParams() {_        return ToXContent.EMPTY_PARAMS__    };params,that,have,to,be,provided,when,calling,link,to,xcontent,to,xcontent,xcontent,builder,to,xcontent,params;protected,to,xcontent,params,get,to,xcontent,params,return,to,xcontent
AbstractXContentTestCase -> protected ToXContent.Params getToXContentParams();1538509426;Params that have to be provided when calling {@link ToXContent#toXContent(XContentBuilder, ToXContent.Params)};protected ToXContent.Params getToXContentParams() {_        return ToXContent.EMPTY_PARAMS__    };params,that,have,to,be,provided,when,calling,link,to,xcontent,to,xcontent,xcontent,builder,to,xcontent,params;protected,to,xcontent,params,get,to,xcontent,params,return,to,xcontent
AbstractXContentTestCase -> protected ToXContent.Params getToXContentParams();1544470880;Params that have to be provided when calling {@link ToXContent#toXContent(XContentBuilder, ToXContent.Params)};protected ToXContent.Params getToXContentParams() {_        return ToXContent.EMPTY_PARAMS__    };params,that,have,to,be,provided,when,calling,link,to,xcontent,to,xcontent,xcontent,builder,to,xcontent,params;protected,to,xcontent,params,get,to,xcontent,params,return,to,xcontent
AbstractXContentTestCase -> protected ToXContent.Params getToXContentParams();1548364667;Params that have to be provided when calling {@link ToXContent#toXContent(XContentBuilder, ToXContent.Params)};protected ToXContent.Params getToXContentParams() {_        return ToXContent.EMPTY_PARAMS__    };params,that,have,to,be,provided,when,calling,link,to,xcontent,to,xcontent,xcontent,builder,to,xcontent,params;protected,to,xcontent,params,get,to,xcontent,params,return,to,xcontent
AbstractXContentTestCase -> protected String[] getShuffleFieldsExceptions();1524684173;Fields that have to be ignored when shuffling as part of testFromXContent;protected String[] getShuffleFieldsExceptions() {_        return Strings.EMPTY_ARRAY__    };fields,that,have,to,be,ignored,when,shuffling,as,part,of,test,from,xcontent;protected,string,get,shuffle,fields,exceptions,return,strings
AbstractXContentTestCase -> protected String[] getShuffleFieldsExceptions();1528804324;Fields that have to be ignored when shuffling as part of testFromXContent;protected String[] getShuffleFieldsExceptions() {_        return Strings.EMPTY_ARRAY__    };fields,that,have,to,be,ignored,when,shuffling,as,part,of,test,from,xcontent;protected,string,get,shuffle,fields,exceptions,return,strings
AbstractXContentTestCase -> protected String[] getShuffleFieldsExceptions();1531729807;Fields that have to be ignored when shuffling as part of testFromXContent;protected String[] getShuffleFieldsExceptions() {_        return Strings.EMPTY_ARRAY__    };fields,that,have,to,be,ignored,when,shuffling,as,part,of,test,from,xcontent;protected,string,get,shuffle,fields,exceptions,return,strings
AbstractXContentTestCase -> protected String[] getShuffleFieldsExceptions();1538509426;Fields that have to be ignored when shuffling as part of testFromXContent;protected String[] getShuffleFieldsExceptions() {_        return Strings.EMPTY_ARRAY__    };fields,that,have,to,be,ignored,when,shuffling,as,part,of,test,from,xcontent;protected,string,get,shuffle,fields,exceptions,return,strings
AbstractXContentTestCase -> protected String[] getShuffleFieldsExceptions();1544470880;Fields that have to be ignored when shuffling as part of testFromXContent;protected String[] getShuffleFieldsExceptions() {_        return Strings.EMPTY_ARRAY__    };fields,that,have,to,be,ignored,when,shuffling,as,part,of,test,from,xcontent;protected,string,get,shuffle,fields,exceptions,return,strings
AbstractXContentTestCase -> protected String[] getShuffleFieldsExceptions();1548364667;Fields that have to be ignored when shuffling as part of testFromXContent;protected String[] getShuffleFieldsExceptions() {_        return Strings.EMPTY_ARRAY__    };fields,that,have,to,be,ignored,when,shuffling,as,part,of,test,from,xcontent;protected,string,get,shuffle,fields,exceptions,return,strings
AbstractXContentTestCase -> public final void testFromXContent() throws IOException;1524684173;Generic test that creates new instance from the test instance and checks_both for equality and asserts equality on the two queries.;public final void testFromXContent() throws IOException {_        testFromXContent(NUMBER_OF_TEST_RUNS, this::createTestInstance, supportsUnknownFields(), getShuffleFieldsExceptions(),_                getRandomFieldsExcludeFilter(), this::createParser, this::parseInstance, this::assertEqualInstances,_                assertToXContentEquivalence())__    };generic,test,that,creates,new,instance,from,the,test,instance,and,checks,both,for,equality,and,asserts,equality,on,the,two,queries;public,final,void,test,from,xcontent,throws,ioexception,test,from,xcontent,this,create,test,instance,supports,unknown,fields,get,shuffle,fields,exceptions,get,random,fields,exclude,filter,this,create,parser,this,parse,instance,this,assert,equal,instances,assert,to,xcontent,equivalence
AbstractXContentTestCase -> public final void testFromXContent() throws IOException;1528804324;Generic test that creates new instance from the test instance and checks_both for equality and asserts equality on the two queries.;public final void testFromXContent() throws IOException {_        testFromXContent(NUMBER_OF_TEST_RUNS, this::createTestInstance, supportsUnknownFields(), getShuffleFieldsExceptions(),_                getRandomFieldsExcludeFilter(), this::createParser, this::parseInstance, this::assertEqualInstances,_                assertToXContentEquivalence(), getToXContentParams())__    };generic,test,that,creates,new,instance,from,the,test,instance,and,checks,both,for,equality,and,asserts,equality,on,the,two,queries;public,final,void,test,from,xcontent,throws,ioexception,test,from,xcontent,this,create,test,instance,supports,unknown,fields,get,shuffle,fields,exceptions,get,random,fields,exclude,filter,this,create,parser,this,parse,instance,this,assert,equal,instances,assert,to,xcontent,equivalence,get,to,xcontent,params
AbstractXContentTestCase -> public final void testFromXContent() throws IOException;1531729807;Generic test that creates new instance from the test instance and checks_both for equality and asserts equality on the two queries.;public final void testFromXContent() throws IOException {_        testFromXContent(NUMBER_OF_TEST_RUNS, this::createTestInstance, supportsUnknownFields(), getShuffleFieldsExceptions(),_                getRandomFieldsExcludeFilter(), this::createParser, this::parseInstance, this::assertEqualInstances,_                assertToXContentEquivalence(), getToXContentParams())__    };generic,test,that,creates,new,instance,from,the,test,instance,and,checks,both,for,equality,and,asserts,equality,on,the,two,queries;public,final,void,test,from,xcontent,throws,ioexception,test,from,xcontent,this,create,test,instance,supports,unknown,fields,get,shuffle,fields,exceptions,get,random,fields,exclude,filter,this,create,parser,this,parse,instance,this,assert,equal,instances,assert,to,xcontent,equivalence,get,to,xcontent,params
AbstractXContentTestCase -> public final void testFromXContent() throws IOException;1538509426;Generic test that creates new instance from the test instance and checks_both for equality and asserts equality on the two queries.;public final void testFromXContent() throws IOException {_        testFromXContent(NUMBER_OF_TEST_RUNS, this::createTestInstance, supportsUnknownFields(), getShuffleFieldsExceptions(),_                getRandomFieldsExcludeFilter(), this::createParser, this::parseInstance, this::assertEqualInstances,_                assertToXContentEquivalence(), getToXContentParams())__    };generic,test,that,creates,new,instance,from,the,test,instance,and,checks,both,for,equality,and,asserts,equality,on,the,two,queries;public,final,void,test,from,xcontent,throws,ioexception,test,from,xcontent,this,create,test,instance,supports,unknown,fields,get,shuffle,fields,exceptions,get,random,fields,exclude,filter,this,create,parser,this,parse,instance,this,assert,equal,instances,assert,to,xcontent,equivalence,get,to,xcontent,params
AbstractXContentTestCase -> public final void testFromXContent() throws IOException;1544470880;Generic test that creates new instance from the test instance and checks_both for equality and asserts equality on the two queries.;public final void testFromXContent() throws IOException {_        testFromXContent(NUMBER_OF_TEST_RUNS, this::createTestInstance, supportsUnknownFields(), getShuffleFieldsExceptions(),_                getRandomFieldsExcludeFilter(), this::createParser, this::parseInstance, this::assertEqualInstances,_                assertToXContentEquivalence(), getToXContentParams())__    };generic,test,that,creates,new,instance,from,the,test,instance,and,checks,both,for,equality,and,asserts,equality,on,the,two,queries;public,final,void,test,from,xcontent,throws,ioexception,test,from,xcontent,this,create,test,instance,supports,unknown,fields,get,shuffle,fields,exceptions,get,random,fields,exclude,filter,this,create,parser,this,parse,instance,this,assert,equal,instances,assert,to,xcontent,equivalence,get,to,xcontent,params
AbstractXContentTestCase -> public final void testFromXContent() throws IOException;1548364667;Generic test that creates new instance from the test instance and checks_both for equality and asserts equality on the two queries.;public final void testFromXContent() throws IOException {_        testFromXContent(NUMBER_OF_TEST_RUNS, this::createTestInstance, supportsUnknownFields(), getShuffleFieldsExceptions(),_                getRandomFieldsExcludeFilter(), this::createParser, this::parseInstance, this::assertEqualInstances,_                assertToXContentEquivalence(), getToXContentParams())__    };generic,test,that,creates,new,instance,from,the,test,instance,and,checks,both,for,equality,and,asserts,equality,on,the,two,queries;public,final,void,test,from,xcontent,throws,ioexception,test,from,xcontent,this,create,test,instance,supports,unknown,fields,get,shuffle,fields,exceptions,get,random,fields,exclude,filter,this,create,parser,this,parse,instance,this,assert,equal,instances,assert,to,xcontent,equivalence,get,to,xcontent,params
AbstractXContentTestCase -> protected Predicate<String> getRandomFieldsExcludeFilter();1524684173;Returns a predicate that given the field name indicates whether the field has to be excluded from random fields insertion or not;protected Predicate<String> getRandomFieldsExcludeFilter() {_        return field -> false__    };returns,a,predicate,that,given,the,field,name,indicates,whether,the,field,has,to,be,excluded,from,random,fields,insertion,or,not;protected,predicate,string,get,random,fields,exclude,filter,return,field,false
AbstractXContentTestCase -> protected Predicate<String> getRandomFieldsExcludeFilter();1528804324;Returns a predicate that given the field name indicates whether the field has to be excluded from random fields insertion or not;protected Predicate<String> getRandomFieldsExcludeFilter() {_        return field -> false__    };returns,a,predicate,that,given,the,field,name,indicates,whether,the,field,has,to,be,excluded,from,random,fields,insertion,or,not;protected,predicate,string,get,random,fields,exclude,filter,return,field,false
AbstractXContentTestCase -> protected Predicate<String> getRandomFieldsExcludeFilter();1531729807;Returns a predicate that given the field name indicates whether the field has to be excluded from random fields insertion or not;protected Predicate<String> getRandomFieldsExcludeFilter() {_        return field -> false__    };returns,a,predicate,that,given,the,field,name,indicates,whether,the,field,has,to,be,excluded,from,random,fields,insertion,or,not;protected,predicate,string,get,random,fields,exclude,filter,return,field,false
AbstractXContentTestCase -> protected Predicate<String> getRandomFieldsExcludeFilter();1538509426;Returns a predicate that given the field name indicates whether the field has to be excluded from random fields insertion or not;protected Predicate<String> getRandomFieldsExcludeFilter() {_        return field -> false__    };returns,a,predicate,that,given,the,field,name,indicates,whether,the,field,has,to,be,excluded,from,random,fields,insertion,or,not;protected,predicate,string,get,random,fields,exclude,filter,return,field,false
AbstractXContentTestCase -> protected Predicate<String> getRandomFieldsExcludeFilter();1544470880;Returns a predicate that given the field name indicates whether the field has to be excluded from random fields insertion or not;protected Predicate<String> getRandomFieldsExcludeFilter() {_        return field -> false__    };returns,a,predicate,that,given,the,field,name,indicates,whether,the,field,has,to,be,excluded,from,random,fields,insertion,or,not;protected,predicate,string,get,random,fields,exclude,filter,return,field,false
AbstractXContentTestCase -> protected Predicate<String> getRandomFieldsExcludeFilter();1548364667;Returns a predicate that given the field name indicates whether the field has to be excluded from random fields insertion or not;protected Predicate<String> getRandomFieldsExcludeFilter() {_        return field -> false__    };returns,a,predicate,that,given,the,field,name,indicates,whether,the,field,has,to,be,excluded,from,random,fields,insertion,or,not;protected,predicate,string,get,random,fields,exclude,filter,return,field,false
